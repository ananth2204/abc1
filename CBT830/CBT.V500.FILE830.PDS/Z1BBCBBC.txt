Accessing the directory of a PDS/PDSE back-up

Sample execution JCL

//BKUPDEF  JOB 0,'name',CLASS=A,MSGCLASS=X
//*
//*  JOB TO DEFINE BACKUP DIRECTORY DATASET
//*
//DEF     EXEC PGM=IDCAMS,REGION=2048K
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 DELETE    backup.direct CLUSTER PURGE
 SET       LASTCC = 0
 DEFINE    CLUSTER      (                                            -
             NAME (backup.direct)                                    -
             VOL  (volume)                                           -
             REC  (5000 5000)                                        -
             RECSZ(893 893)                                          -
             FSPC(20 20)                                             -
             KEYS (54 0)                                             -
             CISZ (8192)                                             -
             INDEXED                                                 -
                    )
/*
//BKUPDIRC JOB 0,'name',CLASS=A
//*
//*  JOB TO UPDATE BACKUP DIRECTORY
//*
//BKUPDIR EXEC PGM=BKUPDIR,REGION=8192K
//STEPLIB  DD DSN=load.library,DISP=SHR
//BKUPBCDS DD DSN=dfhsm.bcds,DISP=SHR
//BKUPDIR  DD DSN=pds.bkupdir,DISP=SHR
//OUTFILE  DD SYSOUT=*,RECFM=FB,LRECL=50,BLKSIZE=50

Program source

*  PROGRAM TO UPDATE THE BACKUP DIRECTORY DATASET WITH THE
*  CURRENT DIRECTORY OF ALL BACKED UP PDSS/PDSES.
BKUPDIR  CSECT
         STM   R14,R12,R12(13)                   SAVE REGISTERS
         LR    R12,R15                           FIRST BASE REG
         LA    R9,4095(,R12)
         LA    R9,1(,R9)                         SECOND BASE REGISTER
         USING BKUPDIR,R12,R9                    ADDRESSABILITY
         LA    R15,BKPSAVE1                      REG SAVE AREA ADDR
         ST    R13,4(R15)                        FORWARD POINTER
         ST    R15,8(R13)                        REVERSE POINTER
         LR    R13,R15                           NEW SAVE AREA ADDR
         L     R2,0(,R1)                         ADDRESS OF PARM
         CLC   0(2,R2),=H'8'                     LENGTH OF PARAMETER
         BE    PARM1                             PARAMETER PASSED
         TIME  DEC,DAYTIME,LINKAGE=SYSTEM,DATETYPE=YYYYMMDD
         L     R2,DAYTIME+8                      GET DATE PORTION
         SLL   R2,8                              REMOVE HIGH TWO DIGITS
         SRL   R2,4
         ST    R2,DAYTIME+8
         OI    DAYTIME+11,X'0C'                  CONVERT TO PACKED DEC
         UNPK  CDATE(6),DAYTIME+8(4)             CONVERT TO DISPLAY
         OI    CDATE+5,X'F0'                     SET SIGN FIELD
         MVC   CURDATE(2),CDATE                  YY PORTION
         MVC   CURDATE+3(2),CDATE+2              MM PORTION
         MVC   CURDATE+6(2),CDATE+4              DD PORTION
         B     *+10                              SKIP NEXT LINE
PARM1    MVC   CURDATE,2(R2)                     MOVE THE PARAMETER
         LA    R1,PREVTAB
         ST    R1,PREVTABA                       PREVIOUS VERSION TABLE
         A     R1,=F'500000'                     LENGTH OF TABLE
         ST    R1,BKTABADR                       BACKUP TABLE
         A     R1,=F'206000'                     LENGTH OF TABLE
         ST    R1,MBRTBADR                       MEMBER TABLE ADDRESS
         A     R1,=F'80000'                      LENGTH OF TABLE
         ST    R1,PDTABADR                       PDS TABLE ADDRESS
         OPEN  (OUTFILE,(OUTPUT))
         LTR   R15,R15                           CHECK RET CODE
         BNZ   OPENERR1                          SUCCESSFUL OPEN
         OPEN  BKUPACB                           OPEN BACKUP DATASET
         LTR   R15,R15                           CHECK RETURN CODE
         BNZ   OPENERR2                          ERROR RETURN
         LA    15,PDSLIST                        GET LIST OF PDS
         BALR  14,15
         L     R11,BKTABADR                      ADDRESS OF TABLE
         USING BKUPDCT,R11                       ADDRESSABILITY
NEXTPDS  CLC   0(BKUPRECL,R11),@SPACES           TABLE CONTAINS SPACES
         BE    CLOSE1                            THEN OVER
         PUT   OUTFILE,BKUPREC                   WRITE DATASET NAME
         MVC   $$DSN1+6(44),BKUPDSN              DSNAME FOR DYNALLOC
         CLI   BKUPSMS,C'Y'                      IS IT CATALOGUED
         BE    ALOC2                             THEN ALLOCATE
         MVC   $$VOL1+6(6),BKUPVOL               VOLID FOR DYNALLOC
         LA    R1,$PDSALC2                       DYNAMIC ALLOC
         DYNALLOC ,                              ALLOCATE PDS
         LTR   R15,R15                           RETURN CODE
         L     R3,$PDSALC2
         BNZ   ALOCERR                           ERROR IN DYNALLOC
         B     PROCPDS                           PROCESS ALLOCATED PDS
ALOC2    LA    R1,$PDSALC1                       DYNAMIC ALLOCATION
         DYNALLOC ,                              ALLOCATE PDS
         LTR   R15,R15                           CHECK RETURN CODE
         L     R3,$PDSALC1
         BNZ   ALOCERR                           ERROR IN DYNALLOC
PROCPDS  LA    R15,PDSDIR                        READ PDS DIRECTORY
         BALR  R14,R15                           READ PDS DIRECTORY
         LTR   R15,R15                           ERROR IN DIR READ
         BNZ   SKIPPDS                           THEN SKIP IT
         LR    R1,R11                            ADDR OF CURRENT ENTRY
         LA    R15,BKPUPDT
         BALR  R14,R15                           UPDATE THE BACKUP INFO
SKIPPDS  LA    R1,$PDSUNAL
         DYNALLOC ,                              DE ALLOCATE PDS
         LA    R11,BKUPRECL(,R11)                POINT TO NEXT
         B     NEXTPDS                           AND PROCESS NEXT
CLOSE1   CLOSE OUTFILE
         CLOSE BKUPACB                           CLOSE BACKUP DIR
         B     PROGEND                           END OF PROGRAM
* DYNAMIC ALLOCATION ERROR ROUTINE
ALOCERR  CVD   R15,DWORD                         RETURN CODE
         UNPK  RETCODE(2),DWORD+6(2)             DISPLAY FORMAT
         OI    RETCODE+1,X'F0'                   PROPER SIGN
         USING S99RB,3                           ADDRESSABILITY
         UNPK  ERRCODE,S99ERROR(3)               ERROR CODE
         TR    ERRCODE,HEXTOCHR                  CONVERT TO HEX
         MVI   ERRCODE+4,C' '
         UNPK  INFCODE,S99INFO(3)                INFO CODE
         TR    INFCODE,HEXTOCHR                  CONVERT TO HEX
         MVI   INFCODE+4,C' '
         PUT   OUTFILE,ALOCMSG                   WRITE MESSAGE
         LA    R11,BKUPRECL(,R11)                POINT NEXT DATASET
         B     NEXTPDS                           AND PROCESS
         DROP  R11
OPENERR1 WTO   ' BKUPDIR .. ERROR IN OPENING DATASETS',DESC=(6),       X
               ROUTCDE=(2,11)
         B     PROGEND
OPENERR2 WTO   ' BKUPDIR .. OPEN ERROR FOR BACKUP DIRECTORY',DESC=(6), X
               ROUTCDE=(2,11)
PROGEND  L     R13,4(R13)                        LD SAVE AREA ADDRESS
         RETURN (14,12),RC=0                     RETURN
*  SUBROUTINE TO LIST ALL PDS/PDSE BACKUP VERSIONS
PDSLIST  STM   R14,R12,R12(13)                   SAVE REGISTERS
         ST    R13,BKPSAVE2+4                    FORWARD POINTER
         LA    R13,BKPSAVE2                      NEW SAVE AREA ADDR
         OPEN  BCDSACB                           OPEN BACKUP DATASET
         LTR   R15,R15                           CHECK RETURN CODE
         BNZ   OPENERR4                          ERROR RETURN
         L     R4,PDTABADR                       PDS TABLE ADDRESS
         USING PDSDSCT,R4                        ADDRESSABILITY
         XR    R5,R5                             COUNT
         MVC   BCDSKEY(12),=CL12'DFHSM.BACK.T'   STARTING KEY
         POINT RPL=BCDSRPL                       POSITION AT KEY
NEXTBCDS GET   RPL=BCDSRPL                       READ ONE RECORD
         LTR   R15,R15                           ERROR
         BNZ   PDSEND                            THEN EXIT
         CLC   BCDSKEY(12),=CL12'DFHSM.BACK.T'   ALL RECORDS READ?
         BNE   OVER                              THEN FINISH
         CLC   BCDSORG,=X'0200'                  IS IT PDS?
         BNE   NEXTBCDS                          IF NOT SKIP
         MVC   PDSDSN,BCDSDSN                    SAVE DSNAME
         MVC   PDSDVOL,BCDSDVOL                  SAVE VOLID
         XR    R2,R2                             CLEAR R2
         IC    R2,BCDSDATE+1                     GET YY OF DATE
         SLL   R2,4                              SIGN FIELD NULL
         STH   R2,BCD2YEAR
         OI    BCD2YEAR+1,X'0C'                  YEAR AS PACKED DEC
         MVC   BCD2DAY,BCDSDATE+2
         NI    BCD2DAY+1,X'FC'                   DAY IN PACKED DECIMAL
         XC    DWORD(8),DWORD                    CLEAR THIS FIELD
         MVC   DWORD+6(2),BCD2YEAR               PACKED DECIMAL YEAR
         CVB   R2,DWORD                          YEAR IN BINARY
         XR    R3,R3                             CLEAR R3
         SRDL  R2,2                              LAST 2 BITS OF YR
         LTR   R3,R3                             DIVISIBLE BY 4
         BZ    LEAP1                             YES .. LEAP YEAR
         LA    R3,NLEAPTAB                       NON LEAP YEAR
         B     *+8                               BYPASS NEXT INSTR
LEAP1    LA    R3,LEAPTAB                        LEAP YEAR
         XR    R2,R2                             INIT MONTH
NXTMNTH  CP    BCD2DAY,0(2,R3)                   COMPARE WITH TABLE
         BNH   LASTMNTH                          YES .. THIS MONTH
         LA    R3,2(,R3)                         CHECK NEXT MONTH
         LA    R2,1(,R2)                         INCR MONTH
         B     NXTMNTH                           PROCESS NEXT MONTH
LASTMNTH S     R3,=F'2'                          PREVIOUS MONTH
         SP    BCD2DAY,0(2,R3)                   DAYS IN LAST MONTH
         CVD   R2,DWORD                          MONTH IN DEC
         UNPK  BCD2MM(2),DWORD+6(2)
         OI    BCD2MM+1,X'F0'                    MONTH IN DISPLAY
         UNPK  BCD2DD(2),BCD2DAY(2)
         OI    BCD2DD+1,X'F0'                    DATE IN DISPLAY
         UNPK  BCD2YY(2),BCD2YEAR
         OI    BCD2YY+1,X'F0'                    YEAR IN DISPLAY
         MVC   PDSDATE,BCD2YMD                   MOVE TO TABLE
         XR    R2,R2
         LH    R2,BCDSVER                        VERSION NUMBER
         CVD   R2,DWORD                          PACKED DECIMAL
         UNPK  PDSVER(3),DWORD                   DISPLAY
         OI    PDSVER+2,X'F0'                    VERSION IN DISPLAY
         MVI   PDSSMS,C'N'                       NON SMS
         CLC   BCDSSCL,=X'0000'                  NO STORAGE CLASS
         BE    NONSMS
         MVI   PDSSMS,C'Y'                       SMS MANAGED
NONSMS   LA    R4,PDSRECL(,R4)                   POINT TO NEXT
         LA    R5,1(,R5)                         COUNTER
         B     NEXTBCDS                          READ NEXT
OVER     MVC   PDSREC,@SPACES                    INIT LAST ENTRY
         DROP  R4
         CLOSE BCDSACB                           CLOSE DATASET
* SORT TABLE ALPHABETICALLY
         L     R2,PDTABADR                       ADDRESS OF TABLE
         LR    R6,R5                             COUNT
         LTR   R6,R6                             COUNT = 0?
         BZ    PDSEND                            NO ENTRY
         BCTR  R6,0                              REDUCE BY 1
         LTR   R6,R6                             ONLY 1 ENTRY
         BZ    MERGE                             NO SORTING
OUTLOOP  LA    R3,PDSRECL(,R2)                   POINT TO NEXT
         LR    R7,R6                             LOOP COUNTER
INLOOP   CLC   0(PDSRECL,R2),0(R3)               COMPARE ENTRIES
         BH    NOSWAP                            HIGH .. NO SWAP
         MVC   BKUPTEMP(PDSRECL),0(R2)
         MVC   0(PDSRECL,R2),0(R3)
         MVC   0(PDSRECL,R3),BKUPTEMP            SWAP ENTRIES
NOSWAP   LA    R3,PDSRECL(,R3)                   POINT TO NEXT
         BCT   R7,INLOOP                         REPEAT
         LA    R2,PDSRECL(,R2)                   POINT TO NEXT
         BCT   R6,OUTLOOP                        REPEAT OUTER LOOP
* MERGE ALL THE VERSIONS OF SAME DATASET TO BKUPREC
MERGE    L     R2,PDTABADR                       TABLE ADDRESS
         L     R3,BKTABADR                       RESULT TAB ADDR
         USING BKUPDCT,R3                        ADDRESSABILITY
         MVC   BKUPREC,@SPACES                   INITIALIZE RECORD
CHKNEXT  CLC   0(PDSRECL,R2),@SPACES             END OF TABLE
         BE    INVERT                            THEN PRINT IT
         CLC   0(50,R2),BKUPREC                  DATASET MATCH
         BE    ADD1                              THEN ADD INFO
         CLC   50(8,R2),CURDATE                  TODAY'S DATE
         BE    SAVEIT                            SAVE ENTRY
         LA    R2,PDSRECL(,R2)                   POINT TO NEXT
         B     CHKNEXT                           PROCESS NEXT
SAVEIT   CLC   BKUPREC,@SPACES                   NEW DATASET
         BE    SAVE2                             THEN SAVE IT
         LA    R3,BKUPRECL(,R3)                  POINT TO NEXT
         MVC   BKUPREC,@SPACES                   INITIALIZE
SAVE2    MVC   BKUPREC(PDSRECL),0(R2)            SAVE VER INFO
         LA    R5,BKUPREC+PDSRECL                POINT TO NEXT VERSION
         LA    R2,PDSRECL(,R2)                   POINT TO NEXT ENTRY
         B     CHKNEXT                           PROCESS NEXT
ADD1     MVC   0(12,R5),50(R2)                   ADD NEW VERSION
         LA    R5,12(,R5)                        POINT TO NEXT VERSION
         LA    R2,PDSRECL(,R2)                   POINT TO NEXT ENTRY
         B     CHKNEXT                           CHECK NEXT ENTRY
         DROP  R3                                RELEASE R3
* INVERT ALL BKUPREC TO HAVE IN ALPHABETICAL ORDER
INVERT   L     R2,BKTABADR                       FIRST ADDRESS
         LA    R4,BKUPRECL(,R3)                  ENTRY AFTER LAST
         MVC   0(BKUPRECL,R4),@SPACES            SPACES AFTER LAST
SWAP2    CR    R2,R3                             SWAPPING OVER
         BNL   PDSEND                            NO MORE MOVE
         MVC   BKUPTEMP(BKUPRECL),0(R2)          FIRST TO TEMP AREA
         MVC   0(BKUPRECL,R2),0(R3)              MOVE 2ND TO 1ST
         MVC   0(BKUPRECL,R3),BKUPTEMP           MOVE TEMP TO 2ND
         LA    R2,BKUPRECL(,R2)                  NEXT OF FIRST
         S     R3,=F'206'                        ONE BEFORE LAST
         B     SWAP2                             CONTINUE PROCESS
OPENERR4 WTO   ' BKUPDIR .. OPEN ERROR FOR DFHSM BCDS      ',DESC=(6), X
               ROUTCDE=(2,11)
         L     R3,BKTABADR                       ADDRESS OF TABLE
         MVC   0(BKUPRECL,R3),@SPACES            INITIALIZE ENTRY
PDSEND   L     R13,4(R13)                        SAVE AREA ADDRESS
         RETURN (14,12),RC=0                     RETURN
*   SUBROUTINE TO READ PDS DIRECTORY
PDSDIR   STM   R14,R12,12(R13)                   SAVE REGISTERS
         ST    R13,BKPSAVE4+4                    FORWARD POINTER
         LA    R13,BKPSAVE4                      NEW SAVE AREA ADDRESS
         OPEN  (PDS,(INPUT))                     OPEN PDS
         LTR   R15,R15                           CHECK RETURN CODE
         BNZ   OPENERR3                          ERROR IN OPEN
         L     R11,MBRTBADR                      SAVE THE ADDR AGAIN
         XR    R10,R10                           INIT COUNTER
NEXTBLOK GET   PDS,DIRBLOCK                      READ ONE DIR BLOCK
         XR    R2,R2                             INIT LENGTH
         LH    R2,DIRBLOCK                       LENGTH OF USEFUL DATA
         LTR   R2,R2                             LENGTH = 0
         BZ    NEXTBLOK                          SKIP IT
         CH    R2,=H'21'                         LENGTH < 18
         BNH   NEXTBLOK                          SKIP IT
         LA    R4,DIRBLOCK+2                     ADDRESS OF 1ST MEMBER
         SH    R2,=H'2'                          REMAINING LENGTH
         CLI   7(R4),X'00'                       LO-VAL IN MBR NAME
         BE    NEXTBLOK                          READ NEXT BLOCK
NEXTMEM  CLC   0(8,R4),HIVAL                     NAME HIGH VALUES
         BE    PDSEOF                            THEN EOF
         MVC   0(8,R11),0(R4)                    MOVE TO TABLE
         LA    R11,8(,R11)                       POINT TO NEXT
         LA    R10,1(,R10)                       INCREMENT COUNTER
         XR    R3,R3                             CLEAR R3
         NI    11(R4),X'1F'                      NO OF HALF WORDS
         IC    R3,11(R4)                         R3=NO OF HALF WORDS
         SLL   R3,1                              MULTIPLY BY 2
         LA    R3,12(R3)                         TOTAL LENGTH OF MBR
         SR    R2,3                              REMAINING LENGTH
         LTR   R2,R2                             IS IT ZERO?
         BZ    NEXTBLOK                          THEN READ NEXT BLOCK
         AR    R4,R3                             POINT TO NEXT MEMBER
         B     NEXTMEM                           PROCESS NEXT MBR
PDSEOF   CLOSE PDS                               CLOSE PDS
         MVC   0(8,R11),@SPACES                  LAST ENTRY OF TABLE
         ST    10,MBRTBLEN                       SAVE TABLE LENGTH
         L     R13,4(R13)                        RESTORE R13
         RETURN (14,12),RC=0                     RETURN
OPENERR3 PUT   OUTFILE,PDSERR                    WRITE ERROR MESSAGE
         L     R13,4(R13)                        RESTORE R13
         RETURN (14,12),RC=8                     ERROR RETURN
*   UPDATE THE BACKUP DIRECTORY DATASET
BKPUPDT  STM   R14,R12,12(R13)                   SAVE REGISTERS
         ST    R13,BKPSAVE3+4                    SAVE R13
         LA    R13,BKPSAVE3                      NEW SAVE AREA ADDRESS
         LR    R11,R1                            ADDR OF PASSED RECORD
         USING BKUPREC,R11                       ADDRESSABILITY
         MVC   BKP2KEY(50),BKUPREC               DSNAME AND VOLID
         MVC   BKP2SEQ(4),=CL4'0000'             SEQUENCE NUMBER
         MODCB RPL=BKUPRPL,                                            X
               OPTCD=(KEY,SEQ,UPD,KEQ,MVE),                            X
               ARG=BKP2KEY,KEYLEN=54
         POINT RPL=BKUPRPL                       POSITION AT KEY
         LTR   15,15                             RETURN CODE
         BNZ   NOBACKUP                          NO RECORD EXISTS
         GET   RPL=BKUPRPL                       READ HEADER RECORD
         LTR   R15,R15                           CHECK RETURN CODE
         BNZ   NOBACKUP                          NO BACKUP EXISTS
         ERASE RPL=BKUPRPL                       DELETE HEADER RECORD
         LTR   R15,R15                           CHECK RETURN CODE
         BNZ   BKPERR1                           ERROR IN VSAM DATASET
         L     R2,PREVTABA                       ADDR OF VERSION TABLE
         XR    R3,R3                             LENGTH OF TABLE
* READ ALL RECORDS FOR A DATASET AND CREATE PREVIOUS VERSION TABLE
BKPGET1  GET   RPL=BKUPRPL                       READ NEXT RECORD
         LTR   R15,R15                           CHECK RETURN CODE
         BNZ   BKPFIN                            ALL RECORDS OVER
         CLC   BKP2REC(50),BKUPREC               KEY MATCH
         BNE   BKPFIN                            NO .. STOP READING
         SHOWCB RPL=BKUPRPL,                                           X
               AREA=BKP2RECL,                                          X
               LENGTH=4,                                               X
               FIELDS=(RECLEN)
         L     R4,BKP2RECL                       RECORD LENGTH
         S     R4,=F'93'                         LENGTH OF FIXED PART
         LA    R5,BKP2MEM                        ADD OF MEMBER TABLE
BKPMEM1  MVC   0(8,R2),0(R5)                     MOVE MEMBER NAME
         MVC   8(3,R2),@SPACES                   NEW VERSION EMPTY
         MVC   11(39,R2),BKP2VER                 MOVE PREV VERSIONS
         LA    R2,50(,R2)                        NEXT TABLE ENTRY
         LA    R5,8(,R5)                         NEXT MBR FROM RECORD
         LA    R3,1(,R3)                         INCREMENT COUNTER
         S     R4,=F'8'                          REMAINING REC LENGTH
         BH    BKPMEM1                           IF MORE PROCESS
         ERASE RPL=BKUPRPL                       DELETE CURRENT REC
         LTR   15,15                             RET CODE
         BNZ   BKPERR1                           ERROR THEN RETURN
         B     BKPGET1                           READ NEXT RECORD
BKPFIN   ST    R3,PREVTABL                       LENGTH OF TABLE
         ST    R2,PREVTABE                       END ADDRESS OF TABLE
* SORT THE PREVIOUS VERSION TABLE IN ALPHABETICAL ORDER
         L     R8,PREVTABA                       START ADDRESS OF TABLE
         L     R6,PREVTABL                       COUNT
         C     R6,=F'1'                          ONLY ONE MEMBER
         BNH   BKPSRT4                           THEN NO SORTING
         BCTR  R6,R0                             REDUCE BY 1
BKPSRT1  LA    R7,50(R8)                         NEXT ENTRY AFTER TOP
         LR    R5,R6                             LOOP COUNTER
BKPSRT2  CLC   0(8,R8),0(R7)                     COMPARE TWO ENTRIES
         BNH   BKPSRT3                           IN ORDER .. NO SWAP
         MVC   BKUPTEMP(50),0(R8)                SAVE FIRST
         MVC   0(50,R8),0(R7)                    MOVE SECOND TO FIRST
         MVC   0(50,R7),BKUPTEMP                 SAVED TO SECOND
BKPSRT3  LA    R7,50(R7)                         POINT TO NEXT
         BCT   R5,BKPSRT2                        LOOP TILL END
         LA    R8,50(R8)                         INCR OUTER ADDRESS
         BCT   R6,BKPSRT1                        REPEAT OUTER LOOP
* ADD LATEST VERSION TO PREVIOUS VERSIONS TABLE
BKPSRT4  L     R4,PREVTABA                       PREVIOUS TABLE
         L     R5,MBRTBADR                       NEW MEMBER LIST
MBRNEXT  CLC   0(8,R5),@SPACES                   NO MORE MEMBERS
         BE    MBROVER                           THEN ALL ARE OVER
         CLC   0(8,R4),0(R5)                     TABLE MATCH
         BE    MBRSAME                           THEN SAVE NEW VER NO
         BH    MBRADD                            ADD MEMBER NAME
         LA    R4,50(,R4)                        POINT TO NEXT
         C     R4,PREVTABE                       END OF TABLE REACHED
         BE    MBRADALL                          ADD REMAINING MBRS
         B     MBRNEXT                           COMPARE NEXT MEMBER
MBRSAME  MVC   8(3,R4),BKUPVER                   MOVE NEW VERSION
         LA    R4,50(,R4)                        POINT TO NEXT
         LA    R5,8(,R5)                         POINT TO NEXT
         CLC   0(8,R5),@SPACES                   LAST ENTRY OVER
         BE    MBROVER                           MEMBER OVER
         C     R4,PREVTABE                       END OF TABLE
         BE    MBRADALL                          ADD REMAINING MBRS
         B     MBRNEXT                           COMPARE THE NEXT
MBRADD   MVC   0(8,R2),0(R5)                     MOVE MEMBER NAME
         MVC   8(3,R2),BKUPVER                   MOVE CURRENT VERSION
         MVC   11(39,R2),@SPACES                 INITIALIZE OLD VER
         LA    R2,50(,R2)                        POINT TO NEXT
         LA    R3,1(,R3)                         INCREMENT COUNTER
         LA    R5,8(,R5)                         NEXT ENTRY IN MBRTAB
         CLC   0(8,R5),@SPACES                   NEXT ENTRY SPACES
         BE    MBROVER                           THEN ALL ARE OVER
         B     MBRNEXT                           COMPARE THE NEXT
MBRADALL MVC   0(8,R2),0(R5)                     MOVE MEMBER NAME
         MVC   8(3,R2),BKUPVER                   NEW VERSION
         MVC   11(39,R2),@SPACES                 NO OLD VERSION EXISTS
         LA    R2,50(,R2)                        POINT TO NEXT
         LA    R3,1(,R3)                         INCR COUNTER
         LA    R5,8(,R5)                         POINT TO NEXT
         CLC   0(8,R5),@SPACES                   ALL MBRS OVER
         BE    MBROVER                           THEN LEAVE
         B     MBRADALL                          ADD NEXT MEMBER
MBROVER  ST    R3,PREVTABL                       TOTAL # OF MBRS
* SORT THE MERGED TABLE INTO ALPHABETICAL ORDER
         L     R8,PREVTABA                       ADDRESS OF TABLE
         L     R6,PREVTABL                       # OF MEMBERS
         C     R6,=F'1'                          ONLY 1 MEMBER ?
         BNH   BK2SORT4                          THEN NO SORTING
         BCTR  R6,R0                             REDUCE BY 1
BK2SORT1 LA    R7,50(R8)                         NEXT ENTRY AFTER TOP
         LR    R5,R6                             LOOP COUNTER
BK2SORT2 CLC   8(42,R8),8(R7)                    COMPARE TWO ENTRIES
         BNH   BK2SORT3                          IN ORDER .. NO SWAP
         MVC   BKUPTEMP(50),0(R8)                SAVE FIRST
         MVC   0(50,R8),0(R7)                    MOVE SECOND TO FIRST
         MVC   0(50,R7),BKUPTEMP                 MOVE FIRST TO SECOND
BK2SORT3 LA    R7,50(R7)                         POINT TO NEXT
         BCT   R5,BK2SORT2                       LOOP TILL END
         LA    R8,50(R8)                         INCREMENT OUTER LOOP
         BCT   R6,BK2SORT1                       REPEAT OUTER LOOP
* GET THE LIST OF ALL PREVIOUS VERSIONS
BK2SORT4 L     R2,PREVTABA                       ADDRESS OF TABLE
         L     R3,PREVTABL                       LENGTH OF TABLE
         MVC   ALLVER,@SPACES                    INITIALIZE
ORLOOP   OC    ALLVER,8(R2)
         LA    R2,50(,R2)                        POINT TO NEXT
         BCT   R3,ORLOOP                         OR WITH NEXT ENTRY
*  FIND THE PREVIOUS VERSION DROPPED DURTNG CURRENT BACKUP
         LA    R2,ALLVER                         ADDRESS OF ALL VERS
         LA    R3,BKUPVER                        ADDRESS OF NEW VERS
         XR    R4,R4                             OFFSET
         LA    R5,13                             COUNTER
VER2     CLC   0(3,R2),0(R3)                     VERSIONS MATCH
         BE    NXTVER                            THEN COMPARE NEXT
         BH    MISMATCH                          MISMATCH IN VERSION
         LA    R3,12(,R3)                        POINT TO NEXT VERS
         B     VER2                              AND LOOP AGAIN
NXTVER   LA    R2,3(,R2)                         POINT TO NXT IN ALLVER
         LA    R3,12(,R3)                        POINT TO NEXT BKUPVER
         LA    R4,3(,R4)                         INCR OFFSET
         BCT   R5,VER2                           CHECK NEXT VERSIONS
         B     NOMOVE                            ALL MATCH
*  DISCARD THE NON-EXISTENT PREVIOUS VERSION
MISMATCH LA    R5,39                             TOTAL VERSION LENGTH
         SR    R5,R4                             LESS OFFSET
         BCTR  R5,R0                             REDUCE BY 1
         L     R2,PREVTABA                       ADDRESS OF TABLE
         LA    R2,8(,R2)                         POINT TO FIRST VER
         AR    R2,R4                             DESTINATION ADDRESS
         L     R3,PREVTABL                       COUNTER
MOVE3    EX    R5,MOVE1                          SHIFT TO LEFT
         LA    R2,50(,R2)                        POINT TO NEXT
         BCT   R3,MOVE3                          TRY NEXT
NOMOVE   BAL   R1O,BKUPHDR                       WRITE HEADER
         B     BKUPDET                           WRITE DETAIL RECORD
*  NO PREVIOUS VERSION EXISTS FOR THIS DATASET .. ADD NEW
NOBACKUP L     R2,PREVTABA                       ADDRESS OF PREV TABLE
         L     R3,MBRTBADR                       MEMBER TABLE ADDRESS
         L     R4,MBRTBLEN                       LENGTH OF TABLE
         ST    R4,PREVTABL                       PREVTABL = MBRTBLEN
         LTR   R4,R4                             # OF MEMBERS = 0
         BZ    BKPRET                            THEN RETURN
MOVNEXT  MVC   0(8,R2),0(R3)                     MBR NAME IN PREVTAB
         MVC   8(3,R2),BKUPVER                   VER NO IN PREVTAB
         MVC   11(39,R2),@SPACES                 NO OTHER VERSN EXISTS
         LA    R2,50(,R2)                        NEXT PREVTAB ENTRY
         LA    R3,8(,R3)                         NEXT MBRTAB ENTRY
         BCT   R4,MOVNEXT                        REPEAT
         MVC   PREVTABL(4),MBRTBLEN              PREVTABL = MBRTBLEN
         BAL   10,BKUPHDR                        WRITE HEADER REC
         B     BKUPDET                           WRITE DETAIL RECORDS
*  WRITE HEADER RECORD FOR A DATASET
BKUPHDR  MVC   BKP2KEY(50),BKUPREC               DSNAME AND VOLID
         MVC   BKP2SEQ,=CL4'0000'                FIRST SEQ NUMBER
         LA    R2,BKP2REC+54                     POSITION AFTER KEY
         LA    R3,54                             KEY LENGTH
         LA    R4,50(,R11)                       POSITION AT VER FIELD
NEXTVER  CLC   0(12,R4),@SPACES                  LAST VERSION OVER
         BE    WRITHDR                           WRITE HEADER RECORD
         MVC   0(12,R2),0(R4)                    MOVE ONE VERSION
         LA    R2,12(,R2)                        POINT TO NEXT VERSION
         LA    R3,12(,R3)                        ADD LENGTH
         LA    R4,12(,R4)                        POINT TO NEXT VERSION
         B     NEXTVER                           CHECK NEXT VERSION
WRITHDR  ST    R3,BKP2RECL                       SAVE RECORD LENGTH
         MODCB RPL=BKUPRPL,                                            X
               OPTCD=(KEY,DIR,NUP,MVE),                                X
               AREA=BKP2REC,AREALEN=893,                               X
               ARG=BKP2KEY,KEYLEN=54,                                  X
               RECLEN=(3)                        MODIFY RECORD LENGTH
         LTR   15,15
         BNZ   BKPERR1
         PUT   RPL=BKUPRPL                       WRITE RECORD
         LTR   R15,R15                           CHECK RETURN CODE
         BNZ   BKPERR1                           IF ERROR RETURN
         BR    R10                               RETURN
*  WRITE DETAIL RECORD FOR ALL MEMBERS
BKUPDET  L     R2,PREVTABA                       ADDR OF VERSION TABLE
         L     R3,PREVTABL                       LENGTH OF TABLE
         LA    R4,1                              SEQ NUMBER = 1
NXT1     CLC   8(39,R2),@SPACES                  DELETED MEMBER
         BNE   NEWREC1                           IF NOT WRITE RECORDS
         LA    R2,50(,R2)                        POINT TO NEXT
         BCT   R3,NXT1                           AND CHECK NEXT
NEWREC1  LTR   R3,R3                             # OF MEMBERS
         BZ    BKPRET                            IF ZERO THEN OVER
         CVD   R4,DWORD                          SEQ NUMBER
         UNPK  BKP2SEQ(4),DWORD                  ZONE FORMAT
         OI    BKP2SEQ+3,X'F0'                   DISPLAY FORMAT
         MVC   BKP2VER(39),8(R2)                 VERSION IN RECORD
         LA    R5,93                             LENGTH OF FIXED PART
         LA    R6,BKP2MEM                        ADDR OF MEMBER PART
NXT2     CLC   BKP2VER(39),8(R2)                 VERSIONS MATCH
         BNE   WRIT2                             IF NOT WRITE RECORD
         MVC   0(8,R6),0(R2)                     ELSE MOVE MBR NAME
         LA    R2,50(,R2)                        POINT TO NEXT ENTRY
         LA    R6,8(,R6)                         INCR RECORD POSITION
         BCTR  R3,R0                             REDUCE COUNTER
         LA    R5,8(,R5)                         INCR LENGTH
         C     R5,=F'893'                        MAX RECORD LENGTH
         BE    WRIT2                             THEN WRITE RECORD
         LTR   R3,R3                             MORE MEMBERS LEFT
         BH    NXT2                              THEN PROCESS IT
WRIT2    MODCB RPL=BKUPRPL,RECLEN=(5)            NEW RECORD LENGTH
         LTR   R15,R15                           CHECK RETURN CODE
         BNZ   BKPERR1                           IF ERROR RETURN
         PUT   RPL=BKUPRPL                       WRITE A RECORD
         LTR   R15,R15                           CHECK RETURN CODE
         BNZ   BKPERR1                           IF ERROR RETURN
         LA    R4,1(,R4)                         INCR SEQ NUMBER
         B     NEWREC1                           PROCESS NEXT RECORD
BKPERR1  PUT   OUTFILE,VSAMERR                   VSAM ERROR
BKPRET   L     R13,4(R13)                        PREV SAVE AREA ADDR
         RETURN (14,12)                          RETURN
BKPSAVE1 DS    18F                               REGISTER SAVE MAIN
BKPSAVE2 DS    18F                               REGISTER SAVE PDSLIST
BKPSAVE3 DS    18F                               REG SAVE FOR BKPUPDT
BKPSAVE4 DS    18F                               REG SAVE FOR PDSDIR
DAYTIME  DS    4F                                DATE AND TIME FIELD
CDATE    DS    CL6                               DATE IN YYMMDD
CURDATE  DC    CL8'  /  /  '                     DATE IN YY/MM/DD
BKTABADR DS    F                                 ADDRESS OF TABLE
PREVTABA DS    F                                 TABLE OF PREVIOUS VER
PREVTABE DS    F                                 END ADDRESS OF TABLE
PREVTABL DS    F                                 LENGTH OF THE TABLE
MBRTBADR DS    F                                 ADDRESS OF MBR TABLE
MBRTBLEN DS    F                                 LENGTH OF MBR TABLE
PDTABADR DS    F                                 PDS TABLE ADDRESS
DWORD    DS    D
HEXTOCHR EQU   *-C'0'                            HEX TRANSLATION TABLE
         DC    C'0123456789ABCDEF'
@SPACES  DC    CL206' '                          INITIALIZED TO SPACES
BKUPTEMP DS    CL206                             SORT TEMP AREA
HIVAL    DC    8X'FF'                            LAST DIRECTORY BLOCK
DIRBLOCK DS    CL256                             DIRECTORY BLOCK
MOVE1    MVC   0(1,R2),3(R2)                     MOVE INSTRUCTION
ALLVER   DS    CL42                              LIST OF ALL VERSIONS
OUTFILE  DCB   DDNAME=OUTFILE,DSORG=PS,MACRF=PM
PDS      DCB   DSORG=PS,MACRF=GM,DDNAME=PDSDIR,EODAD=PDSEOF,RECFM=U,   X
               BLKSIZE=256
BKUPACB  ACB   AM=VSAM,DDNAME=BKUPDIR,MACRF=(KEY,SEQ,DIR,OUT)
BKUPRPL  RPL   ACB=BKUPACB,                                            X
               AREA=BKP2REC,                                           X
               AREALEN=893,                                            X
               RECLEN=BKP2RECL
BCDSACB  ACB   AM=VSAM,DDNAME=BKUPBCDS,MACRF=(KEY,SEQ,DIR,IN)
BCDSRPL  RPL   ACB=BCDSACB,                                            X
               AREA=BCDSREC,                                           X
               OPTCD=(KEY,SEQ,NUP,GEN,KGE,MVE),                        X
               ARG=BCDSKEY,KEYLEN=12,                                  X
               AREALEN=1000
ALOCMSG  DS    0CL80
         DC    CL25' PDS ALLOCATION ERROR RC='
RETCODE  DC    CL3' ',CL15'ERROR CODE ='
ERRCODE  DC    CL5' ',CL15'INFO CODE ='
INFCODE  DC    CL5' '
         DC    CL42' '
PDSERR   DC    CL80' BKUPDIR .. ERROR IN OPENING PDS DIRECTORY'
VSAMERR  DC    CL80' BKUPDIR .. ERROR IN VSAM PROCESSING'
*   DYNAMIC ALLOCATION FOR CATALOGUED PDS AND PDSE
$PDSALC1 DC    A(X'80000000'+$PDSALX1)
$PDSALX1 DC    AL1(S99RBEND-S99RB,S99VRBAL,S99NOMNT,0)
         DC    Y(0,0),A($PDSALY1,0,0)
$PDSALY1 DC    A($$DDNM1)
         DC    A($$DSN1)
         DC    A($$STAT1)
         DC    A(X'80000000')
* DYNAMIC ALLOCATION FOR UNCATALOGUED PDS USING VOLSER PARAMETER
$PDSALC2 DC    A(X'80000000'+$PDSALX2)
$PDSALX2 DC    AL1(S99RBEND-S99RB,S99VRBAL,S99NOMNT,0)
         DC    Y(0,0),A($PDSALY2,0,0)
$PDSALY2 DC    A($$DDNM1)
         DC    A($$DSN1)
         DC    A($$UNIT1)
         DC    A($$VOL1)
         DC    A($$STAT1)
         DC    A(X'80000000')
$$DDNM1  DC    Y(DALDDNAM,1,6),CL6'PDSDIR'
$$DSN1   DC    Y(DALDSNAM,1,44),CL44' '
$$STAT1  DC    Y(DALSTATS,1,1),X'08'
$$UNIT1  DC    Y(DALUNIT,1,4),CL4'3380'
$$VOL1   DC    Y(DALVLSER,1,6),CL6' '
* DYNAMIC DE-ALLOCATION PARAMETER FOR PDS
$PDSUNAL DC    AL1(X'80'),AL3($PDSUNL1)
$PDSUNL1 DC    AL1(20),AL1(S99VRBUN),AL1(0),AL1(0)
         DC    AL2(0),AL2(0),AL4($PDSUNL2),AL4(0),AL4(0)
$PDSUNL2 DC    AL4($DDNMU1)
         DC    AL1(X'80'),AL3($DISPU1)
$DDNMU1  DC    AL2(DUNDDNAM),AL2(1),AL2(6),CL6'PDSDIR'
$DISPU1  DC    AL2(DUNOVDSP),AL2(1),AL2(1),X'02'
BKP2REC  DS    0CL893                            BACKUP DIR RECORD
BKP2KEY  DS    0CL54                             RECORD KEY
BKP2DSN  DS    CL44                              DATASET NAME
BKP2VOL  DS    CL6                               DASD VOLUME
BKP2SEQ  DS    CL4                               RECORD SEQ NUMBER
BKP2VER  DS    13CL3                             VERSIONS
BKP2MEM  DS    100CL8                            MEMBER LIST
BKP2RECL DC    F'893'                            RECORD LENGTH
LEAPTAB  DC   PL2'0',PL2'31',PL2'60',PL2'91',PL2'121',PL2'152',PL2'182'
         DC   PL2'213',PL2'244',PL2'274',PL2'305',PL2'335',PL2'366'
NLEAPTAB DC   PL2'0',PL2'31',PL2'59',PL2'90',PL2'120',PL2'151',PL2'181'
         DC   PL2'212',PL2'243',PL2'273',PL2'304',PL2'334',PL2'365'
         DS    0F
BCDSREC  DS    0CL1000                           BCDS RECORD
BCDSKEY  DS    CL44                              RECORD KEY
BCDSDET  DS    0CL308                            DETAIL PORTION
         DS    CL20
BCDSDSN  DS    CL44                              DATASET NAME
BCDSTVOL DS    CL6                               TAPE VOLUME
BCDSVER  DS    CL2                               VERSION
         DS    CL4
BCDSTIME DS    CL4                               BACKUP TIME
BCDSDATE DS    CL4                               BACKUP DATE
BCDSORG  DS    CL2                               ORGANIZATION
         DS    CL24
BCDSDVOL DS    CL6                               DASD VOLUME
         DS    CL72
BCDSSCL  DS    H                                 STORAGE CLASS LEN
BCDSSC   DS    CL30                              STORAGE CLASS
         DS    CL736
BCD2YMD  DS    0CL8                              DATE IN YY/MM/DD
BCD2YY   DS    CL2                               YEAR
         DC    C'/'
BCD2MM   DS    CL2                               MONTH
         DC    C'/'
BCD2DD   DS    CL2                               DAY
BCD2DAY  DS    CL2                               JULIAN DAY - PACKED
BCD2YEAR DS    CL2                               YEAR PACKED
         LTORG                                   LITERALS
PREVTAB  DS    10000CL50                         PREVIOUS VERSION TABLE
BKUPTAB  DS    1000CL206                         BACKUP TABLE
MBRTAB   DS    10000CL8                          MEMBER TABLE
PDSTAB   DS    10000CL62                         PDS TABLE
BKUPDCT  DSECT
BKUPREC  DS    0CL206                            BACKUP RECORD
BKUPDSN  DS    CL44                              DSNAME
BKUPVOL  DS    CL6                               BACKUP VOLUME
BKUPDATE DS    CL8                               BACKUP DATE
BKUPVER  DS    CL3                               BACKUP VERSION
BKUPSMS  DS    CL1                               CATALOG INFORMATION
         ORG   *-12
         DS    13CL12                            REPEAT 13 TIMES
BKUPRECL EQU   *-BKUPREC                         RECORD LENGTH
PDSDSCT  DSECT
PDSREC   DS    0CL62                             PDS BACKUP RECORD
PDSDSN   DS    CL44                              PDS NAME
PDSDVOL  DS    CL6                               VOLID
PDSDATE  DS    CL8                               DATE
PDSVER   DS    CL3                               VERSION
PDSSMS   DS    CL1                               SMS INDICATOR
PDSRECL  EQU   *-PDSREC                          RECORD LENGTH
         IEFZB4D0
         IEFZB4D2
         END   BKUPDIR

Sample invocation

/* REXX */
/*  list backup directory */
"ALLOC FI(BKUPDIR) DA('pds.bkupdir') SHR"
"CALL 'load.library(BKUPLIST)'"
"FREE FI(BKUPDIR)"

Program source

*  PROGRAM TO LIST BACKUP VERSIONS FOR A LIBRARY, DIRECTORY OF A
*  BACKUP VERSION, OR ALL VERSIONS FOR SELECTED MEMBERS
*  INITIALIZE THE SCREEN AREA WITH SPACES
         MACRO
&LABEL   INITSCRN
&LABEL   LA    2,PDSDETL
         LA    3,18
         MVC   0(80,2),@SPACES
         LA    2,80(,2)
         BCT   3,*-10
         MEND
         MACRO
*  MOVE DATA ENTERED ON SCREEN TO PROGRAM STORAGE LOCATIONS
&LABEL   MOVFIELD &FIELD
&LABEL   MVC   &FIELD,@SPACES            INIT FIELD
         LA    2,3(,2)                   ADDRESS OF DATA
         CLI   0(2),SBA                  NO DATA ENTERED IN FIELD
         BE    NXTFELD                   PROCESS NEXT FIELD
         MVC   &FIELD,0(2)               SAVE FIELD
         OC    &FIELD,@SPACES            UPPER CASE
         LA    2,L'&FIELD.(,2)           POINT TO NEXT FIELD
         B     NXTFELD                   PROCESS NEXT FIELD
         MEND
         MACRO
*  DISPLAY AND RECEIVE SCREEN
&LABEL   PUTGET
&LABEL   TPUT  SCREEN1,SLEN1,FULLSCR     DISPLAY FIRST SCREEN
         MVC   PDSMSG1,@SPACES           CLEAR MESSAGE
         MVC   INPUT(L'INPUT),@SPACES    INITIALIZE INPUT AREA
         TGET  INPUT,L'INPUT,ASIS        RECEIVE SCREEN
         CLI   INPUT,PA2                 IF PA2 ATTENTION KEY
         BE    TERMIN                    THEN TERMINATE
         CLI   INPUT,PF3                 IF PF3
         BE    TERMIN                    THEN TERMINATE PROGRAM
         CLI   INPUT,PF4                 IF PF4
         BE    REFRESH                   REFRESH SCREEN
         MEND
BKUPLIST CSECT
         STM   14,12,12(13)              SAVE REGISTERS
         USING BKUPLIST,12,11            ESTABLISH ADDRESSABILITY
         LR    12,15                     FIRST BASE REG
         LA    11,4095(12)
         LA    11,1(11)                  SECOND BASE = FIRST BASE +4096
         LA    15,SAVEAREA               ADDRESS OF REGISTER SAVE AREA
         ST    13,4(15)                  FORWARD POINTER
         ST    15,8(13)                  REVERSE POINTER
         LR    13,15                     NEW SAVE AREA ADDRESS IN R13
         OPEN  BKUPACB                   OPEN BACKUP DATASET
         LTR   15,15                     CHECK RETURN CODE
         BNZ   OPENERR                   ERROR RETURN
         GETMAIN  R,LV=100000            ACQUIRE STORAGE
         ST    1,MBRTBADR                MEMBER TABLE ADDRESS
         A     1,=F'80000'
         ST    1,VERTBADR                VERSION TABLE ADDRESS
REFRESH  TPUT  @CLEAR,L'@CLEAR,FULLSCR   CLEAR SCREEN
         INITSCRN                        INITIALIZE SCREEN
         MVC   PDSNAME1,@SPACES          INITIALIZE SCREEN FIELDS
         MVC   PDSMBR1,@SPACES                     "
         MVC   PDSVOL1,@SPACES                     "
         MVC   PDSVER1,@SPACES                     "
         MVC   PDSMSG1,@SPACES                     "
         MVC   OLDVER,@SPACES            LAST DATA ENTERED ON SCREEN
         MVC   OLDMBR,@SPACES                      "
         MVI   PDSNAME1-1,UNPATTR        UNPROTECT  DATA FIELDS
         MVI   PDSVOL1-1,UNPATTR                   "
         MVI   PDSMBR1-1,UNPATTR                   "
         MVI   PDSVER1-1,UNPATTR                   "
DSPSCRN  PUTGET                          SEND AND RECEIVE
         LA    2,INPUT+3                 START OF DATA FIELDS
NXTFELD  CLI   0(2),SBA                  START OF FIELD INDICATOR
         BNE   ENDINPUT                  NO .. ALL FIELDS OVER
         NC    1(2,2),SIXBIT             CONVERT ADDRESS TO 6 BIT FORM
         CLC   1(2,2),PDSADR             ADDRESS OF PDSNAME
         BE    PDSNAME                   SAVE PDS NAME
         CLC   1(2,2),MBRADR             ADDRESS OF MEMBER
         BE    PDSMBR                    SAVE MEMBER NAME
         CLC   1(2,2),VOLADR             ADDRESS OF VOLUME
         BE    PDSVOL                    SAVE VOLUME
         CLC   1(2,2),VERADR             ADDRESS OF VERSION
         BE    PDSVER                    SAVE VERSION
PDSNAME  MOVFIELD PDSNAME1               SAVE PDS NAME
PDSMBR   MOVFIELD PDSMBR1                SAVE MEMBER NAME
PDSVOL   MOVFIELD PDSVOL1                SAVE VOLUME ID
PDSVER   MOVFIELD PDSVER1                SAVE VERSION
ENDINPUT CLC   PDSNAME1,@SPACES          NO PDS NAME
         BE    ERR1                      ERROR
         CLC   PDSMBR1,@SPACES           MEMBER NAME SPACES
         BNE   CONT1                     NO THEN CONT PROCESS
         CLC   PDSVER1,@SPACES           VERSION NAME SPACES
         BNE   CONT2                     NO THEN PROCESS
         MVI   PROCFLAG,ONE              OPTION = 1 ; LIST VERSIONS
         B     PROCESS                   CONTINUE PROCESS
CONT1    CLC   PDSVER1,@SPACES           VERSION ENTERED ?
         BNE   ERR2                      BOTH VERSION & MEMBER .. ERR
         MVI   PROCFLAG,TWO              OPT = 2 ; SELECT MEMBERS
         B     PROCESS                   CONTINUE PROCESS
CONT2    MVI   PROCFLAG,THREE            OPT = 3 ; ALL MBRS OF VERSION
PROCESS  MVC   BKP2REC(210),@SPACES      INIT HEADER RECORD
         MVC   BKP2DSN,PDSNAME1          DATASET NAME IN KEY
         CLC   PDSVOL1,@SPACES           VOLUME ENTERED
         BE    NOVOL                     NO VOLUME
         MVC   BKP2VOL,PDSVOL1           VOLUME ID IN KEY
         MVC   BKP2SEQ,=CL4'0000'        SEQ NO IN KEY
         MODCB RPL=BKUPRPL,                                            X
               OPTCD=(KEY,DIR,NUP,MVE),                                X
               AREA=BKP2REC,AREALEN=893,                               X
               ARG=BKP2KEY,KEYLEN=54
         GET   RPL=BKUPRPL               READ HEADER RECORD
         LTR   15,15                     ERROR
         BNZ   NOTFOUND                  DISPLAY ERROR MESSAGE
         MVC   OLDREC,BKP2REC            SAVE CURRENT RECORD
         B     PROCED                    ELSE PROCEED
NOVOL    MODCB RPL=BKUPRPL,                                            X
               OPTCD=(KEY,SKP,NUP,KGE,MVE),                            X
               AREA=BKP2REC,AREALEN=893,                               X
               ARG=BKP2KEY,KEYLEN=44
         POINT RPL=BKUPRPL               POINT AT FIRST RECORD
         LTR   15,15                     ERROR
         BNZ   NOTFOUND                  DISPLAY MESSAGE
         GET   RPL=BKUPRPL               READ RECORD
         LTR   15,15                     ERROR
         BNZ   NOTFOUND                  DISPLAY MESSAGE
         CLC   BKP2DSN,PDSNAME1          DSNAME MATCH PDS
         BNE   NOTFOUND                  NO .. ERROR MESSAGE
         MVC   OLDREC,BKP2REC            SAVE CURRENT RECORD
         MVC   PDSVOL1,BKP2VOL           VOLUME IN KEY
         MVC   BKP2SEQ,=X'FFFFFFFF'      HIGH VAL IN SEQ NO
         GET   RPL=BKUPRPL               READ NEXT HEADER REC
         LTR   15,15                     ERROR
         BNZ   PROCED                    NO MORE RECORDS .. PROCEED
         CLC   BKP2DSN,PDSNAME1          SAME DATASET
         BE    DUPERR                    MORE THAN ONE DATASET EXISTS
PROCED   MVC   BKP2REC(210),OLDREC       GET PREV RECORD
         CLI   PROCFLAG,ONE              OPTION = 1
         BE    PROCED1                   CONT PROCESSING
         CLI   PROCFLAG,TWO              OPTION = 2
         BE    PROCED2                   PROCEED
         B     PROCED3                   OPTION = 3
*  DISPLAY ONLY THE VERSIONS ASSOCIATED FOR A DATASET
PROCED1  INITSCRN                        INIT SCREEN
         MVC   PDSDETL(80),SCRHDR11      SCREEN HEADER
         MVC   PDSDETL+160(80),SCRHDR12  2ND HEADER
         LA    2,PDSDETL+320             FIRST LINE
         LA    4,BKP2VER                 ADDRESS OF FIRST VER
         LA    5,1                       SEQ NO
         MVI   PDSNAME1-1,PROATTR        PROTECT PDS NAME
         MVI   PDSVOL1-1,PROATTR         PROTECT VOLUME
         MVC   OLDVER,@SPACES            NO VERSION
         MVC   OLDMBR,@SPACES            NO MEMBER
MOVNEXT  CLC   0(8,4),@SPACES            ALL VER OVER
         BE    DSPSCRN                   DISPLAY SCREEN
         CVD   5,DWORD                   DECIMAL
         UNPK  SCRSEQ1(2),DWORD(8)       ZONE
         OI    SCRSEQ1+1,X'F0'           PACKED
         MVC   SCRDATE1,0(4)             DATE OF BACKUP
         MVC   SCRVER1,8(4)              VERSION
         MVC   0(80,2),SCRDET11          MOVE LINE TO SCREEN
         LA    2,80(,2)                  POINT TO NEXT
         LA    4,12(,4)                  POINT TO NEXT VER
         LA    5,1(,5)                   INCR SEQ NO
         B     MOVNEXT                   MOVE NEXT VER
*  LIST ALL VERSIONS EXISTING FOR SELECTED MEMBERS
PROCED2  CLC   OLDMBR,PDSMBR1            ALREADY PROCESSED
         BE    PAGEFIN2                  THEN DISPLAY
         MODCB RPL=BKUPRPL,                                            X
               OPTCD=(KEY,SEQ,KEQ,MVE),                                X
               ARG=BKP2KEY,KEYLEN=54
         POINT RPL=BKUPRPL               POSITION AT KEY
         LTR   15,15                     ERROR
         BNZ   NOTFOUND                  DISPLAY MESSAGE
         GET   RPL=BKUPRPL               READ RECORD
         LTR   15,15                     ERROR
         BNZ   NOTFOUND                  DISPLAY MESSAGE
         MVC   OLDKEY,BKP2KEY            SAVE KEY
         L     2,VERTBADR                ADDRESS OF VERSION TABLE
         XR    3,3                       COUNTER
GETNEXT  GET   RPL=BKUPRPL               READ NEXT RECORD
         LTR   15,15                     ERROR
         BNZ   GETFIN                    THEN NO MORE READ
         CLC   BKP2REC(50),OLDKEY        DSNAME & VOLUME MATCH
         BNE   GETFIN                    NO .. NO MORE READ
         SHOWCB RPL=BKUPRPL,                                           X
               AREA=BKP2RECL,                                          X
               LENGTH=4,                                               X
               FIELDS=(RECLEN)
         LA    4,BKP2MEM                 POINT TO MEMBER LIST
         L     5,BKP2RECL                RECORD LENGTH
         S     5,=F'93'                  LESS CONSTANT PORTION
NEXTMEM  LA    6,8                       COUNTER
         LR    7,4                       ADDRESS OF MEMBER
         LA    8,PDSMBR1                 ADDRESS OF ENTERED MBR NAME
MATCH    CLC   0(1,8),0(7)               ONE CHAR MATCH
         BE    CHKNEXT                   YES .. CHECK NEXT
         CLI   0(8),SPACE                SPACE IN ENTERED FIELD
         BE    SAVEIT                    THEN COMPLETE MATCH
         B     NOMATCH                   DO NOT MATCH
CHKNEXT  LA    7,1(,7)                   POINT TO NEXT CHAR
         LA    8,1(,8)                          "
         BCT   6,MATCH                   MATCH NEXT CHAR
SAVEIT   MVC   0(8,2),0(4)               COMPLETE MATCH
         MVC   8(39,2),BKP2VER           SAVE VERSIONS
         LA    2,47(,2)                  POINT TO NEXT TABLE ENTRY
         LA    3,1(,3)                   INCR COUNTER
NOMATCH  LA    4,8(,4)                   POINT TO NEXT MEMBER
         S     5,=F'8'                   REMAINING LENGTH
         BH    NEXTMEM                   MORE MEMBERS .. PROCESS
         B     GETNEXT                   READ NEXT RECORD
GETFIN   ST    2,VERTBEND                ADDRESS OF LAST ENTRY
         LTR   3,3                       NO OF MEMBERS
         BZ    NOMBR2                    = 0 ; DISPLAY MESSAGE
         L     2,VERTBADR                START ADDRESS OF TABLE
         ST    2,CURPAGA                 CURRENT PAGE ADDRESS
         LA    8,1                       PAGE NUMBER
FILPAGE2 CVD   8,DWORD                   DECIMAL
         UNPK  SCRPGN2(3),DWORD(8)       ZONE FORMAT
         OI    SCRPGN2+2,X'F0'           DISPLAY FORMAT
         INITSCRN                        CLEAR DETAIL PORTION
         MVC   PDSDETL(80),SCRHDR21      SCREEN HEADER
         LA    4,PDSDETL+160             ADDRESS OF DETAIL PART
         L     2,CURPAGA                 CURRENT PAGE ADDRESS
         LA    6,15                      # OF LINES PER PAGE
FILLINE2 MVC   SCRDET21,@SPACES          INITIALIZE LINE
         MVC   SCRMBR2,0(2)              MEMBER NAME
         LA    3,SCRVER2                 VERSION FIELD
         LA    5,13                      NO OF VERSIONS
         LA    2,8(,2)                   ADDRESS OF FIRST VERSION
FIL2X    MVC   0(3,3),0(2)               MOVE VERSION TO SCREEN
         LA    2,3(,2)                   POINT TO NEXT VERSION
         LA    3,5(,3)                          "
         BCT   5,FIL2X                   MOVE NEXT VERSION
         MVC   0(80,4),SCRDET21          MOVE LINE TO SCREEN
         LA    4,80(,4)                  POINT TO NEXT LINE
         C     2,VERTBEND                REACHED END OF TABLE
         BE    PAGEFIN2                  THEN PAGE FINISHED
         BCT   6,FILLINE2                ELSE MAKE NEXT LINE
PAGEFIN2 PUTGET
         CLI   INPUT,PF7                 IF PF7
         BE    PREVPG2                   PREVIOUS PAGE
         CLI   INPUT,PF8                 IF PF8
         BE    NEXTPG2                   NEXT PAGE
         LA    2,INPUT+3                 POINT TO FIRST FIELD
         MVC   OLDMBR,PDSMBR1            SAVE LAST MEMBER NAME
         MVC   OLDVER,@SPACES            SAVE LAST FIELD NAME
         B     NXTFELD                   CHECK DATA ENTERED
NEXTPG2  L     2,CURPAGA                 ADDRESS OF CURRENT PAGE
         A     2,=F'705'                 ADD PAGE LENGTH
         C     2,VERTBEND                BEYOND END OF PAGE
         BNL   LASTPG2                   THEN MESSAGE
         ST    2,CURPAGA                 SAVE CURRENT PAGE ADDR
         LA    8,1(,8)                   INCR PAGE NUMBER
         B     FILPAGE2                  FILL PAGE
LASTPG2  MVC   PDSMSG1,ERRMSG6           LAST PAGE MESSAGE
         B     PAGEFIN2                  DISPLAY MESSAGE
PREVPG2  L     2,CURPAGA                 CURRENT PAGE ADDR
         S     2,=F'705'                 LESS PAGE LEN
         C     2,VERTBADR                BELOW START OF PAGE
         BL    FIRSTPG2                  FIRST PAGE MESSAGE
         ST    2,CURPAGA                 SAVE PAGE ADDRESS
         BCTR  8,0                       DECR PAGE NUMBER
         B     FILPAGE2                  FILL PAGE
FIRSTPG2 MVC   PDSMSG1,ERRMSG7           FIRST PAGE MESSAGE
         B     PAGEFIN2                  DISPLAY PAGE
NOMBR2   MVC   PDSMSG1,ERRMSG8           NO MEMBERS MESSAGE
         INITSCRN                        CLEAR SCREEN
         B     DSPSCRN                   DISPLAY SCREEN
*  LIST COMPLETE DIRECTORY FOR A SELECTED VERSION OF A DATASET
PROCED3  CLC   OLDVER,PDSVER1            ALREADY PROCESSED
         BE    PAGEFIN3                  THEN DISPLAY PAGE
         MODCB RPL=BKUPRPL,                                            X
               OPTCD=(KEY,SEQ,KEQ,MVE),                                X
               ARG=BKP2KEY,KEYLEN=54
         POINT RPL=BKUPRPL               POSITION AT KEY
         LTR   15,15                     RETURN CODE
         BNZ   NOTFOUND                  NO RECORD EXISTS
         MVC   BKP2REC(255),@SPACES      INIT RECORD
         GET   RPL=BKUPRPL               READ ONE RECORD
         LTR   15,15                     ERROR
         BNZ   NOTFOUND                  THEN DISPLAY MESSAGE
         MVC   OLDKEY,BKP2KEY            SAVE RECORD KEY
         LA    2,BKP2REC+54              START OF VERSION
NEXTVER3 CLC   0(12,2),@SPACES           NO VERSIONS LEFT
         BE    NOTFOUND                  VERSION DOESN'T EXIST
         CLC   8(3,2),PDSVER1            VERSIONS MATCH
         BE    VMATCH3
         LA    2,12(,2)                  POINT TO NEXT VER
         B     NEXTVER3                  PROCESS NEXT VERSION
VMATCH3  L     2,MBRTBADR                ADDRESS OF MBR TABLE
         XR    3,3                       # OF MEMBERS
NEXTREC3 GET   RPL=BKUPRPL               READ NEXT REC
         LTR   15,15                     ERROR
         BNZ   GETFIN3                   NO MORE READ
         CLC   BKP2KEY(50),OLDKEY        NAME AND VOLUME MATCH
         BNE   GETFIN3                   NO .. NO FURTHER READ
         SHOWCB RPL=BKUPRPL,                                           X
               AREA=BKP2RECL,                                          X
               LENGTH=4,                                               X
               FIELDS=(RECLEN)
         L     4,BKP2RECL                RECORD LENGTH
         S     4,=F'93'                  LESS LENGTH OF FIXED PART
         LA    5,BKP2VER                 ADDRESS OF VERSION
         LA    6,13                      REPEAT COUNT .. 13 VERSION
NXTVER3X CLC   0(3,5),PDSVER1            VERSION MATCH
         BE    VMATCH3X                  YES MATCHES
         LA    5,3(,5)                   POINT TO NEXT VERSION
         BCT   6,NXTVER3X                CHECK NEXT VERSION
         B     NEXTREC3                  READ NEXT RECORD
VMATCH3X LA    5,BKP2MEM
MOVEMBR3 MVC   0(8,2),0(5)               SAVE MEMBER IN TABLE
         LA    2,8(,2)                   POINT TO NEXT
         LA    5,8(,5)                       "
         LA    3,1(,3)                   INCR COUNTER
         S     4,=F'8'                   REMAINING COUNTER
         BH    MOVEMBR3                  PROCESS NEXT MEMBER
         B     NEXTREC3                  READ NEXT REC
GETFIN3  ST    2,MBRTBEND                END OF TABLE
         LTR   3,3                       # OF MEMBERS
         BZ    NOMBR3                    NO MEMBERS FOUND
*  SORT THE TABLE BY MEMBER NAME
         L     8,MBRTBADR                ADDRESS OF TABLE
         LR    6,3                       COUNT
         C     6,=F'1'                   COUNT = 1
         BNH   SORT43                    NO SORTING NEEDED
         BCTR  6,0                       REDUCE BY 1
SORT13   LA    7,8(8)                    NEXT ENTRY AFTER TOP
         LR    5,6                       LOOP COUNT
SORT23   CLC   0(8,8),0(7)               COMPARE TWO ENTRIES
         BNH   SORT33                    IN ORDER
         MVC   TEMP,0(8)                 SAVE FIRST
         MVC   0(8,8),0(7)               MOVE SECOND TO FIRST
         MVC   0(8,7),TEMP               SWAP OVER
SORT33   LA    7,8(7)                    POINT TO NEXT
         BCT   5,SORT23                  LOOP TILL END
         LA    8,8(8)                    INCREMENT ADDRESS
         BCT   6,SORT13                  REPEAT OUTER LOOP
SORT43   L     2,MBRTBADR
         ST    2,CURPAGA                 CURRENT PAGE ADDRESS
         LA    8,1                       PAGE NUMBER
FILPAGE3 CVD   8,DWORD                   DECIMAL
         UNPK  SCRPGN3(3),DWORD(8)       ZONE
         OI    SCRPGN3+2,X'F0'           DISPLAY
         INITSCRN                        CLEAR SCREEN
         MVC   PDSDETL(80),SCRHDR31      SCREEN HEADER
         L     2,CURPAGA                 ADDR OF CURRENT PAGE
         LA    4,PDSDETL+160
         LA    6,15                      # OF LINES PER PAGE
FILLINE3 LA    5,8                       # OF MEMBERS PER LINE
FIL3X    MVC   0(8,4),0(2)               MOVE MEMBER NAME
         LA    4,10(,4)                  POINT TO NEXT
         LA    2,8(,2)
         C     2,MBRTBEND                END OF TABLE REACHED
         BE    PAGEFIN3                  PAGE FINISHED
         BCT   5,FIL3X                   NEXT MEMBER
         BCT   6,FILLINE3                FILL NEXT LINE
PAGEFIN3 PUTGET
         CLI   INPUT,PF7                 IF PF7
         BE    PREVPG3                   PREVIOUS PAGE
         CLI   INPUT,PF8                 IF PF8
         BE    NEXTPG3                   NEXT PAGE
         LA    2,INPUT+3                 POINT TO FIRST FIELD
         MVC   OLDVER,PDSVER1            SAVE OLD VERSION
         MVC   OLDMBR,@SPACES            SAVE OLD MEMBER
         B     NXTFELD                   PROCESS NEXT FIELD
NEXTPG3  L     2,CURPAGA                 ADDRESS OF CURRENT PAGE
         A     2,=F'960'                 ADD PAGE LEN
         C     2,MBRTBEND                BEYOND END
         BNL   LASTPG3                   LAST PAGE MESSAGE
         ST    2,CURPAGA                 CURRENT PAGE ADDRESS
         LA    8,1(,8)                   INCR PAGE NUMBER
         B     FILPAGE3                  FILL PAGE
LASTPG3  MVC   PDSMSG1,ERRMSG6           LAST PAGE MESSAGE
         B     PAGEFIN3                  DISPLAY
PREVPG3  L     2,CURPAGA                 ADDRESS OF CURRENT PAGE
         S     2,=F'960'                 LESS BY PAGE SIZE
         C     2,MBRTBADR                BELOW STARTING
         BL    FIRSTPG3                  THEN MESSAGE
         ST    2,CURPAGA                 SAVE CURRENT PAGE ADDRESS
         BCTR  8,0                       DECR PAGE NUMBER
         B     FILPAGE3                  FILL PAGE
FIRSTPG3 MVC   PDSMSG1,ERRMSG7           FIRST PAGE MESSAGE
         B     PAGEFIN3                  DISPLAY
NOMBR3   MVC   PDSMSG1,ERRMSG9           NO MEMBER MESSAGE
         INITSCRN                        INIT SCREEN
         B     DSPSCRN                   DISPLAY
*  ERROR HANDLING
OPENERR  TPUT  @CLEAR,L'@CLEAR,FULLSCR   CLEAR SCREEN
         TPUT  ERRMSG3,L'ERRMSG3         WRITE MESSAGE
         B     PROGEND                   TERMINATE
ERR1     MVC   PDSMSG1,ERRMSG1           PDS NAME NOT ENTERED
         B     DSPSCRN                   TRY AGAIN
ERR2     MVC   PDSMSG1,ERRMSG2           MEMBER & VER ENTERED
         B     DSPSCRN                   TRY AGAIN
DUPERR   MVC   PDSMSG1,ERRMSG4           DUPLICATE DATASET
         MVC   PDSVOL1,@SPACES           INIT VOLUME
         B     DSPSCRN                   TRY AGAIN
NOTFOUND MVC   PDSMSG1,ERRMSG5           NO DATASET INFO FOUND
         INITSCRN
         B     DSPSCRN                   TRY AGAIN
* TERMINATE PROGRAM
TERMIN   TCLEARQ
         TPUT  @CLEAR,L'@CLEAR,FULLSCR   CLEAR SCREEN
         TPUT  END,L'END                 TERMINATE PROGRAM
PROGEND  L     13,4(13)                  GET OLD SAVE AREA ADDRESS
         RETURN (14,12),RC=0             RETURN
         LTORG                           LITERALS
SAVEAREA DS    18F                       REGISTER SAVE AREA
* SCREEN LAYOUT
SCREEN1  DC    X'C2114040',X'1D60'
         DC    CL30' ',C'PDS BACKUP DIRECTORY'
         DC    X'114151',X'1DE8',C'PDS     :'
         DC    X'11415C',X'1D40'
PDSNAME1 DC    CL44' '                   PDS NAME
         DC    X'114249',X'1D60',C' '
         DC    X'11424B',X'1DE8',C'MEMBER  :'
         DC    X'114255',X'1D40'
PDSMBR1  DC    CL8' '                    MEMBER NAME
         DC    X'11425E',X'1D60',C' '
         DC    X'114261',X'1DE8',C'VOLUME  :'
         DC    X'11426C',X'1D40'
PDSVOL1  DC    CL6' '                    VOLUME ID
         DC    X'114273',X'1D60',C' '
         DC    X'11435B',X'1DE8',C'VERSION :'
         DC    X'114365',X'1D40'
PDSVER1  DC    CL3' '                    VERSION
         DC    X'114369',X'1D60',C' '
         DC    X'114371',X'1D60',78C'-'
         DC    X'114541',X'1D60'
PDSDETL  DC    18CL80' '                 DETAIL LINE
         DC    X'115B61',X'1DE8'
PDSMSG1  DC    CL78' '                   ERROR MESSAGE
         DC    X'115C71',X'1D60'
         DC   CL78'PF3:EXIT  PF4:REFRESH  PF7:PREV PAGE  PF8:NEXT PAGE X
               ENTER:PROCESS'
CURSOR   DC    X'11415D13'               CURSOR POSITION
SLEN1    EQU   *-SCREEN1                 SCREEN LENGTH
SCRHDR11 DS    0CL80
         DC    CL30' ',CL50'BACKUP VERSIONS'
SCRHDR12 DC    CL80'No    Date    Ver'
SCRDET11 DS    0CL80
SCRSEQ1  DC    CL2' ',CL2' '
SCRDATE1 DC    CL8' ',CL2' '
SCRVER1  DC    CL3' ',CL63' '
SCRHDR31 DS    0CL80
         DC    CL30' ',CL36'PDS DIRECTORY'
         DC    CL9'PAGE NO:'
SCRPGN3  DC    CL5' '
SCRDET31 DS    0CL80
SCRMBR3  DC    8CL10' '
SCRHDR21 DS    0CL80
         DC    CL30' ',CL36'BACKUP VERSIONS FOR MEMBERS'
         DC    CL9'PAGE NO:'
SCRPGN2  DC    CL5' '
SCRDET21 DS    0CL80
SCRMBR2  DC    CL8' '
         DC    CL2' '
SCRVER2  DC    CL3' '
         DC    12CL5' '
         DC    CL7' '
@CLEAR   DC    X'C31140403C677F40'       CLEAR SCREEN COMMAND
INPUT    DC    CL100' '
@SPACES  DC    CL255' '
PROCFLAG DS    C                         PROCESSING OPTION
DWORD    DS    D
SIXBIT   DC    X'3F3F'
PDSADR   DC    X'011D'                   6-BIT PDSNAME ADDR
MBRADR   DC    X'0216'                   6-BIT MEMBER ADDRESS
VOLADR   DC    X'022D'                   6-BIT VOLUME ADDR
VERADR   DC    X'0326'                   6-BIT VERSION ADDR
CURPAGA  DS    F                         CURRENT PAGE ADDR
VERTBADR DS    F                         VER TABLE START ADDR
VERTBEND DS    F                         VER TABLE END ADDR
MBRTBADR DS    F                         MEMBER TABLE START ADDR
MBRTBEND DS    F                         MEMBER TABLE END ADDR
OLDVER   DC    CL3' '                    OLD VERSION
OLDMBR   DC    CL8' '                    OLD MBR NAME
TEMP     DC    CL8' '                    SORT FIELD
END      DC    C'BKUPLIST: PROGRAM TERMINATED'
ERRMSG1  DC    CL78' ENTER PDS NAME'
ERRMSG2  DC    CL78' ENTER MEMBER OR  VERSION .. NOT BOTH'
ERRMSG3  DC    CL78' VSAM DATASET OPEN ERROR .. PROGRAM TERMINATED'
ERRMSG4  DC    CL78' DUPLICATE DATASET EXISTS .. SPECIFY VOLUME   '
ERRMSG5  DC    CL78' NO BACKUP DIRECTORY FOR THIS DATASET'
ERRMSG6  DC    CL78' CURRENTLY ON LAST PAGE          '
ERRMSG7  DC    CL78' CURRENTLY ON FIRST PAGE         '
ERRMSG8  DC    CL78' NO MATCHING MEMBERS FOUND   '
ERRMSG9  DC    CL78' NO DIRECTORY INFORMATION FOR THIS VERSION'
BKUPACB  ACB   AM=VSAM,DDNAME=BKUPDIR,MACRF=(KEY,SEQ,DIR,IN)
BKUPRPL  RPL   ACB=BKUPACB,                                            X
               AREA=BKP2REC,                                           X
               AREALEN=893,                                            X
               RECLEN=BKP2RECL
BKP2REC  DS    0CL893                    BACKUP DIR RECORD
BKP2KEY  DS    0CL54                     RECORD KEY
BKP2DSN  DS    CL44                      DATASET NAME
BKP2VOL  DS    CL6                       DASD VOLUME
BKP2SEQ  DS    CL4                       RECORD SEQ NUMBER
BKP2VER  DS    13CL3                     VERSIONS
BKP2MEM  DS    100CL8                    MEMBER LIST
BKP2RECL DC    F'893'                    RECORD LENGTH
OLDREC   DS    CL210                     LAST HEADER RECORD
OLDKEY   DS    CL54                      KEY OF LAST RECORD
SPACE    EQU   C' '
ONE      EQU   C'1'
TWO      EQU   C'2'
THREE    EQU   C'3'
PA2      EQU   X'6E'                     PA2 ATTENTION KEY
PF3      EQU   X'F3'                     PF3
PF4      EQU   X'F4'                     PF4
PF5      EQU   X'F5'                     PF5
PF6      EQU   X'F6'                     PF6
PF7      EQU   X'F7'                     PF7
PF8      EQU   X'F8'                     PF8
SBA      EQU   X'11'                     SBA
PROATTR  EQU   X'60'                     PROTECT ATTRIBUTE
UNPATTR  EQU   X'40'                     UNPROTECT ATTRIBUTE
         END   BKUPLIST


M V George
Systems Programmer
Ministry of Interior (Qatar)

