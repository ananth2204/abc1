Obtaining SMS class names


PROBLEM

When SMS was implemented I discovered how good a tool it
was, with its management class constructs, to plan further
dataset management. I had a REXX EXEC that extracted
dataset names from different sources, eg from the JCL of on-
line applications. My task was to create a list of dataset names
and the SMS class names assigned to them. Unfortunately,
standard utilities such as ISMF, ISPF 3.4, or DCOLLECT
were not suitable for my purpose.


SOLUTION

A method using the IGWASMS callable service routine was
described in MVS Update, June 1992 issue. I adopted the basic
idea for my application. It was developed so that SMSCNSTA
stores class names into ISPF variables. This allows
SMSCNSTA to be used in many different applications in an
ISPF environment.


PROGRAM DESCRIPTION

There are four variables common to SMSCNSTA and its caller:

o      Dataset name (input parameter).

o      A field of 27 bytes, which contains the names of the data
      class, storage class, and management class if the
      IGWASMS call was successful.

o      An error message if the IGWASMS call was not
      successful.

o      Return code.

After normal housekeeping the variables which are common to
the caller and SMSCNSTA are defined via the VDEFINE ISPF
service. Using the VGET service, SMSCNSTA obtains the
dataset name as the input parameter. Some checks are made
and, when the program thinks that it has found a proper
DSNAME, it calls the IGWASMS callable service routine. The
call macro and its parameters are described as comment lines in
the program code.

SMSCNSTA inspects return and reason codes from
IGWASMS. If they are zeroes, SMS class names are copied
into the ISPF variables defined in the beginning of the
program: SMSCNSTA issues the VPUT ISPF service to do
that. Then it returns to the caller.

If the return and/or reason codes from IGWASMS indicate an
error, an error message as descriptive as possible is generated
and stored into an ISPF variable.

The most common error conditions should be:

o      DATASET NOT FOUND - dataset name was not found in
      the catalog.

o      DATASET NOT DFSMS MANAGED - self-explanatory.

o      UNABLE TO PROCESS REQUEST - generated from
      most other reason code/return code combinations. This
      situation is not very common and must be manually
      checked if encountered.


INSTALLATION

In my application I found it easiest to link edit SMSCNSTA,
IGWASMS, and ISPLINK together. If you do not like this
method, dynamic program control will do as well. Do the
modification if you wish. IGWASMS will be found in
SYS1.CSSLIB and ISPLINK in ISPF's load library. The name
of the library varies with the version of ISPF: it is generally in
the form ISP.VnRnMn.ISPLOAD with the ns representing the
version, release, and modification numbers of ISPF.

It is best to link edit the program into a load library which is in
the LINKLIST concatenation. If this is not possible, use a
library which is used as a STEPLIB in your TSO session.


SMSCNSTA SOURCE CODE

SMSCNSTA CSECT
SMSCNSTA AMODE 31
SMSCNSTA RMODE ANY
         SAVE  (14,12),,SMSCNSTA_&SYSDATE.&SYSTIME
         LR    R12,R15                 ESTABLISH BASE REG
         USING SMSCNSTA,R12
         ST    R13,SAVEAREA+4          STORE PRIOR SAVEAREA ADDRESS
         LA    R13,SAVEAREA            CURRENT SAVEAREA ADDRESS
         LA    R10,0                   INITIALIZE RETURN CODE
*---     INITIALIZE ISPF VARIABLES:
*    DSNAME, INPUT VARIABLE
         CALL  ISPLINK,(VDEFINE,NAMES,DSNAME,CHRCTR,LEN44),VL
*    SMS CLASSES, OUTPUT VARIABLE
         CALL  ISPLINK,(VDEFINE,PNAMES,CLASSES,CHRCTR,LEN9),VL
*    ERROR MESSAGE, OUTPUT VARIABLE
         CALL  ISPLINK,(VDEFINE,MNAMES,MSGS,CHRCTR,LEN72),VL
*    ERROR CODE, OUTPUT VARIABLE
         CALL  ISPLINK,(VDEFINE,RCODES,RCINFO,CHRCTR,LEN4),VL
*        ISSUE VGET FOR DSNAME
         CALL  ISPLINK,(VGET,NAMES,SHARED),VL
         MVI   MSGS,C' '               INITIALIZE MSG AREA
         MVC   MSGS+1(L'MSGS-1),MSGS
         LTR   R15,R15                 CHECK RETURN CODE FROM ISPLINK
         BZ    ISPOKAY                 CONTINUE IF ZERO
*        TO GET DSNAME AS A PARAMETER FAILED
NOTAKAY  DS    0H
         LR    R10,R15                 RETURN CODE
         LA    R1,IMSG1                ADDRESS OF ERROR MESSAGE
         LA    R2,LIMSG1               LENGTH OF MESSAGE
         BCTR  R2,0                    -1 FOR MOVE
         EX    R2,MSGMOVE
         B     ERRET
*        GET LENGTH OF DSNAME
ISPOKAY  DS    0H
         LA    R3,DSNAME               ADDRESS OF DSNAME
         LA    R4,0                    COUNTER
         LA    R5,44                   LOOP COUNTER
*        LOOP ALLOWS ADDITIONAL CHECKS WHEN PROCESSING DSNAME
NAMELOOP DS    0H
         CLI   0(R3),C' '              END OF DSNAME ?
         BE    NAMEEND                 YEEEEEEEEES !
         LA    R3,1(,R3)               NEXT BYTE
         LA    R4,1(,R4)
         BCT   R5,NAMELOOP
         LA    R10,4                   INDICATE SOME ERROR
         LA    R1,IMSG4                ADDRESS OF ERROR MESSAGE
         LA    R2,LIMSG4               LENGTH OF MESSAGE
         BCTR  R2,0                    -1 FOR MOVE
         EX    R2,MSGMOVE
         B     ERRET
*        DSNAME IS FOUND AND ITS LENGTH IS KNOWN
*        MOVE DSNAME TO WORKAREA
NAMEEND  DS    0H
         LA    R3,DSNAME
         BCTR  R4,0                    SUBTRACT FOR DSNAME MOVE
         EX    R4,MOVEDSN              EXECUTE DSNAME MOVE
         OC    DSN,=44X'40'            FORCE UPPER CASE
* FOLLOWING IS THE CALL INTERFACE TO SMS CALLABLE SERVICES
         CALL  IGWASMS,(RETC,RS,PROB,DSNLEN,DSN,SMSDATA,DSTYPE)
*                       |    |  |    |      |   |       |
*                       |    |  |    |      |   |       - PDSE
*                       |    |  |    |      |   |         INDICATOR
*                       |    |  |    |      |   |
*                       |    |  |    |      |   - SMS CLASS NAMES
*                       |    |  |    |      |
*                       |    |  |    |      - DSNAME TO PROCESS
*                       |    |  |    |
*                       |    |  |    - LENGTH OF DATASET NAME
*                       |    |  |
*                       |    |  - IGWASMS PROBLEM CODE
*                       |    |
*                       |    - IGWASMS REASON CODE
*                       |
*                       - IGWASMS RETURN CODE
         L     R10,RETC
         CLC   RETC,=F'0'              RETURN CODE 0 ?
         BE    CHKRC0                  YES, GO TO CHECK REASON 0
         CLC   RETC,=F'8'              RETURN CODE 8 ?
         BE    CHKRC8                  YES, GO TO CHECK REASON 8
         CLC   RETC,=F'12'             RETURN CODE 12 ?
         BE    CHKRC12                 YES, GO TO CHECK REASON 12
*        DISPLAY SOME UNEXPECTED ERRORS FOUND
DISPMSG4 DS    0H
         LA    R10,4                   INDICATE SOME ERROR
         LA    R1,MSG4                 ADDRESS OF ERROR MESSAGE
         LA    R2,LMSG4                ITS LENGTH
         BCTR  R2,0                    -1 FOR MOVE
         EX    R2,MSGMOVE
         B     ERRET
*        PROCESS RC 0 FROM IGWASMS
CHKRC0   DS    0H
         CLC   RS,=F'0'                REASON CODE 0 ?
         BNE   DISPMSG4                NO, UNEXPECTED
*        SUCCESSFUL EXECUTION, MOVE SMS NAMES INTO VARIABLES
         MVC   MSG3STOR(8),SMSDATA     MOVE STORAGE CLASS
         CLC   MSG3STOR(8),BLANKS      IS STORAGE CLASS BLANKS ?
         BE    DISPMSG2                YES, NOT MANAGED
         MVC   MSG3MGMT(8),SMSDATA+30  MOVE MANAGEMENT CLASS
         MVC   MSG3DATA(8),SMSDATA+60  MOVE DATA CLASS
         MVC   MSG3PDSE(4),BLANKS      ASSUME NOT PDSE
         CLC   DSTYPE,=F'1'            IS THIS A PDSE ?
         BNE   DISPMSG3                NO, SKIP MOVE
         MVC   MSG3PDSE(4),=C'PDSE'    INDICATE PDSE
DISPMSG3 DS    0H
         MVC   CLSS1,MSG3STOR
         MVC   CLSS2,MSG3MGMT
         MVC   CLSS3,MSG3DATA
*---     ISSUE ISPLINK TO VPUT SMS NAMES INTO SHARED POOL
         CALL  ISPLINK,(VPUT,PNAMES,SHARED),VL
         B     RETURN
*---     PROCESS RC 8 FROM IGWASMS
CHKRC8   DS    0H
         CLC   RS,=F'32'               REASON CODE 32 ?
         BNE   DISPMSG4                NO, UNEXPECTED
DISPMSG2 DS    0H
         LA    R10,4                   INDICATE SOME ERROR
         LA    R1,MSG2                 ADDRESS OF ERROR MESSAGE
         LA    R2,LMSG2                LENGTH OF MESSAGE
         BCTR  R2,0                    -1 FOR MOVE
         EX    R2,MSGMOVE
         B     ERRET
*        PROCESS RC 12 FROM IGWASMS
CHKRC12  DS    0H
         CLC   RS,=F'12'               REASON CODE 12 ?
         BNE   DISPMSG4                NO, UNEXPECTED
         LA    R10,4                   INDICATE SOME ERROR
         LA    R1,MSG1                 ADDRESS OF ERROR MESSAGE
         LA    R2,LMSG1                LENGTH OF MESSAGE
         BCTR  R2,0                    -1 FOR MOVE
         EX    R2,MSGMOVE
         B     ERRET
*        RETURN TO CALLER
RETURN   DS    0H
         CVD   R10,DOUBLE              RETURN CODE TO DECIMAL
         OI    DOUBLE+7,15
         UNPK  RCINFO,DOUBLE
*        ISSUE ISPLINK TO VPUT RETURN INFORMATION INTO SHARED POOL
         CALL  ISPLINK,(VPUT,RCODES,SHARED),VL
         L     R13,4(,R13)             ADDRESS OF PRIOR SAVEAREA
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         LA    R15,0                   SET RC
         BR    R14                     RETURN CONTROL
ERRET    DS    0H
*        ISSUE ISPLINK TO VPUT ERROR INFORMATION INTO SHARED POOL
         CALL  ISPLINK,(VPUT,MNAMES,SHARED),VL
         B     RETURN
MOVEDSN  MVC   DSN(0),0(R3)            SAVE DATASET NAME
MSGMOVE  MVC   MSGS(0),0(R1)           MOVE ERROR MESSAGE
DOUBLE   DS    D
SAVEAREA DC    18F'0'
RETC     DC    F'0'                    IGWASMS RETURN CODE
RS       DC    F'0'                    IGWASMS REASON CODE
PROB     DC    2F'0'                   IGWASMS PROBLEM CODE
DSTYPE   DC    F'0'                    PDSE INDICATOR
NOLLA    DC    F'0'                    PDSE INDICATOR
BLANKS   DC    CL8' '
DSNLEN   DC    F'44'                   LENGTH OF DATASET NAME
DSN      DC    CL44' '                 DATASET NAME
LDSN     EQU   *-DSN                   LENGTH FOR TPUT
SMSDATA  DC    3CL30' '                SMSDATA RETURNED BY IGWASMS
*-----------------------------------------------------------------
NAMES    DC    C'(DSNAME)'             VDEFINE DSNAME
DSNAME   DC    CL44' '
CHRCTR   DC    C'CHAR'
LEN44    DC    F'44'
*-----------------------------------------------------------------
PNAMES   DC    C'(CLAS1 CLAS2 CLAS3)'  VDEFINE SMS CLASSES
CLASSES  DC    3CL9' '
         ORG   CLASSES
CLSS1    DS    CL8
         DS    C
CLSS2    DS    CL8
         DS    C
CLSS3    DS    CL8
         DS    C
         ORG
         DC    C'CHAR'
LEN9     DC    F'9'
*------------------------------------------------------------------
MNAMES   DC    C'(RMSG)'                VDEFINE ERROR MESSAGES
MSGS     DC    CL72' '
         DC    C'CHAR'
LEN72    DC    F'72'
*------------------------------------------------------------------
RCODES   DC    C'(RCODE)'               VDEFINE RETURN CODE
RCINFO   DC    CL4' '
         DC    C'CHAR'
LEN4     DC    F'4'
*------------------------------------------------------------------
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEFINE  DC    CL8'VDEFINE'
SHARED   DC    C'SHARED'
*---------- M E S S A G E S ---------------------------------------
MSG1     DC    C'DATASET NOT FOUND'
LMSG1    EQU   *-MSG1                   LENGTH OF MSG1
MSG2     DC    C'DATASET NOT DFSMS MANAGED'
LMSG2    EQU   *-MSG2                   LENGTH OF MSG2
MSG3     DS    0F
         DC    C'STORCLAS: '
MSG3STOR DC    CL8' '
         DC    C'MGMTCLAS: '
MSG3MGMT DC    CL8' '
         DC    C'DATACLAS: '
MSG3DATA DC    CL8' '
         DC    CL2' '
MSG3PDSE DC    CL4' '
LMSG3    EQU   *-MSG3                   LENGTH OF MSG3
MSG4     DC    C' UNABLE TO PROCESS REQUEST'
LMSG4    EQU   *-MSG4                   LENGTH FOR MSG4
IMSG1    DC    C'VGET FAILED'
LIMSG1   EQU   *-IMSG1                  LENGTH OF IMSG1
IMSG4    DC    C'DSNAME TOO LONG'
LIMSG4   EQU   *-IMSG4                  LENGTH OF IMSG4
         END


REXX EXEC EXAMPLE

The following example illustrates how to call SMSCNSTA.
The REXX EXEC can be used as a line command in the ISMF
dataset name utility of ISPF 3.4 to show the SMS class names
of a dataset.

/* REXX */
/**********************************************************************/
/*      THIS IS AN EXAMPLE OF HOW TO GET THE NAMES OF THE SMS         */
/*      CONSTRUCTS FOR THE DATASET DIRECTLY AS A LINE COMMAND IN THE  */
/*      PDF'S DATASET LIST DISPLAY.                                   */
/**********************************************************************/
ARG ARGMT .                    /* DATASET NAME IS THE ONLY ARGUMENT   */
/**********************************************************************/
/*      INITIALIZE VARIABLES                                          */
/**********************************************************************/
CLAS1 = ""
CLAS2 = ""
CLAS3 = ""
RMSG = ""
RCODE = ""
DSNAME = ARGMT
/**********************************************************************/
/*      IF SMSCNSTR IS CALLED AS A LINE COMMAND FROM DATASET LIST     */
/*      DISPLAYS THE DATASET NAME IS ENCLOSED IN QUOTES.              */
/**********************************************************************/
IF SUBSTR(DSNAME,1,1) = "'" THEN
  DO
  ARGLEN = LENGTH(DSNAME)
  DSNAME = SUBSTR(DSNAME,2,ARGLEN-2)
  END
/**********************************************************************/
/*      DISPLAY DATASET NAME                                          */
/**********************************************************************/
SAY "SMSCNSTR: DATASET "DSNAME
/**********************************************************************/
/*      INITIALIZE VARIABLES IN SHARED POOL                           */
/**********************************************************************/
ADDRESS ISPEXEC "VPUT (DSNAME CLAS1 CLAS2 CLAS3 RMSG RCODE) SHARED"
IF RC ¬= 0 THEN
  DO
  SAY "SMSCNSTR ***** VPUT FAILED, RC="RC
  END
/**********************************************************************/
/*      AND CALL SMSCNSTA PROGRAM                                     */
/**********************************************************************/
ADDRESS ISPEXEC "SELECT PGM(SMSCNSTA)"
IF RC ¬= 0 THEN
  DO
  SAY "SMSCNSTR ***** CALLING SMSCONSTA PROGRAM FAILED, RC="RC
  END
/**********************************************************************/
/*      GET RETURN CODE AND RETURN MESSAGE VARIABLES ISSUED BY        */
/*      SMSCNSTA PROGRAM FROM SHARED POOL                             */
/**********************************************************************/
ADDRESS ISPEXEC "VGET (RCODE RMSG) SHARED"
IF RC ¬= 0 THEN
  DO
  SAY "SMSCNSTR ***** VGET OF RETURN CODE FAILED, RC="RC
  END
/**********************************************************************/
/*      IF RETURN CODE FROM SMSCNSTA IS NOT ZERO, DISPLAY ERROR CODE  */
/*      AND ERROR MESSAGE SET BY SMSCNSTA                             */
/**********************************************************************/
IF RCODE ¬= "0000" THEN
  DO
  SAY "SMSCNSTR ***** RETURN CODE FROM SMSCONSTA IS "RCODE
  SAY "SMSCNSTR "RMSG
  EXIT
  END
/**********************************************************************/
/*      IF RETURN CODE FROM SMSCNSTA ZERO GET SMS CONSTRUCT NAMES     */
/*      FROM SHARED POOL AND DISPLAY THEM                             */
/**********************************************************************/
ADDRESS ISPEXEC "VGET (CLAS1 CLAS2 CLAS3) SHARED"
IF RC ¬= 0 THEN
  DO
  SAY "SMSCNSTR ***** VGET OF CLASS NAME PARAMETERS FAILED, RC="RC
  END
ELSE
  DO
  SAY "      DATA CLASS="CLAS3
  SAY "   STORAGE CLASS="CLAS1
  SAY "MANAGEMENT CLASS="CLAS2
  END


Space Manager (Finland)                                          c Xephon 1993

