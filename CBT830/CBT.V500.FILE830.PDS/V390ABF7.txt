NEWSSCVT modifications

I have been watching with interest the development of the
NEWSSCVT program from Issues 35 and 50 of MVS Update.
I found it most helpful but have a couple of suggestions.

Firstly, I believe the change to use a CS instruction instead of
the STORE is warranted but question the implementation.
Because register 14 is used to address the SSCT, if it is loaded
with zero (using the ICM instruction), the CS will abend with
an 0C4 when it tries to use the SSCTSCTA.  To use a CS
instruction, the register used to address the SSCT should not be
used as part of the compare.

Secondly, I found it most useful to add some code to print the
SSCT chain to help understand what entries already exist.
Also, I ensure that the subsystem name being set up is not four
spaces (X'40404040') and also add a check to ensure that the
subsystem name we are about to add has not been added since
we first checked the SSCVT chain.  This is especially
important now when using the CS instruction as this
enhancement does give the program the chance to update a
chain that has been updated since the program began.

The code to print the SSCVT chain entries shows the
subsystem name and the address of the next SSCVT entry.
Therefore the last entry should show an address of 00000000,
indicating the end of the chain.  The print routine is not very
elaborate but has worked successfully during all my testing,
which was verified using TSO TEST.  The print routine is
called when all other activities are complete whether an entry
has been added or not.  This is helpful if you try to add an
entry that already exists.  I would imagine that the print routine
could show extra entries after the one that has just been added
as it re-checks the entire SSCVT chain.  The print routine
assumes that the subsystem name is four alphanumeric
characters, but we have found several entries that do not fit this
criterion.

In summary, I found this program to be very useful as well as
informative.  I was very surprised to find many more entries
than I had expected on this list from software I didn't know
used this facility.  I have included a full copy of the source of
the program I am currently using to update the SSCVT chain.
I apologise for changing many of the labels but this is a
standard technique that I try to maintain.

         TITLE 'NEWSSCVT - CREATE A SSCVT WITHOUT AN IPL'
* THIS PROGRAM WAS COPIED FROM ISSUE 35 OF THE MVS UPDATE MAGAZINE.  *
* ITS PURPOSE IS TO CREATE A SUBSYSTEM COMMUNICATION VECTOR TABLE    *
* WITHOUT HAVING TO IPL MVS. IT PERFORMS THE SAME TASK AS CREATING   *
* AN IEFSSNXX MEMBER ENTRY AND IPL'ING MVS.                          *
* JCL TO RUN THIS PROGRAM IS:                                        *
* //STEP010 EXEC PGM=NEWSSCVT,PARM='XXXX'  WHERE XXXX = 4 CHAR       *
* //SYSPRINT  DD SYSOUT=*                  SUBSYSTEM NAME            *
NEWSSCVT CSECT SCD
         $REGS
         USING NEWSSCVT,R12                 ADDRESSABILITY TO BASE R12
         STM   R14,R12,12(R13)              SAVE REGS
         LR    R12,R15                      SET UP ADDRESSABILITY
         LA    R11,SAVEAREA                 GET ADDRESS OF SAVEAREA
         ST    R13,4(,R11)                  CHAIN SAVE AREAS
         ST    R11,8(,R13)
         LR    R13,R11                      NEW SAVE AREA
         B     A010                         BRANCH AROUND EYE-CATCHER
         DC    C'NEWSSCVT - CREATE SSCVT DYNAMICALLY. '
         DC    C' ASSEMBLE DATE= '
         DC    CL8'&SYSDATE'
         DC    C' ASSEMBLE TIME= '
         DC    CL8'&SYSTIME'
*        GET ADDRESSABILITY TO MAJOR CONTROL BLOCKS
A010     L     R2,CVTPTR                    GET THE CVT ADDRESS
         USING CVTMAP,R2                    ADDRESS THE CVT
         L     R7,CVTJESCT                  GET ADDRESS OF JESCT
         USING JESCT,R7                     ADDRESS THE JESCT
         L     R3,JESSSCT                   GET ADDRESS OF JESSSCT
         USING SSCT,R3                      ADDRESS THE SSCVT
*        BEGIN PROCESSING - CHECK PARAMETERS
A020     L     R5,0(R1)                     GET ADDR OF PARM LENGTH
         LH    R4,0(R5)                     GET PARM LENGTH
         C     R4,=F'4'                     IS PARM LENGTH = 4 ?
         BNE   R094                         NO, SO SET RC = 4 AND EXIT
         CLC   2(4,R5),=CL4' '              IS THE SSCVT NAME SPACES ?
         BE    R094                         YES, SO SET RC = 4 AND EXIT
         MVC   SSYSNAME(4),2(R5)            MOVE IN THE SUBSYS NAME
         OC    SSYSNAME(4),=CL4' '          FORCE IT TO UPPERCASE
*        FIND OUT IF SSCVT ALREADY EXISTS
A030     CLC   SSCTSNAM,SSYSNAME            DOES THIS SSCVT EXIST ?
         BE    R098                         YES, SO SAY SO AND EXIT
         CLC   SSCTSCTA,=F'0'               DOES NEXT SSCVT EXIST ?
         BE    A040                         NO, SO NOT FOUND..BUILD ONE
         L     R3,SSCTSCTA                  GET ADDRESS OF NEXT SSCVT
         B     A030                         LOOP UNTIL EXHAUSTED
         DROP  R3
*        BUILD A SSCVT
A040     MODESET MODE=SUP
         MODESET EXTKEY=ZERO,SAVEKEY=(2),WORKREG=(2)     ENTER KEY ZERO
         GETMAIN RC,LV=SSCTSIZE,SP=241,RELATED='G-SSCT'  GET SSCT
         LTR   R15,R15                      GETMAIN OKAY ?
         BNZ   R999                         OOPS, CAN'T BUILD, SO ABEND
         USING SSCT,R1                      ADDRESS NEW SSCVT
         XC    SSCTID(SSCTSIZE),SSCTID      ZERO STORAGE
         MVC   SSCTID(4),=C'SSCT'           PUT IN EYE-CATCHER ID
         MVC   SSCTSNAM(4),SSYSNAME         PUT IN SUBSYSTEM ID
         DROP  R1
*        RE-SEARCH SSCVT LIST IN CASE THINGS HAVE CHANGED
A050     L     R3,JESSSCT                   GET THE SSCVT ADDRESS
         USING SSCT,R3                      ADDRESS THE SSCVT
*        LOOP FOR SSCVT NAME
A060     CLC   SSCTSNAM(4),SSYSNAME         DOES THIS SSCVT EXIST ?
         BE    R098                         YES, SO SAY SO AND EXIT
         ICM   R6,15,SSCTSCTA               LOAD NEXT SSCVT ADDR
         BZ    A070                         IS ZERO SO TRY THE INSERT
         LR    R3,R6                        NOT ZERO, SO ADDRESS
         B     A060                         CONTINUE SEARCH
*        NO SSCVT FOUND - SO BUILD ONE
A070     CS    R6,R1,SSCTSCTA               STORE NEW SSCVT ADDR
         BC    4,A050                       IF CC = 4, CS FAILED,
*                                           SSCTSCTA NOT ZERO ANYMORE
         MODESET KEYADDR=(2)
         MODESET MODE=PROB                  GO BACK TO PROBLEM STATE
*        GET OUT - RETURN CODE = 0
R090     BAS   R14,R500                     PRINT THE SSCVT CHAIN
         SR    R15,R15                      LOAD RETURN CODE = 0
         B     R900                         EXIT
*        GET OUT - RETURN CODE = 4 - PARAMETER INVALID
R094     BAS   R14,R500                     PRINT THE SSCVT CHAIN
         L     R15,=F'4'                    LOAD RETURN CODE = 4
         B     R900                         EXIT
*        GET OUT - RETURN CODE = 8 - SSCVT ALREADY EXISTS
R098     BAS   R14,R500                     PRINT THE SSCVT CHAIN
         L     R15,=F'8'                    LOAD RETURN CODE = 8
         B     R900                         EXIT
*        PRINT THE ENTIRE SSCVT CHAIN ENTRIES
R500SAV  DC    F'0'
R500     DS    0H
         ST    R14,R500SAV                  STORE RETURN ADDRESS
         L     R3,JESSSCT                   GET THE SSCVT START ADDR
         USING SSCT,R3                      ADDRESS THE SSCVT
         OPEN  (SYSPRINT,(OUTPUT))          OPEN THE SYSPRINT DATASET
         MVI   ENDFLAG,X'00'                CLEAR END INDICATOR
         MVC   PAGECNT(4),=F'0'             ZEROISE PAGE COUNTER
*        NEW PAGE
R510     L     R4,PAGECNT                   GET CURRENT PAGECNT
         LA    R4,1(R4)                     INCREMENT BY ONE
         ST    R4,PAGECNT                   STORE IT
         CVD   R4,PAGEDEC                   CONVERT PAGECNT TO DECIMAL
         MVC   PAGENO(8),=X'2020202020212020'
         ED    PAGENO(8),PAGEDEC+4          PUT IN THE PAGE NUMBER
         LA    R4,7                         LOAD SEVEN INTO R4
         ST    R4,LINECNT                   INITIALIZE LINE COUNTER
         DTIME DATE2                        MOVE DATE AND TIME
         PUT   SYSPRINT,TOP                 MOVE TO TOP OF PAGE
         PUT   SYSPRINT,SPACELIN            SKIP 3 LINES
         PUT   SYSPRINT,HDLIN1              PRINT HEADING
         PUT   SYSPRINT,SPACELIN            SKIP 3 MORE LINES
*        LOOP THROUGH SSCVT CHAIN
R520     CLC   SSCTSCTA,=F'0'               DOES NEXT SSCVT EXIST ?
         BNE   R522                         YES, SO PRINT IT
         MVI   ENDFLAG,X'FF'                NO, SO SET FLAG TO END
*        PRINT THIS SSCVT ENTRY
R522     MVC   SSCVTNM(4),SSCTSNAM          MOVE SUBSYS NAME TO PRINT
         LA    R4,0                         CLEAR R4
         L     R5,SSCTSCTA                  GET ADDR OF NEXT SSCVT
         LA    R6,NXTSSCVT                  GET ADDR OF OUTPUT AREA
         LA    R7,8                         LOAD BYTE COUNTER
R525     SLDL  R4,4(0)                      SHIFT 4 BITS FROM R5 TO R4
         CL    R4,NUMERIC                   IS THIS > 9 ?
         BH    R530                         YES, SO ADD TO MAKE EBCDIC
         A     R4,=F'240'                   NO, SO ADD TO MAKE EBCDIC
         B     R535                         SKIP NEXT ADD
R530     A     R4,=F'183'                   ADD X'B7' TO MAKE EBCDIC
R535     STCM  R4,1,0(R6)                   STORE THE BYTE
         LA    R6,1(R6)                     INCREMENT BYTE POSITION
         LA    R4,0                         CLEAR R4
         BCT   R7,R525                      LOOP
         PUT   SYSPRINT,DETAILIN            PRINT THE LINE
         CLI   ENDFLAG,X'FF'                FINISHED ?
         BE    R590                         YES, SO END !!
         MVC   SSCVTNM(10),FILL1            NO, SO CLEAR SSCVTNAME
         MVC   NXTSSCVT(10),FILL1           CLEAR NEXT SSCVT ADDR
         L     R3,SSCTSCTA                  GET ADDRESS OF NEXT SSCVT
         L     R4,LINECNT                   GET CURRENT LINE CNT
         LA    R4,1(R4)                     INCREMENT BY ONE
         ST    R4,LINECNT                   SAVE NEW LINE CNT
         CLC   LINECNT(4),MAXLIN            OVER MAX LINE COUNT ?
         BNL   R510                         YES, SO GO TO NEW PAGE
         B     R520                         NO, SO JUST LOOP
*        FINISHED PRINTING SSCVT LIST
R590     CLOSE SYSPRINT                     CLOSE THE SYSPRINT DATASET
         L     R14,R500SAV                  RELOAD THE RETURN ADDR
         BR    R14
*        GET OUT
R900     L     R13,4(,R13)                  GET OLD SAVE AREA ADDRESS
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14                          AND RETURN
*        OOPS - ABEND
R999     ABEND 999,DUMP                     BIG PROBLEMS - ABEND
*        CONSTANTS, DATA ETC.
         DS    0F
SAVEAREA DS    18F                          SAVE AREA
SSYSNAME DC    CL4' '
PAGECNT  DC    F'0'
PAGEDEC  DC    D'0'
LINECNT  DC    F'0'
MAXLIN   DC    F'55'
OUTLINE  DC    CL133' '
TOP      DC    CL133'1'
SPACELIN DC    CL133'-'
HDLIN1   DC    CL38'          SSCVT LIST PROGRAM     '
DATE2    DC    CL22' '
PAGEHD   DC    CL14'    PAGE NO : '
PAGENO   DC    CL59' '
DETAILIN DC    CL10' '
SSCVTNM  DC    CL10' '
NXTSSCVT DC    CL10' '
FILL1    DC    CL103' '
NUMERIC  DC    F'9'
ENDFLAG  DC    X'00'
SYSPRINT DCB DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133
         CVT   DSECT=YES
         IEFJESCT
         IEFJSCVT
         END


David McGeorge
Consultant Systems Programmer (Australia)       c David McGeorge 1991

