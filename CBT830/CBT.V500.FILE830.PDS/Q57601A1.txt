Automatic job submission with ISPF

One application for ISPF dialogs is the creation of JCL to be submitted
to batch.  In fact, the process is such that a generic dialog can be
written to build JCL from a caller-specified skeleton and submit the
tailored result.  This allows the user to write new dialogs by simply
defining the ISPF panel that sets any variables and the ISPF skeleton
that contains the JCL.

An example of this is shown below.  It is a dialog to add TSO users.  A
panel is displayed to allow the administrator to specify the user's
authority and characteristics.


THE PANEL

)ATTR
 ó TYPE(INPUT) PADC(_)
 @ TYPE(INPUT) INTENS(NON)
)BODY
%---------------------------------  NEWUSER  -----------------------
%COMMAND ===>_ZCMD
%
+   CATALOG PASSWORD ===>@CATPASS +
+
+   USERID           ===>óNEWUSER+
+
+   PASSWORD         ===>@PASSWORD+
+
+   LOGON PROC       ===>óLOGON   +
+
+   DESTINATION      ===>óDEST    +
+
+   PERFORM GROUP    ===>óZ  +
+
+   REGION SIZE:
+      DEFAULT SIZE: ===>óSIZE+
+      MAXIMUM SIZE: ===>óZ   +
+
+   SELECT AUTHORITIES REQUIRED:
+
+   óZ+ACCOUNT        óZ+OPERATOR       óZ+JCL            óZ+MOUNT
)INIT
 .ZVARS = '(PERFORM,MAXSIZE,ACCT,OPER,JCL,MOUNT)'
 &ACCT = &Z
 &OPER = &Z
 &JCL   = &Z
 &MOUNT = &Z
)REINIT
 &NEWUSER = &Z
 &ACCT    = &Z
 &OPER    = &Z
 &JCL     = &Z
 &MOUNT   = &Z
 .CURSOR  = NEWUSER
)PROC
VER (&CATPASS,NONBLANK)
VER (&NEWUSER,NONBLANK,NAME)
VER (&PASSWORD,NONBLANK)
VER (&LOGON,NAME)
VER (&DEST,NAME)
VER (&PERFORM,RANGE,1,255)
VER (&SIZE,RANGE,0,6144)
VER (&MAXSIZE,RANGE,0,6144)
VER (&ACCT,LIST,S)
VER (&OPER,LIST,S)
VER (&JCL,LIST,S)
VER (&MOUNT,LIST,S)
IF  (&ACCT ¬= &Z)
   &ACCT = 'ACCT'
IF  (&OPER ¬= &Z)
   &OPER = 'OPER'
IF  (&JCL  ¬= &Z)
   &JCL = 'JCL'
IF  (&MOUNT ¬= &Z)
   &MOUNT = 'MOUNT'
&GROUP = TRUNC (&NEWUSER,1)
VER (&GROUP,LIST,A,C,D,E,I,M,N,O,Q,S,T)
&VOLUME =   TRANS (&GROUP
                   A,'APPL01'
                   C,'SOFT01'
                   D,'APPL01'
                   E,'APPL01'
                   I,'SOFT01'
                   M,'SOFT01'
                   N,'SYS003'
                   O,'SYS003'
                   Q,'APPL01'
                   S,'SYS003'
                   T,'TECH01')
&CATALOG =  TRANS (&GROUP
                   A,'APPLTSO'
                   C,'SOFTTSO'
                   D,'APPLTSO'
                   E,'APPLTSO'
                   I,'SOFTTSO'
                   M,'SOFTTSO'
                   N,'SYSTSO'
                   O,'SYSTSO'
                   Q,'APPLTSO'
                   S,'SYSTSO'
                   T,'APPLTSO')
IF (&LOGON = &Z)
   &LOGON = TRANS (&GROUP
                   A,'APPLLOGN'
                   C,'APPLLOGN'
                   D,'APPLLOGN'
                   E,'APPLLOGN'
                   I,'APPLLOGN'
                   M,'APPLLOGN'
                   N,'APPLLOGN'
                   O,'APPLLOGN'
                   Q,'APPLLOGN'
                   S,'APPLLOGN'
                   T,'APPLLOGN')
 &JOBCLASS = '0'
 &ZSEL = 'PGM(BUILDJOB) PARM(USERADD)'
)END

The input is verified by ISPF as part of processing the panel, then control is
passed (by setting ISPF variable ZSEL) to the BUILDJOB program specifying the
name of the JCL skeleton.

)IM JOBCARD
)IM TSOBATCH
//GO.SYSTSIN DD   *
  ACCOUNT
  ADD (&NEWUSER &PASSWORD * &LOGON) +
<      SIZE(&SIZE) +      |      SIZE(2048) +>
<      MAXSIZE(&MAXSIZE) +|      NOLIM +>
<      DEST(&DEST) +      |>
<      PERFORM(&PERFORM) +|>
<      &ACCT  +           |      NOACCT +>
<      &JCL   +           |      NOJCL +>
<      &MOUNT +           |      NOMOUNT +>
<      &OPER  +           |      NOOPER +>
      UNIT(SYSDA)
  END
//GO.SYSUADS DD   DSN=SYS1.UADS,DISP=SHR
//GO.SYSLBC  DD   DSN=SYS1.BRODCAST,DISP=SHR
//*
)IM IDCAMS
  DEFINE   ALIAS (NAME(&NEWUSER)
                  RELATE(ICFCAT.&CATALOG))
                  CATALOG(MASTER.ICFCAT/&CATPASS)
//*
//PROFILE  EXEC PGM=IEFBR14
//ISPPROF  DD DSN=&NEWUSER..ISPPROF,DISP=(NEW,CATLG),
//         UNIT=SYSDA,VOL=SER=&VOLUME,SPACE=(TRK,(1,1,1)),
//         DCB=(RECFM=FB,BLKSIZE=23440,LRECL=80)

BUILDJOB uses ISPF file tailoring to process the JCL skeleton and ISPF edit
macros to submit the job.

BUILDJOB START 0                  ROUTINE TO BUILD AND SUBMIT A JOB
         RMODE ANY                CAN BE LOADED ANYWHERE
         AMODE ANY                NOT ADDRESS-MODE SENSITIVE
***********************************************************************
*        BUILDJOB ALLOCATES DD(ISPFILE) TO THE INTERNAL READER,
*        THEN TAILORS THE FILE USING THE NAME OF AN ISPF
*        SKELETON IT EXPECTS AS A PARAMETER.
***********************************************************************
ENTRYPNT EQU    0                 ENTRY POINT ADDRESS FROM LOAD MACRO
PARAMS   EQU    1                 PARAMETER POINTER
BALRETRN EQU   10                 RETURN FROM BAL INSTRUCTION
SKELPTR  EQU   11                 SKELETON POINTER
BASEREG  EQU   12                 BASE REGISTER
SAVEAREA EQU   13                 ADDRESS OF SAVE AREA
RC       EQU   15                 RETURN CODE
BUILDJOB CSECT
         USING BUILDJOB,15        TEMPORARY ADDRESSABILITY
         MODID ,                  IDENTIFY THE MODULE
         DROP  15
         STM   14,12,12(13)       SAVE CALLER'S REGISTERS
         L     11,0(,1)           POINTER TO SKELETON NAME
         LR    12,15              SET BASE REGISTER
         USING BUILDJOB,12        ESTABLISH ADDRESSABILITY
         CNOP  0,4
         BAL   1,*+76             BRANCH AROUND SAVE AREA
         DS    XL72               REGISTER SAVE AREA
         ST    13,4(,1)           BACKWARD POINTER
         ST    1,8(,13)           FORWARD POINTER
         LR    13,1               SET SAVE AREA POINTER
BUILD010 BAL   BALRETRN,BUILD100  ESTABLISH LINKAGE TO ISPF
         LTR   RC,RC              IF LOAD FAILED THEN
         BNZ   BUILDERR              RETURN TO CALLER
BUILD020 BAL   BALRETRN,BUILD200  TAILOR THE JCL
         LTR   RC,RC              IF TAILORING FAILED THEN
         BNZ   BUILDERR              RETURN TO CALLER
BUILD030 BAL   BALRETRN,BUILD300  SUBMIT THE JOB
         LTR   RC,RC              IF SUBMIT WORKED THEN
         BZ    BUILDXIT              RETURN TO CALLER
BUILDERR DS    0H
         LA    RC,(BUILD020-BUILD010)(,BALRETRN)
         S     RC,=A(BUILD0l0)
         LA    RC-1,0
         D     RC-1,=A(BUILD020-BUILD010)
         SLL   RC,2               MAKE RETURN CODE A MULTIPLE OF 4
BUILDXIT DS    0H
         L     1,4(,13)           BACKWARD POINTER
         XC    4(4,13),4(13)      CLEAR BACKWARD POINTER
         XC    8(4,1),8(1)        CLEAR FORWARD POINTER
         LR    13,1               RESTORE SAVE AREA POINTER
         L     14,12(13)          RESTORE RETURN ADDRESS
         LM    0,12,20(13)        RESTORE CALLER'S REGISTERS
         BR    14                 RETURN
BUILD100 DS    0H                 ESTABLISH LINKAGE TO ISPF
         LOAD  EP=ISPLINK         GET ISPF SERVICE ROUTINE
         ST    ENTRYPNT,ISPLINK   COPY ENTRY POINT ADDRESS
         BR    BALRETRN           RETURN
BUILD200 DS    0H                 TAILOR THE JCL
         L     15,=F'-1'          SET RETURN CODE
         LTR   SKELPTR,SKELPTR    PASSED PARAMETER (SKELETON)
         BZR   BALRETRN           RETURN IF NONE
         LH    15,0(SKELPTR)      LENGTH OF PARAMETER
         CH    15,=Y(8)           IS PARAMETER TOO LONG?
         BHR   BALRETRN           RETURN IF IT IS
         BCTR  15,0               ADJUST TO ZERO ORIGIN LENGTH
BUILD220 EX    15,BLDMOVE         MOVE THE SKELETON
         L     15,ISPLINK         COPY ENTRY POINT ADDRESS
         CNOP  0,4
         BAL   PARAMS,BUILD240    SET THE PARAMETER POINTER
         DC    AL4(FTOPEN)        FTOPEN SERVICE
         DC    AL1(X'80')         LAST PARAMETER
         DC    AL3(TEMP)          USE A TEMPORARY FILE
BUILD240 BALR  14,15              CALL ISPLINK
         LTR   RC,RC              IF FTOPEN FAILED THEN
         BNZR  BALRETRN              RETURN TO MAIN ROUTINE
         L     15,ISPLINK         COPY ENTRY POINT ADDRESS
         CNOP  0,4
         BAL   PARAMS,BUILD260    SET THE PARAMETER POINTER
         DC    AL4(FTINCL)        FTINCL SERVICE
         DC    AL1(X'80')         LAST PARAMETER
         DC    AL3(SKELETON)      SKELETON NAME
BUILD260 BALR  14,15              CALL ISPLINK
         LTR   RC,RC              IF FTINCL FAILED THEN
         BNZR  BALRETRN              RETURN TO MAIN ROUTINE
         L     15,ISPLINK         COPY ENTRY POINT ADDRESS
         CNOP  0,4
         BAL   PARAMS,BUILD280    SET THE PARAMETER POINTER
         DC    AL1(X'80')         LAST PARAMETER
         DC    AL3(FTCLOSE)       FTCLOSE SERVICE
BUILD280 BALR  14,15              CALL ISPLINK
         BR    BALRETRN           RETURN
BLDMOVE  MVC   SKELETON(0),2(SKELPTR)
SKELETON DC    CL8' '
BUILD300 DS    0H                 SUBMIT THE JOB
         IDENTIFY EP=BUILD,ENTRY=BUILD400
         L     15,ISPLINK         COPY ENTRY POINT ADDRESS
         CNOP  0,4
         BAL   PARAMS,BUILD320    SET THE PARAMETER POINTER
         DC    AL4(VCOPY)         VCOPY SERVICE
         DC    AL4(ZTEMPN)        DDNAME FOR FILE TAILORING OUTPUT
         DC    AL4(LENGTH)        EIGHT-CHARACTER FIELD
         DC    AL4(BUILDDDN)      DDNAME TARGET FIELD
         DC    AL1(X'80')         LAST PARAMETER
         DC    AL3(LOCATE)        SKELETON NAME
BUILD320 BALR  14,15              CALL ISPLINK
         L     15,ISPLINK         COPY ENTRY POINT ADDRESS
         OI    BUILDDDN,X'80'     SET LAST PARAMETER FLAG
         CNOP  0,4
         BAL   PARAMS,BUILD340    SET THE PARAMETER POINTER
         DC    AL4(LMINIT)        LMINIT SERVICE
         DC    AL4(DATAID)        DATAID FOR FILE TAILORING OUTPUT
         DC    AL4(0)             DUMMY PARAMETER
         DC    AL4(0)             DUMMY PARAMETER
         DC    AL4(0)             DUMMY PARAMETER
         DC    AL4(0)             DUMMY PARAMETER
         DC    AL4(0)             DUMMY PARAMETER
         DC    AL4(0)             DUMMY PARAMETER
         DC    AL4(0)             DUMMY PARAMETER
BUILDDDN DC    AL4(*)             DDNAME IN &ZTEMPN
BUILD340 BALR  14,15              CALL ISPLINK
         L     15,ISPLINK         COPY ENTRY POINT ADDRESS
         CNOP  0,4
         BAL   PARAMS,BUILD360    SET THE PARAMETER POINTER
         DC    AL4(VCOPY)         VCOPY SERVICE
         DC    AL4(DATAID)        DDNAME FOR FILE TAILORING OUTPUT
         DC    AL4(LENGTH)        EIGHT-CHARACTER FIELD
         DC    AL4(BUILDDID)      DDNAME TARGET FIELD
         DC    ALl(X'80')         LAST PARAMETER
         DC    AL3(LOCATE)        SKELETON NAME
BUILD360 BALR  14,15              CALL ISPLINK
         OI    BUILDDID,X'80'     SET LAST PARAMETER FLAG
         L     15,ISPLINK         COPY ENTRY POINT ADDRESS
         CNOP  0,4
         BAL   PARAMS,BUILD380    SET THE PARAMETER POINTER
         DC    AL4(EDIT)          EDIT SERVICE
         DC    AL4(0)             DUMMY PARAMETER
         DC    AL4(0)             DUMMY PARAMETER
         DC    AL4(0)             DUMMY PARAMETER
         DC    AL4(0)             DUMMY PARAMETER
         DC    AL4(MACRNAME)      MACRO NAME
         DC    AL4(0)             DUMMY PARAMETER
BUILDDID DC    AL4(*)             DATA-ID FOR FILE TAILORING OUTPUT
BUILD380 BALR  14,15              CALL ISPLINK
         SR    RC,RC              RC = 0
         BR    BALRETRN           RETURN TO MAIN ROUTINE
BUILD400 DS    0H                 EDIT MACRO
         STM   14,12,12(13)       SAVE CALLER'S REGISTERS
         LR    12,15              SET BASE REGISTER
         USING BUILD400,12        ESTABLISH ADDRESSABILITY
         BAL   1,*+76             BRANCH AROUND SAVE AREA
         DS    XL72               REGISTER SAVE AREA
         ST    13,4(,1)           BACKWARD POINTER
         ST    1,8(,13)           FORWARD POINTER
         LR    13,1               SET SAVE AREA POINTER
         L     15,ISPLINK         COPY ENTRY POINT ADDRESS
         CNOP  0,4
         BAL   PARAMS,BUILD425    SET THE PARAMETER POINTER
         DC    AL4(ISREDIT)       ISREDIT SERVICE
         DC    AL4(LENGTH)        EIGHT-CHARACTER FIELD
         DC    AL1(X'80')         LAST PARAMETER
         DC    AL3(MACRO)         DECLARE THE MACRO
BUILD425 BALR  14,15              CALL ISPLINK
         L     15,ISPLINK         COPY ENTRY POINT ADDRESS
         CNOP  0,4
         BAL   PARAMS,BUILD450    SET THE PARAMETER POINTER
         DC    AL4(ISREDIT)       ISREDIT SERVICE
         DC    AL4(LENGTH)        EIGHT-CHARACTER FIELD
         DC    AL1(X'80')         LAST PARAMETER
         DC    AL3(SUBMIT)        SUBMIT THE JOB
BUILD450 BALR  14,15              CALL ISPLINK
         L     15,ISPLINK         COPY ENTRY POINT ADDRESS
         CNOP  0,4
         BAL   PARAMS,BUILD475    SET THE PARAMETER POINTER
         DC    AL4(ISREDIT)       ISREDIT SERVICE
         DC    AL4(LENGTH)        EIGHT-CHARACTER FIELD
         DC    AL1(X'80')         LAST PARAMETER
         DC    AL3(CANCEL)        CANCEL THE EDIT SESSION
BUILD475 BALR  14,15              CALL ISPLINK
         L     1,4(,13)           BACKWARD POINTER
         XC    4(4,13),4(13)      CLEAR BACKWARD POINTER
         XC    8(4,1),8(1)        CLEAR FORWARD POINTER
         LR    13,1               RESTORE SAVE AREA POINTER
         LM    14,12,12(13)       RESTORE CALLER'S REGISTERS
         SR    15,15              CLEAR THE RETURN CODE
         BR    14                 RETURN
ISPLINK  DC    A(0)               ISPF ENTRY POINT
LENGTH   DC    A(8)
FTOPEN   DC    CL8'FTOPEN'
FTINCL   DC    CL8'FTINCL'
FTCLOSE  DC    CL8'FTCLOSE'
TEMP     DC    CL8'TEMP'
VCOPY    DC    CL8'VCOPY'
ZTEMPN   DC    CL8'ZTEMPN'
LMINIT   DC    CL8'LMINIT'
DATAID   DC    CL8'DATAID'
LOCATE   DC    CL8'LOCATE'
EDIT     DC    CL8'EDIT'
MACRNAME DC    CL8'!BUILD'
ISREDIT  DC    CL8'ISREDIT'
MACRO    DC    CL8'MACRO'
SUBMIT   DC    CL8'SUBMIT'
CANCEL   DC    CL8'CANCEL'
         END


Michael Geake
Senior Systems Programmer
BRS Information Technologies (USA) € Xephon 1987


