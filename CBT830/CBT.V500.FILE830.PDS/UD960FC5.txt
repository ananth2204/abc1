Dynamic control of ACF2 NON-CNCL privilege

ACF2 is a software security system which is in widespread use in MVS
sites around the world.  One of the data access privileges which can be
enabled for an individual ACF2 user-id is known as 'NON-CNCL', which
allows full read/write access to all data on the system.  Obviously a
powerful feature such as this should be highly restricted, yet its
capabilities should be available when required, eg to expedite system
problem resolution.

ACF2 does not offer a method of turning this capability on and off
during the course of a TSO session; it is set permanently either on or
off for a particular user-id.

One approach is to log on when necessary to an alternative user-id,
which has NON-CNCL set permanently on; but this creates difficulties in
identifying an individual user for accountability purposes if the
user-id is shareable among a number of selected users, which it
typically would be.

The ideal approach is to have NON-CNCL permanently off for all user-ids,
yet allow selected user-ids to turn it on if its capabilities are
needed.  Additionally, a message should be issued periodically to any
user-id which has turned NON-CNCL on to ensure that the user does not
forget about the privileged status of the session, and hopefully to give
some incentive to relinquish that status as soon as possible.

ACFAUTH is a TSO command processor which meets the above objectives by
allowing NON-CNCL to be turned on and off during the course of a single
session, and issues the desired reminder message while the privilege is
turned on.

The 'reminder' code can also serve as a model for developing any other
generalised asynchronous time-driven capability under TSO; it functions
in essentially the same manner as a timer Disabled Interrupt Exit (DIE),
while being subject to none of DIE's rather onerous restrictions, eg
disabled execution, no SVCs allowed.

ACFAUTH has been tested in an MVS/XA 2.1.3, ACF2 4.1.2 environment, but
should work on most MVS/ACF2 systems.

**********************************************************************
*  NAME: ACFAUTH                                                     *
*  TYPE: TSO COMMAND PROCESSOR                                       *
*  DESCRIPTION: TURNS THE ACF2 'NON-CNCL' PRIVILEGE ON OR OFF.  WHEN *
*  THE PRIVILEGE IS TURNED ON, ASYNCHRONOUS IRB AND STIMERM EXITS ARE*
*  QUEUED TO THE TMP'S TCB TO REMIND THE USER PERIODICALLY THAT HE IS*
*  STILL 'NONCNCL'.  THE INTERVAL AT WHICH THIS MESSAGE IS ISSUED IS *
*  SET TO THE SYSTEM SMF WAIT TIME PLUS ABOUT HALF A MINUTE.  THIS   *
*  ENSURES THAT THE ISSUING OF THE MESSAGE WILL NOT PREVENT THE USER *
*  FROM BEING LOGGED OFF (S522 ABEND) IF HE IS IN A WAIT FOR THE SMF-*
*  SPECIFIED TIME.  OTHER INSTALLATIONS MAY WISH TO USE A DIFFERENT  *
*  APPROACH.                                                         *
*  NOTE THAT THE STORAGE TO WHICH THE IRB AND STITERM EXIT CODE IS   *
*  MOVED IS GETMAINED FROM SUBPOOL 251 EVERY TIME NONCNCL IS TURNED  *
*  ON AND IS NOT FREED WHEN CNCL IS SPECIFIED TO TURN THE PRIVILEGE  *
*  OFF.  HOWEVER, IT IS NOT ANTICIPATED THAT THERE WILL BE ANYTHING  *
*  CLOSE TO THE NUMBER OF NONCNCL REQUESTS WHICH MIGHT CAUSE A       *
*  STORAGE SHORTAGE.  IF THERE IS, LOGGING OFF AND BACK ON WILL FREE *
*  THE STORAGE.                                                      *
*  TO GRANT AUTHORISATION TO USE THIS COMMAND, SIMPLY ADD ACF2 TSO   *
*  USERID'S (LOGONID'S) AT LABEL AUTHTAB.                            *
*  A USER REQUESTING NONCNCL WILL BE PROMPTED FOR THE LOGON PASSWORD *
*  AS PART OF THE VERIFICATION PROCESS.                              *
*  THIS COMMAND PROCESSOR UST BE AUTHORISED AS DESCRIBED IN THE      *
*  'SPL: TSO' MANUAL TO ALLOW ITS USE OF MODESET.                    *
*  SUCCESSFUL ASSEMBLY OF THIS MODULE REQUIRES SYS1.MACLIB,          *
*  SYS1.AMODGEN, AND THE ACF2 MACRO LIBRARY.                         *
*  ATTRIBUTES:  NON-REENTRANT, AMODE 24, RMODE 24                    *
*  SAMPLE INVOCATIONS:                                               *
*  ACFAUTH NONCNCL   -   TURN NONCNCL ON                             *
*  ACFAUTH CNCL      -   TURN NONCNCL OFF                            *
**********************************************************************
ACFAUTH  LINKAGE                        PROGRAM INITIALISATION ETC
         ST    R1,R1SAVE                SAVE R1
* CHECK IF THIS USER IS ALLOWED TO ISSUE THIS COMMAND *
         ACFGACVT R3,NONE=ACFA9000      GET ACCVT
         USING ACCVT,R3
         ACFGUCB R4,NONE=ACFA9100       GET ACUCB
         L     R4,ACULRECP-ACUCB(R4)    GET LOGONID RECORD ADDRESS
         ST    R4,LIDRECAD              STORE FOR LATER USE
         LA    R5,AUTHTAB
ACFA0020 CLI   0(R5),X'00'              END OF TABLE?
         BE    ACFA0040                 YES
         CLC   0(8,R5),LIDLID-LIDREC(R4) MATCH?
         BE    ACFA0060                 YES
         LA    R5,8(R5)                 NEXT TABLE ENTRY
         B     ACFA0020                 RECYCLE
ACFA0040 TPUT  MSG03,MSG03L             ISSUE MESSAGE
         LA    R15,12                   SET RETURN CODE
         B     RETURN                   RETURN
* PARSE THE OPERAND ENTERED *
ACFA0060 L     R1,R1SAVE                RELOAD R1
         USING CPPL,R1                  SET USING
         LA    R2,PPLREAL               PPL STORAGE AREA
         USING PPL,R2                   SET USING
         MVC   PPLUPT,CPPLUPT           PLUG UPT
         MVC   PPLECT,CPPLECT           PLUG ECT
         MVC   PPLECB,=A(ECB)           PLUG ECB
         MVC   PPLPCL,=A(PARSPRMS)      PLUG PCL
         MVC   PPLANS,=A(ANS)           PLUG ANS
         MVC   PPLCBUF,CPPLCBUF         PLUG CBUF
         XC    PPLUWA,PPLUWA            CLEAR UWA
         DROP  R1                       DROP CPPL BASE
         CALLTSSR EP=IKJPARS,MF=(E,PPLREAL) CALL PARSE
         DROP  R2                       DROP PPL BASE
         LR    R2,R15                   SAVE RETURN CODE
         LTR   R2,R2                    OK?
         BZ    ACFA0080                 YES
         TPUT  MSG04,MSG04L             ISSUE MESSAGE
         LR    R15,R2                   SET RETURN CODE
         B     RETURN+2                 RETURN
ACFA0080 L     R7,ANS                   GET PDL POINTER
         USING IKJPARMD,R7              SET USING
         CLC   ACTION,=AL2(0)           ANY OPERAND ENTERED?
         BNE   ACFA0100                 YES
         TPUT  MSG13,MSG13L             ISSUE MESSAGE
         LA    R15,12                   SET RETURN CODE
         B     RETURN+2                 RETURN
ACFA0100 CLC   ACTION,=AL2(1)           REQUEST FOR CNCL?
         BE    ACFA0303                 YES, SKIP RE-VALIDATION
* RE-VALIDATE THE USER BY REQUESTING HIS PASSWORD *
         XC    ACVALD(ACVLEN),ACVALD    ZERO THE ACF PARAMETER LIST
         MVI   ACVFCN,1                 SET THE REQUEST TYPE
         OI    ACVSFCN,ACVSRVLD         PASSWORD REVALIDATION
         MVC   ACVMSG,=A(ACF2MSG)       OUTPUT MESSAGE ADDRESS
         TPUT  CLRSCRN,CLRSCRNL,FULLSCR CLEAR THE SCREEN
         TPUT  PASSMSG,PASSMSGL         ISSUE REQUEST FOR PASSWORD
         TPUT  FLDSET1,FLDSET1L,CONTROL SET FIELD CONTROL
         TGET  ACVPSWD,8                GET PASSWORD
         TCLEARQ INPUT                  CLEAR THE BUFFERS
         OC    ACVPSWD,=8X'40'          CONVERT TO UPPER CASE
         MODESET MODE=SUP               SUPERVISOR STATE
         ACFSVC ACVALD,NONE=ACFA9200    ISSUE REQUEST
         LR    R2,R15                   SAVE RETURN CODE
         MODESET MODE=PROB              USER STATE
         LTR   R2,R2                    REQUEST OK?
         BZ    ACFA0303                 YES
         TPUT  ACF2MSG+4,124            ISSUE ACF2 MESSAGE
         B     RETURN                   RETURN
* PERFORM THE REQUEST OR TELL THE USER HE IS ALREADY IN THAT STATE *
ACFA0303 CLC   ACTION,AL2(1)            CNCL REQUEST?
         BE    ACFA0310                 YES
         CLC   ACTION,AL2(2)            NONCNCL REQUEST?
         BE    ACFA0320                 YES
         ABEND 1
ACFA0310 TM    LIDMFLG-LIDREC(R4),LIDMNCNL ALREADY CANCELABLE?
         BO    ACFA0313                 NO
         TPUT  MSG07,MSG07L             TELL THE USER
         B     RETURN                   RETURN
ACFA0313 MODESET KEY=ZERO               KEY ZERO
         NI    LIDMFLG-LIDREC(R4),255-LIDMNCNL MAKE CANCELABLE
         MODESET KEY=NZERO              USER KEY
         TPUT  MSG05,MSG05L             TELL THE USER
         B     RETURN                   RETURN
ACFA0320 TM    LIDMFLG-LIDREC(R4),LIDMNCNL ALREADY NONCANCELABLE?
         BZ    ACFA0323                 NO
         TPUT  MSG08,MSG08L             TELL THE USER
         B     RETURN                   RETURN
ACFA0323 MODESET KEY=ZERO               KEY ZERO
         OI    LIDMFLG-LIDREC(R4),LIDMNCNL MAKE NON-CANCELABLE
         MODESET KEY=NZERO              USER KEY
         TPUT  MSG06,MSG06L             TELL THE USER
* CREATE AN ASYNCHRONOUS EXIT TO REMIND USER OCCASIONALLY OF NONCNCL *
         L     R4,CVTPTR                CVT ADDRESS
         L     R4,CVTSMCA-CVT(R4)       SMCA ADDRESS
         L     R4,SMCAJWT-SMCABASE(R4)  JOB WAIT TIME
         LA    R4,30(R4)                ADD 30 UNITS (> 30 SECONDS)
         ST    R4,MICVL                 STORE FOR FUTURE REFERENCE
         L     R4,CVTPTR                CVT ADDRESS
         L     R4,CVTTCBP-CVT(R4)       TCB WORD ADDRESS
         L     R4,4(R4)                 CURRENT TCB ADDRESS
         L     R4,TCBJSTB-TCB(R4)       JOBSTEP (TMP) TCB ADDRESS
         SLL   R4,8                     CLEAR HIGH ORDER BYTE
         SRL   R4,8
         MODESET MODE=SUP               SUPERVISOR STATE
         GETMAIN RC,LV=EXITSLEN,SP=251
         LR    R3,R1                    SAVE STORAGE ADDRESS IF ANY
         LR    R2,R15                   SAVE RETURN CODE
         MODESET MODE=PROB              PROBLEM STATE
         LTR   R2,R2                    GOT STORAGE?
         BZ    ACFA0520                 YES
         TPUT  MSG10,MSG10L
         LA    R15,12                   SET RETURN CODE
         B     RETURN+2                 RETURN
ACFA0520 LR    R0,R3                    LOAD TARGET ADDRESS
         LA    R1,EXITSLEN              LENGTH
         LA    R14,IRBXIT               SOURCE ADDRESS
         LR    R15,R1                   SAME LENGTH
         MVCL  R0,R14                   MOVE EXIT TO ACQUIRED STORAGE
         MODESET MODE=SUP,KEY=ZERO      FULL BORE
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,RELATED=1
         LR    R2,R15                   SAVE RETURN CODE
         LTR   R2,R2                    DID WE GET IT?
         BZ    ACFA0550                 YES
         MODESET MODE=PROB,KEY=NZERO    BACK TO EARTH
         TPUT  MSG11,MSG11L
         LR    R15,R2                   SET RETURN CODE
         B     RETURN+2                 RETURN
ACFA0550 CIRB  EP=(R3),SVAREA=YES,WKAREA=10,BRANCH=YES
         LR    R5,R1                    SAVE IRB ADDRESS
         L     R6,RBNEXAV-RBBASIC(R5)   GET IQE ADDRESS
         USING IQE,R6
         XC    IQEPARM,IQEPARM          INITIALISE FIELDS
         ST    R5,IQEIRB
         ST    R4,IQETCB
         LCR   R1,R6                    2'S COMPLEMENT IQE ADDRESS
         L     R15,CVTPTR               CVT ADDRESS
         L     R15,CVT0EF00-CVT(R15)    STAGE 2 EXIT EFFECTOR ADDRESS
         BALR  R14,R15                  GO TO IT
         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,RELATED=1 RELEASE=LOCK
         LR    R2,R15                   SAVE RETURN CODE
         MODESET MODE=PROB,KEY=NZERO    BACK TO EARTH
         LTR   R2,R2                    DID IT RELEASE
         BZ    ACFA0600                 YES
         TPUT  MSG12,MSG12L
         LR    R15,R2                   SET RETURN CODE
         ABEND 2                        ABEND
ACFA0600 B     RETURN                   RETURN
ACFA9000 TPUT  MSG01,MSG01L             ISSUE MESSAGE
         B     RETURN                   RETURN
ACFA9100 TPUT  MSG02,MSG02L             ISSUE MESSAGE
         B     RETURN                   RETURN
ACFA9200 TPUT  MSG09,MSG09L             ISSUE MESSAGE
         B     RETURN                   RETURN
         DROP  R12                      DROP MAINLINE BASE
* ASYNCHRONOUS EXIT ROUTINES EXECUTING UNDER THE TMP'S TCB *
IRBEXIT  STM   R14,R12,12(R13)          SAVE REGISTERS
         BALR  R12,0                    ADDRESSABILITY
         USING *,R12
         B     IRB0020                  JUMP EYECATCHER
         DC    CL16'ACFAUTH IRB EXIT'   EYECATCHER
IRB0020  STIMERM SET,ID=TIMID,MICVL,EXIT=TIMXIT,MF=(E,STIMERML)
         LM    R14,R12,12(R13)          RELOAD REGISTERS
         BR    R14                      RETURN
         DROP  R12                      DROP THIS EXIT'S BASE
* TIMER EXIT *
TIMXIT   STM   R14,R12,12(R13)          SAVE REGISTERS
         LR    R12,R15                  ADDRESSABILITY
         USING TIMXIT,R12
         B     TIM0020                  JUMP EYECATCHER
         DC    CL18'ACFAUTH TIMER EXIT' EYECATCHER
TIM0020  LR    R3,R1                    SAVE R1
         L     R4,LIDRECAD              LIDREC ADDRESS
         TM    LIDMFLG-LIDREC(R4),LIDMNCNL STILL NON-CANCELABLE?
         BZ    TIM0050                  NO, SKIP AROUND
         TPUT  MSG14,MSG14L             YES, ISSUE MESSAGE
         STIMERM SET,ID=TIMID,MICVL=MICVL,EXIT=TIMXIT,MF=(E,STIMERML)
TIM0050  LM    R14,R12,12(R13)          RELOAD REGISTERS
         BR    R14                      RETURN
* EXITS' DATA AREAS *
TIMID    DC    F'0'                     STIMERM ID
MICVL    DC    D'0'                     TOD CLOCK FMT REMINDER INTERVAL
LIDRECAD DC    A'0'                     LIDREC ADDRESS
MSG14 DC C'ACA14:  JUST A REMINDER...YOU ARE STILL ACF2-NONCANCELABLE'
MSG14L   EQU   *-MSG14
STIMERML STIMERM SET MF=L               STIMERM LIST FORM
EXITSLEN EQU   *-IRBXIT                 EXIT'S LENGTH
* MAINLINES'S DATA STREAM *
R1SAVE   DC    F'0'
CLRSCRN  DC    X'27F50311404013'        CLEAR SCREEN, SET CURSOR TO TOP
CLRSCRNL EQU   *-CLRSCRN
PASSMSG  DC    C'ENTER YOUR LOGON PASSWORD:'
PASSMSGL EQU   *-PASSMSG
FLDSET1  DC    X'1D4D'                  NONDISPLAY/NONPRINT FIELD
FLDSET1L EQU   *-FLDSET1
ACF2MSG  DC    CL128' '
MSG01 DC C'ACA01:  THE ACCVT COULD NOT BE FOUND'
MSG01L   EQU   *-MSG01
MSG02 DC C'ACA02:  THE ACUCB COULD NOT BE FOUND'
MSG02L   EQU   *-MSG02
MSG03 DC C'ACA03:  YOU ARE NOT AUTHORISED TO USE THIS COMMAND'
MSG03L   EQU   *-MSG03
MSG04 DC C'ACA04:  ERROR IN IKJPARS ROUTINE'
MSG04L   EQU   *-MSG04
MSG05 DC C'ACA05:  YOU ARE NOW ACF2-CANCELABLE'
MSG05L   EQU   *-MSG05
MSG06 DC C'ACA06:  YOU ARE NOW ACF2-NONCANCELABLE'
MSG06L   EQU   *-MSG06
MSG07 DC C'ACA07:  YOU ARE ALREADY ACF2-CANCELABLE'
MSG07L   EQU   *-MSG07
MSG08 DC C'ACA08:  YOU ARE ALREADY ACF2-NONCANCELABLE'
MSG08L   EQU   *-MSG08
MSG09 DC C'ACA09:  ACF2 IS NOT CURRENTLY ACTIVE'
MSG09L   EQU   *-MSG09
MSG10 DC C'ACA10:  GETMAIN UNSUCCESSFUL - ''NONCNCL REMINDER'' FACILITY*
               NOT ENABLED'
MSG10L   EQU   *-MSG10
MSG11 DC C'ACA11:  ATTEMPT TO OBTAIN LOCAL LOCK FAILED'
MSG11L   EQU   *-MSG11
MSG12 DC C'ACA12:  ATTEMPT TO RELEASE LOCAL LOCK FAILED'
MSG12L   EQU   *-MSG12
MSG13 DC C'ACA13:  MISSING OPERAND'
MSG13L   EQU   *-MSG13
         ACVALD DSECT=NO
         DC    0F'0'                    ALIGN
PPLREAL  DC    (PPLLNGTH)X'00'          PPL STORAGE AREA
ECB      DC    F'0'                     COMMAND PROCESSOR ECB
ANS      DC    A(0)                     ANSWER WORD FOR PDL POINTER
PARSPRMS IKJPARM
ACTION   IKJKEYWD
         IKJNAME 'CNCL'
         IKJNAME 'NONCNCL'
         IKJENDP
         IKJPPL                         PPL DSECT
PPLLNGTH EQU   *-PPL                    PPL LENGTH
ACFAUTH  CSECT                          RESUME CSECT
AUTHTAB  DC    CL8'USERID1'             AUTHORISED USERS' TABLE
         DC    CL8'USERID2'
         DC    CL8'USERIDN'
         DC    X'00'                    END OF TABLE
* DSECTS *
         CVT   DSECT=YES,LIST=NO
         IKJTCB
         IHARB
         ACCVT
         ACFASVT
         ACUCB
         LIDREC
         IKJCPPL
         IHAPSA
         IEESMCA
IQE      DSECT
         DS    1F
IQEPARM  DS    F
IQEIRB   DS    F
IQETCB   DS    F
         END


     € Xephon 1987


