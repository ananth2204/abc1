Allocating ISPF test libraries

Many users need to concatenate their own libraries ahead of the
standard system and utility libraries for their ISPF sessions.
Such libraries are typically the CLIST, Panel, Skeleton,
Message, and Table libraries.  Usually a 'flip' CLIST is run
that re-concatenates the libraries required, but this causes
problems whenever a move to a new level of systems software
occurs as the names of the default libraries will often change.
This means that many users have to modify their 'flip' CLISTs
to use the new names.

To prevent our users having this extra trouble, I have written a
CLIST which looks for the files allocated to a DDNAME (eg
SYSPROC, ISPPLIB, ISPMLIB, ISPSLIB, ISPTLIB,
ISPLLIB etc) and adds the specified files on top of the existing
files for that DDNAME.  The name of the CLIST given is
REALLOC.

Here are two examples of how to execute the REALLOC
command:

o      REALLOC DDDDDD LIB('AAA.BBB.CCC.DDD') -
      allocate the two dataset names, AAA.BBB and
      CCC.DDD, on top of all other datasets currently allocated
      for the DDNAME DDDDDD.

o      REALLOC DDDDDD LIB('AAA.BBB') - allocate only
      one dataset, AAA.BBB, on top of all other datasets
      currently allocated for the DDNAME DDDDDD.

If more than one dataset is to be allocated with the REALLOC
command the names must be separated with a single space for
the LIB parameter.  The REALLOC command must be
executed under 'READY' mode outside ISPF unless the
DDNAME is SYSPROC.  If the REALLOC command is
repeated for the same dataset name and DDNAME, the same
dataset name will be allocated as many times on top of all the
existing allocated datasets.

To de-allocate your private libraries, execute the command
DEALLOC.  This command is the reverse of the REALLOC
command.  The order of dataset allocations for a DDNAME
can be rearranged with the help of DEALLOC and REALLOC
commands.

The command DEALLOC DDDDDD LIB('AAA.BBB') de-
allocates the dataset name AAA.BBB from the DDNAME
DDDDDD.  Only one dataset can be de-allocated at a time
from a DDNAME.  The DEALLOC command must be
executed under 'READY' mode outside ISPF unless the
DDNAME is SYSPROC.


REALLOC CLIST

PROC 1 DDNAME LIB() Q(&) TSTLVL(0) LIST
/*   ALLOCATE DATASET(S) ON TOP OF THE DATASETS CURRENTLY ALLOCATED
/*   FOR A PARTICULAR DDNAME.
/*   CALLING SEQUENCE: -
/*   REALLOC XXXXXX LIB('AAA.BBB CCC.DDD')
/*   WHERE XXXXXX IS THE DDNAME. AAA.BBB AND CCC.DDD ARE THE TWO
/*   DATASET NAMES TO BE ALLOCATED ON TOP OF ALL THE DATASET(S)
/*   CURRENTLY ALLOCATED FOR THE DDNAME XXXXXX.
/*   LIST PARAMETER CAN ALSO BE SPECIFIED FOR DIAGNOSTICS.
/***********************************************************************
 GOTO TST&TSTLVL
 TST0:  CONTROL NOFLUSH PROMPT NOLIST NOCONLIST NOSYMLIST NOMSG
        GOTO START
 TST1:  CONTROL NOFLUSH PROMPT LIST   NOCONLIST NOSYMLIST MSG
        GOTO START
 TST2:  CONTROL NOFLUSH PROMPT LIST   CONLIST   NOSYMLIST MSG
        GOTO START
 TST3:  CONTROL NOFLUSH PROMPT LIST   CONLIST   SYMLIST   MSG
START: -
SET &DSN = &STR()
SET &L   = &LENGTH(&LIB)
SET &C   = &STR(&LIB)
SET &P = 1
/* RETRIEVE ALL THE DATASET NAMES SPECIFIED FOR THE KEYWORD LIB
LOOP1: +
  SET &S = &P                     /* STARTING POSITION
  IF  &SUBSTR(&S,&C) = &STR( ) THEN +
    DO
    WRITE INVALID STRING - '&C'
    IF &S = 1 THEN +
       WRITE BLANKS NOT ALLOWED AS FIRST CHARACTER
     ELSE WRITE NAMES MAY BE SEPARATED BY ONLY 1 BLANK
     SET &DSN = &STR()
     WRITE COMMAND ABORTED
     EXIT
    END
  ELSE GOTO LOOP2
LOOP2: +
  SET &P = &P + 1                  /* NEXT POSITION
  IF  &P > &L THEN GOTO ENDSTR     /* END OF STRING
  IF &SUBSTR(&P,&C) NE &STR( ) THEN GOTO LOOP2
  ENDSTR: SET &DSN = &STR(&DSN'&SUBSTR(&S:&P-1,&C)' )
/*  CHECK THAT THE DATASET IS CATALOGUED
  SET &CDSN = &STR(&SUBSTR(&S:&P-1,&C)
  CONTROL NOMSG
  ALLOC F(X) DUMMY REUSE BLKSIZE(121)
  LISTC ENT('&CDSN') OFILE(X)
  SET &DSNCAT = &LASTCC
  FREE F(X)
  CONTROL MSG
/*  IF DATASET IS NOT CATALOGUED, THEN ABORT THIS COMMAND WITH
/*  ERROR MESSAGES.
  IF &DSNCAT NE 0 THEN DO
     WRITE DATASET NAME &STR(')&CDSN&STR(') IS NOT CATALOGUED
     WRITE RE-EXECUTE THIS COMMAND WITH A CORRECT DATASET NAME
     EXIT
  END
  SET &P = &P + 1
  IF  &P < &L THEN GOTO LOOP1
  SET ALLDSN = &DSN
/*  --- PICK UP ALL THE DATASET NAMES ALLOCATED TO A REQUESTED DDNAME
SET SYSOUTTRAP = 1000
LISTALC STATUS
SET SYSLINES = &SYSOUTLINE
SET SYSOUTTRAP = 0
SET I = 2
SET J = 0
SET NEED = Y
DO WHILE &I <= &SYSLINES
   SET DATA = &STR(&Q.SYSOUTLINE&I)
   IF &SUBSTR(1:3,&STR(&DATA   )) ¬= &STR() && +
      &SUBSTR(1:8,&STR(&DATA        )) ¬= NULLFILE && +
      &SUBSTR(1:8,&STR(&DATA        )) ¬= TERMFILE +
      THEN DO
           IF &SUBSTR(1:1,&STR(&DATA )) ¬= &STR() +
              THEN DO
                   SET DSN = &STR(&DATA)
                   IF &NEED = Y +
                      THEN DO
                           SET J = &J + 1
                           SET LIB&J = &STR(         &DSN)
                           SET DSN&J = &STR(&DSN)
                           END
                      END
              ELSE DO
                   SET DD = &SUBSTR(3:10,&DATA)
                   SET DD = &DD
                   IF &DD = &DDNAME +
                      THEN DO
                           SET NEED = Y
                           SET LIB&J = +
                               &STR(&SUBSTR(1:9,&DD             )&DSN)
                           SET DSN&J = &DSN
                           END
                      ELSE SET NEED = N
                   END
              END
              SET I = &I + 1
      END
      IF &NEED = N +
         THEN DO
              SET LIB&J = &STR()
              SET J = &J - 1
              END
      SET I = 1
/* BUILD TEMPORARY DATASET NAME TO STORE ALLOC COMMAND BEFORE EXECUTION
SET &PDATE = &SUBSTR(7:8,&SYSDATE)&SUBSTR(1:2,&SYSDATE)
SET &PDATE = &PDATE&SUBSTR(4:5,&SYSDATE)
SET &PTIME = &SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)
SET &PTIME = &PTIME&SUBSTR(7:8,&SYSTIME)
SET &TEMP=&SYSUID&STR(.ALL.D)&PDATE&STR(.T)&PTIME
/* ALLOCATE TEMPORARY DATASET NAME
ALLOC DA('&TEMP') LRECL(255) BLKSIZE(1680) SP(1) TR NEW -
        RECFM(V) REUSE FI(ASH) UNIT(VIO) DELETE
OPENFILE ASH OUTPUT               /* OPEN TEMP. FILE
SET ASH = &STR(ALLOC F(&DDNAME) +)
PUTFILE ASH
SET ASH = &STR(   DA)(&ALLDSN&STR( + )   /* ADD NEW DATASETS
PUTFILE ASH
/*  BELOW IS A LOOP TO WRITE ALL THE ALLOCATED DATASET FOR REALLOCATION
SET &VAL = &STR(1)
SET &LINEX = &STR(LINEX)
DO WHILE &I <= &J
   SET LIB = &STR(&Q.LIB&I)
   SET LIB = &SUBSTR(10:&LENGTH(&STR(&LIB)),&STR(&LIB))
   SET LINEX&VAL = &STR(&LIB)
   SET K1 = &&LINEX&VAL
   SET ASH = &STR('&K1' +)
   PUTFILE ASH
   SET &VAL = &EVAL(&VAL + 1)
   SET &I = &I + 1
END
   SET ASH = &STR(    ))&STR( SHR REUSE)     /* CLOSE FILE ALLOCATION
   PUTFILE ASH
   CLOSFILE ASH                              /* CLOSE TEMP FILE
   EX '&TEMP' &LIST                          /* EXECUTE ALLOC COMMAND
   FREE F(ASH)                               /* FREE TEMP FILE
END


DEALLOC CLIST

PROC 1 DDNAME LIB() Q(&) TSTLVL(0) LIST
/*   DEALLOCATE DATASET FROM THE DATASET(S) CURRENTLY ALLOCATED
/*   FOR A PARTICULAR DDNAME.
/*   CALLING SEQUENCE: -
/*   DEALLOC XXXXXX LIB('AAA.BBB')
/*   WHERE XXXXXX IS THE DDNAME.  AAA.BBB IS THE DATASET NAME
/*   TO BE DEALLOCATED FROM THE DDNAME XXXXXX.
/*   ONLY ONE DATASET NAME CAN BE SPECIFIED TO BE DEALLOCATED.
/*   LIST PARAMETER CAN ALSO BE SPECIFIED FOR DIAGNOSTICS.
/***********************************************************************
 GOTO TST&TSTLVL
 TST0:  CONTROL NOFLUSH PROMPT NOLIST NOCONLIST NOSYMLIST NOMSG
        GOTO START
 TST1:  CONTROL NOFLUSH PROMPT LIST   NOCONLIST NOSYMLIST MSG
        GOTO START
 TST2:  CONTROL NOFLUSH PROMPT LIST   CONLIST   NOSYMLIST MSG
        GOTO START
 TST3:  CONTROL NOFLUSH PROMPT LIST   CONLIST   SYMLIST   MSG
START: -
 SET &DELDSN = &LIB
/*  --- PICK UP ALL THE DATASET NAMES ALLOCATED TO A REQUESTED DDNAME
SET SYSOUTTRAP = 1000
LISTALC STATUS
SET SYSLINES = &SYSOUTLINE
SET SYSOUTTRAP = 0
SET I = 2
SET J = 0
SET NEED = Y
DO WHILE &I <= &SYSLINES
   SET DATA = &STR(&Q.SYSOUTLINE&I)
   IF &SUBSTR(1:3,&STR(&DATA   )) ¬= &STR() && +
      &SUBSTR(1:8,&STR(&DATA        )) ¬= NULLFILE && +
      &SUBSTR(1:8,&STR(&DATA        )) ¬= TERMFILE +
      THEN DO
           IF &SUBSTR(1:1,&STR(&DATA )) ¬= &STR() +
              THEN DO
                   SET DSN = &STR(&DATA)
                   IF &NEED = Y +
                      THEN DO
                           SET J = &J + 1
                           SET LIB&J = &STR(         &DSN)
                           SET DSN&J = &STR(&DSN)
                           END
                      END
              ELSE DO
                   SET DD = &SUBSTR(3:10,&DATA)
                   SET DD = &DD
                   IF &DD = &DDNAME +
                      THEN DO
                           SET NEED = Y
                           SET LIB&J = +
                               &STR(&SUBSTR(1:9,&DD            )&DSN)
                           SET DSN&J = &DSN
                           END
                      ELSE SET NEED = N
                   END
              END
              SET I = &I + 1
      END
      IF &NEED = N +
         THEN DO
              SET LIB&J = &STR()
              SET J = &J - 1
              END
      SET I = 1
/* BUILD TEMPORARY DATASET NAME TO STORE ALLOC COMMAND BEFORE EXECUTION
SET &PDATE = &SUBSTR(7:8,&SYSDATE)&SUBSTR(1:2,&SYSDATE)
SET &PDATE = &PDATE&SUBSTR(4:5,&SYSDATE)
SET &PTIME = &SUBSTR(1:2,&SYSTIME)&SUBSTR(4:5,&SYSTIME)
SET &PTIME = &PTIME&SUBSTR(7:8,&SYSTIME)
SET &TEMP=&SYSUID&STR(.ALL.D)&PDATE&STR(.T)&PTIME
/* ALLOCATE TEMPORARY DATASET NAME
ALLOC DA('&TEMP') LRECL(255) BLKSIZE(1680) SP(1) TR NEW -
        RECFM(V) REUSE FI(ASH) UNIT(VIO) DELETE
SET &ALLDSN = &STR(    )
OPENFILE ASH OUTPUT               /* OPEN TEMP. FILE
SET ASH = &STR(ALLOC F(&DDNAME) +)
PUTFILE ASH
SET ASH = &STR(   DA)(ALLDSN&STR( + )    /* ADD NEW DATASETS
PUTFILE ASH
/*  BELOW IS A LOOP TO WRITE ALL THE ALLOCATED DATASET FOR REALLOCATION
SET &VAL = &STR(1)
SET &LINEX = &STR(LINEX)
SET &NDSN = &STR(0)
SET &NDEL = &STR(0)
DO WHILE &I <= &J
   SET LIB = &STR(&Q.LIB&I)
   SET LIB = &SUBSTR(10:&LENGTH(&STR(&LIB)),&STR(&LIB))
   SET LINEX&VAL = &STR(&LIB)
   SET K1 = &&LINEX&VAL
   IF &K1 NE &DELDSN THEN DO
      SET ASH = &STR('&K1' +)
      PUTFILE ASH
      SET &NDSN = &EVAL(&NDSN + 1)
      END
   ELSE DO
      SET &NDEL = &EVAL(&NDEL + 1)
      END
   SET &VAL = &EVAL(&VAL + 1)
   SET &I = &I + 1
END
   SET ASH = &STR(    ))&STR( SHR REUSE)      /* CLOSE FILE ALLOCATION
   PUTFILE ASH
   CLOSFILE ASH                               /* CLOSE TEMP FILE
   IF &NDEL EQ 0 THEN DO
      WRITE &DELDSN IS NOT ALLOCATED   FOR THE DDNAME &DDNAME
      WRITE &DELDSN IS NOT DEALLOCATED FOR THE DDNAME &DDNAME
      END
   ELSE DO
      IF &NDSN GT 0 THEN DO
         EX '&TEMP' &LIST                       /* EXECUTE ALLOC COMMAND
         END
      ELSE DO
         FREE F(&DDNAME)
         WRITE &DDNAME HAS BEEN FREED
         WRITE ONLY &DELDSN WAS ALLOCATED FOR THE DDNAME &DDNAME
         END
   END
   FREE F(ASH)                                 /* FREE TEMP FILE
END


Ashwani Puri
Systems Programmer
Western Atlas International (UK)                        c Ashwani Puri 1990

