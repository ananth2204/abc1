An enhanced $DI command under TSO

INTRODUCTION

Sometimes we would like to have more information about the
initiators: the JES2 command $DI gives us only the status of the
initiators and the job identifiers, not the names of the jobs. The
following code illustrates how to acquire the names of the jobs
and how to use the $DI command under TSO. The status of the
initiators is in a JES2 control block called the Partition
Information Table (PIT), but all the information for executing jobs
is in a control block, called the Subsystem Job Block (SJB).

To get the PIT and then the SJB, we follow this path:

o      CVT + X'128' points to the JES Common Table (JESCT)
entry.

o      JESCT + X'18' points to the first Subsystem CVT (SSCVT)
 entry.

o      The JES2 CVT contains the HASP Communication Table
(HCT) address.

o      The HCT contains the PIT address.

o      The PIT contains the SJB address.

Before executing the program you should:

1      Assemble the program with the system macro libraries
SYS1.HASPSRC, SYS1.AMODGEN, SYS1.ATSOMAC, and
SYS1.AMACLIB.

2      Assign the attributes AMODE = 31 and RMODE = 24 to
the program.

3      Link-edit the program in a LINKLIST library so you can
execute it as a TSO command.

Figure 1 shows the results of the TSO command $DI. The code
works well with MVS/ESA SP3 and SP4.

   READY
  $di
   INIT   C1  ACTIVE    JOB00584  CICSC1   C=X
   INIT   C2  ACTIVE    JOB00586  CICST2   C=X
   INIT   C3  ACTIVE    JOB00866  CICST1   C=X
   INIT   C4  ACTIVE    JOB02113  CICSCL   C=X
   INIT   U1  ACTIVE    JOB02349  035831   C=IJQRUVLW
   INIT   U2  ACTIVE    JOB02341  M33093   C=JQRUVILW
   INIT   U3  ACTIVE    JOB02353  B9029U   C=QRUVIJLW
   INIT   U4  INACTIVE  ********           C=RUVIJQLW
   INIT   U5  ACTIVE    JOB02354  M32935   C=UVIJQRLW
   INIT   U6  INACTIVE  ********           C=VIJQRULW
   INIT   B1  ACTIVE    JOB02338  I22690   C=WSL1
   INIT   B2  ACTIVE    JOB02345  B90295   C=WSL2
   INIT   B3  INACTIVE  ********           C=WLS1
   INIT   B4  ACTIVE    JOB02334  B92513   C=WLS2
   INIT   B5  ACTIVE    JOB02355  032071   C=S21L
   INIT   B6  INACTIVE  ********           C=W12L
   INIT   B7  INACTIVE  ********           C=L21
   INIT   B8  INACTIVE  ********           C=12S
   INIT   B9  INACTIVE  ********           C=21SL
   INIT   A1  DRAINED   ********           C=0
   INIT   A2  INACTIVE  ********           C=0
   ***
Figure 1: Output from the $DI command under TSO

PROGRAM SOURCE CODE

*---                      $ D I                                   ---*
*              DISPLAY INITIATOR (TSO 0 ISPF)                        *
*-- THIS COMMAND SHOWS THE USE OF JES2 PARTITIONS (INITIATORS)     --*
$DI      START 0
         B     8(R15)
         DC    AL1(8)
         DC    CL3'$DI'
         STM   R14,R12,12(R13)
         LR    R4,R15
         USING $DI,R4
         B     STAT0001
SAVE0001 DC    18D'00'
STAT0001 EQU   *
         LA    R12,SAVE0001
         ST    R13,4(R12)
         ST    R12,8(R13)
         LR    R13,R12
         B     BEG0001
         SR    R15,R15
RETURN   LA    R1,0(R13)
         L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
BEG0001  EQU   *
*          REGISTER EQUATES ARE IN $HASPEQU
$DI     AMODE 31
$DI     RMODE 24
*---                '' SEARCH   "S S C T" ''                      ---*
         XR    R0,R0
         L     R1,16(,R0)          LOAD CVT ADDRESS
         USING CVT,R1
         L     R1,CVTJESCT         LOAD JESCT ADDRESS
         DROP  R1
         USING JESCT,R1
         L     R1,JESSSCT          LOAD FIRST SSCVT ADDR
         DROP  R1
         USING SSCT,R1
NEXTSSCT EQU   *
         CLC   SSCTID(4),SSCTNM
         BNE   RC08                INVALID SSCT RET CODE 8
         CLC   SSCTSNAM(4),=C'JES2'    IS THIS OUR SSCVT ?
         BE    SSCTFND             YES. TRY SSVT
         ICM   R1,15,SSCTSCTA      NO. TRY NEXT SSCVT
         BNZ   NEXT SSCT           GO TRY
*---        ''  RETURN CODE : 16, 8, 0 ''                         ---*
RC16     EQU   *
         MVI   RETCODE+1,16        SET RETURN CODE TO '16'
         B     ENDS
RC08     EQU   *
         MVI   RETCODE+1,8         SET RETURN CODE TO '08'
         B     ENDS
RC00     EQU   *
         MVI   RETCODE+1,0         SET RETURN CODE TO '00'
         B      ENDS
*---           ''  CONTROL  "S S V T"   ''                        ---*
SSCTFND  EQU   *
* NB:  HASPIRMA OBTAIN THE HCCT
         ICM   R2,15,SSCTSUS2      TRY TO LOAD HCCT ADDR
         USING HCCT,R2             PROVIDE HCCT ADDESSABILITY
* NB:  HASPIRMA LABEL NPITCSA
         L     R3,CCTPIT    GET ADDRESS OF FIRST PIT IN CSA  SP228
         USING PIT,R3              PROVIDE PIT ADDRESSABILITY
SRCPITS  EQU   *
         MVC   IDL+2(2),PITPATID   MOVE NAME OF INITIATOR
         MVC   IDCL+2(CLLENGTH),PITCLASS MOVE  CLASS INIT
         TM    PITSTAT,PITHOLDA+PITHOLD1
         BZ    CDINIT
         MVC   STATL+1(8),=CL8'DRAINING'
         TM    PITSTAT,PITBUSY
         BO    STDRING
         MVC   STATL+(8),=CL8'DRAINED'
         B     PRTPUTPA
STDRING  EQU   *
         MVC   STATL+1(8),=CL8'DRAINING'
         B     PRTPUTPA
CDINIT   EQU   *
         TM    PITSTAT,PITHALTA+PITHALT1
         BZ    CDINIT1
         TM    PITSTAT,PITBUSY
         BO    SETHLING
         MVC   STATL+1(8),=CL8'HALTED"
         B     PRTPUTPA
SETHLING EQU   *
         MVC   STATL+1(8),=CL8'HALTING'
         B     PRTPUTPA
CDINIT1  EQU   *
         MVC   STATL+1(8),=CL8'INACTIVE'
         TM    PITSTAT,PITBUSY
         BZ    CPITBUSY
         MVC   STATL+1(8),=CL8'ACTIVE'
         B     PRECTPUT
CPITBUSY EQU   *
         TM    PITFLAGS,PITSMVER
         BZ    PRTPUTPA
         MVC   STATL+1(8),=CL8'STARTING'
         B     PRTPUTPA
PRECTPUT EQU   *
* NB: HASPCOMM LABEL CCJSJB
         ICM   R5,B'1111',PITSJB         GET ADDRESS OF SJB
         USING SJB,R5                    PROVIDE SJB ADDRESSABILITY
         MVC   JOBNML+1(8),SJBJOBNM      *       JOB NAME
         MVC   JOBIDL+1(8),SJBJOBID      *       JOB NUMBER
         B     TPUTEFF
PRTPUTPA EQU   *
         ICM   R5,B'1111',PITSJB         GET ADDRESS OF SJB
         USING SJB,R5                    PROVIDE SJB ADDRESSABILITY
         MVC   JOBNML+1(8),=C'        '
         MVC   JOBIDL+1(8),=C'********'
TPUTEFF  EQU   *
         TPUT  MSG,L'MSG
         DROP  R5
         ICM   R3,15,PITNEXT
         BNZ   SRCPITS
ENDS     EQU   *
         LH    R15,RETCODE
         B     RETURN
SSCTNM   DC    C'SSCT'
VOCE1    DC    F'0'
CLLENGTH EQU   10
MSG      DS    0CL52
INITL    DC    C'INIT '
IDL      DC    C'     '
STATL    DC    C'          '
JOBIDL   DC    C'          '
JOBNML   DC    C'          '
IDCL     DC    C'C=          '
RETCODE  DC    H'0'
*    CONTROL BLOCK BELOW 16-MB LINE .
         $HASPEQU
         $PIT
         $SCAT
         $SJB
         $HFAME
         $HCCT  NEW JES2 V3 E V4
         $TQE
         $XECB
         IEFJSCVT
         IEFJESCT
         CVT DSECT=YES
         END


Dr Andrea Ossicini
Performance Evaluation Manager (Italy)                                 c Xephon

