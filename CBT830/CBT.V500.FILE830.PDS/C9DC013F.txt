Source to load identification program

It is a common problem in many installations to relate source programs
to their respective load modules.  This can be particularly acute where
many versions of the same program exist and it is necessary to identify
the particular source for a particular load module.

Our installation has implemented a program, DIRIDENT, which extracts
ISPF statistics from the PDS directory, formats them, and generates a
linkage-editor identify statement to identify the source version for the
CSECT being compiled.  The information is stored in the IDR portion of
the load module;  each CSECT with a load module may be identified.  The
routine can be used both with application programs and systems software
(system exits, etc).

DIRIDENT is executed with a PARM specifying the program being compiled;
that member in the library specified with the DDNAME PDS is accessed via
BLDL to provide the ISPF update statistics.  If no user bytes are found
for the directory entry, or if they are not ISPF standard user bytes,
the program terminates with a return code of 16.  If the user bytes are
ISPF statistics, the version, the date and time of the last update, and
the user-id are extracted.  An IDENTIFY statement is written for later
inclusion as part of the SYSLIN input to the linkage-editor.

The program uses an installation date-conversion subroutine, JULSUB, to
convert the packed decimal Julian dates to a more easily recognisable
format:  ie ddmmyy.  It will be necessary for users of this program to
replace this section of the code.

The IDENTIFY information is stored in the load module and may be
examined by ISPF browse or any program using the BLDL macro.  It would
be possible to include the program in a change control system in order
to verify that the source being promoted is the version used to produce
the load module being promoted.

The IDENTIFY statement from DIRIDENT has the format:

      IDENTIFY csectname('SOURCE Vmm.11 ddmmyy hh:mm userid')

Where csectname is the name of the program, or subroutine;  mm.11 is the
modification version maintained by ISPF;  ddmmyy is the last
modification date; hh:mm is the last modification time  and user-id is
the TSO user-id of the TSO user who last updated the source member.


DIRIDENT SOURCE LISTING

**********************************************************************
*      PROGRAM-ID.   DIRIDENT                                        *
*   THIS PROGRAM RECEIVES A MEMBER NAME AS AN EXEC PARM AND CREATES  *
*   AN "IDENT" STATEMENT SUITABLE FOR USE WITH THE LINKAGE-EDITOR    *
*   ACCORDING TO THE CONTENTS OF THE SPF STATISTICS STORED AS USER   *
*   DATA IN THE DIRECTORY FOR THE FILE ALLOCATED TO "PDS" DDNAME.    *
*   EXAMPLE:                                                         *
*           //IDENT   EXEC PGM=DIRIDENT,PARM=MEMBER                  *
*           //PDS      DD  DISP=SHR,DSN=USER.LIBRARY.SOURCE          *
*           //SYSPUNCH DD DISP=(,PASS),UNIT=SYSDA,SPACE=(TRK,1)      *
**********************************************************************
         TITLE 'DIRIDENT - LINKAGE SECTION.'
DIRIDENT CSECT
         B     @PROLOG-*(,R15)         BRANCH AROUND DOGTAG
         DC    CL12'DIRIDENT'          MODULE I.D.
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  STM   R14,R12,12(R13)         SAVE REGS IN CALLERS SAVE AREA
         LR    R12,R15                 ESTABLISH ADDRESSABILITY
         USING DIRIDENT,R12            R12 IS BASE
         LR    R15,R13                 POINT R15 TO CALLER SAVE AREA
         CNOP  0,4                     ALIGNMENT
         BAL   R13,*+76                R13 POINTS TO MODULE SAVE AREA
         DC    18F'0'                  SAVE AREA
         ST    R13,8(R15)              OUR SAVE AREA INTO CALLERS
         ST    R15,4(R13)              CALLER'S SAVE AREA INTO OURS+4
         B     MAIN
         TITLE 'DIRIDENT - MAIN LOGIC.'
MAIN     DS    0H
         LA    R15,16                  DEFAULT BAD RETURN CODE,
         ST    R15,RETCODE             .
         L     R2,0(R1)                ADDRESS //EXEC PARM.
         LH    R3,0(R2)                GET LENGTH OF PARM,
         LTR   R3,R3                   ?IS PARM MISSING,
         BZ    EXIT                    -YES, EXIT - NO ACTION.
         MVI   IDRCSECT,C' '           CLEAR DATA PORTION OF IDREC,
         MVC   IDRCSECT+1(69),IDRCSECT .
         BCTR  R3,0                    DECREMENT FOR EX.
         MVC   DIRNAME,=8C' '          INITIAL BLANKS IN NAME
         MVC   DIRNAME(0),2(R2)        MOVE MEMBER NAME INTO PARAM,
         EX    R3,*-6                  .
         MVC   IDRCSECT(0),2(R2)       MOVE MEMBER NAME INTO IDREC,
         EX    R3,*-6                  .
         OPEN  (PDS,(INPUT))
         MVC   DIRFF,=H'1'             PARAM: 1 ENTRY.
         MVC   DIRLL,=H'76'            PARAM: 76 BYTE LENGTH (MAX).
         BLDL  PDS,DIRLIST             GET DIRECTORY ENTRY.
         ST    R15,RETCODE
         LTR   R15,R15                 ?DIRECTORY ENTRY OK,
         BNZ   EXIT                    -NO, RETURN WITH BLDL'S RC.
         L     R15,20                  DEFAULT RETCODE.
         TM    DIRC,X'0F'              ?STANDARD ISPF USERDATE,
         BNO   MAINX                   -NO, QUIT.
*        --- BUILD 'IDENTIFY' ENTRY ---
         LA    R4,IDRCSECT+1           CALCULATE START OF WORK.
         AR    R4,R3
         USING IDENT,R4                MAP DATA PORTION OF STMT.
         MVC   IDTAG,=C'(''SOURCE V'
         XR    R5,R5                   CONVERT VERSION TO DISPLAY.
         IC    R5,DIRDVER              .
         CVD   R5,DBLWORD              .
         MVC   FULLWORD,DBLWORD+4      .
         UNPK  DBLWORD,FULLWORD+2(2)   .
         OI    DBLWORD+7,X'F0'         .
         MVC   IDVER,DBLWORD+6         .
         MVI   IDDOT,C'.'              .
         XR    R5,R5                   CONVERT MOD LEVEL TO DISPLAY
         IC    R5,DIRDMOD              .
         CVD   R5,DBLWORD              .
         MVC   FULLWORD,DBLWORD+4      .
         UNPK  DBLWORD,FULLWORD+2(2)   .
         OI    DBLWORD+7,X'F0'         .
         MVC   IDMOD,DBLWORD+6         .
         MVI   IDDOT,C'.'              .
         MVC   JSIDATE,DIRDMDT         CONVERT DATA TO DISPLAY.
* INSTALLATION DATE-CONVERSION:
         CALL  JULSUB,(JSIDATE,JSIFMT,JSODATE,JSOFMT,JSWORK),VL
         MVC   IDDATE,JSODATE          THE RESULTS ARE IN JSODATE.
         XR    R5,R5                   CONVERT MOD HOUR TO DISPLAY.
         IC    R5,DIRDMTM              .
         SLL   R5,8                    .
         IC    R5,=XL1'0C'             .
         ST    R5,FULLWORD             .
         UNPK  DBLWORD,FULLWORD+2(2)   .
         MVC   IDHH,DBLWORD+5          .
         MVI   IDCOLON,C':'            COLON.
         XR    R5,R5                   CONVERT MOD MIN. TO DISPLAY.
         IC    R5,DIRDMTM+1            .
         SLL   R5,8                    .
         IC    R5,=XL1'0C'             .
         ST    R5,FULLWORD             .
         UNPK  DBLWORD,FULLWORD+2(2)   .
         MVC   IDMM,DBLWORD+5          .
         MVC   IDUSERID,DIRDUSER       USERID.
         MVC   IDETAG,=CL2''')'        CLOSE THE STRING/PARM.
         OPEN  (SYSPUNCH,(OUTPUT))
         PUT   SYSPUNCH,IDREC
         CLOSE (SYSPUNCH)
MAINX    DS    0H
         CLOSE (PDS)
         LA    R15,0
         ST    R15,RETCODE
         TITLE 'DIRIDENT - EXIT LOGIC.'
EXIT     DS    0H
         L     R15,RETCODE             CLEAR RETURN CODE
         L     R13,4(R13)              RESTORE REGS
         L     R14,12(R13)             .
         LM    R0,R12,20(R13)          .
         BR    R14                     *RETURN*
         LTORG
         TITLE 'DIRIDENT - CONSTANTS.'
PDS      DCB   DSORG=PO,DDNAME=PDS,MACRF=R
SYSPUNCH DCB   DSORG=PS,DDNAME=SYSPUNCH,MACRF=PM,LRECL=80
         TITLE 'DIRIDENT - WORKING STORAGE.'
RETCODE  DS    F                       RETURN CODE STORAGE.
FULLWORD DS    F
DBLWORD  DS    D
JSIDATE  DS    CL4                     PARAMETER AREAS FOR JULSUB.
JSIFMT   DC    F'3'                    . JULIAN PACKED INPUT
JSODATE  DS    CL8                     . RESULT: DDMMMYYB
JSOFMT   DC    F'8'                    . CHARACTER OUTPUT
JSWORK   DS    64F                     .
DIRLIST  DS    0F                      PARAMETER AREA FOR BLDL
DIRFF    DS    H                       . NUMBER OF ENTRIES,
DIRLL    DS    H                       . LENGTH OF 1ST ENTRY,
DIRNAME  DS    CL8                     . MEMBER NAME,
DIRTTR   DS    CL3                     . TRACK/BLOCK ADDRESS,
DIRK     DS    CL1                     . CONCATENATION NUMBER,
DIRZ     DS    CL1                     . LOCATION,
DIRC     DS    CL1                     . TYPE & 1/2 WORKDS OF USERDATA
DIRDATA  DS    0CL62                   . USERDATA = SPF STATISTICS.
DIRDVER  DS    CL1                     . . VERSION,
DIRDMOD  DS    CL1                     . . MODIFICATION,
         DS    CL2                     . . ?,
DIRDCDT  DS    CL4                     . . CRDATE PACKED '00YYDDDS',
DIRDMDT  DS    CL4                     . . MOD DATE PCKD '00YYDDDS',
DIRDMTM  DS    CL2                     . . MOD TIME X'HHMM',
DIRDSIZ  DS    CL2                     . . CURRENT SIZE,
DIRDINIT DS    CL2                     . . INITIAL SIZE,
         DS    CL2                     . . ?,
DIRDUSER DS    CL8                     . . LAST MODIFYING USERID.
         DS    34C                     . . *UNUSED*.
IDREC    DS    0F
         DC    C' IDENTIFY '
IDRCSECT DS    CL8
         DS    62C
         TITLE 'DIRIDENT - DSECTS'
IDENT    DSECT
IDTAG    DS    CL10                        ' SOURCE V'
IDVER    DS    CL2
IDDOT    DS    CL1
IDMOD    DS    CL2
         DS    CL1
IDDATE   DS    CL8
IDHH     DS    CL2
IDCOLON  DS    CL1
IDMM     DS    CL2
         DS    CL1
IDUSERID DS    CL8
IDETAG   DS    CL2
         END


DIRIDENT JCL

The JCL shown below demonstrates the use of DIRIDENT in a batch program
compile job.  If no directory information is available for the
particular source member, a non-zero return code is given and the
compile job fails:  this prevents programs without ISPF statistics from
being implemented.

//   ...   JOB   ...
//********************************************************************
//* THIS JOB COMPILES INDIVIDUAL BATCH COBOL MODULES
//********************************************************************
//COB EXEC PGM=IKFCBL00,
//         REGION=1024K
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSLIB   DD DISP=SHR,dsn=...Copybook-Library...
//SYSUT1   DD UNIT=VIO,SPACE=(460,(700,100))
//SYSUT2   DD UNIT=VIO,SPACE=(460,(700,100))
//SYSUT3   DD UNIT=VIO,SPACE=(460,(700,100))
//SYSUT4   DD UNIT=VIO,SPACE=(460,(700,100))
//SYSLIN   DD DSN=&&&&LOADSET,
//         DISP=(NEW,PASS),
//         UNIT=SYSDA,
//         SPACE=(80,(500,100))
//SYSIN    DD DISP=SHR,DSN=...Input-Source-Library(Member)...
//********************************************************************
//* EXTRACT SPF STATISTICS:
//IDENT   EXEC PGM=DIRIDENT,PARM=Member
//PDS      DD DISP=SHR,DSN=...Input-Source-Library...
//SYSPUNCH DD  UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),
//             DCB=BLKSIZE=80
//********************************************************************
//LKED EXEC PGM=HEWL,
//          COND=(5,LT,COB),(0,NE,IDENT)),
//          PARM='LIST,XREF,LET',
//          REGION=2048K
//SYSLIN   DD DSN=&&&&LOADSET,DISP=(OLD,DELETE)
//         DD DSN=*.IDENT.SYSPUNCH,DISP=(OLD,PASS)
//SYSLMOD  DD DISP=SHR,DSN=...Output-Load-Library(Member)...
//SYSLIB   DD DISP=SHR,DSN=...Load-Module-Library...
//SYSUT1   DD UNIT=VIO,SPACE=(1024,(50,20))
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*


Gerald Gradwell
Freelance Technical Consultant (UK)     € Gerald Gradwell 1987









