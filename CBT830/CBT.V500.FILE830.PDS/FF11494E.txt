Efficiently searching tables for key fields

This routine can be called from any OS/VS language to search a table of
items for a particular string.  The table must consist of fixed-length
elements with the key field (the string searched for) held in collating
(sort) sequence.  The algorithm used involves dividing the table in half
for each attempt to find the search item and consequently is very
efficient compared to a sequential scan on large tables and is
particularly helpful for programs written in high-level languages that
store large amounts of data in tables (arrays) during execution.

         TITLE 'BINSCAN - MODULE TO PERFORM BINARY SEARCH '
BINSCAN CSECT
**********************************************************************
**   PARAMETERS:  TABLE TO SEARCH                 - CHAR(*)
**                SIZE OF TABLE (NO. OF ELEMENTS) - FIXED BIN(31)
**                KEY TO BE LOCATED               - CHAR(*)
**                LENGTH OF KEY                   - FIXED BIN(31)
**                POSITION OF KEY IN ELEMENT      - FIXED BIN(31)
**                LENGTH OF EACH ELEMENT          - FIXED BIN(31)
**                RETURN CODE VARIABLE            - FIXED BIN(31)
**   NOTE: FIXED BIN(31) IS PL/I NAME FOR A FULL WORD BINARY INTEGER
**   RETURNS:     RETURN CODE VARIABLE = ELEMENT NO. WITH KEY FOUND
**                OR = 0 IF KEY NOT FOUND.
**   NOTES:       THIS PROGRAM IS REENTRANT AND REUSABLE.
**                THE KEY FIELDS IN THE TABLE MUST BE IN EBCDIC
**                COLLATING SEQUENCE, ASCENDING.
**                THE TABLE MUST HAVE FIXED LENGTH ELEMENTS.
**                THE ELEMENTS ARE ASSUMED TO BE NUMBERED 1 TO N.
**                THE POSITION (OFFSET) OF THE KEY IN EACH ELEMENT
**                IS SPECIFIED IN PL/I TERMS, IE. FROM 1 TO N.
**  NOTE: For a non-reentrant version avoiding getmains and freemains
**        just omit the lines marked with *RENT*
**********************************************************************
         SAVE  (14,12),,BINSCAN
         LR    R12,R15
         USING BINSCAN,R12             SET BASE REGISTER
         LM    R2,R8,0(R1)             LOAD PARAMETERS
         GETMAIN R,LV=WORKLEN          GET STORAGE FOR WORK *RENT*
         LR    R9,R1                   WORK AREA ADDRESS    *RENT*
         USING WORKAREA,R9             ADDRESS IT           *RENT*
         A     R2,0(R6)
         BCTR  R2,0                    R2 -> TO FIRST KEY IN TABLE
         L     R3,0(R3)                R3 = NO. OF ELEMENTS
         LA    R3,1(R3)
         ST    R3,ITOP                 ITOP = NO. OF ELEMENTS + 1
         L     R5,0(R5)                R5 = LENGTH OF KEY
         BCTR  R5,0                    - 1 FOR EX
         L     R7,0(R7)                R7 = SIZE OF EACH ELEMENT
         XR    R10,R10                 CLEAR
         ST    R10,IBOT                IBOT = 0
         ST    R10,RETCODE             RETCODE = 0
L1       L     R11,IBOT                LOOP TO FIND KEY
         A     R11,ITOP
         XR    R10,R10                 CLEAR R10
         D     R10,=F'2'
         ST    R11,IMID                IMID = (ITOP + IBOT) / 2
         C     R11,IBOT
         BE    END                     IF IMID = IBOT THEN NOT FOUND
         L     R11,IMID                )
         BCTR  R11,0                   ) ADDR = (IMID-1) * LEN + START
         MR    R10,R7                  )
         AR    R11,R2                  ) ADD BASE OF TABLE
         EX    R5,COMPARE              IS TABLE(R11) = SEARCH KEY ?
         BE    R4                      YES, FOUND IT
         BL    L3                      NO, CHOP TABLE IN HALF
         BH    L2                      NO, CHOP TABLE IN HALF
L2       MVC   ITOP,IMID               ITOP = IMID
         B     L1
L3       MVC   IBOT,IMID               IBOT = IMID
         B     L1
L4       MVC   RETCODE,IMID            SET RET CODE = IMID
END      MVC   0(4,R8),RETCODE         STORE RETURN CODE
         LA    R0,WORKLEN                                *RENT*
         FREEMAIN R,LV=(0),A=(9)      FREE WORK AREA     *RENT*
         RETURN (14,12),RC=0
         LTORG
COMPARE  CLC   0(0,R11),0(R4)          CLC FOR EXECUTE
WORKAREA DSECT                                           *RENT*
ITOP     DS    F
IBOT     DS    F
IMID     DS    F
RETCODE  DS    F
WORKLEN  EQU   *-WORKAREA                                *RENT*
         END


     â‚¬ Reserved 1988


