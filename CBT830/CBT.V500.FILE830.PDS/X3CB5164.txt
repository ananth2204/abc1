Storage display utility

INTRODUCTION

The following ISPF dialog comprises a REXX EXEC
(STORITS), its associated panel (STORDISP), and a help panel
(STORDISH). After being started, STORDISP shows the initial
display (see Figure 1). You are now expected to enter the start
address and the number of bytes to be displayed. The example in
Figure 2 shows that 200 bytes of CVT are desired. The starting
address is in hexadecimal and the length is in decimal. The
description is only a comment but may be informative should a
hardcopy be printed. If you now press 'enter' you will get a
display similar to the example shown in Figure 3.

 ---------------------------- Memory Display Utility --------------------------
 COMMAND ===>

  Start addr.: 00000000    Length: 000    <    Displacement: 000000 < hex
    End addr.: 00000000                                      000000 < dec

  Displ. nbr.: 1      Description:

          Displacement
 Address  DEC  HEX     Contents in hex                        EBCDIC
 ------------------------------------------------------------------------------
 Figure 1: Initial display


Fields displayed include:

o      Address - the address of the first byte on that line in
hexadecimal.

o      Displacement - this is relative to the starting address of the
displayed storage. It is shown in hexadecimal and decimal.

o      Contents - each line shows 16 bytes of storage.

o      EBCDIC - shows all printable characters.

---------------------------  Memory Display Utility -------------------------
COMMAND ===>

 Start addr.: 10          Length: 200    <    Displacement:000000 < hex
   End addr.: 00000000                                     000000 < dec

 Displ. nbr.: 1      Description: CVT

         Displacement
Address  DEC  HEX     Contents in hex                       EBCDIC
-----------------------------------------------------------------------------
Figure 2: Data entered by user

---------------------------  Memory Display Utility -------------  ROW 1 OF 13
COMMAND ===>

 Start addr.: 00000010    Length: 200    <    Displacement: 000000 < hex
   End addr.: 000000DF                                      000000 < dec

 Displ. nbr.: 2      Description: CVT

         Displacement
Address  DEC  HEX     Contents in hex                        EBCDIC
------------------------------------------------------------------------------
00000010 0000 0000    00FD59B0 00000000 078D2000 81E68CDE   * ...    ... AW..*
00000020 0016 0010    078D1000 80E86BC2 040C2000 80FF350E   *... .Y,B... ....*
00000030 0032 0020    00000000 00000000 070E0000 00000000   *        ..      *
00000040 0048 0030    00000000 00000000 00000000 00FD59B0   *             ...*
00000050 0064 0040    00000000 00000000 040C0000 81108410   *        ..  A.D.*
00000060 0080 0050    040C0000 80FF3400 00080000 8BCE1058   *..  ...     ....*
00000070 0096 0060    00080000 8BCE2420 040C0000 81118900   *    ......  A.I *
00000080 0112 0070    00000000 00011202 0002006D 00040016   *     ... . _ . .*
00000090 0128 0080    02EDF000 00000000 00000000 00000000   *..0             *
000000A0 0144 0090    00000000 011DD088 00000000 00000000   *    . AH        *
000000B0 0160 00A0    00000000 00000000 00010068 00FC4D90   *         . . .(.*
000000C0 0176 00B0    18000000 00000000 00000000 00000000   *.               *
000000D0 0192 00C0    00000000 00000000 40404040 40404040   *                *
Figure 3: Sample output

o      End address - the address of the last byte displayed: it is
filled automatically.

o      Displacement - in the upper right corner is the displacement
entry field. This value is added to the starting address. The
displacement may be entered in hexadecimal and/or decimal.

The basis of this utility is the STORAGE function of REXX. This
sets the one and only limitation of this utility: it is not able to
display protected storage. If any byte in the displayed range
resides in a protected area, the whole display will be blank (ie
X'40's). But as far as you have to display the storage in your
'own' address space or you display common control blocks of the
operating system you will find how good a utility STORDISP
really is for those who do not have such utilities as RESOLVE or
CA-LOOK available or are not authorized to use them.

Install STORITS and the panels according to your installation's
standards. A REXX library under the SYSPROC or SYSEXEC
DDNAME and a panel library under the ISPPLIB DDNAME
will be needed.

STORITS REXX EXEC

/* rexx */
/*     trace R             */
tablenam = "DUMPTAU"
namelis = "rivi"
nollat = "0000000000000000"
pk = 0
alkus = 0
count = 0
pitko = LENGTH(alkus)
pitko = 8 - pitko
IF pitko > 0 THEN
  DO
  alkus = SUBSTR(nollat,1,pitko)||alkus
  END
lopus = alkus
tavui = 000
panelnam = "STORDISP"
ADDRESS ISPEXEC  "TBCREATE "tablenam" NAMES(namelis") NOWRITE
        REPLACE"
  If rc > 4  Then               /* Return codes                      */
    Do                          /*  4 - Duplicate table exists but   */
    SAY "TBCREATE ERROR,"rc     /*      "replace" specified          */
    Exit                        /*  8 - Table already exists;        */
    End                         /*      "replace" not specified      */
                                /* 12 - Table in use; enq failed     */
                                /* 16 - Table input library not      */
                                /*      allocated with "write"       */
                                /* 20 - Severe error                 */
DO WHILE pk = 0
hexa = "000000"
desi = "000000"
count = count + 1
ADDRESS ISPEXEC "TBTOP "tablenam
ADDRESS ISPEXEC "TBDISPL "tablenam" PANEL("panelnam")"
  If rc ¬= 0 Then                /* Return codes                     */
    Do                           /* 4  - The enter key or scroll     */
    LEAVE                        /*      command used; additional data*/
    End                          /*      remains to be stored         */
                                 /* 8  - The end or return command was*/
                                 /*      entered.  If crp at top, no  */
                                 /*      lines modified               */
                                 /*    - Panel was generated from tags*/
                                 /*      and the EXIT command was     */
                                 /*      entered                      */
                                 /* 12 - Panel or message not found or*/
                                 /*      table not open               */
                                 /* 20 - Severe error                 */
pk = rc
apu = tavui // 16
if apu ¬= 0 then apu = 1
apa = tavui % 16
rivei = apa + apu
/*    SAY hexa   */
/*   trace r      */
llos = alkus
INTERPRET "apu = C2D('"llos"'x)"
INTERPRET "aph = C2D('"hexa"'x)"
apu = apu + 0
apu = apu + desi
apu = apu + aph
llos = D2X(apu)
INTERPRET "muis = STORAGE("llos","tavui")"
     trace o
alkus = llos
pitko = LENGTH(alkus)
pitko = 8 - pitko
IF pitko > 0 THEN
  DO
  alkus = SUBSTR(nollat,1,pitko)||alkus
  END
ADDRESS ISPEXEC  "TBCREATE "tablenam" NAMES("namelis") NOWRITE
        REPLACE"
  If rc > 4  Then               /* Return codes                      */
    Do                          /*  4 - Duplicate table exists but   */
    SAY "TBCREATE ERROR,"rc     /*      "replace" specified          */
    Exit                        /*  8 - Table already exists;        */
    End                         /*      "replace" not specified      */
                                /* 12 - Table in use; enq failed     */
                                /* 16 - Table input library not      */
                                /*      allocated with "write"       */
                                /* 20 - Severe error                 */
laskin = 1
disp = 0
do rivei
rivi = ''
rivo = ''
rivi = llos
pitko = LENGTH(llos)
pitko = 8 - pitko
IF pitko > 0 THEN
  DO
  rivi = SUBSTR(nollat,1,pitko)||rivi
  END
rivi = rivi" "
INTERPRET "apu = C2D('"llos"'x)"
apu = apu + 16
lopde = apu
llos = D2X(apu)
ddec = disp
pitko = LENGTH(ddec)
pitko = 4 - pitko
IF pitko > 0 THEN
  DO
  ddec = SUBSTR(nollat,1,pitko)||ddec
  END
dhex = d2X(disp)
pitko = LENGTH(dhex)
pitko = 4 - pitko
IF pitko > 0 THEN
  DO
  dhex = SUBSTR(nollat,1,pitko)||dhex
  END
disp = disp + 16
rviv = rivi||ddec" "
rivi = rivi||dhex"   "
  DO 4
/*trace o*/
  apm = SUBSTR(muis,laskin,4)
  rivo = rivo||apm
  trace o
  laskin = laskin + 4
  apu = C2X(apm)
  apm = apu
/*INTERPRET "apu = C2D('"apm"'x)" */
  rivi = rivi" "apm
  END
  rivi = rivi"   *"rivo"*"
  ADDRESS ISPEXEC "TBADD "tablenam
  If rc ¬= 0 Then                 /* Return codes                    */
    Do                            /*  4 - Number of rows parameter   */
    SAY "TBADD ERROR,"rc          /*      was specified but storage  */
    End                           /*      was only obtained for a    */
                                  /*      single row                 */
                                  /*  8 - Key tables: a row with the */
                                  /*      same key already exists;   */
                                  /*      crp set to top             */
                                  /* 12 - Table is not open          */
                                  /* 20 - Severe error               */
lopde = lopde - 1
lopus = D2X(lopde)
pitko = LENGTH(lopus)
pitko = 8 - pitko
IF pitko > 0 THEN
  DO
  lopus = SUBSTR(nollat,1,pitko)||lopus
  END
end
end
ADDRESS ISPEXEC "TBEND "tablenam
  If rc ¬= 0 Then                 /* Return codes                    */
    Do                            /* 12 - Table is not open          */
    SAY "TBEND ERROR,"rc          /* 20 - Severe error               */
    End
exit

STORDISP PANEL

)attr default(%+")
   | type(output) intens(high) just(left) pad(' ') caps(on)
   $ type(output) intens(high) just(right) pad(' ') caps(on)
)body expand(  )
%- - - +Memory Display Utility%- - -
+COMMAND ===>"zcmd          +
+
+ Start addr.:"alkus   +   Length:"tavui +<   Displacement:"hexa  +< hex   +
+   End addr.:$lopus   +                                   "desi  +< dec     +
+
+ Displ. nbr.:|count+ Description:"descr                                     +
+
+         Displacement
+Address  DEC  HEX     Contents in hex                      EBCDIC          +
+----------------------------------------------------------------------------
)model rows(all)
|rivi                                                                          +
)init
  &zcmd = ' '
  &amt = 'cursor'
  .HELP = STORDISH
)end

STORDISH HELP PANEL

%-------------------- Memory Display Utility; Help Panel------------------------

+          %COMMAND:+N/A+
+
+      %Start addr.:+Specify the desired virtual address from which the
+                    display will be started. Leading zeroes are not
+                    necessary.
+           %Length:+Length in bytes of memory to be displayed.
+
+     %Displacement:+Displacement from start address in hex or/and dec.
+
+        %End addr.:+Utility displays end address: start address plus length.
+
+       Description:+This field is for a short comment, for info only.
+
+       Displ. nbr.:+The sequence number of display during the session,
+                    for information only.
+
+Notes: Display is scrollable in the usual way: UP and DOWN.
+
+       Because of using STORAGE command only unprotected areas to your
+       session could be displayed. When trying to display protected area
+       the content will be all blanks. This is not an error, this is a
+       feature.



  %Return PF3 +
)PROC
)END


Systems Programmer (Finland)                                        c Xephon 199


