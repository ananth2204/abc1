Reporting from SYSLOG

Since we became a remote satellite of an MVS/XA (JES2) site,
it occurred to me that, instead of using SYSLOG in a purely
reactive way (ie waiting until a problem occurs and then
identifying certain characteristics of the error from the log), we
could interrogate the log on a regular basis, and extract data
relevant to the production environment.

The following are some examples of information that I find
particularly useful:

1      Interventions on remote devices (multiple intervention
      messages had been a problem at one time).

2      Operations users signing in and out of the system
      (messages IEF125I and IEF126I).

3      Production job end times (message $HASP395).

4      Commands being issued to printers.

5      Work flow through printers (messages $HASP150 and
      $HASP190).

Taken together, this information can be quite revealing. For
example, by taking 2 and 4 together, I have been able to
pinpoint specific problems which relate to particular operators.
By taking 4 and 5 together, it has been possible to identify
potential bottlenecks which might be originating within the
operations department.

The following job stream is geared to the daily concerns of the
operations department, detailed previously. It comprises two
SELCOPY steps: the first extracts raw data from SYSLOG, the
second creates a report from the data selected. In order for the
intervention messages to be more meaningful, I have extended
the routine to include the first line of PSF APS796I (paper jam)
messages. The second job step includes a routine to total and
output errors logged against each device.

The job stream is documented quite thoroughly both for my
own convenience and to make it easier for anyone else to make
any amendments. Because of the structure of the job it should
be fairly easy for anyone to extend it, should any other
information be required. Aspects of the job that will need to be
customized are in lower case characters - for example DSNs,
production prefix codes, etc.

I hope that this may prompt other users to regard SYSLOG as a
more useful element of the system.

//OPREPORT    JOB 9999,'OPS',CLASS=O,MSGCLASS=X,
//            MSGLEVEL=(1,1),REGION=4M
//STEP1       EXEC PGM=SELCOPY
//INFILE   DD DSN=your.syslog.dsn,DISP=(SHR)
//UOUT1    DD DSN=your.work.dsn1,UNIT=SYSDA,
//            DISP=(NEW,PASS),SPACE=(TRK,(1,5),RLSE)
//UOUT2    DD DSN=your.work.dsn2,UNIT=SYSDA,
//            DISP=(NEW,PASS),SPACE=(TRK,(1,5),RLSE)
//UOUT3    DD DSN=your.work.dsn3,UNIT=SYSDA,
//            DISP=(NEW,PASS),SPACE=(TRK,(1,5),RLSE)
//UOUT4    DD DSN=your.work.dsn4,UNIT=SYSDA,
//            DISP=(NEW,PASS),SPACE=(TRK,(1,5),RLSE)
//UOUT5    DD DSN=your.work.dsn5,UNIT=SYSDA,
//            DISP=(NEW,PASS),SPACE=(TRK,(1,5),RLSE)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD *
READ INFILE WORKLEN 400                 * READ SYSLOG
IF EOF INFILE                           * ON END OF FILE
  THEN GOTO EOJ                         * GOTO END OF JOB
******                                       ******
* WRITE_TO_FILE_1:  EXTRACTS INTERVENTION MSGS &  *
* PSF ERROR MSGS AND WRITES RECORDS TO TEMP       *
* DATASET "UOUT1".                                *
******                                       ******
WRITE_TO_FILE_1
IF POS 62 LEN 7 EX 'IOS003A'
  AND POS 70 LEN 3 EX 'cua'
OR POS 62 LEN 7 EX 'IOS003A'
  AND POS 70 LEN 3 EX 'cua'
OR POS 62 LEN 7 EX 'IOS003A'
  AND POS 70 LEN 3 EX 'cua'
OR POS 62 LEN 7 EX 'IOS003A'
  AND POS 70 LEN 3 EX 'cua'
OR POS 62 LEN 7 EX 'APS796I'
  AND POS ANY EX 'cua'
OR POS 62 LEN 7 EX 'APS796I'
  AND POS ANY EX 'cua'
OR POS 62 LEN 7 EX 'APS796I'
  AND POS ANY EX 'cua'
OR POS 62 LEN 7 EX 'APS796I'
  AND POS ANY EX 'cua'
  THEN WRITE UOUT1 FROM 21 LRECL 99
  THEN GOTO CLEAR
******                                       ******
* WRITE_TO_FILE_2:  IDENTIFIES USERS SIGNING IN & *
* OUT OF THE SYSTEM (IEF125I/IEF126I) AND WRITES  *
* RECORDS TO TEMP DATASET "UOUT2".                *
******                                       ******
WRITE_TO_FILE_2
IF POS 62 LEN 11 NE 'IEF125I xxx'       * xxx DENOTES OPERATIONS PREFIX
  AND POS 62 LEN 11 NE 'IEF126I xxx'    * OR REC=SIGNOFF?
  THEN GOTO WRITE_TO_FILE_3             * NO - GOTO NEXT TEST
WRITE UOUT2 FROM 21 LRECL 80            * WRITE TO WORK FILE
GOTO CLEAR
******                                       ******
* WRITE_TO_FILE_3:  IDENTIFIES PRODUCTION JOB END *
* TIMES ($HASP395) AND WRITES RECORDS TO TEMP     *
* DATASET "UOUT3".                                *
******                                       ******
WRITE_TO_FILE_3
IF POS 62 LEN 10 NE '$HASP395 x'        * x DENOTES A PRODUCTION PREFIX
  THEN GOTO WRITE_TO_FILE_4             * NO - GOTO NEXT TEST
WRITE UOUT3 FROM 21 LRECL 80            * WRITE TO WORK FILE
GOTO CLEAR
******                                       ******
* WRITE_TO_FILE_4:  IDENTIFIES JES COMMANDS       *
* ISSUED TO PRINTERS & WRITES RECORDS TO TEMP     *
* DATASET "UOUT4".                                *
******                                       ******
WRITE_TO_FILE_4
IF POS 62 NE '$'                        * NOW IS THIS A JES RECORD ?
  THEN GOTO CLEAR
IF POS 64 LEN 4 NE 'PRTx'               * TEST FOR LIVE PRINTERS
  AND POS 64 LEN 4 NE 'PRTx'
  AND POS 64 LEN 5 NE 'PRTxx'
  AND POS 64 LEN 5 NE 'PRTxx'
  AND POS 64 LEN 6 NE 'PRTxxx'          * TEST PRINTERS ADDED
  AND POS 64 LEN 6 NE 'PRTxxx'
  AND POS 64 LEN 6 NE 'PRTxxx'
  AND POS 64 LEN 6 NE 'PRTxxx'
  AND POS 63 LEN 11 NE 'HASP097 PRT'    * HAS A PRINTER DRAINED ?
  THEN GOTO WRITE_TO_FILE_5
WRITE UOUT4 FROM 21 LRECL 80            * WRITE TO OUTPUT FILE
GOTO CLEAR
******                                       ******
* WRITE_TO_FILE_5:  IDENTIFIES WORK FLOW THROUGH  *
* PRINTERS & WRITES RECORDS TO TEMP DATASET       *
* "UOUT5".                                        *
******                                       ******
WRITE_TO_FILE_5
IF POS 62 LEN 8 EX '$HASP150'
  AND POS ANY EX 'PRTx'
OR POS 62 LEN 8 EX '$HASP150'
  AND POS ANY EX 'PRTx'
OR POS 62 LEN 8 EX '$HASP150'
  AND POS ANY EX 'PRTxx'
OR POS 62 LEN 8 EX '$HASP150'
  AND POS ANY EX 'PRTxx'
OR POS 62 LEN 8 EX '$HASP150'
  AND POS ANY EX 'PRTxxx'
OR POS 62 LEN 8 EX '$HASP150'
  AND POS ANY EX 'PRTxxx'
OR POS 62 LEN 8 EX '$HASP150'
  AND POS ANY EX 'PRTxxx'
OR POS 62 LEN 8 EX '$HASP150'
  AND POS ANY EX 'PRTxxx'
OR POS 62 LEN 8 EX '$HASP190'
  THEN WRITE UOUT5 FROM 21 LRECL 85
GOTO CLEAR
CLEAR
POS 1 MOD X'40'                         * MAKE POS 1 A SPACE
MOVE 133 FROM 1 TO 2                    * MOVE IT ALONG WORKSPACE
GOTO GET
/*
//STEP2       EXEC PGM=SELCOPY
//UIN1     DD DSN=your.work.dsn1,DISP=(OLD,DELETE)
//UIN2     DD DSN=your.work.dsn2,DISP=(OLD,DELETE)
//UIN3     DD DSN=your.work.dsn3,DISP=(OLD,DELETE)
//UIN4     DD DSN=your.work.dsn4,DISP=(OLD,DELETE)
//UIN5     DD DSN=your.work.dsn5,DISP=(OLD,DELETE)
//SYSPRINT DD SYSOUT=(V,,RSCS)
//SYSIN    DD *
******                                       ******
* STEP2:  WRITE DATASETS UOUT1-UOUT5 TO SYSPRINT  *
* IN ORDER                                        *
******                                       ******
READ UIN1 INTO 2 WORKLEN 550
POS 1 MOD X'F1' S 1
POS 121 MOD X'D7C1C7C540' S 1
POS 200 MOD X'000C' S 1                 * 0DE INTERVENTION COUNT
POS 250 MOD X'000C' S 1                 * 0DF INTERVENTION COUNT
POS 300 MOD X'000C' S 1                 * 0EE INTERVENTION COUNT
POS 350 MOD X'000C' S 1                 * 0EF INTERVENTION COUNT
POS 400 MOD X'000C' S 1                 * PSF ERROR COUNT
POS 450 MOD X'000C' S 1                 * RECORD COUNT
POS 500 MOD X'001C' S 1                 * PAGE COUNT
IF EOF UIN1                             * ON EOF 1ST ...
  THEN GOSUB ERR_SUM S 1                * CALL ERROR SUMMARY ROUTINE
  THEN READ UIN2 INTO 2                 * READ 2ND WORKDSN
IF POS 39 LEN 7 EX 'APS796I'
  THEN ADD 1 TO 2 AT 400
IF POS 39 LEN 7 EX 'IOS003A'
  AND POS 47 LEN 3 EX 'cua'
  THEN ADD 1 TO 2 AT 200
IF POS 39 LEN 7 EX 'IOS003A'
  AND POS 47 LEN 3 EX 'cua'
  THEN ADD 1 TO 2 AT 250
IF POS 39 LEN 7 EX 'IOS003A'
  AND POS 47 LEN 3 EX 'cua'
  THEN ADD 1 TO 2 AT 300
IF POS 39 LEN 7 EX 'IOS003A'
  AND POS 47 LEN 3 EX 'cua'
  THEN ADD 1 TO 2 AT 350
IF EOF UIN2                             * ON EOF 3RD ...
  THEN SPACE 1 STOPAFT 1
  THEN READ UIN3 INTO 2                 * READ 4TH WORKDSN
IF EOF UIN3                             * ON EOF 2ND ...
  THEN SPACE 1 STOPAFT 1
  THEN READ UIN4 INTO 2                 * READ 3RD WORKDSN
IF EOF UIN4                             * ON EOF 3RD ...
  THEN SPACE 1 STOPAFT 1
  THEN READ UIN5 INTO 2                 * READ 4TH WORKDSN
IF EOF UIN5                             * ON EOF 4TH ...
  THEN GOTO EOJ
ADD 1 TO 2 AT 450
IF POS 450 EX X'055C'
  THEN POS 1 MOD X'F1'
  THEN POS 450 MOD X'000C'
  THEN ADD 1 TO 2 AT 500
IF POS 1 EX X'F1'
  THEN CVPC 2 FROM 500 TO 126 FORMAT 'ZZZ'
  THEN POS 121 MOD X'D7C1C7C540'
PRINT TYPE S LRECL 80
POS 1 MOD X'40'
MOVE 133 FROM 1 TO 2
GOTO GET
******                                       ******
* ERR_SUM:  CREATES A SUMMARY OF INTERVENTION     *
* MSGS (IOS003A) AND PSF (APS796I) MSGS.          *
******                                       ******
ERR_SUM
POS 1 MOD X'40'
MOVE 133 FROM 1 TO 2
SPACE 1
POS 2 MOD 'INTERVENTION COUNT DEVICE=cua = '
   CVPC 2 FROM 200 TO 37 FORMAT 'ZZZ'
   PRINT FROM 1 LRECL 80 TYPE S
POS 2 MOD 'INTERVENTION COUNT DEVICE=cua = '
   CVPC 2 FROM 250 TO 37 FORMAT 'ZZZ'
   PRINT FROM 1 LRECL 80 TYPE S
POS 2 MOD 'INTERVENTION COUNT DEVICE=cua = '
   CVPC 2 FROM 300 TO 37 FORMAT 'ZZZ'
   PRINT FROM 1 LRECL 80 TYPE S
POS 2 MOD 'INTERVENTION COUNT DEVICE=cua = '
   CVPC 2 FROM 350 TO 37 FORMAT 'ZZZ'
   PRINT FROM 1 LRECL 80 TYPE S
SPACE 1
POS 2 MOD 'PSF ERRORS LOGGED (ALL DEVICES) = '
   CVPC 2 FROM 400 TO 37 FORMAT 'ZZZ'
   PRINT FROM 1 LRECL 80 TYPE S
SPACE 1
*
POS 1 MOD X'40'
MOVE 133 FROM 1 TO 2
RETURN
/*


M A Shears
Shift Leader (UK)                                                      c Xephon

