An IMS terminal definition dialog

I have written an ISPF dialog program which we use to generate
our IMS terminal macros. This dialog is written in Assembler and
uses ISPF skeletons to take the information entered via a panel
and writes the output to an ISPFILE allocated by the
$GENTERM CLIST.

This program has been developed to define IMS SLU1 printers,
IMS SLU2 terminals, IMS 3270 local terminals, and IMS 3270
remote terminals. If your shop defines other type terminals like
SLUP the program can easily be modified to meet your shop's
needs.

STEP ONE

Copy the panels GENSYS and GENDEF to an ISPPLIB library.

GENSYS panel

)ATTR
  @ TYPE(INPUT)  INTENS(LOW)  JUST(LEFT) PAD(' ') CAPS(ON) COLOR(RED)
  _ TYPE(INPUT)  INTENS(HIGH) JUST(LEFT) PAD(' ') CAPS(ON)
  $ TYPE(TEXT)   INTENS(HIGH) COLOR(YELLOW)
  # TYPE(TEXT)   INTENS(HIGH) COLOR(TURQ)
  ^ TYPE(TEXT)   INTENS(HIGH) COLOR(PINK)
  ) TYPE(TEXT)   INTENS(HIGH) COLOR(WHITE)
  ( TYPE(TEXT)   INTENS(HIGH) COLOR(BLUE)
)BODY EXPAND(\\)
$--------------------$IMS TERMINAL DEFNITION DIALOG-------------------
$ OPTION$===>@OPT+
%
+
$  1$-#SLU1 $--  $DEFINE A SLU1 TYPE TERMINAL TO IMS
$  2$-#SLU2 $--  $DEFINE A SLU2 TYPE TERMINAL TO IMS
$  3$-#3270 $--  $DEFINE A 3270 REMOTE TERMINAL TO IMS
$  4$-#3270 $--  $DEFINE A 3270 LOCAL  TERMINAL TO IMS
$  X$-#EXIT $--  $TO #EXIT $USAIR TERMINAL DEFNITION DIALOG
%
%  IMS TERMINAL DIALOG IN USE BY &ZUSER  ON &ZDATE     AT &ZTIME
%
%
%
%
%
%
%
+ SELECT%OPTION+and HIT%ENTER to PROCESS your request
%
)INIT
 .HELP = ISR00003
 .CURSOR = OPT
 IF (&ZERRMSG ¬= ' ')
    .MSG = &ZERRMSG
    &ZERRMSG = ' '
)PROC
  &OPT = &OPT
  &ZTRAIL = .TRAIL
)END

GENDEF panel

)ATTR
  $ TYPE(TEXT)  INTENS(HIGH) COLOR(YELLOW)
  % TYPE(TEXT)  INTENS(HIGH) COLOR(YELLOW)
  ? TYPE(TEXT)  INTENS(HIGH) COLOR(RED)
  @ TYPE(INPUT) INTENS(LOW)  JUST(LEFT) PAD(' ') CAPS(ON) COLOR(RED)
)BODY EXPAND(\\)
%$-------------------IMS TERMINAL DEFINITION DIALOG-----------------
$ OPTION$===>@OPT+                                        _ZDATE  - &ZDATE
+
+PLEASE SUPPLY THE FOLLOWING TO ADD A TERMINAL OR PRINTER TO IMS.
+
%    NODE  NAME    %===>_VNAME    +               (TERMINAL NODE NAME)
%    LTERM NAME    %===>_LNAME        +           (LTERM NAME)
%    PROJECT NAME  %===>_PRO         +            (PROJECT NAME)
%    CONTROLLER ID %===>_CID            +         (CONTROLLER ID)
%    CONTINUE      %===>_CONT3 +                  (MUST BE YES OR NO)
%
% UPDATES WILL  BE MADE TO IMS310.TERM.ISPSLIB
%
%  ?&VNAME  ?&LNAME  %HAS BEEN DEFINED
%
%  ?&TYPE TERMINALS ARE BEING DEFINED
%
+ TO EXIT WITHOUT UPDATING TYPE AN $'X'+IN OPTION FIELD
%
)INIT
 .HELP = ISR00003
 IF (&ZERRMSG ¬= ' ')
    .MSG = &ZERRMSG
    &ZERRMSG = ' '
)PROC
  &VNAME = &VNAME
  &LNAME = &LNAME
  &PRO   = &PRO
  &CID   = &CID
  &OPT   = &OPT
  &ZDATE = &ZDATE
  &ZTRAIL = .TRAIL
)END

STEP TWO

Copy the message TRM00 to an ISPMLIB library.

TRM00 message member

TRM000 ' '                   .ALARM = YES .HELP = *
'TRM000- &TBSRVC NOT STARTED, QUOTES MISSING FOR &HOLDPDS            '

TRM001 ' '                   .ALARM = YES .HELP = *
'TRM001- INVALID OPTION. VALID CODES ARE 1, 2, 3,  4, AND X'
TRM002 ' '                   .ALARM = YES .HELP = *
'TRM002- NODE NAME LEFT BLANK PLEASE SPECIFY'

TRM003 ' '                   .ALARM = YES .HELP = *
'TRM003- LTERM NAME LEFT BLANK PLEASE SPECIFY'

TRM004 ' '                   .ALARM = YES .HELP = *
'TRM004- PROJECT NUMBER LEFT BLANK IF NOT KNOWN SPECIFY UNKNWON'

TRM005 ' '                   .ALARM = YES .HELP = *
'TRM005- CONTROLLER ID LEFT BLANK IF NOT KNOWN SPECIFY UNKNOWN'

TRM006 ' '                   .ALARM = YES .HELP = *
'TRM006- MORE TERMINALS TO DEFINE SPECIFY YES OR NO  MISSING INPUT'

STEP THREE

Copy the skeletons DLU1, DLU2, DOCL, DREM, LOCL,
REMT, SLU1, and SLU2 to an ISPSLIB library.

DLU1 skeleton

*                                       *** ADD &ZDATE   &PRO      ****
      TERMINAL NAME=&VNAME,COMPT1=(PRINTER1,MFS-SCS1)
         NAME  &LNAME,EDIT=(NO,ULC)

DLU2 skeleton

      TERMINAL NAME=&VNAME              *** ADD &ZDATE   &PRO     *****
         NAME  &LNAME,EDIT=(YES,ULC)

DOCL skeleton

*                                       *** ADD &ZDATE   &PRO       ***
      TERMINAL NAME=&VNAME
         NAME  &LNAME,EDIT=(YES,ULC)

DREM skeleton

*                                       *** ADD &ZDATE   &PRO       ***
      TERMINAL NAME=&VNAME
         NAME  &LNAME,EDIT=(YES,ULC)

LOCL skeleton

      TYPE     UNITYPE=(3270,LOCAL),UNIT=3277,MODEL=2,                 X
               FEAT=(PFK,NOCD,NOPEN),OPTIONS=(TRANRESP,NOCOPY)
*********************************************************************
*     CONTROLLER-ID:  &CID
*********************************************************************
*                                       *** ADD &ZDATE   &PRO       ***
      TERMINAL NAME=&VNAME
         NAME  &LNAME,EDIT=(YES,ULC)

REMT skeleton

      TYPE     UNITYPE=3270,UNIT=3277,MODEL=2,                         X
               FEAT=(PFK,NOCD,NOPEN),OPTIONS=(TRANRESP,NOCOPY)
*******************************************************************
*      CONTROLLER-ID : &CID
*******************************************************************
*                                   ZIC *** ADD &ZDATE   &PRO       ***
      TERMINAL NAME=&VNAME
         NAME  &LNAME,EDIT=(YES,ULC)

SLU1 skeleton

****                                                               ****
****                                                               ****
***********************************************************************
**** CONTROLLER-ID: &CID                                           ****
***********************************************************************
****                                                               ****
****                                                               ****
*                                       *** ADD &ZATE &PRO         ****
      TERMINAL NAME=&VNAME,COMPT1=(PRINTER1,MFS-SCS1)
         NAME  &LNAME,EDIT=(NO,ULC)

SLU2 skeleton

****                                                              *****
****                                                              *****
***********************************************************************
****   CONTROLLER-ID: &CID                                        *****
***********************************************************************
****                                                              *****
****                                                              *****
      TERMINAL NAME=&VNAME              *** ADD &ZDATE   &PRO     *****
         NAME  &LNAME,EDIT=(YES,ULC)
****                                                               ****

STEP FOUR

Modify the DEFTERM CLIST and copy it to any SYSPROC
library.

DEFTERM CLIST

PROC 0
/*  System Name:   IMS TERMINAL DEFINITION DIALOG
/*  CLIST  Name:   DEFTERM  - IMS TERMINAL DEFINTION DIALOG CLIST
/*  Narrative:     This clist front ends the IMS terminal dialog.
/*                 It is used to allow any front end processing
/*                 required to be inserted before the dialog is called.
/*   PLEASE USE THE LIBDEFS TO POINT TO THE LIBRARIES WHICH CONTAIN THE
/*   FOLLOWING MEMBERS.
/*  ISPMLIB LIBRARY CONTAINS THE MEMBER  TRM00
/*  ISPPLIB LIBRARY CONTAINS THE MEMBERS GENDEF
/*  ISPSLIB LIBRARY CONTAINS THE MEMBERS DLU1 DLU2 DOCL DREM LOCL REMT
/*                                       SLU1 SLU2
/*  ISPLLIB LIBRARY CONTAINS THE MEMBER  $GENTERM
/* THE ISPFILE LIBDEF FILE IS THE OUTPUT FILE WHICH THE $GENTERM DIALOG
/* WRITES THE IMS TERMINAL MACRO TO.
ISPEXEC CONTROL DISPLAY REFRESH
ISPEXEC LIBDEF ISPMLIB DATASET ID('YOUR.ISPF.ISPMLIB')
ISPEXEC LIBDEF ISPPLIB DATASET ID('YOUR.ISPF.ISPPLIB')
ISPEXEC LIBDEF ISPSLIB DATASET ID('YOUR.ISPF.ISPSLIB')
ISPEXEC LIBDEF ISPLLIB DATASET ID('YOUR.ISPF.ISPLLIB')
ISPEXEC LIBDEF ISPFILE DATASET ID('YOUR.ISPF.ISPFILE')
ISPEXEC SELECT PGM($GENTERM)
ISPEXEC LIBDEF ISPMLIB
ISPEXEC LIBDEF ISPPLIB
ISPEXEC LIBDEF ISPSLIB
ISPEXEC LIBDEF ISPLLIB
ISPEXEC LIBDEF ISPFILE
EXIT CODE(0)

STEP FIVE

Using the JCL shown below, assemble and link the $GENTERM
source code into any ISPLLIB library.

Assembly and link JCL

//**********************************************************************
//*   MVS/ESA ASSEMBLE AND LINK-EDIT IMS TERMINAL DEFINTION DIALOG     *
//*                        $GENTERM                                    *
//**********************************************************************
//ASM     EXEC PGM=IEV90,
//        PARM=(LIST,'LINECOUNT(66)',NODECK,OBJECT)
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR          <--- SYSTEM MACLIB
//         DD  DSN=SYS1.AMODGEN,DISP=SHR         <--- SYSTEM MAPPINGS
//SYSLIN   DD  DSN=&&OBJSET,DISP=(NEW,PASS),     <--- ASSEMBLED OBJECT
//             SPACE=(80,(200,50)),UNIT=SYSDA         PASS TO LINK-EDIT
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(3,3))
//SYSUT2   DD  DSN=&&SYSUT2,UNIT=SYSDA,SPACE=(CYL,(3,3))
//SYSUT3   DD  DSN=&&SYSUT3,UNIT=SYSDA,SPACE=(CYL,(3,3))
//SYSPUNCH DD  DUMMY
//SYSIN    DD  DSN=YOUR.PGM.SOURCE.LIB($GENTERM),
//             DISP=SHR
//*
//LKED    EXEC PGM=IEWL,COND=(0,LT,ASM),REGION=1024K,
//             PARM='LIST,LET,XREF,MAP'
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(200,20))
//SYSPRINT DD  SYSOUT=*
//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,DELETE)    <--- OBJECT INPUT
//         DD  DDNAME=SYSIN
//SYSLMOD  DD  DSN=YOUR.ISPLLIB($GENTERM),       <--- LOADLIB
//         DISP=SHR
//SYSLIB   DD  DSN=SYS1.LINKLIB,DISP=SHR         <--- SYSTEM MODS
//         DD  DSN=SYS1.MACLIB,DISP=SHR          <--- SYSTEM MACROS
//         DD  DSN=SYS1.AMODGEN,DISP=SHR         <--- SYSTEM MACROS
//         DD  DSN=SYS1.ISPLOAD,DISP=SHR         <--- ISPLINK

Source code for $GENTERM

***********************************************************************
*                 PROGRAM DOCUMENTATION INFORMATION                   *
*  NAME:        $GENTERM                                              *
*  PURPOSE:     DRIVER FOR ADDING TERMINALS TO OUR IMS SYSTEMS        *
*  INVOCATION:  Execute ISPF CLIST: DEFTERM                           *
*  SOFTWARE:    SOURCE CODE - YOUR.SOURCE.LIBRARY($GENTERM)           *
*               MODULE/TEST - YOUR.ISPLLIB.LIBRARY($GENTERM)          *
*               PANEL       - YOUR.ISPPLIB.LIBRARY(GENSYS)            *
*               PANEL       - YOUR.ISPPLIB.LIBRARY(GENDEF)            *
*               MESSAGES    - YOUR.ISPMLIB.LIBRARY(TRM00)             *
*               SKELETONS   - YOUR.ISPSLIB.LIBRARY(DLU1)              *
*               SKELETONS   - YOUR.ISPSLIB.LIBRARY(DLU2)              *
*               SKELETONS   - YOUR.ISPSLIB.LIBRARY(DOCL)              *
*               SKELETONS   - YOUR.ISPSLIB.LIBRARY(DREM)              *
*               SKELETONS   - YOUR.ISPSLIB.LIBRARY(LOCL)              *
*               SKELETONS   - YOUR.ISPSLIB.LIBRARY(REMT)              *
*               SKELETONS   - YOUR.ISPSLIB.LIBRARY(SLU2)              *
*               SKELETONS   - YOUR.ISPSLIB.LIBRARY(SLU2)              *
*               TERM MACROS - YOUR.ISPFILE.LIBRARY(IMSPSLU1)          *
*               TERM MACROS - YOUR.ISPFILE.LIBRARY(IMSPSLU2)          *
*               TERM MACROS - YOUR.ISPFILE.LIBRARY(IMSPLOCL)          *
*               TERM MACROS - YOUR.ISPFILE.LIBRARY(IMSPREMT)          *
***********************************************************************
*             HOUSEKEEPING SETUP AND START INSTUCTIONS                *
$GENTERM CSECT
         SAVE  (14,12),,*         SAVE REGISTERS
         LR    R12,R15            1ST BASE REGISTER ---> R12
         LA    R11,4095(R12)      2ND BASE REGISTER ---> R11
         USING $GENTERM,R12       MODULE ADDRESSABILITY
         USING $GENTERM+4095,R11  CONNECT CHAIN TO R12
         LR    R3,R13             CALLER'S SAVEAREA POINTER
         ST    R13,SAVEAREA+4     SAVE IT
         LA    R13,SAVEAREA       MODULE SAVEAREA POINTER
         ST    R13,8(R3)          SAVE IT
*        SET DIALOG OPTIONS AND DEFINE THE PROGRAM VARIABLES TO ISPF  *
         CALL  ISPLINK,(CONTROL,ERRORS,RETURN),VL
         CALL  ISPLINK,(VDEFINE,IVARS1,VARS1,ICHAR,IL8),VL
         CALL  ISPLINK,(VDEFINE,IVARS2,VARS2,ICHAR,IL8),VL
         CALL  ISPLINK,(VDEFINE,IVARS3,VARS3,ICHAR,IL10),VL
         CALL  ISPLINK,(VDEFINE,IVARS4,VARS4,ICHAR,IL15),VL
         CALL  ISPLINK,(VDEFINE,IVARS5,VARS5,ICHAR,IL3),VL
         CALL  ISPLINK,(VDEFINE,IVARS6,VARS6,ICHAR,IL1),VL
         CALL  ISPLINK,(VGET,IZDATE,SHARED),VL
*        DISPLAY THE WORK MANAGER DRIVER PANEL                        *
CALLDISP CALL  ISPLINK,(DISPLAY,PANEL1),VL    DRIVER PANEL
         CH    R15,=H'8'              TEST RC FROM DISPLAY
         BL    DISPLAY2               RC=0 I.E., "ENTER" KEY HIT
         B     EXIT                   "DETAIL" CALLED "DETAIL"
** SLU1 PRINTER
DISPLAY2 MVC   CURSOR,OPT             INITIALIZE CURSOR PLACEMENT
         MVC   CCID,=C' '             CLEAR OUT CCID
         CLC   OPT,=C'X'              OPTION X SELECTED
         BE    EXIT                   YES GO BYE BYE
         CLC   OPT,=C'1'              OPTION 1 SELECTED
         MVC   TYPE,=C'IMS SLU1'      MOVE IMS SLU1 TO VARIABLE TYPE
         MVC   FTSKEL,=C'SLU1'        MOVE SLU1 TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPSLU1'     MOVE SLU1 TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPSLU1)'   MOVE SLU1 TO VARIABLE FTCLS
** SLU2 TERMINAL
         BE    OPTION1                YES BRANCH TO OPTION1
         CLC   OPT,=C'2'              OPTION 2 SELECTED
         MVC   TYPE,=C'IMS SLU2'      MOVE IMS SLU2 TO VARIABLE TYPE
         MVC   FTSKEL,=C'SLU2'        MOVE SLU2 TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPSLU2'     MOVE SLU2 TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPSLU2)'   MOVE SLU2 TO VARIABLE FTCLS
         BE    OPTION1                YES BRANCH TO OPTION1
** 3270 REMOTE TERMINAL
         CLC   OPT,=C'3'              OPTION 3 SELECTED
         MVC   TYPE,=C'REM 3270'      MOVE REM 3270 TO VARIABLE TYPE
         MVC   FTSKEL,=C'REMT'        MOVE REMT TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPREMT'     MOVE IMSPREMT TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPREMT)'   MOVE IMSPREMT TO VARIABLE FTCLS
         BE    OPTION1                YES BRANCH TO OPTION1
** 3270 LOCAL TERMINAL
         CLC   OPT,=C'4'              OPTION 3 SELECTED
         MVC   TYPE,=C'LOC 3270'      MOVE REM 3270 TO VARIABLE TYPE
         MVC   FTSKEL,=C'LOCL'        MOVE LOCL TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPLOCL'     MOVE IMSPLOCL TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPLOCL)'   MOVE IMSPLOCL TO VARIABLE FTCLS
         BE    OPTION1                YES BRANCH TO OPTION1
         MVC   MSG,TRM001             MOVE TRM001 MESSAGE TO PANEL
         BAL   R10,SETMSG1            BRANCH TO SETMSG1
         B     CALLDISP               BRANCH TO CALLDISP
AGAIN    MVC   CCID,CID               MOVE CID TO CCID
OPTION1  MVC   OPT,=C' '              CLEAR OUT PREVIOUS OPTION
         CALL  ISPLINK,(DISPLAY,PANEL2),VL
         CLI   OPT,C'X'               EXIT OPTION SELECTED
         BE    EXIT                   YES GO BYE BYE
         CLI   VNAME,C' '             IS NODE BLANK
         BNE   LTERM                  NODE BLANK BRANCH TO NOGO1
         MVC   MSG,TRM002             MOVE TRM002 TO MSG
         BAL   R10,SETMSG1            GO INFORM THAT NODE IS BLANK
         MVC   CURSOR,VNAME           INITIALIZE CURSOR PLACEMENT
         B     OPTION1                BRANCH TO OPTION1
LTERM    CLI   LNAME,C' '             IS LTERM NAME LEFT BLANK
         BNE   PROID                  LTERM NOT BLANK
         MVC   MSG,TRM003             MOVE TRM003 TO MSG
         BAL   R10,SETMSG1            GO INFORM THAT LTERM IS BLANK
         MVC   CURSOR,LNAME           INITIALIZE CURSOR PLACEMENT
         B     OPTION1                BRANCH TO OPTION1
PROID    CLI   PRO,C' '               IS PROJECT # LEFT BLANK
         BNE   CNTRL                  PROJECT # NOT BLANK
         MVC   MSG,TRM004             MOVE TRM004 TO MSG
         BAL   R10,SETMSG1            INFORM THAT PROJECT # IS BLANK
         MVC   CURSOR,PRO             INITIALIZE CURSOR PLACEMENT
         B     OPTION1                BRANCH TO OPTION1
CNTRL    CLI   CID,C' '               IS CONTROLLER ID LEFT BLANK
         BNE   MORE                   NODE BLANK BRANCH TO NOGO1
         MVC   MSG,TRM005             MOVE TRM005 TO MSG
         BAL   R10,SETMSG1            INFORM THAT CID  IS BLANK
         MVC   CURSOR,CID             INITIALIZE CURSOR PLACEMENT
         B     OPTION1                CONTROLLER ID BLANK GOTO NOGO1
MORE     CLI   CONT3,C' '             IS CONT3 LEFT BLANK
         BNE   CHECK                  NO FIELDS NOT BLANK GOTO CHECK
         MVC   MSG,TRM006             MOVE TRM006 TO MSG
         BAL   R10,SETMSG1            INFORM THAT CID  IS BLANK
         MVC   CURSOR,CONT3           INITIALIZE CURSOR PLACEMENT
         B     OPTION1                CONT3 BLANK BRANCH TO NOGO1
CHECK    CLC   CCID,CID               IS CID THE SAME AS BEFORE
         BNE   TYPECHK2               NO BRANCH TO TYPECHK2
TYPECHK  EQU   *
         CLC   TYPE,=C'IMS SLU1'      IS TERMINAL TYPE A SLU1
         BE    SLU1                   YES BRANCH TO SLU1
         CLC   TYPE,=C'IMS SLU2'      IS TERMINAL TYPE A SLU2
         BE    SLU2                   YES BRANCH TO SLU2
         CLC   TYPE,=C'LOC 3270'      IS TERMINAL TYPE A LOCAL 3270
         BE    L3270                  YES BRANCH TO L3270
         CLC   TYPE,=C'REM 3270'      IS TERMINAL TYPE A REMOTE 3270
         BE    R3270                  YES BRANCH TO R3270
DEFTERM  EQU   *
         CALL  ISPEXEC,(OPN1,FTOPEN)
         CALL  ISPEXEC,(INCL1,FTINCL1)
         MVC   VTAMADD,VNAME
         MVC   IMSADD,LNAME
         MVC   OCID,CID
         MVC   OPRO,PRO
         CALL  ISPEXEC,(INCL2,FTINCL2)
         CALL  ISPEXEC,(CLS1,FTCLOSE1)
         CLC   CONT3,=C'NO'
         BE    EXIT
         CLC   CONT3,=C'YES'
         BE    AGAIN
SETMSG1  CALL  ISPLINK,(SETMSG,MSG),VL
         BR    R10
*        ISPF "VDEFINE" STRING FORMAT CONSTANTS AND LENGTHS           *
ICHAR    DC    C'CHAR    '        CHARACTER STRING FORMAT
IFIXED   DC    C'FIXED   '        FIXED FULLWORD BINARY FORMAT
IL1      DC    F'1'                  "   "   1   "
IL3      DC    F'3'                  "   "   3   "
IL4      DC    F'4'                  "   "   4   "
IL6      DC    F'6'                  "   "   6   "
IL8      DC    F'8'                  "   "   5   "
IL10     DC    F'10'                 "   "  10   "
IL11     DC    F'11'                 "   "  11   "
IL15     DC    F'15'                 "   "  15   "
*        ISPF SYMBOLIC NAME-LIST USED BY VDEFINE                      *
IVARS1   DS    0CL10
         DC    C'('
ITYPE    DC    C'TYPE    '
         DC    C')'
IVARS2   DS    0CL66
         DC    C'('
IZDATE   DC    C'ZDATE   '
IVNAME   DC    C'VNAME   '
ILNAME   DC    C'LNAME   '
IMSG     DC    C'MSG     '
ICURSOR  DC    C'CURSOR  '
ITBSRVC  DC    C'TBSRVC  '
SVTAMADD DC    C'VTAMADD '
SIMSADD  DC    C'IMSADD  '
         DC    C')'
IVARS3   DS    0CL18
         DC    C'('
ICID     DC    C'CID     '
SCID     DC    C'OCID    '
         DC    C')'
IVARS4   DS    0CL18
         DC    C'('
IPRO     DC    C'PRO     '
SPRO     DC    C'OPRO    '
         DC    C')'
IVARS5   DS    0CL10
         DC    C'('
ICONT3   DC    C'CONT3   '
         DC    C')'
IVARS6   DS    0CL10
         DC    C'('
IOPT     DC    C'OPT     '
         DC    C')'
VARS1    DS   0CL8                NAME-LIST USED BY VDEFINE
TYPE     DS    CL8                TERMINAL TYPE SLU1 SLU2 3270 LOCAL
*                                 3270 REMOTE
VARS2    DS   0CL64               NAME-LIST USED BY VDEFINE
ZDATE    DS    CL8                CURRENT DATE YY/MM/DD FROM ISPF
VNAME    DS    CL8                IMS NODE NAME AS KNOWN TO VTAM
LNAME    DS    CL8                IMS LTERM NAME
MSG      DS    CL8                MESSAGE IDENTIFIER FOR ISPMLIB
CURSOR   DC    CL8'OPT     '      PLACEMENT FOR CURSOR WITHIN PANEL
TBSRVC   DS    CL8                TABLE SERVICES FOR INDENTIFIER
VTAMADD  DS    CL8                IMS LTERM NAME
IMSADD   DS    CL8                IMS LTERM NAME
VARS3    DS   0CL20               NAME-LIST USED BY VDEFINE
CID      DS    CL10               CONTROLLER ID
OCID     DS    CL10               CONTROLLER ID
VARS4    DS   0CL30               NAME-LIST USED BY VDEFINE
PRO      DS    CL15               PROJECT NUMBER
OPRO     DS    CL15               PROJECT NUMBER
VARS5    DS   0CL3                NAME-LIST USED BY VDEFINE
CONT3    DS    CL3                YES OR NO MORE TERMINALS
VARS6    DS   0CL1                NAME-LIST USED BY VDEFINE
OPT      DS    CL1                SELECTED OPTION
SPACES   DC    C' '
CCID     DS    CL10               CID
*        CONSTANTS USED IN THE CALLING LIST TO "ISPLINK"              *
CONTROL  DC    C'CONTROL '
DISPLAY  DC    C'DISPLAY '
ERRORS   DC    C'ERRORS  '
SETMSG   DC    C'SETMSG  '
LIBDEF   DC    C'LIBDEF  '
LIBRARY  DC    C'LIBRARY '
ISPSLIB  DC    C'ISPSLIB '
ISPSUSR  DC    C'(ISPSUSR )'
DATASET  DC    C'DATASET '
SHARED   DC    C'SHARED  '
FTCLOSE  DC    C'FTCLOSE '
INCL1    DC    F'20'
FTINCL1  DC    C'FTINCL'
FTSP1    DC    C' '                   SPACE
FTOUT    DC    C'        '            OUTPUT SKELETON FILE
FTSP2    DC    C' '                   SPACE
FTNOFT   DC    C'NOFT'                NO FILE TAILORING
PUT1     DC    F'20'
VPUT1    DC    C'VPUT SVTAMADD SHARED'
INCL2    DC    F'11'
FTINCL2  DC    C'FTINCL'
FTSPACE  DC    C' '
FTSKEL   DC    C'    '
CLS1     DC    F'22'
FTCLOSE1 DC    C'FTCLOSE'
FTSP3    DC    C' '                   SPACE
FTNAM    DC    C'NAME'                FTCLOSE SKELETON NAME
FTCLS    DC    C'          '          SPACE
OPN1     DC    F'6'
FTOPEN   DC    C'FTOPEN'
RETURN   DC    C'RETURN  '
VCOPY    DC    C'VCOPY   '
VGET     DC    C'VGET    '
VDEFINE  DC    C'VDEFINE '
VREPLACE DC    C'VREPLACE'
VRESET   DC    C'VRESET  '
*        DMS SERVICES POSITIONAL PARM VALUES (DIALOG DEFAULTS)        *
PANEL1   DC    C'GENSYS  '        DRIVER DETAIL PANEL
PANEL2   DC    C'GENDEF  '        DRIVER PANEL FOR SLU1 DEVICES
         DC    CL1' '             USED TO CLEAR OUT THE FIELD BELOW
*        ISPF POSITIONAL PARMS REQUIRED BY SOME DMS SERVICES          *
P1       DC    C' '               DUMMY POSITIONAL PARM FOR ISPLINK
P2       DC    C' '                 "       "       "    "     "
P3       DC    C' '                 "       "       "    "     "
P4       DC    C' '                 "       "       "    "     "
P5       DC    C' '                 "       "       "    "     "
*        DIALOG MESSAGES DISPLAYED ON THE NEXT PANEL (ISPMLIB)        *
TRM000   DC    C'TRM000  '        &TBSRVC NOT STARTED
TRM001   DC    C'TRM001  '        INVALID ACTION CODE SELECTED
TRM002   DC    C'TRM002  '        NODE NAME FIELD LEFT BLANK
TRM003   DC    C'TRM003  '        LTERM NAME LEFT BLANK
TRM004   DC    C'TRM004  '        PROJECT NUMBER LEFT BLANK
TRM005   DC    C'TRM005  '        CONTROLLER ID FIELD LEFT BLANK
TRM006   DC    C'TRM006  '        MORE TERMINALS FIELD LEFT BLANK
*        SAVE AREA POINTED TO BY REGISTER 13                          *
SAVEAREA DS    18F                REGISTER'S SAVE AREA
         DC    C' '
SLU1     MVC   FTSKEL,=C'DLU1'        MOVE SLU1 TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPSLU1'     MOVE SLU1 TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPSLU1)'   MOVE SLU1 TO VARIABLE FTCLS
         B     DEFTERM
SLU2     MVC   FTSKEL,=C'DLU2'        MOVE DLU2 TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPSLU2'     MOVE IMSPSLU2 TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPSLU2)'   MOVE IMSPSLU2 TO VARIABLE FTCLS
         B     DEFTERM
L3270    MVC   FTSKEL,=C'DOCL'        MOVE DOCL TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPLOCL'     MOVE IMSPLOCL TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPLOCL)'   MOVE IMSPLOCL TO VARIABLE FTCLS
         B     DEFTERM
R3270    MVC   FTSKEL,=C'DREM'        MOVE DREM TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPREMT'     MOVE IMSPREMT TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPREMT)'   MOVE IMSPREMT TO VARIABLE FTCLS
         B     DEFTERM
TYPECHK2 EQU   *
         CLC   TYPE,=C'IMS SLU1'      IS TERMINAL TYPE A SLU1
         BE    FSLU1                  YES BRANCH TO FSLU1
         CLC   TYPE,=C'IMS SLU2'      IS TERMINAL TYPE A SLU2
         BE    FSLU2                  YES BRANCH TO FSLU2
         CLC   TYPE,=C'LOC 3270'      IS TERMINAL TYPE A LOCAL 3270
         BE    FL3270                 YES BRANCH TO FL3270
         CLC   TYPE,=C'REM 3270'      IS TERMINAL TYPE A REMOTE 3270
         BE    RM3270                 YES BRANCH TO RM3270
FSLU1    MVC   FTSKEL,=C'SLU1'        MOVE SLU1 TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPSLU1'     MOVE IMSPSLU1 TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPSLU1)'   MOVE IMSPSLU1 TO VARIABLE FTCLS
         B     DEFTERM
FSLU2    MVC   FTSKEL,=C'SLU2'        MOVE SLU2 TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPSLU2'     MOVE IMSPSLU2 TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPSLU2)'   MOVE IMSPSLU2 TO VARIABLE FTCLS
         B     DEFTERM
FL3270   MVC   FTSKEL,=C'LOCL'        MOVE LOCL TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPLOCL'     MOVE IMSPLOCL TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPLOCL)'   MOVE IMSPLOCL TO VARIABLE FTCLS
         B     DEFTERM
RM3270   MVC   FTSKEL,=C'REMT'        MOVE REMT TO VARIABLE FTSKEL
         MVC   FTOUT,=C'IMSPREMT'     MOVE IMSPREMT TO VARIABLE FTOUT
         MVC   FTCLS,=C'(IMSPREMT)'   MOVE IMSPREMT TO VARIABLE FTCLS
         B     DEFTERM
EXIT     CALL  ISPLINK,(VRESET),VL            >>> RESET FUNCTION POOL
         L     R13,SAVEAREA+4         POINT TO CALLER'S SAVEAREA
         RETURN (14,12),,RC=(15)      RESTORE REGISTERS AND RETURN
*        IKJEFTSR MACRO (NORMALLY NOT DISPLAYED, IE, NOGEN)           *
         END

STEP SIX

To invoke the $GENTERM dialog, execute the following
DEFTERM CLIST.

PROC 0
/*  System Name:   IMS TERMINAL DEFINITION DIALOG
/*  CLIST  Name:   DEFTERM  - IMS TERMINAL DEFINTION DIALOG CLIST
/*  Narrative:     This clist front ends the IMS terminal dialog.
/*                 It is used to allow any front end processing
/*                 required to be inserted before the dialog is called.
/*   PLEASE USE THE LIBDEFS TO POINT TO THE LIBRARIES WHICH CONTAIN THE
/*   FOLLOWING MEMBERS.
/*  ISPMLIB LIBRARY CONTAINS THE MEMBER  TRM00
/*  ISPPLIB LIBRARY CONTAINS THE MEMBERS GENDEF
/*  ISPSLIB LIBRARY CONTAINS THE MEMBERS DLU1 DLU2 DOCL DREM LOCL REMT
/*                                       SLU1 SLU2
/*  ISPLLIB LIBRARY CONTAINS THE MEMBER  $GENTERM
/* THE ISPFILE LIBDEF FILE IS THE OUTPUT FILE WHICH THE $GENTERM DIALOG
/* WRITES THE IMS TERMINAL MACRO TO.
ISPEXEC CONTROL DISPLAY REFRESH
ISPEXEC LIBDEF ISPMLIB DATASET ID('YOUR.ISPF.ISPMLIB')
ISPEXEC LIBDEF ISPPLIB DATASET ID('YOUR.ISPF.ISPPLIB')
ISPEXEC LIBDEF ISPSLIB DATASET ID('YOUR.ISPF.ISPSLIB')
ISPEXEC LIBDEF ISPLLIB DATASET ID('YOUR.ISPF.ISPLLIB')
ISPEXEC LIBDEF ISPFILE DATASET ID('YOUR.ISPF.ISPFILE')
ISPEXEC SELECT PGM($GENTERM)
ISPEXEC LIBDEF ISPMLIB
ISPEXEC LIBDEF ISPPLIB
ISPEXEC LIBDEF ISPSLIB
ISPEXEC LIBDEF ISPLLIB
ISPEXEC LIBDEF ISPFILE
EXIT CODE(0)


Bruce T Chalmers
Senior Systems Programmer
USAir Inc (USA)

