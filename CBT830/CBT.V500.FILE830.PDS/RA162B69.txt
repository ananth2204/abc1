Modifying SMS classes on migrated datasets


$FIX02 REXX EXEC

/*********************************************************************/
/*  In an SMS environment, you may have to change your ACS           */
/*  routine. This EXEC lets you change Data Class, Storage Class, or */
/*  Management Class for a dsn which may be migrated or not.         */
/*  For migrated datasets, the new choices come into effect in the   */
/*  recall.                                                          */
/*  To patch, see HSM Diagnosis Reference, MCD description.          */
/*  "f01" is used for input and "f02" for output. You execute f02    */
/*  to change the values.                                            */
/*********************************************************************/
 "alloc  file(f01) da('a5m00.lr.acs.fixcds') shr"
 "delete  'a5m00.lr.acs.fixcds.out' "
 "alloc file(f02) da('a5m00.lr.acs.fixcds.out') new catalog lrecl(121)
  unit(sysda) space(15 15) tracks recfm ( f b) dsorg (ps) "
 say 'select SMS...'
 dcl = 'DCP001'            /* data class to change */
 mcl = 'MCETUDE'           /* management class to change */
 scl = 'SCRECET'           /* storage class to change    */
 newdcl = 'AAA'            /* new data class    */
 newmcl = 'BBBBB'          /* new management class  */
 newscl = 'CCCCCC'         /* new storage class     */
  l1 = length(dcl)         /* length of data class */
  l2 = length(mcl)         /* length of management class */
  l3 = length(scl)         /* length of storage class */
 l10 = length(newdcl)      /* length of new data class */
 l20 = length(newmcl)      /* length of new management class */
 l30 = length(newscl)      /* length of new storage class */
  p1dc = "E4"              /* position to patch length DC */
  p2dc = "E6"              /* position to patch new DC    */
  p1sc = "104"             /* position to patch length SC */
  p2sc = "106"             /* position to patch new SC    */
  p1mc = "124"             /* position to patch length MC */
  p2mc = "126"             /* position to patch new MC    */
 "execio * diskr f01 (stem line1."
 do i = 1 to line1.0 by 1
   var1 = substr(line1.i,2,3)                    /* dsn is delimited */
   if var1 = 'FIX' then  dsn  = word(line1.i,3)  /* by the third ' ' */
      else nop
   var2 = substr(line1.i,2,4)
   select
      when var2 == '+0E0' then vdc = substr(line1.i,89,l1)
      when var2 == '+100' then vsc = substr(line1.i,89,l2)
      when var2 == '+120' then vmc = substr(line1.i,89,l3)
      otherwise nop
   end
   if (vdc = dcl) & (vmc = mcl) & (vsc = scl) then
       do
        call hsm2 newdcl p1dc p2dc l10 l1
        call hsm2 newmcl p1mc p2mc l20 l2
        call hsm2 newscl p1sc p2sc l30 l3
        vdc = ''       /* only one patch to do */
       end
 end
       say "that's all folks"
  /***************************************************/
  /*   close and free the datasets                   */
  /***************************************************/
  "execio 0 diskr f01 (finis"
  "execio 0 diskr f02 (finis"
  "free file(f01 f02) "
  exit
  /***************************************************/
  /*   used  procedure                               */
  /***************************************************/
  hsm2:
  parse arg acs p1 p2 lnew lold   /* to change DC, MC, or SC         */
  pad= '40'                       /* the length of newname           */
  if  lnew >= lold then           /* you must pad with x'40'         */
     do
       acs = c2x(acs)             /* convert character to hex        */
     end
     else                         /* if new length < original length */
     do
       p = ''
       do k = 1 to (lold - lnew)
         p= p||pad
       end
       acs = c2x(acs)||p          /* convert character to hex        */
     end
  push "hsend fixcds d" dsn "patch(x'"||p1||"' x'000"||lnew||"')"
  push "hsend fixcds d" dsn "patch(x'"p2||"' x'"||acs||"')"
  queue
  "execio * diskw f02"
  return


Luc Remy (France)                 c Xephon 1996

