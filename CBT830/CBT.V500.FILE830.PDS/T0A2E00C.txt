Obtaining the system-id in REXX

Most systems programmers log on to multiple systems and find
it necessary to perform different tasks for each system, such as
allocating datasets that are only used by the system they are in.
To do this it is necessary to find out which system they are
logged on to.

In the September 1991 edition of MVS Update, I read an
article that described a method of displaying the SMF-id on all
ISPF panels. The article used an Assembler program called
PWLTASK1 to obtain the SMF-id. After reading the article, I
thought maybe it would be possible to achieve the same result
using REXX. I decided to write a REXX EXEC called
CHECKSYS. This reads the Communications Vector Table
(CVT) control block and stores the system-id in the RESULT
variable. You can call CHECKSYS from another REXX EXEC
and use the RESULT variable to perform the specific tasks you
want. I have also created a REXX EXEC called SHOWSYS,
which calls CHECKSYS and displays the system-id.


CHECKSYS

/*********************************************************************/
/* REXX :  THIS EXEC DETERMINES THE SYSTEM ID                        */
/*********************************************************************/
TRACE
NUMERIC DIGITS 10                         /* ALLOW FOR FULLWORD ADDR */
CVT    = ADDC(16,'00')                    /* FIND CVT ADDR           */
SYSTEM = ADDC(CVT,0154)                   /* FIND SYSTEM ADDR        */
RETURN STORAGE(D2X(AD1+X2D(AD2)),4)       /* STORES SYSID IN RESULT  */
ADDC:ARG AD1,AD2
RETURN C2D(STORAGE(D2X(AD1+X2D(AD2)),4))


SHOWSYS

/**********************************************************/
/* REXX : THIS EXEC CALLS 'CHECKSYS' AND DISPLAYS THE     */
/*        SYSTEM ID.                                      */
/**********************************************************/
TRACE
CALL CHECKSYS
SAY 'THIS MVC SYSTEM IS ' RESULT
EXIT


Robert R Mason
Assistant Systems Programmer
Sydney Electricity (Australia)                               c Xephon 1992

