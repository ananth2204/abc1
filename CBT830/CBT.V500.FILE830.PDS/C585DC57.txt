IEF238D re-visited

The article Including the VOLSER in message IEF238D by
Roger Bowler (MVS Update Issue 18) presented an idea for
making the message IEF238D more meaningful by including
the VOLSER of the volume which is required.  We also
thought this would be a useful feature.  Although the VOLSER
is now included in message IEF489I, this has usually scrolled
off the screen by the time the operator has a chance to look at
it.  We also thought it might be handy to include other
information in the IEF238D message, namely the device type
(as this is not always immediately obvious) and the density (for
3420s).

We used a different method from the original suggestion:
WTOs and WTORs are scanned to find the preceding IEF489
and IEF247 messages, and the VOLSER and one of the
required UNITs is saved.  The UCB chain is then scanned to
find what type of device requires allocation.  This information
(if found) is then appended to the original IEF238D message to
give a message along these lines:

   IEF238D JOBNAMEX - REPLY DEVICE NAME OR 'CANCEL' FOR '111111' (3380).

or

   IEF238D JOBNAMEX - REPLY DEVICE NAME OR 'CANCEL' FOR '111111'
                      (3420 1600/6250 BPI).

This program runs in an MVS/ESA 3.1.1 environment.

RPLYXIT4 TITLE 'HANDLE ''IEF238D'' MESSAGES'
*****    DESCRIPTION =  COMMUNICATION TASK USER EXIT FOR IEF238D  *****
*                       MESSAGES (REPLY DEVICE NAME OR 'CANCEL').     *
*        TYPICALLY, IF A UNIT IS REQUIRED WHICH IS NOT CURRENTLY      *
*        ONLINE/AVAILABLE, WE GET THESE MESSAGES:                     *
*     JOBNNNNN  IEF403I JOBNAMEX - STARTED                            *
*     JOBNNNNN  IEF244I JOBNAMEX A - UNABLE TO ALLOCATE 1 UNIT(S)     *
*                       AT LEAST 1 OFFLINE UNIT(S) NEEDED.            *
*               IEF489I JOBNAMEX A OUT1 NEEDS 1 UNIT(S) FOR           *
*               IEF489I VOLUME PACK01                                 *
*               IEF247I JOBNAMEX - 190,191,19D,19E OFFLINE            *
*               IEF247I JOBNAMEX - 19C,19F,288 NOT ACCESSIBLE         *
*              *IEF238D JOBNAMEX - REPLY DEVICE NAME OR 'CANCEL'.     *
*        THE IEF238D IS THE ONLY WTOR, AND SO REMAINS ON THE SCREEN   *
*        WHILE THE OTHERS WILL BE QUICKLY SCROLLED OFF...ALSO, THE    *
*        OPERATORS ARE NOT ALWAYS QUICKLY AWARE WHAT TYPE OF DEVICE   *
*        IS REQUIRED. THE PURPOSE OF THIS REPLY EXIT IS TO ALTER THE  *
*        IEF238D MESSAGE TO THIS FORMAT:                              *
*              *IEF238D JOBNAMEX - REPLY DEVICE NAME OR 'CANCEL'      *
*                                  FOR 'VOLUME' (TYPE).               *
*        WHERE 'VOLUME' IS THE VOLUME FROM THE IEF489I MESSAGE, AND   *
*        TYPE IS 3420, 3480, ETC...                                   *
*        WE WILL ACCOMPLISH THIS BY SCANNING THE WQE'S AND SAVING THE *
*        VOLUME FROM THE IEF489I MESSAGE, AS WELL AS A UNIT FROM THE  *
*        IEF247I MESSAGE(S). WE WILL USE THIS UNIT NAME TO DETERMINE  *
*        THE UNIT TYPE BY SCANNING THE UCB TABLE UNTIL WE FIND THE    *
*        UNIT IN QUESTION AND EXAMINE ITS UCBTYP BYTES. WE WILL THEN  *
*        INSERT THIS NEW TEXT INTO THE IEF238D MESSAGE AND SET THE    *
*        'CTXTRCMT' BIT ON TO SHOW THE MESSAGE HAS BEEN ALTERED, AND  *
*        UPDATE THE MESSAGE LENGTH IN 'CTXTTLEN'.                     *
*        IF WE DO NOT FIND MESSAGE IEF489I FOR THE VOLID (EG THIS MAY *
*        HAPPEN AFTER THERE HAS BEEN A 'K' COMMAND) WE WILL LEAVE THE *
*        MESSAGE UNALTERED.                                           *
*        ENTRY POINT =  RPLYXIT4                                      *
*        ATTRIBUTES  =  RENT, REUS, AC(1)                             *
*        INPUT DATA  =  REG1 POINTS TO THE ADDRESS OF THE CTXT        *
*                       REG13 ADDRESS OF STANDARD SAVE AREA           *
*                       REG14 RETURN POINT                            *
*                       REG15 ENTRY POINT                             *
*        REGISTERS SAVED = REG0 - REG15 (VIA 'BAKR')                  *
*****    MACROS          =  GETMAIN, MODESET, FREEMAIN, AXSET.    *****
RPLYXIT4 AMODE 31
RPLYXIT4 RMODE ANY
         BAKR  R14,0                   SAVE CALLER DATA ON STACK
         LR    R12,R15                 GET ENTRY POINT
         USING RPLYXIT4,R12            MODULE ADDRESSABILITY
         L     R7,0(R1)                CTXT LOAD ADDRESS
         USING CTXT,R7                 ESTABLISH ADDRESSABILITY TO CTXT
* GET DYNAMIC WORKAREA...                                             *
         GETMAIN  RU,LV=DATAEND
         LR    R11,R1                  ADDRESS RETURNED IN R1
         USING DATAAREA,R11            ADDRESSABILITY TO DYNAMIC AREA
* ZOOM THRU WTO/R BUFFERS...                                          *
         MVC   VOLUME(6),=6C'X'        SET VOLUME
         MVC   UNIT(3),=3C' '          SET UNIT
         MODESET MODE=SUP,KEY=ZERO     SUPERVISOR STATE
         EPAR  R5                      GET PRIMARY ASID...
         ST    R5,ASID                 ...SAVE IT
         L     R2,16                   GET CVT ADDRESS
         L     R2,100(R2)              GET UCM ADDRESS (CVTCUCB)
         USING UCM,R2                  ADDRESSABILITY TO UCM
         L     R4,UCMRPYQ              GET ADDRESS OF FIRST ORE?
         LTR   R4,R4                   ANY?
         BZ    RETURN                  NO...CAN'T DO ANYTHING - RETURN
         L     R3,UCMWTOQ              GET ADDRESS OF FIRST WQE
         LTR   R3,R3                   ANY?
         BZ    RETURN                  NO...CAN'T DO ANYTHING - RETURN
         LA    R8,WQEAREA              ADDRESS OF AREA TO MOVE TO
         USING WQE,R8                  ADDRESSABILITY TO WQE
         L     R6,CTXTTXPJ             LOAD POINTER TO TEXT
         USING CTXTATTR,R6             ADDRESSABILITY TO TEXT
         BAL   R9,AUTHIT               AUTHORIZE FOR X-MEM
GETDATA  DS    0H
         LA    R4,WQESIZE              LENGTH FOR MVCP
         LH    R1,UCMCTID              GET COMM. TASK ASID
         SSAR  R1                      SET SECONDARY ASID
         XR    R9,R9                   SET STORAGE KEY FOR 2ND A.S.
         MVCP  0(R4,R8),0(R3),R9       MOVE DATA TO OUR (PRIMARY) A.S.
         LH    R9,WQETXTLN             GET TEXT LENGTH
         CH    R9,=H'21'               21 = SHORTEST MESSAGE WE WANT
         BL    GETNEXT                 TOO SMALL...GET NEXT WQE
         CLC   WQETXT(16),IEF489I      MSG ' IEF489I VOLUME '?
         BE    SAVEVOL                 YES..SAVE THE VOLUME
         CLC   WQETXT(9),IEF247I       MSG ' IEF247I '?
         BE    SAVEUNIT                YES..SAVE THE UNIT
         B     GETNEXT                 NO...GET NEXT WQE
SAVEVOL  DS    0H
         MVC   VOLUME(6),WQETXT+16     SAVE THE VOLUME REQUIRED
         B     GETNEXT                 GET NEXT WQE
SAVEUNIT DS    0H
         CLI   UNIT,C' '               ALREADY GOT A UNIT?
         BNE   GETNEXT                 YES..DON'T SAVE THIS ONE
         CLC   WQETXT+9(8),CTXTTMSG+8  MATCHING JOBNAME?
         BNE   GETNEXT                 NO...GET NEXT WQE...
         MVC   UNIT(3),WQETXT+20       YES..SAVE UNIT REQUIRED
         B     GETNEXT                 GET NEXT WQE
GETNEXT  DS    0H
         L     R3,WQELKP               GET ADDRESS OF NEXT WQE
         LTR   R3,R3                   ANY?
         BZ    ENDSCAN                 NO...LET'S SEE WHAT WE CAUGHT
         B     GETDATA                 YES..GO CHECK IT
ENDSCAN  DS    0H
         BAL   R9,UNAUTHIT             RESET X-MEM AUTHORIZATION
         CLC   VOLUME(6),=6C'X'        DID WE CATCH A VOLUME?
         BE    RETURN                  NO...LEAVE MSG AS IT IS...
         MVC   CTXTTMSG+48(35),TEXT    SET UP EXTRA TEXT
         MVC   CTXTTMSG+54(6),VOLUME   SET UP VOLUME IN TEXT
         CLI   UNIT,C' '               ANY UNIT FOUND?
         BNE   FINDUCB                 YES..SCAN FOR DEVICE TYPE
         MVC   CTXTTMSG+62(7),ENDIT    NO...BLANK OUT UNIT
         B     SETLEN                  GO AND SET NEW LENGTH
         DROP  R2,R8
* NOW WE HAVE A DEVICE (CUU) - LET'S SEE WHAT IT IS...                *
FINDUCB  DS    0H
         L     R1,16                   GET CVT POINTER
         L     R1,1076(R1)             GET UCB SCAN ADDRESS (CVTUCBSC)
         ST    R1,UCBSCA               SAVE IN DYNAREA
         USING UCBOB,R2                ADDRESSABILITY TO UCB DSECT
         LA    R1,WORKAREA             SET UP UCB SCAN PARMS
         ST    R1,PARMA                 "  "   "   "     "
         LA    R1,DEVCLASS              "  "   "   "     "
         ST    R1,PARMB                 "  "   "   "     "
         LA    R1,ADDRUCB               "  "   "   "     "
         ST    R1,PARMC                 "  "   "   "     "
         OI    PARMC,X'80'              "  "   "   "     "
         XC    ADDRUCB,ADDRUCB          "  "   "   "     "
         XC    WORKAREA,WORKAREA        "  "   "   "     "
         MVI   DEVCLASS,X'00'           "  "   "   "     "
UCBLOOP  DS    0H
         LA    R1,PARMA                PARMLIST ADDRESS
         L     R15,UCBSCA              SCAN ROUTINE ADDRESS
         BALR  R14,R15                 CALL SCAN ROUTINE
         LTR   R15,R15                 END OF UCB'S?
         BNZ   SETBLANK                YES..IF NOT FOUND, BLANK OUT
         L     R2,ADDRUCB              GET UCB ADDRESS
         MVC   UCBCUU(2),UCBCHAN       GET UCB CUU
         UNPK  UNPKFLD(5),UCBCUU(3)    UNPACK X'OCUU' + 1 CHARACTER
         TR    UNPKFLD+1(3),TRTAB-240  TRANSLATE TO CHARACTER HEX
         CLC   UNPKFLD+1(3),UNIT       IS IT OUR UCB?
         BNE   UCBLOOP                 NO...TRY THE NEXT ONE
* NOW WE'VE FOUND THE ECB FOR OUR UNIT, LET'S SEE WHAT SORT OF DEVICE *
* IT IS (FOR TAPES GO FURTHER AND CHECK DENSITY REQUIRED)...          *
GOTUCB   DS    0H
         TM    UCBTBYT3,UCB3TAPE       TAPE CLASS?
         BO    ITSTAPE                 YES..
         TM    UCBTBYT3,UCB3DACC       DASD CLASS?
         BO    ITSDASD                 YES..
         B     SETBLANK                NO...BLANK OUT UNIT
ITSTAPE  DS    0H
         TM    UCBTBYT4,X'03'          3400 DEVICE? (IE 3420)
         BO    ITS3420                 YES..
         TM    UCBTBYT4,X'80'          3480 DEVICE? (IE CART)
         BO    ITS3480                 YES..
         B     SETBLANK                NO...BLANK OUT UNIT
ITS3420  DS    0H
         MVC   CTXTTMSG+63(4),=C'3420' SET UP 3420 IN TEXT
         TM    UCBTBYT2,X'20'          800/1600 BPI?
         BO    DEN800                  YES
         TM    UCBTBYT2,X'10'          1600/6250 BPI?
         BO    DEN6250                 YES
         B     SETCLOSE                NO...DON'T WORRY ABOUT DENSITY
DEN800   DS    0H
         MVC   CTXTTMSG+68(15),SET800  SET UP 800/1600 DENSITY IN TEXT
         B     SETLEN                  GO AND SET NEW LENGTH
DEN6250  DS    0H
         MVC   CTXTTMSG+68(15),SET1600 SET UP 1600/6250 DENSITY IN TEXT
         B     SETLEN                  GO AND SET NEW LENGTH
ITS3480  DS    0H
         MVC   CTXTTMSG+63(4),=C'CART' SET UP CART IN TEXT
         B     SETCLOSE                GO AND SET NEW LENGTH
ITSDASD  DS    0H
         TM    UCBTBYT4,X'OE'          3380 DEVICE?
         BO    ITS3380                 YES..SET IT UP
         TM    UCBTBYT4,X'0F'          3390 DEVICE?
         BO    ITS3390                 YES..SET IT UP
         MVC   CTXTTMSG+63(4),=C'DASD' NO...JUST SAY DASD THEN
         B     SETCLOSE                GO AND SET NEW LENGTH
ITS3380  DS    0H
         MVC   CTXTTMSG+63(4),=C'3380' SET UP 3380 IN TEXT
         B     SETCLOSE                GO AND SET NEW LENGTH
ITS3390  DS    0H
         MVC   CTXTTMSG+63(4),=C'3390' SET UP 3390 IN TEXT
         B     SETCLOSE                GO AND SET NEW LENGTH
SETBLANK DS    0H
         MVC   CTXTTMSG+62(7),ENDIT    NO...BLANK OUT UNIT
         B     SETLEN                  GO AND SET NEW LENGTH
SETCLOSE DS    0H
         MVC   CTXTTMSG+67(2),=C').'   CLOSE UNIT DESCRIPTION WITH ')'
* SHOW SYSTEM WE HAVE NEW TEXT AND TEXT LENGTH AND RETURN...          *
SETLEN   DS    0H
         LH    R3,CTXTTLEN             GET LENGTH OF ORIGINAL TEXT
         AH    R3,=H'34'               ADD LENGTH WE'VE TACKED ON
         CH    R3,CTXTTLMX             BIGGER THAN MAX ALLOWED?
         BNH   SETLEN2                 NO...OK THEN
         LH    R3,CTXTTLMX             YES..SET TO MAX
SETLEN2  DS    0H
         STH   R3,CTXTTLEN             SAVE UPDATED TEXT LENGTH
SETFLAG  DS    0H
         OI    CTXTRFB1,CTXTRCMT       TELL SYSTEM WE'VE CHANGED TEXT
         B     RETURN                  GO BACK
*        FREE DYNAMIC AREA AND RETURN. ..                             *
RETURN   EQU   *
         FREEMAIN  RU,LV=DATAEND,A=(R11)  FREE STORAGE
         XR    R15,R15                 ALWAYS RC=0
         PR    ,                       RESTORE CALLER DATA, RETURN
AUTHIT   DS    0H               AUTHORIZE FOR CROSS-MEMORY SERVICES
         AXSET AX=AXSET                SET AUTH. INDEX
         BR    R9                      RETURN FROM ROUTINE
UNAUTHIT DS    0H            UN-AUTHORIZE FOR CROSS-MEMORY SERVICES
         L     R5,ASID                 RESTORE ASID
         SSAR  R5                      RESET ASID
         AXSET AX=AXUNSET              RESET AUTH. INDEX
         BR    R9                      RETURN FROM ROUTINE
AXSET    DC    H'1'
AXUNSET  DC    H'0'
IEF489I  DC    CL16' IEF489I VOLUME '
IEF247I  DC    CL09' IEF247I '
TEXT     DC    CL35' FOR ''VOLUME'' (UNIT                '
ENDIT    DC    CL7'.      '
TRTAB    DC    C'0123456789ABCDEF'
SET800   DC    CL15'800/1600 BPI). '
SET1600  DC    CL15'1600/6250 BPI).'
         LTORG
DATAAREA DSECT                         DYNAMIC STORAGE AREA
ASID     DS    F
VOLUME   DS    CL6                     VOLUME FROM WQE
UNIT     DS    CL3                     UNIT FROM WQE
WQEAREA  DS    CL(WQESIZE)
UNPKFLD  DS    CL5
UCBCUU   DS    CL3
* UCB SCAN PARAMETERS...
PARMA    DS    A                       ADDR OF 100 BYTE WORK AREA
PARMB    DS    A                       ADDR OF DEVCLASS BYTE
PARMC    DS    A                       ADDR OF WORD TO HOLD UCB ADDR
UCBSCA   DS    A                       ADDR OF UCB SCAN RTN (EX CVT)
ADDRUCB  DS    A                       ADDR OF NEXT UCB
WORKAREA DS    0D
         DS    XL100
DEVCLASS DS    XL1
DATAEND  EQU   *-DATAAREA
         IHAWQE
         IEECUCM FORMAT=NEW
         IEZVX100
         IEFUCBOB PREFIX=YES
         END   RPLYXIT4


G W Carson
Systems Programmer (UK)                                    c Xephon 1991

