TSO command to monitor users' screen images

When supporting TSO/ISPF users, it is frequently a problem that it is
impossible to see what is displayed on their screens.  To have this
ability would aid problem determination as well as providing a useful
security tool in certain circumstances.

The following program achieves this with an SRB scheduled into the
user's address space, which finds various ISPF control blocks based on
the fact that all ISPF dialogs are invoked with register 9 pointing to
the ISPF Terminal Logical Display (TLD) area.  By chaining through to
the current Request Block (RB) the save area for the registers can be
found and the contents of the TLD can be used to locate the ISPTABLS
address.  This area contains several addresses, one of which points to a
screen buffer area where a copy of the ISPF image can be found.  The SRB
copies this to an area in fixed CSA and terminates.  The TSO command
then copies the CSA to a work area and displays it on the terminal using
a full-screen TPUT.  The result is an exact copy of what the targeted
user's screen shows, although sometimes it may be the previous ISPF
screen image that is reproduced.

To use this command (it must be APF authorised) enter SEE user-id, where
user-id is the desired target - the ISPF image (if any) will then be
displayed on your terminal.  Press enter to repeat the process as
required, or press PF3/15 to terminate.  Do not use PA1 to exit as this
will bypass the termination code.  The time delay (1.25 secs) allowed
for the SRB to complete could be altered depending on the overall MVS
performance and SCHEDULE SCOPE=LOCAL could be changed to GLOBAL for
faster execution of the SRB.  Since this code modifies CSA it is
advisable to test it outside service hours.  This code has been tested
on ISPF Version 2 and MVS/XA.  ISPF Version 1 has different screen
display logic and an image can be located in the Terminal Physical
Display (TPD) area - an IPCS dump of an ISPF user's address space can be
used to find out the location.

SEE      CSECT
* SYNTAX: SEE userid  (NB. OMIT userid FOR A LIST OF TSO USERS).
* MODULE MUST BE AUTHORISED UNDER TSO (IN IKJEFTE2 LIST) AS WELL AS
* BEING FROM AN AUTHORISED LIBRARY AND LINKED AC=1, THIS CODE IS NOT
* REENTRANT. MODIFY CALLER CHECKING AS REQUIRED FOR SITE. INVOKE
* COMMAND AS A COMMAND PROCESSOR ONLY (DO NOT USE CALL). PRESS ENTER
* TO REPEAT SCREEN COPY OR PF3/15 TO END THE COMMAND.
         STM   R14,R12,12(R13)           SAVE REGS
         LR    R12,R15                   SET BASE REG
         USING SEE,R12
         ST    R13,SAVEAREA+4            BACKWARD CHAIN
         LR    R11,R13
         LA    R13,SAVEAREA              POINT TO OUR SAVE AREA ADDR
         ST    R13,8(,R11)               FORWARD CHAIN
         USING SRBSECT,R11               SRB
         LM    R2,R5,0(R1)               CPPL PARMS
         USING PSCB,R4                   PSCB
         TM    PSCBATR1,PSCBCTRL+PSCBACCT  CALLER OPER & ACCT PRIV? *
         BNO   DISALLOW                  NO                         *
         CLC   PSCBUSER(2),=CL2'SS'      SITE CHECK ON CALLERS ID   *
         BNE   DISALLOW                  NOT SYS PROG USER          *
         B     TESTAPF                   YES CONTINUE
DISALLOW TPUT  =CL20'COMMAND ILLEGAL',20 NOT ALLOWED BY THIS USER
         B     OUT                       EXIT
TESTAPF  TESTAUTH FCTN=1                 IS MODULE AUTHORISED ?
         LTR   R15,R15                   TEST IT
         BZ    SETUSER                   YES
         TPUT  =CL20'MODULE NOT APF OK',20  CANNOT DO IT
         B     OUT                       EXIT
SETUSER  LA    R5,TARGET                 POINT TO VARIABLE
         LH    R3,0(R2)                  LOAD LEN OF BUFFER
         LH    R4,2(R2)                  LOAD REL OFF PARM
         LA    R4,4(R4)                  LOAD OFFSET OF PARM
         CR    R4,R3                     OFF = LEN THEN NO PARM
         BNE   LOOPUSER                  CONTINUE
         MVC   TARGET,=CL8'LIST'         IF NO PARM THEN LIST USERS
         B     TSOCHECK                  PROCEED WITH LIST
LOOPUSER LR    R6,R2                     COMMAND BUFFER
         AR    R6,R4                     PLUS OFFSET
         MVC   0(1,R5),0(R6)             MOVE ONE BYTE
         LA    R5,1(R5)                  UP OFFSET
         LA    R4,1(R4)                  UP OFFSET
         CR    R4,R3                     OFF = LEN THEN END
         BL    LOOPUSER                  NOT YET
         OC    TARGET,STATFD             UPPER CASE WITH BLANKS
TSOCHECK MVC   ASCB,=F'0'                INIT
         L     R2,16                     CVT
         L     R2,556(R2)                ASVT
         L     R9,516(R2)                MAX ADDR SP
         SLL   R9,2                      TIMES 4
         LA    R9,528(R9,R2)             END OF TAB
         LA    R2,528(R2)                ASCB TAB
LOOPASCB CR    R2,R9                     END YET
         BNL   ENDTAB                    YES
         TM    0(R2),X'80'               ASID AVAILABLE
         BO    NEXT                      NO
         L     R3,0(R2)                  LOC ASCB
         CLC   0(4,R3),=CL4'ASCB'        IS IT OK
         BNE   NEXT                      NO
         L     R4,60(R3)                 ASCBTSB
         LTR   R4,R4                     ADDR SET
         BZ    NEXT                      NO THEN NOT TSO USER
         L     R4,176(R3)                USERID NAME ADDR
         CLC   TARGET,=CL8'LIST'         LIST OPTION ?
         BNE   NOLIST                    NO
         TPUT  (R4),8                    LIST USERID
         B     NEXT                      AND NEXT
NOLIST   CLC   TARGET,0(R4)              IS IT USER
         BNE   NEXT                      NO
         LA    R3,0(R3)                  GET ASCB ADDR
         ST    R3,ASCB                   SAVE ADDR OF ASCB
         B     ENDTAB                    END OF SCAN
NEXT     LA    R2,4(R2)                  BUMP PTR
         B     LOOPASCB                  ASCB LOOP
ENDTAB   CLC   TARGET,=CL8'LIST'         LIST OPTION ?
         BE    OUT                       YES OUT
         CLC   ASCB,=F'0'                ADDR SET
         BNE   ONTSO                     YES
         TPUT  =CL20'USER NOT ON TSO',20 NO
         CLI   FIRST,C'Y'                FIRST LOOP ?
         BNE   ENDPROC                   NO, CLEAN UP AND EXIT
         B     OUT                       ELSE OUT NOW
ONTSO    CLI   FIRST,C'Y'                FIRST LOOP ?
         BNE   MAINLOOP                  NO, CONTINUE LOOP
PROCESS  STFSMODE ON,INITIAL=YES         SET FS MODE
         MODESET MODE=SUP,KEY=ZERO       KEY 0
         LH    R2,=Y(SRBENDC-SRBPART)    COMMON CODE LEN
         GETMAIN RU,LV=(2),SP=228        GET FIXED STORAGE
         ST    R2,COMMON                 SAVE LEN
         ST    R1,COMMON+4               SAVE ADDR
         LR    R4,R1                     ADDR IN CSA
         LR    R5,R2                     LEN
         LR    R3,R2                     LEN
         LA    R2,SRBPART                ADDR OF SRB CODE TO COPY
         MVCL  R4,R2                     MOVE THE CODE TO CSA
         LH    R0,=Y(SBEND-SRB)          LEN OF SRB CONTROL BLOCK
         GETMAIN RU,LV=(0),SP=228        GET FIXED STORAGE
         ST    R1,SRBADR                 SAVE ADDR
         LR    R11,R1                    ADDRESS SRBSECT
         XC    SRB(SBDAT-SRB),SRB        SRB CONTROL BLOCK
         MVC   SRBID,=C'SRB '            PREPARE BLOCK
         MVC   SRBASCB,ASCB              SET ASCB FOR SRB
         L     R1,COMMON+4               SET UP SRB
         ST    R1,SRBEP                  "
         LA    R1,SBRECOV-SRBPART(R1)    "
         ST    R1,SRBRMTR                "
         LA    R1,SBWK                   "
         ST    R1,SRBPARM                "
         LA    R1,SBSAVE                 "
         ST    R1,SRBSAVE                "
         MVI   FIRST,C'N'                NOT FIRST TIME THRU
MAINLOOP MODESET KEY=ZERO,MODE=SUP       KEY 0
         MVC   SBRETCOD,=F'0'            CLEAR RETCODE
         SCHEDULE SRB=(R11),SCOPE=LOCAL  ISSUE SRB ASYNCRONOUSLY
         MODESET KEY=NZERO,MODE=PROB     KEY NON 0
         STIMER WAIT,BINTVL==F'125'      WAIT 1.25 SECS FOR SRB TO RUN
         CLC   SBRETCOD,=F'8'            RETCODE CHECK
         BNE   OKPROC                    NOT 8
         MVC   STATFD,=CL12'NOT ISPF TCB' NO TLD FOUND
         B     DISPLAY                   DISPLAY IT
OKPROC   CLC   SBRETCOD,=F'4'            ANY SCREEN DATA?
         BNE   NODATA                    NO
         MVC   STATFD,=CL12'SCREEN FOUND'  ISPF SCREEN FOUND
         LA    R1,SBDAT+1                NEW SCREEN BUFFER
         LA    R2,SCRCOPY                LAST ONE
         LA    R3,8                      240 * 8 = 1920
LOOPC    MVC   0(240,R2),0(R1)           COPY IT
         TR    0(240,R2),TABLE           CLEAN (REMOVE NON-PRINTABLES)
         LA    R1,240(R1)                INCREMENT PTR
         LA    R2,240(R2)                INCREMENT PTR
         BCT   R3,LOOPC                  AND LOOP FOR 1920 BYTES
         B     DISPLAY                   DISPLAY IT
NODATA   MVC   STATFD,=CL12'NOSRB INFO' RETCODE STILL ZERO
DISPLAY  MVC   STAT1,STAT2               UPDATE STATUS
         TPUT  SCREEN,LENS,FULLSCR       DISPLAY IMAGE
         TGET  TBUFF,L'TBUFF,ASIS,WAIT   ISSUE TGET
         LTR   R15,R15                   TEST RC
         BNZ   ENDPROC                   BAD SO OUT
         CLI   TBUFF,243                 PF3 ?
         BE    ENDPROC                   YES OUT
         CLI   TBUFF,195                 PF15?
         BE    ENDPROC                   YES OUT
         B     TSOCHECK                  CHECK USER ON TSO AND LOOP
ENDPROC  LA    R2,SBRECOV-SRBPART        TERMINATION CODE
         A     R2,COMMON+4               ADD CODE OFFSET
         L     R1,ASCB                   ASCB ADDR OF TARGET
         MVC   ASID,36(R1)               ASID VALUE
         MODESET KEY=ZERO,MODE=SUP       KEY 0
         PURGEDQ RMTR=(R2),ASID=ASID     PURGE SRB
         LA    R2,SBEND                  END OF SRB
         SR    R2,R11                    MINUS START FOR LEN
         FREEMAIN R,LV=(R2),A=(R11),SP=228  FREE STORAGE
         LM    R4,R5,COMMON              RELOAD LEN/ADDR OF CSA
         FREEMAIN R,A=(R5),LV=(R4),SP=228   FREE STORAGE
         MODESET KEY=NZERO,MODE=PROB     KEY NON 0
         TPUT  CLRSCRN,L'CLRSCRN,FULLSCR CLEAR SCREEN
         STLINENO LINE=1,MODE=OFF        SET FS MODE OFF
OUT      L     R13,4(R13)                RELOAD SAVE AREA ADDR
         RETURN (14,12),RC=0             RETURN TO CALLER
SRBPART  DS    0D               SRB CODE
         DROP  R12              DROP OLD BASE
         BALR  R5,0             BASE REG FOR SRB
         USING *,R5             USING IT
         L     R3,SBTLD-SBWK(R1)    LOAD TLD ADDR IF ANY
         CLC   TLD,0(R3)        ALREADY FOUND ?
         BE    TLDOK            YES
         L     R3,16            NO, GO FIND IT VIA CVT
         L     R3,0(R3)         TCB WORDS
         L     R3,12(R3)        ASCB
         L     R3,108(R3)       ASXB
         L     R3,8(R3)         TCB
         L     R3,0(R3)         SVRB
         L     R3,68(R3)        R9SAVE = TLD1
         CLC   0(3,R3),TLD      CHECK IT
         BE    TLDOK            YES IT IS THERE
         XC    SBTLD-SBWK(4,R1),SBTLD-SBWK    NOT THERE
         MVC   SBRETCOD-SBWK(4,R1),F8   SET RETCODE FOR NO TLD
         BR    R14                      EXIT
TLDOK    ST    R3,SBTLD-SBWK(R1)        SAVE TLD ADDR
         L     R3,32(R3)                ISPTABLS ADDR
         L     R3,336(R3)               (ISPF V2 METHOD)
         LA    R3,324(R3)               UP A BIT
         MVC   SBDAT-SBWK+0(240,R1),0(R3)           COPY
         MVC   SBDAT-SBWK+240(240,R1),240(R3)       DATA
         MVC   SBDAT-SBWK+480(240,R1),480(R3)       WITHOUT
         MVC   SBDAT-SBWK+720(240,R1),720(R3)       USING
         MVC   SBDAT-SBWK+960(240,R1),960(R3)       A
         MVC   SBDAT-SBWK+1200(240,R1),1200(R3)     LOOP
         MVC   SBDAT-SBWK+1440(240,R1),1440(R3)     FOR
         MVC   SBDAT-SBWK+1680(240,R1),1680(R3)     SAFETY.
         MVC   SBRETCOD-SBWK(4,R1),F4               SET RC
SBRECOV  BR    R14                                  EXIT
TLD      DC    C'TLD1'                              TLD EYECATCH
F4       DC    F'4'                                 RC 4
F8       DC    F'8'                                 RC 8
SRBENDC  DS    0D
COMMON   DC    2F'0'                                SAVE REGS
SRBADR   DC    A(0)                                 SRB ADDR
ASCB     DC    A(0)                                 ASCB ADDR
TARGET   DC    CL8' '                               TARGET USERID
ASID     DC    H'0'                                 ASID VALUE
FIRST    DC    CL1'Y'                               LOOP FLAG
         LTORG
SAVEAREA DC    18F'0'                               SAVE AREA
TABLE    DS    0XL256                               CLEAN UP TABLE
         DC    64X'40'
         DC    XL16'404140404040404040404A4B4C4D4E4F'
         DC    XL16'504040404040404040405A5B5C5D5E5F'
         DC    XL16'606140404040404040406A6B6C6D6E6F'
         DC    XL16'404040404040404040797A7B7C7D7E7F'
         DC    XL16'408182838485868788898A8B8C8D8E8F'
         DC    XL16'909192939495969798999A9B9C9D9E9F'
         DC    XL16'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
         DC    XL16'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    XL16'C0C1C2C3C4C5C6C7C8C9CA4040404040'
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'
         DC    XL16'E0E1E2E3E4E5E6E7E8E9404040404040'
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'
SCREEN   EQU   *
CLRSCRN  DC    X'C3115D7F1140403C404000'    CLEAR SCREEN
ATTR1    DC    X'1140401DF413'              SET ATTR FOR 3270
SCRCOPY  DC    1919X'40'                    COPY OF USERS SCREEN
LENS     EQU   *-SCREEN
         ORG   SCRCOPY+1906                 STATUS FIELD POSITION
STAT1    DC    CL13' '
         ORG
FILL     DC    C' '                         ALLOW WRAP OVER BYTE
STAT2    DC    C'>'
STATFD   DC    CL12' '                      TEMPORARY STATUS
TBUFF    DC    CL10' '
         IHASRB                             SRB CONTROL BLOCK LAYOUT
SBWK     DS    0A
SBSAVE   DS    18F
SBTLD    DS    F                            TLD1 ADDRESS
SBRETCOD DS    F                            SRB RETURN CODE
SBDAT    DS    CL1920                       SCREEN AREA GRABBED
SBEND    EQU   *                            END OF CSA AREA
SEE      CSECT
         IKJPSCB                            PSCB
         END


          € Xephon 1988



