Managing batch resources

It is useful to manage batch resources such as job classes or account
numbers with a security software package like IBM's RACF.  It is also
possible to use JES2 exit 6, which gets control during and at the end of
the internal text scan.

This exit runs in the subtask environment.  This provides MVS dispatcher
control and asynchronous processing so the SVCs do not affect JES2
global performance.  All one has to do in a RACF/JES2 environment is to
assemble and link edit the following code into SYS1.LINKLIB and provide
EXIT and LOAD statements in the JES2 PARMLIB member.  To protect batch
resources, it is then necessary to define the classes JOBCLASS and
ACCTNMBR in RACF's class descriptor and router table.  To activate the
classes, issue the appropriate SETROPTS command.  Appropriate profiles
can then be defined for resource usage.  Read authority means resource
usage authority.

The following exit has been in production at our site since January
1988.  If one does not code any profiles for the JOBCLASS and ACCTNMBR
classes, the exit prevents STEPCAT/JOBCAT usage for all classes other
than 'S'.  If this is not desired, updating the code following the label
DECIDE is the only action necessary.

Changing the JOBCLASS after the conversion phase through operator
command or software products like SDSF is possible without RACF
invocation.  This function must be restricted in a suitable way,
otherwise it jeopardises security for that resource.  Note that in the
following example no password checking takes place.  In the case of
security information propagation this is not necessary, and in the case
of security information coded in the JCL, it is done by JES2.

***** TO VERIFY THAT JOBCAT AND STEPCARD CARDS ARE NOT USED *****
*     TO VERIFY USAGE OF JES2 RESOURCES SUCH AS JOBCLASSES,     *
*****     ACCOUNT NUMBERS (AND SO ON)                       *****
         COPY  $HASPGBL
JES2X06  $MODULE ENVIRON=SUBTASK,                                      *
               $HASPEQU,                                               *
               TEXT,                                                   *
               KEYS,                                                   *
               DEB,                                                    *
               NEL,                                                    *
               $JQE,                                                   *
               $DTE,                                                   *
               $DTECNV,                                                *
               $XECB,                                                  *
               $ERA,                                                   *
               $BUFFER,                                                *
               $JCT,                                                   *
               $NHD,                                                   *
               $CAT,                                                   *
               $JOE,                                                   *
               $CNVWORK,                                               *
               $HCT,                                                   *
               $PADDR,                                                 *
               $PCE,                                                   *
               $MIT,                                                   *
               $TQE,                                                   *
               $JAW,                                                   *
               CMAUP,                                                  *
               RPL
UEXIT6   $ENTRY CSECT=YES,BASE=R12   EXIT ROUTINE ENTRY POINT
         SAVE  (14,12)
         USING PCE,R13             ESTABLISH SYMB. ADDRESSB. OF PCE
         LR    R12,R15          LOAD BASE REGISTER R12
         L     R3,12(R1)        LOAD JCT BASE ADDRESS
         USING JCT,R3           ESTABLISH SYMB. ADDRESSB. OF JCT
         CLC   JCTUSER4,INDIC      HAS GETMAIN ALREADY BEEN DONE?
         BNE   DOGETM              NO - DO IT
*   R4 HAS TO POINT TO GETMAINED WORK AREA                           *
*   R1 HAS TO BE SET TO ITS INITIAL VALUE (POINTER TO EXIT           *
*            PARAMETER LIST)                                         *
CONT1    L     R4,JCTUSER5         R4 POINTS TO GETMAINED WORKAREA
         USING STORMAP,R4          ADDRESSABILITY OF GETMAINED STORAGE
         L     R1,24(R13)          RESTORE R1 CONTENTS
         L     R0,20(R13)          RESTORE R0 CONTENTS
         LTR   R0,R0            R0 = 0 ?
         BNZ   TESTR0           NO - BRANCH TO XCSTMUEE END
*   XCSTCUEE END: SCAN INTERNAL TEXT                                 *
*   IS THE CONVERTED JCL STMT A JOB CARD?                            *
         L     R5,4(R1)         R5 POINTS TO INTERNAL TEXT AREA
         USING TEXT,R5
         TM    STRINDC5,JOBSTR  IS IT A JOBCARD?
         BNO   DDCARD           NO - EXAMINE IF DD CARD
*** THE FORMAT OF THE BEGINNING OF THE TEXT RECORD                 ***
*   AND THE POSITIONAL PARAMETERS IS:                                *
*   BYTE      LENGTH     DESCRIPTION                                 *
*   1         2          LENGTH OF TEXT RECORD                       *
*   3         1          RESERVED                                    *
*   4         3          MISCELLANEOUS INDICATORS                    *
*   7         1          X'B4'                                       *
*   8         1          # OF POSITIONAL PARAMETERS                  *
*   9         N          POSITIONAL PARAMETERS LIST                  *
*   9+N       M          KEYWORD PARAMETERS LIST                     *
*   THE FORMAT OF POSITIONAL PARAMETERS LIST IS:                     *
*   1         1          JOBNAME PARAMETER LENGTH                    *
*   2         N          JOBNAME PARAMETER                           *
*   2+N       1          ACCOUNT PARAMETER INDICATOR                 *
*   3+N       M          ACCOUNT PARAMETER LIST                      *
*   3+N+M     1          PROGRAMMER'S NAME PARAMETER LENGTH          *
*   4+N+M     L          PROGRAMMER'S NAME PARAMETER                 *
*   THE FORMAT OF THE ACCOUNT PARAMETER LIST IS:                     *
*   (IF ACCOUNT PARAMETER INDICATOR HAS HIGH ORDER BIT ON)           *
*   IF ACCOUNT PARAMETER INDICATOR X'80' = 0:                        *
*   1         1          ACCOUNT PARAMETER INDICATOR,                *
*                        LENGTH OF ONLY SUBPARAMETER                 *
*   2         N          1ST AND ONLY SUBPARM                        *
*   IF ACCOUNT PARAMETER INDICATOR X'80' = 1:                        *
*   1         1          ACCOUNT PARAMETER INDICATOR,                *
*                        NUMBER OF SUBPARMS                          *
*   2         1          LENGTH OF 1ST SUBPARM                       *
*   3         M          1ST SUBPARAMETER                            *
***                      REPEATED K TIMES ACCORDING TO INDICATOR   ***
         LA    R6,7(R5)         R6 POINTS TO FIELD THAT CONTAINS
*                               NUMBER OF POSITIONAL PARAMETERS
         SLR   R10,R10          CLEAR R10
         IC    R10,0(R6)        LOAD # OF POS. PARMS IN R10
         CH    R10,H#0          DOES NO POS. PARM EXIST?
         BE    POSEND           YES - INVESTIGATE KEYWORD PARMS
         LA    R6,8(R5)         R6 POINTS TO FIRST LENGTH FIELD
         SLR   R8,R8            CLEAR R8
         IC    R8,0(R6)         LOAD LENGTH FIELD INTO R8
         LA    R6,1(R8,R6)      R6 POINTS TO ACCOUNT PARAMETER INDICATOR
         CH    R10,H#1          DOES ONLY 1 POS. PARM EXIST?
         BE    POSEND           YES - INVESTIGATE KEYWORD PARMS
*   GET ACCOUNTING NO FROM JCL                                       *
GETACC   LA    R8,0(R6)         R8 POINTS TO ACCT PARM INDICATOR
         TM    0(R6),B'10000000' ONLY ONE ACCOUNTING PARM CODED?
         BZ    FT1              YES- ACCT PARM IND. CONTAINS ACCT
*                               NUMBER LENGTH
         LA    R8,1(R6)         R8 POINTS TO LENGTH FIELD OF ACCT
*                               NUMBER
FT1      MVC   ACCLENG,0(R8)    STORE LENGTH OF ACCOUNTIN NUMBER
         CLI   ACCLENG,X'00'    ZERO LENGTH?
         BE    FT2              YES - NO ACCOUNT NUMBER SPECIFIED
         MVI   ACCIND,C'Y'      SET ACCOUNT NUMBER INDICATOR
         LA    R8,1(R8)         R8 POINTS TO ACCOUNTING NUMBER
         IC    R7,ACCLENG       LOAD ACC NO LENGTH
         BCTR  R7,0             DECREMENT LENGTH VALUE
         LA    R9,ACCTNO        LOAD ACC NO ADDRESS
         EX    R7,DMVC2
*  POSITION R6 TO BEGINNING OF KEYWORD PARAMETER AREA                *
FT2      SLR   R8,R8            CLEAR R8
         ICM   R8,1,0(R6)       LOAD INDICATOR FIELD INTO R8
         BNM   PRELOOP          X'80' = 0: ONLY ONE ACCOUNTING SUBPARM
         N     R8,F#127         EVALUATE # OF ACC. SUBPARMS
         LA    R6,1(R6)         R6 NOW POINTS TO THE FIRST LENGTH FIELD
*                               OF A MULTIPLE SUBPARMS LIST
         SLR   R7,R7            CLEAR R7
         IC    R7,0(R6)         LOAD LENGTH VALUE IN R7
         B     LOOP1ST
PRELOOP  SLR   R7,R7            CLEAR R7
         IC    R7,0(R6)         LENGTH VALUE IN R7
         LA    R8,1             ONLY 1 ACC. SUBPARM
*                               R8: # OF ACCOUNTING SUBPARMS
*                               R7: LENGTH OF SUBPARM
*                               R6: ADDRESS OF NEXT LENGTH FIELD
LOOP1ST  LA    R6,1(R7,R6)      R6 NOW POINTS TO THE NEXT LENGTH FIELD
         SLR   R7,R7            CLEAR R7
         IC    R7,0(R6)         LOAD LENGTH OF NEXT POS. PARM INTO R7
         BCT   R8,LOOP1ST       DECREMENT R8, IF IT IS NOT ZERO,
*                               BRANCH TO LOOP START
         CH    R10,H#2          DO ONLY 2 POSITIONAL PARMS EXIST?
         BE    POSEND           YES - INVESTIGATE KEYWORD PARAMETERS
         SLR   R8,R8            CLEAR R8
         IC    R8,0(R6)         LOAD LENGTH VALUE OF PGMR'S NAME IN R8
         LA    R6,1(R8,R6)      R8 POINTS TO 1ST KEYWORD PARM
POSEND   ST    R6,PARMADDR      R6 POINTS TO KEYWORD PARAMETERS
*  R6 NOW POINTS TO START OF KEYWORD PARAMETER AREA                  *
*  ENDKEY FOUND (LAST KEYWORD PARM READ) ?                           *
KEYWORDS CLI   0(R6),ENDK       IS IT THE LAST PARM?
         BE    RETURN0          YES - NO CLASS PARM FOUND
*   GET JOBCLASS AND SECURITY INFORMATION                            *
JCLASS   CLI   0(R6),CLASSJK    CLASS= ?
         BNE   ULABEL           NO - SEE IF IT IS USER=
         MVC   CLASSID,3(R6)    MOVE CLASS INTO FIELD
         MVI   CLASSIND,C'Y'    SET INDICATOR TO YES
         B     JOBLOOP          INVESTIGATE NEXT PARAMETER
ULABEL   CLI   0(R6),USERK      USER= ?
         BNE   GLABEL           NO - SEE IF IT IS GROUP=
         CLI   1(R6),X'00'      DOES ANOTHER PARM FOLLOW IMMEDIATELY?
         BE    JOBLOOP          YES - INVESTIGATE NEXT PARAMETER
         MVI   USIND,C'Y'       SET INDICATOR TO YES
         MVC   ULENGTH,2(R6)    GET  USERID LENGTH
         SLR   R8,R8            CLEAR R8
         IC    R8,2(R6)         LOAD USERID LENGTH
         BCTR  R8,0
         SLR   R9,R9            CLEAR R9
         LA    R9,USERID        ADDRESS OF USERID FIELD
         EX    R8,DMVC          GET USERID
         B     JOBLOOP          INVESTIGATE NEXT PARAMETER
GLABEL   CLI   0(R6),GROUPK     GROUP= ?
         BNE   JOBLOOP          NO - INVESTIGATE NEXT PARAMETER
         CLI   1(R6),X'00'      DOES ANOTHER PARM FOLLOW IMMEDIATELY?
         BE    JOBLOOP          YES - INVESTIGATE NEXT PARAMETER
         MVI   GRIND,C'Y'       SET INDICATOR TO YES
         MVC   GLENGTH,2(R6)    GET GROUP LENGTH
         SLR   R8,R8            CLEAR R8
         IC    R8,2(R6)         LOAD GROUP LENGTH
         BCTR  R8,0
         SLR   R9,R9            CLEAR R9
         LA    R9,GRPID         ADDRESS OF GROUP FIELD
         EX    R8,DMVC          GET GROUP
         B     JOBLOOP          INVESTIGATE NEXT PARAMETER
*** INCREMENT KEYWORD POINTER R6                                   ***
*   THE  FORMAT OF KEYWORD PARAMETERS IN INTERNAL TEXT IS:           *
*   BYTE       DESCRIPTION                                           *
*      1       KEY FIELD, SEE IEFVKEYS  MACRO                        *
*      2       NUMBER OF SUBPARAMETERS                               *
*              IF ZERO: ANOTHER KEY FIELD FOLLOWS IMMEDIATELY        *
*              IF NOT ZERO: SUBPARAMETERS FOLLOW                     *
*    3-N       SUBPARAMETER LIST                                     *
*    THE FORMAT OF THE SUBPARAMETER LIST IS AS FOLLOWS:              *
*       1      IF X'80' BIT IS ZERO: LENGTH FIELD                    *
*              IF X'80' BIT IS ONE: # OF SUBSUBPARAMETERS            *
*     2-N      IF X'80' BIT IS ZERO: SUBPARAMETER                    *
*              IF X'80' BIT IS ONE: SUBSUBPARAMETER LIST             *
*    THE FORMAT OF THE SUBSUBPARAMETER LIST IS AS FOLLOWS:           *
*       1      LENGTH FIELD                                          *
*     2-N      SUBPARAMETER                                          *
*  PURPOSE OF THIS CODEBLOCK IS TO POSITION R6 TO                    *
*  THE NEXT KEYFIELD                                                 *
JOBLOOP  LA    R6,1(R6)        R6 POINTS TO # OF SUBPARMS FIELD
         SLR   R7,R7           CLEAR R7
         ICM   R7,1,0(R6)      LOAD '# OF SUBPARAMETERS' --> R7
         BNZ   JOBLOOP1        '# OF SUBPARAMETERS' ¬= 0
*                              ==> SEARCH NEXT KEY
         LA    R6,1(R6)        '# OF SUBPARAMETERS' = 0 ==>
         B     JOBLOOP5        SCAN NEXT KEYWORD PARM
JOBLOOP1 LA    R6,1(R6)        R6 POINTS TO LENGTH OR
*                              # OF SUBSUBPARAMETERS FIELD
JOBLOOP2 SLR   R8,R8           CLEAR R8
         ICM   R8,1,0(R6)      LOAD LENGTH / # OF SUBSUBPARM VALUE
*                              INTO R8
         BNM   JOBLOOP3        X'80' = 0: IT IS A LENGTH FIELD
         N     R8,F#127        X'80' = 1: EVALUATE # OF SUBSUBPARMS
*                              VALUE
         LA    R6,1(R6)        R6 POINTS TO LENGTH FIELD
         B     JOBLOOP4
JOBLOOP3 LA    R8,1            ONLY 1 SUBSUBPARAMETER
JOBLOOP4 DS    0H              SITUATION: R6 POINTS TO LENGTH FIELD
*                              R7: # OF SUBPARMS
*                              R8: # OF SUBSUBPARMS
         SLR   R9,R9           CLEAR R9
         ICM   R9,1,0(R6)      LOAD LENGTH VALUE INTO R9
         LA    R6,1(R9,R6)     POINT TO NEXT SUBSUBPARM FIELD
         BCT   R8,JOBLOOP4     REPEAT UNTIL ALL SUBSUBPARMS PROCESSED
         BCT   R7,JOBLOOP2     REPEAT UNTIL ALL SUBPARMS PROCESSED
JOBLOOP5 ST    R6,PARMADR
         B     KEYWORDS
DDCARD   TM    STRINDCS,DDSTR  IS IT A DD STATEMENT?
         BNO   RETURN0         NO - RETURN WITH 0
*   LOCATE DDNAME                                                    *
         LA    R6,6(R5)        R6 POINTS TO DDNAME LENGTH FIELD
         SLR   R7,R7           CLEAR R7
         IC    R7,0(R6)        LOAD DDNAME LENGTH INTO R7
         BCTR  R7,0            DECREMENT LENGTH
         EX    R7,DCLC1        IS IT A STEPCAT CARD?
         BE    SSTEP           YES - SET STEPCAT INDICATOR
         EX    R7,DCLC2        IS IT A JOBCAT CARD?
         BE    SJOB            YES - SET JOBCAT INDICATOR
         B     RETURNO         NO CAT DD STATEMENTS
*   SET INDICATORS                                                   *
SSTEP    MVC   STEPCIND,=C'Y'
         B     RETURNO
SJOB     MVC   JOBCIND,=C'Y'
         B     RETURNO
*   XCSTMUEE END: TEST TABLE IF JOB IS TO BE CANCELLED, FREEMAIN     *
TESTR0   LA    R7,4            LOAD 4 INTO R7
         CR    R0,R7           R0 = 4?
         BNE   RETURN0         NO
*** THE FOLLOWING DATA IS SAVED IN GETMAINED AREA SO FAR:          ***
*     CLASSID              JOBCLASS                                  *
*     JOBCIND              Y IF JOBCAT CARD FOUND                    *
*     STEPCIND             Y IF STEPCAT CARD FOUND                   *
*     ACCTNO               ACCOUNT NUMBER                            *
*     USIND                Y IF USER      IS JCL - CODED             *
*     GRIND                Y IF GROUP     IS JCL - CODED             *
*     USERID               USERID       IF USIND = Y                 *
*     GRPID                GROUP        IF GRIND = Y                 *
*   THE FOLLOWING DATA IS YET TO BE SAVED:                           *
*     USERID               USERID ASSOCIATED TO THIS JOB             *
*     GRPIND               GROUP  ASSOCIATED TO THIS JOB             *
***   JOBIND               Y IF THIS JOB IS A BACKGROUND BATCH JOB ***
GETDATA  LA    R8,JCTNJHDR     LOAD ADDRESS OF NETWORK JOB HEADER
         USING NJH,R8          EST. SYMB. ADDRESSABILITY
JOBTEST  TM    JCTJOBFL,JCTBATCH IS IT A BATCH JOB?
         BNO   RETFO           NO - EXECUTE STC/TSU
         MVC   JOBIND,=C'Y'    YES - STORE JOBFLAG
USTEST   CLI   USIND,C'Y'      IS USERID JCL-CODED?
         BE    GRTEST          YES - BRANCH
         MVC   USERID,NJH2SUSR SAVE SUBMITTER'S USERID
         LA    R9,USERID       SET R9 TO
         LA    R9,7(R9)        ADDRESS OF LAST BYTE OF USERID
         LA    R10,8           SET R10 TO MAX LENGTH
ULOOP    TRT   0(1,R9),TAB     INVESTIGATE 1 CHAR
         BZ    UCON1           ALPHABETIC CODE - BRANCH
         BCTR  R10,0           DECREMENT R10
         BCTR  R9,0            DECREMENT R9
         C     R10,=X'00000000'
         BL    UCON2           ZERO LENGTH FOUND
         B     ULOOP
UCON2    LA    R10,0           SET LENGTH TO ZERO
UCON1    ST    R10,LENGTH      STORE USERID LENGTH
         MVC   ULENGTH(1),LENGTH+3
GRTEST   CLI   GRIND,C'Y'      IS GROUP  JCL-CODED?
         BE    RACPROC         YES - BRANCH
         MVC   GRPID,NJH2SGRP  SAVE SUBMITTER'S GROUPID
         LA    R9,GRPID        SET R9 TO
         LA    R9,7(R9)        ADDRESS OF LAST BYTE OF GROUP
         LA    R10,8           SET R10 TO MAX LENGTH
GLOOP    TRT   0(1,R9),TAB     INVESTIGATE 1 CHAR
         BZ    GCON1           ALPHABETIC CODE - BRANCH
         BCTR  R10,0           DECREMENT R10
         BCTR  R9,0            DECREMENT R9
         C     R10,=X'00000000'
         BL    GCON2           ZERO LENGTH FOUND
         B     GLOOP
GCON2    LA    R10,0           SET LENGTH TO ZERO
GCON1    ST    R10,LENGTH      STORE USERID LENGTH
         MVC   GLENGTH(1),LENGTH+3
*    INVESTIGATE RACF PROFILES TO SET ACCAUTH, CLASAUTH              *
RACPROC  CLC   JOBIND,=C'Y'    IS IT A BATCH JOB?
         BNE   RETFO           NO - EXECUTE TSU/STC
         MVI   ACCAUTH,C'Y'
         MVI   CLASAUTH,C'Y'
         LA    R9,ULENGTH      LOAD USERID ADDRESS
         LA    R8,GLENGTH      LOAD GROUP ADDRESS
         LA    R7,ACEE         LOAD ACEE ADDRESS
         MVC   DCACEE(56),CACEE MOVE LIST FORM INTO GETMAINED AREA
         ST    R9,DCACEE+4     STORE USERID ADDRESS INTO GETMAINED A.
         ST    R8,DCACEE+20    STORE GROUP ADDRESS INTO GETMAINED A.
         ST    R7,DCACEE+52    STORE ACEE ADDRESS INTO GETMAINED AREA
         RACINIT MF=(E,DCACEE) IDENTIFY USER
         C     R15,HEXZEROS    RACINIT COMPLETED SUCCESSFULLY ?
         BE    CN1             YES - CHECK CLASS AUTHORISATION
IF       MVI   ACCAUTH,C'N'    NO ACCTNO AUTHORISATION
         MVI   CLASAUTH,C'N'   NO JOBCLASS AUTHORISATION
         B     CN3
CN1      CLI   CLASSIND,C'Y'   IS CLASS PARM SUPPLIED IN JOBCARD?
         BNE   KF              NO - BYPASS RACHECK PROCESSING
         L     R9,ACEE         LOAD ACEE ADDRESS
         LA    R8,CLASSID      LOAD CLASS ADDRESS
         MVC   DCHCLASS(56),CHCLASS MOVE LIST FORM INTO GETMAINED A.
         ST    R9,DCHCLASS+24  STORE ACEE ADDRESS INTO GETMAINED A.
         ST    R8,DCHCLASS+4   STORE CLASS ADDRESS INTO GETMAINED A.
         MVI   DCHCLASS+4,B'00000000' ZERO FIRST BYTE
         RACHECK MF=(E,DCHCLASS)  CHECK RACF AUTH. FOR JOBCLASS
         C     R15,HEXZEROS    ACCESS ALLOWED ?
         BE    CN2             YES - CHECK ACCT AUTHORISATION
         C     R15,HEX4        NO PROFILE FOR RESOURCE ?
         BE    CN2             YES - CHECK ACCT AUTHORISATION
KF       MVI   CLASAUTH,C'N'   NO JOBCLASS AUTHORISATION
         B     CN3
CN2      CLI   ACCIND,C'Y'     IS ACCT PARM SUPPLIED IN JOBCARD?
         BNE   AF              NO - BYPASS RACHECK PROCESSING
         L     R9,ACEE         LOAD ACEE ADDRESS
         LA    R8,ACCTNO       LOAD ACCOUNTING NUMBER ADDRESS
         MVC   DCHACCT(56),CHACCT SORE LIST FORM INTO GETMAINED A.
         ST    R9,DCHACCT+24   STORE ACEE ADDRESS INTO GETMAINED A.
         ST    R8,DCHACCT+4    STORE ACCT NO ADDRESS INTO GETMND. A.
         MVI   DCHACCT+4,B'00000000' ZERO FIRST BYTE
         RACHECK MF=(E,DCHACCT)  CHECK RACF AUTH. FOR ACCT. NO.
         C     R15,HEXZEROS    ACCESS ALLOWED ?
         BE    CN3             YES - RELEASE ACEE
         C     R15,HEX4        NO PROFILE FOR RESOURCE ?
         BE    CN3             YES - RELEASE ACEE
AF       DS    0H              CHECK FOR ACCOUNTING NUMBER FAILED
         MVI   ACCAUTH,C'N'    NO ACCTNO. AUTHORISATION
         B     CN3
CN3      LA    R7,ACEE         LOAD ACEE ADDRESS
         MVC   DSACEE,SACEE    MOVE LIST INTO GETMAINED AREA
         ST    R7,DSACEE+52    STORE ACEE ADDRESS INTO GETMAINED AREA
         RACINIT MF=(E,DSACEE)  SCRATCH ACEE
*    DECIDE IF JOB IS TO BE CANCELLED OR NOT DEPENDING ON DATA       *
*    IN GETMAINED AREA                                               *
DECIDE   CLC   JOBIND,=C'Y'    IS IT A BATCH JOB?
         BNE   RETF0           NO  - EXECUTE TSU/STC
         CLC   CLASAUTH,=C'Y'  JOBCLASS USAGE ALLOWED?
         BNE   RETF8           NO - CANCEL JOB
         CLC   ACCAUTH,=C'Y'   ACCOUNT NUMBER USAGE ALLOWED?
         BNE   RETF8           NO - CANCEL JOB
         CLC   CLASSID,=C'S'   CLASS=S SPECIFIED?
         BE    RETF0           YES - EXECUTE JOB
         CLC   STEPCIND,=C'Y'  STEPCAT CARD FOUND?
         BNE   JOBCAT          NO - SEE IF JOBCAT CARD USED
         MVC   WTOD2,WTOT2     WTO FOR USER
         WTO   MF=(E,WTOD2)    NOTIFICATION
         B     RETF8           CANCEL JOB
JOBCAT   CLC   JOBCIND,=C'Y'   JOBCAT CARD FOUND?
         BNE   RETF0           NO  - EXECUTE JOB
         MVC   WTOD2,WTOT2     WTO FOR USER
         WTO   MF=(E,WTOD2)    NOTIFICATION
         B     RETF8           CANCEL JOB
RETF0    L     R1,JCTUSER5     RESTORE ADDRESS OF GETMAINED AREA
         FREEMAIN R,LV=STORL,A=(R1)
         LA    R15,0           SET RC=0
         B     RETURN
RETF8    L     R1,JCTUSER5     RESTORE ADDRESS OF GETMAINED AREA
         FREEMAIN R,LV=STORL,A=(R1)
         LA    R15,8           SET RC=8
         B     RETURN
RETURN0  LA    R15,0              SET RETURN CODE = 0
         B     RETURN
RETURN   RETURN (14,12),RC=(15)   GO BACK TO JES2
DOGETM   GETMAIN R,LV=STORL       GET VIRTUAL STORAGE
         ST    R1,JCTUSER5        SAVE GETMAINED STORAGE ADDRESS
         MVI   0(R1),C' '         BLANK OUT GETMAINED
         MVC   1(STORL1-1,R1),0(R1)  AREA
         LR    R8,R1              BLANK OUT 2ND PART OF
         LA    R8,STORL1(R8)
         MVI   0(R8),C' '
         MVC   1(STORL2-1,R8),0(R8)  GETMAINED AREA
         MVC   JCTUSER4,INDIC     SET INDICATOR
         B     CONT1              GO BACK TO MAINSTREAM
DCLC1    CLC   1(0,R6),=C'STEPCAT'
DCLC2    CLC   1(0,R6),=C'JOBCAT'
DMVC     MVC   0(0,R9),3(R6)   MOVE USERID/GROUP TO STORAGE
DMVC2    MVC   0(0,R9),0(R8)   MOVE ACCT. NO. TO STORAGE
         DS    0F
HEXZEROS DC    X'00000000'
HEX4     DC    X'00000004'
INDIC    DC    CL4'GEUE'
F#127    DC    F'127'
H#0      DC    FL2'0'
H#1      DC    FL2'1'
H#2      DC    FL2'2'
TAB      DS    0F              TABLE FOR CHARACTER SEARCH
         DC    193X'FF'
         DC    9X'00'
         DC    7X'FF'
         DC    9X'00'
         DC    8X'FF'
         DC    8X'00'
         DC    6X'FF'
         DC    10X'00'
         DC    6X'FF'
CACEE    RACINIT MF=L,                                                 X
               ENVIR=CREATE,PASSCHK=NO
SACEE    RACINIT MF=L,ENVIR=DELETE
CHCLASS  RACHECK MF=L,CLASS='JOBCLASS',ATTR=READ
CHACCT   RACHECK MF=L,CLASS='ACCTNMBR',ATTR=READ
WTOT1    WTO   '                                      ',ROUTCDE=11,    X
               DESC=6,MF=L
WTOL1    EQU   *-WTOT1
WTOT2    WTO   ' ILLEGAL USER OF STEPCAT/ JOBCAT CARD ',ROUTCDE=11,    X
               DESC=6,MF=L
WTOL2    EQU   *-WTOT2
WTOT3    WTO   ' USER NOT AUTHORISED TO USE ACCOUNT NUMBER       ',    X
               ROUTCDE=11,DESC=6,MF=L
WTOL3    EQU   *-WTOT3
WTOT4    WTO   ' USER NOT AUTHORISED TO USE CLASS  ',                  X
               ROUTCDE=11,DESC=6,MF=L
WTOL4    EQU   *-WTOT4
         $MODEND
         LTORG
STORMAP  DSECT
CLASSID  DS    CL1              JOBCLASS IN JOBCARD
CLASSIND DS    CL1              JOBCLASS IN JOBCARD FOUND
JOBCIND  DS    CL1              JOBCAT CARD FOUND
STEPCIND DS    CL1              STEPCAT CARD FOUND
JOBIND   DS    CL1              JOBIND. SHOWS IF IT IS A BATCH JOB
USIND    DS    CL1              INDICATOR IF USER IS JCL-CODED
GRIND    DS    CL1              INDICATOR IF GROUP IS JCL-CODED
ACCIND   DS    CL1              INDICATOR IF ACCOUNTING NO. IS IN JCL
ACCLENG  DS    CL1              ACCOUNTING NUMBER LENGTH
ACCTNO   DS    CL10             ACCOUNTING NO IN JOBCARD
ULENGTH  DS    CL1              LENGTH OF USER PARAMETER
USERID   DS    CL8              USERID ASSOCIATED WITH THIS JOB
GLENGTH  DS    CL1              LENGTH OF GROUP PARAMETER
GRPID    DS    CL8              GROUP  ASSOCIATED WITH THIS JOB
ACCAUTH  DS    CL1              Y IF ACCT NUMBER USAGE IS ALLOWED
CLASAUTH DS    CL1              Y IF JOBCLASS USAGE IS ALLOWED
UADRESS  DS    A                ADDRESS OF ULENGTH VARIABLE
GADRESS  DS    A                ADDRESS OF GLENGTH VARIABLE
ACEE     DS    F
WTOD1    DS    CL(WTOL1)
WTOD2    DS    CL(WTOL2)
WTOD3    DS    CL(WTOL3)
WTOD4    DS    CL(WTOL4)
LENGTH   DS    A
STORL1   EQU   *-STORMAP
ZW1      DS    0F               TEST
         DS    CL2              TEST
ZW2      DS    CL3              TEST
PARMADDR DS    A
DCACEE   DS    CL56
DSACEE   DS    CL56
DCHCLASS DS    CL56
DCHACCT  DS    CL56
STORL2   EQU   *-ZW1
STORL    EQU   *-STORMAP
         END


Volker Johannson
Systems Programmer (West Germany)  € Volker Johannson 1988



