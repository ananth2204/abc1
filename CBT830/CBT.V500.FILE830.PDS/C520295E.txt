A DB2 housekeeping utility

This utility is only of use if image copy datasets are catalogued in an ICF
catalog.  It is assumed that the date of the latest uncatalogued image copy
dataset from DSNDB06.SYSCOPY will be used by the MODIFY RECOVERY utility for
purging SYSCOPY and SYSLGRNG rows.

An important part of  DB2 housekeeping is to clean up the catalog and directory
tables DSNDB06.SYSCOPY and DSNDB01.SYSLGRNG periodically.  These tables contain
rows relating to image copy datasets and log ranges that may be needed for
recovery.  The problem comes when deciding which SYSCOPY and SYSLGRNG rows are
obsolete, eg when whatever DASD management tool you use has scratched or deleted
the image copy datasets.  Usually these will be catalogued GDGs and will have
cycled off the end.

A manual solution would be to perform an SQL QUERY against the SYSCOPY table and
establish at what date you no longer have the sequential image copy datasets to
which the rows relate.  This data is then input to the MODIFY RECOVERY utility
to purge the obsolete SYSCOPY and SYSLGRNG rows.

This little utility automates the process.  The program uses SQL to select
SYSCOPY rows for the database and table spaces you input as a parameter file in
descending order by date and time, and for each row fetched it issues a CATALOG
LOCATE for the dataset name found in the DSNAME field.  If the dataset is
catalogued (zero return code from the LOCATE macro), no action is taken and the
next row is fetched.  As soon as an uncatalogued dataset is encountered (a non-
zero return code from the LOCATE macro), the ICDATE is used to build a MODIFY
RECOVERY control statement for the table space which is output to a file.  The
file is then passed to the DB2 utility.  A report is produced detailing what
actions have been taken.

This utility is ideal if catalogued GDGs are used for image copies as it keeps
the DB2 catalog in synchronisation with the ICF catalog containing the image
copy dataset entries.

Multiple table spaces can be processed in a single run.

The program uses standard OS linkage and macros.  Because it contains embedded
SQL it cannot be assembled directly but must first be processed by the DB2 pre-
compiler.  A PLAN is also required.  These can be produced using the interactive
DB2I panels.

The user will need to be granted select authority on DSNDB06.SYSCOPY.  To run
the MODIFY utility against the DB2 catalog requires SYSADM.


THE SOURCE CODE

         TITLE ' DB2U0010 - DB2D SYSCOPY TIDY'
*********************************************************************
*  PROGRAM NAME: DB2U0010                                           *
*  DESCRIPTION : READS DB2 SYSCOPY TABLE AND DETERMINES IF          *
*                IMAGE COPY DATASETS ARE STILL IN EXISTENCE.        *
*                IF NOT THEN IT GENERATES MODIFY RECOVERY CONTROL   *
*                STATEMENTS TO PURGE SYSCOPY RECORDS FOR THAT ENTRY.*
*          NOTE: THIS PROGRAM CONTAINS IMBEDDED SQL AND CANNOT      *
*                BE ASSEMBLED DIRECTLY. IT MUST BE PROCESSED BY     *
*                THE DB2 PRE-COMPILER FIRST.                        *
*  DDNAME      : CARDIN    80   INPUT    FB                         *
*                CARDOUT   80   OUTPUT   FB                         *
*                REPORT    125  OUTPUT   FA                         *
*  PARMS       : NONE                                               *
*  LINKEDIT                                                         *
*  CONTROL                                                          *
*  STATEMENTS  :  INCLUDE DSNHOBJ                                   *
*                 NAME DB2U0010(R)                                  *
*  MACROS      :  SAVE                                              *
*                 RETURN                                            *
*                 GETMAIN                                           *
*                 OPEN                                              *
*                 CLOSE                                             *
*                 LOCATE                                            *
*  RETURN CODES:  0     NORMAL COMPLETION                           *
*                 12    SQL ERROR DETECTED                          *
*********************************************************************
DB2U0010 CSECT
         SAVE  (14,12),,DB2U0010&SYSDATE&SYSTIME     SAVE REGISTERS
         LR    R12,R15                 PROGRAM ADDRESSABILITY
         USING DB2U0010,R12
         ST    R13,SAVEAREA+4           STORE SAVEAREA POINTER
         LA    R13,SAVEAREA            LOAD OUR SAVEAREA
DATA     LOCTR                         STORAGE DEFINITIONS FOLLOW
         EXEC SQL INCLUDE SQLCA
INREC    DS    0CL80
INDBN    DS    CL8                     DATABASE NAME
         DS    CL1                     FILLER
INTSN    DS    CL8                     TABLESPACENAME
         DS    CL63                    FILLER
DB2U0010 LOCTR
         OPEN  (CARDIN,INPUT,CARDOUT,OUTPUT)  OPEN FILES
         OPEN  (REPORT,OUTPUT)
         ZAP   LCOUNT,=P'55'           INITIALISE COUNTERS
         ZAP   PCOUNT,=P'0'
         BAL   R4,HEADER               WRITE REPORT HEADER
RDFILE   GET   CARDIN,INREC            GET DATABASE & TABLE SPACE NAMES
* SELECT ALL FULL IMAGE COPY ROWS FROM SYSCOPY IN DECENDING DATE
* AND TIME ORDER
         EXEC SQL                                                      X
               DECLARE ICOPY CURSOR FOR                                X
               SELECT DBNAME, TSNAME, ICTYPE, ICDATE, DSNAME, ICTIME   X
               FROM SYSIBM.SYSCOPY                                     X
               WHERE ICTYPE = 'F'                                      X
               AND DBNAME = :INDBN                                     X
               AND TSNAME = :INTSN                                     X
               ORDER BY ICDATE DESC , ICTIME DESC
         LA    R9,SQLDLEN             LOAD ADDRESS OF SQL DATA AREA
       GETMAIN R,LV=(R9)              OBTAIN STORAGE FOR SQL DATA AREA
         LR    R9,R1                  SAVE ADDRESS OF STORAGE
         USING SQLDSECT,R9            ADDRESS SQL DATA AREA
         EXEC SQL OPEN ICOPY
RDDB2D   EXEC SQL                                                      X
               WHENEVER NOT FOUND                                      X
               GO TO CLRDRTN
         EXEC SQL                                                      X
               WHENEVER SQLWARNING                                     X
               GO TO ERRCDE
         EXEC SQL                                                      X
               FETCH ICOPY                                             X
               INTO :TSDBN, :TSTSN, :TSTYP, :TSCDAT, :TSDSN, :TSTIME
         MVC   ICDSN,TSDSN            SAVE IMAGE COPY DSN
*        BUILD CAMLIST FOR LOCATE
DATA     LOCTR                        STORAGE DEFINITION FOLLOW
$CAM     CAMLST NAME,0,,0             CAMLIST MODEL
$CAML    EQU   *-$CAM
DSA      LOCTR
@CAM     DS    XL($CAML)              CAMLST
DB2U0010 LOCTR                        EXECUTABLE CODE FOLLOWS
         MVC   @CAM,$CAM              COPY CAMLIST MODEL
         LA    R0,ICDSN               LOAD ADDRESS OF DSNAME
         ST    R0,@CAM+4              STORE ITS ADDRESS IN CAMLST
         LA    R0,CAMWA               LOAD ADDRESS OF WORK AREA
         ST    R0,@CAM+12             STORE ITS ADDRESS IN CAMLST
*       TRY AND LOCATE IMAGE COPY DATASET
         LOCATE @CAM
         LTR   R15,R15                WAS DATASET CATALOGED ? RC = 0
         BZ    RDDB2D                 IF YES THEN GET NEXT RECORD
*        NO DATASET FOUND FOR THIS ROW
*        SO BUILD MODIFY RECOVER CONTROL STATEMENT
         LA    R5,INDBN               ADDRESS DATABASE NAME
         LA    R7,MODREC+28           ADDRESS OUTPUT AREA
         MVC   0(16,R7),=C' '         BLANKOUT OUTPUT AREA
         LA    R6,8                   LOAD COUNTER
AXI      CLC   0(1,R5),=C' '          IS IT A BLANK
         BZ    MVTSN                  YES? END OF DATABASE NAME
         MVC   0(1,R7),0(R5)          NO? THEN MOVE THIS CHARACTER
         LA    R5,1(R5)               INCREMENT COUNTER
         LA    R7,1(R7)               INCREMENT COUNTER
         BCT   R6,AXI                 LOOP ROUND AGAIN
MVTSN    MVI   0(R7),X'4B'            END OF DBNAME SO MOVE IN A .
         MVC   1(8,R7),INTSN          MOVE IN TABLE SPACE NAME
         MVC   MODDATE,TSCDAT         MOVE IN DATE
         PUT   CARDOUT,MODREC         OUTPUT CONTROL CARD IMAGE
         MVC   PG2MSG,MSG1            MOVE IN MESSAGE TEXT
         MVC   PG2TSN,INTSN           MOVE IN TABLE SPACE
         MVC   PG2RCV,=C'00'          SET RETURN CODE
         BAL   R4,HEADER              LINE / PAGE COUNTER MAINT
         PUT   REPORT,PG2HEAD         WRITE REPORT LINE
CLRDRTN  EXEC SQL CLOSE ICOPY
         B     RDFILE                 GET ANOTHER DATABASE NAME
ERRCDE   MVC   PG2MSG,MSG2            MOVE IN MESSAGE TEXT
         MVC   PG2TSN,INTSN           MOVE IN TABLE SPACE
         LA    R15,12                 SET RETURN CODE TO EXIT
         MVC   PG2RCV,=C'12'          SET RETURN CODE
         BAL   R4,HEADER              LINE / PAGE COUNTER MAINT
         PUT   REPORT,PG2HEAD         WRITE REPORT LINE
         B     CLRDRTN                GET ANOTHER DATABASE NAME
DBEXIT   MVC   PG2MSG,MSG3            MOVE IN MESSAGE TEXT
         MVC   PG2ASA,=C'-'           SKIP AN EXTRA LINE
         MVC   PG2TSN,PG2FILB         BLANKOUT TABLE SPACE NAME
         MVC   PG2RCV,=C'00'          SET RETURN CODE
         BAL   R4,HEADER              LINE / PAGE COUNTER MAINT
         PUT   REPORT,PG2HEAD         WRITE REPORT LINE
         CLOSE (CARDIN,,CARDOUT)      CLOSE FILES
         CLOSE (REPORT)               CLOSE FILES
         L     R13,SAVEAREA+4         RELOAD SAVEAREA
         RETURN (14,12),RC=0          EXIT
HEADER   AP    LCOUNT,=P'2'           INCREMENT LINE COUNTER
         CP    LCOUNT,=P'50'          50 LINES YET ???
         BH    RESETL                 YES. THEN THROW PAGE
         BR    R4                     NO. THEN RETURN
RESETL   ZAP   LCOUNT,=P'3'           RESET LINE COUNTER
         AP    PCOUNT,=P'1'           INCREMENT PAGE COUNTER
         MVC   PG1PNUM,PAGEMASK       MOVE IN PAGE MASK
         ED    PG1PNUM,PCOUNT         EDIT PAGE COUNT
         PUT   REPORT,PG1HEAD         WRITE HEADER
         BR    R4                     RETURN
         EXEC  SQL INCLUDE SQLDA
         LTORG
*   REPORT HEADING LAYOUT
DATA     LOCTR
PG1HEAD  DS    0CL125
PG1ASA   DC    CL1'1'
PG1TXT1  DC    CL110'   DB2U0010  -  SYSCOPY TIDY UTILITY GENERATOR '
PG1TXT2  DC    CL7'PAGE : '
PG1PNUM  DS    CL4
PG1FILA  DC    CL3' '
PG2HEAD  DS    0CL125
PG2ASA   DC    CL1'0'
PG2FILA  DC    CL5'    +'
PG2MSG   DS    CL80
PG2TSN   DS    CL8
PG2RCT   DC    CL5'  RC='
PG2RCV   DS    CL2
PG2FILB  DC    CL24' '
*   MESSAGES
MSG1     DC    CL80'DB2U0010-01  MODIFY CONTROL STATEMENT SUCCESSFULLY +
               GENERATED FOR TABLESPACE :  '
MSG2     DC    CL80'DB2U0010-02  SQL ERROR DETECTED. PROCESSING TERMINA+
               TED FOR TABLESPACE       :  '
MSG3     DC    CL80'DB2U0010-03  UTILITY PROCESSING COMPLETED. HIGHEST +
               RETURN CODE IS           :  '
TSDBN    DS    CL8                    IMAGE COPY DATABASE NAME
TSTSN    DS    CL8                    IMAGE COPY TABLESPACE NAME
TSTYP    DS    CL1                    IMAGE COPY TYPE
TSDSN    DS    CL44                   IMAGE COPY DATASET NAME
TSCDAT   DS    CL6                    IMAGE COPY DATE
TSTIME   DS    CL6                    IMAGE COPY TIME
*   MODIFY UTILITY CONTROL STATEMENT RECORD LAYOUT
MODREC   DS    0CL80
         DC    CL28' MODIFY RECOVERY TABLESPACE '
         DC    CL17' '
         DC    CL14' DELETE DATE ('
MODDATE  DS    CL6
         DC    CL15') '
*   INPUT RECORD LAYOUT
ICDSN    DS    CL44                STORAGE FOR IMAGE COPY DATASET NAME
CAMWA    DS    0D                  CAM WORK AREA FOR LOCATE
         DS    265C
LCOUNT   DS    PL2                 LINE COUNTER
PCOUNT   DS    PL2                 PAGE COUNTER
PAGEMASK DC    X'40202020'         PAGE NUMBER MASK
SAVEAREA DS    18F                 REGISTER SAVE AREA
*   FILE DCB'S
CARDIN   DCB   DDNAME=CARDIN,LRECL=80,DSORG=PS,MACRF=GM,               X
               RECFM=FB,EODAD=DBEXIT
CARDOUT  DCB   DDNAME=CARDOUT,LRECL=80,RECFM=FB,DSORG=PS,MACRF=PM
REPORT   DCB   DDNAME=REPORT,LRECL=125,RECFM=FA,DSORG=PS,MACRF=PM
SQLAREA  EQU   *-SQLDSECT          SPACE FOR SQLDA DESCRIPTOR
         END


SAMPLE JCL

//TSG013A  JOB (,X429),'TEST DB2 UTILITY',CLASS=A,MSGCLASS=X
//*
//S010  EXEC PGM=IKJEFT01
//*
//*  GENERATE MODIFY RECOVER CONTROL STATEMENTS FOR DB2 UTILITY
//*
//SYSTSOUT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=D,HOLD=YES
//SYSDBOUT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYST     DD SYSOUT=*
//SYSOUT   DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//REPORT   DD SYSOUT=*,DCB=(RECFM=FA,LRECL=125)
//* COL 1  - DATABASE NAME
//* COL 10 - TABLESPACE NAME
//*------1---------2---------3---------4---------5---------6---------7--
//CARDIN DD *
DTSG013  STSGA01
/*
//CARDOUT  DD DSN=TSG013.DB2.CARDOUT,DISP=OLD
//SYSTSIN  DD *
DSN SYSTEM(DB2D)
RUN PROGRAM(DB2U001A) PLAN(DB2U001A) LIBRARY('TSG013.DB2.LOAD')
END
//*
//UTIL EXEC DSNUPROC,SYSTEM=DB2D,UID='TSG013',UTPROC=''
//*
//**********************************************
//*
//*  GENERATING JCL FOR THE MODIFY UTILITY
//*  DATE:  11/22/87          TIME:  11:50:10
//*
//**********************************************
//*
//DSNUPROC.SYSIN    DD  DSN=TSG013.DB2.CARDOUT,DISP=SHR


Paul Thompson
Senior Systems Programmer (UK)     € Reserved 1987















































