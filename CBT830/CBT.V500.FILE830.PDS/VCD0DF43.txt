SUPERCOPY - a dataset copy utility


PROBLEM ADDRESSED

A very frequent task in the MVS/TSO environment is copying
a dataset.  This task is easily achieved when the target exists
(eg by using IDCAMS REPRO).  It is also easy to accomplish
in the ISPF/PDF environment (ISPF/PDF 3.2 to allocate the
target dataset and ISPF/PDF 3.3 to copy the source dataset to
the target dataset).  What is more difficult to perform is the
generalized automated copying of all forms of datasets.


SOLUTION

The CLIST pair, SCOPYC0 and SCOPYC1, (together with the
two associated ISPF skeletons, SCOPYS0 and SCOPYS1)
copies all common forms of dataset (PS,PO,VSAM, etc).  A
parameter can be passed to allocate the target dataset using the
attributes of the input dataset.  To avoid tying up the terminal
for unnecessarily long periods, the actual copy operation is
performed as a normal MVS job (the TSO SUBMIT is
performed automatically by the CLIST).  This function
operates in the ISPF environment.  The ISPF file tailoring
facility (skeletons) simplifies the creation of JCL job streams
and parameter files.

The program is called as follows:

    %SCOPYC0 DSNIN(input-dsn) DSNOUT(output-dsn)
    ÝDISP(output-disposition|NEW)¨
    ÝJOBNO(job-code|0)¨

where

o      input-dsn is the dataset name of the input dataset
      (according to TSO conventions).

o      output-dsn is the dataset name of the output dataset
      (according to TSO conventions).

o      output-disposition is the disposition of the output dataset ie:

      -      NEW - output dataset does not exist, it will be
            allocated with the attributes of the input dataset.

      -      MOD - output dataset exists, the copied records will
            be placed at the end of the current dataset.

      -      OLD - output dataset exists, the copied records will
            replace the current dataset.

o      job-code is final character of the job name.  The job name
      for the submitted job is formed from the user-id and this
      job code.

The name of submitted job is returned in the ISPF variable
JOB.


SCOPYC0 CLIST

PROC 0 DSNIN() DSNOUT() DISP(NEW) JOBNO(0)
/**********************************************************************
/* Parameter: DSNIN  - DS-Name input dataset
/*            DSNOUT - DS-Name output dataset
/*            DISP   - disposition (NEW, MOD, OLD)
/*            JOBNO  - final digit of job number
/**********************************************************************
CONTROL NOFLUSH NOMSG
IF &DISP EQ NEW THEN DO
  LISTDSI '&DSNIN' DIR
  IF &LASTCC GT 4 THEN EXIT CODE(8)
  IF &SUBSTR(1:2,&SYSDSORG) EQ VS THEN DO
    %SCOPYC1 &DSNIN &DSNOUT
    SET &RC = &LASTCC
  END
  ELSE DO
    /* allocate output dataset
    IF &SYSUNITS EQ BLKS THEN SET &UNIT = BLOCK(&SYSBLKSIZE)
    IF &SYSUNITS EQ TRKS THEN SET &UNIT = TRACKS
    IF &SYSUNITS EQ CYLS THEN SET &UNIT = CYLINDERS
    SET &DIR = &STR()
    IF &SYSDSORG EQ PO THEN SET &DIR = DIR(&SYSADIRBLK)
    SET &RECL =  &STR()
    IF &SYSLRECL NE &STR() THEN SET &RECL = LRECL(&SYSLRECL)
    SET &BLKSI =  &STR()
    IF &SYSBLKSIZE NE &STR() THEN SET &BLKSI = BLKSIZE(&SYSBLKSIZE)
    SET &VOLUME =  &STR()
    IF &SYSVOLUME NE &STR() THEN SET &VOLUME = VOL(&SYSVOLUME)
    SET &RECFM = &STR()
    DO &N = 1 TO &LENGTH(&SYSRECFM)
      SET &RECFM = &RECFM &SUBSTR(&N,&SYSRECFM)
    END
    SET &SYSOUTTRAP = 10
    CONTROL MSG
    ALLOC F(SYSUT2) DA('&DSNOUT') NEW SPACE(&SYSPRIMARY,&SYSSECONDS) +
     &UNIT DSORG(&SYSDSORG) +
     RECFM(&RECFM) &BLKSI &RECL &DIR &VOLUME CATALOG REUSE
    SET &RC = &LASTCC
    IF &RC NE 0 THEN DO            /* ALLOC error
      SET &N = &SYSOUTLINE         /* no. of output messages
      WRITE ALLOC ERROR
      DO &M = 1 TO &N
        SET &MSG = &STR(&&SYSOUTLINE&M)
        WRITE &MSG
      END
    END
  END
END
IF &RC EQ 0 THEN DO
  FREE F(SYSUT1 SYSUT2)
  ISPEXEC FTOPEN TEMP
  ISPEXEC FTINCL SCOPYS0             /* job skeleton
  ISPEXEC FTCLOSE
  ISPEXEC VGET (ZTEMPF) SHARED
  CONTROL PROMPT MSG
  SET &SYSOUTTRAP = 10
  SUB '&ZTEMPF'
  DATA PROMPT
  &JOBNO                             /* job number
  ENDDATA
  SET &OUTLINE =&STR(&&SYSOUTLINE&SYSOUTLINE)
  SET &I = &SYSINDEX(&STR( JOB ),&STR(&OUTLINE))
  SET &JOB = &SUBSTR(&I+5:&I+22,&STR(&OUTLINE))
  ISPEXEC VPUT (JOB) SHARED
END
EXIT CODE(&RC)


SCOPYC1 CLIST

PROC 2 DSNIN DSNOUT
/**********************************************************************
/* Standalone Supercopy - VSAM dataset processing
/* Fetch and Display VSAM-Attributes from Input DS
/* Exit: 0 ok, else nok
/**********************************************************************
SET &DSND = &STR(&DSNOUT..D)       /* set dataset names
SET &DSNI = &STR(&DSNOUT..I)
SET &RC = 0                        /* initialize ReturnCode
/* Invoke LISTC to obtain Data
SET &SYSOUTTRAP = 200              /* Trap LISTC-output
LISTC ENTRIES('&DSNIN') ALL
/* Process LISTC Output
/* Extract required fields
SET &M = 0
DO WHILE &M LT &SYSOUTLINE
  SET &M = &M + 1
  SET &LINE = &STR(&&SYSOUTLINE&M)
  SET &L = &LENGTH(&STR(&LINE))
  /* Type
  SET &I = &SYSINDEX(&STR( INDEXED ),&STR(&LINE))
  IF &I NE 0 THEN -
   SET &VSORG = KSDS
  SET &I = &SYSINDEX(&STR( NONINDEXED ),&STR(&LINE))
  IF &I NE 0 THEN -
   SET &VSORG = ESDS
  SET &I = &SYSINDEX(&STR( NUMBERED ),&STR(&LINE))
  IF &I NE 0 THEN -
   SET &VSORG = RRDS
  /* DSN Data
  SET &I = &SYSINDEX(&STR( DATA -),&STR(&LINE))
  IF &I NE 0 THEN -
   SET &X = D
  /* DSN Index
  SET &I = &SYSINDEX(&STR( INDEX -),&STR(&LINE))
  IF &I NE 0 THEN -
   SET &X = I
  /* VOLSER
  SET &I = &SYSINDEX(&STR( VOLSER-),&STR(&LINE))
  IF &I NE 0 THEN DO
    SET &VOL = &SUBSTR(&I+19:&I+24,&STR(&LINE))
  END
  /* KEYLEN
  SET &I = &SYSINDEX(&STR( KEYLEN-),&STR(&LINE))
  IF &I NE 0 THEN DO
    SET &WK = &SUBSTR(&I+11:&I+24,&STR(&LINE))
  /* Extract String
    SYSCALL EXTRACT
    SET &KEYLEN = &WK
  END
  /* AVGLRECL
  SET &I = &SYSINDEX(&STR( AVGLRECL-),&STR(&LINE))
  IF &I NE 0 AND &X EQ D THEN DO
    SET &WK = &SUBSTR(&I+11:&I+24,&STR(&LINE))
  /* Extract String
    SYSCALL EXTRACT
    SET &AVGLRECL = &WK
  END
  /* MAXLRECL
  SET &I = &SYSINDEX(&STR( MAXLRECL-),&STR(&LINE))
  IF &I NE 0 AND &X EQ D THEN DO
    SET &WK = &SUBSTR(&I+11:&I+24,&STR(&LINE))
  /* Extract String
    SYSCALL EXTRACT
    SET &MAXLRECL = &WK
  END
  /* RKP
  SET &I = &SYSINDEX(&STR( RKP-),&STR(&LINE))
  IF &I NE 0 THEN DO
    SET &WK = &SUBSTR(&I+12:&I+24,&STR(&LINE))
  /* Extract String
    SYSCALL EXTRACT
    SET &RKP = &WK
  END
  /* SHROPTNS
  SET &I = &SYSINDEX(&STR( SHROPTNS),&STR(&LINE))
  IF &I NE 0 THEN -
   SET &SHROPTNS = &SUBSTR(&I+10:&I+12,&STR(&LINE))
  /* SPANNED
  SET &I = &SYSINDEX(&STR( SPANNED),&STR(&LINE))
  IF &I NE 0 THEN -
   SET &SPANNED = SPANNED
  /* REUSE
  SET &I = &SYSINDEX(&STR( REUSE),&STR(&LINE))
  IF &I NE 0 THEN -
   SET &REUSE = REUSE
  /* REPL
  SET &I = &SYSINDEX(&STR( REPL),&STR(&LINE))
  IF &I NE 0 THEN -
   SET &REPL = REPL
  /* CI-SIZE
  SET &I = &SYSINDEX(&STR( CISIZE-),&STR(&LINE))
  IF &I NE 0 THEN DO
    SET &WK = &SUBSTR(&I+11:&I+24,&STR(&LINE))
  /* Extract String
    SYSCALL EXTRACT
    SET &CISZ&X = &WK
  END
  /* SPACE-TYPE
  SET &I = &SYSINDEX(&STR(SPACE-TYPE),&STR(&LINE))
  IF &I NE 0 THEN DO
    SET &WK = &SUBSTR(&I+11:&I+24,&STR(&LINE))
  /* Extract String
    SYSCALL EXTRACT
    SET &WK = &WK                  /* remove blanks
    SET &SPCU&X = &WK.S            /* set plural
  END
  /* SPACE-PRI
  SET &I = &SYSINDEX(&STR( SPACE-PRI-),&STR(&LINE))
  IF &I NE 0 THEN DO
    SET &WK = &SUBSTR(&I+11:I+24,&STR(&LINE))
  /* Extract String
    SYSCALL EXTRACT
    SET &PRIQ&X = &WK
  END
  /* SPACE-SEC
  SET &I = &SYSINDEX(&STR( SPACE-SEC-),&STR(&LINE))
  IF &I NE 0 THEN DO
    SET &WK = &SUBSTR(&I+11:&I+24,&STR(&LINE))
  /* Extract String
    SYSCALL EXTRACT
    SET &SECQ&X = &WK
  END
  /* FREESPACE-%CI
  SET &I = &SYSINDEX(&STR( FREESPACE-%CI),&STR(&LINE))
  IF &I NE 0 THEN DO
    SET &WK = &SUBSTR(&I+14:&I+24,&STR(&LINE))
  /* Extract String
    SYSCALL EXTRACT
    SET &FSCI&X = &WK
  END
  /* FREESPACE-%CA
  SET &I = &SYSINDEX(&STR( FREESPACE-%CA),&STR(&LINE))
  IF &I NE 0 THEN DO
    SET &WK = &SUBSTR(&I+14:&I+24,&STR(&LINE))
  /* Extract String
    SYSCALL EXTRACT
    SET &FSCA&X = &WK
  END
END
/* Build Allocate CLIST
ISPEXEC FTOPEN TEMP
ISPEXEC FTINCL SCOPYS1             /* VSAM allocation skeleton
ISPEXEC FTCLOSE
ISPEXEC VGET (ZTEMPF)
/* Perform Allocation
CONTROL NOFLUSH
SET &SYSOUTTRAP = 200
EX '&ZTEMPF'
SET &RC = &LASTCC
CONTROL FLUSH
IF &RC NE 0 THEN DO
  WRITE ALLOC ERROR &RC
  WRITE &STR(&SYSOUTLINE2)
  EXIT CODE(12)
END
FREE DA('&DSNOUT')
EXIT CODE(&RC)                     /* terminate procedure
/********************
/* Internal Procedure
/********************
EXTRACT: PROC 0
  /* Function: Extract data value from String
  /* Input/Output: <WK> - String
  NGLOBAL &WK
  DO WHILE &SUBSTR(1,&STR(&WK)) EQ &STR(-)
    SET &WK = &SUBSTR(2:&LENGTH(&STR(&WK)),&STR(&WK))
  END
END


SCOPYS0 SKELETON

)CM JCL FOR SUPERCOPY-CLIST (SCOPYS0)
)SET OPT1 = NREP
)SEL &DISP EQ OLD
)SET OPT1 = REP
)ENDSEL
)SEL &SYSDSORG EQ PO
//S1 EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DUMMY
//SYSUT1   DD DSN=&DSNIN,DISP=OLD
//SYSUT2   DD DSN=&DSNOUT,DISP=OLD
)ENDSEL
)SEL &SYSDSORG NE PO
//S1 EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD DSN=&DSNIN,DISP=OLD
//SYSUT2   DD DSN=&DSNOUT,DISP=OLD
//SYSIN    DD *
 REPRO INFILE(SYSUT1) OUTFILE(SYSUT2) &OPT1
)ENDSEL


SCOPYS1 SKELETON

)CM SUPERCOPY VSAM ALLOCATION SKELETON - SCOPYS1
)SEL &VSORG EQ KSDS
)CM DEFINE VSAM KSDS DATASET
  DEFINE CLUSTER -
   (NAME('&DSNOUT') -
   VOLUMES(&VOL) -
   KEYS(&KEYLEN &RKP) -
   SHAREOPTIONS(&SHROPTNS) -
   &OPTIONS ) -
  DATA -
   (NAME('&DSND') -
)SEL &CISZD NE &Z
   CONTROLINTERVALSIZE(&CISZD) -
)ENDSEL
   &SPCUD(&PRIQD  &SECQD) -
)SEL &FSCI NE &Z
   FREESPACE(&FSCI &FSCA) -
)ENDSEL
   RECORDSIZE(&AVGLRECL &MAXLRECL) )-
  INDEX -
   (NAME('&DSNI') -
)SEL &CISZI NE &Z
   CONTROLINTERVALSIZE(&CISZI) -
)ENDSEL
   &SPCUI(&PRIQI  &SECQI) )
)ENDSEL
)SEL &VSORG EQ ESDS OR &VSORG EQ RRDS
)CM DEFINE VSAM ESDS RRDS DATASET
  DEFINE CLUSTER -
   (NAME('&DSNOUT') -
   VOLUMES(&VOL) -
   &OPTIONS ) -
  DATA -
   (NAME('&DSND') -
)SEL &CISZD NE &Z
   CONTROLINTERVALSIZE(&CISZD) -
)ENDSEL
   &SPCUD(&PRIQD  &SECQD) -
)SEL &FSCI NE &Z
   FREESPACE(&FSCI &FSCA) -
)ENDSEL
   RECORDSIZE(&AVGLRECL &MAXLRECL) )
)ENDSEL


A S Rudd
Technical Consultant (West Germany)                 c A S Rudd 1990

