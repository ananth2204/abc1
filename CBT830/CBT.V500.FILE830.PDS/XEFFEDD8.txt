Fastpath Dataset Facility


INTRODUCTION

The Fastpath Dataset Facility (FDSF) is an ISPF dialogue that
allows the user to edit, browse, search for DASD volume
locations, and catalog or uncatalog user-defined datasets,
quickly and more efficiently than standard software. It also
allows the user to search a dataset list for duplicate members or
for the first location.

FDSF consists of two CLISTs (the main FDSF and a nested
CLIST, SETMSG, for error messages handling) and two panels
(FDSFMAIN and FDSFHELP).

FDSF is an extension of Brent Davidson's A fast path browse
edit facility idea (MVS Update issue 45 - June 1990) by means
of an ISPF dialogue implementation of the following programs:

o      VTOCSRCH - Searching DASD for an uncatalogued
      dataset, MVS Update Issue 36 (September 1989).

o      FINDER - A program to search concatenated libraries,
      Cliff Pratt, MVS Update Issue 41 (February 1990).

o      MULTIMEM - Duplicate PDS library member detection,
      MVS Update Issue 40 (January 1990).

In addition, I have introduced the capabilities of cataloguing
and uncataloguing a user-chosen dataset.  FDSF illustrates how
several MVS Update programs can be integrated for the
creation and development of one's own productive work
environment.

There would be no major problems in integrating other MVS
Update works such as  Paul Jespersen's Cloning an MVS
dataset (MVS Update Issue 42), Anthony Rudd's Easier
accessing of PDS members (MVS Update Issue 37), and so on,
with the standard ISPF 3.4 functions, to result in a powerful
and productive tool.


FDSF MAIN CLIST

/*--------------------------  FDSF CLIST  ----------------------------*/
/* - Function ------------ The FDSF(Fastpath Dataset Facility) CLIST  */
/* allows single dataset operations: Edit,Browse,Search for a dataset */
/* DASD volume location, Catalog  or  Uncatalog,  as well as multiple */
/* dataset operations: search for duplicate members or for the member */
/* first location.                                                    */
/* - Associated clists --- SETMSG                                     */
/* - Associated panels --- FDSFMAIN and FDSFHELP                      */
/* - Associated programs - FINDER (Cliff Pratt,MVS update 41 - Febr90)*/
/*                         MULTIMEM (MVS update issue 40-January 1990)*/
/*                         VTOCSRCH (MVS update issue 36-September'89)*/
/*--------------------------------------------------------------------*/
PROC 0
GLOBAL DSN T NUM CURSOR
CONTROL NOMSG NOFLUSH
DISPLAY: -
   ISPEXEC DISPLAY PANEL(FDSFMAIN)
   IF LASTCC = 8 THEN GOTO FINAL
   SET FPDS = &&FPDS
   IF &T = &NULL THEN GOTO SCANLCLS
NOLIST:   /*------------------ No list searching -------------------*/ -
   IF &SUBSTR(1:1,&NUM) = 0 THEN SET NUM = &SUBSTR(2,&NUM)
   SET DSN =&&FPDS&NUM
   IF &DSN = &Z THEN +
      DO /* "Empty entry" check */
         %SETMSG Empty_entry
         GOTO DISPLAY
      END
   IF &SUBSTR(1:1,&DSN) ¬= &STR(') THEN +
        SET DSN = &STR('&SYSUID..&DSN') /*- TSO dsname qualification -*/
   ELSE SET DSN = &STR(&DSN)
   IF &T = S OR &T = C OR &T = U  THEN +
      IF &SUBSTR(&LENGTH(&DSN)-1,&DSN) = ) THEN +
         DO /* "Member name in dsname" check */
            %SETMSG Member_not_allowed
            GOTO DISPLAY
         END
   IF &T = S THEN GOTO SEARCH /*If Search(S) is required...GOTO SEARCH*/
   IF &T = C THEN GOTO CATALOG /* If Catalog(C) is req...GOTO CATALOG */
   IF &SYSDSN(&DSN) = &STR(DATASET NOT FOUND) THEN +
      DO /* "Dataset not found" check */
         %SETMSG Dataset_not_found
         GOTO DISPLAY
      END
   IF &T = U THEN GOTO UNCATLG /*- If Uncatalog(U)....GOTO UNCATALOG -*/
   IF &SYSDSN(&DSN) = &STR(MEMBER NOT FOUND) THEN +
      DO /* "Member not found" check */
         %SETMSG Member_not_found
         GOTO DISPLAY
      END
   FREE F(TEMP)
   IF &T = E THEN GOTO EDIT   /* If Edit(E)   required...GOTO EDIT   */
   IF &T = B THEN GOTO BROWSE /* If Browse(B) required...GOTO BROWSE */
SCANLCLS: /*- Scan for line commands (E,B,S..) and for list search -*/ -
   SET CONCAT = &NULL
   SET I = 1
   DO WHILE &I <= 32
      SET NUM = &I
      SET C = &&C&I
      IF &SUBSTR(1:1,&C) = E OR &SUBSTR(2:2,&C') = E THEN +
         DO
           SET &T = &STR(E)
           GOTO NOLIST
         END
      IF &SUBSTR(1:1,&C) = B OR &SUBSTR(2:2,&C') = B THEN +
         DO
           SET &T = &STR(B)
           GOTO NOLIST
         END
      IF &SUBSTR(1:1,&C) = S OR &SUBSTR(2:2,&C') = S THEN +
         DO
           SET &T = &STR(S)
           GOTO NOLIST
         END
      IF &SUBSTR(1:1,&C) = C OR &SUBSTR(2:2,&C') = C THEN +
         DO
           SET &T = &STR(C)
           GOTO NOLIST
         END
      IF &SUBSTR(1:1,&C) = U OR &SUBSTR(2:2,&C') = U THEN +
         DO
           SET &T = &STR(U)
           GOTO NOLIST
         END
      IF &I <= 16 THEN +
         DO /*----------- Check for dataset list searching -----------*/
            SET NUM = &&N&I
            SET NUM = &STR(&NUM)
            IF &DATATYPE(&NUM) = NUM THEN +
               DO /*----- Preparation for dataset list searching -----*/
                  SET T = LIST_SEARCH
                  IF &I-1 >= 10 THEN SET C&NUM = &I-1
                  ELSE SET C&NUM = &STR(n&EVAL(&I-1))
                  SET DSN =&&FPDS&NUM
                  IF &DSN = &Z THEN +
                  DO /* "Empty entry" check */
                     %SETMSG Empty_entry
                     GOTO DISPLAY
                  END
                  IF &SUBSTR(1:1,&DSN) ¬= &STR(') THEN +
                       SET DSN = &STR('&SYSUID..&DSN') /*-TSO qualify-*/
                  ELSE SET DSN = &STR(&DSN)
                  IF &SUBSTR(&LENGTH(&DSN)-1,&DSN) = ) THEN +
                  DO /* "Member name in dsname" check */
                     %SETMSG Member_not_allowed
                     GOTO DISPLAY
                  END
                  IF &SYSDSN(&DSN) = &STR(DATASET NOT FOUND) THEN +
                  DO /* "Dataset not found" check */
                     %SETMSG Dataset_not_found
                     GOTO DISPLAY
                  END
                  IF &MEMBER ¬= &NULL THEN +
                     SET CONCAT = &CONCAT&STR( )&DSN /*Concatenate DSN*/
                  ELSE   ALLOC F(PDS&I) DA(&DSN) SHR /*- Allocate DSN-*/
               END
         END
      SET I = &I + 1
   END
   IF &MEMBER ¬= &NULL THEN GOTO SRCHMEMB /*- Go to search the member-*/
   IF &T = &STR(LIST_SEARCH) THEN +
      GOTO SRCHDUPL             /*-- Go to search duplicate members --*/
   GOTO DISPLAY
EDIT:     /*---------- PDF Edit of a dataset or a member -----------*/ -
   ISPEXEC EDIT DATASET (&DSN)
   FREE F(TEMP)
   GOTO DISPLAY
BROWSE:   /*---------- PDF Browse of a dataset or a member ---------*/ -
   ISPEXEC BROWSE DATASET (&DSN)
   FREE F(TEMP)
   GOTO DISPLAY
SEARCH:   /*-- All on-line DASD searching for a dataset location  --*/ -
   CALL 'SYS1.CMDLIB(VTOCSRCH)' &DSN
   GOTO DISPLAY
CATALOG:  /*------------------ Catalog a dataset -------------------*/ -
   WRITENR Please, enter VOLSER =
   READ &VOLSER
   ALLOC F(FILE&NUM) DA(&DSN) UNCATALOG
   FREE F(FILE&NUM)
   ALLOC F(FILE&NUM) DA(&DSN) VOLUME(&VOLSER) CATALOG
   IF LASTCC = 0 THEN %SETMSG Cataloged
   ELSE %SETMSG Catalog_not_executed
   FREE F(FILE&NUM)
   GOTO DISPLAY
UNCATLG: /*------------------ Uncatalog a dataset ------------------*/ -
         ALLOC F(FILE&NUM) DA(&DSN) UNCATALOG
         IF LASTCC = 0 THEN %SETMSG Uncataloged
         ELSE %SETMSG Uncatalog_not_executed
         FREE F(FILE&NUM)
         GOTO DISPLAY
SRCHMEMB: /*- Search concatenated libraries for a member location -*/ -
   FREE F(CONCLIBS)
   IF &CONCAT = &NULL THEN SET LIBRARY = &STR(        )
   ELSE SET LIBRARY = &STR(CONCLIBS)
   ALLOC F(CONCLIBS) DA( &CONCAT ) SHR
   ALLOC F(SYSPRINT) DA(*)
   ALLOC F(SYSIN) DA(*)
   IF &LENGTH(&MEMBER) < 8 THEN +
      DO /* Adding blanks to 8 chars */
         SET BLANKS = &STR(       )
         SET MEMBER = &MEMBER&SUBSTR(1:8-&LENGTH(&MEMBER),&BLANKS)
      END
   CALL 'SYS1.CMDLIB(FINDER)' '&MEMBER&LIBRARY'
   FREE F(CONCLIBS SYSPRINT SYSIN)
   GOTO DISPLAY
SRCHDUPL: /*--- Search a list of libraries for duplicate members ---*/ -
   ALLOC F(SORTLIB) DA('SYS1.SORTLIB') SHR
   ALLOC F(MULTIPRT) DA(*)
   ALLOC F(SYSOUT) DUMMY
   ALLOC F(SORTIN) OUTPUT NEW BLKSIZE(1300) SPACE(1,1) CYLINDERS
   ALLOC F(SORTOUT) NEW SPACE(1,1) CYLINDERS
   CALL 'SYS1.CMDLIB(MULTIMEM)'
   FREE F(PDS0,PDS1,PDS2,PDS3,PDS4,PDS5,PDS6,PDS7)
   FREE F(PDS8,PDS9,PDS10,PDS11,PDS12,PDS13,PDS14,PDS15)
   FREE F(MULTIPRT,SORTIN,SORTOUT,SORTLIB)
   GOTO DISPLAY
FINAL: -
END


FDSF NESTED CLIST

/*-------------------------  SETMSG CLIST  ---------------------------*/
/*- Function - The SETMSG CLIST forms ISPF error messages for the FDSF*/
/*--------------------------------------------------------------------*/
PROC 1 SHORTMSG
  GLOBAL DSN T NUM CURSOR
  SET CURSOR = &NUM
  SET ZERRSM = &STR(&SHORTMSG)
  SET ZERRLM = &STR(&SHORTMSG FOR "&T" AT ENTRY: &NUM => &DSN )
  SET ZERRALRM = YES
  SET ZERRHM = FDSFHELP
  ISPEXEC SETMSG MSG(ISRZ002)
END


FDSF MAIN PANEL

)ATTR
   % TYPE(TEXT)  INTENS(HIGH)
   + TYPE(TEXT)  INTENS(LOW)  SKIP(ON)
   _ TYPE(INPUT) INTENS(LOW)  CAPS(IN)
   $ TYPE(INPUT) INTENS(LOW)  CAPS(IN) PAD('.') JUST(LEFT)
   # TYPE(INPUT) INTENS(LOW)  CAPS(OFF) PAD('0') JUST(LEFT)
   ! TYPE(INPUT) INTENS(HIGH)  CAPS(IN)
)BODY
%--------------------%Fastpath Dataset Facility%-------(PF1/13 Help)----&ZTIME
+ Command ==>_ZCMD
+
+  Edit, Browse, Search, Catlg or Uncatlg =>_T+(E,B,S,C,U) for Dataset No =>_NUM
+  Search dataset list => (#Z #Z #Z #Z #Z #Z #Z #Z #Z #Z #Z #Z #Z #Z #Z #Z +)
+for Duplicate members or for the Member =>$MEMBER  + first location
+
%     |<-------- Dataset name -------->|     |<-------- Dataset name -------->|
!Z +=>_FPDS1                           !Z +=>_FPDS17                          +
!Z +=>_FPDS2                           !Z +=>_FPDS18                          +
!Z +=>_FPDS3                           !Z +=>_FPDS19                          +
!Z +=>_FPDS4                           !Z +=>_FPDS20                          +
!Z +=>_FPDS5                           !Z +=>_FPDS21                          +
!Z +=>_FPDS6                           !Z +=>_FPDS22                          +
!Z +=>_FPDS7                           !Z +=>_FPDS23                          +
!Z +=>_FPDS8                           !Z +=>_FPDS24                          +
!Z +=>_FPDS9                           !Z +=>_FPDS25                          +
!Z +=>_FPDS10                          !Z +=>_FPDS26                          +
!Z +=>_FPDS11                          !Z +=>_FPDS27                          +
!Z +=>_FPDS12                          !Z +=>_FPDS28                          +
!Z +=>_FPDS13                          !Z +=>_FPDS29                          +
!Z +=>_FPDS14                          !Z +=>_FPDS30                          +
!Z +=>_FPDS15                          !Z +=>_FPDS31                          +
!Z +=>_FPDS16                          !Z +=>_FPDS32                          +
)INIT
 .ZVARS ='(N1,N2,N3,N4,N5,N6,N7,N8,N9,N10,N11,N12,N13,N14,N15,N16, +
            C1,C17,C2,C18,C3,C19,C4,C20,C5,C21,C6,C22,C7,C23,C8,C24, +
        C9,C25,C10,C26,C11,C27,C12,C28,C13,C29,C14,C30,C15,C31,C16,C32)'
 .HELP = FDSFHELP
 IF (&CURSOR ¬= &Z)
    .CURSOR = FPDS&CURSOR
    .ATTR(.CURSOR) = 'INTENS(HIGH)'
 IF (&NUM ¬= &Z,32)
    .ATTR(FPDS&NUM) = 'INTENS(HIGH)'
 IF (&T = LIST_SEARCH)
    IF (&N1 ¬= &Z,n0)
      .ATTR(FPDS&N1) = 'INTENS(HIGH)'
    IF (&N2 ¬= &Z,n1)
       .ATTR(FPDS&N2) = 'INTENS(HIGH)'
    IF (&N3 ¬= &Z,n2)
       .ATTR(FPDS&N3) = 'INTENS(HIGH)'
    /*   Add the necessary number(up to 16) of If operators to ensure */
    /* intensive lighting of the dataset names in the list searched.  */
 IF (&T ¬= LIST_SEARCH)
    &C1  = 01  &C2  = 02  &C3  = 03  &C4  = 04  &C5  = 05  &C6  = 06
    &C7  = 07  &C8  = 08  &C9  = 09  &C10 = 10  &C11 = 11  &C12 = 12
    &C13 = 13  &C14 = 14  &C15 = 15  &C16 = 16  &C17 = 17  &C18 = 18
    &C19 = 19  &C20 = 20  &C21 = 21  &C22 = 22  &C23 = 23  &C24 = 24
    &C25 = 25  &C26 = 26  &C27 = 27  &C28 = 28  &C29 = 29  &C30 = 30
    &C31 = 31  &C32 = 32
 &T = &Z  &D = &Z  &CURSOR = &Z &MEMBER = &Z &NUM = ' '
 &N1=n0 &N2=n1 &N3=n2 &N4=n3 &N5=n4 &N6=n5 &N7=n6 &N8=n7
 &N9=n8 &N10=n9 &N11=nA &N12=nB &N13=nC &N14=nD &N15=nE &N16=nF
)PROC
 IF (&T ¬= &Z)
    VER(&T,NB,LIST,E,B,S,U,C)
    VER(&NUM,NB,RANGE,1,32)
 VPUT (FPDS1,FPDS2,FPDS3,FPDS4,FPDS5,FPDS6,FPDS7,FPDS8,FPDS9,FPDS10,
       FPDS11,FPDS12,FPDS13,FPDS14,FPDS15,FPDS16,FPDS17,FPDS18,FPDS19,
       FPDS20,FPDS21,FPDS22,FPDS23,FPDS24,FPDS25,FPDS26,FPDS27,FPDS28,
       FPDS29,FPDS30,FPDS31,FPDS32,CURSOR) PROFILE
 &CMD = TRUNC(&ZCMD,'.')
)END


FDSF HELP PANEL

)ATTR
   % TYPE(TEXT) INTENS(HIGH)
   + TYPE(TEXT) INTENS(LOW)
)BODY
%--------------------%Fastpath Dataset Facility+-------(FDSF HELP)-----%&ZTIME
+ Command ==>_ZCMD
+
+   The FDSF panel allows you to enter a number of datasets that you can
+ quickly%Edit+, %Browse+, %Search+for DASD volume location, %Catalog+or
% Uncatalog.+Also it allows you to search  a dataset list  for duplicate
+ members or for the first member location.
+   Using single quotes to define a specific dataset or noquotes, lett-
+ ing your TSO user id default as the high level qualifier.
%   Your dataset names are saved between sessions.
+   There are two ways to request a single dataset operation: (1)by ent-
+ ering %"E", "B", "S", "C"+or%"U"+and the selected dataset number( "0d"
+ and "d" are allowed )  or  (2) by overtyping the number corresponding
+ with the dataset by the letter you wish.
+   For dataset list searching overtype the list indexes with the cor-
+ responding dataset numbers (for both duplicate members and the member
+ searching) and the member name(for the member first location searching
+ only).
+   FDSF sets intensive lighting for the dataset name(s) involved in the
+ last operation. In the case of list searching FDSF in addition overty-
+ pes the dataset number with the list index ( 0 through 15 ) of corre-
+ sponding dataset name. That intensive lighting is turned off simply by
+ ENTER key or by the next operation.
+------------------------------------------------------------------------------
)END


Tsvetan Vassilev
Systems Software Manager                              c Xephon 1990
Centre for Information Technologies and Automated Systems (Bulgaria)

