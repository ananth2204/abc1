VSAM data attributes as CLIST variables

The LISTDSI statement provides TSO/E Release 3 users with the means of
directly obtaining the attributes of a file as CLIST variables.
Unfortunately this capability does not extend to VSAM datasets.

One indirect method of obtaining the VSAM file attributes is by trapping
(via &SYSOUTTRAP) the LISTC output and extracting the required
information from the output lines (&SYSOUTLINE).  The following program
- LISTVSI - obtains the VSAM file attributes directly.

The initialisation and termination routines have been omitted from the
program, as most installations have their own macros for such tasks.


SAMPLE CLIST

PROC 1 DSN
/* Function - obtain and display the principal */
/*            attributes of the VSAM file      */
/* Parameter - VSAM dataset name               */
FREE F(file)
ALLOC F(file) DA('&dsn') SHR
CALL 'libraryname(listvsi)' 'file'
WRITE LRECL = &lrecl


PROGRAM SOURCE CODE

         TITLE 'OBTAIN VSAM FILE-ATTRIBUTES AS CLIST VARIABLES'
**
* EXEC-PARAMETER: (VSAM-) FILENAME
**
**
*  FUNCTION: THIS PROGRAM OBTAINS THE PRINCIPAL ATTRIBUTES FROM
*            THE 'ACB' AND RETURNS THEM AS CLIST VARIABLES:
*              ENDRBA - END RBA OF DATA COMPONENT
*              KEYLEN - KEY LENGTH
*               LRECL - (MAX) DATA RECORD LENGTH IN DATA COMPONENT
*               NLOGR - NUMBER OF RECORDS IN DATA COMPONENT
*                 RKP - RELATIVE KEY POSITION
**
**
* RETURN-CODES:
*   8 - OPEN ERROR
*  12 - INVALID EXEC-PARAMETER
**
LISTVSI  ...                           program initialisation routine
* R1: A(EXEC-PARAMETER (FILENAME))
         L     R2,0(R1)                A(PARAMETERLIST)
         MVC   RC,=H'12'               RETURN-CODE, PARAMETER ERROR
         LH    R1,0(R2)                L(PARAMETERLIST)
         LTR   R1,R1
         BZ    EOJ                     : NO EXEC-PARAMETER
         CH    R1,=AL2(L'FILENAME)     :MAX. PARAMETER-LENGTH
         BH    EOJ                     : EXEC-PARAMETER TOO LONG
         BCTR  R1,0                    LC(PARAMETERLIST)
         MVC   FILENAME(0),2(R2)
         EX    R1,*-6                  MOVE PARAMETER
* SET FILENAME INTO ACB
         MODCB ACB=ACB,DDNAME=(*,FILENAME)
* OPEN FILE
         OPEN  (ACB,(INPUT))
         MVC   RC,=H'8'                RETURN-CODE, OPEN ERROR
         LTR   R15,R15
         BNZ   EOJ                     OPEN ERROR
         MVC   RC,=H'0'                RESET RETURN-CODE
* GET ATTRIBUTES
         SHOWCB ACB=ACB,                                              X
               AREA=AREA,                                             X
               LENGTH=AREAL,                                          X
               OBJECT=DATA,                                           X
               FIELDS=(ENDRBA,KEYLEN,LRECL,NLOGR,RKP)
* BUILD PARAMETER-LIST
A100     LA    R4,NL                   A(NAMELIST)
         LA    R5,NNL                  N(NAMELIST)
A110     MVC   VN,0(R4)                VARIABLE-NAME
* DETERMINE FIELD-LENGTH
         LA    R1,VN+L'VN
         LA    R0,L'VN
A120     BCTR  R1,0                    PTR --
         CLI   0(R1),C' '
         BNE   *+8
         BCT   R0,A120
         ST    R0,VNLEN
         L     R1,8(R4)                A(DATA, FULLWORD)
         L     R0,0(R1)                DATA, FULLWORD
         CVD   R0,D                    CONVERT TO DECIMAL
         MVC   DATA,=X'40202020202020202120'
         LA    R1,DATA+9
         EDMK  DATA,D+3
* DETERMINE FIELD-LENGTH
* R1: ADDRESS OF FIRST SIGNIFICANT DIGIT
         ST    R1,DATAPTR              A(DATA START)
         LA    R0,DATA+L'DATA
         SR    R0,R1
         ST    R0,DATALEN              LEN(DATA)
         L     R15,CVTPTR
         L     R15,CVTTVT(R15)
         L     R15,TSVTVACC-TSVT(R15)
* INVOKE VARIABLE ACCESS SERVICE ROUTINE
         CALL  (15),                                                  X
               (ECODE,                 ENTRY CODE                     X
               VNPTR,                  PTR(VARIABLE NAME)             X
               VNLEN,                  LEN(VARIABLE NAME)             X
               DATAPTR,                PTR(DATA)                      X
               DATALEN,                LEN(DATA)                      X
               TOKEN),VL               TOKEN (UNUSED)
* TEST RETURN-CODE
         LTR   R15,R15
         BNZ   ERR                     NOK
         LA    R4,LNL(R4)
         BCT   R5,A110
EOJ      ...                           program termination routine
RC       DC    H'0'
ERR      DS    0H
* ERROR PROCESSING
* R15: SERVICE RETURN-CODE
         BAL   R14,CVD
         MVC   MRC,0(R1)               MOVE TO MSG
         L     R15,FRC                 FUNCTION RETURN-CODE
         BAL   R14,CVD
         MVC   MFRC,0(R1)              MOVE TO MSG
         L     R15,RSC                 REASON-CODE
         BAL   R14,CVD
         MVC   MRSC,0(R1)              MOVE TO MSG
         TPUT  MSG,MSGL                DISPLAY MSG
         B     EOJ                     EXIT
* CVD: CONVERT TO DECIMAL
* INPUT:    R15 - BINARY VALUE
* OUTPUT:    R1 - A(NN)
CVD      CVD   R15,D
         UNPK  CVDWK,D
         OC    CVDWK,=2C'0'
         LA    R1,CVDWK
         BR    R14                     RETURN
CVDWK    DS    CL2
D        DS    PL8
* ERROR MESSAGE
MSG      DC    C'TSVEUPDT ERROR -'
         DC    C' RC:'
MRC      DS    CL2  TSR RETURN-CODE
         DC    C' FRC:'
MFRC     DS    CL2  FUNCTION RETURN-CODE
         DC    C' RSC:'
MRSC     DS    CL2  REASON-CODE
MSGL     EQU   *-MSG  MSG LENGTH
* ACB
ACB      ACB
FILENAME DC    CL8' '                  EXEC-PARAMETER
* VSAM DATA FIELDS
AREA     DS    0F
ENDRBA   DS    F
KEYLEN   DS    F
LRECL    DS    F
NLOGR    DS    F
RKP      DS    F
AREAL    EQU   (*-AREA)
ECODE    DC    A(TSVEUPDT)
TOKEN    DC    A(0)
* FIELDNAMES AND - POINTERS
* FORMAT: FIELDNAME (CL8)
*         POINTER TO DATA FIELD (AL4)
NL       DC    CL8'ENDRBA',AL4(ENDRBA)
LNL      EQU   *-NL                    ENTRY LENGTH
         DC    CL8'KEYLEN',AL4(KEYLEN)
         DC    CL8'LRECL',AL4(LRECL)
         DC    CL8'NLOGR',AL4(NLOGR)
         DC    CL8'RKP',AL4(RKP)
NNL      EQU   (*-NL)/LNL              NUMBER OF ENTRIES
* POINTERS
VNPTR    DC    A(VN)
VNLEN    DC    A(0)
DATAPTR  DC    A(0)
DATALEN  DC    A(0)
VN       DC    CL8' '
DATA     DC    CL10' '
FRC      DC    F'0'                    FUNCTION RETURN-CODE
RSC      DC    F'0'                    REASON-CODE
         LTORG
CVTPTR   EQU   16
CVTTVT   EQU   X'9C'
         IKJTSVT
         END


A Rudd
Technical Specialist (West Germany)     â‚¬ A Rudd 1987










