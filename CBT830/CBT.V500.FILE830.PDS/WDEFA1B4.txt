Disassembling a PSB

This program will disassemble members of a PSBLIB and print a
report of most of the parameters that were specified in the PSB
source code.  We are using MVS/SP and IMS 2.2, but this
program should work with IMS 1.3 or MVS/XA.  Figure 1 shows
a sample report.

Some of the reasons this program may be useful are:
*   The source code for a PSB has been lost.
*   It makes it easy to print the whole PSBLIB and then scan for
any PSB that uses a certain database.
*   There is a need to know assembly date and time.
*   There is a need to find a PSB that has the databases and
options you need for a new program so that a new PSB is not
necessary.
*   For system documentation.

The SYSIN data used in the JCL to execute the program may be
either 'ALL' to print every PSB in the PSBLIB, or one or more
member names that you want to print.  This data must be
specified in columns 1 to 8 - only one entry per SYSIN statement.
The condition code will be 4 if a member name is not found in the
PSBLIB.  Sensitive fields are not listed as I could not find a way
to relate the fields to a particular segment.

The following is sample JCL that may be used to print the report.

//JOBNAME    JOB   0,PGMRNAME,REGION=2048K
//RPSB       PROC   OCLS=X,PSBLIB=NONAME
//STEP1      EXEC   PGM=SJHRPSB
//STEPLIB    DD     DSN=SYS2.LOADLIB,DISP=SHR
//SYSPRINT   DD     SYSOUT=&OCLS
//DIR        DD     DSN=&PSBLIB,DISP=SHR
//SEQ        DD     DSN=&PSBLIB,DISP=SHR
//           PEND
//STEP1      EXEC   RPSB,PSBLIB='APOD.PSBLIB"
//SYSIN      DD     *
TESTPSB
RELCPSB
RRSLTPSB
/*

PROGRAM LISTING
SJHRPSB  CSECT
         SAVE  (14,12)
         BALR  R12,0
         USING *,R12
         ST    R13,SAVEAREA+4
         LA    R13,SAVEAREA
         B     START
FIN      CLI   ERRSW,C'1'             WAS THERE AN ERROR
         BE    FIN4                   YES. RETURN WITH CODE=4
         L     R13,SAVEAREA+4           END JOB
         RETURN (14,12),RC=0
FIN4     L     R13,SAVEAREA+4         END JOB
         RETURN (14,12),RC=4
* GET THE PSBLIB DSN SO THAT IT CAN BE PRINTED ON THE REPORT
START    RDJFCB DIR
         MVC   LIBNAME,JFCBAREA
         OPEN  (DIR,,SEQ,,SYSIN,,PRTR,(OUTPUT))
         USING REGPDS,R5
         USING SEGTAB,R6
         USING DBPCB,R7
         USING PCBWRK,R10
         USING IOAREA,R2
         TIME
         ST    R1,DATE           SAVE DATE
         UNPK  HEADDT,DATE       MOVE TO HEADING
         OI    HEADDT+3,X'F0'    MAKE PRINTABLE
         BAL   R9,PRTHD          PRINT HEADING
GETIN    GET   SYSIN,INREC              READ SYSIN RECORD
         CLC   MBRNAME,=CL8'ALL'        SHOULD WE PROCESS ALL MEMBERS
         BNE   CHK2                     NO... ASSUME MEMBER NAME
         CLI   SYSINSW,C'1'             HAS MEMBER NAME BEEN READ
         BE    GETIN                    YES. GET NEXT RECORD
         B     GETDIR
CHK2     LA    R5,INREC                  MAKE MBRNAME = NAME
         MVI   SYSINSW,C'1'              1 = PROCESSING MEMBER NAMES
         B     FINDS
* IF SYSIN=ALL READ EACH PSBLIB MEMBER IN THE PDS
GETDIR   GET   DIR
         LR    R5,R1
         LH    R4,0(R5)
         SH    R4,=H'2'
         LA    R5,2(R5)
CLCNAME  CLC   NAME,=8X'FF'              HAVE WE READ THE LAST MEMBER
         BNE   FINDS                     NO. FIND THE MEMBER
EOFSYSIN CLOSE (DIR,,SEQ,,SYSIN,,PRTR)
         B     FIN
FINDS    MVC   PSBNAME,NAME           MOVE MEMBER NAME TO PRT LINE
         MVI   NPSBSW,C'1'            SET NEW PSB SWITCH ON
         FIND  SEQ,NAME,D
* IF REG 15 IS NOT ZERO, THEN AN ERROR OCCURRED DURING THE FIND.
         C     R15,=F'00000000'
         BE    READ
         MVI   ERRSW,C'1'             INDICATE AN ERROR OCCURRED
         MVC   GENDATE(29),=C'DOES NOT EXIST IN THIS PSBLIB'
         BAL   R9,PRTDET
         B     GETIN
* LOAD PSB FROM PSBLIB
READ     LOAD  EPLOC=NAME,DCB=SEQ
         LR    R2,R0                  USE R2 TO POINT TO PSB
         LA    R10,PCB1A              LOAD R10 WITH 1ST PCB ADDR
         SR    R3,R3                  CLEAR REG
         L     R3,DBREF               LOAD START OF DB REF TABLE
LOOP3    CLC   0(4,R3),=X'FFFFFFFF'   IS IT LAST ENTRY
         BE    OUT3                   YES. DATE, TIME & IMSREL FOLLOW
         LA    R3,12(R3)              GET NEXT ENTRY
         B     LOOP3
OUT3     LA    R3,4(R3)               BUMP PAST HI VALUES
         MVC   GENDATE,0(R3)
         MVC   GENTIME,8(R3)
         MVC   IMSREL,13(R3)
LOOP1    SR    R7,R7                  CLEAR R7
         ICM   R7,7,PCBADR
         CLI   PXCODE,X'20'           COBOL OR ASM PSB?
         BE    *+8                    YES
         A     R7,DVLEN               SKIP OVER PL/I DOPE VECTORS
         MVC   DBDNAME,DBD            MOVE DBD TO PRT LINE
         MVC   PROCOPTP,PROC          MOVE PCB PROCOPT TO PRT LINE
         SR    R3,R3                  CLEAR REG
         L     R3,DBREF               LOAD START OF DB REF TABLE
* LOOP THRU THE DB REF TABLE LOOKING FOR SEC. INDEX
LOOP4    CLC   0(4,R3),X='FFFFFFFF'   IS IT LAST ENTRY
         BE    OUT5                   YES. NO HITS
         CLM   R7,7,9(R3)             DOES THIS ADDR = PCB ADDR
         BE    OUT4                   YES. THIS DB ACCESSED THRU SEC IDX
         LA    R3,12(R3)              GET NEXT ENTRY
         B     LOOP4                  TRY AGAIN
OUT4     MVC   PROCSEQ,0(R3)        MOVE SEC INDEX DBD NAME TO PRT LINE
OUT5     SR    R3,R3                CLEAR REG
         ICM   R3,7,KEYLEN          GET KEY LENGTH
         CVD   R3,DBLWRD            CONVERT TO PACKED
         MVC   KEYSZ,EDFLD          MOVE EDIT SPEC TO PRT LINE
         ED    KEYSZ,DBLWRD+6       MOVE KEY LENGTH TO PRT LINE
         SR    R6,R6                CLEAR REG
         ICM   R6,7,SENSEG          GET ADDR OF SEN SEG TABLE
         AH    R6,SENOFF            ADD OFFSET OF ENTRY WE WANT
LOOP2    MVC   SEGNAME,SSNAME       MOVE SEGMENT NAME TO PRT LINE
         MVC   PROCOPTS,SSPROPT     MOVE SEGMENT PROCOPT
         CLC   SSPOFF,=X'FFFF'      IS THIS A PARENT
         BNE   GETPAR               NO. GET PARENT NAME
         MVC   PARENT,=CL8'ROOT'
         B     BYPAR
GETPAR   SR    R3,R3                CLEAR REG
         ICM   R3,7,SENSEG          START OF SEN SEGS
         AH    R3,SSPOFF            ADD OFFSET OF PARENT
         MVC   PARENT,0(R3)
BYPAR    BAL   R9,PRTDET            PRINT DETAIL
         CLI   SSPCB,X'80'          IS IT LAST SENSEG FOR THIS PCB
         BNE   NSSEG                NO. PROCESS NEXT SEN SEG
         CLI   PCBFLG,X'80'         IS IT LAST PCB
         BE    CHKSW                YES. GET NEXT PSB
         LA    R10,4(R10)           GET NEXT PCB ADDR
         B     LOOP1
NSSEG    LA    R6,20(R6)            GET ADDR OF NEXT SEN SEG
         B     LOOP2             PROCESS IT
CHKSW    CLI   SYSINSW,C'1'      ARE WE PROCESSING MEMBER NAMES
         BE    GETIN             YES
NDIR     NI    C1,X'1F'          NO. GET NEXT NAME FROM DIRECTORY
         SR    R8,R8
         IC    R8,C1
         SLL   R8,1
         LA    R8,12(R8)
         SR    R4,R8
         BZ    GETDIR
         AR    R5,R8
         B     CLCNAME
PRTDET   CP    LINECNT,=P'60'       HAVE WE PRINTED 60 LINES
         BL    SKIPHD               NO
         ST    R9,SAVE9             SAVE R9
         BAL   R9,PRTHD             PRT HEADINGS
         L     R9,SAVE9             RESTORE R9
SKIPHD   CLI   NPSBSW,C'1'          IS THIS A NEW PSB
         BNE   NOBLK                NO, CONTINUE
         PUT   PRTR,BLNKLINE        YES. PUT BLANK SEPARATOR LINE
         AP    LINECNT,=P'1'        ADD 1 TO PAGE COUNT
         MVI   NPSBSW,C'0'          RESET NEW PSB SWITCH
NOBLK    PUT   PRTR,DT1             PUT DETAIL PRT LINE
         AP    LINECNT,=P'1'        ADD 1 TO LINE COUNTER
         MVI   DT1,C' '             CLEAR PRINT LINE
         MVC   DT1+1(132),DT1
         BR    R9
PRTHD    AP    PAGECNT,=P'1'      ADD 1 TO PAGE COUNTER
         MVC   PAGENO,EDFLD       MOVE EDIT SPEC TO PRT LINE
         ED    PAGENO,PAGECNT     MOVE PAGE NO. TO PRT LINE
         PUT   PRTR,HD1
         PUT   PRTR,HD2
         PUT   PRTR,BLNKLINE
         ZAP   LINECNT,=P'3'      ALLOW FOR HEADINGS IN LINE COUNT
         MVI   NPSBSW,C'0'        SET OFF NEW PSB SWITCH
         BR    R9
DIR      DCB   DSORG=PS,MACRF=GL,DDNAME=DIR,LRECL=256,BLKSIZE=256,     X
               RECFM=F,EXLST=XLST
SEQ      DCB   DSORG=PO,MACRF=R,DDNAME=SEQ,EODAD=CHKSW
PRTR     DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,LRECL=133,RECFM=FBA,  X
               BLKSIZE=1330
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,EODAD=EOFSYSIN,LRECL=80,MACRF=(GM)
LINECNT  DC    P'00'
SYSINSW  DC    C'0'
ERRSW    DC    C'0'
NPSBSW   DC    C'0'
PAGECNT  DC    PL2'0'
BLNKLINE DC    CL133' '
HD1      DC    C'1'
         DC    CL22' '
         DC    CL20'PSB LISTING FOR DSN='
LIBNAME  DC    CL44' '
         DC    CL12' '
         DC    CL5'DATE='
HEADDT   DC    CL5' '
         DC    CL5' '
         DC    CL5'PAGE '
PAGENO   DC    CL4' '
         DC    CL10' '
HD2      DC    C' '
         DC    CL94'PSB NAME    ASM DATE - TIME  IMS REL    DBDNAME    X
               PROCOPT    PROCSEQ    KEYLEN    SEGNAME    '
         DC    CL17'PROCOPT    PARENT'
         DC    CL21' '
DT1      DC    C' '
PSBNAME  DC    CL8' '
         DC    CL4' '
GENDATE  DC    CL8' '
         DC    CL3' '
GENTIME  DC    CL5' '
         DC    CL4' '
IMSREL   DC    CL3' '
         DC    CL5' '
DBDNAME  DC    CL8' '
         DC    CL5' '
PROCOPTP DC    CL4' '
         DC    CL5' '
PROCSEQ  DC    CL8' '
         DC    CL4' '
KEYSZ    DC    CL4' '
         DC    CL5' '
SEGNAME  DC    CL8' '
         DC    CL5' '
PROCOPTS DC    CL4' '
         DC    CL5' '
PARENT   DC    CL8' '
         DC    CL19' '
         DS    F
DVLEN    DC    F'60'
XLST     DC    X'07'
         DC    AL3(JFCBAREA)
         DC    X'80000000'
TABMES   DC    X'1F001F1E1F1E1F1F1E1F1E1F'
TABTR    DC    240C' ',C'0123456789ABCDEF'
SAVEAREA DS    18F
DATE     DS    F
DBLWRD   DS    D
SAVE9    DS    F
EDFLD    DC    X'40202020'
INREC    DS    0CL80
MBRNAME  DS    CL8
         DS    CL72
JFCBAREA DS    CL500
         LTORG
PCBWRK   DSECT
         DS    0CL4
PCBFLG   DS    XL1
PCBADR   DS    AL3
IOAREA   DSECT
         DS    0CL32760
         DS    XL1
SENSEG   DS    AL3
         DS    CL4
DBREF    DS    AL4
         DS    CL52
PXINDX   DS    XL1
PXCODE   DS    XL1
PXSIZE   DS    XL2
         DS    CL8
PCB1A    DS    XL4
         DS    CL32684
REGPDS   DSECT
NAME     DS    CL8
TTR      DS    CL3
C1       DS    CL1
SEGTAB   DSECT
SSNAME   DS    CL8
SSPROPT  DS    CL4
SSPCB    DS    F
SSPOFF   DS    H
SSSOFF   DS    H
DBPCB    DSECT
DBD      DS    CL8
         DS    F
PROC     DS    CL4
         DS    CL13
KEYLEN   DS    XL3
NSS      DS    H
SENOFF   DS    H
         END   SJHRPSB


Richard Durkee
Systems Programmer
St Joseph Hospital (USA) € Xephon 1989

