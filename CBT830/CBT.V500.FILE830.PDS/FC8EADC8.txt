Level numbers in SPF statistics

In MVS, when source code is held as a member of a Partitioned Data Set
that has standard numbers and SPF statistics, the last two digits of the
number field are used by SPF to hold the level number (in the range 00
to 99) of the last amendment of each line.  What do you do when your SPF
statistics level reaches 99?  Most programmers either continue editing
and ignore the situation, in which case a huge number of level 99s build
up, or they reset the statistics levels to zero with SPF option 3.5 and
start again.

In MVS, when source code is held as a member of a Partitioned Data Set
that has Neither of these solutions is ideal since the level numbers on
the lines give programmers valuable information as to when amendments
have been made, and in what order.  The following CLIST provides the
answer.  Very often there are gaps in the level numbers (ie a member
with a level of 99 will not have a continuous series of levels 00, 01,
02, 03, ... 99).  These gaps occur when lines are deleted or when the
same lines are continually changed during the editing process.
Generally the smaller the member the more gaps there will be.

The format of the CLIST command is:

     %XXLEVEL

The CLIST can be invoked from the command field while editing a dataset
with the SPF (Version 2) editor.  It may also be assigned to a PF key.
The XXLEVEL CLIST closes up any gaps and renumbers all level numbers
found above a gap.  A Dialogue Manager message will be displayed when it
is finished.

The CLIST only saves the data if a level number change was needed.  To
avoid confusion with older versions of a member, if the CLIST needs to
save the data, the version number is incremented by one (if less than
99).  Testing on a random sample of members from various source
libraries showed that the following levels were reset when the CLIST was
run on members with level 99:

     06, 16, 40, 66, 78

This CLIST is not just useful for the level 99 problem.  It is a
convenient tool to use to close up the gaps in level numbers at any
time.  This is particularly useful when all lines are excluded and FIND
commands are used to find the last few levels of changes to a member.
It ensures that there are no missing levels.

ISREDIT MACRO
   ISREDIT (SAVE) = USER_STATE
   ISREDIT (NUMBER) = NUMBER
   IF &NUMBER = &STR() THEN EXIT
   ISREDIT (STATS) = STATS
   IF &STATS = OFF | &NUMBER = OFF THEN DO
      SET ZEDSMSG = INVALID DATA
      SET ZEDLMSG = BOTH NUMBER AND STATS MODE MUST BE ON
      ISPEXEC SETMSG MSG(ISRZ001)
      EXIT CODE(8)
      END
   ISREDIT (LINE1) = LINENUM .ZFIRST
   ISREDIT (LINE2) = LINENUM .ZLAST
   IF &LINE2 = 0 THEN DO
      SET ZEDSMSG = INVALID DATA
      SET ZEDLMSG = NO LINES WERE FOUND FOR THE MACRO TO SEARCH
      ISPEXEC SETMSG MSG(ISRZ001)
      EXIT CODE(8)
      END
   ISREDIT NUMBER = OFF
   ISREDIT (RECFM) = RECFM
   IF &RECFM = F THEN DO
      ISREDIT (LRECL) = LRECL
      SET COL1 = &LRECL - 1
      SET COL2 = &LRECL
      END
   ELSE DO
      SET COL1 = 7
      SET COL2 = 8
      END
   SET COL0 = &COL1 - 6
   DO WHILE &LINE1 <= &LINE2
      ISREDIT (LINE) = LINE &LINE1
      IF &DATATYPE(&SUBSTR(&COL0:&COL2,&NRSTR(&LINE))) = CHAR THEN DO
         SET ZEDSMSG = INVALID DATA
         SET ZEDLMSG = COLS &COL0 TO &COL2 OF ALL LINES MUST BE NUMERIC
         ISPEXEC SETMSG MSG(ISRZ001)
         ISREDIT USER_STATE = (SAVE)
         EXIT CODE(8)
         END
      SET LINE1 = &LINE1 + 1
      END
   SET FOUND = 0
   SET LEVEL = 100
   DO WHILE (&FOUND = 0 && &LEVEL > 0)
      SET LEVEL = &LEVEL - 1
      IF &LENGTH(&LEVEL) = 1 THEN SET LEVEL = &STR(0&LEVEL)
      ISREDIT SEEK ALL '&LEVEL' &COL1 &COL2
      ISREDIT (FOUND) = SEEK_COUNTS
      END
   SET NEWLEVEL = -1
   SET SEARCH = 0
   SET CHANGE = N
   DO WHILE (&SEARCH <= &LEVEL)
      IF &LENGTH(&SEARCH) = 1 THEN SET SEARCH = &STR(0&SEARCH)
      ISREDIT SEEK ALL '&SEARCH' &COL1 &COL2
      ISREDIT (FOUND) = SEEK_COUNTS
      IF &FOUND > 0 THEN DO
         IF &SEARCH >= &NEWLEVEL THEN DO
            SET NEWLEVEL = &NEWLEVEL + 1
            IF &LENGTH(&NEWLEVEL) = 1 THEN SET NEWLEVEL = &STR(0&NEWLEVEL)
            IF &SEARCH > &NEWLEVEL THEN DO
               ISREDIT CHANGE ALL '&SEARCH' '&NEWLEVEL' &COL1 &COL2
               SET CHANGE = Y
               END
            END
         END
      SET SEARCH = &SEARCH + 1
      END
   ISREDIT (LEVEL) = LEVEL
   IF &LEVEL ¬= &NEWLEVEL THEN DO
      ISREDIT LEVEL &NEWLEVEL
      ISREDIT (VERSION) = VERSION
      IF &VERSION < 99 THEN DO
         SET VERSION = &VERSION + 1
         ISREDIT VERSION = (VERSION)
         END
      END
   ISREDIT RESET
   ISREDIT USER_STATE = (SAVE)
   ISREDIT UP MAX
   IF &RECFM = F THEN ISREDIT RIGHT MAX
      ELSE ISREDIT LEFT MAX
   IF &LEVEL = &NEWLEVEL && &CHANGE = N THEN DO
      SET ZEDSMSG = NO CHANGES MADE
      SET ZEDLMSG = THERE WERE NO GAPS IN THE LEVEL NUMBERS TO CLOSE UP
      END
   ELSE DO
      SET ZEDSMSG = LEVEL CHANGES MADE
      SET ZEDLMSG = ALL GAPS IN THE LEVEL NUMBERS HAVE BEEN CLOSE UP
      END
   ISPEXEC SETMSG MSG(ISRZ001)
EXIT CODE(0)


     € Xephon 1988





