//JOBJ  JOB 111-1111,'SSP PL/1',MSGLEVEL=1
//COST EXEC PL1LFCLG,PARM.PL1L='NOLIST,NOATR,NOXREF,CHAR48'
//PL1L.SYSIN  DD  *
 COST..                                                                 COST  10
 /*********************************************************************/COST  20
 /*                                                                   */COST  30
 /*                     ALLOCATION OF OVERHEAD COSTS                  */COST  40
 /*                                                                   */COST  50
 /*********************************************************************/COST  60
    PROCEDURE OPTIONS(MAIN),.                                           COST  70
    DECLARE                                                             COST  80
         ERROR EXTERNAL CHARACTER(1),  /*EXTERNAL ERROR INDICATOR     */COST  90
         (CNR,CHNR) CHARACTER(10),                                      COST 100
         CH CHARACTER(1),                                               COST 110
         (I,IND,K,L,M,N)                                                COST 130
         BINARY FIXED,.                                                 COST 140
    ON ENDFILE (SYSIN) GO TO BACK,.                                     COST 150
 START..                                                                COST 160
    GET EDIT                                                            COST 180
         (CNR,N,M,CH)                  /*READ NUMBER OF COLUMNS, ROWS */COST 190
         (A(10),F(5),F(5),X(59),A(1)),.                                 COST 200
    PUT EDIT                           /*WRITE HEADING                */COST 210
         ('********************************************',               COST 220
         '*                                          *',                COST 230
         '*       ALLOCATION OF OVERHEAD COSTS       *',                COST 240
         '*                                          *',                COST 250
         '********************************************')                COST 260
         (PAGE,SKIP(2),(5)(X(30),A,SKIP)),.                             COST 270
    PUT EDIT                                                            COST 280
         ('PROBLEM =',CNR,'NUMBER OF AUXILIARY  DEPARTMENTS =',N,       COST 290
         'NUMBER OF PRODUCTIVE DEPARTMENTS =',M)                        COST 300
         (SKIP(2),X(30),A,A,(2)(SKIP(2),X(30),A,F(5))),.                COST 310
         BEGIN,.                                                        COST 320
         DECLARE                                                        COST 330
              (R(N,N),S(N,1),                                           COST 340
              W(N) DEFINED S(1SUB,1))                                   COST 350
              BINARY FLOAT,            /*SINGLE PRECISION VERSION  /*S*/COST 360
  /*          BINARY FLOAT(53),        /*DOUBLE PRECISION VERSION  /*D*/COST 370
              IPER(N)                                                   COST 380
              BINARY FIXED,.                                            COST 390
         IND  =1,.                     /*CALCULATE VALUES FOR INPUT   */COST 400
         L    =N,.                     /*FORMAT LIST                  */COST 410
              DO WHILE (L GT 6),.                                       COST 420
              L    =L-6,.                                               COST 430
              IND  =IND+1,.            /*IND MEANS THE NUMBER OF CARDS*/COST 440
              END,.                    /*FOR ONE ROW OF R             */COST 450
         L    =(6-L)*10,.              /*L SPECIFIES HORIZONT. SPACING*/COST 460
              DO I =1 TO N,.           /*EXECUTE LOOP OVER ROWS OF R  */COST 470
              GET EDIT                 /*READ I-TH ROW OF MATRIX R    */COST 480
                   (CHNR,W)                                             COST 490
                   (A(10),(IND)((6)F(10,8),X(20))),.                    COST 500
              GET EDIT                 /*HORIZONTAL SPACING           */COST 510
                   (CNR)                                                COST 520
                   (X(L),A(10)),.                                       COST 530
              W(I) =W(I)-1,.           /*COMPUTE  TRANSPOSED (U-R) ,  */COST 540
              R(*,I)=-W,.              /*WHERE U MEANS UNIT MATRIX    */COST 550
              END,.                                                     COST 560
         CALL MFG(R,IPER,N),.          /* CALL FACTORIZATION PROCEDURE*/COST 570
         PUT EDIT                      /*WRITE ERROR INDICATOR OF MFG */COST 580
              ('RESULTANT ERROR INDICATOR WITHIN PROCEDURE MFG',        COST 590
              'ERROR =',ERROR)(SKIP(3),X(10),A,X(10),A,A),.             COST 600
              DO I =1 TO M,.           /*EXECUTE LOOP OVER ROWS OF S  */COST 610
              GET EDIT                 /*READ ANY ROW OF MATRIX S     */COST 620
                   (CHNR,W)                                             COST 630
                   (A(10),(IND)((6)F(10,8),X(20))),.                    COST 640
              GET EDIT                                                  COST 650
                   (CNR)                                                COST 660
                   (X(L),A(10)),.                                       COST 670
              IF ERROR NE 'S'                                           COST 680
              THEN DO,.                /*PERFORM MATRIX DIVISION      */COST 690
                   CALL MDLG(R,S,IPER,N,1B,'0'),.                       COST 700
                   PUT EDIT            /*WRITE ALLOCATION ROW         */COST 710
                        (CHNR,W)                                        COST 720
                        (SKIP(2),X(3),A,X(5),(IND)((6)E(17,8),X(18))),. COST 730
                   END,.                                                COST 740
              END,.                                                     COST 750
         END,.                                                          COST 760
    GO TO START,.                                                       COST 770
 BACK..                                                                 COST 780
    PUT FILE (SYSPRINT) EDIT ('END OF SAMPLE PROGRAM')                  COST 790
         (SKIP(5),COLUMN(10),A),.                                       COST 800
    END,.                              /*END OF PROCEDURE COST        */COST 810
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 MFG..                                                                  MFG   10
 /*********************************************************************/MFG   20
 /*                                                                   */MFG   30
 /*      FACTORIZE A GENERAL NON-SINGULAR MATRIX A INTO A PRODUCT     */MFG   40
 /*      OF A LOWER TRIANGULAR MATRIX L AND AN UPPER TRIANGULAR       */MFG   50
 /*      MATRIX U OVERWRITTEN ON A, OMITTING UNIT DIAGONAL OF U       */MFG   60
 /*                                                                   */MFG   70
 /*********************************************************************/MFG   80
    PROCEDURE(A,IPER,N),.                                               MFG   90
    DECLARE                                                             MFG  100
         ERROR EXTERNAL CHARACTER(1),  /*EXTERNAL ERROR INDICATOR     */MFG  110
         EPS BINARY FLOAT,                                              MFG  120
         W BINARY FLOAT(53),                                            MFG  130
         (A(*,*),H,R)                                                   MFG  140
         BINARY FLOAT,                 /*SINGLE PRECISION VERSION  /*S*/MFG  150
  /*     BINARY FLOAT(53),             /*DOUBLE PRECISION VERSION  /*D*/MFG  160
         (IPER(*),I,IND,J,K,L,LN,M,N)                                   MFG  170
         BINARY FIXED,.                                                 MFG  180
    LN   =N,.                                                           MFG  190
    IF LN LE 0                         /*TEST SPECIFIED DIMENSION     */MFG  200
    THEN DO,.                                                           MFG  210
         ERROR='P',.                   /*P MEANS WRONG PARAMETER      */MFG  220
         GO TO RETURN,.                                                 MFG  230
         END,.                                                          MFG  240
    ERROR='0',.                        /*PRESET ERROR INDICATOR       */MFG  250
    EPS  =1.E-7,.                      /*SINGLE PRECISION VERSION  /*S*/MFG  254
  /*EPS  =1.E-16,.                     /*DOUBLE PRECISION VERSION  /*D*/MFG  255
                                       /*******************************/MFG  260
         DO L =1 TO LN,.               /*CALCULATE SCALING FACTORS    */MFG  270
         R    =0,.                     /*******************************/MFG  280
              DO J =1 TO LN,.          /*COMPUTE ABSOLUTELY GREATEST  */MFG  290
              H    =ABS(A(L,J)),.      /*ELEMENT R IN EACH ROW OF A   */MFG  300
              IF H GT R                                                 MFG  310
              THEN R    =H,.                                            MFG  320
              END,.                                                     MFG  330
         IF R = 0                      /*TEST FOR ZEROS IN ANY ROW    */MFG  340
         THEN DO,.                                                      MFG  350
              ERROR='S',.              /*A ROW IN GIVEN MATRIX A      */MFG  360
              GO TO RETURN,.           /*IS ZERO                      */MFG  370
              END,.                                                     MFG  380
                                       /*STORE R IN AN INTEGER VECTOR */MFG  390
         ELSE UNSPEC(IPER(L))=UNSPEC(R),.                               MFG  400
         END,.                         /*******************************/MFG  410
                                       /*GAUSS  ELIMINATION           */MFG  420
         DO L =1 TO LN,.               /*******************************/MFG  430
         UNSPEC(M)='1'B,.              /*PRESET M AS SMALLEST INTEGER */MFG  440
              DO J =L TO LN,.          /*MODIFY COLUMN, SEARCH PIVOT  */MFG  450
              W,H  =A(J,L),.           /*SAVE ELEMENT                 */MFG  460
                   DO K =1 TO L-1,.    /*COMPUTE SCALAR PRODUCTS      */MFG  470
                   W    =W-MULTIPLY(A(J,K),A(K,L),53),.                 MFG  480
                   END,.                                                MFG  490
              A(J,L)=W,.               /*UPDATE ELEMENT               */MFG  500
              W    =ABS(W),.                                            MFG  510
              UNSPEC(I)=UNSPEC(W),.                                     MFG  520
              I    =I-IPER(J),.        /*DIFFERENCE OF EXPONENTS      */MFG  530
              IF I GT M                /*SEARCH FOR LARGEST DIFFERENCE*/MFG  540
              THEN DO,.                                                 MFG  550
                   IND  =J,.           /*STORE ROW-INDEX              */MFG  560
                   M    =I,.                                            MFG  570
                   R    =H,.           /*SAVE ORIGINAL ELEMENT FOR    */MFG  580
                   END,.               /*TEST ON LOSS OF SIGNIFICANCE */MFG  590
              END,.                                                     MFG  600
         IF IND GT L                   /*IS INTERCHANGE NECESSARY     */MFG  610
         THEN DO,.                                                      MFG  620
              IPER(IND)=IPER(L),.      /*RESTORE PERMUTATION VECTOR   */MFG  630
                   DO J =1 TO LN,.     /*INTERCHANGE ROWS OF MATRIX A */MFG  640
                   H    =A(L,J),.                                       MFG  650
                   A(L,J)=A(IND,J),.                                    MFG  660
                   A(IND,J)=H,.                                         MFG  670
                   END,.                                                MFG  680
              END,.                                                     MFG  690
         IPER(L)=IND,.                 /*STORE ROW NUMBER             */MFG  700
         H    =A(L,L),.                /*H CONTAINS THE PIVOT         */MFG  710
         IF ABS(H) LE ABS(EPS*R)       /*TEST PIVOT ELEMENT FOR LOSS  */MFG  720
         THEN IF H NE 0                /*OF SIGNIFICANCE AND FOR ZERO */MFG  730
         THEN ERROR='W',.              /*W MEANS WARNING              */MFG  740
         ELSE IF R = 0                 /*IS ORIGINAL ELEMENT ZERO     */MFG  750
         THEN DO,.                                                      MFG  760
              ERROR='S',.              /*CALCULATED PIVOT AND THE     */MFG  770
              GO TO RETURN,.           /*ORIGINAL ELEMENT ARE ZERO    */MFG  780
              END,.                                                     MFG  790
         ELSE DO ,.                    /*CORRECT ZERO PIVOT           */MFG  800
              H    =EPS*R,.                                             MFG  810
              ERROR='C',.              /*WARNING AND CORRECTION       */MFG  830
              END,.                                                     MFG  840
              DO J =L+1 TO LN,.        /*EXECUTE LOOP OVER L-TH ROW   */MFG  850
              W    =0,.                                                 MFG  860
                   DO K =1 TO L-1,.    /*CALCULATE SCALAR PRODUCTS    */MFG  870
                   W    =W+MULTIPLY(A(L,K),A(K,J),53),.                 MFG  880
                   END,.                                                MFG  890
              A(L,J)=(A(L,J)-W)/H,.    /*COMPUTE NEW ELEMENT          */MFG  900
              END,.                                                     MFG  910
         END,.                                                          MFG  920
 RETURN..                                                               MFG  930
    END,.                              /*END OF PROCEDURE MFG         */MFG  940
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 MDLG..                                                                 MDLG  10
 /*********************************************************************/MDLG  20
 /*                                                                   */MDLG  30
 /*      FOR AN EQUATION SYSTEM  A*X=R  WITH GENERAL NON-SINGULAR     */MDLG  40
 /*      MATRIX  A=L*U  CALCULATE OPTIONALLY                          */MDLG  50
 /*           SOLUTION X                                              */MDLG  60
 /*           INVERSE(L) * R                                          */MDLG  70
 /*           INVERSE(U) * R                                          */MDLG  80
 /*      FOR GIVEN TRIANGULAR FACTORS L, U AND RIGHT HAND SIDE R      */MDLG  90
 /*                                                                   */MDLG 100
 /*********************************************************************/MDLG 110
    PROCEDURE(A,R,IPER,N,M,OPT),.                                       MDLG 120
    DECLARE                                                             MDLG 130
         ERROR EXTERNAL CHARACTER(1),  /*EXTERNAL ERROR INDICATOR     */MDLG 140
         OPT CHARACTER(1),             /*OPTION PARAMETER             */MDLG 150
         SUM BINARY FLOAT(53),                                          MDLG 160
         (A(*,*),R(*,*),H)                                              MDLG 170
         BINARY FLOAT,                 /*SINGLE PRECISION VERSION  /*S*/MDLG 180
  /*     BINARY FLOAT(53),             /*DOUBLE PRECISION VERSION  /*D*/MDLG 190
         (IPER(*),I,IS,J,                                               MDLG 200
         K,LM,LN,M,N)                                                   MDLG 210
         BINARY FIXED,.                                                 MDLG 220
    LM   =M,.                                                           MDLG 230
    LN   =N,.                                                           MDLG 240
    ERROR='P',.                        /*P MEANS WRONG INPUT          */MDLG 250
    IF LN LE 0                         /*TEST SPECIFIED PARAMETER N   */MDLG 260
    THEN GO TO RETURN,.                                                 MDLG 270
    IF LM LE 0                         /*TEST SPECIFIED PARAMETER M   */MDLG 280
    THEN GO TO RETURN,.                                                 MDLG 290
    ERROR='0',.                        /*PRESET ERROR INDICATOR       */MDLG 300
    IF OPT= '2'                        /*SHOULD R BE DIVIDED BY U ONLY*/MDLG 310
    THEN GO TO UPPER,.                 /*******************************/MDLG 320
                                       /*LOOP FOR DIVISION BY LOWER   */MDLG 330
         DO I =1 TO LN,.               /*TRIANGULAR MATRIX L          */MDLG 340
         H    =A(I,I),.                /*******************************/MDLG 350
         IF H = 0                      /*IS ANY DIAGONAL ELEMENT ZERO */MDLG 360
         THEN DO,.                                                      MDLG 370
              ERROR='S',.              /*S MEANS ANY PIVOT IS ZERO    */MDLG 380
              GO TO RETURN,.                                            MDLG 390
              END,.                    /*FOR PERMUTATION OF ROWS OF   */MDLG 400
         IS   =IPER(I),.               /*RIGHT HAND SIDE ARRAY R      */MDLG 410
              DO K =1 TO LM,.          /*LOOP OVER THE M COLUMNS OF R */MDLG 420
              SUM  =R(IS,K),.          /*INITIALIZE SUM               */MDLG 430
              R(IS,K)=R(I,K),.         /*RESTORE ROWS OF ARRAY R      */MDLG 440
                   DO J =1 TO I-1,.    /*COMPUTE SCALAR PRODUCT SUM   */MDLG 450
                   SUM  =SUM-MULTIPLY(A(I,J),R(J,K),53),.               MDLG 460
                   END,.                                                MDLG 470
              R(I,K)=SUM/H,.           /*DIVIDE SUM BY DIAGONAL TERM  */MDLG 480
              END,.                    /*AND STORE RESULT             */MDLG 490
         END,.                                                          MDLG 500
    IF OPT= '1'                        /*TEST END OF OPERATION        */MDLG 510
    THEN GO TO RETURN,.                /*******************************/MDLG 520
                                       /*LOOP FOR DIVISION BY UPPER   */MDLG 530
 UPPER..                               /*TRIANGULAR MATIX U           */MDLG 540
         DO I =LN-1 TO 1 BY -1,.       /*******************************/MDLG 550
              DO K =1 TO LM,.          /*LOOP OVER THE M COLUMNS OF R */MDLG 560
              SUM  =R(I,K),.           /*INITIALIZE SUM               */MDLG 570
                   DO J =I+1 TO LN,.   /*COMPUTE SCALAR PRODUCT SUM   */MDLG 580
                   SUM  =SUM-MULTIPLY(A(I,J),R(J,K),53),.               MDLG 590
                   END,.                                                MDLG 600
              R(I,K)=SUM,.             /*STORE RESULT                 */MDLG 610
              END,.                                                     MDLG 620
         END,.                                                          MDLG 630
 RETURN..                                                               MDLG 640
    END,.                              /*END OF PROCEDURE MDLG        */MDLG 650
/*
//GO.SYSIN  DD  *
 HILBERT      6    4                                                          10
AA01      0.341417430.247540110.207916310.185625310.171199560.16104686        20
AA02      0.170708710.165026720.155937250.148500200.142666220.13804018        30
AA03      0.113805770.123770050.124749770.123750150.122285360.12078517        40
AA04      0.085354320.099016010.103958120.106071590.106999690.10736459        50
AA05      0.068283430.082513330.089106970.092812650.095110830.09662812        60
AA06      0.056902890.070725730.077968590.082500100.085599720.08784371        70
AA01      0.048773910.061885020.069305410.074250100.077817910.08052343        80
AA02      0.042677180.055008910.062374890.067500050.071333110.07432931        90
AA03      0.037935260.049508000.056704450.061875090.065845960.06902003       100
AA04      0.034141730.045007280.051979080.057115480.061142670.06441873       110
/*
