//JOBI  JOB 111-1111,'SSP PL/1',MSGLEVEL=1
//EXPN EXEC PL1LFCLG,PARM.PL1L='NOLIST,NOATR,NOXREF,CHAR48'
//PL1L.SYSIN  DD  *
 EXPN..                                                                 EXPN  10
 /*********************************************************************/EXPN  20
 /*                                                                   */EXPN  30
 /*      TO READ THE PROBLEM PARAMETER CARD AND A TIME SERIES, CALL   */EXPN  40
 /*      THE PROCEDURE EXSM TO SMOOTH THE TIME SERIES, AND PRINT THE  */EXPN  50
 /*      RESULT.                                                      */EXPN  60
 /*                                                                   */EXPN  70
 /*********************************************************************/EXPN  80
    PROCEDURE OPTIONS (MAIN),.                                          EXPN  90
    DECLARE                                                             EXPN 100
         (A,B,C,AL) FLOAT BINARY,                                       EXPN 110
         (I,NX)                                                         EXPN 120
         FIXED BINARY,                                                  EXPN 130
         ERROR EXTERNAL CHARACTER(1),                                   EXPN 140
         CH  CHARACTER (80),                                            EXPN 150
         PR1 CHARACTER (6),.                                            EXPN 160
 /*                                                                   */EXPN 170
    ON ENDFILE (SYSIN) GO TO EXIT,.                                     EXPN 180
 S100..                                                                 EXPN 190
    GET EDIT (CH) (A(80)),.            /* READ PROBLEM PARAMETER CARD */EXPN 200
    GET STRING (CH) EDIT (PR1,NX,AL,A,B,C)                              EXPN 210
         (A(6),F(4),F(5,0),3 F(10,0)),.                                 EXPN 220
 /*                                                                   */EXPN 230
 /*      PR1.....PROBLEM NUMBER (MAY BE ALPHAMERIC)                   */EXPN 240
 /*      NX......NUMBER OF DATA POINTS IN TIME SERIES                 */EXPN 250
 /*      AL......SMOOTHING CONSTANT                                   */EXPN 260
 /*      A,B,C...COEFFICIENTS OF THE PREDICTION EQUATION              */EXPN 270
 /*                                                                   */EXPN 280
    PUT EDIT ('TRIPLE EXPONENTIAL SMOOTHING.....',PR1) (PAGE,SKIP(4),   EXPN 290
         COLUMN(10),A,A),.                                              EXPN 300
    PUT EDIT ('NUMBER OF DATA POINTS',NX) (SKIP(2),COLUMN(10),A,F(6)),. EXPN 310
    PUT EDIT ('SMOOTHING CONSTANT',AL) (SKIP,COLUMN(10),A,F(9,3)),.     EXPN 320
 /*                                                                   */EXPN 330
 /*      PRINT ORIGINAL COEFFICIENTS                                  */EXPN 340
 /*                                                                   */EXPN 350
    PUT EDIT ('COEFFICIENTS','A','B','C') (SKIP(2),COLUMN(10),A,X(9),A, EXPN 360
         X(14),A,X(14),A),.                                             EXPN 370
    PUT EDIT ('ORIGINAL',A,B,C) (SKIP(2),COLUMN(10),A,F(19,5),          EXPN 380
         2 F(15,5)),.                                                   EXPN 390
 ONE..                                                                  EXPN 400
    BEGIN,.                                                             EXPN 410
    DECLARE                                                             EXPN 420
         (X(NX),S(NX)) FLOAT BINARY,.                                   EXPN 430
    CALL DAT3 (NX,X),.                 /* READ TIME SERIES DATA       */EXPN 440
    CALL EXSM (X,NX,AL,A,B,C,S),.                                       EXPN 450
    IF ERROR NE '0'                                                     EXPN 460
    THEN DO,.                                                           EXPN 470
         PUT EDIT ('IN ROUTINE EXSM ERROR CODE = ',ERROR)               EXPN 480
              (SKIP(2),COLUMN(10),A,A(1)),.                             EXPN 490
         GO TO S100,.                                                   EXPN 500
         END,.                                                          EXPN 510
 /*                                                                   */EXPN 520
 /*      PRINT UPDATED COEFFICIENTS                                   */EXPN 530
 /*                                                                   */EXPN 540
    PUT EDIT ('UPDATE',A,B,C) (SKIP(2),COLUMN(10),A,F(20,5),            EXPN 550
         2 F(15,5)),.                                                   EXPN 560
 /*                                                                   */EXPN 570
 /*      PRINT INPUT AND SMOOTHED DATA                                */EXPN 580
 /*                                                                   */EXPN 590
    PUT EDIT ('SMOOTHED DATA','INPUT DATA','(FORECAST)')                EXPN 600
         (SKIP(3),COLUMN(39),A,SKIP,COLUMN(17),A,X(13),A),.             EXPN 610
    PUT EDIT ((X(I),S(I) DO I= 1 TO NX)) (SKIP,COLUMN(10),F(17,5),      EXPN 620
         X(8),F(15,5)),.                                                EXPN 630
    END,.                                                               EXPN 640
    GO TO S100,.                                                        EXPN 650
 EXIT..                                                                 EXPN 660
    PUT FILE (SYSPRINT) EDIT ('END OF SAMPLE PROGRAM')                  EXPN 670
         (SKIP(5),COLUMN(10),A),.                                       EXPN 680
    END,.                              /*END OF PROCEDURE EXPN        */EXPN 690
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 EXSM..                                                                 EXSM  10
 /*********************************************************************/EXSM  20
 /*                                                                   */EXSM  30
 /*      TO FIND THE TRIPLE EXPONENTIAL SMOOTHED SERIES S OF A GIVEN  */EXSM  40
 /*      SERIES X.                                                    */EXSM  50
 /*                                                                   */EXSM  60
 /*********************************************************************/EXSM  70
    PROCEDURE (X,NX,AL,A,B,C,S),.                                       EXSM  80
    DECLARE                                                             EXSM  90
         (X(*),S(*),AL,A,B,C,BE,ALCUB,BECUB,DIF)                        EXSM 100
         BINARY FLOAT,                                                  EXSM 110
         ERROR EXTERNAL CHARACTER(1),                                   EXSM 120
         (I,NX)                                                         EXSM 130
         BINARY FIXED,.                                                 EXSM 140
 /*                                                                   */EXSM 150
    ERROR='0',.                                                         EXSM 160
 /*                                                                   */EXSM 170
 /*      TEST THE VALUE OF ALPHA                                      */EXSM 180
 /*                                                                   */EXSM 190
    IF AL LE 0 OR AL GE 1                                               EXSM 200
    THEN DO,.                                                           EXSM 210
         ERROR='1',.                                                    EXSM 220
         GO TO FIN,.                                                    EXSM 230
         END,.                                                          EXSM 240
    IF NX LT 3                                                          EXSM 250
    THEN DO,.                                                           EXSM 260
         ERROR='2',.                                                    EXSM 270
         GO TO FIN,.                                                    EXSM 280
         END,.                                                          EXSM 290
 /*      IF A=B=C=0.0, GENERATE INITIAL VALUES OF A, B, AND C         */EXSM 300
 /*                                                                   */EXSM 310
         IF A = 0.0 AND B = 0.0 AND C = 0.0                             EXSM 320
    THEN DO,.                                                           EXSM 330
         C    =X(1)-2.0*X(2)+X(3),.                                     EXSM 340
         B    =X(2)-X(1)-1.5*C,.                                        EXSM 350
         A    =X(1)-B-0.5*C,.                                           EXSM 360
         END,.                                                          EXSM 370
    BE   =1.0-AL,.                                                      EXSM 380
    BECUB=BE**3,.                                                       EXSM 390
    ALCUB=AL**3,.                                                       EXSM 400
 /*                                                                   */EXSM 410
 /*      DO THE FOLLOWING FOR I = 1 TO NX                             */EXSM 420
 /*                                                                   */EXSM 430
         DO I = 1 TO NX,.                                               EXSM 440
         S(I) =A+B+0.5*C,.             /* FIND S(I) FOR 1 PERIOD AHEAD*/EXSM 450
 /*                                                                   */EXSM 460
 /*      UPDATE COEFFICIENTS A, B, AND C                              */EXSM 470
 /*                                                                   */EXSM 480
         DIF  =S(I)-X(I),.                                              EXSM 490
         A    =X(I)+BECUB*DIF,.                                         EXSM 500
         B    =B+C-1.5*AL*AL*(2.0-AL)*DIF,.                             EXSM 510
         C    =C-ALCUB*DIF,.                                            EXSM 520
         END,.                                                          EXSM 530
 FIN..                                                                  EXSM 540
    RETURN,.                                                            EXSM 550
    END,.                              /*END OF PROCEDURE EXSM        */EXSM 560
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 DAT3..                                                                 DAT3  10
 /*********************************************************************/DAT3  20
 /*                                                                   */DAT3  30
 /*      TO READ A VECTOR OF FLOATING POINT DATA.                     */DAT3  40
 /*                                                                   */DAT3  50
 /*********************************************************************/DAT3  60
    PROCEDURE (M,D),.                                                   DAT3  70
    DECLARE                                                             DAT3  80
         CH CHARACTER(80),                                              DAT3  90
         (I,M,N,N1,N2)                                                  DAT3 100
         FIXED BINARY,                                                  DAT3 110
         D(M) FLOAT BINARY,.                                            DAT3 120
 /*                                                                   */DAT3 130
 /*      N EQUAL THE NUMBER OF DATA POINTS PER 80 COLUMNS OF A DATA   */DAT3 140
 /*      CARD.                                                        */DAT3 150
 /*                                                                   */DAT3 160
    ON ENDFILE (SYSIN)                                                  DAT3 170
    GO TO EXIT,.                                                        DAT3 180
    N    =12,.                                                          DAT3 190
    N1   =1,.                                                           DAT3 200
    N2   =N,.                                                           DAT3 210
 S10..                                                                  DAT3 220
    IF M LE N2                                                          DAT3 230
    THEN N2   =M,.                                                      DAT3 240
    GET EDIT (CH) (A(80)),.                                             DAT3 250
    GET STRING (CH) EDIT ((D(I) DO I= N1 TO N2)) ((N)F(6,0)),.          DAT3 260
    N1   =N2+1,.                                                        DAT3 270
    IF N1 LE M                                                          DAT3 280
    THEN DO,.                                                           DAT3 290
         N2   =N2+N,.                                                   DAT3 300
         GO TO S10,.                                                    DAT3 310
         END,.                                                          DAT3 320
    REVERT ENDFILE (SYSIN),.                                            DAT3 330
    RETURN,.                                                            DAT3 340
 EXIT..                                                                 DAT3 350
    PUT FILE (SYSPRINT) EDIT ('ERROR  INSUFFICIENT DATA')               DAT3 360
         (SKIP(1),COLUMN(10),A),.                                       DAT3 370
    STOP,.                                                              DAT3 380
    END,.                              /*END OF PROCEDURE DAT3        */DAT3 390
/*
//GO.SYSIN  DD  *
SAMPLE  38   .1       0.0       0.0       0.0                                 10
   430   426   422   419   414   413   412   409   411   417   422   430      20
   438   441   447   455   461   453   448   449   454   463   470   472      30
   476   481   483   487   491   492   485   486   482   479   479   476      40
   472   470                                                                  50
/*
