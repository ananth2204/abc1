//JOBB  JOB 111-1111,'SSP PL/1',MSGLEVEL=1
//REGR EXEC PL1LFCLG,PARM.PL1L='NOLIST,NOATR,NOXREF,CHAR48'
//PL1L.SYSIN  DD  *
 REGR..                                                                 REGR  10
 /*********************************************************************/REGR  20
 /*                                                                   */REGR  30
 /*      TO READ THE PROBLEM PARAMETER CARD FOR A MULTIPLE REGRESSION,*/REGR  40
 /*      READ SUBSET SELECTION CARDS, CALL THE PROCEDURES TO CALCULATE*/REGR  50
 /*      MEANS, STANDARD DEVIATIONS, SIMPLE AND MULTIPLE CORRELATION  */REGR  60
 /*      COEFFICIENTS, REGRESSION COEFFICIENTS, T-VALUES, BETA COEFF- */REGR  70
 /*      ICIENTS, AND ANALYSIS OF VARIANCE FOR MULTIPLE REGRESSION,   */REGR  80
 /*      AND PRINT THE RESULTS.                                       */REGR  90
 /*                                                                   */REGR 100
 /*********************************************************************/REGR 110
    PROCEDURE OPTIONS (MAIN),.                                          REGR 120
    DECLARE                                                             REGR 130
         (I,II,IO,J,K,L,M,MM,N,NDEP,NRESI,NS,L1,L2) FIXED BINARY,       REGR 140
         XDATA FILE STREAM ENVIRONMENT (CONSECUTIVE V(2000,200)),       REGR 150
         (NCARD,NV) EXTERNAL,                                           REGR 160
         ERROR EXTERNAL CHARACTER (1),                                  REGR 170
         CH  CHARACTER (80),                                            REGR 180
         PR1 CHARACTER (6),.                                            REGR 190
 /*                                                                   */REGR 200
 FM1..                                                                  REGR 210
         FORMAT (A(6),F(5),3 F(2)),.                                    REGR 220
    ON ENDFILE (SYSIN) GO TO EXIT,.                                     REGR 230
 /*                                                                   */REGR 240
 /*      INPUT DATA IS SAVED IF NV IS SET TO 1                        */REGR 250
 /*                                                                   */REGR 260
    NV   =1,.                                                           REGR 270
 /*                                                                   */REGR 280
 S100..                                                                 REGR 290
    GET EDIT (CH) (A(80)),.                                             REGR 300
    GET STRING (CH) EDIT (PR1,N,M,NS,NCARD) (R(FM1)),.                  REGR 310
 /*                                                                   */REGR 320
 /*      NAME - PROBLEM NUMBER (MAY BE ALPHAMERIC)                    */REGR 330
 /*      N    - NUMBER OF OBSERVATIONS                                */REGR 340
 /*      M    - NUMBER OF VARIABLES                                   */REGR 350
 /*      NS   - NUMBER OF SELECTIONS                                  */REGR 360
 /*      NCARD- NUMBER OF DATA CARDS PER OBSERVATION                  */REGR 370
 /*                                                                   */REGR 380
    NCARD=NCARD*80,.                                                    REGR 390
 /*                                                                   */REGR 400
 STRT..                                                                 REGR 410
    BEGIN,.                                                             REGR 420
 FM2..                                                                  REGR 430
    FORMAT (PAGE,SKIP(4),COLUMN(10),A,A(6),SKIP(2),COLUMN(10),A,A,      REGR 440
         F(5),SKIP(2),COLUMN(10),A,F(5),SKIP(2),COLUMN(10),A,F(2)),.    REGR 450
    DECLARE                                                             REGR 460
         (X(1,1),W(M),RESI)                                             REGR 470
         FLOAT BINARY,                                                  REGR 480
         (R(M,M),RX(M,M),XBAR(M),RY(M),D(M),STD(M),ANS(10),FSUM,DET,CON)REGR 490
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/REGR 500
 /*      BINARY FLOAT (53),.           /*DOUBLE PRECISION VERSION  /*D*/REGR 510
 /*                                                                   */REGR 520
    IO   =0,.                                                           REGR 530
    X    =0,.                                                           REGR 540
    OPEN FILE (XDATA) OUTPUT,.                                          REGR 550
    CALL CORR (N,M,IO,X,XBAR,STD,RX,R,D),.                              REGR 560
    CLOSE FILE (XDATA),.                                                REGR 570
    IF ERROR NE '0'                                                     REGR 580
    THEN PUT EDIT ('IN ROUTINE CORR ERROR CODE = ',ERROR)               REGR 590
         (SKIP(2),COLUMN(10),A,A(1)),.                                  REGR 600
 /*                                                                   */REGR 610
 /*      TEST NUMBER OF SELECTIONS                                    */REGR 620
 /*                                                                   */REGR 630
    IF NS LE 0                                                          REGR 640
    THEN DO,.                                                           REGR 650
         PUT EDIT ('NUMBER OF SELECTIONS NOT SPECIFIED. JOB TERMINATED')REGR 660
              (SKIP(4),COLUMN(10),A),.                                  REGR 670
         GO TO S300,.                                                   REGR 680
         END,.                                                          REGR 690
         DO I = 1 TO NS,.                                               REGR 700
         PUT EDIT ('MULTIPLE REGRESSION.....',PR1,'NUMBER OF OBSERVA',  REGR 710
              'TIONS...',N,'NUMBER OF VARIABLES......',M,               REGR 720
              'SELECTION.....',I) (R(FM2)),.                            REGR 730
 /*                                                                   */REGR 740
 /*      READ SUBSET SELECTION CARD                                   */REGR 750
 /*                                                                   */REGR 760
    GET EDIT (CH) (A(80)),.                                             REGR 770
         GET STRING (CH) EDIT (NRESI,NDEP,K) (3 F(2)),.                 REGR 780
 KRED..                                                                 REGR 790
    BEGIN,.                                                             REGR 800
 FM3..                                                                  REGR 810
         FORMAT (SKIP,COLUMN(10),F(4),7 F(14,5)),.                      REGR 820
 FM4..                                                                  REGR 830
         FORMAT (PAGE,SKIP(4),COLUMN(10),A,A(6),SKIP(2),COLUMN(10),     REGR 840
              A,F(2)),.                                                 REGR 850
         DECLARE                                                        REGR 860
              (RZ(K,K),B(K),SB(K),T(K),BETA(K),RT(K))                   REGR 870
              BINARY FLOAT,            /*SINGLE PRECISION VERSION  /*S*/REGR 880
 /*           BINARY FLOAT (53),       /*DOUBLE PRECISION VERSION  /*D*/REGR 890
              (ISAVE(K+1))                                              REGR 900
              FIXED BINARY,.                                            REGR 910
 /*                                                                   */REGR 920
         CALL IDT1 (K,ISAVE),.                                          REGR 930
 /*                                                                   */REGR 940
 /*      NRESI - OPTION CODE FOR TABLE OF RESIDUALS                   */REGR 950
 /*                0 IF IT IS NOT DESIRED.                            */REGR 960
 /*                1 IF IT IS DESIRED.                                */REGR 970
 /*      NDEP  - DEPENDENT VARIABLE.                                  */REGR 980
 /*      K     - NUMBER OF INDEPENDENT VARIABLES INCLUDED             */REGR 990
 /*      ISAVE - A VECTOR CONTAINING THE INDEPENDENT VARIABLES        */REGR1000
 /*              INCLUDED                                             */REGR1010
 /*                                                                   */REGR1020
         CALL ORDR (M,R,NDEP,K,ISAVE,RZ,RT),.                           REGR1030
         IF ERROR NE '0'                                                REGR1040
         THEN DO,.                                                      REGR1050
              PUT EDIT ('IN ROUTINE ORDR ERROR CODE = ',ERROR)          REGR1060
                   (SKIP(2),COLUMN(10),A,A(1)),.                        REGR1070
              GO TO S200,.                                              REGR1080
              END,.                                                     REGR1090
         CON  =0.0,.                                                    REGR1100
         CALL MINV(RZ,K,DET,CON),.                                      REGR1110
 /*                                                                   */REGR1120
 /*      TEST SINGULARITY OF THE MATRIX INVERTED                      */REGR1130
 /*                                                                   */REGR1140
         IF ERROR NE '0'                                                REGR1150
         THEN DO,.                                                      REGR1160
              PUT EDIT('IN ROUTINE MINV ERROR = ',ERROR) (SKIP(2),      REGR1170
                   COLUMN(10),A,A(1)),.                                 REGR1180
              GO TO S200,.                                              REGR1190
              END,.                                                     REGR1200
 /*                                                                   */REGR1210
         CALL MLTR (N,K,XBAR,STD,D,RZ,RT,ISAVE,B,SB,T,BETA,ANS),.       REGR1220
         IF ERROR NE '0'                                                REGR1230
         THEN DO,.                                                      REGR1240
              PUT EDIT ('IN ROUTINE MLTR ERROR CODE = ',ERROR)          REGR1250
                   (SKIP(2),COLUMN(10),A,A(1)),.                        REGR1260
              GO TO S200,.                                              REGR1270
              END,.                                                     REGR1280
 /*                                                                   */REGR1290
 /*      PRINT MEANS, STANDARD DEVIATIONS, INTERCORRELATIONS BETWEEN  */REGR1300
 /*      X AND Y, REGRESSION COEFFICIENTS, STANDARD DEVIATIONS OF     */REGR1310
 /*      REGRESSION COEFFICIENTS, COMPUTED T VALUES, AND BETA         */REGR1320
 /*      COEFFICIENTS.                                                */REGR1330
 /*                                                                   */REGR1340
         MM   =K+1,.                                                    REGR1350
         PUT EDIT ('VARIABLE','MEAN','STANDARD','CORRELATION',          REGR1360
              'REGRESSION','STD. ERROR','COMPUTED','BETA','NO.',        REGR1370
              'DEVIATION','X VS Y','COEFFICIENT','OF REG.COEFF.',       REGR1380
              'T VALUE','COEFF.') (SKIP(2),COLUMN(10),A,X(5),A,         REGR1390
              X(6),A,X(6),A,X(4),A,X(4),A,X(5),A,X(7),A,SKIP,           REGR1400
              COLUMN(12),A,X(18),A,X(7),A,X(7),A,X(3),A,X(3),A,         REGR1410
              X(7),A),.                                                 REGR1420
              DO J = 1 TO K,.                                           REGR1430
              L    =ISAVE(J),.                                          REGR1440
              PUT EDIT (L,XBAR(L),STD(L),RT(J),B(J),SB(J),T(J),BETA(J)) REGR1450
                   (R(FM3)),.                                           REGR1460
              END,.                                                     REGR1470
         PUT EDIT ('DEPENDENT') (SKIP(2),COLUMN(10),A),.                REGR1480
         L    =ISAVE(MM),.                                              REGR1490
         PUT EDIT (L,XBAR(L),STD(L)) (R(FM3)),.                         REGR1500
 /*                                                                   */REGR1510
 /*      PRINT INTERCEPT, MULTIPLE CORRELATION COEFFICIENT, AND       */REGR1520
 /*      STANDARD ERROR OF ESTIMATE                                   */REGR1530
 /*                                                                   */REGR1540
         PUT EDIT ('INTERCEPT',ANS(1),'MULTIPLE CORRELATION  ',ANS(2),  REGR1550
              'STD. ERROR OF ESTIMATE',ANS(3)) (SKIP(3),COLUMN(10),     REGR1560
              A,X(10),F(16,5),(2)(SKIP(2),COLUMN(10),A,F(13,5))),.      REGR1570
 /*                                                                   */REGR1580
 /*           PRINT ANALYSIS OF VARIANCE FOR THE REGRESSION           */REGR1590
 /*                                                                   */REGR1600
         PUT EDIT ('ANALYSIS OF VARIANCE FOR THE REGRESSION ',          REGR1610
              'SOURCE OF VARIATION','DEGREES','SUM OF','MEAN',          REGR1620
              '  F VALUE','OF FREEDOM','SQUARES','SQUARES')             REGR1630
              (SKIP(2),COLUMN(31),A,SKIP(2),COLUMN(15),A,X(7),A,        REGR1640
              X(7),A,X(10),A,X(09),A,SKIP,COLUMN(40),A,X(4),A,          REGR1650
              X(9),A),.                                                 REGR1660
         L    =ANS(8),.                                                 REGR1670
         PUT EDIT ('ATRRIBUTABLE TO REGRESSION   ',K,ANS(4),ANS(6),     REGR1680
              ANS(10),'DEVIATION FROM REGRESSION    ',L,ANS(7),         REGR1690
              ANS(9)) (SKIP,COLUMN(10),A,F(6),3 F(16,5),SKIP,           REGR1700
              COLUMN(10),A,F(6),2 F(16,5)),.                            REGR1710
         L    =N-1,.                                                    REGR1720
         FSUM =ANS(4)+ANS(7),.                                          REGR1730
         PUT EDIT('TOTAL',L,FSUM) (COLUMN(15),A,X(19),F(6),F(16,5)),.   REGR1740
         IF NRESI LE 0                                                  REGR1750
         THEN GO TO S200,.                                              REGR1760
         PUT EDIT ('MULTIPLE REGRESSION.....',PR1,'SELECTION.....',I)   REGR1770
              (R(FM4)),.                                                REGR1780
         PUT EDIT ('TABLE OF RESIDUALS','CASE NO.','Y VALUE',           REGR1790
              'Y ESTIMATE','RESIDUAL') (SKIP,COLUMN(25),A,SKIP(2),      REGR1800
              COLUMN(10),A,X(5),A,X(5),A,X(6),A),.                      REGR1810
         MM   =ISAVE(K+1),.                                             REGR1820
         OPEN FILE (XDATA) INPUT,.                                      REGR1830
              DO II = 1 TO N,.                                          REGR1840
              GET FILE (XDATA) EDIT ((W(J) DO J= 1 TO M))               REGR1850
                   ((M)F(6,0)),.                                        REGR1860
              FSUM =ANS(1),.                                            REGR1870
                   DO J = 1 TO K,.                                      REGR1880
                   L    =ISAVE(J),.                                     REGR1890
                   FSUM =FSUM+W(L)*B(J),.                               REGR1900
                   END,.                                                REGR1910
              RESI =W(MM)-FSUM,.                                        REGR1920
              PUT EDIT (II,W(MM),FSUM,RESI) (COLUMN(10),F(5),F(15,5),   REGR1930
                   2 F(14,5)),.                                         REGR1940
              END,.                                                     REGR1950
         CLOSE FILE (XDATA),.                                           REGR1960
 S200..                                                                 REGR1970
         END,.                                                          REGR1980
    END,.                                                               REGR1990
    END,.                                                               REGR2000
    GO TO S100,.                                                        REGR2010
 EXIT..                                                                 REGR2020
    PUT FILE (SYSPRINT) EDIT ('END OF SAMPLE PROGRAM')                  REGR2030
         (SKIP(5),COLUMN(10),A),.                                       REGR2040
 S300..                                                                 REGR2050
    END,.                              /*END OF PROCEDURE REGR        */REGR2060
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 CORR..                                                                 CORR  10
 /*********************************************************************/CORR  20
 /*                                                                   */CORR  30
 /*      TO COMPUTE MEANS, STANDARD DEVIATIONS, SUMS OF CROSS-PRODUCTS*/CORR  40
 /*      OF DEVIATIONS, AND CORRELATION COEFFICIENTS.                 */CORR  50
 /*                                                                   */CORR  60
 /*********************************************************************/CORR  70
    PROCEDURE (N,M,IO,X,XBAR,STD,RX,R,B),.                              CORR  80
    DECLARE                                                             CORR  90
         ERROR EXTERNAL CHARACTER (1),                                  CORR 100
         (I,IO,J,K,KK,M,N)                                              CORR 110
         FIXED BINARY,                                                  CORR 120
         (X(*,*),D(M),FN,FKK)                                           CORR 130
         FLOAT BINARY,                                                  CORR 140
         (R(*,*),RX(*,*),XBAR(*),STD(*),B(*),T(M))                      CORR 150
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/CORR 160
  /*     BINARY FLOAT (53),.           /*DOUBLE PRECISION VERSION  /*D*/CORR 170
 /*                                                                   */CORR 180
    ERROR='0',.                                                         CORR 190
    IF N LE 0 OR M LE 0                /* THE NUMBER OF OBSERVATIONS  */CORR 200
    THEN DO,.                          /* OR THE NUMBER OF VARIABLES  */CORR 210
         ERROR='1',.                   /* ARE LESS THAN OR EQUAL TO   */CORR 220
         GO TO FIN,.                   /* ZERO.                       */CORR 230
         END,.                                                          CORR 240
    FN   =N,.                          /* INITIALIZATION              */CORR 250
    T    =0.0,.                                                         CORR 260
         DO I = 1 TO M,.                                                CORR 270
         B(I) =0.0,.                                                    CORR 280
              DO J = 1 TO M,.                                           CORR 290
              R(I,J)=0.0,.                                              CORR 300
              END,.                                                     CORR 310
         END,.                                                          CORR 320
    IF IO NE 0                                                          CORR 330
    THEN DO,.                                                           CORR 340
              DO J = 1 TO M,.          /* DATA IS ALREADY IN CORE     */CORR 350
                   DO I = 1 TO N,.                                      CORR 360
                   T(J) =T(J)+X(I,J),.                                  CORR 370
                   END,.                                                CORR 380
              XBAR(J)=T(J),.                                            CORR 390
              T(J) =T(J)/FN,.                                           CORR 400
              END,.                                                     CORR 410
              DO I = 1 TO N,.                                           CORR 420
                   DO J = 1 TO M,.                                      CORR 430
                   D(J) =X(I,J)-T(J),.                                  CORR 440
                   B(J) =B(J)+D(J),.                                    CORR 450
                   END,.                                                CORR 460
                   DO J = 1 TO M,.                                      CORR 470
                        DO K = J TO M,.                                 CORR 480
                        R(J,K)=R(J,K)+D(J)*D(K),.                       CORR 490
                        END,.                                           CORR 500
                   END,.                                                CORR 510
              END,.                                                     CORR 520
         GO TO CALC,.                                                   CORR 530
         END,.                                                          CORR 540
 /*                                                                   */CORR 550
 /*      READ OBSERVATIONS AND CALCULATE TEMPORARY MEANS              */CORR 560
 /*                                                                   */CORR 570
    IF N LT M                                                           CORR 580
    THEN KK   =N,.                                                      CORR 590
    ELSE KK   =M,.                                                      CORR 600
    FKK  =KK,.                                                          CORR 610
         DO I = 1 TO KK,.                                               CORR 620
         CALL DAT2 (M,D),.                                              CORR 630
              DO J = 1 TO M,.                                           CORR 640
              T(J) =T(J)+D(J),.                                         CORR 650
              RX(I,J)=D(J),.                                            CORR 660
              END,.                                                     CORR 670
         END,.                                                          CORR 680
         DO J = 1 TO M,.                                                CORR 690
         XBAR(J)=T(J),.                                                 CORR 700
         T(J) =T(J)/FKK,.                                               CORR 710
         END,.                                                          CORR 720
 /*                                                                   */CORR 730
 /*      CALCULATE SUMS OF CROSS-PRODUCTS OF DEVIATIONS FROM          */CORR 740
 /*      TEMPORARY MEANS FOR M OBSERVATIONS.                          */CORR 750
 /*                                                                   */CORR 760
         DO I = 1 TO KK,.                                               CORR 770
              DO J = 1 TO M,.                                           CORR 780
              D(J) =RX(I,J)-T(J),.                                      CORR 790
              END,.                                                     CORR 800
              DO J = 1 TO M,.                                           CORR 810
              B(J) =B(J)+D(J),.                                         CORR 820
                   DO K = J TO M,.                                      CORR 830
                   R(J,K)=R(J,K)+D(J)*D(K),.                            CORR 840
                   END,.                                                CORR 850
              END,.                                                     CORR 860
         END,.                                                          CORR 870
    IF N GT KK                                                          CORR 880
 /*                                                                   */CORR 890
 /*      READ THE REST OF THE OBSERVATIONS ONE AT A TIME, SUM THE     */CORR 900
 /*      OBSERVATIONS, AND CALCULATE SUMS OF CROSS PRODUCTS OF        */CORR 910
 /*      DEVIATIONS FROM TEMPORARY MEANS.                             */CORR 920
 /*                                                                   */CORR 930
    THEN DO,.                                                           CORR 940
              DO I = 1 TO N-KK,.                                        CORR 950
              CALL DAT2 (M,D),.                                         CORR 960
                   DO J = 1 TO M,.                                      CORR 970
                   XBAR(J)=XBAR(J)+D(J),.                               CORR 980
                   D(J) =D(J)-T(J),.                                    CORR 990
                   B(J) =B(J)+D(J),.                                    CORR1000
                   END,.                                                CORR1010
                   DO J = 1 TO M,.                                      CORR1020
                        DO K = J TO M,.                                 CORR1030
                        R(J,K)=R(J,K)+D(J)*D(K),.                       CORR1040
                        END,.                                           CORR1050
                   END,.                                                CORR1060
              END,.                                                     CORR1070
         END,.                                                          CORR1080
 /*                                                                   */CORR1090
 /*      ADJUST SUMS OF CROSS-PRODUCTS OF DEVIATIONS FROM TEMP. MEANS */CORR1100
 /*                                                                   */CORR1110
 CALC..                                                                 CORR1120
         DO I = 1 TO M,.                                                CORR1130
         XBAR(I)=XBAR(I)/FN,.          /* CALCULATE MEANS.            */CORR1140
              DO J = I TO M,.                                           CORR1150
              RX(I,J)=R(I,J)-B(I)*B(J)/FN,.                             CORR1160
              RX(J,I)=RX(I,J),.                                         CORR1170
              END,.                                                     CORR1180
         STD(I)=SQRT(ABS(RX(I,I))),.                                    CORR1190
 /*                                                                   */CORR1200
 /*    COPY THE DIAGONAL OF THE MATRIX OF SUMS OF CROSS PRODUCTS OF   */CORR1210
 /*    DEVIATIONS FROM THE MEANS.                                     */CORR1220
 /*                                                                   */CORR1230
         B(I) =RX(I,I),.                                                CORR1240
         END,.                                                          CORR1250
 /*                                                                   */CORR1260
 /*      COMPUTE CORRELATION COEFFICIENTS                             */CORR1270
 /*                                                                   */CORR1280
         DO J = 1 TO M,.                                                CORR1290
              DO K = J TO M,.                                           CORR1300
              FKK  =STD(J)*STD(K),.                                     CORR1310
              IF FKK= 0.0                                               CORR1320
              THEN DO,.                                                 CORR1330
                   ERROR='2',.         /* SOME VARIANCES ARE ZERO     */CORR1340
                   R(J,K)=0.0,.                                         CORR1350
                   END,.                                                CORR1360
              ELSE R(J,K)=RX(J,K)/FKK,.                                 CORR1370
              R(K,J)=R(J,K),.                                           CORR1380
              END,.                                                     CORR1390
         END,.                                                          CORR1400
 /*                                                                   */CORR1410
 /*      COMPUTE STANDARD DEVIATIONS                                  */CORR1420
 /*                                                                   */CORR1430
         IF N=1                                                         CORR1440
         THEN DO,.                                                      CORR1450
              DO I=1 TO N,.                                             CORR1460
              STD(I)    =0,.                                            CORR1470
              END,.                                                     CORR1480
              GO TO FIN,.                                               CORR1490
              END,.                                                     CORR1500
         FN   =SQRT(N-1),.                                              CORR1510
         DO I = 1 TO M,.                                                CORR1520
         STD(I)=STD(I)/FN,.                                             CORR1530
         END,.                                                          CORR1540
 FIN..                                                                  CORR1550
    RETURN,.                                                            CORR1560
    END,.                              /*END OF PROCEDURE CORR        */CORR1570
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 ORDR..                                                                 ORDR  10
 /*********************************************************************/ORDR  20
 /*                                                                   */ORDR  30
 /*      TO CONSTRUCT FROM A LARGER MATRIX OF CORRELATION COEFFICIENTS*/ORDR  40
 /*      A SUBSET MATRIX OF INTERCORRELATIONS AMONG INDEPENDENT VAR-  */ORDR  50
 /*      IABLES AND A VECTOR OF INTERCORRELATIONS OF INDEPENDENT      */ORDR  60
 /*      VARIABLES WITH DEPENDENT VARIABLE.                           */ORDR  70
 /*                                                                   */ORDR  80
 /*********************************************************************/ORDR  90
    PROCEDURE (M,R,NDEP,K,ISAVE,RX,RY),.                                ORDR 100
    DECLARE                                                             ORDR 110
         (ISAVE(*),I,J,K,L,L1)                                          ORDR 120
         FIXED BINARY,                                                  ORDR 130
         ERROR EXTERNAL CHARACTER(1),                                   ORDR 140
         (R(*,*),RX(K,K),RY(K))                                         ORDR 150
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/ORDR 160
  /*     BINARY FLOAT (53),.           /*DOUBLE PRECISION VERSION  /*D*/ORDR 170
 /*                                                                   */ORDR 180
 /*      COPY INTERCORRELATIONS OF INDEPENDENT VARIABLES WITH         */ORDR 190
 /*      DEPENDENT VARIABLE                                           */ORDR 200
 /*                                                                   */ORDR 210
    ERROR='0',.                                                         ORDR 220
    IF M LE 0                          /* THE NUMBER OF VARIABLES IS  */ORDR 230
    THEN DO,.                          /* LESS THAN OR EQUAL TO ZERO. */ORDR 240
         ERROR='1',.                                                    ORDR 250
         GO TO FIN,.                                                    ORDR 260
         END,.                                                          ORDR 270
         DO I=1 TO K,.                                                  ORDR 280
         IF ISAVE(K) = NDEP            /* INVALID K                   */ORDR 290
         OR ISAVE(K) LE 0                                               ORDR 300
         OR ISAVE(K) GT M                                               ORDR 310
         THEN DO,.                                                      ORDR 320
              ERROR='3',.                                               ORDR 330
              GO TO FIN,.                                               ORDR 340
              END,.                                                     ORDR 350
         END,.                                                          ORDR 360
    IF NDEP LE 0 OR NDEP GT M          /* INVALID DEPENDENT VARIABLE  */ORDR 370
    THEN DO,.                                                           ORDR 380
         ERROR='2',.                                                    ORDR 390
         GO TO FIN,.                                                    ORDR 400
         END,.                                                          ORDR 410
    IF K LE 0 OR K GE M                /*INVALID NUMBER OF INDEPENDENT*/ORDR 420
    THEN DO,.                          /*        VARIABLES            */ORDR 430
         ERROR='4',.                                                    ORDR 440
         GO TO FIN,.                                                    ORDR 450
         END,.                                                          ORDR 460
         DO I = 1 TO K,.                                                ORDR 470
         L1   =ISAVE(I),.                                               ORDR 480
         RY(I)=R(NDEP,L1),.                                             ORDR 490
 /*                                                                   */ORDR 500
 /*      COPY A SUBSET MATRIX OF INTERCORRELATIONS AMONG INDEPENDENT  */ORDR 510
 /*      VARIABLES                                                    */ORDR 520
 /*                                                                   */ORDR 530
              DO J = 1 TO K,.                                           ORDR 540
              L2   =ISAVE(J),.                                          ORDR 550
              IF L2 LT L1                                               ORDR 560
              THEN RX(I,J)=RX(J,I),.                                    ORDR 570
              ELSE RX(I,J)=R(L1,L2),.                                   ORDR 580
              END,.                                                     ORDR 590
         END,.                                                          ORDR 600
 /*                                                                   */ORDR 610
 /*      PLACE THE SUBSCRIPT NUMBER OF THE DEPENDENT VARIABLE         */ORDR 620
 /*      IN ISAVE(K+1)                                                */ORDR 630
 /*                                                                   */ORDR 640
    ISAVE(K+1)=NDEP,.                                                   ORDR 650
 FIN..                                                                  ORDR 660
    RETURN,.                                                            ORDR 670
    END,.                              /*END OF PROCEDURE ORDR        */ORDR 680
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 MINV..                                                                 MINV  10
 /*********************************************************************/MINV  20
 /*                                                                   */MINV  30
 /*      TO INVERT A MATRIX                                           */MINV  40
 /*                                                                   */MINV  50
 /*********************************************************************/MINV  60
    PROCEDURE (A,N,D,CON),.                                             MINV  70
    DECLARE                                                             MINV  80
         ERROR EXTERNAL CHARACTER(1),                                   MINV  90
         (I,J,K,N,L(N),M(N))                                            MINV 100
         FIXED BINARY,                                                  MINV 110
         (A(*,*),BIGA,HOLD,D,CON,S)                                     MINV 120
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/MINV 130
  /*     BINARY FLOAT (53),.           /*DOUBLE PRECISION VERSION  /*D*/MINV 140
 /*                                                                   */MINV 150
    ERROR='0',.                                                         MINV 160
    IF N LE 0                                                           MINV 170
    THEN DO,.                                                           MINV 180
         ERROR='1',.                   /* ORDER OF MATRIX = 0.        */MINV 190
         GO TO FIN,.                                                    MINV 200
         END,.                                                          MINV 210
    IF CON= 0                                                           MINV 220
    THEN S    =1.0E-5,.                /* SINGLE PRECISION VERSION /*S*/MINV 230
  /*THEN S    =1.0E-15,.               /* DOUBLE PRECISION VERSION /*D*/MINV 240
    ELSE S    =CON,.                                                    MINV 250
    IF N = 1                           /* INVERT A SCALAR             */MINV 260
    THEN DO,.                                                           MINV 270
         D    =A(1,1),.                                                 MINV 280
         IF ABS(D) LE S                                                 MINV 290
         THEN DO,.                                                      MINV 300
              ERROR='2',.                                               MINV 310
              END,.                                                     MINV 320
         ELSE A(1,1) = 1/D,.                                            MINV 330
         GO TO FIN,.                                                    MINV 340
         END,.                                                          MINV 350
    D    =1.0,.                        /* SEARCH FOR LARGEST ELEMENT  */MINV 360
         DO K = 1 TO N,.                                                MINV 370
         L(K) =K,.                                                      MINV 380
         M(K) =K,.                                                      MINV 390
         BIGA =A(K,K),.                                                 MINV 400
              DO I=K TO N,.                                             MINV 410
                   DO J=K TO N,.                                        MINV 420
                   IF ABS(BIGA) LT ABS(A(I,J))                          MINV 430
                   THEN DO,.                                            MINV 440
                        BIGA =A(I,J),.                                  MINV 450
                        L(K) =I,.                                       MINV 460
                        M(K) =J,.                                       MINV 470
                        END,.                                           MINV 480
                   END,.                                                MINV 490
              END,.                                                     MINV 500
         J    =L(K),.                  /* INTERCHANGE ROWS            */MINV 510
         IF L(K) GT K                                                   MINV 520
         THEN DO,.                                                      MINV 530
                   DO I = 1 TO N,.                                      MINV 540
                   HOLD =-A(K,I),.                                      MINV 550
                   A(K,I)=A(J,I),.                                      MINV 560
                   A(J,I)=HOLD,.                                        MINV 570
                   END,.                                                MINV 580
              END,.                                                     MINV 590
         I    =M(K),.                  /* INTERCHANGE COLUMNS         */MINV 600
         IF M(K) GT K                                                   MINV 610
         THEN DO,.                                                      MINV 620
                   DO J = 1 TO N,.                                      MINV 630
                   HOLD =-A(J,K),.                                      MINV 640
                   A(J,K)=A(J,I),.                                      MINV 650
                   A(J,I)=HOLD,.                                        MINV 660
                   END,.                                                MINV 670
              END,.                                                     MINV 680
         IF ABS(BIGA) LE S                                              MINV 690
         THEN DO,.                                                      MINV 700
              D    =0.0,.                                               MINV 710
              GO TO COMP,.                                              MINV 720
              END,.                                                     MINV 730
 /*                                                                   */MINV 740
 /*      DIVIDE COLUMNS BY MINUS PIVOT (VALUE OF PIVOT ELEMENT IS     */MINV 750
 /*      CONTAINED IN BIGA)                                           */MINV 760
              DO I = 1 TO N,.                                           MINV 770
              IF I NE K                                                 MINV 780
              THEN A(I,K)=A(I,K)/(-A(K,K)),.                            MINV 790
              END,.                                                     MINV 800
              DO I = 1 TO N,.          /* REDUCE MATRIX               */MINV 810
              IF I NE K                                                 MINV 820
              THEN DO,.                                                 MINV 830
                        DO J = 1 TO N,.                                 MINV 840
                        IF J NE K                                       MINV 850
                        THEN A(I,J)=A(I,K)*A(K,J)+A(I,J),.              MINV 860
                        END,.                                           MINV 870
                   END,.                                                MINV 880
              END,.                                                     MINV 890
              DO J = 1 TO N,.                                           MINV 900
              IF J NE K                /* DIVIDE BY ROW PIVOT         */MINV 910
              THEN A(K,J)=A(K,J)/A(K,K),.                               MINV 920
              END,.                                                     MINV 930
         D    =D*A(K,K),.              /* COMPUTE DETERMINANT         */MINV 940
 COMP..                                                                 MINV 950
         IF ABS(D) LE S                                                 MINV 960
         THEN DO,.                                                      MINV 970
              ERROR='2',.              /* DETERMINANT IS ZERO         */MINV 980
              GO TO FIN,.                                               MINV 990
              END,.                                                     MINV1000
         A(K,K)=1.0/A(K,K),.           /* REPLACE PIVOT BY RECIPROCAL */MINV1010
         END,.                                                          MINV1020
 /*                                                                   */MINV1030
 /*      FINAL ROW AND COLUMN INTERCHANGE                             */MINV1040
 /*                                                                   */MINV1050
    K    =N,.                                                           MINV1060
 LOOP..                                                                 MINV1070
    K    =K-1,.                                                         MINV1080
    IF K GT 0                                                           MINV1090
    THEN DO,.                                                           MINV1100
         I    =L(K),.                                                   MINV1110
         IF I GT K                                                      MINV1120
         THEN DO,.                                                      MINV1130
                   DO J = 1 TO N,.                                      MINV1140
                   HOLD =A(J,K),.                                       MINV1150
                   A(J,K)=-A(J,I),.                                     MINV1160
                   A(J,I)=HOLD,.                                        MINV1170
                   END,.                                                MINV1180
              END,.                                                     MINV1190
         J    =M(K),.                                                   MINV1200
         IF J GT K                                                      MINV1210
         THEN DO,.                                                      MINV1220
                   DO I = 1 TO N,.                                      MINV1230
                   HOLD =A(K,I),.                                       MINV1240
                   A(K,I)=-A(J,I),.                                     MINV1250
                   A(J,I)=HOLD,.                                        MINV1260
                   END,.                                                MINV1270
              END,.                                                     MINV1280
         GO TO LOOP,.                                                   MINV1290
         END,.                                                          MINV1300
 FIN..                                                                  MINV1310
    RETURN,.                                                            MINV1320
    END,.                              /*END OF PROCEDURE MINV        */MINV1330
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 MLTR..                                                                 MLTR  10
 /*********************************************************************/MLTR  20
 /*                                                                   */MLTR  30
 /*      TO PERFORM A MULTIPLE LINEAR REGRESSION ANALYSIS FOR A       */MLTR  40
 /*      DEPENDENT VARIABLE AND A SET OF INDEPENDENT VARIABLES.       */MLTR  50
 /*                                                                   */MLTR  60
 /*********************************************************************/MLTR  70
    PROCEDURE (N,K,XBAR,STD,D,RX,RY,ISAVE,B,SB,T,BETA,ANS),.            MLTR  80
    DECLARE                                                             MLTR  90
         ERROR EXTERNAL CHARACTER (1),                                  MLTR 100
         (I,IO,J,M,MM,MP,MQ,N,N1,ISAVE(*))                              MLTR 110
         FIXED BINARY,                                                  MLTR 120
         (XBAR(*),STD(*),D(*),RX(*,*),RY(*),B(*),SB(*),T(*),BETA(*),    MLTR 130
         ANS(10),RM,BO,SSAR,SSDR,FK,FNN,SY,SSARM,SSDRM,F)               MLTR 140
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/MLTR 150
  /*     BINARY FLOAT (53),.           /*DOUBLE PRECISION VERSION  /*D*/MLTR 160
 /*                                                                   */MLTR 170
    ERROR='0',.                                                         MLTR 180
    IF K LE 0 OR N LE K                /* THE NUMBER OF VARIABLES IS  */MLTR 190
    THEN DO,.                          /* LESS THAN OR EQUAL TO ZERO  */MLTR 200
         ERROR='1',.                   /* OR THE NO. OF OBSERVATIONS  */MLTR 210
         GO TO S10,.                   /* IS LESS THAN OR EQUAL TO THE*/MLTR 220
         END,.                         /* THE NUMBER OF VARIABLES     */MLTR 230
    MM   =K+1,.                                                         MLTR 240
    FK   =K,.                                                           MLTR 250
         DO J = 1 TO K,.                                                MLTR 260
         BETA(J)=0.0,.                                                  MLTR 270
         B(J) =0.0,.                                                    MLTR 280
              DO I = 1 TO K,.                                           MLTR 290
              BETA(J)=BETA(J)+RY(I)*RX(I,J),.                           MLTR 300
              END,.                                                     MLTR 310
         END,.                                                          MLTR 320
    RM   =0.0,.                                                         MLTR 330
    BO   =0.0,.                                                         MLTR 340
    L1   =ISAVE(MM),.                                                   MLTR 350
 /*                                                                   */MLTR 360
 /*      COEFFICIENT OF DETERMINATION                                 */MLTR 370
 /*                                                                   */MLTR 380
         DO I = 1 TO K,.                                                MLTR 390
         RM   =RM+BETA(I)*RY(I),.                                       MLTR 400
 /*                                                                   */MLTR 410
 /*      TEST ACCURACY OF THE RESULT                                  */MLTR 420
 /*                                                                   */MLTR 430
         IF RM LT 0 OR RM GT 1                                          MLTR 440
         THEN DO,.                                                      MLTR 450
              ERROR='2',.              /* INVALID MULTIPLE R          */MLTR 460
              GO TO S10,.                                               MLTR 470
              END,.                                                     MLTR 480
         L    =ISAVE(I),.              /* REGRESSION COEFFICIENT      */MLTR 490
         B(I) =BETA(I)*(STD(L1)/STD(L)),.                               MLTR 500
         BO   =BO+B(I)*XBAR(L),.       /* INTERCEPT                   */MLTR 510
         END,.                                                          MLTR 520
    BO   =XBAR(L1)-BO,.                                                 MLTR 530
 /*                                                                   */MLTR 540
 /*      SUM OF SQUARES ATTRIBUTED TO REGRESSION                      */MLTR 550
 /*                                                                   */MLTR 560
    SSAR =RM*D(L1),.                                                    MLTR 570
    IF SSAR GT D(L1)                   /* TEST SUM OF SQUARES REDUCED */MLTR 580
    THEN DO,.                                                           MLTR 590
         ERROR='3',.                   /* REDUCED SUM OF SQUARES      */MLTR 600
         GO TO S10,.                   /* GREATER THAN THE TOTAL      */MLTR 610
         END,.                         /* SUM OF SQUARES              */MLTR 620
    RM   =SQRT(ABS(RM)),.              /* MULTIPLE CORRELATION COEFF. */MLTR 630
 /*                                                                   */MLTR 640
 /*      SUM OF SQUARES OF DEVIATIONS FROM REGRESSION                 */MLTR 650
 /*                                                                   */MLTR 660
    SSDR =D(L1)-SSAR,.                                                  MLTR 670
    FNN  =N-K-1,.                      /* DEGREES OF FREEDOM          */MLTR 680
    IF FNN LE 0.0                                                       MLTR 690
    THEN DO,.                                                           MLTR 700
         ERROR='1',.                   /* SAMPLE SIZE TOO SMALL       */MLTR 710
         GO TO S10,.                                                    MLTR 720
         END,.                                                          MLTR 730
    SY   =SSDR/FNN,.                   /* VARIANCE OF ESTIMATE        */MLTR 740
 /*                                                                   */MLTR 750
 /*      STANDARD DEVIATIONS OF REGRESSION COEFFICIENTS               */MLTR 760
 /*                                                                   */MLTR 770
         DO J = 1 TO K,.                                                MLTR 780
         L    =ISAVE(J),.                                               MLTR 790
         SB(J)=SQRT(ABS((RX(J,J)/D(L))*SY)),.                           MLTR 800
         T(J) =B(J)/SB(J),.            /* COMPUTE T-VALUES            */MLTR 810
         END,.                                                          MLTR 820
    SY   =SQRT(ABS(SY)),.              /* STANDARD ERROR OF ESTIMATE  */MLTR 830
    SSARM=SSAR/FK,.                    /* F-VALUE                     */MLTR 840
    SSDRM=SSDR/FNN,.                                                    MLTR 850
    F    =SSARM/SSDRM,.                                                 MLTR 860
    ANS(1)=BO,.                                                         MLTR 870
    ANS(2)=RM,.                                                         MLTR 880
    ANS(3)=SY,.                                                         MLTR 890
    ANS(4)=SSAR,.                                                       MLTR 900
    ANS(5)=FK,.                                                         MLTR 910
    ANS(6)=SSARM,.                                                      MLTR 920
    ANS(7)=SSDR,.                                                       MLTR 930
    ANS(8)=FNN,.                                                        MLTR 940
    ANS(9)=SSDRM,.                                                      MLTR 950
    ANS(10)=F,.                                                         MLTR 960
 S10..                                                                  MLTR 970
    RETURN,.                                                            MLTR 980
    END,.                              /*END OF PROCEDURE MLTR        */MLTR 990
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 DAT2..                                                                 DAT2  10
 /*********************************************************************/DAT2  20
 /*                                                                   */DAT2  30
 /*      TO READ FLOATING POINT DATA, ONE OBSERVATION AT A TIME.      */DAT2  40
 /*      DATA MAY BE SAVED ON A DATA SET.                             */DAT2  50
 /*                                                                   */DAT2  60
 /*********************************************************************/DAT2  70
    PROCEDURE (M,D),.                                                   DAT2  80
    DECLARE                                                             DAT2  90
         XDATA FILE STREAM ENVIRONMENT (CONSECUTIVE V(2000,200)),       DAT2 100
         (NCARD,NV) EXTERNAL,                                           DAT2 110
         CH CHARACTER(NCARD),                                           DAT2 120
         (I,M,MM) FIXED BINARY,                                         DAT2 130
         D(*) FLOAT BINARY,.                                            DAT2 140
 /*                                                                   */DAT2 150
    ON ENDFILE (SYSIN)                                                  DAT2 160
    GO TO EXIT,.                                                        DAT2 170
    GET EDIT (CH) (A(NCARD)),.                                          DAT2 180
    MM   =CEIL(M/12),.                                                  DAT2 190
    GET STRING (CH) EDIT ((D(I) DO I= 1 TO M))                          DAT2 200
         ((MM)((12)F(6,0),X(8))),.                                      DAT2 210
    IF NV= 1                                                            DAT2 220
    THEN PUT FILE (XDATA) EDIT ((D(I) DO I= 1 TO M)) ((M)F(6,0)),.      DAT2 230
    REVERT ENDFILE (SYSIN),.                                            DAT2 240
    RETURN,.                                                            DAT2 250
 EXIT..                                                                 DAT2 260
    PUT FILE (SYSPRINT) EDIT ('ERROR  INSUFFICIENT DATA')               DAT2 270
         (SKIP(1),COLUMN(10),A),.                                       DAT2 280
    STOP,.                                                              DAT2 290
    END,.                              /*END OF PROCEDURE DAT2        */DAT2 300
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 IDT1..                                                                 IDT1  10
 /*********************************************************************/IDT1  20
 /*                                                                   */IDT1  30
 /*      TO READ FIXED POINT DATA.                                    */IDT1  40
 /*                                                                   */IDT1  50
 /*********************************************************************/IDT1  60
    PROCEDURE (M,IX),.                                                  IDT1  70
    DECLARE                                                             IDT1  80
         CH CHARACTER (80),                                             IDT1  90
         (IX(*),NF,N1,N2,M,I)                                           IDT1 100
         FIXED BINARY,.                                                 IDT1 110
    NF   =40,.                                                          IDT1 120
    N1   =1,.                                                           IDT1 130
    N2   =NF,.                                                          IDT1 140
 S10..                                                                  IDT1 150
    IF M LE N2                                                          IDT1 160
    THEN N2   =M,.                                                      IDT1 170
    GET EDIT (CH) (A(80)),.                                             IDT1 180
    GET STRING (CH) EDIT ((IX(I) DO I= N1 TO N2)) ((NF)F(2)),.          IDT1 190
    N1   =N2+1,.                                                        IDT1 200
    IF N1 LE M                                                          IDT1 210
    THEN DO,.                                                           IDT1 220
         N2   =N2+NF,.                                                  IDT1 230
         GO TO S10,.                                                    IDT1 240
         END,.                                                          IDT1 250
    RETURN,.                                                            IDT1 260
    END,.                              /*END OF PROCEDURE IDT1        */IDT1 270
/*
//GO.XDATA DD UNIT=SYSDA,SPACE=(TRK,(50,20))
//GO.SYSIN  DD  *
SAMPLE000300602 1                                                             10
    29   289   216    85    14     1                                          20
    30   391   244    92    16     2                                          30
    30   424   246    90    18     2                                          40
    30   313   239    91    10     0                                          50
    35   243   275    95    30     2                                          60
    35   365   219    95    21     2                                          70
    43   396   267   100    39     3                                          80
    43   356   274    79    19     2                                          90
    44   346   255   126    56     3                                         100
    44   156   258    95    28     0                                         110
    44   278   249   110    42     4                                         120
    44   349   252    88    21     1                                         130
    44   141   236   129    56     1                                         140
    44   245   236    97    24     1                                         150
    45   297   256   111    45     3                                         160
    45   310   262    94    20     2                                         170
    45   151   339    96    35     3                                         180
    45   370   357    88    15     4                                         190
    45   379   198   147    64     4                                         200
    45   463   206   105    31     3                                         210
    45   316   245   132    60     4                                         220
    45   280   225   108    36     4                                         230
    44   395   215   101    27     1                                         240
    49   139   220   136    59     0                                         250
    49   245   205   113    37     4                                         260
    49   373   215    88    25     1                                         270
    51   224   215   118    54     3                                         280
    51   677   210   116    33     4                                         290
    51   424   210   140    59     4                                         300
    51   150   210   105    30     0                                         310
010605                                                                       320
0102030405                                                                   330
010603                                                                       340
020305                                                                       350
/*
