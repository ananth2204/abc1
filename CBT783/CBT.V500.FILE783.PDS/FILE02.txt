//JOBA  JOB 111-1111,'SSP PL/1',MSGLEVEL=1
//DACR EXEC PL1LFCLG,PARM.PL1L='NOLIST,NOATR,NOXREF,CHAR48'
//PL1L.SYSIN  DD  *
 DACR..                                                                 DACR  10
 /*********************************************************************/DACR  20
 /*                                                                   */DACR  30
 /*      TO PERFORM DATA SCREENING CALCULATIONS ON A SET OF           */DACR  40
 /*      OBSERVATIONS.                                                */DACR  50
 /*                                                                   */DACR  60
 /*********************************************************************/DACR  70
    PROCEDURE OPTIONS (MAIN),.                                          DACR  80
    DECLARE                                                             DACR  90
         (NO,NS,NN,NNN,NC,I,J,NOVAR,NX,NCOL,L1,L2)                      DACR 100
         FIXED BINARY,                                                  DACR 110
         PR1  CHARACTER (6),                                            DACR 120
         ERROR EXTERNAL CHARACTER(1),                                   DACR 130
         CH CHARACTER (80),                                             DACR 140
         (NV,NCARD) EXTERNAL,                                           DACR 150
         BOOL ENTRY,.                                                   DACR 160
 /*                                                                   */DACR 170
         ON ENDFILE (SYSIN) GO TO EXIT,.                                DACR 180
 STRT..                                                                 DACR 190
    GET EDIT (CH) (A(80)),.                                             DACR 200
    GET STRING (CH) EDIT (PR1,NO,NX,NC,NS,NCARD) (A(6),5 F(5)),.        DACR 210
 /*                                                                   */DACR 220
 /*      PR1.......PROBLEM NUMBER (MAY BE ALPHAMERIC)                 */DACR 230
 /*      NO........NUMBER OF OBSERVATIONS                             */DACR 240
 /*      NX........NUMBER OF VARIABLES                                */DACR 250
 /*      NC........NUMBER OF CONDITIONS                               */DACR 260
 /*      NS........NUMBER OF SELECTIONS                               */DACR 270
 /*      NCARD.....NUMBER OF DATA CARDS PER OBSERVATION               */DACR 280
 /*                                                                   */DACR 290
         NCARD=NCARD*80,.                                               DACR 300
 ONE..                                                                  DACR 310
    BEGIN,.                                                             DACR 320
    DECLARE                                                             DACR 330
         (A(NO,NX),C(3,NC),UBO(3),S(NO),R(NC),STATS(5),D(NX),DD(3))     DACR 340
         FLOAT BINARY,.                                                 DACR 350
 /*                                                                   */DACR 360
 /*      IF INPUT DATA IS TO BE SAVED ON A DATA SET, INITIALIZE       */DACR 370
 /*      NV=1. OTHERWISE NV=0.                                        */DACR 380
 /*                                                                   */DACR 390
    NV   =0,.                                                           DACR 400
         DO  I = 1 TO NO,.             /* READ IN DATA                */DACR 410
         CALL DAT1(NX,D),.                                              DACR 420
              DO J = 1 TO NX,.                                          DACR 430
              A(I,J)=D(J),.                                             DACR 440
              END,.                                                     DACR 450
         END,.                                                          DACR 460
    NCARD=80,.                                                          DACR 470
         DO  I = 1 TO NC,.             /* READ IN CONDITIONS          */DACR 480
         NNN  =3,.                                                      DACR 490
         CALL DAT1 (NNN,DD),.                                           DACR 500
              DO J = 1 TO 3,.                                           DACR 510
              C(J,I)=DD(J),.                                            DACR 520
              END,.                                                     DACR 530
         END,.                                                          DACR 540
    CALL SBST (A,C,R,BOOL,S,NO,NX,NC),.                                 DACR 550
    PUT EDIT ('DATA SCREENING PROBLEM',PR1) (PAGE,COLUMN(10),A,X(4),A),.DACR 560
    IF ERROR NE '0'                                                     DACR 570
    THEN DO,.                                                           DACR 580
         PUT EDIT ('IN ROUTINE SBST ERROR CODE = ',ERROR)               DACR 590
              (SKIP(2),COLUMN(10),A,A(1)),.                             DACR 600
         GO TO FIN,.                                                    DACR 610
         END,.                                                          DACR 620
    PUT EDIT ('SUBSET VECTOR') (SKIP(3),COLUMN(10),A,SKIP(3)),.         DACR 630
    NCOL =CEIL(NO/50),.                                                 DACR 640
    IF NCOL LE 1                                                        DACR 650
    THEN PUT EDIT ((I,S(I) DO I= 1 TO NO)) (COLUMN(10),F(6),F(5,1)),.   DACR 660
    ELSE DO,.                                                           DACR 670
         L1   =0,.                                                      DACR 680
              DO I = 1 TO 50,.                                          DACR 690
              L1   =L1+1,.                                              DACR 700
              L2   =50*(NCOL-1)+L1,.                                    DACR 710
              IF L2= NO                                                 DACR 720
              THEN NCOL =NCOL-1,.                                       DACR 730
              PUT EDIT ((J,S(J) DO J= L1 TO L2 BY 50)) (SKIP,COLUMN(10) DACR 740
                   ,(9)(F(6),F(5,1))),.                                 DACR 750
              END,.                                                     DACR 760
         END,.                                                          DACR 770
         DO J = 1 TO NS,.                                               DACR 780
         GET EDIT (CH) (A(80)),.                                        DACR 790
         GET STRING (CH) EDIT (NOVAR,(UBO(I) DO I= 1 TO 3))             DACR 800
              (F(5),3 F(10,0)),.                                        DACR 810
 /*                                                                   */DACR 820
 /*      NOVAR.....NUMBER OF THE VARIABLE TO BE TABULATED             */DACR 830
 /*      UBO(1)....LOWER BOUND                                        */DACR 840
 /*      UBO(2)....NUMBER OF INTERVALS                                */DACR 850
 /*      UBO(3)....UPPER BOUND                                        */DACR 860
 /*                                                                   */DACR 870
    NN   =UBO(2),.                                                      DACR 880
 TWO..                                                                  DACR 890
    BEGIN,.                                                             DACR 900
         DECLARE                                                        DACR 910
              (FREQ(NN),PCT(NN)) FLOAT BINARY,.                         DACR 920
         CALL TAB1 (A,S,NOVAR,UBO,FREQ,PCT,STATS,NO,NX),.               DACR 930
         IF ERROR NE '0'                                                DACR 940
         THEN PUT EDIT ('IN ROUTINE TAB1 ERROR CODE = ',ERROR)          DACR 950
              (SKIP(1),COLUMN(10),A,A(1)),.                             DACR 960
         ELSE DO,.                                                      DACR 970
              PUT EDIT ('SUMMARY STATISTICS FOR VARIABLE  ',NOVAR)      DACR 980
              (PAGE,SKIP(4),COLUMN(10),A,F(3)),.                        DACR 990
              PUT EDIT ('TOTAL =',STATS(1),'AVERAGE =',STATS(2),        DACR1000
                   'STANDARD DEVIATION =',STATS(3),'MINIMUM =',STATS(4),DACR1010
                   'MAXIMUM =',STATS(5))                                DACR1020
                   (SKIP(2),COLUMN(10),5(A,F(9,3),X(2))),.              DACR1030
              CALL HIST (J,FREQ,NN),.                                   DACR1040
              END,.                                                     DACR1050
         END,.                                                          DACR1060
    END,.                                                               DACR1070
    PUT EDIT ('END OF CASE') (SKIP(2),COLUMN(10),A),.                   DACR1080
    END,.                                                               DACR1090
    GO TO STRT,.                                                        DACR1100
 EXIT..                                                                 DACR1110
    PUT FILE (SYSPRINT) EDIT ('END OF SAMPLE PROGRAM')                  DACR1120
         (SKIP(5),COLUMN(10),A),.                                       DACR1130
 FIN..                                                                  DACR1140
    END,.                              /*END OF PROCEDURE DACR        */DACR1150
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 SBST..                                                                 SBST  10
 /*********************************************************************/SBST  20
 /*                                                                   */SBST  30
 /*      TO DERIVE A SUBSET VECTOR INDICATING WHICH OBSERVATIONS IN   */SBST  40
 /*      A SET HAVE SATISFIED CERTAIN CONDITIONS.                     */SBST  50
 /*                                                                   */SBST  60
 /*********************************************************************/SBST  70
    PROCEDURE (A,C,R,B,S,NO,NV,NC),.                                    SBST  80
    DECLARE                                                             SBST  90
         B ENTRY,                                                       SBST 100
         ERROR EXTERNAL CHARACTER(1),                                   SBST 110
         (I,ICOL,IGO,J,NC,NO)                                           SBST 120
         FIXED BINARY,                                                  SBST 130
         (A(*,*),C(*,*),R(*),S(*),Q,TR)                                 SBST 140
         BINARY FLOAT,                                                  SBST 150
         T(6) LABEL,.                                                   SBST 160
 /*                                                                   */SBST 170
    ERROR='0',.                                                         SBST 180
         DO I=1 TO NO,.                                                 SBST 190
         S(I) =0,.                                                      SBST 200
         END,.                                                          SBST 210
    IF NO LE 0 OR NV LE 0 OR NC LE 0   /* NUMBER OF OBSERVATIONS,     */SBST 220
    THEN DO,.                          /* VARIABLES, OR CONDITIONS IS */SBST 230
         ERROR='1',.                   /* LESS THAN OR EQUAL TO ZERO. */SBST 240
         GO TO FIN,.                                                    SBST 250
         END,.                                                          SBST 260
         DO I = 1 TO NO,.                                               SBST 270
              DO J = 1 TO NC,.                                          SBST 280
              R(J) =0.0,.              /* CLEAR R VECTOR              */SBST 290
 /*                                                                   */SBST 300
 /*      LOCATE ELEMENT IN OBSERVATION MATRIX AND RELATION CODE       */SBST 310
 /*                                                                   */SBST 320
              ICOL =C(1,J),.                                            SBST 330
              IGO  =C(2,J),.                                            SBST 340
              IF IGO LT 1 OR IGO GT 6  /* CONDITION VALUE INVALID     */SBST 350
              THEN DO,.                                                 SBST 360
                   ERROR='2',.                                          SBST 370
                   GO TO FIN,.                                          SBST 380
                   END,.                                                SBST 390
              IF ICOL LT 1 OR ICOL GT NV                                SBST 400
              THEN DO,.                                                 SBST 410
                   ERROR ='3',.        /* INVALID VARIABLE NUMBER     */SBST 420
                   GO TO FIN,.                                          SBST 430
                   END,.                                                SBST 440
              Q    =A(I,ICOL)-C(3,J),. /* FORM R VECTOR               */SBST 450
              GO TO T(IGO),.                                            SBST 460
 T(1)..                                                                 SBST 470
              IF Q LT 0.0                                               SBST 480
              THEN GO TO S10,.                                          SBST 490
              GO TO S20,.                                               SBST 500
 T(2)..                                                                 SBST 510
              IF Q LE 0.0                                               SBST 520
              THEN GO TO S10,.                                          SBST 530
              GO TO S20,.                                               SBST 540
 T(3)..                                                                 SBST 550
              IF Q = 0.0                                                SBST 560
              THEN GO TO S10,.                                          SBST 570
              GO TO S20,.                                               SBST 580
 T(4)..                                                                 SBST 590
              IF Q NE 0.0                                               SBST 600
              THEN GO TO S10,.                                          SBST 610
              GO TO S20,.                                               SBST 620
 T(5)..                                                                 SBST 630
              IF Q GE 0.0                                               SBST 640
              THEN GO TO S10,.                                          SBST 650
              GO TO S20,.                                               SBST 660
 T(6)..                                                                 SBST 670
              IF Q LE 0.0                                               SBST 680
              THEN GO TO S20,.                                          SBST 690
 S10..                                                                  SBST 700
              R(J) =1.0,.                                               SBST 710
 S20..                                                                  SBST 720
              END,.                                                     SBST 730
         CALL B (R,TR),.               /* CALCULATE S VECTOR          */SBST 740
         S(I) =TR,.                                                     SBST 750
         END,.                                                          SBST 760
 FIN..                                                                  SBST 770
    RETURN,.                                                            SBST 780
    END,.                              /*END OF PROCEDURE SBST        */SBST 790
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 TAB1..                                                                 TAB1  10
 /*********************************************************************/TAB1  20
 /*                                                                   */TAB1  30
 /*      TO TABULATE FOR ONE VARIABLE IN AN OBSERVATION MATRIX (OR A  */TAB1  40
 /*      SUBSET), THE FREQUENCY AND PERCENT FREQUENCY OVER GIVEN      */TAB1  50
 /*      CLASS INTERVALS. IN ADDITION, CALCULATE FOR THE SAME VARIABLE*/TAB1  60
 /*      THE TOTAL, MEAN, STANDARD DEVIATION, MINIMUM, AND            */TAB1  70
 /*      MAXIMUM.                                                     */TAB1  80
 /*                                                                   */TAB1  90
 /*********************************************************************/TAB1 100
    PROCEDURE (A,S,NOVAR,UBO,FREQ,PCT,STATS,NO,NV),.                    TAB1 110
    DECLARE                                                             TAB1 120
         ERROR EXTERNAL CHARACTER (1),                                  TAB1 130
         (I,INN,INTX,J,K,NO,NOVAR,KK)                                   TAB1 140
         FIXED BINARY,                                                  TAB1 150
         (A(*,*),S(*),UBO(*),FREQ(*),PCT(*),STATS(*),SCNT,VMIN,VMAX,    TAB1 160
         SINT,TEMP)                                                     TAB1 170
         BINARY FLOAT,.                                                 TAB1 180
 /*                                                                   */TAB1 190
    ERROR='0',.                                                         TAB1 200
         IF NOVAR LE 0 OR NOVAR GT NV  /* VALUE OF THE VARIABLE TO BE */TAB1 210
         THEN DO,.                     /* TABULATED IS INVALID        */TAB1 220
              ERROR='6',.                                               TAB1 230
              GO TO S50,.                                               TAB1 240
              END,.                                                     TAB1 250
    IF NV LE 0 OR NO LE 0                                               TAB1 260
    THEN DO,.                          /* NUMBER OF OBSERVATIONS OR   */TAB1 270
         ERROR='1',.                   /* THE NUMBER OF VARIABLES ARE */TAB1 280
         GO TO S50,.                   /* LESS THAN OR EQUAL TO ZERO. */TAB1 290
         END,.                                                          TAB1 300
    INN  =UBO(2),.                     /* CALCULATE INTERVAL SIZE     */TAB1 310
         DO J = 1 TO INN,.             /* CLEAR OUTPUT VECTORS        */TAB1 320
         FREQ(J)=0.0,.                                                  TAB1 330
         PCT(J)=0.0,.                                                   TAB1 340
         END,.                                                          TAB1 350
         DO J = 1 TO 5,.                                                TAB1 360
         STATS(J)=0.0,.                                                 TAB1 370
         END,.                                                          TAB1 380
    IF UBO(1) GT UBO(3) OR UBO(2) LE 2.0                                TAB1 390
    THEN DO,.                          /* INVALID BOUNDS OR THE NUMBER*/TAB1 400
         ERROR='2',.                   /* OF INTERVALS LESS THAN OR   */TAB1 410
         GO TO S50,.                   /* EQUAL TO TWO.               */TAB1 420
         END,.                                                          TAB1 430
         DO I = 1 TO NO,.              /* CALCULATE MAX AND MIN       */TAB1 440
         IF S(I) NE 0.0                                                 TAB1 450
         THEN DO,.                                                      TAB1 460
              KK   =I,.                                                 TAB1 470
              VMIN =A(I,NOVAR),.                                        TAB1 480
              VMAX =VMIN,.                                              TAB1 490
              GO TO S10,.                                               TAB1 500
              END,.                                                     TAB1 510
         END,.                                                          TAB1 520
    ERROR='3',.                        /* NO OBSERVATION IN SUBSET    */TAB1 530
    GO TO S50,.                                                         TAB1 540
 S10..                                                                  TAB1 550
         DO I = KK TO NO,.                                              TAB1 560
         IF S(I) NE 0.0                                                 TAB1 570
         THEN DO,.                                                      TAB1 580
              IF A(I,NOVAR) LT VMIN                                     TAB1 590
              THEN VMIN =A(I,NOVAR),.                                   TAB1 600
              IF A(I,NOVAR) GT VMAX                                     TAB1 610
              THEN VMAX =A(I,NOVAR),.                                   TAB1 620
              END,.                                                     TAB1 630
         END,.                                                          TAB1 640
    STATS(4)=VMIN,.                                                     TAB1 650
    STATS(5)=VMAX,.                                                     TAB1 660
    IF UBO(1)= UBO(3)                                                   TAB1 670
    THEN DO,.                                                           TAB1 680
         UBO(1)=VMIN,.                                                  TAB1 690
         UBO(3)=VMAX,.                                                  TAB1 700
         END,.                                                          TAB1 710
    SINT =(UBO(3)-UBO(1))/(UBO(2)-2),.                                  TAB1 720
    SCNT =0.0,.                        /* TEST SUBSET VECTOR          */TAB1 730
         DO I = KK TO NO,.                                              TAB1 740
         IF S(I) NE 0.0                                                 TAB1 750
         THEN DO,.                                                      TAB1 760
              SCNT =SCNT+1.0,.                                          TAB1 770
 /*                                                                   */TAB1 780
 /*      DEVELOP TOTALS AND FREQUENCIES                               */TAB1 790
 /*                                                                   */TAB1 800
              STATS(1)=STATS(1)+A(I,NOVAR),.                            TAB1 810
              STATS(3)=STATS(3)+A(I,NOVAR)**2,.                         TAB1 820
              TEMP =UBO(1)-SINT,.                                       TAB1 830
              INTX =INN-1,.                                             TAB1 840
                   DO J = 1 TO INTX,.                                   TAB1 850
                   TEMP =TEMP+SINT,.                                    TAB1 860
                   IF A(I,NOVAR) LT TEMP                                TAB1 870
                   THEN DO,.                                            TAB1 880
                        K    =J,.                                       TAB1 890
                        GO TO S20,.                                     TAB1 900
                        END,.                                           TAB1 910
                   END,.                                                TAB1 920
              IF A(I,NOVAR) GE TEMP                                     TAB1 930
              THEN DO,.                                                 TAB1 940
                   FREQ(INN)=FREQ(INN)+1.0,.                            TAB1 950
                   GO TO S30,.                                          TAB1 960
                   END,.                                                TAB1 970
 S20..                                                                  TAB1 980
              FREQ(K)=FREQ(K)+1.0,.                                     TAB1 990
              END,.                                                     TAB11000
 S30..                                                                  TAB11010
         END,.                                                          TAB11020
 /*                                                                   */TAB11030
 /*      CALCULATE RELATIVE FREQUENCIES                               */TAB11040
 /*                                                                   */TAB11050
         DO J = 1 TO INN,.                                              TAB11060
         PCT(J)=FREQ(J)*100.0/SCNT,.                                    TAB11070
         END,.                                                          TAB11080
 /*                                                                   */TAB11090
 /*      CALCULATE MEAN AND STANDARD DEVIATION                        */TAB11100
 /*                                                                   */TAB11110
    STATS(2)=STATS(1)/SCNT,.                                            TAB11120
    IF SCNT= 1.0                                                        TAB11130
    THEN DO,.                                                           TAB11140
         ERROR='4',.                   /* SAMPLE SIZE = 1             */TAB11150
         STATS(3)=0.0,.                                                 TAB11160
         GO TO S50,.                                                    TAB11170
         END,.                                                          TAB11180
    ELSE DO,.                                                           TAB11190
         TEMP =STATS(3)-STATS(1)*STATS(1)/SCNT,.                        TAB11200
         IF TEMP LE 0.0                                                 TAB11210
         THEN DO,.                                                      TAB11220
              ERROR='5',.              /* VARIANCE = 0.0              */TAB11230
              STATS(3)=0.0,.                                            TAB11240
              GO TO S50,.                                               TAB11250
              END,.                                                     TAB11260
         ELSE STATS(3)=SQRT(TEMP/(SCNT-1.0)),.                          TAB11270
         END,.                                                          TAB11280
 S50..                                                                  TAB11290
    RETURN,.                                                            TAB11300
    END,.                              /*END OF PROCEDURE TAB1        */TAB11310
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 BOOL..                                                                 BOOL  10
 /*********************************************************************/BOOL  20
 /*                                                                   */BOOL  30
 /*      TO PERFORM A BOOLEAN OPERATION FOR THE PROCEDURE SBST, WHICH */BOOL  40
 /*      IS USED BY THE DATA SCREENING SAMPLE PROGRAM.                */BOOL  50
 /*                                                                   */BOOL  60
 /*********************************************************************/BOOL  70
    PROCEDURE (R,T),.                                                   BOOL  80
    DECLARE (R(*),T) FLOAT BINARY,.                                     BOOL  90
 /*    BOOL CHECKS ONLY THE FIRST TWO CONDITIONS OF PROCEDURE SBST    */BOOL 100
    T    =R(1)*R(2),.                                                   BOOL 110
    RETURN,.                                                            BOOL 120
    END,.                              /*END OF PROCEDURE BOOL        */BOOL 130
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 HIST..                                                                 HIST  10
 /*********************************************************************/HIST  20
 /*                                                                   */HIST  30
 /*      TO PLOT A HISTOGRAM OF FREQUENCIES FOR THE DATA SCREENING    */HIST  40
 /*      SAMPLE PROGRAM.                                              */HIST  50
 /*                                                                   */HIST  60
 /*********************************************************************/HIST  70
    PROCEDURE (NZ,FREQ,IN),.                                            HIST  80
    DECLARE                                                             HIST  90
         (I,IN,IX,J,JSCAL,L,MAX,NU,NZ)                                  HIST 100
         FIXED BINARY,                                                  HIST 110
         (K,JOUT(IN)) CHARACTER (1),                                    HIST 120
         (FREQ(*),FMAX,X) FLOAT BINARY,.                                HIST 130
 /*                                                                   */HIST 140
 /*      PRINT TITLE AND FREQUENCY VECTOR                             */HIST 150
 /*                                                                   */HIST 160
    PUT EDIT ('HISTOGRAM ',NZ) (SKIP(3),COLUMN(57),A,F(3)),.            HIST 170
    NU   =FLOOR(100/IN),.                                               HIST 180
    PUT EDIT ('FREQUENCY',(FREQ(I) DO I = 1 TO IN))                     HIST 190
         (SKIP(2),COLUMN(10),A,(IN)F(NU)),.                             HIST 200
    PUT EDIT ('---------------------------------------------------',    HIST 210
         '----------------------------------------------------------')  HIST 220
         (R(FM1)),.                                                     HIST 230
 FM1..                                                                  HIST 240
    FORMAT (SKIP,COLUMN(12),A,A),.                                      HIST 250
    FMAX =0,.                          /* FIND LARGEST FREQUENCY      */HIST 260
         DO I = 1 TO IN,.                                               HIST 270
         IF FREQ(I) GT FMAX                                             HIST 280
         THEN FMAX =FREQ(I),.                                           HIST 290
         END,.                                                          HIST 300
    JSCAL=1,.                          /* SCALE IF NECESSARY          */HIST 310
    IF FMAX GT 50                                                       HIST 320
    THEN DO,.                                                           HIST 330
         JSCAL=FLOOR((FMAX+49)/50),.                                    HIST 340
         PUT EDIT ('EACH','*',' EQUAL ',JSCAL,' POINTS')                HIST 350
              (SKIP,COLUMN(10),A,A(1),A,F(2),A,SKIP),.                  HIST 360
         END,.                                                          HIST 370
    JOUT =' ',.                        /* CLEAR OUTPUT AREA TO BLANKS */HIST 380
 /*                                                                   */HIST 390
 /*      LOCATE FREQUENCIES IN EACH INTERVAL                          */HIST 400
 /*                                                                   */HIST 410
    MAX  =FLOOR(FMAX/JSCAL),.                                           HIST 420
         DO I = 1 TO MAX,.                                              HIST 430
         X    =MAX-(I-1),.                                              HIST 440
              DO J = 1 TO IN,.                                          HIST 450
              IF FREQ(J)/JSCAL GE X                                     HIST 460
              THEN JOUT(J)='*',.                                        HIST 470
              END,.                                                     HIST 480
         IX   =X*JSCAL,.                                                HIST 490
 /*                                                                   */HIST 500
 /*      PRINT LINE OF FREQUENCIES                                    */HIST 510
 /*                                                                   */HIST 520
         PUT EDIT (IX,(JOUT(L) DO L = 1 TO IN)) (SKIP,COLUMN(10),F(5),  HIST 530
              X(4),(IN)(X(NU-1),A(1))),.                                HIST 540
         END,.                                                          HIST 550
         DO I = 1 TO IN,.              /* GENERATE CONSTANTS          */HIST 560
         FREQ(I)=I,.                                                    HIST 570
         END,.                                                          HIST 580
    PUT EDIT ('---------------------------------------------------',    HIST 590
         '----------------------------------------------------------')  HIST 600
         (R(FM1)),.                                                     HIST 610
    PUT EDIT ('INTERVAL ',(FREQ(I) DO I = 1 TO IN))                     HIST 620
         (SKIP(2),COLUMN(10),A,(IN)F(NU)),.                             HIST 630
    PUT EDIT ('CLASS') (SKIP,COLUMN(10),A),.                            HIST 640
    RETURN,.                                                            HIST 650
    END,.                              /*END OF PROCEDURE HIST        */HIST 660
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 DAT1..                                                                 DAT1  10
 /*********************************************************************/DAT1  20
 /*                                                                   */DAT1  30
 /*      TO READ FLOATING POINT DATA, ONE OBSERVATION AT A TIME.      */DAT1  40
 /*      DATA MAY BE SAVED ON A DATA SET.                             */DAT1  50
 /*                                                                   */DAT1  60
 /*********************************************************************/DAT1  70
    PROCEDURE (M,D),.                                                   DAT1  80
    DECLARE                                                             DAT1  90
         XDATA FILE STREAM ENVIRONMENT (CONSECUTIVE V(2000,200)),       DAT1 100
         (NCARD,NV) EXTERNAL,                                           DAT1 110
         CH CHARACTER(NCARD),                                           DAT1 120
         (I,M,MM) BINARY FIXED,                                         DAT1 130
         D(*) FLOAT BINARY,.                                            DAT1 140
 /*                                                                   */DAT1 150
    ON ENDFILE (SYSIN)                                                  DAT1 160
    GO TO EXIT,.                                                        DAT1 170
    GET EDIT (CH) (A(NCARD)),.                                          DAT1 180
    MM   =CEIL(M/7),.                                                   DAT1 190
    GET STRING (CH) EDIT ((D(I) DO I= 1 TO M))                          DAT1 200
         ((MM)((7)F(10,0),X(10))),.                                     DAT1 210
    IF NV= 1                                                            DAT1 220
    THEN PUT FILE (XDATA) EDIT ((D(I) DO I= 1 TO M)) ((M)F(6,0)),.      DAT1 230
    REVERT ENDFILE (SYSIN),.                                            DAT1 240
    RETURN,.                                                            DAT1 250
 EXIT..                                                                 DAT1 260
    PUT FILE (SYSPRINT) EDIT ('ERROR  INSUFFICIENT DATA')               DAT1 270
         (SKIP(1),COLUMN(10),A),.                                       DAT1 280
    STOP,.                                                              DAT1 290
    END,.                              /*END OF PROCEDURE DAT1        */DAT1 300
/*
//GO.SYSIN  DD  *
SAMPLE  100    4    2    3    1                                               10
46.       64.       173.      12.                                             20
24.       72.       170.       8.                                             30
32.       71.       154.      16.                                             40
41.       68.       129.      10.                                             50
50.       65.       192.       9.                                             60
63.       75.       203.      12.                                             70
29.       70.       122.      14.                                             80
28.       64.       136.      13.                                             90
52.       77.       147.      11.                                            100
36.       67.       153.      18.                                            110
31.       68.       165.       9.                                            120
72.       70.       178.      10.                                            130
53.       71.       205.      14.                                            140
21.       65.       219.      12.                                            150
49.       63.       150.       6.                                            160
28.       62.       160.      16.                                            170
53.       72.       161.      13.                                            180
47.       73.       142.      15.                                            190
37.       67.       193.      18.                                            200
64.       68.       156.      14.                                            210
65.       60.       114.      10.                                            220
62.       64.       153.      12.                                            230
19.       68.       225.       9.                                            240
46.       67.       158.      11.                                            250
33.       72.       121.       4.                                            260
37.       65.       132.      13.                                            270
41.       76.       148.      16.                                            280
52.       71.       123.      16.                                            290
29.       68.       128.      14.                                            300
32.       65.       155.      17.                                            310
24.       72.       172.      16.                                            320
56.       73.       163.      10.                                            330
63.       65.       158.      11.                                            340
67.       69.       146.       2.                                            350
58.       66.       171.       9.                                            360
41.       65.       153.      12.                                            370
49.       66.       165.      14.                                            380
52.       72.       172.      16.                                            390
23.       78.       183.      15.                                            400
56.       71.       195.      16.                                            410
52.       68.       118.       7.                                            420
40.       66.       165.      14.                                            430
39.       68.       215.      16.                                            440
23.       71.       154.      12.                                            450
56.       65.       149.      10.                                            460
25.       65.       162.      16.                                            470
37.       68.       152.      16.                                            480
46.       70.       159.      15.                                            490
41.       69.       137.      14.                                            500
62.       71.       163.      12.                                            510
29.       72.       191.       4.                                            520
19.       68.       168.      10.                                            530
46.       63.       158.      16.                                            540
37.       64.       139.      18.                                            550
34.       68.       156.      10.                                            560
64.       67.       153.      12.                                            570
57.       67.       141.      13.                                            580
32.       68.       157.      17.                                            590
29.       70.       183.      15.                                            600
53.       72.       164.      18.                                            610
47.       72.       156.      18.                                            620
56.       73.       160.      16.                                            630
61.       74.       169.      12.                                            640
21.       68.       161.      10.                                            650
25.       76.       178.      11.                                            660
23.       72.       157.      16.                                            670
29.       68.       186.      16.                                            680
39.       70.       159.      14.                                            690
42.       70.       154.      10.                                            700
56.       62.       159.      12.                                            710
63.       70.       177.      12.                                            720
51.       71.       161.       9.                                            730
41.       66.       158.      10.                                            740
33.       69.       158.      16.                                            750
37.       68.       157.      16.                                            760
25.       70.       163.      15.                                            770
63.       68.       159.      12.                                            780
53.       71.       202.       6.                                            790
51.       72.       167.      14.                                            800
47.       73.       164.      14.                                            810
39.       75.       151.      12.                                            820
28.       68.       166.      10.                                            830
64.       69.       156.      16.                                            840
55.       67.       144.      16.                                            850
51.       66.       177.      10.                                            860
46.       65.       157.      12.                                            870
72.       66.       125.      10.                                            880
66.       65.       131.      12.                                            890
28.       74.       149.      18.                                            900
27.       71.       168.      11.                                            910
23.       72.       158.      12.                                            920
23.       72.       163.      12.                                            930
60.       68.       157.       9.                                            940
30.       66.       142.      10.                                            950
39.       67.       162.      16.                                            960
46.       74.       154.      16.                                            970
50.       68.       158.      10.                                            980
61.       66.       161.      14.                                            990
36.       64.       157.      15.                                           1000
32.       71.       156.      16.                                           1010
         1         2        65                                              1020
         4         6         8                                              1030
    3   120.       20.      210.                                            1040
    1    20.        7.       70.                                            1050
    4    10.       12.       20.                                            1060
/*
