//JOBE  JOB 111-1111,'SSP PL/1',MSGLEVEL=1
//ANOV EXEC PL1LFCLG,PARM.PL1L='NOLIST,NOATR,NOXREF,CHAR48'
//PL1L.SYSIN  DD  *
 ANOV..                                                                 ANOV  10
 /*********************************************************************/ANOV  20
 /*                                                                   */ANOV  30
 /*      TO READ THE PROBLEM PARAMETER CARD FOR ANALYSIS OF VARIANCE, */ANOV  40
 /*      CALL THE PROCEDURES FOR THE CALCULATION OF SUMS OF SQUARES,  */ANOV  50
 /*      DEGREES OF FREEDOM AND MEAN SQUARE, AND PRINT FACTOR LEVELS, */ANOV  60
 /*      GRAND MEAN AND ANALYSIS OF VARIANCE TABLE.                   */ANOV  70
 /*                                                                   */ANOV  80
 /*********************************************************************/ANOV  90
    PROCEDURE OPTIONS (MAIN),.                                          ANOV 100
    DECLARE                                                             ANOV 110
         (I,J,K,L,M,MM,N)                                               ANOV 120
         FIXED BINARY,                                                  ANOV 130
         ERROR EXTERNAL CHARACTER(1),                                   ANOV 140
         PR1 CHARACTER (6),                                             ANOV 150
         CH  CHARACTER (80),.                                           ANOV 160
 /*                                                                   */ANOV 170
    ON ENDFILE (SYSIN) GO TO EXIT,.                                     ANOV 180
 S100..                                                                 ANOV 190
    GET EDIT (CH) (A(80)),.                                             ANOV 200
    GET STRING (CH) EDIT (PR1,K) (A(6),F(2)),.                          ANOV 210
 /*                                                                   */ANOV 220
 /*      PR1....PROBLEM NUMBER (MAY BE ALPHAMERIC)                    */ANOV 230
 /*      K......NUMBER OF FACTORS                                     */ANOV 240
 /*                                                                   */ANOV 250
    N    =(2**K)-1,.                                                    ANOV 260
 ONE..                                                                  ANOV 270
    BEGIN,.                                                             ANOV 280
    DECLARE                                                             ANOV 290
         (SUMSQ(N),SMEAN(N),GMEAN,SUN)                                  ANOV 300
         FLOAT BINARY,                 /*SINGLE PRECISION VERSION  /*S*/ANOV 310
  /*     FLOAT BINARY (53),.           /*DOUBLE PRECISION VERSION  /*D*/ANOV 320
         (LEVEL(K),NDF(N),ISTEP(K)) BINARY FIXED,                       ANOV 330
         (HEAD(K),FMT(K)) CHARACTER (1),.                               ANOV 340
    GET EDIT (CH) (A(80)),.                                             ANOV 350
    GET STRING (CH) EDIT ((HEAD(I),LEVEL(I) DO I= 1 TO K))              ANOV 360
         (14(A(1),F(4))),.                                              ANOV 370
 /*                                                                   */ANOV 380
 /*      HEAD...FACTOR LEVELS                                         */ANOV 390
 /*      LEVEL..LEVELS OF FACTORS                                     */ANOV 400
 /*                                                                   */ANOV 410
    PUT EDIT ('ANALYSIS OF VARIANCE.....',PR1,'LEVELS OF FACTORS')      ANOV 420
         (PAGE,SKIP(4),COLUMN(10),A,A(6),SKIP(4),COLUMN(10),A),.        ANOV 430
    PUT EDIT ((HEAD(I),LEVEL(I) DO I= 1 TO K))                          ANOV 440
         (SKIP,COLUMN(13),A(1),X(7),F(4)),.                             ANOV 450
    M    = PROD (LEVEL),.                                               ANOV 460
    MM   = PROD (LEVEL+1),.                                             ANOV 470
 TWO..                                                                  ANOV 480
    BEGIN,.                                                             ANOV 490
    DECLARE                                                             ANOV 500
         X(MM)                                                          ANOV 510
         FLOAT BINARY,.                /*SINGLE PRECISION VERSION  /*S*/ANOV 520
  /*     FLOAT BINARY (53),.           /*DOUBLE PRECISION VERSION  /*D*/ANOV 530
    X    =0,.                                                           ANOV 540
 /*                                                                   */ANOV 550
 /*      READ IN ALL INPUT DATA                                       */ANOV 560
 /*                                                                   */ANOV 570
    CALL DAT3 (M,X),.                                                   ANOV 580
    CALL AVAR (K,LEVEL,M,X,GMEAN,SUMSQ,NDF,SMEAN),.                     ANOV 590
    IF ERROR NE '0'                                                     ANOV 600
    THEN DO,.                                                           ANOV 610
         PUT EDIT ('IN ROUTINE AVAR ERROR CODE = ',ERROR) (SKIP(2),     ANOV 620
              COLUMN(10),A,A(1)),.                                      ANOV 630
         GO TO S100,.                                                   ANOV 640
         END,.                                                          ANOV 650
 /*                                                                   */ANOV 660
 /*      PRINT THE GRAND MEAN                                         */ANOV 670
 /*                                                                   */ANOV 680
    PUT EDIT ('GRAND MEAN',GMEAN) (SKIP(6),COLUMN(10),A,F(20,5)),.      ANOV 690
 /*                                                                   */ANOV 700
 /*      PRINT ANALYSIS OF VARIANCE TABLE                             */ANOV 710
 /*                                                                   */ANOV 720
    PUT EDIT ('SOURCE OF' ,'SUMS OF','DEGREES OF','MEAN',               ANOV 730
         'VARIATION','SQUARES','FREEDOM','SQUARES')                     ANOV 740
         (SKIP(6),COLUMN(10),A,X(18),A,X(10),A,X(9),A,SKIP,             ANOV 750
         COLUMN(10),A,X(18),A,X(11),A,X(10),A),.                        ANOV 760
    PUT SKIP(2),.                                                       ANOV 770
    ISTEP= 0,.                         /* INITIALIZE FOR PRINT OUT    */ANOV 780
    ISTEP(1)= 1,.                                                       ANOV 790
         DO I = 1 TO N,.                                                ANOV 800
         L    = 0,.                                                     ANOV 810
              DO J = 1 TO K,.                                           ANOV 820
              FMT(J)=' ',.                                              ANOV 830
              IF ISTEP(J) NE 0                                          ANOV 840
              THEN DO,.                                                 ANOV 850
                   L    =L+1,.                                          ANOV 860
                   FMT(L)=HEAD(J),.                                     ANOV 870
                   END,.                                                ANOV 880
              END,.                                                     ANOV 890
         PUT EDIT ((FMT(L) DO L= 1 TO K),SUMSQ(I),NDF(I),SMEAN(I))      ANOV 900
              (SKIP,COLUMN(10),(K)A(1),COLUMN(23),F(20,5),X(10),        ANOV 910
              F(6),F(20,5)),.                                           ANOV 920
         IF I LT N                                                      ANOV 930
         THEN DO,.                                                      ANOV 940
                   DO J = 1 TO K,.                                      ANOV 950
                   IF ISTEP(J)= 0                                       ANOV 960
                   THEN DO,.                                            ANOV 970
                        ISTEP(J)=1,.                                    ANOV 980
                        GO TO S160,.                                    ANOV 990
                        END,.                                           ANOV1000
                   ISTEP(J)=0,.                                         ANOV1010
                   END,.                                                ANOV1020
              END,.                                                     ANOV1030
 S160..                                                                 ANOV1040
         END,.                                                          ANOV1050
    M    =M-1,.                                                         ANOV1060
    SUN  =SUM(SUMSQ),.                                                  ANOV1070
    PUT EDIT ('TOTAL',SUN,M) (SKIP(2),COLUMN(10),A,X(10),F(18,5),       ANOV1080
         X(10),F(6)),.                                                  ANOV1090
    END,.                                                               ANOV1100
    END,.                                                               ANOV1110
    GO TO S100,.                                                        ANOV1120
 EXIT..                                                                 ANOV1130
    PUT FILE (SYSPRINT) EDIT ('END OF SAMPLE PROGRAM')                  ANOV1140
         (SKIP(5),COLUMN(10),A),.                                       ANOV1150
    END,.                              /*END OF PROCEDURE ANOV        */ANOV1160
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 AVAR..                                                                 AVAR  10
 /*********************************************************************/AVAR  20
 /*                                                                   */AVAR  30
 /*      TO PERFORM AN ANALYSIS OF VARIANCE FOR A COMPLETE FACTORIAL  */AVAR  40
 /*      DESIGN.                                                      */AVAR  50
 /*                                                                   */AVAR  60
 /*********************************************************************/AVAR  70
    PROCEDURE (K,LEVEL,N,X,GMEAN,SUMSQ,NDF,SMEAN),.                     AVAR  80
    DECLARE                                                             AVAR  90
         ERROR EXTERNAL CHARACTER(1),                                   AVAR 100
         (LEVEL(*),NDF(*),KOUNT(K),ISTEP(K),LASTS(K),I,INCRE,J,K,L,LAST,AVAR 110
         LL,N,N1,ND1,ND2,NN,NSIZ)                                       AVAR 120
         FIXED BINARY,                                                  AVAR 130
         (X(*),SUMSQ(*),SMEAN(*),FSUM,GMEAN,FN,FN1,FN2)                 AVAR 140
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/AVAR 150
 /*      BINARY FLOAT (53),.           /*DOUBLE PRECISION VERSION  /*D*/AVAR 160
    ERROR='0',.                                                         AVAR 170
    NSIZ =(2**K)-1,.                                                    AVAR 180
    IF N LE 0                          /* THERE ARE NO DATA POINTS    */AVAR 190
    THEN DO,.                                                           AVAR 200
         ERROR='1',.                                                    AVAR 210
         GO TO FIN,.                                                    AVAR 220
         END,.                                                          AVAR 230
    FN   =N,.                                                           AVAR 240
    IF K LT 2                                                           AVAR 250
    THEN DO,.                                                           AVAR 260
         ERROR='2',.                   /* ONE OR LESS FACTORS         */AVAR 270
         GO TO FIN,.                                                    AVAR 280
         END,.                                                          AVAR 290
         DO I = 1 TO K,.                                                AVAR 300
         IF LEVEL(I) LT 2                                               AVAR 310
         THEN DO,.                                                      AVAR 320
              ERROR='3',.              /* 1 OR MORE LEVELS LESS THEN 2*/AVAR 330
              GO TO FIN,.                                               AVAR 340
              END,.                                                     AVAR 350
         END,.                                                          AVAR 360
 /*                                                                   */AVAR 370
 /*      CALCULATE MULTIPLIERS TO BE USED IN FINDING STORAGE LOCATIONS*/AVAR 380
 /*      FOR INPUT DATA.                                              */AVAR 390
 /*                                                                   */AVAR 400
    ISTEP(1)=1,.                                                        AVAR 410
         DO I = 2 TO K,.                                                AVAR 420
         ISTEP(I)=ISTEP(I-1)*(LEVEL(I-1)+1),.                           AVAR 430
         END,.                                                          AVAR 440
         DO I = 1 TO K,.               /* SET LEVEL COUNTER           */AVAR 450
         KOUNT(I)=LEVEL(I),.                                            AVAR 460
         END,.                                                          AVAR 470
    N1   =N,.                                                           AVAR 480
         DO I = 1 TO N,.               /* PLACE DATA IN PROPER PLACE  */AVAR 490
         L    =KOUNT(1),.                                               AVAR 500
              DO J = 2 TO K,.                                           AVAR 510
              L    =L+ISTEP(J)*(KOUNT(J)-1),.                           AVAR 520
              END,.                                                     AVAR 530
         X(L) =X(N1),.                                                  AVAR 540
         N1   =N1-1,.                                                   AVAR 550
              DO J = 1 TO K,.                                           AVAR 560
              IF KOUNT(J) GT 1                                          AVAR 570
              THEN DO,.                                                 AVAR 580
                   KOUNT(J)=KOUNT(J)-1,.                                AVAR 590
                   GO TO S10,.                                          AVAR 600
                   END,.                                                AVAR 610
              KOUNT(J)=LEVEL(J),.                                       AVAR 620
              END,.                                                     AVAR 630
 S10..                                                                  AVAR 640
         END,.                                                          AVAR 650
    L    =LEVEL(1),.                   /* CALCULATE LAST DATA POSITION*/AVAR 660
         DO J = 2 TO K,.                                                AVAR 670
         L    =L+ISTEP(J)*(LEVEL(J)-1),.                                AVAR 680
         END,.                                                          AVAR 690
 /*                                                                   */AVAR 700
 /*      CALCULATE THE LAST DATA POSITION OF EACH FACTOR              */AVAR 710
 /*                                                                   */AVAR 720
    LASTS(1)=L+1,.                                                      AVAR 730
         DO I = 2 TO K,.                                                AVAR 740
         LASTS(I)=LASTS(I-1)+ISTEP(I),.                                 AVAR 750
         END,.                                                          AVAR 760
         DO I = 1 TO K,.               /* PERFORM OPERATOR CALCULUS   */AVAR 770
         L    =1,.                                                      AVAR 780
         LL   =1,.                                                      AVAR 790
         FSUM =0.0,.                                                    AVAR 800
         NN   =LEVEL(I),.                                               AVAR 810
         INCRE=ISTEP(I),.                                               AVAR 820
         LAST =LASTS(I),.                                               AVAR 830
 S20..                                                                  AVAR 840
              DO J = 1 TO NN,.         /* SIGMA OPERATION             */AVAR 850
              FSUM =FSUM+X(L),.                                         AVAR 860
              L    =L+INCRE,.                                           AVAR 870
              END,.                                                     AVAR 880
         X(L) =FSUM,.                                                   AVAR 890
         FN1  =NN,.                                                     AVAR 900
              DO J = 1 TO NN,.         /* DELTA OPERATION             */AVAR 910
              X(LL)=FN1*X(LL)-FSUM,.                                    AVAR 920
              LL   =LL+INCRE,.                                          AVAR 930
              END,.                                                     AVAR 940
         FSUM =0.0,.                                                    AVAR 950
         IF L LT LAST                                                   AVAR 960
         THEN DO,.                                                      AVAR 970
              IF L LE LAST-INCRE                                        AVAR 980
              THEN DO,.                                                 AVAR 990
                   L    =L+INCRE,.                                      AVAR1000
                   LL   =LL+INCRE,.                                     AVAR1010
                   GO TO S20,.                                          AVAR1020
                   END,.                                                AVAR1030
              L    =L+INCRE+1-LAST,.                                    AVAR1040
              LL   =LL+INCRE+1-LAST,.                                   AVAR1050
              GO TO S20,.                                               AVAR1060
              END,.                                                     AVAR1070
         END,.                                                          AVAR1080
         DO I = 1 TO NSIZ,.                                             AVAR1090
         SUMSQ=0.0,.                                                    AVAR1100
         END,.                                                          AVAR1110
 /*                                                                   */AVAR1120
 /*      SET UP CONTROL FOR MEAN SQUARE OPERATOR                      */AVAR1130
 /*                                                                   */AVAR1140
    LASTS(1)=LEVEL(1),.                                                 AVAR1150
    ISTEP(1)=1,.                                                        AVAR1160
         DO I = 2 TO K,.                                                AVAR1170
         LASTS(I)=LEVEL(I)+1,.                                          AVAR1180
         ISTEP(I)=ISTEP(I-1)*2,.                                        AVAR1190
         END,.                                                          AVAR1200
    NN   =1,.                                                           AVAR1210
         DO I = 1 TO K,.                                                AVAR1220
         KOUNT(I)=0.0,.                                                 AVAR1230
         END,.                                                          AVAR1240
 S30..                                                                  AVAR1250
    L    =0,.                                                           AVAR1260
         DO I = 1 TO K,.                                                AVAR1270
         IF KOUNT(I) NE LASTS(I)                                        AVAR1280
         THEN DO,.                                                      AVAR1290
              IF L LE 0                                                 AVAR1300
              THEN DO,.                                                 AVAR1310
                   KOUNT(I)=KOUNT(I)+1,.                                AVAR1320
                   IF KOUNT(I) LE LEVEL(I)                              AVAR1330
                   THEN GO TO S40,.                                     AVAR1340
                   GO TO S50,.                                          AVAR1350
                   END,.                                                AVAR1360
              IF KOUNT(I)= LEVEL(I)                                     AVAR1370
              THEN GO TO S60,.                                          AVAR1380
 S40..                                                                  AVAR1390
              L    =L+ISTEP(I),.                                        AVAR1400
              GO TO S60,.                                               AVAR1410
              END,.                                                     AVAR1420
 S50..                                                                  AVAR1430
         KOUNT(I)=0,.                                                   AVAR1440
 S60..                                                                  AVAR1450
         END,.                                                          AVAR1460
    IF L GT 0                                                           AVAR1470
    THEN DO,.                                                           AVAR1480
         SUMSQ(L)=SUMSQ(L)+X(NN)*X(NN),.                                AVAR1490
         NN   =NN+1,.                                                   AVAR1500
         GO TO S30,.                                                    AVAR1510
         END,.                                                          AVAR1520
    GMEAN=X(NN)/FN,.                   /* CALCULATE MEAN              */AVAR1530
 /*                                                                   */AVAR1540
 /*      CALCULATE FIRST DIVISOR REQUIRED TO FORM SUM OF SQUARES AND  */AVAR1550
 /*      DIVISOR, WHICH IS EQUAL TO DEGREES OF FREEDOM, REQUIRED TO   */AVAR1560
 /*      FORM MEAN SQUARES                                            */AVAR1570
 /*                                                                   */AVAR1580
    ISTEP=0,.                                                           AVAR1590
    ISTEP(1)=1,.                                                        AVAR1600
    NN   =0,.                                                           AVAR1610
 S70..                                                                  AVAR1620
    ND1  =1,.                                                           AVAR1630
    ND2  =1,.                                                           AVAR1640
         DO I = 1 TO K,.                                                AVAR1650
         IF ISTEP(I) NE 0                                               AVAR1660
         THEN DO,.                                                      AVAR1670
              ND1  =ND1*LEVEL(I),.                                      AVAR1680
              ND2  =ND2*(LEVEL(I)-1),.                                  AVAR1690
              END,.                                                     AVAR1700
         END,.                                                          AVAR1710
    FN1  =N*ND1,.                                                       AVAR1720
    FN2  =ND2,.                                                         AVAR1730
    NN   =NN+1,.                                                        AVAR1740
    SUMSQ(NN)=SUMSQ(NN)/FN1,.                                           AVAR1750
    SMEAN(NN)=SUMSQ(NN)/FN2,.                                           AVAR1760
    NDF(NN)=ND2,.                                                       AVAR1770
    IF NN LT LL                                                         AVAR1780
    THEN DO,.                                                           AVAR1790
              DO I = 1 TO K,.                                           AVAR1800
              IF ISTEP(I) NE 0                                          AVAR1810
              THEN ISTEP(I)=0,.                                         AVAR1820
              ELSE DO,.                                                 AVAR1830
                   ISTEP(I)=1,.                                         AVAR1840
                   GO TO S70,.                                          AVAR1850
                   END,.                                                AVAR1860
              END,.                                                     AVAR1870
         END,.                                                          AVAR1880
 FIN..                                                                  AVAR1890
    RETURN,.                                                            AVAR1900
    END,.                              /*END OF PROCEDURE AVAR        */AVAR1910
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 DAT3..                                                                 DAT3  10
 /*********************************************************************/DAT3  20
 /*                                                                   */DAT3  30
 /*      TO READ A VECTOR OF FLOATING POINT DATA.                     */DAT3  40
 /*                                                                   */DAT3  50
 /*********************************************************************/DAT3  60
    PROCEDURE (M,D),.                                                   DAT3  70
    DECLARE                                                             DAT3  80
         CH CHARACTER(80),                                              DAT3  90
         (I,M,N,N1,N2)                                                  DAT3 100
         FIXED BINARY,                                                  DAT3 110
         D(M) FLOAT BINARY,.                                            DAT3 120
 /*                                                                   */DAT3 130
 /*      N EQUAL THE NUMBER OF DATA POINTS PER 80 COLUMNS OF A DATA   */DAT3 140
 /*      CARD.                                                        */DAT3 150
 /*                                                                   */DAT3 160
    ON ENDFILE (SYSIN)                                                  DAT3 170
    GO TO EXIT,.                                                        DAT3 180
    N    =12,.                                                          DAT3 190
    N1   =1,.                                                           DAT3 200
    N2   =N,.                                                           DAT3 210
 S10..                                                                  DAT3 220
    IF M LE N2                                                          DAT3 230
    THEN N2   =M,.                                                      DAT3 240
    GET EDIT (CH) (A(80)),.                                             DAT3 250
    GET STRING (CH) EDIT ((D(I) DO I= N1 TO N2)) ((N)F(6,0)),.          DAT3 260
    N1   =N2+1,.                                                        DAT3 270
    IF N1 LE M                                                          DAT3 280
    THEN DO,.                                                           DAT3 290
         N2   =N2+N,.                                                   DAT3 300
         GO TO S10,.                                                    DAT3 310
         END,.                                                          DAT3 320
    REVERT ENDFILE (SYSIN),.                                            DAT3 330
    RETURN,.                                                            DAT3 340
 EXIT..                                                                 DAT3 350
    PUT FILE (SYSPRINT) EDIT ('ERROR  INSUFFICIENT DATA')               DAT3 360
         (SKIP(1),COLUMN(10),A),.                                       DAT3 370
    STOP,.                                                              DAT3 380
    END,.                              /*END OF PROCEDURE DAT3        */DAT3 390
/*
//GO.SYSIN  DD  *
SAMPLE 4                                                                      10
A   4B   3C   3R   2                                                          20
     3    10     9     8    24     8     9     3     2     8     9     8      30
     4    12     3     9    22     7    16     2     2     2     7     2      40
     5    10     5     8    23     9    17     3     2     8     6     3      50
     2    14     9    13    29    16    11     3     2     7     5     3      60
     7    11     5     8    28    18    10     6     6     6     5     9      70
     9    10    27     8    28    16    11     7     8     9     8    15      80
/*
