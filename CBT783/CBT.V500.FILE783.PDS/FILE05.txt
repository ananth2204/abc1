//JOBD  JOB 111-1111,'SSP PL/1',MSGLEVEL=1
//CANO EXEC PL1LFCLG,PARM.PL1L='NOLIST,NOATR,NOXREF,CHAR48'
//PL1L.SYSIN  DD  *
 CANO..                                                                 CANO  10
 /*********************************************************************/CANO  20
 /*                                                                   */CANO  30
 /*      TO READ THE PROBLEM PARAMETER CARD FOR A CANONICAL CORRE-    */CANO  40
 /*      LATION, CALL TWO PROCEDURES TO CALCULATE SIMPLE CORRELATIONS,*/CANO  50
 /*      CANONICAL CORRELATIONS, CHI-SQUARES, DEGREES OF FREEDOM FOR  */CANO  60
 /*      CHI-SQUARES, AND COEFFICIENTS FOR LEFT AND RIGHT HAND        */CANO  70
 /*      VARIABLES, NAMELY CANONICAL VARIATES, AND PRINT THE RESULTS. */CANO  80
 /*                                                                   */CANO  90
 /*********************************************************************/CANO 100
    PROCEDURE OPTIONS (MAIN),.                                          CANO 110
    DECLARE                                                             CANO 120
         (I,IO,J,M,MM,MP,MQ,N,N1)                                       CANO 130
         FIXED BINARY,                                                  CANO 140
         CH  CHARACTER (80),                                            CANO 150
         ERROR EXTERNAL CHARACTER (1),                                  CANO 160
         (NCARD,NV) EXTERNAL,                                           CANO 170
         PR  CHARACTER (6),.                                            CANO 180
 /*                                                                   */CANO 190
    ON ENDFILE (SYSIN) GO TO EXIT,.                                     CANO 200
 S100..                                                                 CANO 210
    GET EDIT (CH) (A(80)),.                                             CANO 220
    GET STRING (CH) EDIT (PR,N,MP,MQ,NCARD) (A(6),F(5),3 F(2)),.        CANO 230
 /*                                                                   */CANO 240
 /*      PR.......PROBLEM NUMBER (MAY BE ALPHAMERIC)                  */CANO 250
 /*      N........NUMBER OF OBSERVATIONS                              */CANO 260
 /*      MP.......NUMBER OF LEFT HAND VARIABLES                       */CANO 270
 /*      MQ.......NUMBER OF RIGHT HAND VARIABLES                      */CANO 280
 /*      NCARD....NUMBER OF CARDS PER OBSERVATION                     */CANO 290
 /*                                                                   */CANO 300
    PUT EDIT ('CANONICAL CORRELATION.....',PR,'NO. OF OBSERVATIONS',N,  CANO 310
         'NO. OF LEFT HAND VARIABLES',MP,                               CANO 320
         'NO. OF RIGHT HAND VARIABLES',MQ) (PAGE,COLUMN(10),A,A(6),     CANO 330
         SKIP(1),COLUMN(12),A,X(8),F(4),SKIP(1),COLUMN(12),A,F(5),      CANO 340
         SKIP(1),COLUMN(12),A,F(4)),.                                   CANO 350
    M    =MP+MQ,.                                                       CANO 360
    NCARD=NCARD*80,.                                                    CANO 370
    NV   =0,.                                                           CANO 380
 STRT..                                                                 CANO 390
    BEGIN,.                                                             CANO 400
    DECLARE                                                             CANO 410
         (COEFL(MP,MQ),COEFR(MQ,MQ),R(M,M),RX(M,M),CHISQ(MQ),CANR(MQ),  CANO 420
         STD(M),XBAR(M),X(1,1),B(M),ROOTS(MQ),WLAM(MQ))                 CANO 430
         BINARY FLOAT,                 /*SINGLE PRECISION VERSION  /*S*/CANO 440
  /*     BINARY FLOAT (53),            /*DOUBLE PRECISION VERSION  /*D*/CANO 450
         NDF(MQ)  FIXED BINARY,.                                        CANO 460
    IO   =0,.                                                           CANO 470
    X    =0.0,.                                                         CANO 480
    CALL CORR (N,M,IO,X,XBAR,STD,RX,R,B),.                              CANO 490
    IF ERROR NE '0'                                                     CANO 500
    THEN DO,.                                                           CANO 510
         PUT EDIT ('IN ROUTINE CORR ERROR CODE = ',ERROR)               CANO 520
              (SKIP(2),COLUMN(10),A,A(1)),.                             CANO 530
         GO TO S100,.                                                   CANO 540
         END,.                                                          CANO 550
 /*                                                                   */CANO 560
 /*      PRINT MEANS, STANDARD DEVIATIONS, AND CORRELATION            */CANO 570
 /*      COEFFICIENTS OF ALL VARIABLES                                */CANO 580
 /*                                                                   */CANO 590
    PUT EDIT ('MEANS') (R(FM1)),.                                       CANO 600
 FM1..                                                                  CANO 610
    FORMAT (SKIP(2),COLUMN(10),A),.                                     CANO 620
    PUT EDIT ((XBAR(I) DO I= 1 TO M)) (R(FM2)),.                        CANO 630
 FM2..                                                                  CANO 640
    FORMAT (SKIP,COLUMN(10),7 F(15,5)),.                                CANO 650
    PUT EDIT ('STANDARD DEVIATIONS') (R(FM1)),.                         CANO 660
    PUT EDIT ((STD(I) DO I= 1 TO M)) (R(FM2)),.                         CANO 670
    PUT EDIT ('CORRELATION COEFFICIENTS') (SKIP(2),COLUMN(10),A),.      CANO 680
         DO I = 1 TO M,.                                                CANO 690
         PUT EDIT ('ROW',I) (SKIP(2),COLUMN(10),A,F(4)),.               CANO 700
         PUT EDIT ((R(I,J) DO J= 1 TO M)) (SKIP,COLUMN(10),9 F(12,5)),. CANO 710
         END,.                                                          CANO 720
    CALL CANC (N,MP,MQ,R,ROOTS,WLAM,CANR,CHISQ,NDF,COEFR,COEFL),.       CANO 730
    IF ERROR NE '0'                                                     CANO 740
    THEN DO,.                                                           CANO 750
         PUT EDIT ('IN ROUTINE CANC ERROR CODE = ',ERROR)               CANO 760
              (SKIP(2),COLUMN(10),A,A(1)),.                             CANO 770
         IF ERROR = '1'                                                 CANO 780
         THEN GO TO S100,.                                              CANO 790
         END,.                                                          CANO 800
 /*                                                                   */CANO 810
 /*      PRINT EIGENVALUES, CANONICAL CORRELATIONS, LAMBDA,           */CANO 820
 /*      CHI-SQUARES DEGREES OF FREEDOM                               */CANO 830
 /*                                                                   */CANO 840
    PUT EDIT ('NUMBER OF ','LARGEST','CORRESPONDING','DEGREES',         CANO 850
         'EIGENVALUES','EIGENVALUE','CANONICAL','LAMBDA',               CANO 860
         'CHI-SQUARE','OF','REMOVED','REMAINING','CORRELATION',         CANO 870
         'FREEDOM') (SKIP(4),COLUMN(13),A,X(5),A,X(7),A,X(31),A,        CANO 880
         SKIP,COLUMN(11),A,X(5),A,X(7),A,X(7),A,X(5),A,X(7),A,          CANO 890
         SKIP,COLUMN(13),A,X(7),A,X(7),A,X(32),A),.                     CANO 900
         DO I = 1 TO MQ,.                                               CANO 910
         N1   =I-1,.                                                    CANO 920
 /*                                                                   */CANO 930
 /*      TEST WHETHER EIGENVALUE IS GREATER THAN ZERO                 */CANO 940
 /*                                                                   */CANO 950
         MM   =N1,.                                                     CANO 960
         IF ROOTS(I) GT 0.0                                             CANO 970
         THEN DO,.                                                      CANO 980
              PUT EDIT (N1,ROOTS(I),CANR(I),WLAM(I),CHISQ(I),NDF(I))    CANO 990
                   (SKIP(1),COLUMN(10),F(7),F(19,5),F(16,5),            CANO1000
                   2 F(14,5),X(5),F(5)),.                               CANO1010
              MM   =MQ,.                                                CANO1020
              END,.                                                     CANO1030
         END,.                                                          CANO1040
 /*                                                                   */CANO1050
 /*      PRINT CANONICAL CORRELATION                                  */CANO1060
 /*                                                                   */CANO1070
         DO I = 1 TO MM,.                                               CANO1080
         PUT EDIT ('CANONICAL CORRELATION',CANR(I)) (SKIP(5),COLUMN(10),CANO1090
              A,F(12,5)),.                                              CANO1100
         PUT EDIT ('COEFFICIENTS FOR LEFT HAND VARIABLES') (R(FM1)),.   CANO1110
         PUT EDIT ((COEFL(J,I) DO J= 1 TO MP)) (R(FM2)),.               CANO1120
         PUT EDIT ('COEFFICIENTS FOR RIGHT HAND VARIABLES') (R(FM1)),.  CANO1130
         PUT EDIT ((COEFR(J,I) DO J= 1 TO MQ)) (R(FM2)),.               CANO1140
         END,.                                                          CANO1150
    END,.                                                               CANO1160
    GO TO S100,.                                                        CANO1170
 EXIT..                                                                 CANO1180
    PUT FILE (SYSPRINT) EDIT ('END OF SAMPLE PROGRAM')                  CANO1190
         (SKIP(5),COLUMN(10),A),.                                       CANO1200
    END,.                              /*END OF PROCEDURE CANO        */CANO1210
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 CORR..                                                                 CORR  10
 /*********************************************************************/CORR  20
 /*                                                                   */CORR  30
 /*      TO COMPUTE MEANS, STANDARD DEVIATIONS, SUMS OF CROSS-PRODUCTS*/CORR  40
 /*      OF DEVIATIONS, AND CORRELATION COEFFICIENTS.                 */CORR  50
 /*                                                                   */CORR  60
 /*********************************************************************/CORR  70
    PROCEDURE (N,M,IO,X,XBAR,STD,RX,R,B),.                              CORR  80
    DECLARE                                                             CORR  90
         ERROR EXTERNAL CHARACTER (1),                                  CORR 100
         (I,IO,J,K,KK,M,N)                                              CORR 110
         FIXED BINARY,                                                  CORR 120
         (X(*,*),D(M),FN,FKK)                                           CORR 130
         FLOAT BINARY,                                                  CORR 140
         (R(*,*),RX(*,*),XBAR(*),STD(*),B(*),T(M))                      CORR 150
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/CORR 160
  /*     BINARY FLOAT (53),.           /*DOUBLE PRECISION VERSION  /*D*/CORR 170
 /*                                                                   */CORR 180
    ERROR='0',.                                                         CORR 190
    IF N LE 0 OR M LE 0                /* THE NUMBER OF OBSERVATIONS  */CORR 200
    THEN DO,.                          /* OR THE NUMBER OF VARIABLES  */CORR 210
         ERROR='1',.                   /* ARE LESS THAN OR EQUAL TO   */CORR 220
         GO TO FIN,.                   /* ZERO.                       */CORR 230
         END,.                                                          CORR 240
    FN   =N,.                          /* INITIALIZATION              */CORR 250
    T    =0.0,.                                                         CORR 260
         DO I = 1 TO M,.                                                CORR 270
         B(I) =0.0,.                                                    CORR 280
              DO J = 1 TO M,.                                           CORR 290
              R(I,J)=0.0,.                                              CORR 300
              END,.                                                     CORR 310
         END,.                                                          CORR 320
    IF IO NE 0                                                          CORR 330
    THEN DO,.                                                           CORR 340
              DO J = 1 TO M,.          /* DATA IS ALREADY IN CORE     */CORR 350
                   DO I = 1 TO N,.                                      CORR 360
                   T(J) =T(J)+X(I,J),.                                  CORR 370
                   END,.                                                CORR 380
              XBAR(J)=T(J),.                                            CORR 390
              T(J) =T(J)/FN,.                                           CORR 400
              END,.                                                     CORR 410
              DO I = 1 TO N,.                                           CORR 420
                   DO J = 1 TO M,.                                      CORR 430
                   D(J) =X(I,J)-T(J),.                                  CORR 440
                   B(J) =B(J)+D(J),.                                    CORR 450
                   END,.                                                CORR 460
                   DO J = 1 TO M,.                                      CORR 470
                        DO K = J TO M,.                                 CORR 480
                        R(J,K)=R(J,K)+D(J)*D(K),.                       CORR 490
                        END,.                                           CORR 500
                   END,.                                                CORR 510
              END,.                                                     CORR 520
         GO TO CALC,.                                                   CORR 530
         END,.                                                          CORR 540
 /*                                                                   */CORR 550
 /*      READ OBSERVATIONS AND CALCULATE TEMPORARY MEANS              */CORR 560
 /*                                                                   */CORR 570
    IF N LT M                                                           CORR 580
    THEN KK   =N,.                                                      CORR 590
    ELSE KK   =M,.                                                      CORR 600
    FKK  =KK,.                                                          CORR 610
         DO I = 1 TO KK,.                                               CORR 620
         CALL DAT2 (M,D),.                                              CORR 630
              DO J = 1 TO M,.                                           CORR 640
              T(J) =T(J)+D(J),.                                         CORR 650
              RX(I,J)=D(J),.                                            CORR 660
              END,.                                                     CORR 670
         END,.                                                          CORR 680
         DO J = 1 TO M,.                                                CORR 690
         XBAR(J)=T(J),.                                                 CORR 700
         T(J) =T(J)/FKK,.                                               CORR 710
         END,.                                                          CORR 720
 /*                                                                   */CORR 730
 /*      CALCULATE SUMS OF CROSS-PRODUCTS OF DEVIATIONS FROM          */CORR 740
 /*      TEMPORARY MEANS FOR M OBSERVATIONS.                          */CORR 750
 /*                                                                   */CORR 760
         DO I = 1 TO KK,.                                               CORR 770
              DO J = 1 TO M,.                                           CORR 780
              D(J) =RX(I,J)-T(J),.                                      CORR 790
              END,.                                                     CORR 800
              DO J = 1 TO M,.                                           CORR 810
              B(J) =B(J)+D(J),.                                         CORR 820
                   DO K = J TO M,.                                      CORR 830
                   R(J,K)=R(J,K)+D(J)*D(K),.                            CORR 840
                   END,.                                                CORR 850
              END,.                                                     CORR 860
         END,.                                                          CORR 870
    IF N GT KK                                                          CORR 880
 /*                                                                   */CORR 890
 /*      READ THE REST OF THE OBSERVATIONS ONE AT A TIME, SUM THE     */CORR 900
 /*      OBSERVATIONS, AND CALCULATE SUMS OF CROSS PRODUCTS OF        */CORR 910
 /*      DEVIATIONS FROM TEMPORARY MEANS.                             */CORR 920
 /*                                                                   */CORR 930
    THEN DO,.                                                           CORR 940
              DO I = 1 TO N-KK,.                                        CORR 950
              CALL DAT2 (M,D),.                                         CORR 960
                   DO J = 1 TO M,.                                      CORR 970
                   XBAR(J)=XBAR(J)+D(J),.                               CORR 980
                   D(J) =D(J)-T(J),.                                    CORR 990
                   B(J) =B(J)+D(J),.                                    CORR1000
                   END,.                                                CORR1010
                   DO J = 1 TO M,.                                      CORR1020
                        DO K = J TO M,.                                 CORR1030
                        R(J,K)=R(J,K)+D(J)*D(K),.                       CORR1040
                        END,.                                           CORR1050
                   END,.                                                CORR1060
              END,.                                                     CORR1070
         END,.                                                          CORR1080
 /*                                                                   */CORR1090
 /*      ADJUST SUMS OF CROSS-PRODUCTS OF DEVIATIONS FROM TEMP. MEANS */CORR1100
 /*                                                                   */CORR1110
 CALC..                                                                 CORR1120
         DO I = 1 TO M,.                                                CORR1130
         XBAR(I)=XBAR(I)/FN,.          /* CALCULATE MEANS.            */CORR1140
              DO J = I TO M,.                                           CORR1150
              RX(I,J)=R(I,J)-B(I)*B(J)/FN,.                             CORR1160
              RX(J,I)=RX(I,J),.                                         CORR1170
              END,.                                                     CORR1180
         STD(I)=SQRT(ABS(RX(I,I))),.                                    CORR1190
 /*                                                                   */CORR1200
 /*    COPY THE DIAGONAL OF THE MATRIX OF SUMS OF CROSS PRODUCTS OF   */CORR1210
 /*    DEVIATIONS FROM THE MEANS.                                     */CORR1220
 /*                                                                   */CORR1230
         B(I) =RX(I,I),.                                                CORR1240
         END,.                                                          CORR1250
 /*                                                                   */CORR1260
 /*      COMPUTE CORRELATION COEFFICIENTS                             */CORR1270
 /*                                                                   */CORR1280
         DO J = 1 TO M,.                                                CORR1290
              DO K = J TO M,.                                           CORR1300
              FKK  =STD(J)*STD(K),.                                     CORR1310
              IF FKK= 0.0                                               CORR1320
              THEN DO,.                                                 CORR1330
                   ERROR='2',.         /* SOME VARIANCES ARE ZERO     */CORR1340
                   R(J,K)=0.0,.                                         CORR1350
                   END,.                                                CORR1360
              ELSE R(J,K)=RX(J,K)/FKK,.                                 CORR1370
              R(K,J)=R(J,K),.                                           CORR1380
              END,.                                                     CORR1390
         END,.                                                          CORR1400
 /*                                                                   */CORR1410
 /*      COMPUTE STANDARD DEVIATIONS                                  */CORR1420
 /*                                                                   */CORR1430
         IF N=1                                                         CORR1440
         THEN DO,.                                                      CORR1450
              DO I=1 TO N,.                                             CORR1460
              STD(I)    =0,.                                            CORR1470
              END,.                                                     CORR1480
              GO TO FIN,.                                               CORR1490
              END,.                                                     CORR1500
         FN   =SQRT(N-1),.                                              CORR1510
         DO I = 1 TO M,.                                                CORR1520
         STD(I)=STD(I)/FN,.                                             CORR1530
         END,.                                                          CORR1540
 FIN..                                                                  CORR1550
    RETURN,.                                                            CORR1560
    END,.                              /*END OF PROCEDURE CORR        */CORR1570
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 CANC..                                                                 CANC  10
 /*********************************************************************/CANC  20
 /*                                                                   */CANC  30
 /*      TO COMPUTE THE CANONICAL CORRELATIONS BETWEEN TWO SETS OF    */CANC  40
 /*      VARIABLES.                                                   */CANC  50
 /*                                                                   */CANC  60
 /*********************************************************************/CANC  70
    PROCEDURE (N,MP,MQ,RR,ROOTS,WLAM,CANR,CHISQ,NDF,COEFR,COEFL),.      CANC  80
    DECLARE                                                             CANC  90
         ERROR EXTERNAL CHARACTER (1),                                  CANC 100
         (NDF(*),I,J,K,L,M,MP,MQ,N,N1,IERR)                             CANC 110
         FIXED BINARY,                                                  CANC 120
         (RR(*,*),ROOTS(*),WLAM(*),CANR(*),CHISQ(*),COEFR(*,*),         CANC 130
         COEFL(*,*),DET,BAT,CON)                                        CANC 140
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/CANC 150
  /*     BINARY FLOAT (53),.           /*DOUBLE PRECISION VERSION  /*D*/CANC 160
 /*                                                                   */CANC 170
 /*      CHECK WHETHER THE NUMBER OF LEFT-HAND VARIABLES IS EQUAL TO  */CANC 180
 /*      OR GREATER THAN THAT OF RIGHT-HAND                           */CANC 190
 /*                                                                   */CANC 200
    ERROR='0',.                                                         CANC 210
    IERR =0,.                                                           CANC 220
    IF MP LE 0 OR MQ LE 0              /* THERE ARE NO RIGHT OR LEFT  */CANC 230
    THEN DO,.                          /* HAND VARIABLES.             */CANC 240
         ERROR='1',.                                                    CANC 250
         GO TO FIN,.                                                    CANC 260
         END,.                                                          CANC 270
    IF MP LT MQ                                                         CANC 280
    THEN DO,.                                                           CANC 290
         M    =MP,.                                                     CANC 300
         MP   =MQ,.                                                     CANC 310
         MQ   =M,.                                                      CANC 320
         ERROR='2',.                                                    CANC 330
         END,.                                                          CANC 340
 COPY..                                                                 CANC 350
    BEGIN,.                                                             CANC 360
    DECLARE                                                             CANC 370
         (R(MP,MP),T(MP,MQ),A(MQ,MQ),X(MQ,MQ))                          CANC 380
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/CANC 390
  /*     BINARY FLOAT(53),.            /*DOUBLE PRECISION VERSION  /*D*/CANC 400
 /*                                                                   */CANC 410
 /*      PARTITION INTERCORRELATIONS AMONG LEFT HAND VARIABLES,BETWEEN*/CANC 420
 /*      LEFT AND RIGHT HAND VARIABLES, AND AMONG RIGHT HAND VARIABLES*/CANC 430
 /*                                                                   */CANC 440
    M    =MP+MQ,.                                                       CANC 450
    FM   =M+1,.                                                         CANC 460
    FN   =N,.                                                           CANC 470
    IF ERROR= '2'                                                       CANC 480
    THEN DO,.                                                           CANC 490
         IERR =1,.                                                      CANC 500
         K    =0,.                     /* CHANGE LEFT AND RIGHT HAND  */CANC 510
              DO I = MQ+1 TO M,.       /* VARIABLES                   */CANC 520
              K    =K+1,.                                               CANC 530
              L    =0,.                                                 CANC 540
                   DO J = MQ+1 TO M,.                                   CANC 550
                   L    =L+1,.                                          CANC 560
                                       /* RR 22 INTO R                */CANC 570
              R(K,L)=RR(I,J),.                                          CANC 580
                   END,.                                                CANC 590
                                       /* RR 21 INTO COEFL            */CANC 600
                   DO J = 1 TO MQ,.                                     CANC 610
                   COEFL(K,J)=RR(I,J),.                                 CANC 620
                   END,.                                                CANC 630
              END,.                                                     CANC 640
              DO I = 1 TO MQ,.                                          CANC 650
                   DO J = 1 TO MQ,.                                     CANC 660
                                       /* RR 11 INTO COEFR            */CANC 670
                  COEFR(I,J)=RR(I,J),.                                  CANC 680
                   END,.                                                CANC 690
              END,.                                                     CANC 700
         END,.                                                          CANC 710
    ELSE DO,.                                                           CANC 720
              DO I = 1 TO M,.                                           CANC 730
                   DO J = 1 TO M,.                                      CANC 740
                   IF I LE MP AND J LE MP                               CANC 750
                   THEN DO,.                                            CANC 760
                                       /* RR 11 INTO R                */CANC 770
                        R(I,J)=RR(I,J),.                                CANC 780
                        GO TO S10,.                                     CANC 790
                        END,.                                           CANC 800
                   IF I LE MP AND J GT MP                               CANC 810
                   THEN DO,.                                            CANC 820
                        K    =J-MP,.                                    CANC 830
                                       /* RR 12 INTO COEFL            */CANC 840
                        COEFL(I,K)=RR(I,J),.                            CANC 850
                        GO TO S10,.                                     CANC 860
                        END,.                                           CANC 870
                   IF I GT MP AND J GT MP                               CANC 880
                   THEN DO,.                                            CANC 890
                        L    =I-MP,.                                    CANC 900
                        K    =J-MP,.                                    CANC 910
                                       /* RR 22 INTO COEFR            */CANC 920
                        COEFR(L,K)=RR(I,J),.                            CANC 930
                        END,.                                           CANC 940
 S10..                                                                  CANC 950
                   END,.                                                CANC 960
              END,.                                                     CANC 970
 /*                                                                   */CANC 980
 /*      SOLVE THE CANONICAL EQUATION                                 */CANC 990
 /*                                                                   */CANC1000
         CON  =0,.                                                      CANC1010
         CALL MINV (R,MP,DET,CON),.                                     CANC1020
         IF ERROR NE '0'                                                CANC1030
         THEN DO,.                                                      CANC1040
              ERROR='3',.                                               CANC1050
              GO TO FIN,.                                               CANC1060
              END,.                                                     CANC1070
 /*                                                                   */CANC1080
 /*      CALCULATE T = INVERSE OF RR 11 * RR 12                       */CANC1090
 /*                                                                   */CANC1100
              DO I = 1 TO MP,.                                          CANC1110
                   DO J = 1 TO MQ,.                                     CANC1120
                   T(I,J)=0.0,.                                         CANC1130
                        DO K = 1 TO MP,.                                CANC1140
                        T(I,J)=T(I,J)+R(I,K)*COEFL(K,J),.               CANC1150
                        END,.                                           CANC1160
                   END,.                                                CANC1170
              END,.                                                     CANC1180
 /*                                                                   */CANC1190
 /*      CALCULATE  A = RR 21 * T                                     */CANC1200
 /*                                                                   */CANC1210
              DO I = 1 TO MQ,.                                          CANC1220
                   DO J = 1 TO MQ,.                                     CANC1230
                   A(I,J)=0.0,.                                         CANC1240
                        DO K = 1 TO MP,.                                CANC1250
                        A(I,J)=A(I,J)+COEFL(K,I)*T(K,J),.               CANC1260
                        END,.                                           CANC1270
                   END,.                                                CANC1280
              END,.                                                     CANC1290
 /*                                                                   */CANC1300
 /*      CALCULATE EIGENVALUES WITH ASSOCIATED EIGENVECTORS OF THE    */CANC1310
 /*      INVERSE OF R 22 * A                                          */CANC1320
 /*                                                                   */CANC1330
         CALL MGDU (MQ,A,COEFR,ROOTS,X),.                               CANC1340
         IF ERROR NE '0'                                                CANC1350
         THEN DO,.                                                      CANC1360
              ERROR='4',.              /* ERROR CONDITION IN ROUTINE  */CANC1370
              GO TO FIN,.              /* MSDU.                       */CANC1380
              END,.                                                     CANC1390
         IF IERR= '1'                                                   CANC1400
         THEN ERROR='2',.                                               CANC1410
 /*                                                                   */CANC1420
 /*      TEST WHETHER EIGENVALUES ARE GREATER THAN 0.0 BUT LESS THAN  */CANC1430
 /*      1.0                                                          */CANC1440
 /*                                                                   */CANC1450
              DO I = 1 TO MQ,.                                          CANC1460
              IF ROOTS(I) LE 0.0 OR ROOTS(I) GE 1.0                     CANC1470
              THEN DO,.                                                 CANC1480
                   ERROR='5',.         /* CANONICAL CORRELATION CANNOT*/CANC1490
                   GO TO FIN,.         /* BE COMPUTED                 */CANC1500
                   END,.                                                CANC1510
              END,.                                                     CANC1520
 /*                                                                   */CANC1530
 /*      FOR EACH VALUE OF I = 1,2,...,MQ CALCULATE THE STATISTICS    */CANC1540
 /*      NOTED BELOW.                                                 */CANC1550
 /*                                                                   */CANC1560
              DO I = 1 TO MQ,.                                          CANC1570
                                       /* CANONICAL CORRELATION       */CANC1580
              CANR(I)=SQRT(ROOTS(I)),.                                  CANC1590
              WLAM(I)=1.0,.                                             CANC1600
                   DO J = I TO MQ,.                                     CANC1610
                   WLAM(I)=WLAM(I)*(1.0-ROOTS(J)),.                     CANC1620
                   END,.                                                CANC1630
              BAT  =WLAM(I),.          /* CHI-SQUARE                  */CANC1640
              CHISQ(I)=-(FN-0.5*FM)*LOG(BAT),.                          CANC1650
 /*                                                                   */CANC1660
 /*      CALCULATE DEGREES OF FREEDOM FOR CHI-SQUARE                  */CANC1670
 /*                                                                   */CANC1680
              N1  =I-1,.                                                CANC1690
              NDF(I)=(MP-N1)*(MQ-N1),.                                  CANC1700
 /*                                                                   */CANC1710
 /*      I-TH SET OF RIGHT HAND COEFICIENTS                           */CANC1720
 /*                                                                   */CANC1730
                   DO J = 1 TO MQ,.                                     CANC1740
                   COEFR(J,I)=X(J,I),.                                  CANC1750
                   END,.                                                CANC1760
 /*                                                                   */CANC1770
 /*      I-TH SET OF LEFT HAND COEFFICIENTS                           */CANC1780
 /*                                                                   */CANC1790
                   DO J = 1 TO MP,.                                     CANC1800
                   DET  =0.0,.                                          CANC1810
                        DO K = 1 TO MQ,.                                CANC1820
                        DET  =DET+T(J,K)*COEFR(K,I),.                   CANC1830
                        END,.                                           CANC1840
                   COEFL(J,I)=DET/CANR(I),.                             CANC1850
                   END,.                                                CANC1860
              END,.                                                     CANC1870
         END,.                                                          CANC1880
    END,.                                                               CANC1890
 FIN..                                                                  CANC1900
    RETURN,.                                                            CANC1910
    END,.                              /*END OF PROCEDURE CANC        */CANC1920
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 MINV..                                                                 MINV  10
 /*********************************************************************/MINV  20
 /*                                                                   */MINV  30
 /*      TO INVERT A MATRIX                                           */MINV  40
 /*                                                                   */MINV  50
 /*********************************************************************/MINV  60
    PROCEDURE (A,N,D,CON),.                                             MINV  70
    DECLARE                                                             MINV  80
         ERROR EXTERNAL CHARACTER(1),                                   MINV  90
         (I,J,K,N,L(N),M(N))                                            MINV 100
         FIXED BINARY,                                                  MINV 110
         (A(*,*),BIGA,HOLD,D,CON,S)                                     MINV 120
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/MINV 130
  /*     BINARY FLOAT (53),.           /*DOUBLE PRECISION VERSION  /*D*/MINV 140
 /*                                                                   */MINV 150
    ERROR='0',.                                                         MINV 160
    IF N LE 0                                                           MINV 170
    THEN DO,.                                                           MINV 180
         ERROR='1',.                   /* ORDER OF MATRIX = 0.        */MINV 190
         GO TO FIN,.                                                    MINV 200
         END,.                                                          MINV 210
    IF CON= 0                                                           MINV 220
    THEN S    =1.0E-5,.                /* SINGLE PRECISION VERSION /*S*/MINV 230
  /*THEN S    =1.0E-15,.               /* DOUBLE PRECISION VERSION /*D*/MINV 240
    ELSE S    =CON,.                                                    MINV 250
    IF N = 1                           /* INVERT A SCALAR             */MINV 260
    THEN DO,.                                                           MINV 270
         D    =A(1,1),.                                                 MINV 280
         IF ABS(D) LE S                                                 MINV 290
         THEN DO,.                                                      MINV 300
              ERROR='2',.                                               MINV 310
              END,.                                                     MINV 320
         ELSE A(1,1) = 1/D,.                                            MINV 330
         GO TO FIN,.                                                    MINV 340
         END,.                                                          MINV 350
    D    =1.0,.                        /* SEARCH FOR LARGEST ELEMENT  */MINV 360
         DO K = 1 TO N,.                                                MINV 370
         L(K) =K,.                                                      MINV 380
         M(K) =K,.                                                      MINV 390
         BIGA =A(K,K),.                                                 MINV 400
              DO I=K TO N,.                                             MINV 410
                   DO J=K TO N,.                                        MINV 420
                   IF ABS(BIGA) LT ABS(A(I,J))                          MINV 430
                   THEN DO,.                                            MINV 440
                        BIGA =A(I,J),.                                  MINV 450
                        L(K) =I,.                                       MINV 460
                        M(K) =J,.                                       MINV 470
                        END,.                                           MINV 480
                   END,.                                                MINV 490
              END,.                                                     MINV 500
         J    =L(K),.                  /* INTERCHANGE ROWS            */MINV 510
         IF L(K) GT K                                                   MINV 520
         THEN DO,.                                                      MINV 530
                   DO I = 1 TO N,.                                      MINV 540
                   HOLD =-A(K,I),.                                      MINV 550
                   A(K,I)=A(J,I),.                                      MINV 560
                   A(J,I)=HOLD,.                                        MINV 570
                   END,.                                                MINV 580
              END,.                                                     MINV 590
         I    =M(K),.                  /* INTERCHANGE COLUMNS         */MINV 600
         IF M(K) GT K                                                   MINV 610
         THEN DO,.                                                      MINV 620
                   DO J = 1 TO N,.                                      MINV 630
                   HOLD =-A(J,K),.                                      MINV 640
                   A(J,K)=A(J,I),.                                      MINV 650
                   A(J,I)=HOLD,.                                        MINV 660
                   END,.                                                MINV 670
              END,.                                                     MINV 680
         IF ABS(BIGA) LE S                                              MINV 690
         THEN DO,.                                                      MINV 700
              D    =0.0,.                                               MINV 710
              GO TO COMP,.                                              MINV 720
              END,.                                                     MINV 730
 /*                                                                   */MINV 740
 /*      DIVIDE COLUMNS BY MINUS PIVOT (VALUE OF PIVOT ELEMENT IS     */MINV 750
 /*      CONTAINED IN BIGA)                                           */MINV 760
              DO I = 1 TO N,.                                           MINV 770
              IF I NE K                                                 MINV 780
              THEN A(I,K)=A(I,K)/(-A(K,K)),.                            MINV 790
              END,.                                                     MINV 800
              DO I = 1 TO N,.          /* REDUCE MATRIX               */MINV 810
              IF I NE K                                                 MINV 820
              THEN DO,.                                                 MINV 830
                        DO J = 1 TO N,.                                 MINV 840
                        IF J NE K                                       MINV 850
                        THEN A(I,J)=A(I,K)*A(K,J)+A(I,J),.              MINV 860
                        END,.                                           MINV 870
                   END,.                                                MINV 880
              END,.                                                     MINV 890
              DO J = 1 TO N,.                                           MINV 900
              IF J NE K                /* DIVIDE BY ROW PIVOT         */MINV 910
              THEN A(K,J)=A(K,J)/A(K,K),.                               MINV 920
              END,.                                                     MINV 930
         D    =D*A(K,K),.              /* COMPUTE DETERMINANT         */MINV 940
 COMP..                                                                 MINV 950
         IF ABS(D) LE S                                                 MINV 960
         THEN DO,.                                                      MINV 970
              ERROR='2',.              /* DETERMINANT IS ZERO         */MINV 980
              GO TO FIN,.                                               MINV 990
              END,.                                                     MINV1000
         A(K,K)=1.0/A(K,K),.           /* REPLACE PIVOT BY RECIPROCAL */MINV1010
         END,.                                                          MINV1020
 /*                                                                   */MINV1030
 /*      FINAL ROW AND COLUMN INTERCHANGE                             */MINV1040
 /*                                                                   */MINV1050
    K    =N,.                                                           MINV1060
 LOOP..                                                                 MINV1070
    K    =K-1,.                                                         MINV1080
    IF K GT 0                                                           MINV1090
    THEN DO,.                                                           MINV1100
         I    =L(K),.                                                   MINV1110
         IF I GT K                                                      MINV1120
         THEN DO,.                                                      MINV1130
                   DO J = 1 TO N,.                                      MINV1140
                   HOLD =A(J,K),.                                       MINV1150
                   A(J,K)=-A(J,I),.                                     MINV1160
                   A(J,I)=HOLD,.                                        MINV1170
                   END,.                                                MINV1180
              END,.                                                     MINV1190
         J    =M(K),.                                                   MINV1200
         IF J GT K                                                      MINV1210
         THEN DO,.                                                      MINV1220
                   DO I = 1 TO N,.                                      MINV1230
                   HOLD =A(K,I),.                                       MINV1240
                   A(K,I)=-A(J,I),.                                     MINV1250
                   A(J,I)=HOLD,.                                        MINV1260
                   END,.                                                MINV1270
              END,.                                                     MINV1280
         GO TO LOOP,.                                                   MINV1290
         END,.                                                          MINV1300
 FIN..                                                                  MINV1310
    RETURN,.                                                            MINV1320
    END,.                              /*END OF PROCEDURE MINV        */MINV1330
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 MGDU..                                                                 MGDU  10
 /*********************************************************************/MGDU  20
 /*                                                                   */MGDU  30
 /*      TO COMPUTE EIGENVALUES AND EIGENVECTORS OF A REAL NONSYMM-   */MGDU  40
 /*      ETRIC MATRIX OF THE FORM B INVERSE TIMES A.                  */MGDU  50
 /*                                                                   */MGDU  60
 /*********************************************************************/MGDU  70
    PROCEDURE (M,A,B,XL,X),.                                            MGDU  80
    DECLARE                                                             MGDU  90
         (I,J,M,MV,K)                                                   MGDU 100
         FIXED BINARY,                                                  MGDU 110
         ERROR EXTERNAL CHARACTER(1),                                   MGDU 120
         (A(*,*),B(*,*),X(*,*),XL(*),SUMV)                              MGDU 130
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/MGDU 140
  /*     BINARY FLOAT(53),.            /*DOUBLE PRECISION VERSION  /*D*/MGDU 150
 /*                                                                   */MGDU 160
 /*      COMPUTE EIGENVALUES AND EIGENVECTORS OF B                    */MGDU 170
 /*                                                                   */MGDU 180
 /*      THE MATRIX B IS A REAL SYMMETRIC MATRIX.                     */MGDU 190
 /*                                                                   */MGDU 200
    MV   =0,.                                                           MGDU 210
    CALL MSDU (B,X,M,MV),.                                              MGDU 220
    IF ERROR NE '0'                                                     MGDU 230
    THEN GO TO FIN,.                                                    MGDU 240
 /*                                                                   */MGDU 250
 /*      FORM RECIPROCALS OF SQUARE ROOT OF EIGENVALUES. THE RESULTS  */MGDU 260
 /*      ARE PREMULTIPLIED BY THE ASSOCIATED EIGENVECTORS.            */MGDU 270
 /*                                                                   */MGDU 280
         DO I = 1 TO M,.                                                MGDU 290
         XL(I)=1.0/SQRT(ABS(B(I,I))),.                                  MGDU 300
              DO J = 1 TO M,.                                           MGDU 310
              B(J,I)=X(J,I)*XL(I),.                                     MGDU 320
              END,.                                                     MGDU 330
         END,.                                                          MGDU 340
 /*                                                                   */MGDU 350
 /*      FORM (B**(-1/2))PRIME * A * (B**(-1/2))                      */MGDU 360
 /*                                                                   */MGDU 370
         DO I = 1 TO M,.                                                MGDU 380
              DO J = 1 TO M,.                                           MGDU 390
              X(I,J)=0.0,.                                              MGDU 400
                   DO K = 1 TO M,.                                      MGDU 410
                   X(I,J)=X(I,J)+B(K,I)*A(K,J),.                        MGDU 420
                   END,.                                                MGDU 430
              END,.                                                     MGDU 440
         END,.                                                          MGDU 450
         DO I = 1 TO M,.                                                MGDU 460
              DO J = 1 TO M,.                                           MGDU 470
              A(I,J)=0.0,.                                              MGDU 480
                   DO K = 1 TO M,.                                      MGDU 490
                   A(I,J)=A(I,J)+X(I,K)*B(K,J),.                        MGDU 500
                   END,.                                                MGDU 510
              END,.                                                     MGDU 520
         END,.                                                          MGDU 530
 /*                                                                   */MGDU 540
 /*      COMPUTE EIGENVALUES AND EIGENVECTORS OF A                    */MGDU 550
 /*                                                                   */MGDU 560
    CALL MSDU (A,X,M,MV),.                                              MGDU 570
         DO I = 1 TO M,.                                                MGDU 580
         XL(I)=A(I,I),.                                                 MGDU 590
 /*                                                                   */MGDU 600
 /*      COMPUTE THE NORMALIZED EIGENVECTORS                          */MGDU 610
 /*                                                                   */MGDU 620
              DO J = 1 TO M,.                                           MGDU 630
              A(I,J)=0.0,.                                              MGDU 640
                   DO K = 1 TO M,.                                      MGDU 650
                   A(I,J)=A(I,J)+B(I,K)*X(K,J),.                        MGDU 660
                   END,.                                                MGDU 670
              END,.                                                     MGDU 680
         END,.                                                          MGDU 690
         DO J = 1 TO M,.                                                MGDU 700
         SUMV =0.0,.                                                    MGDU 710
              DO K = 1 TO M,.                                           MGDU 720
              SUMV =SUMV+A(K,J)*A(K,J),.                                MGDU 730
              END,.                                                     MGDU 740
         SUMV =SQRT(SUMV),.                                             MGDU 750
              DO K = 1 TO M,.                                           MGDU 760
              X(K,J)=A(K,J)/SUMV,.                                      MGDU 770
              END,.                                                     MGDU 780
         END,.                                                          MGDU 790
 FIN..                                                                  MGDU 800
    RETURN,.                                                            MGDU 810
    END,.                              /*END OF PROCEDURE MGDU        */MGDU 820
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 MSDU..                                                                 MSDU  10
 /*********************************************************************/MSDU  20
 /*                                                                   */MSDU  30
 /*      TO COMPUTE EIGENVALUES AND EIGENVECTORS OF A REAL SYMMETRIC  */MSDU  40
 /*      MATRIX                                                       */MSDU  50
 /*                                                                   */MSDU  60
 /*********************************************************************/MSDU  70
    PROCEDURE (A,R,N,MV),.                                              MSDU  80
    DECLARE                                                             MSDU  90
         (I,IND,J,L,M,MV,N)                                             MSDU 100
         FIXED BINARY,                                                  MSDU 110
         ERROR EXTERNAL CHARACTER(1),                                   MSDU 120
         (A(*,*),R(*,*),ANORM,ANRMX,THR,U,Y,SINX,SINX2,COSX,COSX2,SINCS,MSDU 130
         FN)                                                            MSDU 140
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/MSDU 150
  /*     BINARY FLOAT (53),.           /*DOUBLE PRECISION VERSION  /*D*/MSDU 160
 /*                                                                   */MSDU 170
    ERROR='0',.                                                         MSDU 180
    IF N LE 1                          /* THE ORDER OF MATRIX A IS    */MSDU 190
    THEN DO,.                          /* LESS THAN OR EQUAL TO ONE.  */MSDU 200
         ERROR='1',.                                                    MSDU 210
         GO TO FIN,.                                                    MSDU 220
         END,.                                                          MSDU 230
    FN   =N,.                                                           MSDU 240
    IF MV= 0                                                            MSDU 250
    THEN DO,.                                                           MSDU 260
              DO I = 1 TO N,.          /* GENERATE IDENTITY MATRIX    */MSDU 270
                   DO J = 1 TO N,.                                      MSDU 280
                  R(I,J)=0,.                                            MSDU 290
                   END,.                                                MSDU 300
              R(I,I)=1,.                                                MSDU 310
              END,.                                                     MSDU 320
         END,.                                                          MSDU 330
 /*                                                                   */MSDU 340
 /*      COMPUTE INITIAL AND FINAL NORM                               */MSDU 350
 /*                                                                   */MSDU 360
    ANORM=0,.                                                           MSDU 370
         DO I = 1 TO N-1,.                                              MSDU 380
              DO J = I+1 TO N,.                                         MSDU 390
              ANORM=ANORM+A(I,J)*A(I,J),.                               MSDU 400
              END,.                                                     MSDU 410
         END,.                                                          MSDU 420
    IF ANORM LE 0.0                                                     MSDU 430
    THEN GO TO SORT,.                                                   MSDU 440
    ANORM=1.414*SQRT(ANORM),.                                           MSDU 450
    ANRMX=ANORM*1.0E-6/FN,.                                             MSDU 460
 /*                                                                   */MSDU 470
 /*      INITIALIZE INDICATOR AND COMPUTE THRESHOLD, THR              */MSDU 480
 /*                                                                   */MSDU 490
    IND  =0,.                                                           MSDU 500
    THR  =ANORM,.                                                       MSDU 510
 S10..                                                                  MSDU 520
    THR  =THR/FN,.                                                      MSDU 530
 S20..                                                                  MSDU 540
    L    =1,.                                                           MSDU 550
 S30..                                                                  MSDU 560
    M    =L+1,.                                                         MSDU 570
 S40..                                                                  MSDU 580
    IF ABS(A(L,M)) GE THR              /* COMPUTE SIN AND COS         */MSDU 590
    THEN DO,.                                                           MSDU 600
         IND  =1,.                                                      MSDU 610
         U    =0.5*(A(L,L)-A(M,M)),.                                    MSDU 620
         Y    =-A(L,M)/SQRT(A(L,M)*A(L,M)+U*U),.                        MSDU 630
         IF U LT 0.0                                                    MSDU 640
         THEN Y    =-Y,.                                                MSDU 650
         SINX =Y/SQRT(2.0*(1.0+(SQRT(1.0-Y*Y)))),.                      MSDU 660
         SINX2=SINX*SINX,.                                              MSDU 670
         COSX =SQRT(1.0-SINX2),.                                        MSDU 680
         COSX2=COSX*COSX,.                                              MSDU 690
         SINCS=SINX*COSX,.                                              MSDU 700
              DO I = 1 TO N,.          /* ROTATE L AND M COLUMNS      */MSDU 710
              IF I LT L                                                 MSDU 720
              THEN DO,.                                                 MSDU 730
                   IF I LT M                                            MSDU 740
                   THEN DO,.                                            MSDU 750
                        U    =A(I,L)*COSX-A(I,M)*SINX,.                 MSDU 760
                        A(I,M)=A(I,L)*SINX+A(I,M)*COSX,.                MSDU 770
                        A(I,L)=U,.                                      MSDU 780
                        END,.                                           MSDU 790
                   END,.                                                MSDU 800
              ELSE IF I GT L                                            MSDU 810
              THEN DO,.                                                 MSDU 820
                   IF I LT M                                            MSDU 830
                   THEN DO,.                                            MSDU 840
                        U    =A(L,I)*COSX-A(I,M)*SINX,.                 MSDU 850
                        A(I,M)=A(L,I)*SINX+A(I,M)*COSX,.                MSDU 860
                        END,.                                           MSDU 870
                   ELSE IF I GT M                                       MSDU 880
                   THEN DO,.                                            MSDU 890
                        U    =A(L,I)*COSX-A(M,I)*SINX,.                 MSDU 900
                        A(M,I)=A(L,I)*SINX+A(M,I)*COSX,.                MSDU 910
                        END,.                                           MSDU 920
                   IF I NE M                                            MSDU 930
                   THEN A(L,I)=U,.                                      MSDU 940
                   END,.                                                MSDU 950
              IF MV= 0                                                  MSDU 960
              THEN DO,.                                                 MSDU 970
                   U    =R(I,L)*COSX-R(I,M)*SINX,.                      MSDU 980
                   R(I,M)=R(I,L)*SINX+R(I,M)*COSX,.                     MSDU 990
                   R(I,L)=U,.                                           MSDU1000
                   END,.                                                MSDU1010
              END,.                                                     MSDU1020
         U    =2.0*A(L,M)*SINCS,.                                       MSDU1030
         Y    =A(L,L)*COSX2+A(M,M)*SINX2-U,.                            MSDU1040
         U    =A(L,L)*SINX2+A(M,M)*COSX2+U,.                            MSDU1050
         A(L,M)=(A(L,L)-A(M,M))*SINCS+A(L,M)*(COSX2-SINX2),.            MSDU1060
         A(L,L)=Y,.                                                     MSDU1070
         A(M,M)=U,.                                                     MSDU1080
         END,.                                                          MSDU1090
    IF M NE N                          /* TEST FOR M = LAST COLUMN    */MSDU1100
    THEN DO,.                                                           MSDU1110
         M    =M+1,.                                                    MSDU1120
         GO TO S40,.                                                    MSDU1130
         END,.                                                          MSDU1140
 /*                                                                   */MSDU1150
 /*      TEST FOR L = SECOND FROM LAST COLUMN                         */MSDU1160
 /*                                                                   */MSDU1170
    IF L NE N-1                                                         MSDU1180
    THEN DO,.                                                           MSDU1190
         L    =L+1,.                                                    MSDU1200
         GO TO S30,.                                                    MSDU1210
         END,.                                                          MSDU1220
    IF IND= 1                                                           MSDU1230
    THEN DO,.                                                           MSDU1240
         IND  =0,.                                                      MSDU1250
         GO TO S20,.                                                    MSDU1260
         END,.                                                          MSDU1270
 /*                                                                   */MSDU1280
 /*      COMPARE THRESHOLD WITH FINAL NORM                            */MSDU1290
 /*                                                                   */MSDU1300
    IF THR GT ANRMX                                                     MSDU1310
    THEN GO TO S10,.                                                    MSDU1320
 /*                                                                   */MSDU1330
 /*      SORT EIGENVALUES AND EIGENVECTORS                            */MSDU1340
 /*                                                                   */MSDU1350
 SORT..                                                                 MSDU1360
         DO I = 1 TO N,.                                                MSDU1370
              DO J = I TO N,.                                           MSDU1380
              IF A(I,I) LT A(J,J)                                       MSDU1390
              THEN DO,.                                                 MSDU1400
                   U    =A(I,I),.                                       MSDU1410
                   A(I,I)=A(J,J),.                                      MSDU1420
                   A(J,J)=U,.                                           MSDU1430
                   IF MV= 0                                             MSDU1440
                   THEN DO,.                                            MSDU1450
                             DO L = 1 TO N,.                            MSDU1460
                             U    =R(L,I),.                             MSDU1470
                             R(L,I)=R(L,J),.                            MSDU1480
                             R(L,J)=U,.                                 MSDU1490
                             END,.                                      MSDU1500
                        END,.                                           MSDU1510
                   END,.                                                MSDU1520
              END,.                                                     MSDU1530
         END,.                                                          MSDU1540
 FIN..                                                                  MSDU1550
    RETURN,.                                                            MSDU1560
    END,.                              /*END OF PROCEDURE MSDU        */MSDU1570
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 DAT2..                                                                 DAT2  10
 /*********************************************************************/DAT2  20
 /*                                                                   */DAT2  30
 /*      TO READ FLOATING POINT DATA, ONE OBSERVATION AT A TIME.      */DAT2  40
 /*      DATA MAY BE SAVED ON A DATA SET.                             */DAT2  50
 /*                                                                   */DAT2  60
 /*********************************************************************/DAT2  70
    PROCEDURE (M,D),.                                                   DAT2  80
    DECLARE                                                             DAT2  90
         XDATA FILE STREAM ENVIRONMENT (CONSECUTIVE V(2000,200)),       DAT2 100
         (NCARD,NV) EXTERNAL,                                           DAT2 110
         CH CHARACTER(NCARD),                                           DAT2 120
         (I,M,MM) FIXED BINARY,                                         DAT2 130
         D(*) FLOAT BINARY,.                                            DAT2 140
 /*                                                                   */DAT2 150
    ON ENDFILE (SYSIN)                                                  DAT2 160
    GO TO EXIT,.                                                        DAT2 170
    GET EDIT (CH) (A(NCARD)),.                                          DAT2 180
    MM   =CEIL(M/12),.                                                  DAT2 190
    GET STRING (CH) EDIT ((D(I) DO I= 1 TO M))                          DAT2 200
         ((MM)((12)F(6,0),X(8))),.                                      DAT2 210
    IF NV= 1                                                            DAT2 220
    THEN PUT FILE (XDATA) EDIT ((D(I) DO I= 1 TO M)) ((M)F(6,0)),.      DAT2 230
    REVERT ENDFILE (SYSIN),.                                            DAT2 240
    RETURN,.                                                            DAT2 250
 EXIT..                                                                 DAT2 260
    PUT FILE (SYSPRINT) EDIT ('ERROR  INSUFFICIENT DATA')               DAT2 270
         (SKIP(1),COLUMN(10),A),.                                       DAT2 280
    STOP,.                                                              DAT2 290
    END,.                              /*END OF PROCEDURE DAT2        */DAT2 300
/*
//GO.SYSIN DD *
SAMPLE00023040301                                                             10
   191   155    65    19   179   145    70                                    20
   195   149    70    20   201   152    69                                    30
   181   148    71    19   185   149    75                                    40
   183   153    82    18   188   149    86                                    50
   176   144    67    18   171   142    71                                    60
   208   157    81    22   192   152    77                                    70
   189   150    75    21   190   149    72                                    80
   197   159    90    20   189   152    82                                    90
   188   152    76    19   197   159    84                                   100
   192   150    78    20   187   151    72                                   110
   179   158    99    18   186   148    89                                   120
   183   147    65    18   174   147    70                                   130
   174   150    71    19   185   152    65                                   140
   190   159    91    19   195   157    99                                   150
   188   151    98    20   187   158    87                                   160
   163   137    59    18   161   130    63                                   170
   195   155    85    20   183   158    81                                   180
   196   153    80    21   173   148    74                                   190
   181   145    77    20   182   146    70                                   200
   175   140    70    19   165   137    81                                   210
   192   154    69    20   185   152    63                                   220
   174   143    79    20   178   147    73                                   230
   176   139    70    20   176   143    69                                   240
/*
