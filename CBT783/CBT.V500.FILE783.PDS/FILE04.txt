//JOBC  JOB 111-1111,'SSP PL/1',MSGLEVEL=1
//STEP EXEC PL1LFCLG,PARM.PL1L='NOLIST,NOATR,NOXREF,CHAR48'
//PL1L.SYSIN  DD  *
 STEP..                                                                 STEP  10
 /*********************************************************************/STEP  20
 /*                                                                   */STEP  30
 /*      TO READ THE PROBLEM PARAMETER CARD FOR A STEP-WISE REGRESSION*/STEP  40
 /*      READ SUBSET SELECTION CARD, CALL THE PROCEDURES TO CALCULATE */STEP  50
 /*      MEANS, STANDARD DEVIATIONS, AND THE PROCEDURE THAT PERFORMS  */STEP  60
 /*      STEP-WISE REGRESSION.                                        */STEP  70
 /*                                                                   */STEP  80
 /*********************************************************************/STEP  90
    PROCEDURE OPTIONS (MAIN),.                                          STEP 100
    DECLARE                                                             STEP 110
         XDATA FILE STREAM ENVIRONMENT (CONSECUTIVE V(2000,200)),       STEP 120
         (I,IO,J,K,KK,M,MM,N,NR,NS,NSEL) FIXED BINARY,                  STEP 130
         PR1  CHARACTER (6),                                            STEP 140
         (NCARD,NV) EXTERNAL,                                           STEP 150
         ERROR EXTERNAL CHARACTER (1),                                  STEP 160
         CH   CHARACTER (80),.                                          STEP 170
 /*                                                                   */STEP 180
    ON ENDFILE (SYSIN) GO TO EXIT,.                                     STEP 190
 S100..                                                                 STEP 200
    GET EDIT (CH) (A(80)),.                                             STEP 210
    GET STRING (CH) EDIT  (PR1,N,M,NS,PCT,NR,NCARD) (A(6),F(5),2 F(2),  STEP 220
         F(6,0),F(1),F(2)),.                                            STEP 230
 /*                                                                   */STEP 240
 /*      READ PROBLEM PARAMETER CARD                                  */STEP 250
 /*                                                                   */STEP 260
 /*      PR1 - PROBLEM CODE (MAY BE ALPHAMERIC)                       */STEP 270
 /*      N   - NUMBER OF OBSERVATIONS                                 */STEP 280
 /*      M   - NUMBER OF VARIABLES                                    */STEP 290
 /*      NS  - NUMBER OF SELECTIONS                                   */STEP 300
 /*      PCT - A CONSTANT VALUE OF PROPORTION OF SUM OF SQUARES THAT  */STEP 310
 /*            WILL BE USED TO LIMIT VARIABLES ENTERING IN THE REGRES-*/STEP 320
 /*            SION                                                   */STEP 330
 /*      NR  - OPTION CODE FOR TABLE OF RESIDUALS                     */STEP 340
 /*             0 - IF IT IS NOT DESIRED                              */STEP 350
 /*             1 - IF IT IS DESIRED                                  */STEP 360
 /*      NCARD - NUMBER OF DATA CARDS PER OBSERVATION                 */STEP 370
 /*                                                                   */STEP 380
    NV   =NR,.                                                          STEP 390
    NCARD=NCARD*80,.                                                    STEP 400
 /*                                                                   */STEP 410
    PUT EDIT ('STEP-WISE MULTIPLE REGRESSION.....',PR1)                 STEP 420
         (PAGE,COLUMN(10),A,A),.                                        STEP 430
    PUT SKIP(2),.                                                       STEP 440
    PUT EDIT ('NUMBER OF OBSERVATIONS',N) (R(FM1)),.                    STEP 450
    PUT EDIT ('NUMBER OF VARIABLES   ',M) (R(FM1)),.                    STEP 460
    PUT EDIT ('NUMBER OF SELECTIONS  ',NS) (R(FM1)),.                   STEP 470
 FM1..                                                                  STEP 480
    FORMAT (SKIP(1),COLUMN(10),A,F(5)),.                                STEP 490
    PUT EDIT ('CONSTANT TO LIMIT VARIABLE',PCT)                         STEP 500
         (SKIP(2),COLUMN(10),A,F(9,5)),.                                STEP 510
 ONE..                                                                  STEP 520
    BEGIN,.                                                             STEP 530
    DECLARE                                                             STEP 540
         (XBAR(M),STD(M),D(M),B(M),RX(M,M),R(M,M),ANS(11),X(1,1),       STEP 550
         RESI,YEST)                                                     STEP 560
         BINARY FLOAT,                 /*SINGLE PRECISION VERSION  /*S*/STEP 570
  /*     BINARY FLOAT (53),            /*DOUBLE PRECISION VERSION  /*D*/STEP 580
         (IDX(M),L(M),NSTEP(5)) FIXED BINARY,.                          STEP 590
    IO   =0,.                                                           STEP 600
    X    =0,.                                                           STEP 610
    OPEN FILE (XDATA) OUTPUT,.                                          STEP 620
    CALL CORR (N,M,IO,X,XBAR,STD,RX,R,B),.                              STEP 630
    CLOSE FILE (XDATA),.                                                STEP 640
    IF ERROR NE '0'                                                     STEP 650
    THEN PUT EDIT ('IN ROUTINE CORR ERROR CODE = ',ERROR)               STEP 660
         (SKIP(2),COLUMN(10),A,A(1)),.                                  STEP 670
 /*                                                                   */STEP 680
 /*      PRINT MEANS AND STANDARD DEVIATION                           */STEP 690
 /*                                                                   */STEP 700
    PUT EDIT ('VARIABLE','MEAN','STANDARD','NO.','DEVIATION')           STEP 710
         (SKIP(2),COLUMN(10),A,X(5),A,X(5),A,SKIP,COLUMN(13),A,X(16)    STEP 720
         ,A),.                                                          STEP 730
         DO I = 1 TO M,.                                                STEP 740
         PUT EDIT (I,XBAR(I),STD(I)) (SKIP,COLUMN(13),F(2),F(14,5),     STEP 750
              F(12,5)),.                                                STEP 760
         END,.                                                          STEP 770
 /*                                                                   */STEP 780
 /*      PRINT CORRELATION MATRIX                                     */STEP 790
 /*                                                                   */STEP 800
    PUT EDIT ('CORRELATION MATRIX') (SKIP(2),COLUMN(10),A),.            STEP 810
         DO I = 1 TO M,.                                                STEP 820
         PUT EDIT ('ROW',I) (SKIP(2),COLUMN(10),A,F(3)),.               STEP 830
         PUT EDIT ((R(I,J) DO J= 1 TO M)) (SKIP,COLUMN(10),9 F(12,5)),. STEP 840
         END,.                                                          STEP 850
    IF NS LE 0                         /* TEST NUMBER OF SELECTIONS   */STEP 860
    THEN DO,.                                                           STEP 870
         PUT EDIT ('NUMBER OF SELECTIONS NOT SPECIFIED')                STEP 880
              (SKIP(2),COLUMN(10),A),.                                  STEP 890
         GO TO S200,.                                                   STEP 900
         END,.                                                          STEP 910
 /*                                                                   */STEP 920
 /*      SAVE THE MATRIX OF SUMS OF CROSS-PRODUCTS OF DEVIATION       */STEP 930
 /*                                                                   */STEP 940
    R    =RX,.                                                          STEP 950
    NSEL =1,.                                                           STEP 960
    GO TO S150,.                                                        STEP 970
 /*                                                                   */STEP 980
 /*      COPY THE MATRIX OF SUMS OF CROSS-PRODUCTS OF DEVIATIONS      */STEP 990
 /*                                                                   */STEP1000
 S145..                                                                 STEP1010
         RX   =R,.                                                      STEP1020
 S150..                                /* READ A SELECTION CARD       */STEP1030
    PUT EDIT ('SELECTION.....',NSEL) (SKIP(3),COLUMN(10),A,F(2)),.      STEP1040
    CALL IDT2 (M,IDX),.                                                 STEP1050
 /*                                                                   */STEP1060
 /*      IN EACH POSITION OF IDX, ONE OF THE FOLLOWING CODES MUST BE  */STEP1070
 /*      SPECIFIED.                                                   */STEP1080
 /*        0 OR BLANK - INDEPENDENT VARIABLE AVAILABLE FOR SELECTION  */STEP1090
 /*        1          - INDEPENDENT VARIABLE TO BE FORCED IN REGRES-  */STEP1100
 /*                     SION                                          */STEP1110
 /*        2          - VARIABLE TO BE DELETED                        */STEP1120
 /*        3          - DEPENDENT VARIABLE                            */STEP1130
 /*                                                                   */STEP1140
 /*      CALL THE PROCEDURE TO PERFORM A STEP-WISE REGRESSION ANALYSIS*/STEP1150
 /*                                                                   */STEP1160
    CALL STRG (M,N,RX,XBAR,IDX,PCT,NSTEP,ANS,L,B,STD),.                 STEP1170
    IF ERROR NE '0'                                                     STEP1180
    THEN PUT EDIT ('IN ROUTINE STRG ERROR CODE = ',ERROR)               STEP1190
         (SKIP(2),COLUMN(10),A,A(1)),.                                  STEP1200
 /*                                                                   */STEP1210
 /*      FIND WHETHER TO PRINT THE TABLE OF RESIDUALS                 */STEP1220
 /*                                                                   */STEP1230
    IF NR LE 0                                                          STEP1240
    THEN GO TO S185,.                                                   STEP1250
 /*                                                                   */STEP1260
 /*      PRINT TABLE OF RESIDUALS                                     */STEP1270
 /*                                                                   */STEP1280
    PUT EDIT ('STEP-WISE MULTIPLE REGRESSION.....',PR1)                 STEP1290
         (PAGE,COLUMN(10),A,A),.                                        STEP1300
    PUT EDIT ('SELECTION.....',NSEL) (SKIP(3),COLUMN(10),A,F(2)),.      STEP1310
    PUT EDIT ('TABLE OF RESIDUALS','CASE NO.','Y VALUE','Y ESTIMATE',   STEP1320
         'RESIDUAL')                                                    STEP1330
         (SKIP(2),COLUMN(26),A,SKIP(2),COLUMN(10),A,X(5),A,X(5),A,      STEP1340
         X(6),A),.                                                      STEP1350
    MM   =NSTEP(1),.                                                    STEP1360
    OPEN FILE (XDATA) INPUT,.                                           STEP1370
         DO I = 1 TO N,.                                                STEP1380
         GET FILE (XDATA) EDIT ((D(J) DO J= 1 TO M)) ((M)F(6,0)),.      STEP1390
         YEST =ANS(9),.                                                 STEP1400
         K    =NSTEP(4),.                                               STEP1410
              DO J = 1 TO K,.                                           STEP1420
              KK   =L(J),.                                              STEP1430
              YEST =YEST+B(J)*D(KK),.                                   STEP1440
              END,.                                                     STEP1450
         RESI =D(MM)-YEST,.                                             STEP1460
         PUT EDIT (I,D(MM) ,YEST,RESI) (COLUMN(10),F(5),F(15,5),        STEP1470
              2 F(14,5)),.                                              STEP1480
         END,.                                                          STEP1490
    CLOSE FILE (XDATA),.                                                STEP1500
 /*                                                                   */STEP1510
 /*      TEST WHETHER ALL SELECTIONS ARE COMPLETED                    */STEP1520
 /*                                                                   */STEP1530
 S185..                                                                 STEP1540
    IF NSEL LT NS                                                       STEP1550
    THEN DO,.                                                           STEP1560
         NSEL =NSEL+1,.                                                 STEP1570
         PUT EDIT ('STEP-WISE MULTIPLE REGRESSION.....',PR1)            STEP1580
              (PAGE,COLUMN(10),A,A),.                                   STEP1590
         GO TO S145,.                                                   STEP1600
         END,.                                                          STEP1610
    END,.                                                               STEP1620
    GO TO S100,.                                                        STEP1630
 EXIT..                                                                 STEP1640
    PUT FILE (SYSPRINT) EDIT ('END OF SAMPLE PROGRAM')                  STEP1650
         (SKIP(5),COLUMN(10),A),.                                       STEP1660
 S200..                                                                 STEP1670
    END,.                              /*END OF PROCEDURE STEP        */STEP1680
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 CORR..                                                                 CORR  10
 /*********************************************************************/CORR  20
 /*                                                                   */CORR  30
 /*      TO COMPUTE MEANS, STANDARD DEVIATIONS, SUMS OF CROSS-PRODUCTS*/CORR  40
 /*      OF DEVIATIONS, AND CORRELATION COEFFICIENTS.                 */CORR  50
 /*                                                                   */CORR  60
 /*********************************************************************/CORR  70
    PROCEDURE (N,M,IO,X,XBAR,STD,RX,R,B),.                              CORR  80
    DECLARE                                                             CORR  90
         ERROR EXTERNAL CHARACTER (1),                                  CORR 100
         (I,IO,J,K,KK,M,N)                                              CORR 110
         FIXED BINARY,                                                  CORR 120
         (X(*,*),D(M),FN,FKK)                                           CORR 130
         FLOAT BINARY,                                                  CORR 140
         (R(*,*),RX(*,*),XBAR(*),STD(*),B(*),T(M))                      CORR 150
         BINARY FLOAT,.                /*SINGLE PRECISION VERSION  /*S*/CORR 160
  /*     BINARY FLOAT (53),.           /*DOUBLE PRECISION VERSION  /*D*/CORR 170
 /*                                                                   */CORR 180
    ERROR='0',.                                                         CORR 190
    IF N LE 0 OR M LE 0                /* THE NUMBER OF OBSERVATIONS  */CORR 200
    THEN DO,.                          /* OR THE NUMBER OF VARIABLES  */CORR 210
         ERROR='1',.                   /* ARE LESS THAN OR EQUAL TO   */CORR 220
         GO TO FIN,.                   /* ZERO.                       */CORR 230
         END,.                                                          CORR 240
    FN   =N,.                          /* INITIALIZATION              */CORR 250
    T    =0.0,.                                                         CORR 260
         DO I = 1 TO M,.                                                CORR 270
         B(I) =0.0,.                                                    CORR 280
              DO J = 1 TO M,.                                           CORR 290
              R(I,J)=0.0,.                                              CORR 300
              END,.                                                     CORR 310
         END,.                                                          CORR 320
    IF IO NE 0                                                          CORR 330
    THEN DO,.                                                           CORR 340
              DO J = 1 TO M,.          /* DATA IS ALREADY IN CORE     */CORR 350
                   DO I = 1 TO N,.                                      CORR 360
                   T(J) =T(J)+X(I,J),.                                  CORR 370
                   END,.                                                CORR 380
              XBAR(J)=T(J),.                                            CORR 390
              T(J) =T(J)/FN,.                                           CORR 400
              END,.                                                     CORR 410
              DO I = 1 TO N,.                                           CORR 420
                   DO J = 1 TO M,.                                      CORR 430
                   D(J) =X(I,J)-T(J),.                                  CORR 440
                   B(J) =B(J)+D(J),.                                    CORR 450
                   END,.                                                CORR 460
                   DO J = 1 TO M,.                                      CORR 470
                        DO K = J TO M,.                                 CORR 480
                        R(J,K)=R(J,K)+D(J)*D(K),.                       CORR 490
                        END,.                                           CORR 500
                   END,.                                                CORR 510
              END,.                                                     CORR 520
         GO TO CALC,.                                                   CORR 530
         END,.                                                          CORR 540
 /*                                                                   */CORR 550
 /*      READ OBSERVATIONS AND CALCULATE TEMPORARY MEANS              */CORR 560
 /*                                                                   */CORR 570
    IF N LT M                                                           CORR 580
    THEN KK   =N,.                                                      CORR 590
    ELSE KK   =M,.                                                      CORR 600
    FKK  =KK,.                                                          CORR 610
         DO I = 1 TO KK,.                                               CORR 620
         CALL DAT2 (M,D),.                                              CORR 630
              DO J = 1 TO M,.                                           CORR 640
              T(J) =T(J)+D(J),.                                         CORR 650
              RX(I,J)=D(J),.                                            CORR 660
              END,.                                                     CORR 670
         END,.                                                          CORR 680
         DO J = 1 TO M,.                                                CORR 690
         XBAR(J)=T(J),.                                                 CORR 700
         T(J) =T(J)/FKK,.                                               CORR 710
         END,.                                                          CORR 720
 /*                                                                   */CORR 730
 /*      CALCULATE SUMS OF CROSS-PRODUCTS OF DEVIATIONS FROM          */CORR 740
 /*      TEMPORARY MEANS FOR M OBSERVATIONS.                          */CORR 750
 /*                                                                   */CORR 760
         DO I = 1 TO KK,.                                               CORR 770
              DO J = 1 TO M,.                                           CORR 780
              D(J) =RX(I,J)-T(J),.                                      CORR 790
              END,.                                                     CORR 800
              DO J = 1 TO M,.                                           CORR 810
              B(J) =B(J)+D(J),.                                         CORR 820
                   DO K = J TO M,.                                      CORR 830
                   R(J,K)=R(J,K)+D(J)*D(K),.                            CORR 840
                   END,.                                                CORR 850
              END,.                                                     CORR 860
         END,.                                                          CORR 870
    IF N GT KK                                                          CORR 880
 /*                                                                   */CORR 890
 /*      READ THE REST OF THE OBSERVATIONS ONE AT A TIME, SUM THE     */CORR 900
 /*      OBSERVATIONS, AND CALCULATE SUMS OF CROSS PRODUCTS OF        */CORR 910
 /*      DEVIATIONS FROM TEMPORARY MEANS.                             */CORR 920
 /*                                                                   */CORR 930
    THEN DO,.                                                           CORR 940
              DO I = 1 TO N-KK,.                                        CORR 950
              CALL DAT2 (M,D),.                                         CORR 960
                   DO J = 1 TO M,.                                      CORR 970
                   XBAR(J)=XBAR(J)+D(J),.                               CORR 980
                   D(J) =D(J)-T(J),.                                    CORR 990
                   B(J) =B(J)+D(J),.                                    CORR1000
                   END,.                                                CORR1010
                   DO J = 1 TO M,.                                      CORR1020
                        DO K = J TO M,.                                 CORR1030
                        R(J,K)=R(J,K)+D(J)*D(K),.                       CORR1040
                        END,.                                           CORR1050
                   END,.                                                CORR1060
              END,.                                                     CORR1070
         END,.                                                          CORR1080
 /*                                                                   */CORR1090
 /*      ADJUST SUMS OF CROSS-PRODUCTS OF DEVIATIONS FROM TEMP. MEANS */CORR1100
 /*                                                                   */CORR1110
 CALC..                                                                 CORR1120
         DO I = 1 TO M,.                                                CORR1130
         XBAR(I)=XBAR(I)/FN,.          /* CALCULATE MEANS.            */CORR1140
              DO J = I TO M,.                                           CORR1150
              RX(I,J)=R(I,J)-B(I)*B(J)/FN,.                             CORR1160
              RX(J,I)=RX(I,J),.                                         CORR1170
              END,.                                                     CORR1180
         STD(I)=SQRT(ABS(RX(I,I))),.                                    CORR1190
 /*                                                                   */CORR1200
 /*    COPY THE DIAGONAL OF THE MATRIX OF SUMS OF CROSS PRODUCTS OF   */CORR1210
 /*    DEVIATIONS FROM THE MEANS.                                     */CORR1220
 /*                                                                   */CORR1230
         B(I) =RX(I,I),.                                                CORR1240
         END,.                                                          CORR1250
 /*                                                                   */CORR1260
 /*      COMPUTE CORRELATION COEFFICIENTS                             */CORR1270
 /*                                                                   */CORR1280
         DO J = 1 TO M,.                                                CORR1290
              DO K = J TO M,.                                           CORR1300
              FKK  =STD(J)*STD(K),.                                     CORR1310
              IF FKK= 0.0                                               CORR1320
              THEN DO,.                                                 CORR1330
                   ERROR='2',.         /* SOME VARIANCES ARE ZERO     */CORR1340
                   R(J,K)=0.0,.                                         CORR1350
                   END,.                                                CORR1360
              ELSE R(J,K)=RX(J,K)/FKK,.                                 CORR1370
              R(K,J)=R(J,K),.                                           CORR1380
              END,.                                                     CORR1390
         END,.                                                          CORR1400
 /*                                                                   */CORR1410
 /*      COMPUTE STANDARD DEVIATIONS                                  */CORR1420
 /*                                                                   */CORR1430
         IF N=1                                                         CORR1440
         THEN DO,.                                                      CORR1450
              DO I=1 TO N,.                                             CORR1460
              STD(I)    =0,.                                            CORR1470
              END,.                                                     CORR1480
              GO TO FIN,.                                               CORR1490
              END,.                                                     CORR1500
         FN   =SQRT(N-1),.                                              CORR1510
         DO I = 1 TO M,.                                                CORR1520
         STD(I)=STD(I)/FN,.                                             CORR1530
         END,.                                                          CORR1540
 FIN..                                                                  CORR1550
    RETURN,.                                                            CORR1560
    END,.                              /*END OF PROCEDURE CORR        */CORR1570
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 STRG..                                                                 STRG  10
 /*********************************************************************/STRG  20
 /*                                                                   */STRG  30
 /*      TO PERFORM A STEP-WISE MULTIPLE REGRESSION ANALYSIS FOR A    */STRG  40
 /*      DEPENDENT VARIABLE AND A SET OF INDEPENDENT VARIABLES.       */STRG  50
 /*                                                                   */STRG  60
 /*********************************************************************/STRG  70
    PROCEDURE (M,N,D,XBAR,IDX,PCT,NSTEP,ANS,L,B,STD),.                  STRG  80
    DECLARE                                                             STRG  90
         (I,ID,IJ,IK,J,K,KK,M,MK,MX,MY,N,NEW,NFO,NZ,NSTEP(*),IDX(*),    STRG 100
         L(*),LL(M))                                                    STRG 110
         FIXED BINARY,                                                  STRG 120
         (D(*,*),XBAR(*),ANS(*),B(*),STD(*),T(M),S(M),BETA(M),RE)       STRG 130
         BINARY FLOAT,                 /*SINGLE PRECISION VERSION  /*S*/STRG 140
  /*     BINARY FLOAT (53),            /*DOUBLE PRECISION VERSION  /*D*/STRG 150
         (PCT,ONM,RD)                                                   STRG 160
         FLOAT BINARY,                                                  STRG 170
         (ERROR,NSTOP) EXTERNAL CHARACTER (1),.                         STRG 180
 /*                                                                   */STRG 190
    ERROR='0',.                        /* INITIALIZATION              */STRG 200
    IF M LE 1 OR N LE M+1              /* THE NUMBER OF VARIABLES M IS*/STRG 210
    THEN DO,.                          /* NOT GREATER THAN 1 OR THE   */STRG 220
         ERROR='1',.                   /* NUMBER OF OBSERVATIONS N IS */STRG 230
         GO TO S150,.                  /* NOT GREATER THAN M+1        */STRG 240
         END,.                                                          STRG 250
    IF PCT GE 1.0                                                       STRG 260
    THEN DO,.                                                           STRG 270
         ERROR='4',.                   /* SPECIFIED CONSTANT IS       */STRG 280
         GO TO S150,.                  /* GREATER THAN OR = 1.0       */STRG 290
         END,.                                                          STRG 300
    ONM  =N-1,.                                                         STRG 310
    NFO  =0,.                                                           STRG 320
    NSTEP(3)=0,.                                                        STRG 330
    ANS(3)=0,.                                                          STRG 340
    ANS(4)=0,.                                                          STRG 350
    NSTOP='0',.                                                         STRG 360
 /*                                                                   */STRG 370
 /*      FIND DEPENDENT VARIABLE, NUMBER OF VARIABLES TO BE FORCED TO */STRG 380
 /*      ENTER IN THE REGRESSION, AND THE NUMBER OF VARIABLES TO BE   */STRG 390
 /*      DELETED                                                      */STRG 400
 /*                                                                   */STRG 410
         DO I = 1 TO M,.                                                STRG 420
         LL(I)=1,.                                                      STRG 430
         IF IDX(I) LE 0                                                 STRG 440
         THEN GO TO S10,.                                               STRG 450
         IF IDX(I) LT 2                                                 STRG 460
         THEN DO,.                                                      STRG 470
              NFO  =NFO+1,.                                             STRG 480
              IDX(NFO)=I,.                                              STRG 490
              GO TO S10,.                                               STRG 500
              END,.                                                     STRG 510
         ELSE IF IDX(I)= 2                                              STRG 520
         THEN DO,.                                                      STRG 530
              NSTEP(3)=NSTEP(3)+1,.                                     STRG 540
              LL(I)=-1,.                                                STRG 550
              GO TO S10,.                                               STRG 560
              END,.                                                     STRG 570
         MY   =I,.                                                      STRG 580
         NSTEP(1)=MY,.                                                  STRG 590
         ANS(5)=D(MY,MY),.                                              STRG 600
 S10..                                                                  STRG 610
         END,.                                                          STRG 620
    NSTEP(2)=NFO,.                                                      STRG 630
 /*                                                                   */STRG 640
 /*      FIND THE MAXIMUM NUMBER OF STEPS                             */STRG 650
 /*                                                                   */STRG 660
    MX   =M-NSTEP(3)-1,.                                                STRG 670
 /*                                                                   */STRG 680
 /*      START SELECTION OF VARIABLES                                 */STRG 690
 /*                                                                   */STRG 700
         DO NZ = 1 TO MX,.                                              STRG 710
         IF N-NZ-1 LE 0                                                 STRG 720
         THEN DO,.                                                      STRG 730
              ERROR='3',.              /* DEGREES OF FREEDOM IS 0     */STRG 740
              GO TO S150,.                                              STRG 750
              END,.                                                     STRG 760
         RD   =0,.                                                      STRG 770
         IF NZ GT NFO                                                   STRG 780
 /*                                                                   */STRG 790
 /*      SELECT NEXT VARIABLE TO ENTER AMONG FORCED VARIABLES         */STRG 800
 /*                                                                   */STRG 810
         THEN GO TO S20,.                                               STRG 820
              DO I = 1 TO NFO,.                                         STRG 830
              K    =IDX(I),.                                            STRG 840
              IF LL(K) GT 0                                             STRG 850
              THEN DO,.                                                 STRG 860
                   RE   =D(K,MY)**2/D(K,K),.                            STRG 870
                   IF RD LT RE                                          STRG 880
                   THEN DO,.                                            STRG 890
                        RD   =RE,.                                      STRG 900
                        NEW  =K,.                                       STRG 910
                        END,.                                           STRG 920
                   END,.                                                STRG 930
              END,.                                                     STRG 940
         GO TO S25,.                                                    STRG 950
 /*                                                                   */STRG 960
 /*      SELECT NEXT VARIABLE TO ENTER AMONG NON-FORCED VARIABLES     */STRG 970
 /*                                                                   */STRG 980
 S20..                                                                  STRG 990
              DO I = 1 TO M,.                                           STRG1000
              IF I NE MY                                                STRG1010
              THEN DO,.                                                 STRG1020
                   IF LL(I) GT 0                                        STRG1030
                   THEN DO,.                                            STRG1040
                        RE   =D(I,MY)**2/D(I,I),.                       STRG1050
                        IF RD LT RE                                     STRG1060
                        THEN DO,.                                       STRG1070
                             RD   =RE,.                                 STRG1080
                             NEW  =I,.                                  STRG1090
                             END,.                                      STRG1100
                        END,.                                           STRG1110
                   END,.                                                STRG1120
              END,.                                                     STRG1130
 S25..                                                                  STRG1140
         IF RD LE 0 OR  ANS(5) LE ANS(3)+RD                             STRG1150
         THEN DO,.                                                      STRG1160
              ERROR='2',.              /* NEGATIVE SUM OF SQUARES     */STRG1170
              GO TO S150,.                                              STRG1180
              END,.                                                     STRG1190
         RE   =RD/ANS(5),.                                              STRG1200
 /*                                                                   */STRG1210
 /*      TEST WHETHER THE PROPORTION OF THE SUM OF SQUARES REDUCED BY */STRG1220
 /*      THE LAST VARIABLE ENTERED IS GREATER THAN OR EQUAL TO THE    */STRG1230
 /*      SPECIFIED PROPORTION                                         */STRG1240
 /*                                                                   */STRG1250
         IF RE LT PCT                                                   STRG1260
         THEN GO TO S150,.                                              STRG1270
         LL(NEW)=0,.                   /* IT IS GREATER THAN OR EQUAL */STRG1280
         L(NZ)=NEW,.                                                    STRG1290
         ANS(1)=RD,.                                                    STRG1300
         ANS(2)=RE,.                                                    STRG1310
         ANS(3)=ANS(3)+RD,.                                             STRG1320
         ANS(4)=ANS(4)+RE,.                                             STRG1330
         NSTEP(4)=NZ,.                                                  STRG1340
         NSTEP(5)=NEW,.                                                 STRG1350
 /*                                                                   */STRG1360
 /*      COMPUTE MULTIPLE CORRELATION, F-VALUE FOR ANALYSIS OF        */STRG1370
 /*      VARIANCE, AND STANDARD ERROR OF ESTIMATE                     */STRG1380
 /*                                                                   */STRG1390
         ANS(6)=SQRT(ANS(4)),.                                          STRG1400
         RD   =NZ,.                                                     STRG1410
         RE   =ONM-RD,.                                                 STRG1420
         RE   =(ANS(5)-ANS(3))/RE,.                                     STRG1430
         ANS(7)=(ANS(3)/RD)/RE,.                                        STRG1440
         ANS(8)=SQRT(RE),.                                              STRG1450
 /*                                                                   */STRG1460
 /*      DIVIDE BY THE PIVOTAL ELEMENT                                */STRG1470
 /*                                                                   */STRG1480
         RD   =D(NEW,NEW),.                                             STRG1490
              DO J = 1 TO M,.                                           STRG1500
              IF LL(J) LT 0                                             STRG1510
              THEN GO TO S40,.                                          STRG1520
              ELSE IF LL(J) GT 0                                        STRG1530
              THEN GO TO S30,.                                          STRG1540
              IF J = NEW                                                STRG1550
              THEN DO,.                                                 STRG1560
                   D(NEW,NEW)=1/RD,.                                    STRG1570
                   GO TO S40,.                                          STRG1580
                   END,.                                                STRG1590
              D(J,J)=D(J,J)+D(NEW,J)**2/RD,.                            STRG1600
 S30..                                                                  STRG1610
              D(NEW,J)=D(NEW,J)/RD,.                                    STRG1620
 S40..                                                                  STRG1630
              END,.                                                     STRG1640
 /*                                                                   */STRG1650
 /*      COMPUTE REGRESSION COEFFICIENTS                              */STRG1660
 /*                                                                   */STRG1670
         B(NZ)=D(NEW,MY),.                                              STRG1680
         IF NZ GT 1                                                     STRG1690
         THEN DO,.                                                      STRG1700
              ID   =NZ-1,.                                              STRG1710
                   DO J = 1 TO ID,.                                     STRG1720
                   IJ   =NZ-J,.                                         STRG1730
                   KK   =L(IJ),.                                        STRG1740
                   B(IJ)=D(KK,MY),.                                     STRG1750
                        DO K = 1 TO J,.                                 STRG1760
                        IK   =NZ-K+1,.                                  STRG1770
                        MK   =L(IK),.                                   STRG1780
                        B(IJ)=B(IJ)-D(KK,MK)*B(IK),.                    STRG1790
                        END,.                                           STRG1800
                   END,.                                                STRG1810
              END,.                                                     STRG1820
         ANS(9)=XBAR(MY),.             /* COMPUTE INTERCEPT           */STRG1830
              DO I = 1 TO NZ,.                                          STRG1840
              KK   =L(I),.                                              STRG1850
              ANS(9)=ANS(9)-B(I)*XBAR(KK),.                             STRG1860
              S(I) =ANS(8)*SQRT(D(KK,KK)),.                             STRG1870
              T(I) =B(I)/S(I),.                                         STRG1880
              BETA(I)=B(I)*STD(KK)/STD(MY),.                            STRG1890
              END,.                                                     STRG1900
 /*                                                                   */STRG1910
 /*      PERFORM A REDUCTION TO ELIMINATE THE LAST VARIABLE ENTERED   */STRG1920
 /*                                                                   */STRG1930
              DO I = 1 TO M,.                                           STRG1940
              IF LL(I) GT 0                                             STRG1950
              THEN DO,.                                                 STRG1960
                        DO J = 1 TO M,.                                 STRG1970
                        IF LL(J) GE 0                                   STRG1980
                        THEN DO,.                                       STRG1990
                             IF J NE NEW                                STRG2000
                             THEN D(I,J)=D(I,J)-D(I,NEW)*D(NEW,J),.     STRG2010
                             END,.                                      STRG2020
                        END,.                                           STRG2030
                   D(I,NEW)=D(I,NEW)/(-RD),.                            STRG2040
                   END,.                                                STRG2050
              END,.                                                     STRG2060
 /*                                                                   */STRG2070
 /*      ADJUST STANDARD ERROR OF THE ESTIMATE AND MULTIPLE           */STRG2080
 /*      CORRELATION COEFFICIENT                                      */STRG2090
 /*                                                                   */STRG2100
         RD   =N-NSTEP(4),.                                             STRG2110
         RD   =ONM/RD,.                                                 STRG2120
         ANS(10)=SQRT(1-(1-ANS(6)**2)*RD),.                             STRG2130
         ANS(11)=ANS(8)*SQRT(RD),.                                      STRG2140
         CALL SOUT (NSTEP,ANS,L,B,S,T,BETA),.                           STRG2150
 /*                                                                   */STRG2160
 /*      TEST WHETHER THE STEP-WISE REGRESSION WAS TERMINATED         */STRG2170
 /*      IN PROCEDURE SOUT.                                           */STRG2180
 /*                                                                   */STRG2190
         IF NSTOP GT '0'                                                STRG2200
         THEN GO TO S150,.                                              STRG2210
         END,.                                                          STRG2220
 S150..                                                                 STRG2230
    RETURN,.                                                            STRG2240
    END,.                              /*END OF PROCEDURE STRG        */STRG2250
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 DAT2..                                                                 DAT2  10
 /*********************************************************************/DAT2  20
 /*                                                                   */DAT2  30
 /*      TO READ FLOATING POINT DATA, ONE OBSERVATION AT A TIME.      */DAT2  40
 /*      DATA MAY BE SAVED ON A DATA SET.                             */DAT2  50
 /*                                                                   */DAT2  60
 /*********************************************************************/DAT2  70
    PROCEDURE (M,D),.                                                   DAT2  80
    DECLARE                                                             DAT2  90
         XDATA FILE STREAM ENVIRONMENT (CONSECUTIVE V(2000,200)),       DAT2 100
         (NCARD,NV) EXTERNAL,                                           DAT2 110
         CH CHARACTER(NCARD),                                           DAT2 120
         (I,M,MM) FIXED BINARY,                                         DAT2 130
         D(*) FLOAT BINARY,.                                            DAT2 140
 /*                                                                   */DAT2 150
    ON ENDFILE (SYSIN)                                                  DAT2 160
    GO TO EXIT,.                                                        DAT2 170
    GET EDIT (CH) (A(NCARD)),.                                          DAT2 180
    MM   =CEIL(M/12),.                                                  DAT2 190
    GET STRING (CH) EDIT ((D(I) DO I= 1 TO M))                          DAT2 200
         ((MM)((12)F(6,0),X(8))),.                                      DAT2 210
    IF NV= 1                                                            DAT2 220
    THEN PUT FILE (XDATA) EDIT ((D(I) DO I= 1 TO M)) ((M)F(6,0)),.      DAT2 230
    REVERT ENDFILE (SYSIN),.                                            DAT2 240
    RETURN,.                                                            DAT2 250
 EXIT..                                                                 DAT2 260
    PUT FILE (SYSPRINT) EDIT ('ERROR  INSUFFICIENT DATA')               DAT2 270
         (SKIP(1),COLUMN(10),A),.                                       DAT2 280
    STOP,.                                                              DAT2 290
    END,.                              /*END OF PROCEDURE DAT2        */DAT2 300
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 IDT2..                                                                 IDT2  10
 /*********************************************************************/IDT2  20
 /*                                                                   */IDT2  30
 /*      TO READ FIXED POINT DATA.                                    */IDT2  40
 /*                                                                   */IDT2  50
 /*********************************************************************/IDT2  60
    PROCEDURE (M,IX),.                                                  IDT2  70
    DECLARE                                                             IDT2  80
         CH CHARACTER (80),                                             IDT2  90
         (IX(*),NF,N1,N2,M,I)                                           IDT2 100
         FIXED BINARY,.                                                 IDT2 110
    NF   =72,.                                                          IDT2 120
    N1   =1,.                                                           IDT2 130
    N2   =NF,.                                                          IDT2 140
 S10..                                                                  IDT2 150
    IF M LE N2                                                          IDT2 160
    THEN N2   =M,.                                                      IDT2 170
    GET EDIT (CH) (A(80)),.                                             IDT2 180
    GET STRING (CH) EDIT ((IX(I) DO I= N1 TO N2)) ((NF)F(1)),.          IDT2 190
    N1   =N2+1,.                                                        IDT2 200
    IF N1 LE M                                                          IDT2 210
    THEN DO,.                                                           IDT2 220
         N2   =N2+NF,.                                                  IDT2 230
         GO TO S10,.                                                    IDT2 240
         END,.                                                          IDT2 250
    RETURN,.                                                            IDT2 260
    END,.                              /*END OF PROCEDURE IDT2        */IDT2 270
*PROCESS('CHAR48,NOLIST,NOATR,NOXREF');
 SOUT..                                                                 SOUT  10
 /*********************************************************************/SOUT  20
 /*                                                                   */SOUT  30
 /*      TO PRINT THE RESULTS OF A STEP-WISE MULTIPLE REGRESSION.     */SOUT  40
 /*                                                                   */SOUT  50
 /*********************************************************************/SOUT  60
    PROCEDURE (NSTEP,ANS,L,B,S,T,BETA),.                                SOUT  70
    DECLARE                                                             SOUT  80
         NSTOP EXTERNAL CHARACTER (1),                                  SOUT  90
         (ANS(*),B(*),S(*),T(*),BETA(*))                                SOUT 100
         BINARY FLOAT,                 /*SINGLE PRECISION VERSION  /*S*/SOUT 110
  /*     BINARY FLOAT (53),            /*DOUBLE PRECISION VERSION  /*D*/SOUT 120
         (NSTEP(*),L(*),I,N)                                            SOUT 130
         FIXED BINARY,.                                                 SOUT 140
 /*                                                                   */SOUT 150
 /*      TEST WHETHER THIS IS THE FIRST STEP                          */SOUT 160
 /*                                                                   */SOUT 170
    IF NSTEP(4) LE 1                                                    SOUT 180
    THEN DO,.                                                           SOUT 190
         PUT EDIT ('DEPENDENT VARIABLE............',NSTEP(1))           SOUT 200
              (SKIP(2),COLUMN(10),A,F(2)),.                             SOUT 210
         PUT EDIT ('NUMBER OF VARIABLES FORCED....',NSTEP(2))           SOUT 220
              (SKIP,COLUMN(10),A,F(2)),.                                SOUT 230
         PUT EDIT ('NUMBER OF VARIABLES DELETED...',NSTEP(3))           SOUT 240
              (SKIP,COLUMN(10),A,F(2)),.                                SOUT 250
         END,.                                                          SOUT 260
 /*                                                                   */SOUT 270
 /*      PRINT THE RESULTS OF A STEP                                  */SOUT 280
 /*                                                                   */SOUT 290
    PUT EDIT ('STEP',NSTEP(4)) (SKIP(3),COLUMN(10),A,F(3)),.            SOUT 300
    PUT EDIT ('VARIABLE ENTERED.....',NSTEP(5))                         SOUT 310
         (SKIP(2),COLUMN(10),A,F(2)),.                                  SOUT 320
    PUT SKIP(2),.                                                       SOUT 330
    IF NSTEP(4) LE NSTEP(2)                                             SOUT 340
    THEN PUT EDIT ('  (FORCED VARIABLE)') (SKIP,COLUMN(10),A),.         SOUT 350
    PUT EDIT ('SUM OF SQUARES REDUCED IN THIS STEP....',ANS(1))         SOUT 360
         (R(FM1)),.                                                     SOUT 370
 FM1..                                                                  SOUT 380
    FORMAT (SKIP(1),COLUMN(10),A,F(13,3)),.                             SOUT 390
    PUT EDIT ('PROPORTION REDUCED IN THIS STEP........',ANS(2))         SOUT 400
         (R(FM1)),.                                                     SOUT 410
    PUT SKIP(2),.                                                       SOUT 420
    PUT EDIT ('CUMULATIVE SUM OF SQUARES REDUCED......',ANS(3))         SOUT 430
         (R(FM1)),.                                                     SOUT 440
    PUT EDIT ('CUMULATIVE PROPORTION REDUCED..........',ANS(4),'  OF',  SOUT 450
         ANS(5)) (SKIP,COLUMN(10),A,F(13,3),A,F(13,3)),.                SOUT 460
    PUT EDIT ('FOR',NSTEP(4),' VARIABLES ENTERED')                      SOUT 470
         (SKIP(2),COLUMN(10),A,F(3),A),.                                SOUT 480
    PUT EDIT ('MULTIPLE CORRELATION COEFFICIENT...',ANS(6))             SOUT 490
         (SKIP(1),COLUMN(12),A,F(9,3)),.                                SOUT 500
    PUT EDIT ('(ADJUSTED FOR D.F.)...........',ANS(10))                 SOUT 510
         (SKIP(1),COLUMN(17),A,F(9,3)),.                                SOUT 520
    PUT EDIT ('F-VALUE FOR ANALYSIS OF VARIANCE...',ANS(7))             SOUT 530
         (SKIP(1),COLUMN(12),A,F(9,3)),.                                SOUT 540
    PUT EDIT ('STANDARD ERROR OF ESTIMATE.........',ANS(8))             SOUT 550
         (SKIP(1),COLUMN(12),A,F(9,3)),.                                SOUT 560
    PUT EDIT ('(ADJUSTED FOR D.F.)...........',ANS(11))                 SOUT 570
         (SKIP(1),COLUMN(17),A,F(9,3)),.                                SOUT 580
    PUT EDIT ('VARIABLE','REGRESSION','STD. ERROR OF ','COMPUTED',      SOUT 590
         'BETA','NUMBER','COEFFICIENT','REG. COEFF.','T-VALUE',         SOUT 600
         'COEFFICIENT')                                                 SOUT 610
         (SKIP(2),COLUMN(12),5(A,X(5)),SKIP(1),COLUMN(13),A,X(6),A,     SOUT 620
         X(4),A,X(8),A,X(6),A),.                                        SOUT 630
    N    =NSTEP(4),.                                                    SOUT 640
         DO I = 1 TO N,.                                                SOUT 650
         PUT EDIT (L(I),B(I),S(I),T(I),BETA(I)) (SKIP(1),COLUMN(14),    SOUT 660
              F(3),F(18,5),F(16,5),F(14,3),F(14,5)),.                   SOUT 670
         END,.                                                          SOUT 680
    PUT EDIT ('INTERCEPT',ANS(9)) (SKIP,COLUMN(12),A,F(14,5)),.         SOUT 690
    NSTOP='0',.                                                         SOUT 700
    RETURN,.                                                            SOUT 710
    END,.                              /*END OF PROCEDURE SOUT        */SOUT 720
/*
//GO.XDATA DD UNIT=SYSDA,SPACE=(TRK,(50,20))
//GO.SYSIN  DD  *
SAMPLE000300602   0.01 1                                                      10
    29   289   216    85    14     1                                          20
    30   391   244    92    16     2                                          30
    30   424   246    90    18     2                                          40
    30   313   239    91    10     0                                          50
    35   243   275    95    30     2                                          60
    35   365   219    95    21     2                                          70
    43   396   267   100    39     3                                          80
    43   356   274    79    19     2                                          90
    44   346   255   126    56     3                                         100
    44   156   258    95    28     0                                         110
    44   278   249   110    42     4                                         120
    44   349   252    88    21     1                                         130
    44   141   236   129    56     1                                         140
    44   245   236    97    24     1                                         150
    45   297   256   111    45     3                                         160
    45   310   262    94    20     2                                         170
    45   151   339    96    35     3                                         180
    45   370   357    88    15     4                                         190
    45   379   198   147    64     4                                         200
    45   463   206   105    31     3                                         210
    45   316   245   132    60     4                                         220
    45   280   225   108    36     4                                         230
    44   395   215   101    27     1                                         240
    49   139   220   136    59     0                                         250
    49   245   205   113    37     4                                         260
    49   373   215    88    25     1                                         270
    51   224   215   118    54     3                                         280
    51   677   210   116    33     4                                         290
    51   424   210   140    59     4                                         300
    51   150   210   105    30     0                                         310
000003                                                                       320
200203                                                                       330
/*
