{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011456000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE196.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE196.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x04'", "DS1TRBAL": "b'\\xaaD'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x83\\x00\\x06\\x01\\x83\\x00\\t\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x93\\x17?\\x01\\x00)\\x9f\\x113\\x00P\\x00>\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1993-06-22T00:00:00", "modifydate": "2000-10-25T11:33:00", "lines": 80, "newlines": 62, "modlines": 0, "user": "WSBG"}, "text": "DOC FOR THE JES2 EXIT LOADER FOR JES2 VERSION 4.\n\n* Note - The 4.3 version was created by just getting the other one\n         to assemble.  Tested 03/31/94 by Sam Golob.  LKED parm\n         should now be RMODE=ANY for the 4.3 version.\n\n     This JES2 exit (as shipped) has load module name J005LOAD and\nhas entry point name E005LOAD.\n\n     This is a JES2 Exit 5 routine (command interceptor exit) which\nprocesses a $LOAD command to dynamically load other JES2 exits\n(except itself).  A new exit routine to be reloaded has to be gotten\nusing the LOAD macro, so all rules for where the LOAD macro can fetch\na copy of the new routine must be followed.  For example, if you are\nreplacing a version of a JES2 exit in a linklist library, remember to\nput the new copy of the exit out there, after renaming the old copy,\nand do an F LLA,REFRESH or its equivalent.  Then the loader exit will\npick up the fresh new copy of the particular exit module to be loaded.\n\n     This loader exit has only been tested to reload JES2 exits that\nget placed in the JES2 address space.  There are three places where\na JES2 exit can go (in version 4).  These are:\n\n       The JES2 address space ,     (default)\n       CSA                    ,\n  or   LPA\n\nExits that have been loaded into CSA or LPA can probably not be\nreplaced by this exit loader, unless somebody recodes it (your efforts\nare welcome--I'd appreciate having an improved product).  You can\ncheck your JES2 parms to make sure your exit isn't loaded like:\n\n         LOADMOD(JES2T08) STORAGE=LPA   or\n\n         LOADMOD(JES2T02) STORAGE=CSA   .\n\n\n     Command syntax for the $LOAD command is:\n\n $LOAD -modulnam\n\nwhere the dash is a fill-in character.  The exit will not find your\nmodule name if the extra character isn't put in.  I didn't take the\ntime to clean that \"problem\" up.\n\n     This exit (for JES2 version 4.x) has been recoded and will not\nwork for previous versions of JES2.  The reason is that the LMT, which\nis the Load Module Table that points to the location of all exit\npoints, has been restructured in version 4.  It is obvious that this\nexit depends on altering the LMT to point to another version of the\nexit module, which has been loaded into storage previously.\n\n     You can look on file 381 under J005LOAD to get a version of this\ncode which works for XA, JES2 version 2.2.0.\n\n     If you try and load a module name that has not been defined to\nJES2 at warm start time, you will get a message:\n\n $HASP000  newname   IS NOT IN THE LMT\n\n     If this exit works and reloads a new copy of an exit, you get the\nmessage:\n\n $HASP000  newname   RELOADED\n\n    (Maybe someone can allow zapping a new name into the LMT as a\nfuture project (changing the syntax of the $LOAD command).  But it is\nnot there now, and maybe it shouldn't be.)\n\n     Please refer questions or problems to:\n\n         Sam Golob\n         P.O. Box 906\n         Tallman, NY  10982-0906\n\n         845-362-5843  fax      sbgolob@attglobal.net\n\n     I would like to acknowledge the help of my friend W. Jim Williams\n(who knows JES2 pretty well) for his assistance in getting this exit to\nwork properly.  Thanks Jim.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMJES41": {"ttr": 519, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92(\\x0f\\x00\\x93\\x17?\\x15\\x10\\x01$\\x01\\x01\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-10-06T00:00:00", "modifydate": "1993-06-22T15:10:00", "lines": 292, "newlines": 257, "modlines": 0, "user": "SBGCSC"}, "text": "++ USERMOD(SMJES11) REWORK(9210060) .\n++ VER(Z038) FMID(HJE4410) .\n++ SRC(J005LOAD) DISTLIB(HASPSRC) DISTMOD(AOSH3) .\n         TITLE 'JES2 $LOAD COMMAND PROCESSOR'\n***********************************************************************\n*                                                                     *\n*        ENVIRONMENT   JES2   4.1.0  -  ADAPTED FOR NEW LMT   SBG CSC03\n*                                                                     *\n*        THIS EXIT WORKS WHEN ASSEMBLED FOR JES2  4.2.0  ALSO.        *\n*                                                                     *\n*        (THIS EXIT HAS ONLY BEEN TESTED TO BE ABLE TO RELOAD         *\n*         OTHER EXITS THAT GO INTO THE JES2 ADDRESS SPACE.  EXITS     *\n*         CAN ALSO BE LOADED INTO LPA OR CSA.  THIS EXIT HAS NOT      *\n*         BEEN PROGRAMMED TO HANDLE LPA OR CSA RELOADING. YOU JES2    *\n*         EXPERTS OUT THERE ARE WELCOME TO WORK ON THAT.  THANKS.)    *\n*                                                            S.GOLOB  *\n*                                                                     *\n*        THIS JES2 EXIT PROGRAM IS DESIGNED PROCESS THE $LOAD COMMAND *\n*        WHEN ENTERED.  THIS COMMAND IS IMPLEMENTED AS A TYPE 5       *\n*        EXIT TO JES2, AND AS SUCH MUST INTERCEPT ONLY THE $LOAD      *\n*        COMMAND WHEN ENCOUNTERED.                                    *\n*                                                                     *\n*   -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *\n*                                                                     *\n*        THE $LOAD COMMAND HAS THE FOLLOWING SYNTAX:                  *\n*                                                                     *\n*        $LOAD -MODNAME                                               *\n*                                                                     *\n*   -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *\n*                                                                     *\n*        THIS EXIT IS NORMALLY MADE KNOWN TO JES2 THROUGH THE         *\n*        FOLLOWING JES2 PARMS:                                        *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* EXIT(5)  ROUTINES=(E005LOAD),                                       *\n*          STATUS=ENABLED,                                            *\n*          TRACE=NO                                                   *\n*                                                                     *\n*          LOADMOD(J005LOAD)             /*  ENTRY PT IS E005LOAD  */ *\n*                                                                     *\n*   -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *\n*                                                                     *\n*        THIS EXIT CAN BE \"PIGGY-BACKED\" TO OTHER JES2 EXIT 5         *\n*        ROUTINES IN JES2 PARMS.  AN EXAMPLE OF HOW THIS IS DONE:     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* EXIT(5)  ROUTINES=(EXIT5,E005LOAD),                                 *\n*          STATUS=ENABLED,                                            *\n*          TRACE=NO                                                   *\n*                                                                     *\n*          LOADMOD(JES2T05)              /*  ENTRY PT IS EXIT5     */ *\n*          LOADMOD(J005LOAD)             /*  ENTRY PT IS E005LOAD  */ *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        THE FOLLOWING RESPONSES WILL BE MADE BY THIS EXIT:           *\n*                                                                     *\n*        1)  THE HASP000 MESSAGES ARE MADE UPON COMPLETION OF         *\n*            COMMAND                                                  *\n*                                                                     *\n*        $HASP000 MODULE RELOADED                                     *\n*                                                                     *\n*        $HASP000 MODULE IS NOT IN THE LMT                            *\n*                                                                     *\n*        $HASP000 MODULE LOAD ERROR                                   *\n*                                                                     *\n*        $HASP000 MODULE INVALID                                      *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*              M A C R O S   U S E D   I N   J E S $ L O A D          *\n*                                                                     *\n*        01)  $BUFFER      SYS1.HASPSRC                               *\n*        02)  $CAT         SYS1.HASPSRC                               *\n*        03)  $COMWORK     SYS1.HASPSRC                               *\n*        04)  $CWA         SYS1.HASPSRC                               *\n*        05)  $DCT         SYS1.HASPSRC                               *\n*        06)  $ENTRY       SYS1.HASPSRC                               *\n*        07)  $HASPEQU     SYS1.HASPSRC                               *\n*        08)  $HASPGBL     SYS1.HASPSRC                               *\n*        09)  $HCT         SYS1.HASPSRC                               *\n*        10)  $JCT         SYS1.HASPSRC                               *\n*        11)  $JOE         SYS1.HASPSRC                               *\n*        12)  $JQE         SYS1.HASPSRC                               *\n*        13)  $LMT         SYS1.HASPSRC                               *\n*        14)  $MIT         SYS1.HASPSRC                               *\n*        15)  $MITETBL     SYS1.HASPSRC                               *\n*        16)  $MODEND      SYS1.HASPSRC                               *\n*        17)  $MODULE      SYS1.HASPSRC                               *\n*        18)  $PADDR       SYS1.HASPSRC                               *\n*        19)  $PCE         SYS1.HASPSRC                               *\n*        20)  $PDDB        SYS1.HASPSRC                               *\n*        21)  $PPPWORK     SYS1.HASPSRC                               *\n*        22)  $QLOC        SYS1.HASPSRC                               *\n*        23)  $QSE         SYS1.HASPSRC                               *\n*        24)  $RETURN      SYS1.HASPSRC                               *\n*        25)  $SAVE        SYS1.HASPSRC                               *\n*        26)  $SJB         SYS1.HASPSRC                               *\n*        27)  $TQE         SYS1.HASPSRC                               *\n*        28)  $XIT         SYS1.HASPSRC                               *\n*        29)  $XRT         SYS1.HASPSRC                               *\n*                                                                     *\n*                                                                     *\n*              L I N K A G E    E D I T O R    I N F O                *\n*                                                                     *\n*        SIZE:       2K                                               *\n*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *\n*                                                                     *\n*                                                                     *\n***********************************************************************\n         EJECT\n         COPY  $HASPGBL\nJ005LOAD $MODULE $HASPEQU,                                             X\n               DEB,                                                    X\n               RESPA,              GENERATE MVS  RESPA DSECT           X\n               RPL,                GENERATE HASP RPL DSECT             X\n               $BUFFER,            GENERATE HASP BUFFER DSECT          X\n               $CAT,               GENERATE HASP CAT DSECT             X\n               $COMWORK,           GENERATE HASP COMWORK DSECT         X\n               $DCT,               GENERATE HASP DCT DSECT             X\n               $HASPEQU,           GENERATE HASP EQUATES               X\n               $HCT,               GENERATE HASP HCT DSECT             X\n               $JCT,               GENERATE HASP JCT DSECT             X\n               $JOE,               GENERATE HASP JOE DSECT             X\n               $JQE,               GENERATE HASP JQE DSECT             X\n               $LMT,               GENERATE HASP LMT DSECT             X\n               $MIT,               GENERATE HASP MIT DSECT             X\n               $MITETBL,           GENERATE HASP MITETBL DSECT         X\n               $PADDR,             GENERATE HASP PADDR DSECT           X\n               $PCE,               GENERATE HASP PCE DSECT             X\n               $PDDB,              GENERATE HASP PDDB DSECT            X\n               $PIT,               GENERATE HASP PIT DSECT             X\n               $PPPWORK,           GENERATE HASP PPPWORK DSECT         X\n               $SJB,               GENERATE HASP SJB DSECT             X\n               $TQE,               GENERATE HASP TQE DSECT             X\n               $XIT,               GENERATE HASP XIT DSECT             X\n               $XRT                GENERATE HASP XRT DSECT\n         EJECT\nJ005LOAD CSECT ,                   RESTORE THE CSECT ENVIRONMENT\n         TITLE 'JES2 $LOAD COMMAND PROCESSOR'\n***********************************************************************\n*                                                                     *\n*        EXIT MAIN ENTRY POINT                                        *\n*                                                                     *\n***********************************************************************\nE005LOAD $ENTRY BASE=(R12)\n         SPACE 1\n         $SAVE                     SAVE CALLER'S REGISTERS\n         LR    R12,R15             LOAD BASE REGISTER\n         EJECT\n***********************************************************************\n*                                                                     *\n*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *\n*                                                                     *\n*        R5       - ADDRESS OF THE CURRENT OPERAND                    *\n*        R6       - INCREMENT VALUE OF 4                              *\n*        R7       - ADDRESS OF THE LAST OPERAND                       *\n*        R11      - ADDRESS OF THE HCT                                *\n*        R13      - ADDRESS OF THE HASPCOMM PCE                       *\n*        R14      - RETURN ADDRESS                                    *\n*        R15      - ENTRY ADDRESS                                     *\n*                                                                     *\n***********************************************************************\n         SPACE 3\n***********************************************************************\n*                                                                     *\n*        SEE IF THIS IS A $LOAD COMMAND                               *\n*                                                                     *\n***********************************************************************\n         SPACE 1\n         CLC   COMVERB(4),=C'LOAD'   SEE IF THIS IS THE $LOAD COMMAND\n         BNE   EXIT0                 NO. LET JES HANDLE IT\n         SPACE 1\n         USING HCT,R11               ADDRESS HCT\n         USING PCE,R13               ADDRESS PCE\n         LA    R2,COMVERB\n         LA    R0,MSGL               LOAD MESSAGE LENGTH\n         $STORE (R0)                 STORE IT IN MESSAGE AREA\n         SPACE 1\n         MVC   PCEUSER0(8),5(R2)     MOVE MODULE NAME\n         MVC   COMMAND(MSGL),MSGOK   MOVE 'OK' MESSAGE\n         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME\n         CLC   PCEUSER0(8),EDLOAD    THIS PGM?\n         BE    EXITERR3              YES - ERROR\n         SPACE 1\n         USING LMT,R2                ADDRESS LMT\n         LA    R2,$LMT1-(LMTCHAIN-LMT)   PREPARE FOR PVT LMT LOOP\nEXITLOD1 ICM   R2,B'1111',LMTCHAIN  GET THE NEXT LMT ENTRY ADDRESS\n         BZ    EXITERR1             NO MORE, EXIT THIS LOOP   SBG CSC03\n         CLC   LMTMODNM,PCEUSER0     NAMES EQUAL?\n         BE    EXITLOD2              YES - CONTINUE\n         B     EXITLOD1              TRY NEXT ONE\nEXITLOD2 EQU   *\n         SPACE 1\n         DELETE EPLOC=PCEUSER0,RELATED=('NEXT LOAD')\n         SPACE 1\n         LOAD  EPLOC=PCEUSER0,ERRET=EXITERR2,                          X\n               RELATED=('PREVIOUS DELETE')\n         SPACE 1\n         LTR   R0,R0                 DID WE GET IT?\n         BZ    EXITERR2              NO - ERROR\n         ST    R0,LMTMITAD           YES - STORE IT\n         B     EXITTBL               GO FILE THE XIT TABLE\n         DROP  R2\n********************************************************************\n*                     EXITTBL                                      *\n********************************************************************\nEXITTBL  EQU   *\n         L     R1,$XITADDR           GET XIT ADDRESS\n         USING XIT,R1                XIT ENTRY ADDRESSABILITY\n         USING MTE,R3                MITETBL ADDRESSABILITY\n         USING XRT,R2                XRT ENTRY ADDRESSABILITY\n         LA    R4,256                GET NO. OF XIT ENTRIES\n         LR    R6,R0                 SAVE MIT ADDRESS\nEXITTBL1 ICM   R2,15,XITXRTAD        GET NEXT XRT POINTER\n         BZ    EXITTBL6              IF NO XRT, SKIP\n         SPACE 1\n         SLR   R5,R5                 CLEAR FOR INSERT\n         IC    R5,XIT#RTNS           GET NO. OF RTNS IN XRT\nEXITTBL2 L     R3,MITENTAD-MIT(,R6)  GET MITETBL ADDRESS\nEXITTBL3 CLI   MTENAME,X'FF'         IS THIS THE END OF THE TABLE\n         BE    EXITTBL5              YES - GO GET NEXT XRTE\n         CLC   XRTRNAME,MTENAME      IS ROUTINE NAME IN MIT?\n         BE    EXITTBL4              YES - UPDATE XRT\n         LA    R3,MTELEN(,R3)        POINT TO NEXT MITETBL ENTRY\n         B     EXITTBL3              NO - LOOP TO NEXT ENTRY\nEXITTBL4 MVC   XRTRADDR,MTEADDR      SET ROUTINE ADDR IN XRT\n         SPACE 1\nEXITTBL5 LA    R2,XRTLNGTH(,R2)      BUMP TO NEXT XRT ENTRY\n         BCT   R5,EXITTBL2            UNTIL ENTIRE XRT DONE\nEXITTBL6 LA    R1,XITLNGTH(,R1)      BUMP TO NEXT XIT ENTRY\n         BCT   R4,EXITTBL1            UNTIL ENTIRE XIT DONE\n         B     EXIT16\n********************************************************************\n*                     EXITERR                                      *\n********************************************************************\nEXITERR1 EQU   *\n         MVC   COMMAND(MSGL),MSGERR1 MOVE 'NOT LOADED' MSG\n         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME\n         B     EXIT16\nEXITERR2 EQU   *\n         MVC   COMMAND(MSGL),MSGERR2 MOVE 'NOT FOUND' MSG\n         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME\n         B     EXIT16\nEXITERR3 EQU   *\n         MVC   COMMAND(MSGL),MSGERR3 MOVE 'INVALID' MSG\n         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME\n         B     EXIT16\n***********************************************************************\n*                                                                     *\n*                    E X I T     R O U T I N E S                      *\n*                                                                     *\n*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *\n*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *\n*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      *\n*        RC = 12 - TERMINATE ISSUING THE \"OK\" MESSAGE                 *\n*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            *\n*                                                                     *\n***********************************************************************\n         SPACE 1\nEXIT0    LA    R15,0               SET RETURN CODE TO 0\n         $RETURN RC=(R15)          RETURN TO JES2\nEXIT16   LA    R15,16              LOAD RETURN CODE\n         $RETURN RC=(R15)          RETURN TO JES2\n         EJECT\n********************************************************************\n*                  DATA AREAS                                      *\n********************************************************************\nEDLOAD   DC    CL8'J005LOAD'\nMSGOK    DC    C'XXXXXXXX RELOADED             '\nMSGERR1  DC    C'XXXXXXXX IS NOT IN THE LMT    '\nMSGERR2  DC    C'XXXXXXXX LOAD ERROR           '\nMSGERR3  DC    C'XXXXXXXX INVALID              '\nMSGL     EQU   *-MSGERR3\n         LTORG\n         EJECT\n         $MODEND\n         END\n++ JCLIN .\n//LKED     EXEC PGM=HEWL,PARM='RMODE=24,AMODE=31,XREF,LET,LIST,NCAL'\n//SYSPRINT DD  SYSOUT=*\n//AOSH3    DD  DISP=SHR,DSN=SYS1.AOSH3\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.LINKLIB(J005LOAD)\n//SYSLIN   DD  *\n  INCLUDE  AOSH3(J005LOAD)\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMJES41J": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x00\\x00\\x91\\x18\\x8f\\x00\\x94\\t\\x0f\\x172\\x00\\x19\\x00\\x14\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "1991-07-07T00:00:00", "modifydate": "1994-03-31T17:32:00", "lines": 25, "newlines": 20, "modlines": 0, "user": "SBGCSC"}, "text": "//SMJES11J JOB (A006,SYTM,999,9999),'ROOM 9 - SAM GOLOB',\n//         CLASS=V,MSGCLASS=V,REGION=6M,\n//         NOTIFY=&SYSUID\n//*\n//*        LIB: XSYS.MVSESA.USERMODS(SMJES11J)\n//*        GDE: JES2\n//*        DOC: JES2 EXIT FOR CSC - EXIT 5 - EXIT LOADER\n//*\n//SMPPROC  EXEC  PROC=SMPPROC\n//SMPPTFIN DD  DISP=SHR,DSN=XSYS.MVSESA.USERMODS(SMJES11)\n//SMPCNTL  DD  *\n  SET      BDY(GLOBAL)\n           .\n  RECEIVE  S(SMJES11)\n           LIST\n           .\n  RESETRC  .\n  SET      BDY(XRS001)\n           .\n  APPLY    S(SMJES11)    CHECK\n           ASSEM\n           REDO\n           .\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMJES43": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x94\\x08\\x9f\\x00\\x94\\t\\x0f\\x17E\\x01$\\x00\\xf6\\x00@\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1994-03-30T00:00:00", "modifydate": "1994-03-31T17:45:00", "lines": 292, "newlines": 246, "modlines": 64, "user": "SBGCSC"}, "text": "++ USERMOD(SMJES11) REWORK(9403300) .\n++ VER(Z038) FMID(HJE4430) .\n++ SRC(J005LOAD) DISTLIB(HASPSRC) DISTMOD(AOSH3) .\n         TITLE 'JES2 $LOAD COMMAND PROCESSOR'\n***********************************************************************\n*                                                                     *\n*        ENVIRONMENT   MVS SP 4.3.0     ADAPTED FOR NEW LMT   SBG CSC03\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*        (THIS EXIT HAS ONLY BEEN TESTED TO BE ABLE TO RELOAD         *\n*         OTHER EXITS THAT GO INTO THE JES2 ADDRESS SPACE.  EXITS     *\n*         CAN ALSO BE LOADED INTO LPA OR CSA.  THIS EXIT HAS NOT      *\n*         BEEN PROGRAMMED TO HANDLE LPA OR CSA RELOADING. YOU JES2    *\n*         EXPERTS OUT THERE ARE WELCOME TO WORK ON THAT.  THANKS.)    *\n*                                                            S.GOLOB  *\n*                                                                     *\n*        THIS JES2 EXIT PROGRAM IS DESIGNED PROCESS THE $LOAD COMMAND *\n*        WHEN ENTERED.  THIS COMMAND IS IMPLEMENTED AS A TYPE 5       *\n*        EXIT TO JES2, AND AS SUCH MUST INTERCEPT ONLY THE $LOAD      *\n*        COMMAND WHEN ENCOUNTERED.                                    *\n*                                                                     *\n*   -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *\n*                                                                     *\n*        THE $LOAD COMMAND HAS THE FOLLOWING SYNTAX:                  *\n*                                                                     *\n*        $LOAD -MODNAME                                               *\n*                                                                     *\n*   -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *\n*                                                                     *\n*        THIS EXIT IS NORMALLY MADE KNOWN TO JES2 THROUGH THE         *\n*        FOLLOWING JES2 PARMS:                                        *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* EXIT(5)  ROUTINES=(E005LOAD),                                       *\n*          STATUS=ENABLED,                                            *\n*          TRACE=NO                                                   *\n*                                                                     *\n*          LOADMOD(J005LOAD)             /*  ENTRY PT IS E005LOAD  */ *\n*                                                                     *\n*   -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  *\n*                                                                     *\n*        THIS EXIT CAN BE \"PIGGY-BACKED\" TO OTHER JES2 EXIT 5         *\n*        ROUTINES IN JES2 PARMS.  AN EXAMPLE OF HOW THIS IS DONE:     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* EXIT(5)  ROUTINES=(EXIT5,E005LOAD),                                 *\n*          STATUS=ENABLED,                                            *\n*          TRACE=NO                                                   *\n*                                                                     *\n*          LOADMOD(JES2T05)              /*  ENTRY PT IS EXIT5     */ *\n*          LOADMOD(J005LOAD)             /*  ENTRY PT IS E005LOAD  */ *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        THE FOLLOWING RESPONSES WILL BE MADE BY THIS EXIT:           *\n*                                                                     *\n*        1)  THE HASP000 MESSAGES ARE MADE UPON COMPLETION OF         *\n*            COMMAND                                                  *\n*                                                                     *\n*        $HASP000 MODULE RELOADED                                     *\n*                                                                     *\n*        $HASP000 MODULE IS NOT IN THE LMT                            *\n*                                                                     *\n*        $HASP000 MODULE LOAD ERROR                                   *\n*                                                                     *\n*        $HASP000 MODULE INVALID                                      *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*              M A C R O S   U S E D   I N   J E S $ L O A D          *\n*                                                                     *\n*        01)  $BUFFER      SYS1.HASPSRC                               *\n*        02)  $CAT         SYS1.HASPSRC                               *\n*        03)  $COMWORK     SYS1.HASPSRC                               *\n*        04)  $CWA         SYS1.HASPSRC                               *\n*        05)  $DCT         SYS1.HASPSRC                               *\n*        06)  $ENTRY       SYS1.HASPSRC                               *\n*        07)  $HASPEQU     SYS1.HASPSRC                               *\n*        08)  $HASPGBL     SYS1.HASPSRC                               *\n*        09)  $HCT         SYS1.HASPSRC                               *\n*        10)  $JCT         SYS1.HASPSRC                               *\n*        11)  $JOE         SYS1.HASPSRC                               *\n*        12)  $JQE         SYS1.HASPSRC                               *\n*        13)  $LMT         SYS1.HASPSRC                               *\n*        14)  $MIT         SYS1.HASPSRC                               *\n*        15)  $MITETBL     SYS1.HASPSRC                               *\n*        16)  $MODEND      SYS1.HASPSRC                               *\n*        17)  $MODULE      SYS1.HASPSRC                               *\n*        18)  $PADDR       SYS1.HASPSRC                               *\n*        19)  $PCE         SYS1.HASPSRC                               *\n*        20)  $PDDB        SYS1.HASPSRC                               *\n*        21)  $PPPWORK     SYS1.HASPSRC                               *\n*        22)  $QLOC        SYS1.HASPSRC                               *\n*        23)  $QSE         SYS1.HASPSRC                               *\n*        24)  $RETURN      SYS1.HASPSRC                               *\n*        25)  $SAVE        SYS1.HASPSRC                               *\n*        26)  $SJB         SYS1.HASPSRC                               *\n*        27)  $TQE         SYS1.HASPSRC                               *\n*        28)  $XIT         SYS1.HASPSRC                               *\n*        29)  $XRT         SYS1.HASPSRC                               *\n*                                                                     *\n*                                                                     *\n*              L I N K A G E    E D I T O R    I N F O                *\n*                                                                     *\n*        SIZE:       2K                                               *\n*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *\n*                                                                     *\n*                                                                     *\n***********************************************************************\n         EJECT\n         COPY  $HASPGBL\nJ005LOAD $MODULE ENVIRON=JES2,RMODE=ANY,RSECT=YES,                     +\n               DEB,                                                    X\n               RESPA,              GENERATE MVS  RESPA DSECT           X\n               RPL,                GENERATE HASP RPL DSECT             X\n               $BUFFER,            GENERATE HASP BUFFER DSECT          X\n               $CAT,               GENERATE HASP CAT DSECT             X\n               $COMWORK,           GENERATE HASP COMWORK DSECT         X\n               $DCT,               GENERATE HASP DCT DSECT             X\n               $HASPEQU,           GENERATE HASP EQUATES               X\n               $HCT,               GENERATE HASP HCT DSECT             X\n               $JCT,               GENERATE HASP JCT DSECT             X\n               $JOE,               GENERATE HASP JOE DSECT             X\n               $JQE,               GENERATE HASP JQE DSECT             X\n               $LMT,               GENERATE HASP LMT DSECT             X\n               $MIT,               GENERATE HASP MIT DSECT             X\n               $MITETBL,           GENERATE HASP MITETBL DSECT         X\n               $PADDR,             GENERATE HASP PADDR DSECT           X\n               $PCE,               GENERATE HASP PCE DSECT             X\n               $PDDB,              GENERATE HASP PDDB DSECT            X\n               $PIT,               GENERATE HASP PIT DSECT             X\n               $PPPWORK,           GENERATE HASP PPPWORK DSECT         X\n               $SJB,               GENERATE HASP SJB DSECT             X\n               $TQE,               GENERATE HASP TQE DSECT             X\n               $XIT,               GENERATE HASP XIT DSECT             X\n               $XRT                GENERATE HASP XRT DSECT\n         EJECT\nJ005LOAD RSECT ,                   RESTORE THE CSECT ENVIRONMENT\n         TITLE 'JES2 $LOAD COMMAND PROCESSOR'\n***********************************************************************\n*                                                                     *\n*        EXIT MAIN ENTRY POINT                                        *\n*                                                                     *\n***********************************************************************\nE005LOAD $ENTRY BASE=(R12)\n         SPACE 1\n         $SAVE                     SAVE CALLER'S REGISTERS\n         LR    R12,R15             LOAD BASE REGISTER\n         EJECT\n***********************************************************************\n*                                                                     *\n*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *\n*                                                                     *\n*        R5       - ADDRESS OF THE CURRENT OPERAND                    *\n*        R6       - INCREMENT VALUE OF 4                              *\n*        R7       - ADDRESS OF THE LAST OPERAND                       *\n*        R11      - ADDRESS OF THE HCT                                *\n*        R13      - ADDRESS OF THE HASPCOMM PCE                       *\n*        R14      - RETURN ADDRESS                                    *\n*        R15      - ENTRY ADDRESS                                     *\n*                                                                     *\n***********************************************************************\n         SPACE 3\n***********************************************************************\n*                                                                     *\n*        SEE IF THIS IS A $LOAD COMMAND                               *\n*                                                                     *\n***********************************************************************\n         SPACE 1\n         CLC   COMVERB(4),=C'LOAD'   SEE IF THIS IS THE $LOAD COMMAND\n         BNE   EXIT0                 NO. LET JES HANDLE IT\n         SPACE 1\n         USING HCT,R11               ADDRESS HCT\n         USING PCE,R13               ADDRESS PCE\n         LA    R2,COMVERB\n         LA    R0,MSGL               LOAD MESSAGE LENGTH\n         $STORE (R0)                 STORE IT IN MESSAGE AREA\n         SPACE 1\n         MVC   PCEUSER0(8),5(R2)     MOVE MODULE NAME\n         MVC   COMMAND(MSGL),MSGOK   MOVE 'OK' MESSAGE\n         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME\n         CLC   PCEUSER0(8),EDLOAD    THIS PGM?\n         BE    EXITERR3              YES - ERROR\n         SPACE 1\n         USING LMT,R2                ADDRESS LMT\n         LA    R2,$LMT1-(LMTCHAIN-LMT)   PREPARE FOR PVT LMT LOOP\nEXITLOD1 ICM   R2,B'1111',LMTCHAIN  GET THE NEXT LMT ENTRY ADDRESS\n         BZ    EXITERR1             NO MORE, EXIT THIS LOOP   SBG CSC03\n         CLC   LMTMODNM,PCEUSER0     NAMES EQUAL?\n         BE    EXITLOD2              YES - CONTINUE\n         B     EXITLOD1              TRY NEXT ONE\nEXITLOD2 EQU   *\n         SPACE 1\n         DELETE EPLOC=PCEUSER0,RELATED=('NEXT LOAD')\n         SPACE 1\n         LOAD  EPLOC=PCEUSER0,ERRET=EXITERR2,                          X\n               RELATED=('PREVIOUS DELETE')\n         SPACE 1\n         LTR   R0,R0                 DID WE GET IT?\n         BZ    EXITERR2              NO - ERROR\n         ST    R0,LMTMITAD           YES - STORE IT\n         B     EXITTBL               GO FILE THE XIT TABLE\n         DROP  R2\n********************************************************************\n*                     EXITTBL                                      *\n********************************************************************\nEXITTBL  EQU   *\n         L     R1,$XITADDR           GET XIT ADDRESS\n         USING XIT,R1                XIT ENTRY ADDRESSABILITY\n         USING MTE,R3                MITETBL ADDRESSABILITY\n         USING XRT,R2                XRT ENTRY ADDRESSABILITY\n         LA    R4,256                GET NO. OF XIT ENTRIES\n         LR    R6,R0                 SAVE MIT ADDRESS\nEXITTBL1 ICM   R2,15,XITXRTAD        GET NEXT XRT POINTER\n         BZ    EXITTBL6              IF NO XRT, SKIP\n         SPACE 1\n         SLR   R5,R5                 CLEAR FOR INSERT\n         IC    R5,XIT#RTNS           GET NO. OF RTNS IN XRT\nEXITTBL2 L     R3,MITENTAD-MIT(,R6)  GET MITETBL ADDRESS\nEXITTBL3 CLI   MTENAME,X'FF'         IS THIS THE END OF THE TABLE\n         BE    EXITTBL5              YES - GO GET NEXT XRTE\n         CLC   XRTRNAME,MTENAME      IS ROUTINE NAME IN MIT?\n         BE    EXITTBL4              YES - UPDATE XRT\n         LA    R3,MTELEN(,R3)        POINT TO NEXT MITETBL ENTRY\n         B     EXITTBL3              NO - LOOP TO NEXT ENTRY\nEXITTBL4 MVC   XRTRADDR,MTEADDR      SET ROUTINE ADDR IN XRT\n         SPACE 1\nEXITTBL5 LA    R2,XRTLNGTH(,R2)      BUMP TO NEXT XRT ENTRY\n         BCT   R5,EXITTBL2            UNTIL ENTIRE XRT DONE\nEXITTBL6 LA    R1,XITLNGTH(,R1)      BUMP TO NEXT XIT ENTRY\n         BCT   R4,EXITTBL1            UNTIL ENTIRE XIT DONE\n         B     EXIT16\n********************************************************************\n*                     EXITERR                                      *\n********************************************************************\nEXITERR1 EQU   *\n         MVC   COMMAND(MSGL),MSGERR1 MOVE 'NOT LOADED' MSG\n         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME\n         B     EXIT16\nEXITERR2 EQU   *\n         MVC   COMMAND(MSGL),MSGERR2 MOVE 'NOT FOUND' MSG\n         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME\n         B     EXIT16\nEXITERR3 EQU   *\n         MVC   COMMAND(MSGL),MSGERR3 MOVE 'INVALID' MSG\n         MVC   COMMAND(8),PCEUSER0   MOVE MODULE NAME\n         B     EXIT16\n***********************************************************************\n*                                                                     *\n*                    E X I T     R O U T I N E S                      *\n*                                                                     *\n*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *\n*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *\n*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      *\n*        RC = 12 - TERMINATE ISSUING THE \"OK\" MESSAGE                 *\n*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            *\n*                                                                     *\n***********************************************************************\n         SPACE 1\nEXIT0    LA    R15,0               SET RETURN CODE TO 0\n         $RETURN RC=(R15)          RETURN TO JES2\nEXIT16   LA    R15,16              LOAD RETURN CODE\n         $RETURN RC=(R15)          RETURN TO JES2\n         EJECT\n********************************************************************\n*                  DATA AREAS                                      *\n********************************************************************\nEDLOAD   DC    CL8'J005LOAD'\nMSGOK    DC    C'XXXXXXXX RELOADED             '\nMSGERR1  DC    C'XXXXXXXX IS NOT IN THE LMT    '\nMSGERR2  DC    C'XXXXXXXX LOAD ERROR           '\nMSGERR3  DC    C'XXXXXXXX INVALID              '\nMSGL     EQU   *-MSGERR3\n         LTORG\n         EJECT\n         $MODEND\n         END\n++ JCLIN .\n//LKED     EXEC PGM=HEWL,PARM='RMODE=ANY,AMODE=31,XREF,LET,LIST,NCAL'\n//SYSPRINT DD  SYSOUT=*\n//AOSH3    DD  DISP=SHR,DSN=SYS1.AOSH3\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.LINKLIB(J005LOAD)\n//SYSLIN   DD  *\n  INCLUDE  AOSH3(J005LOAD)\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT196/FILE196.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT196", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}