{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012113000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE460.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE460.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x07'", "DS1TRBAL": "b'\\x9c\\xfc'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03g\\x00\\x03\\x03g\\x00\\x07\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"CNAEBROW": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 1   DSN VOLUME()\nSET FUNC = BROWSE\n/**********************************************************************\n/*       BOB ZIMMERMAN\n/*       CNA INSURANCE\n/*       LAST MODIFIED 8503\n/**********************************************************************\n/*       THIS CLIST USED WITH THE BR COMMAND TABLE COMMAND WILL ALLOW\n/*       A USER TO BROWSE A DATASET FROM ANY SCREEN.\n/**********************************************************************\n\n\n                 IF &STR(&DSN) = &STR(*) THEN DO\n                     ISPEXEC VGET (BRDSN BRMEM) PROFILE\n                     IF &BRMEM = THEN SET DSN = &STR('&BRDSN')\n                     ELSE SET DSN = &STR('&BRDSN(&BRMEM)')\n                     END\n\nLOOP:    ISPEXEC CONTROL ERRORS RETURN\n         ISPEXEC BROWSE DATASET(&DSN) +\n                        VOLUME(&VOLUME)\n\n         SET LCC = &LASTCC\n         IF &LCC \u00ac= 0 THEN DO\n             ISPEXEC DISPLAY PANEL(BRDDSN) MSG(&ZERRMSG) +\n             CURSOR(DSN)\n             IF &LASTCC = 0 THEN GOTO LOOP\n             END\n         EXIT CODE(&LCC)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CNAEEDIT": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "        PROC 1   DSN VOL() PASSWORD() MACRO() PROFILE()\n         SET FUNC = EDIT\n        /**********************************************************************\n        /*       BOB ZIMMERMAN\n        /*       CNA INSURANCE\n        /*       (312) 822-5719\n        /*       LAST MODIFIED 8503\n        /**********************************************************************\n        /*       THIS CLIST USED WITH THE ED COMMAND TABLE COMMAND WILL ALLOW\n        /*       A USER TO EDIT A DATASET FROM ANY SCREEN.\n        /**********************************************************************\n\n                 ISPEXEC SELECT PGM(EDREC)\n                 IF &LASTCC = 20 THEN EXIT\n\n                 IF &STR(&DSN) = &STR(*) THEN DO\n                     ISPEXEC VGET (BRDSN BRMEM) PROFILE\n                     IF &BRMEM = THEN SET DSN = &STR('&BRDSN')\n                     ELSE SET DSN = &STR('&BRDSN(&BRMEM)')\n                     END\nLOOP: +\n                 ISPEXEC CONTROL ERRORS RETURN\n                 ISPEXEC EDIT   DATASET(&DSN) +\n                                VOLUME(&VOL) +\n                                PASSWORD(&PASSWORD) +\n                                MACRO(&MACRO) +\n                                PROFILE(&PROFILE)\n\n                 SET LCC = &LASTCC\n                 IF &LCC > 4 THEN DO\n                     ISPEXEC DISPLAY PANEL(EDDDSN) MSG(&ZERRMSG) +\n                     CURSOR(DSN)\n                     IF &LASTCC = 0 THEN GOTO LOOP\n                     END\n                 EXIT CODE(&LCC)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFTE": {"ttr": 520, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "        PROC 2   PANEL SKEL1 SKEL2() PANEL2()  DEBUG DFTD(DFTD) +\n                 NOJOB TITLE() COMMENT() JOBSKEL(ISRJSJC) FIRSTIME()\n        /***************************************************************\n        /*     DETERMINE IF WE ARE RUNNING IN DEBUG MODE\n        /*     AND SET CONTROL ACCORDINGLY\n        /***************************************************************\n                  CONTROL FLUSH MSG NOPROMPT\n                  ISPEXEC CONTROL ERRORS CANCEL\n                  ISPEXEC VGET (SPFDBUG) PROFILE\n                  IF &LASTCC \u00ac= 0 THEN SET &SPFDBUG = N\n                  IF &SPFDBUG = Y THEN CONTROL LIST SYMLIST CONLIST\n                 SET ZERRMSG =\n        /***************************************************************\n        /*     DETERMINE IF WE ARE RUNNING IN DEBUG MODE\n        /*     AND SET CONTROL ACCORDINGLY\n        /***************************************************************\n                 SET SW = 0\n                 SET MSG =\n                 SET CSR =\n                 SET FTIME =\n                 SET VERCLIST =\n                 ISPEXEC FTOPEN TEMP\n                 IF &NOJOB = THEN ISPEXEC FTINCL &JOBSKEL\n        LOOP:    +\n                 SET VERDSN1 =\n                 SET VERMEM1 =\n                 SET VERDSN2 =\n                 SET VERMEM2 =\n                 SET VERDSN3 =\n                 SET VERMEM3 =\n                 SET VERDSN4 =\n                 SET VERMEM4 =\n                 SET VERDSN5 =\n                 SET VERMEM5 =\n                 SET VERDSN6 =\n                 SET VERMEM6 =\n                 SET VERDSN7 =\n                 SET VERMEM7 =\n                 SET VERDSN8 =\n                 SET VERMEM8 =\n                 SET VERDSN9 =\n                 SET VERMEM9 =\n                 SET VERDSN10 =\n                 SET VERMEM10 =\n                 SET ZCMD =\n                 ISPEXEC DISPLAY PANEL(&PANEL) MSG(&MSG) CURSOR(&CSR)\n                 SET LCC = &LASTCC\n\n                 IF &LCC NE 0 THEN +\n                     DO\n                     IF &SW = 0 THEN +\n                         DO\n                         ISPEXEC FTCLOSE\n                         EXIT CODE(&LCC)\n                         END\n                     ELSE GOTO PROCJCL\n                     END\n\n                 SET MSG =\n                 SET CSR =\n                 IF &STR(&FIRSTIME) NE AND &SW EQ 0 THEN DO\n                     ISPEXEC FTINCL &FIRSTIME\n                     END\n\n\n                 IF &STR(&VERDSN1) NE THEN DO\n                     ISPEXEC LMINIT DATAID(ID) +\n                         DATASET(&VERDSN1) ENQ(SHR) ORG(ORG)\n                     IF &LASTCC NE 0 THEN DO\n                         SET CSR = &VERCSR1\n                         SET MSG = &ZERRMSG\n                         GOTO LOOP\n                         END\n                     IF &STR(&VERMEM1) NE THEN DO\n                         IF &STR(&ORG) NE PO THEN DO\n                             SET CSR = &VERCSR1\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET NOT PARTITIONED)\n                             SET LMSG1 = &STR(EXPECTED A PARTIONTED +\n                             DATASET - FOUND DSORG OF &ORG)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMOPEN DATAID(&ID)\n                         IF &LASTCC NE 0 THEN DO\n                             SET CSR = &VERCSR1\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET OPEN ERROR)\n                             SET LMSG1 = &STR(UNABLE TO OPEN &VERDSN1)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&VERMEM1)\n                         SET LCC = &LASTCC\n                         IF &LCC > 7 THEN DO\n                             SET CSR = &VERCSR1\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(MEMBER NOT FOUND)\n                             SET LMSG1 = &STR(&VERMEM1 CANNOT BE FOUND +\n                             ON &VERDSN1)\n                             ISPEXEC LMCLOSE DATAID(&ID)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMCLOSE DATAID(&ID)\n                         ISPEXEC LMFREE DATAID(&ID)\n                         END\n                     ELSE ISPEXEC LMFREE DATAID(&ID)\n                     END\n\n                 IF &STR(&VERDSN2) NE THEN DO\n                     ISPEXEC LMINIT DATAID(ID) +\n                         DATASET(&VERDSN2) ENQ(SHR) ORG(ORG)\n                     IF &LASTCC NE 0 THEN DO\n                         SET CSR = &VERCSR2\n                         SET MSG = &ZERRMSG\n                         GOTO LOOP\n                         END\n                     IF &STR(&VERMEM2) NE THEN DO\n                         IF &STR(&ORG) NE PO THEN DO\n                             SET CSR = &VERCSR2\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET NOT PARTITIONED)\n                             SET LMSG1 = &STR(EXPECTED A PARTIONTED +\n                             DATASET - FOUND DSORG OF &ORG)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMOPEN DATAID(&ID)\n                         IF &LASTCC NE 0 THEN DO\n                             SET CSR = &VERCSR2\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET OPEN ERROR)\n                             SET LMSG1 = &STR(UNABLE TO OPEN &VERDSN2)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&VERMEM2)\n                         SET LCC = &LASTCC\n                         IF &LCC > 7 THEN DO\n                             SET CSR = &VERCSR2\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(MEMBER NOT FOUND)\n                             SET LMSG1 = &STR(&VERMEM2 CANNOT BE FOUND +\n                             ON &VERDSN2)\n                             ISPEXEC LMCLOSE DATAID(&ID)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMCLOSE DATAID(&ID)\n                         ISPEXEC LMFREE DATAID(&ID)\n                         END\n                     ELSE ISPEXEC LMFREE DATAID(&ID)\n                     END\n\n\n\n                 IF &STR(&VERDSN3) NE THEN DO\n                     ISPEXEC LMINIT DATAID(ID) +\n                         DATASET(&VERDSN3) ENQ(SHR) ORG(ORG)\n                     IF &LASTCC NE 0 THEN DO\n                         SET CSR = &VERCSR3\n                         SET MSG = &ZERRMSG\n                         GOTO LOOP\n                         END\n                     IF &STR(&VERMEM3) NE THEN DO\n                         IF &STR(&ORG) NE PO THEN DO\n                             SET CSR = &VERCSR3\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET NOT PARTITIONED)\n                             SET LMSG1 = &STR(EXPECTED A PARTIONTED +\n                             DATASET - FOUND DSORG OF &ORG)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMOPEN DATAID(&ID)\n                         IF &LASTCC NE 0 THEN DO\n                             SET CSR = &VERCSR3\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET OPEN ERROR)\n                             SET LMSG1 = &STR(UNABLE TO OPEN &VERDSN3)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&VERMEM3)\n                         SET LCC = &LASTCC\n                         IF &LCC > 7 THEN DO\n                             SET CSR = &VERCSR3\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(MEMBER NOT FOUND)\n                             SET LMSG1 = &STR(&VERMEM3 CANNOT BE FOUND +\n                             ON &VERDSN3)\n                             ISPEXEC LMCLOSE DATAID(&ID)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMCLOSE DATAID(&ID)\n                         ISPEXEC LMFREE DATAID(&ID)\n                         END\n                     END\n\n                 IF &STR(&VERDSN4) NE THEN DO\n                     ISPEXEC LMINIT DATAID(ID) +\n                         DATASET(&VERDSN4) ENQ(SHR) ORG(ORG)\n                     IF &LASTCC NE 0 THEN DO\n                         SET CSR = &VERCSR4\n                         SET MSG = &ZERRMSG\n                         GOTO LOOP\n                         END\n                     IF &STR(&VERMEM4) NE THEN DO\n                         IF &STR(&ORG) NE PO THEN DO\n                             SET CSR = &VERCSR4\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET NOT PARTITIONED)\n                             SET LMSG1 = &STR(EXPECTED A PARTIONTED +\n                             DATASET - FOUND DSORG OF &ORG)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMOPEN DATAID(&ID)\n                         IF &LASTCC NE 0 THEN DO\n                             SET CSR = &VERCSR4\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET OPEN ERROR)\n                             SET LMSG1 = &STR(UNABLE TO OPEN &VERDSN4)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&VERMEM4)\n                         SET LCC = &LASTCC\n                         IF &LCC > 7 THEN DO\n                             SET CSR = &VERCSR4\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(MEMBER NOT FOUND)\n                             SET LMSG1 = &STR(&VERMEM4 CANNOT BE FOUND +\n                             ON &VERDSN4)\n                             ISPEXEC LMCLOSE DATAID(&ID)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMCLOSE DATAID(&ID)\n                         ISPEXEC LMFREE DATAID(&ID)\n                         END\n                     END\n\n                 IF &STR(&VERDSN5) NE THEN DO\n                     ISPEXEC LMINIT DATAID(ID) +\n                         DATASET(&VERDSN5) ENQ(SHR) ORG(ORG)\n                     IF &LASTCC NE 0 THEN DO\n                         SET CSR = &VERCSR5\n                         SET MSG = &ZERRMSG\n                         GOTO LOOP\n                         END\n                     IF &STR(&VERMEM5) NE THEN DO\n                         IF &STR(&ORG) NE PO THEN DO\n                             SET CSR = &VERCSR5\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET NOT PARTITIONED)\n                             SET LMSG1 = &STR(EXPECTED A PARTIONTED +\n                             DATASET - FOUND DSORG OF &ORG)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMOPEN DATAID(&ID)\n                         IF &LASTCC NE 0 THEN DO\n                             SET CSR = &VERCSR5\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET OPEN ERROR)\n                             SET LMSG1 = &STR(UNABLE TO OPEN &VERDSN5)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&VERMEM5)\n                         SET LCC = &LASTCC\n                         IF &LCC > 7 THEN DO\n                             SET CSR = &VERCSR5\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(MEMBER NOT FOUND)\n                             SET LMSG1 = &STR(&VERMEM5 CANNOT BE FOUND +\n                             ON &VERDSN5)\n                             ISPEXEC LMCLOSE DATAID(&ID)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO LOOP\n                             END\n                         ISPEXEC LMCLOSE DATAID(&ID)\n                         ISPEXEC LMFREE DATAID(&ID)\n                         END\n                     END\n\n        LOOP2:   +\n                 SET LABEL = LOOP\n                 IF &PANEL2 \u00ac= THEN +\n                     DO\n                     SET LABEL = LOOP2\n                     ISPEXEC DISPLAY PANEL(&PANEL2) MSG(&MSG) +\n                     CURSOR(&CSR)\n                     SET PNLCC2 = &LASTCC\n                     SET MSG =\n                     SET CSR =\n\n                     IF &PNLCC2 \u00ac= 0 THEN GOTO LOOP\n                     END\n\n\n                 IF &STR(&VERDSN6) NE THEN DO\n                     ISPEXEC LMINIT DATAID(ID) +\n                         DATASET(&VERDSN6) ENQ(SHR) ORG(ORG)\n                     IF &LASTCC NE 0 THEN DO\n                         SET CSR = &VERCSR6\n                         SET MSG = &ZERRMSG\n                         GOTO &LABEL\n                         END\n                     IF &STR(&VERMEM6) NE THEN DO\n                         IF &STR(&ORG) NE PO THEN DO\n                             SET CSR = &VERCSR6\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET NOT PARTITIONED)\n                             SET LMSG1 = &STR(EXPECTED A PARTIONTED +\n                             DATASET - FOUND DSORG OF &ORG)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMOPEN DATAID(&ID)\n                         IF &LASTCC NE 0 THEN DO\n                             SET CSR = &VERCSR6\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET OPEN ERROR)\n                             SET LMSG1 = &STR(UNABLE TO OPEN &VERDSN6)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&VERMEM6)\n                         SET LCC = &LASTCC\n                         IF &LCC > 7 THEN DO\n                             SET CSR = &VERCSR6\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(MEMBER NOT FOUND)\n                             SET LMSG1 = &STR(&VERMEM6 CANNOT BE FOUND +\n                             ON &VERDSN6)\n                             ISPEXEC LMCLOSE DATAID(&ID)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMCLOSE DATAID(&ID)\n                         ISPEXEC LMFREE DATAID(&ID)\n                         END\n                     END\n\n\n                 IF &STR(&VERDSN7) NE THEN DO\n                     ISPEXEC LMINIT DATAID(ID) +\n                         DATASET(&VERDSN7) ENQ(SHR) ORG(ORG)\n                     IF &LASTCC NE 0 THEN DO\n                         SET CSR = &VERCSR7\n                         SET MSG = &ZERRMSG\n                         GOTO &LABEL\n                         END\n                     IF &STR(&VERMEM7) NE THEN DO\n                         IF &STR(&ORG) NE PO THEN DO\n                             SET CSR = &VERCSR7\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET NOT PARTITIONED)\n                             SET LMSG1 = &STR(EXPECTED A PARTIONTED +\n                             DATASET - FOUND DSORG OF &ORG)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMOPEN DATAID(&ID)\n                         IF &LASTCC NE 0 THEN DO\n                             SET CSR = &VERCSR7\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET OPEN ERROR)\n                             SET LMSG1 = &STR(UNABLE TO OPEN &VERDSN7)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&VERMEM7)\n                         SET LCC = &LASTCC\n                         IF &LCC > 7 THEN DO\n                             SET CSR = &VERCSR7\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(MEMBER NOT FOUND)\n                             SET LMSG1 = &STR(&VERMEM7 CANNOT BE FOUND +\n                             ON &VERDSN7)\n                             ISPEXEC LMCLOSE DATAID(&ID)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMCLOSE DATAID(&ID)\n                         ISPEXEC LMFREE DATAID(&ID)\n                         END\n                     END\n\n                 IF &STR(&VERDSN8) NE THEN DO\n                     ISPEXEC LMINIT DATAID(ID) +\n                         DATASET(&VERDSN8) ENQ(SHR) ORG(ORG)\n                     IF &LASTCC NE 0 THEN DO\n                         SET CSR = &VERCSR8\n                         SET MSG = &ZERRMSG\n                         GOTO &LABEL\n                         END\n                     IF &STR(&VERMEM8) NE THEN DO\n                         IF &STR(&ORG) NE PO THEN DO\n                             SET CSR = &VERCSR8\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET NOT PARTITIONED)\n                             SET LMSG1 = &STR(EXPECTED A PARTIONTED +\n                             DATASET - FOUND DSORG OF &ORG)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMOPEN DATAID(&ID)\n                         IF &LASTCC NE 0 THEN DO\n                             SET CSR = &VERCSR8\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET OPEN ERROR)\n                             SET LMSG1 = &STR(UNABLE TO OPEN &VERDSN8)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&VERMEM8)\n                         SET LCC = &LASTCC\n                         IF &LCC > 8 THEN DO\n                             SET CSR = &VERCSR8\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(MEMBER NOT FOUND)\n                             SET LMSG1 = &STR(&VERMEM8 CANNOT BE FOUND +\n                             ON &VERDSN8)\n                             ISPEXEC LMCLOSE DATAID(&ID)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMCLOSE DATAID(&ID)\n                         ISPEXEC LMFREE DATAID(&ID)\n                         END\n                     END\n\n                 IF &STR(&VERDSN9) NE THEN DO\n                     ISPEXEC LMINIT DATAID(ID) +\n                         DATASET(&VERDSN9) ENQ(SHR) ORG(ORG)\n                     IF &LASTCC NE 0 THEN DO\n                         SET CSR = &VERCSR9\n                         SET MSG = &ZERRMSG\n                         GOTO &LABEL\n                         END\n                     IF &STR(&VERMEM9) NE THEN DO\n                         IF &STR(&ORG) NE PO THEN DO\n                             SET CSR = &VERCSR9\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET NOT PARTITIONED)\n                             SET LMSG1 = &STR(EXPECTED A PARTIONTED +\n                             DATASET - FOUND DSORG OF &ORG)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMOPEN DATAID(&ID)\n                         IF &LASTCC NE 0 THEN DO\n                             SET CSR = &VERCSR9\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET OPEN ERROR)\n                             SET LMSG1 = &STR(UNABLE TO OPEN &VERDSN9)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&VERMEM9)\n                         SET LCC = &LASTCC\n                         IF &LCC > 9 THEN DO\n                             SET CSR = &VERCSR9\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(MEMBER NOT FOUND)\n                             SET LMSG1 = &STR(&VERMEM9 CANNOT BE FOUND +\n                             ON &VERDSN9)\n                             ISPEXEC LMCLOSE DATAID(&ID)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMCLOSE DATAID(&ID)\n                         ISPEXEC LMFREE DATAID(&ID)\n                         END\n                     END\n\n                 IF &STR(&VERDSN10) NE THEN DO\n                     ISPEXEC LMINIT DATAID(ID) +\n                         DATASET(&VERDSN10) ENQ(SHR) ORG(ORG)\n                     IF &LASTCC NE 0 THEN DO\n                         SET CSR = &VERCSR10\n                         SET MSG = &ZERRMSG\n                         GOTO &LABEL\n                         END\n                     IF &STR(&VERMEM10) NE THEN DO\n                         IF &STR(&ORG) NE PO THEN DO\n                             SET CSR = &VERCSR10\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET NOT PARTITIONED)\n                             SET LMSG1 = &STR(EXPECTED A PARTIONTED +\n                             DATASET - FOUND DSORG OF &ORG)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMOPEN DATAID(&ID)\n                         IF &LASTCC NE 0 THEN DO\n                             SET CSR = &VERCSR10\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(DATASET OPEN ERROR)\n                             SET LMSG1 = &STR(UNABLE TO OPEN &VERDSN10)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&VERMEM10)\n                         SET LCC = &LASTCC\n                         IF &LCC > 10 THEN DO\n                             SET CSR = &VERCSR10\n                             SET MSG = DTSM001\n                             SET UMSG1 = &STR(MEMBER NOT FOUND)\n                             SET LMSG1 = &STR(&VERMEM10 CANNOT BE +\n                             FOUND +\n                             ON &VERDSN10)\n                             ISPEXEC LMCLOSE DATAID(&ID)\n                             ISPEXEC LMFREE DATAID(&ID)\n                             GOTO &LABEL\n                             END\n                         ISPEXEC LMCLOSE DATAID(&ID)\n                         ISPEXEC LMFREE DATAID(&ID)\n                         END\n                     END\n\n\n                 ISPEXEC VGET ZTEMPF SHARED\n                 SET SW = &SW + 1\n\n                 ISPEXEC FTINCL &SKEL1\n                 IF &SKEL2 \u00ac= THEN ISPEXEC FTINCL &SKEL2\n\n        PROCJCL: +\n                 CONTROL MSG PROMPT\n                 SET CNAJCLC = &STR(&COMMENT)\n                 IF &STR(&TITLE) = THEN SET TITLE = +\n                 &STR(JCL HAS BEEN GENERATED)\n\n                 SET LEN    = &LENGTH(&STR(&TITLE))\n                 SET TEMP   = 80 - &LEN - 3\n                 SET TEMP   = &TEMP / 2\n                 SET STRING = &SUBSTR(1:&TEMP,------------+\n                 ------------------+\n                                              ----------)\n                 SET CNAJCLT = &STR(&STRING &TITLE &STRING.--)\n                 ISPEXEC DISPLAY PANEL(&DFTD)\n                 IF &LASTCC NE 0 THEN +\n                     DO\n                     ISPEXEC FTCLOSE\n                     EXIT CODE(0)\n                     END\n\n                 IF &STR(&ZCMD) = S THEN +\n                     DO\n                     ISPEXEC FTCLOSE\n                     ISPEXEC CONTROL DISPLAY LINE START(0)\n                     SUB '&ZTEMPF'\n                     EXIT CODE(0)\n                     END\n\n                 IF &STR(&ZCMD) = M THEN +\n                     DO\n                     GOTO LOOP\n                     END\n\n                 IF &STR(&ZCMD) = E THEN +\n                     DO\n                     ISPEXEC FTCLOSE\n                     ISPEXEC EDIT DATASET('&ZTEMPF') +\n                     PROFILE(&DFTPPROF) +\n                     MACRO(&DFTPMAC)\n                     EXIT CODE(0)\n                     END\n\n                 WRITE LOGIC ERROR OCCURRED IN DFTE\n                 EXIT CODE(20)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EDREC": {"ttr": 772, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0   CMD(ISREDRTI)\n/*********************************************************************/\n/*   BOB ZIMMERMAN                                                   */\n/*   CNA INSURANCE                                                   */\n/*   LAST MODIFIED 8508                                              */\n/*********************************************************************/\n\n         ISPEXEC EDREC INIT CMD(&CMD)\n         IF &LASTCC = 0 THEN EXIT\n\n         SET CNT = 0\nLOOP:    +\n         ISPEXEC EDREC QUERY\n         SET LCC = &LASTCC\n         IF &LCC = 0 THEN EXIT CODE(&CNT)\n         ISPEXEC DISPLAY PANEL(ISREDM02)\n         SET LCC = &LASTCC\n         IF &LCC \u00ac= 0 THEN DO\n             ISPEXEC EDREC DEFER\n             EXIT CODE(20)\n             END\n         IF &ZEDCMD = THEN ISPEXEC EDREC PROCESS PASSWORD(&PSWD)\n         IF &ZEDCMD = D THEN ISPEXEC EDREC DEFER\n         IF &ZEDCMD = C THEN ISPEXEC EDREC CANCEL\n         IF &ZEDCMD = THEN SET CNT = &CNT + 1\n         GOTO LOOP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EDRECD": {"ttr": 774, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 1   DSN CMD(ISREDRTI)\n/*********************************************************************/\n/*   BOB ZIMMERMAN                                                   */\n/*   CNA INSURANCE                                                   */\n/*   LAST MODIFIED 8508                                              */\n/*********************************************************************/\n\n         ISPEXEC EDREC INIT CMD(&CMD)\n         IF &LASTCC = 0 THEN EXIT\n\n         SET CNT = 0\nLOOP:    +\n         ISPEXEC EDREC QUERY\n         SET LCC = &LASTCC\n         IF &LCC = 0 THEN EXIT CODE(&CNT)\n         SET ZEDTDSN = &ZEDTDSN\n         SET ZEDTMEM = &ZEDTMEM\n         IF &ZEDTMEM = THEN SET DSNAME = &ZEDTDSN\n         ELSE SET DSNAME = &STR(&ZEDTDSN(&ZEDTMEM))\n         IF &DSNAME \u00ac= &DSN THEN DO\n             ISPEXEC EDREC DEFER\n             GOTO LOOP\n             END\n         ISPEXEC DISPLAY PANEL(ISREDM02)\n         SET LCC = &LASTCC\n         IF &LCC \u00ac= 0 THEN DO\n             ISPEXEC EDREC DEFER\n             EXIT CODE(20)\n             END\n         IF &ZEDCMD = THEN ISPEXEC EDREC PROCESS PASSWORD(&PSWD)\n         IF &ZEDCMD = D THEN ISPEXEC EDREC DEFER\n         IF &ZEDCMD = C THEN ISPEXEC EDREC CANCEL\n         IF &ZEDCMD = THEN SET CNT = &CNT + 1\n         GOTO LOOP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EDTE": {"ttr": 776, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "        PROC 0     DEBUG            CMD()            CNTCON() +\n                   CNTLST()         CNTMSG()         CNTSYM() +\n                   ESLIB()          IDSN()           MEMBER() +\n                   MEM0()           MSG()            OLDOP(0) +\n                   PANEL(EDTD)      SUBDSN()         SUBLIB() +\n                   SUBMEM()         SUBPRJ()         SUBTYP() +\n                   ZCMD()           ZERRMSG()\n            GLOBAL A\n                   SET   &MEMBER     =\n           CONTROL NOFLUSH\n                   IF    &CNTMSG = YES THEN CONTROL MSG\n                                       ELSE CONTROL NOMSG\n                   IF    &CNTLST = YES THEN CONTROL LIST\n                                       ELSE CONTROL NOLIST\n                   IF    &CNTCON = YES THEN CONTROL CONLIST\n                                       ELSE CONTROL NOCONLIST\n                   IF    &CNTSYM = YES THEN CONTROL SYMLIST\n                                       ELSE CONTROL NOSYMLIST\n                   IF    DEBUG = &DEBUG THEN +\n                      CONTROL MSG LIST SYMLIST CONLIST\n        /*\n                   ISPEXEC CONTROL ERRORS RETURN\n                   ISPEXEC VGET (PSWD) PROFILE\n                   SET &ZPSWDB = &PSWD\n                   SET   &PRJ = &STR(&&PRJ)\n                   SET   &LIB = &STR(&&LIB)\n                   SET   &TYP = &STR(&&TYP)\n                   SET   &MEM = &STR(&&MEM)\n                   SET   &SUBDSN = &STR(&&DSN)\n                   ISPEXEC VGET (ESLIB PRJ0 LIB0 TYP0 +\n                                 PRJA LIBA TYPA MEMA DSNI +\n                                 PRJB LIBB TYPB MEMB DSNJ +\n                                 PRJC LIBC TYPC MEMC DSNK +\n                                 PRJD LIBD TYPD MEMD DSNL +\n                                 PRJE LIBE TYPE MEME DSNM +\n                                 PRJF LIBF TYPF MEMF DSNN +\n                                 PRJG LIBG TYPG MEMG DSNO DSNP DSNS +\n                                 PRJH LIBH TYPH MEMH) PROFILE\n                   ISPEXEC DISPLAY PANEL(&PANEL)\n                   SET   &HOLDCC = &LASTCC\n                   IF    &HOLDCC GT 8 THEN +\n                      ISPEXEC SETMSG MSG(&ZERRMSG)\n                   ISPEXEC VPUT  (PROF)\n                   DO WHILE &HOLDCC = 0\n        /*\n                         SET   &OLDOP = &ZCMD\n                         IF    &ZCMD GT H THEN +\n                            DO\n                            SET   &IDSN = &STR(&SUBDSN&ZCMD)\n                            IF    &SUBSTR(1,&IDSN) = ' AND +\n                          &SUBSTR(&LENGTH(&IDSN),&IDSN)  NE  ' THEN +\n                               SET   &IDSN = &IDSN'\n                                                               ELSE +\n                            IF    &SUBSTR(1,&IDSN)  NE  ' AND +\n                          &SUBSTR(&LENGTH(&IDSN),&IDSN) = ' THEN +\n               SET   &IDSN = &SUBSTR(1:&EVAL(&LENGTH(&IDSN)-1),&IDSN)\n                            %$INDEX &STR(&IDSN) ( &DEBUG\n                            IF    ((&A = 0) AND +\n                                   (&MEMBER NE  ) AND +\n                                   (&STR(&MEMBER) NE &STR(*))) THEN +\n                               DO   /* ADD MEMBER TO IDSN */\n                               SET   &I = &LENGTH(&IDSN)\n                               IF    &SUBSTR(&I,&IDSN) = ' THEN +\n                  SET   &IDSN = &SUBSTR(1:&EVAL(&I-1),&IDSN)(&MEMBER)'\n                                                           ELSE +\n                                  SET   &IDSN = &IDSN(&MEMBER)\n                               END\n                            END\n                                          ELSE +\n                            DO\n                            SET   &LIB0 = &STR(&LIB&ZCMD)\n                            SET   &TYP0 = &STR(&TYP&ZCMD)\n                            SET   &IDSN = &STR(&LIB&ZCMD...&TYP&ZCMD)\n                            IF    &STR(&MEMBER) NE &STR(*) THEN +\n                               DO\n                               IF    &LENGTH(&STR(&MEMBER)) NE 0 THEN +\n                                  SET   &MEM0 = &STR(&MEMBER)\n                                                                 ELSE +\n                                  SET   &MEM0 = &MEM&ZCMD\n                               IF    &LENGTH(&MEM0) NE 0 THEN +\n                                  SET   &IDSN = &IDSN(&MEM0)\n                               END\n                            SET   &PROJ = &PRJ&ZCMD\n                            IF    &PROJ NE &SYSPREF THEN +\n                            SET   &IDSN = &STR('&PROJ..&IDSN')\n                            SET   &PRJ0 = &PROJ\n                            END\n                         ALLOC DD(DUM1) DS(&IDSN) SHR\n                         SET   &HOLDCC = &LASTCC\n                         FREE  DD(DUM1)\n                         SET   &PRJ0 = &PRJ0\n                         SET   &LIB0 = &LIB0\n                         SET   &TYP0 = &TYP0\n                         SET   &MEM0 = &STR(&MEM0)\n                         IF    &HOLDCC NE 0 THEN +\n                            SET   &MSG = EDTM007C\n                                            ELSE +\n                            DO\n                            ISPEXEC EDIT DATASET(&IDSN)\n                            SET   &HOLDCC = &LASTCC\n                            IF    &HOLDCC = 0 THEN +\n                            IF    &MEM0 = THEN +\n                               SET   &MSG = EDTM007A\n                                          ELSE +\n                               SET   &MSG = EDTM007K\n                                              ELSE +\n                            IF    &HOLDCC = 4 THEN +\n                            IF    &STR(&MEM0) = THEN +\n                               SET   &MSG = EDTM007J\n                                                ELSE +\n                               SET   &MSG = EDTM007L\n                                              ELSE +\n                               SET   &MSG = &ZERRMSG\n                            IF    &MSG = G081 THEN +\n                               DO\n                               %$INDEX &STR(&IDSN) ( &DEBUG\n                               IF    &A NE 0 THEN +\n                                  DO\n                                  ISPEXEC SETMSG MSG(&MSG)\n                          SET   &IDSN = &SUBSTR(1:&EVAL(&A-1),&IDSN)\n                                  IF    &SUBSTR(1:1,&IDSN) = ' THEN +\n                                     SET   &IDSN = &IDSN'\n                                  ISPEXEC EDIT DATASET(&IDSN)\n                                  SET   &HOLDCC = &LASTCC\n                                  IF    &HOLDCC = 0 THEN +\n                                  IF    &MEM0 = THEN +\n                                     SET   &MSG = EDTM007A\n                                                ELSE +\n                                     SET   &MSG = EDTM007K\n                                                    ELSE +\n                                  IF    &HOLDCC = 4 THEN +\n                                  IF    &STR(&MEM0) = THEN +\n                                     SET   &MSG = EDTM007J\n                                                      ELSE +\n                                     SET   &MSG = EDTM007L\n                                                    ELSE +\n                                     SET   &MSG = &ZERRMSG\n                                  END\n                               END\n                            END\n        /* END OF POS    END\n                      SET   &DSN = &STR(&IDSN)\n                      ISPEXEC DISPLAY PANEL(&PANEL)\n                      SET   &HOLDCC = &LASTCC\n                      IF    &HOLDCC GT 8 THEN +\n                         ISPEXEC SETMSG MSG(&ZERRMSG)\n                   END\n        /*\n                   ISPEXEC VPUT (ESLIB PRJ0 LIB0 TYP0 +\n                                 PRJA LIBA TYPA MEMA DSNI +\n                                 PRJB LIBB TYPB MEMB DSNJ +\n                                 PRJC LIBC TYPC MEMC DSNK +\n                                 PRJD LIBD TYPD MEMD DSNL +\n                                 PRJE LIBE TYPE MEME DSNM +\n                                 PRJF LIBF TYPF MEMF DSNN +\n                                 PRJG LIBG TYPG MEMG DSNO DSNP DSNS +\n                                 PRJH LIBH TYPH MEMH) PROFILE\n        /*\n                   SET &PSWD = &ZPSWDB\n                   ISPEXEC VPUT (PSWD) PROFILE\n                   EXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NTRKCLST": {"ttr": 780, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": " PROC 1 PARM1\n /*********************************************************************/\n /*                                                                   */\n /*      THIS CLIST IS CALLED BY THE ASSEMBLER PROGRAM \"NETTRACK\"     */\n /* AND PERFORMS TWO FUNCTIONS: IF THE PARM AT ENTRY IS \"ALLOCATE\"    */\n /* IT ALLOCATES A DATASET FOR THE PROGRAM WITH DISPOSITION \"OLD\".    */\n /* IF THE PARM IS \"FREE\", THEN THAT SAME DATASET/DD IS FREED.        */\n /*                                                                   */\n /*          - DENNIS BUSWELL, DEPT OF ADMIN/DP, 02/04/85             */\n /*                                                                   */\n /*********************************************************************/\n\n\n\n /*********************************************************************/\n /*                    INITIALIZATION                                 */\n /*********************************************************************/\n\n  CONTROL NOMSG NOPROMPT NOLIST\n\n /*********************************************************************/\n /*      THIS CLIST IS INVOLKED BY ASSEMBLER PROGRAM \"NETTRACK\", AND  */\n /* ITS PURPOSE IS TO ALLOCATE OR FREE A PERMANENT DATASET            */\n /* FOR USE BY THAT PROGRAM. WHICH OF THE TWO FUNCTIONS IS PERFORMED  */\n /* IS DETERMINED BY THE PARM PASSED TO THIS CLIST.                   */\n /*********************************************************************/\n\n   IF &PARM1 = ALLOCATE  THEN DO\n     FREE FI(NETRKLOG)\n     ALLOC FI(NETRKLOG) DA('SHARE.NETWORK.PROBLEM.LOG') OLD\n     SET &SAVECC = &LASTCC\n   END\n\n\n\n\n\n /*********************************************************************/\n /*      FREE THE DATASET                                             */\n /*********************************************************************/\n\n   IF &PARM1 = FREE THEN DO\n     FREE FI(NETRKLOG)\n     SET &SAVECC = &LASTCC\n   END\n\n  SET &LASTCC = &SAVECC\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDSEXREF": {"ttr": 782, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "        PROC 0\n        /*       CONTROL LIST SYMLIST CONLIST\n                 ISPEXEC CONTROL ERRORS CANCEL\n                 SET TABLE = &STR(PDS&SUBSTR(4:8,&SYSTIME))\n                 SET DSN1 =\n                 SET DSN2 =\n                 SET DSN3 =\n                 SET DSN4 =\n        LOOP:    ISPEXEC DISPLAY PANEL(PDSDXREF)\n                 IF &LASTCC \u00ac= 0 THEN EXIT\n\n                 SET XYZ = SCAN\n                 SET DUPESC = 0\n                 SET LINE1 =\n                 SET LINE2 =\n                 SET LINE3 =\n                 SET LINE4 =\n\n                 ISPEXEC LMINIT DATAID(ID) DATASET('&DSN1')\n                 IF &LASTCC \u00ac= 0 THEN DO\n                     ISPEXEC SETMSG MSG(&ZERRMSG)\n                     GOTO LOOP\n                     END\n\n                 ISPEXEC LMOPEN DATAID(&ID)\n                 IF &LASTCC \u00ac= 0 THEN DO\n                     ISPEXEC SETMSG MSG(&ZERRMSG)\n                     GOTO LOOP\n                     END\n                 SET DUPES = 0\n                ISPEXEC TBCREATE &TABLE NAMES(DSN LIB ZLCNORC DUPES) +\n                 NOWRITE REPLACE\n                 ISPEXEC TBSORT &TABLE FIELDS(DSN,C,A,LIB,C,A)\n\n                 SET LINE1  = &STR(PROCESSING &DSN1)\n                 ISPEXEC CONTROL DISPLAY LOCK\n                 ISPEXEC DISPLAY PANEL(PDSDXRE3)\n\n                 SET LIB = &DSN1\n                 SET LCC = 0\n                 DO WHILE &LCC = 0\n                     ISPEXEC CONTROL ERRORS RETURN\n                     ISPEXEC LMMLIST DATAID(&ID) MEMBER(DSN) STATS(YES)\n                     SET LCC = &LASTCC\n                     ISPEXEC CONTROL ERRORS CANCEL\n                     SET DSN = &DSN\n                     IF &LCC = 12 THEN DO\n                         SET UMSG1 =\n                         SET LMSG1 = &STR(&DSN1 IS NOT A PDS)\n                         ISPEXEC SETMSG MSG(DTSM001)\n                         GOTO LOOP\n                         END\n                     IF &LCC = 0 THEN ISPEXEC TBADD &TABLE ORDER\n                     END\n\n          ISPEXEC  LMMLIST  DATAID(&ID) OPTION(FREE)\n                 ISPEXEC LMCLOSE DATAID(&ID)\n                 ISPEXEC LMFREE DATAID(&ID)\n\n                 ISPEXEC LMINIT DATAID(ID) DATASET('&DSN2')\n                 IF &LASTCC \u00ac= 0 THEN DO\n                     ISPEXEC SETMSG MSG(&ZERRMSG)\n                     GOTO LOOP\n                     END\n\n                 ISPEXEC LMOPEN DATAID(&ID)\n                 IF &LASTCC \u00ac= 0 THEN DO\n                     ISPEXEC SETMSG MSG(&ZERRMSG)\n                     GOTO LOOP\n                     END\n\n                 SET LINE1  = &STR(PROCESSING &DSN1 COMPLETED)\n                 SET LINE2  = &STR(PROCESSING &DSN2)\n                 ISPEXEC CONTROL DISPLAY LOCK\n                 ISPEXEC DISPLAY PANEL(PDSDXRE3)\n\n                 SET LIB = &DSN2\n                 SET LCC = 0\n                 DO WHILE &LCC = 0\n                     ISPEXEC CONTROL ERRORS RETURN\n                     ISPEXEC LMMLIST DATAID(&ID) MEMBER(DSN) STATS(YES)\n                     SET LCC = &LASTCC\n                     ISPEXEC CONTROL ERRORS CANCEL\n                     SET DSN = &DSN\n                     IF &LCC = 12 THEN DO\n                         SET UMSG1 =\n                         SET LMSG1 = &STR(&DSN2 IS NOT A PDS)\n                         ISPEXEC SETMSG MSG(DTSM001)\n                         GOTO LOOP\n                         END\n                     IF &LCC = 0 THEN DO\n                         ISPEXEC TBTOP &TABLE\n                         SET SAVEDSN = &LIB\n                         SET SAVESIZE = &ZLMNORC\n                         SET SAVEMEM = &DSN\n                         ISPEXEC TBSCAN &TABLE ARGLIST(DSN)\n                         IF &LASTCC = 0 THEN DO\n                              SET DUPES = 1\n                              SET DUPESC = &DUPESC + 1\n                              ISPEXEC CONTROL DISPLAY SAVE\n                              ISPEXEC CONTROL DISPLAY LOCK\n                              ISPEXEC DISPLAY PANEL(PDSDXRE3)\n                              ISPEXEC CONTROL DISPLAY RESTORE\n                              ISPEXEC TBPUT &TABLE ORDER\n                              END\n                         SET LIB = &SAVEDSN\n                         SET ZLMNORC = &SAVESIZE\n                         SET DSN = &SAVEMEM\n                         ISPEXEC TBADD &TABLE    ORDER\n                         SET DUPES = 0\n                         END\n                     END\n\n          ISPEXEC  LMMLIST  DATAID(&ID) OPTION(FREE)\n                 ISPEXEC LMCLOSE DATAID(&ID)\n                 ISPEXEC LMFREE DATAID(&ID)\n\n                 IF &DSN3 NE THEN DO\n                 ISPEXEC LMINIT DATAID(ID) DATASET('&DSN3')\n                 IF &LASTCC \u00ac= 0 THEN DO\n                     ISPEXEC SETMSG MSG(&ZERRMSG)\n                     GOTO LOOP\n                     END\n\n                 ISPEXEC LMOPEN DATAID(&ID)\n                 IF &LASTCC \u00ac= 0 THEN DO\n                     ISPEXEC SETMSG MSG(&ZERRMSG)\n                     GOTO LOOP\n                     END\n\n                 SET LIB = &DSN3\n                 SET LCC = 0\n                 SET LINE2  = &STR(PROCESSING &DSN2 COMPLETED)\n                 SET LINE3  = &STR(PROCESSING &DSN3)\n                 ISPEXEC CONTROL DISPLAY LOCK\n                 ISPEXEC DISPLAY PANEL(PDSDXRE3)\n\n                 DO WHILE &LCC = 0\n                     ISPEXEC CONTROL ERRORS RETURN\n                     ISPEXEC LMMLIST DATAID(&ID) MEMBER(DSN) STATS(YES)\n                     SET LCC = &LASTCC\n                     ISPEXEC CONTROL ERRORS CANCEL\n                     SET DSN = &DSN\n                     IF &LCC = 12 THEN DO\n                         SET UMSG1 =\n                         SET LMSG1 = &STR(&DSN3 IS NOT A PDS)\n                         ISPEXEC SETMSG MSG(DTSM001)\n                         GOTO LOOP\n                         END\n                     IF &LCC = 0 THEN DO\n                         ISPEXEC TBTOP &TABLE\n                         SET SAVEDSN = &LIB\n                         SET SAVESIZE = &ZLMNORC\n                         SET SAVEMEM = &DSN\n                         ISPEXEC TBSCAN &TABLE ARGLIST(DSN)\n                         IF &LASTCC = 0 THEN DO\n                              SET DUPES = 1\n                              SET DUPESC = &DUPESC + 1\n                              ISPEXEC CONTROL DISPLAY SAVE\n                              ISPEXEC CONTROL DISPLAY LOCK\n                              ISPEXEC DISPLAY PANEL(PDSDXRE3)\n                              ISPEXEC CONTROL DISPLAY RESTORE\n                              ISPEXEC TBPUT &TABLE ORDER\n                              END\n                         SET LIB = &SAVEDSN\n                         SET ZLMNORC = &SAVESIZE\n                         SET DSN = &SAVEMEM\n                         ISPEXEC TBADD &TABLE    ORDER\n                         SET DUPES = 0\n                         END\n                     END\n\n          ISPEXEC  LMMLIST  DATAID(&ID) OPTION(FREE)\n                 ISPEXEC LMCLOSE DATAID(&ID)\n                 ISPEXEC LMFREE DATAID(&ID)\n                     END\n                 IF &DSN4 NE THEN DO\n                 ISPEXEC LMINIT DATAID(ID) DATASET('&DSN4')\n                 IF &LASTCC \u00ac= 0 THEN DO\n                     ISPEXEC SETMSG MSG(&ZERRMSG)\n                     GOTO LOOP\n                     END\n\n                 ISPEXEC LMOPEN DATAID(&ID)\n                 IF &LASTCC \u00ac= 0 THEN DO\n                     ISPEXEC SETMSG MSG(&ZERRMSG)\n                     GOTO LOOP\n                     END\n\n                 SET LINE3  = &STR(PROCESSING &DSN3 COMPLETED)\n                 SET LINE4  = &STR(PROCESSING &DSN4)\n                 ISPEXEC CONTROL DISPLAY LOCK\n                 ISPEXEC DISPLAY PANEL(PDSDXRE3)\n\n                 SET LIB = &DSN4\n                 SET LCC = 0\n                 DO WHILE &LCC = 0\n                     ISPEXEC CONTROL ERRORS RETURN\n                     ISPEXEC LMMLIST DATAID(&ID) MEMBER(DSN) STATS(YES)\n                     SET LCC = &LASTCC\n                     ISPEXEC CONTROL ERRORS CANCEL\n                     SET DSN = &DSN\n                     IF &LCC = 12 THEN DO\n                         SET UMSG1 =\n                         SET LMSG1 = &STR(&DSN4 IS NOT A PDS)\n                         ISPEXEC SETMSG MSG(DTSM001)\n                         GOTO LOOP\n                         END\n                     IF &LCC = 0 THEN DO\n                         ISPEXEC TBTOP &TABLE\n                         SET SAVEDSN = &LIB\n                         SET SAVESIZE = &ZLMNORC\n                         SET SAVEMEM = &DSN\n                         ISPEXEC TBSCAN &TABLE ARGLIST(DSN)\n                         IF &LASTCC = 0 THEN DO\n                              SET DUPES = 1\n                              SET DUPESC = &DUPESC + 1\n                              ISPEXEC CONTROL DISPLAY SAVE\n                              ISPEXEC CONTROL DISPLAY LOCK\n                              ISPEXEC DISPLAY PANEL(PDSDXRE3)\n                              ISPEXEC CONTROL DISPLAY RESTORE\n                              ISPEXEC TBPUT &TABLE ORDER\n                              END\n                         SET LIB = &SAVEDSN\n                         SET ZLMNORC = &SAVESIZE\n                         SET DSN = &SAVEMEM\n                         ISPEXEC TBADD &TABLE    ORDER\n                         SET DUPES = 0\n                         END\n                     END\n\n          ISPEXEC  LMMLIST  DATAID(&ID) OPTION(FREE)\n                 ISPEXEC LMCLOSE DATAID(&ID)\n                 ISPEXEC LMFREE DATAID(&ID)\n                     END\n                 ISPEXEC TBVCLEAR &TABLE\n                 SET DUPES = 1\n                 SET ZTDTOP = 1\n        LOOP2:   +\n                 SET SDUPES = &DUPES\n                 ISPEXEC TBVCLEAR &TABLE\n                 SET DUPES = &SDUPES\n                 ISPEXEC TBSARG &TABLE\n                 ISPEXEC TBTOP  &TABLE\n                 ISPEXEC TBSKIP &TABLE NUMBER(&ZTDTOP)\n                 ISPEXEC TBDISPL &TABLE PANEL(PDSDXRE2)\n                 IF &LASTCC = 0 THEN GOTO LOOP2\n                 ISPEXEC TBEND &TABLE\n                 GOTO LOOP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSOEHELP": {"ttr": 1027, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 1   COMMAND  DEBUG\n         IF &DEBUG \u00ac= THEN CONTROL LIST SYMLIST CONLIST\n         ISPEXEC CONTROL ERRORS RETURN\n         SET TABLE = &STR(TSO&SUBSTR(4:8,&SYSTIME))\n         ISPEXEC LMINIT DATAID(ID) DDNAME(SYSHELP)\n         IF &LASTCC \u00ac= 0 THEN DO\n             ISPEXEC SETMSG MSG(&ZERRMSG)\n             EXIT CODE(12)\n             END\n\n         ISPEXEC LMOPEN DATAID(&ID)\n         IF &LASTCC \u00ac= 0 THEN DO\n             ISPEXEC SETMSG MSG(&ZERRMSG)\n             ISPEXEC LMFREE DATAID(&ID)\n             EXIT CODE(12)\n             END\n\n         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&COMMAND)\n         IF &LASTCC \u00ac= 0 THEN DO\n             ISPEXEC SETMSG MSG(&ZERRMSG)\n             ISPEXEC LMCLOSE DATAID(&ID)\n             ISPEXEC LMFREE DATAID(&ID)\n             EXIT CODE(12)\n             END\n         SET CMD =\n         SET RECORD =\n         SET TYPE =\n         ISPEXEC CONTROL ERRORS CANCEL\n         ISPEXEC TBCREATE &TABLE NAMES(TYPE RECORD) NOWRITE REPLACE\n         IF &LASTCC \u00ac= 0 THEN DO\n             ISPEXEC SETMSG MSG(&ZERRMSG)\n             ISPEXEC LMCLOSE DATAID(&ID)\n             ISPEXEC LMFREE DATAID(&ID)\n             EXIT CODE(12)\n             END\n\n         DO WHILE &SUBSTR(1,&STR(&RECORD)    ) \u00ac= +\n             &SUBSTR(2,&STR(()X)  )\n             ISPEXEC LMGET DATAID(&ID) MODE(INVAR) DATALOC(RECORD) +\n             DATALEN(RECLEN) MAXLEN(72)\n             IF &LASTCC = 8 THEN GOTO DISPL1\n             END\n\n         SET TYPE = &SUBSTR(2:2,&STR(&RECORD  )  )\n         SET CMDHELP =\n   SET RECORD = &STR(&SUBSTR(3:&LENGTH(&STR(&RECORD)),&STR(&RECORD)))\n         ISPEXEC TBADD &TABLE\n\n         DO WHILE &SUBSTR(1,&STR(&RECORD)    ) \u00ac= +\n             &SUBSTR(2,&STR((=Y)  )\n             ISPEXEC LMGET DATAID(&ID) MODE(INVAR) DATALOC(RECORD) +\n             DATALEN(RECLEN) MAXLEN(72)\n             IF &LASTCC = 8 THEN GOTO DISPL1\n             IF &SUBSTR(1,&STR(&RECORD)   ) EQ &SUBSTR(2:2,&STR(()X) ) +\n             THEN DO\n                  SET TYPE = &SUBSTR(2,&STR(&RECORD ) )\n                  IF &SUBSTR(2,&STR(&RECORD)   ) EQ +\n                      &SUBSTR(2,&STR(()X ) ) OR +\n                      &SUBSTR(2,&STR(&RECORD)   ) EQ P OR +\n                      &SUBSTR(2,&STR(&RECORD)   ) EQ &STR(O) THEN DO\n                      SET TYPE = &SUBSTR(2,&STR(()X ) )\n   SET RECORD = &STR(&SUBSTR(3:&LENGTH(&STR(&RECORD)),&STR(&RECORD)))\n                      ISPEXEC TBADD &TABLE\n                      END\n                  ELSE DO\n   SET RECORD = &STR(  &SUBSTR(3:&LENGTH(&STR(&RECORD)),&STR(&RECORD)))\n                  ISPEXEC TBADD &TABLE\n                  END\n                 END\n             ELSE DO\n                 ISPEXEC TBADD &TABLE\n                 IF &LASTCC \u00ac= 0 THEN DO\n                     ISPEXEC SETMSG MSG(&ZERRMSG)\n                     END\n                 END\n             END\nDISPL1:  +\n         ISPEXEC LMCLOSE DATAID(&ID)\n         ISPEXEC LMFREE DATAID(&ID)\n         SET TYPE = &SUBSTR(2,&STR(()X  ) )\n         SET RECORD =\n         ISPEXEC TBADD &TABLE\n         SET TYPE = F\n         ISPEXEC TBADD &TABLE\n         SET TYPE = X\n         ISPEXEC TBADD &TABLE\n         ISPEXEC TBTOP &TABLE\n         SET CMD = &STR(&COMMAND)\nDISPL:   +\n         SET SW =\n         SET CSRPOS = &LENGTH(&COMMAND)\n         SET SAVETYPE = &STR(&TYPE)\n         ISPEXEC TBVCLEAR &TABLE\n         SET TYPE = &STR(&SAVETYPE)\n         ISPEXEC TBSARG &TABLE\n         ISPEXEC TBDISPL &TABLE +\n             PANEL(TSOBHELP) CSRPOS(&EVAL(&CSRPOS + 2))\n         IF &LASTCC \u00ac= 0 THEN DO\n             ISPEXEC TBEND &TABLE\n             EXIT\n             END\n         ISPEXEC VGET (ZVERB ZSCROLLN) SHARED\n         IF &STR(&ZVERB) NE THEN DO\n             IF &ZVERB = UP THEN SET MINUS = &STR(-)\n             ELSE SET MINUS =\n             ISPEXEC TBSKIP &TABLE NUMBER(&MINUS.&ZSCROLLN)\n             GOTO DISPL\n             END\n\n         IF &SW NE THEN DO\n             ISPEXEC TBTOP &TABLE\n             GOTO DISPL\n             END\n\n         ISPEXEC CONTROL DISPLAY LINE START(10)\n         ISPEXEC SELECT CMD(&CMD)\n         GOTO DISPL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TUTPRINT": {"ttr": 1030, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "START:   CONTROL NOMSG\n         ISPEXEC VGET     (REMOT)       SHARED\n         FREE  F(LISTING CTABLE LSTDCB)\n         ATTR  LSTDCB     LRECL(137) BLKSIZE(141) RECFM(V B A)\n         SET &DEST = &STR( )\n         IF &REMOT \u00ac= &STR( ) THEN SET &DEST = &STR(DEST(&REMOT))\n         DELETE TUTPRINT.LIST\n         ALLOC F(LISTING) SYSOUT(X) &DEST USING(LSTDCB) HOLD\n         ALLOC F(CTABLE)  SYSOUT(X) &DEST USING(LSTDCB) HOLD\n         ISPEXEC SELECT   PGM(TUTPRNT2) PARM(ISASIZE(10K))\n         ISPEXEC CONTROL  DISPLAY       REFRESH\n         FREE  F(CTABLE LISTING LSTDCB)\nFINISH:  EXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT460/FILE460.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT460", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}