{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011536000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE231.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE231.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x15'", "DS1TRBAL": "b'\"\\xcc'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xa7\\x00\\x00\\x01\\xa7\\x00\\x03\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOC": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "$DOC - DOCUMENTATION FOR TASKLIST SOURCE LIBRARY\n\nTHIS MEMBER DESCRIBES THE TASKLIST APPLICATION, WHAT THE PIECES ARE, HOW\nTO PUT IT TOGETHER, AND HOW TO EXECUTE IT.\n\nUPDATED 11/11/86: I HAVE REMEMBERED TO INCLUDE THE \"TASKPRT\" SKELETON\nAND PANEL \"TASKNDSN\" IN THIS LIBRARY, AND I'VE INCLUDED PROGRAM X1A100\nALONG WITH NOTES ABOUT WHAT IT IS.\n\n------------------------------------------------------------------------\n\nADMINISTRIVIA (I HAVE TO PUT THIS IN HERE OR THEY FIRE ME):\n\nTHIS APPLICATION WAS DEVELOPED BY:\n  JOE VEILLEUX\n  MIS CENTRAL SOFTWARE SERVICES - ADMIN III\n  AIR PRODUCTS AND CHEMICALS, INC. (SHARE INSTALLATION CODE APC).\n  P.O. BOX 538\n  ALLENTOWN, PA 18105\n  (215) 481-4558\n\nNEITHER JOE VEILLEUX NOR AIR PRODUCTS AND CHEMICALS ASSUMES ANY\nREPONSIBILITY FOR THE CONTINUED HEALTH OR SANITY OF ANYONE WHO CHOOSES\nTO USE THIS APPLICATION, ETC., ETC., ETC.  THE APPLICATION MAY BE SHARED\nWITH ANY WILLING PARTY AS LONG AS NO MONEY CHANGES HANDS. THIS IS MEANT\nTO BE A SAMPLE OF USING ISPF TABLE SERVICES FOR SOMETHING USEFULL (OR\nREASONABLY SO), AND IS CERTAINLY NOT INTENDED TO BE A COMERCIALLY-\nVIABLE SOFTWARE PRODUCT (I DO A BETTER JOB ON THE STUFF I SELL).\n\n------------------------------------------------------------------------\n\nWHAT THE APPLICATION IS:\n\nTHE TASKLIST APPLICATION IS A SET OF ISPF COMPONENTS (A CLIST, SEVERAL\nPANELS, A SKELETON, AND A MESSAGE MEMBER) WHICH LETS YOU MAINTAIN AN\nONLINE THINGS-TO-DO LIST. YOU CAN SORT THE LIST VARIOUS WAYS, PRINT THE\nLIST, UPDATE TASK DESCRIPTIONS/PRIORITIES/DATE-DUE/ETC.  IN SHORT, IT'S\nA FAIRLY USEFUL LITTLE TOOL FOR ORGANIZING LISTS OF STUFF YOU'VE GOT TO\nGET DONE (I ALWAYS LIKED ORGANIZING BETTER THAN DOING, ANYWAY).\n\n------------------------------------------------------------------------\n\nHOW DO I GET IT TO OPERATE?\n\nONCE YOU'VE GOT THIS PDS ON DISK, COPY THE MEMBER \"SPTASKDR\" TO YOUR\nINSTALLATION'S CLIST LIBRARY (OR TO YOUR OWN PRIVATE CLIST LIBRARY\nALLOCATED TO DDNAME \"SYSPROC\"), COPY \"TASK00\" TO YOUR ISPF MESSAGE\nLIBRARY, COPY \"TASKPRT\" TO YOUR ISPF FILE-TAYLORING SKELETON LIBRARY,\nAND COPY ALL THE OTHER MEMBERS TO YOUR ISPF PANEL LIBRARY. JUMP INTO\nISPF AND INVOKE MENU 7.1 (\"INVOKE DIALOG FUNCTION/SELECTION MENU\"\nSUBOPTION OF THE DIALOG TEST FACILITY).  FILL IN \"%SPTASKDR\" IN THE\n\"CMD\" FIELD, AND HIT ENTER.  YOU SHOULD BE GREETED WITH A PANEL CALLED\n\"ONLINE TASKS-LIST UPDATE PANEL\", AND THERE SHOULD BE A MESSAGE SAYING\n\"TASKS-LIST CREATED\" IN THE SHORT MESSAGE FIELD.  THERE WILL BE AN EMPTY\nLIST OF TASKS UNDER THE COLUMN HEADINGS (HOW DO YOU LIST AN EMPTY LIST,\nANYWAY???).\n\nTHE SHORT MESSAGE IS WARNING YOU THAT IT DIDN'T FIND A TASKLIST TABLE,\nSO IT HAS CREATED ONE FOR YOU.  **THIS IS NORMAL** THE FIRST TIME YOU\nINVOKE THE APPLICATION.\n\nHIT ENTER ONCE TO CLEAR THE SHORT MESSAGE, THEN HIT PF1 TO JUMP INTO THE\nGENERAL SECTION OF THE TUTORIAL.  VIEW THE TUTORIAL SEQUENTIALLY BY\nHITTING ENTER REPEATEDLY (THIS SAVES ME FROM HAVING TO EXPLAIN HOW TO\nUSE THE APPLICATION HERE).\n\nBEFORE YOU TRY TO ACTUALLY USE THE \"PRINT\" OPTION, LOOK AT THE NOTE\nBELOW ABOUT PROGRAM X1A100 AND FOLLOW ITS RECOMENDATION.\n\nONCE YOU HAVE CHECKED-OUT THE APPLICATION AS DESCRIBED ABOVE, YOU'LL\nPROBABLY WANT TO MAKE IT A LITTLE EASIER FOR YOUR USERS TO INVOKE THE\nAPPLICATION. ADD AN ENTRY TO ONE OF YOUR EXISTING ISPF SELECTION MENUS\n(ISR@PRIM OR ANY OTHER SELECTION MENU). THE SELECTION SHOULD INVOKE\nCOMMAND \"%SPTASKDR\":\n\n%-----------------------------  APCI UTILITIES  --------------------------------\n%OPTION ===>_ZCMD                                                              +\n%\n+WHAT WOULD YOU LIKE TO DO?\n%\n%   1 +TASK        - ONLINE TASKS-LIST UTILITY\n%\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                1,'CMD(%SPTASKDR)'\n             TASK,'CMD(%SPTASKDR)'\n              ' ',' '\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n\nI LIKE TO ALLOW BOTH THE NUMBER (\"1\") AND THE NAME OF THE APPLICATION\n(\"TASK\") TO BE USED TO SELECT AN APPLICATION.\n\n* * * PLEASE NOTE: * * *\nPROGRAM X1A100: THIS IS A PL/1 PROGRAM WHICH IS USED BY THE SPTASKDR\nCLIST TO GET INFORMATION FROM THE TSO SESSION'S JOB CARD (SPECIFICALLY,\nUSER'S NAME). TO DO THIS, IT CALLS A LOCALLY-WRITTEN SUBROUTINE CALLED\n\"ACOUNT\" WHICH I HAVEN'T INCLUDED SINCE I'M SURE IT WON'T WORK ON\nANYONE'S SYSTEM BUT OURS (OR AT LEAST I DON'T KNOW ENOUGH ABOUT IT TO BE\nSURE IT WILL). IF YOU HAVE A SIMILAR PROGRAM, YOU COULD CHANGE THE CALL\nTO \"ACOUNT\" IN THE X1A100 PROGRAM TO CALL YOUR PROGRAM. THEN, COMPILE\nAND LINK X1A100 AND PUT IT INTO YOUR ISPF LOAD LIBRARY (DDNAME ISPLLIB\nOR IN STEPLIB OR THE SYSTEM LINK LIST). IF YOU DON'T HAVE SUCH A\nPROGRAM, JUST COMMENT-OUT THE CALL TO X1A100 IN THE SPTASKDR CLIST AND\n(IF YOU FEEL LIKE IT) REMOVE THE REFERENCE TO &JCNAME IN THE TASKPRT\nSKELETON.  THE LISTING WILL THEN PRINT WITHOUT THE USER'S NAME IN THE\nTITLE, BUT THAT'S LIFE.\n\nIF YOU HAVE TROUBLE GETTING THE APPLIATION TO WORK OR IF YOU HAVE\nQUESTIONS ABOUT ISPF TABLE HANDLING, FEEL FREE TO CALL OR WRITE TO ME,\nOR CATCH ME AT SHARE (I'LL BE THE ONE LEAVING SCIDS LAST).\n\n------------------------------------------------------------------------\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SPTASKDR": {"ttr": 519, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 TEST TBLDSN(TASKLIST)\n/*TITLE SPTASKDR: DRIVER FOR ONLINE TASKS-LIST APPLICATION   (CSS)    */\n/* AUTHOR:  JOE VEILLEUX                                              */\n/* HISTORY: 27FEB85-JJV-1.00-ORIGINAL EXPERIMENTAL RELEASE            */\n/*          28FEB85-JJV-1.01-ADD ACK FOR SORT, SAVE                   */\n/*          08MAR85-JJV-1.02-ADD NOTEBOOK, CHANGE DEFAULT SORT ORDER  */\n/*          18MAR85-JJV-1.03-CHANGE DEFAULT SORT ORDER AGAIN          */\nCONTROL MAIN END(ENDO) NOMSG\nIF &TEST EQ TEST THEN CONTROL LIST SYMLIST CONLIST MSG\nISPEXEC VGET (TASKSRTF) PROFILE\nIF &LASTCC EQ 8 OR &TASKSRTF EQ THEN SET &TASKSRTF = &STR(**UNKNOWN**)\nISPEXEC VGET (TASKNDSN) PROFILE\nIF &LASTCC EQ 8 OR &TASKNDSN EQ THEN SET &TASKNDSN = &STR(**NOT SET**)\nISPEXEC TBOPEN TASKLIST WRITE LIBRARY(ISPTABL) SHARE\nIF &LASTCC EQ 8 THEN DO\n  ISPEXEC TBCREATE TASKLIST WRITE LIBRARY(ISPTABL) SHARE +\n    NAMES(CATEGORY TASK PRIORITY TARGDATE TARGSORT HOURS STATUS)\n  IF &LASTCC NE 0 THEN DO\n    ISPEXEC SETMSG MSG(TASK001S)\n    EXIT\n    ENDO\n  ISPEXEC SETMSG MSG(TASK001T)\n  ISPEXEC TBSORT TASKLIST +\n    FIELDS(STATUS,C,D PRIORITY,N,A HOURS,N,D TARGSORT,N,A)\n  SET &TASKSRTF = &STR(STATUS(D) PRIORITY HOURS(D) DATE)\n  ISPEXEC VPUT (TASKSRTF) PROFILE\n  ENDO\n/* SET FLAG TO DELETE \"PRINT\" DATASET ON EXIT */\nSET &PRTDEL =\nSET &RC = 0\nSET &ZTDTOP = 0\nSET &UPDTFLAG =\n/* DISPLAY THE TABLE FOR UPDATE UNTIL \"END\" OR \"CANCEL\" */\nDO WHILE 1=1\n  IF &RC EQ 4 THEN ISPEXEC TBDISPL TASKLIST POSITION(CRP)\n  ELSE DO\n    /* REPOSITION THE TABLE AS THE USER LAST SAW IT */\n    ISPEXEC TBTOP   TASKLIST\n    ISPEXEC TBSKIP  TASKLIST NUMBER(&ZTDTOP)\n    /* HONOR A PENDING SCROLL REQUEST (IF ANY) */\n    ISPEXEC VGET (ZVERB ZSCROLLN)\n    IF &ZVERB EQ UP THEN ISPEXEC TBSKIP TASKLIST NUMBER(-&ZSCROLLN)\n    ELSE IF &ZVERB EQ DOWN THEN ISPEXEC TBSKIP TASKLIST +\n      NUMBER(&ZSCROLLN)\n    /* NOW REDISPLAY THE TABLE */\n    ISPEXEC TBDISPL TASKLIST PANEL(TASKTBD) POSITION(CRP)\n    ENDO\n  SET &RC = &LASTCC\n  IF &CMD EQ CANCEL OR &RC GT 4 THEN GOTO LOOPEXIT /* EXIT LOOP */\n  ELSE IF &CMD EQ SORT THEN DO\n    IF &SF1 EQ THEN DO\n      SET &SF1 = STATUS\n      SET &SF2 = PRIORITY\n      SET &SF3 = HOURS\n      SET &SF4 = DATE\n      SET &SF5 =\n      ENDO\n    SET &SORTFLDS =\n    SET &TASKSRTF =\n    SET &I = 1\n    DO WHILE &I LT 6\n      SET &SF = SF&I\n      SET &S = &&&SF\n      IF &S EQ CATEGORY THEN DO\n        SET &SORTFLDS = &STR(&SORTFLDS CATEGORY,C,A)\n        SET &TASKSRTF = &STR(&TASKSRTF CATEGORY)\n        ENDO\n      ELSE IF &S EQ PRIORITY THEN DO\n        SET &SORTFLDS = &STR(&SORTFLDS PRIORITY,N,A)\n        SET &TASKSRTF = &STR(&TASKSRTF PRIORITY)\n        ENDO\n      ELSE IF &S EQ DATE THEN DO\n        SET &SORTFLDS = &STR(&SORTFLDS TARGSORT,N,A)\n        SET &TASKSRTF = &STR(&TASKSRTF DATE)\n        ENDO\n      ELSE IF &S EQ HOURS THEN DO\n        SET &SORTFLDS = &STR(&SORTFLDS HOURS,N,D)\n        SET &TASKSRTF = &STR(&TASKSRTF HOURS(D))\n        ENDO\n      ELSE IF &S EQ STATUS THEN DO\n        SET &SORTFLDS = &STR(&SORTFLDS STATUS,C,D)\n        SET &TASKSRTF = &STR(&TASKSRTF STATUS(D))\n        ENDO\n      SET &I = &I + 1\n      ENDO\n    ISPEXEC VPUT (TASKSRTF) PROFILE\n    ISPEXEC TBSORT TASKLIST FIELDS(&SORTFLDS)\n    ISPEXEC SETMSG MSG(TASK005R)\n    ENDO\n  ELSE IF &CMD EQ SAVE THEN DO\n    ISPEXEC TBSAVE TASKLIST REPLCOPY PAD(15) LIBRARY(ISPTABL)\n    SET &UPDTFLAG =\n    ISPEXEC SETMSG MSG(TASK005S)\n    ENDO\n  ELSE IF &CMD EQ INPUT THEN DO\n    ISPEXEC CONTROL DISPLAY SAVE\n    DO WHILE &INPN GE 1\n      ISPEXEC TBVCLEAR TASKLIST\n      ISPEXEC DISPLAY PANEL(TASKUPD)\n      IF &LASTCC EQ 0 THEN DO\n        ISPEXEC TBADD TASKLIST ORDER\n        SET &UPDTFLAG = YES\n        ENDO\n      SET &INPN = &INPN-1\n      ENDO\n    ISPEXEC CONTROL DISPLAY RESTORE\n    ENDO\n  ELSE IF &CMD EQ NOTEBOOK THEN DO\n    ISPEXEC CONTROL DISPLAY SAVE\n    IF &NBDSN EQ THEN DO /* EDIT NOTEBOOK DATASET */\n      ISPEXEC VGET (TASKNDSN) PROFILE\n      IF &LASTCC NE 0 OR &TASKNDSN EQ THEN +\n        ISPEXEC DISPLAY PANEL(TASKNDSN)\n      IF &LASTCC EQ 0 THEN DO\n        ISPEXEC VPUT (TASKNDSN) PROFILE\n        ERROR DO\n          ERROR DO\n            ISPEXEC SETMSG MSG(TASK006E)\n            GOTO SKPNBALC\n            ENDO\n          ATTR NBATTR RECFM(V B) LRECL(80) BLKSIZE(6233)\n          ALLOC F(N) DSN(&TASKNDSN($TASK$)) NEW REUSE +\n            SP(10 10) TRACKS DIR(5) USING(NBATTR)\n          FREE ATTR(NBATTR)\n          ERROR OFF\n          ENDO\n        ALLOC F(N) DSN(&TASKNDSN) SHR REUSE\n        SKPNBALC: ERROR OFF\n        FREE F(N)\n        ERROR OFF\n        ISPEXEC CONTROL ERRORS RETURN\n        ISPEXEC EDIT DATASET(&TASKNDSN)\n        IF &LASTCC GT 4 THEN ISPEXEC SETMSG MSG(TASK006T)\n        ISPEXEC CONTROL ERRORS CANCEL\n        ENDO\n      ENDO\n    ELSE DO\n      SET &TASKNDSN = &NBDSN\n      ISPEXEC VPUT (TASKNDSN) PROFILE\n      ENDO\n    ISPEXEC CONTROL DISPLAY RESTORE\n    ENDO\n  ELSE IF &CMD EQ PRT THEN DO\n    ERROR DO\n      ERROR OFF\n      FREE ATTR(VBA)\n      ATTR VBA RECFM(V B A) LRECL(137) BLKSIZE(6233) DSORG(PS)\n      ALLOC F(ISPFILE) DSN(TASKTEMP.LISTING) REUSE +\n        USING(VBA) SP(1 1) TRACKS\n      SET &PRTDEL = DELETE\n      ENDO\n    ALLOC F(ISPFILE) DSN(TASKTEMP.LISTING) OLD REUSE\n    ERROR OFF\n    ISPEXEC SELECT PGM(X1A100)\n    ISPEXEC FTOPEN\n    ISPEXEC FTINCL TASKPRT\n    ISPEXEC FTCLOSE\n    IF &PRTDEST EQ THEN +\n      PRINTO TASKTEMP.LISTING UCS(GO12) NOHEADING NOMSG\n    ELSE PRINTO TASKTEMP.LISTING NOHEADING NOMSG DEST(&PRTDEST)\n    ISPEXEC SETMSG MSG(TASK003P)\n    ENDO\n  ELSE IF &ZTDSELS GE 1 THEN DO\n    IF &ACT EQ D THEN -\n      DO WHILE &N GE 1\n        ISPEXEC TBDELETE TASKLIST\n        ISPEXEC TBSKIP TASKLIST\n        /* CHECK RETURN CODE TO GUARD AGAINST DELETING TOO MANY */\n        IF &LASTCC NE 0 THEN SET &N = 0\n        ELSE SET &N = &N-1\n        SET &UPDTFLAG = YES\n        ENDO\n    ELSE IF &ACT EQ R THEN -\n      DO WHILE &N GE 1\n        ISPEXEC TBADD TASKLIST ORDER\n        SET &N = &N-1\n        SET &UPDTFLAG = YES\n        ENDO\n    ELSE IF &ACT EQ U THEN DO\n      ISPEXEC CONTROL DISPLAY SAVE\n      ISPEXEC DISPLAY PANEL(TASKUPD)\n      IF &LASTCC EQ 0 THEN DO\n        ISPEXEC TBPUT TASKLIST ORDER /* RESAVE ROW IN TABLE */\n        SET &UPDTFLAG = YES\n        ENDO\n      ISPEXEC CONTROL DISPLAY RESTORE\n      ENDO\n    ELSE IF &ACT EQ N THEN DO\n      ISPEXEC CONTROL DISPLAY SAVE\n      ISPEXEC VGET (TASKNDSN) PROFILE\n      IF &LASTCC NE 0 OR &TASKNDSN EQ THEN -\n        ISPEXEC DISPLAY PANEL(TASKNDSN)\n      IF &LASTCC EQ 0 THEN DO\n        ISPEXEC VPUT (TASKNDSN) PROFILE\n        ERROR DO\n          ERROR DO\n            ISPEXEC SETMSG MSG(TASK006E)\n            GOTO SKPNALC\n            ENDO\n          ATTR NBATTR RECFM(V B) LRECL(80) BLKSIZE(6233)\n          ALLOC F(N) DSN(&TASKNDSN) NEW REUSE +\n            SP(10 10) TRACKS DIR(5) USING(NBATTR)\n          FREE ATTR(NBATTR)\n          ERROR OFF\n          ENDO\n        ALLOC F(N) DSN(&TASKNDSN) SHR\n        SKPNALC: ERROR OFF\n        FREE F(N)\n        ERROR OFF\n        ISPEXEC EDIT DATASET(&TASKNDSN(&CATEGORY))\n        IF &LASTCC EQ 0 THEN ISPEXEC SETMSG MSG(TASK006S)\n        ELSE ISPEXEC SETMSG MSG(TASK006N)\n        ENDO\n      ISPEXEC CONTROL DISPLAY RESTORE\n      ENDO\n    ENDO\n  ENDO\nLOOPEXIT: -\nFREE F(ISPFILE) ATTR(VBA) &PRTDEL\nIF &CMD EQ CANCEL THEN DO\n  ISPEXEC TBEND TASKLIST\n  ISPEXEC SETMSG MSG(TASK002C)\n  ENDO\nELSE IF &UPDTFLAG EQ THEN DO\n  ISPEXEC TBEND TASKLIST\n  ISPEXEC SETMSG MSG(TASK002N)\n  ENDO\nELSE DO\n  ISPEXEC TBCLOSE TASKLIST REPLCOPY PAD(15) LIBRARY(ISPTABL)\n  ISPEXEC SETMSG MSG(TASK002S)\n  ENDO\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TASKNDSN": {"ttr": 524, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  @ TYPE(INPUT) INTENS(LOW) CAPS(OFF)\n  # TYPE(INPUT) INTENS(LOW) CAPS(ON)\n  + TYPE(TEXT) INTENS(LOW) SKIP(ON)\n)BODY EXPAND(//)\n%-/-/- Online Tasks-List -/-/-\n%COMMAND ===>_ZCMD                                                             +\n%\n+Specify dataset name of your notebook dataset below. If this dataset\n does not exist, it will be created for you.\n%\n  %===>#TASKNDSN                                 +\n%\n+Hit%ENTER+to proceed with editing the notebook\n+Hit%&EPF+to cancel this operation and return to tasks-list panel\n)INIT\n  /******************************************************************/\n  /* Panelid: TASKNDSN                                              */\n  /* Author:  Joe Veilleux, MIS Tech Support                        */\n  /* History: 08Mar85-JJV-1.00-Original experimental release        */\n  /* Purpose: Allow user to enter dsname of notebook dataset        */\n  /******************************************************************/\n  &HPF = PFK(HELP)\n  IF (&HPF = &Z)\n    &HPF = 'HELP'\n  &EPF = PFK(END)\n  IF (&EPF = &Z)\n    &EPF = 'END'\n  &D = TRUNC(&EPF,2)\n  &DT = .TRAIL\n  &D = TRUNC(&DT,1)\n  IF (&D = '0')\n    &DT = .TRAIL\n    &EPF = 'PF&DT'\n  &ZCMD = &Z\n  &TASKNDSN = NOTEBOOK\n)PROC\n  VER (&TASKNDSN,NB,DSNAME)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TASKPRT": {"ttr": 526, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM NAME:    TASKPRT\n)CM AUTHOR:  JOE VEILLEUX, MIS TECH SUPPORT\n)CM HISTORY: 27FEB85-JJV-1.00-ORIGINAL EXPERIMENTAL RELEASE\n)CM          28FEB85-JJV-1.01-Remove blank between tasks\n)CM PURPOSE: THIS FILE-TAYLORING SKELETON IS USED TO GENERATE THE\n)CM          LISTING OF A USER'S TASKS-LIST.\n1Tasks List for &JCNAME (&ZUSER)\n &CURDATE - &ZTIME\n)BLANK\n Current sort order: &TASKSRTF\n)TB 15 20 29 35 41\n)BLANK\n                   Target\n                    Done    Est   Task  Task\n Category Priority  Date   Hours Status Description\n -------- -------- ------- ----- ------ -------------------------------?\n---------------\n)DOT TASKLIST\n &CATEGORY!&PRIORITY!&TARGDATE!&HOURS!&STATUS!&TASK\n)ENDDOT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TASKTBD": {"ttr": 528, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  # TYPE(INPUT) INTENS(LOW) CAPS(ON)\n  @ TYPE(OUTPUT) INTENS(LOW) SKIP(ON)\n  + TYPE(TEXT) INTENS(LOW) SKIP(ON)\n)BODY EXPAND(//)\n%-/-/- Online Tasks-List Update Panel -/-/-\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_AMT +\n%\n+Current sort order: &TASKSRTF\n+Dataset name of notebook: &TASKNDSN\n+\n%               Target  Est\n%Act Category P Date    Hour Stat Task Description\n%--- -------- - ------- ---- ---- ----------------------------------------------\n)MODEL CLEAR(A)\n#A  @CATEGORY@Z@Z      @Z   @Z   @TASK\n+--- -------- - ------- ---- ---- ----------------------------------------------\n)INIT\n  /******************************************************************/\n  /* Panelid: TASKTBD                                               */\n  /* Author:  Joe Veilleux, MIS Tech Support                        */\n  /* History: 27Feb85-JJV-1.00-Original experimental release        */\n  /*          28Feb85-JJV-1.01-Correct to allow SAVE command        */\n  /*          08Mar85-JJV-1.02-Implement notebook facility          */\n  /* Purpose: This panel displays a user's tasks list for update    */\n  /******************************************************************/\n  .ZVARS = '(PRIORITY TARGDATE HOURS STATUS)'\n  .HELP = TASKTCON\n  &ZHTOP = TASKTCON\n  &AMT  = PAGE\n  &ZTDMARK = '=============================== BOTTOM OF TABLE +\n              ==============================='\n  /* Format current date and save in shared pool (for printing) */\n  &CURMMM = TRANS(&ZMONTH\n    01,January 02,February 03,March 04,April 05,May 06,June\n    07,July 08,August 09,September 10,October 11,November 12,December)\n  &CURDATE = '&ZDAY &CURMMM 19&ZYEAR'\n  VPUT (CURDATE) SHARED\n)REINIT\n  IF (.MSG \u00ac= &Z)\n    .ATTR(.CURSOR) = 'COLOR(RED)'\n    .AUTOSEL = YES\n    .CSRROW = &CRP\n)PROC\n  &CMD = TRANS( TRUNC (&ZCMD,' ')\n           I,INPUT INP,INPUT CAN,CANCEL NB,NOTEBOOK NOTE,NOTEBOOK *,*)\n  VER (&CMD,LIST,INPUT,CANCEL,NOTEBOOK,PRT,SORT,SAVE,MSG=TASK003E)\n  IF (&CMD = 'SORT')\n    &ZTRAIL = .TRAIL\n    &SF1 = TRANS(TRUNC(&ZTRAIL,' ') CAT,CATEGORY PRIO,PRIORITY\n             HOUR,HOURS STAT,STATUS *,*)\n    VER (&SF1,LIST,CATEGORY,PRIORITY,DATE,HOURS,STATUS MSG=TASK003S)\n    &ZTRAIL = .TRAIL\n    &SF2 = TRANS(TRUNC(&ZTRAIL,' ') CAT,CATEGORY PRIO,PRIORITY\n             HOUR,HOURS STAT,STATUS *,*)\n    VER (&SF2,LIST,CATEGORY,PRIORITY,DATE,HOURS,STATUS MSG=TASK003S)\n    &ZTRAIL = .TRAIL\n    &SF3 = TRANS(TRUNC(&ZTRAIL,' ') CAT,CATEGORY PRIO,PRIORITY\n             HOUR,HOURS STAT,STATUS *,*)\n    VER (&SF3,LIST,CATEGORY,PRIORITY,DATE,HOURS,STATUS MSG=TASK003S)\n    &ZTRAIL = .TRAIL\n    &SF4 = TRANS(TRUNC(&ZTRAIL,' ') CAT,CATEGORY PRIO,PRIORITY\n             HOUR,HOURS STAT,STATUS *,*)\n    VER (&SF4,LIST,CATEGORY,PRIORITY,DATE,HOURS,STATUS MSG=TASK003S)\n    &ZTRAIL = .TRAIL\n    &SF5 = TRANS(TRUNC(&ZTRAIL,' ') CAT,CATEGORY PRIO,PRIORITY\n             HOUR,HOURS STAT,STATUS *,*)\n    VER (&SF5,LIST,CATEGORY,PRIORITY,DATE,HOURS,STATUS MSG=TASK003S)\n    &ZTRAIL = .TRAIL\n  IF (&CMD = 'INPUT')\n    &INPN = .TRAIL\n    IF (&INPN = &Z)\n      &INPN = 1\n    VER (&INPN,NB,NUM)\n  IF (&CMD = 'PRT')\n    &PRTDEST = .TRAIL\n    IF (&PRTDEST \u00ac= &Z)\n      &D = TRUNC(&PRTDEST,1)\n      VER (&D,LIST,U,R,MSG=TASK003D)\n      &D = .TRAIL\n      VER (&D,NB,NUM,MSG=TASK003D)\n  IF (&CMD = 'NOTEBOOK')\n    &NBDSN = .TRAIL\n    VER (&NBDSN,DSNAME)\n  IF (&ZTDSELS \u00ac= 0000)\n    &ACT = TRUNC(&A,1)\n    VER (&ACT,LIST,R,D,U,N,MSG=TASK003L)\n    &N = .TRAIL\n    IF (&N = &Z)\n      &N = 1\n    VER (&N,NB,NUM)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TASKTCON": {"ttr": 531, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY EXPAND(//)\n%TUTORIAL-/-/- Online Tasks-List -/-/-TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n+Using the%Online Tasks-list+program, you can maintain an online list of tasks.\n You can sort the list in various ways, and you can get a hardcopy of the list.\n\n The sections listed below will be presented in sequence (hit%ENTER+to go on to\n the next screen) or you may select a particular subject by number:\n\n%  1+- General information about the Online Tasks-List program\n%  2+- Adding, Deleting, Updating tasks on your Tasks-List\n%  3+- Printing your Tasks-List: the PRT command\n%  4+- Adding and updating \"notebook\" entries: NOTEBOOK and \"N\" commands\n%  5+- Saving the Tasks-List and exiting:  END, CANCEL, and SAVE commands\n\n+Enter%&EPF+to exit the tutorial and return to the tasks list\n+Hit%ENTER+to go on to the next tutorial panel\n)INIT\n  &EPF = PFK(END)\n  IF (&EPF = &Z)\n    &EPF = 'END'\n  &D = TRUNC(&EPF,2)\n  &DT = .TRAIL\n  &D = TRUNC(&DT,1)\n  IF (&D = '0')\n    &DT = .TRAIL\n    &EPF = 'PF&DT'\n)PROC\n  /******************************************************************/\n  /* Panelid: TASKTCON                                              */\n  /* Author:  Joe Veilleux, MIS Tech Support                        */\n  /* History: 27Feb85-JJV-1.00-Original experimental release        */\n  /*          14Mar85-JJV-1.01-Added NOTEBOOK tutorial reference    */\n  /* Purpose: Table of contents for Tasks-List Utility Tutorial     */\n  /******************************************************************/\n  &ZSEL = TRANS(&ZCMD\n                1,TASKTGNR\n                2,TASKTUPD\n                3,TASKTPRT\n                4,TASKTNB\n                5,TASKTEND\n                )\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TASKTEND": {"ttr": 770, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY EXPAND(//)\n%TUTORIAL-/-/- Online Tasks-List -/-/-TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%+\n%Saving your tasks list and exiting the utility+\n\n To exit the tasks list and resave your changes, enter the%END+command in the\n command area at the top of the screen. &EPFN\n\n\n+To save a copy of your tasks list and continue the task list update process,\n enter the%SAVE+command in the command area at the top of the screen.\n\n To exit the tasks list without resaving any changes from this session, enter\n the%CANCEL+command in the command area at the top of the screen.\n\n\n+Enter%&EPF+to exit tutorial and return to tasks list\n+Hit%ENTER+to continue on next tutorial panel\n)INIT\n  &EPF = PFK(END)\n  IF (&EPF = &Z)\n    &EPF = 'END'\n  &D = TRUNC(&EPF,2)\n  &DT = .TRAIL\n  &D = TRUNC(&DT,1)\n  IF (&D = '0')\n    &DT = .TRAIL\n    &EPF = 'PF&DT'\n  IF (&EPF \u00ac= 'END')\n    &EPFN = '(You can use the &EPF key instead of      +\n             actually keying the END command)'\n)PROC\n  /******************************************************************/\n  /* Panelid: TASKTUPD                                              */\n  /* Author:  Joe Veilleux, MIS Tech Support                        */\n  /* History: 27Feb85-JJV-1.00-Original experimental release        */\n  /*          14Mar85-JJV-1.01-Remove erroneous ZCONT               */\n  /* Purpose: Online Tasks-List tutorial: Updating the tasks list   */\n  /******************************************************************/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TASKTGNR": {"ttr": 772, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY EXPAND(//)\n%TUTORIAL-/-/- Online Tasks-List -/-/-TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n%General Information+\n\n The Online Tasks-List utility is used to maintain an online tasks list.\n\n%Primary+commands: (Entered in the COMMAND ===> area at the top of the display)\n  %INPUT +- Add a new task to the list\n  %SORT  +- Sort the table by one or more of the fields\n  %PRT   +- Print the tasks list\n  %NOTEBOOK+- Edit notebook entries for task categories\n  %SAVE  +- Save the tasks list, continue updates\n  %CANCEL+- Exit utility, don't save any changes\n  %END   +- &EPFN Exit utility, save any changes\n\n%Line+commands: (Entered in the \"action\" area at the left of the desired task)\n  %D+- Delete task %U+- Update task %R+- Repeat task %N+-Edit notebook entry\n\n+Enter%&EPF+to exit tutorial and return to tasks list\n+Hit%ENTER+to continue on next tutorial panel\n)INIT\n  &EPF = PFK(END)\n  IF (&EPF = &Z)\n    &EPF = 'END'\n  &D = TRUNC(&EPF,2)\n  &DT = .TRAIL\n  &D = TRUNC(&DT,1)\n  IF (&D = '0')\n    &DT = .TRAIL\n    &EPF = 'PF&DT'\n  IF (&EPF \u00ac= 'END')\n    &EPFN = '(Or hit &EPF.)'\n)PROC\n  /******************************************************************/\n  /* Panelid: TASKTGNR                                              */\n  /* Author:  Joe Veilleux, MIS Tech Support                        */\n  /* History: 27Feb85-JJV-1.00-Original experimental release        */\n  /*          14Mar85-JJV-1.01-Add NOTEBOOK and N commands          */\n  /* Purpose: Online Tasks-List tutorial: General information       */\n  /******************************************************************/\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TASKTNB": {"ttr": 774, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY EXPAND(//)\n%TUTORIAL-/-/- Online Tasks-List -/-/-TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n%NOTEBOOK facility+\n\n To enter notes or other text pertaining to a category of tasks, use the\n%NOTEBOOK+command or the%N+line command.\n\n To update (or create) a notebook entry for a category of tasks, enter%N+in the\n action area of a task with the desired category and hit%ENTER.+ You will be\n taken into EDIT mode on the notebook dataset member for the selected category.\n Enter your changes, then hit%&EPF+to resave.\n\n To edit the notebook dataset using a member selection list, enter the%NOTEBOOK+\n command (or%NB+for short) in the command area. This will take you to a member\n selection list for the notebook dataset, so you can then select the desired\n member in the usual manner (enter%S+in the action area).  Note that you cannot\n use this option if the dataset has no members...  you must create one or more\n members using the%N+line command first (see above).\n\n+Enter%&EPF+to exit tutorial and return to tasks list\n+Hit%ENTER+to continue on next tutorial panel\n)INIT\n  &EPF = PFK(END)\n  IF (&EPF = &Z)\n    &EPF = 'END'\n  &D = TRUNC(&EPF,2)\n  &DT = .TRAIL\n  &D = TRUNC(&DT,1)\n  IF (&D = '0')\n    &DT = .TRAIL\n    &EPF = 'PF&DT'\n)PROC\n  /******************************************************************/\n  /* Panelid: TASKTNB                                               */\n  /* Author:  Joe Veilleux, MIS Tech Support                        */\n  /* History: 14Mar85-JJV-1.00-Original experimental release        */\n  /* Purpose: Online Tasks-List tutorial: NOTEBOOK facility         */\n  /******************************************************************/\n  &ZCONT = TASKTNB2\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TASKTNB2": {"ttr": 776, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY EXPAND(//)\n%TUTORIAL-/-/- Online Tasks-List -/-/-TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n%NOTEBOOK facility+(continued)\n\n When you use the%NOTEBOOK+or%N+commands for the first time, you will be taken\n to a screen where you specify the dataset name of the PDS to contain the\n notebook entries. Key the dataset name in the usual TSO syntax (omit the high-\n level qualifier). If the dataset exists, it will be used as the notebook. If it\n does not exist, it will be created.\n\n Once you have set the dataset name, it will be displayed on the tasks list\n panel, and is permanent unless you change it. To switch the notebook to a\n different dataset name, use the%NOTEBOOK+command and specify the dataset name\n as an operand. Example:\n\n    NOTEBOOK MY.NOTEBOOK\n\n+Enter%&EPF+to exit tutorial and return to tasks list\n+Hit%ENTER+to continue on next tutorial panel\n)INIT\n  &EPF = PFK(END)\n  IF (&EPF = &Z)\n    &EPF = 'END'\n  &D = TRUNC(&EPF,2)\n  &DT = .TRAIL\n  &D = TRUNC(&DT,1)\n  IF (&D = '0')\n    &DT = .TRAIL\n    &EPF = 'PF&DT'\n)PROC\n  /******************************************************************/\n  /* Panelid: TASKTNB2                                              */\n  /* Author:  Joe Veilleux, MIS Tech Support                        */\n  /* History: 14Mar85-JJV-1.00-Original experimental release        */\n  /* Purpose: Online Tasks-List tutorial: NOTEBOOK facility (cont'd)*/\n  /******************************************************************/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TASKTPRT": {"ttr": 778, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY EXPAND(//)\n%TUTORIAL-/-/- Online Tasks-List -/-/-TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n%Printing your tasks list+\n\n To print your tasks list, enter the%PRT+command in the command area at the top\n of the screen.  All the information currently contained on your tasks list will\n be formatted into a printed report and will be sent for printing.\n\n To specify a destination for your printed output, specify the desired print\n destination as a operand to the PRT command. For example:\n\n    PRT R7\n\n\n+Enter%&EPF+to exit tutorial and return to tasks list\n+Hit%ENTER+to continue on next tutorial panel\n)INIT\n  &EPF = PFK(END)\n  IF (&EPF = &Z)\n    &EPF = 'END'\n  &D = TRUNC(&EPF,2)\n  &DT = .TRAIL\n  &D = TRUNC(&DT,1)\n  IF (&D = '0')\n    &DT = .TRAIL\n    &EPF = 'PF&DT'\n)PROC\n  /******************************************************************/\n  /* Panelid: TASKTPRT                                              */\n  /* Author:  Joe Veilleux, MIS Tech Support                        */\n  /* History: 27Feb85-JJV-1.00-Original experimental release        */\n  /* Purpose: Online Tasks-List tutorial: Printing the tasks list   */\n  /******************************************************************/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TASKTUPD": {"ttr": 780, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY EXPAND(//)\n%TUTORIAL-/-/- Online Tasks-List -/-/-TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%+\n%Updating your tasks list+\n\n%Adding a new task+\n To add a new task to your tasks list, enter the%INPUT+command in the command\n area at the top of the screen. This will take you to a panel where you may\n enter information about the new task. Press%ENTER+to return to the tasks list\n and add the task to the list. Use the%END+command if you change your mind and\n don't want to add the task.\n\n%Updating a task+\n You can update any of the fields for a task (e.g. task description, status,\n target date, etc.)  by entering%U+in the \"action\" area (at the left margin) for\n the task. This will take you to a panel showing the current field values.\n Overtype any that you want to change, then hit%ENTER+to return to the tasks\n list with the task's information updated. Use the%END+command if you change\n your mind and don't want to update the task.\n\n+Enter%&EPF+to exit tutorial and return to tasks list\n+Hit%ENTER+to continue on next tutorial panel\n)INIT\n  &EPF = PFK(END)\n  IF (&EPF = &Z)\n    &EPF = 'END'\n  &D = TRUNC(&EPF,2)\n  &DT = .TRAIL\n  &D = TRUNC(&DT,1)\n  IF (&D = '0')\n    &DT = .TRAIL\n    &EPF = 'PF&DT'\n)PROC\n  /******************************************************************/\n  /* Panelid: TASKTUPD                                              */\n  /* Author:  Joe Veilleux, MIS Tech Support                        */\n  /* History: 27Feb85-JJV-1.00-Original experimental release        */\n  /* Purpose: Online Tasks-List tutorial: Updating the tasks list   */\n  /******************************************************************/\n  &ZCONT = TASKTUP2\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TASKTUP2": {"ttr": 782, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")BODY EXPAND(//)\n%TUTORIAL-/-/- Online Tasks-List -/-/-TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%+\n%Updating your tasks list+(continued)\n\n%Repeating or Deleting tasks+\n To add a new task with the same information as an existing task, enter%R+in the\n action area for the existing task.  You can then update the task description as\n described above.  To delete a task from the list, enter%D+in the action area\n for the task.\n\n%Sorting the tasks list+\n To change the sort order of the list, enter the%SORT+command and (optionally)\n the sort fields.  Valid sort fields are CATEGORY, PRIORITY, DATE, HOURS, and\n STATUS.  You may enter as many of the sort fields as you wish.  If you enter no\n sort fields, STATUS PRIORITY HOURS DATE (in that order) will be used. Note that\n the current sort order is always shown on the tasks list panel, and is printed\n in the heading when you print your tasks list.\n\n+Enter%&EPF+to exit tutorial and return to tasks list\n+Hit%ENTER+to continue on next tutorial panel\n)INIT\n  &EPF = PFK(END)\n  IF (&EPF = &Z)\n    &EPF = 'END'\n  &D = TRUNC(&EPF,2)\n  &DT = .TRAIL\n  &D = TRUNC(&DT,1)\n  IF (&D = '0')\n    &DT = .TRAIL\n    &EPF = 'PF&DT'\n)PROC\n  /******************************************************************/\n  /* Panelid: TASKTUP2                                              */\n  /* Author:  Joe Veilleux, MIS Tech Support                        */\n  /* History: 27Feb85-JJV-1.00-Original experimental release        */\n  /*          14Mar85-JJV-1.01-Correct default sort order           */\n  /*          13Jun85-JJV-1.02-Chagne default sort order again      */\n  /* Purpose: Online Tasks-List tutorial: Updating the tasks list(2)*/\n  /******************************************************************/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TASKUPD": {"ttr": 784, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  @ TYPE(INPUT) INTENS(LOW) CAPS(OFF)\n  # TYPE(INPUT) INTENS(LOW) CAPS(ON)\n  + TYPE(TEXT) INTENS(LOW) SKIP(ON)\n)BODY EXPAND(//)\n%-/-/- Online Tasks-List: &TTL Task -/-/-\n%COMMAND ===>_ZCMD                                                             +\n%\n+Specify or change information below:\n%\n+  Category   %===>#CATEGORY+\n+  Priority   %===>#Z+      (Number 1-9, 1 is highest)\n+  Target Date%===>#Z      +(DDMMMYY)\n+  Est Hours  %===>#Z   +   (Hours of effort)\n+  Status     %===>#Z   +   (INIT,OPEN,DONE,HOLD,DROP)\n+  Description%===>@TASK                                          +\n%\n+Hit%ENTER+to update the information for this task\n+Hit%&EPF+to cancel this operation and return to tasks-list panel\n)INIT\n  /******************************************************************/\n  /* Panelid: TASKUPD                                               */\n  /* Author:  Joe Veilleux, MIS Tech Support                        */\n  /* History: 27Feb85-JJV-1.00-Original experimental release        */\n  /*          28Feb85-JJV-1.01-Fix len of task description          */\n  /*          08Mar85-JJV-1.02-Add ver for category (notebook suppt)*/\n  /*          19Mar85-JJV-1.03-Add status=INIT                      */\n  /*          25Mar85-JJV-1.04-Set default TARGSORT if blank        */\n  /* Purpose: Allow user to update/add task                         */\n  /******************************************************************/\n  &HPF = PFK(HELP)\n  IF (&HPF = &Z)\n    &HPF = 'HELP'\n  &EPF = PFK(END)\n  IF (&EPF = &Z)\n    &EPF = 'END'\n  &D = TRUNC(&EPF,2)\n  &DT = .TRAIL\n  &D = TRUNC(&DT,1)\n  IF (&D = '0')\n    &DT = .TRAIL\n    &EPF = 'PF&DT'\n  .ZVARS = '(PRIORITY TARGDATE HOURS STATUS)'\n  &ZCMD = &Z\n  &TTL = 'Update'\n  IF (&CMD = 'INPUT')\n    &TTL = 'Add'\n  IF (&PRIORITY = &Z)\n    &PRIORITY = 5\n  IF (&STATUS = &Z)\n    &STATUS = 'INIT'\n)PROC\n  VER (&CATEGORY,NB,NAME)\n  VER (&PRIORITY,NB,RANGE,1,9)\n  &TARGSORT = '999999'\n  IF (&TARGDATE \u00ac= &Z)\n    &DD = TRUNC(&TARGDATE,2)\n    VER (&DD,NB,NUM,MSG=TASK004D)\n    &ZTRAIL = .TRAIL\n    &MM = TRANS(TRUNC(&ZTRAIL,3)\n                 JAN,01 FEB,02 MAR,03 APR,04 MAY,05 JUN,06\n                 JUL,07 AUG,08 SEP,09 OCT,10 NOV,11 DEC,12\n                 MSG=TASK004D)\n    &YY = .TRAIL\n    VER (&YY,NB,NUM,MSG=TASK004D)\n    &TARGSORT = '&YY.&MM.&DD'\n  VER (&STATUS,NB,LIST,INIT,OPEN,DONE,HOLD,DROP)\n  VER (&TASK,NB)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TASK00": {"ttr": 786, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* TASK00:  MESSAGES FOR ONLINE TASKS-LIST APPLICATION                */\n/* AUTHOR:  JOE VEILLEUX                                              */\n/* HISTORY: 27FEB85-JJV-1.00-ORIGINAL EXPERIMENTAL RELEASE            */\n/*          28FEB85-JJV-1.01-REWORD 002N, ADD 005S                    */\n/*          08MAR85-JJV-1.02-ADD MSGS FOR NOTEBOOK: 006*              */\n\nTASK001E 'TABLE IN USE' .ALARM=YES\n'YOUR TASKS-LIST IS BEING ACCESSED BY ANOTHER USER.. CANNOT UPDATE NOW.'\nTASK001S 'CATASTROPHIC ERROR' .ALARM=YES\n'ERROR CREATING TASK-LIST TABLE. RETURN CODE WAS &RC..'\nTASK001T 'TASKS-LIST CREATED' .ALARM=YES\n'TASKS-LIST FOR &ZUSER WAS NOT FOUND AND HAS BEEN CREATED (EMPTY).'\n\nTASK002C 'UPDATES NOT SAVED' .ALARM=YES\n'TASKS-LIST UTILITY ENDED THROUGH \"CANCEL\". UPDATES WERE NOT SAVED.'\nTASK002N 'TASK-LIST DONE'\n'TASKS-LIST ENDED NORMALLY. NO UPDATES WERE ENTERED SINCE LAST \"SAVE\".'\nTASK002S 'UPDATES SAVED'\n'TASKS-LIST UTILITY ENDED NORMALLY. UPDATES WERE SAVED.'\n\nTASK003D 'INVALID DESTINATION' .ALARM=YES\n'INVALID PRINT DESTINATION. ENTER PRINT DEST AS U## OR R## (E.G. R14)'\nTASK003P 'PRINT COMPLETE'\n'YOUR TASKS-LIST HAS BEEN SENT FOR PRINTING.'\nTASK003S 'INVALID SORT FIELD'\n'VALID SORT FIELDS: CATEGORY, PRIORITY, DATE, HOURS, STATUS'\nTASK003E 'INVALID COMMAND' .ALARM=YES\n'ENTER A VALID COMMAND: INPUT, CANCEL, NOTEBOOK, PRT, END, HELP, SAVE'\nTASK003L 'INVALID COMMAND' .ALARM=YES\n'ENTER A VALID LINE COMMAND: D, R, U'\n\nTASK004D 'INVALID DATE' .ALARM=YES\n'ENTER DATE AS \"DDMMMYY\" (E.G. 01JAN85) OR LEAVE BLANK'\n\nTASK005S 'TASKS LIST SAVED'\n'YOUR CURRENT TASKS LIST HAS BEEN SAVED. YOU MAY CONTINUE UPDATING.'\nTASK005R 'TASKS LIST SORTED'\n'YOUR CURRENT TASKS LIST HAS BEEN SORTED USING THE SORT FIELDS SHOWN.'\n\nTASK006E 'UNABLE TO ALLOC' .ALARM=YES\n'UNABLE TO ALLOCATE DATASET FOR NOTEBOOK. DSN=&TASKNDSN..'\nTASK006N 'DATA NOT SAVED'\n'NO UPDATES TO NOTEBOOK ENTRY \"&CATEGORY..\"'\nTASK006S 'UPDATES SAVED'\n'YOUR UPDATES TO NOTEBOOK ENTRY FOR \"&CATEGORY.\" HAVE BEEN SAVED.'\nTASK006T 'UNABLE TO EDIT'\n'ERROR EDITING &TASKNDSN.. POSSIBLE CAUSE: NO MEMBERS.'\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "X1A100": {"ttr": 788, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": " /* X1A100:  SPF - OBTAIN JOBCARD INFORMATION FOR SPF APPLICATION USE */\n /* AUTHOR:  JOE VEILLEUX                                             */\n /* HISTORY: 29NOV83-JJV-2.00-ORIGINAL RELEASE                        */\n /*                                                                   */\n /* THIS PROGRAM CALLS THE APCI \"ACOUNT\" SUBROUTINE TO OBTAIN THE     */\n /* TSO SESSION'S ACCOUNTING INFORMATION. THAT INFORMATION IS THEN    */\n /* PUT INTO SPF VARIABLES CORRESPONDING TO SKELETON \"APCIJOBC\".      */\n0X1A100: PROC OPTIONS(MAIN);\n /* DECLARE PL/1 RUNTIME OPTIONS, SUBROUTINES, AND PL/1 FUNCTIONS     */\n DCL PLIXOPT CHAR(80) VAR EXTERNAL /* PL/1 RUNTIME OPTIONS */\n     INIT('NOREPORT,ISASIZE(10K)');\n DCL ISPLINK EXTERNAL ENTRY OPTIONS(ASM INTER RETCODE);\n DCL ACOUNT  EXTERNAL ENTRY OPTIONS(ASM INTER);\n0/* VARIABLES FOR JOBCARD ACCOUNTING FIELDS                           */\n DCL ACCT   CHAR(4),\n     CLOCK  FIXED BIN(15),\n     USERID CHAR(8),\n     JCCHG  CHAR(10),\n     JCNAME CHAR(20),\n     JCREQO CHAR(10),\n     JCPGM  CHAR(8);\n0/* FULLWORD LENGTHS FOR \"VDEFINE\" */\n DCL (L8 INIT(8), L10 INIT(10), L20 INIT(20)) FIXED BIN(31);\n0/* VDEFINE THE VARIABLES TO SHARE WITH SPF                           */\n CALL ISPLINK('VDEFINE','(JCCHG)', JCCHG, 'CHAR',L10);\n CALL ISPLINK('VDEFINE','(JCNAME)',JCNAME,'CHAR',L20);\n CALL ISPLINK('VDEFINE','(JCREQO)',JCREQO,'CHAR',L10);\n CALL ISPLINK('VDEFINE','(JCPGM)', JCPGM, 'CHAR',L8);\n0/* MAIN PROGRAM CODE: CALL ACOUNT TO GET ACCOUNTING INFO             */\n CALL ACOUNT(JCCHG,CLOCK,JCNAME,USERID,JCREQO,JCPGM);\n CALL ISPLINK ('VPUT','(JCCHG JCNAME JCREQO JCPGM)','SHARED ');\n0/* DONE: CLEAN UP AND EXIT */\n CALL ISPLINK ('VRESET');  /* UN-DEFINE THE VARIABLES */\n END X1A100;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT231/FILE231.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT231", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}