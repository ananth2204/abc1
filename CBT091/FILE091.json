{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011214000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 352716, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 12, "INMDSNAM": "CBT.V500.FILE091.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE091.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x05'", "DS1TRBAL": "b'\\xac '"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\x8d\\x00\\x0b\\x00\\x8e\\x00\\x03\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$PROSE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x084\\x00X\\x00\\\\\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:34:00", "lines": 88, "newlines": 92, "modlines": 0, "user": "SBGCSC"}, "text": "\n\n                      FORTRAN G & H - PL1-F  - RPG\n\n                           1  APRIL   1989        (UPDATED 4/94 BY SG)\n\n              COURTESY     JIM MARSHALL\n                           1-202-874-8353\n//*                                                                 *   FILE 091\n//*   CURRENT ADDRESS   (AS OF 04/94)                               *   FILE 091\n//*                                                                 *   FILE 091\n//*                 JIM MARSHALL, US TREASURY                       *   FILE 091\n//*                 FINANCIAL MANAGEMENT SERVICE                    *   FILE 091\n//*                 PRINCE GEORGES PLAZA II - ROOM 400B             *   FILE 091\n//*                 3700 EAST-WEST HIGHWAY                          *   FILE 091\n//*                 HYATTSVILLE, MD  20782                          *   FILE 091\n//*                 202-874-8353                                    *   FILE 091\n//*                                                                 *   FILE 091\n            ---------------------------------------------------------\n\n                     D I S C L A I M E R     !!!!!\n                 *************************************\n               USE ALL OF THESE AT YOUR OWN RISK, NATURALLY!\n                 *************************************\n\n            THIS IS A FILE OF THE JCL PROCEDURES FOR USE WITH 3 OTHER\n           FILES I HAVE DONATED. BEING AN OS/MVT PERSON (WHEN THINGS\n           WERE FREE) I SAVED THE 360 VERSION OF FORTRAN-G AND PL1-F.\n           THEN ALONG WITH FORTRAN G IS THE GODDARD SPACE FLIGHT CENTER\n           VERSION OF FORTRAN-H (THIS IS NOT FORTRAN-H-EXTENDED). THIS\n           IS ALL FREE SOFTWARE AND WORKS FINE IN THE MVS WORLD. I HAD\n           BEEN TOLD THAT PL1F DOESN'T FUNCTION IN THE MVS-XA WORLD\n           (BUT NOW THE VERSION ON FILE 092 DOES WORK ON XA AND ESA.\n           IT WAS FIXED BY LARRY WILLIAMS, WHO RE-LINKEDITED IT, AND\n           EXPANDED EVERY CSECT BY EIGHT BYTES, SO THE LINKAGE EDITOR\n           COULD \"RETHINK\" HOW IT PUT THINGS TOGETHER).  ALSO, I\n           EXTRACTED RPG FROM THE FINAL RELEASE OF OS/MVT AND PUT\n           IT INTO A FILE.  THIS IS NOW ON FILE 327 OF THE CBT TAPE.\n           THE RPG LOAD MODULES HAVE BEEN RE-LINKEDITED USING THE\n           DFSMS BINDER BY SAM GOLOB.\n\n           THE 3 FILES ARE BUILT AS FOLLOWS:\n\nFILE 092   PL1FLOAD - THIS CONTAINS THE COMPILER AND LIBRARY FOR PL1F.\n                      IN ITS CURRENT FORM ON FILE 092, IT WILL\n                      WORK IN MVS/XA, AND IN MVS/ESA.\n\n\nFILE 326   FORTLOAD - THIS CONTAINS THE COMPILERS FOR FORTRAN G & H.\n                      ALSO THERE IS THE FORTRAN LIBRARY FOR BOTH OF\n                      THEM (SYS1.FORTLIB).  THIS IS ON FILE 326 OF\n                      THE CBT TAPE, AND IN ITS CURRENT FORM, HAS BEEN\n                      RE-LINKEDITED BY RICK FOCHTMAN, WHO INTRODUCED\n                      IDR RECORDS IN EACH CSECT TELLING YOU IF IT WAS\n                      FORTRAN G, H, OR WHATEVER.\n\n                      REGULAR FORTRAN HAS THE 'STAE' ROUTINE CALLED\n                      IHOSTAE. WELL GODDARD'S VERSION HAS GSFSTAE\n                      WHICH MUST BE AVAILABLE AT RUNTIME. MY ADVICE\n                      IS TO STEPLIB TO THE ENTIRE LIBRARY AT RUN\n                      TIME.\n\n                      SCOTT VETTERS (MICHIGAN MUTUAL) SAYS THE FORTG\n                      COMPILER IS RUNNING ON HIS MVS/XA 2.1.2 SYSTEM.\n                      (313) 827-7400 EXT 336\n\n                      I HAVE FORTG RUNNING ON MVS/XA 2.2.0 WITH NO\n                      PROBLEMS.\n\n\nFILE 327   RPGLOAD  - THIS CONTAINS THE DLIB AND COMPILER LIBRARY FOR\n                      THE OS/MVT VERSION OF RPG. THE JOB CALLED\n                      'RPG$GEN' IS THE EXTRACTED LINKEDIT CARDS FROM\n                      AN OS/MVT SYSGEN FOR LINKING ALL THE RPG\n                      COMPILER MODULES (FOR YOUR INFO). INCLUDED IS\n                      A SAMPLE JOB TO TEST IT. (IT WORKS ON AN\n                      MVS/ESA 4.3 SYSTEM.)  THIS IS ON FILE 327\n                      OF THE CBT TAPE.\n\n\n            NOTES: YOU CAN FIND OUT ALL THE DEFAULTS BY EXECUTING\n                   THE COMPILERS WITH A PARM=   AND LOOK AT WHAT\n                   IS SET. HAVE FUN, SO NOW YOU HAVE NO EXCUSE TO\n                   IGNORE SOME OF THE MORE INTERESTING (IF YOU KNOW\n                   WHAT I MEAN) PROGRAMS ON THE MODS TAPES WRITTEN\n                   IN PL1F OR FORTRAN!! (LOOK TO THE HEAVENS)\n            ---------------------------------------------------------\n        $EOM\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ALGOFC": {"ttr": 519, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98\\x17o\\x00\\x98\\x17o\\t\"\\x00\\x08\\x00\\x08\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-06-25T00:00:00", "modifydate": "1998-06-25T09:22:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "SBGOLOB"}, "text": "//ALGOL EXEC PGM=ALGOL,REGION=48K\n//SYSPRINT DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//SYSLIN DD DSN=&LOADSET,UNIT=SYSDA,SEP=SYSPUNCH,SPACE=(3600,(10,4)),  *\n//          DISP=(MOD,PASS)\n//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSDA,SEP=SYSPRINT,SPACE=(1024,(50,10))\n//SYSUT2 DD DSN=&SYSUT2,UNIT=SYSDA,SEP=SYSUT1,SPACE=(1024,(50,10))\n//SYSUT3 DD DSN=&SYSUT3,UNIT=SYSDA,SPACE=(1024,(40,10))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ALGOFCG": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98\\x17o\\x00\\x98\\x17o\\t#\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-06-25T00:00:00", "modifydate": "1998-06-25T09:23:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "SBGOLOB"}, "text": "//ALGOL EXEC PGM=ALGOL,REGION=48K\n//SYSPRINT DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//SYSLIN DD DSN=&LOADSET,UNIT=SYSDA,SEP=SYSPUNCH,SPACE=(3600,(10,4)),  *\n//          DISP=(MOD,PASS)\n//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSDA,SEP=SYSPRINT,SPACE=(1024,(50,10))\n//SYSUT2 DD DSN=&SYSUT2,UNIT=SYSDA,SEP=SYSUT1,SPACE=(1024,(50,10))\n//SYSUT3 DD DSN=&SYSUT3,UNIT=SYSDA,SPACE=(1024,(40,10))\n//GO EXEC PGM=LOADER,PARM=(MAP,LET,PRINT),COND=(5,LT,ALGOL)\n//SYSLIN DD DSN=&LOADSET,DISP=(OLD,DELETE)\n//SYSLIB DD DSN=SYS1.ALGLIB,DISP=SHR\n//SYSLOUT DD SYSOUT=A\n//SYSPRINT DD SYSOUT=A\n//ALGLDD01 DD SYSOUT=A\n//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSDA,SPACE=(1024,(20,10))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ALGOFCL": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98\\x17o\\x00\\x98\\x17o\\t#\\x00\\x11\\x00\\x11\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-06-25T00:00:00", "modifydate": "1998-06-25T09:23:00", "lines": 17, "newlines": 17, "modlines": 0, "user": "SBGOLOB"}, "text": "//ALGOL EXEC PGM=ALGOL,REGION=48K\n//SYSPRINT DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//SYSLIN DD DSN=&LOADSET,UNIT=SYSDA,SEP=SYSPUNCH,SPACE=(3600,(10,4)),  *\n//          DISP=(MOD,PASS)\n//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSDA,SEP=SYSPRINT,SPACE=(1024,(50,10))\n//SYSUT2 DD DSN=&SYSUT2,UNIT=SYSDA,SEP=SYSUT1,SPACE=(1024,(50,10))\n//SYSUT3 DD DSN=&SYSUT3,UNIT=SYSDA,SPACE=(1024,(40,10))\n//LKED EXEC PGM=IEWL,PARM='XREF,LIST,LET',COND=(5,LT,ALGOL),REGION=96K\n//SYSPRINT DD SYSOUT=A\n//SYSLIN DD DSN=&LOADSET,DISP=(OLD,DELETE)\n//       DD DDNAME=SYSIN\n//SYSLIB DD DSN=SYS1.ALGLIB,DISP=SHR\n//SYSLMOD DD DSN=&GOSET(GO),UNIT=SYSDA,DISP=(MOD,PASS),                *\n//           SPACE=(1024,(50,20,1))\n//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSDA,SEP=(SYSLIB,SYSLMOD),               *\n//          SPACE=(1024,(50,20))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ALGOFCLG": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98\\x17o\\x00\\x98\\x17o\\t$\\x00\\x15\\x00\\x15\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-06-25T00:00:00", "modifydate": "1998-06-25T09:24:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "SBGOLOB"}, "text": "//ALGOL EXEC PGM=ALGOL,REGION=48K\n//SYSPRINT DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//SYSLIN DD DSN=&LOADSET,UNIT=SYSDA,SEP=SYSPUNCH,SPACE=(3600,(10,4)),  *\n//          DISP=(MOD,PASS)\n//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSDA,SEP=SYSPRINT,SPACE=(1024,(50,10))\n//SYSUT2 DD DSN=&SYSUT2,UNIT=SYSDA,SEP=SYSUT1,SPACE=(1024,(50,10))\n//SYSUT3 DD DSN=&SYSUT3,UNIT=SYSDA,SPACE=(1024,(40,10))\n//LKED EXEC PGM=IEWL,PARM='XREF,LIST,LET',COND=(5,LT,ALGOL),REGION=96K\n//SYSPRINT DD SYSOUT=A\n//SYSLIN DD DSN=&LOADSET,DISP=(OLD,DELETE)\n//       DD DDNAME=SYSIN\n//SYSLIB DD DSN=SYS1.ALGLIB,DISP=SHR\n//SYSLMOD DD DSN=&GOSET(GO),UNIT=SYSDA,DISP=(MOD,PASS),                *\n//           SPACE=(1024,(50,20,1))\n//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSDA,SEP=(SYSLIB,SYSLMOD),               *\n//          SPACE=(1024,(50,20))\n//GO EXEC PGM=*.LKED.SYSLMOD,COND=((5,LT,ALGOL),(5,LT,LKED))\n//ALGLDD01 DD SYSOUT=A\n//SYSPRINT DD SYSOUT=A\n//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSDA,SPACE=(1024,(20,10))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBSAMP": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00v\\x19/\\x00v\\x19/\\t'\\x01\\xb9\\x01\\xb9\\x00\\x00\\xd4\\xe5\\xe3\\xe2\\xc1\\xd4\\xd7@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1976-07-10T00:00:00", "modifydate": "1976-07-10T09:27:00", "lines": 441, "newlines": 441, "modlines": 0, "user": "MVTSAMP"}, "text": "//COBSAMP  JOB  ,,MSGLEVEL=1,REGION=100K\n//STEP  EXEC  COBFCLG,PARM.COB='MAP,LIST,LET'\n//COB.SYSIN DD *\n  001  IDENTIFICATION DIVISION.\n  002  PROGRAM-ID.  'COBSAMP'.\n  003  ENVIRONMENT DIVISION.\n  004  CONFIGURATION SECTION.\n  005  SOURCE-COMPUTER.  IBM-360 F50.\n  006  OBJECT-COMPUTER.  IBM-360 F50.\n  007  DATA DIVISION.\n\n  008  WORKING-STORAGE SECTION.\n  009      77 IGSP  PICTURE S9(5) COMPUTATIONAL.\n  010      77 NULL  PICTURE S9(5) COMPUTATIONAL VALUE -5.\n  011      77 UNUM  PICTURE S9(5) COMPUTATIONAL VALUE 10.\n  012      77 I2250  PICTURE S9(5) COMPUTATIONAL.\n  013      77 IGDS1  PICTURE S9(5) COMPUTATIONAL.\n  014      77 IGDS2  PICTURE S9(5) COMPUTATIONAL.\n  015      77 IGDS3  PICTURE S9(5) COMPUTATIONAL.\n  016      77 DMODE  PICTURE S9(5) COMPUTATIONAL VALUE 3.\n  017      77 IATL  PICTURE S9(5) COMPUTATIONAL.\n  018      77 ATTN1  PICTURE S9(5) COMPUTATIONAL VALUE 1.\n  019      77 ATTN2  PICTURE S9(5) COMPUTATIONAL VALUE -3.\n  020      77 ATTN3  PICTURE S9(5) COMPUTATIONAL VALUE 34.\n  021      77 LSTAT  PICTURE S9(5) COMPUTATIONAL VALUE 3.\n  022      77 DETECT  PICTURE S9(5) COMPUTATIONAL VALUE 1.\n  023      77 CHMODE  PICTURE S9(5) COMPUTATIONAL VALUE 2.\n  024      77 X  PICTURE A VALUE 'X'.\n  025      77 COUNT  PICTURE S9(5) COMPUTATIONAL VALUE 1.\n  026      77 CORVAL  PICTURE S9(5) COMPUTATIONAL VALUE -1.\n  027      77 QUAY  PICTURE S9(5) COMPUTATIONAL.\n  028      77 GENCDE  PICTURE S9(5) COMPUTATIONAL VALUE 1.\n  029      77 CX  PICTURE S9(5) COMPUTATIONAL VALUE 2047.\n  030      77 CY  PICTURE S9(5) COMPUTATIONAL VALUE 2047.\n  031      77 NUM2  PICTURE XXXX VALUE 'NUM2'.\n  032      77 NUM1  PICTURE XXXX VALUE 'NUM1'.\n  033      77 NUM8  PICTURE XXXX VALUE 'NUM8'.\n  034      77 NUM7  PICTURE XXXX VALUE 'NUM7'.\n  035      77 NUM6  PICTURE XXXX VALUE 'NUM6'.\n  036      77 NUM5  PICTURE XXXX VALUE 'NUM5'.\n  037      77 NUM4  PICTURE XXXX VALUE 'NUM4'.\n  038      77 NUM3  PICTURE XXXX VALUE 'NUM3'.\n  039      77 NUM  PICTURE S9(5) COMPUTATIONAL.\n  040      77 CXNUM  PICTURE S9(5) COMPUTATIONAL.\n  041      77 SUB1  PICTURE S9(5) COMPUTATIONAL.\n  042      77 SUB2  PICTURE S9(5) COMPUTATIONAL.\n  043      77 DISP  PICTURE S9(5) COMPUTATIONAL VALUE 200.\n  044      77 CIRYDISP  PICTURE S9(5) COMPUTATIONAL.\n  045      77 ONE  PICTURE S9(5) COMPUTATIONAL VALUE 1.\n  046      77 XINDEX  PICTURE S9(5) COMPUTATIONAL VALUE 1.\n  047      77 YINDEX  PICTURE S9(5) COMPUTATIONAL VALUE 1.\n  048      77 INTCD  PICTURE S9(5) COMPUTATIONAL.\n  049      77 WAIT  PICTURE S9(5) COMPUTATIONAL VALUE 2.\n  050      77 ATTNS1  PICTURE S9(5) COMPUTATIONAL VALUE 1.\n  051      77 ATTNS2  PICTURE S9(5) COMPUTATIONAL VALUE 2.\n  052      77 ATTNS3  PICTURE S9(5) COMPUTATIONAL VALUE 3.\n  053      77 ATTNS4  PICTURE S9(5) COMPUTATIONAL VALUE 34.\n  054      77 INTARYX  PICTURE S9(5) COMPUTATIONAL.\n  055      01 CIRX-CIRY-TABLE.\n  056          02 CIRX  OCCURS 8 PICTURE S9(5) COMPUTATIONAL.\n  057          02 CIRY  OCCURS 8 PICTURE S9(5) COMPUTATIONAL.\n  058      01 LABEL-TABLE.\n  059          02 LABLE  OCCURS 8 PICTURE XXXX.\n  060      01 DISPLACEMENTS-TABLE.\n  061          02 XDISP  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.\n  062          02 YDISP  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.\n  063      01 SMALLCIRCLES-TABLE.\n  064          02 XCENTERS  OCCURS 8.\n  065              03 SMALX  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.\n  066          02 YCENTERS  OCCURS 8.\n  067              03 SMALY  OCCURS 24 PICTURE S9(5) COMPUTATIONAL.\n  068      01 ATTENTION-TABLE.\n  069          02 INTARY  OCCURS 10 PICTURE S9(5) COMPUTATIONAL.\n\n  075  PROCEDURE DIVISION.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                THIS SAMPLE PROGRAM DRAWS A CIRCLE OF 8 BASIC SIZE X'S\n                WITH A LARGE SIZE X AS ITS CENTER - DEPENDING ON THE\n                ATTENTION CREATED, THE PROGRAM WILL DO THE FOLLOWING -\n\n             1) LIGHT PEN ATTENTION ON CENTER X LABELS OUTER X'S FROM\n                NUM1 THROUGH NUM8 (PARAGRAPH 221)\n\n             2) LIGHT PEN ATTENTION ON OUTER X GENERATES A CIRCLE\n                WHOSE CENTER IS THE DETECTED X (PARAGRAPH 222)\n\n             3) LIGHT PEN ATTENTION ON CIRCLE AROUND OUTER X MAKES\n                THAT CIRCLE INVISIBLE (PARAGRAPH 230)\n\n             4) LIGHT PEN ATTENTION ON ANY LABEL MAKES ALL LABELS\n                INVISIBLE (PARAGRAPH 225)\n\n             5) PROGRAMMED FUNCTION KEY 1 ENDS RUN (PARAGRAPH 240)\n\n             6) PROGRAMMED FUNCTION KEY 2 MAKES ALL CIRCLES INVISIBLE\n                (PARAGRAPH 250)\n\n             7) PROGRAMMED FUNCTION KEY 3 MAKES ALL CIRCLES VISIBLE\n                (PARAGRAPH 260)\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                INITIALIZE THE GRAPHIC SUBROUTINE PACKAGE\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  076      ENTER LINKAGE.\n  077      CALL 'INGSP' USING IGSP, NULL.\n  078      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                INITIALIZE THE 2250 - ASSIGN IT UNIT NUMBER 10\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  079      ENTER LINKAGE.\n  080      CALL 'INDEV' USING IGSP, UNUM, I2250.\n  081      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO\n                DISPLAY THE CIRCLE OF X'S AND ITS CENTER X\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  082      ENTER LINKAGE.\n  083      CALL 'INGDS' USING I2250, IGDS1.\n  084      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO\n                LABEL THE OUTER X'S OF THE CIRCLE\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  085      ENTER LINKAGE.\n  086      CALL 'INGDS' USING I2250, IGDS2.\n  087      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO\n                DISPLAY A CIRCLE AROUND ANY OF THE OUTER X'S\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  088      ENTER LINKAGE.\n  089      CALL 'INGDS' USING I2250, IGDS3.\n  090      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                SET THE DATA MODE FOR INTEGER, ABSOLUTE DATA\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  091      ENTER LINKAGE.\n  092      CALL 'SDATM' USING IGDS1, DMODE.\n  093      ENTER COBOL.\n  094      ENTER LINKAGE.\n  095      CALL 'SDATM' USING IGDS2, DMODE.\n  096      ENTER COBOL.\n  097      ENTER LINKAGE.\n  098      CALL 'SDATM' USING IGDS3, DMODE.\n  099      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                CREATE AN ATTENTION LEVEL FOR THE 2250\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  100      ENTER LINKAGE.\n  101      CALL 'CRATL' USING I2250, IATL.\n  102      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                ENABLE PROGRAMMED FUNCTION KEYS 1, 2, AND 3 AND THE\n                LIGHT PEN\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  103      ENTER LINKAGE.\n  104      CALL 'ENATN' USING IATL, ATTN1, ATTN2, ATTN3.\n  105      ENTER COBOL.\n  106      ENTER LINKAGE.\n  107      CALL 'MLITS' USING I2250, LSTAT.\n  108      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                ALLOW LIGHT PEN ATTENTIONS FOR EACH GRAPHIC DATA SET\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  109      ENTER LINKAGE.\n  110      CALL 'SLPAT' USING IGDS1, DETECT.\n  111      ENTER COBOL.\n  112      ENTER LINKAGE.\n  113      CALL 'SLPAT' USING IGDS2, DETECT.\n  114      ENTER COBOL.\n  115      ENTER LINKAGE.\n  116      CALL 'SLPAT' USING IGDS3, DETECT.\n  117      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                SET CHARACTER MODE FOR LARGE SIZE, PROTECTED\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  118      ENTER LINKAGE.\n  119      CALL 'SCHAM' USING IGDS1, CHMODE.\n  120      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                DISPLAY CENTER X\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  121      ENTER LINKAGE.\n  122      CALL 'PTEXT' USING IGDS1, X, COUNT, CORVAL, QUAY, GENCDE,\n  123      CX, CY.\n  124      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                PLACE X AND Y COORDINATES FOR X'S OF OUTER CIRCLE\n                IN THE CIRX AND CIRY TABLES\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  125      COMPUTE CIRX (1) = 2047.  COMPUTE CIRY (1) = 3247.\n  126      COMPUTE CIRX (2) = 2896.  COMPUTE CIRY (2) = 2896.\n  127      COMPUTE CIRX (3) = 3247.  COMPUTE CIRY (3) = 2047.\n  128      COMPUTE CIRX (4) = 2896.  COMPUTE CIRY (4) = 1198.\n  129      COMPUTE CIRX (5) = 2047.  COMPUTE CIRY (5) = 847.\n  130      COMPUTE CIRX (6) = 1198.  COMPUTE CIRY (6) = 1198.\n  131      COMPUTE CIRX (7) = 847.   COMPUTE CIRY (7) = 2047.\n  132      COMPUTE CIRX (8) = 1198.  COMPUTE CIRY (8) = 2896.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                PLACE LABELS FOR X'S OF OUTER CIRCLE IN TABLE\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  133      MOVE NUM2 TO LABLE (1).\n  134      MOVE NUM1 TO LABLE (2).\n  135      MOVE NUM8 TO LABLE (3).\n  136      MOVE NUM7 TO LABLE (4).\n  137      MOVE NUM6 TO LABLE (5).\n  138      MOVE NUM5 TO LABLE (6).\n  139      MOVE NUM4 TO LABLE (7).\n  140      MOVE NUM3 TO LABLE (8).\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                SET CHARACTER MODE FOR BASIC SIZE, PROTECTED X\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  141      COMPUTE CHMODE = 1.\n  142      ENTER LINKAGE.\n  143      CALL 'SCHAM' USING IGDS1, CHMODE.\n  144      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                GENERATE AN X IN INCLUDE STATUS - CALCULATE X-COORDINATE\n                OF LABEL ASSOCIATED WITH THAT X - GENERATE LABEL IN\n                INCLUDE STATUS - DO THIS 8 TIMES TO COMPLETE CIRCLE\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  145      PERFORM X-CIRCLE VARYING NUM FROM 1 BY 1 UNTIL NUM > 8.\n  1451     GO TO NEXT11.\n  146  X-CIRCLE.\n  147      COMPUTE COUNT = 1.\n  148      COMPUTE CORVAL = NUM.\n  149      ENTER LINKAGE.\n  150      CALL 'PTEXT' USING IGDS1, X, COUNT, CORVAL, QUAY, GENCDE,\n  151      CIRX (NUM), CIRY (NUM).\n  152      ENTER COBOL.\n  153      COMPUTE COUNT = 4.\n  154      COMPUTE CXNUM = CIRX (NUM) + 300.\n  155      ENTER LINKAGE.\n  156      CALL 'PTEXT' USING IGDS2, LABLE (NUM), COUNT, CORVAL, QUAY,\n  157      GENCDE, CXNUM, CIRY (NUM).\n  158      ENTER COBOL.\n  159  NEXT1.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                PLACE X AND Y DISPLACEMENTS FOR CIRCLE WITH R = 200\n                IN XDISP AND YDISP TABLES\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  1591 NEXT11.\n  161      COMPUTE XDISP (1) = 52.     COMPUTE YDISP (1) = 193.\n  162      COMPUTE XDISP (2) = 100.    COMPUTE YDISP (2) = 173.\n  163      COMPUTE XDISP (3) = 141.    COMPUTE YDISP (3) = 141.\n  164      COMPUTE XDISP (4) = 173.    COMPUTE YDISP (4) = 100.\n  165      COMPUTE XDISP (5) = 193.    COMPUTE YDISP (5) = 52.\n  166      COMPUTE XDISP (6) = 200.    COMPUTE YDISP (6) = 0.\n  167      COMPUTE XDISP (7) = 193.    COMPUTE YDISP (7) = -52.\n  168      COMPUTE XDISP (8) = 173.    COMPUTE YDISP (8) = -100.\n  169      COMPUTE XDISP (9) = 141.    COMPUTE YDISP (9) = -141.\n  170      COMPUTE XDISP (10) = 100.   COMPUTE YDISP (10) = -173.\n  171      COMPUTE XDISP (11) = 52.    COMPUTE YDISP (11) = -193.\n  172      COMPUTE XDISP (12) = 0.     COMPUTE YDISP (12) = -200.\n  173      COMPUTE XDISP (13) = -52.   COMPUTE YDISP (13) = -193.\n  174      COMPUTE XDISP (14) = -100.  COMPUTE YDISP (14) = -173.\n  175      COMPUTE XDISP (15) = -141.  COMPUTE YDISP (15) = -141.\n  176      COMPUTE XDISP (16) = -173.  COMPUTE YDISP (16) = -100.\n  177      COMPUTE XDISP (17) = -193.  COMPUTE YDISP (17) = -52.\n  178      COMPUTE XDISP (18) = -200.  COMPUTE YDISP (18) = 0.\n  179      COMPUTE XDISP (19) = -193.  COMPUTE YDISP (19) = 52.\n  180      COMPUTE XDISP (20) = -173.  COMPUTE YDISP (20) = 100.\n  181      COMPUTE XDISP (21) = -141.  COMPUTE YDISP (21) = 141.\n  182      COMPUTE XDISP (22) = -100.  COMPUTE YDISP (22) = 173.\n  183      COMPUTE XDISP (23) = -52.   COMPUTE YDISP (23) = 193.\n  1831     COMPUTE XDISP (24) = 0.     COMPUTE YDISP (24) = 200.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                COMPUTE COORDINATES FOR CIRCLES AROUND OUTER X'S\n                AND PLACE THEM IN SMALX AND SMALY TABLES\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  184      PERFORM SMALX-CIRCLES VARYING SUB1 FROM 1 BY 1 UNTIL SUB1 > 8\n  185      AFTER SUB2 FROM 1 BY 1 UNTIL SUB2 > 24.\n  1851     GO TO NEXT2.\n  186  SMALX-CIRCLES.\n  187      COMPUTE SMALX (SUB1, SUB2) = CIRX (SUB1) + XDISP (SUB2).\n  188  NEXT2.\n  189      PERFORM SMALY-CIRCLES VARYING SUB1 FROM 1 BY 1 UNTIL SUB1 > 8\n  190      AFTER SUB2 FROM 1 BY 1 UNTIL SUB2 > 24.\n  1901     GO TO NEXT31.\n  191  SMALY-CIRCLES.\n  192      COMPUTE SMALY (SUB1, SUB2) = CIRY (SUB1) + YDISP (SUB2).\n  193  NEXT3.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                GENERATE CIRCLES AROUND OUTER X'S IN OMIT STATUS\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  1931 NEXT31.\n  194      COMPUTE GENCDE = 2.\n  195      COMPUTE COUNT = 24.\n  196      PERFORM SMALL-CIRCLES VARYING NUM FROM 1 BY 1 UNTIL NUM > 8.\n  1961     GO TO NEXT41.\n  197  SMALL-CIRCLES.\n  198      COMPUTE CORVAL = NUM.\n  1981     COMPUTE CIRYDISP = CIRY (NUM) + DISP.\n  199      ENTER LINKAGE.\n  200      CALL 'STPOS' USING IGDS3, CIRX (NUM), CIRYDISP.\n  201      ENTER COBOL.\n  202      ENTER LINKAGE.\n  203      CALL 'PLINE' USING IGDS3, SMALX (NUM, ONE), SMALY (NUM, ONE),\n  204      CORVAL, QUAY, GENCDE, COUNT, XINDEX, YINDEX.\n  205      ENTER COBOL.\n  206  NEXT4.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                OMIT LABELS FROM THE DISPLAY\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  2061 NEXT41.\n  207      ENTER LINKAGE.\n  208      CALL 'OMIT' USING IGDS2.\n  209      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                EXECUTE ALL GRAPHIC DATA PRODUCED\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  210      ENTER LINKAGE.\n  211      CALL 'EXEC' USING IGDS1.\n  212      ENTER COBOL.\n  213      ENTER LINKAGE.\n  214      CALL 'EXEC' USING IGDS2.\n  215      ENTER COBOL.\n  216      ENTER LINKAGE.\n  217      CALL 'EXEC' USING IGDS3.\n  218      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                REQUEST ATTENTION INFORMATION TO DETERMINE WHETHER\n                2250 OPERATOR WANTS TO CHANGE OR END DISPLAY -\n                WAIT FOR AN ATTENTION TO OCCUR\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  219  200.\n  220      ENTER LINKAGE.\n  221      CALL 'RQATN' USING IATL, INTCD, WAIT, INTARY (ONE),\n  222      ATTNS1, ATTNS2, ATTNS3, ATTNS4.\n  223      ENTER COBOL.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                IF LIGHT PEN ATTENTION, GO TO 210 -\n                IF PROGRAMMED FUNCTION KEY ATTENTION, GO TO 235\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  224      IF INTCD < 34 GO TO 235.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                IF LIGHT PEN ATTENTION WAS ASSOCIATED WITH IGDS1,\n                GO TO 220 - IF IGDS2, GO TO 225 - IF IGDS3, GO TO 230\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  225  210.\n  226      COMPUTE INTARYX = INTARY (1).\n  227      IF INTARYX = IGDS1 GO TO 220.\n  228  201.\n  229      IF INTARYX = IGDS2 GO TO 225.\n  230  202.\n  231      IF INTARYX = IGDS3 GO TO 230 OTHERWISE GO TO 200.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                IF LIGHT PEN ATTENTION WAS ON CENTER OF LARGE CIRCLE,\n                GO TO 221 - IF ON OUTER CIRCLE, GO TO 222\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  232  220.\n  233      COMPUTE INTARYX = INTARY (4).\n  234      IF INTARYX < 0 GO TO 221 OTHERWISE GO TO 222.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                DISPLAY LABELS AND WAIT FOR ANOTHER ATTENTION\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  235  221.\n  236      ENTER LINKAGE.\n  237      CALL 'INCL' USING IGDS2.\n  238      ENTER COBOL.\n  239      GO TO 200.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                DISPLAY A CIRCLE AROUND THE OUTER X DETECTED AND WAIT\n                FOR ANOTHER ATTENTION\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  240  222.\n  241      ENTER LINKAGE.\n  242      CALL 'INCL' USING IGDS3, INTARYX.\n  243      ENTER COBOL.\n  244      GO TO 200.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                REMOVE LABELS FROM DISPLAY - AWAIT NEW ATTENTION\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  245  225.\n  246      ENTER LINKAGE.\n  247      CALL 'OMIT' USING IGDS2.\n  248      ENTER COBOL.\n  249      GO TO 200.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                REMOVE DETECTED CIRCLE FROM DISPLAY\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  250  230.\n  251      COMPUTE INTARYX = INTARY (4).\n  252      ENTER LINKAGE.\n  253      CALL 'OMIT' USING IGDS3, INTARYX.\n  254      ENTER COBOL.\n  255      GO TO 200.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                IF PROGRAMMED FUNCTION KEY 1 DEPRESSED, GO TO 240 -\n                IF KEY 2, GO TO 250 - IF KEY 3, GO TO 260\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  256  235.\n  257      IF INTCD = 1 GO TO 240.\n  258  235A.\n  259      IF INTCD = 2 GO TO 250.\n  260  235B.\n  261      IF INTCD = 3 GO TO 260.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                TERMINATE THE PROGRAM RUN\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  262  240.\n  263      ENTER LINKAGE.\n  264      CALL 'TMGSP' USING IGSP.\n  265      ENTER COBOL.\n  266      STOP RUN.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                REMOVE ALL CIRCLES AROUND OUTER X'S - AWAIT ATTENTION\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  267  250.\n  268      PERFORM 251 VARYING NUM FROM 1 BY 1 UNTIL NUM > 8.\n  2681     GO TO 251A.\n  269  251.\n  270      ENTER LINKAGE.\n  271      CALL 'OMIT' USING IGDS3, NUM.\n  272      ENTER COBOL.\n  273  251A.\n  274      GO TO 200.\n           NOTE *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *\n                DISPLAY ALL CIRCLES AROUND OUTER X'S - AWAIT ATTENTION\n             *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *.\n  275  260.\n  276      PERFORM 261 VARYING NUM FROM 1 BY 1 UNTIL NUM > 8.\n  2761     GO TO 261A.\n  277  261.\n  278      ENTER LINKAGE.\n  279      CALL 'INCL' USING IGDS3, NUM.\n  280      ENTER COBOL.\n  281  261A.\n  282      GO TO 200.\n/*\n//LKED.SYSLIB  DD  DSNAME=SYS1.COBLIB,DISP=OLD\n//             DD  DSNAME=SYS1.LINKLIB,DISP=OLD\n//LKED.SYSIN   DD  *\n       INCLUDE  SYSLIB(IHDGSP01)\n       INCLUDE  SYSLIB(IHDGSP02)\n       INCLUDE  SYSLIB(IHDGSP03)\n/*\n//GO.FT10F001  DD  UNIT=2250-1\n//GO.SYSPRINT  DD  SYSOUT=A\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORTGC": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x10\\x00\\x10\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 16, "newlines": 16, "modlines": 0, "user": "JDMARSH"}, "text": "//FORTGC   PROC CR=116K\n//*********************************************************************\n//*             IBM FORTRAN IV LEVEL G  COMPILE                       *\n//*********************************************************************\n//*      ------------ P L E A S E  N O T E  --------------            *\n//*    THIS PROCEDURE PRODUCES NO OBJECT MODULE. IF ONE IS NEEDED     *\n//*      CODE:                                                        *\n//*      //  EXEC FORTGC,PARM=LOAD                                    *\n//*      //FORT.SYSLIN DD DSN=&&LOADSET,DISP=(MOD,PASS),              *\n//*      //     UNIT=SYSDA,SPACE=(3200,(57,9),RLSE),                  *\n//*      //     DCB=BLKSIZE=3200                                      *\n//*      //FORT.SYSIN DD  --INPUT PROGRAM FULLY DESCRIBED--           *\n//*********************************************************************\n//FORT     EXEC PGM=IEYFORT,PARM=NOLOAD,REGION=&CR\n//SYSUDUMP DD SYSOUT=A\n//SYSPRINT DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=120,BLKSIZE=2400)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORTGCG": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x14\\x00\\x14\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 20, "newlines": 20, "modlines": 0, "user": "JDMARSH"}, "text": "//FORTGCG  PROC CR=116K,GR=80K\n//*********************************************************************\n//*          IBM FORTRAN IV LEVEL G  COMPILE & GO                     *\n//********************************************************************\n//FORT     EXEC PGM=IEYFORT,REGION=&CR\n//SYSUDUMP DD SYSOUT=A\n//SYSLIN   DD DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,\n//            SPACE=(3200,(57,9),RLSE),DCB=BLKSIZE=3200\n//SYSPRINT DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=120,BLKSIZE=2400)\n//*********************************************************************\n//GO       EXEC PGM=LOADER,REGION=&GR,COND=(5,LT,FORT),PARM='SIZE=66K'\n//FT05F001 DD DDNAME=SYSIN\n//FT06F001 DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1596)\n//FT07F001 DD SYSOUT=B,DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//SYSLIB   DD DSN=SYS1.FORTLIB,DISP=SHR\n//         DD DSN=SYSX.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.COBLIB,DISP=SHR\n//SYSLIN   DD DSN=&&LOADSET,DISP=(OLD,DELETE)\n//SYSLOUT  DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=121,BLKSIZE=3146)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORTGCL": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x18\\x00\\x18\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "JDMARSH"}, "text": "//FORTGCL  PROC CR=126K,LR=150K\n//*********************************************************************\n//*             IBM FORTRAN IV LEVEL G COMPILE & LINK EDIT            *\n//*********************************************************************\n//FORT     EXEC PGM=IEYFORT,REGION=&CR\n//SYSUDUMP DD SYSOUT=A\n//SYSLIN   DD DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,\n//            SPACE=(3200,(57,9),RLSE),DCB=BLKSIZE=3200\n//SYSPRINT DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=120,BLKSIZE=2400)\n//*********************************************************************\n//LKED     EXEC PGM=IEWL,REGION=&LR,COND=(5,LT,FORT),\n//            PARM='LIST,LET,XREF'\n//SYSUDUMP DD SYSOUT=A\n//SYSLIB   DD DSN=SYS1.FORTLIB,DISP=SHR\n//         DD DSN=SYS1.COBLIB,DISP=SHR\n//         DD DSN=SYSX.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.LOADLIB,DISP=SHR\n//SYSLIN   DD DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD DDNAME=SYSIN\n//SYSLMOD  DD DSN=&&GOSET(GO),DISP=(MOD,PASS),UNIT=SYSDA,\n//            SPACE=(CYL,(2,,1))\n//SYSPRINT DD SYSOUT=A,DCB=BLKSIZE=3416\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD)),\n//            SPACE=(1024,(200,11))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORTGCLG": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00 \\x00 \\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "JDMARSH"}, "text": "//FORTGCLG PROC CR=116K,LR=150K,GR=\n//*********************************************************************\n//*      IBM FORTRAN IV LEVEL G  COMPILE, LINK EDIT, GO               *\n//*********************************************************************\n//FORT     EXEC PGM=IEYFORT,REGION=&CR\n//SYSUDUMP DD SYSOUT=A\n//SYSLIN   DD DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,\n//            SPACE=(3200,(57,9),RLSE),DCB=BLKSIZE=3200\n//SYSPRINT DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=120,BLKSIZE=2400)\n//*********************************************************************\n//LKED     EXEC PGM=IEWL,REGION=&LR,COND=(5,LT,FORT),\n//         PARM='LIST,LET,XREF'\n//SYSUDUMP DD SYSOUT=A\n//SYSLIB   DD DSN=SYS1.FORTLIB,DISP=SHR\n//         DD DSN=SYS1.LOADLIB,DISP=SHR\n//         DD DSN=SYSX.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.COBLIB,DISP=SHR\n//SYSLIN   DD DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD DDNAME=SYSIN\n//SYSLMOD  DD DSN=&&GOSET(GO),DISP=(MOD,PASS),UNIT=SYSDA,\n//            SPACE=(CYL,(2,,1))\n//SYSPRINT DD SYSOUT=A,DCB=BLKSIZE=3146\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD)),\n//            SPACE=(1024,(200,11))\n//*********************************************************************\n//GO       EXEC PGM=*.LKED.SYSLMOD,REGION=&GR,\n//         COND=((5,LT,FORT),(9,LT,LKED))\n//SYSPRINT DD SYSOUT=A\n//FT05F001 DD DDNAME=SYSIN\n//FT06F001 DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1596)\n//FT07F001 DD SYSOUT=B,DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//GOSET    DD DSN=&&GOSET,UNIT=SYSDA,SPACE=(TRK,0),DISP=(MOD,DELETE)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORTGLG": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x14\\x00\\x14\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 20, "newlines": 20, "modlines": 0, "user": "JDMARSH"}, "text": "//FORTGLG  PROC LR=150K,GR=\n//*********************************************************************\n//LKED     EXEC PGM=IEWL,REGION=&LR,PARM='LIST,LET,XREF'\n//SYSUDUMP DD SYSOUT=A\n//SYSLIB   DD DSN=SYS1.FORTLIB,DISP=SHR\n//         DD DSN=SYSX.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.COBLIB,DISP=SHR\n//SYSLIN   DD DDNAME=SYSIN\n//SYSLMOD  DD DSN=&&GOSET(GO),DISP=(MOD,PASS),\n//            SPACE=(6144,(76,,1)),UNIT=(SYSDA,SEP=(SYSLIN))\n//SYSPRINT DD SYSOUT=A,DCB=BLKSIZE=3146\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD)),\n//            SPACE=(1024,(200,11))\n//*********************************************************************\n//GO       EXEC PGM=*.LKED.SYSLMOD,REGION=&GR,COND=(9,LT,LKED)\n//FT05F001 DD DDNAME=SYSIN\n//FT06F001 DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=1596)\n//FT07F001 DD SYSOUT=B,DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//GOSET    DD DSN=&&GOSET,UNIT=SYSDA,SPACE=(TRK,0),DISP=(MOD,DELETE)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORTHC": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x15\\x00\\x15\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "JDMARSH"}, "text": "//FORTHC   PROC CR=256K\n//*********************************************************************\n//*                GODDARD   SPACE   FLIGHT   CENTER                  *\n//*                 FORTRAN IV LEVEL H  COMPILE                       *\n//*********************************************************************\n//*      ------    P L E A S E     N O T E       ------               *\n//*      THIS PROCEDURE PRODUCES NO OBJECT MODULE. IF ONE IS          *\n//*      DESIRED, PLEASE CODE AS FOLLOWS                              *\n//*      //   EXEC FORTHC,PARM=LOAD                                   *\n//*      //SYSLIN DD DSN=&&LOADSET,UNIT=SYSDA,DISP=(MOD,PASS),        *\n//*      //        SPACE=(CYL,(10,1),RLSE),                           *\n//*      //        DCB=(LRECL=80,BLKSIZE=400)                         *\n//*      //FORT.SYSIN DD  ---INPUT FULLY DESCRIBED---                 *\n//*********************************************************************\n//FORT     EXEC PGM=IEKAA00,PARM=NOLOAD,REGION=&CR\n//SYSUDUMP DD SYSOUT=A\n//SYSPRINT DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//SYSTERM  DD SYSOUT=A\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(10,2))\n//SYSUT2   DD UNIT=(SYSDA,SEP=(SYSUT1)),SPACE=(CYL,(10,2))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORTHCG": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x18\\x00\\x18\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "JDMARSH"}, "text": "//FORTHCG  PROC CR=256K,GR=\n//*                GODDARD   SPACE   FLIGHT   CENTER                  *\n//*             FORTRAN IV LEVEL H  COMPILE & GO                      *\n//*********************************************************************\n//FORT     EXEC PGM=IEKAA00,REGION=&CR\n//SYSUDUMP DD SYSOUT=A\n//SYSPRINT DD SYSOUT=A\n//SYSTERM  DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//SYSLIN   DD DSN=&&LOADSET,UNIT=SYSDA,DISP=(MOD,PASS),\n//            SPACE=(CYL,(10,1),RLSE),DCB=(LRECL=80,BLKSIZE=400)\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(10,2))\n//SYSUT2   DD UNIT=(SYSDA,SEP=(SYSUT1)),SPACE=(CYL,(10,2))\n//*********************************************************************\n//GO   EXEC PGM=LOADER,COND=(4,LT,FORT),REGION=&GR,PARM='SIZE=66K'\n//SYSLIB   DD DSN=SYS1.FORTLIB,DISP=SHR\n//         DD DSN=SYSX.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.DRUMPLOT,DISP=SHR\n//         DD DSN=SYS1.LOADLIB,DISP=SHR\n//SYSLOUT  DD SYSOUT=A\n//SYSLIN   DD DSN=*.FORT.SYSLIN,DISP=(OLD,PASS)\n//FT05F001 DD DDNAME=SYSIN\n//FT06F001 DD SYSOUT=A\n//FT07F001 DD SYSOUT=B\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORTHCL": {"ttr": 786, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "JDMARSH"}, "text": "//FORTHCL  PROC CR=256K,LR=150K\n//*********************************************************************\n//*                GODDARD   SPACE   FLIGHT   CENTER                  *\n//*              FORTRAN IV LEVEL H  COMPILE & LINK EDIT              *\n//*********************************************************************\n//FORT     EXEC PGM=IEKAA00,REGION=&CR\n//SYSUDUMP DD SYSOUT=A\n//SYSPRINT DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//SYSTERM  DD SYSOUT=A\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(10,2))\n//SYSUT2   DD UNIT=(SYSDA,SEP=(SYSUT1)),SPACE=(CYL,(10,2))\n//SYSLIN   DD DSN=&&LOADSET,UNIT=SYSDA,DISP=(MOD,PASS),\n//            SPACE=(CYL,(10,1),RLSE),DCB=(LRECL=80,BLKSIZE=400)\n//*********************************************************************\n//LKED     EXEC PGM=IEWL,PARM=(MAP,LET,LIST),REGION=&LR,\n//         COND=(4,LT,FORT)\n//SYSUDUMP DD SYSOUT=A\n//SYSLIB   DD DSN=SYS1.FORTLIB,DISP=SHR\n//         DD DSN=SYSX.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.DRUMPLOT,DISP=SHR\n//         DD DSN=SYS1.LOADLIB,DISP=SHR\n//SYSPRINT DD SYSOUT=A\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD  DD DSN=&&GOSET(MAIN),DISP=(NEW,PASS),UNIT=SYSDA,\n//            SPACE=(CYL,(2,1,16))\n//SYSLIN   DD DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD DDNAME=SYSIN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORTHCLG": {"ttr": 788, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00#\\x00#\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "JDMARSH"}, "text": "//FORTHCLG PROC CR=256K,LR=150K,GR=\n//*********************************************************************\n//*                GODDARD   SPACE   FLIGHT   CENTER                  *\n//*           FORTRAN IV LEVEL H   COMPILE, LINK EDIT, GO             *\n//*********************************************************************\n//FORT     EXEC PGM=IEKAA00,REGION=&CR\n//SYSUDUMP DD SYSOUT=A\n//SYSPRINT DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//SYSTERM  DD SYSOUT=A\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(10,2))\n//SYSUT2   DD UNIT=(SYSDA,SEP=(SYSUT1)),SPACE=(CYL,(10,2))\n//SYSLIN   DD DSN=&&LOADSET,UNIT=SYSDA,DISP=(MOD,PASS),\n//            SPACE=(CYL,(10,1),RLSE),DCB=(LRECL=80,BLKSIZE=400)\n//*********************************************************************\n//LKED     EXEC PGM=IEWL,PARM=(MAP,LET,LIST),REGION=&LR,\n//         COND=(4,LT,FORT)\n//SYSUDUMP DD SYSOUT=A\n//SYSLIB   DD DSN=SYS1.FORTLIB,DISP=SHR\n//         DD DSN=SYSX.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.DRUMPLOT,DISP=SHR\n//         DD DSN=SYS1.LOADLIB,DISP=SHR\n//SYSPRINT DD SYSOUT=A\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD  DD DSN=&&GOSET(MAIN),DISP=(NEW,PASS),UNIT=SYSDA,\n//             SPACE=(CYL,(2,1,16))\n//SYSLIN   DD DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD DDNAME=SYSIN\n//*********************************************************************\n//GO       EXEC PGM=*.LKED.SYSLMOD,REGION=&GR,\n//            COND=((4,LT,FORT),(4,LT,LKED))\n//GOSET    DD DSN=&&GOSET,UNIT=SYSDA,SPACE=(TRK,0),DISP=(MOD,DELETE)\n//FT05F001 DD DDNAME=SYSIN\n//FT06F001 DD SYSOUT=A\n//FT07F001 DD SYSOUT=B\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORTHLG": {"ttr": 790, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x13\\x00\\x13\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "JDMARSH"}, "text": "//FORTHLG  PROC LR=150K,GR=\n//*********************************************************************\n//LKED     EXEC PGM=IEWL,PARM=(MAP,LET,LIST),REGION=&LR\n//SYSUDUMP DD SYSOUT=A\n//SYSLIB   DD DSN=SYS1.FORTLIB,DISP=SHR\n//         DD DSN=SYSX.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.DRUMPLOT,DISP=SHR\n//         DD DSN=SYS1.LOADLIB,DISP=SHR\n//SYSPRINT DD SYSOUT=A\n//SYSLIN   DD DDNAME=SYSIN\n//SYSLMOD  DD DSN=&&GOSET(MAIN),DISP=(NEW,PASS),UNIT=SYSDA,\n//            SPACE=(CYL,(2,1,16))\n//SYSUT1   DD UNIT=(SYSDA,SEP=(SYSLMOD)),SPACE=(CYL,(1,1))\n//*********************************************************************\n//GO       EXEC PGM=*.LKED.SYSLMOD,REGION=&GR,\n//         COND=(4,LT,LKED)\n//FT05F001 DD DDNAME=SYSIN\n//FT06F001 DD SYSOUT=A\n//FT07F001 DD SYSOUT=B\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GSPSAMP": {"ttr": 792, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00v\\x19/\\x00v\\x19/\\t'\\x00\\xab\\x00\\xab\\x00\\x00\\xd4\\xe5\\xe3\\xe2\\xc1\\xd4\\xd7@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1976-07-10T00:00:00", "modifydate": "1976-07-10T09:27:00", "lines": 171, "newlines": 171, "modlines": 0, "user": "MVTSAMP"}, "text": "//GSPSAMP JOB 1234567,GSPSAMP,MSGLEVEL=1\n//SAMPL EXEC FORTGCLG,PARM.FORT=(NODECK,MAP,LOAD)\n//FORT.SYSIN DD *\nC     THIS SAMPLE PROGRAM DRAWS A CIRCLE OF 8 BASIC SIZE X'S WITH A\nC     LARGE SIZE X AS ITS CENTER. DEPENDING ON THE ATTENTION CREATED,\nC     THE PROGRAM WILL DO THE FOLLOWING:\nC\nC\nC         1. LIGHT PEN ATTENTION ON CENTER X LABELS OUTER X'S FROM\nC            NUM1 THROUGH NUM8. (STATEMENT 221).\nC\nC         2. LIGHT PEN ATTENTION ON OUTER X GENERATES A CIRCLE WHOSE\nC            CENTER IS THE DETECTED X. (STATEMENT 222).\nC\nC         3. LIGHT PEN ATTENTION ON CIRCLE AROUND OUTER X MAKES THAT\nC            CIRCLE INVISIBLE. (STATEMENT 230).\nC\nC         4. LIGHT PEN ATTENTION ON ANY LABEL MAKES ALL LABELS\nC            INVISIBLE. (STATEMENT 225).\nC\nC         5. PROGRAMMED FUNCTION KEY 1 ENDS RUN. (STATEMENT 240).\nC\nC         6. PROGRAMMED FUNCTION KEY 2 MAKES ALL CIRCLES INVISIBLE.\nC            (STATEMENT 250).\nC\nC         7. PROGRAMMED FUNCTION KEY 3 MAKES ALL CIRCLES VISIBLE.\nC            (STATEMENT 260).\nC                                  BEGIN PROGRAM\nC                  SET UP DIMENSION STATEMENT FOR VARIOUS ARRAYS USED.\nC\nC     C635000                                                   A 45402\nC\n      DIMENSION INTARY(10),CIRX(8),CIRY(8),SMALX(8,24),SMALY(8,24),\n     X LABEL(32),NULL(1)\nC                  INITIALIZE THE GRAPHIC SUBROUTINE PACKAGE. DEFINE\nC                  THE NULL VARIABLE.\n      NULL(1)=-5\n      CALL INGSP(IGSP,NULL)\nC                  INITIALIZE THE 2250. ASSIGN IT UNIT NUMBER 10.\n      CALL INDEV(IGSP,10,I2250)\nC                  INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO\nC                  DISPLAY THE CIRCLE OF X'S AND ITS CENTER X.\n      CALL INGDS(I2250,IGDS1)\nC                  INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO\nC                  LABEL THE OUTER X'S OF THE CIRCLE.\n      CALL INGDS(I2250,IGDS2)\nC                  INITIALIZE A GRAPHIC DATA SET THAT WILL BE USED TO\nC                  DISPLAY A CIRCLE AROUND ANY OF THE OUTER X'S.\n      CALL INGDS(I2250,IGDS3)\nC                  CREATE AN ATTENTION LEVEL FOR THE 2250.\n      CALL CRATL(I2250,IATL)\nC                  ENABLE PROGRAMMED FUNCTION KEYS 1,2, & 3 & LIGHT PEN.\n      CALL ENATN(IATL,1,-3,34)\n      CALL MLITS(I2250,3)\nC                  ALLOW LIGHT PEN ATTENTIONS FOR EACH GRAPHIC DATA SET.\n      CALL SLPAT(IGDS1,1)\n      CALL SLPAT(IGDS2,1)\n      CALL SLPAT(IGDS3,1)\nC                  THE FOLLOWING INFORMATION IS ON CARD RECORDS. DEVICE\nC                  NUMBER IS 5. CHARACTER X IS LEFT ALIGNED AND APPEARS\nC                  ON THE CARD RECORD AS XBBB . EIGHT 4-DIGIT LABELS\nC                  (NUM1,NUM2,ETC.) FOLLOW THE X. STORAGE WAS ALLOCATED\nC                  FOR THE ARRAY \"LABEL\" BY THE PREVIOUS DIMENSION STATE\nC                  MENT.\nC\nC                  PLACE CHARACTER X IN MAIN STORAGE.\n   20 FORMAT(A4)\n      READ(5,20)X\nC                  PLACE LABELS IN MAIN STORAGE.\n   30 FORMAT(8A4)\n      READ(5,30)(LABEL(INCR),INCR=1,8)\nC                  SET BEAM POSITION TO CENTER OF CIRCLE.\n      CX=2047.0\n      CY=2047.0\nC                  SET CHARACTER MODE FOR LARGE SIZE, PROTECTED.\n      CALL SCHAM(IGDS1,2)\nC                  DISPLAY CENTER X.\n      NUM=-1\n      CALL PTEXT(IGDS1,X,1,NUM,NULL,1,CX,CY)\nC                  COMPUTE X AND Y COORDINATES FOR X'S OF OUTER CIRCLE.\nC                  PLACE THEM IN THE CIRX AND CIRY ARRAYS FOR WHICH MAIN\nC                  STORAGE HAS BEEN ALLOCATED BY DIMENSION STATEMENT.\n      R=1200.0\n      C=3.141596/180\n      THETA=45.0\n      DO 10 I=1,8\n      RADIAN=THETA*FLOAT(I)*C\n      CIRX(I)=CX+R*COS(RADIAN)\n   10 CIRY(I)=CY+R*SIN(RADIAN)\nC                  SET CHARACTER MODE FOR BASIC SIZE, PROTECTED X.\n      CALL SCHAM(IGDS1,1)\nC                  GENERATE AN X IN INCLUDE STATUS. CALCULATE\nC                  X-COORDINATE OF LABEL ASSOCIATED WITH THAT X.\nC                  GENERATE LABEL IN INCLUDE STATUS. SET INCR TO NEXT\nC                  LABEL IN ARRAY. DO THIS 8 TIMES TO COMPLETE CIRCLE.\n      DO 50 NUM=1,8\n      CALL PTEXT(IGDS1,X,1,NUM,NULL,1,CIRX(NUM),CIRY(NUM))\n      CXNUM=CIRX(NUM)+300.0\n   50 CALL PTEXT(IGDS2,LABEL(NUM),4,NUM,NULL,1,CXNUM,CIRY(NUM))\nC                  COMPUTE COORDINATES FOR CIRCLES AROUND OUTER X'S.\nC                  PLACE THEM IN SMALX AND SMALY ARRAYS FOR WHICH MAIN\nC                  STORAGE HAS BEEN ALLOCATED BY DIMENSION STATEMENT.\n      R=200.0\n      THETA=360.0/24.0\n      DO 105 N=1,24\n      RADIAN=THETA*FLOAT(N)*C\n      DO 105 I=1,8\n      SMALX(I,N)=CIRX(I)+R*COS(RADIAN)\n  105 SMALY(I,N)=CIRY(I)+R*SIN(RADIAN)\nC                  GENERATE CIRCLES AROUND OUTER X'S IN OMIT STATUS.\n      DO 110 NUM=1,8\n      CALL STPOS(IGDS3,CIRX(NUM)+200.0,CIRY(NUM))\n  110 CALL PLINE(IGDS3,SMALX(NUM,1),SMALY(NUM,1),NUM,NULL,2,24,8,8)\nC                  OMIT LABELS FROM THE DISPLAY.\n      CALL OMIT(IGDS2)\nC                  EXECUTE ALL GRAPHIC DATA PRODUCED.\n      CALL EXEC(IGDS1)\n      CALL EXEC(IGDS2)\n      CALL EXEC(IGDS3)\nC                  REQUEST ATTENTION INFORMATION TO DETERMINE WHETHER\nC                  2250 OPERATOR WANTS TO CHANGE OR END THE DISPLAY.\nC                  WAIT FOR AN ATTENTION TO OCCUR.\n  200 CALL RQATN(IATL,INTCD,2,INTARY,1,2,3,34)\nC                  IF LIGHT PEN ATTENTION, GO TO 210.\nC                  IF PROGRAMMED FUNCTION KEY ATTENTION, GO TO 235.\n      IF (INTCD-34) 235,210,210\nC                  IF LIGHT PEN ATTENTION WAS ASSOCIATED WITH IGDS1, GO\nC                  TO 220. IF IGDS2, GO TO 225. IF IGDS3, GO TO 230.\n  210 IF(INTARY(1)-IGDS1) 201,220,201\n  201 IF(INTARY(1)-IGDS2) 202,225,202\n  202 IF(INTARY(1)-IGDS3) 200,230,200\nC                  IF LIGHT PEN ATTENTION WAS ON CENTER OF LARGE CIRCLE,\nC                  GO TO 221. IF ON OUTER CIRCLE, GO TO 222.\n  220 IF(INTARY(4)) 221,222,222\nC                  DISPLAY LABELS AND WAIT FOR ANOTHER ATTENTION.\n  221 CALL INCL(IGDS2)\n      GO TO 200\nC                  DISPLAY A CIRCLE AROUND THE OUTER X DETECTED AND WAIT\nC                  FOR ANOTHER ATTENTION.\n  222 NUM=INTARY(4)\n      CALL INCL(IGDS3,NUM)\n      GO TO 200\nC                  REMOVE LABELS FROM DISPLAY. AWAIT NEW ATTENTION.\n  225 CALL OMIT(IGDS2)\n      GO TO 200\nC                  REMOVE DETECTED CIRCLE FROM DISPLAY. AWAIT ATTENTION.\n  230 NUM=INTARY(4)\n      CALL OMIT(IGDS3,NUM)\n      GO TO 200\nC                  IF PROGRAMMED FUNCTION KEY 1 DEPRESSED, GO TO 240.\nC                  IF KEY 2, GO TO 250. IF KEY 3, GO TO 260.\n  235 GO TO (240,250,260),INTCD\nC                  TERMINATE THE PROGRAM RUN.\n  240 CALL TMGSP(IGSP)\n      CALL EXIT\nC                  REMOVE ALL CIRCLES AROUND OUTER X'S. AWAIT ATTENTION.\n  250 DO 251 I=1,8\n  251 CALL OMIT(IGDS3,I)\n      GO TO 200\nC                  DISPLAY ALL CIRCLES AROUND OUTER X'S. AWAIT ATTENTION\n  260 DO 261 I=1,8\n  261 CALL INCL(IGDS3,I)\n      GO TO 200\n      END\n//LKED.SYSIN DD *\n INCLUDE SYSLIB(IHCGSP03)\n//GO.SYSABEND  DD SYSOUT=A\n//GO.FT10F001  DD  UNIT=(2250-1)\n//GO.SYSIN    DD *\nX\nNUM1NUM2NUM3NUM4NUM5NUM6NUM7NUM8\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IEMSP2": {"ttr": 1026, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00v\\x19/\\x00v\\x19/\\t'\\x003\\x003\\x00\\x00\\xd4\\xe5\\xe3\\xe2\\xc1\\xd4\\xd7@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1976-07-10T00:00:00", "modifydate": "1976-07-10T09:27:00", "lines": 51, "newlines": 51, "modlines": 0, "user": "MVTSAMP"}, "text": "//IDS  JOB  400565,S.EGGETT,MSGLEVEL=1,CLASS=B,REGION=108K,PRTY=8\n//X EXEC PL1LFCLG,PARM.PL1L='SIZE=45056,S,NL,A,X,LD,ND,SM=(2,72),EB,C',\n//             PARM.LKED='LET'\n//PL1L.SYSIN DD *\n IEMSP2 : PROCEDURE OPTIONS(MAIN);\n /* THIS PROGRAM TRANSFERS CARD IMAGES FROM ONE FILE TO ANOTHER.\n /* EACH IMAGE HAS A TYPE NUMBER AS FIRST CHARACTER.THE PROGRAM\n /* RECORDS THE NUMBER OF CARDS THERE ARE OF EACH TYPE. */\n    DECLARE CARDS INPUT ENVIRONMENT(F(80)) ,\n            BUILD OUTPUT ENVIRONMENT(F(480,80)),\n          1 CARD,\n          2 TYP CHAR(1),\n          2 BODY CHAR(79),\n            T FIXED BINARY,\n            TYPE(0:9) FIXED(3) STATIC INITIAL((10) 0 );\n    PUT EDIT('OUTPUT OF PL/1 SAMPLE PROGRAM')(COLUMN(45),A) PAGE;\n    ON ENDFILE(CARDS) GOTO FINISH;\n    ON CONVERSION BEGIN;PUT EDIT\n ('THIS CARD IGNORED BECAUSE TYPE IS NOT NUMERIC := ',CARD)(A) SKIP(2);\n    GOTO LOOP; END;\n LOOP: READ FILE(CARDS) INTO(CARD);\n    T=TYP;TYPE(T) = TYPE(T) + 1;\n    WRITE FROM(CARD) FILE(BUILD);\n    GOTO LOOP;\n FINISH: PUT DATA(TYPE) SKIP(3);\n    PUT EDIT('END OF SAMPLE OUTPUT')(COLUMN(47),A) SKIP(2);\n    END IEMSP2;\n/*\n//GO.SYSABEND  DD  SYSOUT=A\n//GO.BUILD DD UNIT=SYSDA,SPACE=(480,(10,5))\n//GO.CARDS DD *,DCB=BLKSIZE=80\n2    FIRST OF DATA FOR PL1 SAMPLE PROGRAM\n6\n6 THE\n8  CONTENTS\n6   OF\n2   THESE\n4     CARDS\n7      IMMATERIAL\n2       SINCE\n0       THEY\n6        ARE\n6         ONLY\n6          TRANSMITTED\n6           NOT\n6            PRINTED\n6\n&       DELIBERATE DUD CARD\n6\n2   LAST OF SOURCE DATA FOR PL1 SAMPLE\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEPSAMP": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00v\\x19/\\x00v\\x19/\\t'\\x02\\x9d\\x02\\x9d\\x00\\x00\\xd4\\xe5\\xe3\\xe2\\xc1\\xd4\\xd7@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1976-07-10T00:00:00", "modifydate": "1976-07-10T09:27:00", "lines": 669, "newlines": 669, "modlines": 0, "user": "MVTSAMP"}, "text": "//EXECUTE  JOB   1234,COMLINKEX,MSGLEVEL=1                              0002\n//STEPX    EXEC     COBECLG                                             0004\n//COB.SYSIN DD *                                                        0006\n000000 IDENTIFICATION DIVISION.                                         0008BP01\n000010 PROGRAM-ID. 'TCECBP01'.                                          0010BP01\n000020 REMARKS.                                                         0012BP01\n000030     MINIMUM ENVIRONMENT REQUIRED TO COMPILE AND EXECUTE          0014BP01\n000040         SYSTEM/360 MODEL 30 WITH 32K STORAGE                     0016BP01\n000050         CONTROL PROGRAM                                          0018BP01\n000060         COBOL COMPILER E                                         0020BP01\n000070     SPECIAL OPERATOR INSTRUCTIONS-NONE                           0022BP01\n000080     PURPOSE                                                      0024BP01\n000090         TEST THE COBOL COMPILERS ABILITY TO READ AND             0026BP01\n000100         WRITE FROM TAPE CHECKING PROPER DATA ALIGNMENT           0028BP01\n000110         WHERE DATA IS A MIXTURE OF DISPLAY COMPUTATIONAL         0030BP01\n000120         AND COMPUTATIONAL-3.                                     0032BP01\n000130         FILES ARE HOMOGENEOUS HETROGENEOUS EQUAL AND DIFFERING.  0034BP01\n000140     PREREQUISITES                                                0036BP01\n000150         ALL PREVIOUS GROUP A AND B TEST CASES OPERATIONAL.       0038BP01\n000160     INDIVIDUAL TEST CASES IN THIS PROGRAM                        0040BP01\n000170         GROUP B                                                  0042BP01\n000180         LEVEL P                                                  0044BP01\n000190         TEST CASE 1                                              0046BP01\n000200     NUMBER OF SOURCE STATEMENTS                                  0048BP01\n000210         575                                                      0050BP01\n000220     EXPECTED RESULTS                                             0052BP01\n000230         HEADING                                                  0054BP01\n000240         END OF TEST                                              0056BP01\n000250     ERROR INDICATIONS                                            0058BP01\n000260         ********** (PARAGRAPH-NAME)  FAILED                      0060BP01\n000270     DATE STARTED TEST WRITING                                    0062BP01\n000280         JANUARY 25 1965                                          0064BP01\n000290     DATE FINISHED TEST WRITING                                   0066BP01\n000300         JANUARY 28 1965                                          0068BP01\n000310     DATE DEBUGGED ON CURRENT SYSTEM                              0070BP01\n000320                                                                  0072BP01\n000330     DATE ADDED TO ATP SYSTEM                                     0074BP01\n000340                                                                  0076BP01\n000350 AUTHOR.                                                          0078BP01\n000360         D50 TEST AND RELEASE PROCESSOR A GROUP                   0080BP01\n000370         P J MITCHELL                                             0082BP01\n000380 ENVIRONMENT DIVISION.                                            0084BP01\n000390 CONFIGURATION SECTION.                                           0086BP01\n000400 SOURCE-COMPUTER. IBM-360 E50.                                    0088BP01\n000410 OBJECT-COMPUTER. IBM-360 E50.                                    0090BP01\n000420 INPUT-OUTPUT SECTION.                                            0092BP01\n000430 FILE-CONTROL.                                                    0094BP01\n000440     SELECT HOMO-WRITE-FILE1-FIXED ASSIGN TO                      0096BP01\n           'SYS004'                                                     0098\n000460     UTILITY.                                                     0100BP01\n000470     SELECT HOMO-READ-FILE1-FIXED ASSIGN TO                       0102BP01\n           'SYS004'                                                     0104\n000490     UTILITY.                                                     0106BP01\n000500     SELECT HETRO-WRITE-FILE1-EQUAL ASSIGN TO                     0108BP01\n           'SYS005'                                                     0110\n000520     UTILITY.                                                     0112BP01\n000530     SELECT  HETRO-READ-FILE1-EQUAL ASSIGN TO                     0114BP01\n           'SYS005'                                                     0116\n000550     UTILITY.                                                     0118BP01\n000560     SELECT  HETRO-WRITE-FILE1-DIFF ASSIGN TO                     0120BP01\n           'SYS006'                                                     0122\n000580     UTILITY.                                                     0124BP01\n000590     SELECT  HETRO-READ-FILE1-DIFF ASSIGN TO                      0126BP01\n           'SYS006'                                                     0128\n000610     UTILITY.                                                     0130BP01\n000620 DATA DIVISION.                                                   0132BP01\n000630 FILE SECTION.                                                    0134BP01\n000640 FD  HOMO-READ-FILE1-FIXED                                        0136BP01\n000650     RECORD CONTAINS 24 CHARACTERS                                0138BP01\n000660     RECORDING MODE IS F                                          0140BP01\n000670     LABEL RECORDS ARE OMITTED                                    0142BP01\n000680     DATA RECORD IS REC-1.                                        0144BP01\n000690 01  REC-1.                                                       0146BP01\n000700 02  FORMAT-1-REC-1.                                              0148BP01\n000710 03  NUM-1-REC-1 PICTURE 9 DISPLAY.                               0150BP01\n000720 03  FILLER PICTURE 9(1).                                         0152BP01\n000730 03  NUM-2-REC-1     PICTURE S9(4)                  COMPUTATIONAL.0154BP01\n000740 03  NUM-3-REC-1 PICTURE 9 DISPLAY.                               0156BP01\n000750 03  FILLER PICTURE 9(3).                                         0158BP01\n000760 03  NUM-4-REC-1     PICTURE S9(9)                  COMPUTATIONAL.0160BP01\n000770 03  NUM-5-REC-1   PICTURE 999 COMPUTATIONAL-3.                   0162BP01\n000780 03  FILLER PICTURE 9(2).                                         0164BP01\n000790 03  NUM-6-REC-1     PICTURE S9(18)                 COMPUTATIONAL.0166BP01\n000800 02  FORMAT-2-REC-1 REDEFINES FORMAT-1-REC-1.                     0168BP01\n000810 03  NUM-7-REC-1   PICTURE 9(15) DISPLAY.                         0170BP01\n000820 03  NUM-8-REC-1  REDEFINES NUM-7-REC-1.                          0172BP01\n000830 04  NUM-9-REC-1   PICTURE 9(7) DISPLAY.                          0174BP01\n000840 04  NUM-10-REC-1   PICTURE 9(8)  DISPLAY.                        0176BP01\n000850 04  NUM-11-REC-1 REDEFINES NUM-10-REC-1.                         0178BP01\n000860 05  NUM-12-REC-1   PICTURE 9(4) DISPLAY.                         0180BP01\n000870 05  NUM-13-REC-1   PICTURE 9(4) DISPLAY.                         0182BP01\n000880 03  FILLER PICTURE 9(1).                                         0184BP01\n000890 03  NUM-14-REC-1    PICTURE S9(18)                 COMPUTATIONAL.0186BP01\n000900 02  FORMAT-3-REC-1   REDEFINES FORMAT-2-REC-1.                   0188BP01\n000910 03  NUM-15-REC-1 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0190BP01\n000920 FD  HOMO-WRITE-FILE1-FIXED                                       0192BP01\n000930     RECORD CONTAINS 24 CHARACTERS                                0194BP01\n000940     RECORDING MODE IS F                                          0196BP01\n000950     LABEL RECORDS ARE OMITTED                                    0198BP01\n000960     DATA RECORD IS REC-2.                                        0200BP01\n000970 01  REC-2.                                                       0202BP01\n000980 02  FORMAT-1-REC-2.                                              0204BP01\n000990 03  NUM-1-REC-2 PICTURE 9 DISPLAY.                               0206BP01\n001000 03  NUM-2-REC-2     PICTURE S9(4)                  COMPUTATIONAL.0208BP01\n001010 03  NUM-3-REC-2 PICTURE 9 DISPLAY.                               0210BP01\n001020 03  NUM-4-REC-2     PICTURE S9(9)                  COMPUTATIONAL.0212BP01\n001030 03  NUM-5-REC-2   PICTURE 999 COMPUTATIONAL-3.                   0214BP01\n001040 03  NUM-6-REC-2     PICTURE S9(18)                 COMPUTATIONAL.0216BP01\n001050 02  FORMAT-2-REC-2 REDEFINES FORMAT-1-REC-2.                     0218BP01\n001060 03  NUM-7-REC-2   PICTURE 9(15) DISPLAY.                         0220BP01\n001070 03  NUM-8-REC-2  REDEFINES NUM-7-REC-2.                          0222BP01\n001080 04  NUM-9-REC-2   PICTURE 9(7) DISPLAY.                          0224BP01\n001090 04  NUM-10-REC-2   PICTURE 9(8)  DISPLAY.                        0226BP01\n001100 04  NUM-11-REC-2 REDEFINES NUM-10-REC-2.                         0228BP01\n001110 05  NUM-12-REC-2   PICTURE 9(4) DISPLAY.                         0230BP01\n001120 05  NUM-13-REC-2   PICTURE 9(4) DISPLAY.                         0232BP01\n001130 03  NUM-14-REC-2    PICTURE S9(18)                 COMPUTATIONAL.0234BP01\n001140 02  FORMAT-3-REC-2   REDEFINES FORMAT-2-REC-2.                   0236BP01\n001150 03  NUM-15-REC-2 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0238BP01\n001160 FD  HETRO-READ-FILE1-EQUAL                                       0240BP01\n001170     RECORD CONTAINS 24 CHARACTERS                                0242BP01\n001180     RECORDING MODE IS F                                          0244BP01\n001190     LABEL RECORDS ARE OMITTED                                    0246BP01\n001200     DATA RECORDS ARE REC-3 REC-5.                                0248BP01\n001210 01  REC-3.                                                       0250BP01\n001220 02  FORMAT-1-REC-3.                                              0252BP01\n001230 03  NUM-1-REC-3 PICTURE 9 DISPLAY.                               0254BP01\n001240 03  FILLER PICTURE 9(1).                                         0256BP01\n001250 03  NUM-2-REC-3     PICTURE S9(4)                  COMPUTATIONAL.0258BP01\n001260 03  NUM-3-REC-3 PICTURE 9 DISPLAY.                               0260BP01\n001270 03  FILLER PICTURE 9(3).                                         0262BP01\n001280 03  NUM-4-REC-3     PICTURE S9(9)                  COMPUTATIONAL.0264BP01\n001290 03  NUM-5-REC-3   PICTURE 999 COMPUTATIONAL-3.                   0266BP01\n001300 03  FILLER PICTURE 9(2).                                         0268BP01\n001310 03  NUM-6-REC-3     PICTURE S9(18)                 COMPUTATIONAL.0270BP01\n001320 02  FORMAT-2-REC-3 REDEFINES FORMAT-1-REC-3.                     0272BP01\n001330 03  NUM-7-REC-3   PICTURE 9(15) DISPLAY.                         0274BP01\n001340 03  NUM-8-REC-3  REDEFINES NUM-7-REC-3.                          0276BP01\n001350 04  NUM-9-REC-3   PICTURE 9(7) DISPLAY.                          0278BP01\n001360 04  NUM-10-REC-3   PICTURE 9(8)  DISPLAY.                        0280BP01\n001370 04  NUM-11-REC-3 REDEFINES NUM-10-REC-3.                         0282BP01\n001380 05  NUM-12-REC-3   PICTURE 9(4) DISPLAY.                         0284BP01\n001390 05  NUM-13-REC-3   PICTURE 9(4) DISPLAY.                         0286BP01\n001400 03  FILLER PICTURE 9(1).                                         0288BP01\n001410 03  NUM-14-REC-3    PICTURE S9(18)                 COMPUTATIONAL.0290BP01\n001420 02  FORMAT-3-REC-3   REDEFINES FORMAT-2-REC-3.                   0292BP01\n001430 03  NUM-15-REC-3 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0294BP01\n001440 01  REC-5.                                                       0296BP01\n001450 03  NUM-6-REC-5     PICTURE S9(18)                 COMPUTATIONAL.0298BP01\n001460 03  NUM-5-REC-5   PICTURE 999 COMPUTATIONAL-3.                   0300BP01\n001470 03  FILLER PICTURE 9(2).                                         0302BP01\n001480 03  NUM-4-REC-5     PICTURE S9(9)                  COMPUTATIONAL.0304BP01\n001490 03  NUM-3-REC-5 PICTURE 9 DISPLAY.                               0306BP01\n001500 03  FILLER PICTURE 9(1).                                         0308BP01\n001510 03  NUM-2-REC-5     PICTURE S9(4)                  COMPUTATIONAL.0310BP01\n001520 03  NUM-1-REC-5 PICTURE 9(4) DISPLAY.                            0312BP01\n001530 FD  HETRO-WRITE-FILE1-EQUAL                                      0314BP01\n001540     RECORD CONTAINS 24 CHARACTERS                                0316BP01\n001550     RECORDING MODE IS F                                          0318BP01\n001560     LABEL RECORDS ARE OMITTED                                    0320BP01\n001570     DATA RECORDS ARE REC-4 REC-6.                                0322BP01\n001580 01  REC-4.                                                       0324BP01\n001590 02  FORMAT-1-REC-4.                                              0326BP01\n001600 03  NUM-1-REC-4 PICTURE 9 DISPLAY.                               0328BP01\n001610 03  NUM-2-REC-4     PICTURE S9(4)                  COMPUTATIONAL.0330BP01\n001620 03  NUM-3-REC-4 PICTURE 9 DISPLAY.                               0332BP01\n001630 03  NUM-4-REC-4     PICTURE S9(9)                  COMPUTATIONAL.0334BP01\n001640 03  NUM-5-REC-4   PICTURE 999 COMPUTATIONAL-3.                   0336BP01\n001650 03  NUM-6-REC-4     PICTURE S9(18)                 COMPUTATIONAL.0338BP01\n001660 02  FORMAT-2-REC-4 REDEFINES FORMAT-1-REC-4.                     0340BP01\n001670 03  NUM-7-REC-4   PICTURE 9(15) DISPLAY.                         0342BP01\n001680 03  NUM-8-REC-4  REDEFINES NUM-7-REC-4.                          0344BP01\n001690 04  NUM-9-REC-4   PICTURE 9(7) DISPLAY.                          0346BP01\n001700 04  NUM-10-REC-4   PICTURE 9(8)  DISPLAY.                        0348BP01\n001710 04  NUM-11-REC-4 REDEFINES NUM-10-REC-4.                         0350BP01\n001720 05  NUM-12-REC-4   PICTURE 9(4) DISPLAY.                         0352BP01\n001730 05  NUM-13-REC-4   PICTURE 9(4) DISPLAY.                         0354BP01\n001740 03  NUM-14-REC-4    PICTURE S9(18)                 COMPUTATIONAL.0356BP01\n001750 02  FORMAT-3-REC-4   REDEFINES FORMAT-2-REC-4.                   0358BP01\n001760 03  NUM-15-REC-4 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0360BP01\n001770 01  REC-6.                                                       0362BP01\n001780 03  NUM-6-REC-6     PICTURE S9(18)                 COMPUTATIONAL.0364BP01\n001790 03  NUM-5-REC-6   PICTURE 999 COMPUTATIONAL-3.                   0366BP01\n001800 03  NUM-4-REC-6     PICTURE S9(9)                  COMPUTATIONAL.0368BP01\n001810 03  NUM-3-REC-6 PICTURE 9 DISPLAY.                               0370BP01\n001820 03  NUM-2-REC-6     PICTURE S9(4)                  COMPUTATIONAL.0372BP01\n001830 03  NUM-1-REC-6 PICTURE 9(4) DISPLAY.                            0374BP01\n001840 FD  HETRO-READ-FILE1-DIFF                                        0376BP01\n001850     RECORD CONTAINS 21 TO 24 CHARACTERS                          0378BP01\n001860     LABEL RECORDS ARE OMITTED                                    0380BP01\n001870     DATA RECORDS ARE REC-7 REC-9.                                0382BP01\n001880 01  REC-7.                                                       0384BP01\n001890 02  FORMAT-1-REC-7.                                              0386BP01\n001900 03  NUM-1-REC-7 PICTURE 9 DISPLAY.                               0388BP01\n001910 03  FILLER PICTURE 9(1).                                         0390BP01\n001920 03  NUM-2-REC-7     PICTURE S9(4)                  COMPUTATIONAL.0392BP01\n001930 03  NUM-3-REC-7 PICTURE 9 DISPLAY.                               0394BP01\n001940 03  FILLER PICTURE 9(3).                                         0396BP01\n001950 03  NUM-4-REC-7     PICTURE S9(9)                  COMPUTATIONAL.0398BP01\n001960 03  NUM-5-REC-7   PICTURE 999 COMPUTATIONAL-3.                   0400BP01\n001970 03  FILLER PICTURE 9(2).                                         0402BP01\n001980 03  NUM-6-REC-7     PICTURE S9(18)                 COMPUTATIONAL.0404BP01\n001990 02  FORMAT-2-REC-7 REDEFINES FORMAT-1-REC-7.                     0406BP01\n002000 03  NUM-7-REC-7 PICTURE 9(15) DISPLAY.                           0408BP01\n002010 03  NUM-8-REC-7  REDEFINES NUM-7-REC-7.                          0410BP01\n002020 04  NUM-9-REC-7   PICTURE 9(7) DISPLAY.                          0412BP01\n002030 04  NUM-10-REC-7   PICTURE 9(8)  DISPLAY.                        0414BP01\n002040 04  NUM-11-REC-7 REDEFINES NUM-10-REC-7.                         0416BP01\n002050 05  NUM-12-REC-7   PICTURE 9(4) DISPLAY.                         0418BP01\n002060 05  NUM-13-REC-7   PICTURE 9(4) DISPLAY.                         0420BP01\n002070 03  FILLER PICTURE 9(1).                                         0422BP01\n002080 03  NUM-14-REC-7    PICTURE S9(18)                 COMPUTATIONAL.0424BP01\n002090 02  FORMAT-3-REC-7   REDEFINES FORMAT-2-REC-7.                   0426BP01\n002100 03  NUM-15-REC-7 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0428BP01\n002110 01  REC-9.                                                       0430BP01\n002120 03  NUM-6-REC-9     PICTURE S9(18)                 COMPUTATIONAL.0432BP01\n002130 03  NUM-5-REC-9   PICTURE 999 COMPUTATIONAL-3.                   0434BP01\n002140 03  FILLER PICTURE 9(2).                                         0436BP01\n002150 03  NUM-4-REC-9     PICTURE S9(9)                  COMPUTATIONAL.0438BP01\n002160 03  NUM-3-REC-9 PICTURE 9 DISPLAY.                               0440BP01\n002170 03  FILLER PICTURE 9(1).                                         0442BP01\n002180 03  NUM-2-REC-9     PICTURE S9(4)                  COMPUTATIONAL.0444BP01\n002190 03  NUM-1-REC-9 PICTURE 9 DISPLAY.                               0446BP01\n002200 FD  HETRO-WRITE-FILE1-DIFF                                       0448BP01\n002210     RECORD CONTAINS 21 TO 24 CHARACTERS                          0450BP01\n002220     LABEL RECORDS ARE OMITTED                                    0452BP01\n002230     DATA RECORDS ARE REC-8 REC-10.                               0454BP01\n002240 01  REC-8.                                                       0456BP01\n002250 02  FORMAT-1-REC-8.                                              0458BP01\n002260 03  NUM-1-REC-8 PICTURE 9 DISPLAY.                               0460BP01\n002270 03  NUM-2-REC-8     PICTURE S9(4)                  COMPUTATIONAL.0462BP01\n002280 03  NUM-3-REC-8 PICTURE 9 DISPLAY.                               0464BP01\n002290 03  NUM-4-REC-8     PICTURE S9(9)                  COMPUTATIONAL.0466BP01\n002300 03  NUM-5-REC-8   PICTURE 999 COMPUTATIONAL-3.                   0468BP01\n002310 03  NUM-6-REC-8     PICTURE S9(18)                 COMPUTATIONAL.0470BP01\n002320 02  FORMAT-2-REC-8 REDEFINES FORMAT-1-REC-8.                     0472BP01\n002330 03  NUM-7-REC-8   PICTURE 9(15) DISPLAY.                         0474BP01\n002340 03  NUM-8-REC-8  REDEFINES NUM-7-REC-8.                          0476BP01\n002350 04  NUM-9-REC-8   PICTURE 9(7) DISPLAY.                          0478BP01\n002360 04  NUM-10-REC-8   PICTURE 9(8)  DISPLAY.                        0480BP01\n002370 04  NUM-11-REC-8 REDEFINES NUM-10-REC-8.                         0482BP01\n002380 05  NUM-12-REC-8   PICTURE 9(4) DISPLAY.                         0484BP01\n002390 05  NUM-13-REC-8   PICTURE 9(4) DISPLAY.                         0486BP01\n002400 03  NUM-14-REC-8    PICTURE S9(18)                 COMPUTATIONAL.0488BP01\n002410 02  FORMAT-3-REC-8   REDEFINES FORMAT-2-REC-8.                   0490BP01\n002420 03  NUM-15-REC-8 OCCURS 24 TIMES PICTURE   9 DISPLAY.            0492BP01\n002430 01  REC-10.                                                      0494BP01\n002440 03  NUM-6-REC-10    PICTURE S9(18)                 COMPUTATIONAL.0496BP01\n002450 03  NUM-5-REC-10  PICTURE 999 COMPUTATIONAL-3.                   0498BP01\n002460 03  NUM-4-REC-10    PICTURE S9(9)                  COMPUTATIONAL.0500BP01\n002470 03  NUM-3-REC-10 PICTURE 9 DISPLAY.                              0502BP01\n002480 03  NUM-2-REC-10    PICTURE S9(4)                  COMPUTATIONAL.0504BP01\n002490 03  NUM-1-REC-10 PICTURE 9 DISPLAY.                              0506BP01\n002500 WORKING-STORAGE SECTION.                                         0508BP01\n       77 MESSAGE-1 PICTURE X(50) VALUE                                 0510\n              'INFORMATION AS EXISTS IN BUFFERS / WORKING-STORAGE'.     0512\n       77 MESSAGE-2 PICTURE X(41) VALUE                                 0514\n              'RESULTS ARE FOLLOWED BY RESULTS SHOULD BE'.              0516\n       77 MESSAGE-3 PICTURE X(48) VALUE                                 0518\n              ' 0                 1                   2        '.       0520\n       77 MESSAGE-4 PICTURE X(48) VALUE                                 0522\n              ' 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4'.       0524\n002510 77  SUB-1 PICTURE 99 VALUE 00 DISPLAY.                           0526BP01\n002520 77  SUB-2 PICTURE 99 VALUE 00 DISPLAY.                           0528BP01\n002530 77  ERROR1   PICTURE X(11) VALUE '********** ' DISPLAY.          0530BP01\n       01 PARAGRAPH-NOS.                                                0532\n        02 NAME-1 PICTURE X(10) VALUE 'PARAGRAPH-'.                     0534\n        02 PARAGRAPH-NO PICTURE 99 VALUE ZERO.                          0536\n002540 01  PRIMARY-DATA.                                                0538BP01\n002550 02  NUMBER-1 PICTURE 9 VALUE 9 DISPLAY.                          0540BP01\n002560 02  FILLER   PICTURE 9 VALUE 0 DISPLAY.                          0542BP01\n002570 02  NUMBER-2        PICTURE S9(4) VALUE 9999       COMPUTATIONAL.0544BP01\n002580 02  NUMBER-3 PICTURE 9 VALUE 9 DISPLAY.                          0546BP01\n002590 02  FILLER   PICTURE 999 VALUE 000 DISPLAY.                      0548BP01\n002600 02  NUMBER-4        PICTURE S9(9) VALUE 999999999  COMPUTATIONAL.0550BP01\n002610 02  NUMBER-5 PICTURE 999  VALUE 999 COMPUTATIONAL-3.             0552BP01\n002620 02  FILLER   PICTURE 99 VALUE 00 DISPLAY.                        0554BP01\n002630 02  NUMBER-6        PICTURE S9(18) VALUE 999999999999999999      0556BP01\n002640         COMPUTATIONAL.                                           0558BP01\n002650 01  PRIMARY-DATA-1.                                              0560BP01\n002660 02  NUMBER-7 PICTURE 9(15) VALUE 888888888888888 DISPLAY.        0562BP01\n002670 02  FILLER   PICTURE 9 VALUE 0 DISPLAY.                          0564BP01\n002680 02  NUMBER-14       PICTURE S9(18) VALUE 888888888888888888      0566BP01\n002690         COMPUTATIONAL.                                           0568BP01\n002700 01  PRIMARY-DATA-2.                                              0570BP01\n002710 02  NUMBER-9  PICTURE 9(7)  VALUE 7777777  DISPLAY.              0572BP01\n002720 02  NUMBER-10 PICTURE 9(8)  VALUE 77777777 DISPLAY.              0574BP01\n002730 02  FILLER    PICTURE 9     VALUE 0        DISPLAY.              0576BP01\n002740 02  NUMBER-14       PICTURE S9(18) VALUE 777777777777777777      0578BP01\n002750         COMPUTATIONAL.                                           0580BP01\n002760 01  PRIMARY-DATA-3.                                              0582BP01\n002770 02  NUMBER-9  PICTURE 9(7)  VALUE 6666666  DISPLAY.              0584BP01\n002780 02  NUMBER-12 PICTURE 9(4)  VALUE 6666     DISPLAY.              0586BP01\n002790 02  NUMBER-13 PICTURE 9(4)  VALUE 6666     DISPLAY.              0588BP01\n002800 02  FILLER    PICTURE 9     VALUE 0        DISPLAY.              0590BP01\n002810 02  NUMBER-14       PICTURE S9(18) VALUE 666666666666666666      0592BP01\n002820         COMPUTATIONAL.                                           0594BP01\n002830 01  PRIMARY-DATA-4.                                              0596BP01\n002840 02  NUMBER-06       PICTURE S9(18) VALUE 999999999999999999      0598BP01\n002850         COMPUTATIONAL.                                           0600BP01\n002860 02  NUMBER-05 PICTURE 999   VALUE 999 COMPUTATIONAL-3.           0602BP01\n002870 02  FILLER    PICTURE 99 VALUE 00 DISPLAY.                       0604BP01\n002880 02  NUMBER-04       PICTURE S9(9)  VALUE 999999999 COMPUTATIONAL.0606BP01\n002890 02  NUMBER-03 PICTURE 9 VALUE 9  DISPLAY.                        0608BP01\n002900 02  FILLER    PICTURE 9 VALUE 0  DISPLAY.                        0610BP01\n002910 02  NUMBER-02       PICTURE S9(4)  VALUE 9999      COMPUTATIONAL.0612BP01\n002920 02  NUMBER-01 PICTURE 9999 VALUE 9999 DISPLAY.                   0614BP01\n002930 01  PRIMARY-DATA-5.                                              0616BP01\n002940 02  NUMBER-06       PICTURE S9(18) VALUE 888888888888888888      0618BP01\n002950         COMPUTATIONAL.                                           0620BP01\n002960 02  NUMBER-05 PICTURE 999 VALUE 888 COMPUTATIONAL-3.             0622BP01\n002970 02      FILLER    PICTURE 99 VALUE 00 DISPLAY.                   0624BP01\n002980 02  NUMBER-04       PICTURE S9(9)  VALUE 888888888 COMPUTATIONAL.0626BP01\n002990 02  NUMBER-03 PICTURE 9 VALUE 8 DISPLAY.                         0628BP01\n003000 02  FILLER    PICTURE 9 VALUE 0 DISPLAY.                         0630BP01\n003010 02  NUMBER-02       PICTURE S9(4)  VALUE 8888      COMPUTATIONAL.0632BP01\n003020 02  NUMBER-01 PICTURE 9 VALUE 8 DISPLAY.                         0634BP01\n003030 01  TEST-AREAS.                                                  0636BP01\n003040 02  TEST-AREA-RD.                                                0638BP01\n003050 03  TRD OCCURS 24 TIMES PICTURE X.                               0640BP01\n003060 02  TEST-AREA-WT.                                                0642BP01\n003070 03  TWT OCCURS 48 TIMES PICTURE X.                               0644BP01\n003080 PROCEDURE DIVISION.                                              0646BP01\n003090 DISPLAY-HEADER.                                                  0648BP01\n003100     DISPLAY '          GROUP B LEVEL P TEST CASE 1'.             0650BP01\n003110     DISPLAY ' '.                                                 0652BP01\n003120 01-FDSLACKTEST.                                                  0654BP01\n003130     PERFORM 31-OPEN-OUT-FILES.                                   0656BP01\n       PARAGRAPH-01.                                                    0658\n003140     PERFORM 50-SETUP-FORMAT-1-REC-2-4-8 THRU 51-EXIT.            0660BP01\n           IF FORMAT-1-REC-2 NOT = PRIMARY-DATA   PERFORM 62-MESSAGE    0662\n           MOVE FORMAT-1-REC-2 TO TEST-AREA-RD PERFORM                  0664\n           27-PRINT-ROUTINE THRU 28-EXIT MOVE PRIMARY-DATA    TO        0666\n           TEST-AREA-RD PERFORM 27-PRINT-ROUTINE THRU 28-EXIT           0668\n           ELSE NEXT SENTENCE.                                          0670\n       PARAGRAPH-02.                                                    0672\n003170     PERFORM 52-SETUP-FORMAT-2-RD THRU 53-EXIT.                   0674BP01\n           IF FORMAT-2-REC-2 NOT = PRIMARY-DATA-1 PERFORM 62-MESSAGE    0676\n           MOVE FORMAT-2-REC-2 TO TEST-AREA-RD PERFORM                  0678\n           27-PRINT-ROUTINE THRU 28-EXIT MOVE PRIMARY-DATA-1  TO        0680\n           TEST-AREA-RD PERFORM 27-PRINT-ROUTINE THRU 28-EXIT           0682\n           ELSE NEXT SENTENCE.                                          0684\n       PARAGRAPH-03.                                                    0686\n           PERFORM 54-SETUP-FORMAT-2-RD2 THRU 55-EXIT.                  0688\n           IF FORMAT-2-REC-2 NOT = PRIMARY-DATA-2 PERFORM 62-MESSAGE    0690\n           MOVE FORMAT-2-REC-2 TO TEST-AREA-RD PERFORM                  0692\n           27-PRINT-ROUTINE THRU 28-EXIT MOVE PRIMARY-DATA-2  TO        0694\n           TEST-AREA-RD PERFORM 27-PRINT-ROUTINE THRU 28-EXIT           0696\n           ELSE NEXT SENTENCE.                                          0698\n       PARAGRAPH-04.                                                    0700\n003230     PERFORM 56-SETUP-FORMAT-3-RD3 THRU 57-EXIT.                  0702BP01\n           IF FORMAT-2-REC-2 NOT = PRIMARY-DATA-3 PERFORM 62-MESSAGE    0704\n           MOVE FORMAT-2-REC-2 TO TEST-AREA-RD PERFORM                  0706\n           27-PRINT-ROUTINE THRU 28-EXIT MOVE PRIMARY-DATA-3  TO        0708\n           TEST-AREA-RD PERFORM 27-PRINT-ROUTINE THRU 28-EXIT           0710\n           ELSE NEXT SENTENCE.                                          0712\n003260     PERFORM 33-CLOSE-OUT-FILES.                                  0714BP01\n003270 02-FORMAT-1-REC-1-2-CHK.                                         0716BP01\n003280     OPEN OUTPUT HOMO-WRITE-FILE1-FIXED.                          0718BP01\n003290     WRITE REC-2 FROM PRIMARY-DATA.                               0720BP01\n003300     CLOSE HOMO-WRITE-FILE1-FIXED.                                0722BP01\n003310     OPEN INPUT HOMO-READ-FILE1-FIXED.                            0724BP01\n003320     READ HOMO-READ-FILE1-FIXED AT END GO TO 11-EARLY-END-FILE.   0726BP01\n003340     IF FORMAT-1-REC-1 EQUAL TO PRIMARY-DATA NEXT SENTENCE ELSE   0728BP01\n           PERFORM 19-HOMO-FD-ERROR.                                    0730\n003330     CLOSE HOMO-READ-FILE1-FIXED.                                 0732BP01\n003360 03-FORMAT-2-RD-CHK.                                              0734BP01\n003370     OPEN OUTPUT HOMO-WRITE-FILE1-FIXED.                          0736BP01\n003380     WRITE REC-2 FROM PRIMARY-DATA-1.                             0738BP01\n003390     CLOSE HOMO-WRITE-FILE1-FIXED.                                0740BP01\n003400     OPEN INPUT HOMO-READ-FILE1-FIXED.                            0742BP01\n003410     READ HOMO-READ-FILE1-FIXED AT END GO TO 11-EARLY-END-FILE.   0744BP01\n003430     IF FORMAT-2-REC-1 EQUAL TO PRIMARY-DATA-1 NEXT SENTENCE ELSE 0746BP01\n           PERFORM 20-HOMO-FD-ERROR.                                    0748\n003420     CLOSE HOMO-READ-FILE1-FIXED.                                 0750BP01\n003450 04-FORMAT-2-RD2-CHK.                                             0752BP01\n003460     OPEN OUTPUT HOMO-WRITE-FILE1-FIXED.                          0754BP01\n003470     WRITE REC-2 FROM PRIMARY-DATA-2.                             0756BP01\n003480     CLOSE HOMO-WRITE-FILE1-FIXED.                                0758BP01\n003490     OPEN INPUT  HOMO-READ-FILE1-FIXED.                           0760BP01\n003500     READ HOMO-READ-FILE1-FIXED AT END GO TO 11-EARLY-END-FILE.   0762BP01\n003520     IF FORMAT-2-REC-1 EQUAL TO PRIMARY-DATA-2 NEXT SENTENCE ELSE 0764BP01\n           PERFORM 21-HOMO-FD-ERROR.                                    0766\n003510     CLOSE HOMO-READ-FILE1-FIXED.                                 0768BP01\n003540 05-FORMAT-2-RD3-CHK.                                             0770BP01\n003550     OPEN OUTPUT HOMO-WRITE-FILE1-FIXED.                          0772BP01\n003560     WRITE REC-2 FROM PRIMARY-DATA-3.                             0774BP01\n003570     CLOSE HOMO-WRITE-FILE1-FIXED.                                0776BP01\n003580     OPEN  INPUT HOMO-READ-FILE1-FIXED.                           0778BP01\n003590     READ  HOMO-READ-FILE1-FIXED AT END GO TO 11-EARLY-END-FILE.  0780BP01\n003610     IF FORMAT-2-REC-1 EQUAL TO PRIMARY-DATA-3 NEXT SENTENCE ELSE 0782BP01\n           PERFORM 22-HOMO-FD-ERROR.                                    0784\n003600     CLOSE HOMO-READ-FILE1-FIXED.                                 0786BP01\n003630 06-RD-IMP-EQU-REC-CHK.                                           0788BP01\n003640     PERFORM 31-OPEN-OUT-FILES.                                   0790BP01\n003650     WRITE REC-4 FROM PRIMARY-DATA.                               0792BP01\n003660     WRITE REC-4 FROM PRIMARY-DATA-1.                             0794BP01\n003670     WRITE REC-4 FROM PRIMARY-DATA-2.                             0796BP01\n003680     WRITE REC-4 FROM PRIMARY-DATA-3.                             0798BP01\n003690      WRITE REC-6 FROM PRIMARY-DATA-4.                            0800BP01\n003700     PERFORM 33-CLOSE-OUT-FILES.                                  0802BP01\n003710     PERFORM 31-OPEN-IN-FILES.                                    0804BP01\n003720     READ HETRO-READ-FILE1-EQUAL AT END GO TO 12-EARLY-END-FILE.  0806BP01\n           IF FORMAT-1-REC-3 NOT = PRIMARY-DATA                         0808\n004950     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED'            0810\n           PERFORM 63-MESSAGE                                           0812\n           MOVE FORMAT-1-REC-3 TO TEST-AREA-RD PERFORM 27-PRINT-ROUTINE 0814\n           THRU 28-EXIT MOVE PRIMARY-DATA   TO TEST-AREA-RD PERFORM     0816\n           27-PRINT-ROUTINE THRU 28-EXIT ELSE NEXT SENTENCE.            0818\n003750     READ HETRO-READ-FILE1-EQUAL AT END GO TO 12-EARLY-END-FILE.  0820BP01\n           IF FORMAT-2-REC-3 NOT = PRIMARY-DATA-1                       0822\n004950     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED'            0824\n           PERFORM 63-MESSAGE                                           0826\n           MOVE FORMAT-2-REC-3 TO TEST-AREA-RD PERFORM 27-PRINT-ROUTINE 0828\n           THRU 28-EXIT MOVE PRIMARY-DATA-1 TO TEST-AREA-RD PERFORM     0830\n           27-PRINT-ROUTINE THRU 28-EXIT ELSE NEXT SENTENCE.            0832\n003780     READ HETRO-READ-FILE1-EQUAL AT END GO TO 12-EARLY-END-FILE.  0834BP01\n           IF FORMAT-2-REC-3 NOT = PRIMARY-DATA-2                       0836\n004950     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED'            0838\n           PERFORM 63-MESSAGE                                           0840\n           MOVE FORMAT-2-REC-3 TO TEST-AREA-RD PERFORM 27-PRINT-ROUTINE 0842\n           THRU 28-EXIT MOVE PRIMARY-DATA-2 TO TEST-AREA-RD PERFORM     0844\n           27-PRINT-ROUTINE THRU 28-EXIT ELSE NEXT SENTENCE.            0846\n003810     READ HETRO-READ-FILE1-EQUAL AT END GO TO 12-EARLY-END-FILE.  0848BP01\n           IF FORMAT-2-REC-3 NOT = PRIMARY-DATA-3                       0850\n004950     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED'            0852\n           PERFORM 63-MESSAGE                                           0854\n           MOVE FORMAT-2-REC-3 TO TEST-AREA-RD PERFORM 27-PRINT-ROUTINE 0856\n           THRU 28-EXIT MOVE PRIMARY-DATA-3 TO TEST-AREA-RD PERFORM     0858\n           27-PRINT-ROUTINE THRU 28-EXIT ELSE NEXT SENTENCE.            0860\n003840     READ HETRO-READ-FILE1-EQUAL AT END GO TO 12-EARLY-END-FILE.  0862BP01\n           IF REC-5          NOT = PRIMARY-DATA-4                       0864\n004950     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED'            0866\n           PERFORM 63-MESSAGE                                           0868\n           MOVE REC-5          TO TEST-AREA-RD PERFORM 27-PRINT-ROUTINE 0870\n           THRU 28-EXIT MOVE PRIMARY-DATA-4 TO TEST-AREA-RD PERFORM     0872\n           27-PRINT-ROUTINE THRU 28-EXIT ELSE NEXT SENTENCE.            0874\n003870     READ HETRO-READ-FILE1-EQUAL AT END GO TO 07-CLOSE-HETRO.     0876BP01\n003880     GO TO 13-NO-END-FILE.                                        0878BP01\n003890 07-CLOSE-HETRO.                                                  0880BP01\n003900     PERFORM 33-CLOSE-IN-FILES.                                   0882BP01\n003910 08-RD-IMP-DIFF-REC-CHK.                                          0884BP01\n003920     PERFORM 31-OPEN-OUT-FILES.                                   0886BP01\n003930     PERFORM 50-SETUP-FORMAT-1-REC-2-4-8 THRU 51-EXIT.            0888BP01\n003940     WRITE REC-8.                                                 0890BP01\n003950     WRITE REC-8 FROM PRIMARY-DATA-1.                             0892BP01\n003960     WRITE REC-8 FROM PRIMARY-DATA-2.                             0894BP01\n003970     PERFORM 56-SETUP-FORMAT-3-RD3.                               0896BP01\n003980     WRITE REC-8.                                                 0898BP01\n003990     WRITE REC-10 FROM PRIMARY-DATA-5.                            0900BP01\n004000     PERFORM 60-SETUP-REC-10-DIFF.                                0902BP01\n004010     WRITE REC-10.                                                0904BP01\n004020     PERFORM 33-CLOSE-OUT-FILES.                                  0906BP01\n004030     PERFORM 31-OPEN-IN-FILES.                                    0908BP01\n004040     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0910BP01\n004050     IF FORMAT-1-REC-7 EQUAL TO PRIMARY-DATA NEXT SENTENCE ELSE   0912BP01\n           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0914\n           PERFORM 63-MESSAGE                                           0916\n           MOVE FORMAT-1-REC-7 TO TEST-AREA-RD                          0918\n           PERFORM 24-HETRO-DIFF-ERROR                                  0920\n           MOVE PRIMARY-DATA   TO TEST-AREA-RD                          0922\n           PERFORM 24-HETRO-DIFF-ERROR.                                 0924\n004070     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0926BP01\n004080     IF FORMAT-2-REC-7 EQUAL TO PRIMARY-DATA-1 NEXT SENTENCE ELSE 0928BP01\n           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0930\n           PERFORM 63-MESSAGE                                           0932\n           MOVE FORMAT-2-REC-7 TO TEST-AREA-RD                          0934\n           PERFORM 24-HETRO-DIFF-ERROR                                  0936\n           MOVE PRIMARY-DATA-1 TO TEST-AREA-RD                          0938\n           PERFORM 24-HETRO-DIFF-ERROR.                                 0940\n004100     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0942BP01\n004110     IF FORMAT-2-REC-7 EQUAL TO PRIMARY-DATA-2 NEXT SENTENCE ELSE 0944BP01\n           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0946\n           PERFORM 63-MESSAGE                                           0948\n           MOVE FORMAT-2-REC-7 TO TEST-AREA-RD                          0950\n           PERFORM 24-HETRO-DIFF-ERROR                                  0952\n           MOVE PRIMARY-DATA-2 TO TEST-AREA-RD                          0954\n           PERFORM 24-HETRO-DIFF-ERROR.                                 0956\n004130     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0958BP01\n004140     IF FORMAT-2-REC-7 EQUAL TO PRIMARY-DATA-3 NEXT SENTENCE ELSE 0960BP01\n           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0962\n           PERFORM 63-MESSAGE                                           0964\n           MOVE FORMAT-2-REC-7 TO TEST-AREA-RD                          0966\n           PERFORM 24-HETRO-DIFF-ERROR                                  0968\n           MOVE PRIMARY-DATA-3 TO TEST-AREA-RD                          0970\n           PERFORM 24-HETRO-DIFF-ERROR.                                 0972\n004160     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0974BP01\n004170     IF REC-9 EQUAL TO PRIMARY-DATA-5 NEXT SENTENCE ELSE          0976BP01\n           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0978\n           PERFORM 63-MESSAGE                                           0980\n           MOVE REC-9          TO TEST-AREA-RD                          0982\n           PERFORM 24-HETRO-DIFF-ERROR                                  0984\n           MOVE PRIMARY-DATA-5 TO TEST-AREA-RD                          0986\n           PERFORM 24-HETRO-DIFF-ERROR.                                 0988\n004190     READ HETRO-READ-FILE1-DIFF AT END GO TO 15-EARLY-END-FILE.   0990BP01\n004200     IF REC-9 EQUAL TO PRIMARY-DATA-5 NEXT SENTENCE ELSE          0992BP01\n           DISPLAY ERROR1 '08-RD-IMP-DIFF-REC-CHK FAILED'               0994\n           PERFORM 63-MESSAGE                                           0996\n           MOVE REC-9          TO TEST-AREA-RD                          0998\n           PERFORM 24-HETRO-DIFF-ERROR                                  1000\n           MOVE PRIMARY-DATA-5 TO TEST-AREA-RD                          1002\n           PERFORM 24-HETRO-DIFF-ERROR.                                 1004\n004220     READ HETRO-READ-FILE1-DIFF AT END GO TO 09-CLOSE-HETRO.      1006BP01\n004230     GO TO 16-NO-END-FILE.                                        1008BP01\n004240 09-CLOSE-HETRO.                                                  1010BP01\n004250     PERFORM 33-CLOSE-IN-FILES.                                   1012BP01\n004260 10-END-PROGRAM.                                                  1014BP01\n004270     DISPLAY '          END OF PROGRAM'.                          1016BP01\n004280     STOP RUN.                                                    1018BP01\n004290 11-EARLY-END-FILE.                                               1020BP01\n004300     DISPLAY ERROR1     '02-FORMAT-1-REC-2-CHK FAILED DUE TO EARLY1022BP01\n004310     ' END OF FILE'.                                              1024BP01\n004320     CLOSE HOMO-READ-FILE1-FIXED.                                 1026BP01\n004330     GO TO 10-END-PROGRAM.                                        1028BP01\n004340 12-EARLY-END-FILE.                                               1030BP01\n004350     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED DUE TO EARLY1032BP01\n004360     ' END OF FILE'.                                              1034BP01\n004370     PERFORM 33-CLOSE-IN-FILES.                                   1036BP01\n004380     GO TO 10-END-PROGRAM.                                        1038BP01\n004390 13-NO-END-FILE.                                                  1040BP01\n004400     DISPLAY ERROR1     '06-RD-IMP-EQU-REC-CHK FAILED DUE TO NO EN1042BP01\n004410     'D OF FILE'.                                                 1044BP01\n004420     PERFORM 33-CLOSE-IN-FILES.                                   1046BP01\n004430     GO TO 10-END-PROGRAM.                                        1048BP01\n004440 15-EARLY-END-FILE.                                               1050BP01\n004450     DISPLAY ERROR1     '08-RD-IMP-DIFF-REC-CHK FAILED DUE TO EARL1052BP01\n004460     'Y END OF FILE'.                                             1054BP01\n004470     PERFORM 33-CLOSE-IN-FILES.                                   1056BP01\n004480     GO TO 10-END-PROGRAM.                                        1058BP01\n004490 16-NO-END-FILE.                                                  1060BP01\n004500     DISPLAY ERROR1     '08-RD-IMP-DIFF-REC-CHK FAILED DUE TO NO E1062BP01\n004510     'ND OF FILE'.                                                1064BP01\n004520     PERFORM 33-CLOSE-IN-FILES.                                   1066BP01\n004530     GO TO 10-END-PROGRAM.                                        1068BP01\n004660 19-HOMO-FD-ERROR.                                                1070BP01\n004670     DISPLAY ERROR1     '02-FORMAT-1-REC-1-2-CHK FAILED'.         1072BP01\n           PERFORM 63-MESSAGE.                                          1074\n004680     MOVE FORMAT-1-REC-1 TO TEST-AREA-RD.                         1076BP01\n                               PERFORM 27-PRINT-ROUTINE THRU 28-EXIT.   1078\n           MOVE PRIMARY-DATA   TO TEST-AREA-RD. PERFORM 27-PRINT-ROUTINE1080\n           THRU 28-EXIT.                                                1082\n004710 20-HOMO-FD-ERROR.                                                1084BP01\n004720     DISPLAY ERROR1     '03-FORMAT-2-RD-CHK FAILED'.              1086BP01\n           PERFORM 63-MESSAGE.                                          1088\n004740     MOVE FORMAT-2-REC-1 TO TEST-AREA-RD.                         1090BP01\n                               PERFORM 27-PRINT-ROUTINE THRU 28-EXIT.   1092\n           MOVE PRIMARY-DATA-1 TO TEST-AREA-RD. PERFORM 27-PRINT-ROUTINE1094\n           THRU 28-EXIT.                                                1096\n004760 21-HOMO-FD-ERROR.                                                1098BP01\n004770     DISPLAY ERROR1     '04-FORMAT-2-RD2-CHK FAILED'.             1100BP01\n           PERFORM 63-MESSAGE.                                          1102\n           MOVE FORMAT-2-REC-1 TO TEST-AREA-RD.                         1104\n                               PERFORM 27-PRINT-ROUTINE THRU 28-EXIT.   1106\n           MOVE PRIMARY-DATA-2 TO TEST-AREA-RD. PERFORM 27-PRINT-ROUTINE1108\n           THRU 28-EXIT.                                                1110\n004790 22-HOMO-FD-ERROR.                                                1112BP01\n004800     DISPLAY ERROR1     '05-FORMAT-2-RD3-CHK FAILED'.             1114BP01\n           PERFORM 63-MESSAGE.                                          1116\n           MOVE FORMAT-2-REC-1 TO TEST-AREA-RD.                         1118\n                               PERFORM 27-PRINT-ROUTINE THRU 28-EXIT.   1120\n           MOVE PRIMARY-DATA-3 TO TEST-AREA-RD. PERFORM 27-PRINT-ROUTINE1122\n           THRU 28-EXIT.                                                1124\n005000 24-HETRO-DIFF-ERROR.                                             1126BP01\n005040     PERFORM 27-PRINT-ROUTINE.                                    1128BP01\n005150 27-PRINT-ROUTINE.                                                1130BP01\n005160     MOVE SPACES TO TEST-AREA-WT.                                 1132BP01\n005190     MOVE 1 TO SUB-1.                                             1134BP01\n005200     MOVE 2 TO SUB-2.                                             1136BP01\n005210     PERFORM 29-PRINT-ROUTINE THRU 30-EXIT 24 TIMES.              1138BP01\n005220     DISPLAY TEST-AREA-WT.                                        1140BP01\n005230 28-EXIT.                                                         1142BP01\n005240     EXIT.                                                        1144BP01\n005250 29-PRINT-ROUTINE.                                                1146BP01\n005260     MOVE TRD (SUB-1) TO TWT (SUB-2).                             1148BP01\n005270     ADD 1 SUB-1 GIVING SUB-1.                                    1150BP01\n005280     ADD 2 SUB-2 GIVING SUB-2.                                    1152BP01\n005290 30-EXIT.                                                         1154BP01\n005300     EXIT.                                                        1156BP01\n005310 31-OPEN-OUT-FILES.                                               1158BP01\n005320     OPEN OUTPUT HOMO-WRITE-FILE1-FIXED HETRO-WRITE-FILE1-EQUAL   1160BP01\n005330     HETRO-WRITE-FILE1-DIFF.                                      1162BP01\n005340 31A-EXIT.                                                        1164BP01\n005350     EXIT.                                                        1166BP01\n005360 31-OPEN-IN-FILES.                                                1168BP01\n005370     OPEN INPUT HOMO-READ-FILE1-FIXED HETRO-READ-FILE1-EQUAL      1170BP01\n005380     HETRO-READ-FILE1-DIFF.                                       1172BP01\n005390 32-EXIT.                                                         1174BP01\n005400     EXIT.                                                        1176BP01\n005410 33-CLOSE-OUT-FILES.                                              1178BP01\n005420     CLOSE                                                        1180BP01\n005430     HOMO-WRITE-FILE1-FIXED                                       1182BP01\n005440     HETRO-WRITE-FILE1-EQUAL                                      1184BP01\n005450     HETRO-WRITE-FILE1-DIFF.                                      1186BP01\n005460 33A-EXIT.                                                        1188BP01\n005470     EXIT.                                                        1190BP01\n005480 33-CLOSE-IN-FILES.                                               1192BP01\n005490     CLOSE                                                        1194BP01\n005500     HOMO-READ-FILE1-FIXED                                        1196BP01\n005510     HETRO-READ-FILE1-EQUAL                                       1198BP01\n005520     HETRO-READ-FILE1-DIFF.                                       1200BP01\n005530 34-EXIT.                                                         1202BP01\n005540     EXIT.                                                        1204BP01\n005550 50-SETUP-FORMAT-1-REC-2-4-8.                                     1206BP01\n005560     MOVE ZERO TO REC-2 REC-4 REC-8.                              1208BP01\n005570     MOVE NUMBER-1 TO NUM-1-REC-2 NUM-1-REC-4 NUM-1-REC-8.        1210BP01\n005580     MOVE NUMBER-2 TO NUM-2-REC-2 NUM-2-REC-4 NUM-2-REC-8.        1212BP01\n005590     MOVE NUMBER-3 TO NUM-3-REC-2 NUM-3-REC-4 NUM-3-REC-8.        1214BP01\n005600     MOVE NUMBER-4 TO NUM-4-REC-2 NUM-4-REC-4 NUM-4-REC-8.        1216BP01\n005610     MOVE NUMBER-5 TO NUM-5-REC-2 NUM-5-REC-4 NUM-5-REC-8.        1218BP01\n005620     MOVE NUMBER-6 TO NUM-6-REC-2 NUM-6-REC-4 NUM-6-REC-8.        1220BP01\n005630 51-EXIT.                                                         1222BP01\n005640     EXIT.                                                        1224BP01\n005650 52-SETUP-FORMAT-2-RD.                                            1226BP01\n005660     MOVE ZERO TO REC-2 REC-4 REC-8.                              1228BP01\n005670     MOVE NUMBER-7  TO NUM-7-REC-2 NUM-7-REC-4 NUM-7-REC-8.       1230BP01\n005680     MOVE NUMBER-14 IN PRIMARY-DATA-1 TO NUM-14-REC-2             1232BP01\n005690     NUM-14-REC-4 NUM-14-REC-8.                                   1234BP01\n005700 53-EXIT.                                                         1236BP01\n005710     EXIT.                                                        1238BP01\n005720 54-SETUP-FORMAT-2-RD2.                                           1240BP01\n005730     MOVE ZERO TO REC-2 REC-4 REC-8.                              1242BP01\n005740     MOVE NUMBER-10 TO NUM-10-REC-2 NUM-10-REC-4 NUM-10-REC-8.    1244BP01\n005750     MOVE NUMBER-14 IN PRIMARY-DATA-2 TO                          1246BP01\n005760     NUM-14-REC-2 NUM-14-REC-4 NUM-14-REC-8.                      1248BP01\n005770     MOVE NUMBER-9 IN PRIMARY-DATA-2 TO                           1250BP01\n005780     NUM-9-REC-2 NUM-9-REC-4 NUM-9-REC-8.                         1252BP01\n005790 55-EXIT.                                                         1254BP01\n005800     EXIT.                                                        1256BP01\n005810 56-SETUP-FORMAT-3-RD3.                                           1258BP01\n005820     MOVE ZERO TO REC-2 REC-4 REC-8.                              1260BP01\n005830     MOVE NUMBER-9 IN PRIMARY-DATA-3 TO                           1262BP01\n005840     NUM-9-REC-2 NUM-9-REC-4 NUM-9-REC-8.                         1264BP01\n005850     MOVE NUMBER-12 TO NUM-12-REC-2 NUM-12-REC-4 NUM-12-REC-8.    1266BP01\n           MOVE NUMBER-13 TO NUM-13-REC-2 NUM-13-REC-4 NUM-13-REC-8.    1268\n005880     MOVE NUMBER-14 IN PRIMARY-DATA-3 TO                          1270BP01\n005890     NUM-14-REC-2 NUM-14-REC-4 NUM-14-REC-8.                      1272BP01\n005900 57-EXIT.                                                         1274BP01\n005910     EXIT.                                                        1276BP01\n005920 58-SETUP-REC-6-EQU.                                              1278BP01\n005930     MOVE ZERO TO REC-6.                                          1280BP01\n005940     MOVE NUMBER-06 IN PRIMARY-DATA-4 TO NUM-6-REC-6.             1282BP01\n005950     MOVE NUMBER-05 IN PRIMARY-DATA-4 TO NUM-5-REC-6.             1284BP01\n005960     MOVE NUMBER-04 IN PRIMARY-DATA-4 TO NUM-4-REC-6.             1286BP01\n005970     MOVE NUMBER-03 IN PRIMARY-DATA-4 TO NUM-3-REC-6.             1288BP01\n005980     MOVE NUMBER-02 IN PRIMARY-DATA-4 TO NUM-2-REC-6.             1290BP01\n005990     MOVE NUMBER-01 IN PRIMARY-DATA-4 TO NUM-1-REC-6.             1292BP01\n006000 59-EXIT.                                                         1294BP01\n006010     EXIT.                                                        1296BP01\n006020 60-SETUP-REC-10-DIFF.                                            1298BP01\n006030     MOVE ZERO TO REC-10.                                         1300BP01\n006040     MOVE NUMBER-06 IN PRIMARY-DATA-5 TO NUM-6-REC-10.            1302BP01\n006050     MOVE NUMBER-05 IN PRIMARY-DATA-5 TO NUM-5-REC-10.            1304BP01\n006060     MOVE NUMBER-04 IN PRIMARY-DATA-5 TO NUM-4-REC-10.            1306BP01\n006070     MOVE NUMBER-03 IN PRIMARY-DATA-5 TO NUM-3-REC-10.            1308BP01\n006080     MOVE NUMBER-02 IN PRIMARY-DATA-5 TO NUM-2-REC-10.            1310BP01\n006090     MOVE NUMBER-01 IN PRIMARY-DATA-5 TO NUM-1-REC-10.            1312BP01\n006100 61-EXIT.                                                         1314BP01\n006110     EXIT.                                                        1316BP01\n       62-MESSAGE.                                                      1318\n           ADD 1 TO PARAGRAPH-NO. DISPLAY ERROR1 '01-FDSLACKTEST FAILED'1320\n           'IN' PARAGRAPH-NOS. PERFORM 63-MESSAGE.                      1322\n       63-MESSAGE. DISPLAY MESSAGE-1. DISPLAY MESSAGE-2. DISPLAY        1324\n           ' '. DISPLAY MESSAGE-3. DISPLAY MESSAGE-4.                   1326\n/*                                                                      1328\n//GO.SYSOUT DD SYSOUT=A,DCB=(,BLKSIZE=120,LRECL=120)                    1330\n//GO.SYS004    DD  UNIT=183,LABEL=(,NL),VOLUME=SER=BBBBBB               1332\n//GO.SYS005    DD  UNIT=182,LABEL=(,NL),VOLUME=SER=AAAAAA               1334\n//GO.SYS006    DD  UNIT=282,LABEL=(,NL),VOLUME=SER=CCCCCC               1336\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEUESP": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00v\\x19/\\x00v\\x19/\\t'\\x00\\xbd\\x00\\xbd\\x00\\x00\\xd4\\xe5\\xe3\\xe2\\xc1\\xd4\\xd7@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1976-07-10T00:00:00", "modifydate": "1976-07-10T09:27:00", "lines": 189, "newlines": 189, "modlines": 0, "user": "MVTSAMP"}, "text": "EXAM     TITLE 'SAMPLE PROGRAM'\n         PRINT DATA\n*\n*        THIS IS THE MACRO DEFINITION\n*\n         MACRO\n         MOVE  &TO,&FROM\n.*\n.*       DEFINE SETC SYMBOL\n.*\n         LCLC  &TYPE\n.*\n.*       CHECK NUMBER OF OPERANDS\n.*\n         AIF   (N'&SYSLIST NE 2).ERROR1\n.*\n.*       CHECK TYPE ATTRIBUTES OF OPERANDS\n.*\n         AIF   (T'&TO NE T'&FROM).ERROR2\n         AIF   (T'&TO EQ 'C' OR T'&TO EQ 'G' OR T'&TO EQ 'K').TYPECGK\n         AIF   (T'&TO EQ 'D' OR T'&TO EQ 'E' OR T'&TO EQ 'H').TYPEDEH\n         AIF   (T'&TO EQ 'F').MOVE\n         AGO   .ERROR3\n.TYPEDEH ANOP\n.*\n.*       ASSIGN TYPE ATTRIBUTE TO SETC SYMBOL\n.*\n&TYPE    SETC  T'&TO\n.MOVE    ANOP\n*        NEXT TWO STATEMENTS GENERATED FOR MOVE MACRO\n         L&TYPE   2,&FROM\n         ST&TYPE  2,&TO\n         MEXIT\n.*\n.*       CHECK LENGTH ATTRIBUTES OF OPERANDS\n.*\n.TYPECGK AIF   (L'&TO NE L'&FROM OR L'&TO GT 256).ERROR4\n*        NEXT STATEMENT GENERATED FOR MOVE MACRO\n         MVC   &TO,&FROM\n         MEXIT\n.*\n.*       ERROR MESSAGES FOR INVALID MOVE MACRO INSTRUCTIONS\n.*\n.ERROR1  MNOTE 1,'IMPROPER NUMBER OF OPERANDS, NO STATEMENTS GENERATED'\n         MEXIT\n.ERROR2  MNOTE 1,'OPERAND TYPES DIFFERENT, NO STATEMENTS GENERATED'\n         MEXIT\n.ERROR3  MNOTE 1,'IMPROPER OPERAND TYPES, NO STATEMENTS GENERATED'\n         MEXIT\n.ERROR4  MNOTE 1,'IMPROPER OPERAND LENGTHS, NO STATEMENTS GENERATED'\n         MEND\n*\n*        MAIN ROUTINE\n*\nSAMPLR   CSECT\nBEGIN    SAVE  (14,12),,*\n         BALR  R12,0         ESTABLISH ADDRESSABILITY OF PROGRAM\n         USING *,R12         AND TELL THE ASSEMBLER WHAT BASE TO USE\n         ST    13,SAVE13\n         LM    R5,R7,=A(LISTAREA,16,LISTEND)  LOAD LIST AREA PARAMETERS\n         USING LIST,R5      REGISTER 5 POINTS TO THE LIST\nMORE     BAL   R14,SEARCH   FIND LIST ENTRY IN TABLE\n         TM    SWITCH,NONE  CHECK TO SEE IF NAME WAS FOUND\n         BO    NOTTHERE     BRANCH IF NOT\n         USING TABLE,R1     REGISTER 1 NOW POINTS TO TABLE ENTRY\n         MOVE  TSWITCH,LSWITCH          MOVE FUNCTIONS\n         MOVE  TNUMBER,LNUMBER               FROM LIST ENTRY\n         MOVE  TADDRESS,LADDRESS                  TO TABLE ENTRY\nLISTLOOP BXLE  R5,R6,MORE   LOOP THROUGH THE LIST\n         CLC   TESTTABL(240),TABLAREA\n         BNE   NOTRIGHT\n         CLC   TESTLIST(96),LISTAREA\n         BNE   NOTRIGHT\n         WTO   'ASSEMBLER SAMPLE PROGRAM SUCCESSFUL'\nEXIT     L     R13,SAVE13\n         RETURN (14,12),RC=0\n*\nNOTRIGHT WTO   'ASSEMBLER SAMPLE PROGRAM UNSUCCESSFUL'\n         B     EXIT\nNOTTHERE OI    LSWITCH,NONE TURN ON SWITCH IN LIST ENTRY\n         B     LISTLOOP     GO BACK AND LOOP\nSAVE13   DC    F'0'\nSWITCH   DC    X'00'\nNONE     EQU   X'80'\n*\n*        BINARY SEARCH ROUTINE\n*\nSEARCH   NI    SWITCH,255-NONE TURN OFF NOT FOUND SWITCH\n         LM    R1,R3,=F'128,4,128' LOAD TABLE PARAMETERS\n         LA    R1,TABLAREA-16(R1)  GET ADDRESS OF MIDDLE ENTRY\nLOOP     SRL   R3,1                DIVIDE INCREMENT BY 2\n         CLC   LNAME,TNAME         COMPARE LIST ENTRY WITH TABLE ENTRY\n         BH    HIGHER              BRANCH IF SHOULD BE HIGHER IN TABLE\n         BCR   8,R14               EXIT IF FOUND\n         SR    R1,R3               OTHERWISE IT IS LOWER IN THE TABLE  X\n                                     SO SUBTRACT INCREMENT\n         BCT   R2,LOOP             LOOP 4 TIMES\n         B     NOTFOUND            ARGUMENT IS NOT IN THE TABLE\nHIGHER   AR    R1,R3               ADD INCREMENT\n         BCT   R2,LOOP             LOOP 4 TIMES\nNOTFOUND OI    SWITCH,NONE         TURN ON NOT FOUND SWITCH\n         BR    R14                 EXIT\n*\n*        THIS IS THE TABLE\n*\n         DS    0D\nTABLAREA DC    XL8'0',CL8'ALPHA'\n         DC    XL8'0',CL8'BETA'\n         DC    XL8'0',CL8'DELTA'\n         DC    XL8'0',CL8'EPSILON'\n         DC    XL8'0',CL8'ETA'\n         DC    XL8'0',CL8'GAMMA'\n         DC    XL8'0',CL8'IOTA'\n         DC    XL8'0',CL8'KAPPA'\n         DC    XL8'0',CL8'LAMBDA'\n         DC    XL8'0',CL8'MU'\n         DC    XL8'0',CL8'NU'\n         DC    XL8'0',CL8'OMICRON'\n         DC    XL8'0',CL8'PHI'\n         DC    XL8'0',CL8'SIGMA'\n         DC    XL8'0',CL8'ZETA'\n*\n*        THIS IS THE LIST\n*\nLISTAREA DC    CL8'LAMBDA',X'0A',FL3'29',A(BEGIN)\n         DC    CL8'ZETA',X'05',FL3'5',A(LOOP)\n         DC    CL8'THETA',X'02',FL3'45',A(BEGIN)\n         DC    CL8'TAU',X'00',FL3'0',A(1)\n         DC    CL8'LIST',X'1F',FL3'465',A(0)\nLISTEND  DC    CL8'ALPHA',X'00',FL3'1',A(123)\n*\n*        THIS IS THE CONTROL TABLE\n*\n         DS    0D\nTESTTABL DC    FL3'1',X'00',A(123),CL8'ALPHA'\n         DC    XL8'0',CL8'BETA'\n         DC    XL8'0',CL8'DELTA'\n         DC    XL8'0',CL8'EPSILON'\n         DC    XL8'0',CL8'ETA'\n         DC    XL8'0',CL8'GAMMA'\n         DC    XL8'0',CL8'IOTA'\n         DC    XL8'0',CL8'KAPPA'\n         DC    FL3'29',X'0A',A(BEGIN),CL8'LAMBDA'\n         DC    XL8'0',CL8'MU'\n         DC    XL8'0',CL8'NU'\n         DC    XL8'0',CL8'OMICRON'\n         DC    XL8'0',CL8'PHI'\n         DC    XL8'0',CL8'SIGMA'\n         DC    FL3'5',X'05',A(LOOP),CL8'ZETA'\n*\n*        THIS IS THE CONTROL LIST\n*\nTESTLIST DC    CL8'LAMBDA',X'0A',FL3'29',A(BEGIN)\n         DC    CL8'ZETA',X'05',FL3'5',A(LOOP)\n         DC    CL8'THETA',X'82',FL3'45',A(BEGIN)\n         DC    CL8'TAU',X'80',FL3'0',A(1)\n         DC    CL8'LIST',X'9F',FL3'465',A(0)\n         DC    CL8'ALPHA',X'00',FL3'1',A(123)\n*\n*        THESE ARE THE SYMBOLIC REGISTERS\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n*\n*        THIS IS THE FORMAT DEFINITION OF LIST ENTRYS\n*\nLIST     DSECT\nLNAME    DS    CL8\nLSWITCH  DS    C\nLNUMBER  DS    FL3\nLADDRESS DS    F\n*\n*        THIS IS THE FORMAT DEFINITION OF TABLE ENTRYS\n*\nTABLE    DSECT\nTNUMBER  DS    FL3\nTSWITCH  DS    C\nTADDRESS DS    F\nTNAME    DS    CL8\n         END   BEGIN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEXSAMP": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00v\\x19/\\x00v\\x19/\\t'\\x000\\x000\\x00\\x00\\xd4\\xe5\\xe3\\xe2\\xc1\\xd4\\xd7@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1976-07-10T00:00:00", "modifydate": "1976-07-10T09:27:00", "lines": 48, "newlines": 48, "modlines": 0, "user": "MVTSAMP"}, "text": "//PASCAL JOB   98166,TEST,MSGLEVEL=1\n//STEP   EXEC  ALGOFCLG,PARM.ALGOL=(ISO),PARM.GO=(DUMP)\n//SYSIN  DD  *\n@BEGIN@ @COMMENT@ TEST PROGRAM Q09\nTHIS PROGRAM GENERATES AND PRINTS THE FIRST TWENTY LINES OF PASCALS\nTRIANGLE.THE K TH ELEMENT P%K,J< OF THE J TH LINE SHOULD BE EQUAL TO\nTHE SUM OF P%K-1,J-1< AND P%K,J-1< FOR K NOTEQUAL 0 AND K NOTEQUAL J.\nP%0,J<#P%J,J<#1. THUS BY ADDING TWO BY TWO ALL ELEMENTS IN ONE LINE\nPLACING EACH SUM BELOW AND BETWEEN THE TWO ELEMENTS THE NEXT LINE OF\nPASCALS TRIANGLE COULD BE EXPANDED .,\n@INTEGER@ L,K,N,I,M,POWERTEN.,\n@INTEGER@@ARRAY@ A%/0..19/<.,\n@BOOLEAN@ C.,\nSYSACT%1,6,120<., SYSACT%1,8,62<.,\nSYSACT%1,12,1<., SYSACT%1,2,56<.,\nOUTSTRING %1,@%@PASCALS TRIANGLE@<@<.,\n@FOR@L.#0@STEP@1@UNTIL@19@DO@\n    @BEGIN@\n    SYSACT%1,14,3<.,\n    @IF@ L @LESS@ 19 @THEN@\n                         SYSACT%1,2,58-3*L<.,\n    A%/L/<.#1.,\n    @FOR@K.#L-1@STEP@-1@UNTIL@1@DO@\n    A%/K/<.#A%/K-1/<&A%/K/<.,\n    @FOR@K.#0@STEP@1@UNTIL@L@DO@\n         @BEGIN@\n         C.#@TRUE@.,\n         M.#A%/K/<.,\n         @FOR@I.#5@STEP@-1@UNTIL@0@DO@\n              @BEGIN@\n              POWERTEN.#10@POWER@I.,\n              N.#M@/@POWERTEN.,\n              M.#M-N*POWERTEN.,\n              @IF@N@EQUAL@0@THEN@\n                   @BEGIN@\n                   @IF@C@THEN@ OUTSYMBOL %1,@%@ @<@,1<\n                   @ELSE@ OUTSYMBOL %1,@%@0@<@,1<.,\n                   @END@\n                   @ELSE@\n                   @BEGIN@\n                   C.#@FALSE@.,\n                   OUTSYMBOL%1,@%@123456789@<@,N<.,\n                   @END@\n              @END@\n         @END@\n    @END@\n@END@\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEYSP": {"ttr": 1290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00v\\x19/\\x00v\\x19/\\t'\\x00v\\x00v\\x00\\x00\\xd4\\xe5\\xe3\\xe2\\xc1\\xd4\\xd7@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1976-07-10T00:00:00", "modifydate": "1976-07-10T09:27:00", "lines": 118, "newlines": 118, "modlines": 0, "user": "MVTSAMP"}, "text": "//FORTRANG JOB   MSGLEVEL=1\n//FTNGTEST EXEC  FORTGCLG,PARM.FORT='EBCDIC,LIST,MAP'\n//FORT.SYSIN  DD  *\nC   ********************************************************************\nC   *                                                                  *\nC   * THIS PROGRAM IS A TEST CASE DESIGNED TO VERIFY THAT THE FORTRAN  *\nC   * IV (G) COMPILER HAS BEEN PROPERLY INSTALLED IN YOUR SYSTEM. THE  *\nC   * REQUIRED JOB CONTROL LANGUAGE STATEMENTS AND THE DATA CARD       *\nC   * ARE INCLUDED AS PART OF THE DECK.                                *\nC   *                                                                  *\nC   * THE PROGRAM GENERATES A TABLE OF BINOMIAL COEFFICIENTS WHICH IS  *\nC   * THEN PRINTED ON THE SYSOUT DEVICE.  ALL DATA EXCEPT THE FIRST    *\nC   * LINE OF OUTPUT IS PROGRAM GENERATED.                             *\nC   *                                                                  *\nC *                                                                    *\nC *   THE OUTPUT SHOULD BE ---                                         *\nC *                                                                    *\nC *      I---------------------------------------------------------I   *\nC *      I                           K                             I   *\nC * I----I---------------------------------------------------------I   *\nC * I  N I 1    2    3    4     5     6     7      8      9     10 I   *\nC * I----I---------------------------------------------------------I   *\nC * I  1 I  1    0    0    0     0     0     0      0      0     0 I   *\nC * I  2 I  2    1    0    0     0     0     0      0      0     0 I   *\nC * I  3 I  3    3    1    0     0     0     0      0      0     0 I   *\nC * I  4 I  4    6    4    1     0     0     0      0      0     0 I   *\nC * I  5 I  5   10   10    5     1     0     0      0      0     0 I   *\nC * I  6 I  6   15   20   15     6     1     0      0      0     0 I   *\nC * I  7 I  7   21   35   35    21     7     1      0      0     0 I   *\nC * I  8 I  8   28   56   70    56    28     8      1      0     0 I   *\nC * I  9 I  9   36   84  126   126    84    36      9      1     0 I   *\nC * I 10 I 10   45  120  210   252   210   120     45     10     1 I   *\nC * I 11 I 11   55  165  330   462   462   330    165     55    11 I   *\nC * I 12 I 12   66  220  495   792   924   792    495    220    66 I   *\nC * I 13 I 13   78  286  715  1287  1716  1716   1287    715   286 I   *\nC * I 14 I 14   91  364 1001  2002  3003  3432   3003   2002  1001 I   *\nC * I 15 I 15  105  455 1365  3003  5005  6435   6435   5005  3003 I   *\nC * I 16 I 16 120  560 1820  4368  8008 11440  12870  11440   8008 I   *\nC * I 17 I 17 136  680 2380  6188 12376 19448  24310  24310  19448 I   *\nC * I 18 I 18 153  816 3060  8568 18564 31824  43758  48620  43758 I   *\nC * I 19 I 19 171  969 3876 11624 27132 50388  75582  92378  92378 I   *\nC * I 20 I 20 190 1140 4845 15504 38760 77520 125970 167960 184756 I   *\nC * I----I---------------------------------------------------------I   *\nC *                                                                    *\nC   ********************************************************************\n      DIMENSION NBYK(20,10),HEAD(20)\n      DO 10 K=1,10\n      NBYK(1,K) = K\n   10 CONTINUE\n      READ (5,1) HEAD\n      WRITE (6,2) HEAD\n      WRITE (6,3) (NBYK(1,K),K=1,10)\n      DO 30 N=1,20\n      DO 20 K=1,10\n      NBYK(N,K) = KBINCO(N,K)\n   20 CONTINUE\n      WRITE (6,4) N,(NBYK(N,K),K=1,10)\n   30 CONTINUE\n      WRITE (6,5)\n      STOP\n    1 FORMAT (20A4)\n    2 FORMAT ('1   FORTRAN G SAMPLE TEST CASE'///////1X,20A4/////)\n    3 FORMAT (T7,'I',57('-'),'I'/T7,'I',T35,'K',T65,'I'/T2,'I----I',\n     X        57('-'),'I'/T2,'I  N I',I2,I4,2I5,3I6,3I7,'  I'/T2,\n     X        'I----I',57('-'),'I')\n    4 FORMAT (' I',I3,' I',I3,I4,2I5,3I6,3I7,' I')\n    5 FORMAT (' I----I',57('-'),'I')\n      END\nC\nC   ************************************************\nC   * KBINCO COMPUTES THE BINOMIAL COEFFICIENT,    *\nC   * C(N,K) = (N*(N-1)***(N-K+1))/(K*(K-1)***1),  *\nC   * WHERE N AND K ARE THE INTEGER ARGUEMENTS TO  *\nC   * THE FUNCTION.  INTERMEDIATE CALCULATIONS ARE *\nC   * PERFORMED IN REAL ARITHMETIC.  IN THE CASE   *\nC   * WHERE K .GT. N, A VALUE OF ZERO IS RETURNED. *\nC   * THE VALUES OF N AND K ARE LEFT UNCHANGED.    *\nC   * THE FUNCTION HAS BEEN CHECKED FOR ALL COM-   *\nC   * BINATIONS OF N=1,2,...,20 AND K=1,2,...,10.  *\nC   ************************************************\nC\n      FUNCTION KBINCO (N,K)\nCHECK FOR TRIVIAL CASES\n      IF (K .GT. N) GO TO 50\n      IF (K .EQ. 0  .OR.  N .EQ. K) GO TO 60\n      IF (K .EQ. 1  .OR.  N-K .EQ. 1) GO TO 70\nCONVERT TO REAL FOR INT. CALCULATIONS\n      P = N\n      Q = K\nCHECK FOR LOWER 'DENOMINATOR'\n      IF (P-Q .LT. Q) Q = P-Q\nCOMPUTE DENOMINATOR\n      MAX = Q\n      BOT = 1.0\n      DO 30 I=2,MAX\n      BOT = I*BOT\n   30 CONTINUE\nCOMPUTE NUMERATOR\n      MAX = P\n      MIN = P - Q + 1.0\n      TOP = 1.0\n      DO 40 I=MIN,MAX\n      TOP = I*TOP\n   40 CONTINUE\nCALCULATE AND ROUND BIN. COEFF.\n      KBINCO = TOP/BOT + 0.5\n      RETURN\n   50 KBINCO = 0\n      RETURN\n   60 KBINCO = 1\n      RETURN\n   70 KBINCO = N\n      RETURN\n      END\n/*\n//GO.SYSIN DD *\n          BINOMIAL COEFFICIENTS\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IKDSAMPL": {"ttr": 1293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00v\\x19/\\x00v\\x19/\\t'\\x00`\\x00`\\x00\\x00\\xd4\\xe5\\xe3\\xe2\\xc1\\xd4\\xd7@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1976-07-10T00:00:00", "modifydate": "1976-07-10T09:27:00", "lines": 96, "newlines": 96, "modlines": 0, "user": "MVTSAMP"}, "text": "//PTOPSAMP JOB  360T1130,SAMPLE,MSGLEVEL=1\n//PTOPSTEP  EXEC  FORTGCLG,PARM.FORT=(NODECK,MAP,LOAD)\n//FORT.SYSIN DD *\n      EXTERNAL ASYN\n      EXTERNAL ERRN\nC ASYN=ASYNCHRONOUS ROUTINE\n      DIMENSION TEMPRY(5),USARY(5),IPASS(2)\nC THE PASSWORD IS READ FROM A CARD RECORD INTO IPASS.\n 5    FORMAT(2A4)\n      READ (5,5) IPASS\nC GTNIT INITIALIZES COMMUNICATION WITH THE 1130 PROGRAM.\n 10   CALL  GTNIT(9,20,20,ASYN,IPASS,IERR)\n      IF(IERR)100,20,110\nC GTRED IS CALLED TO RECEIVE THE DATA BEING TRANSMITTED\nC FROM THE 1130 PROGRAM.\n 20   CALL GTRED(9,TEMPRY,5,4)\nC GTCLT IS CALLED TO TEST THE READ OPERATION\n 30   CALL GTCLT(9,3,ITEST)\n      GO TO (60,40,40,40,90,40,40,50),ITEST\nC A BRANCH IS MADE DEPENDING UPON THE RETURN CODE PLACED IN ITEST. THE\nC ERROR ROUTINE IS PASSED THE RETURN CODE INDICATING THE PROBLEM.\n 40   CALL ERRN(ITEST)\nC NO RETURN IS MADE FROM THE ERROR ROUTINE.\n 50   PAUSE 'OPERATOR ASSISTANCE REQUIRED FOR TELEPROCESSING UNIT.'\n      GO TO 20\nC GDCTF CONVERTS THE DATA FROM 1130 FORMAT TO SYSTEM/360 FORMAT.\n 60   CALL GDCTF(TEMPRY,USARY,5,1)\nC THE DATA VARIABLES ARE DEFINED AND ASSIGNED VALUES FROM THE ARRAY.\n      WB = USARY(1)\n      CA = USARY(2)\n      W  = USARY(3)\n      C  = USARY(4)\n      EL = USARY(5)\nC WB=WHEELBASE. SHOULD BE WITHIN RANGE 110-200. MUST NOT BE 999.\nC A VALUE OF 999 FOR WB INDICATES TO 1130 SAMPLE PROGRAM\nC THAT IT HAS READ THE LAST DATA RECORD.\nC CA=DISTANCE FROM BACK OF CAB TO CENTER OF REAR AXLE. SHOULD BE\nC WITHIN THE RANGE 38-130.\nC W=GROSS WEIGHT.  SHOULD BE WITHIN RANGE 5000-23,000.\nC C=CLEARANCE BETWEEN BODY AND CAB. SHOULD BE 3.\nC EL=BODY LENGTH. SHOULD BE WITHIN RANGE 90-188.\nC THE WEIGHT DISTRIBUTION ON EACH AXLE IS COMPUTED.\nC A=HORIZONTAL DISTANCE BETWEEN CENTER OF BODY AND CENTER OF REAR AXLE.\nC FW=WEIGHT ON FRONT AXLE.\nC RW=WEIGHT ON REAR AXLE.\n      A = CA-C-EL/2.0\n      FW = W*A/WB\n      RW = W-FW\nC RESULTS ARE PLACED IN THE USER'S ARRAY.\n      USARY(4) = FW\n      USARY(5) = RW\nC GDCFF CONVERTS THE DATA TO THE 1130 FORMAT.\n      CALL GDCFF(USARY(4),TEMPRY,2,1)\nC GTWRT INITIATES DATA TRANSMISSION BACK TO THE 1130.\n 70   CALL GTWRT(9,TEMPRY,2,4,1)\n 80   CALL GTCLT(9,2,ITEST)\n      GO TO (20,80,80,40,90,40,40,50),ITEST\nC GTEND IS CALLED TO END COMMUNICATION WITH 1130 PROGRAM.\n 90   CALL GTEND(9)\n      GO TO 120\n 100  WRITE (6,1)\n 1    FORMAT (43H YOUR PASSWORD DOES NOT MATCH 1130 PASSWORD)\n      GO TO 120\n 110  WRITE (6,2)\n 2    FORMAT (50H TRANSMISSION-LINE ERRORS PREVENTED INITIALIZATION)\n 120  STOP\n      END\n      SUBROUTINE ERRN(ITEST)\nC THE FOLLOWING IS A ROUTINE THAT GAINS CONTROL\nC WHEN GTCLT DETERMINES THAT A READ OR WRITE\nC OPERATION WAS UNSUCCESSFUL.\n      IF (ITEST-7)100,200,200\n 100  WRITE (6,111)\n 111  FORMAT (48H TRANSMISSION-LINE ERRORS PREVENTED TRANSMISSION)\n      GO TO 300\n 200  WRITE (6,222)\n 222  FORMAT (43H ELEMENT COUNTS OR DATA TYPES ARE INCORRECT)\n 300  CALL GTEND(9)\n      STOP\n      END\n      SUBROUTINE ASYN(IDSRF,ISTRT)\nC THE FOLLOWING IS A DUMMY ASYNCHRONOUS ROUTINE\nC FOR THE SAMPLE PROGRAM. IT IS NOT INVOKED BUT\nC MUST BE PRESENT TO RESOLVE THE \"ASYNROUTINE\"\nC ARGUMENT IN GTNIT.\n      CALL GTEND(9)\n      RETURN\n      END\n/*\n//LKED.SYSLMOD DD SPACE=(1024,(50,20,1),RLSE)\n/*\n//GO.SYSABEND DD SYSOUT=A\n//GO.FT09F001  DD  UNIT=012\n//GO.SYSIN DD *\nAXLEP1\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IKFSAMP": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00v\\x19/\\x00v\\x19/\\t'\\x00T\\x00T\\x00\\x00\\xd4\\xe5\\xe3\\xe2\\xc1\\xd4\\xd7@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1976-07-10T00:00:00", "modifydate": "1976-07-10T09:27:00", "lines": 84, "newlines": 84, "modlines": 0, "user": "MVTSAMP"}, "text": "//IKFSAMP JOB   CB545,COBOL,MSGLEVEL=1\n// EXEC COBUCLG,PARM.COB='QUOTE'\n//COB.SYSIN DD *\n100010 IDENTIFICATION DIVISION.\n100020 PROGRAM-ID.  TESTRUN.\n100030   AUTHOR. PROGRAMMER NAME.\n100040   INSTALLATION. NEW YORK PROGRAMMING CENTER.\n100050   DATE-WRITTEN. JULY 12, 1968.\n100060   DATE-COMPILED.\n100070   REMARKS. THIS PROGRAM HAS BEEN WRITTEN AS A SAMPLE PROGRAM FOR\n100080     COBOL USERS. IT CREATES AN OUTPUT FILE AND READS IT BACK AS\n100090     INPUT.\n100100 ENVIRONMENT DIVISION.\n100110 CONFIGURATION SECTION.\n100120   SOURCE-COMPUTER. IBM-360-H50.\n100130   OBJECT-COMPUTER. IBM-360-H50.\n100140 INPUT-OUTPUT SECTION.\n100150 FILE-CONTROL.\n100160     SELECT FILE-1 ASSIGN TO UT-2400-S-SAMPLE.\n100170     SELECT FILE-2 ASSIGN TO UT-2400-S-SAMPLE.\n100180 DATA DIVISION.\n100190 FILE SECTION.\n100200 FD  FILE-1\n100210     LABEL RECORDS ARE OMITTED\n100220     BLOCK CONTAINS 100 CHARACTERS\n100225     RECORD CONTAINS 20 CHARACTERS\n100230     RECORDING MODE IS F\n100240     DATA RECORD IS RECORD-1.\n100250   01 RECORD-1.\n100260     02 FIELD-A PICTURE IS X(20).\n100270 FD  FILE-2\n100280     LABEL RECORDS ARE OMITTED\n100290     BLOCK CONTAINS 5 RECORDS\n100300     RECORD CONTAINS 20 CHARACTERS\n100310     RECORDING MODE IS F\n100320     DATA RECORD IS RECORD-2.\n100330   01 RECORD-2.\n100340     02 FIELD-A PICTURE IS X(20).\n100350 WORKING-STORAGE SECTION.\n100360     77 COUNT PICTURE S99 COMP SYNC.\n100370     77 NOMBER  PICTURE S99 COMP SYNC.\n100375   01 FILLER.\n 00380     02 ALPHABET PICTURE X(26) VALUE \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\n100395     02 ALPHA REDEFINES ALPHABET PICTURE X OCCURS 26 TIMES.\n100405     02 DEPENDENTS PICTURE X(26)  VALUE \"0123401234012340123401234\n100410-    \"0\".\n100420     02 DEPEND REDEFINES DEPENDENTS PICTURE X OCCURS 26 TIMES.\n100440   01 WORK-RECORD.\n100450     02 NAME-FIELD  PICTURE X.\n100460     02 FILLER PICTURE X VALUE SPACE.\n100470     02 RECORD-NO PICTURE 9999.\n100480     02 FILLER PICTURE X VALUE SPACE.\n100490     02 LOCATION PICTURE AAA VALUE \"NYC\".\n100500     02 FILLER PICTURE X VALUE SPACE.\n100510     02 NO-OF-DEPENDENTS PICTURE XX.\n100520     02 FILLER PICTURE X(7) VALUE SPACES.\n100530 PROCEDURE DIVISION.\n100540 BEGIN. READY TRACE.\n100550     NOTE THAT THE FOLLOWING OPENS THE OUTPUT FILE TO BE CREATED\n100560     AND INITIALIZES COUNTERS.\n100570 STEP-1. OPEN OUTPUT FILE-1. MOVE ZERO TO COUNT NOMBER.\n100580     NOTE THAT THE FOLLOWING CREATES INTERNALLY THE RECORDS TO BE\n100590     CONTAINED IN THE FILE, WRITES THEM ON TAPE, AND DISPLAYS\n100600     THEM ON THE CONSOLE.\n100610 STEP-2. ADD 1 TO COUNT, ADD 1 TO NOMBER, MOVE ALPHA (COUNT) TO\n100620     NAME-FIELD.\n100630     MOVE DEPEND (COUNT) TO NO-OF-DEPENDENTS.\n100640     MOVE NOMBER TO RECORD-NO.\n100650 STEP-3. DISPLAY WORK-RECORD UPON CONSOLE. WRITE RECORD-1 FROM\n100660     WORK-RECORD.\n100670 STEP-4. PERFORM STEP-2 THRU STEP-3 UNTIL COUNT IS EQUAL TO 26.\n100680     NOTE THAT THE FOLLOWING CLOSES OUTPUT AND REOPENS IT AS\n100690     INPUT.\n100700 STEP-5. CLOSE FILE-1. OPEN INPUT FILE-2.\n100710     NOTE THAT THE FOLLOWING READS BACK THE FILE AND SINGLES OUT\n100720     EMPLOYEES WITH NO DEPENDENTS.\n100730 STEP-6. READ FILE-2 RECORD INTO WORK-RECORD AT END GO TO STEP-8.\n100740 STEP-7. IF NO-OF-DEPENDENTS IS EQUAL TO \"0\" MOVE \"Z\" TO\n100750     NO-OF-DEPENDENTS. EXHIBIT NAMED WORK-RECORD. GO TO\n100760     STEP-6.\n100770 STEP-8. CLOSE FILE-2.\n100780     STOP RUN.\n//GO.SAMPLE DD    UNIT=2400,LABEL=(,NL)\n//GO.SYSOUT DD   SYSOUT=A\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PL1LFC": {"ttr": 1540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x10\\x00\\x10\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 16, "newlines": 16, "modlines": 0, "user": "JDMARSH"}, "text": "//PL1LFC   PROC CR=200K\n//*-------------------------------------------------------------------*\n//*      ------------ P L E A S E  N O T E  --------------            *\n//*    THIS PROCEDURE PRODUCES NO OBJECT MODULE. IF ONE IS NEEDED     *\n//*      CODE:                                                        *\n//*      // EXEC PL1LFC,PARM='LOAD,NODECK'                            *\n//*      //PL1L.SYSLIN DD DSN=&&LOADSET,UNIT=SYSDA,DISP=(MOD,PASS),   *\n//*      //    SPACE=(CYL,(4,1)),DCB=BLKSIZE=3200                     *\n//*      //PL1L.SYSIN DD  --INPUT SOURCE FULLY DESCRIBED--            *\n//*-------------------------------------------------------------------*\n//PL1L     EXEC PGM=IEMAA,PARM='NOLOAD,NODECK',REGION=&CR\n//STEPLIB  DD DSN=JDMARSH.SHARE.PL1FXA,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT3   DD DSN=&&SYSUT3,UNIT=SYSDA,SPACE=(CYL,(4,1))\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(2,1),,CONTIG),\n//            SEP=(SYSUT3),DCB=BLKSIZE=1024\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PL1LFCG": {"ttr": 1542, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x16\\x00\\x16\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "JDMARSH"}, "text": "//PL1LFCG  PROC CR=300K,GR=400K\n//*-------------------------------------------------------------------*\n//*        CUSTOMIZED SOMEWHAT THE PROC. WHAT COMPILER STILL RUNS IN  *\n//*        80K? AND RUNS PROGRAMS IN IBM DEFAULT OF 106K!!!!          *\n//*                                          JDM                      *\n//*-------------------------------------------------------------------*\n//PL1L     EXEC  PGM=IEMAA,PARM='LOAD,NODECK',REGION=&CR\n//STEPLIB  DD DSN=JDMARSH.SHARE.PL1FXA\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DSN=&&LOADSET,UNIT=SYSDA,DISP=(MOD,PASS),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),\n//            SPACE=(CYL,(4,1),RLSE)\n//SYSUT3   DD DSN=&&SYSUT3,UNIT=SYSDA,SPACE=(CYL,(4,1))\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(2,1),,CONTIG),\n//            SEP=(SYSUT3,SYSLIN),DCB=BLKSIZE=1024\n//*-------------------------------------------------------------------*\n//GO       EXEC PGM=LOADER,PARM='SIZE=80K',REGION=&GR,\n//         COND=(9,LT,PL1L)\n//SYSLIB   DD DSN=JDMARSH.SHARE.PL1FXA\n//SYSLIN   DD DSN=&&LOADSET,DISP=(OLD,DELETE)\n//SYSLOUT  DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PL1LFCL": {"ttr": 1544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x18\\x00\\x18\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "JDMARSH"}, "text": "//PL1LFCL  PROC CR=300K,LR=400K\n//*-------------------------------------------------------------------*\n//*        CUSTOMIZED PROC SOMEWHAT !!!!                              *\n//*-------------------------------------------------------------------*\n//PL1L     EXEC  PGM=IEMAA,PARM='LOAD,NODECK',REGION=&CR\n//SYSLIB   DD DSN=JDMARSH.SHARE.PL1FXA,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DSN=&&LOADSET,UNIT=SYSDA,DISP=(MOD,PASS),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),\n//            SPACE=(CYL,(4,1),RLSE)\n//SYSUT3   DD DSN=&&SYSUT3,UNIT=(SYSDA,SEP=(SYSLIN)),SPACE=(CYL,(4,1))\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=(SYSDA,SEP=(SYSUT3,SYSLIN)),\n//            SPACE=(1024,(60,60),,CONTIG),DCB=BLKSIZE=1024\n//SYSPUNCH DD DUMMY\n//*-------------------------------------------------------------------*\n//LKED     EXEC  PGM=IEWL,PARM='XREF,LIST',COND=(9,LT,PL1L),\n//         REGION=&LR\n//SYSLIB   DD DSN=JDMARSH.SHARE.PL1FXA,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DSNAME=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SYSLMOD  DD DSN=&&GOSET(GO),DISP=(MOD,PASS),UNIT=SYSDA,\n//            SPACE=(CYL,(2,,16))\n//SYSLIN   DD DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD DDNAME=SYSIN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PL1LFCLG": {"ttr": 1546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "JDMARSH"}, "text": "//PL1LFCLG PROC CR=300K,LR=450K,GR=700K\n//*-------------------------------------------------------------------*\n//PL1L     EXEC  PGM=IEMAA,PARM='LOAD,NODECK',REGION=&CR\n//STEPLIB  DD DSN=JDMARSH.SHARE.PL1FXA,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DSN=&&LOADSET,UNIT=SYSDA,DISP=(MOD,PASS),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),\n//            SPACE=(CYL,(2,1))\n//SYSUT3   DD DSNAME=&&SYSUT3,UNIT=SYSDA,SPACE=(CYL,(4,1))\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=(SYSDA,SEP=(SYSUT3,SYSLIN)),\n//            SPACE=(1024,(60,60),,CONTIG),DCB=BLKSIZE=1024\n//SYSPUNCH DD DUMMY\n//*-------------------------------------------------------------------*\n//LKED     EXEC  PGM=IEWL,PARM='XREF,LIST',COND=(9,LT,PL1L),\n//         REGION=&LR\n//SYSLIB   DD DSN=JDMARSH.SHARE.PL1FXA,DISP=SHR\n//SYSLMOD  DD DSN=&&GOSET(GO),DISP=(MOD,PASS),UNIT=SYSDA,\n//            SPACE=(CYL,(4,,16))\n//SYSUT1   DD DSNAME=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(200,20)),\n//            DCB=BLKSIZE=1024\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD DDNAME=SYSIN\n//*-------------------------------------------------------------------*\n//GO       EXEC PGM=*.LKED.SYSLMOD,COND=((9,LT,LKED),(9,LT,PL1L)),\n//         REGION=&GR\n//GOSET    DD DSN=&&GOSET,UNIT=SYSDA,DISP=(MOD,DELETE),SPACE=(TRK,0)\n//SYSPRINT DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PL1LFLG": {"ttr": 1548, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x0e\\x00\\x0e\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 14, "newlines": 14, "modlines": 0, "user": "JDMARSH"}, "text": "//PL1LFLG  PROC LR=150K,GR=\n//*********************************************************************\n//LKED     EXEC  PGM=IEWL,PARM='XREF,LIST',REGION=&LR\n//SYSLIB   DD DSN=SYS1.PL1LIB,DISP=SHR\n//SYSLMOD  DD DSNAME=&&GOSET(GO),DISP=(MOD,PASS),\n//            UNIT=SYSDA,SPACE=(CYL,(4,,16))\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(2,1),,CONTIG),\n//            SEP=(SYSLMOD,SYSLIB),DCB=BLKSIZE=1024\n//SYSPRINT DD SYSOUT=A\n//SYSLIN   DD DDNAME=SYSIN\n//*********************************************************************\n//GO       EXEC  PGM=*.LKED.SYSLMOD,COND=(9,LT,LKED),REGION=&GR\n//GOSET    DD DSN=&&GOSET,UNIT=SYSDA,DISP=(MOD,DELETE),SPACE=(TRK,0)\n//SYSPRINT DD SYSOUT=A\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PL1SAMP": {"ttr": 1550, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00O\\x00O\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 79, "newlines": 79, "modlines": 0, "user": "JDMARSH"}, "text": "//PL1LFCLG PROC CR=300K,LR=450K,GR=700K\n//*-------------------------------------------------------------------*\n//PL1L     EXEC  PGM=IEMAA,PARM='LOAD,NODECK',REGION=&CR\n//STEPLIB  DD DSN=JDMARSH.SHARE.PL1FXA,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DSN=&&LOADSET,UNIT=SYSDA,DISP=(MOD,PASS),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),\n//            SPACE=(CYL,(2,1))\n//SYSUT3   DD DSNAME=&&SYSUT3,UNIT=SYSDA,SPACE=(CYL,(4,1))\n//SYSUT1   DD DSN=&&SYSUT1,UNIT=(SYSDA,SEP=(SYSUT3,SYSLIN)),\n//            SPACE=(1024,(60,60),,CONTIG),DCB=BLKSIZE=1024\n//SYSPUNCH DD DUMMY\n//*-------------------------------------------------------------------*\n//LKED     EXEC  PGM=IEWL,PARM='XREF,LIST',COND=(9,LT,PL1L),\n//         REGION=&LR\n//SYSLIB   DD DSN=JDMARSH.SHARE.PL1FXA,DISP=SHR\n//SYSLMOD  DD DSN=&&GOSET(GO),DISP=(MOD,PASS),UNIT=SYSDA,\n//            SPACE=(CYL,(4,,16))\n//SYSUT1   DD DSNAME=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(200,20)),\n//            DCB=BLKSIZE=1024\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD DDNAME=SYSIN\n//*-------------------------------------------------------------------*\n//GO       EXEC PGM=*.LKED.SYSLMOD,COND=((9,LT,LKED),(9,LT,PL1L)),\n//         REGION=&GR\n//GOSET    DD DSN=&&GOSET,UNIT=SYSDA,DISP=(MOD,DELETE),SPACE=(TRK,0)\n//SYSPRINT DD SYSOUT=*\n//         PEND\n//X EXEC PL1LFCLG,PARM.PL1L='SIZE=45056,S,NL,A,X,LD,ND,SM=(2,72),EB,C',\n//             PARM.LKED='LET'\n//PL1L.SYSIN DD *\n IEMSP2 : PROCEDURE OPTIONS(MAIN);\n /* THIS PROGRAM TRANSFERS CARD IMAGES FROM ONE FILE TO ANOTHER.\n /* EACH IMAGE HAS A TYPE NUMBER AS FIRST CHARACTER.THE PROGRAM\n /* RECORDS THE NUMBER OF CARDS THERE ARE OF EACH TYPE. */\n    DECLARE CARDS INPUT ENVIRONMENT(F(80)) ,\n            BUILD OUTPUT ENVIRONMENT(F(480,80)),\n          1 CARD,\n          2 TYP CHAR(1),\n          2 BODY CHAR(79),\n            T FIXED BINARY,\n            TYPE(0:9) FIXED(3) STATIC INITIAL((10) 0 );\n    PUT EDIT('OUTPUT OF PL/1 SAMPLE PROGRAM')(COLUMN(45),A) PAGE;\n    ON ENDFILE(CARDS) GOTO FINISH;\n    ON CONVERSION BEGIN;PUT EDIT\n ('THIS CARD IGNORED BECAUSE TYPE IS NOT NUMERIC := ',CARD)(A) SKIP(2);\n    GOTO LOOP; END;\n LOOP: READ FILE(CARDS) INTO(CARD);\n    T=TYP;TYPE(T) = TYPE(T) + 1;\n    WRITE FROM(CARD) FILE(BUILD);\n    GOTO LOOP;\n FINISH: PUT DATA(TYPE) SKIP(3);\n    PUT EDIT('END OF SAMPLE OUTPUT')(COLUMN(47),A) SKIP(2);\n    END IEMSP2;\n/*\n//GO.SYSABEND  DD  SYSOUT=A\n//GO.BUILD DD UNIT=SYSDA,SPACE=(480,(10,5))\n//GO.CARDS DD *,DCB=BLKSIZE=80\n2    FIRST OF DATA FOR PL1 SAMPLE PROGRAM\n6\n6 THE\n8  CONTENTS\n6   OF\n2   THESE\n4     CARDS\n7      IMMATERIAL\n2       SINCE\n0       THEY\n6        ARE\n6         ONLY\n6          TRANSMITTED\n6           NOT\n6            PRINTED\n6\n&       DELIBERATE DUD CARD\n6\n2   LAST OF SOURCE DATA FOR PL1 SAMPLE\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RPG$GEN": {"ttr": 1553, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00u\\x00u\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 117, "newlines": 117, "modlines": 0, "user": "JDMARSH"}, "text": "/*JOBPARM L=99\n//*------------------------------------------------------------------*\n//*    INSTALL THE OS/MVT VERSION OF THE RPG COMPILER.\n//*\n//*    THE DISTRIBUTION LIBRARY IS ALSO INCLUDED IN THIS LOAD\n//*    MODULE FILE. THE DLIB MODULES ARE AS FOLLOWS AND ARE USED\n//*    WITH THESE LKED CONTROL CARDS TO CREATE THE COMPILER.\n//*\n//*     IESRPG\n//*     IES00010  IES00910 IES03010\n//*     IES03910  IES04010 IES04910\n//*     IES05010  IES05910 IES06010\n//*     IES06910  IES07010 IES07910\n//*     IES08A10  IES08010 IES08910\n//*     IES09010  IES09910 IES10010\n//*     IES10910  IES11010 IES11910\n//*     IES12010  IES12910 IES13010\n//*     IES13910  IES14010 IES14910\n//*     IES15010  IES15910 IES16010\n//*     IES16910  IES17010 IES17910\n//*     IES18010  IES11890 IES19010\n//*     IES19910  IES20010 IES20910\n//*     IES21010  IES21910 IES22010\n//*     IES22910  IES23010 IES23910\n//*     IES24010  IES24110 IES24210\n//*     IES24310  IES24410 IES24510\n//*     IES24610  IES24710 IES24910\n//*     IES25010\n//*------------------------------------------------------------------*\n//LKED     EXEC PGM=IEWL,PARM='LIST,NCAL,XREF',REGION=700K,TIME=5\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(10))\n//SYSLMOD  DD DSN=SS.SS02.MVS.SHARE.RPGCOMP,DISP=SHR\n//RG038    DD DSN=SS.SS02.MVS.SHARE.RPGCOMP,DISP=SHR\n//SYSLIN   DD *\n      INCLUDE RG038(IESRPG)\n      ENTRY IESRPG\n      ALIAS RPG\n      NAME IESRPG(R)\n      INCLUDE RG038(IES00010,IES00910)\n      ENTRY IESCEX\n      NAME RPG10000(R)\n      INCLUDE RG038(IES03010,IES03910)\n      ENTRY IESCEX\n      NAME RPG10030(R)\n      INCLUDE RG038(IES04010,IES04910)\n      ENTRY IESCEX\n      NAME RPG10040(R)\n      INCLUDE RG038(IES05010,IES05910)\n      ENTRY IESCEX\n      NAME RPG10050(R)\n      INCLUDE RG038(IES06010,IES06910)\n      ENTRY IESCEX\n      NAME RPG10060(R)\n      INCLUDE RG038(IES07010,IES07910)\n      ENTRY IESCEX\n      NAME RPG10070(R)\n      INCLUDE RG038(IES08010,IES08910)\n      ENTRY IESCEX\n      NAME RPG10080(R)\n      INCLUDE RG038(IES08A10)\n      ENTRY IES08A10\n      NAME RPG1008A(R)\n      INCLUDE RG038(IES09010,IES09910)\n      ENTRY IESCEX\n      NAME RPG10090(R)\n      INCLUDE RG038(IES10010,IES10910)\n      ENTRY IESCEX\n      NAME RPG10100(R)\n      INCLUDE RG038(IES11010,IES11910)\n      ENTRY IESCEX\n      NAME RPG10110(R)\n      INCLUDE RG038(IES12010,IES12910)\n      ENTRY IESCEX\n      NAME RPG10120(R)\n      INCLUDE RG038(IES13010,IES13910)\n      ENTRY IESCEX\n      NAME RPG10130(R)\n      INCLUDE RG038(IES14010,IES14910)\n      ENTRY IESCEX\n      NAME RPG10140(R)\n      INCLUDE RG038(IES15010,IES15910)\n      ENTRY IESCEX\n      NAME RPG10150(R)\n      INCLUDE RG038(IES16010,IES16910)\n      ENTRY IESCEX\n      NAME RPG10160(R)\n      INCLUDE RG038(IES17010,IES17910)\n      ENTRY IESCEX\n      NAME RPG10170(R)\n      INCLUDE RG038(IES18010,IES18910)\n      ENTRY IESCEX\n      NAME RPG10180(R)\n      INCLUDE RG038(IES19010,IES19910)\n      ENTRY IESCEX\n      NAME RPG10190(R)\n      INCLUDE RG038(IES20010,IES20910)\n      ENTRY IESCEX\n      NAME RPG10200(R)\n      INCLUDE RG038(IES21010,IES21910)\n      ENTRY IESCEX\n      NAME RPG10210(R)\n      INCLUDE RG038(IES22010,IES22910)\n      ENTRY IESCEX\n      NAME RPG10220(R)\n      INCLUDE RG038(IES23010,IES23910)\n      ENTRY IESCEX\n      NAME RPG10230(R)\n      INCLUDE RG038(IES24010,IES24110,IES24210)\n      INCLUDE RG038(IES24310,IES24410,IES24510)\n      INCLUDE RG038(IES24610,IES24710,IES24910)\n      ENTRY IESCEX\n      NAME RPG10240(R)\n      INCLUDE RG038(IES25010)\n      ENTRY IES25010\n      NAME RPG10250(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RPGEC": {"ttr": 1556, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x0c\\x00\\x0c\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "JDMARSH"}, "text": "//DEFAULT  PROC RGREGN=512K,RGPARM='NODECK,LOAD,LIST,NOSEQN',\n//         RGU3SPC='(600,(100,20))',RGU2SPC='(600,(100,20))',\n//         RGU1SPC='(600,(100,20))',RGGOSPC='(80,(200,50))'\n//*-------------------------------------------------------------------*\n//RPG      EXEC PGM=IESRPG,REGION=&RGREGN,PARM=(&RGPARM)\n//SYSPRINT DD SYSOUT=*\n//SYSPUNCH DD DUMMY\n//SYSUT3   DD DSNAME=&&SYSUT3,UNIT=SYSDA,SPACE=&RGU3SPC\n//SYSUT2   DD DSNAME=&&SYSUT2,UNIT=SYSDA,SPACE=&RGU2SPC\n//SYSUT1   DD DSNAME=&&SYSUT1,UNIT=SYSDA,SPACE=&RGU1SPC\n//SYSGO    DD DSNAME=&&LOADSET,UNIT=(SYSDA),\n//            DISP=(MOD,PASS,DELETE),SPACE=&RGGOSPC\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RPGECLG": {"ttr": 1558, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "JDMARSH"}, "text": "//DEFAULT  PROC RGREGN=512K,RGPARM='NODECK,LOAD,LIST,NOSEQN',\n//         RGU3SPC='(600,(100,20))',RGU2SPC='(600,(100,20))',\n//         RGU1SPC='(600,(100,20))',RGGOSPC='(80,(200,50))',\n//         LKREGN=100K,LKPARM='XREF,LIST,LET',\n//         LKMDSPC='(1024,(50,20,1))',LKU1SPC='(1024,(50,20))',\n//         GOCOND='((9,LT,RPG),(5,LT,LKED))',GOPARM='DATE=000000'\n//*-------------------------------------------------------------------*\n//RPG      EXEC PGM=IESRPG,REGION=&RGREGN,PARM=(&RGPARM)\n//SYSPRINT DD SYSOUT=*\n//SYSPUNCH DD DUMMY\n//SYSUT3   DD DSNAME=&&SYSUT3,UNIT=SYSDA,SPACE=&RGU3SPC\n//SYSUT2   DD DSNAME=&&SYSUT2,UNIT=SYSDA,SPACE=&RGU2SPC\n//SYSUT1   DD DSNAME=&&SYSUT1,UNIT=SYSDA,SPACE=&RGU1SPC\n//SYSGO    DD DSNAME=&&LOADSET,UNIT=(SYSDA),\n//            DISP=(MOD,PASS,DELETE),SPACE=&RGGOSPC\n//*-------------------------------------------------------------------*\n//LKED     EXEC PGM=IEWL,REGION=&LKREGN,PARM=(&LKPARM)\n//SYSLIN   DD DSNAME=&&LOADSET,DISP=(OLD,DELETE)\n//         DD DDNAME=SYSIN\n//SYSLMOD  DD DSNAME=&&GOSET(RPG),UNIT=SYSDA,DISP=(NEW,PASS,DELETE),\n//            SPACE=&LKMDSPC\n//SYSUT1   DD DSNAME=&&SYSUT1,SPACE=&LKU1SPC,\n//            UNIT=(SYSDA,SEP=(SYSLIN,SYSLMOD))\n//SYSPRINT DD SYSOUT=*\n//*-------------------------------------------------------------------*\n//GO       EXEC PGM=*.LKED.SYSLMOD,COND=&GOCOND,PARM='&GOPARM'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RPGELG": {"ttr": 1560, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00\\r\\x00\\r\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "JDMARSH"}, "text": "//DEFAULT PROC LKREGN=512K,\n//         LKPARM='XREF,LIST,LET',GOCOND='(5,LT,LKED)',\n//         LKMDSPC='(1024,(50,20,1))',LKU1SPC='(1024,(50,20))',\n//         GOPARM='DATE=000000'\n//*-------------------------------------------------------------------*\n//LKED     EXEC PGM=IEWL,REGION=&LKREGN,PARM=(&LKPARM)\n//SYSLIN   DD DDNAME=SYSIN\n//SYSPRINT DD SYSOUT=A,DCB=(BLKSIZE=121)\n//SYSLMOD  DD DSNAME=&&GOSET(RPG),UNIT=SYSDA,DISP=(NEW,PASS,DELETE),\n//            SPACE=&LKMDSPC\n//SYSUT1   DD DSNAME=&&SYSUT1,SPACE=&LKU1SPC,UNIT=SYSDA\n//*-------------------------------------------------------------------*\n//GO       EXEC PGM=*.LKED.SYSLMOD,COND=&GOCOND,PARM='&GOPARM'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RPGSAMP": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x08\\x12\\x00G\\x00G\\x00\\x00\\xd1\\xc4\\xd4\\xc1\\xd9\\xe2\\xc8@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T08:12:00", "lines": 71, "newlines": 71, "modlines": 0, "user": "JDMARSH"}, "text": "//*-------------------------------------------------------------------*\n//*       THIS IS A TEST OF THE OS/MVT RPG COMPILER. IF YOU EDIT      *\n//*       MEMBER WITH ISPF, DO IT WITH 'STATS OFF'. THERE ARE VALUES  *\n//*       IN CC 73-80.                                                *\n//*                                                                   *\n//*                                                                   *\n//*-------------------------------------------------------------------*\n//TEST     EXEC RPGECLG\n//RPG.STEPLIB DD DSN=SS.SS02.MVS.SHARE.RPGCOMP,DISP=SHR\n//RPG.SYSIN DD *\n00000H                                                                    SAMPL1\n01010FINPUT   IPE F  80  80            READ40                             SAMPL1\n01020FOUTPUT  O   V 132 132     OF     PRINTER                            SAMPL1\n01010IINPUT   AA  01   1 Z-                                               SAMPL1\n01020I                                        8  29 NAME                  SAMPL1\n01030I                                       30  310MONTH                 SAMPL1\n01040I                                       32  330DAY                   SAMPL1\n01050I                                       34  380INVNO                 SAMPL1\n01060I                                       39  430CUSTNOL1              SAMPL1\n01070I                                       44  450STATE                 SAMPL1\n01080I                                       46  480CITY                  SAMPL1\n01090I                                       74  802INVAMT                SAMPL1\n01010C   01      INVAMT    ADD  TOTAL     TOTAL   72                      SAMPL1\n01020C   01      INVAMT    ADD  GRPTOT    GRPTOT  72                      SAMPL1\n01010OOUTPUT  H  201   1P                                                 SAMPL1\n01020O       OR        OF                                                 SAMPL1\n01030O                                   53 '      A C C O U N T S  R'    SAMPL1\n01040O                                   77 ' E C E I V A B L E  R E '    SAMPL1\n01050O                                   88 'G I S T E R'                 SAMPL1\n01060O        H  1     1P                                                 SAMPL1\n01070O       OR        OF                                                 SAMPL1\n01080O                                   25 'CUSTOMER'                    SAMPL1\n01090O                                   80 'LOCATION       INVOICE'      SAMPL1\n01100O                                  109 'INVOICE DATE    INVOICE'     SAMPL1\n01110O        H  2     1P                                                 SAMPL1\n01120O       OR        OF                                                 SAMPL1\n01130O                                   42 'NUMBER         CUSTOMER '    SAMPL1\n01140O                                   46 'NAME'                        SAMPL1\n01150O                                   79 ' STATE   CITY     NUMBER'    SAMPL1\n01160O                                  108 ' MO    DAY     AMOUNT'       SAMPL1\n02010O        D  2     01                                                 SAMPL1\n02020O                         CUSTNOZ   23                               SAMPL1\n02030O                         NAME      53                               SAMPL1\n02040O                         STATE Z   59                               SAMPL1\n02050O                         CITY  Z   67                               SAMPL1\n02060O                         INVNO Z   79                               SAMPL1\n02070O                         MONTH Z   90                               SAMPL1\n02080O                         DAY   Z   96                               SAMPL1\n02090O                         INVAMT   109 '$  ,  0.  '                  SAMPL1\n02100O        T  2     L1                                                 SAMPL1\n02110O                         GRPTOT B 109 '$  ,  0.  '                  SAMPL1\n02120O                                  110 '*'                           SAMPL1\n02130O        T  2     LR                                                 SAMPL1\n02140O                         TOTAL    109 '$  ,  0.  '                  SAMPL1\n02150O                                  111 '**'                          SAMPL1\n//GO.OUTPUT DD SYSOUT=*\n//GO.INPUT DD *\nK      AMALGAMATED CORP      1110116031071233 61                           38925\nK      BROWN WHOLESALE       1228123241131530231                           80208\nK      BROWN WHOLESALE       1214995881131530231                           26117\nK      FARM IMPLEMENTS       1018109011189747 77                            2763\nK      BLACK OIL             11 8115091853016 67                           59295\nK      BLACK OIL             1223122921853016 67                           95097\nK      LEATHER BELT CO       11 8115112071636471                           33563\nK      LEATHER BELT CO       1217122632071636471                           12175\nK      GENERAL MFG CO        11141161529017 6 63                           44012\nK      GENERAL MFG CO        11231167629017 6 63                           72222\nK      A-B-C DIST CO          911 96892905425 39                           64540\nK      A-B-C DIST CO         1111116052905425 39                           27169\nK      A-B-C DIST CO         1214122342905425 39                           55933\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RPGSMPL": {"ttr": 1796, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00v\\x19/\\x00v\\x19/\\t'\\x00C\\x00C\\x00\\x00\\xd4\\xe5\\xe3\\xe2\\xc1\\xd4\\xd7@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1976-07-10T00:00:00", "modifydate": "1976-07-10T09:27:00", "lines": 67, "newlines": 67, "modlines": 0, "user": "MVTSAMP"}, "text": "//RPGSMPL JOB MSGLEVEL=1\n//     EXEC RPGECLG\n//RPG.SYSUT3 DD UNIT=SYSDA\n//RPG.SYSUT2 DD UNIT=SYSDA\n//RPG.SYSUT1 DD UNIT=SYSDA\n//RPG.SYSGO  DD UNIT=SYSDA\n//RPG.SYSIN DD *\n00000H                                                                    SAMPL1\n01010FINPUT   IPE F  80  80            READ40                             SAMPL1\n01020FOUTPUT  O   V 132 132     OF     PRINTER                            SAMPL1\n01010IINPUT   AA  01   1 Z-                                               SAMPL1\n01020I                                        8  29 NAME                  SAMPL1\n01030I                                       30  310MONTH                 SAMPL1\n01040I                                       32  330DAY                   SAMPL1\n01050I                                       34  380INVNO                 SAMPL1\n01060I                                       39  430CUSTNOL1              SAMPL1\n01070I                                       44  450STATE                 SAMPL1\n01080I                                       46  480CITY                  SAMPL1\n01090I                                       74  802INVAMT                SAMPL1\n01010C   01      INVAMT    ADD  TOTAL     TOTAL   72                      SAMPL1\n01020C   01      INVAMT    ADD  GRPTOT    GRPTOT  72                      SAMPL1\n01010OOUTPUT  H  201   1P                                                 SAMPL1\n01020O       OR        OF                                                 SAMPL1\n01030O                                   53 '      A C C O U N T S  R'    SAMPL1\n01040O                                   77 ' E C E I V A B L E  R E '    SAMPL1\n01050O                                   88 'G I S T E R'                 SAMPL1\n01060O        H  1     1P                                                 SAMPL1\n01070O       OR        OF                                                 SAMPL1\n01080O                                   25 'CUSTOMER'                    SAMPL1\n01090O                                   80 'LOCATION       INVOICE'      SAMPL1\n01100O                                  109 'INVOICE DATE    INVOICE'     SAMPL1\n01110O        H  2     1P                                                 SAMPL1\n01120O       OR        OF                                                 SAMPL1\n01130O                                   42 'NUMBER         CUSTOMER '    SAMPL1\n01140O                                   46 'NAME'                        SAMPL1\n01150O                                   79 ' STATE   CITY     NUMBER'    SAMPL1\n01160O                                  108 ' MO    DAY     AMOUNT'       SAMPL1\n02010O        D  2     01                                                 SAMPL1\n02020O                         CUSTNOZ   23                               SAMPL1\n02030O                         NAME      53                               SAMPL1\n02040O                         STATE Z   59                               SAMPL1\n02050O                         CITY  Z   67                               SAMPL1\n02060O                         INVNO Z   79                               SAMPL1\n02070O                         MONTH Z   90                               SAMPL1\n02080O                         DAY   Z   96                               SAMPL1\n02090O                         INVAMT   109 '$  ,  0.  '                  SAMPL1\n02100O        T  2     L1                                                 SAMPL1\n02110O                         GRPTOT B 109 '$  ,  0.  '                  SAMPL1\n02120O                                  110 '*'                           SAMPL1\n02130O        T  2     LR                                                 SAMPL1\n02140O                         TOTAL    109 '$  ,  0.  '                  SAMPL1\n02150O                                  111 '**'                          SAMPL1\n//GO.OUTPUT DD SYSOUT=A\n//GO.INPUT DD *\nK      AMALGAMATED CORP      1110116031071233 61                           38925\nK      BROWN WHOLESALE       1228123241131530231                           80208\nK      BROWN WHOLESALE       1214995881131530231                           26117\nK      FARM IMPLEMENTS       1018109011189747 77                            2763\nK      BLACK OIL             11 8115091853016 67                           59295\nK      BLACK OIL             1223122921853016 67                           95097\nK      LEATHER BELT CO       11 8115112071636471                           33563\nK      LEATHER BELT CO       1217122632071636471                           12175\nK      GENERAL MFG CO        11141161529017 6 63                           44012\nK      GENERAL MFG CO        11231167629017 6 63                           72222\nK      A-B-C DIST CO          911 96892905425 39                           64540\nK      A-B-C DIST CO         1111116052905425 39                           27169\nK      A-B-C DIST CO         1214122342905425 39                           55933\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT091/FILE091.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT091", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}