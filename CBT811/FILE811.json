{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012844000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 3938662, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE811.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 3938662, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 3938662, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE811.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00=\\x03'", "DS1TRBAL": "b'\\xb5\\xf4'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\x8c\\x00\\x00\\x05\\x90\\x00\\x01\\x00>'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04N\\x00\\x00\\x01\\t%\\x0f\\x01\\t%\\x0f\\tH\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf8@@@'", "ispf": {"version": "04.78", "flags": 0, "createdate": "2009-09-07T00:00:00", "modifydate": "2009-09-07T09:48:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-478"}, "text": "REGULAR CBT TAPE - VERSION 478    FILE:  811\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT478.FILE811\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 12 MEMBERS COUNTED; CUMULATIVE SIZE IS 37,083 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   09/07/09    09:48:13    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$PDSLOAD": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00E\\x01\\x026_\\x01\\t%\\x0f\\t6\\x00(\\x00\\x08\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2002-12-31T00:00:00", "modifydate": "2009-09-07T09:36:45", "lines": 40, "newlines": 8, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBL JOB (ACCT#),PDSLOAD,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//*    PDSLOAD JOB TO CREATE INSTALL LIBRARIES\n//*\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD *\n   RECEIVE INDS('SBGOLOB.CBT478.FILE811(PDSLOAD)')\n   DSN (yourid.your.loadlib) VOL(volser)\n/*\n//*\n//PDSLOAD PROC IPDS='SBGOLOB.CBT478.FILE811',      <=== CHANGE\n//             OPRE=SBGOLOB,\n//             QUAL=LIB,\n//             MEMB=XXX,\n//             OUNT=SYSALLDA,\n//             OVL=DATA04,\n//             DSP1=NEW,\n//             DSP2=CATLG,\n//             DSP3='',\n//             P=30,S=60,D=44\n//*\n//LOAD   EXEC PGM=PDSLOAD\n//STEPLIB  DD DISP=SHR,DSN=yourid.your.loadlib\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DISP=SHR,DSN=&IPDS(&MEMB)\n//SYSUT2   DD UNIT=&OUNT,VOL=SER=&OVL,\n//             DSN=&OPRE..&QUAL..&MEMB,\n//             DISP=(&DSP1,&DSP2&DSP3),\n//             SPACE=(TRK,(&P,&S,&D),RLSE)\n//  PEND\n//*\n//S001 EXEC PDSLOAD,MEMB=DOCLIB\n//S002 EXEC PDSLOAD,MEMB=CLIST\n//S003 EXEC PDSLOAD,MEMB=ISPPLIB\n//S004 EXEC PDSLOAD,MEMB=JCL\n//S005 EXEC PDSLOAD,MEMB=MACLIB\n//S006 EXEC PDSLOAD,MEMB=SOURCE\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$PDSLSBG": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00D\\x01\\x026_\\x01\\t%\\x0f\\t7\\x00*\\x00\\x08\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2002-12-31T00:00:00", "modifydate": "2009-09-07T09:37:44", "lines": 42, "newlines": 8, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBL JOB (ACCT#),PDSLOAD,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* --------------------------------------------------- *//\n//*      PDSLOAD JOB TO CREATE INSTALL LIBRARIES        *//\n//*                                                     *//\n//*     (THIS JOB WAS TESTED TO WORK ON MY SYSTEM)      *//\n//* --------------------------------------------------- *//\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD *\n   RECEIVE INDS('SBGOLOB.CBT478.FILE811(PDSLOAD)')\n   DSN ('SBGOLOB.TEMP.PDSLOAD') VOL(WORK04)\n/*\n//*\n//PDSLOAD PROC IPDS='SBGOLOB.CBT478.FILE811',      <=== CHANGE\n//             OPRE=SBGOLOB,\n//             QUAL=LIB11,\n//             MEMB=XXX,\n//             OUNT=SYSALLDA,\n//             OVL=DATA04,\n//             DSP1=NEW,\n//             DSP2=CATLG,\n//             DSP3='',\n//             P=30,S=60,D=44\n//*\n//LOAD   EXEC PGM=PDSLOAD\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.TEMP.PDSLOAD\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DISP=SHR,DSN=&IPDS(&MEMB)\n//SYSUT2   DD UNIT=&OUNT,VOL=SER=&OVL,\n//             DSN=&OPRE..&QUAL..&MEMB,\n//             DISP=(&DSP1,&DSP2&DSP3),\n//             SPACE=(TRK,(&P,&S,&D),RLSE)\n//  PEND\n//*\n//S001 EXEC PDSLOAD,MEMB=DOCLIB\n//S002 EXEC PDSLOAD,MEMB=CLIST\n//S003 EXEC PDSLOAD,MEMB=ISPPLIB\n//S004 EXEC PDSLOAD,MEMB=JCL\n//S005 EXEC PDSLOAD,MEMB=MACLIB\n//S006 EXEC PDSLOAD,MEMB=SOURCE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$RECEIVE": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x003\\x01\\t%\\x0f\\x01\\t%\\x0f\\t8\\x00\\x18\\x00 \\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-09-07T00:00:00", "modifydate": "2009-09-07T09:38:33", "lines": 24, "newlines": 32, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBT  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//*  YOU MUST ADAPT THIS JOB TO YOUR INSTALLATION'S NAMING  *//\n//*   STANDARDS.  THIS JOB CREATES THE PDS'ES.  SEE THE     *//\n//*   LIBR.DOC PDS FOR FURTHER INSTRUCTIONS.                *//\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//TSOBATCH EXEC PGM=IKJEFT01\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD *\n  RECEIVE INDS('SBGOLOB.CBT478.FILE811(CLIST)'\n  DSN('SBGOLOB.LIBR.CLIST') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE811(DOC)'\n  DSN('SBGOLOB.LIBR.DOC') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE811(ISPPLIB)'\n  DSN('SBGOLOB.LIBR.ISPPLIB') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE811(JCL)'\n  DSN('SBGOLOB.LIBR.JCL') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE811(MACLIB)'\n  DSN('SBGOLOB.LIBR.MACLIB') VOL(WORK05)\n  RECEIVE INDS('SBGOLOB.CBT478.FILE811(SOURCE)'\n  DSN('SBGOLOB.LIBR.SOURCE') VOL(WORK05)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE811": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04N\\x00\\x00\\x01\\t%\\x0f\\x01\\t%\\x0f\\tH\\x00]\\x00]\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf8@@@'", "ispf": {"version": "04.78", "flags": 0, "createdate": "2009-09-07T00:00:00", "modifydate": "2009-09-07T09:48:00", "lines": 93, "newlines": 93, "modlines": 0, "user": "CBT-478"}, "text": "//***FILE 811 is a very useful LIBRARIAN program package, and       *   FILE 811\n//*           which is completely new at this time (Mar/06). The    *   FILE 811\n//*           package was written by Richard L. Rice.  This is a    *   FILE 811\n//*           fixed version of the LIBRARIAN program that was on    *   FILE 811\n//*           File 711.                                             *   FILE 811\n//*                                                                 *   FILE 811\n//*   >>> --------------------------------------------------------  *   FILE 811\n//*   >>> This LIBRARIAN is a free package, unrelated to any other  *   FILE 811\n//*   >>> package having the same or a similar name......           *   FILE 811\n//*   >>> --------------------------------------------------------  *   FILE 811\n//*                                                                 *   FILE 811\n//*           email:  Richard.L.Rice@conocophillips.com             *   FILE 811\n//*                                                                 *   FILE 811\n//*   Some documentation for this utility follows:                  *   FILE 811\n//*                                                                 *   FILE 811\n//*     The LIBRARIAN is a VTAM LU 6.2 client-server type           *   FILE 811\n//*     application, and it can also be accessed using TCP/IP.      *   FILE 811\n//*                                                                 *   FILE 811\n//*     My idea for using an LU 6.2 interface was to allow          *   FILE 811\n//*     users to access a library without having to log-in to       *   FILE 811\n//*     the system where the library actually lives.  You could     *   FILE 811\n//*     have a system at a central location serving remote          *   FILE 811\n//*     offices.  If you have multiple LPARs, users can access      *   FILE 811\n//*     libraries on any of the LPARs while logged in to only       *   FILE 811\n//*     one of the LPARs.                                           *   FILE 811\n//*                                                                 *   FILE 811\n//*     Since you have PDSs (libraries) on MVS already, what do     *   FILE 811\n//*     I need a librarian for?  The LIBRARIAN prevents             *   FILE 811\n//*     multiple users from updating a member at the same time.     *   FILE 811\n//*     When a user wants to update a member of a library, they     *   FILE 811\n//*     \"CHECK OUT\" the member.  The LIBRARIAN updates the          *   FILE 811\n//*     status to reflect the status is \"CHECKED OUT\" and           *   FILE 811\n//*     records the time, date, and user id of who CHECKED OUT      *   FILE 811\n//*     the member.  While the member is in CHECKED OUT state,      *   FILE 811\n//*     others will not be allowed to CHECK OUT the same            *   FILE 811\n//*     member.  Only the user that CHECKED out the member may      *   FILE 811\n//*     CHECK IN that member.  When the member is CHECKED IN,       *   FILE 811\n//*     the LIBRARIAN will change the status to CHECKED IN and      *   FILE 811\n//*     record the time, date, and user id of the user that         *   FILE 811\n//*     performed the CHECK IN.  A member may be VIEWed at any      *   FILE 811\n//*     time.  VIEWing a member does not change the STATUS or       *   FILE 811\n//*     the CHECK IN or CHECK OUT time stamps.                      *   FILE 811\n//*                                                                 *   FILE 811\n//*     Access to members is controlled via a user exit             *   FILE 811\n//*     (LIBUX02).  You may over-ride standard access controls.     *   FILE 811\n//*     For example, it may be that a user that has a member        *   FILE 811\n//*     CHECKED OUT is on vacation or no long working for your      *   FILE 811\n//*     company.  You may want to allow a manager to CHECK IN       *   FILE 811\n//*     the member.                                                 *   FILE 811\n//*                                                                 *   FILE 811\n//*     The server or back-end can be run as a JOB or started       *   FILE 811\n//*     task (STC).  Users may interface with the LIBRARIAN         *   FILE 811\n//*     either though batch or an SPF dialog.                       *   FILE 811\n//*                                                                 *   FILE 811\n//*     The LIBRARIAN can manage multiple libraries.  This          *   FILE 811\n//*     allows one LIBRARIAN to manage SOURCE, MACRO, JCL, etc      *   FILE 811\n//*     libraries.                                                  *   FILE 811\n//*                                                                 *   FILE 811\n//*     Libraries are KSDS VSAM clusters.                           *   FILE 811\n//*                                                                 *   FILE 811\n//*     Members in the library may be stored in a compressed        *   FILE 811\n//*     form.  User exit LIBUX01 allows you to use the              *   FILE 811\n//*     LIBRARIAN supplied compression, use a compression           *   FILE 811\n//*     method of your own, or turn compression off.  The           *   FILE 811\n//*     librarian compression mechanism averages about a 4-to-1     *   FILE 811\n//*     compression ratio.                                          *   FILE 811\n//*                                                                 *   FILE 811\n//*     This version of the LIBRARIAN allows you to add up to 5     *   FILE 811\n//*     lines of comments about a member for documentation.         *   FILE 811\n//*     These comments are not considered a part of the member      *   FILE 811\n//*     itself.                                                     *   FILE 811\n//*                                                                 *   FILE 811\n//*     The LIBRARIAN allows for up to 32,767 versions of a         *   FILE 811\n//*     given member.                                               *   FILE 811\n//*                                                                 *   FILE 811\n//*     The VSAM key used in the KSDSs allow approximately 2        *   FILE 811\n//*     billion (a 4 byte binary field) blocks of source data.      *   FILE 811\n//*     Each block is up to 8K in size.  If data compression is     *   FILE 811\n//*     used, the blocks contain compressed data.  The amount       *   FILE 811\n//*     of data that can be stored in a library is usually          *   FILE 811\n//*     limited only by the amount of disk space available.         *   FILE 811\n//*                                                                 *   FILE 811\n//*     Several supporting utilities are also supplied.             *   FILE 811\n//*       .  LIBINIT     Initializes a new library.                 *   FILE 811\n//*       .  UTIL0001    Loads members to a library \"offline\"       *   FILE 811\n//*       .  UTIL0002    Unloads a library to a sequential file     *   FILE 811\n//*       .  UTIL0003    Converts a source file to compressed form  *   FILE 811\n//*       .  UTIL0004    Detail library status report.              *   FILE 811\n//*       .  UTIL0005    Unloads members to a sequential file in    *   FILE 811\n//*                      LIBRARIAN \"export\" format                  *   FILE 811\n//*       .  UTIL0006    Imports members from a sequential file     *   FILE 811\n//*                      in LIBRARIAN \"export\" format               *   FILE 811\n//*                                                                 *   FILE 811\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CLIST": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x01\\x05\\x06\\x7f\\x01\\x05\\x06\\x7f\\x10\\x05\\x00q\\x00q\\x00\\x00\\xd3\\xc9\\xc2\\xd9\\xc1\\xd9\\xd5@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2005-03-08T00:00:00", "modifydate": "2005-03-08T10:05:00", "lines": 113, "newlines": 113, "modlines": 0, "user": "LIBRARN"}, "text": "./ ADD NAME=LIB      0100-05067-05067-1001-00080-00080-00000-CLIST\n/* REXX ------------------------------------------------------------ */\n/*                                                                   */\n/*                                                                   */\n/*   The idea behind the logic in this was to allow a user to        */\n/*   enter \"LIB\" or \"LIB library\" or \"LIB librarian library\".        */\n/*                                                                   */\n/*   If the user enters \"LIB\" only, the EXEC sets their default      */\n/*   librarian and they are taken to the library selection list.     */\n/*                                                                   */\n/*   If the user enters \"LIB library\", the EXEC sets their default   */\n/*   librarian and they are taken to the member list for the         */\n/*   specified library managed by the default librarian.             */\n/*                                                                   */\n/*                                                                   */\n/*   If the user enters \"LIB librarian library\", the user will be    */\n/*   taken to the member list for the specified library managed      */\n/*   by the specified librarian.                                     */\n/*                                                                   */\n/*                                                                   */\n/*                                                                   */\n/*  -------------------------------------------------------------    */\n/*                                                                   */\n/*                                                                   */\n/*   Customize this EXEC                                             */\n/*                                                                   */\n/*   Set LIST to the name(s) of your librarian(s)                    */\n/*                                                                   */\n/*   On lines 44 and 74 set the default librarian's VTAM APPLID      */\n/*                                                                   */\n/*                                                                   */\n/*                                                                   */\n/* ----------------------------------------------------------------- */\n\n /* TRACE R */\n\nARG PARMS\n\nLIST = \"librarian1 librarian2 ....\"\n\nNBR_WORDS = WORDS(PARMS)\n\nIF NBR_WORDS = 0 THEN\n   DO\n      LIB_APPL = \"default librarian\" < --- set to default librarian\n      LIB_NAME = \"\"\n      ADDRESS TSO ISPEXEC \"CONTROL ERRORS RETURN\"\n      ADDRESS TSO\n        ISPEXEC \"SELECT  CMD(LIB2\" LIB_APPL LIB_NAME\") NEWAPPL(LIB)\"\n      EXIT(0)\n   END\n\nIF NBR_WORDS = 2 THEN\n   DO\n      LIB_APPL = WORD(PARMS,1)\n      LIB_NAME = WORD(PARMS,2)\n      ADDRESS TSO ISPEXEC \"CONTROL ERRORS RETURN\"\n      ADDRESS TSO\n        ISPEXEC \"SELECT  CMD(LIB2\" LIB_APPL LIB_NAME\") NEWAPPL(LIB)\"\n      EXIT(0)\n   END\n\nDO I = 1 TO NBR_WORDS\n   IF POS(WORD(PARMS,I),LIST) > 0 THEN\n      DO\n         LIB_APPL = WORD(PARMS,1)\n         LIB_NAME = \"\"\n         ADDRESS TSO ISPEXEC \"CONTROL ERRORS RETURN\"\n         ADDRESS TSO\n      ISPEXEC \"SELECT  CMD(LIB2\" LIB_APPL LIB_NAME\") NEWAPPL(LIB)\"\n         EXIT(0)\n      END\nEND\n\nLIB_APPL = \"default librarian\"   < ------ set to default librarian\nLIB_NAME = WORD(PARMS,1)\nADDRESS TSO ISPEXEC \"CONTROL ERRORS RETURN\"\nADDRESS TSO\n  ISPEXEC \"SELECT  CMD(LIB2\" LIB_APPL LIB_NAME\") NEWAPPL(LIB)\"\nEXIT(0)\n\n./ ADD NAME=LIB2     0100-05067-05067-1001-00031-00031-00000-CLIST\n/* REXX ------------------------------------------------------------ */\n/*                                                                   */\n/*  This EXEC was written on a system using TSOPLUS.                 */\n/*  TSOPLUS adds the STEPLIBX function.  If your system does not     */\n/*  use TSOPLUS, you may have to add the LIBRARIAN LOADLIB to a      */\n/*  library in your system's LNKLST or in your TSO LOGON PROC.       */\n/*                                                                   */\n/* ----------------------------------------------------------------- */\n\n /* TRACE R */\n\nPARSE UPPER ARG APPL LIB\n\n  /* SAY \"ARGS WERE... APPL: \" APPL \"   LIBRARY:\" LIB */\n\nADDRESS TSO FREE \"FI(LIBTEMP)\"\nADDRESS TSO ALLOC \"FI(STEPLIBX) DA('.......LIB.LOADLIB'  ***) SHR REUSE\"\nSAVELIBX = TSOPEXT\n\n /*ADDRESS TSO ALLOC \"FI(LIBXTR) DA('.......LIB.TRACE') SHR REUSE\" */\n\nADDRESS TSO ISPEXEC \"LIBDEF ISPPLIB DATASET ID('.......LIB.ISPPLIB')\"\n\nADDRESS TSO ISPEXEC \"SELECT PGM(LIBTSO) PARM(\" || APPL LIB || \")\"\n\nIF SAVELIBX = '' THEN\n   ADDRESS TSO FREE \"FI(STEPLIBX)\"\nELSE\n   ADDRESS TSO ALLOC \"FI(STEPLIBX) DA(\" SAVELIBX \") SHR REUSE\"\n\nEXIT (0)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DOCLIB": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t%\\x0f\\x01\\t%\\x0f\\t\"\\x06\\x00\\x06\\x00\\x00\\x00\\xd3\\xc9\\xc2\\xd9\\xc1\\xd9\\xd5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-09-07T00:00:00", "modifydate": "2009-09-07T09:22:00", "lines": 1536, "newlines": 1536, "modlines": 0, "user": "LIBRARN"}, "text": "./ ADD NAME=$DOC     0100-09250-09250-0914-00097-00097-00000-DOCLIB\nSince you have PDSs (libraries) on MVS already, what do I need\na librarian for?  The LIBRARIAN prevents mutliple users from\nupdating a member at the same time.  When a user wants to update\na member of a library, they \"CHECK OUT\" the member.  The LIBRARIAN\nupdates the status to reflect the status is \"CHECKED OUT\" and\nrecords the time, date, and user id of who CHECKED OUT the member.\nWhile the member is in CHECKED OUT state, others will not be allowed\nto CHECK OUT the same member.  Only the user that CHECKED out the\nmember may CHECK IN that member.  When the member is CHECKED IN,\nthe LIBRARIAN will change the status to CHECKED IN and record the\ntime, date, and user id of the user that performed the CHECK IN.\nA member may be VIEWed or BROWSEd at any time.  VIEWing or BROWSEing\nmembers does not changed the STATUS or CHECK-IN or CHECK_OUT\ntime stamps.\n\nAccess to members is controlled via a user exit (LIBUX02).\nYou may over-ride standard access controls.  For example,\nit may be that a user that has a member CHECKED OUT is on\nvacation or no long working for your company.  You may want\nto allow a manager to CHECK IN the member.\n\nThe LIBRARIAN is network based.  Users \"connect\" using VTAM LU 6.2\nor TCP/IP.\n\nThe server or back-end can be run as a JOB or started task (STC).\nUsers may interface to the LIBRARIAN either though batch or an SPF\ndialog.\n\nThe LIBRARIAN can manage multiple libraries.  This allows one\nLIBRARIAN to manage SOURCE, MACRO, JCL, etc libraries.\n\nLibraries are KSDS VSAM clusters.\n\nMembers in the library may be stored in a compressed form.\nUser exit LIBUX01 allows you to use the LIBRARIAN supplied\ncompression, use a compression method of your own, or turn\ncompression off.  The librarian compression mechanism averages\nabout a 4-to-1 compression ratio.\n\nThis version of the LIBRARIAN allows you to add up to 5 lines of\ncomments about a member for documentation.  These comments are\nnot considered a part of the member itself.\n\nThe LIBRARIAN allows for up to 32,767 versions of a given member.\n\nWhen a user selects a library, by default only the highest\nversion of members are listed.  If you want to see all versions\nof members, use the \"A\" (for all) or \"F\" (for full) line command.\n\n\nThe VSAM key used in the KSDSs allows approximately 2 billion\n(a 4 byte binary field) blocks of source data.  Each block\nis up to 8K in size.  If data compression is used, the blocks\ncontain compressed data.  The amount of data that can be stored\nin a library is usually limited only by the amount of disk space\navailable.\n\nUsing an network interface was to allow users to\naccess a library without having to log-in to the system\nwhere the library actually lives.  You could have a system\nat a central location serving remote offices.  If you have\nmultiple LPARs, users can access libraries on any of the\nLPARs while logged in to only one of the LPARs.\n\nSeveral supporting utilities are also supplied.\n  .  LIBINIT     Initializes a new library.\n  .  UTIL0001    Loads members to a library \"offline\"\n  .  UTIL0002    Unloads a library to a sequential file\n  .  UTIL0003    Converts a source file to compressed form\n  .  UTIL0004    Detail library status report.\n  .  UTIL0005    Unloads members to a sequential file in\n                 LIBRARIAN \"export\" format\n  .  UTIL0006    Imports members from a sequential file\n                 in LIBRARIAN \"export\" format\n  .  UTIL0007    Loads members of a PDS directly to a library\n\n\nTo create a new library,\n  . define the VSAM KSDS\n    The KSKS must have \"KEYS(15 0)\" and \"RECORDSIZE(95 8000).\n  . Initialize the library with LIBINIT.\n\n\nOnce a library has been created you can add new members\nwith the offline utility, UTIL0001, 'import' members\nwith utility UTIL0006, load members of a PDS or you can\nstart using it immediately with the LIBRARIAN.\n\nTo access a library with the LIBRARIAN, you can add\ncontrol statements to the start up parameters or you\ncan use the \"DEF[INE]\" command from a system console.\n\nWhen libraries are CLOSEd, they are dynamically de-allocated\nvia DYNALLOC (SVC 99).  This allows you to do offline\nmaintenance on a library.  For example you could re-allocate\nthe library to increase the size or move the library\nto a different DASD volume without stopping the LIBRARIAN.\n./ ADD NAME=BATCH    0100-09250-09250-0914-00129-00129-00000-DOCLIB\nUse the LIBRARIAN from batch\n\nJCL\n     //LIBRARY  EXEC PGM=CALLSUB\n     //STEPLIB  DD DSN=..................,DISP=SHR\n     //SYSPRINT DD SYSOUT=*\n     //SYSIN    DD *\n          .\n        Your control statements here\n          .\n     /*\n     //\n\n\nThis utility is not very sophisticated (neither am I).\n\nActually this was a \"quick and dirty\" utility to test\nLIBSUB.\n\nThis interface still does not support TCP/IP.\n\nAll control statements have the command in columns 1 to 9.\nParameters for the control statements begin in column 10.\n\nControl statements are:\n\n  LIB APPL    The VTAM APPLID of the LIBRARIAN server.\n              The space in the command \"LIB APPL\" is required.\n\n  LIBRARY     The 1 to 8 character library name.\n\n  MEMBER      The 1 to 8 character member name.\n\n  VERSION     The 1 to 5 digit version number for the member.\n\n  FUNCTION    The library function.  Valid functions are:\n\n        CHECKIN            Check in a member\n        CKIN\n        IN\n\n        CHECKOUT           Check out a member\n        CKOUT\n        OUT\n\n        COM                Updates the comments for a member\n        COMM\n        COMMENT\n        COMMENTS\n        DESC\n        DESCRIP\n        DESCRIPT\n        DOC\n        DOCS\n        DOCUMENT\n\n        DEL                Delete a member\n        DELETE\n        REMOVE\n\n        LIB                Gets a list of available libraries\n        LIBS\n        LIB LIST\n\n        MEM                Gets a list of members in a library\n        MEMS\n        MEM LIST\n\n        VIEW               View a member\n\n  MSG 1       Up to 72 characters of description or documentation.\n    to        This utility allows up to 5 lines of documentation.\n  MSG 5       MSG statements do not have to be in sequential order.\n              If you give MSG 1 and MSG 4, then lines 2 and 3 of\n              the member's comments would be blank.\n\n  UDSN        The name of your dataset or PDS that will be used\n              as the source for a member on a CHECK IN or the\n              output for any other command.\n\n  UMEM        If the dataset name specified for UDSN is a PDS,\n              this is the name of the member.\n\n  CALL        Calls the LIBRARIAN with the parameters up to the\n              point where the CALL statement is in the stream of\n              control statements.\n\n\nControl statement parameters are saved as they are read and are\nnever \"cleared\"... this can cause unexpected results.\n\nLet's say you are going to CHECK IN two or members with one\nexecution of the  utility.  You give MSG 1, MSG 2, and MSG 3\nfor the first member.  Then you give have another MEMBER and\nUMEM statements and MSG 1 for the comments for the second\nmember.  The second member would get the 'residual' data from\nthe MSG 2 and MSG 3 from the first member.  To \"clear\"  MSG 2\nand MSG 3, you need to have MSG 2 and MSG 3 statements with\ncolumns 10 to 80 left blank.\n\nVersion defaults to 1.  If you give a VERSION statement, that\nversion remains in effect until you give another VERSION statement.\n\n\n\nExample:\n\n      LIB APPL PRODLIB\n      LIBRARY  SOURCE\n      VERSION  00001\n      UDSN     WORKING.SOURCE\n      UMEM     UTIL1\n      MEMBER   PROGRAM1\n      FUNCTION CHECK IN\n      CALL\n      UMEM     UTILX\n      MEMBER   SUB1\n      FUNCTION CHECK IN\n      CALL\n\n  This would reference library SOURCE that is being managed by\n  the LIBRARIAN using VTAM APPL name PRODLIB.  Member UTIL1 from the\n  user's dataset called WORKING.SOURCE would be CHECKED IN to the\n  library as member PROGRAM1.  Since there is no UDSN statement\n  between the first and second CALL statements, the dataset on the\n  first (only UDSN) statement is still in effect.  The second CALL\n  would CHECK IN member UTILX from dataset WORKING.SOURCE into the\n  SOURCE library as member SUB1.  There are no MSG x statements so\n  both members would be stored with no comment/description data.\n./ ADD NAME=CONSOLE  0100-09250-09250-0914-00105-00105-00000-DOCLIB\nConsole interface\n\nThe librarian allows commands to be issued via the MVS MODIFY (F)\nand STOP (P) commands.\n\nThe commands available are:\n\n    CLOSE          Close a library\n\n    DEF            Define a library\n    DEFINE\n\n    KILL           Kill a user's connection to the LIBRARIAN\n\n    LIB            Display the libraries and their OPEN/CLOSE state\n    LIBS\n\n    LIBSTAT        Display statistics of the library activity\n\n    OPEN           Open a library\n\n    SNAP           Take a SNAP DUMP (SNAP shot)\n\n    USER           Display the users currently connected\n    USERS\n\n    SHUT           Shutdown the server\n    STOP\n    QUIT\n\n    ?              List the commands\n\n\nCLOSE command\n     CLOSE,llllllll or CLOSE,ALL\n\n         llllllll must be the name of a library defined on a\n         LIBRARY start up control statement or defined via a\n         previous DEF or DEFINE console command.\n\n         The library must 'idle' before it can be CLOSEd.  You\n         can determine that status of a library by issuing the\n         \"LIBS\" command.  Any active users must log-out or be\n         terminated via the \"KILL\" command before a library can\n         be CLOSEd.\n\n\n\nDEF or DEFINE command\n     DEF[INE],llllllll,dsn\n\n         llllllll will be used for the library's name.  This\n         is the name you will need to use on future console\n         commands to OPEN or CLOSE this library.  The initial\n         state of a library defined via the console is CLOSED.\n         dsn is the VSAM cluster name of the library.  The\n         library will need to be initialized with the LIBINIT\n         utility before it can be OPENed.\n\n\nOPEN command\n     OPEN,lllllll or OPEN,ALL\n\n         llllllll must be the name of a library defined on a\n         LIBRARY start up control statement or defined via a\n         previous DEF or DEFINE console command.\n\n\nKILL command\n     KILL,uuuuuuu or KILL,ALL\n\n         uuuuuuuu must be the USER ID of a user that is currently\n         using the LIBRARIAN or 'ALL'.\n\n\n\nLIB or LIBS command\n     Displays the libraries that have been defined and their\n     OPEN/CLOSE state and lists any users currently using the\n     library.\n\n\n\nLIBSTAT\n     Displays detail statistics for each library.\n\n\n\nUSER[S]\n     Displays the users currently connected.  For each user\n     the library and last server function they used is shown.\n\n\n\nSNAP\n     Requests the server make a SNAP DUMP.\n     The server will dyanmically allocate DD LIBSNAP with\n     option CLOSE=RELEASE.  The SYSOUT class is specified\n     by the SNAPCLAS parameter to the OPTIONS macro in the\n     LIBOPT SOURCE library member.\n\n\n\nSHUT/STOP/QUIT or the MVS \"STOP (P)\" command\n     Shuts down the LIBRARIAN server\n./ ADD NAME=INSTALL  0100-09250-09250-0914-00135-00135-00000-DOCLIB\n      Estimated space required on a 3390:\n            Library             RECFM  LRECL BLKSIZE   PRI SEC  DIR\n            DOC                   FB     80    4000      5   5    5\n            ISPPLIB               FB     80    4000      5   5    5\n            JCL                   FB     80    4000      5   5    5\n            MACLIB                FB     80    4000      5   5   10\n            OBJECT                FB     80    4000     10   5   10\n            SOURCE                FB     80    4000     60  15   20\n            LOADLIB               U       0    6144     10  10   10\n            HISTORY (optional)    FB    104    5200\n                   The space for the history file will depend on\n                   how many files are checked-in or deleted.\n\n\n  .  I took a lot of liberties with labels in the source code.\n     You will need to use IEV90 or later assembler.\n\n  .  As is the LIBRARIAN does not need to be in an APF authorized\n     library.  If I ever get the authorization written to call RACF,\n     it will need to be APF authorized to make the RACF calls.\n\n  .  If you want to use VTAM for user-server communication, the\n     LIBRARIAN will need a VTAM application id (APPLID).  Also each\n     user will will need an APPLID.\n\n     The users will use the names in the UACB list coded on the\n     OPTIONS macro in the LIBOPT source member.  Once you have\n     decided what VTAM application names to use, enter the names\n     for the users on the OPTIONS macro in the LIBOPT member of\n     the SOURCE library.  The APPLIDs used for user sessions are\n     re-used.  That is the number of names in the UACB list is the\n     maximum number of users that can communicate with the LIBRARIAN\n     at one time.\n\n     For an example assume the LIBRARIAN will use APPLID PRODLIB\n     and users will use LIBUSER0, LIBUSER1, LIBUSER2, and LIBUSER3.\n     You would code UACB=(LIBUSER0,LIBUSER1,LIBUSER2,LIBUSER3) on\n     the OPTIONS in member LIBOPT of the SOURCE library.  PRODLIB\n     would need to be specified on APPLID= control statement for\n     the LIBRARIAN start up parameters.  This would allow up to\n     four users to use the LIBRARIAN at one time.\n\n     Have your VTAM administrator add the APPLIDs to VTAM.\n\n  .  If you are going to use TCP/IP decide which PORT number\n     you want the server to LISTEN on.\n\n  .  Allocate the libraries.\n\n  .  Edit the members of the JCL library.\n       .  Add valid JOB statements\n       .  If you are going to add the LIBRARIAN LOADLIB to your\n          LINKLST, remove the STEPLIB DD statements.  Otherwise\n          change the DSN on the STEPLIB DD statements.\n\n  .  Edit the ASMLINK JCL member.\n       .  Update the JOB statement\n       .  Change the SYSOUT class(es) if necessary\n       .  Change the DSN on the SYSLIB DD in the IEV90 step to\n          the name you used for the MACRO library\n       .  Change the DSN on the SYSPUNCH DD in the IEV90 step to\n          the name you used for the OBJECT library\n       .  Change the DSN on the SYSIN DD in the IEV90 step to\n          the name you used for the SOURCE library\n       .  Change the DSN on the SYSLIB DD in the LINK step to\n          the name you used for the OBJECT library\n       .  Change the DSN on the SYSLMOD DD in the LINK step to\n          the name you used for the LOADLIB library\n\n  .  Update the LIBOPT member in the SOURCE library.\n       . Add the VTAM APPL names that users will use for\n         communication with the LIBRARIAN.\n\n  .  Determine if you want to use the LIBRARIAN's built in data\n     compression, replace the compress/decompress with your own\n     compression mechinism, or turn compression off (LIBUX01).\n\n  .  Add code for security to LIBUX02.\n\n  .  User exit 3 (LIBUX03) identifies the user by examining SMF\n     and RACF control blocks.  If you use some other a security\n     system other than RACF, you may need to update LIBUX03.\n\n  .  Submit ASMLINK to assemble and LINK-EDIT the LIBRARIAN.\n\n  .  Optionally add the LIBRARIAN LOADLIB to the LINKLST.\n\n  .  Define the libraries you will use.\n       Use DEFLIB as a model.\n       Change the CLUSTER, DATA, and INDEX component names\n       Change the VOLUMES parameter\n       Change the TRACKS\n       Change the library description records (SYSIN statements)\n         for LIBINIT.\n\n  .  If you are going to run the LIBRARIAN as a started task\n     (STC), you will need a data set or PDS member for the\n     start-up parameters and you will need to change the\n     LIBIN DD statement to refer to this data set or PDS member.\n     If you use RACF, you will need to update ICHRIN03 or define\n     a user with the same name as the STC PROC name to allow the\n     STC to access data sets, etc.\n\n\n  .  Edit the start up parameters.\n     See the LIBSTC member of the DOC library for the\n     control statements.\n\n  .  Copy the LIB and LIB2 REXX execs to a library accessible\n     to SPF.\n\n  .  Add the library used for the LIBRARIAN load modules to\n     a library accessible to SPF.  If you have TSOPLUS, the\n     STEPLIBX facility can be used in the REXX execs.\n\n  .  Edit the REXX execs if necessary.  If you changed the\n     names of the REXX execs, be sure to change the name of\n     LIB2 in exec LIB (LIB calls LIB2).  Change the name of\n     the panel library in the LIBDEF for ISPPLIB.  Add the\n     APPLID(s) of the LIBRARIAN(s) to the LIST variable in\n     the LIB REXX exec.\n\n  .  Optionally add the LIBRARIAN as an option to a menu.\n\n  .  Start up the LIBRARIAN.  Submit the JOB or start the STC.\n\n\n  .  Log-in to TSO.\n\n  .  Start a session to the LIBRARIAN\n       If the LIBRARIAN was added to a menu, select the menu option\n       otherwise use SPF option 6 and then enter the name of you\n       used for the LIB REXX exec.\n\n  .  You should be going.  Report problems to someone else!\n./ ADD NAME=LIB      0100-09250-09250-0914-00051-00051-00000-DOCLIB\n/* REXX ------------------------------------------------------------ */\n/*                                                                   */\n/* ----------------------------------------------------------------- */\n\n /* TRACE R */\n\nARG PARMS\n\nLIST = \"APPL1 APPL2 APPL3  ... \"             < -------------\n\nNBR_WORDS = WORDS(PARMS)\n\nIF NBR_WORDS = 0 THEN\n   DO\n      LIB_APPL = \"YOUR DEFAULT APPLID\"       < -------------\n      LIB_NAME = \"\"\n      ADDRESS TSO ISPEXEC \"CONTROL ERRORS RETURN\"\n      ADDRESS TSO\n        ISPEXEC \"SELECT  CMD(LIB2\" LIB_APPL LIB_NAME\") NEWAPPL(LIB)\"\n      EXIT(0)\n   END\n\nIF NBR_WORDS = 2 THEN\n   DO\n      LIB_APPL = WORD(PARMS,1)\n      LIB_NAME = WORD(PARMS,2)\n      ADDRESS TSO ISPEXEC \"CONTROL ERRORS RETURN\"\n      ADDRESS TSO\n        ISPEXEC \"SELECT  CMD(LIB2\" LIB_APPL LIB_NAME\") NEWAPPL(LIB)\"\n      EXIT(0)\n   END\n\nDO I = 1 TO NBR_WORDS\n   IF POS(WORD(PARMS,I),LIST) > 0 THEN\n      DO\n         LIB_APPL = WORD(PARMS,1)\n         LIB_NAME = \"\"\n         ADDRESS TSO ISPEXEC \"CONTROL ERRORS RETURN\"\n         ADDRESS TSO\n      ISPEXEC \"SELECT  CMD(LIB2\" LIB_APPL LIB_NAME\") NEWAPPL(LIB)\"\n         EXIT(0)\n      END\nEND\n\nLIB_APPL = \"DEFAULT APPL\"                       < -----------------\nLIB_NAME = WORD(PARMS,1)\nADDRESS TSO ISPEXEC \"CONTROL ERRORS RETURN\"\nADDRESS TSO\n  ISPEXEC \"SELECT  CMD(LIB2\" LIB_APPL LIB_NAME\") NEWAPPL(LIB)\"\nEXIT(0)\n\n./ ADD NAME=LIBINIT  0100-09250-09250-0914-00020-00020-00000-DOCLIB\nLIBINIT   Initialize a library\n\nJCL\n       //.......  JOB .............\n       //LIBINIT EXEC PGM=LIBINIT\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //SYSPRINT DD SYSOUT=*\n       //LIB      DD DSN=...library cluster...,DISP=SHR\n       //SYSIN    DD *\n\n           Your control statements here\n\n       /*\n       //\n\nControl statements\nAll SYSIN records are copied to the library as library description\nrecords.  There are no restrictions.  The contents of the first\nrecord is what will appear in the library description in the\nuser SPF panels and in the responses to the LIB[S] console command.\n./ ADD NAME=LIBIP    0100-09250-09250-0914-00046-00046-00000-DOCLIB\n/* REXX ------------------------------------------------------------ */\n/*                                                                   */\n/* ----------------------------------------------------------------- */\n\nTRACE 'O'\n\nARG PARMS\n\nNBR_WORDS = WORDS(PARMS)\n\nDEFAULT_HOST=\"abc.xyz.com\"\nDEFAULT_PORT=\"nnnn\"\n\nIF NBR_WORDS = 0 THEN\n   DO\n      LIB_HOST = 'H=' || DEFAULT_HOST\n      LIB_PORT = 'P=' || DEFAULT_PORT\n      LIB_NAME = \"\"\n      ADDRESS TSO ISPEXEC \"CONTROL ERRORS RETURN\"\n      ADDRESS TSO\nISPEXEC \"SELECT  CMD(MYLIB2\" LIB_HOST LIB_PORT LIB_NAME\") NEWAPPL(LIB)\"\n      EXIT(0)\n   END\n\nIF NBR_WORDS = 2 THEN\n   DO\n      LIB_HOST = 'H=' || WORD(PARMS,1)\n      LIB_NAME = WORD(PARMS,2)\n      ADDRESS TSO ISPEXEC \"CONTROL ERRORS RETURN\"\n      ADDRESS TSO\nISPEXEC \"SELECT  CMD(MYLIB2\" LIB_HOST LIB_PORT LIB_NAME\") NEWAPPL(LIB)\"\n      EXIT(0)\n   END\n\nLIB_HOST = 'H=' || WORD(PARMS,1)\n\nIF DATATYPE(LIB_HOST) = 1 THEN\n         LIB_NAME = \"\"\n      ELSE\n         LIB_HOST = 'P=' || DEFAULT_LIBRARY_ADDR\n\nADDRESS TSO ISPEXEC \"CONTROL ERRORS RETURN\"\nADDRESS TSO\nISPEXEC \"SELECT  CMD(MYLIB2\" LIB_HOST LIB_PORT LIB_NAME\") NEWAPPL(LIB)\"\nEXIT(0)\n\n./ ADD NAME=LIBSTC   0100-09250-09250-0914-00176-00176-00000-DOCLIB\nLIBSTC    LIBRARIAN server\n\nJCL\n           //.......  JOB .............\n           //LIBRARY  EXEC PGM=LIBSTC\n           //STEPLIB  DD DSN=..............................,DISP=SHR\nOptional   //LIBHIST  DD DSN=... changed source history ...,DISP=SHR\n           //LIBPRT   DD SYSOUT=*\n           //LIBIN    DD *\n                 .\n               Control statements\n                 .\n           /*\n           //\n\nControl statements\nStatements start in column 1.  Comments may be used at any time.\nStart a comment with an asterisk (*) in column 1.\nStatements may not be continued.\n\nAPPLID=  Optional.\n         1 to 8 character VTAM application name\n\nPORT     Optional.\n         TCP/IP PORT number.  Must be numeric.  Range 1025-65535.\n\n   ** You may specify both APPLID and PORT.  At least one is required.\n\n\n\nLIBRARY=llllll,DSN=\n     or\nLIBRARY=llllll,OPEN=YES\n\n        Defines a library to the LIBRARIAN.\n           \"llllllll\" is a 1 to 8 character library \"name\".\n           This is the name you will use in console commands to\n           OPEN or CLOSE this library.\n\n           DSN= is the library's VSAM cluster name.  This is\n           the same name used in the DEFLIB job used to create\n           the library.\n\n        You may define multiple libraries.\n\n        If you want the librarian to automatically open a\n        library at server start-up, include a \"LIBRARY=\"\n        statement with the OPEN=YES parameter.  Note that this\n        takes two statements, one to define the library, the\n        second to indicate you want the library open at server\n        start-up.\n\n\n\nSNAPCLASS=c\n        A one character class used for SNAP DUMPs\n\n\nSYSNAME=\n       A 1 to 20 character librarian name\n       The info entered is displayed on user's SPF screens.\n       This is a means for the user's to verify they have\n       connected to the correct LIBRARIAN.\n       This is an infomation only parameter.\n\nXUSER=SMFID,USER1,USER2\n       If users can connect from other systems, their userid\n       may not be the same on both the remote and local system.\n       XUSER statements allow you to \"equate\" a user id on\n       a remote system to an id on the local system.\n\n       SMFID is the 1 to 4 character SMF name of the remote\n       system.  USER1 is the user's id on the remote system.\n       USER2 is the user's id on the local system.\n\n       For example assume a user logs-in as JOEBLOW on system\n       MVS1 and the same user logs in on system MVS2 as JOHNDOE.\n       Assume also that the LIBRARIAN is running on system\n       MVS2.  You could include a LIBRARIAN start up control\n       statement that says \"XUSER=MVS1,JOEBLOW,JOHNDOE\".\n       When JOEBLOW on MVS1 connects to the LIBRARIAN running\n       on MVS2, the LIBRARIAN would use JOHNDOE for the user's ID.\n       If the user logs in on MVS2 they would use their MVS2 ID,\n       JOHNDOE... in either case the LIBRARIAN uses JOHNDOE for\n       the user.\n\n\n\n\n\nOperation of the LIBRARIAN server\n\nYou do not include DD statements for libraries.  The LIBRARIAN\nuses DYNALLOC (SVC 99) to allocate and de-allocate libraries.\nWhen a library is OPENed, the library will be allocated, then\nOPENed.  When a library is CLOSEd, it is CLOSEd and de-allocated.\nThis allows you to CLOSE individual libraries, back them up,\nre-allocate them, etc without having to shutdown the LIBRARIAN.\n\nIf the LIBHIST DD statement is present when the server is\nstarted, the LIBRARIAN will ATTACH a \"changed history\" subtask.\nWhen users CHECK IN or DELETE members, the existing member's\nsource is written to the LIBHIST dataset before the CHECK IN\nor DELETE.  A header record is written to identify the member.\nArchiving the \"changed source history\" can allow you to recover\na member to a known date and time.\n\nEach user that connects with the LIBRARIAN uses a VTAM LU 6.2\nor TCP/IP connection.  Each user that uses VTAM requires a\nVTAM APPLID.  The list of APPLIDs available for users needs to\nbe coded on the UACB parameter of the OPTIONS macro in the LIBOPT\nmember of the SOURCE library.  These APPLIDs are reused.  The\nnumber of concurrent VTAM users is limited by the number of user\nAPPLIDs.\n\nWhen a user connects to a LIBRARIAN, the LIBRARIAN server\nATTACHes an MVS subtask.  Each user is independently system\ndispatchable so users can perform work concurrently.  If one\nuser causes his/her subtask to be WAITed for some reason, the\nother users should not be affected.\n\nThe LIBRARIAN uses multiple MVS subtasks internally.  This is\nto allow as much concurrent work as possible.  For example\nthere is a CONSOLE subtask so commands entered by an operator\ncan be processed concurrenty with work being done by a user.\n\nWhen the LIBRARIAN server is shutdown, it prints some\nstatistics.  These should help you identify how heavily\n(or not) at library is being used.\n\nThe LIBRARIAN also logs to SYSPRINT all user connections and\nthe LIBRARIAN functions they have performed.  This allows\nuser activity to be audited.\n\n\nSample start up JCL\n\n            //LIBRARY  EXEC PGM=LIBSTC\n            //STEPLIB  DD DSN=..................,DISP=SHR\n            //LIBHIST  DD DSN=..................,DISP=SHR\n            //LIBPRT   DD SYSOUT=*\n            //LIBIN    DD *\n            SYSNAME=PRODUCTION LIBRARY\n            APPLID=PRODLIB\n            PORT=4321\n            LIBRARY=SOURCE,DSN=PROD.LIB.SOURCE\n            LIBRARY=SOURCE,OPEN=YES\n            LIBRARY=MACLIB,DSN=PROD.LIB.MACLIB\n            LIBRARY=MACLIB,OPEN=YES\n            SNAPCLASS=Z\n            XUSER=MVST,TEST1,PROD1\n            /*\n            //\n\n  In this example assume the LIBRARIAN will run on system MVSP.\n       The \"changed source history\" is active\n       The LIBRARIAN system name is \"PRODUCTION LIBRARY\"\n       The LIBRARIAN would use VTAM APPLID PRODLIB and TCP/IP port 4321.\n       There are two libraries called SOURCE and MACLIB.\n       The VSAM cluster name for library SOURCE is \"PROD.LIB.SOURCE\"\n       The VSAM cluster name for library MACLIB is \"PROD.LIB.MACLIB\"\n       Both libraries SOURCE and MACLIB would be OPENed at start up.\n       SNAP commands would create SNAP dumps to LIBSNAP with SYSOUT\n         class Z.\n       If user TEST1 connects from system MVST, the LIBRARIAN will\n         use PROD1 for their user id.\n\n  Both libraries need to be initialized with LIBINIT before\n  starting up the LIBRARIAN.\n\n\n\n\n\n\n\n./ ADD NAME=LIBSUB   0100-09250-09250-0914-00078-00078-00000-DOCLIB\nLIBSUB is a subroutine that is \"CALLABLE\" from programs that\nuse standard subroutine linkage.\n\nLIBSUB may be called by either 24-bit or 31-bit callers.\nLIBSUB is re-entrant.\n\n     Parmeter list:\n            Library APPLID          8 characters\n            Library name            8 characters\n            Member name             8 characters\n            Member version          2 bytes, binary\n            Function                8 characters\n            User dataset           44 characters\n            User member             8 characters\n            Return code             1 character\n            Message 1              80 characters\n            Message 2              80 characters\n            Message 3              80 characters\n            Message 4              80 characters\n            Message 5              80 characters\n\n\n\nSample parameter list in assembler language:\n\n       PARM_LIST         DS       0c\n       PARM_APPL         DS       CL8\n       PARM_LIB_NAME     DS       CL8\n       PARM_MEM_NAME     DS       CL8\n       PARM_MEM_VERSION  DS       XL2\n       PARM_FUNCTION     DS       CL8\n       PARM_USER_DSN     DS       CL44\n       PARM_USER_MEMBER  DS       CL8\n       PARM_RETURN_CODE  DS       C\n       PARM_MSG          DS      0CL80\n       PARM_MSG_1        DS       CL80\n       PARM_MSG_2        DS       CL80\n       PARM_MSG_3        DS       CL80\n       PARM_MSG_4        DS       CL80\n       PARM_MSG_5        DS       CL80\n\n\n\nSample parm list in COBOL\n       01 LIBRARIAN_PARM_LIST.\n          05 LIBRARIAN_APPL        PIC X(8).\n          05 LIBRARIAN_LIBRARY     PIC X(8).\n          05 LIBRARIAN_MEMBER      PIC X(8).\n          05 LIBRARIAN_VERSION     PIC S9(4) COMP.\n          05 LIBRARIAN_FUNCTION    PIC X(4).\n          05 LIBRARIAN_USER_DSN    PIC X(44).\n          05 LIBRARIAN_USER_MEMBER PIC X(8).\n          05 LIBRARIAN_RETURN_CODE PIC X.\n          05 LIBRARIAN_MSG_1       PIC X(80).\n          05 LIBRARIAN_MSG_2       PIC X(80).\n          05 LIBRARIAN_MSG_3       PIC X(80).\n          05 LIBRARIAN_MSG_4       PIC X(80).\n          05 LIBRARIAN_MSG_5       PIC X(80).\n\n\nExample of calling SUBLIB from assembler:\n          MVC   PARM_APPL,=CL8'PRODLIB'\n          MVC   PARM_LIB_NAME,=CL8'SOURCE'\n                  .\n                  .\n                  .\n          MVC   PARM_FUNCTION,=CL8'GET MEMS'\n          LA    R1,PARM_LIST\n          L     R15,=V(LIBSUB)\n          BASSM R14,R15\n\n\n\n\nExample of calling SUBLIB from COBOL.\n\n          CALL 'LIBSUB' using LIBRARY_PARM_LIST.\n\n./ ADD NAME=LIB2     0100-09250-09250-0914-00030-00030-00000-DOCLIB\n/* REXX ------------------------------------------------------------ */\n/*                                                                   */\n/*    THIS EXEC EXPECTS YOU TO HAVE TSOPLUS.                         */\n/*                                                                   */\n/*    IF YOU DON'T USE TSOPLUS, YOU WILL NEED TO REMOVE THE          */\n/*    \"STEPLIBX\" STATEMENTS AND ALLOCATE THE LOADLIB IN YOUR         */\n/*    TSO LOGON PROC OR POSSIBLY VIA A ISPLLIB?                      */\n/*                                                                   */\n/*                                                                   */\n/* ----------------------------------------------------------------- */\n\n /* TRACE R  */\n\nPARSE UPPER ARG APPL LIB\n\nADDRESS TSO FREE \"FI(LIBTEMP)\"\nADDRESS TSO ALLOC \"FI(STEPLIBX) DA('.......LIB.LOADLIB'  ***) SHR REUSE\"\nSAVELIBX = TSOPEXT\n\nADDRESS TSO ISPEXEC \"LIBDEF ISPPLIB DATASET ID('.......LIB.ISPPLIB')\"\n\nADDRESS TSO ISPEXEC \"SELECT PGM(LIBTSO) PARM(\" || APPL LIB || \")\"\n\nIF SAVELIBX = '' THEN\n   ADDRESS TSO FREE \"FI(STEPLIBX)\"\nELSE\n   ADDRESS TSO ALLOC \"FI(STEPLIBX) DA(\" SAVELIBX \") SHR REUSE\"\n\nADDRESS TSO FREE \"FI(LIBTEMP)\"\nEXIT (0)\n./ ADD NAME=PRIMARY  0100-09250-09250-0914-00054-00054-00000-DOCLIB\nPrimary commands\n\nOn \"Available libraries display\"\n\nSTATus displays the active users and the status of the libraries.\n\n\n\n\n\n\n\nOn the member display:\n\nA      Administration\nAdmin\n\nD      Delete\nDEL\nDELETE\n\nI      Check in\nIN\n\nJ      Submit member as a batch job\nJOB\nSUB\nSUBMIT\n\nL      Locate (scroll to a member)\nLOCATE\n\nO      Check out a member\nOUT\n\nS      Select (view details) of a member\nSEL\nSELECT\n\n\nSTATus displays the active users and the status of the libraries.\n\nV      View (get a copy of a member)\nView\n\n\n\n\n\nFor example on the command line,\n  \"JOB IEFBR14\" would submit member IEFBR14.\n\nNote:  For command line, the highest version of a member is used.\n\n./ ADD NAME=USER     0100-09250-09250-0914-00317-00317-00000-DOCLIB\n              General info type stuff\nMember identification is made up of two parts, the NAME and VERSION.\nYou may have mutliple versions (more than two) of the same member.\nAny member/version may be CHECKED IN and CHECKED OUT.\n\nWhen creating a new member, the VERSION will be forced to 1.\n\nTo make a new version of an existing member, use the 'X' line\ncommand.\n\nOnly the highest (or only) version of a member may be deleted.\nIf you want to delete all versions of a member, delete them one\nat a time in reverse version order.\n\nOptionally, when the LIBRARIAN server is started up, a \"changed\nmember history\" file may be kept.  Any time a member is CHECKED IN\nor DELETEd, the existing member's source will be written to this\nhistory file.  The history file may be used to recover source\nto a known date and time.\n\nTo use the LIBRARIAN, start up the LIBRARIAN SPF interface.\n  . This may be assigned to an option on an SPF menu\n  . if LIBRARIAN is not a menu option, enter the name given\n    to the REXX EXEC when the LIBRARIAN was installed.\n\n\nYou should see a list of the libraries available and the OPEN/CLOSE\nstate of each library.\n\nThe list is scrollable.  You may need to scroll down to find the\nlibrary you need.  Only libraries that are OPEN may be selected.\n\nThere is a line command area to the left of each library.\n\nUse the TAB keys to tab down to the library you need and enter a\nnon-blank character in the line command.  Press ENTER.  You will\nget a list of members in the library.  Only the highest version\nnumber of a member will be displayed.  If you want all versions\nof members to be listed, use line command 'A' (for all) or 'F'\n(for full) list.\n\n\n\n\n\n\n\nYou should get a list of members in the library you selected.\nYou should also see message LIBTDMEM05 that tells you how many\nmembers there are in this library.  The heading will tell you\nwhich library you have selected.\n\nInformation displayed per member is the member name, version,\nowner, size and status.  The remainder of the information depends\non the member's CHECK IN/CHECK OUT status.  If the member is\nin CHECK IN status, the time, date, and last user that CHECKED IN\nthe member is displayed.  If the member is in CHECKED OUT state,\nthe time, date, user that last CHECKED OUT the member is displayed.\nOnce you have performed an operation on a member, the CHECK IN/\nCHECK OUT information is over-layed with a message to remind you\nwhat operations you have last performed on which members.\nThe \"R\" line command will restore the CHECK IN/CHECK OUT information.\n\nThe list of members is scrollable.\nThere is a line command area to the left side of each member.\nUse the TAB keys to move the cursor next to the member you need.\n\nLine commands available are:\n\n       A       Administer check in/check out stats of a member\n       B       Browse a member\n       D       Delete a member\n       I       Check in a member\n       J       Submit a member as a batch job\n       L or S  Display detail information for a member\n       O       Check out a member\n       R       Restore the CHECK IN/CHECK OUT information\n       U       Undo (reset CHECK-OUT to CHECK-IN)\n       V       View a member\n       X       Create a new version of a member\n\n\nTo create a new member, enter NEW in the primary command area.\n\n\nYou can return to the list of available libraries by pressing PF3.\n\n\n\nYou can see who is using the LIBRARIAN by entering \"STAT\" or\n\"STATUS\" on the primary command area on the library list display.\nThe information displayed is scrollable.  The STATUS display\nincludes information about the users that are currently connected\nand statistics about the libraries.\n\n\n\n\n\n\n            Administer check in/check out status\nAt times you may need to change the check-in/check-out status\nof a member.  Or you may need to change who has a member checked\nout.  For example someone may check out a member and while they\nhave it checked out they go on vacation or leave the company.\nThe \"A\" option will let you change the status or change who has\nthe member checked out.  If you change the status to check-out,\nthe librarian changes the 'last check out' time stamp to the\ncurrent time and date.  The librarian makes no checks to validate\nthe user id you enter... that is it does not call RACF, etc to\nverify the user is defined to RACF.\n\n\n\n\n\n                 CHECK OUT a member\nEnter \"O\" in the line command for the member.  Press ENTER.\n\nOnly members in CHECKED IN state can be CHECKED OUT.\n\nThe next screen will show you the library, member, and VERSION\nof the member you are CHECKing OUT.  The LIBRARIAN is going to\nmake a copy of the member into a data set or PDS member that you\nprovide and change the STATUS to CHECKED OUT.  Enter the name\nof the dataset where you want the member to be written.  If the\ndataset is sequential, leave the member name blank.  If the\ndataset is a PDS, enter the member name (it does not have to be\nthe same as the name in the LIBRARIAN library).  If the data set\nor PDS member already exists, you have to enter \"Y\" or \"YES\"\nin \"Replace/over-write\".\n\nPress ENTER.\n\nThe LIBRARIAN will make a copy of the member into the dataset or\nPDS member you specified.  The member's status will be changed\nto CHECKED OUT.  The time and date and your ID will be recorded\nin the last check-out information.  You will be returned to the\nmember list display.\n\nUntil you CHECK IN the member no one else (even you) will be\nallowed to CHECK OUT the member.  Only the user that has a member\nCHECKED OUT can CHECK IN that member.  Members may be VIEWed\nor BROWSEd at all times.\n\n\n\n\n\n\n\n\n                 CHECK IN a member\nEnter \"I\" in the line command for the member.  Press ENTER.\n\nYou cannot CHECK IN a member unless you have the member\nCHECKED OUT.\n\nThe next screen will show you the library, member, and VERSION\nof the member you are CHECKing IN.  The LIBRARIAN is going to\nreplace the source for this member.  The LIBRARIAN reads the\nsequential dataset or PDS member you specify, compresses the\ndata and stores it in the library.  The time, date, and your\nuser id will be recorded in the last check-in information.\nThe size will also be updated.\n\nEnter the name of the data set that has the source for the\nmember you are CHECKING IN.  If the dataset is a sequential\nfile, leave the member name blank.  If the dataset is a PDS,\nenter the member name.  The member name does not have to be\nthe same name as the LIBRARIAN's name.\n\nAt the bottom of the screen are the comments that have been\npreviously recorded for this member.  You may over-type the\ncomments.\n\nPress ENTER.\n\nThe LIBRARIAN will read your source dataset or PDS member\nand store it in the library.  The time, data, and your user\nid will be recorded in the last check-in information.\n\nThe documentation in the library will also be updated with\nthe information you have entered.\n\nYou will then be returned to the member display screen.\nThe CHECK IN/CHECK OUT information will be overlayed with\na message to remind you of the last operation you have\nperformed on this member.\n\n\n\n\n\n\n                 BROWSE a member\nEnter \"B\" in the line command for the member.  Press ENTER.\n\nThe source will be returned and written to a temporary work file\nand SPF browse will be called.  The CHECK IN/CHECK OUT status\nwill not be updated.  You may BROWSE a member regardless of\nthe member's CHECK IN/CHECK OUT state.  You may use any of the\nfunctions of SPF BROWSE to search, scroll, etc.  When you end\nthe BROWSE, the member list will be re-displayed.\n\n\n\n\n\n                 VIEW a member\nEnter \"V\" in the line command for the member.  Press ENTER.\n\nThe next screen will show you the library, member, and VERSION\nof the member you are VIEWing.  The LIBRARIAN is going to make\na copy of the member into a dataset or PDS member that you\nprovide.  The CHECK IN/CHECK OUT status will not be updated.\nVIEWing a member lets you review the source for a member without\nhaving to CHECK OUT the member.  You can VIEW a member regardless\nof the member's CHECK IN/CHECK OUT state.\n\n\n\n           Displaying the detail information for a member\nEnter \"L\" or \"S\" in the line command for the member.  Press ENTER.\n\nThe next screen will show you the library, member, and version\nof the member you are displaying.  Under \"Member status\" is the\nmember's owner (userid of the user that created the member),\nCHECK IN/CHECK out state, size of the member in records,\nnumber of check-outs, date and time the member was created,\ndate, time, and id of the last user that last checked in the member,\nand the date, time, and user that last check out the member.\nUnder \"Documentation\" is up to five lines of any comments that\nhave been previously entered as documenation for the member.\nYou may over-type this information if you wish.  If you update\nthe comments, press ENTER to have the LIBRARIAN update the\ndocumentation information.\n\nPress PF3 to return to the member list display.\n\n\n\n\n\n\n                 DELETE a member\nOnly the highest version of a member can be deleted.  If multiple\nversions of a member exist, delete them one at time in reverse\nnumerical sequence.\n\nEnter \"D\" in the line command for the member.  Press ENTER.\n\nThe next screen will show you the library, member, and version\nof the member you are DELETEing.\n\nYou must enter \"Y\" or \"YES\" in the \"Confirm deletion\".\n\nPress ENTER.\n\nIf the LIBRARIAN's \"Changed source history\" is active, the\nexisting member's source will be written to the history file\nbefore the member is deleted.  This history file could be used\nto recover a member to a known date and time.\n\nWhen a member is deleted, the source and all documentation/comments\nare deleted.\n\n\n\n\n\n                 Create new members\nEnter \"NEW\" on the primary command line.\n\nPress ENTER.\n\nThe next screen will display the library name you are using.\nThe member name will be blank and the version will be forced\nto 1.  Enter the name you want for this member inside the\nLIBRARIAN.  Enter the name of the dataset or PDS that has the\nyour source for this new member.  If your dataset is a PDS,\nenter the name of the member.  The name used for the LIBRARIAN\nname does not have to be the same as the name in your PDS.\nIf you want to save any comments or documentation with this\nnew member, enter them in the area below the \"Documentation\".\n\nPress ENTER.\n\nThe LIBRARIAN will create the new member, copy your source,\nmake you the member's owner, record the time and date when\nthe member was created, record the member's size, and set\nthe status to CHECKED IN.\n\n\n\n                 Undo\nAt times a member may be 'checked out', but never updated.\nRather than having to 'check-in' the member, the user that\nhas the member checked-out can 'undo' the check-out status.\nOnly the user that has the member checked-out can 'undo'\nthe status.  Undo is less overhead than check-in.\n\n\n\n                 Submit a member as a batch job\nThe librarian may be used to control JCL.  The \"J\" line command\nwill cause the librarian to submit the member as a batch JOB.\nThe librarian is network based... the job is submitted by the\nlibrarian STC, not the by the user.  That is if the user is logge-in\non system A and the librarian STC is running on system B, the job\nwill be submitted by the librarian STC on system B.  Members can be\nany state (checked-in or checked-out).\n\nYou can enter \"JOB member\" or \"SUBmit member\" as a primary command.\nThis will cause the librarian to submit the highest version.\nThere is no provision for specifying a version with the command\nline \"JOB/SUBmit\" command.\n./ ADD NAME=UTIL0001 0100-09250-09250-0914-00060-00060-00000-DOCLIB\nUTIL0001  Load a member directly to a library\n\nJCL\n       //.......  JOB .............\n       //UTIL0001 EXEC PGM=UTIL0001\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //SYSPRINT DD SYSOUT=*\n       //LIB      DD DSN=...library cluster...,DISP=SHR\n       //SYSIN    DD *\n\n           Your control statements here\n\n       /*\n       //\n\nControl statements\nControl statements for this utilitiy are a bit confusing.  To allow\nall 80 columns to be used for data, the method used is to have the\ncontrol statment keyword on one statement and the data for that\nkeyword on the next statement.  The exception being the SOURCE\nstatement.  All records after the SOURCE statement are considered\nsource for the member being loaded.  Only one member may be loaded\nper execution of this utility.\n\nThe control statement keywords are:\n  MEMBER\n  DESCRIPTION\n  SOURCE\n\nThere is no provision to specify a VERSION, VERSION is hard-set to 1.\n\nExample:\n       MEMBER\n       MEMBER1\n       DESCRIPTION\n       MEMBER1 DESCRIPTION LINE 1\n       DESCRIPTION\n       MEMBER2 DSECRIPTION LINE 2\n       SOURCE\n       LINE 1 OF SOURCE\n       LINE 2 OF SOURCE\n       LINE 3 OF SOURCE\n       LINE 4 OF SOURCE\n       LINE 5 OF SOURCE\n       LAST LINE OF SOURCE\n\nThis would create a member called MEMBER1.\nThere would be two lines of description that would say:\n    MEMBER1 DESCRIPTION LINE 1\n    MEMBER2 DSECRIPTION LINE 2\nThere would be six lines of source:\n    LINE 1 OF SOURCE\n    LINE 2 OF SOURCE\n    LINE 3 OF SOURCE\n    LINE 4 OF SOURCE\n    LINE 5 OF SOURCE\n    LAST LINE OF SOURCE\n\nThis program is not very \"smart\"... there is limited error checking.\nBe sure you know what you're doing before using this utility.\n./ ADD NAME=UTIL0002 0100-09250-09250-0914-00013-00013-00000-DOCLIB\nUTIL0002  Print all members of a library\n\nJCL\n       //.......  JOB .............\n       //UTIL0002 EXEC PGM=UTIL0002\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //SYSPRINT DD SYSOUT=*\n       //LIB      DD DSN=...library cluster...,DISP=SHR\n       //\n\n\nEach member will start on a new page.  The member's name and version\nwill be printed on the heading on each page.\n./ ADD NAME=UTIL0003 0100-09250-09250-0914-00024-00024-00000-DOCLIB\nUTIL0003  Convert a member to compressed form\n\nJCL\n       //.......  JOB .............\n       //UTIL0003 EXEC PGM=UTIL0003\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //SYSUT1   DD DSN=... source .......,DISP=SHR\n       //SYSUT2   DD DSN=... compressed ...,DISP=SHR\n       //\n\n\nThe data in the source file (SYSUT1) will be read and\ncompressed.  The data written to SYSUT2 will be the\nsame as is recored by the LIBRARIAN.\n\nThis utility calls exit LIBUX01 in the same manner as\nthe LIBRARIAN.  You can use this utility to verify\nthat the compression algorithem you choose is producing\nthe correct results.\n\nSYSUT1 must have RECFM F or FB and LRECL 80.\n\nSYSUT2 will be VB, LRECL 8000, BLKSIZE 8004.\n\n./ ADD NAME=UTIL0004 0100-09250-09250-0914-00011-00011-00000-DOCLIB\nUTIL0004  Detail library status report\n\nJCL\n       //.......  JOB .............\n       //UTIL0004 EXEC PGM=UTIL0004\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //LIB      DD DSN=..library cluster..DISP=SHR\n       //SYSPRINT DD SYSOUT=*\n       //\n\n\n./ ADD NAME=UTIL0005 0100-09250-09250-0914-00030-00030-00000-DOCLIB\nUTIL0005  Create a backup of all or specified members in\n          'EXPORT' format\nJCL\n       //.......  JOB .............\n       //UTIL0005 EXEC PGM=UTIL0005\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //SYSPRINT DD SYSOUT=*\n       //LIB      DD DSN=...library vsam cluster...,DISP=SHR\n       //SYSUT2   DD DSN=...exported members.......,DISP=SHR\n       //SYSIN    DD *\n            .\n          Your control statements here\n            .\n       //\n\n\nALL or specified members will be written to SYSUT2 in LIBRARIAN\n\"EXPORT\" format.\n\nControl statements:\nmmmmmmmm[,vvvv]\n\nmmmmmmmm is the member name\nvvvv is the member version.  If omitted, version defaults to 1.\n\nIf there are no control statements in the SYSIN file, all\nmembers will be EXPORTed.\n\nThe SYSUT2 dataset will have RECFM=VB, LRECL=8000, BLKSIZE=8004.\n\n./ ADD NAME=UTIL0006 0100-09250-09250-0914-00123-00123-00000-DOCLIB\nUTIL0006  Restore members from an 'EXPORT' file\n\nJCL\n       //.......  JOB .............\n       //UTIL0006 EXEC PGM=UTIL0006\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //SYSPRINT DD SYSOUT=*\n       //LIB      DD DSN=...library vsam cluster...,DISP=SHR\n       //SYSUT1   DD DSN=...export file ...........,DISP=SHR\n       //SYSIN    DD *\n            .\n          Your control statements here\n            .\n       //\n\n\nRestore all or specified members of from a LIBRARIAN \"EXPORT\" file.\nThe library is not \"cleared\" by this utility.  Any members in the\nlibrary that are not also in the export file will not be affected.\nThat is if member ABC exists in the library and is not in the\nexport file (SYSUT1), member ABC will still be unchanged in the\nlibrary.\n\n\n\n\n\nControl statements:\n\nRESTORE mmmmmmmm[,vvvv]\n\n    mmmmmmmm is the member name\n    vvvv is the member version.  If omitted, version defaults to 1.\n\n\n\nREPLACE\n\n\n\n\n\n\n\n\nIf no RESTORE statements are specfied, all members will be restored.\n\nIf a member already exists in the library it will not be\noverwritten unless the REPLACE control statement is specified.\n\n\n\n\n\nExamples:\n\n       //.......  JOB .............\n       //UTIL0006 EXEC PGM=UTIL0006\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //SYSPRINT DD SYSOUT=*\n       //LIB      DD DSN=...library vsam cluster...,DISP=SHR\n       //SYSUT1   DD DSN=...export file ...........,DISP=SHR\n       //SYSIN    DD *\n       //\n   All members in the export file will be restored if they\n   do not already exist in the library.\n\n\n\n\n\n\n       //.......  JOB .............\n       //UTIL0006 EXEC PGM=UTIL0006\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //SYSPRINT DD SYSOUT=*\n       //LIB      DD DSN=...library vsam cluster...,DISP=SHR\n       //SYSUT1   DD DSN=...export file ...........,DISP=SHR\n       //SYSIN    DD *\n       RESTORE ABCDEFG\n       //\n   Member abcdefg version 1 will be restored if it is not\n   already in the library.\n\n\n\n\n\n\n       //.......  JOB .............\n       //UTIL0006 EXEC PGM=UTIL0006\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //SYSPRINT DD SYSOUT=*\n       //LIB      DD DSN=...library vsam cluster...,DISP=SHR\n       //SYSUT1   DD DSN=...export file ...........,DISP=SHR\n       //SYSIN    DD *\n       REPLACE\n       //\n   All members found in the export file will be restored\n   to the library.  Any members in the export file that\n   are already in the library will replace the existing\n   member(s).\n\n\n\n\n\n\n       //.......  JOB .............\n       //UTIL0006 EXEC PGM=UTIL0006\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //SYSPRINT DD SYSOUT=*\n       //LIB      DD DSN=...library vsam cluster...,DISP=SHR\n       //SYSUT1   DD DSN=...export file ...........,DISP=SHR\n       //SYSIN    DD *\n       RESTORE ABCDEFG,1\n       RESTORE WXYZ,3\n       REPLACE\n       //\n   Member ABCDEFG version 1, and member WXYZ version 3\n   will be restored from the export file.  If either or\n   both members already exist in the library, they will\n   be replaced.\n./ ADD NAME=UTIL0007 0100-09250-09250-0914-00018-00018-00000-DOCLIB\nUTIL0007  Load members of a PDS to a library\n\nJCL\n       //.......  JOB .............\n       //UTIL0007 EXEC PGM=UTIL0007\n       //STEPLIB  DD DSN=..................,DISP=SHR\n       //SYSPRINT DD SYSOUT=*\n       //LIB      DD DSN=...library vsam cluster...,DISP=SHR\n       //SYSUT1   DD DSN=...PDS to convert.........,DISP=SHR\n       //\n\n\nAll members of the PDS will be loaded to the library.  All members\nwill have version set to 1.  All members status will be set to\n'checked in'.\n\nAny members that have names that already exist in the library will\nnot replace the existing member(s).\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ISPPLIB": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t%\\x0f\\x01\\t%\\x0f\\t\"\\x01\\xf1\\x01\\xf1\\x00\\x00\\xd3\\xc9\\xc2\\xd9\\xc1\\xd9\\xd5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-09-07T00:00:00", "modifydate": "2009-09-07T09:22:00", "lines": 497, "newlines": 497, "modlines": 0, "user": "LIBRARN"}, "text": "./ ADD NAME=ADMPANEL 0100-09250-09250-0915-00030-00030-00000-ISPPLIB\n)ATTR\n  + TYPE(TEXT)   INTENS(HIGH)\n  % TYPE(TEXT)   INTENS(LOW)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n  @ TYPE(OUTPUT) INTENS(LOW)  SKIP(ON) JUST(ASIS)\n)BODY\n%COMMAND ===>_ZCMD                                                             +\n $PMSG1I      $PMSG1T\n $PMSG2I      $PMSG2T\n $PMSG3I      $PMSG3T\n $PMSG4I      $PMSG4T\n $PMSG5I      $PMSG5T\n%\n%                   $PSYSN\n%\n%                   Member check in/check out administration\n+\n%            Library $PLIB     $PDESC\n%            Member  $PMEM\n%            Version $PVER\n+\n           %Check in/check out status_PIO+\n\n           %Member is checked out to _POUTUSER+\n\n           %Member is owned by       _POWNER  +\n)REINIT\n  REFRESH(ZCMD,VSCR)\n)PROC\n)END\n./ ADD NAME=ALOPANEL 0100-09250-09250-0915-00022-00022-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n)BODY\n%COMMAND ===>_ZCMD\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n $PMSG3I     $PMSG3T\n $PMSG4I     $PMSG4T\n $PMSG5I     $PMSG5T\n+\n+\n%                      New dataset allocation\n+\n+        The dataset you specified for the member check-out\n+        does not exist.\n+\n+        Do you want to allocate a new dataset?  _POPT+\n+\n+        If yes, enter the unit (SYSDA, etc)     _PUNIT   +\n)END\n./ ADD NAME=BPANEL   0100-09250-09250-0915-00027-00027-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON)   SCROLL(ON)\n  + TYPE(TEXT)    INTENS(LOW)\n  $ TYPE(OUTPUT)  INTENS(HIGH) SKIP(ON)   JUST(ASIS)\n 01 TYPE(DATAOUT) INTENS(LOW)\n 02 TYPE(DATAIN)\n 03 TYPE(DATAOUT) INTENS(HIGH)\n)BODY WIDTH(&ZSCREENW) EXPAND(//)\n%COMMAND ===>_ZCMD                             / /            %SCROLL ===>_VSCR+\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n $PMSG3I     $PMSG3T\n $PMSG4I     $PMSG4T\n $PMSG5I     $PMSG5T\n+\n+\n%            Member$PMEM     in library $PLIB                           -------+\n+\n|VDATA ---------------------------------/ /------------------------------------|\n|                                       / /                                    |\n| --------------------------------------/-/------------------------------------|\n)INIT\n)REINIT\n  REFRESH(ZCMD,VSCR,VDATA)\n)PROC\n  &VVDEPTH = LVLINE(VDATA)\n)END\n./ ADD NAME=DELPANEL 0100-09250-09250-0915-00028-00028-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n)BODY\n%COMMAND ===>_ZCMD                                                             +\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n $PMSG3I     $PMSG3T\n $PMSG4I     $PMSG4T\n $PMSG5I     $PMSG5T\n+\n+                    $PSYSN\n+\n%                     Member deletion\n+\n+\n+            Library $PLIB     $PDESC\n+\n+            Member  $PMEM\n+            Version $PVER\n+\n+\n+            Confirm deletion: _POPT+\n)REINIT\n  REFRESH(ZCMD)\n)PROC\n)END\n./ ADD NAME=DOCPANEL 0100-09250-09250-0915-00030-00030-00000-ISPPLIB\n)ATTR\n  + TYPE(TEXT)   INTENS(HIGH)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n  @ TYPE(OUTPUT) INTENS(LOW)  SKIP(ON) JUST(ASIS)\n)BODY\n%COMMAND ===>_ZCMD                                                             +\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n+                   $PSYSN\n+            Library $PLIB     $PDESC\n+            Member  $PMEM    +Version $PVER\n+\n+. . . . . . . . . . . .%Member status:+. . . . . . . . . . . . . . . . . . . .\n@PMISC1\n@PMISC2\n@PMISC3\n@PMISC4\n@PMISC5\n@PMISC6\n@PMISC7\n+. . . . . . . . . . . .%Documentation:+. . . . . . . . . . . . . . . . . . . .\n_PCOMM1\n_PCOMM2\n_PCOMM3\n_PCOMM4\n_PCOMM5\n)REINIT\n  REFRESH(ZCMD,VSCR)\n)PROC\n)END\n./ ADD NAME=INPANEL  0100-09250-09250-0915-00029-00029-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n)BODY\n%COMMAND ===>_ZCMD                                                             +\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n+                     $PSYSN\n+\n%                      Library CHECK IN\n+\n+            Library $PLIB     $PDESC\n+            Member  $PMEM\n+            Version $PVER\n+\n+            Your Dataset: _PUDSN                                       +\n+            Member      : _PUMEM   +     (If your dataset is a PDS)\n+\n+               Comments:\n_PCOMM1\n_PCOMM2\n_PCOMM3\n_PCOMM4\n_PCOMM5\n)REINIT\n  REFRESH(ZCMD,VSCR)\n)PROC\n)END\n./ ADD NAME=LIBERR   0100-09250-09250-0915-00009-00009-00000-ISPPLIB\n)PANEL\n)ATTR\n   @ TYPE(OUTPUT)  INTENS(HIGH) COLOR(RED)  CAPS(OFF) JUST(ASIS)\n)BODY\n+ SPF VDEFINE Failed\n+\n@ZERRLM\n+\n)END\n./ ADD NAME=LIBPANEL 0100-09250-09250-0915-00027-00027-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n 01 TYPE(DATAOUT) INTENS(LOW)\n 02 TYPE(DATAIN)\n 03 TYPE(DATAOUT) INTENS(HIGH)\n)BODY WIDTH(&ZSCREENW) EXPAND(//)\n%COMMAND ===>_ZCMD                             / /            %SCROLL ===>_VSCR+\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n $PMSG3I     $PMSG3T\n+\n%-----------/-/-------- Available libraries ---/-/-----------------------------+\n+\n+                       $PSYSN\n+\n%          Library     Description                                 Status\n|VDATA ---------------------------------/ /------------------------------------|\n|                                       / /                                    |\n| --------------------------------------/-/------------------------------------|\n)INIT\n)REINIT\n  REFRESH(ZCMD,VSCR,VDATA)\n)PROC\n  &VVDEPTH = LVLINE(VDATA)\n)END\n./ ADD NAME=LINEHELP 0100-09250-09250-0915-00027-00027-00000-ISPPLIB\n)ATTR\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(TEXT) INTENS(high) color(yellow)\n  @ TYPE(TEXT) INTENS(high) color(turquoise)\n)BODY WIDTH(&ZSCREENW) EXPAND(//)\n%COMMAND ===>_ZCMD                             / /            %SCROLL ===>_VSCR+\n+\n+\n@ Line commands\n%        A    +Administrator (over-ride state, etc)\n%        D    +Delete\n%        I    +Check in\n%        J    +Submit as batch job\n%        L    +List (display the detail info for a member)\n%        O    +Check out\n%        R    +Refresh stats\n%        S    +Select (display the detail info for a member)\n%        U    +Undo last command\n%        V    +View\n%        X    +Create new version\n+\n+\n+\n)INIT\n)REINIT\n  REFRESH(ZCMD)\n)END\n./ ADD NAME=MEMHELP  0100-09250-09250-0915-00038-00038-00000-ISPPLIB\n)ATTR\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(TEXT) INTENS(high) color(yellow)\n  @ TYPE(TEXT) INTENS(high) color(turquoise)\n)BODY WIDTH(&ZSCREENW) EXPAND(//)\n%COMMAND ===>_ZCMD                             / /            %SCROLL ===>_VSCR+\n+\n+\n+\n$ Primary commands available are\n%        A    +Administrator (over-ride state, etc)\n%        D    +Delete a member\n%        I    +Check in a member\n%        L    +Locate member (scroll to a member)\n%        N    +Create a new member\n%        O    +Check out a member\n%        S    +Select (display the detail info for a member)\n%        V    +View a member\n+\n+\n@ Line commands\n%        A    +Administrator (over-ride state, etc)\n%        D    +Delete\n%        I    +Check in\n%        L    +List (display the detail info for a member)\n%        O    +Check out\n%        R    +Refresh stats\n%        S    +Select (display the detail info for a member)\n%        U    +Undo last command\n%        V    +View\n%        X    +Create new version\n+\n+\n+\n)INIT\n)REINIT\n  REFRESH(ZCMD)\n)END\n./ ADD NAME=MEMPANEL 0100-09250-09250-0915-00029-00029-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n 01 TYPE(DATAOUT) INTENS(LOW)\n 02 TYPE(DATAIN)\n 03 TYPE(DATAOUT) INTENS(HIGH)\n)BODY WIDTH(&ZSCREENW) EXPAND(//)\n%COMMAND ===>_ZCMD                             / /            %SCROLL ===>_VSCR+\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n $PMSG3I     $PMSG3T\n $PMSG4I     $PMSG4T\n $PMSG5I     $PMSG5T\n+\n+                       $PSYSN\n+\n%            Members in library $PLIB :  $PDESC                         -------+\n+\n%   Name       Ver  Owner          Size Sta User     Date        Time\n|VDATA ---------------------------------/ /------------------------------------|\n|                                       / /                                    |\n| --------------------------------------/-/------------------------------------|\n)INIT\n)REINIT\n  REFRESH(ZCMD,VSCR,VDATA)\n)PROC\n  &VVDEPTH = LVLINE(VDATA)\n)END\n./ ADD NAME=NEWPANEL 0100-09250-09250-0915-00029-00029-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n)BODY\n%COMMAND ===>_ZCMD                                                             +\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n $PMSG3I     $PMSG3T\n+                     $PSYSN\n+\n%                      New library member\n+\n+            Library $PLIB     $PDESC\n+            Member  _PMEM     Version $PVER\n+\n+            Your Dataset: _PUDSN                                       +\n+            Member      : _PUMEM   +     (If your dataset is a PDS)\n+\n+               Documentation:\n_PCOMM1\n_PCOMM2\n_PCOMM3\n_PCOMM4\n_PCOMM5\n)REINIT\n  REFRESH(ZCMD,VSCR)\n)PROC\n)END\n./ ADD NAME=OUTPANEL 0100-09250-09250-0915-00026-00026-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n)BODY\n%COMMAND ===>_ZCMD\n+\n+                     $PSYSN\n+\n%                      Library check out\n+\n+            Library $PLIB     $PDESC\n+            Member  $PMEM\n+            Version $PVER\n+\n+            Your Dataset: _PUDSN                                       +\n+            Member      : _PUMEM   +     (If your dataset is a PDS)\n\n+      Replace/over-write? _POPT+\n+\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n $PMSG3I     $PMSG3T\n $PMSG4I     $PMSG4T\n $PMSG5I     $PMSG5T\n)END\n./ ADD NAME=PRIMHELP 0100-09250-09250-0915-00023-00023-00000-ISPPLIB\n)ATTR\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(TEXT) INTENS(high) color(yellow)\n  @ TYPE(TEXT) INTENS(high) color(turquoise)\n)BODY WIDTH(&ZSCREENW) EXPAND(//)\n%COMMAND ===>_ZCMD                             / /            %SCROLL ===>_VSCR+\n+\n+\n+\n$ Primary commands available are\n%        A    +Administrator (over-ride state, etc)\n%        D    +Delete a member\n%        I    +Check in a member\n%        J    +Submit as a batch JOB\n%        L    +Locate member (scroll to a member)\n%        N    +Create a new member\n%        O    +Check out a member\n%        S    +Select (display the detail info for a member)\n%        V    +View a member\n)INIT\n)REINIT\n  REFRESH(ZCMD)\n)END\n./ ADD NAME=STATPANL 0100-09250-09250-0915-00028-00028-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n 01 TYPE(DATAOUT) INTENS(LOW)\n 02 TYPE(DATAIN)\n 03 TYPE(DATAOUT) INTENS(HIGH)\n)BODY WIDTH(&ZSCREENW) EXPAND(//)\n%COMMAND ===>_ZCMD                             / /            %SCROLL ===>_VSCR+\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n $PMSG3I     $PMSG3T\n $PMSG4I     $PMSG4T\n $PMSG5I     $PMSG5T\n+\n+                     $PSYSN\n+\n%                      Library STC status\n+\n|VDATA ---------------------------------/ /------------------------------------|\n|                                       / /                                    |\n| --------------------------------------/-/------------------------------------|\n)INIT\n)REINIT\n  REFRESH(ZCMD,VSCR,VDATA)\n)PROC\n  &VVDEPTH = LVLINE(VDATA)\n)END\n./ ADD NAME=USRPANEL 0100-09250-09250-0915-00024-00024-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n 01 TYPE(DATAOUT) INTENS(LOW)\n 02 TYPE(DATAIN)\n 03 TYPE(DATAOUT) INTENS(HIGH)\n)BODY WIDTH(&ZSCREENW) EXPAND(//)\n%COMMAND ===>_ZCMD                             / /            %SCROLL ===>_VSCR+\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n+\n%            Members in library $PLIB :  $PDESC                         -------+\n+\n%      Name       Ver  Owner          Size Sta User     Date        Time\n|VDATA ---------------------------------/ /------------------------------------|\n|                                       / /                                    |\n| --------------------------------------/-/------------------------------------|\n)INIT\n)REINIT\n  REFRESH(ZCMD,VSCR,VDATA)\n)PROC\n  &VVDEPTH = LVLINE(VDATA)\n)END\n./ ADD NAME=VERPANEL 0100-09250-09250-0915-00027-00027-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  $ TYPE(OUTPUT) INTENS(HIGH) SKIP(ON) JUST(ASIS)\n)BODY\n%COMMAND ===>_ZCMD                                                             +\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n $PMSG3I     $PMSG3T\n $PMSG4I     $PMSG4T\n $PMSG5I     $PMSG5T\n+\n+                    $PSYSN\n+\n%                   Create new version\n+\n+\n+            Library $PLIB     $PDESC\n+\n+            Member  $PMEM\n+            Version $PVER\n+\n+            Confirm create new version: _POPT+\n)REINIT\n  REFRESH(ZCMD)\n)PROC\n)END\n./ ADD NAME=VPANEL   0100-09250-09250-0915-00026-00026-00000-ISPPLIB\n)ATTR\n  | AREA(DYNAMIC) EXTEND(ON)   SCROLL(ON)\n  + TYPE(TEXT)    INTENS(LOW)\n  $ TYPE(OUTPUT)  INTENS(HIGH) SKIP(ON) JUST(ASIS)\n  @ TYPE(TEXT)    INTENS(HIGH) SKIP(ON) JUST(ASIS) COLOR (TURQUOISE)\n)BODY\n%COMMAND ===>_ZCMD\n+\n%                      View (get a copy of) a member\n+\n+\n+            Library $PLIB     $PDESC\n+            Member  $PMEM\n+            Version $PVER\n+\n+           @Your Dataset: _PUDSN                                       +\n+           @Member      : _PUMEM   +     (If your dataset is a PDS)\n\n+     @Replace/over-write? _POPT+\n+\n $PMSG1I     $PMSG1T\n $PMSG2I     $PMSG2T\n $PMSG3I     $PMSG3T\n $PMSG4I     $PMSG4T\n $PMSG5I     $PMSG5T\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCL": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t%\\x0f\\x01\\t%\\x0f\\t\"\\x02\\x16\\x02\\x16\\x00\\x00\\xd3\\xc9\\xc2\\xd9\\xc1\\xd9\\xd5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-09-07T00:00:00", "modifydate": "2009-09-07T09:22:00", "lines": 534, "newlines": 534, "modlines": 0, "user": "LIBRARN"}, "text": "./ ADD NAME=ASMLINK  0100-09250-09250-0915-00318-00318-00000-JCL\n//         JOB\n//* ------------------------------------------------------------\n//*\n//* ASSEMBLE\n//*\n//* ------------------------------------------------------------\n//ASM      PROC MEM=\n//ASM      EXEC PGM=ASMA90,PARM='LIST,DECK,NOOBJECT,XREF(SHORT)'\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD UNIT=SYSDA,SPACE=(TRK,(15,15))\n//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//         DD DSN=........LIB.MACLIB,DISP=SHR\n//         DD DSN=SYS1.TCPIP.SEZACMAC,DISP=SHR\n//SYSPUNCH DD DSN=........LIB.OBJECT(&MEM),DISP=SHR\n//SYSIN    DD DSN=........LIB.SOURCE(&MEM),DISP=SHR\n//ASM      PEND\n//CALLSUB  EXEC ASM,MEM=CALLSUB\n//CSUBCLSE EXEC ASM,MEM=CSUBCLSE\n//CSUBDEF  EXEC ASM,MEM=CSUBDEF\n//CSUBKILL EXEC ASM,MEM=CSUBKILL\n//CSUBLIBS EXEC ASM,MEM=CSUBLIBS\n//CSUBLSTA EXEC ASM,MEM=CSUBLSTA\n//CSUBMAIN EXEC ASM,MEM=CSUBMAIN\n//CSUBOPEN EXEC ASM,MEM=CSUBOPEN\n//CSUBSTAT EXEC ASM,MEM=CSUBSTAT\n//CSUBUSER EXEC ASM,MEM=CSUBUSER\n//DAIRMSG  EXEC ASM,MEM=DAIRMSG\n//DSUBMAIN EXEC ASM,MEM=DSUBMAIN\n//HSUBMAIN EXEC ASM,MEM=HSUBMAIN\n//LIBAUTH  EXEC ASM,MEM=LIBAUTH\n//LIBINIT  EXEC ASM,MEM=LIBINIT\n//LIBLERAD EXEC ASM,MEM=LIBLERAD\n//LIBOPT   EXEC ASM,MEM=LIBOPT\n//LIBSATTN EXEC ASM,MEM=LIBSATTN\n//LIBSCOMM EXEC ASM,MEM=LIBSCOMM\n//LIBSIP   EXEC ASM,MEM=LIBSIP\n//LIBSMAIN EXEC ASM,MEM=LIBSMAIN\n//LIBSPARM EXEC ASM,MEM=LIBSPARM\n//LIBSPSUB EXEC ASM,MEM=LIBSPSUB\n//LIBSSNAP EXEC ASM,MEM=LIBSSNAP\n//LIBSPFD  EXEC ASM,MEM=LIBSPFD\n//LIBSPFV  EXEC ASM,MEM=LIBSPFV\n//LIBSVTAM EXEC ASM,MEM=LIBSVTAM\n//LIBTADMN EXEC ASM,MEM=LIBTADMN\n//LIBTBRWS EXEC ASM,MEM=LIBTBRWS\n//LIBTCKIN EXEC ASM,MEM=LIBTCKIN\n//LIBTCKOT EXEC ASM,MEM=LIBTCKOT\n//LIBTCOMM EXEC ASM,MEM=LIBTCOMM\n//LIBTDEL  EXEC ASM,MEM=LIBTDEL\n//LIBTDISP EXEC ASM,MEM=LIBTDISP\n//LIBTDLIB EXEC ASM,MEM=LIBTDLIB\n//LIBTDMEM EXEC ASM,MEM=LIBTDMEM\n//LIBTJOB  EXEC ASM,MEM=LIBTJOB\n//LIBTMAIN EXEC ASM,MEM=LIBTMAIN\n//LIBTMDOC EXEC ASM,MEM=LIBTMDOC\n//LIBTNEW  EXEC ASM,MEM=LIBTNEW\n//LIBTPARM EXEC ASM,MEM=LIBTPARM\n//LIBTPRSE EXEC ASM,MEM=LIBTPRSE\n//LIBTSNAP EXEC ASM,MEM=LIBTSNAP\n//LIBTSTAT EXEC ASM,MEM=LIBTSTAT\n//LIBTTCP  EXEC ASM,MEM=LIBTTCP\n//LIBTUNDO EXEC ASM,MEM=LIBTUNDO\n//LIBTVER  EXEC ASM,MEM=LIBTVER\n//LIBTVIEW EXEC ASM,MEM=LIBTVIEW\n//LIBTVMGR EXEC ASM,MEM=LIBTVMGR\n//LIBTVTAM EXEC ASM,MEM=LIBTVTAM\n//LIBUX01  EXEC ASM,MEM=LIBUX01\n//LIBUX02  EXEC ASM,MEM=LIBUX02\n//LIBUX03  EXEC ASM,MEM=LIBUX03\n//LSUBMAIN EXEC ASM,MEM=LSUBMAIN\n//SUBCKIN  EXEC ASM,MEM=SUBCKIN\n//SUBCKOUT EXEC ASM,MEM=SUBCKOUT\n//SUBDEL   EXEC ASM,MEM=SUBDEL\n//SUBLIBS  EXEC ASM,MEM=SUBLIBS\n//SUBMAIN  EXEC ASM,MEM=SUBMAIN\n//SUBMDOC  EXEC ASM,MEM=SUBMDOC\n//SUBMEMS  EXEC ASM,MEM=SUBMEMS\n//SUBVIEW  EXEC ASM,MEM=SUBVIEW\n//SUB0001  EXEC ASM,MEM=SUB0001\n//SUB0002  EXEC ASM,MEM=SUB0002\n//SUB0003  EXEC ASM,MEM=SUB0003\n//SUB0004  EXEC ASM,MEM=SUB0004\n//USUBADMN EXEC ASM,MEM=USUBADMN\n//USUBCKIN EXEC ASM,MEM=USUBCKIN\n//USUBCKOT EXEC ASM,MEM=USUBCKOT\n//USUBDEL  EXEC ASM,MEM=USUBDEL\n//USUBDQL  EXEC ASM,MEM=USUBDQL\n//USUBGMD  EXEC ASM,MEM=USUBGMD\n//USUBJOB  EXEC ASM,MEM=USUBJOB\n//USUBLIBS EXEC ASM,MEM=USUBLIBS\n//USUBMAIN EXEC ASM,MEM=USUBMAIN\n//USUBMEMS EXEC ASM,MEM=USUBMEMS\n//USUBNQL  EXEC ASM,MEM=USUBNQL\n//USUBSTAT EXEC ASM,MEM=USUBSTAT\n//USUBUMD  EXEC ASM,MEM=USUBUMD\n//USUBUNDO EXEC ASM,MEM=USUBUNDO\n//USUBVER  EXEC ASM,MEM=USUBVER\n//USUBVIEW EXEC ASM,MEM=USUBVIEW\n//UTIL0001 EXEC ASM,MEM=UTIL0001\n//UTIL0002 EXEC ASM,MEM=UTIL0002\n//UTIL0003 EXEC ASM,MEM=UTIL0003\n//UTIL0004 EXEC ASM,MEM=UTIL0004\n//UTIL0005 EXEC ASM,MEM=UTIL0005\n//UTIL0006 EXEC ASM,MEM=UTIL0006\n//UTIL0007 EXEC ASM,MEM=UTIL0007\n//VTAMSUB  EXEC ASM,MEM=VTAMSUB\n//*\n//*  --------------------------------------------------\n//*\n//LINK     EXEC PGM=HEWLH096,COND=(4,LT),\n//            PARM=('LIST,LET,XREF,MAP,AC=1')\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD UNIT=SYSDA,SPACE=(TRK,(15,15))\n//SYSLIB   DD DSN=........LIB.OBJECT,DISP=SHR\n//SYSLMOD  DD DSN=........LIB.LOADLIB,DISP=SHR\n//SYSLIN   DD *\n  INCLUDE SYSLIB(LIBOPT)\n  ENTRY   LIBOPT\n  NAME    LIBOPT(R)\n*\n  INCLUDE SYSLIB(LIBSCOMM)\n  ENTRY   LIBSCOMM\n  NAME    LIBSCOMM(R)\n*\n  INCLUDE SYSLIB(CSUBMAIN)\n  INCLUDE SYSLIB(CSUBCLSE)\n  INCLUDE SYSLIB(CSUBDEF)\n  INCLUDE SYSLIB(CSUBKILL)\n  INCLUDE SYSLIB(CSUBLIBS)\n  INCLUDE SYSLIB(CSUBLSTA)\n  INCLUDE SYSLIB(CSUBOPEN)\n  INCLUDE SYSLIB(CSUBSTAT)\n  INCLUDE SYSLIB(CSUBUSER)\n  ENTRY   CSUBMAIN\n  NAME    LIBSCSUB(R)\n*\n  INCLUDE SYSLIB(DSUBMAIN)\n  INCLUDE SYSLIB(SUB0004)\n  ENTRY   DSUBMAIN\n  NAME    LIBSDSUB(R)\n*\n  INCLUDE SYSLIB(LIBINIT)\n  ENTRY   LIBINIT\n  NAME    LIBINIT(R)\n*\n  INCLUDE SYSLIB(LSUBMAIN)\n  ENTRY   LSUBMAIN\n  NAME    LIBSLSUB(R)\n*\n  INCLUDE SYSLIB(LIBSMAIN)\n  ENTRY   LIBSMAIN\n  NAME    LIBSTC(R)\n*\n  INCLUDE SYSLIB(LIBSIP)\n  ENTRY   LIBSIP\n  NAME    LIBSIP(R)\n*\n  INCLUDE SYSLIB(LIBSPARM)\n  ENTRY   LIBSPARM\n  NAME    LIBSPARM(R)\n*\n  INCLUDE SYSLIB(LIBSPSUB)\n  ENTRY   LIBSPSUB\n  NAME    LIBSPSUB(R)\n*\n  INCLUDE SYSLIB(LIBSSNAP)\n  ENTRY   LIBSSNAP\n  NAME    LIBSSNAP(R)\n*\n  INCLUDE SYSLIB(LIBSVTAM)\n  INCLUDE SYSLIB(LIBLERAD)\n  INCLUDE SYSLIB(LIBSATTN)\n  ENTRY   LIBSVTAM\n  NAME    LIBSVTAM(R)\n*\n  INCLUDE SYSLIB(LIBUX01)\n  ENTRY   LIBUX01\n  NAME    LIBUX01(R)\n*\n  INCLUDE SYSLIB(LIBUX02)\n  ENTRY   LIBUX02\n  NAME    LIBUX02(R)\n*\n  INCLUDE SYSLIB(LIBUX03)\n  ENTRY   LIBUX03\n  NAME    LIBUX03(R)\n*\n  INCLUDE SYSLIB(USUBMAIN)\n  INCLUDE SYSLIB(USUBADMN)\n  INCLUDE SYSLIB(USUBCKIN)\n  INCLUDE SYSLIB(USUBCKOT)\n  INCLUDE SYSLIB(USUBDEL)\n  INCLUDE SYSLIB(USUBDQL)\n  INCLUDE SYSLIB(USUBGMD)\n  INCLUDE SYSLIB(USUBJOB)\n  INCLUDE SYSLIB(USUBLIBS)\n  INCLUDE SYSLIB(USUBMEMS)\n  INCLUDE SYSLIB(USUBNQL)\n  INCLUDE SYSLIB(USUBSTAT)\n  INCLUDE SYSLIB(USUBUMD)\n  INCLUDE SYSLIB(USUBUNDO)\n  INCLUDE SYSLIB(USUBVER)\n  INCLUDE SYSLIB(USUBVIEW)\n  INCLUDE SYSLIB(LIBAUTH)\n  ENTRY   USUBMAIN\n  NAME    LIBSUSUB(R)\n*\n  INCLUDE SYSLIB(HSUBMAIN)\n  ENTRY   HSUBMAIN\n  NAME    LIBSHSUB(R)\n*\n  INCLUDE SYSLIB(LIBTCOMM)\n  ENTRY   LIBTCOMM\n  NAME    LIBTCOMM(R)\n*\n  INCLUDE SYSLIB(LIBTMAIN)\n  INCLUDE SYSLIB(LIBTADMN)\n  INCLUDE SYSLIB(LIBTBRWS)\n  INCLUDE SYSLIB(LIBTCKIN)\n  INCLUDE SYSLIB(LIBTCKOT)\n  INCLUDE SYSLIB(LIBTDEL)\n  INCLUDE SYSLIB(LIBTDISP)\n  INCLUDE SYSLIB(LIBTDLIB)\n  INCLUDE SYSLIB(LIBTDMEM)\n  INCLUDE SYSLIB(LIBTJOB)\n  INCLUDE SYSLIB(LIBTPARM)\n  INCLUDE SYSLIB(LIBTPRSE)\n  INCLUDE SYSLIB(LIBTMDOC)\n  INCLUDE SYSLIB(LIBTNEW)\n  INCLUDE SYSLIB(LIBTSNAP)\n  INCLUDE SYSLIB(LIBTSTAT)\n  INCLUDE SYSLIB(LIBTTCP)\n  INCLUDE SYSLIB(LIBTUNDO)\n  INCLUDE SYSLIB(LIBTVER)\n  INCLUDE SYSLIB(LIBTVIEW)\n  INCLUDE SYSLIB(LIBTVMGR)\n  INCLUDE SYSLIB(LIBTVTAM)\n  INCLUDE SYSLIB(SUB0001)\n  INCLUDE SYSLIB(SUB0004)\n  INCLUDE SYSLIB(DAIRMSG)\n  ENTRY   LIBTMAIN\n  NAME    LIBTSO(R)\n*\n  INCLUDE SYSLIB(LIBSPFD)\n  ENTRY   LIBSPFD\n  NAME    LIBSPFD(R)\n*\n  INCLUDE SYSLIB(LIBSPFV)\n  ENTRY   LIBSPFV\n  NAME    LIBSPFV(R)\n*\n  INCLUDE SYSLIB(SUBMAIN)\n  INCLUDE SYSLIB(SUBCKIN)\n  INCLUDE SYSLIB(SUBCKOUT)\n  INCLUDE SYSLIB(SUBDEL)\n  INCLUDE SYSLIB(SUBLIBS)\n  INCLUDE SYSLIB(SUBMDOC)\n  INCLUDE SYSLIB(SUBMEMS)\n  INCLUDE SYSLIB(SUBVIEW)\n  INCLUDE SYSLIB(VTAMSUB)\n  INCLUDE SYSLIB(SUB0001)\n  ENTRY   SUBMAIN\n  NAME    LIBSUB(R)\n*\n  INCLUDE SYSLIB(SUB0002)\n  ENTRY   SUB0002\n  NAME    SUB0002(R)\n*\n  INCLUDE SYSLIB(SUB0003)\n  ENTRY   SUB0003\n  NAME    SUB0003(R)\n*\n  INCLUDE SYSLIB(CALLSUB)\n  ENTRY   CALLSUB\n  NAME    CALLSUB(R)\n*\n  INCLUDE SYSLIB(UTIL0001)\n  ENTRY   UTIL0001\n  NAME    UTIL0001(R)\n*\n  INCLUDE SYSLIB(UTIL0002)\n  ENTRY   UTIL0002\n  NAME    UTIL0002(R)\n*\n  INCLUDE SYSLIB(UTIL0003)\n  ENTRY   UTIL0003\n  NAME    UTIL0003(R)\n*\n  INCLUDE SYSLIB(UTIL0004)\n  ENTRY   UTIL0004\n  NAME    UTIL0004(R)\n*\n  INCLUDE SYSLIB(UTIL0005)\n  ENTRY   UTIL0005\n  NAME    UTIL0005(R)\n*\n  INCLUDE SYSLIB(UTIL0006)\n  ENTRY   UTIL0006\n  NAME    UTIL0006(R)\n*\n  INCLUDE SYSLIB(UTIL0007)\n  ENTRY   UTIL0007\n  NAME    UTIL0007(R)\n/*\n//COMPRESS EXEC  PGM=IEBCOPY                                            0000000\n//LOAD   DD  DSN=........LIB.LOADLIB,DISP=SHR                           0000000\n//MACLIB DD  DSN=........LIB.SOURCE,DISP=SHR                            0000000\n//OBJECT DD  DSN=........LIB.OBJECT,DISP=SHR                            0000000\n//SOURCE DD  DSN=........LIB.MACLIB,DISP=SHR                            0000000\n//SYSPRINT DD  SYSOUT=*\n//SYSIN DD *                                                            0000000\n COPY  INDD=LOAD,OUTDD=LOAD\n COPY  INDD=MACLIB,OUTDD=MACLIB\n COPY  INDD=OBJECT,OUTDD=OBJECT\n COPY  INDD=SOURCE,OUTDD=SOURCE\n/*\n//\n./ ADD NAME=BATCH    0100-09250-09250-0915-00013-00013-00000-JCL\n//LIBBATCH JOB ...........................\n//LIBRARY  EXEC PGM=CALLSUB\n//STEPLIB  DD DSN=.......LIB.LOADLIB,DISP=SHR\n//DMBENAN  DD DUMMY\n//SYSABEND DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n    .\n    .\n    .\n    .\n/*\n//\n./ ADD NAME=DEFLIB   0100-09250-09250-0915-00040-00040-00000-JCL\n//DEFLIB   JOB ..................\n//IDCAMS   EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n\n  DELETE YOUR.LIB.CLUSTER CLUSTER PURGE\n\n  SET MAXCC = 0\n\n    DEFINE                                           -\n       CLUSTER  (NAME(YOUR.LIB.CLUSTER)              -\n                INDEXED                              -\n                NOREUSE                              -\n                NOIMBED                              -\n                RECOVERY                             -\n                SHAREOPTIONS           (2,3)         -\n                )                                    -\n       DATA     (NAME(YOUR.LIB.CLUSTER.DATA)         -\n                VOLUMES(SWTS13)                      -\n                FREESPACE              (15   20)     -\n                TRACKS                 (15   15)     -\n                RECORDSIZE             (95   8000)   -\n                KEYS                   (15    0)     -\n                CONTROLINTERVALSIZE    (  10240)     -\n                )                                    -\n       INDEX    (NAME(YOUR.LIB.CLUSTER.INDEX)        -\n                VOLUMES                (SWTS13 )     -\n                TRACKS                 (5     5)     -\n                CONTROLINTERVALSIZE    (   1024)     -\n                )\n/*\n//INIT     EXEC PGM=LIBINIT\n//STEPLIB  DD DSN=.......LIB.LOADLIB,DISP=SHR\n//LIB      DD DSN=YOUR.LIB.CLUSTER,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSIN    DD *\n       ................\n       ................\n//\n./ ADD NAME=EXPORT   0100-09250-09250-0915-00017-00017-00000-JCL\n//UTIL5    JOB .\n//*\n//*\n//*  CREATE AN 'EXPORT' FILE\n//*\n//*\n//UTIL0005 EXEC PGM=UTIL0005\n//STEPLIB  DD DSN=........LIB.LOADLIB,DISP=SHR\n//DMBENAN  DD DUMMY\n//SYSABEND DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//LIB      DD DSN=YOUR.LIB.CLUSTER,DISP=SHR\n//SYSUT2   DD DSN=.....LIB.EXPORT,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n/*\n//\n./ ADD NAME=IMPORT   0100-09250-09250-0915-00017-00017-00000-JCL\n//IMPORT   JOB .....\n//*\n//*\n//*  RESTORE FROM AN 'EXPORT' FILE\n//*\n//*\n//UTIL0006 EXEC PGM=UTIL0006\n//STEPLIB  DD DSN=.......LIB.LOADLIB,DISP=SHR\n//DMBENAN  DD DUMMY\n//SYSABEND DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//LIB      DD DSN=YOUR.LIB.CLUSTER,DISP=SHR\n//SYSUT1   DD DSN=LIB.EXPORT.FILE,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n/*\n//\n./ ADD NAME=STC      0100-09250-09250-0915-00019-00019-00000-JCL\n//LIBSTC   JOB .................\n//LIBRARY  EXEC PGM=LIBSTC\n//STEPLIB  DD DSN=........LIB.LOADLIB,DISP=SHR\n//DMBENAN  DD DUMMY\n//SYSABEND DD SYSOUT=*\n//LIBHIST  DD DSN=........LIB.HISTORY,DISP=SHR\n//LIBPRT   DD SYSOUT=*\n//LIBIN    DD *\nSYSNAME=XXXXXXXXXX\nAPPLID=AAAAAAA\nPORT=NNNN\nLIBRARY=LIBONE,DSN=YOUR.LIB.CLUSTER.ONE\nLIBRARY=LIBONE,OPEN=YES\nLIBRARY=LIBTWO,DSN=YOUR.LIB.CLUSTER.TWO\nLIBRARY=LIBTWO,OPEN=YES\nLIBRARY=LIB3,DSN=YOUR.LIB.CLUSTER.THREE\nLIBRARY=LIB3,OPEN=YES\n/*\n//\n./ ADD NAME=UTIL0001 0100-09250-09250-0915-00016-00016-00000-JCL\n//UTIL     JOB ................\n//*\n//*\n//UTIL0001 EXEC PGM=UTIL0001\n//STEPLIB  DD DSN=........LIB.LOADLIB,DISP=SHR\n//DMBENAN  DD DUMMY\n//SYSABEND DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//LIB      DD DSN=YOUR.LIB.CLUSTER,DISP=SHR\n//SYSIN    DD *\n     .\n     .\n     .\n     .\n/*\n//\n./ ADD NAME=UTIL0002 0100-09250-09250-0915-00010-00010-00000-JCL\n//UTIL2    JOB .........................\n//*\n//*  PRINT ALL MEMBERS IN A LIBRARY\n//*\n//UTIL0002 EXEC PGM=UTIL0002\n//STEPLIB  DD DSN=........LIB.LOADLIB,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//LIB      DD DSN=YOUR.LIB.CLUSTER,DISP=SHR\n//\n./ ADD NAME=UTIL0003 0100-09250-09250-0915-00013-00013-00000-JCL\n//UTIL3    JOB ...........................\n//*\n//*\n//*  Convert a source file to compacted form\n//*\n//*\n//UTIL3    EXEC PGM=UTIL0003\n//STEPLIB  DD DSN=........LIB.LOADLIB,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//SYSUT1   DD DSN=input.source,DISP=SHR\n//SYSUT2   DD DSN=output.compress,DISP=SHR\n/*\n//\n./ ADD NAME=UTIL0004 0100-09250-09250-0915-00011-00011-00000-JCL\n//LIBUTIL4 JOB .................\n//*\n//*\n//*  LIBRARY CONTENTS REPORT\n//*\n//*\n//UTIL0004 EXEC PGM=UTIL0004\n//STEPLIB  DD DSN=........LIB.LOADLIB,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//LIB      DD DSN=YOUR.LIB.CLUSTER,DISP=SHR\n//\n./ ADD NAME=UTIL0005 0100-09250-09250-0915-00017-00017-00000-JCL\n//UTIL5    JOB .................\n//*\n//*\n//*  CREATE A BACK-UP IN 'EXPORT' FORMAT\n//*\n//*\n//UTIL0005 EXEC PGM=UTIL0005\n//STEPLIB  DD DSN=........LIB.LOADLIB,DISP=SHR\n//DMBENAN  DD DUMMY\n//SYSABEND DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//LIB      DD DSN=YOUR.LIB.CLUSTER,DISP=SHR\n//SYSUT2   DD DSN=LIB.EXPORT,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n/*\n//\n./ ADD NAME=UTIL0006 0100-09250-09250-0915-00017-00017-00000-JCL\n//UTIL6    JOB ................\n//*\n//*\n//*  RESTORE FROM AN 'EXPORT' FILE\n//*\n//*\n//UTIL0006 EXEC PGM=UTIL0006\n//STEPLIB  DD DSN=........LIB.LOADLIB,DISP=SHR\n//DMBENAN  DD DUMMY\n//SYSABEND DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//LIB      DD DSN=YOUR.LIB.CLUSTER,DISP=SHR\n//SYSUT1   DD DSN=EXPORT.FILE,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n/*\n//\n./ ADD NAME=UTIL0007 0100-09250-09250-0915-00013-00013-00000-JCL\n//UTIL     JOB ...................\n//*\n//* LOAD A PDS TO A LIBRARY\n//*\n//*\n//UTIL0007 EXEC PGM=UTIL0007\n//STEPLIB  DD DSN=........LIB.LOADLIB,DISP=SHR\n//DMBENAN  DD DUMMY\n//SYSABEND DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DSN=SOURCE.PDS,DISP=SHR\n//LIB      DD DSN=YOUR.LIB.CLUSTER,DISP=SHR\n//\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MACLIB": {"ttr": 1546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t%\\x0f\\x01\\t%\\x0f\\t\"\\x05\\x89\\x05\\x89\\x00\\x00\\xd3\\xc9\\xc2\\xd9\\xc1\\xd9\\xd5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-09-07T00:00:00", "modifydate": "2009-09-07T09:22:00", "lines": 1417, "newlines": 1417, "modlines": 0, "user": "LIBRARN"}, "text": "./ ADD NAME=AUTHBLOK 0100-09250-09250-0917-00055-00055-00000-MACLIB\n         MACRO\n         AUTHBLOK &DSECT=\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      AUTHBLOK                                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         AIF  (T'&DSECT EQ 'O').ERR0010\n         AIF  ('&DSECT' EQ 'NO').CSECT00\n         AIF  ('&DSECT' EQ 'YES').DSECT00\n         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'\n         MEXIT\n.CSECT00 ANOP\nAUTHBLOK           DS    0F\n         AGO  .COMMON\n.DSECT00 ANOP\nAUTHBLOK            DSECT\n.COMMON  ANOP\nAUTH_EYE            DS   CL8         EYE CATCHER\nAUTH_MEMBER         DS   CL8         MEMBER NAME\nAUTH_VERSION        DS   XL2         MEMBER VERSION\nAUTH_FUNCTION       DS   X           FUNCTION\n$AUTH_CHECK_DELETE  EQU  X'01'       .. DELETE\n$AUTH_CHECK_DESC    EQU  X'02'       .. VIEW/UPDATE DESCRIPTION\n$AUTH_CHECK_IN      EQU  X'03'       .. CHECK IN\n$AUTH_CHECK_NEW     EQU  X'04'       .. NEW MEMBER\n$AUTH_CHECK_OUT     EQU  X'05'       .. CHECK OUT\n$AUTH_CHECK_VIEW    EQU  X'06'       .. VIEW\n$AUTH_CHECK_VERSION EQU  X'07'       .. CREATE A NEW VERSION\n$AUTH_CHECK_ADMIN   EQU  X'08'       .. CHANGE IN/OUT STATUS OR USER\n$AUTH_CHECK_SUBMIT  EQU  X'09'       .. SUBMIT AS BATCH JOB\nAUTH_USER           DS   CL8         USER MAKING THIS REQUEST\nAUTH_LIB            DS   CL8         LIBRARY\nAUTH_CHECK_OWNER    DS   CL8         MEMBER OWNER\nAUTH_CHECK_OUT_USER DS   CL8         MEMBER IS CHECKED OUT TO THIS USER\nAUTH_MEMBER_STATUS  DS   X           MEMBER STATUS\n$AUTH_STATUS_IN     EQU  X'01'       .. STATUS IS CHECKED-IN\n$AUTH_STATUS_OUT    EQU  X'02'       .. STATUS IS CHECKED-OUT\n$AUTH_STATUS_NONE   EQU  X'03'       .. MEMBER DOES NOT EXIST\n\n* Any value except 0 will deny access\nAUTH_RETURN_CODE    DS   X           RETURN CODE\n$AUTH_OK            EQU  X'00'       .. ALLOW THE ACCESS\n\nAUTH_MESSAGE        DS   0CL400      MESSAGES (EXPLAIN DENIALS)\nAUTH_MESSAGE_1      DS   CL80\nAUTH_MESSAGE_2      DS   CL80\nAUTH_MESSAGE_3      DS   CL80\nAUTH_MESSAGE_4      DS   CL80\nAUTH_MESSAGE_5      DS   CL80\nAUTHBLOKL EQU       *-AUTHBLOK\n         MEND\n./ ADD NAME=CLIENT   0100-09250-09250-0917-00008-00008-00000-MACLIB\n         MACRO\n         CLIENT &PREFIX=\n&PREFIX._CLIENT       DS   0F\n&PREFIX._CLIENT_DOMAIN DS  F\n&PREFIX._CLIENT_NAME  DS   CL8\n&PREFIX._CLIENT_TASK  DS   CL8\n                      DS   XL20\n         MEND\n./ ADD NAME=COMMCOMM 0100-09250-09250-0917-00121-00121-00000-MACLIB\n         MACRO\n         COMMCOMM &MAIN=\nCOMM     DS    0D\n*---------------------------------------------------------------------*\n*                                                                     *\n*          Double word for CVB/CVD                                    *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMMDWRD DC    D'0'\nCOMMDXDA DC    A(0)                WORK AREA base\n*---------------------------------------------------------------------*\n*                                                                     *\n*          ADD TRACE ENTRY                                            *\n*                                                                     *\n*  During initialization the \"main\" module will have obtained storage *\n*  for the trace table.  The \"main\" module will have set TRFIRST,     *\n*  TRLAST, and TRCURR.  The \"main\" module all also have set R11 to    *\n*  the label \"COMM\" at the very top of this CSECT.  All other modules *\n*  depend on this remaining unchanged.  Any module except this        *\n*  module may call the trace routine.  Macro ITRACE generates the     *\n*  calling sequence.  R14 is the only register altered by the trace   *\n*  macro.                                                             *\n*                                                                     *\n*  The trace table is a \"wrap-around\" table.  TRFIRST is the first    *\n*  entry's address, TRLAST is the last entry's address, and           *\n*  TRCURR is the address of the last entry added to the table.        *\n*                                                                     *\n*  Data captured in each trace entry is:                              *\n*        The TCB address of the calling task                          *\n*        The calling CSECT's suffix                                   *\n*        ID coded on the ITRACE macro                                 *\n*        DATA1 or RDATA1 or zeros                                     *\n*        DATA2 or RDATA2 or zeros                                     *\n*                                                                     *\n*                                                                     *\n*      This code depends on:                                          *\n*           R11  base address of this code                            *\n*           R12  current module's base address                        *\n*           R13  the standard work area address for the caller        *\n*           R14  trace id's address and R14 + 8 will be the return    *\n*                address                                              *\n*                                                                     *\n*---------------------------------------------------------------------*\nTRACE000 DS    0H\n         USING DXDSAVE,R13         DEFINE BASE\n         USING MODPRFX,R12         DEFINE BASE\n         USING TRENTRY,R2          DEFINE BASE\n         STM   R14,R12,12(R13)     SAVE REGISTERS\nTRACE010 DS    0H\n         ICM   R2,15,TRCURR        CURRENT TRACE ENTRY\n         BZ    TRACE040            NO TRACE TABLE\n         OC    0(TRENTRYL,R2),0(R2)    EMPTY ENTRY?\n         BZ    TRACE020            YES.. USE THIS ENTRY\n         LA    R2,TRENTRYL(R2)     NEXT TRACE ENTRY\n         C     R2,TRLAST           BEYOND END OF TABLE?\n         BNH   TRACE020            NO\n         L     R2,TRFIRST          'WRAP' TRACE TABLE\nTRACE020 DS    0H\n         L     R1,TRCURR           CURRENT TRACE ENTRY\n         CS    R1,R2,TRCURR        UPDATE 'CURRENT' ADDRESS\n         BC    4,TRACE010          UNSUCCESSFUL, TRY AGAIN\n         ST    R2,TRCURR           SAVE CURRENT TRACE ENTRY ADDRESS\n         USING PSA,R0              DEFINE PSA BASE\n         MVC   TRETCB,PSATNEW+1    COPY TCB ADDRESS\n         MVC   TREMOD,PFXMODNM+3   COPY MODULE NAME\n         CLC   TRACE050,PFXMODNM+1 IS THIS A 'SUB' SOMETHING?\n         BNE   TRACE030            NO\n         MVC   TREMOD(1),PFXMODNM  COPY 1ST CHARACTER OF NAME\nTRACE030 DS    0H\n         MVC   TREID,0(R14)        COPY TRACE ID\n         MVC   TREDATA1,TRDATA1    COPY TRACE DATA 1\n         MVC   TREDATA2,TRDATA2    COPY TRACE DATA 2\n         XC    TRDATA1,TRDATA1     CLEAR TRACE DATA\n         XC    TRDATA2,TRDATA2     CLEAR TRACE DATA\n         TM    XTRFLAG,$XTRON      EXTERNAL TRACE ON?\n         BNO   TRACE040            NO\n         MVC   XTRDATA(TRENTRYL),TRENTRY\n         MVI   XTRLEN+0,0          SET LENGTH\n         MVI   XTRLEN+1,36         SET LENGTH\n         GETMAIN R,LV=72\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         PUT   XTRACE,XTRREC       WRITE TO EXTERNAL TRACE\n         LR    R1,R13\n         L     R13,4(R1)\n         FREEMAIN R,A=(1),LV=72\nTRACE040 DS    0H\n         LM    R14,R12,12(R13)     RESTORE REGISTERS\n         B     8(R14)              RETURN\nTRACE050 DC    C'SUB'\n*---------------------------------------------------------------------*\n*                                                                     *\n*          TRACE CONTROL                                              *\n*                                                                     *\n*---------------------------------------------------------------------*\n         DS    0A\n         DC    CL4'1STX'           FIRST TRACE ENTRY\nTRFIRST  DC    A(0)\n         DC    CL4'LAST'           LAST TRACE ENTRY\nTRLAST   DC    A(0)\n         DC    CL4'CURR'           CURRENT TRACE ENTRY\nTRCURR   DC    A(0)\nTRADDR   DC    A(0)                TRACE TABLE STORAGE ADDRESS\nTRSIZE   DC    A(0)                TRACE TABLE SIZE\nXTRACE   DCB   DSORG=PS,                                               +\n               DDNAME=LIBXTR,                                          +\n               RECFM=VB,                                               +\n               LRECL=32756,                                            +\n               BLKSIZE=32760,                                          +\n               MACRF=PM\nXTRFLAG  DC    X'00'\n$XTRON   EQU   X'80'               EXTERNAL TRACE DD PRESENT\n$XTROPEN EQU   X'40'               EXTERNAL TRACE IS OPEN\nXTRREC   DS    0H\nXTRLEN   DS    XL2\nXTRBB    DS    XL2\nXTRDATA  DS    (TRENTRYL)C\n*---------------------------------------------------------------------*\nCOMMIOSZ EQU   32767\n         MEND\n./ ADD NAME=DAIRREQ  0100-09250-09250-0917-00044-00044-00000-MACLIB\n         MACRO\n         DAIRREQ &DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      DAIR REQUEST BLOCK                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         AIF  (T'&DSECT EQ 'O').ERR0010\n         AIF  ('&DSECT' EQ 'YES').DSECT00\n         AIF  ('&DSECT' EQ 'NO').CSECT00\n         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'\n         MEXIT\n.CSECT00    ANOP\nDAIRREQ     DS    0F\n               AGO  .COMMON\n.DSECT00       ANOP\nDAIRREQ        DSECT\n.COMMON        ANOP\nDAIR_EYE       DS   CL8             EYECATCHER\nDAIR_NEXT      DS   A               NEXT BLOCK ON THE CHAIN\nDAIR_ECB       DS   A               ECB CALLER WILL BE WAITING ON\nDAIR_CMD       DS   X               COMMAND\n$DAIR_EXISTING EQU  X'01'           .. ALLOCATE EXISTING DATA SET\n$DAIR_NEW      EQU  X'02'           .. ALLOCATE NEW DATA SET\n$DAIR_SYSOUT   EQU  X'03'           .. ALLOCATE SNAP (SPUN SYSOUT)\n$DAIR_INTRDR   EQU  X'04'           .. ALLOCATE INTERNAL READER\n$DAIR_RELEASE  EQU  X'05'           .. RELEASE\n$DAIR_DELETE   EQU  X'06'           .. DELETE\nDAIR_DD        DS   CL8             DDNAME NAME\nDAIR_DSN       DS   CL44            DATASET NAME\nDAIR_MEMBER    DS   CL8             MEMBER NAME\nDAIRBLKN       DS   XL4             ALLOCATION BLOCK LENGTH\nDAIRPRI        DS   XL4             PRIMARY ALLOCATION QUANTITY\nDAIRSEC        DS   XL4             SECONDARY ALLOCATION QUANTITY\nDAIRUNIT       DS   CL8             UNIT NAME\nDAIR_CLASS     DS   C               OUTPUT CLASS FOR SPUN SYSOUT\nDAIR_R15       DS   XL2             R15 FROM SVC99\nDAIR_ERROR     DS   XL2             ERROR CODE FROM SVC99\nDAIR_INFO      DS   XL2             INFO CODE FROM SVC99\nDAIRL          EQU  *-DAIRREQ\n         MEND\n./ ADD NAME=FMH5     0100-09250-09250-0917-00037-00037-00000-MACLIB\n         MACRO\n         FMH5  &DSECT=,&TRAN=\n         LCLA  &LEN\n         AIF   ('&DSECT' EQ 'YES').DSECT00\n         AIF   ('&DSECT' EQ 'NO').CSECT00\n         MNOTE 12,'''DSECT'' IS INVALID, MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.DSECT00 ANOP\nFMH5     DSECT\n         AGO   .COMM\n.CSECT00 ANOP\nFMH5     DS    0A\n.COMM    ANOP\n         DC    AL1(FMH5L)            FMH LENGTH\n         DC    X'05'                 FMH TYPE\n         DC    XL2'02FF'             ATTACH COMMAND CODE\n         DC    X'00'                 FLAG BYTE\n         DC    X'03'                 LENGTH OF FIXED PARAMETERS FIELD\n         DC    X'D0'                 CONVERSATION TYPE (BASIC)\n         DC    X'00'                 RESERVED\n         DC    X'40'                 ALLOW CONFIRMS\n         AIF   ('&DSECT' EQ 'YES').DSECT01\n&LEN     SETA  K'&TRAN\nFMH5TRNL DC    AL1(&LEN)             TRANSACTION NAME LENGTH\nFMH5TRAN DC    C'&TRAN'              TRANSACTION NAME\nFMH5UID  DS    CL8                   TSO ID OF USER\nFMH5SMF  DS    CL4                   SMF ID OF USER\n         AGO   .CSECT01\n.DSECT01 ANOP\nFMH5TRNL DS    X                     TRANSACTION NAME LENGTH\nFMH5TRAN DS    CL8                   TRANSACTION NAME\n.CSECT01 ANOP\n         DC    X'00'                 LENGTH OF SECURITY INFORMATION\n         DC    X'00'                 LENGTH OF LUW IDENTIFIER\n         DC    X'00'                 LENGTH OF CONVERSATION CORRELATOR\nFMH5L    EQU   *-FMH5                FMH LENGTH\n         MEND\n./ ADD NAME=HISTREQ  0100-09250-09250-0917-00021-00021-00000-MACLIB\n*---------------------------------------------------------------------*\n*                                                                     *\n*        SOURCE HISTORY BLOCK                                         *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         HISTREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nHISTREQ  DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nHISTREQ  DSECT\n.LBL0020 ANOP\nHISTEYE  DS    CL8                 EYECATCHER\nHISTNEXT DS    A                   NEXT BLOCK ON CHAIN\nHISTECB  DS    A                   ECB POSTED WHEN COMPLETE\nHISTLIB  DS    CL8                 LIBRARY NAME\nHISTNAME DS    CL8                 SOURCE NAME\nHISTVER  DS    XL2                 SOURCE VERSION\nHISTREQL EQU   *-HISTREQ\n         MEND\n./ ADD NAME=ITRACE   0100-09250-09250-0917-00071-00071-00000-MACLIB\n.* ------------------------------------------------------------------*\n.*                                                                   *\n.*                        TRACE MACRO                                *\n.*                                                                   *\n.*       The trace function always captures the last three bytes of  *\n.*       the active task's TCB address and bytes 3-7 of the active   *\n.*       CSECT's name, and a trace ID.                               *\n.*                                                                   *\n.*       One or two data elements (8 bytes each) may be captured at  *\n.*       any trace point.  The data to be captured may be specified  *\n.*       in either of two ways: DATA1 or RDATA1 and DATA2 or RDATA2. *\n.*       DATA1 and RDATA1 are mutually exclusive as are DATA2 and    *\n.*       RDATA2.  DATA1 and DATA2 specify the address of data to be  *\n.*       captured, RDATA1 and RDATA2 specify a register whose        *\n.*       contents are to be captured.                                *\n.*                                                                   *\n.*       For example:                                                *\n.*                                                                   *\n.*                 ITRACE ID=POINTA,DATA1=VALUE1,RDATA2=R4           *\n.*                                                                   *\n.*          In this case the trace entry would include the TCB       *\n.*          address, CSECT name, ID \"POINTA\", 8 bytes of data        *\n.*          beginning at value1's address and the contents of        *\n.*          register 4.                                              *\n.*                                                                   *\n.* ------------------------------------------------------------------*\n         MACRO\n&NAME    ITRACE &ID=,&DATA1=,&DATA2=,&RDATA1=,&RDATA2=\n         AIF   (T'&DATA1 NE 'O' AND T'&RDATA1 NE 'O').ERR0010\n         AIF   (T'&DATA2 NE 'O' AND T'&RDATA2 NE 'O').ERR0020\n         AIF   ('&SYSPARM' EQ 'NOTRACE').MEXIT\n         AIF   (T'&DATA1 EQ 'O').DATA020\n         AIF   ('&DATA1'(1,1) EQ '(').DATA010\n         LA    R14,&DATA1            DATA ADDRESS\n         MVC   TRDATA1,0(R14)        MOVE DATA\n         AGO   .DATA030\n.DATA010 ANOP\n         MVC   TRDATA1,0&DATA1       MOVE DATA\n         AGO   .DATA030\n.DATA020 ANOP\n         AIF   (T'&RDATA1 EQ 'O').DATA030\n         STCM  &RDATA1,15,TRDATA1    SAVE REGISTER CONTENTS\n.DATA030 ANOP\n         AIF   (T'&DATA2 EQ 'O').DATA050\n         AIF   ('&DATA2'(1,1) EQ '(').DATA040\n         LA    R14,&DATA2            DATA ADDRESS\n         MVC   TRDATA2,0(R14)        MOVE DATA\n         AGO   .DATA060\n.DATA040 ANOP\n         MVC   TRDATA2,0&DATA2       MOVE DATA\n         AGO   .DATA060\n.DATA050 ANOP\n         AIF   (T'&RDATA2 EQ 'O').DATA060\n         STCM  &RDATA2,15,TRDATA2    SAVE REGISTER CONTENTS\n.DATA060 ANOP\n         BAL   R14,TRACE000          ENTER TRACE ROUTINE\n         AIF      (T'&ID EQ 'O').NOID\n&NAME    DC    CL8'&ID'              TRACE ID\n         AGO   .ID\n.NOID    ANOP\n&NAME    DC    CL8'**NOID**'\n.ID      ANOP\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.ERR0020 ANOP\n         MNOTE 12,'DATA2 AND RDATA2 ARE MUTUALLY EXCLUSIVE'\n.MEXIT   ANOP\n         MEXIT\n         MEND\n./ ADD NAME=LIBBLOK  0100-09250-09250-0917-00049-00049-00000-MACLIB\n         MACRO\n         LIBBLOK &DSECT=\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Libraries exist in VSAM clusters.  Users refer to the library  *\n*      by \"name\".  The LIBRARY statements in the STC's start up       *\n*      parameters associate library names with the corresponding VSAM *\n*      cluster.                                                       *\n*                                                                     *\n*      There is a LIBBLOK per STC LIBRARY parameter statement.        *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         AIF  (T'&DSECT EQ 'O').ERR0010\n         AIF  ('&DSECT' EQ 'NO').CSECT00\n         AIF  ('&DSECT' EQ 'YES').DSECT00\n         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'\n         MEXIT\n.CSECT00 ANOP\nLIBBLOK             DS  0F\n         AGO  .COMMON\n.DSECT00 ANOP\nLIBBLOK             DSECT\n.COMMON  ANOP\nLIB_EYE             DS  CL8         EYECATCHER\nLIB_NEXT            DS  A           NEXT LIBRARY BLOCK\nLIB_READS           DS  A           NUMBER OF READS\nLIB_WRITES          DS  A           NUMBER OF WRITES\nLIB_ERASES          DS  A           NUMBER OF ERASES\nLIB_NEW             DS  A           NUMBER OF NEW MEMBERS\nLIB_CHECK_OUT       DS  A           NUMBER OF MEMBER CHECK-OUTS\nLIB_CHECK_IN        DS  A           NUMBER OF MEMBER CHECK-INS\nLIB_VIEW            DS  A           NUMBER OF VIEWED MEMBERS\nLIB_UPDATE          DS  A           NUMBER OF UPDATED MEMBERS\nLIB_DELETE          DS  A           NUMBER OF DELETED MEMBERS\nLIB_USERS           DS  A           CHAIN OF ACTIVE USERS\n\nLIB_NAME            DS  CL8         LIBRARY NAME\nLIB_DESCRIPTION     DS  CL80        LIBRARY DESCRIPTION\nLIB_VSAM_DSN        DS  CL44        VSAM CLUSTER DSN\nLIB_ACB             DS  (ACBL)X     ACB\nLIB_STATUS          DS  X\n$LIB_AUTO_OPEN      EQU X'80'       OPEN AT START UP\n$LIB_ALLOCATED      EQU X'40'       LIBRARY IS ALLOCATED\n$LIB_OPEN           EQU X'20'       LIBRARY IS OPEN\nLIBBLOKL            EQU *-LIBBLOK\n         MEND\n./ ADD NAME=LIBFUNC  0100-09250-09250-0917-00039-00039-00000-MACLIB\n         MACRO\n         LIBFUNC &DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      LIBRARY REQUEST BLOCK                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         AIF  (T'&DSECT EQ 'O').ERR0010\n         AIF  ('&DSECT' EQ 'YES').DSECT00\n         AIF  ('&DSECT' EQ 'NO').CSECT00\n         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'\n         MEXIT\n.CSECT00 ANOP\nLIBFUNC                DS   0F\n         AGO  .COMMON\n.DSECT00 ANOP\nLIBFUNC                DSECT\n.COMMON  ANOP\nLIB_FUNCTION_EYE       DS  CL8        EYECATCHER\nLIB_FUNCTION_NEXT      DS  A          NEXT BLOCK ON THE CHAIN\nLIB_FUNCTION_ECB       DS  A\nLIB_FUNCTION_USER      DS  A          USERBLOK ADDRESS (ADDS/REMS)\nLIB_FUNCTION           DS  X          COMMAND\n$LIB_FUNCTION_OPEN     EQU X'01'      .. OPEN\n$LIB_FUNCTION_CLOSE    EQU X'02'      .. CLOSE\n$LIB_FUNCTION_CLOSET   EQU X'03'      .. CLOSE, TYPE=T\n$LIB_FUNCTION_ADD_USER EQU X'04'      .. ADD A USER\n$LIB_FUNCTION_REM_USER EQU X'05'      .. REMOVE A USER\n$LIB_FUNCTION_REM_TASK EQU X'06'      .. REMOVE A USER (SUBTASK ENDED)\nLIB_FUNCTION_STATUS    DS  X          STATUS\n$LIB_FUNCTION_OK       EQU X'00'      .. ALL SUCCESSFUL\n$LIB_FUNCTION_ERROR    EQU X'01'      .. ERROR HAS OCCURRED\nLIB_FUNCTION_LIB_NAME  DS  CL8        LIBRARY NAME\nLIB_FUNCTION_MESSAGE   DS  CL120\nLIBFUNCL               EQU *-LIBFUNC\n         MEND\n./ ADD NAME=LIBPRFX  0100-09250-09250-0917-00007-00007-00000-MACLIB\nMODPRFX  DSECT\n         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS                 ASE00110\n         LR    R12,R15             LOAD PERMANENT BASE                  ASE00120\n         B     0(R0)               BRANCH AROUND MOD NAME/TIME/DESC\nPFXMODNM DS    CL8                 MODULE NAME\nPFXMODDT DS    CL8                 ASSEMBLY DATE\nPFXMODTM DS    CL6                 ASSEMBLY TIME\n./ ADD NAME=LIBRECD  0100-09250-09250-0917-00051-00051-00000-MACLIB\n         MACRO\n         LIBRECD &DSECT=YES\n         AIF  (T'&DSECT EQ 'O').ERR0010\n         AIF  ('&DSECT' EQ 'YES').DSECT00\n         AIF  ('&DSECT' EQ 'NO').CSECT00\n         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'\n         MEXIT\n.CSECT00 ANOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Library \"index\" record                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB_RECORD               DS   0C\n         AGO  .COMMON\n.DSECT00 ANOP\nLIB_RECORD               DSECT\n.COMMON  ANOP\nLIB_KEY                  DS  0CL15\nLIB_KEY_TYPE             DS  C\n$LIB_KEY_LIB_DESC        EQU X'00'\n$LIB_KEY_TYPE_INDEX      EQU X'01'\n$LIB_KEY_TYPE_DATA       EQU X'02'\nLIB_KEY_NAME             DS  CL8\nLIB_KEY_VERSION          DS  XL2\nLIB_KEY_SEQ              DS  XL4\nLIB_DATA                 DS  0CL80\n\nLIB_INDEX                DS  0C\nLIB_INDEX_OWNER          DS  CL8\nLIB_INDEX_STATUS         DS  X\n$LIB_STATUS_IN           EQU X'01'\n$LIB_STATUS_OUT          EQU X'02'\n\nLIB_INDEX_CREATE_DATE    DS  XL4\nLIB_INDEX_CREATE_TIME    DS  XL4\nLIB_INDEX_CHECK_OUT_DATE DS  XL4\nLIB_INDEX_CHECK_OUT_TIME DS  XL4\nLIB_INDEX_CHECK_OUT_USER DS  CL8\nLIB_INDEX_CHECK_OUTS     DS  XL4\nLIB_INDEX_CHECK_IN_DATE  DS  XL4\nLIB_INDEX_CHECK_IN_TIME  DS  XL4\nLIB_INDEX_CHECK_IN_USER  DS  CL8\nLIB_INDEX_RECORDS        DS  XL4          NUMBER OF RECORDS IN SOURCE\n                         ORG LIB_DATA\nLIB_INDEX_DESC           DS  CL80         DESCRIPTION\nLIB_INDEX_RECORD_LENGTH  EQU *-LIB_RECORD\n         MEND\n./ ADD NAME=LIBSAVE  0100-09250-09250-0917-00021-00021-00000-MACLIB\n         MACRO\n&NAME    LIBSAVE &DSECT=NO\n         LCLC   &DNAME\n         AIF    ('&DSECT' EQ 'YES').LBL0010\n         AIF    ('&DSECT' EQ 'NO').LBL0020\n         MNOTE  12,'INVALID ''DSECT'' PARAMETER'\n         MEXIT\n.LBL0010 ANOP\n         AIF    (T'&NAME EQ 'O').LBL001A\n&DNAME   SETC   '&NAME'\n         AGO    .LBL001B\n.LBL001A ANOP\n&DNAME   SETC   'LIBSAVE'\n.LBL001B ANOP\n&DNAME   DSECT\n.LBL0020 ANOP\nDXDSAVE  DS    18F\nDXDID    DS    CL8\nTRDATA1  DS    CL8\nTRDATA2  DS    CL8\n         MEND\n./ ADD NAME=LIBSPFD  0100-09250-09250-0917-00089-00089-00000-MACLIB\n         MACRO\n         LIBSPFD  &TYPE=\n         AIF   ('&TYPE' EQ 'CSECT').CSECT\n         AIF   ('&TYPE' EQ 'DSECT').DSECT\n         MNOTE 12,'INVALID TYPE'\n         MEXIT\n.CSECT   ANOP\nLIBSPFD  CSECT\n         AGO   .COMM\n.DSECT   ANOP\nLIBSPFD  DSECT\n.COMM    ANOP\nSPF_LVLINE             DC    F'0'       LAST VISIBLE LINE\nSPF_VWIDTH             DC    F'0'       DYNAMIC AREA WIDTH\nSPF_VCOL               DC    F'0'       DYNAMIC AREA COLUMN\nSPF_VDEPTH             DC    F'0'       DYNAMIC AREA DEPTH\nSPF_VROW               DC    F'0'       DYNAMIC AREA ROW\nSPF_DYNAMIC_AREA_ADDR  DC    A(0)       DYNAMIC AREA ADDRESS\nSPF_DYNAMIC_AREA_SIZE  DC    F'0'       DYNAMIC AREA SIZE\nSPF_TEXT_ADDR          DC    A(0)       DYNAMIC AREA TEXT ADDRESS\nSPF_TEXT_SIZE          DC    F'0'       DYNAMIC AREA TEXT SIZE\nSPF_TEXT_LINES         DC    F'0'       NUMBER OF TEXT LINES\nSPF_TEXT_LINE_LENGTH   DC    F'0'       LENGTH OF EACH TEXT LINE\nSPF_TEXT_OFFSET        DC    F'0'       DYNAMIC AREA TEXT OFFSET\nSPF_TEXT_RELATIVE_LINE DC    F'0'       DYNAMIC AREA TEXT OFFSET\nSPF_CURSOR_POSITION    DC    F'0'       CURSOR POSITION\nSPF_VTYPE              DC    CL8' '     DYNAMIC AREA TYPE\nSPF_ZSCROLLN           DC    F'0'       NUMBER OF LINES TO SCROLL\nSPF_ZSCROLLA           DC    CL8' '     SCROLL AMOUNT\nSPF_ZVERB              DC    CL8' '     SPF VERB\nSPF_LIB_NAME           DC    CL8' '     SPF LIBRARY NAME\nSPF_LIB_DESC           DC    CL40' '    SPF LIBRARY DESCRIPTION\nSPF_MEM_NAME           DC    CL8' '     SPF MEMBER NAME\nSPF_MEM_VERSION        DC    CL5' '     SPF MEMBER VERSION\nSPF_IN_OUT_STATUS      DC    CL3' '     CHECK IN/OUT STATUS\nSPF_OUT_USER           DC    CL8' '     CHECKED OUT TO THIS USER\nSPF_OWNER              DC    CL8' '     OWNED BY THIS USER\nSPF_DATA_ID            DC    CL8' '     DATA ID FOR BROWSE\nSPF_ZCMD               DC    CL80' '    SPF COMMAND AREA\n\nSPF_SYSTEM_NAME        DS    CL20' '    LIBRARIAN'S NAME\n\nSPF_USER_DSN           DC    CL44' '    USER DATASET\nSPF_USER_MEMBER        DC    CL8' '     USER MEMBER\nSPF_OPTION             DC    CL4' '     OPTION\nSPF_UNIT               DC    CL8' '     UNIT NAME FOR NEW ALLOCATIONS\n\nSPF_MSG1               DS    0CL76\nSPF_MSG1_ID            DC    CL11' '    MESSAGE ID\nSPF_MSG1_TEXT          DC    CL65' '    MESSAGE TEXT\nSPF_MSG2               DS    0CL76\nSPF_MSG2_ID            DC    CL11' '    MESSAGE ID\nSPF_MSG2_TEXT          DC    CL65' '    MESSAGE TEXT\nSPF_MSG3               DS    0CL76\nSPF_MSG3_ID            DC    CL11' '    MESSAGE ID\nSPF_MSG3_TEXT          DC    CL65' '    MESSAGE TEXT\nSPF_MSG4               DS    0CL76\nSPF_MSG4_ID            DC    CL11' '    MESSAGE ID\nSPF_MSG4_TEXT          DC    CL65' '    MESSAGE TEXT\nSPF_MSG5               DS    0CL76\nSPF_MSG5_ID            DC    CL11' '    MESSAGE ID\nSPF_MSG5_TEXT          DC    CL65' '    MESSAGE TEXT\n\nSPF_MISC1              DC    CL79' '\nSPF_MISC2              DC    CL79' '\nSPF_MISC3              DC    CL79' '\nSPF_MISC4              DC    CL79' '\nSPF_MISC5              DC    CL79' '\nSPF_MISC6              DC    CL79' '\nSPF_MISC7              DC    CL79' '\nSPF_MISC8              DC    CL79' '\nSPF_MISC9              DC    CL79' '\nSPF_MISC10             DC    CL79' '\n\nSPF_PANEL              DC    CL8' '     SPF PANEL NAME\nSPF_DISPLAY_FLAGS      DC    X'00'      DISPLAY OPTIONS\n$NO_SCROLL             EQU   X'80'      .. NO SCROLLING\n$NO_CURSOR             EQU   X'40'      .. NO CURSOR POSITION DATA\n\nSPF_SMF                DC    CL8' '     USER'S SYSTEM SMF NAME\nSPF_USER               DC    CL8' '     USER'S USERID\nSPF_USER_NAME          DC    CL20' '    USER'S NAME\n\nSPF_COMM1              DC    CL80' '    COMMENT 1\nSPF_COMM2              DC    CL80' '    COMMENT 2\nSPF_COMM3              DC    CL80' '    COMMENT 3\nSPF_COMM4              DC    CL80' '    COMMENT 4\nSPF_COMM5              DC    CL80' '    COMMENT 5\n         MEND\n./ ADD NAME=LIBUSER  0100-09250-09250-0917-00029-00029-00000-MACLIB\n         MACRO\n         LIBUSER &DSECT=\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      When a user begins accessing a library, a LIBUSER block is     *\n*      added to the chain anchored at LIB_USER in the LIBBLOK.        *\n*      When the user changes libraries or ends the session with the   *\n*      librarian, the LIBUSER block is removed.                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         AIF  (T'&DSECT EQ 'O').ERR0010\n         AIF  ('&DSECT' EQ 'NO').CSECT00\n         AIF  ('&DSECT' EQ 'YES').DSECT00\n         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'\n         MEXIT\n.CSECT00 ANOP\nLIBUSER             DS  0F\n         AGO  .COMMON\n.DSECT00 ANOP\nLIBUSER             DSECT\n.COMMON  ANOP\nLIB_USER_EYE        DS  CL8         EYECATCHER\nLIB_USER_NEXT       DS  A           NEXT LIBUSER BLOCK\nLIB_USER_USER       DS  A           USERBLOK ADDRESS\nLIBUSERL            EQU *-LIBUSER\n         MEND\n./ ADD NAME=NETBLOK  0100-09250-09250-0917-00064-00064-00000-MACLIB\n         MACRO\n         NETBLOK &DSECT=\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      NETBLOK  is the data sent between a user and the STC           *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         AIF  (T'&DSECT EQ 'O').ERR0010\n         AIF  ('&DSECT' EQ 'NO').CSECT00\n         AIF  ('&DSECT' EQ 'YES').DSECT00\n         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'\n         MEXIT\n.CSECT00 ANOP\nNETBLOK            DS    0F\n         AGO  .COMMON\n.DSECT00 ANOP\nNETBLOK            DSECT\n.COMMON  ANOP\nNET_LENGTH             DS   XL2     LENGTH\nNET_FILL               DS   XL2\nNET_FUNCTION           DS   X       FUNCTION\n$NET_IDENTIFY_USER     EQU  X'01'   .. IDENTIFY USER\n$NET_GET_LIBS          EQU  X'02'   .. GET LIST OF LIBRARIES\n$NET_GET_MEMBERS       EQU  X'03'   .. GET LIST OF MEMBERS\n$NET_CHECK_IN_AUTH     EQU  X'04'   .. VERIFY AUTH FOR A CHECK-IN\n$NET_CHECK_IN_SOURCE   EQU  X'05'   .. CHECKING IN SOURCE DATA\n$NET_CHECK_NEW_AUTH    EQU  X'06'   .. CHECK AUTH FOR A NEW MEMBER\n$NET_CHECK_OUT_AUTH    EQU  X'07'   .. VERIFY AUTH FOR A CHECK-OUT\n$NET_CHECK_OUT_SOURCE  EQU  X'08'   .. CHECK OUT MEMBER SOURCE\n$NET_CHECK_VIEW_AUTH   EQU  X'09'   .. VIEW MEMBER SOURCE\n$NET_VIEW_SOURCE       EQU  X'0A'   .. VIEW MEMBER SOURCE\n$NET_CHECK_DESC_AUTH   EQU  X'0B'   .. CHECK AUTH FOR VIEW/UPDATE DESC\n$NET_SEND_DESC         EQU  X'0C'   .. FILE DESCRIPTION\n$NET_GET_DESC          EQU  X'0D'   .. FILE DESCRIPTION\n$NET_GET_RECORDS       EQU  X'0E'   .. GET NUMBER OF SOURCE RECORDS\n$NET_SEND_RECORDS      EQU  X'0F'   .. SEND NUMBER OF SOURCE RECORDS\n$NET_ENQUE_LIB         EQU  X'10'   .. ENQUEUE A LIBRARY\n$NET_DEQ_LIB           EQU  X'11'   .. DEQUEUE A LIBRARY\n$NET_CHECK_DEL_AUTH    EQU  X'12'   .. CHECK AUTH FOR DELETION\n$NET_DELETE            EQU  X'13'   .. DELETE A MEMBER\n$NET_NEW_VERSION       EQU  X'14'   .. CREATE A NEW VERSION OF A MEMBER\n$NET_CONFIRM_CHECK_OUT EQU  X'15'   .. CONFIRM CHECK OUT\n$NET_ABORT_CHECK_OUT   EQU  X'16'   .. ABORT CHECK-OUT\n$NET_GET_STATUS        EQU  X'17'   .. GET STC STATUS\n$NET_CHECK_ADMIN_AUTH  EQU  X'18'   .. CHECK AUTH FOR ADMIN FUNCTION\n$NET_SEND_ADMIN        EQU  X'19'   .. UPDATE IN/OUT STATUS OR USER\n$NET_UNDO              EQU  X'1A'   .. UNDO (RESET CHECK OUT STATUS)\n$NET_SUBMIT_JOB        EQU  X'1B'   .. SUBMIT AS BATCH JOB\n$NET_CLOSE             EQU  X'FF'   .. CLOSE (TCP/IP CONNECTION)\nNET_RETURN_CODE        DS   X\n$NET_OK                EQU  X'00'   .. SUCCESSFUL\n$NET_EOF               EQU  X'01'   .. END_OF_FILE\n$NET_ERROR             EQU  X'02'   .. ERROR\nNET_MSG_1              DS   CL80\nNET_MSG_2              DS   CL80\nNET_MSG_3              DS   CL80\nNET_MSG_4              DS   CL80\nNET_MSG_5              DS   CL80\nNET_DATA               DS   0C\nNETBLOKL               EQU  *-NETBLOK\n         MEND\n./ ADD NAME=OPTDSECT 0100-09250-09250-0917-00013-00013-00000-MACLIB\nOPTDSECT DSECT\nOPTTRACE DS    H                NUMBER OF TRACE ENTRIES\n         SPACE 1\nOPTMAXL  DS    PL3\n         SPACE 1\nOPTRACF  DS    0CL09\nOPTRACFL DS    AL1              LENGTH OF RACF CLASS\nOPTRACFC DS    CL8              RACF CLASS\nOPTSNAPC DS    C                SNAP DUMP SYSOUT CLASS\nOPTPORT  DS    AL2              TCP/IP PORT NUMBER\n         SPACE 1\nOPT#ACB  DS    AL2              NUMBER OF ACBS\nOPTACB   DS    CL8              USER ACB NAME(S)\n./ ADD NAME=OPTIONS  0100-09250-09250-0917-00046-00046-00000-MACLIB\n         MACRO\n         OPTIONS &TRSIZE=500,         NUMBER OF TRACE TABLE ENTRIES    +\n               &MAXLINES=65,          MAX LINE COUNT OUT SYSOUT        +\n               &PORT=,                PORT NUMBER (TCPIP)              +\n               &RACCLASS=APPL,        RACF CLASS 'LIB'                 +\n               &SNAPCLAS=Z,           SYSOUT CLASS FOR SNAP DUMPS      +\n               &UACB=                 SPECIFY USER INTERFACE ACB NAMES\n         LCLA  &INDX1,&IP\n&IP      SETA  0\n         AIF   (T'&PORT EQ 'O').NOPORT\n         AIF   (T'&PORT NE 'N').BADPORT\n         AIF   (&PORT EQ 0).PORT0\n.NOPORT  ANOP\n         AGO   .MAIN\n.BADPORT ANOP\n         MNOTE 12,'PORT VALUE MUST BE NUMERIC'\n         MEXIT\n.PORT0   ANOP\n         MNOTE 12,'PORT NUMBER MAY NOT BE ZERO'\n         MEXIT\n.MAIN    ANOP\n&IP      SETA  &PORT\nLIBOPT   CSECT\nLIBOPT   AMODE 31\nLIBOPT   RMODE ANY\n         DC    H'&TRSIZE'             NUMBER OF TRACE ENTRIES\n         DC    PL3'&MAXLINES'         MAX LINES PER PAGE\n         DC    AL1(8)                 LENGTH OF RACF CLASS\n         DC    CL8'&RACCLASS'         RACF CLASS\n         DC    C'&SNAPCLAS'           SNAP DUMP SYSOUT CLASS\n         DC    AL2(&IP)               TCPIP PORT NUMBER\n         DC    AL2((ACBEND-ACBSTART)/ACBLEN)\nACBSTART DS    0C\n&INDX1   SETA  1\n.ACB00   ANOP\n         AIF   (T'&UACB(&INDX1) EQ 'O').MEND\n         DC    CL8'&UACB(&INDX1)'     USER ACB NAME\n         AIF   (&INDX1 EQ N'&UACB).MEND\n         AIF   (&INDX1 GT 1).ACB10\nACBLEN   EQU   *-ACBSTART\n.ACB10   ANOP\n&INDX1   SETA  &INDX1+1\n         AGO   .ACB00\n.MEND    ANOP\nACBEND   DS    0C\n         MEND\n./ ADD NAME=PRTBLOK  0100-09250-09250-0917-00024-00024-00000-MACLIB\n*---------------------------------------------------------------------*\n*                                                                     *\n*        PRINTER REQUEST BLOCK                                        *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         PRTBLOK &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nPRTBLOK  DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nPRTBLOK  DSECT\n.LBL0020 ANOP\nPRTEYE   DS    CL8                 EYECATCHER\nPRTNEXT  DS    A                   NEXT BLOCK ON THE CHAIN\nPRTCMD   DS    C                   COMMAND\n$PRTHEAD EQU   C'H'                .. PRINT HEADING\n$PRTPRT  EQU   C'P'                .. PRINT\n$PRTASIS EQU   C'A'                .. PRINT AS IS\nPRTCC    DS    C                   CARRIAGE CONTROL\nPRTMSGID DS    CL11                MESSAGE ID\nPRTDATA  DS    CL120               PRINT DATA\nPRTBLOKL EQU   *-PRTBLOK\n         MEND\n./ ADD NAME=REGEQU   0100-09250-09250-0917-00016-00016-00000-MACLIB\nR0       EQU    0\nR1       EQU    1\nR2       EQU    2\nR3       EQU    3\nR4       EQU    4\nR5       EQU    5\nR6       EQU    6\nR7       EQU    7\nR8       EQU    8\nR9       EQU    9\nR10      EQU    10\nR11      EQU    11\nR12      EQU    12\nR13      EQU    13\nR14      EQU    14\nR15      EQU    15\n./ ADD NAME=SCOMM    0100-09250-09250-0917-00158-00158-00000-MACLIB\n         MACRO\n         SCOMM &TYPE=\n*---------------------------------------------------------------------*\n*                                                                     *\n*          STC COMMON AREA MAPPING MACRO                              *\n*                                                                     *\n*     This macro will generate either the 'common' module CSECT or    *\n*     a DSECT to map the 'common' module.  'Common' is used for       *\n*     constants and work areas that are required by several modules   *\n*     allowing some elimination of duplicated data and to allow       *\n*     inter-module communication.                                     *\n*                                                                     *\n*     The trace table code is also incorporated into the 'common'     *\n*     area.                                                           *\n*                                                                     *\n*---------------------------------------------------------------------*\n         AIF   ('&TYPE' EQ 'CSECT').CSECT\n         AIF   ('&TYPE' EQ 'DSECT').DSECT\n         MNOTE 12,'INVALID TYPE'\n         MEXIT\n.CSECT   ANOP\nLIBSCOMM CSECT\nLIBSCOMM AMODE 31\nLIBSCOMM RMODE ANY\n         AGO   .NODSECT\n.DSECT   ANOP\nLIBSCOMM DSECT\n.NODSECT ANOP\n         COMMCOMM MAIN=SCOMM\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n                      DC    CL8'LIBSATTN'\nCOMM_LIBATTN          DC    A(0)      ATTENTION EXIT\n                      DC    CL8'LIBLERAD'\nCOMM_LIBLERAD         DC    A(0)      LERAD EXIT\n                      DC    CL8'LIBSMAIN'\nCOMM_LIBSMAIN         DC    A(0)      STC MAINLINE\n*---------------------------------------------------------------------*\n*                                                                     *\n*          PRINT SUBTASK CONTROL                                      *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_PRINT_TCB        DC    A(0)      PRINT SUBTASK'S TCB ADDRESS\nCOMM_PRINT_REQ        DC    A(0)      PRINT SUBTASK PRTBLOK QUEUE\nCOMM_PRINT_TERM_ECB   DC    A(0)      PRINT SUBTASK TERMINATION ECB\nCOMM_PRINT_WORK_ECB   DC    A(0)      PRINT WORK TO DO ECB\nCOMM_PRINT_DXD        DC    A(0)      PRINT SUBTASK'S WORK AREA\n*---------------------------------------------------------------------*\n*                                                                     *\n*          Console subtask control                                    *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_CSUB_TCB         DC    A(0)      CONSOLE SUBTASK'S TCB ADDRESS\nCOMM_CSUB_TERM_ECB    DC    A(0)      CONSOLE SUBTASK TERMINATION ECB\nCOMM_CSUB_WORK_ECB    DC    A(0)      CONSOLE SUBTASK WORK TO DO ECB\n*---------------------------------------------------------------------*\n*                                                                     *\n*          Dynamic allocation/de-allocation                           *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_DSUB_TCB         DC    A(0)      DAIR SUBTASK'S TCB ADDRESS\nCOMM_DSUB_REQ         DC    A(0)      DAIR SUBTASK WORK QUEUE\nCOMM_DSUB_TERM_ECB    DC    A(0)      DAIR SUBTASK TERMINATION ECB\nCOMM_DSUB_WORK_ECB    DC    A(0)      DAIR SUBTASK WORK TO DO ECB\n*---------------------------------------------------------------------*\n*                                                                     *\n*          Library open/close                                         *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_LSUB_TCB         DC    A(0)      OPEN/CLOSE SUBTASK'S TCB ADDRESS\nCOMM_LSUB_REQ         DC    A(0)      OPEN/CLOSE SUBTASK WORK QUEUE\nCOMM_LSUB_TERM_ECB    DC    A(0)      OPEN/CLOSE SUBTASK TERM ECB\nCOMM_LSUB_WORK_ECB    DC    A(0)      OPEN/CLOSE SUBTASK WORK TO DO ECB\n*---------------------------------------------------------------------*\n*                                                                     *\n*          Source history subtask control                             *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_HSUB_TCB         DC    A(0)      SOURCE HISTORY SUBTASK'S TCB\nCOMM_HSUB_REQ         DC    A(0)      SOURCE HISTORY SUBTASK WORK QUEUE\nCOMM_HSUB_TERM_ECB    DC    A(0)      SOURCE HISTORY SUBTASK TERM ECB\nCOMM_HSUB_WORK_ECB    DC    A(0)      HISTORY SUBTASK WORK TO DO\n*---------------------------------------------------------------------*\n*                                                                     *\n*          VTAM communcation subtask control                          *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_VTAM_TCB         DC    A(0)      VTAM SUBTASK'S ECB ADDRESS\nCOMM_VTAM_REQ         DC    A(0)      VTAM SUBTASK WORK QUEUE\nCOMM_VTAM_TERM_ECB    DC    A(0)      VTAM SUBTASK TERM ECB\nCOMM_VTAM_WORK_ECB    DC    A(0)      VTAM SUBTASK WORK TO DO\n*---------------------------------------------------------------------*\n*                                                                     *\n*          TCP/IP communcation subtask control                        *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_TCPIP_TCB        DC    A(0)      TCPIP SUBTASK'S ECB ADDRESS\nCOMM_TCPIP_REQ        DC    A(0)      TCPIP SUBTASK WORK QUEUE\nCOMM_TCPIP_TERM_ECB   DC    A(0)      TCPIP SUBTASK TERM ECB\nCOMM_TCPIP_WORK_ECB   DC    A(0)      TCPIP SUBTASK WORK TO DO\n*---------------------------------------------------------------------*\n*                                                                     *\n*          GLOBAL DATA                                                *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_LIBRARY_CHAIN    DC   A(0)       LIBRARY CHAIN\nCOMM_USER_CHAIN       DC   A(0)       USER BLOCK CHAIN\nCOMM_VTAM_LOGINS      DC   F'0'       NUMBER OF VTAM LOGONS\nCOMM_TCPIP_LOGINS     DC   F'0'       NUMBER OF TCP/IP LOGONS\nCOMMXUSR              DC   A(0)       EXTERNAL USERS CHAIN\nCOMM_ATTN_ECB         DC   F'0'       ECB POSTED BY ATTENTION EXIT\nCOMM_TERMINATION_ECB  DC   F'0'       ECB POSTED AS SIGNAL TO SHUT DOWN\nCOMM_NETWORK_IO_AREA  DC   A(0)       I/O AREA FOR NETWORK USE\nCOMM_VTAM_ECB         DC   F'0'       ECB FOR VTAM EVENTS\nCOMM_ACB              DC   A(0)       ACB'S ADDRESS\nCOMM_ACB_LENGTH       DC   A(0)       ACB'S LENGTH\nCOMM_NIB              DC   A(0)       NIB'S ADDRESS\nCOMM_APPL_NAME_LENGTH DC   AL1(8)     APPLID'S LENGTH\nCOMM_APPL_NAME        DC   CL8' '     APPLID\nCOMM_PORT             DC   AL2(0)     SERVER'S TCP/IP PORT NUMBER\nCOMM_FLAGS            DC   X'00'      GLOBAL FLAGS\n$INIT                 EQU  X'80'      .. INITIALIZATION COMPLETE\n$ABEND                EQU  X'40'      .. ABEND AT END OF JOB\n$ABORT                EQU  X'20'      .. SERIOUS ERROR, ABORT\n$COMM_ACB_OPEN        EQU  X'01'      .. VTAM ACB IS OPEN\nCOMM_TASKS            DC   X'00'      SUBTASK ACTVE INDICATORS\n$TASK_PRINT           EQU  X'80'      .. PRINT SUBTASK IS ATTACHED\n$TASK_CONSOLE         EQU  X'40'      .. CONSOLE SUBTASK IS ATTACHED\n$TASK_DAIR            EQU  X'20'      .. DAIR SUBTASK ATTACHED\n$TASK_LIB             EQU  X'10'      .. LIBRARY OPEN/CLOSE ATTACHED\n$TASK_HISTORY         EQU  X'08'      .. CHANGED SOURCE HISTORY\n$TASK_VTAM            EQU  X'04'      .. VTAM SUBTASK ATTACHED\n$TASK_TCPIP           EQU  X'02'      .. TCP/IP SUBTASK ATTACHED\nCOMM_EOJ_PHASE        DC   X'00'      EOJ PHASES\n$EOJ1                 EQU  X'80'\n$EOJ2                 EQU  X'40'\n$EOJ3                 EQU  X'20'\n$EOJ4                 EQU  X'10'\nCOMM_SNAP_CLASS       DC   C'Z'       SNAP DUMP SYSOUT CLASS\nCOMM_SNAP_NBR         DC   PL4'0'     NUMBER OF SNAP DUMPS TAKEN\nCOMM_SUBMIT_NBR       DC   PL4'0'     NUMBER OF JOB(S) SUBMITTED\nCOMM_SYSTEM_NAME      DC   CL20' '    SYSTEM NAME\nCOMM_BLANKS           DC   CL132' '\nCOMM_RC               DC   X'00'      RETURN CODE\n\nCOMMRACF              DS   0CL9\n                      DS   AL1        RACF CLASS NAME LENGTH\n                      DS   CL8        RACF CLASS NAME\n\n                      CLIENT PREFIX=COMM_MAIN\n\nCOMM_MAX_LINES        DC   PL3'0'\nCOMMEND               EQU  *\n\n                COPY TRENTRY\n                COPY LIBPRFX\n         MEND\n./ ADD NAME=TCOMM    0100-09250-09250-0917-00135-00135-00000-MACLIB\n         MACRO\n         TCOMM &TYPE=\n*---------------------------------------------------------------------*\n*                                                                     *\n*          TSO COMMON AREA MAPPING MACRO                              *\n*                                                                     *\n*     This macro will generate either the 'common' module CSECT or    *\n*     a DSECT to map the 'common' module.  'Common' is used for       *\n*     constants and work areas that are required by several modules   *\n*     allowing some elimination of duplicated data and to allow       *\n*     inter-module communication.                                     *\n*                                                                     *\n*     The trace table code is also incorporated into the 'common'     *\n*     area.                                                           *\n*                                                                     *\n*---------------------------------------------------------------------*\n         AIF   ('&TYPE' EQ 'CSECT').CSECT\n         AIF   ('&TYPE' EQ 'DSECT').DSECT\n         MNOTE 12,'INVALID TYPE'\n         MEXIT\n.CSECT   ANOP\nLIBTCOMM CSECT\nLIBTCOMM AMODE 31\nLIBTCOMM RMODE 24\n         AGO   .NODSECT\n.DSECT   ANOP\nLIBTCOMM DSECT\n.NODSECT ANOP\n         COMMCOMM MAIN=TCOMM\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         DC    CL8'LIBTMAIN'\nATMAIN   DC    A(0)                TSO MAINLIN\n         DC    CL8'LIBTDISP'\nATDISP   DC    A(0)                DISPLAY PANELS WITH DYNAMIC AREA\n         DC    CL8'LIBTDLIB'\nATDLIB   DC    A(0)                DISPLAY LIST OF LIBRARIES\n         DC    CL8'LIBTDMEM'\nATDMEM   DC    A(0)                DISPLAY LIST OF MEMBERS\n         DC    CL8'LIBTPARM'\nATPARM   DC    A(0)                PARAMETER PARSER\n         DC    CL8'LIBTPARS'\nATPRSE   DC    A(0)                PARAMETER PARSER\n         DC    CL8'LIBTSNAP'\nATSNAP   DC    A(0)                SNAP DUMP\n         DC    CL8'LIBTSTAT'\nATSTAT   DC    A(0)                DISPLAY STC STATUS\n         DC    CL8'LIBTVMGR'\nATVTAM   DC    A(0)                VTAM FUNCTIONS\n         DC    CL8'LIBTVTAM'\nATTCP    DC    A(0)                TCP/IP FUNCTIONS\n         DC    CL8'LIBTTCP '\nATVMGR   DC    A(0)                SPF VARIABLE DEFINE/DELETE\n         DC    CL8'LIBSPFD'\nALIBSPFD DC    A(0)                SPF DATA\n         DC    CL8'ISPLINK'\nAISPLINK DC    A(0)                SPF INTERFACE ENTRY POINT\n         DC    CL8'LIBUX01'\nAUX01    DC    A(0)                USER EXIT 1 ENTRY POINT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_OPERANDS                DS    0A\nCOMM_OPERANDS_NBR            DS    XL4\nCOMM_OPERAND_1_ADDRESS       DS    XL4\nCOMM_OPERAND_1_LENGTH        DS    XL1\nCOMM_OPERAND_1_FLAGS         DS    X\nCOMM_OPERAND_2_ADDRESS       DS    XL4\nCOMM_OPERAND_2_LENGTH        DS    XL1\nCOMM_OPERAND_2_FLAGS         DS    X\nCOMM_OPERAND_3_ADDRESS       DS    XL4\nCOMM_OPERAND_3_LENGTH        DS    XL1\nCOMM_OPERAND_3_FLAGS         DS    X\nCOMM_OPERAND_4_ADDRESS       DS    XL4\nCOMM_OPERAND_4_LENGTH        DS    XL1\nCOMM_OPERAND_4_FLAGS         DS    X\nCOMM_OPERAND_5_ADDRESS       DS    XL4\nCOMM_OPERAND_5_LENGTH        DS    XL1\nCOMM_OPERAND_5_FLAGS         DS    X\nCOMM_OPERANDS_L              EQU   *-COMM_OPERANDS\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*          GLOBAL DATA                                                *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_NETWORK_IO_AREA         DC    A(0)     NETWORK I/O AREA\nCOMM_LIBRARY_CHAIN           DS    A(0)     ADDRESS OF LIBRARY LIST\nCOMM_NBR_OF_LIBRARIES        DS    F'0'     NUMBER OF LIBRARIES IN LIST\nCOMM_VTAM_ECB                DC    F'0'     ECB FOR VTAM EVENTS\nCOMM_ACB                     DC    A(0)     ACB'S ADDRESS\nCOMM_ACB_LENGTH              DC    F'0'     ACB'S LENGTH\nCOMM_EXLST                   DC    A(0)     EXLST'S ADDRESS\nCOMM_RPL                     DC    A(0)     RPL'S ADDRESS\nCOMM_RPLX                    DC    A(0)     RPL EXTENSION'S ADDRESS\nCOMM_NIB                     DC    A(0)     NIB'S ADDRESS\nCOMM_SERVER_HOST_NAME_LENGTH DC    F'6'\nCOMM_SERVER_PORT             DC    AL2(0)\nCOMM_APPL_NAME_LENGTH        DC    AL1(8)   APPLID'S LENGTH\nCOMM_APPL_NAME               DC    CL8' '   APPLID\nCOMM_SERVER_APPL_ID          DC    CL8' '   LIBRARY STC APPLID\nCOMM_SERVER_HOST_NAME        DC    CL24' '  LIBRARY IP HOST NAME\nCOMM_LIBRARY_NAME            DC    CL8' '   LIBRARY NAME\nCOMM_MEMBER_NAME             DC    CL8' '   MEMBER NAME\nCOMM_VERSION                 DC    XL4'00'  MEMBER VERSION\nCOMM_SOURCE_RECORDS          DC    XL4'00'  RECORDS IN SOURCE FILE\nCOMMBLKN                     DC    XL4'00'  ALLOCATION BLOCK LENGTH\nCOMMPRI                      DC    XL4'00'  PRIMARY ALLOCATION\nCOMMSEC                      DC    XL4'00'  SECONDARY ALLOCATION\nCOMM_CONVERSATION_ID         DC    XL4'00'  CONVERSATION ID\nCOMM_FLAGS                   DC    X'00'    GLOBAL FLAGS\n$ABEND                       EQU   X'80'    .. ABEND AT END OF JOB\n$ABORT                       EQU   X'40'    .. SERIOUS ERROR, ABORT\n$ACB_OPEN                    EQU   X'20'    .. ACB IS OPEN\n$SESSALO                     EQU   X'10'    .. SESSION ALLOCATED\n$LIST_ALL                    EQU   X'08'    .. LIST ALL MEMBERS\nCOMM_DD                      DS    X'00'\n$DD_SNAP                     EQU   X'80'    .. LIBSNAP DD IS PRESENT\n$DD_DEBUG1                   EQU   X'40'    .. DEBUG1 DD IS PRESENT\n$DD_DEBUG2                   EQU   X'20'    .. DEBUG2 DD IS PRESENT\n$DD_DEBUG3                   EQU   X'10'    .. DEBUG3 DD IS PRESENT\n$DD_DEBUG4                   EQU   X'08'    .. DEBUG4 DD IS PRESENT\nCOMM_BLANKS                  DC    CL80' '\nCOMM_RC                      DC    X'00'    RETURN CODE\n\nCOMMRACF                     DS    0CL9\n                             DS    A        RACF CLASS NAME LENGTH\n                             DS    CL8      RACF CLASS NAME\n\nCOMMEND                      EQU   *\n         SPACE 2\n         COPY  TRENTRY\n         COPY  LIBPRFX\n         MEND\n./ ADD NAME=TDISP    0100-09250-09250-0917-00022-00022-00000-MACLIB\n         MACRO\n         TDISP   &TYPE=\n         AIF    ('TYPE' EQ 'CSECT').CSECT\n         AIF    ('TYPE' EQ 'DSECT').DSECT\n         MNOTE  12,'TYPE IS INVALID'\n         MEXIT\n.CSECT   ANOP\nTDISP    CSECT\n         AGO    .COMM\n.DSECT   ANOP\nTDISP    DSECT\n.COMM    ANOP\nTDISP_EYE               DS  CL8    EYECATCHER\nTDISP_DYN_ADDR          DS  A      DYNAMIC AREA ADDRESS\nTDISP_DYN_SIZE          DS  F      DYNAMIC AREA SIZE\nTDISP_DATA_ADDR         DS  A      DATA FOR DYNAMIC AREA\nTDISP_DATA_LINES        DS  F      NUMBER OF DATA LINES\nTDISP_DATA_LINE_LENGTH  DS  F      LENGTH OF DATA PER LINE\nTDISP_DATA_1ST_LINE     DS  F      FIRST LINE TO DISPLAY\nTDISP_PANEL             DS  CL8    PANEL NAME\nTDISPL   EQU *-TDISP\n         MEND\n./ ADD NAME=TRENTRY  0100-09250-09250-0917-00012-00012-00000-MACLIB\n*---------------------------------------------------------------------*\n*                                                                     *\n*          TRACE TABLE ENTRY                                          *\n*                                                                     *\n*---------------------------------------------------------------------*\nTRENTRY  DSECT\nTRETCB   DS    XL3                 TCB ADDRESS\nTREMOD   DS    CL5                 MODULE SUFFIX\nTREID    DS    CL8                 TRACE ID\nTREDATA1 DS    CL8                 TRACE DATA 1\nTREDATA2 DS    CL8                 TRACE DATA 2\nTRENTRYL EQU   *-TRENTRY           ENTRY LENGTH\n./ ADD NAME=USERBLOK 0100-09250-09250-0917-00070-00070-00000-MACLIB\n         MACRO\n         USERBLOK &DSECT=\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      USERBLOK's represent active users.                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         AIF  (T'&DSECT EQ 'O').ERR0010\n         AIF  ('&DSECT' EQ 'NO').CSECT00\n         AIF  ('&DSECT' EQ 'YES').DSECT00\n         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'\n         MEXIT\n.CSECT00 ANOP\nUSERBLOK DS   0F\n         AGO  .COMMON\n.DSECT00 ANOP\nUSERBLOK DSECT\n.COMMON  ANOP\nUSEREYE              DS   CL8      EYECATCHER\nUSER_NEXT            DS   A        NEXT USER BLOCK\nUSER_IO              DS   A        I/O AREA ADDRESS\nUSER_TIME            DS   A        TIME USER SESSION BEGAN (HHMMSSTH)\nUSER_DATE            DS   A        DATE USER SESSION BEGAN (0CYYDDDS)\nUSER_TCB             DS   A        SUBTASK'S TCB ADDRESS\nUSER_TERMINATION_ECB DS   A        SUBTASK TERMINATION ECB\nUSER_COMM            DS   A        LIBSCOMM ADDRESS\nUSER_SELF            DS   A        ADDRESS OF THIS USERBLOK\nUSER_DXD             DS   A        DXD WORK AREA BASE ADDRESS\nUSER_RPL             DS   A        RPL'S ADDRESS\nUSER_RPLX            DS   A        RPL EXTENSION'S ADDRESS\nUSER_CONVERSATION_ID DS   XL4      CONVERSATION ID\nUSER_PARTNER_LU      DS   CL8      PARTNER LU NAME\nUSER_RECEIVES        DS   F        NUMBER OF RECEIVES\nUSER_BYTES_RECEIVED  DS   F        NUMBER OF BYTES RECEIVED\nUSER_SENDS           DS   F        NUMBER OF SENDS\nUSER_BYTES_SENT      DS   F        NUMBER OF BYTES SENT\nUSER_SYSTEM_SMF      DS   CL4      SMF ID OF USER'S SYSTEM\nUSER_USER_ID         DS   CL8      USER'S TSO ID\nUSER_JOB             DS   CL8      USER'S ADDRESS SPACE NAME\nUSER_NAME            DS   CL20     USER'S NAME (UP TO 20 CHARACTERS)\nUSER_LIBRARY         DS   CL8      LIBRARY USER HAS ENQUEUED\nUSER_AUTH_LIBS       DS   A        LIBRARIES USER IS AUTHORIZED TO USE\nUSER_SOCKET          DS   XL2      TCP/IP SOCKET\nUSER_FUNCTION        DS   X\n$USER_RECEIVE        EQU  X'01'    .. ISSUING A RECEIVE\n$USER_RUN            EQU  X'02'    .. RUNNING\nUSER_STATUS          DS   X\n$USERSUB             EQU  X'80'    .. SUBTASK HAS BEEN ATTACHED\n$USERLOS             EQU  X'40'    .. VTAM SESSION HAS BEEN LOST\n$USERSND             EQU  X'20'    .. SENDING\n$USERRCV             EQU  X'10'    .. RECEIVING\n$USERRUN             EQU  X'08'    .. RUNNING\n$USERCLN             EQU  X'04'    .. CLEAN-UP SCHEDULED\n$USERID              EQU  X'02'    .. USER HAS BEEN IDENTIFIED\n$USER_KILL           EQU  X'01'    .. KILLED BY CONSOLE COMMAND\nUSER_IP_ADDRESS      DS   CL15     USER IP ADDRESS (PRINTABLE)\n\n                     CLIENT  PREFIX=USER\n\n                     DS   256X\nUSER_NETWORK_ECB     DS   F        ECB FOR NETWORK OPERATIONS\nUSER_API_ECB         DS   F        SUBTASK HAS COMPLETED INITAPI\nUSER_TAKESOCKET_ECB  DS   F        MAIN TASK HAS ISSUED TAKESOCK\nUSER_WORK_ECB        DS   F        ECB FOR MAIN TASK TO 'WAKE US UP'\n                     DS   256X\nUSERBLOKL            EQU  *-USERBLOK\n         MEND\n./ ADD NAME=UX01PARM 0100-09250-09250-0917-00020-00020-00000-MACLIB\n         MACRO\n         UX01PARM &DSECT=NO\n         AIF  ('&DSECT' EQ 'YES').LBL0010\n         AIF  ('&DSECT' EQ 'NO').LBL0020\n         MNOTE 12,'INVALID DSECT OPTION'\n         MEXIT\n.LBL0010 ANOP\nUX01_PARMS             DSECT\n         AGO .LBL0030\n.LBL0020 ANOP\nUX01_PARMS             DS   0F\n.LBL0030 ANOP\nUX01_FUNCTION          DS   C\n$UX01_COMPRESS         EQU  C'C'\n$UX01_DECOMPRESS       EQU  C'D'\nUX01_EXPANDED_BUFFER   DS   F\nUX01_EXPANDED_LENGTH   DS   F\nUX01_COMPRESSED_BUFFER DS   F\nUX01_COMPRESSED_LENGTH DS   F\n         MEND\n./ ADD NAME=UX03PARM 0100-09250-09250-0917-00016-00016-00000-MACLIB\n         MACRO\n         UX03PARM &DSECT=NO\n         AIF  ('&DSECT' EQ 'YES').LBL0010\n         AIF  ('&DSECT' EQ 'NO').LBL0020\n         MNOTE 12,'INVALID DSECT OPTION'\n         MEXIT\n.LBL0010 ANOP\nUX03_PARMS     DSECT\n         AGO .LBL0030\n.LBL0020 ANOP\nUX03_PARMS     DS   0F\n.LBL0030 ANOP\nUX03_SMF       DS   CL4\nUX03_USER      DS   CL8\nUX03_USER_NAME DS   CL20\n         MEND\n./ ADD NAME=VARDSECT 0100-09250-09250-0917-00012-00012-00000-MACLIB\n* ------------------------------------------------------------------- *\n*              VARIABLE TABLE ENTRIES                                 *\n* ------------------------------------------------------------------- *\nVAR_DSECT      DSECT\nVAR_NAME       DS    CL8                   NAME KNOWN TO SPF\nVAR_FLAGS      DS    X                     FLAGS\n$VAR_PROFILE   EQU   X'80'                 .. SAVE IN PROFILE\n$VAR_DEFINED   EQU   X'40'                 .. VARIABLE IS DEFINED\nVAR_LENGTH     DS    AL4                   VARIABLE LENGTH\nVAR_FORM       DS    CL8                   VARIABLE FORMAT\nVAR_DISP       DS    AL2                   DISPLACEMENT TO DATA\nVAR_DSECT_L    EQU   *-VAR_DSECT\n./ ADD NAME=VARREQ   0100-09250-09250-0917-00020-00020-00000-MACLIB\n*---------------------------------------------------------------------*\n*                                                                     *\n*        VARIABLE DEFINE/DELETE REQUEST                               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         VARREQ  &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nVARREQ   DS    0A\n         AGO   .LBL0020\n.LBL0010 ANOP\nVARREQ   DSECT\n.LBL0020 ANOP\nVARTBLE  DS    A                   ADDRESS OF VARIABLE TABLE\nVARAREA  DS    A                   ADDRESS OF VARIABLE DATA AREA\nVARCMD   DS    C                   COMMAND\n$VARDEF  EQU   X'01'               .. DEFINE\n$VARDEL  EQU   X'02'               .. DELETE\nVARREQL  EQU   *-VARREQ\n         MEND\n./ ADD NAME=VDEF     0100-09250-09250-0917-00043-00043-00000-MACLIB\n         MACRO\n         VDEF  &BASE=,               BASE ADDRESS OF VARIABLES AREA    +\n               &NAME=,               NAME DEFINED TO SPF               +\n               &DATA=,               DATA ADDRESS                      +\n               &LENGTH=,             DATA LENGTH                       +\n               &FLAGS=,              SAVE IN PROFILE                   +\n               &FORM=                DATA FORMAT\n         GBLC  &VBASE\n         AIF   (T'&BASE EQ 'O').LBL0010\n&VBASE   SETC  '&BASE'\n         MEXIT\n.LBL0010 ANOP\n         AIF   (T'&NAME EQ 'O').ERR0010\n         AIF   (T'&LENGTH  EQ 'O').ERR0020\n         AIF   (T'&FORM    EQ 'O').ERR0030\n         AIF   ('&VBASE' EQ '').ERR0060\n         DC    CL8'&NAME'             NAME KNOWN TO SPF\n         AIF   (T'&FLAGS EQ 'O').LBL020\n         DC    AL1(&FLAGS)\n         AGO   .LBL030\n.LBL020  ANOP\n         DC    X'00'                  FLAGS/INDICATORS\n.LBL030  ANOP\n         DC    AL4(&LENGTH)           LENGTH\n         DC    CL8'&FORM'             VARIABLE FORMAT\n         DC    AL2(&DATA-&VBASE)      DISPLACEMENT TO DATA\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'NAME IS A REQUIRED PARAMETER'\n         MEXIT\n.ERR0020 ANOP\n         MNOTE 12,'LENGTH IS A REQUIRED PARAMETER'\n         MEXIT\n.ERR0030 ANOP\n         MNOTE 12,'FORM IS A REQUIRED PARAMETER'\n         MEXIT\n.ERR0040 ANOP\n         MNOTE 12,'VARIABLE NAME IS DUPLICATED'\n         MEXIT\n.ERR0060 ANOP\n         MNOTE 12,'BASE MUST BE DEFINED BEFORE VARIABLES CAN BE DEFINED+\n               '\n         MEND\n./ ADD NAME=VTAMPARM 0100-09250-09250-0917-00032-00032-00000-MACLIB\n         MACRO\n         VTAMPARM &DSECT=YES\n         AIF  (T'&DSECT EQ 'O').ERR0010\n         AIF  ('&DSECT' EQ 'YES').DSECT00\n         AIF  ('&DSECT' EQ 'NO').CSECT00\n         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'\n         MEXIT\n.CSECT00 ANOP\nVTAM_PARM_LIST    DS   0F\n         AGO  .COMMON\n.DSECT00 ANOP\nVTAM_PARM_LIST    DSECT\n.COMMON  ANOP\nVTAM_PARM_APPL    DS    CL8\nVTAM_PARM_ACB     DS    A\nVTAM_PARM_RPL     DS    A\nVTAM_PARM_RPLX    DS    A\nVTAM_PARM_XLST    DS    A\nVTAM_PARM_NIB     DS    A\nVTAM_PARM_IO      DS    A\nVTAM_PARM_CNVID   DS    XL4\nVTAM_PARM_CMD     DS    X\n$VTAM_OPEN        EQU   X'01'\n$VTAM_CLOSE       EQU   X'02'\n$VTAM_SEND        EQU   X'03'\n$VTAM_RECEIVE     EQU   X'04'\nVTAM_PARM_RC      DS    X\nVTAM_PARM_LENGTH  EQU   *-VTAM_PARM_LIST\n         MEND\n./ ADD NAME=VTAMREQ  0100-09250-09250-0917-00020-00020-00000-MACLIB\n*---------------------------------------------------------------------*\n*                                                                     *\n*        VTAM COMMANDS                                                *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         VTAMREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nVTAMREQ        DS    0A\n               AGO   .LBL0020\n.LBL0010       ANOP\nVTAMREQ        DSECT\n.LBL0020       ANOP\nVTAM_COMMAND   DS   X              COMMAND\n$VTAM_OPEN     EQU  X'01'          .. OPEN\n$VTAM_SEND     EQU  X'02'          .. ISSUE SEND\n$VTAM_RECEIVE  EQU  X'03'          .. ISSUE RECEIVE\n$VTAM_CLOSE    EQU  X'04'          .. CLOSE\nVTAMREQL       EQU  *-VTAMREQ\n         MEND\n./ ADD NAME=XUSRBLOK 0100-09250-09250-0917-00020-00020-00000-MACLIB\n*---------------------------------------------------------------------*\n*                                                                     *\n*        EXTERNAL USER IDENTIFICATION BLOCK                           *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         XUSRBLOK &DSECT=\n         AIF      ('&DSECT' EQ 'YES').DSECT\nXUSRBLOK DS    0H\n         AGO      .NODSECT\n.DSECT   ANOP\nXUSRBLOK DSECT\n.NODSECT ANOP\nXUSREYE  DS    CL8                 EYECATCHER\nXUSRNEXT DS    A                   NEXT XUSRBLOK ADDRESS\nXUSRSMF  DS    CL4                 SMF ID\nXUSRID1  DS    CL8                 USER ID ON OTHER SYSTEM\nXUSRID2  DS    CL8                 USER ID ON THIS SYSTEM\nXUSRL    EQU   *-XUSRBLOK          LENGTH OF CONTROL BLOCK\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDSLOAD": {"ttr": 2308, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x15\\x7f\\x01\\x01\\x15\\x7f\\x156\\x00e\\x00e\\x00\\x00\\xd3\\xd6\\xc1\\xc4\\xd3\\xc9\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-06-06T00:00:00", "modifydate": "2001-06-06T15:36:00", "lines": 101, "newlines": 101, "modlines": 0, "user": "LOADLIB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SOURCE": {"ttr": 2311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\t%\\x0f\\x01\\t%\\x0f\\t\"\\x7f\\xa2\\x7f\\xa2\\x00\\x00\\xd3\\xc9\\xc2\\xd9\\xc1\\xd9\\xd5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-09-07T00:00:00", "modifydate": "2009-09-07T09:22:00", "lines": 32674, "newlines": 32674, "modlines": 0, "user": "LIBRARN"}, "text": "./ ADD NAME=$CHANGE  0100-09250-09250-0919-00081-00081-00000-SOURCE\nFeb 09     Corrected several bugs.\n           .. setting wrong 'task' bits in LIBSMAIN\n           .. ADMIN function not working correctly\n           .. misc other minor bugs\n           Changed most labels in the \"comm\" areas.  Labels are now\n           longer and easier to read.  Trade of is that the librarian\n           will require the HL assembler.\n           Create date on new versions of a member will now be the\n              date/time the new version is created.\n           Added the JOB function to submit members as batch jobs.\n           ... now I need to enable it to submit work with some else's\n              USER ID (surrogate?)...\n           Added the \"help\" (?) function to the STC.\n           All panels (I think) will now 'fit' on a model 2 display\n           Renamed SPFDATA to LIBSPFD\n           Renamed SPFVARS to LIBSPFV\n\nJan 06     Corrected S0C1 in UTIL0001.\n              - changed the BALR to the compress exit to a BASSM.\n              - corrected the parms to the compress exit\n\n           Chagnded some mississippipellings in the messgaages\n\n\n           Corrected the allocation of PDS members as the output\n             data set for check-outs and view\n\n           Corrected a problem with the shut-down statistics.\n             The number of members viewed was always showing zero.\n\n           Corrected ENQ without corresponding DEQ in CSUBUSER\n\n\nFeb 06     Added support for TCP/IP\n           Corrected several logic errors\n           Removed some unused code from USUBCKOT\n           Added \"A\" (Admin) command line option\n           Added the \"kill\" user console command\n           Change messages to display IP address rather than\n              conversation id (CID) if user logs in with TCP/IP\n\n\nMar 06     Corrected S0C4 in LIBTDMEM after doing a \"STAT\"\n           Corrected logic problem that could leave a library\n              ENQ'd when a user changes from library to library\n           Corrected a problem with BLKSIZE in check-out and view.\n           Added select, check-in, check-out, etc primary commands\n              to member display\n\nAPR 06     Added confirmation prompt to new version processing\n           Added user exit 3 for identifying the user.\n\nMay 06     Corrected S013-24 in LIBTVIEW and LIBTCKOT\n           Added logic to LIBTVIEW and LIBTCKOT to check output data set\n               RECFM for F or FB\n               LRECL=80\n\nJun 07     Corrected the \"R\" line command.\n\n           The following are fixes to bugs or enhancements from\n           Norm Gard from S and E.\n\n           . Correct obtaining data length in CIBs due to changes\n             in z/OS 1.8 for extended console support.\n\n           . Corrected bug in CHECK-IN or creation of new members\n             with 10 records or less.\n\n           . Corrected bug in printing IP addresses in LIBSIP.\n             Each segment of an IP address was being 'shifted'...\n             192.168.36.34 was being printed as 019.016.003.003\n\n           . Added new \"U\" (undo) member line command.\n\n           . Added new \"B\" (browse) member line command.\n\n           . Changed default member list.  Default now shows only\n             highest version of members.  New option \"A\" or \"F\"\n             lists all members.\n\n\n./ ADD NAME=CALLSUB  0100-09250-09250-0919-00330-00330-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: CALLSUB - Test the LIBRARIAN interface subroutine.    *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  Parmeter list:                                                     *\n*         Library APPLID          8 characters                        *\n*         Library name            8 characters                        *\n*         Member name             8 characters                        *\n*         Function                8 characters                        *\n*         User dataset           44 characters                        *\n*         User member             8 characters                        *\n*         return code             2 characters                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCALLSUB  CSECT\nCALLSUB  AMODE 31\nCALLSUB  RMODE ANY\n         STM   R14,R12,12(R13)       SAVE REGISTERS\n         LR    R12,R15               SET BASE REGISTER\n         USING CALLSUB,R12           DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'CALLSUB'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         GETMAIN RU,LV=WORKL,LOC=BELOW\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING WORK,R13\n         LOAD  EP=LIBSUB\n         ST    R0,LIBSUBEP\n         MVC   WORKIN(SYSINL),SYSINI COPY SYSIN DCB\n         MVC   WORKOCPL(OPENL),OPENI\n         OPEN  (WORKIN,INPUT),MODE=31,MF=(E,WORKOCPL)\n         MVC   WORKPRT(SYSPRINTL),SYSPRINTI\n         MVC   WORKOCPL(OPENL),OPENI\n         OPEN  (WORKPRT,OUTPUT),MODE=31,MF=(E,WORKOCPL)\n         MVI   PR_CC,C' '\n         MVC   PR_LINE,PR_CC\n         ZAP   PAGE_COUNT,P0\n         MVC   PARM_APPL,BLANKS\n         MVC   PARM_LIB_NAME,BLANKS\n         MVC   PARM_MEM_NAME,BLANKS\n         XC    PARM_MEM_VERSION,PARM_MEM_VERSION\n         MVC   PARM_FUNCTION,BLANKS\n         MVC   PARM_USER_DSN,BLANKS\n         MVC   PARM_USER_MEMBER,BLANKS\n         LA    R1,PARM_MSG_1           FIRST MESSAGE\n         LA    R2,5                    NUMBER OF MESSAGES\nINIT0010 DS    0H\n         MVC   0(80,R1),BLANKS\n         LA    R1,80(R1)               NEXT MESSAGE\n         BCT   R2,INIT0010             LOOP\n         BAL   R11,HEAD0000\nPROC0000 DS    0H\n         GET   WORKIN,WORKCARD         READ A CONTROL STATEMENT\n         MVC   PR_LINE(L'WORKCARD),WORKCARD\n         BAL   R10,PRT0000             PRINT\n         CLC   APPLSTMT,WORKCARD       APPLID STATEMENT?\n         BE    APPL0000                YES\n         CLC   LIBSTMT,WORKCARD        LIBRARY STATEMENT?\n         BE    LIB0000                 YES\n         CLC   MEMSTMT,WORKCARD        MEMBER STATEMENT?\n         BE    MEM0000                 YES\n         CLC   VERSTMT,WORKCARD        VERSION STATEMENT?\n         BE    VER0000                 YES\n         CLC   FUNCSTMT,WORKCARD       FUNCTION STATEMENT\n         BE    FUNC0000                YES\n         CLC   UDSNSTMT,WORKCARD       USER DATA SET STATEMENT?\n         BE    UDSN0000                YES\n         CLC   UMEMSTMT,WORKCARD       USER MEMBER STATEMENT?\n         BE    UMEM0000                YES\n         CLC   MSG1STMT,WORKCARD       MESSAGE 1 STATEMENT?\n         BE    MSG10000                YES\n         CLC   MSG2STMT,WORKCARD       MESSAGE 2 STATEMENT?\n         BE    MSG20000                YES\n         CLC   MSG3STMT,WORKCARD       MESSAGE 3 STATEMENT?\n         BE    MSG30000                YES\n         CLC   MSG4STMT,WORKCARD       MESSAGE 4 STATEMENT?\n         BE    MSG40000                YES\n         CLC   MSG5STMT,WORKCARD       MESSAGE 5 STATEMENT?\n         BE    MSG50000                YES\n         CLC   CALLSTMT,WORKCARD       CALL STATEMENT?\n         BE    CALL0000                YES\n         MVC   PR_LINE(MSG05L),MSG05\n         BAL   R10,PRT0000\n         B     EOF0000\nAPPL0000 DS    0H\n         OI    WORKFLAGS,$PENDING\n         MVC   PARM_APPL,WORKCARD+09\n         B     PROC0000\nLIB0000  DS    0H\n         OI    WORKFLAGS,$PENDING\n         MVC   PARM_LIB_NAME,WORKCARD+09\n         B     PROC0000\nMEM0000  DS    0H\n         OI    WORKFLAGS,$PENDING\n         MVC   PARM_MEM_NAME,WORKCARD+09\n         B     PROC0000\nVER0000  DS    0H\n         PACK  WORK_DWORD,WORKCARD+09(5)\n         CVB   R1,WORK_DWORD           CONVERT TO BINARY\n         STCM  R1,3,PARM_MEM_VERSION\n         B     PROC0000\nFUNC0000 DS    0H\n         OI    WORKFLAGS,$PENDING\n         MVC   PARM_FUNCTION,WORKCARD+09\n         B     PROC0000\nUDSN0000 DS    0H\n         OI    WORKFLAGS,$PENDING\n         MVC   PARM_USER_DSN,WORKCARD+09\n         B     PROC0000\nUMEM0000 DS    0H\n         OI    WORKFLAGS,$PENDING\n         MVC   PARM_USER_MEMBER,WORKCARD+09\n         B     PROC0000\nMSG10000 DS    0H\n         OI    WORKFLAGS,$PENDING\n         MVC   PARM_MSG_1,WORKCARD+09\n         TR    PARM_MSG_1,VALID_CHARACTERS\n         B     PROC0000\nMSG20000 DS    0H\n         OI    WORKFLAGS,$PENDING\n         MVC   PARM_MSG_2,WORKCARD+09\n         TR    PARM_MSG_2,VALID_CHARACTERS\n         B     PROC0000\nMSG30000 DS    0H\n         OI    WORKFLAGS,$PENDING\n         MVC   PARM_MSG_3,WORKCARD+09\n         TR    PARM_MSG_3,VALID_CHARACTERS\n         B     PROC0000\nMSG40000 DS    0H\n         OI    WORKFLAGS,$PENDING\n         MVC   PARM_MSG_4,WORKCARD+09\n         TR    PARM_MSG_4,VALID_CHARACTERS\n         B     PROC0000\nMSG50000 DS    0H\n         OI    WORKFLAGS,$PENDING\n         MVC   PARM_MSG_5,WORKCARD+09\n         TR    PARM_MSG_5,VALID_CHARACTERS\n         B     PROC0000\nCALL0000 DS    0H\n         LA    R1,PARM_LIST\n         L     R15,LIBSUBEP\n         BASSM R14,R15                 'CALL' THE SUBROUTINE\n         MVC   PR_LINE(MSG02L),MSG02\n         BAL   R10,PRT0000\n         MVC   PR_LINE(MSG03L),MSG03\n         UNPK  PR_LINE+(MSG03RC-MSG03)(3),PARM_RETURN_CODE(2)\n         MVZ   PR_LINE+(MSG03RC-MSG03)(L'MSG03RC),HEXZERO\n         TR    PR_LINE+(MSG03RC-MSG03)(L'MSG03RC),HEXCHAR\n         MVI   PR_LINE+(MSG03RC-MSG03)+2,C' '\n         BAL   R10,PRT0000             PRINT\n         LA    R2,5\n         LA    R3,PARM_MSG_1           FIRST MESSAGE\nCALL0010 DS    0H\n         MVC   PR_LINE(MSG04L),MSG04\n         MVC   PR_LINE+(MSG04MSG-MSG04)(80),0(R3)\n         BAL   R10,PRT0000\n         LA    R3,80(R3)\n         BCT   R2,CALL0010\n         NI    WORKFLAGS,255-$PENDING\n         B     PROC0000\nPRT0000  DS    0H\n         CP    LINE_COUNT,MAX_LINE     TIME FOR HEADING?\n         BL    PRT0010                 NO\n         BAL   R11,HEAD0000            PRINT HEADING\nPRT0010  DS    0H\n         PUT   WORKPRT,PR_CC\n         MVI   PR_CC,C' '\n         MVC   PR_LINE,PR_CC\n         AP    LINE_COUNT,P1\n         BR    R10\nHEAD0000 DS    0H\n         MVC   PR_SAVE,PR_CC\n         AP    PAGE_COUNT,P1\n         MVC   PR_CC(HEADINGL),HEADING\n         ED    PR_CC+(HEADPAGE-HEADING)(L'HEADPAGE),PAGE_COUNT\n         PUT   WORKPRT,PR_CC\n         MVC   PR_CC(121),PR_SAVE\n         ZAP   LINE_COUNT,P1\n         BR    R11\nEOF0000  DS    0H\n         TM    WORKFLAGS,$PENDING\n         BNO   EOF0010\n         MVC   PR_LINE(MSG01L),MSG01\n         BAL   R10,PRT0000\n         MVI   WORK_RC,4\nEOF0010  DS    0H\n         MVC   WORKOCPL(CLOSEL),CLOSEI\n         CLOSE WORKIN,MODE=31,MF=(E,WORKOCPL)\n         CLOSE WORKPRT,MODE=31,MF=(E,WORKOCPL)\n         DELETE EP=LIBSUB\n         SR    R2,R2                   CLEAR REGISTER\n         IC    R2,WORK_RC\n         LR    R1,R13                  COPY WORK AREA ADDRESS\n         L     R13,4(R13)              RESTORE CALLER'S R13\n         FREEMAIN RU,A=(1),LV=WORKL    FREE THE WORK AREA\n         L     R14,12(R13)             RESTORE R14\n         LR    R15,R2                  INSERT RETURN CODE\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\nSYSINI   DCB   DSORG=PS,                                               +\n               DDNAME=SYSIN,                                           +\n               LRECL=80,                                               +\n               RECFM=FB,                                               +\n               DCBE=DCBE,                                              +\n               MACRF=GM\nSYSINL   EQU   *-SYSINI\nSYSPRINTI DCB  DSORG=PS,                                               +\n               DDNAME=SYSPRINT,                                        +\n               LRECL=121,                                              +\n               RECFM=FBA,                                              +\n               MACRF=PM\nSYSPRINTL EQU  *-SYSPRINTI\nDCBE     DCBE  EODAD=EOF0000\nOPENI    OPEN  (*,INPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\nP0       DC    P'0'\nP1       DC    P'1'\nMAX_LINE DC    P'65'\nBLANKS   DC    CL80' '\nHEADING  DS    0C\n         DC    C'1'\n         DC    CL30' '\n         DC    C'LIBRARIAN batch utility'\n         DC    CL30' '\n         DC    C'Page'\nHEADPAGE DC    X'402020202120'\nHEADINGL EQU   *-HEADING\n\nMSG01    DS    0C\n         DC    C'Last control statement was not a CALL statement'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    C'Results of call'\nMSG02L   EQU   *-MSG02\nMSG03    DS    0C\n         DC    C'Return code: '\nMSG03RC  DC    CL2'  '\n         DC    C' (zero is good)'\nMSG03L   EQU   *-MSG03\nMSG04    DC    C'Message: '\nMSG04MSG DC    CL80' '\nMSG04L   EQU   *-MSG04\nMSG05    DC    C'Invalid control statement, exiting'\nMSG05L   EQU   *-MSG05\nAPPLSTMT DC    CL09'LIB APPL'\nLIBSTMT  DC    CL09'LIBRARY '\nMEMSTMT  DC    CL09'MEMBER  '\nVERSTMT  DC    CL09'VERSION '\nFUNCSTMT DC    CL09'FUNCTION'\nMSG1STMT DC    CL09'MSG 1   '\nMSG2STMT DC    CL09'MSG 2   '\nMSG3STMT DC    CL09'MSG 3   '\nMSG4STMT DC    CL09'MSG 4   '\nMSG5STMT DC    CL09'MSG 5   '\nUDSNSTMT DC    CL09'UDSN    '\nUMEMSTMT DC    CL09'UMEM    '\nCALLSTMT DC    CL09'CALL'\n\nHEXZERO  DC    8X'00'\nHEXCHAR  DC    C'0123456789ABCDEF'\n\nVALID_CHARACTERS DS 0C\n       DC    XL16'40404040404040404040404040404040'     X'00' - X'0F'\n       DC    XL16'40404040404040404040404040404040'     X'10' - X'1F'\n       DC    XL16'40404040404040404040404040404040'     X'20' - X'2F'\n       DC    XL16'40404040404040404040404040404040'     X'30' - X'3F'\n       DC    XL16'404040404040404040404A4B4C4D4E4F'     X'40' - X'4F'\n       DC    XL16'504040404040404040405A5B5C5D5E5F'     X'50' - X'5F'\n       DC    XL16'60614040404040404040406B6C6D6E6F'     X'60' - X'6F'\n       DC    XL16'404040404040404040407A7B7C7D7E7F'     X'70' - X'7F'\n       DC    XL16'40818283848586878889408B8C8D8E8F'     X'80' - X'8F'\n       DC    XL16'40919293949596979899409B9C9D9E9F'     X'90' - X'9F'\n       DC    XL16'40A1A2A3A4A5A6A7A8A940ABACADAEAF'     X'A0' - X'AF'\n       DC    XL16'4040404040404040404040BBBCBDBEBF'     X'B0' - X'BF'\n       DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'     X'C0' - X'CF'\n       DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'     X'D0' - X'DF'\n       DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'     X'E0' - X'EF'\n       DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'     X'F0' - X'FF'\n\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nWORK              DSECT\n                  DS    18F\nWORK_DWORD        DS    D\nLIBSUBEP          DS    A\nWORKIN            DS    0F,(SYSINL)X\nWORKPRT           DS    0F,(SYSPRINTL)X\nWORKOCPL          DS    0F,(OPENL)X\nWORKCARD          DS    CL80\n                  DC    CL20' '  ... FILLER\nWORK_RC           DS    X\nWORKFLAGS         DS    X\n$PENDING          EQU   X'80'\nPAGE_COUNT        DS    PL3\nLINE_COUNT        DS    PL3\n\nPR_CC             DS    C\nPR_LINE           DS    CL120\nPR_SAVE           DS    CL121\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM_LIST         DS    0A\nPARM_APPL         DS    CL8\nPARM_LIB_NAME     DS    CL8\nPARM_MEM_NAME     DS    CL8\nPARM_MEM_VERSION  DS    XL2\nPARM_FUNCTION     DS    CL8\nPARM_USER_DSN     DS    CL44\nPARM_USER_MEMBER  DS    CL8\nPARM_RETURN_CODE  DS    C\nPARM_MSG          DS   0CL80\nPARM_MSG_1        DS    CL80\nPARM_MSG_2        DS    CL80\nPARM_MSG_3        DS    CL80\nPARM_MSG_4        DS    CL80\nPARM_MSG_5        DS    CL80\nWORKL    EQU   *-WORK\n         COPY REGEQU\n         END  CALLSUB\n./ ADD NAME=CSUBCLSE 0100-09250-09250-0919-00191-00191-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: CSUBCLSE                                              *\n*                                                                     *\n*  Process CLOSE commands entered via the console.                    *\n*                                                                     *\n*  At entry:                                                          *\n*    R1 command address                                               *\n*    R2 command length                                                *\n*    R3 address of console id                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSUBCLSE CSECT\nCSUBCLSE AMODE 31\nCSUBCLSE RMODE ANY\n         USING CSUBCLSE,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'CSUBCLSE'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LR    R8,R1                          COPY COMMAND ADDRESS\n         LR    R9,R2                          COPY COMMAND LENGTH\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LV=WORKAREA_L,                 .. SIZE                  +\n               LOC=BELOW                      .. BELOW 31-BIT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ITRACE ID=INIT,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R9\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   WORK_CONSOLE_ID,0(R3)          COPY CONSOLE ID\n         MVC   WORK_WTO(WTOL),WTOI            INITIALIZE WTO\n         LA    R6,WORK_WTO\n         USING WPL,R6                         DEFINE BASE\n         SH    R9,H6                          MINUS LENGTH OF \"CLOSE\"\n         BH    PROC0010\n         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     EXIT0000                       AND EXIT\nPROC0010 DS    0H\n         CH    R9,H8                          TOO LONG?\n         BH    PROC0080                       YES\n         MVC   WORK_LIBRARY,COMM_BLANKS       INITIALIZE LIBRARY NAME\n         BCTR  R9,0                           FOR EX INSTRUCTION\n         EX    R9,LIBMVC                      COPY LIBRARY NAME\n         ITRACE ID=LIB,                                                +\n               DATA1=WORK_LIBRARY\n         MVI   WORK_FLAGS,0                   CLEAR FLAGS\n         ICM   R7,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         BZ    PROC0070\n         USING LIBBLOK,R7                     DEFINE BASE\nPROC0020 DS    0H\n         CLC   WORK_LIBRARY,ALL               ALL LIBRARIES?\n         BE    PROC0030                       YES\n         CLC   WORK_LIBRARY,LIB_NAME          CORRECT LIBRARY?\n         BNE   PROC0060                       NO\nPROC0030 DS    0H\n         ITRACE ID=FOUND,                                              +\n               RDATA1=R7\n         OI    WORK_FLAGS,$FOUND              LIBRARY FOUND\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSE\n         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         LA    R1,LIBFUNC                     PARM BLOCK ADDRESS\nPROC0040 DS    0H\n         L     R2,COMM_LSUB_REQ               FIRST REQUEST ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN\n         BC    4,PROC0040                     TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB\n         CLI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK\n         BE    PROC0050                       YES\n         MVC   WPLTXT(100),LIB_FUNCTION_MESSAGE\n         BAL   R10,WTO0000                    SEND MESSAGE\n         B     PROC0060\nPROC0050 DS    0H\n         MVC   WPLTXT(MSG02L),MSG02           COPY MESSAGE\n         MVC   WPLTXT+(MSG02LIB-MSG02)(L'MSG02LIB),LIB_NAME\n         MVC   WPLTXT+(MSG02DSC-MSG02)(L'MSG02DSC),LIB_DESCRIPTION\n         BAL   R10,WTO0000                    ISSUE WTO\nPROC0060 DS    0H\n         ICM   R7,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   PROC0020\nPROC0070 DS    0H\n         TM    WORK_FLAGS,$FOUND              LIBRARY FOUND?\n         BO    EXIT0000                       YES\n         ITRACE ID=NOTFOUND\n         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE MESSAGE\n         B     EXIT0000\nPROC0080 DS    0H\n         ITRACE ID=TOOLONG\n         MVC   WPLTXT(MSG04L),MSG04           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORK_WTO),               ISSUE WTO                +\n               CONSID=WORK_CONSOLE_ID         .. TO SAME CONSOLE\n         MVC   WORK_WTO(WTOL),WTOI\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\nLIBMVC   MVC   WORK_LIBRARY(0),6(R8)          COPY LIBRARY NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nH6       DC    H'6'\nH8       DC    H'8'\nWTOI     WTO   '                                                       +\n                                                                     ',+\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\nMSG01    DC    C'CSUBCLSE01E No library name given for CLOSE'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    C'CSUBCLSE02I Library '\nMSG02LIB DC    CL8' '\n         DC    CL2' '\nMSG02DSC DC    CL40' '\n         DC    C' closed'\nMSG02L   EQU   *-MSG02\nMSG03    DC    C'CSUBCLSE02E Library not found'\nMSG03L   EQU   *-MSG03\nMSG04    DC    C'CSUBCLSE03E Library name too long'\nMSG04L   EQU   *-MSG04\nALL      DC    CL8'ALL'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA          DSECT\n                  LIBSAVE  DSECT=NO\n                  LIBFUNC  DSECT=NO\nWORK_CONSOLE_ID   DS       F\nWORK_WTO          DS       0A,(WTOL)X\nWORK_LIBRARY      DS       CL8\nWORK_FLAGS        DS       X\n$FOUND            EQU      X'80'\nWORKAREA_L        EQU      *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEZWPL   DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  CSUBCLSE\n./ ADD NAME=CSUBDEF  0100-09250-09250-0919-00268-00268-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: CSUBDEF                                               *\n*                                                                     *\n*  Process library define commands entered via the console.           *\n*                                                                     *\n*  At entry:                                                          *\n*    R1 command address                                               *\n*    R2 command length                                                *\n*    R3 address of console id                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSUBDEF  CSECT\nCSUBDEF  AMODE 31\nCSUBDEF  RMODE ANY\n         USING CSUBDEF,R12                    DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'CSUBDEF'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LR    R8,R1                          COPY COMMAND ADDRESS\n         LR    R9,R2                          COPY COMMAND LENGTH\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LV=WORKAREA_L,                 .. SIZE                  +\n               LOC=BELOW                      .. BELOW 24-BIT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ITRACE ID=INIT,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R9\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   WORKCID,0(R3)                  COPY CONSOLE ID\n         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO\n         LA    R6,WORKWTO\n         USING WPL,R6                         DEFINE BASE\n         CH    R9,H80                         TOO LONG?\n         BH    ERR0010                        YES.. WAY TOO LONG\nINIT0010 DS    0H\n         CLI   0(R8),C','                     COMMA?\n         BE    INIT0020\n         LA    R8,1(R8)                       NEXT\n         BCT   R9,INIT0010                    LOOP\n         B     ERR0020\nINIT0020 DS    0H\n         LA    R8,1(R8)                       NEXT\n         BCT   R9,INIT0030\n         B     ERR0020\nINIT0030 DS    0H\n         MVC   WORK_LIB,COMM_BLANKS           INITIALIZE TO BLANKS\n         LA    R1,WORK_LIB                    OUTPUT (LIBRARY NAME)\n         BAL   R10,PARSE000                   PARSE LIBRARY NAME\n         CLC   WORK_LENGTH,H8                 TOO LONG?\n         BH    ERR0030                        YES\n         LTR   R9,R9                          ANY DATA LEFT?\n         BZ    ERR0040                        NO\n         MVC   WORK_DSN,COMM_BLANKS           INITIALIZE TO BLANKS\n         LA    R1,WORK_DSN                    OUTPUT (LIBRARY DSN)\n         BAL   R10,PARSE000                   PARSE DSN\n         CLC   WORK_LENGTH,H44                TOO LONG?\n         BH    ERR0050                        YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LA    R4,COMM_LIBRARY_CHAIN\n         ICM   R5,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         BZ    DEF0010\n         USING LIBBLOK,R5                     DEFINE BASE\nDEF0000  DS    0H\n         CLC   WORK_LIB,LIB_NAME              ALREADY DEFINED?\n         BE    ERR0060                        YES\n         CLC   WORK_DSN,LIB_VSAM_DSN          ALREADY DEFINED?\n         BE    ERR0070                        YES\n         LA    R4,LIB_NEXT                    CHAIN POINT\n         ICM   R5,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   DEF0000\nDEF0010  DS    0H\n         ITRACE ID=NEWLIB\n         GETMAIN RU,                                                   +\n               LV=LIBBLOKL,                                            +\n               LOC=ANY\n         ST    R1,0(R4)\n         LR    R5,R1                          COPY STORAGE ADDRESS\n         LR    R0,R1                          COPY ADDRESS\n         LA    R1,LIBBLOKL                    LENGTH\n         SR    R14,R14                        CLEAR ADDRESS\n         SR    R15,R15                        CLEAR LENGTH\n         MVCL  R0,R14                         INITIALIZE THE STORAGE\n         MVC   LIB_EYE,LIB_ID                 IDENTIFY THE BLOCK\n         MVC   LIB_NAME,WORK_LIB              COPY LIBRARY NAME\n         MVC   LIB_VSAM_DSN,WORK_DSN          COPY LIBRARY DSN\n         MVC   LIB_DESCRIPTION,INIT_DESCRIPTION\n         MVC   LIB_ACB(ACBL),ACBI             INITIALIZE THE ACB\n         MVC   WPLTXT(MSG08L),MSG08\n         BAL   R10,WTO0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARSE000 DS    0H\n         SR    R15,R15                        CLEAR FOR OUTPUT LENGTH\nPARSE010 DS    0H\n         CLI   0(R8),C','                     COMMA?\n         BE    PARSE020                       YES\n         MVC   0(1,R1),0(R8)                  COPY\n         LA    R1,1(R1)                       NEXT\n         LA    R8,1(R8)                       NEXT\n         BCT   R9,PARSE010\n         B     PARSE030\nPARSE020 DS    0H\n         LA    R8,1(R8)                       SKIP COMMA\n         BCTR  R9,0                           ACCOUNT FOR COMMA\nPARSE030 DS    0H\n         STH   R15,WORK_LENGTH                SET OUTPUT LENGTH\n         BR    R10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORKWTO),                ISSUE WTO                +\n               CONSID=WORKCID                 .. TO SAME CONSOLE\n         MVC   WORKWTO(WTOL),WTOI             RE-INITIALIZE THE WTO\n         BR    R10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=TOOLONG\n         MVC   WPLTXT(MSG01L),MSG01\n         B     ERR1000\nERR0020  DS    0H\n         ITRACE ID=NOCOMMA\n         MVC   WPLTXT(MSG02L),MSG02\n         B     ERR1000\nERR0030  DS    0H\n         ITRACE ID=LONGNAME\n         MVC   WPLTXT(MSG03L),MSG03\n         B     ERR1000\nERR0040  DS    0H\n         ITRACE ID=NODSN\n         MVC   WPLTXT(MSG04L),MSG04\n         B     ERR1000\nERR0050  DS    0H\n         ITRACE ID=LONGDSN\n         MVC   WPLTXT(MSG05L),MSG05\n         B     ERR1000\nERR0060  DS    0H\n         ITRACE ID=DUPLIB\n         MVC   WPLTXT(MSG06L),MSG06\n         B     ERR1000\nERR0070  DS    0H\n         ITRACE ID=DUPDSN\n         MVC   WPLTXT(MSG07L),MSG07\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR1000  DS    0H\n         BAL   R10,WTO0000\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               a=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nACBI     ACB   AM=VSAM,                                                +\n               DDNAME=VSAMFILE,                                        +\n               MACRF=(KEY,DIR,SEQ,OUT)\nWTOI     WTO   '                                                       +\n                                                                     ',+\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\nH8       DC    H'8'\nH44      DC    H'44'\nH80      DC    H'80'\n\nLIB_ID   DC    CL8'LIBBLOK'\n\nINIT_DESCRIPTION DC CL80'<No description until first OPEN>'\n\nMSG01    DS    0C\n         DC    C'CSUBDEF01E '\n         DC    C'Command too long'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    C'CSUBDEF02E '\n         DC    C'Syntax error.  Syntax is DEF[ine],LIBNAME,DSN'\nMSG02L   EQU   *-MSG02\nMSG03    DS    0C\n         DC    C'CSUBDEF03E '\n         DC    C'Library name is too long (8 characters max)'\nMSG03L   EQU   *-MSG03\nMSG04    DS    0C\n         DC    C'CSUBDEF04E '\n         DC    C'Library DSN is required. Syntax is DEF[ine],LIBNAME,DS+\n               N'\nMSG04L   EQU   *-MSG04\nMSG05    DS    0C\n         DC    C'CSUBDEF05E '\n         DC    C'Library DSN is too long (44 characters max)'\nMSG05L   EQU   *-MSG05\nMSG06    DS    0C\n         DC    C'CSUBDEF06E '\n         DC    C'Library with same name is already defined'\nMSG06L   EQU   *-MSG06\nMSG07    DS    0C\n         DC    C'CSUBDEF07E '\n         DC    C'Library with same DSN is already defined'\nMSG07L   EQU   *-MSG07\nMSG08    DS    0C\n         DC    C'CSUBDEF08I '\n         DC    C'New library has been defined'\nMSG08L   EQU   *-MSG08\n* ------------------------------------------------------------------- *\n*              WORK AREA                                              *\n* ------------------------------------------------------------------- *\nWORKAREA    DSECT\n            LIBSAVE  DSECT=NO\nWORKCID     DS       F\nWORKWTO     DS       0A,(WTOL)X\nWORK_LENGTH DS       H                   PARSED DATA LENGTH\nWORK_LIB    DS       CL80                EXTRA LENGTH IS SO PARSE DOES\nWORK_DSN    DS       CL80                .. NOT HAVE TO BE TOO SMART\nWORKAREA_L  EQU      *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEZWPL   DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   LIST=NO\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  CSUBDEF\n./ ADD NAME=CSUBKILL 0100-09250-09250-0919-00195-00195-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: CSUBKILL                                              *\n*                                                                     *\n*  Kill a user                                                        *\n*    The librarian 'enq's libraries whenever a user displays the      *\n*    member names, checks-in a member, checks-out a member, etc.      *\n*    The library stays enq'd until the user switches to a different   *\n*    library or terminates their session with the LIBRARIAN.          *\n*    The librarian will not close a library until there are no        *\n*    users activily using that library (no one has it enq'd).  This   *\n*    command allows user sessions to be 'killed' and therefore        *\n*    release their \"enq's\" allowing libraries to be closed.           *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  At entry:                                                          *\n*    R1 command address                                               *\n*    R2 command length                                                *\n*    R3 address of console id                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSUBKILL CSECT\nCSUBKILL AMODE 31\nCSUBKILL RMODE ANY\n         USING CSUBKILL,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'CSUBKILL'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LR    R8,R1                          COPY COMMAND ADDRESS\n         LR    R9,R2                          COPY COMMAND LENGTH\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LV=WORKAREA_L,                 .. SIZE                  +\n               LOC=BELOW                      .. BELOW 24-BIT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ITRACE ID=INIT,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R9\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   WORKCID,0(R3)                  COPY CONSOLE ID\n         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO\n         LA    R6,WORKWTO                     WTO LIST FORM ADDRESS\n         USING WPL,R6                         DEFINE BASE\n         MVC   WORK_USER,ALL                  ASSUME ALL USERS\n         SH    R9,H5                          MINUS LENGTH OF \"KILL \"\n         BL    PROC0010\n         CH    R9,H8                          TOO LONG?\n         BH    PROC0070                       YES\n         MVC   WORK_USER,COMM_BLANKS          INITIALIZE USER NAME\n         BCTR  R9,0\n         EX    R9,USERMVC                     COPY USER NAME\nPROC0010 DS    0H\n         ITRACE ID=USER,                                               +\n               DATA1=WORK_USER\n         MVI   WORK_FLAG,0                    CLEAR FLAGS\n         ICM   R7,15,COMM_USER_CHAIN          FIRST USER\n         BZ    PROC0060\n         USING USERBLOK,R7                    DEFINE BASE\nPROC0020 DS    0H\n         CLC   WORK_USER,ALL                  ALL USERS?\n         BE    PROC0030                       YES\n         ITRACE ID=CK_USER,                                            +\n               DATA1=USER_USER_ID\n         CLC   WORK_USER,USER_USER_ID\n         BNE   PROC0050                       NO\nPROC0030 DS    0H\n         ITRACE ID=FOUND,                                              +\n               RDATA1=R7\n         OI    WORK_FLAG,$FOUND               USER FOUND\n         TM    WORK_FLAG,$HEADING             HEADING ISSUED?\n         BO    PROC0040                       YES\n         OI    WORK_FLAG,$HEADING             INDICATE HEADING ISSUED\n         MVC   WPLTXT(HEADINGL),HEADING\n         BAL   R10,WTO0000                    SENDING HEADING\nPROC0040 DS    0H\n         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE\n         MVC   WPLTXT+(MSG01_USER-MSG01)(L'MSG01_USER),USER_USER_ID\n         BAL   R10,WTO0000\n         OI    USER_STATUS,$USER_KILL\n         POST  USER_NETWORK_ECB\nPROC0050 DS    0H\n         ICM   R7,15,USER_NEXT                NEXT USER\n         BNZ   PROC0020\nPROC0060 DS    0H\n         TM    WORK_FLAG,$FOUND               USER FOUND?\n         BO    EXIT0000                       YES\n         ITRACE ID=NOTFOUND\n         MVC   WPLTXT(MSG02L),MSG02           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE MESSAGE\n         B     EXIT0000\nPROC0070 DS    0H\n         ITRACE ID=TOOLONG\n         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORKWTO),                ISSUE WTO                +\n               CONSID=WORKCID                 .. TO SAME CONSOLE\n         MVC   WORKWTO(WTOL),WTOI\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\nUSERMVC  MVC   WORK_USER(0),5(R8)    COPY USER NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nH5       DC    H'5'\nH8       DC    H'8'\n*\nWTOI     WTO   '                                                       +\n                                                                     ',+\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\n\n\nHEADING        DS    0C\n               DC    C'CSUBKILL00H '\n               DC    C'Killed user(s):'\nHEADINGL       EQU   *-HEADING\n\nMSG01          DS    0C\n               DC    C'CSUBKILL01I '\nMSG01_USER     DC    CL8' '\nMSG01L         EQU   *-MSG01\n\nMSG02          DC    C'CSUBKILL02E User not found '\nMSG02L         EQU   *-MSG02\nMSG03          DC    C'CSUBKILL03E User id too long'\nMSG03L         EQU   *-MSG03\nALL            DC    CL8'ALL'\n* ------------------------------------------------------------------- *\n*              WORK AREA                                              *\n* ------------------------------------------------------------------- *\nWORKAREA   DSECT\n           LIBSAVE  DSECT=NO\nWORKCID    DS       F\nWORKWTO    DS       0A,(WTOL)X\nWORK_USER  DS       CL8\nWORK_FLAG  DS       X\n$FOUND     EQU      X'80'\n$HEADING   EQU      X'40'\nWORKAREA_L EQU      *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEZWPL   DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  CSUBKILL\n./ ADD NAME=CSUBLIBS 0100-09250-09250-0919-00231-00231-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: CSUBLIBS                                              *\n*                                                                     *\n*  Display status of libraries.                                       *\n*                                                                     *\n*  At entry:                                                          *\n*    R1 command address                                               *\n*    R2 command length                                                *\n*    R3 address of console id                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSUBLIBS CSECT\nCSUBLIBS AMODE 31\nCSUBLIBS RMODE ANY\n         USING CSUBLIBS,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'CSUBLIBS'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LR    R8,R1                          COPY COMMAND ADDRESS\n         LR    R9,R2                          COPY COMMAND LENGTH\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LV=WORKAREA_L,                 .. SIZE                  +\n               LOC=BELOW                      .. BELOW 24-BIT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ITRACE ID=INIT,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R9\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   WORKCID,0(R3)                  COPY CONSOLE ID\n         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO\n         LA    R6,WORKWTO                     WTO LIST FORM ADDRESS\n         USING WPL,R6                         DEFINE BASE\n         MVC   WORK_LIB,ALL                   ASSUME ALL USERS\n         SH    R9,H5                          MINUS LENGTH OF \"LIB\"\n         BL    PROC0010\n         CH    R9,H8                          TOO LONG?\n         BH    PROC0100                       YES\n         MVC   WORK_LIB,COMM_BLANKS           INITIALIZE LIB NAME\n         EX    R9,LIBMVC                      COPY USER NAME\nPROC0010 DS    0H\n         ITRACE ID=LIB,                                                +\n               DATA1=WORK_LIB\n         MVI   WORK_FLAGS,0                   CLEAR FLAGS\n         ICM   R7,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         BZ    PROC0090\n         USING LIBBLOK,R7                     DEFINE BASE\nPROC0020 DS    0H\n         CLC   WORK_LIB,ALL                   ALL LIBRARIES?\n         BE    PROC0030                       YES\n         CLC   WORK_LIB,LIB_NAME              CORRECT LIBRARY?\n         BNE   PROC0080                       NO\nPROC0030 DS    0H\n         ITRACE ID=FOUND,                                              +\n               RDATA1=R7\n         OI    WORK_FLAGS,$FOUND              LIBRARY FOUND\n         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE\n         MVC   WPLTXT+(MSG01LIB-MSG01)(L'MSG01LIB),LIB_NAME\n         MVC   WPLTXT+(MSG01DSC-MSG01)(L'MSG01DSC),LIB_DESCRIPTION\n         TM    LIB_STATUS,$LIB_OPEN           OPEN?\n         BO    PROC0040                       YES\n         MVC   WPLTXT+(MSG01STA-MSG01)(L'MSG01STA),STATCLS\n         B     PROC0050\nPROC0040 DS    0H\n         MVC   WPLTXT+(MSG01STA-MSG01)(L'MSG01STA),STATOPEN\nPROC0050 DS    0H\n         ICM   R5,15,LIB_USERS                FIRST LIBUSER BLOCK\n         BNZ   PROC0060\n         MVC   WPLTXT+(MSG01IDL-MSG01)(L'MSG01IDL),IDLE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     PROC0080\nPROC0060 DS    0H\n         BAL   R10,WTO0000                    ISSUE WTO\n         USING LIBUSER,R5                     DEFINE BASE\nPROC0070 DS    0H\n         L     R1,LIB_USER_USER               USER BLOCK ADDRESS\n         MVC   WPLTXT(MSG02L),MSG02           COPY MESSAGE\n         MVC   WPLTXT+(MSG02USR-MSG02)(L'MSG02USR),USER_USER_ID-USERBLO+\n               K(R1)\n         MVC   WPLTXT+(MSG02NAME-MSG02)(L'MSG02NAME),USER_NAME-USERBLOK+\n               (R1)\n         BAL   R10,WTO0000                    ISSUE WTO\n         ICM   R5,15,LIB_USER_NEXT            NEXT USER\n         BNZ   PROC0070                       PROCESS NEXT USER\nPROC0080 DS    0H\n         ICM   R7,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   PROC0020\nPROC0090 DS    0H\n         TM    WORK_FLAGS,$FOUND              LIBRARY FOUND?\n         BO    EXIT0000                       YES\n         ITRACE ID=NOTFOUND\n         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE MESSAGE\n         B     EXIT0000\nPROC0100 DS    0H\n         ITRACE ID=TOOLONG\n         MVC   WPLTXT(MSG04L),MSG04           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORKWTO),                ISSUE WTO                +\n               CONSID=WORKCID                 .. TO SAME CONSOLE\n         MVC   WORKWTO(WTOL),WTOI\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                          COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                      CALLER'S SAVE AREA\n         FREEMAIN RU,                          FREE WORK AREA          +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                 RESTORE REGISTERS\n         SR    R15,R15                         RETURN CODE\n         BR    R14                             RETURN TO CALLER\n* ------------------------------------------------------------------- *\nLIBMVC   MVC   WORK_LIB(0),4(R8)               COPY LIBRARY NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nH5       DC    H'5'\nH8       DC    H'8'\n*\n*\n*\n* NOTE: The text length in the following WTO is 100 characters\n*\nWTOI     WTO   '                                                       +\n                                                        ',             +\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\n\nIDLE     DC    C'IDLE'\n\nMSG01    DS    0C\n         DC    C'CSUBLIBS01I '\nMSG01LIB DC    CL8' '\n         DC    C' '\nMSG01DSC DC    CL40' '\n         DC    C' '\nMSG01STA DC    CL6' '\n         DC    C' '\nMSG01IDL DC    CL4' '\nMSG01L   EQU   *-MSG01\nMSG02    DC    C'CSUBLIBS02I Active user: '\nMSG02USR DC    CL8' '\n         DC    CL2' '\nMSG02NAME DC   CL20' '\nMSG02L   EQU   *-MSG02\nMSG03    DC    C'CSUBLIBS02E Library not found'\nMSG03L   EQU   *-MSG03\nMSG04    DC    C'CSUBLIBS03E Library name too long'\nMSG04L   EQU   *-MSG04\n\nSTATOPEN DC    CL6'OPEN  '\nSTATCLS  DC    CL6'CLOSED'\nALL      DC    CL8'ALL'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA   DSECT\n           LIBSAVE  DSECT=NO\n           LIBFUNC  DSECT=NO\nWORKDWRD   DS       D\nWORKCID    DS       F\nWORKWTO    DS       0A,(WTOL)X\n\nWORK_LIB   DS       CL8\n           DS       CL8                .. ALLOW FOR SCANNER OVER-RUNS\n\nWORK_FLAGS DS       X\n$FOUND     EQU      X'80'\nWORKAREA_L EQU    *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFNCDSCT  DSECT\nFNCCODE  DS       X\nFNCDESC  DS       CL20\nFNCL     EQU      *-FNCDSCT\n* ------------------------------------------------------------------- *\n*              COMMON DATA MAP                                        *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBUSER  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*              WTO PARM LIST                                          *\n* ------------------------------------------------------------------- *\n         IEZWPL DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA LIST=NO\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  CSUBLIBS\n./ ADD NAME=CSUBLSTA 0100-09250-09250-0919-00234-00234-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: CSUBLSTA                                              *\n*                                                                     *\n*  Display library statistics .                                       *\n*                                                                     *\n*  At entry:                                                          *\n*    R1 command address                                               *\n*    R2 command length                                                *\n*    R3 address of console id                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSUBLSTA CSECT\nCSUBLSTA AMODE 31\nCSUBLSTA RMODE ANY\n         USING CSUBLSTA,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'CSUBLSTA'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LR    R8,R1                          COPY COMMAND ADDRESS\n         LR    R9,R2                          COPY COMMAND LENGTH\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LV=WORKAREA_L,                 .. SIZE                  +\n               LOC=BELOW                      .. BELOW 24-BIT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ITRACE ID=INIT,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R9\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   WORKCID,0(R3)                  COPY CONSOLE ID\n         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO\n         LA    R6,WORKWTO                     WTO LIST FORM ADDRESS\n         USING WPL,R6                         DEFINE BASE\n         MVC   WORKLIB,ALL                    ASSUME ALL USERS\n         SH    R9,H9                          MINUS LENGTH OF \"LIBSTAT\"\n         BL    PROC0010\n         CH    R9,H7                          TOO LONG?\n         BH    PROC0100                       YES\n         MVC   WORKLIB,COMM_BLANKS            INITIALIZE LIB NAME\n         EX    R9,LIBMVC                      COPY USER NAME\nPROC0010 DS    0H\n         ITRACE ID=LIB,                                                +\n               DATA1=WORKLIB\n         MVI   WORK_FLAGS,0                   CLEAR FLAGS\n         ICM   R7,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         BZ    PROC0090\n         USING LIBBLOK,R7                     DEFINE BASE\nPROC0020 DS    0H\n         CLC   WORKLIB,ALL                    ALL LIBRARIES?\n         BE    PROC0030                       YES\n         CLC   WORKLIB,LIB_NAME               CORRECT LIBRARY?\n         BNE   PROC0080                       NO\nPROC0030 DS    0H\n         ITRACE ID=FOUND,                                              +\n               RDATA1=R7\n         OI    WORK_FLAGS,$FOUND              LIBRARY FOUND\n         TM    WORK_FLAGS,$HEADING            HEADING ISSUED?\n         BO    PROC0040                       YES\n         OI    WORK_FLAGS,$HEADING            INDICATE HEADING ISSUED\n         MVC   WPLTXT(HEADINGL),HEADING\n         BAL   R10,WTO0000                    SENDING HEADING\nPROC0040 DS    0H\n         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE\n         MVC   WPLTXT+(MSG01_LIB-MSG01)(L'MSG01_LIB),LIB_NAME\n         TM    LIB_STATUS,$LIB_OPEN           OPEN?\n         BO    PROC0050                       YES\n         MVC   WPLTXT+(MSG01_STA-MSG01)(L'MSG01_STA),STATCLS\n         B     PROC0060\nPROC0050 DS    0H\n         MVC   WPLTXT+(MSG01_STA-MSG01)(L'MSG01_STA),STATOPEN\nPROC0060 DS    0H\n         ICM   R1,15,LIB_READS\n         CVD   R1,WORKDWRD\n         ED    WPLTXT+(MSG01_READS-MSG01)(L'MSG01_READS),WORKDWRD+3\n         ICM   R1,15,LIB_WRITES\n         CVD   R1,WORKDWRD\n         ED    WPLTXT+(MSG01_WRITES-MSG01)(L'MSG01_WRITES),WORKDWRD+3\n         ICM   R1,15,LIB_ERASES\n         CVD   R1,WORKDWRD\n         ED    WPLTXT+(MSG01_ERASES-MSG01)(L'MSG01_ERASES),WORKDWRD+3\n         ICM   R1,15,LIB_NEW\n         CVD   R1,WORKDWRD\n         ED    WPLTXT+(MSG01_NEW-MSG01)(L'MSG01_NEW),WORKDWRD+3\n         ICM   R1,15,LIB_UPDATE\n         CVD   R1,WORKDWRD\n         ED    WPLTXT+(MSG01_UPDATES-MSG01)(L'MSG01_UPDATES),WORKDWRD+3\n         ICM   R1,15,LIB_DELETE\n         CVD   R1,WORKDWRD\n         ED    WPLTXT+(MSG01_DELETES-MSG01)(L'MSG01_DELETES),WORKDWRD+3\n         BAL   R10,WTO0000                    SENDING HEADING\nPROC0080 DS    0H\n         ICM   R7,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   PROC0020\nPROC0090 DS    0H\n         TM    WORK_FLAGS,$FOUND              LIBRARY FOUND?\n         BO    EXIT0000                       YES\n         ITRACE ID=NOTFOUND\n         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE MESSAGE\n         B     EXIT0000\nPROC0100 DS    0H\n         ITRACE ID=TOOLONG\n         MVC   WPLTXT(MSG04L),MSG04           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORKWTO),                ISSUE WTO                +\n               CONSID=WORKCID                 .. TO SAME CONSOLE\n         MVC   WORKWTO(WTOL),WTOI\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\nLIBMVC   MVC   WORKLIB(0),4(R8)         \\     COPY LIBRARY NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nH7       DC    H'7'\nH9       DC    H'9'\n*\nWTOI     WTO   '                                                       +\n                                                                     ',+\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\n\n\nHEADING        DS    0C\n               DC    C'CSUBLSTA00H '\n               DC    CL8'Library'\n               DC    C'  state'\n               DC    C'        reads'\n               DC    C'      writes'\n               DC    C'      erases'\n               DC    C' new members'\n               DC    C' updated members'\n               DC    C' deleted members'\nHEADINGL       EQU   *-HEADING\n\nMSG01          DS    0C\n               DC    C'CSUBLSTA01I '\nMSG01_LIB      DC    CL8' '\n               DC    C'  '\nMSG01_STA      DC    CL6' '\nMSG01_READS    DC    X'402020206B2020206B202120'\nMSG01_WRITES   DC    X'402020206B2020206B202120'\nMSG01_ERASES   DC    X'402020206B2020206B202120'\nMSG01_NEW      DC    X'402020206B2020206B202120'\n               DC    CL4' '\nMSG01_UPDATES  DC    X'402020206B2020206B202120'\n               DC    CL4' '\nMSG01_DELETES  DC    X'402020206B2020206B202120'\nMSG01L         EQU   *-MSG01\n\nMSG03    DC    C'CSUBLSTA02E Library not found'\nMSG03L   EQU   *-MSG03\nMSG04    DC    C'CSUBLSTA03E Library name too long'\nMSG04L   EQU   *-MSG04\n\nSTATOPEN DC    CL6'OPEN  '\nSTATCLS  DC    CL6'CLOSED'\nALL      DC    CL8'ALL'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA   DSECT\n           LIBSAVE  DSECT=NO\nWORKDWRD   DS       D\nWORKCID    DS       F\nWORKWTO    DS       0A,(WTOL)X\nWORKLIB    DS       CL8\nWORK_FLAGS DS       X\n$FOUND     EQU      X'80'\n$HEADING   EQU      X'40'\nWORKAREA_L EQU      *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBUSER  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEZWPL DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA LIST=NO\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  CSUBLSTA\n./ ADD NAME=CSUBMAIN 0100-09250-09250-0919-00496-00496-00000-SOURCE\n         TITLE 'CONSOLE COMMUNICATION'\n         MACRO\n         CMD   &TEXT,&ADDR,&DESC,&SAMP\n         LCLA  &LEN\n         AIF   (T'&TEXT EQ 'O').ERR0010\n         AIF   (T'&ADDR EQ 'O').ERR0020\n&LEN     SETA  K'&TEXT\n         DC    AL2(&LEN)\n         DC    &ADDR\n         DC    CL8'&TEXT'\n         DC    CL50&DESC\n         DC    CL50&SAMP\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'COMMAND TEXT IS REQUIRED'\n         MEXIT\n.ERR0020 ANOP\n         MNOTE 12,'COMMAND PROCESSOR ADDRESS IS REQUIRED'\n         MEND\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: CSUBMAIN                                              *\n*                                                                     *\n*  Console subtask mainline                                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSUBMAIN CSECT\nCSUBMAIN AMODE 31\nCSUBMAIN RMODE ANY\n         USING CSUBMAIN,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'FSXCSUB'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,0(R1)                      COPY COMM AREA BASE\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LV=WORKAREA_L,                                          +\n               LOC=BELOW\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK\n         MVI   PRTCC,C' '                     SINGLE SPACING\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         GETMAIN RU,                          ACQUIRE STORAGE          +\n               LV=EXTRACTL+4,                 .. LENGTH                +\n               LOC=BELOW                      .. 24-BIT AREA\n         LR    R2,R1                          SAVE THE ADDRESS\n         LA    R3,EXTRACTL(R2)                RETURNED DATA ADDRESS\n         MVC   0(EXTRACTL,R2),EXTRACTI\n         EXTRACT (R3),                        EXTRACT COMM LIST ADDRESS+\n               FIELDS=COMM,                   .. RETURN COMLIST ADDRESS+\n               MF=(E,(R2))                    ..\n         L     R9,0(R3)                       COMM LIST ADDRESS\n         FREEMAIN RU,A=(2),LV=EXTRACTL+4      FREE EXTRACT WORK AREA\n         ITRACE ID=COMLIST,                   TRACE COMLIST ADDRESS    +\n               RDATA1=R9\n         ST    R9,WORK_COMM                   SAVE COMLIST ADDRESS\n         USING COMLIST,R9                     DEFINE COMLIST BASE\n         MVC   WORK_CONS_ECB,COMECBPT         SAVE ECB ADDRESS\n         ITRACE ID=SETCTR                     SETTING CIB LIMIT\n         QEDIT ORIGIN=COMCIBPT,               SET CIB LIMIT            +\n               CIBCTR=2                       .. ALLOW 2 CIBS\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0020                        NO\n         LA    R1,COMM_CSUB_WORK_ECB          ECB POSTED BY LIBSMAIN\n         ST    R1,WORK_WORK_ECB               SET ADDRESS IN ECB LIST\n         OI    WORK_WORK_ECB,X'80'            FLAG END-OF-LIST\n         MVC   WORK_WTO(WTOL),WTOI\n         USING WPL,WORK_WTO                   DEFINE WTO PARM LIST BASE\nCONS0010 DS    0H\n         LA    R2,WORK_WAIT                   ECB LIST ADDRESS\n         ITRACE ID=WAIT,                                               +\n               RDATA1=(R2)                    .. WAIT LIST ADDRESS\n         TM    COMM_EOJ_PHASE,$EOJ3           PHASE 3 OF SHUTDOWN?\n         BO    EXIT0000                       YES\n         WAIT  ECBLIST=(R2)                   WAIT\nCONS0020 DS    0H\n         ICM   R8,15,COMCIBPT                 FIRST CIB\n         BZ    CONS0010                       NO CIB'S\n         USING CIB,R8                         DEFINE CIB BASE\nCONS0030 DS    0H\n         ITRACE ID=CIB,                       TRACE EACH CIB           +\n               RDATA1=R8,                     .. CIB ADDRESS           +\n               DATA2=CIBVERB                  .. VERB FROM CIB\n         MVC   PRTMSGID(MSG07L),MSG07\n         CLI   CIBVERB,CIBSTOP                STOP?\n         BE    CONS0050                       YES\n         SR    R5,R5                          CLEAR REGISTER\n         ICM   R5,3,CIBDATLN                  DATA LENGTH\n         BZ    CONS0070                       NO DATA\n         CH    R5,H50                         TOO LONG?\n         BNH   CONS0040                       NO\n         LH    R5,H50                         LIMIT LENGTH\nCONS0040 DS    0H\n         LR    R15,R5                         COPY LENGTH\n         BCTR  R15,0                          ADJUST FOR EXECUTE\n         EX    R15,MVC01                      MOVE TO I/O AREA\n         B     CONS0060\nCONS0050 DS    0H\n         MVC   PRTMSGID+(MSG07TXT-MSG07)(4),STOP\nCONS0060 DS    0H\n         BAL   R10,PRT0000                    PRINT THE MESSAGE\nCONS0070 DS    0H\n         ITRACE ID=CIBDATA,                                            +\n               DATA1=MSG07TXT\n         CLI   CIBVERB,CIBSTART               START COMMAND?\n         BE    CONS0160                       YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*    I HATE \"backward\" type logic!!                                   *\n*                                                                     *\n*    If the LIBRARIAN is being assembled for a z/OS 1.8 or later      *\n*    system, COMMENT out the following AGO.  For z/OS 1.7 or          *\n*    earlier un-comment the AGO.                                      *\n*                                                                     *\n*                                                                     *\n*        AGO   .COND1                                                 *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LH    R2,CIBDATLN                    DATA LENGTH\n         AR    R2,R8                          PLUS CIB ADDRESS\n         USING CIBX,R2\n         MVC   WORK_CONSID,CIBXCNID           COPY CONSOLE ID\n         DROP  R2\n         AGO   .COND2\n.COND1   ANOP\n         MVC   WORK_CONSID+3(1),CIBCONID      COPY CONSOLE ID\n.COND2   ANOP\n         CLI   CIBVERB,CIBSTOP                STOP COMMAND?\n         BE    SHUT0000                       YES\n         CLI   CIBVERB,CIBMODFY               MODIFY?\n         BNE   CONS0160                       NO\n         LA    R4,CIBDATA                     FIRST CHARACTER\n         SR    R2,R2                          LENGTH\nCONS0080 DS    0H\n         CLI   0(R4),C' '                     BLANK?\n         BE    CONS0090                       YES\n         CLI   0(R4),C','                     COMMA?\n         BE    CONS0090                       YES\n         LA    R4,1(,R4)                      PLUS 1\n         LA    R2,1(,R2)                      PLUS 1\n         BCT   R5,CONS0080                    LOOP\n         ICM   R2,3,CIBDATLN                  RESTORE TO FULL LENGTH\nCONS0090 DS    0H\n         LA    R6,CMD_TABLE                   OUR LIST OF COMMANDS\n         USING CMD_DSECT,R6                   DEFINE BASE\n         SR    R1,R1                          CLEAR REGISTER\nCONS0100 DS    0H\n         CLI   0(R6),X'FF'                    END OF TABLE?\n         BE    CONS0120                       YES\n         ICM   R1,3,CMD_LENGTH                TEXT LENGTH\n         CLR   R2,R1                          LENGTH CORRECT?\n         BNE   CONS0110                       NO\n         BCTR  R1,0                           MINUS 1 FOR EXECUTE\n         EX    R1,CMDCLC                      COMMAND FOUND?\n         BE    CONS0130                       YES\nCONS0110 DS    0H\n         LA    R6,CMD_DSECT_L(,R6)            NEXT COMMAND\n         B     CONS0100                       LOOP\nCMDCLC   CLC   CMD_CMD(0),CIBDATA             COMMAND LOCATED?\nCONS0120 DS    0H\n         MVC   WPLTXT(MSG01L),MSG01           MESSAGE TO WTO\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     CONS0160                       RELEASE THIS CIB\nCONS0130 DS    0H\n         CLC   =C',?',0(R4)                   SAMPLE WANTED?\n         BE    CONS0150                       YES\n         LA    R1,CIBDATA                     DATA ADDRESS\n         SR    R2,R2                          CLEAR REGISTER\n         ICM   R2,3,CIBDATLN                  COMMAND LENGTH\n         LA    R3,WORK_CONSID                 CONSOLE'S ID ADDR\n         ICM   R15,15,CMD_ADDR                COMMAND PROCESSOR ADDRESS\n         BALR  R14,R15                        PROCESS THE COMMAND\n         B     CONS0160\nCONS0150 DS    0H\n         MVC   WPLTXT(MSG10L),MSG10\n         MVC   WPLTXT+(MSG10SAM-MSG10)(L'MSG10SAM),CMD_SAMPLE\n         BAL   R10,WTO0000\nCONS0160 DS    0H\n         L     R2,CIBNEXT                     NEXT CIB\n         QEDIT ORIGIN=COMCIBPT,               FREE THIS CIB            +\n               BLOCK=(R8)\n         LTR   R15,R15                        QEDIT SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         LTR   R8,R2                          NEXT CIB'S ADDRESS\n         BNZ   CONS0030                       LOOP\n         B     CONS0010                       WAIT FOR ANOTHER EVENT\n* ------------------------------------------------------------------- *\n*   PERFORM A SNAP DUMP                                               *\n* ------------------------------------------------------------------- *\nSNAP0000 DS    0H\n         ITRACE ID=SNAP\n         LOAD  EP=LIBSSNAP\n         LR    R15,R0                         COPY ENTY POINT\n         BALR  R14,R15                        LINK TO LIBSSNAP\n         DELETE EP=LIBSSNAP                   DELETE LIBSSNAP\n         ITRACE ID=SNAPDONE\n         B     CONS0160\n* ------------------------------------------------------------------- *\n*   LIST AVAILABLE COMMANDS                                           *\n* ------------------------------------------------------------------- *\nLIST0000 DS    0H\n         ITRACE ID=LIST\n         MVC   WPLTXT(MSG08L),MSG08\n         BAL   R10,WTO0000                    ISSUE WTO\n         LA    R6,CMD_TABLE                   OUR LIST OF COMMANDS\n         USING CMD_DSECT,R6                   DEFINE BASE\nLIST0010 DS    0H\n         CLI   0(R6),X'FF'                    END OF TABLE?\n         BE    CONS0160                       YES\n         MVC   WPLTXT(MSG09L),MSG09\n         MVC   WPLTXT+(MSG09CMD-MSG09)(L'MSG09CMD),CMD_CMD\n         MVC   WPLTXT+(MSG09DSC-MSG09)(L'MSG09DSC),CMD_DESC\n         BAL   R10,WTO0000                    ISSUE WTO\n         LA    R6,CMD_DSECT_L(,R6)            NEXT COMMAND\n         B     LIST0010\n* ------------------------------------------------------------------- *\n*   Shutdown the STC                                                  *\n* ------------------------------------------------------------------- *\nSHUT0000 DS    0H\n         ITRACE ID=STOP\n         TM    COMM_EOJ_PHASE,$EOJ1           EOJ ALREADY IN PROGRESS?\n         BO    SHUT0010                       YES\n         POST  COMM_TERMINATION_ECB           POST THE TERMINATION ECB\n         MVC   WPLTXT(MSG04L),MSG04           COPY WTO\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     CONS0160                       RELEASE THIS CIB\nSHUT0010 DS    0H\n         MVC   WPLTXT(MSG05L),MSG05           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     CONS0160                       RELEASE THIS CIB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORK_WTO),               ISSUE WTO                +\n               CONSID=WORK_CONSID             .. TO SAME CONSOLE\n         MVC   WORK_WTO(WTOL),WTOI\n         BR    R10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE\n         ST    R2,PRTNEXT-PRTBLOK(R1)\n         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP PRINT SUBTASK\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Error routines                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=CIBDELF,                   QEDIT FAILED             +\n               RDATA1=R15                     .. RETURN CODE\n         ABEND 1,DUMP,,USER\nERR0020  DS    0H\n         ITRACE ID=CIBCTRF,                   QEDIT FAILED             +\n               RDATA1=R15                     .. RETURN CODE\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n*\n* ------------------------------------------------------------------- *\n*\nMVC01    MVC   PRTMSGID+(MSG07TXT-MSG07)(0),CIBDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXTRACTI EXTRACT *,                  EXTRACT LIST FORM                 +\n               FIELDS=COMM,          .. COMLIST ADDRESS PLEASE         +\n               MF=L\nEXTRACTL EQU   *-EXTRACTI\nWTOI     WTO   '                                                       +\n                                                                     ',+\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\n* ------------------------------------------------------------------- *\nH50      DC    H'50'\nPRTID    DC    CL8'PRTBLOK'\nMSG01    DC    C'CSUBMAIN01E * Invalid command'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    C'CSUBMAIN02I   Taking snap dump'\nMSG02L   EQU   *-MSG02\nMSG04    DS    0C\n         DC    C'CSUBMAIN04I   Library shutting down'\nMSG04L   EQU   *-MSG04\nMSG05    DS    0C\n         DC    C'CSUBMAIN05E * Shutdown already in progress'\nMSG05L   EQU   *-MSG05\nMSG07    DS    0C\n         DC    C'CSUBMAIN07I   Command from console: '\nMSG07TXT DC    CL50' '\nMSG07L   EQU   *-MSG07\n\nMSG08    DS    0C\n         DC    C'CSUBMAIN08I   Available commands:'\nMSG08L   EQU   *-MSG08\n\nMSG09    DS    0C\nMSG09CMD DC    CL8' '\n         DC    C'   '\nMSG09DSC DC    CL50' '\nMSG09L   EQU   *-MSG09\n\nMSG10    DS    0C\n         DC    C'CSUBMAIN10I   SAMPLE OF COMMAND:'\nMSG10SAM DC    CL50' '\nMSG10L   EQU   *-MSG10\n\nHEXZERO  DC    XL8'0000000000000000'\nHEXCHAR  DC    C'0123456789ABCDEF'\nSTOP     DC    CL4'STOP'\n* ------------------------------------------------------------------- *\n*              COMMANDS TABLE                                         *\n* ------------------------------------------------------------------- *\nCMD_TABLE DS   0C\n         CMD   QUIT,                                                   +\n               AL4(SHUT0000),                                          +\n               'STOP (shutdown the STC)',                              +\n               'STOP'\n\n         CMD   CLOSE,                                                  +\n               VL4(CSUBCLSE),                                          +\n               'CLOSE a library',                                      +\n               'CLOSE,lib'\n\n         CMD   DEF,                                                    +\n               VL4(CSUBDEF),                                           +\n               'DEFine a library',                                     +\n               'DEFine,lib,DSN'\n\n         CMD   DEFINE,                                                 +\n               VL4(CSUBDEF),                                           +\n               'DEFINE a library',                                     +\n               'DEFINE,lib,DSN'\n\n         CMD   KILL,                                                   +\n               VL4(CSUBKILL),                                          +\n               'KILL a (or all) user(s)',                              +\n               'KILL,user or KILL,ALL'\n\n         CMD   LIB,                                                    +\n               VL4(CSUBLIBS),                                          +\n               'Display libraries',                                    +\n               'LIB'\n\n         CMD   LIBS,                                                   +\n               VL4(CSUBLIBS),                                          +\n               'Display libraries',                                    +\n               'LIBS'\n\n         CMD   LIBSTAT,                                                +\n               VL4(CSUBLSTA),                                          +\n               'Display library statistics',                           +\n               'LIBSTAT'\n\n         CMD   OPEN,                                                   +\n               VL4(CSUBOPEN),                                          +\n               'OPEN a library',                                       +\n               'OPEN,lib'\n\n         CMD   SHUT,                                                   +\n               AL4(SHUT0000),                                          +\n               'SHUTdown the STC',                                     +\n               'SHUT'\n\n         CMD   SNAP,                                                   +\n               AL4(SNAP0000),                                          +\n               'SNAPshot the STC',                                     +\n               'SNAP'\n\n         CMD   STAT,                                                   +\n               VL4(CSUBSTAT),                                          +\n               'Overall STC STATUS',                                   +\n               'STAT'\n\n         CMD   STATUS,                                                 +\n               VL4(CSUBSTAT),                                          +\n               'Overall STC STATUS',                                   +\n               'STATUS'\n\n         CMD   STOP,                                                   +\n               AL4(SHUT0000),                                          +\n               'STOP the STC',                                         +\n               'STOP'\n\n         CMD   USER,                                                   +\n               VL4(CSUBUSER),                                          +\n               'DISPLAY users',                                        +\n               'USER'\n\n         CMD   USERS,                                                  +\n               VL4(CSUBUSER),                                          +\n               'DISPLAY users',                                        +\n               'USERS'\n\n         CMD   ?,                                                      +\n               AL4(LIST0000),                                          +\n               'LIST available commands',                              +\n               '?'\n\n         DC    X'FF'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA      DSECT\n              LIBSAVE  DSECT=NO\n              PRTBLOK  DSECT=NO\nWORK_COMM     DS   F                  ADDRESS OF COMM LIST\nWORK_CONSID   DS   F                  CONSOLE ID\n*\nWORK_WAIT     DS   0A\nWORK_CONS_ECB DS   A                  ADDRESS OF ECB POSTED BY MVS\nWORK_WORK_ECB DS   A                  ADDRESS IF ECB POSTED BY LIBSMAIN\n*\nWORK_WTO      DS   0F,(WTOL)X\nWORK_WORK     DS   CL10\nWORKAREA_L    EQU  *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCMD_DSECT     DSECT\nCMD_LENGTH    DS   AL2                COMMAND TEXT LENGTH\nCMD_ADDR      DS   AL4                COMMAND PROCESSOR ENTRY POINT\nCMD_CMD       DS   CL8                COMMAND TEXT\nCMD_DESC      DS   CL50\nCMD_SAMPLE    DS   CL50\nCMD_DSECT_L   EQU  *-CMD_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEZCOM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCIB      DSECT\n         IEZCIB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEZWPL   DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  CSUBMAIN\n./ ADD NAME=CSUBOPEN 0100-09250-09250-0919-00194-00194-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: CSUBOPEN                                              *\n*                                                                     *\n*  PROCESS OPEN COMMANDS ENTERED VIA THE CONSOLE.                     *\n*                                                                     *\n*  At entry:                                                          *\n*    R1 command address                                               *\n*    R2 command length                                                *\n*    R3 address of console id                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSUBOPEN CSECT\nCSUBOPEN AMODE 31\nCSUBOPEN RMODE ANY\n         USING CSUBOPEN,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'CSUBOPEN'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LR    R8,R1                          COPY COMMAND ADDRESS\n         LR    R9,R2                          COPY COMMAND LENGTH\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LV=WORKAREA_L,                 .. SIZE                  +\n               LOC=BELOW                      .. BELOW 24-BIT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ITRACE ID=INIT,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R9\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   WORKCID,0(R3)                  COPY CONSOLE ID\n         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO\n         LA    R6,WORKWTO\n         USING WPL,R6                         DEFINE BASE\n         SH    R9,H5                          MINUS LENGTH OF \"OPEN\"\n         BH    PROC0010\n         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     EXIT0000                       AND EXIT\nPROC0010 DS    0H\n         CH    R9,H8                          TOO LONG?\n         BH    PROC0080                       YES\n         MVC   WORKLIB,COMM_BLANKS            INITIALIZE LIBRARY NAME\n         BCTR  R9,0                           FOR EX INSTRUCTION\n         EX    R9,LIBMVC                      COPY LIBRARY NAME\n         ITRACE ID=LIB,                                                +\n               DATA1=WORKLIB\n         MVI   WORKFLAG,0                     CLEAR FLAGS\n         ICM   R7,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         BZ    PROC0070\n         USING LIBBLOK,R7                     DEFINE BASE\nPROC0020 DS    0H\n         CLC   WORKLIB,ALL                    ALL LIBRARIES?\n         BE    PROC0030                       YES\n         CLC   WORKLIB,LIB_NAME               CORRECT LIBRARY?\n         BNE   PROC0060                       NO\nPROC0030 DS    0H\n         ITRACE ID=FOUND,                                              +\n               RDATA1=R7\n         OI    WORKFLAG,$FOUND                LIBRARY FOUND\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_OPEN\n         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         LA    R1,LIBFUNC                     PARM BLOCK ADDRESS\nPROC0040 DS    0H\n         L     R2,COMM_LSUB_REQ               FIRST REQUEST ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN\n         BC    4,PROC0040                     TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB\n         CLI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK\n         BE    PROC0050                       YES\n         MVC   WPLTXT(100),LIB_FUNCTION_MESSAGE\n         BAL   R10,WTO0000                    SEND MESSAGE\n         B     PROC0060\nPROC0050 DS    0H\n         MVC   WPLTXT(MSG02L),MSG02           COPY MESSAGE\n         MVC   WPLTXT+(MSG02LIB-MSG02)(L'MSG02LIB),LIB_NAME\n         MVC   WPLTXT+(MSG02DSC-MSG02)(L'MSG02DSC),LIB_DESCRIPTION\n         BAL   R10,WTO0000                    ISSUE WTO\nPROC0060 DS    0H\n         ICM   R7,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   PROC0020\nPROC0070 DS    0H\n         TM    WORKFLAG,$FOUND                LIBRARY FOUND?\n         BO    EXIT0000                       YES\n         ITRACE ID=NOTFOUND\n         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE MESSAGE\n         B     EXIT0000\nPROC0080 DS    0H\n         ITRACE ID=TOOLONG\n         MVC   WPLTXT(MSG04L),MSG04           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORKWTO),                ISSUE WTO                +\n               CONSID=WORKCID                 .. TO SAME CONSOLE\n         MVC   WORKWTO(WTOL),WTOI\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\nLIBMVC   MVC   WORKLIB(0),5(R8)               COPY LIBRARY NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nH5       DC    H'5'\nH8       DC    H'8'\nWTOI     WTO   '                                                       +\n                                                                     ',+\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\nMSG01    DC    C'CSUBOPEN01E No library name given for OPEN'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    C'CSUBOPEN02I Library '\nMSG02LIB DC    CL8' '\n         DC    CL2' '\nMSG02DSC DC    CL40' '\n         DC    C' opened'\nMSG02L   EQU   *-MSG02\nMSG03    DC    C'CSUBOPEN02E Library not found'\nMSG03L   EQU   *-MSG03\nMSG04    DC    C'CSUBOPEN03E Library name too long'\nMSG04L   EQU   *-MSG04\nALL      DC    CL8'ALL'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA   DSECT\n           LIBSAVE DSECT=NO\n           LIBFUNC DSECT=NO\nWORKCID    DS      F\nWORKWTO    DS      0A,(WTOL)X\nWORKFLAG   DS      X\n$FOUND     EQU     X'80'\n\nWORKLIB    DS      CL8\n           DS      CL8               .. ALLOW FOR SCANNER TO OVER-RUN\n\nWORKAREA_L EQU     *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEZWPL   DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  CSUBOPEN\n./ ADD NAME=CSUBSTAT 0100-09250-09250-0919-00251-00251-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: CSUBSTAT                                              *\n*                                                                     *\n*  Display status of users.                                           *\n*                                                                     *\n*  At entry:                                                          *\n*    R1 command address                                               *\n*    R2 command length                                                *\n*    R3 address of console id                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSUBSTAT CSECT\nCSUBSTAT AMODE 31\nCSUBSTAT RMODE ANY\n         USING CSUBSTAT,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'CSUBSTAT'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LR    R8,R1                          COPY COMMAND ADDRESS\n         LR    R9,R2                          COPY COMMAND LENGTH\n         GETMAIN RU,                          OBTAIN WORK AREA         +\n               LV=WORKAREA_L,                 .. SIZE                  +\n               LOC=BELOW                      .. BELOW 24-BIT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ITRACE ID=INIT,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R9\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   WORKCID,0(R3)                  COPY CONSOLE ID\n         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO\n         LA    R6,WORKWTO\n         USING WPL,R6                         DEFINE BASE\n* ------------------------------------------------------------------- *\n*        Print subtask                                                *\n* ------------------------------------------------------------------- *\nPROC0000 DS    0H\n         MVC   WPLTXT(MSG01L),MSG01\n         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),PRINT\n         OC    COMM_PRINT_TCB,COMM_PRINT_TCB  PRINT SUBTASK ACTIVE?\n         BZ    PROC0010                       NO\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE\n         B     PROC0020\nPROC0010 DS    0H\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE\nPROC0020 DS    0H\n         UNPK  WORKUNPK(9),COMM_PRINT_TERM_ECB(5)\n         TR    WORKUNPK(8),HEXCHAR\n         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK\n         BAL   R10,WTO0000                    ISSUE WTO\n* ------------------------------------------------------------------- *\n*        Dynamic allocation/deallocation                              *\n* ------------------------------------------------------------------- *\n         MVC   WPLTXT(MSG01L),MSG01\n         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),DAIR\n         OC    COMM_DSUB_TCB,COMM_DSUB_TCB    DAIR SUBTASK ACTIVE?\n         BZ    PROC0030                       NO\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE\n         B     PROC0040\nPROC0030 DS    0H\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE\nPROC0040 DS    0H\n         UNPK  WORKUNPK(9),COMM_DSUB_TERM_ECB(5)\n         TR    WORKUNPK(8),HEXCHAR\n         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK\n         BAL   R10,WTO0000                    ISSUE WTO\n* ------------------------------------------------------------------- *\n*        Library OPEN/CLOSE                                           *\n* ------------------------------------------------------------------- *\n         MVC   WPLTXT(MSG01L),MSG01\n         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),LIBRARY\n         OC    COMM_LSUB_TCB,COMM_LSUB_TCB    OPEN/CLOSE ACTIVE?\n         BZ    PROC0050                       NO\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE\n         B     PROC0060\nPROC0050 DS    0H\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE\nPROC0060 DS    0H\n         UNPK  WORKUNPK(9),COMM_LSUB_TERM_ECB(5)\n         TR    WORKUNPK(8),HEXCHAR\n         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK\n         BAL   R10,WTO0000                    ISSUE WTO\n* ------------------------------------------------------------------- *\n*        Changed source history                                       *\n* ------------------------------------------------------------------- *\n         MVC   WPLTXT(MSG01L),MSG01\n         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),HISTORY\n         OC    COMM_HSUB_TCB,COMM_HSUB_TCB    SOURCE HISTORY ACTIVE?\n         BZ    PROC0070                       NO\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE\n         B     PROC0080\nPROC0070 DS    0H\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE\nPROC0080 DS    0H\n         UNPK  WORKUNPK(9),COMM_LSUB_TERM_ECB(5)\n         TR    WORKUNPK(8),HEXCHAR\n         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK\n         BAL   R10,WTO0000                    ISSUE WTO\n* ------------------------------------------------------------------- *\n*        VTAM subtask                                                 *\n* ------------------------------------------------------------------- *\n         MVC   WPLTXT(MSG01L),MSG01\n         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),VTAM\n         OC    COMM_VTAM_TCB,COMM_VTAM_TCB    VTAM SUBTASK ACTIVE?\n         BZ    PROC0090                       NO\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE\n         B     PROC0100\nPROC0090 DS    0H\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE\nPROC0100 DS    0H\n         UNPK  WORKUNPK(9),COMM_VTAM_TERM_ECB(5)\n         TR    WORKUNPK(8),HEXCHAR\n         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK\n         BAL   R10,WTO0000                    ISSUE WTO\n         MVC   WPLTXT(MSG02L),MSG02\n         MVC   WPLTXT+(MSG02_APPL-MSG02)(L'MSG02_APPL),COMM_APPL_NAME\n         BAL   R10,WTO0000                    ISSUE WTO\n* ------------------------------------------------------------------- *\n*        TCP/IP subtask                                               *\n* ------------------------------------------------------------------- *\n         MVC   WPLTXT(MSG01L),MSG01\n         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),TCPIP\n         OC    COMM_TCPIP_TCB,COMM_TCPIP_TCB  TCP/IP SUBTASK ACTIVE?\n         BZ    PROC0110                       NO\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE\n         B     PROC0120\nPROC0110 DS    0H\n         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE\nPROC0120 DS    0H\n         UNPK  WORKUNPK(9),COMM_TCPIP_TERM_ECB(5)\n         TR    WORKUNPK(8),HEXCHAR\n         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK\n         BAL   R10,WTO0000                    ISSUE WTO\n         MVC   WPLTXT(MSG03L),MSG03\n         SR    R1,R1\n         ICM   R1,3,COMM_PORT\n         CVD   R1,WORKUNPK\n         ED    WPLTXT+(MSG03_PORT-MSG03)(6),WORKUNPK+5\n         BAL   R10,WTO0000                    ISSUE WTO\n* ------------------------------------------------------------------- *\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORKWTO),                ISSUE WTO                +\n               CONSID=WORKCID                 .. TO SAME CONSOLE\n         MVC   WORKWTO(WTOL),WTOI             RE-INITIALIZE WTO\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHEXCHAR  EQU   *-X'F0'\n         DC    C'0123456789ABCDEF'\n\nACTIVE   DC    CL8'ACTIVE'\nDAIR     DC    CL8'DAIR'\nHISTORY  DC    CL8'HISTORY'\nINACTIVE DC    CL8'INACTIVE'\nLIBRARY  DC    CL8'LIBRARY'\nPRINT    DC    CL8'PRINT'\nTCPIP    DC    CL8'TCP/IP'\nVTAM     DC    CL8'VTAM'\nWTOI     WTO   '                                                       +\n                                                                     ',+\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\nMSG01          DS    0C\n               DC    C'CSUBSTAT01I '\nMSG01_SUBTASK  DC    CL8' '\n               DC    C' IS '\nMSG01_STATUS   DC    CL8' '\n               DC    C'  TERMINATION ECB='\nMSG01_ECB      DC    CL8' '\nMSG01L         EQU   *-MSG01\nMSG02          DS    0C\n               DC    C'CSUBSTAT02I '\n               DC    C'VTAM APPLID='\nMSG02_APPL     DC    CL8' '\nMSG02L         EQU   *-MSG02\nMSG03          DS    0C\n               DC    C'CSUBSTAT03I '\n               DC    C'TCP/IP PORT NUMBER'\nMSG03_PORT     DC    X'402020202120'\nMSG03L         EQU   *-MSG03\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA   DSECT\n           LIBSAVE  DSECT=NO\nWORKCID    DS       F\nWORKWTO    DS       0A,(WTOL)X\nWORKUNPK   DS       CL9\nWORKAREA_L EQU      *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFUNCTION_DSECT        DSECT\nFUNCTION_CODE         DS  X\nFUNCTION_DESCRIPTION  DS  CL16\nFUNCTION_LENGTH       EQU *-FUNCTION_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEZWPL   DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  CSUBSTAT\n./ ADD NAME=CSUBUSER 0100-09250-09250-0919-00290-00290-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: CSUBUSER                                              *\n*                                                                     *\n*  Display status of users.                                           *\n*                                                                     *\n*  At entry:                                                          *\n*    R1 command address                                               *\n*    R2 command length                                                *\n*    R3 address of console id                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSUBUSER CSECT\nCSUBUSER AMODE 31\nCSUBUSER RMODE ANY\n         USING CSUBUSER,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'CSUBUSER'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LR    R8,R1                          COPY COMMAND ADDRESS\n         LR    R9,R2                          COPY COMMAND LENGTH\n         GETMAIN RU,                          OBTAIN WORK AREA         +\n               LV=WORKAREA_L,                 .. SIZE                  +\n               LOC=BELOW                      .. BELOW 24-BIT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ITRACE ID=INIT,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R9\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   WORKCID,0(R3)                  COPY CONSOLE ID\n         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO\n         MVI   WORKFLAG,0                     CLEAR FLAGS\n         LA    R6,WORKWTO\n         USING WPL,R6                         DEFINE BASE\n         MVC   WORKUSER,ALL                   ASSUME ALL USERS\n         SH    R9,H6                          MINUS LENGTH OF \"USER\"\n         BL    PROC0010\n         CH    R9,H7                          TOO LONG?\n         BH    PROC0100                       YES\n         BCTR  R9,0                           FOR EX INSTRUCTION\n         EX    R9,USERMVC                     COPY USER NAME\nPROC0010 DS    0H\n         ITRACE ID=USER,                                               +\n               DATA1=WORKUSER\n         MVC   WORKENQ(ENQL),ENQI\n         ENQ   MF=(E,WORKENQ)                 ENQUE THE USER CHAIN\n         OI    WORKFLAG,$ENQ                  SET FLAG\n         ICM   R7,15,COMM_USER_CHAIN          FIRST USER\n         BZ    PROC0110\n         USING USERBLOK,R7                    DEFINE BASE\nPROC0020 DS    0H\n         CLC   WORKUSER,ALL                   ALL USERS?\n         BE    PROC0030                       YES\n         CLC   WORKUSER,USER_USER_ID          CORRECT USER?\n         BNE   PROC0080                       NO\nPROC0030 DS    0H\n         ITRACE ID=FOUND,                                              +\n               RDATA1=R7\n         OI    WORKFLAG,$FOUND                LIBRARY FOUND\n         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE\n         MVC   WPLTXT+(MSG01USR-MSG01)(L'MSG01USR),USER_USER_ID\n         MVC   WPLTXT+(MSG01LIB-MSG01)(L'MSG01LIB),USER_LIBRARY\n*---------------------------------------------------------------------*\n*        Determine last network function                              *\n*---------------------------------------------------------------------*\n         L     R9,USER_IO                     USER'S I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         LA    R1,FUNCTION_TABLE              FUNCTIONS TABLE\n         USING FUNCTION_DSECT,R1              DEFINE BASE\nPROC0040 DS    0H\n         CLI   0(R1),X'FF'                    END OF TABLE?\n         BE    PROC0050                       YES\n         CLC   NET_FUNCTION,FUNCTION_CODE     FUNCTION LOCATED?\n         BE    PROC0050                       YES\n         LA    R1,FUNCTION_LENGTH(R1)         NEXT FUNCTION\n         B     PROC0040                       LOOP\nPROC0050 DS    0H\n         MVC   WPLTXT+(MSG01FNC-MSG01)(L'MSG01FNC),FUNCTION_DESCRIPTION\n         BAL   R10,WTO0000\n*---------------------------------------------------------------------*\n*        Display network statistics                                   *\n*---------------------------------------------------------------------*\n         MVC   WPLTXT(MSG02L),MSG02\n         ICM   R1,15,USER_SENDS\n         CVD   R1,COMMDWRD\n         ED    WPLTXT+(MSG02S-MSG02)(L'MSG02S),COMMDWRD+5\n         ICM   R1,15,USER_BYTES_SENT\n         CVD   R1,COMMDWRD\n         ED    WPLTXT+(MSG02SB-MSG02)(L'MSG02SB),COMMDWRD+4\n         ICM   R1,15,USER_RECEIVES\n         CVD   R1,COMMDWRD\n         ED    WPLTXT+(MSG02R-MSG02)(L'MSG02R),COMMDWRD+5\n         ICM   R1,15,USER_BYTES_RECEIVED\n         CVD   R1,COMMDWRD\n         ED    WPLTXT+(MSG02RB-MSG02)(L'MSG02RB),COMMDWRD+4\n         BAL   R10,WTO0000\n         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID\n         BNZ   PROC0060\n         MVC   WPLTXT(MSG07L),MSG07\n         MVC   WPLTXT+(MSG07IP-MSG07)(L'MSG07IP),USER_IP_ADDRESS\n         B     PROC0070\nPROC0060 DS    0H\n         MVC   WPLTXT(MSG06L),MSG06\n         MVC   WPLTXT+(MSG06LU-MSG06)(L'MSG06LU),USER_PARTNER_LU\nPROC0070 DS    0H\n         BAL   R10,WTO0000\nPROC0080 DS    0H\n         ICM   R7,15,USER_NEXT                NEXT USER\n         BNZ   PROC0020\nPROC0090 DS    0H\n         TM    WORKFLAG,$FOUND                LIBRARY FOUND?\n         BO    EXIT0000                       YES\n         ITRACE ID=NOTFOUND\n         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE MESSAGE\n         B     EXIT0000\nPROC0100 DS    0H\n         ITRACE ID=TOOLONG\n         MVC   WPLTXT(MSG04L),MSG04           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     EXIT0000                       AND EXIT\nPROC0110 DS    0H\n         ITRACE ID=NOUSERS\n         MVC   WPLTXT(MSG05L),MSG05           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORKWTO),                ISSUE WTO                +\n               CONSID=WORKCID                 .. TO SAME CONSOLE\n         MVC   WORKWTO(WTOL),WTOI             RE-INITIALIZE WTO\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         TM    WORKFLAG,$ENQ                  ENQ ISSUED?\n         BNO   EXIT0010                       NO\n         MVC   WORKENQ(ENQL),ENQI\n         DEQ   MF=(E,WORKENQ)                 DEQ THE USER CHAIN\n         NI    WORKFLAG,255-$ENQ\nEXIT0010 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\nUSERMVC  MVC   WORKUSER(0),5(R8)              COPY USER NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nH6       DC    H'6'\nH7       DC    H'7'\nWTOI     WTO   '                                                       +\n                                                                     ',+\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\nENQI     ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L\nENQL     EQU   *-ENQI\nQNAME    DC    CL8'LIB'\nRNAME    DC    CL8'COMMUSER'\nMSG01    DS    0C\n         DC    C'CSUBUSER01I '\nMSG01USR DC    CL8' '\n         DC    C' '\nMSG01LIB DC    CL8' '\n         DC    C' '\nMSG01FNC DC    CL16' '\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    C'CSUBUSER02I '\n         DC    CL9' '\n         DC    C'Sends '\nMSG02S   DC    X'402020202120'\n         DC    C' bytes'\nMSG02SB  DC    X'4020202020202120'\n         DC    C'   Receives '\nMSG02R   DC    X'402020202120'\n         DC    C' bytes'\nMSG02RB  DC    X'4020202020202120'\nMSG02L   EQU   *-MSG02\nMSG03    DC    C'CSUBUSER03E User not found'\nMSG03L   EQU   *-MSG03\nMSG04    DC    C'CSUBUSER04E User name too long'\nMSG04L   EQU   *-MSG04\nMSG05    DC    C'CSUBUSER05I No users currently connected'\nMSG05L   EQU   *-MSG05\nMSG06    DC    C'CSUBUSER06I '\n         DC    CL9' '\n         DC    C'VTAM LU '\nMSG06LU  DC    CL8' '\nMSG06L   EQU   *-MSG06\nMSG07    DC    C'CSUBUSER07I '\n         DC    CL9' '\n         DC    C'IP address: '\nMSG07IP  DC    CL15' '\nMSG07L   EQU   *-MSG07\n\nFUNCTION_TABLE DS 0C\n         DC   AL1($NET_IDENTIFY_USER),CL16'Identify user'\n         DC   AL1($NET_GET_LIBS),CL16'Get libraries'\n         DC   AL1($NET_GET_MEMBERS),CL16'Get members'\n         DC   AL1($NET_CHECK_IN_AUTH),CL16'Check in auth'\n         DC   AL1($NET_CHECK_IN_SOURCE),CL16'Check in source'\n         DC   AL1($NET_CHECK_NEW_AUTH),CL16'Check new auth'\n         DC   AL1($NET_CHECK_OUT_AUTH),CL16'Check out auth'\n         DC   AL1($NET_CHECK_OUT_SOURCE),CL16'Check out source'\n         DC   AL1($NET_CHECK_VIEW_AUTH),CL16'Check view auth'\n         DC   AL1($NET_VIEW_SOURCE),CL16'View source'\n         DC   AL1($NET_CHECK_DESC_AUTH),CL16'Check desc auth'\n         DC   AL1($NET_SEND_DESC),CL16'Send description'\n         DC   AL1($NET_GET_DESC),CL16'Get description'\n         DC   AL1($NET_GET_RECORDS),CL16'Get records'\n         DC   AL1($NET_SEND_RECORDS),CL16'Send records'\n         DC   AL1($NET_ENQUE_LIB),CL16'Enqueue a lib'\n         DC   AL1($NET_DEQ_LIB),CL16'Dequeue a lib'\n         DC   AL1($NET_CHECK_DEL_AUTH),CL16'Delete a member'\n         DC   AL1($NET_CONFIRM_CHECK_OUT),CL16'Confirm check out'\n         DC   AL1($NET_ABORT_CHECK_OUT),CL16'Abort check out'\n         DC   AL1($NET_GET_STATUS),CL16'Get STC status'\n         DC   AL1($NET_CHECK_ADMIN_AUTH),CL16'Check ADMIN Auth'\n         DC   AL1($NET_SEND_ADMIN),CL16'Send ADMIN'\n         DC   AL1($NET_UNDO),CL16'Undo'\n         DC   X'FF',CL16'Unknown'\nALL      DC    CL8'ALL'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA   DSECT\n           LIBSAVE  DSECT=NO\n           LIBFUNC  DSECT=NO\nWORKCID    DS       F\nWORKWTO    DS       0A,(WTOL)X\nWORKENQ    DS       0F,(ENQL)X\nWORKUSER   DS       CL8\nWORKFLAG   DS       X\n$FOUND     EQU      X'80'\n$ENQ       EQU      X'40'\nWORKAREA_L EQU      *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFUNCTION_DSECT        DSECT\nFUNCTION_CODE         DS  X\nFUNCTION_DESCRIPTION  DS  CL16\nFUNCTION_LENGTH       EQU *-FUNCTION_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEZWPL   DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  CSUBUSER\n./ ADD NAME=DAIRMSG  0100-09250-09250-0919-00071-00071-00000-SOURCE\n         MACRO\n         DAIRMSG &CODE,&MSG1=,&MSG2=,&MSG3=,&MSG4=,&MSG5=\n         LCLA &NBR\n&NBR     SETA 0\n         AIF (T'&CODE EQ 'O').ERR0010\n         AIF (K'&CODE NE 12).ERR0015\n         AIF (T'&MSG5 EQ 'O').LBL0010\n         AIF (T'&MSG4 EQ 'O').ERR0020\n&NBR     SETA &NBR+1\n.LBL0010 ANOP\n         AIF (T'&MSG4 EQ 'O').LBL0020\n         AIF (T'&MSG3 EQ 'O').ERR0030\n&NBR     SETA &NBR+1\n.LBL0020 ANOP\n         AIF (T'&MSG3 EQ 'O').LBL0030\n         AIF (T'&MSG2 EQ 'O').ERR0040\n&NBR     SETA &NBR+1\n.LBL0030 ANOP\n         AIF (T'&MSG2 EQ 'O').LBL0040\n         AIF (T'&MSG1 EQ 'O').ERR0050\n&NBR     SETA &NBR+1\n.LBL0040 ANOP\n         AIF (T'&MSG1 EQ 'O').ERR0060\n&NBR     SETA &NBR+1\nA&SYSNDX DS  0X\n         DC  AL2(E&SYSNDX-A&SYSNDX)         TOTAL LENGTH\n         DC  XL6'&CODE'                     R15, ERROR, INFO\n         DC  AL2(&NBR)                      NUMBER OF MESSAGES\n         DC  CL80&MSG1\n         AIF (T'&MSG2 EQ 'O').LBL0050\n         DC  CL80&MSG2\n         AIF (T'&MSG3 EQ 'O').LBL0050\n         DC  CL80&MSG3\n         AIF (T'&MSG4 EQ 'O').LBL0050\n         DC  CL80&MSG4\n         AIF (T'&MSG5 EQ 'O').LBL0050\n         DC  CL80&MSG5\n.LBL0050 ANOP\nE&SYSNDX DS  0X\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'DAIR ERROR CODES ARE REQUIRED'\n         MEXIT\n.ERR0015 ANOP\n         MNOTE 12,'DAIR ERROR CODES MUST BE 12 CHARACTERS IN LENGTH'\n         MEXIT\n.ERR0020 ANOP\n         MNOTE 12,'MSG5 NOT VALID WITHOUT MSG1, MSG2, MSG3, AND MSG4'\n         MEXIT\n.ERR0030 ANOP\n         MNOTE 12,'MSG4 NOT VALID WITHOUT MSG1, MSG2, AND MSG3'\n         MEXIT\n.ERR0040 ANOP\n         MNOTE 12,'MSG3 NOT VALID WITHOUT MSG1 AND MSG2'\n         MEXIT\n.ERR0050 ANOP\n         MNOTE 12,'MSG2 NOT VALID WITHOUT MSG1'\n         MEXIT\n.ERR0060 ANOP\n         MNOTE 12,'MSG1 IS REQUIRED'\n         MEND\n\n\n\nDAIRMSG  CSECT\nDAIRMSG  AMODE  31\nDAIRMSG  RMODE  ANY\n         DAIRMSG 0004021C0000,                                         +\n               MSG1='Invalid UNIT NAME'\n         DC    X'FF'\n         END   DAIRMSG\n./ ADD NAME=DSUBMAIN 0100-09250-09250-0919-00107-00107-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: DSUBMAIN                                              *\n*                                                                     *\n*   Interface with MVS's dynamic allocation interface routine (DAIR)  *\n*   to allocate or de-allocate data sets.                             *\n*                                                                     *\n*   The interface block is DAIRREQ.                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDSUBMAIN CSECT\nDSUBMAIN AMODE 31\nDSUBMAIN RMODE ANY\n         USING DSUBMAIN,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                CHAIN REGISTERS\n         LR    R12,R15                        COPY ENTRY POINT ADDRESS\n         B     DAIR0000\n         DC    CL8'DSUBMAIN'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nDAIR0000 DS    0H\n         L     R11,0(R1)                      COMMON AREA ADDRESS\n         USING DAIRREQ,R10                    DEFINE BASE\n         GETMAIN RU,                          ACQUIRE WORK AREA        +\n               LV=WKL,                        .. ACQUIRE WORK AREA     +\n               LOC=ANY                        .. FROM ANY AREA\n         ST    R13,4(R1)                      CHAIN CALLER'S AREA\n         ST    R1,8(R13)                      CHAIN OUR AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK,R13                         DEFINE BASE\nDAIR0010 DS    0H\n         SR    R1,R1                          CLEAR REGISTER\n         L     R10,COMM_DSUB_REQ              FIRST REQUEST\n         CS    R10,R1,COMM_DSUB_REQ           GRAB THE CHAIN\n         BC    4,DAIR0010                     MISSED, TRY AGAIN\n         ITRACE ID=HAVEQ,                                              +\n               RDATA1=R10\n         LTR   R10,R10                        ANYTHING?\n         BNZ   DAIR0020                       YES.. WE'VE GOT WORK\n         ITRACE ID=WORKWAIT                   WAITING FOR WORK\n         WAIT  ECB=COMM_DSUB_WORK_ECB         WAIT FOR WORK\n         XC    COMM_DSUB_WORK_ECB,COMM_DSUB_WORK_ECB\n         TM    COMM_EOJ_PHASE,$EOJ3           TIME TO CLOSE DOWN?\n         BO    EXIT0000                       YES\n         ITRACE ID=WOKEUP\n         B     DAIR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDAIR0020 DS    0H\n         ITRACE ID=PROCREQ,                                            +\n               RDATA1=R10\n         TM    COMM_EOJ_PHASE,$EOJ3           TIME TO CLOSE DOWN?\n         BO    EXIT0000                       YES\n         LA    R1,DAIRREQ                     PARAMETER BLOCK ADDRESS\n         L     R15,VSUB0004                   DAIR ENTRY POINT\n         ITRACE ID=CALL0004,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                        LINK TO DAIR SUBROUTINE\n         ITRACE ID=POST_ECB\n         POST  DAIR_ECB\n         ICM   R10,15,DAIR_NEXT               NEXT REQUEST\n         BNZ   DAIR0020\n         B     DAIR0010\n* ------------------------------------------------------------------- *\n*             EXIT                                                    *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT                       EXITING\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WKL\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nVSUB0004 DC    V(SUB0004)                     DAIR SUBROUTINE\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nWK       DSECT\n         LIBSAVE  DSECT=NO\nWKL      EQU      *-WK\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         DAIRREQ  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         COPY REGEQU\n         END  DSUBMAIN\n./ ADD NAME=HSUBMAIN 0100-09250-09250-0919-00469-00469-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: HSUBMAIN                                                     *\n*                                                                     *\n*  Purpose: When a user updates a library member, the contents of     *\n*           the member are written to a history file prior to the     *\n*           update.  Each member written to the history file is       *\n*           preceded by a header that identifies the member being     *\n*           recorded.  This should allow source to be retrieved       *\n*           in the event an update needs to be backed-out.            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHSUBMAIN CSECT\nHSUBMAIN AMODE 31\nHSUBMAIN RMODE ANY\n         USING HSUBMAIN,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'HSUBMAIN'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,0(R1)                      LIBSCOMM ADDRESS\n* ------------------------------------------------------------------- *\n*        ACQUIRE STORAGE FOR WORK AREA                                *\n* ------------------------------------------------------------------- *\n         GETMAIN RU,                          ACQUIRE WORK AREA        +\n               LV=WORKAREA_L,                 .. WORK AREA SIZE        +\n               LOC=BELOW                      .. BELOW 16M LINE\n         ST    R1,8(R13)                      CHAIN SAVE AREAS\n         ST    R13,4(R1)\n         LR    R13,R1                         COPY SAVE AREA ADDRESS\n         USING WORK,R13                       DEFINE BASE\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK\n         MVC   WORK_DCB(DCBL),DCBI            INITIALIZE DCB\n         MVC   WORK_OCPL(OPENL),OPENI\n         OPEN  (WORK_DCB,OUTPUT),             OPEN THE DCB             +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         MVC   PRTMSGID(MSG01L),MSG01\n         MVC   WORK_RPL(RPLL),RPLI\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=ANY\n         ST    R1,UX01_EXPANDED_BUFFER\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE*2,                                  +\n               LOC=ANY\n         ST    R1,WORK_VSAM_IO_AREA\n         LR    R7,R1\n         USING LIB_RECORD,R7\n         LA    R2,WORK_RPL\n         LA    R3,WORK_KEY\n         MODCB RPL=(R2),                                               +\n               AREA=(R7),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R3),                                               +\n               KEYLEN=L'WORK_KEY,                                      +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         LA    R1,LIB_DATA                    DATA ADDRESS\n         ST    R1,UX01_COMPRESSED_BUFFER\n         BAL   R8,PRT0000                     PRINT\n         LA    R1,WORK_EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,WORK_COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n         MVI   WORK_HISTORY_SPACE,C' '\n         LOAD  EP=LIBUX01\n         ST    R0,WORK_AUX01\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0010 DS    0H\n         TM    COMM_EOJ_PHASE,$EOJ2           SHUTDOWN PHASE 2?\n         BO    EXIT0000                       YES\n         TM    COMM_HSUB_WORK_ECB,X'40'       ECB ALREADY POSTED?\n         BO    PROC0020                       YES\n         ITRACE ID=WORKWAIT\n         WAIT  1,ECB=COMM_HSUB_WORK_ECB       WAIT FOR WORK\n         XC    COMM_HSUB_WORK_ECB,COMM_HSUB_WORK_ECB\n         ITRACE ID=WOKEUP\nPROC0020 DS    0H\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R10,15,COMM_HSUB_REQ           FIRST REQUEST BLOCK\n         USING HISTREQ,R10\n         BZ    PROC0010                       NOTHING ON CHAIN\n         CS    R10,R1,COMM_HSUB_REQ           OBTAIN WORK CHAIN\n         BC    4,PROC0020                     TRY AGAIN\n         ITRACE ID=HAVEQ,                                              +\n               RDATA1=R10\nPROC0030 DS    0H\n         ICM   R9,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         BZ    ERR0010\n         USING LIBBLOK,R9                     DEFINE BASE\nPROC0040 DS    0H\n         CLC   LIB_NAME,HISTLIB               IS THIS THE LIBRARY?\n         BE    PROC0050                       YES\n         ICM   R9,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   PROC0040\n         B     ERR0010\nPROC0050 DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               DATA1=LIB_NAME,                                         +\n               RDATA2=R9\n         LA    R2,WORK_RPL                    ACB'S ADDRESS\n         LA    R3,LIB_ACB\n         MODCB RPL=(R2),                                               +\n               ACB=(R3)\n         MVI   WORK_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   WORK_KEY_NAME,HISTNAME\n         MVC   WORK_KEY_VER,HISTVER\n         MVC   WORK_KEY_SEQ,F1                START WITH RECORD 1\n         MVC   PRTMSGID(MSG02L),MSG02\n         MVC   PRTMSGID+(MSG02LIB-MSG02)(L'MSG02LIB),HISTLIB\n         MVC   PRTMSGID+(MSG02NAME-MSG02)(L'MSG02NAME),HISTNAME\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,HISTVER                   VERSION NUMBER\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG02VER-MSG02)(L'MSG02VER),WORK_DWORD+5\n         BAL   R8,PRT0000                     PRINT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         ITRACE ID=READ,                                               +\n               DATA1=WORK_KEY,                                         +\n               DATA2=WORK_KEY+8\n         GET   RPL=WORK_RPL\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   READ1000                       NO\n         SHOWCB RPL=WORK_RPL,                 GET RECORD LENGTH        +\n               FIELDS=(RECLEN),                                        +\n               AREA=WORK_RECORD_LENGTH,                                +\n               LENGTH=4\n         L     R1,WORK_RECORD_LENGTH\n         SH    R1,=Y(L'LIB_KEY)\n         ST    R1,WORK_COMPRESSED_LENGTH\n         CLI   WORK_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         BE    READ0100\n         CLI   WORK_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         BE    READ0200\n         ABEND 1,DUMP,,USER\nREAD0100 DS    0H\n         ITRACE ID=BLDINDX\n         XC    WORK_HISTORY_RECORD(WORK_HISTORY_RECORD_LENGTH),WORK_HIS+\n               TORY_RECORD\n         MVC   WORK_HISTORY_RECORD_TYPE,INDEX\n         MVC   WORK_HISTORY_RECORD_TYPE+5(1),LIB_KEY_SEQ+3\n         OI    WORK_HISTORY_RECORD_TYPE+5,X'F0'\n         CLC   WORK_KEY_SEQ,F1\n         BH    READ0250\n         MVC   WORK_RECORDS_IN_FILE,LIB_INDEX_RECORDS\n         MVC   WORK_HISTORY_NAME,LIB_KEY_NAME\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,LIB_KEY_VERSION           VERSION NUMBER\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         MVC   WORK_VERSION,=X'F02020202020'\n         ED    WORK_VERSION,WORK_DWORD+5\n         MVC   WORK_HISTORY_VERSION,WORK_VERSION+1\n         MVC   WORK_HISTORY_OWNER,LIB_INDEX_OWNER\n         TM    LIB_INDEX_STATUS,$LIB_STATUS_IN\n         BO    READ0110\n         MVC   WORK_HISTORY_STATUS,OUT\n         B     READ0120\nREAD0110 DS    0H\n         MVC   WORK_HISTORY_STATUS,IN\nREAD0120 DS    0H\n         AP    LIB_INDEX_CREATE_DATE,=P'1900000'\n         MVC   WORK_DATE,=X'40212020204B202020'\n         ED    WORK_DATE,LIB_INDEX_CREATE_DATE\n         MVC   WORK_HISTORY_CREATE_DATE,WORK_DATE+1\n         UNPK  WORK_TIME(9),LIB_INDEX_CREATE_TIME(5)\n         MVC   WORK_HISTORY_CREATE_TIME+00(2),WORK_TIME+00\n         MVI   WORK_HISTORY_CREATE_TIME+02,C':'\n         MVC   WORK_HISTORY_CREATE_TIME+03(2),WORK_TIME+02\n         MVI   WORK_HISTORY_CREATE_TIME+05,C':'\n         MVC   WORK_HISTORY_CREATE_TIME+06(2),WORK_TIME+04\n         MVC   WORK_HISTORY_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER\n         AP    LIB_INDEX_CHECK_OUT_DATE,=P'1900000'\n         MVC   WORK_DATE,=X'40212020204B202020'\n         ED    WORK_DATE,LIB_INDEX_CHECK_OUT_DATE\n         MVC   WORK_HISTORY_CHECK_OUT_DATE,WORK_DATE+1\n         UNPK  WORK_TIME(9),LIB_INDEX_CHECK_OUT_TIME(5)\n         MVC   WORK_HISTORY_CHECK_OUT_TIME+00(2),WORK_TIME+00\n         MVI   WORK_HISTORY_CHECK_OUT_TIME+02,C':'\n         MVC   WORK_HISTORY_CHECK_OUT_TIME+03(2),WORK_TIME+02\n         MVI   WORK_HISTORY_CHECK_OUT_TIME+05,C':'\n         MVC   WORK_HISTORY_CHECK_OUT_TIME+06(2),WORK_TIME+04\n         ICM   R1,15,LIB_INDEX_CHECK_OUTS\n         CVD   R1,WORK_DWORD\n         MVC   WORK_HISTORY_CHECK_OUTS,=X'40206B2020206B202120'\n         ED    WORK_HISTORY_CHECK_OUTS,WORK_DWORD+4\n         MVC   WORK_HISTORY_CHECK_IN_USER,LIB_INDEX_CHECK_IN_USER\n         AP    LIB_INDEX_CHECK_IN_DATE,=P'1900000'\n         MVC   WORK_DATE,=X'40212020204B202020'\n         ED    WORK_DATE,LIB_INDEX_CHECK_IN_DATE\n         MVC   WORK_HISTORY_CHECK_IN_DATE,WORK_DATE+1\n         UNPK  WORK_TIME(9),LIB_INDEX_CHECK_IN_TIME(5)\n         MVC   WORK_HISTORY_CHECK_IN_TIME+00(2),WORK_TIME+00\n         MVI   WORK_HISTORY_CHECK_IN_TIME+02,C':'\n         MVC   WORK_HISTORY_CHECK_IN_TIME+03(2),WORK_TIME+02\n         MVI   WORK_HISTORY_CHECK_IN_TIME+05,C':'\n         MVC   WORK_HISTORY_CHECK_IN_TIME+06(2),WORK_TIME+04\n         PUT   WORK_DCB,WORK_HISTORY_RECORD\n         B     READ0300\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0200 DS    0H\n         ITRACE ID=DATARECD\n         L     R2,WORK_RECORDS_IN_FILE\n         LR    R3,R2                          COPY TO R3\n         C     R2,MAX_RECORDS_PER_BUFFER      MORE THAN 1 BUFFER?\n         BL    READ0210                       NO\n         L     R2,MAX_RECORDS_PER_BUFFER      LIMIT TO 1 BUFFER\nREAD0210 DS    0H\n         SR    R3,R2                          MINUS NUMBER IN BUFFER\n         ST    R3,WORK_RECORDS_IN_FILE        SAVE RECORDS REMAINING\n         LR    R3,R2                          COPY NUMBER OF RECORDS\n         MH    R2,H80                         SIZE OF DECOMPRESSED DATA\n         ST    R2,WORK_EXPANDED_LENGTH\n         MVI   UX01_FUNCTION,$UX01_DECOMPRESS\n         LA    R1,UX01_PARMS\n         L     R15,WORK_AUX01\n         BALR  R14,R15                        DE-COMPRESS THE DATA\n         L     R2,UX01_EXPANDED_BUFFER\n         ITRACE ID=WRTDATA,                                            +\n               RDATA1=R3\n         MVC   WORK_HISTORY_RECORD(WORK_HISTORY_RECORD_LENGTH),WORK_HIS+\n               TORY_RECORD-1\n         MVC   WORK_HISTORY_RECORD_TYPE,DATA00\n         MVC   WORK_HISTORY_RECORD_TYPE+5(1),LIB_KEY_SEQ+3\n         OI    WORK_HISTORY_RECORD_TYPE+5,X'F0'\nREAD0220 DS    0H\n         MVC   WORK_HISTORY_SOURCE,0(R2)\n         PUT   WORK_DCB,WORK_HISTORY_RECORD\n         LA    R2,80(R2)\n         BCT   R3,READ0220\n         B     READ0300\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0250 DS    0H\n         ITRACE ID=WRTDESC\n         MVC   WORK_HISTORY_NAME(80),LIB_DATA\n         PUT   WORK_DCB,WORK_HISTORY_RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0300 DS    0H\n         ITRACE ID=UPDTEKEY,                                           +\n               DATA1=WORK_KEY,                                         +\n               DATA2=WORK_KEY+8\n         ICM   R1,15,WORK_KEY_SEQ\n         LA    R1,1(R1)\n         STCM  R1,15,WORK_KEY_SEQ\n         B     READ0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0900 DS    0H\n         PUT   WORK_DCB,WORK_HISTORY_RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD1000 DS    0H\n         ITRACE ID=CHGTYPE\n         CLI   WORK_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         BE    NEXT0000\n         MVI   WORK_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         MVC   WORK_KEY_SEQ,F1\n         B     READ0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNEXT0000 DS    0H\n         ITRACE ID=NEXT\n         L     R2,HISTNEXT\n         POST  HISTECB                        WAKE UP THE CALLER\n         LTR   R10,R2                         COPY NEXT ECB ADDRESS\n         BNZ   PROC0030                       PROCESS THIS REQUEST\n         B     PROC0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE\n         ST    R2,PRTNEXT-PRTBLOK(R1)                         '\n         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         BR    R8                             COMPLETE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         MVC   WORK_OCPL(CLOSEL),CLOSEI\n         CLOSE WORK_DCB,                                               +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         L     R1,UX01_EXPANDED_BUFFER\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE\n         L     R1,WORK_VSAM_IO_AREA\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE*2\n         DELETE EP=LIBUX01\n         LR    R1,R13                         COPY WORK ADDRESS\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDR\n         FREEMAIN RU,                         FREEMAIN WORK AREA       +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        CLEAR REGISTER\n         BR    R14                            EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAX_RECORDS_PER_BUFFER DC A($MAX_SOURCE_SIZE/80)\n\nPRTID    DC    CL8'PRTBLOK'\nF1       DC    F'1'\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=LIBHIST,                                         +\n               RECFM=FB,                                               +\n               LRECL=WORK_HISTORY_RECORD_LENGTH,                       +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,UPDAT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\nRPLI     RPL   AM=VSAM\nH80      DC    H'80'\nINDEX    DC    CL5'INDEX'\nDATA00   DC    CL5'DATA0'\nIN       DC    CL3'IN'\nOUT      DC    CL3'OUT'\nMSG01    DS    0C\n         DC    C'HSUBMAIN01I'\n         DC    C' Changed source history subtask is active'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    C'HSUBMAIN02I'\n         DC    C'Received request for library '\nMSG02LIB DC    CL8' '\n         DC    C' member '\nMSG02NAME DC   CL8' '\n         DC    C' version '\nMSG02VER DC    x'402120202020'\nMSG02L   EQU   *-MSG02\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        WORK AREA                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK                        DSECT\n                            LIBSAVE DSECT=NO\nWORK_DWORD                  DS      D\n\n                            PRTBLOK  DSECT=NO\n                            UX01PARM DSECT=NO\n\nWORK_AUX01                  DS  A             USER EXIT 1 ENTRY POINT\nWORK_EXPANDED_LENGTH        DS  A             LENGTH OF EXPANDED DATA\nWORK_COMPRESSED_LENGTH      DS  A             LENGTH OF COMPRESSED DATA\n\nWORK_RECORD_LENGTH          DS  F\nWORK_RECORDS_IN_FILE        DS  F\n\nWORK_VSAM_IO_AREA           DS  A\n\nWORK_RPL                    DS  (RPLL)X\nWORK_DCB                    DS  (DCBL)X\nWORK_OCPL                   DS  (OPENL)X\n\nWORK_VERSION                DS  CL6\nWORK_DATE                   DS  CL09\nWORK_TIME                   DS  CL09\n\nWORK_KEY                    DS  0CL15\nWORK_KEY_TYPE               DS  X\nWORK_KEY_NAME               DS  CL8\nWORK_KEY_VER                DS  XL2\nWORK_KEY_SEQ                DS  XL4\n\nWORK_HISTORY_SPACE          DS  C\nWORK_HISTORY_RECORD         DS  0C\nWORK_HISTORY_RECORD_TYPE    DS  CL6\nWORK_HISTORY_NAME           DS  CL8\nWORK_HISTORY_VERSION        DS  CL5\nWORK_HISTORY_OWNER          DS  CL8\nWORK_HISTORY_STATUS         DS  CL3\nWORK_HISTORY_CREATE_DATE    DS  CL8\nWORK_HISTORY_CREATE_TIME    DS  CL8\nWORK_HISTORY_CHECK_OUT_USER DS  CL8\nWORK_HISTORY_CHECK_OUT_DATE DS  CL8\nWORK_HISTORY_CHECK_OUT_TIME DS  CL8\nWORK_HISTORY_CHECK_OUTS     DS  CL10\nWORK_HISTORY_CHECK_IN_USER  DS  CL8\nWORK_HISTORY_CHECK_IN_DATE  DS  CL8\nWORK_HISTORY_CHECK_IN_TIME  DS  CL8\nWORK_HISTORY_RECORD_LENGTH  EQU *-WORK_HISTORY_RECORD\n                            ORG WORK_HISTORY_NAME\nWORK_HISTORY_SOURCE         DS  CL80\n                            ORG\nWORKAREA_L                  EQU *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         HISTREQ  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBRECD  DSECT=YES\n* ------------------------------------------------------------------- *\n*        ACB                                                          *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGEXLST AM=VSAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGRPL   AM=VTAM\nRPLL     EQU      *-IFGRPL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA LIST=NO\n$MAX_SOURCE_SIZE EQU 8000\n         COPY  REGEQU\n         END   HSUBMAIN\n./ ADD NAME=LIBAUTH  0100-09250-09250-0919-00204-00204-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    Default authorization checking.                                  *\n*                                                                     *\n*    Allow anything (now that's what I call security!)                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBAUTH  CSECT\nLIBAUTH  AMODE 31\nLIBAUTH  RMODE ANY\n         USING LIBAUTH,R12                    DECLARE THE BASE REGISTER\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY EPA\n         B     INIT0000\n         DC    CL8'LIBAUTH'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LR    R10,R1                         COPY PARM BLOCK ADDRESS\n         USING AUTHBLOK,R10                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=ANY\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1                         COPY SAVE AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   AUTH_MESSAGE_1,BLANKS\n         MVC   AUTH_MESSAGE_2,BLANKS\n         MVC   AUTH_MESSAGE_3,BLANKS\n         MVC   AUTH_MESSAGE_4,BLANKS\n         MVC   AUTH_MESSAGE_5,BLANKS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LOAD  EP=LIBUX02\n         LR    R15,R0                         COPY ENTRY POINT\n         LR    R1,R10                         COPY PARM BLOCK ADDRESS\n         BALR  R14,R15                        LINK TO USER EXIT\n         LR    R2,R15                         SAVE RETURN CODE\n         DELETE EP=LIBUX02\n         LTR   R2,R2                          RC = ZERO?\n         BZ    EXIT0000                       YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   AUTH_FUNCTION,$AUTH_CHECK_ADMIN\n         BE    ADMIN000\n         CLI   AUTH_FUNCTION,$AUTH_CHECK_DELETE\n         BE    DEL0000\n         CLI   AUTH_FUNCTION,$AUTH_CHECK_DESC\n         BE    DESC0000\n         CLI   AUTH_FUNCTION,$AUTH_CHECK_IN\n         BE    IN0000\n         CLI   AUTH_FUNCTION,$AUTH_CHECK_NEW\n         BE    NEW0000\n         CLI   AUTH_FUNCTION,$AUTH_CHECK_OUT\n         BE    OUT0000\n         CLI   AUTH_FUNCTION,$AUTH_CHECK_VERSION\n         BE    VER0000\n         CLI   AUTH_FUNCTION,$AUTH_CHECK_VIEW\n         BE    VIEW0000\n         CLI   AUTH_FUNCTION,$AUTH_CHECK_SUBMIT\n         BE    JOB0000\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nADMIN000 DS    0H\n         MVI   AUTH_RETURN_CODE,0\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEL0000  DS    0H\n         MVI   AUTH_RETURN_CODE,0\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDESC0000 DS    0H\n         MVI   AUTH_RETURN_CODE,0\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nIN0000   DS    0H\n         CLI   AUTH_MEMBER_STATUS,$AUTH_STATUS_OUT\n         BNE   IN0010\n         MVI   AUTH_RETURN_CODE,0\n         B     EXIT0000\nIN0010   DS    0H\n         MVC   AUTH_MESSAGE_1(MSG01L),MSG01\n         MVC   AUTH_MESSAGE_1+(MSG01_MEMBER-MSG01)(L'MSG01_MEMBER),AUTH+\n               _MEMBER\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,AUTH_VERSION              VERSION NUMBER\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         MVC   WORK_VERSION,=X'F02020202020'\n         ED    WORK_VERSION,WORK_DWORD+5\n         MVC   AUTH_MESSAGE_1+(MSG01_VERSION-MSG01)(L'MSG01_VERSION),WO+\n               RK_VERSION+1\n         MVI   AUTH_RETURN_CODE,4\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nJOB0000  DS    0H\n         MVI   AUTH_RETURN_CODE,0\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNEW0000  DS    0H\n         MVI   AUTH_RETURN_CODE,0\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOUT0000  DS    0H\n         CLI   AUTH_MEMBER_STATUS,$AUTH_STATUS_OUT\n         BE    OUT0010\n         MVI   AUTH_RETURN_CODE,0\n         B     EXIT0000\nOUT0010  DS    0H\n         MVC   AUTH_MESSAGE_1(MSG02L),MSG02\n         MVC   AUTH_MESSAGE_1+(MSG02_MEMBER-MSG02)(L'MSG02_MEMBER),AUTH+\n               _MEMBER\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,AUTH_VERSION              VERSION NUMBER\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         MVC   WORK_VERSION,=X'F02020202020'\n         ED    WORK_VERSION,WORK_DWORD+5\n         MVC   AUTH_MESSAGE_1+(MSG02_VERSION-MSG02)(L'MSG02_VERSION),WO+\n               RK_VERSION+1\n         MVC   AUTH_MESSAGE_2(MSG03L),MSG03\n         MVC   AUTH_MESSAGE_2+(MSG03_USER-MSG03)+2(L'MSG03_USER),AUTH_C+\n               HECK_OUT_USER\n         MVI   AUTH_RETURN_CODE,4\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVER0000  DS    0H\n         MVI   AUTH_RETURN_CODE,0\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVIEW0000 DS    0H\n         MVI   AUTH_RETURN_CODE,0\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=WORKL\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        SET RC=0\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nBLANKS         DC    CL80' '\nMSG01          DS    0C\n               DC    CL11'LIBAUTH01E'\n               DC    C'Member '\nMSG01_MEMBER   DC    CL8' '\n               DC    C'  version '\nMSG01_VERSION  DC    CL5' '\n               DC    C' is not checked out to you.'\nMSG01L         EQU   *-MSG01\nMSG02          DS    0C\n               DC    CL11'LIBAUTH02E'\n               DC    C'Member '\nMSG02_MEMBER   DC    CL8' '\n               DC    C', version '\nMSG02_VERSION  DC    CL5' '\nMSG02L         EQU   *-MSG02\nMSG03          DS    0C\n               DC    CL11'LIBAUTH03E'\n               DC    C'is already checked out to user '\nMSG03_USER     DC    CL8' '\nMSG03L         EQU   *-MSG03\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA DSECT\n                 LIBSAVE  DSECT=NO\nWORK_DWORD       DS       D\nWORK_VERSION     DS       XL6\nWORKL            EQU      *-WORKAREA\n                 SCOMM    TYPE=DSECT\n                 AUTHBLOK DSECT=YES\n                 IHAPSA   DSECT=YES,LIST=NO\n                 COPY     REGEQU\n         END\n./ ADD NAME=LIBINIT  0100-09250-09250-0919-00148-00148-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    Initialize a library                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBINIT  CSECT\nLIBINIT  AMODE 24\nLIBINIT  RMODE 24\n         USING LIBINIT,R12                    DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\n         DC    CL8'LIBINIT'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0000 DS    0H\n         LA    R1,SAVEAREA\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         COPY SAVE AREA ADDRESS\n         USING SAVEAREA,R13\n         OPEN  (SYSIN,INPUT)                  OPEN SYSIN\n         OPEN  (SYSPRINT,OUTPUT)              OPEN SYSPRINT\n         OPEN  (LIB_ACB,OUTPUT)               OPEN LIBRARY\n         LTR   R15,R15                        OPEN SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         BAL   R10,HEAD0000                   PRINT HEADING\n         MVI   LIB_KEY_TYPE,$LIB_KEY_LIB_DESC\n         XC    LIB_KEY_NAME,LIB_KEY_NAME\n         XC    LIB_KEY_VERSION,LIB_KEY_VERSION\n         XC    LIB_KEY_SEQ,LIB_KEY_SEQ        SET SEQUENCE NUMBER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0000 DS    0H\n         GET   SYSIN,DESCRIPTION\n         MVC   PRINT_DATA(L'DESCRIPTION),DESCRIPTION\n         BAL   R11,PRT0000                    PRINT\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         LA    R1,1(R1)                       PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              SAVE SEQUENCE NUMBER\n         MVC   LIB_DATA,DESCRIPTION           COPY DESCRIPTION\n         PUT   RPL=LIB_RPL                    WRITE TO LIBRARY\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0020                        NO\n         B     PROC0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         CP    LINE_COUNT,LINE_MAX            TIME FOR HEADING?\n         BL    PRT0010                        NO\n         BAL   R10,HEAD0000                   PRINT HEADING\nPRT0010  DS    0H\n         PUT   SYSPRINT,PRINT_CC              PRINT\n         AP    LINE_COUNT,P1                  ADD 1 TO LINE COUNT\n         MVC   PRINT_LINE,PRINT_LINE-1\n         BR    R11                            EXIT\nHEAD0000 DS    0H\n         AP    PAGE_COUNT,P1                  ADD 1 TO PAGE COUNTER\n         MVC   PRINT_CC(HEAD1L),HEAD1         COPY HEADING\n         ED    PRINT_CC+(HEAD1_PAGE-HEAD1)(L'HEAD1_PAGE),PAGE_COUNT\n         PUT   SYSPRINT,PRINT_CC              PRINT HEADING\n         MVC   PRINT_LINE,PRINT_LINE-1\n         ZAP   LINE_COUNT,P1                  SET LINE COUNT\n         BR    R10                            DONE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'1'\nERR0020  DS    0H\n         DC    H'2'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEOF0000  DS    0H\n         MVC   PRINT_CC(MSG01L),MSG01\n         BAL   R11,PRT0000\n         CLOSE (SYSIN)\n         CLOSE (SYSPRINT)\n         CLOSE (LIB_ACB)\n         L     R13,4(R13)\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSAVEAREA DS    18F\nSYSIN    DCB   DDNAME=SYSIN,                                           +\n               DSORG=PS,                                               +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               EODAD=EOF0000,                                          +\n               MACRF=GM\nSYSPRINT DCB   DDNAME=SYSPRINT,                                        +\n               DSORG=PS,                                               +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               MACRF=PM\n\nLIB_ACB  ACB   AM=VSAM,                                                +\n               DDNAME=LIB,                                             +\n               MACRF=(KEY,SEQ,OUT)\n\nLIB_RPL  RPL   AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB_ACB,             .. ACB                         +\n               ARG=LIB_KEY,             .. KEY                         +\n               KEYLEN=L'LIB_KEY,        .. KEY LENGTH                  +\n               AREA=LIB_RECORD,         .. ADDRESS OF RETURNED RECORD  +\n               OPTCD=(KEY,SEQ,SYN,MVE),                                +\n               AREALEN=LIB_INDEX_RECORD_LENGTH,                        +\n               RECLEN=LIB_INDEX_RECORD_LENGTH\n\nHEAD1                 DC   C'1'\n                      DC   CL45' '\n                      DC   C'LIBRARY INITIALIZATION'\n                      DC   CL45' '\n                      DC   C'PAGE'\nHEAD1_PAGE            DC   X'402020202120'\nHEAD1L                EQU  *-HEAD1\n\nMSG01                 DS   0C\n                      DC   C'-'\n                      DC   C'LIBINIT01I '\n                      DC   C'Library initialization successful'\nMSG01L                EQU  *-MSG01\n\nDESCRIPTION           DS   CL80\n\nLINE_COUNT            DC   PL3'0'\nPAGE_COUNT            DC   PL3'0'\nP0                    DC   P'0'\nP1                    DC   P'1'\nLINE_MAX              DC   P'65'\n\n                      DC   C' '\nPRINT_LINE            DS   0CL133\nPRINT_CC              DC   C' '\nPRINT_DATA            DC   CL132' '\n         LIBRECD DSECT=NO\n\n         COPY  REGEQU\n         END   LIBINIT\n./ ADD NAME=LIBLERAD 0100-09250-09250-0919-00049-00049-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: LIBLERAD                                              *\n*                                                                     *\n*  STC LERAD exit                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBLERAD CSECT\nLIBLERAD AMODE 31\nLIBLERAD RMODE ANY\n         USING LIBLERAD,R15                   DEFINE BASE\n         B     LERAD010                       SKIP EYECATCHER\n         DC    CL8'LIBLERAD'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nLERAD010 DS    0H\n         USING IFGRPL,R1                      DEFINE BASE\n         L     R2,RPLAAREA                    RPL EXTENSION ADDRESS\n         USING ISTRPL6X,R2                    DEFINE BASE\n         LA    R3,GOODRC                      GOOD RETURN CODES TABLE\nLERAD020 DS    0H\n         CLI   0(R3),X'FF'                    END OF TABLE\n         BE    LERAD030                       NO GOOD\n         CLC   RPL6RC,0(R3)                   ACCEPTABLE?\n         BE    EXIT0000                       YES, EXIT\n         LA    R3,4(R3)                       NEXT CODE\n         B     LERAD020                       LOOP\nLERAD030 DS    0H\n         L     R4,RPL6RC                      MAKE RC EASY TO FIND\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*             EXIT                                                    *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*              CONSTANTS                                             *\n* ------------------------------------------------------------------ *\nGOODRC   DS    0C\n         DC    X'00000000'                    GOOD\n         DC    X'00000001'                    CNOS ACCEPTED BY PARTNER\n         DC    X'002C0002'\n         DC    X'FF'\n         IFGRPL AM=VTAM\n* ------------------------------------------------------------------ *\n*              EQUATES                                               *\n* ------------------------------------------------------------------ *\n         COPY REGEQU\n         END  LIBLERAD\n./ ADD NAME=LIBOPT   0100-09250-09250-0919-00007-00007-00000-SOURCE\n         OPTIONS TRSIZE=2000,                                          +\n               MAXLINES=65,                                            +\n               PORT=2222,                                              +\n               RACCLASS=ENTITY,                                        +\n               SNAPCLAS=Z,                                             +\n               UACB=(BVLIBTU1,BVLIBTU2,BVLIBTU3,BVLIBTU4,BVLIBTU5)\n         END   LIBOPT\n./ ADD NAME=LIBSATTN 0100-09250-09250-0919-00354-00354-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: LIBSATTN                                              *\n*                                                                     *\n*  VTAM ATTN exit.                                                    *\n*                                                                     *\n*   Register usage:                                                   *\n*                                                                     *\n*      R4   FMH5 address                                              *\n*      R5   Return address                                            *\n*      R7   USERBLOK ADDRESS                                          *\n*      R8   RPL extension address                                     *\n*      R9   RPL address                                               *\n*      R10  Parameter list passed by VTAM (EXITPARM DSECT)            *\n*      R11  LIBSCOMM ADDRESS                                          *\n*      R12  Program base                                              *\n*                                                                     *\n*  -----------------------------------------------------------------  *\n*                                                                     *\n*  For session establishment (FMH5 calls)                             *\n*         1) The user must not already be logged on.                  *\n*         2) A USERBLOK is added to the USERBLOK chain.               *\n*         3) A message is printed to log the conversation.            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBSATTN CSECT\nLIBSATTN AMODE 31\nLIBSATTN RMODE ANY\n         USING LIBSATTN,R12                   DEFINE BASE\n         NOP   *\n         LR    R12,R15                        LOAD BASE\n         B     ATTN0010                       SKIP EYECATCHER\n         DC    CL8'LIBSATTN'                  MODULE NAME\n         DC    C'&SYSDATE'                    DATE OF ASSEMBLY\n         DC    C'&SYSTIME'                    TIME OF ASSEMBLY\nATTN0010 DS    0H\n         LR    R10,R1                         COPY PARM LIST ADDRESS\n         USING EXITPARM,R10                   DEFINE BASE\n         LR    R5,R14                         SAVE RETURN ADDRESS\n         GETMAIN RU,                                                   +\n               LV=WKL,                                                 +\n               LOC=ANY\n         LR    R13,R1                         SAVE AREA ADDRESS\n         USING WK,R13\n         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK\n         MVI   PRTCC,C' '                     INITIALIZE CC\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         L     R1,EXITACB                     ACB'S ADDRESS\n         USING IFGACB,R1                      DEFINE BASE\n         L     R11,ACBUSER                    COMMON DATA ADDRESS\n         USING LIBSCOMM,R11                   DEFINE BASE\n         L     R9,EXITRPL                     RPL'S ADDRESS\n         USING IFGRPL,R9                      DEFINE BASE\n         L     R8,RPLAAREA                    RPL EXTENSTION'S ADDRESS\n         USING ISTRPL6X,R8                    DEFINE BASE\n         ITRACE ID=ENTRY,                                              +\n               DATA1=EXITTYPE,                .. REASON FOR CALL       +\n               DATA2=RPL6LU                   .. LU INVOLVED\n         CLC   EXITTYPE,CNOSTYPE              CNOS CALL?\n         BE    CNOS0000                       YES\n         CLC   EXITTYPE,FMH5TYPE              FMH5 CALL?\n         BE    FMH50000                       YES\n         CLC   EXITTYPE,LOSSTYPE              LOSS CALL?\n         BE    LOSS0000                       YES\n         B     EXIT0000                       OTHERWISE EXIT\n* ------------------------------------------------------------------- *\n*             CNOS                                                    *\n* ------------------------------------------------------------------- *\nCNOS0000 DS    0H\n         ITRACE ID=CNOS,                      CNOS                     +\n               DATA1=RPL6LU                   .. LU NAME\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*             FMH5                                                    *\n* ------------------------------------------------------------------- *\nFMH50000 DS    0H\n         ITRACE ID=FMH5,                      FMH5 RECEIVED            +\n               DATA1=RPL6LU                   .. LU'S NAME\n         TM    COMM_EOJ_PHASE,$EOJ1           IN SHUTDOWN?\n         BO    TERM0000                       YES\n         LA    R9,WKRPL                       RPL ADDRESS\n         MVC   WKRPL(RPLL),RPLI               INITIALIZE RPL\n         LA    R8,WKRPLEXT                    RPL EXTENSION ADDRESS\n         MVC   0(RPLEXTL,R8),RPLEXTI          INITIALIZE RPL EXTENSION\n         ST    R8,RPLAAREA                    SET EXTENSION ADDRESS\n         MVC   RPLDACB,EXITACB                SET ACB ADDRESS\n         LA    R4,FMH5                        I/O AREA\n         ITRACE ID=RECVFMH5\n         XC    WKECB,WKECB                    CLEAR THE ECB\n         APPCCMD CONTROL=RCVFMH5,             RECEIVE THE FMH5         +\n               RPL=(R9),                      .. RPL ADDRESS           +\n               CONMODE=CS,                    .. CONTINUE SPECIFIC     +\n               ECB=WKECB,                     .. ECB                   +\n               AREA=(R4),                     .. FMH5 STORAGE ADDRESS  +\n               AREALEN=FMH5L,                 .. FMH5 STORAGE SIZE     +\n               OPTCD=ASY                      .. SYNCHRONOUS\n         WAIT  1,ECB=WKECB\n         APPCCMD CONTROL=CHECK,RPL=(R9)\n         ITRACE ID=HAVEFMH5,DATA1=RPL6RC\n         OC    RPL6RC,RPL6RC                  SUCCESSFUL?\n         BNZ   FMH50100                       NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   A FMH-5 has been received.                                        *\n*     1) Verify the LU is not already on the USERBLOK chain.          *\n*     2) Acquire a USERBLOK and add it to the chain.                  *\n*     3) Post the ATTN ECB to wake up the main task                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=SCANUSER\n         ICM   R7,15,COMM_USER_CHAIN          FIRST USER BLOCK ADDRESS\n         USING USERBLOK,R7                    DEFINE BASE\n         BZ    FMH50020                       NOT ON CHAIN\nFMH50010 DS    0H\n         CLC   USER_PARTNER_LU,RPL6LU         USER ALREADY ACTIVE?\n         BE    FMH50110                       YES.. NOT ALLOWED\n         ICM   R7,15,USER_NEXT                NEXT USER\n         BNZ   FMH50010                       LOOP\nFMH50020 DS    0H\n         ITRACE ID=NEWUSER\n         L     R1,COMM_VTAM_LOGINS            NUMBER OF LOGONS SO FAR\n         LA    R1,1(,R1)                      PLUS 1\n         ST    R1,COMM_VTAM_LOGINS            SAVE TOTAL\n         GETMAIN RU,                          GETMAIN A NEW USERBLOK   +\n               LV=USERBLOKL,                                           +\n               LOC=ANY\n         LR    R7,R1                          COPY STORAGE ADDRESS\n         LR    R0,R1\n         LA    R1,USERBLOKL                   INITIALIZE\n         SR    R14,R14                          THE NEW\n         SR    R15,R15                            USERBLOK\n         MVCL  R0,R14                               TO BINARY ZEROS\n         MVC   USEREYE,USERBID                SET EYECATCHER\n         ST    R7,USER_SELF                   ADDRESS OF USER BLOCK\n         MVC   USER_PARTNER_LU,RPL6LU\n         MVC   USER_USER_ID,FMH5UID           SET USER'S ID\n         MVC   USER_SYSTEM_SMF,FMH5SMF        SMF ID OF USER'S SYSTEM\n         TIME  DEC\n         ST    R0,USER_TIME                   SAVE TIME\n         ST    R1,USER_DATE                   SAVE DATE\n         ST    R11,USER_COMM                  SET LIBSCOMM'S ADDRESS\n         MVC   USER_CONVERSATION_ID,RPL6CNVD\n         XC    USER_SOCKET,USER_SOCKET\n         MVC   USER_LIBRARY,COMM_BLANKS       INITIALIZE LIBRARY NAME\n         MVC   USER_JOB,COMM_BLANKS           INITIALIZE BATCH JOB NAME\n         MVC   USER_NAME,COMM_BLANKS          INITIALIZE USER'S NAME\n         ITRACE ID=ENQ\n         MVC   WKENQ(ENQL),ENQI\n         ENQ   MF=(E,WKENQ)\n         MVC   USER_NEXT,COMM_USER_CHAIN      CURRENTLY FIRST ON CHAIN\n         ST    R7,COMM_USER_CHAIN             ADD OURS TO CHAIN\n         ITRACE ID=DEQ\n         DEQ   MF=(E,WKENQ)\n         MVC   PRTMSGID(MSG01L),MSG01         SET MESSAGE\n         MVC   PRTMSGID+(MSG01LU-MSG01)(L'MSG01LU),USER_PARTNER_LU\n         UNPK  PRTMSGID+(MSG01CID-MSG01)(9),USER_CONVERSATION_ID(5)\n         MVZ   PRTMSGID+(MSG01CID-MSG01)(8),HEXZERO\n         TR    PRTMSGID+(MSG01CID-MSG01)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG01CID-MSG01)+8,C' '\n         BAL   R10,PRT0000                    ADD REQUEST TO queue\n         POST  COMM_ATTN_ECB                  WAKE UP MAIN TASK\n         ITRACE ID=CID,                       TRACE CONVERSATION ID'S  +\n               DATA1=RPL6CNVD                 .. SAVE CONVERSATION ID\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMH50100 DS    0H\n         ITRACE ID=FMH5FAIL\n         LR    R2,R15                         COPY RETURN CODE\n         ABEND 1,DUMP,,USER                   ABEND\nFMH50110 DS    0H\n         ITRACE ID=DUPUSER                    SECOND FMH-5?\n         APPCCMD CONTROL=REJECT,              ISSUE APPC COMMAND       +\n               QUALIFY=SESSION,               .. REJECT THE SESSION    +\n               DEACTYP=HEX0F,                 .. DEACTIVATE TYPE       +\n               RPL=(R9),                      .. RPL ADDRESS           +\n               OPTCD=SYN                      ..  SYNCHRONOUS\n         OC    RPL6RC,RPL6RC                  SUCCESSFUL?\n         BNZ   FMH50120                       NO\n         L     R9,EXITRPL                     RPL PASSED BY VTAM\n         L     R8,RPLAAREA                    RPL PASSED BY VTAM\n         MVC   PRTMSGID(MSG02L),MSG02         SET MESSAGE\n         MVC   PRTMSGID+(MSG02NDE-MSG02)(L'MSG02NDE),RPL6LU\n         BAL   R10,PRT0000                    PRINT\n         B     EXIT0000                       EXIT\nFMH50120 DS    0H\n         ITRACE ID=DACTFAIL,                  SESSION REJECT FAILED    +\n               DATA1=RPL6RC                   .. RETURN CODE\n         ABEND 2,DUMP,,USER                   ABEND\n* ------------------------------------------------------------------- *\n*             LOSS                                                    *\n* ------------------------------------------------------------------- *\nLOSS0000 DS    0H\n         ITRACE ID=LOSS,                      LOSS OF SESSION          +\n               DATA1=RPL6LU\n         ICM   R7,15,COMM_USER_CHAIN          FIRST USER BLOCK\n         USING USERBLOK,R7\n         BZ    EXIT0000\nLOSS0010 DS    0H\n         CLC   RPL6LU,USER_PARTNER_LU         LOST THIS USER?\n         BE    LOSS0020                       YES\n         ICM   R7,15,USER_NEXT                NEXT USER\n         BNZ   LOSS0010\n         ITRACE ID=UNKNLOSS\n         B     EXIT0000                       DON'T KNOW WHO WAS LOST\nLOSS0020 DS    0H\n         USING USERBLOK,R7\n         TM    USER_STATUS,$USERLOS           INDICATOR ALREADY SET?\n         BO    EXIT0000                       YES.. GET OUTTA HERE\n         OI    USER_STATUS,$USERLOS           SET INDICATOR\n         MVC   PRTMSGID(MSG04L),MSG04\n         MVC   PRTMSGID+(MSG04USR-MSG04)(L'MSG04USR),USER_USER_ID\n         MVC   PRTMSGID+(MSG04LU-MSG04)(L'MSG04LU),USER_PARTNER_LU\n         UNPK  PRTMSGID+(MSG04CID-MSG04)(9),USER_CONVERSATION_ID(5)\n         MVZ   PRTMSGID+(MSG04CID-MSG04)(8),HEXZERO\n         TR    PRTMSGID+(MSG04CID-MSG04)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG04CID-MSG04)+8,C' '\n         BAL   R10,PRT0000                    PRINT\n         POST  USER_NETWORK_ECB               POST THE VTAM WORK ECB\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*             LOSS                                                    *\n* ------------------------------------------------------------------- *\nTERM0000 DS    0H\n         ITRACE ID=TERM,                      SESSION NOT ALLOWED      +\n               DATA1=RPL6LU\n         MVC   PRTMSGID(MSG03L),MSG03\n         MVC   PRTMSGID+(MSG03NDE-MSG03)(L'MSG03NDE),RPL6LU\n         BAL   R10,PRT0000\n         B     EXIT0000\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE\n         ST    R2,PRTNEXT-PRTBLOK(R1)\n         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP PRINT SUBTASK\n         BR    R10\n* ------------------------------------------------------------------- *\n*             EXIT                                                    *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT                       EXITING\n         FREEMAIN RU,                         FREEMAIN SAVE AREA       +\n               a=(13),                                                 +\n               lv=wkl\n         BR    R5                             RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHEX0F    DC    X'0F'\nHEXZERO  DC    8X'00'\nHEXCHAR  DC    C'0123456789ABCDEF'\nCNOSTYPE DC    CL4'CNOS'             CHANGE NUMBER OF SESSIONS\nFMH5TYPE DC    CL4'FMH5'             FMH5\nLOSSTYPE DC    CL4'LOSS'             LOSS OF SESSION\nPRTID    DC    CL8'PRTBLOK'\nUSERBID  DC    CL8'USERBLOK'\nRPLI     RPL   AM=VTAM\nRPLL     EQU   *-RPLI\nRPLEXTI  ISTRPL6\nRPLEXTL  EQU   *-RPLEXTI\nENQI     ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L\nENQL     EQU   *-ENQI\nQNAME    DC    CL8'LIB'\nRNAME    DC    CL8'COMMUSER'\nMSG01    DS    0C\n         DC    CL11'LIBSATTN01I'\n         DC    C'Conversation with USER using LUNAME '\nMSG01LU  DC    Cl8' '\n         DC    C' established, CID '\nMSG01CID DC    CL8' '\n         DC    C' '\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    CL11'LIBSATTN02E'\n         DC    C'Conversation with LU '\nMSG02NDE DC    CL8' '\n         DC    C' rejected, user is already active'\nMSG02L   EQU   *-MSG02\nMSG03    DS    0C\n         DC    CL11'LIBSATTN03E'\n         DC    C'Conversation with LU '\nMSG03NDE DC    CL8' '\n         DC    C' rejected, shutdown is in progress'\nMSG03L   EQU   *-MSG03\nMSG04    DS    0C\n         DC    CL11'LIBSATTN04W'\n         DC    C'Session lost with USER '\nMSG04USR DC    CL8' '\n         DC    C', LU '\nMSG04LU  DC    CL8' '\n         DC    C', CID '\n         DC    C' '\nMSG04CID DC    CL8' '\n         DC    C' '\nMSG04L   EQU   *-MSG04\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nWK       DSECT\n         LIBSAVE  DSECT=NO\n         PRTBLOK  DSECT=NO\n         FMH5     DSECT=NO,TRAN=xxxx\nWKECB    DS       F\nWKRPL    DS       (RPLL)X\nWKRPLEXT DS       (RPLEXTL)X\nWKENQ    DS       0F,(ENQL)X\nWKL      EQU      *-WK\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nEXITPARM DSECT\nEXITACB  DS   A                      ACB ADDRESS\n         DS   A                      RESERVED\n         DS   A                      RESERVED\nEXITTYPE DS   CL4                    TYPE OF CALL\nEXITRPL  DS   A                      RPL ADDRESS\n         DS   A                      RESERVED\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGRPL AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         COPY REGEQU\n         END  LIBSATTN\n./ ADD NAME=LIBSCOMM 0100-09250-09250-0919-00006-00006-00000-SOURCE\n         USING     LIBSCOMM,R11\n         SCOMM     TYPE=CSECT\n         COPY      REGEQU\n         IHAPSA    DSECT=YES,LIST=NO\n         LIBSAVE   DSECT=YES\n         END       LIBSCOMM\n./ ADD NAME=LIBSIP   0100-09250-09250-0919-00532-00532-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    TCP/IP subtask                                                   *\n*                                                                     *\n*   The PORT number we are to use is given on the PORT statement      *\n*   in the start up parameters.                                       *\n*                                                                     *\n*   At start-up this subtask                                          *\n*      1) initializes the TCP/IP environment                          *\n*      2) obtains its own CLIENTID                                    *\n*      3) creates a socket                                            *\n*      4) BINDs to the port given in the start-up parameters          *\n*      5) issues a LISTEN                                             *\n*                                                                     *\n*                                                                     *\n*   When a LIBRARIAN user contacts the server                         *\n*      1) Issue an ACCEPT to get the socket for this connection       *\n*      2) Log this connection                                         *\n*      3) GETMAIN a new USERBLOK                                      *\n*      4) Issue a GIVESOCKET                                          *\n*      5) POST the main task                                          *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*   When the user subtask initializes, it issues a TAKESOCKET.        *\n*   After the GIVESOCKET/TAKESOCKET, the user subtask communicates    *\n*   directly with the user.. that is this subtask is no longer        *\n*   involved in the sending and receiving of data via the network     *\n*   for that particular user.  Each user will have their own subtask. *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBSIP   CSECT\nLIBSIP   AMODE 31\nLIBSIP   RMODE ANY\n         USING LIBSIP,R12                     DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'LIBSIP'                    MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,0(R1)                      COPY COMM AREA BASE\n         GETMAIN RU,                          OBTAIN WORK AREA         +\n               LV=WORKAREA_L,                                          +\n               LOC=ANY\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ITRACE ID=INIT\n         GETMAIN RU,                                                   +\n               LV=GWALENTH,                                            +\n               LOC=ANY\n         ST    R1,WORK_TCPIP_GWA              TCP/IP GLOBAL WORK AREA\n         LA    R1,COMM_TCPIP_WORK_ECB\n         ST    R1,WORK_WAIT_ECB_1\n         LA    R1,WORK_TCPIP_ECB\n         ST    R1,WORK_WAIT_ECB_2\n         OI    WORK_WAIT_ECB_2,X'80'\n         MVI   PRTCMD,$PRTPRT                 PRINT\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n* ------------------------------------------------------------------- *\n*     Make the INITAPI call                                           *\n* ------------------------------------------------------------------- *\n         ITRACE ID=INITAPI,                                            +\n               DATA1=C_LIBSMAIN\n         MVC   PRTMSGID(MSG01_L),MSG01\n         BAL   R10,PRT0000\n         XC    WORK_TCPIP_TASK(TIELENTH),WORK_TCPIP_TASK\n         MVC   WORK_TCPIP_FUNCTION,=CL16'INITAPI'\n         EZASMI TYPE=INITAPI,                                          +\n               MAXSNO=WORK_MAX_SOCKET,                                 +\n               SUBTASK=C_LIBSMAIN,                                     +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ASYNC='ECB',                                            +\n               ERROR=ERR0010,                                          +\n               TASK=WORK_TCPIP_TASK\n         BAL   R10,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*     Get our CLIENTID                                                *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GETID\n         MVC   COMM_MAIN_CLIENT_NAME,COMM_BLANKS\n         MVC   COMM_MAIN_CLIENT_TASK,COMM_BLANKS\n         XC    COMM_MAIN_CLIENT_TASK+8(20),COMM_MAIN_CLIENT_TASK+8\n         MVC   WORK_TCPIP_FUNCTION,=CL16'GETCLIENTID'\n         EZASMI TYPE=GETCLIENTID,                                      +\n               CLIENT=COMM_MAIN_CLIENT,                                +\n               ECB=WORK_TCPIP_ECB,                                     +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n         ITRACE ID=CLIENTID,                                           +\n               DATA1=COMM_MAIN_CLIENT_NAME,                            +\n               DATA2=COMM_MAIN_CLIENT_TASK\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*     Create the socket                                               *\n* ------------------------------------------------------------------- *\n         MVC   PRTMSGID(MSG02_L),MSG02\n         BAL   R10,PRT0000\n         ITRACE ID=SOCKET\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'SOCKET'\n         EZASMI TYPE=SOCKET,                                           +\n               AF='INET',                                              +\n               SOCTYPE='STREAM',                                       +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         BAL   R10,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n         MVC   WORK_MY_SOCKET,WORK_TCPIP_RETURN_CODE+2\n* ------------------------------------------------------------------- *\n*     BIND the socket                                                 *\n* ------------------------------------------------------------------- *\n         ITRACE ID=BIND\n         XC    WORK_SOCKET_STRUCTURE,WORK_SOCKET_STRUCTURE\n         MVC   WORK_SOCKET_FAMILY,C_AF_INET\n         MVC   WORK_SOCKET_PORT,COMM_PORT\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'BIND'\n         EZASMI TYPE=BIND,                                             +\n               S=WORK_MY_SOCKET,                                       +\n               NAME=WORK_SOCKET_STRUCTURE,                             +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         BAL   R10,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*     Start LISTENing                                                 *\n* ------------------------------------------------------------------- *\n         MVC   PRTMSGID(MSG04_L),MSG04\n         BAL   R10,PRT0000\n         ITRACE ID=LISTEN\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'LISTEN'\n         EZASMI TYPE=LISTEN,                                           +\n               BACKLOG=5,                                              +\n               S=WORK_MY_SOCKET,                                       +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         BAL   R10,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Print \"Accepting LOG ONs\" message                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   PRTMSGID(MSG05_L),MSG05\n         BAL   R10,PRT0000\n* ------------------------------------------------------------------- *\n*     Issue ACCEPT                                                    *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         TM    COMM_EOJ_PHASE,$EOJ1\n         BO    TERM0000\n         ITRACE ID=ACCEPT\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'ACCEPT'\n         EZASMI TYPE=ACCEPT,                                           +\n               S=WORK_MY_SOCKET,                                       +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               NAME=WORK_SOCKET_STRUCTURE,                             +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Wait for either a CONNECT or server shutdown                 *\n*        command (entered via the console).                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=WAIT\n         WAIT  ECBLIST=WORK_WAIT_LIST\n         ITRACE ID=AWAKE\n         TM    COMM_EOJ_PHASE,$EOJ1\n         BO    TERM0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        We have been contacted..                                     *\n*          build a new USERBLOK                                       *\n*          issue a GIVESOCKET                                         *\n*          ATTACH a new user subtask                                  *\n*          all that was tiring so go WAIT again                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R1,COMM_TCPIP_LOGINS           NUMBER OF TCP/IP LOGONS\n         LA    R1,1(,R1)                      PLUS 1\n         ST    R1,COMM_TCPIP_LOGINS           SAVE TOTAL\n         GETMAIN RU,                                                   +\n               LV=USERBLOKL,                                           +\n               LOC=ANY\n         LR    R8,R1\n         USING USERBLOK,R8\n         ITRACE ID=NEWUSER,                                            +\n               RDATA1=R8\n         LR    R0,R1\n         LA    R1,USERBLOKL\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n\n         MVC   USEREYE,C_USERBLOK             IDENTIFY CONTROL BLOCK\n         ST    R8,USER_SELF                   ADDRESS OF THIS USEBLOK\n         MVC   WORK_USER_SOCKET,WORK_TCPIP_RETURN_CODE+2\n         MVC   USER_SOCKET,WORK_TCPIP_RETURN_CODE+2\n         TIME  DEC\n         ST    R0,USER_TIME                   SAVE TIME\n         ST    R1,USER_DATE                   SAVE DATE\n         ST    R11,USER_COMM                  SET LIBSCOMM'S ADDRESS\n         MVC   USER_LIBRARY,COMM_BLANKS       INITIALIZE LIBRARY NAME\n         MVC   USER_JOB,COMM_BLANKS           INITIALIZE BATCH JOB NAME\n         MVC   USER_NAME,COMM_BLANKS          INITIALIZE USER'S NAME\n         MVC   WORK_ENQ(ENQL),ENQI\n         MVC   USER_CLIENT(36),COMM_MAIN_CLIENT\n         MVC   USER_CLIENT_NAME,COMM_MAIN_CLIENT_NAME\n         MVC   USER_CLIENT_TASK,=X'F020202020202120'\n\n         SR    R1,R1\n\n         IC    R1,WORK_SOCKET_CLIENT_IP+0\n         CVD   R1,COMMDWRD\n         MVC   WORK_PACK_IN,=X'F0212020'\n         ED    WORK_PACK_IN,COMMDWRD+6\n         MVC   USER_IP_ADDRESS+00(3),WORK_PACK_IN+1\n\n         IC    R1,WORK_SOCKET_CLIENT_IP+1\n         CVD   R1,COMMDWRD\n         MVC   WORK_PACK_IN,=X'F0212020'\n         ED    WORK_PACK_IN,COMMDWRD+6\n         MVC   USER_IP_ADDRESS+04(3),WORK_PACK_IN+1\n\n         IC    R1,WORK_SOCKET_CLIENT_IP+2\n         CVD   R1,COMMDWRD\n         MVC   WORK_PACK_IN,=X'F0212020'\n         ED    WORK_PACK_IN,COMMDWRD+6\n         MVC   USER_IP_ADDRESS+08(3),WORK_PACK_IN+1\n\n         IC    R1,WORK_SOCKET_CLIENT_IP+3\n         CVD   R1,COMMDWRD\n         MVC   WORK_PACK_IN,=X'F0212020'\n         ED    WORK_PACK_IN,COMMDWRD+6\n         MVC   USER_IP_ADDRESS+12(3),WORK_PACK_IN+1\n\n         MVI   USER_IP_ADDRESS+03,C'.'\n         MVI   USER_IP_ADDRESS+07,C'.'\n         MVI   USER_IP_ADDRESS+11,C'.'\n\n         L     R1,COMM_TCPIP_LOGINS\n         CVD   R1,COMMDWRD                    CONVERT TO DECIMAL\n         ED    USER_CLIENT_TASK,COMMDWRD+4\n         MVI   USER_CLIENT_TASK,C'U'\n         ITRACE ID=ENQ\n         ENQ   MF=(E,WORK_ENQ)\n         MVC   USER_NEXT,COMM_USER_CHAIN      CURRENTLY FIRST ON CHAIN\n         ST    R8,COMM_USER_CHAIN             ADD OURS TO CHAIN\n         ITRACE ID=DEQ\n         DEQ   MF=(E,WORK_ENQ)\n         ITRACE ID=POSTAECB\n         POST  COMM_ATTN_ECB                  WAKE UP MAIN TASK\n         ITRACE ID=WAITAPI\n         WAIT  ECB=USER_API_ECB               WAIT FOR SUBTASK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   WORK_TCPIP_FUNCTION,=CL16'GIVESOCKET'\n         ITRACE ID=GIVESOKT,                                           +\n               DATA1=USER_CLIENT_NAME,                                 +\n               DATA2=USER_CLIENT_TASK\n         ITRACE ID=GIVE+,                                              +\n               DATA1=WORK_USER_SOCKET,                                 +\n               DATA2=USER_SOCKET\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         EZASMI TYPE=GIVESOCKET,                                       +\n               S=WORK_USER_SOCKET,                                     +\n               CLIENT=USER_CLIENT,                                     +\n               ECB=WORK_TCPIP_ECB,                                     +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE\n         POST  USER_TAKESOCKET_ECB\n         WAIT  ECB=WORK_TCPIP_ECB\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n*              Log the connection                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   PRTMSGID(MSG10_L),MSG10\n         MVC   PRTMSGID+(MSG10_IP_ADDRESS-MSG10)(L'MSG10_IP_ADDRESS),US+\n               ER_IP_ADDRESS\n         BAL   R10,PRT0000\n* ------------------------------------------------------------------- *\n*        The new connection has been processed.                       *\n*        At least this subtask's work is done.                        *\n*        Now issue another ACCEPT.                                    *\n* ------------------------------------------------------------------- *\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        The main task has signalled shutdown                         *\n*                                                                     *\n*        CLOSE the socket and issue a TERMAPI to clean-up.            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTERM0000 DS    0H\n         ITRACE ID=CLOSE\n         MVC   WORK_TCPIP_FUNCTION,=CL16'CLOSE'\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         EZASMI TYPE=CLOSE,                                            +\n               S=WORK_MY_SOCKET,                                       +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB\n         WAIT  ECB=WORK_TCPIP_ECB\n         BAL   R10,INFO0000\n\n         ITRACE ID=TERMAPI\n         MVC   WORK_TCPIP_FUNCTION,=CL16'TERMAPI'\n         EZASMI TYPE=TERMAPI,                                          +\n               TASK=WORK_TCPIP_TASK\n         BAL   R10,INFO0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINFO0000 DS    0H\n         MVC   PRTMSGID(MSG90_L),MSG90\n         MVC   PRTMSGID+(MSG90_FUNCTION-MSG90)(L'MSG90_FUNCTION),WORK_T+\n               CPIP_FUNCTION\n         UNPK  PRTMSGID+(MSG90_RETURN_CODE-MSG90)(9),WORK_TCPIP_RETURN_+\n               CODE(5)\n         MVZ   PRTMSGID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXZERO\n         TR    PRTMSGID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXCHAR\n         MVI   PRTMSGID+(MSG90_RETURN_CODE-MSG90)+8,C' '\n         L     R1,WORK_TCPIP_ERROR_NUMBER\n         CVD   R1,COMMDWRD\n         ED    PRTMSGID+(MSG90_ERROR_NUMBER-MSG90)(L'MSG90_ERROR_NUMBER+\n               ),COMMDWRD+5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE\n         ST    R14,PRTNEXT-PRTBLOK(R1)                        '\n         CS    R14,R1,COMM_PRINT_REQ          ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Error routines                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'1'\nERR0020  DS    0H\n         BAL   R10,INFO0000\n         DC    H'2'\nERR0030  DS    0H\n         DC    H'3'\nERR0040  DS    0H\n         DC    H'4'\nERR0050  DS    0H\n         BAL   R10,INFO0000\n         DC    H'5'\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         MVC   PRTMSGID(MSG91_L),MSG91\n         BAL   R10,PRT0000\n         ICM   R1,15,WORK_TCPIP_GWA\n         BZ    EXIT0010\n         FREEMAIN RU,A=(1),LV=GWALENTH\nEXIT0010 DS    0H\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nENQI     ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L\nENQL     EQU   *-ENQI\nQNAME    DC    CL8'LIB'\nRNAME    DC    CL8'COMMUSER'\n\nC_H4                     DC    H'4'\nC_AF_INET                DC    X'0002'\nC_HEXCHAR                DC    C'0123456789ABCDEF'\nC_HEXZERO                DC    0F,XL8'0000000000000000'\nC_PRTID                  DC    CL8'PRTBLOK'\nC_USERBLOK               DC    CL8'USERBLOK'\nC_LIBSMAIN               DC    CL8'LIBSMAIN'\nMSG01                    DS    0C\n                         DC    CL15'LIBSIP01I'\n                         DC    C'Issuing INITAPI'\nMSG01_L                  EQU   *-MSG01\nMSG02                    DS    0C\n                         DC    CL15'LIBSIP02I'\n                         DC    C'Creating socket'\nMSG02_L                  EQU   *-MSG02\nMSG03                    DS    0C\n                         DC    CL15'LIBSIP03I'\n                         DC    C'BINDing to port '\nMSG03_PORT               DC    CL5' '\nMSG03_L                  EQU   *-MSG03\nMSG04                    DS    0C\n                         DC    CL15'LIBSIP04I'\n                         DC    C'LISTENing'\nMSG04_L                  EQU   *-MSG04\nMSG05                    DS    0C\n                         DC    CL15'LIBSIP05I'\n                         DC    C'ACCEPTing connections'\nMSG05_L                  EQU   *-MSG05\nMSG10                    DS    0C\n                         DC    CL15'LIBSIP10I'\n                         DC    C'CONNECTION arrived from '\nMSG10_IP_ADDRESS         DC    CL15' '\nMSG10_L                  EQU   *-MSG10\nMSG90                    DS    0C\n                         DC    CL15'LIBSIP90I'\n                         DC    C'TCP/IP function '\nMSG90_FUNCTION           DC    CL16' '\n                         DC    C'  Return code: '\nMSG90_RETURN_CODE        DC    CL8' '\n                         DC    C'  Error number:'\nMSG90_ERROR_NUMBER       DC    X'402020202120'\nMSG90_L                  EQU   *-MSG90\nMSG91                    DS    0C\n                         DC    CL15'LIBSIP91I'\n                         DC    C'TCP/IP subtask terminating'\nMSG91_L                  EQU   *-MSG91\n\n                         LTORG\n* ------------------------------------------------------------------- *\n*              WORK AREA                                              *\n* ------------------------------------------------------------------- *\nWORKAREA                 DSECT\n                         LIBSAVE  DSECT=NO\nWORK_MAX_SOCKET          DS   F\nWORK_PACK_IN             DS   XL4\n\nWORK_USER_SOCKET         DS   H\nWORK_RC                  DS   H\n\nWORK_MY_SOCKET           DS   H\nWORK_NEW_SOCKET          DS   H\n\nWORK_ENQ                 DS   0F,(ENQL)X\n\n                         DS   0F\nWORK_SOCKET_STRUCTURE    DS   0XL16\nWORK_SOCKET_FAMILY       DS   AL2           FAMILY (ALWAYS = 2)\nWORK_SOCKET_PORT         DS   XL2           PORT NUMBER\nWORK_SOCKET_CLIENT_IP    DS   XL4           CLIENT'S IP ADDRESS\n                         DS   XL8           RESERVED\n\nWORK_TCPIP_ECB           DS   F\n                         DS   XL100\n\nWORK_TCPIP_ERROR_NUMBER  DS   F\nWORK_TCPIP_FUNCTION      DS   CL16\nWORK_TCPIP_GWA           DS   F\nWORK_TCPIP_RETURN_CODE   DS   F\nWORK_TCPIP_TASK          EZASMI TYPE=TASK,STORAGE=CSECT\n\nWORK_WAIT_LIST           DS   0F            WAIT LIST\nWORK_WAIT_ECB_1          DS   F             COMM_TERMINATION_ECB\nWORK_WAIT_ECB_2          DS   F             TCPIP_ECB\n\n                         PRTBLOK  DSECT=NO\n\nWORKAREA_L               EQU  *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         EZASMI   TYPE=GLOBAL,STORAGE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY   REGEQU\n         END      LIBSIP\n./ ADD NAME=LIBSMAIN 0100-09250-09250-0919-01297-01297-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: LIBSMAIN                                                     *\n*                                                                     *\n*  Purpose: Librarian STC mainline                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBSMAIN CSECT\nLIBSMAIN AMODE 31\nLIBSMAIN RMODE ANY\n         USING LIBSMAIN,R12,R9                DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'LIBSMAIN'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LA    R9,2048(R12)                   SET 2ND..\n         LA    R9,2048(R9)                    .. BASE REGISTER\n* ------------------------------------------------------------------- *\n*        ACQUIRE STORAGE FOR WORK AREAS                               *\n* ------------------------------------------------------------------- *\n         L     R3,DXDSIZE                     WORK AREA SIZE\n         GETMAIN RU,                          ACQUIRE WORK AREA STORAGE+\n               LV=(R3),                       .. AREA SIZE IS IN R3    +\n               LOC=ANY                        .. MAY BE ABOVE OR BELOW\n         LR    R4,R1                          COPY STORAGE ADDRESS\n         LR    R10,R1                         COPY STORAGE ADDRESS\n         LR    R2,R1                          COPY WORK AREA ADDRESS\n         SR    R1,R1                          CLEAR REGISTER\n         MVCL  R2,R0                          CLEAR WORK AREA\n         A     R10,DXDSTART                   PLUS DISPLACEMENT\n         USING DXDSMAIN,R10                   DEFINE WORK AREA BASE\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         LA    R2,DXDSAVE                     OUR SAVE AREA ADDRESS\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      OUR SAVE AREA TO CALLER'S\n         LR    R13,R2                         SET SAVE AREA ADDRESS\n         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK\n* ------------------------------------------------------------------- *\n*        Load common data module  (LIBSCOMM)                          *\n* ------------------------------------------------------------------- *\n         LOAD  EP=LIBSCOMM                    LOAD COMMON DATA MODULE\n         LR    R11,R0                         COPY TO PERMANENT BASE\n         USING LIBSCOMM,R11                   DEFINE COMMON AREA BASE\n         ST    R12,COMM_LIBSMAIN              MAINLINE'S ADDRESS\n         ST    R4,COMMDXDA                    DYNAMIC WORK AREA ADDR\n* ------------------------------------------------------------------- *\n*        Extract info from OPTIONS                                    *\n* ------------------------------------------------------------------- *\n         LOAD  EP=LIBOPT                      LOAD THE OPTIONS\n         LR    R1,R0                          COPY OPTIONS ADDRESS\n         USING OPTDSECT,R1                    DEFINE OPTIONS BASE\n         LH    R0,OPTTRACE                    NUMBER OF TRACE ENTRIES\n         MH    R0,=Y(TRENTRYL)                TIMES SIZE PER ENTRY\n         ST    R0,TRSIZE                      SAVE TRACE TABLE SIZE\n         ZAP   COMM_MAX_LINES,OPTMAXL         SET LINE COUNT LIMIT\n         MVC   COMMRACF,OPTRACF               RACF CLASS AND ENTITY\n         MVC   COMM_SNAP_CLASS,OPTSNAPC       SNAP DUMP SYSOUT CLASS\n         DELETE EP=LIBOPT\n* ------------------------------------------------------------------- *\n*        Set entry points in common area                              *\n* ------------------------------------------------------------------- *\n         MVC   COMM_LIBATTN,V_LIBATTN         VTAM ATTN EXIT ADDRESS\n         MVC   COMM_LIBLERAD,V_LIBLERAD       LERAD EXIT ADDRESS\n* ------------------------------------------------------------------- *\n*        ACQUIRE STORAGE FOR TRACE TABLE                              *\n* ------------------------------------------------------------------- *\n         L     R3,TRSIZE                      TRACE TABLE SIZE\n         GETMAIN RU,                          STORAGE FOR TRACE TABLE  +\n               LV=(R3),                       .. SIZE IS IN R3         +\n               LOC=ANY                        .. ABOVE OR BELOW\n         ST    R1,TRADDR                      SAVE TRACE TABLE ADDRESS\n         SR    R0,R0                          ASSUME ON 32-BYTE BNDRY\n         TM    TRADDR+3,X'07'                 ON 32-BYTE BOUNDARY?\n         BNO   INIT0010                       YES\n         SRL   R1,5                           SHIFT OUT LOW BITS ..\n         SLL   R1,5                           .. TO ROUND TO BNDRY\n         LA    R1,32(R1)                      PLUS 32\n         LA    R0,TRENTRYL                    1 LESS AVAILABLE\nINIT0010 DS    0H\n         ST    R1,TRFIRST                     FIRST TRACE ENTRY\n         ST    R1,TRCURR                      CURRENT TRACE ENTRY\n         A     R1,TRSIZE                      LAST ENTRY IN TABLE\n         SH    R1,=Y(TRENTRYL)                MINUS 1 ENTRY\n         SR    R1,R0                          MINUS 1 MORE IF NECESSARY\n         ST    R1,TRLAST                      LAST TRACE ENTRY ADDRESS\n* ------------------------------------------------------------------- *\n*        Determine DD's present                                       *\n* ------------------------------------------------------------------- *\n         USING PSA,R0                         DEFINE BASE\n         L     R1,PSATNEW                     OUR TCB ADDRESS FROM PSA\n         USING TCB,R1                         DEFINE TCB BASE\n         L     R2,TCBTIO                      TIOT ADDRESS FROM OUR TCB\n         USING TIOT1,R2                       DEFINE TIOT BASE\n         LA    R3,TIOENTRY                    FIRST TIOT ENTRY\n         USING TIOENTRY,R3                    DEFINE TIOT ENTRY BASE\n         SR    R4,R4                          CLEAR FOR LENGTHS\nINIT0020 DS    0H\n         ICM   R4,1,TIOELNGH                  LENGTH OF THIS ENTRY\n         BZ    INIT0060                       END OF TABLE\n         ITRACE ID=TIOTDDNM,                  TRACE EACH TIOT ENTRY    +\n               DATA1=TIOEDDNM\n         LA    R5,DDTBLE                      REQUIRED DD_NAMES TABLE\n         USING DD_DSECT,R5                    DEFINE BASE\nINIT0030 DS    0H\n         CLI   0(R5),X'FF'                    END OF TABLE?\n         BE    INIT0050                       YES, NOT IN TABLE\n         CLC   TIOEDDNM,DD_NAME               DD NAME FOUND?\n         BE    INIT0040                       YES\n         LA    R5,DD_DSECT_L(R5)              NEXT DD\n         B     INIT0030                       LOOP\nINIT0040 DS    0H\n         ITRACE ID=SETDD_ID,                  SETTING DD ID            +\n               DATA1=TIOEDDNM,                .. DD_NAME               +\n               DATA2=DD_ID                    .. FLAG VALUE\n         OC    DXD_DD,DD_ID                   TURN ON MATCHING ID\nINIT0050 DS    0H\n         AR    R3,R4                          NEXT ENTRY\n         B     INIT0020                       LOOP\nINIT0060 DS    0H\n         ITRACE ID=TIOTDONE,                  TIOT SCAN COMPLETE       +\n               DATA1=DXD_DD                   .. INCLUDE FLAG BYTE\n         TM    DXD_DD,$DD_LIBPRT              PRINT DD PRESENT?\n         BO    INIT0070                       YES\n         GETMAIN RU,                          ACQUIRE STORAGE FOR WTO  +\n               LV=WTO01L,                     .. STORAGE SIZE REQUIRED +\n               LOC=BELOW                      .. FROM BELOW THE LINE\n         LR    R2,R1                          COPY STORAGE ADDRESS\n         MVC   0(WTO01L,R2),WTO01             COPY WTO\n         WTO   MF=(E,(R2))                    ISSUE WTO\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=WTO01L\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*        ATTACH print sub-task                                        *\n* ------------------------------------------------------------------- *\nINIT0070 DS    0H\n         MVC   DXD_ATTACH(ATTCHL),ATTCHI\n         MVC   DXD_TASK,PRINT                 TASK BEING ATTACHED\n         LA    R2,COMM_PRINT_TERM_ECB         TERMINATION ECB'S ADDRESS\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         ITRACE ID=ATCHPRT                    ATTACHING PRINT SUBTASK\n         ATTACH EP=LIBSPSUB,                  ATTACH PRINT SUBTASK     +\n               PARAM=((R11)),                 .. PARAMETER             +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_PRINT_TCB              SET TCB'S ADDRESS\n         ITRACE ID=PRTOK,                     SUBTASK ATTACH SUCCESSFUL+\n               RDATA1=R1                      .. INCLUDE TCB ADDRESS\n         OI    COMM_TASKS,$TASK_PRINT         PRINT SUBTASK IS ACTIVE\n* ------------------------------------------------------------------- *\n*        Print start-up messages                                      *\n* ------------------------------------------------------------------- *\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVI   PRTCMD,$PRTHEAD                SET COMMAND\n         BAL   R8,PRT0000                     PRINT\n         MVI   PRTCMD,$PRTPRT                 CHANGE COMMAND TO PRINT\n         MVC   PRTMSGID(MSG01L),MSG01\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         MVC   PRTMSGID(MSG02L),MSG02\n         BAL   R8,PRT0000                     PRINT MESSAGE\n* ------------------------------------------------------------------- *\n*        Make sure all required DD's are present                      *\n* ------------------------------------------------------------------- *\n         LA    R5,DDTBLE                      FIRST DD_NAME\n         SR    R2,R2                          CLEAR REGISTER\nINIT0080 DS    0H\n         TM    DD_FLAG,$DD_REQUIRED           IS THIS A REQUIRED DD?\n         BNO   INIT0090                       NO\n         IC    R2,DD_ID                       INSERT DD ID\n         EX    R2,DDTM                        IS DD PRESENT?\n         BO    INIT0090                       YES\n         MVC   PRTMSGID(MSG03L),MSG03\n         MVC   PRTMSGID+(MSG03D-MSG03)(L'MSG03D),DD_NAME\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\nINIT0090 DS    0H\n         LA    R5,DD_DSECT_L(R5)              NEXT DD\n         CLI   0(R5),X'FF'                    END OF TABLE?\n         BNE   INIT0080                       NO\n         TM    COMM_FLAGS,$ABORT              ABORT FLAG SET?\n         BNO   INIT0100                       NO\n         MVC   PRTMSGID(MSG04L),MSG04\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         B     EXIT0000                       EXIT\nDDTM     TM    DXD_DD,X'00'                   TEST FOR PRESENCE OF DD\n* ------------------------------------------------------------------- *\n*        Call parameter interpreter                                   *\n* ------------------------------------------------------------------- *\nINIT0100 DS    0H\n         LOAD  EP=LIBSPARM                    LOAD PARM CONVERTER\n         LR    R15,R0                         PARAMETER ENTRY POINT\n         BALR  R14,R15                        LINK TO INTERPRETER\n         DELETE EP=LIBSPARM                   DELETE INTERPRETER\n         TM    COMM_FLAGS,$ABORT              ERRORS IN PARAMETERS?\n         BNO   INIT0110                       NO\n         MVC   PRTMSGID(MSG07L),MSG07\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         B     TERM0000                       START TERMINATION\n* ------------------------------------------------------------------- *\n*        Verify that we have a VTAM APPLID or                         *\n*        a TCP/IP port number or both                                 *\n* ------------------------------------------------------------------- *\nINIT0110 DS    0H\n         CLC   COMM_APPL_NAME,COMM_BLANKS     APPLID PRESENT?\n         BNE   INIT0120                       YES\n         OC    COMM_PORT,COMM_PORT            PORT NUMBER PRESENT?\n         BZ    ERR0070                        NO..\n* ------------------------------------------------------------------- *\n*        ATTACH console subtask                                       *\n* ------------------------------------------------------------------- *\nINIT0120 DS    0H\n         MVC   DXD_TASK,LIBSCSUB              SUBTASK BEING ATTTACHED\n         LA    R2,COMM_CSUB_TERM_ECB          TERMINATION ECB'S ADDRESS\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         ITRACE ID=ATCHCONS                   ATTACHING CONSOLE SUBTASK\n         ATTACH EP=LIBSCSUB,                  ATTACH CONSOLE SUBTASK   +\n               PARAM=((R11)),                 .. PARAMETER             +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_CSUB_TCB               TCB'S ADDRESS\n         ITRACE ID=CONSOK,                    SUBTASK ATTACH SUCCESSFUL+\n               RDATA1=R1                      .. TCB ADDRESS\n         OI    COMM_TASKS,$TASK_CONSOLE       CONSOLE SUBTASK ACTIVE\n         MVC   PRTMSGID(MSG05L),MSG05\n         MVC   PRTMSGID+(MSG05TSK-MSG05)(L'MSG05TSK),LIBSCSUB\n         MVC   PRTMSGID+(MSG05DSC-MSG05)(L'CSUBDSC),CSUBDSC\n         BAL   R8,PRT0000                     PRINT MESSAGE\n* ------------------------------------------------------------------- *\n*        ATTACH dynamic allocation/de-allocation subtask              *\n* ------------------------------------------------------------------- *\n         MVC   DXD_TASK,LIBSDSUB              SUBTASK BEING ATTTACHED\n         LA    R2,COMM_DSUB_TERM_ECB          TERMINATION ECB\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         ITRACE ID=ATCHDSUB                   ATTACHING DSUB\n         ATTACH EP=LIBSDSUB,                  ATTACH DSUB (DAIR)       +\n               PARAM=((R11)),                 .. PARAMETER             +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_DSUB_TCB               TCB ADDRESS\n         ITRACE ID=DSUBOK,                    ATTACH SUCCESSFUL        +\n               RDATA1=R1                      .. TCB ADDRESS\n         OI    COMM_TASKS,$TASK_DAIR          DAIR SUBTASK ACTIVE\n         MVC   PRTMSGID(MSG05L),MSG05\n         MVC   PRTMSGID+(MSG05TSK-MSG05)(L'MSG05TSK),LIBSDSUB\n         MVC   PRTMSGID+(MSG05DSC-MSG05)(L'DSUBDSC),DSUBDSC\n         BAL   R8,PRT0000                     PRINT MESSAGE\n* ------------------------------------------------------------------- *\n*        ATTACH Library OPEN/CLOSE subtask                            *\n* ------------------------------------------------------------------- *\n         MVC   DXD_TASK,LIBSLSUB              SUBTASK BEING ATTTACHED\n         LA    R2,COMM_LSUB_TERM_ECB          TERMINATION ECB'S ADDRESS\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         ITRACE ID=ATCHLSUB                   ATTACHING LIB OPEN/CLOSE\n         ATTACH EP=LIBSLSUB,                  ATTACH LIBRARY OPEN/CLOSE+\n               PARAM=((R11)),                 .. PARAMETER             +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_LSUB_TCB               TCBS ADDRESS\n         ITRACE ID=LSUBOK,                    OPEN/CLOSE ATTACH SUCCESS+\n               RDATA1=R1                      .. TCB ADDRESS\n         OI    COMM_TASKS,$TASK_LIB           OPEN/CLOSE SUBTASK ACTIVE\n         MVC   PRTMSGID(MSG05L),MSG05\n         MVC   PRTMSGID+(MSG05TSK-MSG05)(L'MSG05TSK),LIBSLSUB\n         MVC   PRTMSGID+(MSG05DSC-MSG05)(L'LSUBDSC),LSUBDSC\n         BAL   R8,PRT0000                     PRINT MESSAGE\n* ------------------------------------------------------------------- *\n*        ATTACH Source History subtask                                *\n* ------------------------------------------------------------------- *\n         TM    DXD_DD,$DD_LIBHIST             IS HISTORY DD PRESENT\n         BNO   PROC0010                       NO\n         MVC   DXD_TASK,LIBSHSUB              SUBTASK BEING ATTTACHED\n         LA    R2,COMM_HSUB_TERM_ECB          TERMINATION ECB'S ADDRESS\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         ITRACE ID=ATCHHSUB                   ATTACHING SOURCE HISTORY\n         ATTACH EP=LIBSHSUB,                  ATTACH SOURCE HISTORY    +\n               PARAM=((R11)),                 .. PARAMETER             +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_HSUB_TCB               TCB ADDRESS\n         ITRACE ID=HSUBOK,                    HISTORY SUBTASK SUCCESS  +\n               RDATA1=R1                      TCB ADDRESS\n         OI    COMM_TASKS,$TASK_HISTORY       HISTORY SUBTASK ACTIVE\n         MVC   PRTMSGID(MSG05L),MSG05\n         MVC   PRTMSGID+(MSG05TSK-MSG05)(L'MSG05TSK),LIBSHSUB\n         MVC   PRTMSGID+(MSG05DSC-MSG05)(L'HSUBDSC),HSUBDSC\n         BAL   R8,PRT0000                     PRINT MESSAGE\n* ------------------------------------------------------------------- *\n*        Open the library ACBs.                                       *\n* ------------------------------------------------------------------- *\nPROC0010 DS    0H\n         ITRACE ID=OPENLIBS\n         MVC   LIB_FUNCTION_EYE,LIBID\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_OPEN\n         MVC   LIB_FUNCTION_LIB_NAME,ALL\n         BAL   R8,LIB0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TM    LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         BNO   PROC0030                       NO\n         MVC   PRTMSGID(MSG07L),MSG07\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         B     TERM0000                       CLEAN-UP\nPROC0030 DS    0H\n         OI    COMM_FLAGS,$INIT               INITIALIZATION COMPLETE\n         GETMAIN RU,                          ACQUIRE STORAGE FOR WTO  +\n               LV=WTO06L,                     .. STORAGE SIZE REQUIRED +\n               LOC=BELOW                      .. FROM BELOW THE LINE\n         LR    R2,R1                          COPY STORAGE ADDRESS\n         MVC   0(WTO06L,R2),WTO06             COPY WTO\n         WTO   MF=(E,(R2))                    ISSUE WTO\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=WTO06L\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        If a VTAM APPLID was specified in the options,               *\n*        ATTACH the VTAM communication subtask.                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLC   COMM_APPL_NAME,COMM_BLANKS     VTAM APPLID GIVEN?\n         BE    PROC0040                       NO\n         MVC   DXD_TASK,VTAM                  TASK BEING ATTACHED\n         LA    R2,COMM_VTAM_TERM_ECB          TERMINATION ECB\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         ITRACE ID=ATCHVTAM                   ATTACHING VTAM SUBTASK\n         ATTACH EP=LIBSVTAM,                  ATTACH VTAM SUBTASK      +\n               PARAM=((R11)),                 .. PARAMETER             +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_VTAM_TCB               TCB ADDRESS IN COMMON\n         ITRACE ID=VTAMOK,                    SUBTASK ATTACH SUCCESSFUL+\n               RDATA1=R1                      TCB ADDRESS IN TRACE\n         OI    COMM_TASKS,$TASK_VTAM          VTAM SUBTASK IS ACTIVE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        If a TCP/IP port nuber was specified in the options,         *\n*        ATTACH the TCP/IP communication subtask.                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0040 DS    0H\n         OC    COMM_PORT,COMM_PORT            PORT NUMBER GIVEN?\n         BZ    PROC0070                       NO\n         MVC   DXD_TASK,TCPIP                 TASK BEING ATTACHED\n         LA    R2,COMM_TCPIP_TERM_ECB         TERMINATION ECB\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         ITRACE ID=ATCHSIP                    ATTACHING TCPIP SUBTASK\n         ATTACH EP=LIBSIP,                    ATTACH TCP/IP SUBTASK    +\n               PARAM=((R11)),                 .. PARAMETER             +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_TCPIP_TCB              TCB ADDRESS IN COMMON\n         ITRACE ID=TCPIPOK,                   TCP/IP ATTACH SUCCESSFUL +\n               RDATA1=R1                      TCB ADDRESS\n         OI    COMM_TASKS,$TASK_TCPIP         TCP/IP SUBTASK IS ACTIVE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   At the present time there is no work to do.                       *\n*                                                                     *\n*   The number of ECBs we need to WAIT on varies.                     *\n*   The main task WAITs for:                                          *\n*     1) A user to connect or disconnect                              *\n*                                                                     *\n*     2) The console subtask.                                         *\n*        The console subtask POSTs COMM_TERMINATION_ECB when the      *\n*        LIBRARIAN is to be shutdown.                                 *\n*                                                                     *\n*    Since the number of users can vary, the number of ECBs can also  *\n*    vary.  There are always the ECBs for the ATTENTION exit and the  *\n*    termination ECB (POSTed by LIBSCSUB).  There is also one ECB     *\n*    the completion ECB) for each LIBSUSUB subtask.                   *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0070 DS    0H\n         LA    R2,8                           MINIMUM WAIT LIST LENGTH\n         SR    R3,R3                          USER BLOCK COUNTER\n         ITRACE ID=WAITENQ\n         MVC   DXD_ENQ(ENQL),ENQI             INITIALIZE PARM LIST\n         ENQ   MF=(E,DXD_ENQ)                 ENQ USER CHAIN\n         ICM   R5,15,COMM_USER_CHAIN          FIRST USER BLOCK ADDRESS\n         USING USERBLOK,R5                    DEFINE BASE\n         BZ    PROC0090\nPROC0080 DS    0H\n         LA    R2,4(R2)                       PLUS 4\n         LA    R3,1(R3)                       ADD 1 TO COUNTER\n         ICM   R5,15,USER_NEXT\n         BNZ   PROC0080\nPROC0090 DS    0H\n         ITRACE ID=GETWAIT,                   GETMAINING WAIT LIST     +\n               RDATA1=R2,                     .. SIZE OF WAIT LIST     +\n               RDATA2=R3                      .. NUMBER OF USERBLOKS\n         ST    R2,DXD_WAIT_SIZE               SAVE SIZE OF WAIT LIST\n         GETMAIN RU,                          OBTAIN STORAGE           +\n               LV=(R2),                                                +\n               LOC=ANY\n         ST    R1,DXD_WAIT                    SAVE THE ADDRESS\n         LA    R0,COMM_TERMINATION_ECB        TERMINATION ECB\n         ST    R0,0(R1)\n         LA    R0,COMM_ATTN_ECB               ATTENTION EXIT ECB\n         ST    R0,4(R1)\n         LA    R1,4(R1)                       NEXT ECB\n         LTR   R3,R3                          ANY USER BLOCKS?\n         BZ    PROC0110                       NO\n         ICM   R5,15,COMM_USER_CHAIN          FIRST USER BLOCK\n         BZ    ERR0040                        NOT THERE NOW?\nPROC0100 DS    0H\n         LA    R1,4(R1)                       NEXT ECB ADDR SLOT\n         LA    R0,USER_TERMINATION_ECB        TERMINATION ECB\n         ST    R0,0(R1)                       SET ADDRESS IN WAIT LIST\n         L     R5,USER_NEXT                   NEXT USERBLOK\n         BCT   R3,PROC0100\nPROC0110 DS    0H\n         OI    0(R1),X'80'                    FLAG END-OF-LIST\n         ITRACE ID=WAITDEQ\n         MVC   DXD_ENQ(DEQL),DEQI             INITIALIZE DEQ PARM LIST\n         DEQ   MF=(E,DXD_ENQ)                 DEQ USER CHAIN\n         L     R2,DXD_WAIT                    ECB LIST'S ADDRESS\n         ITRACE ID=WAIT,                                               +\n               RDATA1=R2\n         WAIT  1,ECBLIST=(R2)                 WAIT FOR SOMETHING\n         L     R3,DXD_WAIT_SIZE               SIZE OF WAIT LIST\n         ITRACE ID=FREEWAIT,                                           +\n               RDATA1=R2,                                              +\n               RDATA2=R3\n         FREEMAIN RU,                         FREE WAITLIST STORAGE    +\n               A=(R2),                                                 +\n               LV=(R3)\n         XC    DXD_WAIT,DXD_WAIT              CLEAR ADDRESS\n         XC    DXD_WAIT_SIZE,DXD_WAIT_SIZE\n         TM    COMM_TERMINATION_ECB,X'40'     TERMINATION ECB POSTED?\n         BO    TERM0000                       YES\n* ------------------------------------------------------------------- *\n*        USER LOG-INS/LOG-OUTS                                        *\n* ------------------------------------------------------------------- *\nUSER0000 DS    0H\n         XC    COMM_ATTN_ECB,COMM_ATTN_ECB    CLEAR ATTENTION EXIT ECB\n         ITRACE ID=LOGENQ\n         MVC   DXD_ENQ(ENQL),ENQI             INITIALIZE PARM LIST\n         ENQ   MF=(E,DXD_ENQ)                 ENQ USER CHAIN\n         ICM   R5,15,COMM_USER_CHAIN          FIRST USER BLOCK\n         BZ    PROC0070                       NO USER BLOCKS\nUSER0010 DS    0H\n         ITRACE ID=USERBLOK,                                           +\n               DATA1=USER_USER_ID,            .. USER'S TSO ID         +\n               DATA2=USER_TCB                 .. SUBTASK'S TCB ADDRESS\n         TM    USER_TERMINATION_ECB,X'40'     TERMINATED?\n         BO    USER0040                       YES\n         OC    USER_TCB,USER_TCB              SUBTASK ADDRESS PRESENT?\n         BNZ   USER0110                       YES\n         ITRACE ID=ATCHUSER,                  ATTACHING USER SUBTASK   +\n               RDATA1=R5,                     .. USERBLOK ADDRESS      +\n               DATA2=USER_PARTNER_LU          .. USER'S LU NAME\n         MVC   DXD_ATTACH(ATTCHL),ATTCHI\n         LA    R2,USER_TERMINATION_ECB        TERMINATION ECB\n         LA    R3,USER_SELF                   PARM LIST ADDRESS\n         ATTACH EP=LIBSUSUB,                  ATTACH USER SUBTASK      +\n               PARAM=((R5)),                  .. PARAMETER             +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,USER_TCB                    SET TCB ADDRESS\n         ITRACE ID=USEROK,                    SUBTASK ATTACH SUCCESSFUL+\n               RDATA1=R1                      TCB ADDRESS\n         MVC   PRTMSGID(MSG13L),MSG13\n         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID\n         BZ    USER0020\n         MVC   PRTMSGID+(MSG13TYP-MSG13)(4),CID\n         UNPK  PRTMSGID+(MSG13ADR-MSG13)(9),USER_CONVERSATION_ID(5)\n         TR    PRTMSGID+(MSG13ADR-MSG13)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG13ADR-MSG13)+8,C' '\n         B     USER0030\nUSER0020 DS    0H\n         MVC   PRTMSGID+(MSG13TYP-MSG13)(4),IP\n         MVC   PRTMSGID+(MSG13ADR-MSG13)(15),USER_IP_ADDRESS\nUSER0030 DS    0H\n         BAL   R8,PRT0000\n         B     USER0110\n* ------------------------------------------------------------------- *\n*        USER HAS LOGGED-OUT                                          *\n* ------------------------------------------------------------------- *\nUSER0040 DS    0H\n         TM    USER_STATUS,$USERCLN           CLEAN-UP SCHEDULED?\n         BO    USER0110                       YES\n         OI    USER_STATUS,$USERCLN           CLEAN-UP IS UNDERWAY\n         ITRACE ID=LOGOUT,                                             +\n               RDATA1=R5,                                              +\n               DATA2=USER_NAME\n         MVC   PRTMSGID(MSG14L),MSG14\n         MVC   PRTMSGID+(MSG14END-MSG14)(L'MSG14END),DETACHED\n         OC    USER_TERMINATION_ECB+1(3),USER_TERMINATION_ECB+1\n         BZ    USER0045\n         MVC   PRTMSGID+(MSG14END-MSG14)(L'MSG14END),ABENDED\nUSER0045 DS    0H\n         MVC   PRTMSGID+(MSG14USR-MSG14)(L'MSG14USR),USER_USER_ID\n         UNPK  PRTMSGID+(MSG14ECB-MSG14)(9),USER_TERMINATION_ECB(5)\n         TR    PRTMSGID+(MSG14ECB-MSG14)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG14ECB-MSG14)+8,C' '\n         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID\n         BZ    USER0050\n         MVC   PRTMSGID+(MSG14TYP-MSG14)(4),CID\n         UNPK  PRTMSGID+(MSG14ADR-MSG14)(9),USER_CONVERSATION_ID(5)\n         TR    PRTMSGID+(MSG14ADR-MSG14)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG14ADR-MSG14)+8,C' '\n         B     USER0060\nUSER0050 DS    0H\n         MVC   PRTMSGID+(MSG14TYP-MSG14)(4),IP\n         MVC   PRTMSGID+(MSG14ADR-MSG14)(15),USER_IP_ADDRESS\nUSER0060 DS    0H\n         UNPK  PRTMSGID+(MSG14STA-MSG14)(3),USER_STATUS(2)\n         TR    PRTMSGID+(MSG14STA-MSG14)(2),HEXCHAR\n         MVI   PRTMSGID+(MSG14STA-MSG14)+2,C' '\n         BAL   R8,PRT0000\n*\n*      Remove any library ENQs for this user\n*\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_REM_TASK\n         ST    R5,LIB_FUNCTION_USER\n         MVC   LIB_FUNCTION_LIB_NAME,USER_LIBRARY\n         BAL   R8,LIB0000\nUSER0070 DS    0H\n         ITRACE ID=DTACHUSR,                                           +\n               RDATA1=R5,                                              +\n               DATA2=USER_USER_ID\n         DETACH USER_TCB\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0020                        NO\n         ITRACE ID=UNCHUSER,                                           +\n               RDATA1=R5\nUSER0080 DS    0H\n         LA    R1,COMM_USER_CHAIN             STARTING CHAIN POINT\nUSER0090 DS    0H\n         C     R5,0(R1)                       OUR USER BLOCK?\n         BE    USER0100                       YES\n         ICM   R1,15,0(R1)                    NEXT BLOCK'S ADDRESS\n         BZ    ERR0050\n         LA    R1,USER_NEXT-USERBLOK(R1)\n         B     USER0090\nUSER0100 DS    0H\n         MVC   0(4,R1),USER_NEXT              NEXT BLOCK ON CHAIN\n         ITRACE ID=USEROUT\n         LR    R1,R5                          COPY USERBLOK ADDRESS\n         ICM   R5,15,USER_NEXT                NEXT BLOCK\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=USERBLOKL\n         B     USER0120\nUSER0110 DS    0H\n         ICM   R5,15,USER_NEXT\nUSER0120 DS    0H\n         LTR   R5,R5                          NEXT BLOCK EXIST?\n         BNZ   USER0010                       YES\n         ITRACE ID=LOGDEQ\n         MVC   DXD_ENQ(DEQL),DEQI             INITIALIZE DEQ PARM LIST\n         DEQ   MF=(E,DXD_ENQ)                 DEQ THE USER CHAIN\n         ITRACE ID=USERDONE\n         B     PROC0070\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Error(s) detected in the start-up parameters or the                *\n*  termination ECB has been POSTed.                                   *\n*                                                                     *\n*  SHUTDOWN OCCURS IN 4 PHASES                                        *\n*    --------------------------------------------------------------   *\n*                                                                     *\n*                       Phase 1                                       *\n*                                                                     *\n*  Quiesce the LIBRARY-to-USERs activity                              *\n*                                                                     *\n*  Set the EOJ phase 1 indicator.                                     *\n*                                                                     *\n*  Terminate logged in users                                          *\n*  Terminate the VTAM and TCP/IP subtasks                             *\n*  Terminate the library OPEN/CLOSE subtask                           *\n*                                                                     *\n*    --------------------------------------------------------------   *\n*                                                                     *\n*                       Phase 2                                       *\n*  Set the EOJ phase 2 indicator.                                     *\n*  Post the changed source history subtask's \"work to do\" ECB and     *\n*  wait for the subtask to terminate.                                 *\n*  Post the library \"open/close\" \"work to do\" ECB and wait for the    *\n*  LSUB subtask to terminate.                                         *\n*                                                                     *\n*    --------------------------------------------------------------   *\n*                                                                     *\n*                       Phase 3                                       *\n*  Set the EOJ phase 3 indicator.                                     *\n*  Post the library \"allocation/de-allocation\" \"work to do\" ECB       *\n*  and wait for the DSUB subtask to terminate.                        *\n*  Shutdown the console communication subtask.                        *\n*                                                                     *\n*                                                                     *\n*  Print the log-on and library statistics.                           *\n*                                                                     *\n*                                                                     *\n*    --------------------------------------------------------------   *\n*                                                                     *\n*  Set the EOJ phase 4 indicator                                      *\n*  Shutdown the print subtask.                                        *\n*  Post the print subtask's \"work to do\" ECB and wait for the         *\n*  subtask to terminate.                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTERM0000 DS    0H\n         ITRACE ID=TERM\n         MVC   PRTMSGID(MSG80L),MSG80\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         ITRACE ID=EOJ1\n         OI    COMM_EOJ_PHASE,$EOJ1           SIGNAL SHUTDOWN..\n         MVC   PRTMSGID(MSG81L),MSG81\n         BAL   R8,PRT0000                     PRINT MESSAGE\n* ------------------------------------------------------------------- *\n*                Terminate subtasks for logged-in users.              *\n* ------------------------------------------------------------------- *\nTERM0010 DS    0H\n         ITRACE ID=TERMUSER\n         ICM   R5,15,COMM_USER_CHAIN          FIRST USER BLOCK\n         BZ    TERM0040                       NO USERS LOGGED IN\n         XC    COMM_USER_CHAIN,COMM_USER_CHAIN\nTERM0020 DS    0H\n         ITRACE ID=NOTFYUSR,                                           +\n               DATA1=USER_USER_ID\n         POST  USER_WORK_ECB                  WAKE UP USER'S SUBTASK\n         WAIT  ECB=USER_TERMINATION_ECB\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_REM_USER\n         MVC   LIB_FUNCTION_LIB_NAME,USER_LIBRARY\n         ST    R5,LIB_FUNCTION_USER           SET USER BLOCK ADDRESS\n         BAL   R8,LIB0000\nTERM0030 DS    0H\n         ITRACE ID=DTCHUSER,                                           +\n               DATA1=USER_TCB\n         DETACH USER_TCB                      DETACH THE SUBTASK\n         LR    R1,R5                          COPY STORAGE ADDRESS\n         L     R5,USER_NEXT                   NEXT BLOCK ON CHAIN\n         ITRACE ID=FREEUSER,                                           +\n               DATA1=R1,                                               +\n               DATA2=R5\n         FREEMAIN RU,                         FREEMAIN THE USERBLOK    +\n               A=(R1),                                                 +\n               LV=USERBLOKL\n         ITRACE ID=USEROUT\n         LTR   R5,R5                          ANOTHER USER ON CHAIN?\n         BNZ   TERM0020                       YES\n* ------------------------------------------------------------------- *\n*                Terminate the VTAM subtask                           *\n* ------------------------------------------------------------------- *\nTERM0040 DS    0H\n         OC    COMM_VTAM_TCB,COMM_VTAM_TCB    VTAM SUBTASK ATTACHED?\n         BZ    TERM0050                       NO\n         ITRACE ID=TERMVTAM\n         POST  COMM_VTAM_WORK_ECB             POST VTAM SUBTASK ECB\n         WAIT  ECB=COMM_VTAM_TERM_ECB         WAIT FOR SUBTASK\n         DETACH COMM_VTAM_TCB                 DETACH THE SUBTASK\n* ------------------------------------------------------------------- *\n*                Terminate the TCP/IP subtask                         *\n* ------------------------------------------------------------------- *\nTERM0050 DS    0H\n         OC    COMM_TCPIP_TCB,COMM_TCPIP_TCB  TCP/IP SUBTASK ATTACHED?\n         BZ    TERM0060                       NO\n         ITRACE ID=TERMIP\n         POST  COMM_TCPIP_WORK_ECB            POST TCP/IP SUBTASK ECB\n         WAIT  ECB=COMM_TCPIP_TERM_ECB        WAIT FOR SUBTASK\n         DETACH COMM_TCPIP_TCB                DETACH THE SUBTASK\n* ------------------------------------------------------------------- *\n*                Close the library ACB(s)                             *\n* ------------------------------------------------------------------- *\nTERM0060 DS    0H\n         OC    COMM_LSUB_TCB,COMM_LSUB_TCB    LIBRARY SUBTASK ATTACHED?\n         BZ    TERM0070                       NO\n         ITRACE ID=CLOSELIB\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSE\n         MVC   LIB_FUNCTION_LIB_NAME,ALL\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         BAL   R8,LIB0000\n* ------------------------------------------------------------------- *\n*                START OF PHASE 2 OF SHUTDOWN                         *\n* ------------------------------------------------------------------- *\nTERM0070 DS    0H\n         ITRACE ID=EOJ2\n         OI    COMM_EOJ_PHASE,$EOJ2           SHUTDOWN PHASE 2\n         MVC   PRTMSGID(MSG83L),MSG83\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n* ------------------------------------------------------------------- *\n*               Terminate the changed source history subtask          *\n* ------------------------------------------------------------------- *\n         OC    COMM_HSUB_TCB,COMM_HSUB_TCB    HISTORY SUBTASK ATTACHED?\n         BZ    TERM0090                       NO\n         ITRACE ID=CLSEHIST\n         POST  COMM_HSUB_WORK_ECB             POST HISTORY SUBTASK ECB\n         WAIT  ECB=COMM_HSUB_TERM_ECB         WAIT FOR SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB\n         DETACH COMM_HSUB_TCB                 DETACH THE SUBTASK\n         ITRACE ID=COMM_HSUB_TERM_ECB,        SUBTASK TERMINATED       +\n               DATA1=COMM_HSUB_TERM_ECB       .. ECB'S STATUS\n         MVC   PRTMSGID(MSG84L),MSG84\n         UNPK  PRTMSGID+(MSG84ECB-MSG84)(9),COMM_HSUB_TERM_ECB(5)\n         TR    PRTMSGID+(MSG84ECB-MSG84)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG84ECB-MSG84)+8,C' '\n         OC    COMM_HSUB_TERM_ECB+1(3),COMM_HSUB_TERM_ECB+1\n         BZ    TERM0080\n         MVC   PRTMSGID+(MSG84AB-MSG84)(L'MSG84AB),ABENDED\nTERM0080 DS    0H\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         OC    COMM_HSUB_TERM_ECB+1(3),COMM_HSUB_TERM_ECB+1\n         BZ    TERM0090\n         BAL   R8,SNAP0000                    TAKE A SNAP DUMP\n* ------------------------------------------------------------------- *\n*               Terminate the Library OPEN/CLOSE subtask              *\n* ------------------------------------------------------------------- *\nTERM0090 DS    0H\n         OC    COMM_LSUB_TCB,COMM_LSUB_TCB    OPEN/CLOSE TASK PRESENT?\n         BZ    TERM0110                       NO\n         ITRACE ID=LSUBWAIT\n         POST  COMM_LSUB_WORK_ECB             POST OPEN/CLOSE TASK ECB\n         WAIT  ECB=COMM_LSUB_TERM_ECB         WAIT FOR TASK TO TERM\n         DETACH COMM_LSUB_TCB                 DETACH OPEN/CLOSE SUBTASK\n         ITRACE ID=COMM_LSUB_TERM_ECB,        TASK TERMINATED          +\n               DATA1=COMM_LSUB_TERM_ECB       .. ECB'S STATUS\n         MVC   PRTMSGID(MSG85L),MSG85\n         UNPK  PRTMSGID+(MSG85ECB-MSG85)(9),COMM_LSUB_TERM_ECB(5)\n         TR    PRTMSGID+(MSG85ECB-MSG85)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG85ECB-MSG85)+8,C' '\n         OC    COMM_LSUB_TERM_ECB+1(3),COMM_LSUB_TERM_ECB+1\n         BZ    TERM0100\n         MVC   PRTMSGID+(MSG85AB-MSG85)(L'MSG85AB),ABENDED\nTERM0100 DS    0H\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         OC    COMM_LSUB_TERM_ECB+1(3),COMM_LSUB_TERM_ECB+1\n         BZ    TERM0110\n         BAL   R8,SNAP0000                    TAKE A SNAP DUMP\n* ------------------------------------------------------------------- *\n*                Start Phase 3 of shutdown                            *\n* ------------------------------------------------------------------- *\nTERM0110 DS    0H\n         ITRACE ID=EOJ3\n         MVC   PRTMSGID(MSG86L),MSG86\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         OI    COMM_EOJ_PHASE,$EOJ3           SHUTDOWN PHASE 3\n         OC    COMM_DSUB_TCB,COMM_DSUB_TCB    DAIR SUBTASK PRESENT?\n         BZ    TERM0130                       NO\n         ITRACE ID=DAIRWAIT\n         POST  COMM_DSUB_WORK_ECB             POST THE DAIR SUBTASK ECB\n         WAIT  ECB=COMM_DSUB_TERM_ECB         WAIT FOR TASK TERMINATE\n         DETACH COMM_DSUB_TCB                 DETACH DAIR SUBTASK\n         ITRACE ID=DSUBTERM,                  DAIR TASK HAS TERMINATED +\n               DATA1=COMM_DSUB_TERM_ECB       .. ECB'S STATUS\n         MVC   PRTMSGID(MSG87L),MSG87\n         UNPK  PRTMSGID+(MSG87ECB-MSG87)(9),COMM_DSUB_TERM_ECB(5)\n         TR    PRTMSGID+(MSG87ECB-MSG87)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG87ECB-MSG87)+8,C' '\n         OC    COMM_DSUB_TERM_ECB+1(3),COMM_DSUB_TERM_ECB+1\n         BZ    TERM0120\n         MVC   PRTMSGID+(MSG87AB-MSG87)(L'MSG87AB),ABENDED\nTERM0120 DS    0H\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         OC    COMM_DSUB_TERM_ECB+1(3),COMM_DSUB_TERM_ECB+1\n         BZ    TERM0130\n         BAL   R8,SNAP0000                    TAKE A SNAP DUMP\nTERM0130 DS    0H\n         OC    COMM_CSUB_TCB,COMM_CSUB_TCB    CONSOLE SUBTASK PRESENT?\n         BZ    TERM0150                       NO\n         ITRACE ID=CONSWAIT\n         POST  COMM_CSUB_WORK_ECB             POST CONSOLE TASK ECB\n         WAIT  ECB=COMM_CSUB_TERM_ECB         WAIT FOR TASK TERMINATE\n         DETACH COMM_CSUB_TCB                 DETACH CONSOLE SUBTASK\n         ITRACE ID=CSUBTERM,                  SUBTASK TERMINATED       +\n               DATA1=COMM_CSUB_TERM_ECB       .. ECB'S STATUS\n         MVC   PRTMSGID(MSG88L),MSG88\n         UNPK  PRTMSGID+(MSG88ECB-MSG88)(9),COMM_CSUB_TERM_ECB(5)\n         TR    PRTMSGID+(MSG88ECB-MSG88)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG88ECB-MSG88)+8,C' '\n         OC    COMM_CSUB_TERM_ECB+1(3),COMM_CSUB_TERM_ECB+1\n         BZ    TERM0140\n         MVC   PRTMSGID+(MSG88AB-MSG88)(L'MSG88AB),ABENDED\nTERM0140 DS    0H\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         OC    COMM_CSUB_TERM_ECB+1(3),COMM_CSUB_TERM_ECB+1\n         BZ    TERM0150\n         BAL   R8,SNAP0000                    TAKE A SNAP DUMP\n* ------------------------------------------------------------------- *\n*                Print statistics                                     *\n* ------------------------------------------------------------------- *\nTERM0150 DS    0H\n         MVI   PRTCMD,$PRTASIS                CHANGE PRINT TO 'AS-IS'\n         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBBLOK\n         BZ    TERM0170\n         USING LIBBLOK,R4                     DEFINE BASE\n         MVC   PRTMSGID(MSG89L),MSG89\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\nTERM0160 DS    0H\n         MVC   PRTMSGID(MSG90L),MSG90\n         MVC   PRTMSGID+(MSG90LIB-MSG90)(L'MSG90LIB),LIB_NAME\n         L     R1,LIB_READS                   NUMBER OF READS\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG90RDS-MSG90)(L'MSG90RDS),DXD_DWORD+3\n         L     R1,LIB_WRITES                  NUMBER OF WRITES\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG90WTS-MSG90)(L'MSG90WTS),DXD_DWORD+3\n         L     R1,LIB_NEW                     NUMBER OF NEW MEMBERS\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG90NEW-MSG90)(L'MSG90NEW),DXD_DWORD+3\n         L     R1,LIB_UPDATE                  NUMBER OF UPDATED MEMBERS\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG90UPD-MSG90)(L'MSG90UPD),DXD_DWORD+3\n         L     R1,LIB_DELETE                  NUMBER OF DELETED MEMBERS\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG90DEL-MSG90)(L'MSG90DEL),DXD_DWORD+3\n         L     R1,LIB_CHECK_IN                NBR OF MEMBER CHECK INS\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG90IN-MSG90)(L'MSG90IN),DXD_DWORD+3\n         L     R1,LIB_CHECK_OUT               NUMBER OF CHECK OUTS\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG90OUT-MSG90)(L'MSG90OUT),DXD_DWORD+3\n         L     R1,LIB_VIEW                    NUMBER OF MEMBER VIEWS\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG90VW-MSG90)(L'MSG90VW),DXD_DWORD+3\n         BAL   R8,PRT0000                     PRINT\n         LR    R1,R4                          COPY LIBBLOK ADDRESS\n         ICM   R4,15,LIB_NEXT                 NEXT LIBRARY\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=LIBBLOKL\n         LTR   R4,R4\n         BNZ   TERM0160\nTERM0170 DS    0H\n         MVC   PRTMSGID(MSG91L),MSG91\n         L     R1,COMM_VTAM_LOGINS            NUMBER OF VTAM LOG-INS\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG91LOG-MSG91)(L'MSG91LOG),DXD_DWORD+3\n         BAL   R8,PRT0000                     PRINT\n         MVC   PRTMSGID(MSG92L),MSG92\n         L     R1,COMM_TCPIP_LOGINS           NUMBER OF VTAM LOG-INS\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG92LOG-MSG92)(L'MSG92LOG),DXD_DWORD+3\n         BAL   R8,PRT0000                     PRINT\n         DROP  R4\n         ICM   R4,15,COMMXUSR                 FIRST EXTERNAL USER BLOCK\n         BZ    TERM0190\n         USING XUSRBLOK,R4                    DEFINE BASE\nTERM0180 DS    0H\n         LR    R1,R4                          COPY ADDRESS\n         ICM   R4,15,XUSRNEXT                 NEXT BLOCK'S ADDRESS\n         FREEMAIN RU,                         FREE THE XUSER BLOCK     +\n               A=(R1),                                                 +\n               LV=XUSRL\n         LTR   R4,R4\n         BNZ   TERM0180\n* ------------------------------------------------------------------- *\n*                Start phase 4 of shutdown                            *\n* ------------------------------------------------------------------- *\nTERM0190 DS    0H\n         MVC   PRTMSGID(MSG99L),MSG99\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         ITRACE ID=EOJ4\n         OI    COMM_EOJ_PHASE,$EOJ4           SHUTDOWN PHASE 3\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         WAIT  1,ECB=COMM_PRINT_TERM_ECB      WAIT FOR TASK TERMINATION\n         DETACH COMM_PRINT_TCB                DETACH CONSOLE SUBTASK\n         ITRACE ID=COMM_PRINT_TERM_ECB,       CONSOLE TASK TERMINATED  +\n               DATA1=COMM_PRINT_TERM_ECB      .. ECB'S STATUS\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ATCHFAIL                   SUBTASK ATTACH FAILED\n         STH   R15,DXD_RC                     SAVE RETURN CODE\n         MVC   PRTMSGID(MSG15L),MSG15\n         MVC   PRTMSGID+(MSG15T-MSG15)(L'MSG15),DXD_TASK\n         UNPK  PRTMSGID+(MSG15R-MSG15)(5),DXD_RC(3)\n         TR    PRTMSGID+(MSG15R-MSG15)(L'MSG15R),HEXCHAR\n         MVI   PRTMSGID+(MSG15R-MSG15)+4,C' '\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         ABEND 2,DUMP,,USER\nERR0020  DS    0H\n         ITRACE ID=DTCHFAIL                   SUBTASK DETACH FAILED\n         STH   R15,DXD_RC                     SAVE RETURN CODE\n         MVC   PRTMSGID(MSG16L),MSG16\n         MVC   PRTMSGID+(MSG16T-MSG16)(L'MSG16T),DXD_TASK\n         UNPK  PRTMSGID+(MSG16R-MSG16)(5),DXD_RC(3)\n         TR    PRTMSGID+(MSG16R-MSG16)(L'MSG16R),HEXCHAR\n         MVI   PRTMSGID+(MSG16R-MSG16)+4,C' '\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         ABEND 3,DUMP,,USER                   TIME TO FIX THIS THING\nERR0030  DS    0H\n         ITRACE ID=ACBOPENF                   ACB OPEN FAILED\n         STH   R15,DXD_RC                     SAVE RETURN CODE\n         MVC   PRTMSGID(MSG17L),MSG17\n         UNPK  PRTMSGID+(MSG17R-MSG17)(5),DXD_RC(3)\n         TR    PRTMSGID+(MSG17R-MSG17)(L'MSG17R),HEXCHAR\n         MVI   PRTMSGID+(MSG17R-MSG17)+4,C' '\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         ABEND 4,DUMP,,USER\nERR0040  DS    0H\n         ITRACE ID=NOUSERS                    ERROR BUILDING WAIT LIST\n         ABEND 10,DUMP,,USER\nERR0050  DS    0H\n         ITRACE ID=NOUSER                     USERBLOK NOT FOUND\n         ABEND 5,DUMP,,USER\nERR0060  DS    0H\n         ITRACE ID=NOLIBS                     NO LIBRARIES\n         ABEND 6,DUMP,,USER\nERR0070  DS    0H\n         ITRACE ID=NO_NET                     NO APPLID OR PORT NUMBER\n         ABEND 7,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB0000  DS    0H\n         ITRACE ID=LIBFUNC,                                            +\n               DATA1=LIB_FUNCTION,                                     +\n               DATA2=LIB_FUNCTION_LIB_NAME\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK\nLIB0010  DS    0H\n         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN\n         BC    4,LIB0010                      TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB             WAKE UP OPEN/CLOSE TASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE\n         ST    R2,PRTNEXT-PRTBLOK(R1)                         '\n         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         BR    R8                             COMPLETE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSNAP0000 DS    0H\n         TM    DXD_SNAP,$SNAPPED              ALREADY SNAP DUMPED?\n         BOR   R8                             YES\n         LOAD  EP=LIBSSNAP                    LOAD SNAP DUMPER\n         LR    R15,R0                         COPY ENTRY POINT\n         BALR  R14,R15                        LINK TO SNAP DUMP\n         DELETE EP=LIBSSNAP                   DELETE SNAP DUMP\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         L     R0,TRSIZE                      TRACE TABLE SIZE\n         L     R1,TRADDR                      TABLE STORAGE ADDRESS\n         FREEMAIN RU,                         FREEMAIN TRACE TABLE     +\n               A=(R1),                                                 +\n               LV=(R0)\n         L     R4,COMMDXDA                    SAVE WORK AREA ADDRESS\n         DELETE EP=LIBSCOMM                   DELETE COMMON MODULE\n         L     R0,DXDSIZE                     WORK AREA STORAGE SIZE\n         L     R13,4(R13)                     RESTORE SAVE AREA\n         FREEMAIN RU,                         FREEMAIN WORK AREA       +\n               A=(R4),                                                 +\n               LV=(R0)\n         LM    R14,R12,12(R13)                RESTORES REGISTERS\n         SR    R15,R15                        CLEAR REGISTER\n         BR    R14                            EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDSMAIN)                    DISP TO WORK AREA\nDXDSIZE  CXD                                  WORK AREA TOTAL SIZE\nNEVER    DC    A(0)\nv_LIBATTN  DC  V(LIBSATTN)                    VTAM ATTENTION EXIT\nV_LIBLERAD DC  V(LIBLERAD)                    VTAM LERAD EXIT\n\nHEXCHAR  EQU   *-C'0'\n         DC    C'0123456789ABCDEF'\n\nPRTID    DC    CL8'PRTBLOK'\nLIBID    DC    CL8'LIBFUNC'\nALL      DC    CL8'ALL'\nABENDED  DC    CL8'abended'\nCID      DC    CL4'CID='\nDETACHED DC    CL8'detached'\nIP       DC    CL4' IP='\n\nDDTBLE   DS    0C\n         DC    CL8'LIBIN',AL1($DD_REQUIRED),AL1($DD_LIBIN)\n         DC    CL8'LIBPRT',AL1($DD_REQUIRED),AL1($DD_LIBPRT)\nHISTDD   DC    CL8'LIBHIST',AL1(0),AL1($DD_LIBHIST)\n         DC    X'FF'\n\nUSER     DC    CL8'USER'\nLIBSCSUB DC    C'LIBSCSUB'\nLIBSDSUB DC    C'LIBSDSUB'\nLIBSLSUB DC    C'LIBSLSUB'\nLIBSHSUB DC    C'LIBSHSUB'\nCSUBDSC  DC    C'console communication'\nDSUBDSC  DC    C'dynamic allocation'\nLSUBDSC  DC    C'library open/close'\nHSUBDSC  DC    C'changed source history'\nPRINT    DC    CL8'PRINT'\nVTAM     DC    CL8'VTAM'\nTCPIP    DC    CL8'TCPIP'\nWTO01    WTO   'LIBSMAIN01E * LIBPRT  DD statement is not present',MF=L\nWTO01L   EQU   *-WTO01\nMSG01    DS    0C\n         DC    CL11'LIBSMAIN01I'\n         DC    C'PRINT subtask attached'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    CL11'LIBSMAIN02I'\n         DC    C'Initialization starting'\nMSG02L   EQU   *-MSG02\nMSG03    DS    0C\n         DC    CL11'LIBSMAIN03E'\n         DC    C'Required DD '\nMSG03D   DC    CL8' '\n         DC    C' is not present'\nMSG03L   EQU   *-MSG03\nMSG04    DS    0C\n         DC    CL11'LIBSMAIN04E'\n         DC    C'Add required DD(s) to your JCL and re-submit'\nMSG04L   EQU   *-MSG04\nMSG05    DC    C'LIBSMAIN05I '\nMSG05TSK DC    CL8' '\n         DC    C' ('\nMSG05DSC DC    CL35' '\n         DC    C')'\n         DC    C' attached'\nMSG05L   EQU   *-MSG05\n\nWTO06    WTO   'LIBSMAIN06I LIBRARY STC initialization complete',MF=L\nWTO06L   EQU   *-WTO06\n\nMSG07    DC    C'LIBSMAIN07I Error(s) have been detected. Aborting.'\nMSG07L   EQU   *-MSG07\n\nMSG13    DS    0C\n         DC    CL11'LIBSMAIN13I'\n         DC    C'Subtask attached for user with '\nMSG13TYP DC    CL4' '\nMSG13ADR DC    CL15' '\n         DC    C' '\nMSG13L   EQU   *-MSG13\nMSG14    DS    0C\n         DC    CL11'LIBSMAIN14I'\n         DC    C'Subtask '\nMSG14END DC    CL8' '\n         DC    C' for user '\nMSG14USR DC    CL8' '\n         DC    C', '\nMSG14TYP DC    CL4' '\nMSG14ADR DC    CL15' '\n         DC    C' '\nMSG14ECB DC    CL8' '\n         DC    C' '\nMSG14STA DC    CL2' '\n         DC    C' '\nMSG14L   EQU   *-MSG14\nMSG15    DS    0C\n         DC    CL11'LIBSMAIN15E'\n         DC    C'ATTACH failed for '\nMSG15T   DC    CL8' '\n         DC    C'  RC='\nMSG15R   DC    CL5' '\n         DC    C' '\nMSG15L   EQU   *-MSG15\nMSG16    DS    0C\n         DC    CL11'LIBSMAIN16E'\n         DC    C'DETACH failed for '\nMSG16T   DC    CL8' '\n         DC    C'  RC='\nMSG16R   DC    CL5' '\n         DC    C' '\nMSG16L   EQU   *-MSG16\nMSG17    DS    0C\n         DC    CL11'LIBSMAIN17E'\n         DC    C'ACB open failed R15='\nMSG17R   DC    CL5' '\n         DC    C' '\nMSG17L   EQU   *-MSG17\nMSG80    DS    0C\n         DC    CL11'LIBSMAIN80I'\n         DC    C'Termination phase 1 beginning.'\nMSG80L   EQU   *-MSG80\nMSG81    DS    0C\n         DC    CL11'LIBSMAIN81I'\n         DC    C'Terminating logged in users.'\nMSG81L   EQU   *-MSG81\nMSG82    DS    0C\n         DC    CL11'LIBSMAIN82I'\n         DC    C'VTAM ACB has been closed.'\nMSG82L   EQU   *-MSG82\nMSG83    DS    0C\n         DC    CL11'LIBSMAIN83I'\n         DC    C'Termination phase 2 beginning.'\nMSG83L   EQU   *-MSG83\nMSG84    DS    0C\n         DC    CL11'LIBSMAIN84I'\n         DC    C'Changed source history subtask terminated, ECB='\nMSG84ECB DC    CL8' '\n         DC    C' '\nMSG84AB  DC    CL7' '\nMSG84L   EQU   *-MSG84\nMSG85    DS    0C\n         DC    CL11'LIBSMAIN85I'\n         DC    C'Library OPEN/CLOSE subtask terminated, ECB='\nMSG85ECB DC    CL8' '\n         DC    C' '\nMSG85AB  DC    CL7' '\nMSG85L   EQU   *-MSG85\nMSG86    DS    0C\n         DC    CL11'LIBSMAIN86I'\n         DC    C'Termination phase 3 beginning.'\nMSG86L   EQU   *-MSG86\nMSG87    DS    0C\n         DC    CL11'LIBSMAIN87I'\n         DC    C'Dynamic allocation/deallocation terminated, ECB='\nMSG87ECB DC    CL8' '\n         DC    C' '\nMSG87AB  DC    CL7' '\nMSG87L   EQU   *-MSG87\nMSG88    DS    0C\n         DC    CL11'LIBSMAIN88I'\n         DC    C'Console communication subtask terminated, ECB='\nMSG88ECB DC    CL8' '\n         DC    C' '\nMSG88AB  DC    CL7' '\nMSG88L   EQU   *-MSG88\nMSG89    DS    0C\n         DC    CL11'LIBSMAIN89I'\n         DC    C'Library statistics          Reads      Writes         +\n               New     Updated     Deleted  Check-outs   Check_ins     +\n                  View'\nMSG89L   EQU   *-MSG89\nMSG90    DS    0C\n         DC    CL11'LIBSMAIN90I'\nMSG90LIB DC    CL8' '\n         DC    C'             '\nMSG90RDS DC    X'402020206B2020206B202120'\nMSG90WTS DC    X'402020206B2020206B202120'\nMSG90NEW DC    X'402020206B2020206B202120'\nMSG90UPD DC    X'402020206B2020206B202120'\nMSG90DEL DC    X'402020206B2020206B202120'\nMSG90OUT DC    X'402020206B2020206B202120'\nMSG90IN  DC    X'402020206B2020206B202120'\nMSG90VW  DC    X'402020206B2020206B202120'\nMSG90L   EQU   *-MSG90\nMSG91    DS    0C\n         DC    CL11'LIBSMAIN91I'\n         DC    C'VTAM log-ins:  '\nMSG91LOG DC    X'402020206B2020206B202120'\nMSG91L   EQU   *-MSG91\nMSG92    DS    0C\n         DC    CL11'LIBSMAIN92I'\n         DC    C'TCP/IP log-ins:'\nMSG92LOG DC    X'402020206B2020206B202120'\nMSG92L   EQU   *-MSG92\nMSG99    DS    0C\n         DC    CL11'LIBSMAIN99I'\n         DC    C'Termination complete.'\nMSG99L   EQU   *-MSG99\nATTCHI   ATTACH EP=LIBSCONS,        ATTACH LIST FORM                   +\n               ECB=*,               .. TERMINATION ECB'S ADDRESS       +\n               PURGE=QUIESCE,       .. FINISH UP I/O IN PROGRESS       +\n               SF=L                 .. LIST FORM\nATTCHL   EQU   *-ATTCHI\nENQI     ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L\nENQL     EQU   *-ENQI\nDEQI     ENQ   (QNAME,RNAME,E,,STEP),MF=L\nDEQL     EQU   *-DEQI\nQNAME    DC    CL8'LIB'\nRNAME    DC    CL8'COMMUSER'\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                A                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSMAIN        DSECT\n                LIBSAVE DSECT=NO\nDXD_DWORD       DS    D\nDXD_ATTACH_PARM DS    A              ATTACH PARM\nDXD_ATTACH      DS    (ATTCHL)X      RESERVE ROOM FOR ATTACH LIST FORM\nDXD_ENQ         DS    0F,(ENQL)X\nDXD_DEQ         DS    0F,(DEQL)X\n\nDXD_WAIT        DS    A\nDXD_WAIT_SIZE   DS    F\n\nDXD_RC          DS    H              RETURN CODE FROM SYSTEM MACRO(S)\n\nDXD_TASK        DS    CL8            SUBTASK BEING ATTACH/DETACHED\n\nDXD_DD          DS    X              DD'S PRESENT\n$DD_LIBIN       EQU   X'80'          .. LIBIN PRESENT\n$DD_LIBPRT      EQU   X'40'          .. LIBPRT PRESENT\n$DD_LIBHIST     EQU   X'20'          .. LIBHIST PRESENT\n\nDXD_SNAP        DS    X\n$SNAPPED        EQU   X'80'\n                PRTBLOK  DSECT=NO\n                LIBFUNC  DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     OPTDSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         XUSRBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDD_DSECT      DSECT\nDD_NAME       DS    CL8\nDD_FLAG       DS    X\n$DD_REQUIRED  EQU   X'80'\nDD_ID         DS    X\nDD_DSECT_L    EQU   *-DD_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGEXLST AM=VTAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   LIST=NO\n         IKJTCB   LIST=NO\n         IEFTIOT1\n         COPY     REGEQU\n         END      LIBSMAIN\n./ ADD NAME=LIBSPARM 0100-09250-09250-0919-00755-00755-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: LIBSPARM                                              *\n*                                                                     *\n*   This module interprets the control statements entered via LIBIN.  *\n*   Since the control statements are only read once, this module is   *\n*   linked separately.  LIBSMAIN issues a LOAD, then links to this,   *\n*   and then DELETEs it.  This frees up the storage that would        *\n*   otherwise be wasted by having code that is only used at start-up. *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBSPARM CSECT\nLIBSPARM AMODE 31\nLIBSPARM RMODE ANY\n         USING LIBSPARM,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE CALLER'S REGISTERS\n         LR    R12,R15                        SET BASE\n         B     PARM0000\n         DC    CL8'LIBSPARM'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nPARM0000 DS    0H\n         GETMAIN RU,                          STORAGE FOR WORK AREA    +\n               LV=WORKAREA_L,                 .. AMOUNT REQUIRED       +\n               LOC=BELOW                      .. FROM BELOW THE LINE\n         ST    R1,8(R13)                      CHAIN TO PREVIOUS\n         ST    R13,4(R1)                      CHAIN PREVIOUS TO OURS\n         LR    R13,R1                         SET SAVE AREA ADDRESS\n         USING WORKAREA,R13\n         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK\n         MVI   PRTCC,C' '                     INITIALIZE PRINT\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVC   WORKOCPL(OPENL),OPENI          COPY LIST FORM\n         MVC   WORKDCB(DCBL),DCBI             INITIAILZE\n         OPEN  (WORKDCB,INPUT),                                        +\n               MODE=31,                                                +\n               MF=(E,WORKOCPL)\nPARM0010 DS    0H\n         ITRACE ID=READCARD\n         GET   WORKDCB,CARDDATA               READ A CONTROL STATEMENT\n         MVC   PRTMSGID(MSG01L),MSG01\n         MVC   PRTMSGID+(MSG01D-MSG01)(L'MSG01D),CARDDATA\n         MVI   PRTCMD,$PRTASIS                PRINT 'AS IS'\n         BAL   R9,PRT0000                     PRINT\n         CLI   CARDDATA,C'*'                  COMMENT?\n         BE    PARM0010                       YES\n         CLC   ABNDSTMT,CARDDATA              ABEND STATEMENT?\n         BE    ABND0000                       YES\n         CLC   APPLSTMT,CARDDATA              APPLID STATEMENT?\n         BE    APPL0000                       YES\n         CLC   LIBSTMT,CARDDATA               LIBRARY STATEMENT?\n         BE    LIB0000                        YES\n         CLC   PORTSTMT,CARDDATA              PORT NUMBER STATEMENT?\n         BE    PORT0000                       YES\n         CLC   SNPCSTMT,CARDDATA              SNAP SYSOUT STATEMENT?\n         BE    SNPC0000                       YES\n         CLC   SYSNSTMT,CARDDATA              SYSTEM NAME STATEMENT?\n         BE    SYSN0000                       YES\n         CLC   XUSRSTMT,CARDDATA              EXTERNAL USER STATEMENT?\n         BE    XUSR0000                       YES\n         ITRACE ID=INVALID                    INVALID STATEMENT\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG02L),MSG02\n         BAL   R9,PRT0000                     PRINT ERROR MESSAGE\n         B     PARM0010                       READ NEXT STATEMENT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nPARM0100 DS    0H\n         ITRACE ID=EOF\n         MVC   WORKOCPL(CLOSEL),CLOSEI\n         CLOSE WORKDCB,                       CLOSE THE DCB            +\n               MODE=31,                                                +\n               MF=(E,WORKOCPL)\n         TM    COMM_FLAGS,$ABORT              ABORT FLAG SET?\n         BO    EXIT0000                       YES.. EXIT NOW\n         CLC   COMM_APPL_NAME,COMM_BLANKS     APPL NAME BLANK?\n         BNE   EXIT0000                       NO\n         OC    COMM_PORT,COMM_PORT            PORT NUMBER ZERO?\n         BNZ   EXIT0000                       YES\n         ITRACE ID=NO_NET\n         MVC   PRTMSGID(MSG03L),MSG03\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     EXIT0000                       AND EXIT\n*---------------------------------------------------------------------*\n*        Process ABEND statement                                      *\n*---------------------------------------------------------------------*\nABND0000 DS    0H\n         ITRACE ID=SETABEND                   ABEND STATEMENT PROCESSED\n         OI    COMM_FLAGS,$ABEND              SET ABEND FLAG\n         B     PARM0010                       READ NEXT STATEMENT\n*---------------------------------------------------------------------*\n*        Process APPLID statement                                     *\n*---------------------------------------------------------------------*\nAPPL0000 DS    0H\n         ITRACE ID=APPLID                     APPLID BEING PROCESSED\n         CLC   COMM_APPL_NAME,COMM_BLANKS     APPLID ALREADY SPECIFIED?\n         BNE   APPL0030                       YES\n         LA    R1,CARDDATA+L'APPLSTMT         APPL NAME\n         ST    R1,PARSEIN                     SET INPUT DATA ADDRESS\n         LA    R1,72-L'APPLSTMT               MAXIMUM INPUT LENGTH\n         STH   R1,PARSEIL                     SET INPUT LENGTH\n         LA    R1,8                           MAXIMUM CHARACTERS\n         STH   R1,PARSEOL                     MAXIMUM OUTPUT LENGTH\n         BAL   R9,PARSE000                    LINK TO PARSE\n         OC    PARSEOL,PARSEOL                NAME LENGTH ZERO?\n         BZ    APPL0010                       YES\n         CLI   PARSEDLM,C' '                  STOPPED ON A BLANK?\n         BNE   APPL0020                       NO.. NAME IS TOO LONG\n         ITRACE ID=GOODAPPL                   APPL LENGTH IS OK\n         MVC   COMM_APPL_NAME,PARSEOUT        SAVE APPL NAME\n         B     PARM0010                       READ NEXT STATEMENT\nAPPL0010 DS    0H\n         ITRACE ID=NOAPPL                     APPL NAME OMITTED\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG04L),MSG04         APPL NAME OMITTED\n         BAL   R9,PRT0000                     PRINT\n         B     PARM0010                       READ NEXT STATEMENT\nAPPL0020 DS    0H\n         ITRACE ID=LONGAPPL                   APPL NAME IS TOO LONG\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG05L),MSG05         APPL NAME IS TOO LONG\n         BAL   R9,PRT0000                     PRINT\n         B     PARM0010                       READ NEXT STATEMENT\nAPPL0030 DS    0H\n         ITRACE ID=DUPAPPL                    DUPLICATE APPL STATEMENT\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG06L),MSG06\n         BAL   R9,PRT0000                     PRINT\n         B     PARM0010                       READ NEXT STATEMENT\n*---------------------------------------------------------------------*\n*        PROCESS LIBRARY STATEMENT                                    *\n*---------------------------------------------------------------------*\nLIB0000  DS    0H\n         ITRACE ID=LIBRARY\n         MVI   WORKFLAG,0                     TURN OFF FLAGS\n         MVC   WORKLIB,COMM_BLANKS\n         MVC   WORKDSN,COMM_BLANKS\n         LA    R1,CARDDATA+L'LIBSTMT          FIRST CHAR OF NAME\n         ST    R1,PARSEIN                     PASS ADDR TO PARSER\n         LA    R1,72-L'LIBSTMT                INITIAL LENGTH\n         STH   R1,PARSEIL                     SET LENGTH\n         LA    R1,8                           MAXIMUM NAME LENGTH\n         STH   R1,PARSEOL                     PASS LENGTH TO PARSER\n         BAL   R9,PARSE000                    PARSE OFF LIBRARY NAME\n         OC    PARSEOL,PARSEOL                ANYTHING?\n         BZ    LIB0120                        NO\n         CLI   PARSEDLM,C' '                  STOP ON A BLANK?\n         BE    LIB0140                        YES\n         CLI   PARSEDLM,C','                  STOP ON A COMMA?\n         BNE   LIB0140                        NO\n         MVC   WORKLIB,PARSEOUT               SAVE LIBRARY NAME\n         LA    R1,8                           MAXIMUM LENGTH\n         STH   R1,PARSEOL                     SET LENGTH\n         BAL   R9,PARSE000                    PARSE OUT NEXT KEYWORD\n         OC    PARSEOL,PARSEOL                ANYTHING?\n         BZ    LIB0140                        NO\n         CLC   DSNKYWD,PARSEOUT               DSN KEYWORD?\n         BE    LIB0010                        YES\n         CLC   OPENKYWD,PARSEOUT              OPEN KEYWORD?\n         BE    LIB0020                        YES\n         ITRACE ID=BADKEY\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG21L),MSG21\n         BAL   R9,PRT0000                     PRINT\n         B     PARM0010                       READ NEXT STATEMENT\nLIB0010  DS    0H\n         L     R1,PARSEIN                     REMAINING DATA ADDRESS\n         MVC   WORKDSN,0(R1)                  COPY DATA SET NAME\n         B     LIB0050\nLIB0020  DS    0H\n         L     R1,PARSEIN                     REMAINING DATA ADDRESS\n         CLC   YES,0(R1)                      'YES'?\n         BE    LIB0030\n         CLC   NO,0(R1)                       'NO'\n         BE    LIB0040\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG20L),MSG20\n         BAL   R9,PRT0000                     PRINT\n         B     PARM0010                       READ NEXT STATEMENT\nLIB0030  DS    0H\n         OI    WORKFLAG,$AUTOOPN              OPEN AT START UP\n         B     LIB0050\nLIB0040  DS    0H\n         OI    WORKFLAG,$NOAUTO               DO NOT OPEN AT START UP\nLIB0050  DS    0H\n         ICM   R1,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         USING LIBBLOK,R1                     DEFINE BASE\n         BZ    LIB0070                        NO LIBRARIES YET\nLIB0060  DS    0H\n         CLC   LIB_NAME,WORKLIB               CORRECT LIBRARY?\n         BE    LIB0080                        YES\n         ICM   R1,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   LIB0060\nLIB0070  DS    0H\n         GETMAIN RU,                                                   +\n               LV=LIBBLOKL,                   .. SIZE                  +\n               LOC=ANY                        ..\n         ITRACE ID=NEWLIB,                                             +\n               RDATA1=R1\n         MVC   LIB_EYE,LIBID                  IDENTIFY THE BLOCK\n         MVC   LIB_NEXT,COMM_LIBRARY_CHAIN    CHAIN EXISTING BLOCK(S)\n         ST    R1,COMM_LIBRARY_CHAIN\n         MVC   LIB_NAME,WORKLIB               SET LIBRARY NAME\n         MVC   LIB_VSAM_DSN,COMM_BLANKS       CLEAR DATA SET NAME\n         MVC   LIB_DESCRIPTION,INIT_DESCRIPTION\n         MVC   LIB_ACB(ACBL),ACBI             COPY ACB\n         MVI   LIB_STATUS,0                   SET STATUS BITS TO ZERO\nLIB0080  DS    0H\n         CLC   WORKDSN,COMM_BLANKS            DATA SET NAME?\n         BNE   LIB0090                        YES\n         TM    WORKFLAG,$AUTOOPN              OPEN?\n         BO    LIB0100                        YES\n         TM    WORKFLAG,$NOAUTO               DON'T OPEN?\n         BO    LIB0110                        YES\n         B     PARM0010                       READ NEXT STATEMENT\nLIB0090  DS    0H\n         CLC   LIB_VSAM_DSN,COMM_BLANKS       NAME ALREADY GIVEN?\n         BNE   LIB0130                        YES\n         MVC   LIB_VSAM_DSN,WORKDSN           SET VSAM DSN\n         B     PARM0010\nLIB0100  DS    0H\n         OI    LIB_STATUS,$LIB_AUTO_OPEN\n         B     PARM0010                       READ NEXT STATEMENT\nLIB0110  DS    0H\n         NI    LIB_STATUS,255-$LIB_AUTO_OPEN\n         B     PARM0010                       READ NEXT STATEMENT\nLIB0120  DS    0H\n         ITRACE ID=NOKEYWD\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG17L),MSG17\n         BAL   R9,PRT0000                     PRINT\n         B     PARM0010                       READ NEXT STATEMENT\nLIB0130  DS    0H\n         ITRACE ID=DUPDSN\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG22L),MSG22\n         BAL   R9,PRT0000                     PRINT\n         B     PARM0010                       READ NEXT STATEMENT\nLIB0140  DS    0H\n         ITRACE ID=INCOMPLETE\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG24L),MSG24\n         BAL   R9,PRT0000                     PRINT\n         B     PARM0010                       READ NEXT STATEMENT\n*---------------------------------------------------------------------*\n*        PROCESS PORT NUMBER STATEMENT                                *\n*---------------------------------------------------------------------*\nPORT0000 DS    0H\n         ITRACE ID=PORT\n         OC    COMM_PORT,COMM_PORT            PORT ALREADY GIVEN?\n         BNZ   PORT0010                       YES\n         LA    R1,CARDDATA+L'PORTSTMT         FIRST DIGIT OF PORT\n         ST    R1,PARSEIN                     SET INPUT DATA ADDRESS\n         LA    R1,72-L'APPLSTMT               MAXIMUM INPUT LENGTH\n         STH   R1,PARSEIL                     SET INPUT LENGTH\n         LA    R1,8                           MAXIMUM IN NAME\n         STH   R1,PARSEOL                     SET MAXIMUM OUTPUT LENGTH\n         BAL   R9,PARSE000                    LINK TO PARSE\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,PARSEOL                   PORT NUMBER LENGTH\n         BZ    PORT0020                       NO NUMBER PRESENT\n         CH    R1,H15                         TOO MANY DIGITS?\n         BH    PORT0030                       YES\n         BCTR  R1,0                           ADJUST FOR PACK\n         EX    R1,PORTPACK                    PACK PORT NUMBER\n         CVB   R1,COMMDWRD                    CONVERT TO BINARY\n         CH    R1,H1024                       PORT 1024 OR LESS?\n         BL    PORT0040                       YES\n         CLM   R1,3,H65535                    TOO LARGE?\n         BH    PORT0050                       YES\n         STCM  R1,3,COMM_PORT                 SET PORT NUMBER\n         B     PARM0010                       READ NEXT PARM STATEMENT\nPORT0010 DS    0H\n         ITRACE ID=DUPPORT\n         MVC   PRTMSGID(MSG25L),MSG25\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nPORT0020 DS    0H\n         ITRACE ID=SHRTPORT\n         MVC   PRTMSGID(MSG26L),MSG26\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nPORT0030 DS    0H\n         ITRACE ID=LONGPORT\n         MVC   PRTMSGID(MSG27L),MSG27\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nPORT0040 DS    0H\n         ITRACE ID=LOWPORT\n         MVC   PRTMSGID(MSG28L),MSG28\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nPORT0050 DS    0H\n         ITRACE ID=HIGHPORT\n         MVC   PRTMSGID(MSG29L),MSG29\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nPORTPACK PACK  COMMDWRD,CARDDATA+L'PORTSTMT(0)\n*---------------------------------------------------------------------*\n*        PROCESS SNAPCLASS STATEMENT                                  *\n*---------------------------------------------------------------------*\nSNPC0000 DS    0H\n         ITRACE ID=SNAPCLAS                   SNAPSHOT SYSOUT CLASS\n         CLI   CARDDATA+L'SNPCSTMT,C' '       BLANK?\n         BE    SNPC0010                       YES.. INVALID\n         CLI   CARDDATA+L'SNPCSTMT+1,C' '     BLANK?\n         BNE   SNPC0020                       NO.. INVALID\n         MVC   COMM_SNAP_CLASS,CARDDATA+L'SNPCSTMT\n         B     PARM0010                       READ NEXT STATEMENT\nSNPC0010 DS    0H\n         ITRACE ID=SNAPBLNK\n         MVC   PRTMSGID(MSG07L),MSG07\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nSNPC0020 DS    0H\n         ITRACE ID=SNAPLONG\n         MVC   PRTMSGID(MSG08L),MSG08\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\n*---------------------------------------------------------------------*\n*        PROCESS SYSNAME STATEMENT                                    *\n*---------------------------------------------------------------------*\nSYSN0000 DS    0H\n         ITRACE ID=SYSNAME                    SYSTEM NAME\n         CLC   CARDDATA+L'SYSNSTMT(20),COMM_BLANKS\n         BE    SYSN0010                       YES\n         MVC   COMM_SYSTEM_NAME,CARDDATA+L'SYSNSTMT\n         B     PARM0010                       READ NEXT STATEMENT\nSYSN0010 DS    0H\n         MVC   PRTMSGID(MSG09L),MSG09\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\n*---------------------------------------------------------------------*\n*        PROCESS XUSER STATEMENT                                      *\n*---------------------------------------------------------------------*\nXUSR0000 DS    0H\n         ITRACE ID=XUSER                      XUSER STATEMENT PROCESSED\n         LA    R1,CARDDATA+L'XUSRSTMT\n         ST    R1,PARSEIN                     PARSE STARTING POINT\n         LA    R1,72-L'XUSRSTMT               MAX INPUT LENGTH\n         STH   R1,PARSEIL                     SET STARTING LENGTH\n         LA    R1,4                           MAXIMUM OUTPUT LENGTH\n         STH   R1,PARSEOL                     SET MAX OUTPUT LENGTH\n         BAL   R9,PARSE000                    LINK TO PARSE\n         OC    PARSEOL,PARSEOL                LENGTH ZERO?\n         BZ    XUSR0050                       YES\n         CLI   PARSEDLM,C' '                  STOP ON A BLANK?\n         BE    XUSR0070                       YES\n         CLI   PARSEDLM,C','                  STOP ON A COMMA?\n         BNE   XUSR0060                       NO\n         MVC   WORKWORK(4),PARSEOUT           SAVE SMF ID\n         LA    R1,8                           MAXIMUM OUTPUT LENGTH\n         STH   R1,PARSEOL                     SET OUTPUT LENGTH\n         BAL   R9,PARSE000                    LINK TO PARSE\n         OC    PARSEOL,PARSEOL                LENGTH ZERO?\n         BZ    XUSR0070                       YES\n         CLI   PARSEDLM,C' '                  STOP ON A BLANK?\n         BE    XUSR0090                       YES\n         CLI   PARSEDLM,C','                  STOP ON A COMMA?\n         BNE   XUSR0080                       NO\n         MVC   WORKWORK+4(8),PARSEOUT         SAVE USER ID\n         LA    R1,8                           MAXIMUM OUTPUT LENGTH\n         STH   R1,PARSEOL                     SET OUTPUT LENGTH\n         BAL   R9,PARSE000                    LINK TO PARSE\n         OC    PARSEOL,PARSEOL                LENGTH ZERO?\n         BZ    XUSR0090                       YES\n         CLI   PARSEDLM,C' '                  STOP ON A BLANK?\n         BNE   XUSR0100                       NO\nXUSR0020 DS    0H\n         ITRACE ID=NEWXUSR                    ADDING A NEW XUSRBLOK\n         GETMAIN RU,                          ACQUIRING XUSER BLOCK    +\n               LV=XUSRL,                      .. SIZE                  +\n               LOC=ANY                        .. FROM ANY AREA\n         LA    R14,COMMXUSR                   CHAIN POINT\n         USING XUSRBLOK,R5                    DEFINE XUSRBLOK BASE\nXUSR0030 DS    0H\n         ICM   R5,15,0(R14)                   NEXT XUSR BLOCK\n         BZ    XUSR0040                       END OF CHAIN\n         LA    R14,XUSRNEXT                   CHAIN POINT\n         B     XUSR0030                       LOOP\nXUSR0040 DS    0H\n         ST    R1,0(R14)                      ADD NEW BLOCK TO CHAIN\n         LR    R5,R1                          SET BASE\n         XC    XUSRBLOK(XUSRL),XUSRBLOK\n         MVC   XUSREYE,XUSRID                 SET EYECATCHER\n         MVC   XUSRSMF,WORKWORK               COPY SMF ID\n         MVC   XUSRID1,WORKWORK+4             COPY ID ON OTHER SYSTEM\n         MVC   XUSRID2,PARSEOUT               COPY ID ON OUR SYSTEM\n         B     PARM0010                       READ NEXT STATEMENT\nXUSR0050 DS    0H\n         ITRACE ID=NOSMF\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG10L),MSG10\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         B     PARM0010                       READ NEXT STATEMENT\nXUSR0060 DS    0H\n         ITRACE ID=SMFLONG\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG11L),MSG11\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         B     PARM0010                       READ NEXT STATEMENT\nXUSR0070 DS    0H\n         ITRACE ID=NOID1\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG12L),MSG12\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         B     PARM0010                       READ NEXT STATEMENT\nXUSR0080 DS    0H\n         ITRACE ID=ID1LONG\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG13L),MSG13\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         B     PARM0010                       READ NEXT STATEMENT\nXUSR0090 DS    0H\n         ITRACE ID=NOID2\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG14L),MSG14\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         B     PARM0010                       READ NEXT STATEMENT\nXUSR0100 DS    0H\n         ITRACE ID=ID2LONG\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG15L),MSG15\n         BAL   R9,PRT0000                     PRINT MESSAGE\n         B     PARM0010                       READ NEXT STATEMENT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         MVC   PRTMSGID(MSG16L),MSG16\n         BAL   R9,PRT0000                     PRINT\n         B     PARM0010                       READ NEXT STATEMENT\nERR0020  DS    0H\n         ITRACE ID=DEVNFND\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Parsing                                                            *\n*                                                                     *\n*  At entry:                                                          *\n*     PARSEIN  must be set to the data starting address               *\n*     PARSEIL  must be set to the data length                         *\n*     PARSEOL  must be set to the maximum output length               *\n*                                                                     *\n*  At exit:                                                           *\n*     PARSEIN  will be set the address of the byte following the      *\n*              delimiter that stopped the scan                        *\n*     PARSEIL  will be set to the length of the data following the    *\n*              delimiter                                              *\n*     PARSEOUT will be the data up to but not including the delimiter *\n*     PARSEOL  will be set to the length of the data in PARSEOUT      *\n*     PARSEDLM will be set to the delimiter that stopped the scan or  *\n*              to a null if the scan stopped due to end of data       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARSE000 DS    0H\n         STM   R1,R5,PARSESAV                 SAVE REGISTERS\n         ITRACE ID=PARSE,                     STARTING A PARSE         +\n               DATA1=PARSEIN,                 .. STARTING ADDRESS      +\n               DATA2=PARSEIL                  ..\n         MVC   PARSEOUT,COMM_BLANKS           CLEAR OUTPUT DATA\n         LH    R1,PARSEIL                     INPUT DATA LENGTH\n         LH    R2,PARSEOL                     MAXIMUM OUTPUT LENGTH\n         L     R3,PARSEIN                     INPUT DATA ADDRESS\n         LA    R4,PARSEOUT                    OUTPUT DATA ADDRESS\n         SR    R5,R5                          INITIALIZE FOR LENGTH\n         MVI   PARSEDLM,0                     SET DELIMITER TO A NULL\n         LTR   R1,R1                          ANY DATA LEFT?\n         BZ    PARSE050                       NO\nPARSE010 DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BNE   PARSE020                       NO\n         LA    R3,1(R3)                       NEXT\n         BCT   R1,PARSE010                    LOOP\n         B     PARSE050\nPARSE020 DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BE    PARSE040                       YES\n         CLI   0(R3),C','                     COMMA?\n         BE    PARSE040                       YES\n         CLI   0(R3),C'='                     EQUALS SIGN?\n         BE    PARSE040                       YES\n         MVC   0(1,R4),0(R3)                  COPY TO OUTPUT\n         LA    R3,1(R3)                       NEXT\n         LA    R4,1(R4)                       NEXT\n         LA    R5,1(R5)                       PLUS 1 BYTE OF LENGTH\n         BCT   R1,PARSE030                    MINUS 1 BYTE OF INPUT\n         B     PARSE050                       FORCE EXIT\nPARSE030 DS    0H\n         BCT   R2,PARSE020                    LOOP\n         CLI   0(R3),C' '                     BLANK?\n         BE    PARSE040                       YES\n         CLI   0(R3),C','                     COMMA?\n         BNE   PARSE050                       NO\nPARSE040 DS    0H\n         MVC   PARSEDLM,0(R3)                 SAVE DELIMITER\n         LA    R3,1(R3)                       SKIP DELIMITER\n         BCTR  R1,0                           MINUS BYTE FOR DELIMITER\nPARSE050 DS    0H\n         STH   R1,PARSEIL                     SAVE INPUT LENGTH LEFT\n         STH   R5,PARSEOL                     SAVE OUTPUT LENGTH\n         ST    R3,PARSEIN                     SAVE INPUT ENDING POINT\n         ITRACE ID=PARSEOUT,                  PARSE ENDING             +\n               DATA1=PARSEOUT,                .. PART OF OUTPUT DATA   +\n               DATA2=PARSEOL                  .. OUTPUT LENGTH\n         LM    R1,R5,PARSESAV                 RESTORE SAVED REGISTERS\n         BR    R9                             EXIT\n* ------------------------------------------------------------------- *\n*        PRINTING                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE\n         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE\n         ST    R14,PRTNEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_REQ\n         BC    4,PRT0010\n         BR    R9                             RETURN\n* ------------------------------------------------------------------- *\n*        EXIT                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT                       EXITING\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                         FREEMAIN WORK AREA       +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\nACBI     ACB   AM=VSAM,                                                +\n               DDNAME=VSAMFILE,                                        +\n               MACRF=(KEY,DIR,SEQ,OUT)\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=LIBIN,                                           +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               DCBE=DCBEI,                                             +\n               MACRF=GM\nDCBL     EQU   *-DCBI\nDCBEI    DCBE  EODAD=PARM0100\nDCBEL    EQU   *-DCBEI\nOPENI    OPEN  (*,INPUT),MF=L,MODE=31\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE *,MF=L,MODE=31\nCLOSEL   EQU   *-CLOSEI\nH6       DC    H'6'                  CONSTANT\nH8       DC    H'8'                  CONSTANT\nH15      DC    H'15'                 CONSTANT\nH1024    DC    H'1024'               CONSTANT\nH65535   DC    0H,X'FFFE'            CONSTANT\nPRTID    DC    CL8'PRTBLOK'\nLIBID    DC    CL8'LIBBLOK'\nXUSRID   DC    CL8'XUSRBLOK'\nABNDSTMT DC    C'ABEND '             ABEND CONTROL STATEMENT\nAPPLSTMT DC    C'APPLID='            APPLID STATEMENT\nLIBSTMT  DC    C'LIBRARY='           LIBRARY STATEMENT\nPORTSTMT DC    C'PORT='              TCP/IP PORT NUMBER\nSNPCSTMT DC    C'SNAPCLASS='         SNAPSHOT SYSOUT CLASS STATEMENT\nSYSNSTMT DC    C'SYSNAME='           SYSTEM NAME STATEMENT\nXUSRSTMT DC    C'XUSER='             EXTERNAL USER STATEMENT\nDSNKYWD  DC    C'DSN'\nOPENKYWD DC    C'OPEN'\nNO       DC    C'NO '\nYES      DC    C'YES '\n\nINIT_DESCRIPTION   DC CL80'<No description until first OPEN>'\n\nMSG01    DS    0C\n         DC    CL11'LIBSPARM01I'\n         DC    C'Control statement:'\n         DC    C' '\nMSG01D   DC    CL80' '\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    CL11'LIBSPARM02E'\n         DC    C'Invalid control statement.'\nMSG02L   EQU   *-MSG02\nMSG03    DS    0C\n         DC    CL11'LIBSPARM03E'\n         DC    C'You must specify ''APPLID'', ''PORT'', or both'\nMSG03L   EQU   *-MSG03\nMSG04    DS    0C\n         DC    CL11'LIBSPARM04E'\n         DC    C'APPLID omitted.'\nMSG04L   EQU   *-MSG04\nMSG05    DS    0C\n         DC    CL11'LIBSPARM05E'\n         DC    C'APPLID is too long.'\nMSG05L   EQU   *-MSG05\nMSG06    DS    0C\n         DC    CL11'LIBSPARM06E'\n         DC    C'Duplicate APPLID statement.'\nMSG06L   EQU   *-MSG06\nMSG07    DS    0C\n         DC    CL11'LIBSPARM07E'\n         DC    C'SNAPSHOT SYSOUT class cannot be blank.'\nMSG07L   EQU   *-MSG07\nMSG08    DS    0C\n         DC    CL11'LIBSPARM08E'\n         DC    C'SNAPSHOT SYSOUT class too long.'\nMSG08L   EQU   *-MSG08\nMSG09    DS    0C\n         DC    CL11'LIBSPARM09E'\n         DC    C'SYSTEM name cannot be blank.'\nMSG09L   EQU   *-MSG09\nMSG10    DS    0C\n         DC    CL11'LIBSPARM10E'\n         DC    C'SMF name is required on XUSER statements.'\nMSG10L   EQU   *-MSG10\nMSG11    DS    0C\n         DC    CL11'LIBSPARM11E'\n         DC    C'SMF name on XUSER statement is too long.'\nMSG11L   EQU   *-MSG11\nMSG12    DS    0C\n         DC    CL11'LIBSPARM12E'\n         DC    C'XUSER user id omitted.'\nMSG12L   EQU   *-MSG12\nMSG13    DS    0C\n         DC    CL11'LIBSPARM13E'\n         DC    C'XUSER USER ID is too long.'\nMSG13L   EQU   *-MSG13\nMSG14    DS    0C\n         DC    CL11'LIBSPARM14E'\n         DC    C'Local user id omitted.'\nMSG14L   EQU   *-MSG14\nMSG15    DS    0C\n         DC    CL11'LIBSPARM15E'\n         DC    C'Local user id is too long.'\nMSG15L   EQU   *-MSG15\nMSG16    DS    0C\n         DC    CL11'LIBSPARM16E'\n         DC    C'Extraneous data on control statement.'\nMSG16L   EQU   *-MSG16\nMSG17    DS    0C\n         DC    CL11'LIBSPARM17E'\n         DC    C'Library name omitted on LIBRARY statement.'\nMSG17L   EQU   *-MSG17\nMSG18    DS    0C\n         DC    CL11'LIBSPARM18E'\n         DC    C'VSAM cluster name omitted on LIBRARY statement.'\nMSG18L   EQU   *-MSG18\nMSG19    DS    0C\n         DC    CL11'LIBSPARM19E'\n         DC    C'Library name too long.  8 characters max.'\nMSG19L   EQU   *-MSG19\nMSG20    DS    0C\n         DC    CL11'LIBSPARM20E'\n         DC    C'Unknown keyword on LIBRARY statement.'\nMSG20L   EQU   *-MSG20\nMSG21    DS    0C\n         DC    CL11'LIBSPARM21E'\n         DC    C'Invalid keyword on LIBRARY statement'\nMSG21L   EQU   *-MSG21\nMSG22    DS    0C\n         DC    CL11'LIBSPARM22E'\n         DC    C'Duplicate data set name for this library'\nMSG22L   EQU   *-MSG22\nMSG24    DS    0C\n         DC    CL11'LIBSPARM24E'\n         DC    C'Incomplete LIBRARY statement'\nMSG24L   EQU   *-MSG24\nMSG25    DS    0C\n         DC    CL11'LIBSPARM25E'\n         DC    C'Duplicate PORT statement'\nMSG25L   EQU   *-MSG25\nMSG26    DS    0C\n         DC    CL11'LIBSPARM26E'\n         DC    C'PORT number must be at least 1 digit'\nMSG26L   EQU   *-MSG26\nMSG27    DS    0C\n         DC    CL11'LIBSPARM27E'\n         DC    C'PORT number has too many digits'\nMSG27L   EQU   *-MSG27\nMSG28    DS    0C\n         DC    CL11'LIBSPARM28E'\n         DC    C'PORT number too low (1-1024 are reserved)'\nMSG28L   EQU   *-MSG28\nMSG29    DS    0C\n         DC    CL11'LIBSPARM29E'\n         DC    C'PORT number too high (must be 1025-65535)'\nMSG29L   EQU   *-MSG29\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n* ------------------------------------------------------------------ *\nWORKAREA   DSECT\n           LIBSAVE DSECT=NO            REGISTER SAVE AREA\n           PRTBLOK DSECT=NO\nPARSESAV   DS    5F                    REGISTER SAVE AREA FOR PARSE\nPARSEIN    DS    A                     PARSE DATA INPUT ADDRESS\nWORKOCPL   DS    (OPENL)X\nWORKDCB    DS    (DCBL)X\nPARSEIL    DS    H                     LENGTH OF DATA AT PARSE IN\nPARSEOL    DS    H                     LENGTH OF DATA IN PARSE OUT\nPARSEOUT   DS    CL80                  OUTPUT FROM PARSE\nCARDDATA   DS    CL80                  CONTROL STATEMENT I/O AREA\nPARSEDLM   DS    C                     DELIMITER THAT STOPPED PARSE\nWORKWORK   DS    CL16\nWORKLIB    DS    CL8                   LIBRARY NAME\nWORKDSN    DS    CL44                  LIBRARY VSAM CLUSTER NAME\nWORKFLAG   DS    X\n$AUTOOPN   EQU   X'80'\n$NOAUTO    EQU   X'40'\nWORKAREA_L EQU   *-WORKAREA\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         XUSRBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         COPY REGEQU\n         END  LIBSPARM\n./ ADD NAME=LIBSPFD  0100-09250-09250-0919-00002-00002-00000-SOURCE\n       LIBSPFD TYPE=CSECT\n       END     LIBSPFD\n./ ADD NAME=LIBSPFV  0100-09250-09250-0919-00207-00207-00000-SOURCE\nLIBSPFV  CSECT\n         VDEF  BASE=LIBSPFD\n         VDEF  NAME=PUSER,           DEFINE VARIABLE                   +\n               DATA=SPF_USER,        .. FIELD NAME IN LIBSPFD          +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PSYSN,           DEFINE VARIABLE                   +\n               DATA=SPF_SYSTEM_NAME, .. FIELD NAME IN LIBSPFD          +\n               LENGTH=20,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMSG1I,          DEFINE VARIABLE                   +\n               DATA=SPF_MSG1_ID,     .. FIELD NAME IN LIBSPFD          +\n               LENGTH=11,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMSG2I,          DEFINE VARIABLE                   +\n               DATA=SPF_MSG2_ID,     .. FIELD NAME IN LIBSPFD          +\n               LENGTH=11,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMSG3I,          DEFINE VARIABLE                   +\n               DATA=SPF_MSG3_ID,     .. FIELD NAME IN LIBSPFD          +\n               LENGTH=11,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMSG4I,          DEFINE VARIABLE                   +\n               DATA=SPF_MSG4_ID,     .. FIELD NAME IN LIBSPFD          +\n               LENGTH=11,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMSG5I,          DEFINE VARIABLE                   +\n               DATA=SPF_MSG5_ID,     .. FIELD NAME IN LIBSPFD          +\n               LENGTH=11,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PLIB,            DEFINE VARIABLE                   +\n               DATA=SPF_LIB_NAME,    .. FIELD NAME IN LIBSPFD          +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PDESC,           DEFINE VARIABLE                   +\n               DATA=SPF_LIB_DESC,    .. FIELD NAME IN LIBSPFD          +\n               LENGTH=40,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMEM,            DEFINE VARIABLE                   +\n               DATA=SPF_MEM_NAME,    .. FIELD NAME IN LIBSPFD          +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PVER,            DEFINE VARIABLE                   +\n               DATA=SPF_MEM_VERSION, .. FIELD NAME IN LIBSPFD          +\n               LENGTH=05,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PUDSN,           DEFINE VARIABLE                   +\n               DATA=SPF_USER_DSN,    .. FIELD NAME IN LIBSPFD          +\n               LENGTH=44,            .. LENGTH                         +\n               FLAGS=$VAR_PROFILE,   .. SAVE THIS IN USER'S PROFILE    +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PUMEM,           DEFINE VARIABLE                   +\n               DATA=SPF_USER_MEMBER, .. FIELD NAME IN LIBSPFD          +\n               LENGTH=08,            .. LENGTH                         +\n               FLAGS=$VAR_PROFILE,   .. SAVE THIS IN USER'S PROFILE    +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PIO,             DEFINE VARIABLE                   +\n               DATA=SPF_IN_OUT_STATUS,  FIELD NAME IN LIBSPFD          +\n               LENGTH=03,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=POUTUSER,        DEFINE VARIABLE                   +\n               DATA=SPF_OUT_USER,    .. FIELD NAME IN LIBSPFD          +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=POWNER,          DEFINE VARIABLE                   +\n               DATA=SPF_OWNER,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=POPT,            DEFINE VARIABLE                   +\n               DATA=SPF_OPTION,      .. FIELD NAME IN LIBSPFD          +\n               LENGTH=04,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PUNIT,           DEFINE VARIABLE                   +\n               DATA=SPF_UNIT,        .. FIELD NAME IN LIBSPFD          +\n               LENGTH=08,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMSG1T,          DEFINE VARIABLE                   +\n               DATA=SPF_MSG1_TEXT,   .. FIELD NAME IN LIBSPFD          +\n               LENGTH=59,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMSG2T,          DEFINE VARIABLE                   +\n               DATA=SPF_MSG2_TEXT,   .. FIELD NAME IN LIBSPFD          +\n               LENGTH=59,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMSG3T,          DEFINE VARIABLE                   +\n               DATA=SPF_MSG3_TEXT,   .. FIELD NAME IN LIBSPFD          +\n               LENGTH=59,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMSG4T,          DEFINE VARIABLE                   +\n               DATA=SPF_MSG4_TEXT,   .. FIELD NAME IN LIBSPFD          +\n               LENGTH=59,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMSG5T,          DEFINE VARIABLE                   +\n               DATA=SPF_MSG5_TEXT,   .. FIELD NAME IN LIBSPFD          +\n               LENGTH=59,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMISC1,          DEFINE VARIABLE                   +\n               DATA=SPF_MISC1,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=79,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMISC2,          DEFINE VARIABLE                   +\n               DATA=SPF_MISC2,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=79,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMISC3,          DEFINE VARIABLE                   +\n               DATA=SPF_MISC3,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=79,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMISC4,          DEFINE VARIABLE                   +\n               DATA=SPF_MISC4,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=79,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMISC5,          DEFINE VARIABLE                   +\n               DATA=SPF_MISC5,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=79,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMISC6,          DEFINE VARIABLE                   +\n               DATA=SPF_MISC6,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=79,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMISC7,          DEFINE VARIABLE                   +\n               DATA=SPF_MISC7,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=79,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMISC8,          DEFINE VARIABLE                   +\n               DATA=SPF_MISC8,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=79,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMISC9,          DEFINE VARIABLE                   +\n               DATA=SPF_MISC9,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=79,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PMISC10,         DEFINE VARIABLE                   +\n               DATA=SPF_MISC10,      .. FIELD NAME IN LIBSPFD          +\n               LENGTH=79,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=ZCMD,            DEFINE VARIABLE                   +\n               DATA=SPF_ZCMD,        .. FIELD NAME IN LIBSPFD          +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=LVLINE,          DEFINE VARIABLE                   +\n               DATA=SPF_LVLINE,      .. FIELD NAME IN LIBSPFD          +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=FIXED            .. FORMAT\n         VDEF  NAME=VCOL,            DEFINE VARIABLE                   +\n               DATA=SPF_VCOL,        .. FIELD NAME IN LIBSPFD          +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=FIXED            .. FORMAT\n         VDEF  NAME=VDEPTH,          DEFINE VARIABLE                   +\n               DATA=SPF_VDEPTH,      .. FIELD NAME IN LIBSPFD          +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=FIXED            .. FORMAT\n         VDEF  NAME=VROW,            DEFINE VARIABLE                   +\n               DATA=SPF_VCOL,        .. FIELD NAME IN LIBSPFD          +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=FIXED            .. FORMAT\n         VDEF  NAME=VTYPE,           DEFINE VARIABLE                   +\n               DATA=SPF_VTYPE,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=VWIDTH,          DEFINE VARIABLE                   +\n               DATA=SPF_VWIDTH,      .. FIELD NAME IN LIBSPFD          +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=FIXED            .. FORMAT\n         VDEF  NAME=ZSCROLLN,        DEFINE VARIABLE                   +\n               DATA=SPF_ZSCROLLN,    .. FIELD NAME IN LIBSPFD          +\n               LENGTH=4,             .. LENGTH                         +\n               FORM=FIXED            .. FORMAT\n         VDEF  NAME=ZSCROLLA,        DEFINE VARIABLE                   +\n               DATA=SPF_ZSCROLLA,    .. FIELD NAME IN LIBSPFD          +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=ZVERB,           DEFINE VARIABLE                   +\n               DATA=SPF_ZVERB,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PCOMM1,          DEFINE VARIABLE                   +\n               DATA=SPF_COMM1,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PCOMM2,          DEFINE VARIABLE                   +\n               DATA=SPF_COMM2,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PCOMM3,          DEFINE VARIABLE                   +\n               DATA=SPF_COMM3,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PCOMM4,          DEFINE VARIABLE                   +\n               DATA=SPF_COMM4,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=PCOMM5,          DEFINE VARIABLE                   +\n               DATA=SPF_COMM5,       .. FIELD NAME IN LIBSPFD          +\n               LENGTH=80,            .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         VDEF  NAME=DATAID,          DEFINE VARIABLE                   +\n               DATA=SPF_DATA_ID,     .. FIELD NAME IN LIBSPFD          +\n               LENGTH=8,             .. LENGTH                         +\n               FORM=CHAR             .. FORMAT\n         DC    X'FF'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD TYPE=DSECT\n         COPY    VARDSECT\n         END     LIBSPFV\n./ ADD NAME=LIBSPSUB 0100-09250-09250-0919-00284-00284-00000-SOURCE\n         TITLE 'LIBSPSUB    PRINT SUBTASK'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: LIBSPSUB                                              *\n*                                                                     *\n*   The LIBRARIAN consists of multiple subtasks.  Hopefully this will *\n*   allow multiple users to use the LIBRARIAN without impacting each  *\n*   other.  This subtask allows all other subtasks to print to one    *\n*   DCB (SYSPRINT).                                                   *\n*                                                                     *\n*   This subtask performs all printing for all STC tasks.             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBSPSUB CSECT\nLIBSPSUB AMODE 31\nLIBSPSUB RMODE ANY\n         USING LIBSPSUB,R12                   DEFINE BASE\n         USING PRTBLOK,R7                     DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                CHAIN REGISTERS\n         LR    R12,R15                        COPY ENTRY POINT ADDRESS\n         B     PRT0000\n         DC    CL8'LIBSPSUB'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nPRT0000  DS    0H\n         L     R11,0(R1)                      LOAD LIBSCOMM'S ADDRESS\n         GETMAIN RU,                          STORAGE FOR WORK AREA    +\n               LV=WORKAREA_L,                                          +\n               LOC=BELOW\n         USING WORKAREA,R1                    DEFINE BASE\n         XC    WORKAREA+000(256),WORKAREA+000\n         XC    WORKAREA+256(WORKAREA_L-256),WORKAREA+000\n         ST    R13,4(R1)                      CHAIN PREVIOUS SAVE AREA\n         ST    R1,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         DROP  R1\n         USING WORKAREA,R13                   DEFINE BASE\n         ST    R13,COMM_PRINT_DXD             SET WORK AREA ADDRESS\n         ITRACE ID=INIT,                                               +\n               RDATA1=R13\n         MVC   WKDCB(DCBL),DCBI               INITIALIZE DCB\n         MVI   WKCC,C' '                      INITIALIZE CC\n         MVC   WKDATE(PRTLRECL-1),WKCC\n         MVC   WKOCPL(OPENL),OPENI            INITIALIZE OPEN/CLOSE\n         ZAP   WKLINE,P0                      INITIALIZE LINE NUMBER\n         ZAP   WKPAGE,P0                      INITIALIZE PAGE NUMBER\n         OPEN  (WKDCB,OUTPUT),                                         +\n               MF=(E,WKOCPL),                                          +\n               MODE=31\n         B     PRT0030                        FORCE A CHECK OF QUEUE\nPRT0010  DS    0H\n         TM    COMM_EOJ_PHASE,$EOJ4           SHUTDOWN PHASE 4?\n         BO    EXIT0000                       YES.. IT'S MILLER TIME\n         TM    COMM_PRINT_WORK_ECB,X'40'      ECB ALREADY POSTED?\n         BO    PRT0020                        GET BUSY\n         ITRACE ID=WORKWAIT,                  WAITING FOR WORK         +\n               RDATA1=R1                      .. ECB'S ADDRESS\n         WAIT  ECB=COMM_PRINT_WORK_ECB        WAIT FOR WORK TO DO ECB\n         ITRACE ID=WOKEUP\nPRT0020  DS    0H\n         XC    COMM_PRINT_WORK_ECB,COMM_PRINT_WORK_ECB\nPRT0030  DS    0H\n         SR    R1,R1                          CLEAR REGISTER\nPRT0040  DS    0H\n         ICM   R2,15,COMM_PRINT_REQ           FIRST REQUEST BLOCK\n         BZ    PRT0010                        NOTHING ON CHAIN\n         CS    R2,R1,COMM_PRINT_REQ           GET REQUEST CHAIN\n         BC    4,PRT0040\n         USING PRTBLOK,R10                    DEFINE BASE\n         ITRACE ID=HAVEQ,                     WE HAVE THE QUEUE        +\n               RDATA1=R2                      .. FIRST (LAST) BLOCK\n         LR    R3,R2                          COPY ADDRESS\n         LA    R1,4                           INITIALIZE GETMAIN LENGTH\nPRT0050  DS    0H\n         ICM   R3,15,PRTNEXT-PRTBLOK(R3)\n         BZ    PRT0060                        NEXT BLOCK'S ADDRESS\n         ITRACE ID=VEC1,                                               +\n               RDATA1=R3,                                              +\n               RDATA2=R1\n         LA    R1,4(R1)                       ADD TO VECTOR LENGTH\n         B     PRT0050                        LOOP\nPRT0060  DS    0H\n         ITRACE ID=GETVEC,                                             +\n               RDATA1=R1                      .. SIZE OF VECTOR LIST\n         ST    R1,WKVECSZ                     SAVE VECTOR SIZE\n         GETMAIN RU,                          GETMAIN STORAGE          +\n               LV=(1),                                                 +\n               LOC=ANY\n         ST    R1,WKVECADR                    SAVE VECTOR ADDRESS\n         ITRACE ID=VECADDR,                                            +\n               RDATA1=R1                      .. VECTOR ADDRESS\nPRT0070  DS    0H\n         ITRACE ID=BLDVEC,                                             +\n               RDATA1=R1,                     .. VECTOR ADDRESS        +\n               RDATA2=R2                      .. PRTBLOK'S ADDRESS\n         ST    R2,0(R1)                       SET ADDRESS\n         ST    R1,WKVECCUR\n         LA    R1,4(R1)                       NEXT\n         ICM   R2,15,PRTNEXT-PRTBLOK(R2)\n         BNZ   PRT0070\nPRT0080  DS    0H\n         L     R1,WKVECCUR\n         L     R10,0(R1)                      PRTBLOK'S ADDRESS\n         ITRACE ID=PRT,                                                +\n               RDATA1=R1,                                              +\n               RDATA2=R10\n         CLI   PRTCMD,$PRTHEAD                FORCED HEADING?\n         BE    PRT0170                        YES\n         MVC   WKCC,PRTCC                     COPY CARRIAGE CONTROL\n         TIME  DEC\n         STM   R0,R1,WKTIMDAY                 SAVE TIME AND DATE\n         MVC   WKTIME,TIMEEDWD                INITIALIZE WITH EDIT WORD\n         ED    WKTIME,WKTIMDAY                EDIT TIME\n         MVC   WKDATE,DATEEDWD                INITIALIZE WITH EDIT WORD\n         AP    WKTIMDAY+4(4),P1900000\n         ED    WKDATE,WKTIMDAY+5              EDIT DATE\n         MVC   WKMSGID,PRTMSGID               COPY MESSAGE ID\n         LA    R1,WKMSGID+(L'WKMSGID-1)\nPRT0090  DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BNE   PRT0100                        NO\n         BCT   R1,PRT0090                     LOOP\nPRT0100  DS    0H\n         CLI   0(R1),C'E'                     'ERROR' MESSAGE\n         BNE   PRT0110\n         MVI   WKMSGERR,C'*'                  FLAG ERROR MESSAGE\nPRT0110  DS    0H\n         CLI   PRTCMD,$PRTASIS                PRINT AS IS?\n         BE    PRT0140                        YES\n         LA    R1,WKDATA                      FIRST PRINT AREA BYTE\n         LA    R2,PRTDATA                     PRINT OUTPUT AREA BYTE\n         LA    R3,L'PRTDATA                   MAXIMUM LOOPS\nPRT0120  DS    0H\n         CLC   COMM_BLANKS(2),0(R2)           2 BLANKS IN A ROW?\n         BE    PRT0130                        YES\n         CLC   =C' )',0(R2)                   BLANK AND AN OPEN PAREN?\n         BE    PRT0130                        YES\n         CLC   =C' ,',0(R2)                   BLANK AND A COMMA?\n         BE    PRT0130                        YES\n         MVC   0(1,R1),0(R2)                  COPY TO OUTPUT AREA\n         LA    R1,1(R1)                       NEXT OUTPUT BYTE\nPRT0130  DS    0H\n         LA    R2,1(R2)                       NEXT INPUT BYTE\n         BCT   R3,PRT0120                     LOOP\n         B     PRG0150\nPRT0140  DS    0H\n         MVC   WKDATA,PRTDATA                 COPY AS IS\nPRG0150  DS    0H\n         PUT   WKDCB,WKCC                     PRINT\n         AP    WKLINE,P1                      ADD 1 TO LINE NUMBER\n         CLI   WKCC,C' '                      SINGLE SPACE\n         BE    PRT0160                        YES\n         AP    WKLINE,P1                      ADD 1 TO LINE NUMBER\n         CLI   WKCC,C'0'                      DOUBLE SPACE?\n         BE    PRT0160                        YES\n         AP    WKLINE,P1                      ADD 1 TO LINE NUMBER\nPRT0160  DS    0H\n         MVI   WKCC,C' '                      INITIALIZE CC\n         MVC   WKDATE(PRTLRECL-1),WKCC\n         CP    WKLINE,COMM_MAX_LINES          TIME FOR HEADING?\n         BNH   PRT0200                        NOT YET\nPRT0170  DS    0H\n         AP    WKPAGE,P1                      ADD 1 TO PAGE NUMBER\n         MVC   WKDATA(HEADINGL),HEADING\n         MVC   WKDATA+(HEADPAGE-HEADING)(L'HEADPAGE),PAGEEDWD\n         ED    WKDATA+(HEADPAGE-HEADING)(L'HEADPAGE),WKPAGE\n         PUT   WKDCB,WKCC                     PRINT\n         ZAP   WKLINE,P1                      RESET LINE NUMBER\n         MVI   WKCC,C' '                      INITIALIZE CC\n         MVC   WKDATE(PRTLRECL-1),WKCC\nPRT0200  DS    0H\n         ITRACE ID=FREEPRT,                                            +\n               RDATA1=R10\n         FREEMAIN RU,                                                  +\n               A=(R10),                                                +\n               LV=PRTBLOKL\n         L     R1,WKVECCUR                    CURRENT ADDRESS IN VECTOR\n         C     R1,WKVECADR                    AT FIRST ENTRY?\n         BE    PRT0210                        YES\n         SH    R1,H4                          BACK UP 1 ENTRY\n         ST    R1,WKVECCUR                    SAVE CURRENT ADDRESS\n         B     PRT0080                        PROCESS THIS PRTBLOK\nPRT0210  DS    0H\n         L     R0,WKVECSZ                     VECTOR SIZE\n         ITRACE ID=FREEVEC,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                         FREE THE VECTOR          +\n               A=(1),                                                  +\n               LV=(0)\n         B     PRT0020\n* ------------------------------------------------------------------- *\n*        EXIT                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         MVC   WKOCPL(CLOSEL),CLOSEI          COPY CLOSE LIST FORM\n         CLOSE WKDCB,                         CLOSE DCB                +\n               MF=(E,WKOCPL),                                          +\n               MODE=31\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\nPRTMVC   MVC   WKDATE(0),PRTDATA              COPY PRINT DATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nH4       DC    H'4'\nDATEEDWD DC    X'4021204B202020'\nTIMEEDWD DC    X'4021204B20204B2020'\nPAGEEDWD DC    X'402020202120'\nP0       DC    P'0'\nP1       DC    P'1'\nP1900000 DC    P'1900000'\nHEADING  DS    0C\n         DC    48C' '\n         DC    C'Librarian log'\n         DC    48C' '\n         DC    C'PAGE '\nHEADPAGE DC    CL6' '\nHEADINGL EQU   *-HEADING\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=LIBPRT,                                          +\n               RECFM=FBA,                                              +\n               LRECL=PRTLRECL,                                         +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,OUTPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA   DSECT\n           LIBSAVE DSECT=NO\nWKTIMDAY   DS    2F                  TIME/DATE\nWKVECSZ    DS    F                   ADDRESS VECTOR SIZE\nWKVECADR   DS    A                   ADDRESS OF ADDRESS VECTOR\nWKVECCUR   DS    A                   CURRENT ADDRESS IN ADDRESS VECTOR\nWKLINE     DS    PL3\nWKPAGE     DS    PL3\nWKCC       DS    C                   CARRIAGE CONTROL\nWKDATE     DS    CL7                 DATE\n           DS    C\nWKTIME     DS    CL9                 TIME\n           DS    C\nWKMSGID    DS    CL11                MESSAGE ID\n           DS    C\nWKMSGERR   DS    C                   ERROR MESSAGE FLAG\n           DS    C\nWKDATA     DS    CL120               PRINT DATA\nPRTLRECL   EQU   *-WKCC\nWKDCB      DS    0A,(DCBL)X          RESERVE SPACE FOR DCB\nWKOCPL     DS    (OPENL)X\nWORKAREA_L EQU   *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         PRTBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBSPSUB\n./ ADD NAME=LIBSSNAP 0100-09250-09250-0919-00748-00748-00000-SOURCE\n         MACRO\n         FDEF  &NAME,&TYPE,&LEN,&BASE=\n         LCLC  &T\n         LCLA  &L\n         GBLC  &BASENAME\n         AIF   (T'&BASE EQ 'O').NOBASE\n.BASE    ANOP\n&BASENAME SETC  '&BASE'\n         DC    CL8'&BASE'            CONTROL BLOCK NAME\n         MEXIT\n.NOBASE  ANOP\n         AIF   (T'&TYPE EQ 'O').TYPE1\n&T       SETC  '&TYPE'\n         AGO   .TYPE2\n.TYPE1   ANOP\n&T       SETC  T'&NAME\n.TYPE2   ANOP\n         AIF   (T'&LEN EQ 'O').LEN1\n&L       SETA  &LEN\n         AGO   .LEN2\n.LEN1    ANOP\n&L       SETA  L'&NAME\n.LEN2    ANOP\n         DC    CL16'&NAME'           FIELD NAME\n         DC    AL2(&NAME-&BASENAME)  DISP WITHIN CONTROL BLOCK\n         DC    C'&T'                 FIELD TYPE\n         DC    AL2(&L)               SOURCE FIELD LENGTH\n         MEND\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: LIBSSNAP                                              *\n*                                                                     *\n*  PROCESS SNAP commands entered via the console.                     *\n*                                                                     *\n*  At entry:                                                          *\n*    R1 command address                                               *\n*    R2 command length                                                *\n*    R3 address of console id                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBSSNAP CSECT\nLIBSSNAP AMODE 31\nLIBSSNAP RMODE ANY\n         USING LIBSSNAP,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'LIBSSNAP'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LV=WORKAREA_L,                 .. SIZE                  +\n               LOC=BELOW                      .. MUST BE BELOW\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORK_AREA,R13                  DEFINE BASE\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   WORK_CID,0(R3)                 COPY CONSOLE ID\n         MVC   WORK_WTO(WTOL),WTOI            INITIALIZE WTO\n         LA    R7,WORK_WTO\n         USING WPL,R7                         DEFINE BASE\n         MVI   WORK_HEADING,C' '\n         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING\n         MVI   WORK_PRINT_SPACE,C' '          INITIALIZE SPACE\n         MVC   WORK_PRINT,WORK_PRINT_SPACE\n         MVI   WORK_FLAGS,0                   RESET FLAG(S)\n         MVC   DAIR_EYE,DAIRID                SET BLOCK EYE-CATCHER\n         XC    DAIR_NEXT,DAIR_NEXT            CLEAR 'NEXT' ADDRESS\n         MVC   DAIR_DD,SNAPDDN                SET DDNAME IN ACB\n         MVI   DAIR_CMD,$DAIR_SYSOUT          ALLOCATE SNAP SYSOUT\n         MVC   DAIR_CLASS,COMM_SNAP_CLASS     SET OUTPUT CLASS\n         XC    DAIR_ECB,DAIR_ECB              CLEAR THE ECB\n         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS\nSNAP0010 DS    0H\n         L     R2,COMM_DSUB_REQ\n         ST    R2,DAIR_NEXT\n         CS    R2,R1,COMM_DSUB_REQ\n         BC    4,SNAP0010\n         POST  COMM_DSUB_WORK_ECB             WAKEUP THE DAIR SUBTASK\n         WAIT  1,ECB=DAIR_ECB                 WAIT\n         OC    DAIR_R15,DAIR_R15              ALLOCATION SUCCESSFUL?\n         BNZ   ERR0010                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     The output DD has been allocated.                               *\n*                                                                     *\n*     Open the DCB.                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   WORK_DCB(DCBL),DCBI            INITIALIZE THE DCB\n         MVC   WORK_OPEN(OPENL),OPENI\n         OPEN  WORK_DCB,                                               +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         ZAP   WORK_PAGE,P0                   INITIALIZE PAGE NUMBER\n         ZAP   WORK_LINE,P0                   INITIALIZE LINE NUMBER\n         AP    COMM_SNAP_NBR,P1               ADD 1 TO NUMBER OF DUMPS\n         TIME  DEC                            GET DATE AND TIME\n         STM   R0,R1,WORK_TIME_DATE           SAVE TIME AND DATE\n         AP    WORK_DATE,P1900000             ADD CENTURY TO DATE\n         BAL   R10,HEAD0000                   PRINT HEADING\n* ------------------------------------------------------------------- *\n*     Format fields from the STC common area                          *\n* ------------------------------------------------------------------- *\n         ST    R11,WORK_FMT_BASE              SET BASE\n         MVC   WORK_FMT_FDEF,A_SCOMM_FDEF\n         BAL   R8,FMT0000                     FORMAT THE SCOMM FIELDS\n* ------------------------------------------------------------------- *\n*     Format fields from the LIBBLOKs and LIBUSER blocks              *\n* ------------------------------------------------------------------- *\n         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK\n         BZ    SNAP0050                       NO LIBBLOK'S\n         USING LIBBLOK,R6                     DEFINE BASE\nSNAP0020 DS    0H\n         MVC   WORK_FMT_FDEF,A_LIBBLOK_FDEF\n         ST    R6,WORK_FMT_BASE               SET BASE\n         BAL   R8,FMT0000                     FORMAT THE LIBBLOK\n         ICM   R1,15,LIB_USERS                FIRST LIBUSER BLOCK\n         BZ    SNAP0040\nSNAP0030 DS    0H\n         ST    R1,WORK_FMT_BASE               SET BASE\n         MVC   WORK_FMT_FDEF,A_LIBUSER_FDEF\n         BAL   R8,FMT0000                     FORMAT THE CONTROL BLOCK\n         L     R1,WORK_FMT_BASE               CURRENT LIBUSER BLOCK\n         ICM   R1,15,LIB_USER_NEXT-LIBUSER(R1)\n         BNZ   SNAP0030\nSNAP0040 DS    0H\n         ICM   R6,15,LIB_NEXT\n         BNZ   SNAP0020\n         DROP  R6\n* ------------------------------------------------------------------- *\n*     Format fields from the USERBLOKs                                *\n* ------------------------------------------------------------------- *\nSNAP0050 DS    0H\n         MVC   WORK_FMT_FDEF,A_USERBLOK_FDEF\n         MVC   WORK_ENQ(ENQL),ENQI\n         ENQ   MF=(E,WORK_ENQ)\n         ICM   R6,15,COMM_USER_CHAIN          FIRST USER BLOCK\n         BZ    SNAP0100                       NO USERBLOK'S\n         USING USERBLOK,R6                    DEFINE BASE\nSNAP0060 DS    0H\n         ST    R6,WORK_FMT_BASE               SET BASE\n         BAL   R8,FMT0000                     FORMAT THE LIBBLOK\n         ICM   R6,15,USER_NEXT\n         BNZ   SNAP0060\n         MVC   WORK_ENQ(ENQL),ENQI\nSNAP0100 DS    0H\n         DEQ   MF=(E,WORK_ENQ)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Print the trace table                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OI    WORK_FLAGS,$WORK_TRACE\n         MVI   WORK_PRINT_CC,C'1'             FORCE TOP OF PAGE\n         MVC   WORK_PRINT_DATA(MSG05L),MSG05\n         BAL   R9,PRT0000\n         ICM   R2,15,TRFIRST                  FIRST TRACE TABLE ENTRY\n         BZ    CLOSE000                       NO TRACE TABLE\n         USING TRENTRY,R2                     DEFINE BASE\nSNAP0110 DS    0H\n         MVC   WORK_PRINT_DATA(MSG06L),MSG06\n         C     R2,TRCURR                      CURRENT ENTRY?\n         BNE   SNAP0120                       NO\n         MVC   WORK_PRINT_DATA+(MSG06_CUR-MSG06)(L'MSG06_CUR),=C'CURREN+=>'\n               T -->'\nSNAP0120 DS    0H\n         UNPK  WORK_PRINT_DATA+(MSG06_TCB-MSG06)(7),TRETCB(5)            ADDR\n         MVZ   WORK_PRINT_DATA+(MSG06_TCB-MSG06)(6),HEXZERO\n         TR    WORK_PRINT_DATA+(MSG06_TCB-MSG06)(6),HEXCHAR\n         MVI   WORK_PRINT_DATA+(MSG06_TCB-MSG06)+6,C' '\n         MVC   WORK_PRINT_DATA+(MSG06_MOD-MSG06)(L'MSG06_MOD),TREMOD\n         MVC   WORK_PRINT_DATA+(MSG06_ID-MSG06)(L'MSG06_ID),TREID\n         MVC   WORK_PRINT_DATA+(MSG06_D1-MSG06)(L'MSG06_D1),TREDATA1\n         TR    WORK_PRINT_DATA+(MSG06_D1-MSG06)(L'MSG06_D1),PRINTABLE\n         UNPK  WORK_PRINT_DATA+(MSG06_D1X-MSG06)(9),TREDATA1(5)\n         MVZ   WORK_PRINT_DATA+(MSG06_D1X-MSG06)(8),HEXZERO\n         TR    WORK_PRINT_DATA+(MSG06_D1X-MSG06)(8),HEXCHAR\n         UNPK  WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(9),TREDATA1+4(5)\n         MVZ   WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(8),HEXZERO\n         TR    WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(8),HEXCHAR\n         MVI   WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8+8,C' '\n         MVC   WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),TREDATA2\n         MVC   WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),TREDATA2\n         TR    WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),PRINTABLE\n         UNPK  WORK_PRINT_DATA+(MSG06_D2X-MSG06)(9),TREDATA2(5)\n         MVZ   WORK_PRINT_DATA+(MSG06_D2X-MSG06)(8),HEXZERO\n         TR    WORK_PRINT_DATA+(MSG06_D2X-MSG06)(8),HEXCHAR\n         UNPK  WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(9),TREDATA2+4(5)\n         MVZ   WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(8),HEXZERO\n         TR    WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(8),HEXCHAR\n         MVI   WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8+8,C' '\n         BAL   R9,PRT0000\n         C     R2,TRLAST                      END OF TABLE?\n         BE    CLOSE000                       YES\n         LA    R2,TRENTRYL(R2)\n         B     SNAP0110\n         DROP  R2\n* ------------------------------------------------------------------- *\n*     Close the DCB, issue WTO and exit                               *\n* ------------------------------------------------------------------- *\nCLOSE000 DS    0H\n         MVC   WORK_CLOSE(CLOSEL),CLOSEI\n         CLOSE (WORK_DCB),                                             +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMT0000  DS    0H\n         L     R2,WORK_FMT_BASE\n         L     R3,WORK_FMT_FDEF\n         USING FDEF,R3\n         MVC   WORK_PRINT_DATA(MSG03L),MSG03\n         MVC   WORK_PRINT_DATA+(MSG03_BLOCK-MSG03)(L'MSG03_BLOCK),0(R3)\n         UNPK  WORK_UNPACK(9),WORK_FMT_BASE(5)\n         MVZ   WORK_UNPACK,HEXZERO\n         TR    WORK_UNPACK,HEXCHAR\n         MVC   WORK_PRINT_DATA+(MSG03_ADDR-MSG03)(L'MSG03_ADDR),WORK_UN+\n               PACK\n         BAL   R9,PRT0000                     PRINT\n         LA    R3,8(R3)                       FIRST FIELD DEFINITION\nFMT0010  DS    0H\n         MVC   WORK_PRINT_DATA(MSG04L),MSG04\n         LA    R4,WORK_PRINT_DATA+(MSG04_DATA-MSG04)\n         USING FLD,R4\n         LA    R5,((L'WORK_PRINT_DATA-MSG04L)/(FLDL+5))\nFMT0020  DS    0H\n         MVC   FLD_LABEL,FDEF_NAME            COPY FIELD NAME\n         MVC   FLD_TYPE+1(1),FDEF_TYPE        FIELD TYPE\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,FDEF_LENGTH               LENGTH\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         MVC   FLD_LENGTH,=X'40202120'        INITIALIZE WITH EDIT WORD\n         ED    FLD_LENGTH,WORK_DWORD+6        EDIT LENGTH\n         UNPK  WORK_UNPACK(5),FDEF_DISP(3)    UNPACK DISPLACEMENT\n         MVZ   WORK_UNPACK(4),HEXZERO         CLEAR ZONES\n         TR    WORK_UNPACK(4),HEXCHAR         CONVERT TO PRINTABLE\n         MVC   FLD_DISP,WORK_UNPACK           COPY DISPLACEMENT\n         SR    R14,R14                        CLEAR REGISTER\n         ICM   R14,3,FDEF_LENGTH              FIELD LENGTH\n         SR    R15,R15                        CLEAR REGISTER\n         ICM   R15,3,FDEF_DISP                DISPLACEMENT\n         AR    R15,R2                         DATA ADDRESS\n         CLI   FDEF_TYPE,C'A'                 ADDRESS?\n         BE    FMT0050                        YES\n         CLI   FDEF_TYPE,C'C'                 CHARACTER?\n         BE    FMT0030                        YES\n         CLI   FDEF_TYPE,C'F'                 FULLWORD?\n         BE    FMT0060                        YES\n         CLI   FDEF_TYPE,C'H'                 HALFWORD?\n         BE    FMT0070                        YES\n         CLI   FDEF_TYPE,C'P'                 PACKED DECIMAL?\n         BE    FMT0080                        YES\n         CLI   FDEF_TYPE,C'X'                 HEX?\n         BE    FMT0050                        YES\n         B     FMT0500\n* ----------------------  CHARACTER FIELDS  ------------------------- *\nFMT0030  DS    0H\n         CH    R14,H8                         LONGER THAN 8 CHARACTERS?\n         BNH   FMT0040                        NO\n         LH    R14,H8                         LIMIT TO 8\nFMT0040  DS    0H\n         BCTR  R14,0\n         EX    R14,FMTMVC01                   COPY DATA\n         B     FMT0500\n* ----------------------  ADDRESS FIELDS  --------------------------- *\nFMT0050  DS    0H\n         UNPK  WORK_UNPACK(9),0(5,R15)        UNPACK THE DATA\n         MVZ   WORK_UNPACK,HEXZERO            CLEAR ZONES\n         TR    WORK_UNPACK,HEXCHAR            TRANSLATE TO PRINTABLE\n         SLL   R14,1                          MULTIPLY BY 2\n         BCTR  R14,0                          MINUS 1\n         LA    R1,FLD_VALUE+7\n         SR    R1,R14\n         EX    R14,FMTMVC02                   COPY TO PRINT AREA\n         B     FMT0500\n* ----------------------  FULLWORD FIELDS  -------------------------- *\nFMT0060  DS    0H\n         L     R1,0(R15)                      LOAD VALUE\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         MVC   FLD_VALUE,=X'4020202020202120'\n         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE\n         B     FMT0500\n* ----------------------  FULLWORD FIELDS  -------------------------- *\nFMT0070  DS    0H\n         LH    R1,0(R15)                      LOAD VALUE\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         MVC   FLD_VALUE,=X'4020202020202120'\n         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE\n         B     FMT0500\n* ----------------------  PACKED DECIMAL ---------------------------- *\nFMT0080  DS    0H\n         BCTR  R14,0\n         EX    R14,FMTZAP                     ZAP IT INTO DWORD\n         MVC   FLD_VALUE,=X'4020202020202120'\n         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE\nFMT0500  DS    0H\n         LA    R4,FLDL+5(R4)                  NEXT IN OUTPUT\n         LA    R3,FDEFL(R3)                   NEXT FIELD DEFINITION\n         CLI   0(R3),X'FF'                    END OF FIELDS?\n         BE    FMT0510                        YES\n         BCT   R5,FMT0020                     FORMAT NEXT FIELD\n         BAL   R9,PRT0000                     PRINT\n         B     FMT0010\nFMT0510  DS    0H\n         BAL   R9,PRT0000                     PRINT LAST LINE\n         BAL   R9,PRT0000                     PRINT BLANK LINE\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMTMVC01 MVC   FLD_VALUE(0),0(R15)            COPY DATA\nFMTMVC02 MVC   0(0,R1),WORK_UNPACK            COPY DATA\nFMTZAP   ZAP   WORK_DWORD,0(0,R15)            ZAP PACKED DECIMAL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         CP    WORK_LINE,MAXLINE\n         BL    PRT0010\n         BAL   R10,HEAD0000                   PRINT NEXT HEADING\nPRT0010  DS    0H\n         PUT   WORK_DCB,WORK_PRINT            PRINT\n         AP    WORK_LINE,P1                   ADD TO LINE COUNT\n         MVC   WORK_PRINT,WORK_PRINT_SPACE\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHEAD0000 DS    0H\n         MVC   WORK_HEADING(HEADINGL),HEADING\n         ED    WORK_HEADING+(HEAD_DATE-HEADING)(L'HEAD_DATE),WORK_DATE\n         UNPK  WORK_UNPACK(7),WORK_TIME(4)\n         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+0(2),WORK_UNPACK+0\n         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+3(2),WORK_UNPACK+2\n         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+6(2),WORK_UNPACK+4\n         MVI   WORK_HEADING+(HEAD_TIME-HEADING)+2,C':'\n         MVI   WORK_HEADING+(HEAD_TIME-HEADING)+5,C':'\n         ED    WORK_HEADING+(HEAD_DUMP-HEADING)(L'HEAD_DUMP),COMM_SNAP_+\n               NBR\n         AP    WORK_PAGE,P1\n         ED    WORK_HEADING+(HEAD_PAGE-HEADING)(L'HEAD_PAGE),WORK_PAGE\n         PUT   WORK_DCB,WORK_HEADING\n         MVI   WORK_HEADING,C' '\n         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING\n         ZAP   WORK_LINE,P1\n         TM    WORK_FLAGS,$WORK_TRACE\n         BOR   R10\n         LA    R1,((L'WORK_PRINT_DATA-MSG04L)/(FLDL+5))\n         LA    R15,WORK_HEADING+(MSG04_DATA-MSG04)+1\nHEAD0010 DS    0H\n         MVC   0(FLD_HEADL,R15),FLD_HEAD\n         LA    R15,FLD_HEADL+5(R15)\n         BCT   R1,HEAD0010\n         PUT   WORK_DCB,WORK_HEADING\n         MVI   WORK_HEADING,C' '\n         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING\n         AP    WORK_LINE,P1\n         BR    R10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   WPLTXT(MSG02L),MSG02\n         UNPK  WPLTXT+(MSG02_R15-MSG02)(5),DAIR_R15(3)\n         MVZ   WPLTXT+(MSG02_R15-MSG02)(4),HEXZERO\n         TR    WPLTXT+(MSG02_R15-MSG02)(4),HEXCHAR\n         MVI   WPLTXT+(MSG02_R15-MSG02)+4,C' '\n         UNPK  WPLTXT+(MSG02_ERR-MSG02)(5),DAIR_ERROR(3)\n         MVZ   WPLTXT+(MSG02_ERR-MSG02)(4),HEXZERO\n         TR    WPLTXT+(MSG02_ERR-MSG02)(4),HEXCHAR\n         MVI   WPLTXT+(MSG02_ERR-MSG02)+4,C' '\n         UNPK  WPLTXT+(MSG02_INFO-MSG02)(5),DAIR_INFO(3)\n         MVZ   WPLTXT+(MSG02_INFO-MSG02)(4),HEXZERO\n         TR    WPLTXT+(MSG02_INFO-MSG02)(4),HEXCHAR\n         MVI   WPLTXT+(MSG02_INFO-MSG02)+4,C' '\n         BAL   R10,WTO0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORK_WTO),               ISSUE WTO                +\n               CONSID=WORK_CID                .. TO SAME CONSOLE\n         MVI   WPLTXT,C' '\n         MVC   WPLTXT+1(99),WPLTXT\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDCBI     DCB   DDNAME=LIBSNAP,                                         +\n               DSORG=PS,                                               +\n               LRECL=133,                                              +\n               RECFM=FBA,                                              +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,OUTPUT),MF=L,MODE=31\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MF=L,MODE=31\nCLOSEL   EQU   *-CLOSEI\nENQI     ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L\nENQL     EQU   *-ENQI\nQNAME    DC    CL8'LIB'\nRNAME    DC    CL8'COMMUSER'\n\nA_SCOMM_FDEF    DC  A(SCOMM_FDEF)\nA_LIBBLOK_FDEF  DC  A(LIBBLOK_FDEF)\nA_USERBLOK_FDEF DC  A(USERBLOK_FDEF)\nA_LIBUSER_FDEF  DC  A(LIBUSER_FDEF)\n\nWTOI     WTO   '                                                       +\n                                                                     ',+\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\n\nH8          DC    H'8'\n\nP0          DC    P'0'\nP1          DC    P'1'\nP1900000    DC    P'1900000'\nMAXLINE     DC    P'65'\nDAIRID      DC    CL8'DAIRREQ'\nSNAPDDN     DC    CL8'LIBSNAP'\nHEXZERO     DC    8X'00'\nHEXCHAR     DC    C'0123456789ABCDEF'\n\nHEADING     DS    0C\n            DC    C'1'\nHEAD_DATE   DC    X'40212020204B202020'\n            DC    CL2' '\nHEAD_TIME   DS    CL8' '\n            DC    CL29' '\n            DC    C'LIBRARIAN SNAP DUMP'\nHEAD_DUMP   DC    X'40206B2020206B202120'\n            DC    CL40' '\nHEAD_PAGE   DC    X'402020202120'\nHEADINGL    EQU   *-HEADING\n\nFLD_HEAD    DC    CL16'LABEL'\n            DC    CL2' '\n            DC    CL4'TYPE'\n            DC    CL3' '\n            DC    CL3'LEN'\n            DC    CL2' '\n            DC    CL4'DISP'\n            DC    CL3' '\n            DC    CL7'VALUE'\nFLD_HEADL   EQU   *-FLD_HEAD\n\nMSG01       DS    0C\n            DC    C'LIBSSNAP01I'\n            DC    C'SNAP DUMP complete'\nMSG01L      EQU   *-MSG01\n\nMSG02       DS    0C\n            DC    C'LIBSSNAP02E '\n            DC    C'Allocation for SNAP DUMP failed.  R15='\nMSG02_R15   DC    CL4' '\n            DC    C'  ERROR='\nMSG02_ERR   DC    CL4' '\n            DC    C' INFO='\nMSG02_INFO  DC    CL4' '\nMSG02L      EQU   *-MSG02\n\nMSG03       DC    C'LIBSSNAP03I'\n            DC    C' '\nMSG03_BLOCK DC    CL8' '\n            DC    C' AT '\nMSG03_ADDR  DC    CL8' '\nMSG03L      EQU   *-MSG03\n\nMSG04       DC    C'LIBSSNAP04I'\n            DC    C' '\nMSG04_DATA  DS    C\nMSG04L      EQU   *-MSG04\n\nMSG05       DC    C'LIBSSNAP05I'\n            DC    CL10' '\n            DC    C'-------------  TRACE TABLE ------------'\nMSG05L      EQU   *-MSG05\n\nMSG06       DS    0C\n            DC    C'          '\nMSG06_CUR   DC    CL11' '\n            DC    CL03' '\nMSG06_TCB   DC    CL06' '\n            DC    CL03' '\nMSG06_MOD   DC    CL05' '\n            DC    CL03' '\nMSG06_ID    DC    CL08' '\n            DC    CL03' '\nMSG06_D1    DC    CL08' '\n            DC    C' '\nMSG06_D1X   DC    CL16' '\n            DC    CL03' '\nMSG06_D2    DC    CL08' '\n            DC    C' '\nMSG06_D2X   DS    CL16' '\n            DC    C' '\nMSG06L      EQU   *-MSG06\n\n*-------------------  0 1 2 3 4 5 6 7 8 9 A B C D E F  --------------*\nPRINTABLE DS    0C\n          DC    XL16'40404040404040404040404040404040'   x'00' - X'0F'\n          DC    XL16'40404040404040404040404040404040'   X'10' - X'1F'\n          DC    XL16'40404040404040404040404040404040'   X'20' - X'2F'\n          DC    XL16'40404040404040404040404040404040'   X'30' - X'3F'\n          DC    XL16'404040404040404040404A4B4C4D4E4F'   X'40' - X'4F'\n          DC    XL16'504040404040404040405A5B5C5D5E5F'   X'50' - X'5F'\n          DC    XL16'60614040404040404040406B6C6D6E6F'   X'60' - X'6F'\n          DC    XL16'404040404040404040407A7B7C7D7E7F'   X'70' - X'7F'\n          DC    XL16'40404040404040404040408B8C8D8E8F'   X'80' - X'8F'\n          DC    XL16'40404040404040404040409B9C9D9E9F'   X'90' - X'9F'\n          DC    XL16'4040404040404040404040ABACADAEAF'   X'A0' - X'AF'\n          DC    XL16'4040404040404040404040BBBCBDBEBF'   X'B0' - X'BF'\n          DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'   X'C0' - X'CF'\n          DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'   X'D0' - X'DF'\n          DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'   X'E0' - X'EF'\n          DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'   X'F0' - X'FF'\n          LTORG\n* ------------------------------------------------------------------- *\n*              WORK AREA                                              *\n* ------------------------------------------------------------------- *\nWORK_AREA        DSECT\n                 LIBSAVE  DSECT=NO\nWORK_DWORD       DS   D\nWORK_CID         DS   F\nWORK_WTO         DS   0A,(WTOL)X\nWORK_DCB         DS   0F,(DCBL)X\nWORK_OPEN        DS   0F,(OPENL)X\nWORK_CLOSE       DS   0F,(CLOSEL)X\nWORK_ENQ         DS   0F,(ENQL)X\n\nWORK_FMT_BASE    DS   F\nWORK_FMT_FDEF    DS   F\n\nWORK_TIME_DATE   DS   0F\nWORK_TIME        DS   XL4\nWORK_DATE        DS   PL4\n\nWORK_UNPACK      DS   CL10\n                 DS   X\n\nWORK_PAGE        DS   PL3\nWORK_LINE        DS   PL3\n\nWORK_PRINT_SPACE DS   C\nWORK_PRINT       DS   0CL133\nWORK_PRINT_CC    DS   C\nWORK_PRINT_DATA  DS   CL132\n\nWORK_HEADING     DS   CL133\n\nWORK_FLAGS       DS   X\n$WORK_TRACE      EQU  X'80'\n\n                 DAIRREQ  DSECT=NO\nWORKAREA_L       EQU  *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFDEF        DSECT\nFDEF_NAME   DS    CL16                 FIELD NAME\nFDEF_DISP   DS    AL2                  DISPLACEMENT TO FIELD\nFDEF_TYPE   DS    C                    FIELD TYPE\nFDEF_LENGTH DS    AL2                  FIELD LENGTH\nFDEFL       EQU   *-FDEF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFLD        DSECT\nFLD_LABEL  DS    CL16'LABEL'\n           DS    CL2' '\nFLD_TYPE   DS    CL4'TYPE'\n           DS    CL2' '\nFLD_LENGTH DS    CL4'LEN'\n           DS    CL2' '\nFLD_DISP   DS    CL4' '\n           DS    CL2' '\nFLD_VALUE  DS    CL8'VALUE'\nFLDL       EQU   *-FLD\n* ------------------------------------------------------------------- *\n*              COMMON DATA MAP                                        *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBBLOK  DSECT=YES\n         LIBUSER  DSECT=YES\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*              WTO PARM LIST                                          *\n* ------------------------------------------------------------------- *\n         IEZWPL DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB AM=VTAM\nACBL     EQU    *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA LIST=NO\n* ------------------------------------------------------------------- *\n*              STC common area FDEFs                                  *\n* ------------------------------------------------------------------- *\nLIBSSNAP       CSECT\nSCOMM_FDEF     DS    0C\n               FDEF  BASE=LIBSCOMM\n               FDEF  COMMDWRD,X,4\n               FDEF  COMMDWRD+4,X,4\n               FDEF  COMMDXDA\n               FDEF  TRFIRST\n               FDEF  TRLAST\n               FDEF  TRCURR\n               FDEF  TRADDR\n               FDEF  TRSIZE\n               FDEF  COMM_LIBATTN\n               FDEF  COMM_LIBLERAD\n               FDEF  COMM_LIBSMAIN\n               FDEF  COMM_PRINT_TCB\n               FDEF  COMM_PRINT_REQ\n               FDEF  COMM_PRINT_TERM_ECB\n               FDEF  COMM_PRINT_WORK_ECB\n               FDEF  COMM_CSUB_TCB\n               FDEF  COMM_CSUB_TERM_ECB\n               FDEF  COMM_CSUB_WORK_ECB\n               FDEF  COMM_DSUB_TCB\n               FDEF  COMM_DSUB_REQ\n               FDEF  COMM_DSUB_TERM_ECB\n               FDEF  COMM_DSUB_WORK_ECB\n               FDEF  COMM_LSUB_TCB\n               FDEF  COMM_LSUB_REQ\n               FDEF  COMM_LSUB_TERM_ECB\n               FDEF  COMM_LSUB_WORK_ECB\n               FDEF  COMM_HSUB_TCB\n               FDEF  COMM_HSUB_REQ\n               FDEF  COMM_HSUB_TERM_ECB\n               FDEF  COMM_HSUB_WORK_ECB\n               FDEF  COMM_LIBRARY_CHAIN\n               FDEF  COMM_USER_CHAIN\n               FDEF  COMM_VTAM_LOGINS\n               FDEF  COMM_TCPIP_LOGINS\n               FDEF  COMMXUSR\n               FDEF  COMM_ATTN_ECB,X,4\n               FDEF  COMM_TERMINATION_ECB,X,4\n               FDEF  COMM_NETWORK_IO_AREA\n               FDEF  COMM_VTAM_ECB,X,4\n               FDEF  COMM_ACB\n               FDEF  COMM_APPL_NAME_LENGTH,X,1\n               FDEF  COMM_APPL_NAME\n               FDEF  COMM_FLAGS\n               FDEF  COMM_EOJ_PHASE\n               FDEF  COMM_SNAP_CLASS\n               FDEF  COMM_RC\n               FDEF  COMMRACF,X,1\n               FDEF  COMMRACF+1,C,8\n               FDEF  COMM_MAX_LINES\n               DC    X'FF'\nLIBBLOK_FDEF   DS    0C\n               FDEF  BASE=LIBBLOK\n               FDEF  LIB_EYE\n               FDEF  LIB_NEXT\n               FDEF  LIB_READS\n               FDEF  LIB_WRITES\n               FDEF  LIB_NEW\n               FDEF  LIB_CHECK_OUT\n               FDEF  LIB_CHECK_IN\n               FDEF  LIB_VIEW\n               FDEF  LIB_UPDATE\n               FDEF  LIB_DELETE\n               FDEF  LIB_USERS\n               FDEF  LIB_NAME\n               FDEF  LIB_DESCRIPTION\n               FDEF  LIB_VSAM_DSN\n               FDEF  LIB_ACB\n               FDEF  LIB_STATUS\n               DC    X'FF'\nLIBUSER_FDEF   DS    0C\n               FDEF  BASE=LIBUSER\n               FDEF  LIB_USER_EYE\n               FDEF  LIB_USER_NEXT\n               FDEF  LIB_USER_USER\n               DC    X'FF'\nUSERBLOK_FDEF  DS    0C\n               FDEF  BASE=USERBLOK\n               FDEF  USEREYE\n               FDEF  USER_NEXT\n               FDEF  USER_TIME\n               FDEF  USER_DATE\n               FDEF  USER_TCB\n               FDEF  USER_TERMINATION_ECB\n               FDEF  USER_COMM\n               FDEF  USER_SELF\n               FDEF  USER_DXD\n               FDEF  USER_RPL\n               FDEF  USER_RPLX\n               FDEF  USER_NETWORK_ECB\n               FDEF  USER_WORK_ECB\n               FDEF  USER_CONVERSATION_ID\n               FDEF  USER_IO\n               FDEF  USER_PARTNER_LU\n               FDEF  USER_RECEIVES\n               FDEF  USER_BYTES_RECEIVED\n               FDEF  USER_SENDS\n               FDEF  USER_BYTES_SENT\n               FDEF  USER_SYSTEM_SMF\n               FDEF  USER_USER_ID\n               FDEF  USER_JOB\n               FDEF  USER_NAME\n               FDEF  USER_LIBRARY\n               FDEF  USER_AUTH_LIBS\n               FDEF  USER_STATUS\n               FDEF  USER_IP_ADDRESS\n               DC    X'FF'\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBSSNAP\n./ ADD NAME=LIBSVTAM 0100-09250-09250-0919-00184-00184-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: LIBSVTAM                                                     *\n*                                                                     *\n*  Purpose: VTAM subtask                                              *\n*           The librarian uses VTAM LU 6.2 protocols.                 *\n*           As VTAM applications go, 6.2 is very simple.              *\n*           All this subtask does is OPEN, SETLOGON, and CLOSE.       *\n*           The majority of the work is done in the attention exit    *\n*           and the user subtask(s).                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBSVTAM CSECT\nLIBSVTAM AMODE 31\nLIBSVTAM RMODE ANY\n         USING LIBSVTAM,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'LIBSVTAM'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,0(R1)                      LIBSCOMM ADDRESS\n* ------------------------------------------------------------------- *\n*        ACQUIRE STORAGE FOR WORK AREA                                *\n* ------------------------------------------------------------------- *\n         GETMAIN RU,                          ACQUIRE WORK AREA STORAGE+\n               LV=WORKAREA_L,                 .. WORK AREA SIZE        +\n               LOC=ANY                        ..\n         ST    R1,8(R13)                      CHAIN SAVE AREAS\n         ST    R13,4(R1)\n         LR    R13,R1                         COPY SAVE AREA ADDRESS\n         USING WORK,R13                       DEFINE BASE\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK\n         MVC   WORK_ACB(ACBL),ACBI            INITIALIZE ACB\n         MVC   WORK_EXLST(EXLSTL),EXLSTI\n         MVC   WORK_RPL(RPLL),RPLI\n         LA    R10,WORK_ACB                   ACB ADDRESS\n         USING IFGACB,R10                     DEFINE BASE\n         ST    R10,COMM_ACB                   SET ACB ADDRESS\n         LA    R0,ACBL                        ACB LENGTH\n         ST    R0,COMM_ACB_LENGTH             SET ACB LENGTH\n         LA    R9,WORK_EXLST                  EXIT LIST ADDRESS\n         USING IFGEXLST,R9                    DEFINE BASE\n         ST    R11,ACBUSER                    SET COMM ADDRESS IN ACB\n         LA    R1,COMM_APPL_NAME_LENGTH       ADDR OF ACB NAME LENGTH\n         ST    R1,ACBAPID                     SET ADDRESS\n         ST    R9,ACBEXLST                    SET ADDRESS OF EXIT LIST\n         MVC   EXLATTNP,COMM_LIBATTN          SET ATTENTION EXIT ADDR\n         MVC   EXLLERP,COMM_LIBLERAD          SET LERAD EXIT ADDRESS\n         MVC   WORK_OCPL(OPENL),OPENI\n         OPEN  ((R10),OUTPUT),                OPEN THE ACB             +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         ITRACE ID=OPEN_RC,                                            +\n               RDATA1=R15\n         SETLOGON ACB=(R10),                  ALLOW LOGONS             +\n               RPL=WORK_RPL,                  .. RPL ADDRESS           +\n               OPTCD=START                    .. ENABLE ATTN EXIT\n         MVC   PRTMSGID(MSG01L),MSG01\n         BAL   R8,PRT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       Strange, isn't it?                                            *\n*                                                                     *\n*       All this does is OPEN the ACB and issue a SETLOGON.           *\n*       After issuing the SETLOGON the rest of the work is            *\n*       done in the attention exit and in the user subtask(s).        *\n*                                                                     *\n*       All this needs to do is WAIT for the main task to             *\n*       POST An ECB.  The only reason the main task POSTs the         *\n*       ECB is to signal shutdown time.                               *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         WAIT  1,ECB=COMM_VTAM_WORK_ECB       WAIT FOR MAIN TASK\n         MVC   PRTMSGID(MSG02L),MSG02\n         BAL   R8,PRT0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE\n         ST    R2,PRTNEXT-PRTBLOK(R1)                         '\n         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         BR    R8                             COMPLETE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         MVC   WORK_OCPL(CLOSEL),CLOSEI\n         CLOSE WORK_ACB,                                               +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        CLEAR REGISTER\n         BR    R14                            EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOPENI    OPEN  (*,UPDAT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\nACBI     ACB   AM=VTAM,                                                +\n               MACRF=LOGON,                                            +\n               EXLST=*,                                                +\n               APPLID=*\nEXLSTI   EXLST AM=VTAM,                                                +\n               ATTN=*,                                                 +\n               LERAD=*\nEXLSTL   EQU   *-EXLSTI\nRPLI     RPL   AM=VTAM\nPRTID    DC    CL8'PRTBLOK'\nMSG01    DC    CL11'LIBSVTAM01I'\n         DC    C'VTAM subtask initialization complete'\nMSG01L   EQU   *-MSG01\nMSG02    DC    CL11'LIBSVTAM02I'\n         DC    C'VTAM subtask terminating'\nMSG02L   EQU   *-MSG02\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        WORK AREA                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK      DSECT\n                LIBSAVE DSECT=NO\nWORK_DWORD      DS      D\n\nWORK_ACB        DS      0A,(ACBL)X\nWORK_EXLST      DS      0A,(EXLSTL)X\nWORK_RPL        DS      0A,(RPLL)X\nWORK_OCPL       DS      0A,(OPENL)X\n\n                PRTBLOK DSECT=NO\nWORKAREA_L      EQU *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*        ACB                                                          *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*        EXIT LIST                                                    *\n* ------------------------------------------------------------------- *\n         IFGEXLST AM=VTAM\n* ------------------------------------------------------------------- *\n*        RPL                                                          *\n* ------------------------------------------------------------------- *\n         IFGRPL   AM=VTAM\nRPLL     EQU      *-IFGRPL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n         COPY     REGEQU\n         END      LIBSVTAM\n./ ADD NAME=LIBTADMN 0100-09250-09250-0919-00304-00304-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTADMN                                              *\n*                                                                     *\n*  Function:                                                          *\n*   Allows the status to be updated \"manually\"                        *\n*                                                                     *\n*                                                                     *\n*   At times you may need to 'force' the status of a member from      *\n*   IN to OUT or change who the member is \"checked out to\".           *\n*                                                                     *\n*                                                                     *\n*   This will display the current status and allow it to be           *\n*   overtyped.  You should use this utility with great caution        *\n*   and the security for it should be tightly controlled.             *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTADMN CSECT\nLIBTADMN AMODE 31\nLIBTADMN RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTADMN,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     ADMN0000\nMODID    DC    CL8'LIBTADMN'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nADMN0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTADMN,R13                   DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    ADMN0010                       YES\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\nADMN0010 DS    0H\n         L     R7,COMM_NETWORK_IO_AREA        I/O AREA ADDRESS\n         USING NETBLOK,R7                     DEFINE BASE\n         MVC   SPF_COMM1,COMM_BLANKS\n         MVC   SPF_COMM2,COMM_BLANKS\n         MVC   SPF_COMM3,COMM_BLANKS\n         MVC   SPF_COMM4,COMM_BLANKS\n         MVC   SPF_COMM5,COMM_BLANKS\n         MVC   DXD_RC,H2                      DEFAULT RC\n* ------------------------------------------------------------------- *\n*      Verify the user is authorized                                  *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CHKAUTH\n         MVI   NET_FUNCTION,$NET_CHECK_ADMIN_AUTH\n         LA    R1,NET_LENGTH_1\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         MVC   NET_MEM_VER,COMM_VERSION       SET VERSION\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?\n         BNE   ERR0010                        NO\n         MVC   LIB_RECORD(LIB_INDEX_RECORD_LENGTH),NET_DATA\n*---------------------------------------------------------------------*\n*                                                                     *\n*        USUBADMN will have returned the base index record.           *\n*                                                                     *\n*        Display the current state                                    *\n*                                                                     *\n*---------------------------------------------------------------------*\nADMN0100 DS    0H\n         TM    LIB_INDEX_STATUS,$LIB_STATUS_IN\n         BO    ADMN0110\n         MVC   SPF_IN_OUT_STATUS,=CL3'OUT'\n         B     ADMN0120\nADMN0110 DS    0H\n         MVC   SPF_IN_OUT_STATUS,=CL3'IN '\nADMN0120 DS    0H\n         MVC   SPF_OUT_USER,LIB_INDEX_CHECK_OUT_USER\n         MVC   SPF_OWNER,LIB_INDEX_OWNER\n*---------------------------------------------------------------------*\n*        Display the ADMIN panel                                      *\n*---------------------------------------------------------------------*\nADMN0200 DS    0H\n         ITRACE ID=DISPLAY,                                            +\n               LIB_INDEX_OWNER,                                        +\n               SPF_OWNER\n         MVC   SPF_PANEL,ADMIN_PANEL          SET PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDRESS\n         BALR  R14,R15                        DISPLAY THE PANEL\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE\n         MVC   SPF_MSG2,COMM_BLANKS\n         MVC   SPF_MSG3,COMM_BLANKS\n         MVC   SPF_MSG4,COMM_BLANKS\n         MVC   SPF_MSG5,COMM_BLANKS\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                        ZERO?\n         BNZ   EXIT0000                       NO\n*---------------------------------------------------------------------*\n*        Check for any update(s)                                      *\n*---------------------------------------------------------------------*\n         ITRACE ID=XX\n         NI    DXD_FLAG,255-$UPDATE\n         CLC   SPF_IN_OUT_STATUS,=C'IN '\n         BE    ADMN0220\n         CLC   SPF_IN_OUT_STATUS,=C'I  '\n         BE    ADMN0220\n         CLC   SPF_IN_OUT_STATUS,=C'OUT'\n         BE    ADMN0230\n         CLC   SPF_IN_OUT_STATUS,=C'O  '\n         BE    ADMN0230\nADMN0210 DS    0H\n         ITRACE ID=BADSTAT,                                            +\n               DATA1=SPF_IN_OUT_STATUS\n         MVC   SPF_MSG1(MSG01L),MSG01\n         B     ADMN0200\nADMN0220 DS    0H\n         ITRACE ID=ADMN0220\n         CLI   LIB_INDEX_STATUS,$LIB_STATUS_IN\n         BE    ADMN0240\n         ITRACE ID=IN\n         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN\n         OI    DXD_FLAG,$UPDATE\n         B     ADMN0240\nADMN0230 DS    0H\n         ITRACE ID=ADMN0230\n         CLI   LIB_INDEX_STATUS,$LIB_STATUS_OUT\n         BE    ADMN0240\n         ITRACE ID=OUT\n         MVI   LIB_INDEX_STATUS,$LIB_STATUS_OUT\n         TIME  DEC\n         STCM  R0,15,LIB_INDEX_CHECK_OUT_TIME\n         STCM  R1,15,LIB_INDEX_CHECK_OUT_DATE\n         OI    DXD_FLAG,$UPDATE\nADMN0240 DS    0H\n         ITRACE ID=ADMN0240\n         CLC   SPF_OUT_USER,LIB_INDEX_CHECK_OUT_USER\n         BE    ADMN0250\n         ITRACE ID=NEW_OUT,                                            +\n               DATA1=SPF_OUT_USER,                                     +\n               DATA2=LIB_INDEX_CHECK_OUT_USER\n         MVC   LIB_INDEX_CHECK_OUT_USER,SPF_OUT_USER\n         OI    DXD_FLAG,$UPDATE\nADMN0250 DS    0H\n         ITRACE ID=ADMN0250\n         CLC   SPF_OWNER,LIB_INDEX_OWNER\n         BE    ADMN0260\n         ITRACE ID=NEWOWNER,                                           +\n               DATA1=SPF_OWNER,                                        +\n               DATA2=LIB_INDEX_OWNER\n         MVC   LIB_INDEX_OWNER,SPF_OWNER\n         OI    DXD_FLAG,$UPDATE\nADMN0260 DS    0H\n         ITRACE ID=ADMN0260\n         TM    DXD_FLAG,$UPDATE\n         BNO   ADMN0200\n         ITRACE ID=UPDATE\n         MVI   NET_FUNCTION,$NET_SEND_ADMIN\n         LA    R1,NET_LENGTH_1+LIB_INDEX_RECORD_LENGTH\n         STCM  R1,3,NET_LENGTH\n         MVC   NET_DATA(LIB_INDEX_RECORD_LENGTH),LIB_RECORD\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         B     ADMN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0010\n         ITRACE ID=VTAMSEND\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0030\nSEND0010 DS    0H\n         ITRACE ID=IP_SEND\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0030 DS    0H\n         ITRACE ID=SEND0000,                                           +\n               DATA1=NET_LENGTH\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=SENT\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         ITRACE ID=RECV0020\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NOTAUTH\n         MVC   SPF_MSG1,NET_MSG_1\n         MVC   SPF_MSG2,NET_MSG_2\n         MVC   SPF_MSG3,NET_MSG_3\n         MVC   SPF_MSG4,NET_MSG_4\n         MVC   SPF_MSG5,NET_MSG_5\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LH    R15,DXD_RC                     SET RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(DXDTADMN)\nDISPLAY        DC    CL8'DISPLAY'\nADMIN_PANEL    DC    CL8'ADMPANEL'\nH2             DC    H'2'\n\nMSG01          DC    CL11'LIBTADMN1E'\n               DC    C'Invalid in/out status'\nMSG01L         EQU   *-MSG01\n\n               LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTADMN       DSECT\n               LIBSAVE DSECT=NO\n\nDXD_DWORD      DS      D\n\nDXD_SPF_PARMS  DS     0F\nDXD_SPF_1      DS      F\nDXD_SPF_2      DS      F\n\nDXD_RC         DS      H\n\nDXD_FLAG       DS      X\n$UPDATE        EQU     X'80'\n\n               VTAMREQ DSECT=NO\n\n               LIBRECD DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               TCOMM   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               LIBSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               NETBLOK DSECT=YES\nNET_LIB_NAME   DS      CL8\nNET_MEM_NAME   DS      CL8\nNET_MEM_VER    DS      XL2\nNET_LENGTH_1   EQU     *-NETBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB  AM=VTAM\nACBL     EQU     *-IFGACB\n         LIBBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA  DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY    REGEQU\n         END     LIBTADMN\n./ ADD NAME=LIBTBRWS 0100-09250-09250-0919-00390-00390-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTBRWS                                              *\n*                                                                     *\n*  Function:                                                          *\n*   Browse a member.  This is similar to the 'view' option.           *\n*   The primary difference is that the user does not have to          *\n*   specify a data set.  The data is written to a temporary           *\n*   data set then displayed by SPF BROWSE.                            *\n*                                                                     *\n*   DD LIBBRWS must be pre-allocated.                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTBRWS CSECT\nLIBTBRWS AMODE 31\nLIBTBRWS RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTBRWS,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     INIT0000\nMODID    DC    CL8'LIBTBRWS'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTBRWS,R13                   DEFINE WORK AREA BASE\n         USING IHADCB,R7\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\n         XC    DXD_AUX01,DXD_AUX01            INIT EXIT ENTRY POINT\n         SR    R6,R6\n         SR    R7,R7\n*---------------------------------------------------------------------*\n*        Verify the user is authorized                                *\n*---------------------------------------------------------------------*\n         MVI   NET_FUNCTION,$NET_CHECK_VIEW_AUTH\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?\n         BNE   ERR0020                        NO\n*---------------------------------------------------------------------*\n*        Save number of records                                       *\n*---------------------------------------------------------------------*\n         ICM   R0,15,NET_SOURCE_RECORDS       NBR OF SOURCE RECORDS\n         STCM  R0,15,COMM_SOURCE_RECORDS      SAVE NBR\n         STCM  R0,15,DXD_SOURCE_RECORDS       SAVE NBR\n*---------------------------------------------------------------------*\n*        GETMAIN DCB and OPEN/CLOSE PARM list                         *\n*---------------------------------------------------------------------*\n         GETMAIN RU,                                                   +\n               LV=DCBL,                                                +\n               LOC=BELOW\n         LR    R7,R1\n         MVC   0(DCBL,R7),DCBI                INITIALIZE DCB\n         GETMAIN RU,                                                   +\n               LV=OPENL,                                               +\n               LOC=BELOW\n         LR    R6,R1\n*---------------------------------------------------------------------*\n*        OPEN the DCB                                                 *\n*---------------------------------------------------------------------*\n         MVC   0(OPENL,R6),OPENI\n         OPEN  ((R7),OUTPUT),                                          +\n               MODE=31,                                                +\n               MF=(E,(R6))\n*---------------------------------------------------------------------*\n*                                                                     *\n*     GETMAIN a buffer for decompression and initialize the           *\n*     parameter list for the de-compression subroutine.               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=BELOW\n         ST    R1,UX01_EXPANDED_BUFFER\n         LA    R1,DXD_EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,NET_DATA\n         ST    R1,UX01_COMPRESSED_BUFFER\n         LA    R1,DXD_COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n         OC    DXD_AUX01,DXD_AUX01\n         BNZ   BRWS0010\n         LOAD  EP=LIBUX01\n         ST    R0,DXD_AUX01\n*---------------------------------------------------------------------*\n*     Get source from library, de-compress, write to output dataset   *\n*---------------------------------------------------------------------*\nBRWS0010 DS    0H\n         ITRACE ID=GETSRC\n         MVI   NET_FUNCTION,$NET_VIEW_SOURCE\n         BAL   R8,SEND0000                    SEND\n         BAL   R8,RECV0000                    RECEIVE\n         CLI   NET_RETURN_CODE,$NET_ERROR     ERROR?\n         BE    ERR0030                        YES\n         CLI   NET_RETURN_CODE,$NET_EOF       EOF?\n         BE    BRWS0040                       YES\n         ITRACE ID=DECOMPRESS\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,NET_LENGTH                LENGTH OF DATA\n         SH    R1,=Y(NETBLOKL)                MINUS HEADER LENGTH\n         ST    R1,DXD_COMPRESSED_LENGTH       LENGTH OF COMPRESSED DATA\n         L     R4,DXD_SOURCE_RECORDS          NUMBER OF SOURCE RECORDS\n         CH    R4,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?\n         BL    BRWS0020                       NO\n         LH    R4,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER\nBRWS0020 DS    0H                             CLEAR FOR RECORD COUNT\n         ST    R4,DXD_CURRENT_RECORDS         NUMBER IN CURRENT BUFFER\n         L     R1,DXD_SOURCE_RECORDS          NUMBER OF RECORDS LEFT\n         SR    R1,R4                          MINUS NUMBER IN BUFFER\n         ST    R1,DXD_SOURCE_RECORDS          SAVE REMAINDER\n         MH    R4,H80                         NUMBER * LENGTH\n         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH\n         MVI   UX01_FUNCTION,$UX01_DECOMPRESS\n         LA    R1,UX01_PARMS\n         L     R15,DXD_AUX01                  USER EXIT 1 ENTRY POINT\n         BALR  R14,R15                        ALLOW DECOMPRESSION\n         L     R2,UX01_EXPANDED_BUFFER        EXPANDED DATA BUFFER\n         L     R3,DXD_CURRENT_RECORDS         NBR OF RECORDS\nBRWS0030 DS    0H\n         PUT   (R7),(R2)                      WRITE DATA\n         LA    R2,80(,R2)                     NEXT RECORD\n         BCT   R3,BRWS0030                    LOOP\n         B     BRWS0010                       ASK FOR NEXT BLOCK\n*---------------------------------------------------------------------*\n*        All source has been written.                                 *\n*---------------------------------------------------------------------*\nBRWS0040 DS    0H\n         ITRACE ID=EOF\n*---------------------------------------------------------------------*\n*        Free decompress buffer                                       *\n*---------------------------------------------------------------------*\n         L     R1,UX01_EXPANDED_BUFFER        DECOMPRESS BUFFER\n         FREEMAIN RU,                         FREEMAIN BUFFER          +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE\n         XC    UX01_EXPANDED_BUFFER,UX01_EXPANDED_BUFFER\n*---------------------------------------------------------------------*\n*        Close DCB                                                    *\n*---------------------------------------------------------------------*\n         CLOSE ((R7)),                                                 +\n               MODE=31,                                                +\n               MF=(E,(R6))\n*---------------------------------------------------------------------*\n*        Free DCB and OPEN/CLOSE PARM list                            *\n*---------------------------------------------------------------------*\n         FREEMAIN RU,                                                  +\n               A=(R7),                                                 +\n               LV=DCBL\n         FREEMAIN RU,                                                  +\n               A=(R6),                                                 +\n               LV=OPENL\n*---------------------------------------------------------------------*\n*        Issue LMINIT                                                 *\n*---------------------------------------------------------------------*\n         ITRACE ID=LMINIT\n         LA    R0,LMINIT                      BUILD LMINIT PARM LIST\n         ST    R0,DXD_SPF_1\n         LA    R0,DATAID\n         ST    R0,DXD_SPF_2\n         LA    R0,COMM_BLANKS\n         ST    R0,DXD_SPF_3\n         ST    R0,DXD_SPF_4\n         ST    R0,DXD_SPF_5\n         ST    R0,DXD_SPF_6\n         ST    R0,DXD_SPF_7\n         ST    R0,DXD_SPF_8\n         ST    R0,DXD_SPF_9\n         LA    R0,LIBBRWS\n         ST    R0,DXD_SPF_10\n         OI    DXD_SPF_10,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,AISPLINK\n         BALR  R14,R15                        ISSUE LMINIT\n         ITRACE ID=INIT_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15\n         BNZ   ERR0010\n*---------------------------------------------------------------------*\n*        Invoke browse                                                *\n*---------------------------------------------------------------------*\n         ITRACE ID=BROWSE,                                             +\n               DATA1=SPF_DATA_ID\n         LA    R0,BROWSE\n         ST    R0,DXD_SPF_1\n         LA    R0,COMM_BLANKS\n         ST    R0,DXD_SPF_2\n         ST    R0,DXD_SPF_3\n         ST    R0,DXD_SPF_4\n         ST    R0,DXD_SPF_5\n         LA    R0,SPF_DATA_ID\n         ST    R0,DXD_SPF_6\n         OI    DXD_SPF_6,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,AISPLINK\n         BALR  R14,R15                        INVOKE BROWSE\n         ITRACE ID=BROWSERC,                                           +\n               RDATA1=R15\n         LTR   R15,R15\n         BNZ   ERR0040\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION\n         LA    R1,NET_BROWSE_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0010\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0020\nSEND0010 DS    0H\n         ITRACE ID=IP_SEND,                                            +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'0'\nERR0020  DS    0H\n         DC    H'0'\nERR0030  DS    0H\n         DC    H'0'\nERR0040  DS    0H\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         OC    DXD_AUX01,DXD_AUX01            USER EXIT LOADED?\n         BZ    EXIT0010                       NO\n         DELETE EP=LIBUX01\n         XC    DXD_AUX01,DXD_AUX01            CLEAR THE ADDRESS\nEXIT0010 DS    0H\n         ICM   R1,15,UX01_EXPANDED_BUFFER     BUFFER GETMAINED?\n         BZ    EXIT0020                       NO\n         ITRACE ID=FREEBUFF,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                         FREE EXPANDED BUFFER     +\n               A=(R1),                                                 +\n               LV=$MAX_SOURCE_SIZE\nEXIT0020 DS    0H\n         LH    R15,DXD_DISPLAY_RC             SET RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTBRWS)                    DISPLACEMENT TO WORK AREA\n\nH80      DC    H'80'\n\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=LIBBRWS,                                         +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               BLKSIZE=4000,                                           +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,OUTPUT),                                             +\n               MODE=31,                                                +\n               MF=L\nOPENL    EQU   *-OPENI\n\nBROWSE   DC    CL8'BROWSE'\nLMINIT   DC    CL8'LMINIT'\nDATAID   DC    CL8'DATAID'\nLIBBRWS  DC    CL8'LIBBRWS'\n         LTORG\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nDXDTBRWS      DSECT\n              LIBSAVE DSECT=NO\n              VTAMREQ DSECT=NO\n\nDXD_DCB               DS   0F,(DCBL)X\nDXD_OPEN_CLOSE        DS   0F,(OPENL)X\n\nDXD_SPF_PARMS         DS   0A\nDXD_SPF_1             DS   A\nDXD_SPF_2             DS   A\nDXD_SPF_3             DS   A\nDXD_SPF_4             DS   A\nDXD_SPF_5             DS   A\nDXD_SPF_6             DS   A\nDXD_SPF_7             DS   A\nDXD_SPF_8             DS   A\nDXD_SPF_9             DS   A\nDXD_SPF_10            DS   A\n\nDXD_AUX01             DS   A\n\nDXD_CURRENT_RECORDS   DS   F\n\nDXD_EXPANDED_LENGTH   DS   A           LENGTH OF EXPANDED DATA\nDXD_COMPRESSED_LENGTH DS   A           LENGTH OF COMPRESSED DATA\n\nDXD_SOURCE_RECORDS    DS   F           NUMBER OF RECORDS IN SOURCE\n\nDXD_SAVE_R14          DS   A\n\nDXD_DISPLAY_RC        DS   H           RETURN CODE FROM DISPLAY\n\n                      UX01PARM DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      LIBSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      NETBLOK  DSECT=YES\nNET_LIB_NAME          DS       CL8\nNET_MEM_NAME          DS       CL8\nNET_MEM_VERSION       DS       XL2\nNET_BROWSE_LENGTH     EQU      *-NETBLOK\n                      ORG      NET_DATA\nNET_SOURCE_RECORDS    DS       XL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBRECD DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB  AM=VTAM\nACBL     EQU     *-IFGACB\n         LIBBLOK DSECT=YES\n         IHAPSA  DSECT=YES,LIST=NO\n         DCBD    DSORG=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$MAX_SOURCE_SIZE EQU 8000\n         COPY REGEQU\n         END  LIBTBRWS\n./ ADD NAME=LIBTCKIN 0100-09250-09250-0919-00562-00562-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTCKIN                                              *\n*                                                                     *\n*  Function:                                                          *\n*   MEMBER CHECK-IN                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTCKIN CSECT\nLIBTCKIN AMODE 31\nLIBTCKIN RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTCKIN,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     INIT0000\nMODID    DC    CL8'LIBTCKIN'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTCKIN,R13                   DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\n*---------------------------------------------------------------------*\n*        Verify the user is authorized                                *\n*---------------------------------------------------------------------*\n         MVI   NET_FUNCTION,$NET_CHECK_IN_AUTH\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION\n         LA    R1,NET_CHECK_IN_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         BAL   R8,SEND0020\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?\n         BNE   ERR0010                        NO\n*---------------------------------------------------------------------*\n*        Get the member's description                                 *\n*---------------------------------------------------------------------*\n         ITRACE ID=GETDESC\n         MVC   SPF_COMM1,COMM_BLANKS\n         MVC   SPF_COMM2,COMM_BLANKS\n         MVC   SPF_COMM3,COMM_BLANKS\n         MVC   SPF_COMM4,COMM_BLANKS\n         MVC   SPF_COMM5,COMM_BLANKS\n         MVI   NET_FUNCTION,$NET_GET_DESC\n         LA    R1,NET_CHECK_IN_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         BAL   R8,SEND0020\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK        ANY COMMENTS?\n         BNE   CKIN0000                       NO\n         SR    R14,R14                        CLEAR REGISTER\n         ICM   R14,3,NET_LENGTH               LENGTH RETURNED\n         SH    R14,=Y(NET_CHECK_IN_LENGTH)\n         BZ    CKIN0000                       NO DESCRIPTION\n         LA    R15,NET_MEM_DOC                FIRST LINE IN I/O AREA\n         LA    R1,SPF_COMM1                   FIRST LINE IN SPF AREA\nINIT0010 DS    0H\n         MVC   0(L'SPF_COMM1,R1),0(R15)       COPY TO SPF AREA\n         AH    R15,=Y(L'SPF_COMM1)            NEXT IN SPF AREA\n         AH    R1,=Y(L'SPF_COMM1)             NEXT IN I/O AREA\n         SH    R14,=Y(L'SPF_COMM1)            MINUS LENGTH OF 1 AREA\n         BH    INIT0010\n*---------------------------------------------------------------------*\n*        Display the CHECK-IN panel                                   *\n*---------------------------------------------------------------------*\nCKIN0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SPF_PANEL,INPANEL              SET PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDRESS\n         BALR  R14,R15                        DISPLAY THE PANEL\n         STH   R15,DXD_DISPLAY_RC             SAVE RETURN CODE\n         CLC   =C'END ',SPF_ZCMD              DID THE USER ENTER 'END'?\n         BE    ABORT000                       YES\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE\n         LTR   R15,R15                        ZERO?\n         BNZ   ABORT000                       NO\n*---------------------------------------------------------------------*\n*        Determine the source dataset's DSORG                         *\n*---------------------------------------------------------------------*\n         MVC   SUB0001_PARM_DSN,SPF_USER_DSN\n         LA    R1,SUB0001_PARM_LIST           SUB0001 PARM LIST ADDRESS\n         L     R15,VSUB0001                   SUB0001 ENTRY POINT\n         ITRACE ID=CALLSUB1,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                        CALL SUB0001\n         ITRACE ID=DSORG,                                              +\n               DATA1=SUB0001_PARM_DSORG\n         CLI   SUB0001_PARM_DSORG,C'S'\n         BE    CKIN0010                       SEQUENTIAL\n         CLI   SUB0001_PARM_DSORG,C'P'\n         BE    CKIN0020                       PARTITIONED\n         MVC   SPF_MSG1(MSG01L),MSG01\n         B     CKIN0000                       RE-SEND WITH MESSAGE\nCKIN0010 DS    0H\n         ITRACE ID=SEQ\n         CLC   SPF_USER_MEMBER,COMM_BLANKS\n         BE    CKIN0030\n         MVC   SPF_MSG1(MSG03L),MSG03\n         B     CKIN0000                       RE-SEND WITH MESSAGE\nCKIN0020 DS    0H\n         ITRACE ID=PDS\n         CLC   SPF_USER_MEMBER,COMM_BLANKS\n         BNE   CKIN0030\n         ITRACE ID=NOMEM\n         MVC   SPF_MSG1(MSG04L),MSG04\n         B     CKIN0000                       RE-SEND WITH MESSAGE\nCKIN0030 DS    0H\n         BAL   R8,DAIR0100                    ALLOCATE EXISTING FILE\n         CLI   SUB0001_PARM_DSORG,C'S'        SEQUENTIAL FILE?\n         BE    CKIN0040\n         ITRACE ID=VERMEM                     VERIFYING MEMBER EXISTS\n         GETMAIN RU,                                                   +\n               LV=PO_DCBL,                                             +\n               LOC=BELOW\n         LR    R7,R1                          SAVE ADDRESS\n         MVC   0(PO_DCBL,R7),PO_DCBI          INITIALIZE THE DCB\n         GETMAIN RU,                                                   +\n               LV=OPENL,                                               +\n               LOC=BELOW\n         LR    R6,R1                          SAVE ADDRESS\n         MVC   0(OPENL,R6),OPENI              INITIALIZE OPEN\n         OPEN  ((R7),INPUT),                                           +\n               MODE=31,                                                +\n               MF=(E,(R6))\n         FIND  (R7),                                                   +\n               SPF_USER_MEMBER,                                        +\n               D\n         STH   R15,DXD_FIND_RC\n         MVC   0(CLOSEL,R6),CLOSEI\n         CLOSE ((R7)),                                                 +\n               MODE=31,                                                +\n               MF=(E,(R6))\n         FREEMAIN RU,                                                  +\n               A=(R6),                                                 +\n               LV=OPENL\n         FREEMAIN RU,                                                  +\n               A=(R7),                                                 +\n               LV=PO_DCBL\n         OC    DXD_FIND_RC,DXD_FIND_RC\n         BZ    CKIN0040                       MEMBER DOES NOT EXIST\n         MVC   SPF_MSG1(MSG02L),MSG02\n         B     CKIN0000                       RE-SEND WITH MESSAGE\n*---------------------------------------------------------------------*\n*                                                                     *\n*     The source dataset (or PDS member) has been allocated.          *\n*                                                                     *\n*     OPEN the source dataset.                                        *\n*                                                                     *\n*---------------------------------------------------------------------*\nCKIN0040 DS    0H\n         ITRACE ID=OPENSRC\n         GETMAIN RU,                                                   +\n               LV=PS_DCBL,                                             +\n               LOC=BELOW\n         LR    R7,R1                          COPY DCB ADDRESS\n         GETMAIN RU,                                                   +\n               LV=OPENL,                                               +\n               LOC=BELOW\n         LR    R6,R1                          COPY ADDRESS\n         GETMAIN RU,                                                   +\n               LV=PS_DCBEL,                                            +\n               LOC=BELOW\n         LR    R5,R1                          SAVE ADDRESS\n         MVC   0(PS_DCBL,R7),PS_DCBI          INITIALIZE DCB\n         MVC   0(OPENL,R6),OPENI              INITIALIZE PARM LIST\n         MVC   0(PS_DCBEL,R5),PS_DCBEI\n         USING IHADCB,R7\n         ST    R5,DCBDCBE                     RELOCATE THE DCBE ADDRESS\n         OPEN  ((R7),INPUT),                                           +\n               MODE=31,                                                +\n               MF=(E,(R6))\n*---------------------------------------------------------------------*\n*                                                                     *\n*     GETMAIN the source dataset I/O area and initialize the          *\n*     parameter list for the compression subroutine.                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nCKIN0050 DS    0H\n         ITRACE ID=INITCMPR                   INITIALIZING PARMS\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=BELOW\n         ST    R1,UX01_EXPANDED_BUFFER\n         LA    R1,DXD_EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,DXD_COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER\n         ST    R1,UX01_COMPRESSED_BUFFER\n         SR    R4,R4                          INITIALIZE LENGTH\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Send the description.                                           *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   NET_MEM_DOC+000(80),SPF_COMM1\n         MVC   NET_MEM_DOC+080(80),SPF_COMM2\n         MVC   NET_MEM_DOC+160(80),SPF_COMM3\n         MVC   NET_MEM_DOC+240(80),SPF_COMM4\n         MVC   NET_MEM_DOC+320(80),SPF_COMM5\n         LA    R14,400                        MAXIMUM LENGTH\n         LA    R15,SPF_COMM5                  ADDRESS OF LAST COMMENT\n         LA    R1,5                           MAX LOOPS\nCKIN0060 DS    0H\n         CLC   COMM_BLANKS,0(R15)             ALL BLANK?\n         BNE   CKIN0070                       NO\n         SH    R14,H80                        MINUS LENGTH OF ONE\n         SH    R15,H80                        MINUS LENGTH OF A COMMENT\n         BCT   R1,CKIN0060                    LOOP\nCKIN0070 DS    0H\n         LTR   R14,R14                        ANY COMMENTS?\n         BZ    CKIN0080                       NO\n         MVI   NET_FUNCTION,$NET_SEND_DESC\n         LA    R14,NET_CHECK_IN_LENGTH(R14)\n         STCM  R14,3,NET_LENGTH               SET LENGTH\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION\n         ITRACE ID=SENDDESC\n         BAL   R8,SEND0020                    SEND DESCRIPTION\n         BAL   R8,RECV0000                    RECEIVE RESPONSE\n         CLI   NET_RETURN_CODE,$NET_OK        SUCCESSFUL?\n         BNE   ERR0020\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Send the source to the librarian.                               *\n*                                                                     *\n*     The data is read a record at a time into a buffer.              *\n*     When the buffer is filled it is compressed and sent to          *\n*     the librarian.                                                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nCKIN0080 DS    0H\n         SR    R3,R3                          CLEAR RECORD COUNTER\n         SR    R4,R4                          CLEAR FOR BUFFER LENGTH\n         L     R2,UX01_EXPANDED_BUFFER        CURRENT BUFFER ADDRESS\nCKIN0090 DS    0H\n         GET   (R7),0(R2)                     READ A RECORD\n         LA    R3,1(R3)                       PLUS 1 SOURCE RECORD\n         LA    R4,80(R4)                      UPDATE BUFFER LENGTH\n         LA    R2,80(R2)                      UPDATE BUFFER ADDRESS\n         CH    R4,=Y($MAX_SOURCE_SIZE)        BUFFER FULL?\n         BL    CKIN0090                       NO\n         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH\n         MVI   NET_FUNCTION,$NET_CHECK_IN_SOURCE\n         BAL   R8,SEND0000                    SEND THIS BUFFER\n         BAL   R8,RECV0000                    RECEIVE RESPONSE\n         SR    R4,R4                          RESET BUFFER LENGTH\n         L     R2,UX01_EXPANDED_BUFFER        RESET BUFFER ADDRESS\n         B     CKIN0090                       READ NEXT RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     EOF has been reached on the source file.                        *\n*     Send the last buffer.                                           *\n*     Send the number of records in the source file.                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEOF0000  DS    0H\n         ITRACE ID=EOF\n         MVI   NET_RETURN_CODE,$NET_EOF       SET EOF\n         MVI   NET_FUNCTION,$NET_CHECK_IN_SOURCE\n         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH\n         BAL   R8,SEND0000                    SEND LAST BUFFER\n         BAL   R8,RECV0000                    RECEIVE RESPONSE\n         MVI   NET_FUNCTION,$NET_SEND_RECORDS\n         MVI   NET_RETURN_CODE,$NET_OK\n         STCM  R3,15,NET_SOURCE_RECORDS       NUMBER OF SOURCE RECORDS\n         LA    R1,NETBLOKL+L'NET_SOURCE_RECORDS\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         BAL   R8,SEND0020                    SEND NUMBER OF RECORDS\n         BAL   R8,RECV0000                    RECEIVE RESPONSE\n         MVC   0(CLOSEL,R6),CLOSEI\n         CLOSE ((R7)),                                                 +\n               MODE=31,                                                +\n               MF=(E,(R6))\n         FREEMAIN RU,                                                  +\n               A=(R7),                                                 +\n               LV=PS_DCBL\n         FREEMAIN RU,                                                  +\n               A=(R6),                                                 +\n               LV=OPENL\n         FREEMAIN RU,                                                  +\n               A=(R5),                                                 +\n               LV=PS_DCBEL\n         L     R1,UX01_EXPANDED_BUFFER        INPUT BUFFER ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=$MAX_SOURCE_SIZE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Abort this CHECK-IN.                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABORT000 DS    0H\n         ITRACE ID=ABORT\n         MVC   SPF_MSG1(MSG06L),MSG06\n         MVC   DXD_DISPLAY_RC,H8\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDAIR0100 DS    0H\n         ITRACE ID=DAIRALE\n         XC    DAIRREQ(DAIRL),DAIRREQ\n         MVI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING DATASET\n         MVC   DAIR_DD,LIBTEMP                SET DDNAME\n         MVC   DAIR_DSN,SPF_USER_DSN\n         MVC   DAIR_MEMBER,SPF_USER_MEMBER\n         LA    R1,DAIRREQ                     DAIR PARM BLOCK ADDRESS\n         ITRACE ID=CALLSUB4,                                           +\n               RDATA1=R1\n         L     R15,VSUB0004                   DAIR SUBR ENTRY POINT\n         BALR  R14,R15                        LINK TO DAIR SUBROUTINE\n         ITRACE ID=DAIR_R15,                                           +\n               DATA1=DAIR_R15\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   DAIR0110                       NO\n         OI    DXD_FLAG,$ALLOCATED            SET ALLOCATED INDICATOR\n         BR    R8\nDAIR0110 DS    0H\n         ITRACE ID=DAIRFAIL\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         ITRACE ID=COMPRESS,                                           +\n               RDATA1=R4\n         SR    R0,R0\n         LTR   R4,R4                          ANY DATA TO SEND?\n         BZ    SEND0010                       NO\n         MVI   UX01_FUNCTION,$UX01_COMPRESS\n         LA    R1,UX01_PARMS\n         L     R15,AUX01                      COMPRESSION ENTRY POINT\n         BALR  R14,R15                        COMPRESS THE DATA\nSEND0010 DS    0H\n         L     R1,DXD_COMPRESSED_LENGTH\n         LA    R1,NETBLOKL(R1)                PLUS HEADER LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\nSEND0020 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0030\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0040\nSEND0030 DS    0H\n         ITRACE ID=IP_SEND,                                            +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0040 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NOTAUTH\n         MVC   SPF_MSG1,NET_MSG_1\n         MVC   SPF_MSG2,NET_MSG_2\n         MVC   SPF_MSG3,NET_MSG_3\n         MVC   SPF_MSG4,NET_MSG_4\n         MVC   SPF_MSG5,NET_MSG_5\n         MVI   DXD_DISPLAY_RC+1,X'12'\n         B     EXIT0000\nERR0020  DS    0H\n         ITRACE ID=DESCFAIL\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR PRIMARY COMMAND\n         TM    DXD_FLAG,$ALLOCATED            SOURCE DATASET ALLOCATED?\n         BNO   EXIT0010                       NO\n         ITRACE ID=RELEASE\n         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)\n         MVC   DAIR_DSN,LIBTEMP               SET DDNAME\n         LA    R1,DAIRREQ                     REQUEST BLOCK ADDRESS\n         L     R15,VSUB0004                   DAIR SUBR ENTRY POINT\n         BALR  R14,R15                        LINK TO SUBROUTINE\n         NI    DXD_FLAG,255-$ALLOCATED\nEXIT0010 DS    0H\n         LH    R15,DXD_DISPLAY_RC             SET RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTCKIN)                    DISPLACEMENT TO WORK AREA\nVSUB0001 DC    V(SUB0001)\nVSUB0004 DC    V(SUB0004)\nINPANEL  DC    CL8'INPANEL'\nDISPLAY  DC    CL8'DISPLAY'\nLIBTEMP  DC    CL8'LIBTEMP'\n\nPO_DCBI  DCB   DSORG=PO,                                               +\n               DDNAME=LIBTEMP,                                         +\n               MACRF=R\nPO_DCBL  EQU   *-PO_DCBI\nPS_DCBI  DCB   DSORG=PS,                                               +\n               DDNAME=LIBTEMP,                                         +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               DCBE=PS_DCBEI,                                          +\n               MACRF=GM\nPS_DCBL  EQU   *-PS_DCBI\nPS_DCBEI DCBE  EODAD=EOF0000\nPS_DCBEL EQU   *-PS_DCBEI\n\nOPENI    OPEN  (*,INPUT),MF=L,MODE=31\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MF=L,MODE=31\nCLOSEL   EQU   *-CLOSEI\n\nH8       DC    H'8'\nH80      DC    H'80'\n\nMSG01    DC    CL11'LIBCKIN01E'\n         DC    C'Source data set not found'\nMSG01L   EQU   *-MSG01\nMSG02    DC    CL11'LIBCKIN02E'\n         DC    C'Member not found'\nMSG02L   EQU   *-MSG02\nMSG03    DC    CL11'LIBCKIN03E'\n         DC    C'Member name not allowed if dataset is sequential'\nMSG03L   EQU   *-MSG03\nMSG04    DC    CL11'LIBCKIN04E'\n         DC    C'Member name is required when dataset is partitioned'\nMSG04L   EQU   *-MSG04\nMSG05    DC    CL11'LIBCKIN05I'\n         DC    C'Press PF3, PF4 or enter END to abort CHECK IN'\nMSG05L   EQU   *-MSG05\nMSG06    DC    CL11'LIBCKIN06I'\n         DC    C'CHECK IN aborted'\nMSG06L   EQU   *-MSG06\n\n         LTORG\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nDXDTCKIN      DSECT\n              LIBSAVE DSECT=NO\n              DAIRREQ DSECT=NO\n              VTAMREQ DSECT=NO\n              UX01PARM DSECT=NO\n\nDXD_SPF_PARMS          DS  0F\nDXD_SPF_1              DS   F\nDXD_SPF_2              DS   F\n\nDXD_EXPANDED_LENGTH    DS   A           LENGTH OF EXPANDED DATA\nDXD_COMPRESSED_LENGTH  DS   A           LENGTH OF COMPRESSED DATA\n\nDXD_SOURCE_RECORDS     DS   F           NUMBER OF RECORDS IN SOURCE\nDXD_CURRENT_RECORDS    DS   F           NUMBER OF RECORDS IN BUFFER\n\nSUB0001_PARM_LIST      DS   0A\nSUB0001_PARM_DSN       DS   CL44\nSUB0001_PARM_DSORG     DS   C\n\nDXD_FIND_RC            DS   H           RETURN CODE FROM DISPLAY\nDXD_DISPLAY_RC         DS   H           RETURN CODE FROM DISPLAY\n\nDXD_FLAG               DS   X\n$ALLOCATED             EQU  X'80'       DATASET IS ALLOCATED\n\n* ------------------------------------------------------------------- *\n*              COMMON DATA MAP                                        *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                        NETBLOK DSECT=YES\nNET_LIB_NAME            DS  CL8\nNET_MEM_NAME            DS  CL8\nNET_MEM_VERSION         DS  XL2\nNET_MEM_DOC             DS  0C\nNET_CHECK_IN_LENGTH     EQU *-NETBLOK\n                        ORG NET_DATA\nNET_SOURCE_RECORDS      DS  XL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBRECD DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB  AM=VTAM\nACBL     EQU     *-IFGACB\n         LIBBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DCBD    DSORG=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA  DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$MAX_SOURCE_SIZE EQU 8000\n         COPY REGEQU\n         END  LIBTCKIN\n./ ADD NAME=LIBTCKOT 0100-09250-09250-0919-00768-00768-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTCKOT                                              *\n*                                                                     *\n*  Function:                                                          *\n*   Member CHECK-OUT                                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTCKOT CSECT\nLIBTCKOT AMODE 31\nLIBTCKOT RMODE 24\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTCKOT,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     INIT0000\nMODID    DC    CL8'LIBTCKOT'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTCKOT,R13                   DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\n         MVI   DXD_FLAG,0                     RESET ALL FLAGS\n*---------------------------------------------------------------------*\n*        Verify the user is authorized                                *\n*---------------------------------------------------------------------*\n         MVI   NET_FUNCTION,$NET_CHECK_OUT_AUTH\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION\n         LA    R1,NET_CHECK_OUT_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?\n         BNE   ERR0020                        NO\n         MVC   DXD_SOURCE_RECORDS,NET_SOURCE_RECORDS\n         MVC   COMM_SOURCE_RECORDS,NET_SOURCE_RECORDS\n         ITRACE ID=RECORDS,                                            +\n               DATA1=DXD_SOURCE_RECORDS\n*---------------------------------------------------------------------*\n*        Display the check-out panel                                  *\n*---------------------------------------------------------------------*\nCKOT0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SPF_PANEL,OUTPANEL             SET PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDRESS\n         BALR  R14,R15                        DISPLAY THE PANEL\n         STH   R15,DXD_DISPLAY_RC             SAVE RETURN CODE\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE\n         MVC   SPF_MSG2,COMM_BLANKS           CLEAR MESSAGE\n         MVC   SPF_MSG3,COMM_BLANKS           CLEAR MESSAGE\n         MVC   SPF_MSG4,COMM_BLANKS           CLEAR MESSAGE\n         MVC   SPF_MSG5,COMM_BLANKS           CLEAR MESSAGE\n         LTR   R15,R15                        ZERO?\n         BNZ   ABORT000                       NO\n*---------------------------------------------------------------------*\n*        Determine the output dataset DSORG                           *\n*---------------------------------------------------------------------*\n         ITRACE ID=USERDSN,                                            +\n               DATA1=SPF_USER_DSN+00,                                  +\n               DATA2=SPF_USER_DSN+08\n         ITRACE ID=USERDSN1,                                           +\n               DATA1=SPF_USER_DSN+16,                                  +\n               DATA2=SPF_USER_DSN+24\n         ITRACE ID=USERDSN2,                                           +\n               DATA1=SPF_USER_DSN+32,                                  +\n               DATA2=SPF_USER_DSN+40\n         MVC   SUB0001_PARM_DSN,SPF_USER_DSN\n         LA    R1,SUB0001_PARM_LIST           SUB0001 PARM LIST ADDRESS\n         L     R15,VSUB0001                   SUB0001 ENTRY POINT\n         ITRACE ID=CALLSUB1,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                        CALL SUB0001\n         ITRACE ID=DSORG,                                              +\n               DATA1=SUB0001_PARM_DSORG\n         CLI   SUB0001_PARM_DSORG,C'S'\n         BE    CKOT0010                       SEQUENTIAL\n         CLI   SUB0001_PARM_DSORG,C'P'\n         BE    CKOT0020                       PARTITIONED\n         CLI   SUB0001_PARM_DSORG,C'X'\n         BE    CKOT0060                       UNCATALOGED\n         MVC   SPF_MSG1(MSG01L),MSG01\n         B     CKOT0000                       RE-SEND WITH MESSAGE\nCKOT0010 DS    0H\n         ITRACE ID=SEQ\n         CLC   SPF_USER_MEMBER,COMM_BLANKS\n         BE    CKOT0040\n         MVC   SPF_MSG1(MSG03L),MSG03\n         B     CKOT0000                       RE-SEND WITH MESSAGE\nCKOT0020 DS    0H\n         ITRACE ID=PDS\n         CLC   SPF_USER_MEMBER,COMM_BLANKS\n         BNE   CKOT0030\n         ITRACE ID=NOMEM\n         MVC   SPF_MSG1(MSG04L),MSG04\n         B     CKOT0000                       RE-SEND WITH MESSAGE\nCKOT0030 DS    0H\n         OI    DXD_FLAG,$NO_MEMBER            SET NO MEMBER FLAG\n         BAL   R8,DAIR0100                    ALLOCATE EXISTING FILE\n         NI    DXD_FLAG,255-$NO_MEMBER\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   CKOT0000                       NO\n         ITRACE ID=VERMEM                     VERIFYING MEMBER EXISTS\n         GETMAIN RU,                                                   +\n               LV=PODCBL,                                              +\n               LOC=BELOW\n         ST    R1,DXD_DCB_ADDR                SAVE DCB ADDRESS\n         LR    R3,R1                          SAVE ADDRESS\n         MVC   0(PODCBL,R3),PODCBI            INITIALIZE THE DCB\n         GETMAIN RU,                                                   +\n               LV=OPENL,                                               +\n               LOC=BELOW\n         ST    R1,DXD_OPEN_ADDR               SAVE ADDRESS\n         LR    R2,R1                          SAVE ADDRESS\n         MVC   0(OPENL,R2),OPENI              INITIALIZE OPEN\n         OPEN  ((R3),INPUT),                                           +\n               MODE=31,                                                +\n               MF=(E,(R2))\n         FIND  (R3),                                                   +\n               SPF_USER_MEMBER,                                        +\n               D\n         STH   R15,DXD_FIND_RC\n         MVC   0(CLOSEL,R2),CLOSEI\n         CLOSE ((R3)),                                                 +\n               MODE=31,                                                +\n               MF=(E,(R2))\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=OPENL\n         XC    DXD_OPEN_ADDR,DXD_OPEN_ADDR\n         FREEMAIN RU,                                                  +\n               A=(R3),                                                 +\n               LV=PODCBL\n         XC    DXD_DCB_ADDR,DXD_DCB_ADDR\n         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)\n         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS\n         L     R15,VSUB0004\n         BALR  R14,R15\n         OC    DXD_FIND_RC,DXD_FIND_RC\n         BNZ   CKOT0050                       MEMBER DOES NOT EXIST\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    The output dataset (or PDS member) already exists.               *\n*                                                                     *\n*    Make sure the user wants to replace/over-write it.               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKOT0040 DS    0H\n         ITRACE ID=EXISTS\n         TM    SUB0001_PARM_RECFM,DS1RECFV\n         BO    CKOT0042\n         CLC   SUB0001_PARM_LRECL,H80\n         BNE   CKOT0044\n         CLC   SPF_OPTION,=C'YES '            REPLACE/OVER-WRITE?\n         BE    CKOT0050                       YES\n         CLC   SPF_OPTION,=C'Y   '            REPLACE/OVER-WRITE?\n         BE    CKOT0050                       YES\n         MVC   SPF_MSG1(MSG05L),MSG05         SET MESSAGE\n         B     CKOT0000                       RE-ISSUE WITH MESSAGE\nCKOT0042 DS    0H\n         MVC   SPF_MSG1(MSG11L),MSG11         SET MESSAGE\n         B     CKOT0000                       RE-ISSUE WITH MESSAGE\nCKOT0044 DS    0H\n         MVC   SPF_MSG1(MSG12L),MSG12         SET MESSAGE\n         B     CKOT0000                       RE-ISSUE WITH MESSAGE\n* ------------------------------------------------------------------- *\nCKOT0050 DS    0H\n         BAL   R8,DAIR0100                    ALLOCATE OUTPUT DATASET\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   CKOT0000                       NO\n         B     CKOT0080\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCKOT0060 DS    0H\n         CLC   SPF_USER_MEMBER,COMM_BLANKS\n         BE    CKOT0070\n         MVC   SPF_MSG1(MSG02L),MSG02\nCKOT0070 DS    0H\n         ITRACE ID=DISPLAY2\n         MVC   SPF_PANEL,ALOPANEL             SET PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDRESS\n         BALR  R14,R15                        DISPLAY THE PANEL\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE\n         BAL   R8,DAIR0200\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   CKOT0000                       NO\n*---------------------------------------------------------------------*\n*                                                                     *\n*     The output dataset (or PDS member) has been allocated.          *\n*                                                                     *\n*     OPEN the output dataset.                                        *\n*                                                                     *\n*---------------------------------------------------------------------*\nCKOT0080 DS    0H\n         ITRACE ID=OPENOUT\n         GETMAIN RU,                                                   +\n               LV=PSDCBL,                                              +\n               LOC=BELOW\n         ST    R1,DXD_DCB_ADDR\n         LR    R7,R1                          COPY DCB ADDRESS\n         USING IHADCB,R7\n         MVC   0(PSDCBL,R7),PSDCBI            INITIALIZE DCB\n         TM    DXD_FLAG,$SET_BLKSIZE          SET BLOCKSIZE?\n         BNO   CKOT0090                       NO\n         MVC   DCBBLKSI,H4000                 SET BLOCK SIZE\nCKOT0090 DS    0H\n         GETMAIN RU,                                                   +\n               LV=EXLSTL,                                              +\n               LOC=BELOW\n         ST    R1,DXD_EXLST_ADDR\n         MVC   0(EXLSTL,R1),EXLSTI            INITIALIZE THE EXIT LIST\n         STCM  R1,7,DCBEXLSA                  SET ADDRESS IN DCB\n         LR    R2,R1                          SAVE EXIT LIST ADDRESS\n         GETMAIN RU,                                                   +\n               LV=DCB1000L,                                            +\n               LOC=BELOW\n         ST    R1,DXD_EXIT_ADDR\n         MVC   0(DCB1000L,R1),DCB1000\n         LA    R0,DCB0000\n         ST    R0,DCB0000_ADDRESS-DCB1000(R1)\n         OI    DCB0000_ADDRESS-DCB1000(R1),X'80'\n         ST    R13,WORK_AREA_ADDRESS-DCB1000(R1)\n         STCM  R1,7,1(R2)                     SET ADDRESS IN EXIT LIST\n         GETMAIN RU,                                                   +\n               LV=OPENL,                                               +\n               LOC=BELOW\n         ST    R1,DXD_OPEN_ADDR\n         LR    R6,R1                          COPY ADDRESS\n         MVC   0(OPENL,R6),OPENI              INITIALIZE PARM LIST\n         OPEN  ((R7),OUTPUT),                                          +\n               MODE=31,                                                +\n               MF=(E,(R6))\n*---------------------------------------------------------------------*\n*                                                                     *\n*     GETMAIN the output dataset I/O area and initialize the          *\n*     parameter list for the de-compression subroutine.               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=ANY\n         ST    R1,UX01_EXPANDED_BUFFER\n         LA    R1,DXD_EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER\n         ST    R1,UX01_COMPRESSED_BUFFER\n         LA    R1,DXD_COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n*---------------------------------------------------------------------*\n*     Get source from library, de-compress, write to output dataset   *\n*---------------------------------------------------------------------*\nCKOT0110 DS    0H\n         ITRACE ID=GETSRC\n         MVI   NET_FUNCTION,$NET_CHECK_OUT_SOURCE\n         LA    R1,NETBLOKL                    LENGTH IS HEADER ONLY\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         BAL   R8,SEND0000                    SEND\n         BAL   R8,RECV0000                    RECEIVE\n         CLI   NET_RETURN_CODE,$NET_ERROR\n         BE    ERR0010                        YES\n         CLI   NET_RETURN_CODE,$NET_EOF\n         BE    CKOT0200                       YES\n         ITRACE ID=DECOMPRESS\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,NET_LENGTH\n         SH    R1,=Y(NETBLOKL)\n         ST    R1,DXD_COMPRESSED_LENGTH       LENGTH OF COMPRESSED DATA\n         L     R4,DXD_SOURCE_RECORDS          NUMBER OF SOURCE RECORDS\n         CH    R4,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?\n         BL    CKOT0120                       NO\n         LH    R4,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER\nCKOT0120 DS    0H\n         ST    R4,DXD_CURRENT_RECORDS         NUMBER IN CURRENT BUFFER\n         L     R1,DXD_SOURCE_RECORDS          NUMBER OF RECORDS LEFT\n         SR    R1,R4                          MINUS NUMBER IN BUFFER\n         ST    R1,DXD_SOURCE_RECORDS          SAVE REMAINDER\n         MH    R4,H80                         RECORDS * REC LENGTH\n         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH\n         MVI   UX01_FUNCTION,$UX01_DECOMPRESS\n         LA    R1,UX01_PARMS                  DE-COMPRESS PARMS\n         L     R15,AUX01                      DE-COMPRESS ENTRY POINT\n         BALR  R14,R15                        DE-COMPRESS\n         L     R2,UX01_EXPANDED_BUFFER        BUFFER ADDRESS\n         L     R4,DXD_CURRENT_RECORDS         NUMBER OF RECORDS\n         ITRACE ID=USERPUT,                                            +\n               RDATA1=R4                      NUMBER OF RECORDS\nCKOT0130 DS    0H\n         PUT   (R7),(R2)                      WRITE TO USER'S DATA SET\n         TM    DXD_FLAG,$X37                  DID A X-37 ABEND OCCUR?\n         BO    CKOT0140                       YES\n         LA    R2,80(R2)                      NEXT RECORD\n         BCT   R4,CKOT0130                    LOOP\n         ITRACE ID=BUFFDONE                   BUFFER HAS BEEN WRITTEN\n         B     CKOT0110                       ASK FOR NEXT BLOCK\nCKOT0140 DS    0H\n         ITRACE ID=X37\n         MVC   SPF_MSG1(MSG09L),MSG09         COPY MESSAGE\n         UNPK  DXD_UNPACK(7),DXD_ABEND_CODE(4)\n         MVZ   DXD_UNPACK,HEXZERO\n         TR    DXD_UNPACK,HEXCHAR\n         MVC   SPF_MSG1+(MSG09ERR-MSG09)(L'MSG09ERR),DXD_UNPACK\n         MVC   SPF_MSG1+(MSG09RSN-MSG09)(L'MSG09RSN),DXD_UNPACK+3\n         B     CKOT0210\nCKOT0200 DS    0H\n         ITRACE ID=EOF\nCKOT0210 DS    0H\n         MVC   0(CLOSEL,R6),CLOSEI\n         CLOSE ((R7)),                                                 +\n               MODE=31,                                                +\n               MF=(E,(R6))\n         L     R1,DXD_EXIT_ADDR\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=DCB1000L\n         XC    DXD_EXIT_ADDR,DXD_EXIT_ADDR\n         L     R1,DXD_EXLST_ADDR\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=EXLSTL\n         XC    DXD_EXLST_ADDR,DXD_EXLST_ADDR\n         L     R1,DXD_DCB_ADDR\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=PSDCBL\n         XC    DXD_DCB_ADDR,DXD_DCB_ADDR\n         L     R1,DXD_OPEN_ADDR\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=OPENL\n         XC    DXD_OPEN_ADDR,DXD_OPEN_ADDR\n         L     R1,UX01_EXPANDED_BUFFER\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE\n         XC    UX01_EXPANDED_BUFFER,UX01_EXPANDED_BUFFER\n         TM    DXD_FLAG,$X37\n         BO    EXIT0000\n         ITRACE ID=CONFIRM\n         MVI   NET_FUNCTION,$NET_CONFIRM_CHECK_OUT\n         LA    R1,NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDAIR0100 DS    0H\n         ITRACE ID=DAIRALE\n         XC    DAIRREQ(DAIRL),DAIRREQ\n         MVI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING DATASET\n         MVC   DAIR_DD,LIBTEMP                SET DDNAME\n         MVC   DAIR_DSN,SPF_USER_DSN\n         MVC   DAIR_MEMBER,COMM_BLANKS        CLEAR MEMBER NAME\n         TM    DXD_FLAG,$NO_MEMBER            ALLOCATE MEMBER?\n         BO    DAIR0210                       NO\n         MVC   DAIR_MEMBER,SPF_USER_MEMBER\n         B     DAIR0210\n* ------------------------------------------------------------------- *\nDAIR0200 DS    0H\n         ITRACE ID=DAIR_NEW                   ALLOCATE NEW DATASET\n         XC    DAIRREQ(DAIRL),DAIRREQ\n         MVI   DAIR_CMD,$DAIR_NEW             ALLOCATE NEW\n         MVC   DAIR_DD,LIBTEMP                SET DDNAME\n         MVC   DAIR_DSN,SPF_USER_DSN\n         MVC   DAIR_MEMBER,SPF_USER_MEMBER\n         MVC   DAIRUNIT,SPF_UNIT\n         MVC   DAIRBLKN,COMMBLKN              SET BLOCK LENGTH\n         MVC   DAIRPRI,COMMPRI                SET PRIMARY QUANTITY\n         MVC   DAIRSEC,COMMSEC                SET SECONDARY QUANTITY\n         OI    DXD_FLAG,$SET_BLKSIZE          NEED TO SET BLOCK SIZE\n* ------------------------------------------------------------------- *\nDAIR0210 DS    0H\n         LA    R1,DAIRREQ                     DAIR PARM BLOCK ADDRESS\n         ITRACE ID=CALLSUB4,                                           +\n               RDATA1=R1\n         L     R15,VSUB0004                   DAIR SUBR ENTRY POINT\n         BALR  R14,R15                        LINK TO DAIR SUBROUTINE\n         ITRACE ID=DAIR_R15,                                           +\n               DATA1=DAIR_R15\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BZR   R8                             YES\nDAIR0220 DS    0H\n         ITRACE ID=DAIRFAIL,                                           +\n               DATA1=DAIR_R15\n         MVC   SPF_MSG1(MSG06L),MSG06\n         MVC   SPF_MSG2(MSG07L),MSG07\n         UNPK  DXD_UNPACK(5),DAIR_R15(3)\n         MVZ   DXD_UNPACK(4),HEXZERO\n         TR    DXD_UNPACK(4),HEXCHAR\n         MVC   SPF_MSG2+(MSG07R15-MSG07)(L'MSG07R15),DXD_UNPACK\n         UNPK  DXD_UNPACK(5),DAIR_ERROR(3)\n         MVZ   DXD_UNPACK(4),HEXZERO\n         TR    DXD_UNPACK(4),HEXCHAR\n         MVC   SPF_MSG2+(MSG07ERR-MSG07)(L'MSG07ERR),DXD_UNPACK\n         UNPK  DXD_UNPACK(5),DAIR_INFO(3)\n         MVZ   DXD_UNPACK(4),HEXZERO\n         TR    DXD_UNPACK(4),HEXCHAR\n         MVC   SPF_MSG2+(MSG07INFO-MSG07)(L'MSG07INFO),DXD_UNPACK\n         L     R15,VDAIRMSG\n         USING DAIR_MSG,R15                   DEFINE BASE\nDAIR0230 DS    0H\n         CLI   0(R15),X'FF'                   END OF TABLE?\n         BER   R8                             YES, NO MORE INFO\n         CLC   DAIR_MSG_CODE,DAIR_R15\n         BE    DAIR0240                       FOUND IT\n         A     R15,DAIR_MSG_LENGTH            LENGTH OF THIS ENTRY\n         B     DAIR0230\nDAIR0240 DS    0H\n         LH    R14,DAIR_MSG_NBR               NBR OF LINES OF MESSAGE\n         CH    R14,H3                         MORE THAN WE CAN DISPLAY?\n         BNH   DAIR0250                       NO\n         LH    R14,H3                         LIMIT TO 3 LINES\nDAIR0250 DS    0H\n         LA    R1,DAIR_MSG_TEXT               FIRST LINE OF TEXT\n         LA    R2,SPF_MSG3                    FIRST SPF MESSAGE\nDAIR0260 DS    0H\n         MVC   0(L'SPF_MSG3_ID,R2),MSG08ID\n         MVC   10(L'SPF_MSG3_TEXT,R2),0(R1)\n         LA    R1,L'DAIR_MSG_TEXT(R1)\n         LA    R2,L'SPF_MSG3(R2)\n         BCT   R14,DAIR0260\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0010\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0020\nSEND0010 DS    0H\n         ITRACE ID=IP_SEND,                                            +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NOTEOF\n         DC    H'0'\nERR0020  DS    0H\n         ITRACE ID=NOTAUTH\n         MVC   SPF_MSG1,NET_MSG_1\n         MVC   SPF_MSG2,NET_MSG_2\n         MVC   SPF_MSG3,NET_MSG_3\n         MVC   SPF_MSG4,NET_MSG_4\n         MVC   SPF_MSG5,NET_MSG_5\n         MVI   DXD_DISPLAY_RC+1,X'04'\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABORT000 DS    0H\n         ITRACE ID=ABORT\n         MVC   DXD_DISPLAY_RC,H8              FORCE A 'FAKE' ERROR\n         MVC   SPF_MSG1(MSG10L),MSG10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=RELEASE\n         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)\n         MVC   DAIR_DSN,LIBTEMP               SET DDNAME\n         LA    R1,DAIRREQ                     REQUEST BLOCK ADDRESS\n         L     R15,VSUB0004                   DAIR SUBR ENTRY POINT\n         BALR  R14,R15                        LINK TO SUBROUTINE\nEXIT0010 DS    0H\n         LH    R15,DXD_DISPLAY_RC             SET RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     DCB error exit.                                                 *\n*                                                                     *\n*     When the DCB used to write to the user's data set is opened,    *\n*     the address of an exit list is placed in DCBEXLSA.  It was      *\n*     difficult to find the documentation for this.  The exit list    *\n*     must be on a fullword boundary.  Each entry in the list is 4    *\n*     bytes long.  The first byte is a \"type\".  The last three are    *\n*     a 24-bit address.  The exit will receive control in 24-bit mode *\n*     regardless of the AMODE used by the program that issued OPEN    *\n*     and/or the PUT.  The first half of this is to switch AMODE to   *\n*     31-bit (glue a 24-bit exit to 31-bit program).  The second      *\n*     half sets the \"X37\" flag in the work area used by LIBTCKOT.     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDCB0000  DS    0H\n         DROP  R13\n         USING DXDTCKOT,R2\n         MVI   3(R1),X'04'                    SET 'ALLOW RECOVERY'\n         OI    DXD_FLAG,$X37                  NOTIFY OURSELVES\n         MVC   DXD_ABEND_CODE,0(R1)           SAVE ABEND CODE\n         BSM   R0,R14\n         DROP  R2\n         USING DXDTCKOT,R13\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    Keep your eye on the bouncing ball...                            *\n*                                                                     *\n*    When an error occurs, the system will branch to this point.      *\n*    The address of label DCB0000 with the 31-bit mode bit set        *\n*    will have been placed in DCB0000_ADDRESS and the work area       *\n*    (contents of R13) will have been placed in WORK_AREA_ADDRESS     *\n*    when the DCB was OPENed.                                         *\n*                                                                     *\n*    R13 points to the system's register save area, not ours.         *\n*                                                                     *\n*    This sets R2 to the address of LIBTCKOT's work area, then        *\n*    branches to DCB0000 in 31-bit mode (so LIBTCKOT's work area      *\n*    can be accessed).                                                *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDCB1000            DS 0H\n                   USING *,R15\n                   L     R2,WORK_AREA_ADDRESS\n                   L     R15,DCB0000_ADDRESS\n                   BSM   R0,R15\nDCB0000_ADDRESS    DS    A\nWORK_AREA_ADDRESS  DS    A\n                   DROP  R15\nDCB1000L           EQU   *-DCB1000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTCKOT)           DISPLACEMENT TO WORK AREA\nVSUB0001 DC    V(SUB0001)\nVSUB0004 DC    V(SUB0004)\nVDAIRMSG DC    V(DAIRMSG)\nOUTPANEL DC    CL8'OUTPANEL'\nALOPANEL DC    CL8'ALOPANEL'\nDISPLAY  DC    CL8'DISPLAY'\nLIBTEMP  DC    CL8'LIBTEMP'\n\nPODCBI   DCB   DSORG=PO,                                               +\n               DDNAME=LIBTEMP,                                         +\n               MACRF=R\nPODCBL   EQU   *-PODCBI\nPSDCBI   DCB   DSORG=PS,                                               +\n               DDNAME=LIBTEMP,                                         +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               EXLST=EXLSTI,                                           +\n               MACRF=PM\nPSDCBL   EQU   *-PSDCBI\n\n* I finally found the exit list documented in:\n* OS/390 V2R10.0 DFSMS: USING DATA SETS\n* DOCUMENT NUMBER: SC26-7339-01\nEXLSTI   DS    0F\n         DC    0F,X'91',AL3(*)       EXIT CODE 11 + 'END OF LIST' BIT\nEXLSTL   EQU   *-EXLSTI\n\nHEXZERO  DC    8X'00'\nHEXCHAR  DC    C'0123456789ABCDEF'\n\nOPENI    OPEN  (*,INPUT),MF=L,MODE=31\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MF=L,MODE=31\nCLOSEL   EQU   *-CLOSEI\n\nH3       DC    H'3'\nH8       DC    H'8'\nH80      DC    H'80'\nH4000    DC    H'4000'\n\nMSG01    DC    CL11'LIBCKOT01E'\n         DC    C'Your dataset must be sequential or partitioned'\nMSG01L   EQU   *-MSG01\nMSG02    DC    CL11'LIBCKOT02E'\n         DC    C'New dataset will be sequential, member name ignored'\nMSG02L   EQU   *-MSG02\nMSG03    DC    CL11'LIBCKOT03E'\n         DC    C'Member name not allowed if dataset is sequential'\nMSG03L   EQU   *-MSG03\nMSG04    DC    CL11'LIBCKOT04E'\n         DC    C'Member name is required when dataset is partitioned'\nMSG04L   EQU   *-MSG04\nMSG05    DC    CL11'LIBCKOT05E'\n         DC    C'Dataset (or member) already exists.  Not overwritten'\nMSG05L   EQU   *-MSG05\nMSG06    DC    CL11'LIBCKOT06E'\n         DC    C'Output data set allocation failed.'\nMSG06L   EQU   *-MSG06\nMSG07    DC    CL11'LIBCKOT07I'\n         DC    C'R15='\nMSG07R15 DC    CL4' '\n         DC    C', ERROR='\nMSG07ERR DC    CL4' '\n         DC    C', INFO='\nMSG07INFO DC    CL4' '\nMSG07L   EQU   *-MSG07\nMSG08ID  DC    CL11'LIBCKOT08I'\nMSG09    DC    CL11'LIBCKOT09E'\n         DC    C'Abend '\nMSG09ERR DC    XL3'00'\n         DC    C'-'\nMSG09RSN DC    XL3'00'\n         DC    C' occurred writing to output data set'\nMSG09L   EQU   *-MSG09\nMSG10    DC    CL11'LIBCKOT10E'\n         DC    C'Check out aborted'\nMSG10L   EQU   *-MSG10\nMSG11    DC    CL11'LIBCKOT11E'\n         DC    C'Output data set must have RECFM=F or FB'\nMSG11L   EQU   *-MSG11\nMSG12    DC    CL11'LIBCKOT12E'\n         DC    C'Output data set must have LRECL=80'\nMSG12L   EQU   *-MSG12\n\n         LTORG\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nDXDTCKOT      DSECT\n              LIBSAVE DSECT=NO\n              DAIRREQ DSECT=NO\n              VTAMREQ DSECT=NO\n              UX01PARM DSECT=NO\n\nDXD_SPF_PARMS        DS  0F\nDXD_SPF_1            DS   F\nDXD_SPF_2            DS   F\n\nDXD_EXPANDED_LENGTH    DS   F         LENGTH OF EXPANDED DATA\nDXD_COMPRESSED_LENGTH  DS   F         LENGTH OF COMPRESSED DATA\n\nDXD_SOURCE_RECORDS   DS   F           NUMBER OF RECORDS IN SOURCE\nDXD_CURRENT_RECORDS  DS   F           NUMBER OF RECORDS IN BUFFER\n\nDXD_DCB_ADDR         DS   A\nDXD_OPEN_ADDR        DS   A\nDXD_EXLST_ADDR       DS   A\nDXD_EXIT_ADDR        DS   A\n\nSUB0001_PARM_LIST    DS   0A\nSUB0001_PARM_DSN     DS   CL44\nSUB0001_PARM_DSORG   DS   C\nSUB0001_PARM_RECFM   DS   X\nSUB0001_PARM_LRECL   DS   XL2\n\nDXD_FIND_RC          DS   H           RETURN CODE FROM DISPLAY\nDXD_DISPLAY_RC       DS   H           RETURN CODE FROM DISPLAY\n\nDXD_FLAG             DS   X\n$X37                 EQU  X'80'       X-37 ABEND HAS OCCURRED\n$NO_MEMBER           EQU  X'40'       ALLOCATE PDS (NOT MEMBER)\n$SET_BLKSIZE         EQU  X'20'       SET BLOCK SIZE IN OUTPUT DCB\n\nDXD_ABEND_CODE       DS   XL3         ABEND CODE (FROM DCB ABEND EXIT)\nDXD_UNPACK           DS   CL8\n* ------------------------------------------------------------------- *\n*              COMMON DATA MAP                                        *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                        NETBLOK DSECT=YES\nNET_LIB_NAME            DS  CL8\nNET_MEM_NAME            DS  CL8\nNET_MEM_VERSION         DS  XL2\nNET_CHECK_OUT_LENGTH    EQU *-NETBLOK\n                        ORG NET_DATA\nNET_SOURCE_RECORDS      DS  XL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                        LIBRECD DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDAIR_MSG                DSECT\nDAIR_MSG_LENGTH         DS  AL2\nDAIR_MSG_CODE           DS  XL6\nDAIR_MSG_NBR            DS  AL2\nDAIR_MSG_TEXT           DS  CL80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DCBD     DSORG=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n         IECSDSL1 1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$MAX_SOURCE_SIZE   EQU  8000\n         COPY REGEQU\n         END  LIBTCKOT\n./ ADD NAME=LIBTCOMM 0100-09250-09250-0919-00006-00006-00000-SOURCE\n         USING     LIBTCOMM,R11\n         TCOMM     TYPE=CSECT\n         COPY      REGEQU\n         IHAPSA    DSECT=YES,LIST=NO\n         LIBSAVE   DSECT=YES\n         END       LIBTCOMM\n./ ADD NAME=LIBTDEL  0100-09250-09250-0919-00249-00249-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTDEL                                               *\n*                                                                     *\n*  Function:                                                          *\n*   Delete a member                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTDEL  CSECT\nLIBTDEL  AMODE 31\nLIBTDEL  RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTDEL,R12                    DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     DEL0000\nMODID    DC    CL8'LIBTDEL'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nDEL0000  DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTDEL,R13                    DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    DEL0010                        YES\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\nDEL0010  DS    0H\n         L     R7,COMM_NETWORK_IO_AREA        I/O AREA ADDRESS\n         USING NETBLOK,R7                     DEFINE BASE\n         XC    DXD_RC,DXD_RC                  INITIALIZE RETURN CODE\n         MVC   SPF_MSG1,COMM_BLANKS\n         MVC   SPF_MSG2,COMM_BLANKS\n         MVC   SPF_MSG3,COMM_BLANKS\n         MVC   SPF_MSG4,COMM_BLANKS\n         MVC   SPF_MSG5,COMM_BLANKS\n*---------------------------------------------------------------------*\n*        Display the delete confirmation panel                        *\n*---------------------------------------------------------------------*\nDEL0100  DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SPF_OPTION,COMM_BLANKS         INITIALIZE THE REPLY\n         MVC   SPF_PANEL,DELPANEL             SET PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDRESS\n         BALR  R14,R15                        DISPLAY THE PANEL\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=SPF_OPTION\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE(S)\n         MVC   SPF_MSG2,COMM_BLANKS\n         MVC   SPF_MSG3,COMM_BLANKS\n         MVC   SPF_MSG4,COMM_BLANKS\n         MVC   SPF_MSG5,COMM_BLANKS\n         LTR   R15,R15                        ZERO?\n         BNZ   DEL0300                        NO\n         CLC   SPF_OPTION,=C'Y   '            DELETION CONFIRMED?\n         BE    DEL0200                        YES\n         CLC   SPF_OPTION,=C'YES '            DELETION CONFIRMED?\n         BE    DEL0200                        YES\n         CLC   SPF_OPTION,=C'N   '            DON'T DELETE?\n         BE    DEL0300                        CORRECT\n         CLC   SPF_OPTION,=C'NO  '            DON'T DELETE?\n         BE    DEL0300                        CORRECT\n         MVC   SPF_MSG1(MSG01L),MSG01\n         B     DEL0100\n* ------------------------------------------------------------------- *\n*      Verify the user is authorized                                  *\n* ------------------------------------------------------------------- *\nDEL0200  DS   0H\n         ITRACE ID=CHKAUTH\n         MVI   NET_FUNCTION,$NET_CHECK_DEL_AUTH\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         MVC   NET_MEM_VER,COMM_VERSION       SET VERSION\n         LA    R1,NET_DELETE_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?\n         BNE   ERR0010                        NO\n* ------------------------------------------------------------------- *\n*      The user has confirmed they want to proceed with the           *\n*      deletion and they have authorization.\n* ------------------------------------------------------------------- *\n         ITRACE ID=DELETE\n         MVI   NET_FUNCTION,$NET_DELETE\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         MVC   NET_MEM_VER,COMM_VERSION       SET FUNCTION\n         LA    R1,NET_DELETE_LENGTH           LENGTH TO SEND\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         BAL   R8,SEND0000                    SEND DELETE REQUEST\n         BAL   R8,RECV0000                    RECEIVE RESPONSE\n         MVC   SPF_MSG1,NET_MSG_1             COPY MESSAGE(S)\n         MVC   SPF_MSG2,NET_MSG_2\n         MVC   SPF_MSG3,NET_MSG_3\n         MVC   SPF_MSG4,NET_MSG_4\n         MVC   SPF_MSG5,NET_MSG_5\n         CLI   NET_RETURN_CODE,$NET_OK        DELETE SUCCESSFUL?\n         BE    EXIT0000                       YES\n         MVI   DXD_RC+1,X'02'\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEL0300  DS   0H\n         ITRACE ID=ABORT\n         MVC   SPF_MSG1(MSG02L),MSG02\n         MVI   DXD_RC+1,X'12'\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0010\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0020\nSEND0010 DS    0H\n         ITRACE ID=IP_SEND,                                            +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NOTAUTH\n         MVC   SPF_MSG1,NET_MSG_1\n         MVC   SPF_MSG2,NET_MSG_2\n         MVC   SPF_MSG3,NET_MSG_3\n         MVC   SPF_MSG4,NET_MSG_4\n         MVC   SPF_MSG5,NET_MSG_5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LH    R15,DXD_RC                     SET RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTDEL)                     DISPLACEMENT TO WORK AREA\nDISPLAY  DC    CL8'DISPLAY'\nDELPANEL DC    CL8'DELPANEL'\nMSG01    DS    0C\n         DC    CL11'LIBTDEL01E'\n         DC    C'Invalid confirmation reply.  Enter Y(es) or N(o)'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    CL11'LIBTDEL02E'\n         DC    C'Delete request aborted'\nMSG02L   EQU   *-MSG02\n\n         LTORG\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nDXDTDEL       DSECT\n              LIBSAVE DSECT=NO\n              VTAMREQ DSECT=NO\n\nDXD_SPF_PARMS DS  0F\nDXD_SPF_1     DS  F\nDXD_SPF_2     DS  F\n\nDXD_RC        DS  H                           RETURN CODE FROM DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      NETBLOK DSECT=YES\nNET_LIB_NAME          DS   CL8\nNET_MEM_NAME          DS   CL8\nNET_MEM_VER           DS   XL2\nNET_DELETE_LENGTH     EQU  *-NETBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBRECD DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB  AM=VTAM\nACBL     EQU     *-IFGACB\n         LIBBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA  DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBTDEL\n./ ADD NAME=LIBTDISP 0100-09250-09250-0919-00475-00475-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTDISP - Dynamic area manager                       *\n*                                                                     *\n*  Function:                                                          *\n*   Manage the dynamic area displays.                                 *\n*                                                                     *\n*  This module expects the caller to provide:                         *\n*                                                                     *\n*    1) The panel name                                                *\n*    2) The number of lines of text data                              *\n*    3) The address of the text storage                               *\n*    4) Length of each line of \"detail\" data                          *\n*    5) The relative line number of the first line to be displayed    *\n*    6) The offset to the data for the first line to be displayed     *\n*                                                                     *\n*  The caller may specify that the data be scrollable or non-         *\n*  scrollable.  The caller may specify a cursor position.             *\n*                                                                     *\n*  If the user allows scrolling, the scroll commands are processed    *\n*  here.                                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTDISP CSECT\nLIBTDISP AMODE 31\nLIBTDISP RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTDISP,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     DISP0000\nMODID    DC    CL8'LIBTDISP'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nDISP0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDDISP,R13                    DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    DISP0010                       YES\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\n*---------------------------------------------------------------------*\n*        Acquire storage for dynamic area                             *\n*---------------------------------------------------------------------*\nDISP0010 DS    0H\n         ITRACE ID=PQUERY\n         LA    R1,PQUERY                      COMMAND'S ADDRESS\n         ST    R1,DXDSPF1                     SET IN PARM LIST\n         LA    R1,SPF_PANEL                   PANEL NAME'S ADDRESS\n         ST    R1,DXDSPF2                     SET IN PARM LIST\n         LA    R1,CVDATA                      AREA NAME\n         ST    R1,DXDSPF3                     SET IN PARM LIST\n         LA    R1,CVTYPE                      AREA TYPE\n         ST    R1,DXDSPF4                     SET IN PARM LIST\n         LA    R1,CVWIDTH                     SCREEN DEPTH\n         ST    R1,DXDSPF5                     SET IN PARM LIST\n         LA    R1,CVDEPTH                     SCREEN WIDTH\n         ST    R1,DXDSPF6                     SET IN PARM LIST\n         LA    R1,CVROW                       SCREEN ROW\n         ST    R1,DXDSPF7                     SET IN PARM LIST\n         LA    R1,CVCOL                       SCREEN COLUMN\n         ST    R1,DXDSPF8                     SET IN PARM LIST\n         OI    DXDSPF8,X'80'                  FLAG 'END-OF-LIST'\n         LA    R1,DXDSPF                      PQUERY PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE'S ADDRESS\n         BALR  R14,R15                        ISSUE QUERY\n         LTR   R15,R15                        PQUERY SUCCESSFUL?\n         BNZ   ERR0020                        NO\n         ITRACE ID=VDATA,                                              +\n               DATA1=SPF_VWIDTH,                                       +\n               DATA2=SPF_VDEPTH\n         L     R0,SPF_VWIDTH                  SCREEN WIDTH\n         MH    R0,SPF_VDEPTH+2                COMPUTE SIZE\n         ST    R0,SPF_DYNAMIC_AREA_SIZE       DYNAMIC STORAGE AREA SIZE\n         GETMAIN RU,                          STORAGE FOR DYNAMIC AREA +\n               LV=(0),                        .. SIZE OF AREA          +\n               LOC=ANY                        .. FROM ANY AREA\n         ITRACE ID=VDA,                                                +\n               RDATA1=R1\n         ST    R1,SPF_DYNAMIC_AREA_ADDR       DYNAMIC AREA ADDRESS\n*---------------------------------------------------------------------*\n*        Define 'VDATA' to SPF                                        *\n*---------------------------------------------------------------------*\n         ITRACE ID=DEFVDATA,                  DEFINING 'VDATA'         +\n               DATA1=SPF_DYNAMIC_AREA_ADDR,                            +\n               DATA2=SPF_DYNAMIC_AREA_SIZE\n         LA    R1,VDEFINE                     COMMAND'S ADDRESS\n         ST    R1,DXDSPF1                     SET ADDRESS IN PARM LIST\n         LA    R1,CVDATA                      VARIABLE NAME ADDRESS\n         ST    R1,DXDSPF2                     SET ADDRESS IN PARM LIST\n         MVC   DXDSPF3,SPF_DYNAMIC_AREA_ADDR\n         LA    R1,CHARFORM                    DATA FORMAT ADDRESS\n         ST    R1,DXDSPF4                     SET ADDRESS IN PARM LIST\n         LA    R1,SPF_DYNAMIC_AREA_SIZE\n         ST    R1,DXDSPF5                     SET ADDRESS IN PARM LIST\n         OI    DXDSPF5,X'80'                  FLAG END-OF-LIST\n         LA    R1,DXDSPF                      SPF PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF ENTRY POINT\n         BALR  R14,R15                        DEFINE 'VDATA'\n         LTR   R15,R15                        DEFINE SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         TM    SPF_DISPLAY_FLAGS,$NO_SCROLL   SCROLLING?\n         BO    DISP0150                       NO.. COPY TEXT INTACT\n         MVC   SPF_LVLINE,SPF_VDEPTH\n*---------------------------------------------------------------------*\n*        Build dynamic area                                           *\n*---------------------------------------------------------------------*\nDISP0100 DS    0H\n         ITRACE ID=BLDVDATA                   BUILDING 'VDATA'\n         L     R0,SPF_DYNAMIC_AREA_ADDR\n         L     R1,SPF_DYNAMIC_AREA_SIZE\n         SR    R14,R14                        CLEAR REGISTER\n         SR    R15,R15                        CLEAR REGISTER\n         ICM   R15,8,COMM_BLANKS              SET PAD CHARACTER\n         MVCL  R0,R14                         CLEAR DYNAMIC AREA\n         L     R3,SPF_TEXT_ADDR               TEXT'S ADDRESS\n         A     R3,SPF_TEXT_OFFSET             PLUS OFFSET\n         ST    R3,DXDTEXT                     START OF DISPLAYED TEXT\n         L     R4,SPF_TEXT_LINES              NUMBER OF TEXT LINES\n         S     R4,SPF_TEXT_RELATIVE_LINE      MINUS RELATIVE LINE NBR\n         C     R4,SPF_LVLINE                  MORE THAN DISPLAYABLE?\n         BNH   DISP0110                       NO\n         L     R4,SPF_LVLINE                  LIMIT TO DISPLAY SIZE\nDISP0110 DS    0H\n         ST    R4,DXDLINES                    SAVE DISPLAYABLE LINES\nDISP0120 DS    0H\n         L     R1,SPF_TEXT_LINE_LENGTH        TEXT'S WIDTH\n         C     R1,SPF_VWIDTH                  TEXT WIDER THAN SCREEN?\n         BNH   DISP0130                       NO\n         L     R1,SPF_VWIDTH                  LIMIT TO SCREEN WIDTH\nDISP0130 DS    0H\n         L     R2,SPF_VWIDTH                  VISIBLE WIDTH\n         SR    R2,R1                          MINUS USED WIDTH\n         SRL   R2,1                           DIVIDE BY 2\n         BCTR  R1,0                           FOR MVC\n         STH   R2,DXD_LINE_OFFSET             SAVE OFFSET\n         ITRACE ID=LINEOFF,                                            +\n               RDATA1=R2\n         A     R2,SPF_DYNAMIC_AREA_ADDR\nDISP0140 DS    0H\n         EX    R1,DYNMVC                      MOVE DATA TO DYNAMIC AREA\n         A     R2,SPF_VWIDTH                  NEXT TEXT DATA LINE\n         A     R3,SPF_TEXT_LINE_LENGTH        NEXT DYNAMIC AREA LINE\n         BCT   R4,DISP0140                    LOOP\n         B     DISP0160                       DISPLAY THE PANEL\n*---------------------------------------------------------------------*\n*        Copy text intact                                             *\n*---------------------------------------------------------------------*\nDISP0150 DS    0H\n         L     R0,SPF_TEXT_ADDR               TEXT ADDRESS\n         L     R1,SPF_TEXT_SIZE               TEXT SIZE\n         L     R2,SPF_DYNAMIC_AREA_ADDR       VDATA ADDRESS\n         L     R3,SPF_DYNAMIC_AREA_SIZE       VDATA SIZE\n         ICM   R3,8,COMM_BLANKS               PAD CHARACTER\n         MVCL  R2,R0                          COPY TEXT\n*---------------------------------------------------------------------*\n*        Display panel                                                *\n*---------------------------------------------------------------------*\nDISP0160 DS    0H\n         ITRACE ID=DISPLAY\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXDSPF1                     SET ADDRESS IN PARM LIST\n         LA    R1,SPF_PANEL                   PANEL'S NAME\n         ST    R1,DXDSPF2                     SET ADDRESS IN PARM LIST\n         OI    DXDSPF2,X'80'                  FLAG END-OF-LIST\n         TM    SPF_DISPLAY_FLAGS,$NO_CURSOR   CURSOR DATA?\n         BO    DISP0170                       NO\n         OC    SPF_CURSOR_POSITION,SPF_CURSOR_POSITION                  ERO?\n         BZ    DISP0170                       YES\n         NI    DXDSPF2,X'7F'                  RESET END-OF-LIST\n         LA    R1,COMM_BLANKS                 MESSAGE ID (BLANKS)\n         ST    R1,DXDSPF3                     CLEAR MESSAGE ID\n         LA    R1,CVDATA                      CURSOR FIELD NAME\n         ST    R1,DXDSPF4                     VARIABLE NAME FOR CURSOR\n         L     R1,SPF_CURSOR_POSITION\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,SPF_CURSOR_POSITION         SAVE UPDATED POSITION\n         LA    R1,SPF_CURSOR_POSITION         CURSOR POSITION\n         ST    R1,DXDSPF5                     SET CURSOR POSITION\n         OI    DXDSPF5,X'80'                  FLAG END-OF-LIST\nDISP0170 DS    0H\n         LA    R1,DXDSPF                      PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE\n         BALR  R14,R15                        DISPLAY PANEL\n         STH   R15,DXDRC                      SAVE RETURN CODE\n         ITRACE ID=DISPRC,                    TRACE RETURN FROM SPF    +\n               RDATA1=R15,                    .. INCLUDE RETURN CODE   +\n               DATA2=SPF_ZCMD                 .. AND NEW COMMAND\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE\n         MVC   SPF_MSG2,COMM_BLANKS           CLEAR MESSAGE\n         MVC   SPF_MSG3,COMM_BLANKS           CLEAR MESSAGE\n         MVC   SPF_MSG4,COMM_BLANKS           CLEAR MESSAGE\n         MVC   SPF_MSG5,COMM_BLANKS           CLEAR MESSAGE\n         TM    SPF_DISPLAY_FLAGS,$NO_SCROLL   SCROLLING?\n         BO    DISP0400                       NO..\n         CH    R15,H8                         EXIT?\n         BE    DISP2000                       YES\n         CLI   SPF_ZCMD,C'X'                  EXIT?\n         BE    DISP2000                       YES\n         NI    DXDFLAG,255-$DXDVPUT           RESET VPUT FLAG\n*---------------------------------------------------------------------*\n*        Request scroll parameters                                    *\n*---------------------------------------------------------------------*\nDISP0180 DS    0H\n         ITRACE ID=VGET                       REQUESTING SCROLL VARS\n         LA    R1,VGET                        COMMAND'S ADDRESS\n         ST    R1,DXDSPF1                     SET ADDRESS IN PARM LIST\n         LA    R1,VGETVARS                    VARIABLE NAMES\n         ST    R1,DXDSPF2                     SET ADDRESS IN PARM LIST\n         LA    R1,SHARED                      FROM SHARED POOL\n         ST    R1,DXDSPF3                     SET ADDRESS IN PARM LIST\n         OI    DXDSPF3,X'80'                  SET END-OF-LIST\n         LA    R1,DXDSPF                      PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE\n         BALR  R14,R15                        DISPLAY PANEL\n         ITRACE ID=VGETRC,                    VGET COMPLETE            +\n               RDATA1=R15                     .. INCLUDE RETURN CODE\n         LTR   R15,R15                        VGET SUCCESSFUL?\n         BZ    DISP0190                       YES\n         TM    DXDFLAG,$DXDVPUT               VPUT ALREADY ISSUED?\n         BO    DISP0190                       YES\n*---------------------------------------------------------------------*\n*        Issue VPUT, try VGET again                                   *\n*---------------------------------------------------------------------*\n         ITRACE ID=VPUT\n         LA    R1,VPUT                        COMMAND'S ADDRESS\n         ST    R1,DXDSPF1                     SET ADDRESS IN PARM LIST\n         LA    R1,VGETVARS                    VARIABLE NAMES\n         ST    R1,DXDSPF2                     SET ADDRESS IN PARM LIST\n         LA    R1,SHARED                      FROM SHARED POOL\n         ST    R1,DXDSPF3                     SET ADDRESS IN PARM LIST\n         OI    DXDSPF3,X'80'                  SET END-OF-LIST\n         LA    R1,DXDSPF                      PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE\n         BALR  R14,R15                        DISPLAY PANEL\n         ITRACE ID=VPUTRC,                    VPUT COMPLETE            +\n               RDATA1=R15                     .. INCLUDE RETURN CODE\n         B     DISP0180                       YES\n*---------------------------------------------------------------------*\n*        Process command or scroll                                    *\n*---------------------------------------------------------------------*\nDISP0190 DS    0H\n         ITRACE ID=CHKVERB,                   CHECK FOR SCROLL COMMAND +\n               DATA1=SPF_ZVERB                .. TRACE VERB VALUE\n         L     R2,SPF_ZSCROLLN                NUMBER OF LINES TO SCROLL\n         CLI   SPF_ZVERB,C'U'                 SCROLL UP?\n         BE    DISP0200                       YES\n         CLI   SPF_ZVERB,C'D'                 SCROLL DOWN?\n         BE    DISP0300                       YES\n         CLI   SPF_ZVERB,C'R'                 SCROLL RIGHT?\n         BE    DISP0100                       YES\n         CLI   SPF_ZVERB,C'L'                 SCROLL LEFT?\n         BE    DISP0100                       YES\n         B     DISP1000                       NOT A SCROLL COMMAND\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDISP0200 DS    0H\n         ITRACE ID=SCROLLUP\n         SR    R0,R0                          CLEAR REGISTER\n         L     R1,SPF_ZSCROLLN                NUMBER OF LINES TO SCROLL\n         M     R0,SPF_TEXT_LINE_LENGTH        TIMES LINE LENGTH\n         L     R2,SPF_TEXT_OFFSET             CLEAR REGISTER\n         CR    R1,R2                          SCROLL PAST FIRST LINE?\n         BNH   DISP0210                       NO\n         LR    R2,R1                          LIMIT TO 1ST LINE\nDISP0210 DS    0H\n         SR    R2,R1                          NEW OFFSET\n         L     R1,SPF_TEXT_RELATIVE_LINE      RELATIVE LINE NUMBER\n         S     R1,SPF_ZSCROLLN                MINUS NUMBER SCROLLED\n         BP    DISP0220\n         SR    R1,R1                          RESET TO ZERO IF NEGATIVE\nDISP0220 DS    0H\n         ST    R1,SPF_TEXT_RELATIVE_LINE      SAVE RELATIVE LINE NUMBER\n         ST    R2,SPF_TEXT_OFFSET             SAVE OFFSET INTO TEXT\n         B     DISP0100                       RE-BUILD DYNAMIC AREA\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDISP0300 DS    0H\n         ITRACE ID=SCROLLDN\n         L     R1,SPF_ZSCROLLN                NUMBER OF LINES TO SCROLL\n         A     R1,SPF_TEXT_RELATIVE_LINE      PLUS RELATIVE NUMBER NOW\n         C     R1,SPF_TEXT_LINES              BEYOND END OF DATA?\n         BE    DISP0310                       YES\n         BNH   DISP0320                       NO\nDISP0310 DS    0H\n         SR    R0,R0                          CLEAR REGISTER\n         L     R1,SPF_TEXT_LINES              MAXIMUM LINE NUMBER\n         BCTR  R1,0                           ADJUST FOR RELATIVE\n         ST    R1,SPF_TEXT_RELATIVE_LINE      SAVE RELATIVE NUMBER\n         M     R0,SPF_TEXT_LINE_LENGTH        TIMES LENGTH OF EACH LINE\n         ST    R1,SPF_TEXT_OFFSET             SAVE OFFSET\n         B     DISP0100                       RE-BUILD DYNAMIC AREA\nDISP0320 DS    0H\n         SR    R0,R0                          CLEAR REGISTER\n         ST    R1,SPF_TEXT_RELATIVE_LINE      SAVE NEW RELATIVE LINE\n         M     R0,SPF_TEXT_LINE_LENGTH        TIMES LINE LENGTH\n         ST    R1,SPF_TEXT_OFFSET             SAVE OFFSET\n         B     DISP0100                       RE-BUILD DYNAMIC AREA\n*---------------------------------------------------------------------*\n*        Copy updated text area back to caller                        *\n*---------------------------------------------------------------------*\nDISP0400 DS    0H\n         L     R0,SPF_TEXT_ADDR               TEXT ADDRESS\n         L     R1,SPF_TEXT_SIZE               TEXT SIZE\n         L     R2,SPF_DYNAMIC_AREA_ADDR       VDATA ADDRESS\n         L     R3,SPF_DYNAMIC_AREA_SIZE       VDATA LENGTH\n         MVCL  R0,R2                          COPY RETURNED AREA\n         B     DISP2000                       FREE OLD DYNAMIC AREA\n*---------------------------------------------------------------------*\n*        Copy selection data back to text area                        *\n*---------------------------------------------------------------------*\nDISP1000 DS    0H\n         ITRACE ID=COPYSEL\n         L     R2,DXDTEXT                     START OF TEXT\n         L     R3,SPF_DYNAMIC_AREA_ADDR       START OF DYNAMIC AREA\n         AH    R3,DXD_LINE_OFFSET             PLUS OFFSET\n         L     R4,SPF_TEXT_LINE_LENGTH        LENGTH OF TEXT LINES\n         C     R4,SPF_VWIDTH                  MORE THAN DISPLAYABLE?\n         BL    DISP1010                       NO\n         L     R4,SPF_VWIDTH                  LIMIT TO DISPLAYED WIDTH\nDISP1010 DS    0H\n         BCTR  R4,0                           MINUS 1\n         L     R5,DXDLINES                    NUMBER OF LINES DISPLAYED\nDISP1020 DS    0H\n         EX    R4,DYNMVC                      COPY DATA TO TEXT AREA\n         A     R2,SPF_TEXT_LINE_LENGTH        NEXT LINE IN TEXT\n         A     R3,SPF_VWIDTH                  NEXT LINE IN DYNAMIC AREA\n         BCT   R5,DISP1020                    LOOP\n*---------------------------------------------------------------------*\n*        Clean-up                                                     *\n*---------------------------------------------------------------------*\nDISP2000 DS    0H\n         ITRACE ID=CLEANUP\n         TM    XTRFLAG,$XTRON\n         BNO   DISP2010\n         L     R15,SPF_DYNAMIC_AREA_ADDR\n         MVC   0(2,R15),SPF_DYNAMIC_AREA_SIZE+2\n         XC    2(2,R15),2(R15)\n         PUT   XTRACE,0(R15)\nDISP2010 DS    0H\n         LA    R1,VDELETE                     COMMAND'S ADDRESS\n         ST    R1,DXDSPF1                     SET IN PARM LIST\n         LA    R1,CVDATA                      VARIABLE'S NAME\n         ST    R1,DXDSPF2                     SET IN PARM LIST\n         OI    DXDSPF2,X'80'                  SET END-OF-LIST\n         LA    R1,DXDSPF                      PARM LIST'S ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ENTRY POINT\n         BALR  R14,R15                        LINK TO SPF\n         LTR   R15,R15                        VDELETE OK?\n         BNZ   ERR0030                        NO\n         ITRACE ID=FREEVDA\n         ICM   R1,15,SPF_DYNAMIC_AREA_ADDR    DYNAMIC AREA ADDRESS\n         BZ    EXIT0000                       NO ADDRESS.. EXIT\n         L     R0,SPF_DYNAMIC_AREA_SIZE       DYNAMIC AREA SIZE\n         FREEMAIN RU,A=(1),LV=(0)             FREEMAIN DYNAMIC AREA\n         XC    SPF_DYNAMIC_AREA_ADDR,SPF_DYNAMIC_AREA_ADDR               ADDRESS\n         XC    SPF_DYNAMIC_AREA_SIZE,SPF_DYNAMIC_AREA_SIZE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=VDEFFAIL,                  VDEFINE FAILED           +\n               RDATA1=R15                     .. VDEFINE RETURN CODE\n         ABEND 1,DUMP,,USER\nERR0020  DS    0H\n         ITRACE ID=PQRYFAIL,                  PQUERY FAILED            +\n               RDATA1=R15                     .. PQUERY RETURN CODE\n         ABEND 2,DUMP,,USER\nERR0030  DS    0H\n         ITRACE ID=VDELFAIL,                  VDELETE FAILED           +\n               RDATA1=R15                     .. PQUERY RETURN CODE\n         ABEND 3,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         ICM   R1,15,SPF_DYNAMIC_AREA_ADDR\n         BZ    EXIT0010\n         L     R0,SPF_DYNAMIC_AREA_SIZE\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=(0)\n         XC    SPF_DYNAMIC_AREA_ADDR,SPF_DYNAMIC_AREA_ADDR\n         XC    SPF_DYNAMIC_AREA_SIZE,SPF_DYNAMIC_AREA_SIZE\n         LA    R1,VDELETE                     COMMAND'S ADDRESS\n         ST    R1,DXDSPF1                     SET ADDRESS IN PARM LIST\n         LA    R1,CVDATA                      VARIABLE NAME ADDRESS\n         ST    R1,DXDSPF2                     SET ADDRESS IN PARM LIST\n         OI    DXDSPF2,X'80'\n         LA    R1,DXDSPF\n         L     R15,AISPLINK\n         BALR  R14,R15\nEXIT0010 DS    0H\n         LH    R15,DXDRC                      SET RETURN CODE\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\nDYNMVC   MVC   0(0,R2),0(R3)                  MOVE TEXT TO DYNAMIC AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDDISP)                     DISPLACEMENT TO WORK AREA\nVGETVARS DC    F'3'                           NUMBER OF VARIABLE NAMES\n         DC    F'0'                           UNPROTECTED STORAGE\n         DC    CL8'ZVERB'                     VARIABLE NAME\n         DC    CL8'ZSCROLLA'                  VARIABLE NAME\n         DC    CL8'ZSCROLLN'                  VARIABLE NAME\nH8       DC    H'8'                           CONSTANT\nPQUERY   DC    CL8'PQUERY'\nCVDATA   DC    CL8'VDATA'\nCVTYPE   DC    CL8'VTYPE'\nCVWIDTH  DC    CL8'VWIDTH'\nCVDEPTH  DC    CL8'VDEPTH'\nCVROW    DC    CL8'VROW'\nCVCOL    DC    CL8'VCOL'\nVDEFINE  DC    CL8'VDEFINE'\nVDELETE  DC    CL8'VDELETE'\nDISPLAY  DC    CL8'DISPLAY'\nVGET     DC    CL8'VGET'\nVPUT     DC    CL8'VPUT'\nSHARED   DC    CL8'SHARED'\nCHARFORM DC    CL4'CHAR'\n         LTORG\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nDXDDISP  DSECT\n         LIBSAVE DSECT=NO\n\nDXDSPF   DS    0A                    ISPF PARM LIST\nDXDSPF1  DS    A                     PARM 1 ADDRESS\nDXDSPF2  DS    A                     PARM 2 ADDRESS\nDXDSPF3  DS    A                     PARM 3 ADDRESS\nDXDSPF4  DS    A                     PARM 4 ADDRESS\nDXDSPF5  DS    A                     PARM 5 ADDRESS\nDXDSPF6  DS    A                     PARM 6 ADDRESS\nDXDSPF7  DS    A                     PARM 7 ADDRESS\nDXDSPF8  DS    A                     PARM 8 ADDRESS\n\nDXDTEXT  DS    A                     START OF DISPLAYED TEXT\nDXDLINES DS    F                     LINES OF DISPLAYED TEXT\nDXD_LINE_OFFSET DS H\nDXDRC    DS    H                     RETURN CODE FROM DISPLAY\nDXDFLAG  DS    X                     INTERNAL FLAGS\n$DXDVPUT EQU   X'80'                 .. VPUT HAS BEEN ISSUED\n* ------------------------------------------------------------------- *\n*              COMMON DATA MAP                                        *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA  DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBTDISP\n./ ADD NAME=LIBTDLIB 0100-09250-09250-0919-00292-00292-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTDLIB                                              *\n*                                                                     *\n*  Function:                                                          *\n*   Display list of available libraries.                              *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTDLIB CSECT\nLIBTDLIB AMODE 31\nLIBTDLIB RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTDLIB,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     DISP0000\nMODID    DC    CL8'LIBTDLIB'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nDISP0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTDLIB,R13                   DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    DISP0010                       YES\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\n         XC    DXDRC,DXDRC                    SET RETURN CODE TO ZERO\n*---------------------------------------------------------------------*\n*        Acquire storage for dynamic area                             *\n*---------------------------------------------------------------------*\nDISP0010 DS    0H\n         ICM   R1,15,SPF_TEXT_ADDR            ANY PREVIOUS AREA?\n         BZ    DISP0020                       NO\n         L     R0,SPF_TEXT_SIZE               SIZE OF AREA\n         FREEMAIN RU,                         FREE THE AREA            +\n               A=(1),                                                  +\n               LV=(0)\nDISP0020 DS    0H\n         L     R0,COMM_NBR_OF_LIBRARIES       NUMBER OF LIBRARIES\n         ST    R0,SPF_TEXT_LINES              NBR OF LINES TO DISPLAY\n         MH    R0,=Y(DETAILL)                 TIMES SIZE PER LINE\n         ST    R0,SPF_TEXT_SIZE               SIZE OF TEXT AREA\n         MVC   SPF_TEXT_LINE_LENGTH,=A(DETAILL)\n         XC    SPF_TEXT_OFFSET,SPF_TEXT_OFFSET\n         XC    SPF_TEXT_RELATIVE_LINE,SPF_TEXT_RELATIVE_LINE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,SPF_TEXT_ADDR               SAVE TEXT AREA ADDRESS\n         LR    R9,R1                          COPY ADDRESSS\n         USING DETAIL,R9                      DEFINE BASE\n         L     R8,COMM_LIBRARY_CHAIN          FIRST LIBRARY CHAIN BLOCK\n         USING LIB_CHAIN,R8\nDISP0030 DS    0H\n         LA    R7,LIB_CHAIN_LIBRARIES         FIRST LIBRARY\n         USING LIB_CHAIN_NAME,R7\n         L     R1,LIB_CHAIN_LENGTH            LENGTH OF DATA\n         SH    R1,=Y(LIB_CHAIN_NAME-LIB_CHAIN)\n         SR    R0,R0                          CLEAR REGISTER\n         D     R0,=A(LIB_CHAIN_PER_LEN)\n         LR    R6,R1                          NUMBER IN THIS BLOCK\nDISP0040 DS    0H\n         MVC   DETAIL(DETAILL),COMM_BLANKS\n         MVI   DETAIL_ATTR_1,X'02'\n         MVI   DETAIL_ATTR_2,X'01'\n         MVC   DETAIL_LIB_NAME,LIB_CHAIN_NAME\n         MVC   DETAIL_LIB_DESC,LIB_CHAIN_DESC\n         TM    LIB_CHAIN_STATUS,$LIB_OPEN\n         BO    DISP0050\n         MVC   DETAIL_LIB_STATUS,STATUS_CLOSED\n         B     DISP0060\nDISP0050 DS    0H\n         MVC   DETAIL_LIB_STATUS,STATUS_OPEN\nDISP0060 DS    0H\n         LA    R9,DETAILL(R9)\n         LA    R7,LIB_CHAIN_PER_LEN(R7)\n         BCT   R6,DISP0040\n         ICM   R8,15,LIB_CHAIN_NEXT\n         BNZ   DISP0030\nDISP0070 DS    0H\n         MVC   SPF_PANEL,LIBPANEL             SET PANEL NAME\n         ITRACE ID=DISPLAY\n         L     R15,ATDISP                     DISPLAY MANAGER\n         BALR  R14,R15                        LINK TO SPF\n         STH   R15,DXDRC                      SAVE RETURN CODE\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15                     .. RETURN CODE\n         LTR   R15,R15                        RC = ZERO?\n         BNZ   EXIT0000                       NO\nDISP0080 DS    0H\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR ANY MESSAGE\n         MVC   SPF_MSG2,COMM_BLANKS           CLEAR ANY MESSAGE\n         MVC   SPF_MSG3,COMM_BLANKS           CLEAR ANY MESSAGE\n         MVC   SPF_MSG4,COMM_BLANKS           CLEAR ANY MESSAGE\n         MVC   SPF_MSG5,COMM_BLANKS           CLEAR ANY MESSAGE\n         CLC   =C'STAT ',SPF_ZCMD             LIBRARY STATUS?\n         BE    STAT0000\n         CLC   =C'STATUS ',SPF_ZCMD           LIBRARY STATUS?\n         BE    STAT0000\n         CLC   =C'SNAP ',SPF_ZCMD             SNAP DUMP?\n         BE    SNAP0000\n         L     R9,SPF_TEXT_ADDR               TEXT ADRESS\n         SR    R2,R2                          INITIALIZE FOR COUNTER\n         L     R3,COMM_NBR_OF_LIBRARIES       NUMBER OF LIBRARIES\n         ITRACE ID=CHKSEL,                                             +\n               DATA1=DETAIL_LIB_NAME,                                  +\n               DATA2=DETAIL_SELECT\nDISP0090 DS    0H\n         OI    DETAIL_SELECT,C' '             TRANSLATE TO UPPER CASE\n         CLI   DETAIL_SELECT,C'A'             'ALL'?\n         BE    DISP0100                       YES\n         CLI   DETAIL_SELECT,C'F'             'FULL' LIST?\n         BE    DISP0100                       YES\n         CLI   DETAIL_SELECT,C' '             LIBRARY SELECTED?\n         BE    DISP0120                       NO\n         NI    COMM_FLAGS,255-$LIST_ALL       'NORMAL' LIST\n         B     DISP0110\nDISP0100 DS    0H\n         ITRACE ID=SET_ALL\n         OI    COMM_FLAGS,$LIST_ALL           LIST ALL MEMBERS\nDISP0110 DS    0H\n         ITRACE ID=SELECTED,                                           +\n               DATA1=DETAIL_LIB_NAME,                                  +\n               DATA2=COMM_FLAGS\n         LA    R2,1(R2)                       PLUS 1\n         MVC   DXD_LIB_NAME,DETAIL_LIB_NAME\n         MVC   DXD_LIB_DESC,DETAIL_LIB_DESC\n         MVC   DXD_LIB_STATUS,DETAIL_LIB_STATUS\nDISP0120 DS    0H\n         ITRACE ID=NEXTLIB\n         LA    R9,DETAILL(R9)                 NEXT LIBRARY\n         BCT   R3,DISP0090                    LOOP\n         CH    R2,H1                          ANY LIBRARIES SELECTED?\n         BL    DISP0070                       NO.. DISPLAY LIST AGAIN\n         BH    ERR0010                        TOO MANY\n         CLI   DXD_LIB_STATUS,C'O'            IS THE LIBRARY OPEN?\n         BNE   ERR0020                        NO\n         MVC   COMM_LIBRARY_NAME,DXD_LIB_NAME SET LIBRARY NAME\n         MVC   SPF_LIB_NAME,DXD_LIB_NAME      SET LIBRARY NAME\n         MVC   SPF_LIB_DESC,DXD_LIB_DESC      SET LIBRARY DESCRIPTION\n         ITRACE ID=GOODLIB,                                            +\n               DATA1=COMM_LIBRARY_NAME\n         XC    DXDRC,DXDRC                    RETURN CODE IS ZERO\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*        SNAP DUMP                                                    *\n* ------------------------------------------------------------------- *\nSNAP0000 DS    0H\n         ITRACE ID=SNAP\n         MVC   SPF_ZCMD,COMM_BLANKS           RESET THE COMMAND\n         L     R15,ATSNAP\n         BALR  R14,R15                        LINK TO STATUS DISPLAY\n         B     DISP0070\n* ------------------------------------------------------------------- *\n*        LIBRARY STC STATUS                                           *\n* ------------------------------------------------------------------- *\nSTAT0000 DS    0H\n         ITRACE ID=STATUS\n         MVC   SPF_ZCMD,COMM_BLANKS           RESET THE COMMAND\n         L     R15,ATSTAT\n         BALR  R14,R15                        LINK TO STATUS DISPLAY\n         STH   R15,DXDRC                      SAVE RETURN CODE\n         CH    R15,H4                         QUIT?\n         BE    EXIT0000                       YES\n         B     DISP0010\n* ------------------------------------------------------------------- *\n*        abend user task                                              *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         MVC   SPF_ZCMD,COMM_BLANKS           RESET THE COMMAND\n         L     R15,ATSNAP\n         BALR  R14,R15                        LINK TO STATUS DISPLAY\n         B     DISP0070\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=TOOMANY\n         MVC   SPF_MSG1(MSG01L),MSG01\n         B     DISP0070\nERR0020  DS    0H\n         ITRACE ID=NOTOPEN\n         MVC   SPF_MSG1(MSG02L),MSG02\n         B     DISP0070\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ICM   R1,15,SPF_TEXT_ADDR            ANY PREVIOUS AREA?\n         BZ    EXIT0010                       NO\n         L     R0,SPF_TEXT_SIZE               SIZE OF AREA\n         FREEMAIN RU,A=(1),LV=(0)             FREE THE AREA\n         XC    SPF_TEXT_ADDR,SPF_TEXT_ADDR\n         XC    SPF_TEXT_SIZE,SPF_TEXT_SIZE\nEXIT0010 DS    0H\n         LH    R15,DXDRC                      SET RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE registers\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\nDYNMVC   MVC   0(0,R2),0(R3)                  MOVE TEXT TO DYNAMIC AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTDLIB)                    DISPLACEMENT TO WORK AREA\nH1       DC    H'1'\nH4       DC    H'4'\nLIBPANEL DC    CL8'LIBPANEL'\n\nSTATUS_OPEN    DC  CL6'OPEN'\nSTATUS_CLOSED  DC  CL6'CLOSED'\n\nMSG01    DS    0C\n         DC    CL11'LIBTDLIB01'\n         DC    C'Select one library only'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    CL11'LIBTDLIB02'\n         DC    C'Library is not open'\nMSG02L   EQU   *-MSG02\n         LTORG\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nDXDTDLIB     DSECT\n             LIBSAVE DSECT=NO\n\nDXDRC          DS H                  RETURN CODE FROM DISPLAY\nDXD_LIB_NAME   DS CL8                SELECTED LIBRARY NAME\nDXD_LIB_DESC   DS CL40               SELECTED LIBRARY DESCRIPTION\nDXD_LIB_STATUS DS C                  SELECTED LIBRARY STATUS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDETAIL            DSECT\nDETAIL_ATTR_1     DS   X\nDETAIL_SELECT     DS   C\nDETAIL_ATTR_2     DS   X\n                  DS   X\nDETAIL_LIB_NAME   DS   CL8\n                  DS   CL4\nDETAIL_LIB_DESC   DS   CL40\n                  DS   CL4\nDETAIL_LIB_STATUS DS   CL6\nDETAILL           EQU  *-DETAIL\n\n\nLIB_CHAIN         DSECT\nLIB_CHAIN_EYE     DS   CL8\nLIB_CHAIN_NEXT    DS   A\nLIB_CHAIN_LENGTH  DS   F\nLIB_CHAIN_LIBRARIES DS 0C\nLIB_CHAIN_NAME    DS   CL8\nLIB_CHAIN_DESC    DS   CL80\nLIB_CHAIN_STATUS  DS   X\nLIB_CHAIN_PER_LEN EQU  *-LIB_CHAIN_NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBTDLIB\n./ ADD NAME=LIBTDMEM 0100-09250-09250-0919-01531-01531-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTDMEM                                              *\n*                                                                     *\n*  Function:                                                          *\n*   Display the list of members in a library.                         *\n*                                                                     *\n*   The library name will have been verified to be valid.             *\n*   The library name will be in COMM_LIBRARY_NAME.                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTDMEM CSECT\nLIBTDMEM AMODE 31\nLIBTDMEM RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTDMEM,R12,R10               DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     MEM0000\nMODID    DC    CL8'LIBTDMEM'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nMEM0000  DS    0H\n         LA    R10,2048(R12)\n         LA    R10,2048(R10)\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTDMEM,R13                   DEFINE WORK AREA BASE\n         L     R5,ALIBSPFD                    SPF DATA ADDRESS\n         USING LIBSPFD,R5\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    MEM0010                        YES\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK REA INITIALIZED\n*---------------------------------------------------------------------*\n*        Get list of members                                          *\n*---------------------------------------------------------------------*\nMEM0010  DS    0H\n         XC    DXD_RC,DXD_RC\n         XC    DXD_MEMBERS,DXD_MEMBERS\n         L     R7,COMM_NETWORK_IO_AREA        I/O AREA ADDRESS\n         USING NETBLOK,R7                     DEFINE BASE\n         LA    R8,DXD_MEM_CHAIN               MEMBER CHAIN ANCHOR\n         USING MEM_CHAIN,R8\n         XC    MEM_CHAIN_NEXT,MEM_CHAIN_NEXT\n         XC    MEM_CHAIN_PREV,MEM_CHAIN_PREV\n         MVI   MEM_CHAIN_FLAG,$MEM_CHAIN_DUMMY ANCHOR IS A DUMMY MEMBER\n         XC    DXD_MEMBERS,DXD_MEMBERS\nMEM0020  DS    0H\n         MVI   NET_FUNCTION,$NET_GET_MEMBERS\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME\n         LA    R1,NETBLOKL+L'NET_LIB_NAME\n         STH   R1,NET_LENGTH                  SET LENGTH\n         BAL   R14,SEND0000                   ISSUE SEND\n         ITRACE ID=RECVMEMS\n         BAL   R14,RECV0000                   ISSUE RECEIVE\n         TM    XTRFLAG,$XTRON                 EXTERNAL TRACE ON\n         BNO   MEM0030                        NO\n         PUT   XTRACE,NETBLOK\nMEM0030  DS    0H\n         SR    R3,R3                          CLEAR REGISTER\n         ICM   R3,3,NET_LENGTH                LENGTH\n         SH    R3,=Y(NETBLOKL)                DATA LENGTH\n         BZ    MEM0050                        NO DATA\n         LA    R4,NET_MEMBERS                 FIRST MEMBER\n         ITRACE ID=BLDCHAIN,                                           +\n               RDATA1=R3,                                              +\n               RDATA2=R4\nMEM0040  DS    0H\n         GETMAIN RU,                          GETMAIN MEMBER CHAIN     +\n               LV=MEM_CHAIN_L,                                         +\n               LOC=ANY\n         ITRACE ID=NEWCHAIN,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R8\n         ST    R1,MEM_CHAIN_NEXT\n         ST    R8,MEM_CHAIN_PREV-MEM_CHAIN(R1)\n         LR    R8,R1\n         MVC   MEM_CHAIN_EYE,MEM_CHAIN_ID\n         XC    MEM_CHAIN_NEXT,MEM_CHAIN_NEXT\n         MVI   MEM_CHAIN_FUNCTION,0\n         MVI   MEM_CHAIN_FLAG,0\n         MVC   MEM_CHAIN_MEMBER(LIB_INDEX_RECORD_LENGTH),0(R4)\n         L     R1,DXD_MEMBERS                 NUMBER OF MEMBERS SO FAR\n         LA    R1,1(,R1)                      PLUS 1 MEMBER\n         ST    R1,DXD_MEMBERS                 SAVE TOTAL\n         LA    R4,LIB_INDEX_RECORD_LENGTH(,R4)\n         SH    R3,=Y(LIB_INDEX_RECORD_LENGTH)\n         BNZ   MEM0040\nMEM0050  DS    0H\n         CLI   NET_RETURN_CODE,$NET_EOF       EOF?\n         BNE   MEM0020                        NO\n         ITRACE ID=MEM_EOF,                                            +\n               DATA1=DXD_MEMBERS\n*---------------------------------------------------------------------*\n*        Verify the library does have members                         *\n*---------------------------------------------------------------------*\n         OC    DXD_MEMBERS,DXD_MEMBERS\n         BZ    MEM0100\n*---------------------------------------------------------------------*\n*        Scan the members and flag highest (current) version          *\n*---------------------------------------------------------------------*\n         LA    R8,DXD_MEM_CHAIN\n         L     R8,MEM_CHAIN_NEXT              FIRST MEMBER\nMEM0060  DS    0H\n         ICM   R1,15,MEM_CHAIN_NEXT           NEXT MEMBER\n         BZ    MEM0090\nCURR     USING MEM_CHAIN,R8\nNEXT     USING MEM_CHAIN,R1\n         CLC   CURR.MEM_CHAIN_MEMBER+(LIB_KEY_NAME-LIB_RECORD)(L'LIB_KE+\n               Y_NAME),NEXT.MEM_CHAIN_MEMBER+(LIB_KEY_NAME-LIB_RECORD)\n         BE    MEM0070                        SAME MEMBER NAME\n         OI    CURR.MEM_CHAIN_FLAG,$MEM_CURRENT\n         B     MEM0080\nMEM0070  DS    0H\n         NI    CURR.MEM_CHAIN_FLAG,255-$MEM_CURRENT\nMEM0080  DS    0H\n         LR    R8,R1                          NEXT ON CHAIN\n         B     MEM0060\nMEM0090  DS    0H\n         OI    CURR.MEM_CHAIN_FLAG,$MEM_CURRENT\n         DROP  CURR,NEXT\n*---------------------------------------------------------------------*\n*        Set first member for 1st pass                                *\n*---------------------------------------------------------------------*\n         LA    R8,DXD_MEM_CHAIN\n         MVC   DXD_FIRST_MEMBER,MEM_CHAIN_NEXT\n         ITRACE ID=INIT_1ST,                                           +\n               RDATA1=R8\n         BAL   R14,DBUG0000\n*---------------------------------------------------------------------*\n*        Acquire storage for dynamic area                             *\n*---------------------------------------------------------------------*\nMEM0100  DS    0H\n         MVC   SPF_PANEL,MEMPANEL             PANEL NAME\n         BAL   R14,DYNA0000                   ACQUIRE DYNAMIC AREA\n         OC    DXD_MEMBERS,DXD_MEMBERS\n         BNZ   MEM0110\n         ITRACE ID=NOMEMS\n         MVC   SPF_MSG1(MSG06L),MSG06\n         B     DISP0070\nMEM0110  DS    0H\n         MVC   DXD_DEPTH,SPF_VDEPTH\n         MVC   DXD_WIDTH,SPF_VWIDTH\n         L     R1,DXD_MEMBERS                 NUMBER OF MEMBERS\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         MVC   SPF_MSG5(MSG05L),MSG05\n         ED    SPF_MSG5+(MSG05MEM-MSG05)(L'MSG05MEM),DXD_DWORD+4\n*---------------------------------------------------------------------*\n*        Build the text for the dynamic area                          *\n*---------------------------------------------------------------------*\nDISP0010 DS    0H\n         L     R8,DXD_FIRST_MEMBER\n         ITRACE ID=BLD_TEXT,                                           +\n               RDATA1=R8,                                              +\n               DATA2=MEM_CHAIN_NEXT\n         L     R9,DXD_DYNA_ADDR\n         L     R6,DXD_DEPTH\nDISP0020 DS    0H\n         MVC   0(80,R9),COMM_BLANKS\n         A     R9,DXD_WIDTH\n         BCT   R6,DISP0020\n         L     R9,DXD_DYNA_ADDR               COPY ADDRESSS\n         USING DETAIL,R9                      DEFINE BASE\n         L     R6,DXD_DEPTH                   NUMBER OF LINES\nDISP0030 DS    0H\n         ST    R8,DXD_LAST_MEMBER\n         CLI   MEM_CHAIN_FLAG,$MEM_CHAIN_DUMMY\n         BE    DISP0060\n         TM    COMM_FLAGS,$LIST_ALL           LIST ALL MEMBERS?\n         BO    DISP0040                       YES\n         TM    MEM_CHAIN_FLAG,$MEM_CURRENT    CURRENT MEMBER?\n         BNO   DISP0060                       NO\nDISP0040 DS    0H\n         LA    R4,MEM_CHAIN_MEMBER\n         USING LIB_RECORD,R4\n         ITRACE ID=BLD,                                                +\n               RDATA1=R4,                                              +\n               DATA2=LIB_KEY_NAME\n         BAL   R14,DETL0000\n         BCT   R6,DISP0050\n         B     DISP0070\nDISP0050 DS    0H\n         A     R9,DXD_WIDTH\nDISP0060 DS    0H\n         ICM   R8,15,MEM_CHAIN_NEXT\n         BNZ   DISP0030\n*---------------------------------------------------------------------*\n*        Display the panel                                            *\n*---------------------------------------------------------------------*\nDISP0070 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SPF_PANEL,MEMPANEL             PANEL NAME\n         NI    DXD_FLAGS,255-$SELECT          RESET INDICATOR\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST\n         LA    R1,SPF_PANEL                   PANEL'S NAME\n         ST    R1,DXD_SPF_2                   SET PANEL NAME ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,AISPLINK\n         BALR  R14,R15                        LINK TO SPF\n         STH   R15,DXD_RC                     SAVE RETURN CODE\n         CLC   ABEND,SPF_ZCMD                 ABEND OURSELVES?\n         BE    ABND0000                       YES\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR ANY MESSAGE\n         MVC   SPF_MSG2,COMM_BLANKS           CLEAR ANY MESSAGE\n         MVC   SPF_MSG3,COMM_BLANKS           CLEAR ANY MESSAGE\n         MVC   SPF_MSG4,COMM_BLANKS           CLEAR ANY MESSAGE\n         MVC   SPF_MSG5,COMM_BLANKS           CLEAR ANY MESSAGE\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15                     .. RETURN CODE\n         LTR   R15,R15                        RC = ZERO?\n         BNZ   EXIT0000                       NO\n         BAL   R14,DBUG0000\n         OC    DXD_MEMBERS,DXD_MEMBERS\n         BZ    DISP0070\n*---------------------------------------------------------------------*\n*        Process primary command if any                               *\n*---------------------------------------------------------------------*\nDISP0080 DS    0H\n         CLC   SPF_ZCMD,COMM_BLANKS           BLANK?\n         BE    DISP0140                       YES\n         L     R15,ATPRSE\n         BALR  R14,R15                        CALL PARSER\n         ITRACE ID=PARMS,                                              +\n               DATA1=COMM_OPERANDS_NBR\n         OC    COMM_OPERANDS_NBR,COMM_OPERANDS_NBR\n         BZ    DISP0140\n         L     R1,COMM_OPERAND_1_ADDRESS\n         CLI   COMM_OPERAND_1_LENGTH,1\n         BH    DISP0090\n         CLI   0(R1),C'A'                    'ADMIN' COMMAND?\n         BE    ADMIN000                      YES\n         CLI   0(R1),C'D'                    'DELETE' COMMAND?\n         BE    DEL0000                       YES\n         CLI   0(R1),C'I'                    'CHECK IN' COMMAND?\n         BE    IN0000                        YES\n         CLI   0(R1),C'J'                    SUBMIT AS A JOB?\n         BE    JOB0000                       YES\n         CLI   0(R1),C'L'                    LOCATE?\n         BE    LOC0000                       YES\n         CLI   0(R1),C'N'                    'NEW' COMMAND?\n         BE    DISP0500                      YES\n         CLI   0(R1),C'O'                    'CHECK OUT' COMMAND?\n         BE    OUT0000                       YES\n         CLI   0(R1),C'S'                    SELECT?\n         BE    SEL0000                       YES\n         CLI   0(R1),C'V'                    VIEW?\n         BE    VIEW0000                      YES\n         CLI   0(R1),C'?'                    HELP?\n         BE    HELP0000                      YES\n         B     DISP0130\nDISP0090 DS    0H\n         CLI   COMM_OPERAND_1_LENGTH,2\n         BH    DISP0100\n         CLC   =C'IN',0(R1)                  CHECK IN?\n         BE    IN0000                        YES\n         B     DISP0130\nDISP0100 DS    0H\n         CLI   COMM_OPERAND_1_LENGTH,3\n         BH    DISP0110\n         CLC   =C'DEL',0(R1)                 DELETE?\n         BE    DEL0000                       YES\n         CLC   =C'JOB',0(R1)                 SUBMIT AS A JOB?\n         BE    JOB0000                       YES\n         CLC   =C'LOC',0(R1)                 LOCATE?\n         BE    LOC0000                       YES\n         CLC   =C'NEW',0(R1)                 NEW MEMBER?\n         BE    DISP0500                      YES\n         CLC   =C'SEL',0(R1)                 SELECT?\n         BE    SEL0000                       YES\n         CLC   =C'SUB',0(R1)                 SUBmit?\n         BE    JOB0000                       YES\n         CLC   =C'OUT',0(R1)                 CHECK-OUT?\n         BE    OUT0000                       YES\n         B     DISP0130\nDISP0110 DS    0H\n         CLI   COMM_OPERAND_1_LENGTH,4\n         BH    DISP0120\n         CLC   =C'SNAP',0(R1)                'SNAP' COMMAND?\n         BE    SNAP0000\n         CLC   =C'STAT',0(R1)                'STAT' COMMAND?\n         BE    STAT0000\n         CLC   =C'VIEW',0(R1)                'VIEW' COMMAND?\n         BE    VIEW0000\n         B     DISP0130\nDISP0120 DS    0H\n         CLI   COMM_OPERAND_1_LENGTH,6\n         BNE   DISP0130\n         CLC   =C'STATUS',0(R1)              'STATUS' COMMAND?\n         BE    STAT0000\n         CLC   =C'SUBMIT',0(R1)              'SUBMIT' COMMAND?\n         BE    JOB0000\n         CLC   =C'LOCATE',0(R1)               LOCATE?\n         BE    LOC0000                        YES\n         CLC   =C'SELECT',0(R1)               SELECT?\n         BE    SEL0000                        YES\nDISP0130 DS    0H\n         MVC   SPF_MSG1(MSG07L),MSG07\n*---------------------------------------------------------------------*\n*        Process line command(s)                                      *\n*---------------------------------------------------------------------*\nDISP0140 DS    0H\n         L     R6,DXD_DEPTH\n         L     R8,DXD_FIRST_MEMBER            1ST MEMBER BUILT\n         L     R9,DXD_DYNA_ADDR               TEXT ADRESS\n         ITRACE ID=PROCCMDS,                                           +\n               RDATA1=R8\nDISP0150 DS    0H\n         TM    COMM_FLAGS,$LIST_ALL           ALL MEMBERS LISTED?\n         BO    DISP0160                       YES\n         TM    MEM_CHAIN_FLAG,$MEM_CURRENT    CURRENT VERSION?\n         BO    DISP0160                       YES\n         ICM   R8,15,MEM_CHAIN_NEXT           NEXT MEMBER\n         B     DISP0150\nDISP0160 DS    0H\n         LA    R4,MEM_CHAIN_MEMBER\n         ITRACE ID=CHKSEL,                                             +\n               DATA1=DETAIL_SELECT,                                    +\n               RDATA2=R4\n         CLI   DETAIL_SELECT,C' '             MEMBER SELECTED?\n         BE    DISP1000                       NO\n         ITRACE ID=SELECTED,                                           +\n               DATA1=DETAIL_NAME\n         OI    DXD_FLAGS,255-$SELECT          SET INDICATOR\n\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_DELETE\n         BE    DISP0270\n\n         CLI   DETAIL_SELECT,C'D'             DELETE?\n         BE    DISP0170                       YES\n         CLI   DETAIL_SELECT,C'd'             DELETE?\n         BE    DISP0170                       YES\n\n         CLI   DETAIL_SELECT,C'A'             ADMIN?\n         BE    DISP0250                       YES\n         CLI   DETAIL_SELECT,C'a'             ADMIN?\n         BE    DISP0250                       YES\n\n         CLI   DETAIL_SELECT,C'B'             BROWSE?\n         BE    DISP0260                       YES\n         CLI   DETAIL_SELECT,C'b'             BROWSE?\n         BE    DISP0260                       YES\n\n         CLI   DETAIL_SELECT,C'J'             SUBMIT AS BATCH JOB?\n         BE    DISP0280                       YES\n         CLI   DETAIL_SELECT,C'j'             SUBMIT AS BATCH JOB?\n         BE    DISP0280                       YES\n\n         CLI   DETAIL_SELECT,C'I'             CHECK-IN?\n         BE    DISP0180                       YES\n         CLI   DETAIL_SELECT,C'i'             CHECK-IN?\n         BE    DISP0180                       YES\n\n         CLI   DETAIL_SELECT,C'L'             SELECT?\n         BE    DISP0200                       YES\n         CLI   DETAIL_SELECT,C'l'             SELECT?\n         BE    DISP0200                       YES\n\n         CLI   DETAIL_SELECT,C'O'             CHECK-OUT?\n         BE    DISP0190                       YES\n         CLI   DETAIL_SELECT,C'o'             CHECK-OUT?\n         BE    DISP0190                       YES\n\n         CLI   DETAIL_SELECT,C'S'             SELECT?\n         BE    DISP0200                       YES\n         CLI   DETAIL_SELECT,C's'             SELECT?\n         BE    DISP0200                       YES\n\n         CLI   DETAIL_SELECT,C'R'             RE-FRESH DATA?\n         BE    DISP0220                       YES\n         CLI   DETAIL_SELECT,C'r'             RE-FRESH DATA?\n         BE    DISP0220                       YES\n\n         CLI   DETAIL_SELECT,C'U'             UNDO?\n         BE    DISP0230                       YES\n         CLI   DETAIL_SELECT,C'u'             UNDO?\n         BE    DISP0230                       YES\n\n         CLI   DETAIL_SELECT,C'V'             VIEW?\n         BE    DISP0210                       YES\n         CLI   DETAIL_SELECT,C'v'             VIEW?\n         BE    DISP0210                       YES\n\n         CLI   DETAIL_SELECT,C'X'             NEW VERSION?\n         BE    DISP0240                       YES\n         CLI   DETAIL_SELECT,C'x'             NEW VERSION?\n         BE    DISP0240                       YES\n\n         CLI   DETAIL_SELECT,C'?'             HELP?\n         BE    HELP0010                       YES\n\n         ITRACE ID=BAD_SEL,                                            +\n               DATA1=DETAIL_SELECT,                                    +\n               DATA2=DETAIL_NAME\n         MVI   DETAIL_ATTR_2,X'03'            HIGHLIGHT THE MEMBER\n         MVI   DETAIL_SELECT,C'*'             CHANGE SELECT TO ASTERISK\n         MVC   SPF_MSG1(MSG01L),MSG01\n         B     DISP0070                       DISPLAY AGAIN\nDISP0170 DS    0H\n         ITRACE ID=DELETE,                                             +\n               DATA1=DETAIL_NAME\n         MVC   DXD_FUNCTION,VTDEL\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_DELETE\n         B     DISP0400\nDISP0180 DS    0H\n         ITRACE ID=CHECKIN,                                            +\n               DATA1=DETAIL_NAME\n         MVC   DXD_FUNCTION,VTCKIN\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_IN\n         B     DISP0400\nDISP0190 DS    0H\n         ITRACE ID=CHECKOUT,                                           +\n               DATA1=DETAIL_NAME\n         MVC   DXD_FUNCTION,VTCKOT\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_OUT\n         B     DISP0400\nDISP0200 DS    0H\n         ITRACE ID=MEMDOC,                                             +\n               DATA1=DETAIL_NAME,                                      +\n               DATA2=LIB_KEY_NAME\n         MVC   DXD_FUNCTION,VTMDOC\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_DOC\n         B     DISP0400\nDISP0210 DS    0H\n         ITRACE ID=VIEW,                                               +\n               DATA1=DETAIL_NAME\n         MVC   DXD_FUNCTION,VTVIEW\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_VIEW\n         B     DISP0400\nDISP0220 DS    0H\n         ITRACE ID=REFRESH,                                            +\n               DATA1=DETAIL_NAME\n         MVI   NET_FUNCTION,$NET_CHECK_DESC_AUTH\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME\n         MVC   NET_MEM_NAME,LIB_KEY_NAME\n         MVC   NET_MEM_VERSION,LIB_KEY_VERSION\n         LA    R1,NET_DESC_LENGTH\n         STCM  R1,3,NET_LENGTH\n         BAL   R14,SEND0000\n         BAL   R14,RECV0000\n         MVC   MEM_CHAIN_MEMBER(LIB_INDEX_RECORD_LENGTH),NET_DATA\n         BAL   R14,DETL0000\n         MVI   MEM_CHAIN_FUNCTION,0\n         B     DISP1000\nDISP0230 DS    0H\n         ITRACE ID=UNDO,                                               +\n               DATA1=DETAIL_NAME\n         MVC   DXD_FUNCTION,VTUNDO\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_UNDO\n         B     DISP0400\nDISP0240 DS    0H\n         ITRACE ID=VERSION,                                            +\n               DATA1=DETAIL_NAME\n         MVC   DXD_FUNCTION,VTVER\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_VER\n         B     DISP0400\nDISP0250 DS    0H\n         ITRACE ID=ADMIN,                                              +\n               DATA1=DETAIL_NAME\n         MVC   DXD_FUNCTION,VTADMN\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_ADMN\n         B     DISP0400\nDISP0260 DS    0H\n         ITRACE ID=BROWSE,                                             +\n               DATA1=DETAIL_NAME\n         MVC   DXD_FUNCTION,VTBRWS\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_BROWSE\n         B     DISP0400\nDISP0270 DS    0H\n         ITRACE ID=DELETED\n         MVC   SPF_MSG1(MSG11L),MSG11\n         MVI   DETAIL_SELECT,C'*'\n         MVI   DETAIL_ATTR_2,X'03'\n         B     DISP0070\nDISP0280 DS    0H\n         XC    LIB_KEY_VERSION,LIB_KEY_VERSION\n         ITRACE ID=SUBMIT,                                             +\n               DATA1=DETAIL_NAME,                                      +\n               DATA2=LIB_KEY_NAME\n         MVC   DXD_FUNCTION,VTJOB\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_SUBMIT\n         B     DISP0400\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDISP0400 DS    0H\n         OI    DXD_FLAGS,$SELECT              SET INDICATOR\n         MVC   COMM_MEMBER_NAME,LIB_KEY_NAME  COPY MEMBER NAME\n         MVC   COMM_VERSION,LIB_KEY_VERSION\n         MVC   SPF_MEM_NAME,DETAIL_NAME\n         MVC   SPF_MEM_VERSION,DETAIL_VERSION\n         MVC   COMM_SOURCE_RECORDS,LIB_INDEX_RECORDS\n         MVC   COMMBLKN,F4000                 SET ALLOCATION BLOCK SIZE\n         SR    R0,R0                          CLEAR REGISTER\n         ICM   R1,15,LIB_INDEX_RECORDS        NUMBER OF RECORDS\n         D     R0,F4000                       COMPUTE NUMBER OF RECORDS\n         STCM  R1,15,COMMPRI                  PRIMARY SPACE QUANTITY\n         LR    R1,R0                          COPY REMAINDER\n         SR    R0,R0                          CLEAR REGISTER\n         D     R0,F10                         COMPUTE 10%\n         STCM  R1,15,COMMSEC                  SECONDARY SPACE QUANTITY\nDISP0410 DS    0H\n         ITRACE ID=CALLFUNC\n         L     R15,DXD_FUNCTION               FUNCTION ENTRY POINT\n         BALR  R14,R15                        LINK\n         ITRACE ID=FUNCRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DETAIL_SELECT\n         CLI   DETAIL_SELECT,C'A'             ADMIN?\n         BE    DISP0420                       YES\n         CLI   DETAIL_SELECT,C'a'             ADMIN?\n         BNE   DISP0430                       NO\nDISP0420 DS    0H\n         MVC   LIB_INDEX_STATUS,NET_DATA+(LIB_INDEX_STATUS-LIB_RECORD)\n         MVC   LIB_INDEX_OWNER,NET_DATA+(LIB_INDEX_OWNER-LIB_RECORD)\n         MVC   LIB_INDEX_CHECK_OUT_USER,NET_DATA+(LIB_INDEX_CHECK_OUT_U+\n               SER-LIB_RECORD)\n         MVI   DETAIL_SELECT,C' '             RESET COMMAND\n         B     DISP0440\nDISP0430 DS    0H\n         MVI   DETAIL_SELECT,C' '             RESET COMMAND\n         LTR   R15,R15                        ERROR?\n         BNZ   DISP0070                       YES\nDISP0440 DS    0H\n         MVC   MEM_CHAIN_FUNCTION,DXD_FUNCTION_FLAG\n         BAL   R14,DYNA0100\n         B     DISP1000\n*---------------------------------------------------------------------*\n*        Display the new member panel                                 *\n*---------------------------------------------------------------------*\nDISP0500 DS    0H\n         ITRACE ID=NEW\n         MVC   SPF_ZCMD,COMM_BLANKS\n         MVC   SPF_MEM_NAME,COMM_BLANKS\n         MVC   SPF_MEM_VERSION,=C'00001'\n         MVC   DXD_MEM_VERSION,H1             FORCE VERSION TO 1\n         MVC   SPF_COMM1,COMM_BLANKS\n         MVC   SPF_COMM2,COMM_BLANKS\n         MVC   SPF_COMM3,COMM_BLANKS\n         MVC   SPF_COMM4,COMM_BLANKS\n         MVC   SPF_COMM5,COMM_BLANKS\nDISP0510 DS    0H\n         MVC   SPF_PANEL,NEWPANEL             SET PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDRESS\n         BALR  R14,R15                        DISPLAY THE PANEL\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                        ZERO?\n         BNZ   DISP0010                       NO\n*---------------------------------------------------------------------*\n*        Verify the member does not already exist                     *\n*---------------------------------------------------------------------*\n         CLC   SPF_MEM_NAME,COMM_BLANKS       MEMBER NAME GIVEN?\n         BE    DISP0590                       NO..\n         ICM   R8,15,DXD_MEM_CHAIN            FIRST MEMBER CHAIN BLOCK\n         BZ    DISP0550                       NO MEMBERS\nDISP0520 DS    0H\n         ITRACE ID=CURRMEMS,                                           +\n               RDATA1=R8\n         LA    R4,MEM_CHAIN_MEMBER            ADDRESS OF FIRST MEMBER\nDISP0530 DS    0H\n         CLC   SPF_MEM_NAME,LIB_KEY_NAME\n         BNE   DISP0540\n         CLC   DXD_MEM_VERSION,LIB_KEY_VERSION\n         BE    DISP0600\nDISP0540 DS    0H\n         ICM   R8,15,MEM_CHAIN_NEXT           NEXT BLOCK\n         BNZ   DISP0520\n*---------------------------------------------------------------------*\n*        Call LIBTNEW to add the new member                           *\n*---------------------------------------------------------------------*\nDISP0550 DS    0H\n         MVC   COMM_MEMBER_NAME,SPF_MEM_NAME\n         MVC   COMM_VERSION,DXD_MEM_VERSION\n         ITRACE ID=CALLTNEW\n         L     R15,VTNEW                      LIBTNEW ENTRY POINT\n         BALR  R14,R15                        LINK\n         LR    R2,R15                         SAVE RC\n         BAL   R14,DYNA0100\n         LTR   R2,R2                          MEMBER ADDED?\n         BNZ   DISP0010                       NO\n         ITRACE ID=ADD_NEW\n         LA    R8,DXD_MEM_CHAIN               DUMMY HEAD OF CHAIN\nDISP0560 DS    0H\n         LR    R2,R8                          SAVE CURRENT MEMBER\n         ICM   R8,15,MEM_CHAIN_NEXT\n         BZ    DISP0570\n         LA    R4,MEM_CHAIN_MEMBER\n         CLC   SPF_MEM_NAME,LIB_KEY_NAME\n         BH    DISP0560\nDISP0570 DS    0H\n         GETMAIN RU,                          GETMAIN MEMBER CHAIN     +\n               LV=MEM_CHAIN_L,                                         +\n               LOC=ANY\n         ST    R1,MEM_CHAIN_NEXT-MEM_CHAIN(R2)\n         LTR   R8,R8\n         BZ    DISP0580\n         ST    R1,MEM_CHAIN_PREV\nDISP0580 DS    0H\n         ST    R8,MEM_CHAIN_NEXT-MEM_CHAIN(R1)\n         ST    R2,MEM_CHAIN_PREV-MEM_CHAIN(R1)\n         LR    R8,R1\n         LA    R4,MEM_CHAIN_MEMBER\n         MVC   MEM_CHAIN_EYE,MEM_CHAIN_ID\n         MVI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_NEW\n         MVI   MEM_CHAIN_FLAG,$MEM_CURRENT\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,SPF_MEM_NAME\n         MVC   LIB_KEY_VERSION,H1\n         MVC   LIB_KEY_SEQ,F1\n         MVC   LIB_INDEX_OWNER,SPF_USER\n         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN\n         TIME  DEC\n         STCM  R0,15,LIB_INDEX_CREATE_TIME\n         STCM  R1,15,LIB_INDEX_CREATE_DATE\n         XC    LIB_INDEX_CHECK_OUT_TIME,LIB_INDEX_CHECK_OUT_TIME\n         ZAP   LIB_INDEX_CHECK_OUT_DATE,P0\n         MVC   LIB_INDEX_CHECK_OUT_USER,COMM_BLANKS\n         XC    LIB_INDEX_CHECK_OUTS,LIB_INDEX_CHECK_OUTS\n         XC    LIB_INDEX_CHECK_IN_TIME,LIB_INDEX_CHECK_IN_TIME\n         ZAP   LIB_INDEX_CHECK_IN_DATE,P0\n         MVC   LIB_INDEX_CHECK_IN_USER,COMM_BLANKS\n         XC    LIB_INDEX_RECORDS,LIB_INDEX_RECORDS\n         B     DISP0010\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDISP0590 DS    0H\n         MVC   SPF_MSG1(MSG03L),MSG03\n         B     DISP0510\nDISP0600 DS    0H\n         MVC   SPF_MSG1(MSG04L),MSG04\n         B     DISP0510\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDISP1000 DS    0H\n         ITRACE ID=NEXTMEM,                                            +\n               RDATA1=R8,                                              +\n               RDATA2=R6\n         A     R9,DXD_WIDTH\n         ICM   R8,15,MEM_CHAIN_NEXT\n         BZ    DISP1010\n         BCT   R6,DISP0150\nDISP1010 DS    0H\n         TM    DXD_FLAGS,$SELECT              ANYTHING SELECTED?\n         BO    DISP0010                       YES, DON'T DO SCROLLING\n         ITRACE ID=SCROLL,                                             +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLN\n         NI    DXD_FLAGS,255-$VPUT\nDISP1020 DS    0H\n         ITRACE ID=VGET                       REQUESTING VARIABLES\n         LA    R1,VGET                        COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST\n         LA    R1,VGETVARS                    VARIABLE NAMES\n         ST    R1,DXD_SPF_2                   SET ADDRESS IN PARM LIST\n         LA    R1,SHARED                      FROM SHARED POOL\n         ST    R1,DXD_SPF_3                   SET ADDRESS IN PARM LIST\n         OI    DXD_SPF_3,X'80'                SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDR\n         BALR  R14,R15                        LINK TO SPF\n         ITRACE ID=VGETRC,                    VGET COMPLETE            +\n               RDATA1=R15                     .. INCLUDE RETURN CODE\n         LTR   R15,R15                        VGET SUCCESSFUL?\n         BZ    DISP1030                       YES\n         TM    DXD_FLAGS,$VPUT                VPUT ALREADY ISSUED?\n         BO    DISP1030                       YES\n*---------------------------------------------------------------------*\n*        Issue VPUT, try VGET again                                   *\n*---------------------------------------------------------------------*\n         ITRACE ID=VPUT\n         LA    R1,VPUT                        COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST\n         LA    R1,VGETVARS                    VARIABLE NAMES\n         ST    R1,DXD_SPF_2                   SET ADDRESS IN PARM LIST\n         LA    R1,SHARED                      FROM SHARED POOL\n         ST    R1,DXD_SPF_3                   SET ADDRESS IN PARM LIST\n         OI    DXD_SPF_3,X'80'                SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDR\n         BALR  R14,R15                        LINK TO SPF\n         ITRACE ID=VPUTRC,                    VPUT COMPLETE            +\n               RDATA1=R15                     .. INCLUDE RETURN CODE\n         B     DISP1020\n*---------------------------------------------------------------------*\n*        Process command or scroll                                    *\n*---------------------------------------------------------------------*\nDISP1030 DS    0H\n         CLI   SPF_ZVERB,C'D'                 DOWN?\n         BE    DISP1040                       YES\n         CLI   SPF_ZVERB,C'U'                 UP?\n         BE    DISP1060                       YES\n         MVC   SPF_MSG3_ID(MSG12L),MSG12\n         B     DISP0010                       DISPLAY MEMBER LIST AGAIN\nDISP1040 DS    0H\n         ITRACE ID=DOWN\n         L     R1,SPF_ZSCROLLN                NUMBER OF LINES\n         L     R8,DXD_FIRST_MEMBER\nDISP1050 DS    0H\n         ST    R8,DXD_FIRST_MEMBER\n         ICM   R8,15,MEM_CHAIN_NEXT\n         BZ    DISP0010\n         BCT   R1,DISP1050\n         B     DISP0010\nDISP1060 DS    0H\n         L     R1,SPF_ZSCROLLN                NUMBER OF LINES\n         L     R8,DXD_FIRST_MEMBER\nDISP1070 DS    0H\n         ST    R8,DXD_FIRST_MEMBER\n         ICM   R8,15,MEM_CHAIN_PREV\n         CLI   MEM_CHAIN_FLAG,$MEM_CHAIN_DUMMY\n         BE    DISP0010\n         BCT   R1,DISP1070\n         B     DISP0010\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDETL0000 DS    0H\n         ST    R14,DXD_SAVE_R14\n         ITRACE ID=DETAIL,                                             +\n               RDATA1=R4\n         MVC   DETAIL(DETAILL),COMM_BLANKS\n         MVI   DETAIL_ATTR_1,X'02'\n         MVI   DETAIL_ATTR_2,X'01'\n         MVC   DETAIL_NAME,LIB_KEY_NAME\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,LIB_KEY_VERSION           VERSION NUMBER\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         MVC   DXD_WORK_1,=X'402020202120'    INITIALIZE EDIT WORD\n         ED    DXD_WORK_1,DXD_DWORD+(5)       EDIT VERSION NUMBER\n         MVC   DETAIL_VERSION,DXD_WORK_1+1    COPY EDITED VERSION\n         MVC   DETAIL_OWNER,LIB_INDEX_OWNER   COPY OWNER\n         ICM   R1,15,LIB_INDEX_RECORDS        NUMBER OF RECORDS\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         MVC   DXD_WORK_2,=X'402020206B2020206B202120'\n         ED    DXD_WORK_2,DXD_DWORD+3         EDIT NUMBER OF RECORDS\n         MVC   DETAIL_SIZE,DXD_WORK_2+1       COPY EDITED SIZE\n         CLI   LIB_INDEX_STATUS,$LIB_STATUS_IN\n         BE    DETL0010\n         MVC   DETAIL_STATUS,OUT              STATUS IS CHECKED OUT\n         MVC   DETAIL_USER,LIB_INDEX_CHECK_OUT_USER\n         ZAP   DXD_DATE,LIB_INDEX_CHECK_OUT_DATE\n         AP    DXD_DATE,P1900000\n         UNPK  DXD_WORK_3(9),DXD_DATE(5)\n         MVC   DETAIL_DATE(4),DXD_WORK_3\n         MVI   DETAIL_DATE+4,C'.'\n         MVC   DETAIL_DATE+5(3),DXD_WORK_3+4\n         UNPK  DXD_WORK_3(9),LIB_INDEX_CHECK_OUT_TIME(5)\n         MVC   DETAIL_TIME+0(2),DXD_WORK_3+0\n         MVI   DETAIL_TIME+2,C':'\n         MVC   DETAIL_TIME+3(2),DXD_WORK_3+2\n         MVI   DETAIL_TIME+5,C':'\n         MVC   DETAIL_TIME+6(2),DXD_WORK_3+4\n         MVI   DETAIL_TIME+8,C'.'\n         MVC   DETAIL_TIME+9(2),DXD_WORK_3+6\n         B     DETL0020\nDETL0010 DS    0H\n         MVC   DETAIL_STATUS,IN               STATUS IS CHECKED IN\n         MVC   DETAIL_USER,LIB_INDEX_CHECK_IN_USER\n         ZAP   DXD_DATE,LIB_INDEX_CHECK_IN_DATE\n         AP    DXD_DATE,P1900000\n         UNPK  DXD_WORK_3(9),DXD_DATE(5)\n         MVC   DETAIL_DATE(4),DXD_WORK_3\n         MVI   DETAIL_DATE+4,C'.'\n         MVC   DETAIL_DATE+5(3),DXD_WORK_3+4\n         UNPK  DXD_WORK_3(9),LIB_INDEX_CHECK_IN_TIME(5)\n         MVC   DETAIL_TIME+0(2),DXD_WORK_3+0\n         MVI   DETAIL_TIME+2,C':'\n         MVC   DETAIL_TIME+3(2),DXD_WORK_3+2\n         MVI   DETAIL_TIME+5,C':'\n         MVC   DETAIL_TIME+6(2),DXD_WORK_3+4\n         MVI   DETAIL_TIME+8,C'.'\n         MVC   DETAIL_TIME+9(2),DXD_WORK_3+6\nDETL0020 DS    0H\n         MVI   DETAIL_ATTR_3,X'03'            SET ATTRIBUTE\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_ADMN\n         BE    DETL0030\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_DELETE\n         BE    DETL0040\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_DOC\n         BE    DETL0050\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_IN\n         BE    DETL0060\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_OUT\n         BE    DETL0070\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_VIEW\n         BE    DETL0080\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_VER\n         BE    DETL0090\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_NEW\n         BE    DETL0100\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_UNDO\n         BE    DETL0110\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_BROWSE\n         BE    DETL0115\n         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_SUBMIT\n         BE    DETL0116\n         MVI   DETAIL_ATTR_3,X'01'\n         B     DETL0120\nDETL0030 DS    0H\n         MVC   DETAIL_USER(29),ADMIN\n         B     DETL0120\nDETL0040 DS    0H\n         MVC   DETAIL_USER(29),DELETED\n         B     DETL0120\nDETL0050 DS    0H\n         MVC   DETAIL_USER(29),DOC\n         B     DETL0120\nDETL0060 DS    0H\n         MVC   DETAIL_USER(29),CHECKED_IN\n         B     DETL0120\nDETL0070 DS    0H\n         MVC   DETAIL_USER(29),CHECKED_OUT\n         B     DETL0120\nDETL0080 DS    0H\n         MVC   DETAIL_USER(29),VIEWED\n         B     DETL0120\nDETL0090 DS    0H\n         MVC   DETAIL_USER(29),VERSION\n         B     DETL0120\nDETL0100 DS    0H\n         MVC   DETAIL_USER(29),NEW\n         B     DETL0120\nDETL0110 DS    0H\n         MVC   DETAIL_USER(29),UNDO\n         B     DETL0120\nDETL0115 DS    0H\n         MVC   DETAIL_USER(29),BROWSE\n         B     DETL0120\nDETL0116 DS    0H\n         MVC   DETAIL_USER(29),SUBMIT\nDETL0120 DS    0H\n         L     R14,DXD_SAVE_R14\n         BR    R14\n* ------------------------------------------------------------------- *\n*        LOCATE                                                       *\n* ------------------------------------------------------------------- *\nLOC0000  DS    0H\n         ITRACE ID=LOCATE\n         CLC   COMM_OPERANDS_NBR,F2\n         BNE   ERR0030\n         CLI   COMM_OPERAND_2_LENGTH,8\n         BH    ERR0040\n         ICM   R1,15,COMM_OPERAND_2_ADDRESS\n         LA    R8,DXD_MEM_CHAIN\nLOC0010  DS    0H\n         ICM   R8,15,MEM_CHAIN_NEXT\n         BZ    LOC0020\n         LA    R4,MEM_CHAIN_MEMBER\n         CLC   LIB_KEY_NAME,0(R1)\n         BL    LOC0010\n         ST    R8,DXD_FIRST_MEMBER\nLOC0020  DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS\n         B     DISP0010\n* ------------------------------------------------------------------- *\n*        DELETE                                                       *\n* ------------------------------------------------------------------- *\nADMIN000 DS    0H\n         ITRACE ID=ADMIN\n         MVC   DXD_FUNCTION,VTADMN\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_ADMN\n         B     PRIM0000\n* ------------------------------------------------------------------- *\n*        DELETE                                                       *\n* ------------------------------------------------------------------- *\nDEL0000  DS    0H\n         ITRACE ID=DELETE\n         MVC   DXD_FUNCTION,VTDEL\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_DELETE\n         B     PRIM0000\n* ------------------------------------------------------------------- *\n*        DISPLAY HELP                                                 *\n* ------------------------------------------------------------------- *\nHELP0000 DS    0H\n         ITRACE ID=PRIMHELP\n         MVC   SPF_ZCMD,COMM_BLANKS           BLANK?\n         MVC   SPF_PANEL,PRIM_HELP            PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST\n         LA    R1,SPF_PANEL                   PANEL'S NAME\n         ST    R1,DXD_SPF_2                   SET PANEL NAME ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,AISPLINK\n         BALR  R14,R15                        LINK TO SPF\n         B     DISP0070\nHELP0010 DS    0H\n         ITRACE ID=LINEHELP\n         MVI   DETAIL_SELECT,C'?'             RESET COMMAND\n         MVC   SPF_PANEL,LINE_HELP            PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST\n         LA    R1,SPF_PANEL                   PANEL'S NAME\n         ST    R1,DXD_SPF_2                   SET PANEL NAME ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,AISPLINK\n         BALR  R14,R15                        LINK TO SPF\n         SR    R15,r15\n         B     DISP0430\n* ------------------------------------------------------------------- *\n*        CHECK IN                                                     *\n* ------------------------------------------------------------------- *\nIN0000   DS    0H\n         ITRACE ID=IN\n         MVC   DXD_FUNCTION,VTCKIN\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_IN\n         B     PRIM0000\n* ------------------------------------------------------------------- *\n*        SUBMIT AS A BATCH JOB                                        *\n* ------------------------------------------------------------------- *\nJOB0000  DS    0H\n         ITRACE ID=JOB\n         MVC   DXD_FUNCTION,VTJOB\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_SUBMIT\n         B     PRIM0000\n* ------------------------------------------------------------------- *\n*        SELECT                                                       *\n* ------------------------------------------------------------------- *\nSEL0000  DS    0H\n         ITRACE ID=SELECT\n         MVC   DXD_FUNCTION,VTMDOC\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_DOC\n         B     PRIM0000\n* ------------------------------------------------------------------- *\n*        CHECK OUT                                                    *\n* ------------------------------------------------------------------- *\nOUT0000  DS    0H\n         ITRACE ID=CKOUT\n         MVC   DXD_FUNCTION,VTCKOT\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_OUT\n         B     PRIM0000\n* ------------------------------------------------------------------- *\n*        VIEW                                                         *\n* ------------------------------------------------------------------- *\nVIEW0000 DS    0H\n         ITRACE ID=VIEW\n         MVC   DXD_FUNCTION,VTVIEW\n         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_VIEW\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRIM0000 DS    0H\n         ITRACE ID=PRIM0000,                                           +\n               DATA1=COMM_OPERANDS_NBR,                                +\n               DATA2=COMM_OPERAND_2_LENGTH\n         CLC   COMM_OPERANDS_NBR,F2           TWO OPERANDS?\n         BNE   ERR0030                        NO\n         CLI   COMM_OPERAND_2_LENGTH,8        SECOND OPERAND 8 BYTES?\n         BH    ERR0040                        LONGER.. ERROR\n         ITRACE ID=SEARCH\n         ICM   R1,15,COMM_OPERAND_2_ADDRESS\n         LA    R8,DXD_MEM_CHAIN\nPRIM0010 DS    0H\n         ICM   R8,15,MEM_CHAIN_NEXT\n         BZ    ERR0050\n         LA    R4,MEM_CHAIN_MEMBER\n         CLC   LIB_KEY_NAME,0(R1)\n         BL    PRIM0010\n         BH    ERR0050\nPRIM0020 DS    0H\n         ICM   R1,15,MEM_CHAIN_NEXT           NEXT ON CHAIN\nNEXT     USING MEM_CHAIN,R1\n         LA    R2,NEXT.MEM_CHAIN_MEMBER\n         CLC   LIB_KEY_NAME,LIB_KEY_NAME-LIB_RECORD(R2)\n         BNE   PRIM0030                       NO\n         LR    R8,R1                          COPY NEXT ADDRESS\n         LA    R4,MEM_CHAIN_MEMBER\n         B     PRIM0020                       KEEP FOLLOWING CHAIN\n         DROP  NEXT\nPRIM0030 DS    0H\n         ST    R8,DXD_FIRST_MEMBER\n         MVC   COMM_MEMBER_NAME,LIB_KEY_NAME\n         MVC   SPF_MEM_NAME,LIB_KEY_NAME\n         MVC   COMM_VERSION,LIB_KEY_VERSION\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,LIB_KEY_VERSION           VERSION NUMBER\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         MVC   DXD_WORK_1,=X'F02120202020'    INITIALIZE EDIT WORD\n         ED    DXD_WORK_1,DXD_DWORD+(5)       EDIT VERSION NUMBER\n         MVC   SPF_MEM_VERSION,DXD_WORK_1+1   COPY EDITED VERSION\n         MVC   SPF_ZCMD,COMM_BLANKS\n         L     R15,DXD_FUNCTION\n         BALR  R14,R15\n         MVC   MEM_CHAIN_FUNCTION,DXD_FUNCTION_FLAG\n         CLI   DXD_FUNCTION_FLAG,$MEM_CHAIN_ADMN\n         BNE   DISP0010\n         MVC   LIB_INDEX_STATUS,NET_DATA+(LIB_INDEX_STATUS-LIB_RECORD)\n         MVC   LIB_INDEX_OWNER,NET_DATA+(LIB_INDEX_OWNER-LIB_RECORD)\n         MVC   LIB_INDEX_CHECK_OUT_USER,NET_DATA+(LIB_INDEX_CHECK_OUT_U+\n               SER-LIB_RECORD)\n         B     DISP0010\n* ------------------------------------------------------------------- *\n*        LIBRARY STC STATUS                                           *\n* ------------------------------------------------------------------- *\nSTAT0000 DS    0H\n         ITRACE ID=STATUS\n         CLC   COMM_OPERANDS_NBR,F1  CORRECT NUMBER OF OPERANDS?\n         BH    ERR0030               NO\n         MVC   SPF_ZCMD,COMM_BLANKS  RESET THE COMMAND\n         L     R15,ATSTAT\n         BALR  R14,R15               LINK TO STATUS DISPLAY\n         CH    R15,H4                QUIT?\n         BE    EXIT0000              YES\n         BAL   R14,DYNA0100\n         B     DISP0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Compute size of dynamic area.                                *\n*        GETMAIN storage.                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDYNA0000 DS    0H\n         ST    R14,DXD_SAVE_R14\n         ITRACE ID=PQUERY\n         LA    R1,PQUERY             COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1          SET IN PARM LIST\n         LA    R1,SPF_PANEL          PANEL NAME'S ADDRESS\n         ST    R1,DXD_SPF_2          SET IN PARM LIST\n         LA    R1,CVDATA             AREA NAME WITHIN THE PANEL\n         ST    R1,DXD_SPF_3          SET IN PARM LIST\n         LA    R1,CVTYPE             AREA TYPE\n         ST    R1,DXD_SPF_4          SET IN PARM LIST\n         LA    R1,CVWIDTH            SCREEN DEPTH\n         ST    R1,DXD_SPF_5          SET IN PARM LIST\n         LA    R1,CVDEPTH            SCREEN WIDTH\n         ST    R1,DXD_SPF_6          SET IN PARM LIST\n         LA    R1,CVROW              SCREEN ROW\n         ST    R1,DXD_SPF_7          SET IN PARM LIST\n         LA    R1,CVCOL              SCREEN COLUMN\n         ST    R1,DXD_SPF_8          SET IN PARM LIST\n         OI    DXD_SPF_8,X'80'       FLAG 'END-OF-LIST'\n         LA    R1,DXD_SPF_PARMS      PQUERY PARM LIST ADDRESS\n         L     R15,AISPLINK          SPF INTERFACE'S ADDRESS\n         BALR  R14,R15               ISSUE QUERY\n         LTR   R15,R15               PQUERY SUCCESSFUL?\n         BNZ   ERR0010               NO\n         L     R0,SPF_VWIDTH                 SCREEN WIDTH\n         MH    R0,SPF_VDEPTH+2               TIMES DEPTH\n         ST    R0,DXD_DYNA_SIZE              NUMBER OF LINES TO DISPLAY\n         ITRACE ID=GET_DYNA,                                           +\n               RDATA1=R0\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ITRACE ID=DYNA,                                               +\n               RDATA1=R1\n         ST    R1,DXD_DYNA_ADDR              SAVE TEXT AREA ADDRESS\n         L     R0,DXD_DYNA_ADDR\n         L     R1,DXD_DYNA_SIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                INITIALIZE VDATA STORAGE\n         LA    R1,VDEFINE            COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1          SET ADDRESS IN PARM LIST\n         LA    R1,CVDATA             VARIABLE NAME ADDRESS\n         ST    R1,DXD_SPF_2          SET ADDRESS IN PARM LIST\n         MVC   DXD_SPF_3,DXD_DYNA_ADDR\n         LA    R1,CHARFORM           DATA FORMAT ADDRESS\n         ST    R1,DXD_SPF_4          SET ADDRESS IN PARM LIST\n         LA    R1,DXD_DYNA_SIZE\n         ST    R1,DXD_SPF_5          SET ADDRESS IN PARM LIST\n         OI    DXD_SPF_5,X'80'       FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS      SPF PARM LIST ADDRESS\n         L     R15,AISPLINK          SPF ENTRY POINT\n         BALR  R14,R15               DEFINE 'VDATA'\n         LTR   R15,R15               DEFINE SUCCESSFUL?\n         BNZ   ERR0020               NO\n         L     R14,DXD_SAVE_R14\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        VDELETE/VDEFINE VDATA                                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDYNA0100 DS    0H\n         ST    R14,DXD_SAVE_R14\n         LA    R1,VDELETE            COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1          SET ADDRESS IN PARM LIST\n         LA    R1,CVDATA             VARIABLE NAME ADDRESS\n         ST    R1,DXD_SPF_2          SET ADDRESS IN PARM LIST\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,AISPLINK\n         BALR  R14,R15\n         LA    R1,VDEFINE            COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1          SET ADDRESS IN PARM LIST\n         LA    R1,CVDATA             VARIABLE NAME ADDRESS\n         ST    R1,DXD_SPF_2          SET ADDRESS IN PARM LIST\n         MVC   DXD_SPF_3,DXD_DYNA_ADDR\n         LA    R1,CHARFORM           DATA FORMAT ADDRESS\n         ST    R1,DXD_SPF_4          SET ADDRESS IN PARM LIST\n         LA    R1,DXD_DYNA_SIZE\n         ST    R1,DXD_SPF_5          SET ADDRESS IN PARM LIST\n         OI    DXD_SPF_5,X'80'       FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS      SPF PARM LIST ADDRESS\n         L     R15,AISPLINK          SPF ENTRY POINT\n         BALR  R14,R15               DEFINE 'VDATA'\n         LTR   R15,R15               DEFINE SUCCESSFUL?\n         BNZ   ERR0020               NO\n         L     R14,DXD_SAVE_R14\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         ST    R14,DXD_SAVE_R14\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0010\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATVTAM               LIBTVTAM ENTRY POINT\n         B     SEND0020\nSEND0010 DS    0H\n         ITRACE ID=IP_SEND,                                            +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATTCP                LIBTTCP ENTRY POINT\nSEND0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND  COMMAND\n         LA    R1,VTAMREQ               VTAM REQUEST BLOCK ADDRESS\n         BALR  R14,R15                  LINK TO LIBTVTAM\n         L     R14,DXD_SAVE_R14\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         ST    R14,DXD_SAVE_R14\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM              LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP               LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE  COMMAND\n         LA    R1,VTAMREQ              VTAM REQUEST BLOCK ADDRESS\n         BALR  R14,R15                 LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R14,DXD_SAVE_R14\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSNAP0000 DS    0H\n         ITRACE ID=SNAP\n         CLC   COMM_OPERANDS_NBR,F1  CORRECT NUMBER OF OPERANDS?\n         BH    ERR0030               NO\n         MVC   SPF_ZCMD,COMM_BLANKS  RESET THE COMMAND\n         L     R15,ATSNAP\n         ITRACE ID=SNAP,                                               +\n               RDATA1=R15\n         BALR  R14,R15               LINK TO SNAP DUMP\n         B     DISP0070\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=BAD_PQRY,                                           +\n               RDATA1=R15\n         DC    H'0'\nERR0020  DS    0H\n         ITRACE ID=BAD_VDEF,                                           +\n               RDATA1=R15\n         DC    H'0'\nERR0030  DS    0H\n         ITRACE ID=ERR0030\n         MVC   SPF_MSG1(MSG08L),MSG08\n         B     DISP0010\nERR0040  DS    0H\n         ITRACE ID=ERR0040\n         MVC   SPF_MSG1(MSG09L),MSG09\n         B     DISP0010\nERR0050  DS    0H\n         ITRACE ID=ERR0050\n         MVC   SPF_MSG1(MSG10L),MSG10\n         B     DISP0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDBUG0000 DS    0H\n         ST    R14,DXD_SAVE_R14\n         ITRACE ID=DEBUG\n         TM    XTRFLAG,$XTRON\n         BNO   DBUG0040\n         GETMAIN RU,                                                   +\n               LV=MEM_CHAIN_L+8,                                       +\n               LOC=BELOW\n         LR    R2,R1\n         LA    R1,MEM_CHAIN_L+8\n         STCM  R1,3,0(R2)\n         XC    2(2,R2),2(R2)\n         LA    R8,DXD_MEM_CHAIN\n         B     DBUG0020\nDBUG0010 DS    0H\n         ST    R8,4(R2)\n         MVC   8(MEM_CHAIN_L,R2),0(R8)\n         PUT   XTRACE,0(R2)\nDBUG0020 DS    0H\n         ICM   R8,15,MEM_CHAIN_NEXT\n         BNZ   DBUG0010\nDBUG0030 DS    0H\n         FREEMAIN RU,A=(R2),LV=MEM_CHAIN_L+8\nDBUG0040 DS    0H\n         ITRACE ID=END_DBUG\n         L     R14,DXD_SAVE_R14\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LA    R8,DXD_MEM_CHAIN\n         ICM   R8,15,MEM_CHAIN_NEXT  FIRST MEMBER ON CHAIN\n         BZ    EXIT0020\nEXIT0010 DS    0H\n         L     R3,MEM_CHAIN_NEXT     NEXT BLOCK\n         FREEMAIN RU,                                                  +\n               A=(R8),                                                 +\n               LV=MEM_CHAIN_L\n         LTR   R8,R3                 NEXT BLOCK'S ADDRESS\n         BNZ   EXIT0010              FREE THIS BLOCK\nEXIT0020 DS    0H\n         XC    DXD_MEM_CHAIN,DXD_MEM_CHAIN\n         ICM   R1,15,DXD_DYNA_ADDR\n         BZ    EXIT0030\n         L     R0,DXD_DYNA_SIZE\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=(0)\n         XC    DXD_DYNA_ADDR,DXD_DYNA_ADDR\n         XC    DXD_DYNA_SIZE,DXD_DYNA_SIZE\n         LA    R1,VDELETE            COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1          SET ADDRESS IN PARM LIST\n         LA    R1,CVDATA             VARIABLE NAME ADDRESS\n         ST    R1,DXD_SPF_2          SET ADDRESS IN PARM LIST\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R15,AISPLINK\n         BALR  R14,R15\nEXIT0030 DS    0H\n         LH    R15,DXD_RC            SET RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)           RESTORE R14\n         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS\n         BR    R14                   RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABND0000 DS    0H\n         ITRACE ID=ABEND\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTDMEM)           DISPLACEMENT TO WORK AREA\nVTADMN   DC    V(LIBTADMN)           CHECK-IN/OUT AND USER ADMIN\nVTBRWS   DC    V(LIBTBRWS)           BROWSE\nVTCKIN   DC    V(LIBTCKIN)           CHECK-IN\nVTCKOT   DC    V(LIBTCKOT)           CHECK-OUT\nVTDEL    DC    V(LIBTDEL)            DELETE\nVTMDOC   DC    V(LIBTMDOC)           DISPLAY/UPDATE DOCUMENATION\nVTNEW    DC    V(LIBTNEW)            ADD NEW MEMBERS\nVTJOB    DC    V(LIBTJOB)            SUBMIT MEMBER AS BATCH JOB\nVTUNDO   DC    V(LIBTUNDO)           UNDO (RESET CHECK-OUT STATUS)\nVTVER    DC    V(LIBTVER)            CREATE NEW VERSION\nVTVIEW   DC    V(LIBTVIEW)           VIEW MEMBER SOURCE\nF1       DC    F'1'                  CONSTANT\nF2       DC    F'2'                  CONSTANT\nF10      DC    F'10'                 CONSTANT\nF4000    DC    F'4000'               OUTPUT FILE BLOCK SIZE\n\nVGETVARS DC    F'3'                  NUMBER OF VARIABLE NAMES\n         DC    F'0'                  UNPROTECTED STORAGE\n         DC    CL8'ZVERB'            VARIABLE NAME\n         DC    CL8'ZSCROLLA'         VARIABLE NAME\n         DC    CL8'ZSCROLLN'         VARIABLE NAME\n\nH1       DC    H'1'\nH2       DC    H'2'\nH4       DC    H'4'\nH8       DC    H'8'\nABEND    DC    C'ABEND '\nCHARFORM DC    CL4'CHAR'\nPQUERY   DC    CL8'PQUERY'\nCVDATA   DC    CL8'VDATA'\nCVTYPE   DC    CL8'VTYPE'\nCVWIDTH  DC    CL8'VWIDTH'\nCVDEPTH  DC    CL8'VDEPTH'\nCVROW    DC    CL8'VROW'\nCVCOL    DC    CL8'VCOL'\nVDEFINE  DC    CL8'VDEFINE'\nVDELETE  DC    CL8'VDELETE'\nVGET     DC    CL8'VGET'\nVPUT     DC    CL8'VPUT'\nSHARED   DC    CL8'SHARED'\nDISPLAY  DC    CL8'DISPLAY'\nMEMPANEL DC    CL8'MEMPANEL'\nNEWPANEL DC    CL8'NEWPANEL'\nLINE_HELP  DC  CL8'LINEHELP'\nPRIM_HELP  DC  CL8'PRIMHELP'\n\nMEM_CHAIN_ID   DC CL8'MEMCHAIN'\n\nP0       DC    P'0'\nP1900000 DC    P'1900000'\n\nIN       DC    CL3'IN '\nOUT      DC    CL3'OUT'\n\nADMIN          DC CL29'< -----Administration------ >'\nBROWSE         DC CL29'< -------- Browsed -------- >'\nCHECKED_IN     DC CL29'< ------ Checked in ------- >'\nCHECKED_OUT    DC CL29'< ------ Checked OUT ------ >'\nDELETED        DC CL29'< ------  Deleted --------- >'\nDOC            DC CL29'< ----- Documentation ----- >'\nSUBMIT         DC CL29'< ------ Submitted -------- >'\nVIEWED         DC CL29'< -------- Viewed --------- >'\nVERSION        DC CL29'< ------ New version ------ >'\nNEW            DC CL29'< ------ New member ------- >'\nUNDO           DC CL29'< --------- Undo ---------- >'\n\nMSG01    DC    CL11'LIBTDMEM01'\n         DC    C'Invalid function code'\nMSG01L   EQU   *-MSG01\nMSG02    DC    CL11'LIBTDMEM02'\n         DC    C'Authorization failed'\nMSG02L   EQU   *-MSG02\nMSG03    DC    CL11'LIBTDMEM03'\n         DC    C'Member name is required'\nMSG03L   EQU   *-MSG03\nMSG04    DC    CL11'LIBTDMEM04'\n         DC    C'Specified member/version already exists'\nMSG04L   EQU   *-MSG04\nMSG05    DC    CL11'LIBTDMEM05'\n         DC    C'Number of members in library is'\nMSG05MEM DC    X'40206B2020206B202120'\nMSG05L   EQU   *-MSG05\nMSG06    DC    CL11'LIBTDMEM06'\n         DC    C'Library '\nMSG06LIB DC    CL8' '\n         DC    C' is empty'\nMSG06L   EQU   *-MSG06\nMSG07    DC    CL11'LIBTDMEM07'\n         DC    C'Unrecognized primary command'\nMSG07L   EQU   *-MSG07\nMSG08    DC    CL11'LIBTDMEM08E'\n         DC    C'Incorrect number of parameters'\nMSG08L   EQU   *-MSG08\nMSG09    DC    CL11'LIBTDMEM09E'\n         DC    C'Member name too long'\nMSG09L   EQU   *-MSG09\nMSG10    DC    CL11'LIBTDMEM10E'\n         DC    C'Member not found'\nMSG10L   EQU   *-MSG10\nMSG11    DC    CL11'LIBTDMEM11E'\n         DC    C'Member deleted, no further action permitted'\nMSG11L   EQU   *-MSG11\nMSG12    DC    CL11'LIBTDMEM12I'\n         DC    C'For a list of commands, enter -?-'\nMSG12L   EQU   *-MSG12\n\n         LTORG\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nDXDTDMEM        DSECT\n                LIBSAVE DSECT=NO\nDXD_DWORD       DS  D                  WORK AREA FOR CVD\n\n*  THIS NEEDS TO 'LOOK' LIKE THE PREFIX OF THE MEM_CHAIN AREA(S)\nDXD_MEM_CHAIN   DS  0A                 CHAIN OF MEMBER BLOCKS\n                DS  CL8                EYECATCHER\n                DS  A                  'NEXT'\n                DS  A                  'PREV'\n                DS  X                  FLAG\n\nDXD_MEMBERS     DS  F                  NUMBER OF MEMBERS\nDXD_FUNCTION    DS  A\nDXD_SAVE_R14    DS  A\n\nDXD_FIRST_MEMBER DS A\nDXD_LAST_MEMBER  DS A\n\nDXD_SPF_PARMS   DS  0F\nDXD_SPF_1       DS  F\nDXD_SPF_2       DS  F\nDXD_SPF_3       DS  F\nDXD_SPF_4       DS  F\nDXD_SPF_5       DS  F\nDXD_SPF_6       DS  F\nDXD_SPF_7       DS  F\nDXD_SPF_8       DS  F\n\nDXD_WIDTH       DS  F\nDXD_DEPTH       DS  F\nDXD_DYNA_SIZE   DS  F                  DYNAMIC AREA SIZE\nDXD_DYNA_ADDR   DS  A                  DYNAMIC AREA ADDRESS\n\nDXD_RC          DS  H                  RETURN CODE FROM DISPLAY\nDXD_MEM_VERSION DS  H\nDXD_WORK_1      DS  CL6\nDXD_WORK_2      DS  CL12\nDXD_WORK_3      DS  CL9\nDXD_DATE        DS  PL4\nDXD_FLAGS       DS  X\n$SELECT         EQU X'80'              .. AT LEAST 1 MEMBER SELECTED\n$VPUT           EQU X'40'\nDXD_FUNCTION_FLAG   DS   X\n                VTAMREQ DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDETAIL            DSECT\nDETAIL_ATTR_1     DS   X           1- 1\nDETAIL_SELECT     DS   C           2- 2\nDETAIL_ATTR_2     DS   X           3- 3\n                  DS   X           4- 4\nDETAIL_NAME       DS   CL8         5-12\n                  DS   CL1        13-13\nDETAIL_VERSION    DS   CL5        14-18\n                  DS   CL1        19-19\nDETAIL_OWNER      DS   CL8        20-27\n                  DS   CL1        28-28\nDETAIL_SIZE       DS   CL11       29-39\n                  DS   CL1        40-40\nDETAIL_STATUS     DS   CL3        41-43\nDETAIL_ATTR_3     DS   CL1        44-44\nDETAIL_USER       DS   CL8        45-52\n                  DS   CL1        53-53\nDETAIL_DATE       DS   CL8        54-61\n                  DS   CL1        62-62\nDETAIL_TIME       DS   CL11       63-73\nDETAILL           EQU  *-DETAIL\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMEM_CHAIN          DSECT\nMEM_CHAIN_EYE      DS   CL8\nMEM_CHAIN_NEXT     DS   A\nMEM_CHAIN_PREV     DS   A\nMEM_CHAIN_FUNCTION DS   X\n$MEM_CHAIN_ADMN    EQU  X'01'\n$MEM_CHAIN_DOC     EQU  X'02'\n$MEM_CHAIN_DELETE  EQU  X'03'\n$MEM_CHAIN_IN      EQU  X'04'\n$MEM_CHAIN_OUT     EQU  X'05'\n$MEM_CHAIN_VIEW    EQU  X'06'\n$MEM_CHAIN_VER     EQU  X'07'\n$MEM_CHAIN_NEW     EQU  X'08'\n$MEM_CHAIN_UNDO    EQU  X'09'\n$MEM_CHAIN_BROWSE  EQU  X'0A'\n$MEM_CHAIN_SUBMIT  EQU  X'0B'\nMEM_CHAIN_FLAG     DS   X\n$MEM_CURRENT       EQU  X'80'\n$MEM_CHAIN_DUMMY   EQU  X'FF'\nMEM_CHAIN_MEMBER   DS   (LIB_INDEX_RECORD_LENGTH)X\nMEM_CHAIN_L        EQU  *-MEM_CHAIN\n* ------------------------------------------------------------------- *\n*              COMMON DATA MAP                                        *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      NETBLOK DSECT=YES\nNET_LIB_NAME          DS   CL8\nNET_MEM_NAME          DS   CL8\nNET_MEM_VERSION       DS   XL2\nNET_DESC_LENGTH       EQU  *-NETBLOK\n                      ORG  NET_DATA\nNET_MEMBERS           DS   0C\n                      ORG  NET_DATA\nNET_SOURCE_RECORDS    DS   XL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBRECD DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB  AM=VTAM\nACBL     EQU     *-IFGACB\n         LIBBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA  DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOPERAND          DSECT\nOPERAND_ADDRESS  DS    XL4\nOPERAND_LENGTH   DS    X\nOPERAND_TYPE     DS    X\nOPERAND_L        EQU   *-OPERAND\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBTDMEM\n./ ADD NAME=LIBTJOB  0100-09250-09250-0919-00174-00174-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTJOB                                               *\n*                                                                     *\n*  Function:                                                          *\n*   Submit as a batch job                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTJOB  CSECT\nLIBTJOB  AMODE 31\nLIBTJOB  RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTJOB,R12                    DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     INIT0000\nMODID    DC    CL8'LIBTJOB'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTJOB,R13                    DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND\n         ITRACE ID=SUBMIT\n         MVI   NET_FUNCTION,$NET_SUBMIT_JOB   SET FUNCTION\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION\n         LA    R1,NET_JOB_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK        SUCCESSFUL?\n         BNE   ERR0010                        NO\n         MVC   SPF_MSG1(MSG01L),MSG01\n         B     EXIT0000\nERR0010  DS    0H\n         MVC   SPF_MSG1,NET_MSG_1\n         MVC   SPF_MSG2,NET_MSG_2\n         MVC   SPF_MSG3,NET_MSG_3\n         MVC   SPF_MSG4,NET_MSG_4\n         MVC   SPF_MSG5,NET_MSG_5\n         LA    R15,4\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0010\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0020\nSEND0010 DS    0H\n         ITRACE ID=IP_SEND,                                            +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)                    RESTORE R14\n         SR    R15,R15                        SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART  DC   Q(DXDTJOB)                     DISPLACEMENT TO WORK AREA\n\nDISPLAY   DC   CL8'DISPLAY'\n\nVERPANEL  DC   CL8'VERPANEL'\nMSG01     DS   0C\n          DC   CL11'LIBTJOB01I'\n          DC   C'Submitted'\nMSG01L    EQU  *-MSG01\n\n          LTORG\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nDXDTJOB       DSECT\n              LIBSAVE DSECT=NO\n\nDXD_DWORD     DS      D\nDXD_SPF_PARMS DS      0A\nDXD_SPF_1     DS      A\nDXD_SPF_2     DS      A\n\n              VTAMREQ DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK  DSECT=YES\nNET_LIB_NAME      DS    CL8\nNET_MEM_NAME      DS    CL8\nNET_MEM_VERSION   DS    XL2\nNET_JOB_LENGTH    EQU   *-NETBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBRECD  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DCBD     DSORG=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBTJOB\n./ ADD NAME=LIBTMAIN 0100-09250-09250-0919-00691-00691-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: LIBTMAIN                                                     *\n*                                                                     *\n*  Mainline of the TSO interface to the LIBRARIAN                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTMAIN CSECT\nLIBTMAIN AMODE 31\nLIBTMAIN RMODE ANY\n         USING LIBTMAIN,R12                  DEFINE BASE\n         STM   R14,R12,12(R13)               SAVE ENTRY REGISTERS\n         LR    R12,R15                       COPY BASE\n         B     INIT0000                      BRANCH AROUND EYECATCHER\nMODID    DC    CL8'LIBTMAIN'                 MODULE NAME\n         DC    CL8'&SYSDATE'                 DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                 TIME OF ASSEMBLY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0000 DS    0H\n         ESTAE 0\n         LTR   R9,R1                         COPY PARM ADDRESS\n         BZ    ERR0010                       NO PARM\n         ICM   R9,15,0(R1)                   PARAMETER ADDRESS\n* ------------------------------------------------------------------- *\n*        ACQUIRE STORAGE FOR WORK AREAS                               *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R3,DXDSIZE                    WORK AREA SIZE\n         GETMAIN RU,                         GETMAIN WORK AREA         +\n               LV=(R3),                                                +\n               LOC=ANY\n         LR    R4,R1                         COPY STORAGE ADDRESS\n         LR    R10,R1                        COPY STORAGE ADDRESS\n         LR    R2,R1                         COPY WORK AREA ADDRESS\n         SR    R1,R1                         CLEAR REGISTER\n         MVCL  R2,R0                         CLEAR WORK AREA\n         A     R10,DXDSTART                  PLUS DISPLACEMENT\n         USING DXDTMAIN,R10                  DEFINE WORK AREA BASE\n         MVC   DXDID,MODID                   IDENTIFY WORK AREA OWNER\n         LA    R2,DXDSAVE                    OUR SAVE AREA ADDRESS\n         ST    R13,4(R2)                     CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                     OUR SAVE AREA TO CALLER'S\n         LR    R13,R2                        SET SAVE AREA ADDRESS\n* ------------------------------------------------------------------- *\n*        Load common data module  (LIBTCOMM)                          *\n* ------------------------------------------------------------------- *\n         LOAD  EP=LIBTCOMM                   LOAD COMMON DATA MODULE\n         LR    R11,R0                        COPY TO PERMANENT BASE\n         USING LIBTCOMM,R11                  DEFINE COMMON AREA BASE\n         ST    R12,ATMAIN                    SET MAINLINE'S ADDRESS\n         ST    R4,COMMDXDA                   SET DYNAMIC WORK AREA ADDR\n* ------------------------------------------------------------------- *\n*        GETMAIN I/O area for network communication                   *\n* ------------------------------------------------------------------- *\n         GETMAIN RU,                         GETMAIN I/O AREA          +\n               LV=COMMIOSZ,                                            +\n               LOC=ANY\n         ST    R1,COMM_NETWORK_IO_AREA       SAVE I/O AREA ADDRESS\n* ------------------------------------------------------------------- *\n*        Determine if external trace DD is present                    *\n* ------------------------------------------------------------------- *\n         USING PSA,R0                        DEFINE BASE\n         L     R1,PSATNEW                    OUR TCB ADDRESS FROM PSA\n         USING TCB,R1                        DEFINE TCB BASE\n         L     R2,TCBTIO                     TIOT ADDRESS FROM OUR TCB\n         USING TIOT1,R2                      DEFINE TIOT BASE\n         LA    R3,TIOENTRY                   FIRST TIOT ENTRY\n         USING TIOENTRY,R3                   DEFINE TIOT ENTRY BASE\nINIT0020 DS    0H\n         SR    R4,R4                         CLEAR FOR LENGTHS\n         ICM   R4,1,TIOELNGH                 LENGTH OF THIS ENTRY\n         BZ    INIT0100                      END OF TABLE\n         ITRACE ID=DD,                                                 +\n               DATA1=TIOEDDNM\n         CLC   TIOEDDNM,LIBXTR               LIBXTR DD?\n         BE    INIT0040                      YES\n         CLC   TIOEDDNM,LIBSNAP              LIBSNAP DD?\n         BE    INIT0050                      YES\n         CLC   TIOEDDNM,DEBUG1               DEBUG1  DD?\n         BE    INIT0060                      YES\n         CLC   TIOEDDNM,DEBUG2               DEBUG2  DD?\n         BE    INIT0070                      YES\n         CLC   TIOEDDNM,DEBUG3               DEBUG3  DD?\n         BE    INIT0070                      YES\n         CLC   TIOEDDNM,DEBUG4               DEBUG4  DD?\n         BE    INIT0090                      YES\nINIT0030 DS    0H\n         AR    R3,R4                         NEXT ENTRY\n         B     INIT0020                      LOOP\nINIT0040 DS    0H\n         OI    XTRFLAG,$XTRON                EXTERNAL TRACE IS ON\n         MVC   DXD_OCPL(OPENL),OPENI         COPY OPEN PARAMETER LIST\n         OPEN  (XTRACE,OUTPUT),                                        +\n               MF=(E,DXD_OCPL),                                        +\n               MODE=31\n         OI    XTRFLAG,$XTROPEN              EXTERNAL TRACE DCB IS OPEN\n         LA    R1,TRENTRYL+4\n         STH   R1,XTRLEN                     SET LENGTH\n         XC    XTRBB,XTRBB                   CLEAR THE 'BB'\n         B     INIT0030                      KEEP SEARCHING\nINIT0050 DS    0H\n         ITRACE ID=SNAPDD\n         OI    COMM_DD,$DD_SNAP              SNAP DD IS PRESENT\n         B     INIT0030                      KEEP SEARCHING\nINIT0060 DS    0H\n         ITRACE ID=DEBUG1\n         OI    COMM_DD,$DD_DEBUG1            DEBUG 1 DD IS PRESENT\n         B     INIT0030                      KEEP SEARCHING\nINIT0070 DS    0H\n         ITRACE ID=DEBUG2\n         OI    COMM_DD,$DD_DEBUG2            DEBUG 2 DD IS PRESENT\n         B     INIT0030                      KEEP SEARCHING\nINIT0080 DS    0H\n         ITRACE ID=DEBUG3\n         OI    COMM_DD,$DD_DEBUG3            DEBUG 3 DD IS PRESENT\n         B     INIT0030                      KEEP SEARCHING\nINIT0090 DS    0H\n         ITRACE ID=DEBUG4\n         OI    COMM_DD,$DD_DEBUG4            DEBUG 4 DD IS PRESENT\n         B     INIT0030                      KEEP SEARCHING\nINIT0100 DS    0H\n         LOAD  EP=LIBOPT                     LOAD THE OPTIONS\n         LR    R1,R0                         COPY ENTRY POINT\n         USING OPTDSECT,R1                   DEFINE BASE\n         LH    R0,OPTTRACE                   NUMBER OF TRACE ENTRIES\n         MH    R0,=Y(TRENTRYL)               TIMES SIZE PER ENTRY\n         ST    R0,TRSIZE                     SAVE TRACE TABLE SIZE\n         DELETE EP=LIBOPT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   ATDISP,VTDISP                 SPF DISPLAY MANAGER\n         MVC   ATDLIB,VTDLIB                 LIBRARY LIST DISPLAY\n         MVC   ATDMEM,VTDMEM                 MEMBER LIST DISPLAY\n         MVC   ATPARM,VTPARM                 START UP PARM PARSER\n         MVC   ATPRSE,VTPRSE                 PARM PARSER\n         MVC   ATSNAP,VTSNAP                 SNAP DUMP\n         MVC   ATSTAT,VTSTAT                 STC STATUS DISPLAY\n         MVC   ATVMGR,VTVMGR                 SPF VARIABLE MANAGER\n         MVC   ATVTAM,VTVTAM                 VTAM FUNCTIONS\n         MVC   ATTCP,VTTCP                   TCP/IP FUNCTIONS\n         LOAD  EP=LIBUX01                    LOAD USER EXIT 1\n         ST    R0,AUX01                      SAVE THE ENTRY POINT\n* ------------------------------------------------------------------- *\n*        ACQUIRE STORAGE FOR TRACE TABLE                              *\n* ------------------------------------------------------------------- *\n         L     R3,TRSIZE                     TRACE TABLE SIZE\n         GETMAIN RU,                         GETMAIN TRACE TABLE       +\n               LV=(R3),                                                +\n               LOC=BELOW                     .. MAY BE ABOVE OR BELOW\n         ST    R1,TRADDR                     SAVE TRACE TABLE ADDRESS\n         SR    R0,R0                         ASSUME ON BOUNDARY\n         TM    TRADDR+3,X'07'                ALREADY ON BOUNDARY?\n         BNO   INIT0110                      YES\n         SRL   R1,5                          SHIFT OUT LOW BITS ..\n         SLL   R1,5                          .. TO ROUND TO 32-BYTE\n         LA    R1,32(R1)                     PLUS 32\n         LA    R0,TRENTRYL                   1 LESS  AVAILABLE\nINIT0110 DS    0H\n         ST    R1,TRFIRST                    FIRST TRACE ENTRY\n         ST    R1,TRCURR                     CURRENT TRACE ENTRY\n         A     R1,TRSIZE                     LAST ENTRY IN TABLE\n         SH    R1,=Y(TRENTRYL)               MINUS 1 ENTRY\n         SR    R1,R0                         MINUS 1 MORE IF NECESSARY\n         ST    R1,TRLAST                     LAST TRACE ENTRY ADDRESS\n* ------------------------------------------------------------------- *\n*        Parse out library STC APPLID, host name, port number         *\n*        and/or library name                                          *\n* ------------------------------------------------------------------- *\n         LR    R1,R9                         COPY PARM ADDRESS\n         L     R15,ATPARM                    PARM PARSER ENTRY POINT\n         BALR  R14,R15                       CALL PARM PARSER\n         TM    COMM_FLAGS,$ABORT             ABORT FLAG SET?\n         BO    EXIT0030                      YES\n* ------------------------------------------------------------------- *\n*        LOAD SPF INTERFACE MODULE                                    *\n* ------------------------------------------------------------------- *\n         ITRACE ID=LOADSPF\n         LOAD  EP=ISPLINK                    LOAD SPF INTERFACE MODULE\n         ST    R0,AISPLINK                   SET ADDRESS IN COMMON AREA\n* ------------------------------------------------------------------- *\n*        CALL SPF VARIABLE DEFINITION                                 *\n* ------------------------------------------------------------------- *\n         ITRACE ID=DEFVARS                   DEFINING SPF VARIABLES\n         LOAD  EP=LIBSPFD\n         ST    R0,VARAREA                    SET ADDRESS IN PARMS\n         ST    R0,ALIBSPFD                   SET ADDRESS IN COMMON AREA\n         LOAD  EP=LIBSPFV\n         ST    R0,VARTBLE                    SET ADDRESS IN PARM LIST\n         MVI   VARCMD,$VARDEF                SET COMMAND\n         LA    R1,VARREQ                     PARAMETER BLOCK ADDRESS\n         L     R15,ATVMGR                    SPF VARIABLE MANAGER\n         BALR  R14,R15                       DEFINE SPF VARIABLES\n* ------------------------------------------------------------------- *\n*        Initialize VTAM or TCP/IP environment                        *\n* ------------------------------------------------------------------- *\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT USING TCP/IP?\n         BNZ   INIT0120                      YES\n         ITRACE ID=OPENVTAM                  OPENING VTAM ENVIRONMENT\n         L     R15,ATVTAM                    VTAM FUNCTIONS ENTRY POINT\n         B     INIT0130\nINIT0120 DS    0H\n         ITRACE ID=OPEN_IP                   INITIALIZING TCP/IP\n         L     R15,ATTCP                     TCP/IP FUNCTIONS\nINIT0130 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_OPEN       SET COMMAND (OPEN)\n         LA    R1,VTAMREQ                    REQUEST BLOCK ADDRESS\n         BALR  R14,R15                       INITIALIZE VTAM OR TCP/IP\n         TM    COMM_FLAGS,$ABORT             ABORT SET?\n         BO    EXIT0000                      YES\n* ------------------------------------------------------------------- *\n*        Identify the user                                            *\n* ------------------------------------------------------------------- *\n         LOAD  EP=LIBUX03\n         LR    R15,R0\n         LA    R1,UX03_PARMS\n         ITRACE ID=CALLUX03,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15\n         LR    R2,R15\n         DELETE EP=LIBUX03\n         LTR   R2,R2\n         BNZ   ERR0080\n         L     R6,ALIBSPFD\n         USING LIBSPFD,R6\n         MVC   SPF_SMF,UX03_SMF\n         MVC   SPF_USER,UX03_USER\n         MVC   SPF_USER_NAME,UX03_USER_NAME\n         L     R7,COMM_NETWORK_IO_AREA        I/O ARA\n         USING NETBLOK,R7                     DEFINE BASE\n         ITRACE ID=USER,                                               +\n               DATA1=SPF_USER,                                         +\n               DATA2=SPF_SMF\n         MVI   NET_FUNCTION,$NET_IDENTIFY_USER\n         MVC   NET_SMF,SPF_SMF\n         MVC   NET_USER,SPF_USER\n         MVC   NET_JOB,TSO\n         MVC   NET_USER_NAME,SPF_USER_NAME\n         LA    R0,NET_IDENTIFY_LENGTH\n         STCM  R0,R3,NET_LENGTH\n         ITRACE ID=SENDID\n         BAL   R8,SEND0000                    SEND\n         ITRACE ID=RECVID\n         BAL   R8,RECV0000                    RECEIVE\n         CLI   NET_RETURN_CODE,$NET_OK\n         BNE   ERR0050                        NO\n         MVC   SPF_SYSTEM_NAME,NET_SYSTEM_NAME\n* ------------------------------------------------------------------- *\n*        Get list of libraries                                        *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GETLIBS\n         MVI   NET_FUNCTION,$NET_GET_LIBS\n         LA    R1,NETBLOKL                    ONLY HEADER\n         STH   R1,NET_LENGTH                  SET LENGTH\n         BAL   R8,SEND0000                    ISSUE SEND\n         LA    R5,COMM_LIBRARY_CHAIN          CHAIN POINT\nINIT0150 DS    0H\n         ITRACE ID=RECVLIBS\n         BAL   R8,RECV0000                    ISSUE RECEIVE\n         TM    XTRFLAG,$XTRON\n         BNO   INIT0160\n         PUT   XTRACE,NETBLOK\nINIT0160 DS    0H\n         LH    R1,NET_LENGTH                  LENGTH OF DATA\n         SH    R1,=Y(NET_LIBRARIES-NETBLOK)\n         ITRACE ID=LIBLEN,                                             +\n               RDATA1=R1\n         SR    R0,R0                          CLEAR REGISTER\n         D     R0,=A(NET_LIBRARY_LENGTH)\n         LTR   R1,R1                          ANY LIBS?\n         BZ    INIT0170                       NONE IN THIS BLOCK\n         A     R1,COMM_NBR_OF_LIBRARIES       PLUS TOTAL SO FAR\n         ST    R1,COMM_NBR_OF_LIBRARIES       SAVE TOTAL\n         ITRACE ID=LIBS,                                               +\n               RDATA1=R1\n         LH    R3,NET_LENGTH                  LENGTH OF DATA (TOTAL)\n         SH    R3,=Y(NET_LIBRARIES-NETBLOK)   MINUS HEADER LENGTH\n         AH    R3,=Y(LIB_CHAIN_DATA-LIB_CHAIN)\n         ITRACE ID=LIBL,                                               +\n               RDATA1=(R3)\n         GETMAIN RU,                                                   +\n               LV=(R3),                                                +\n               LOC=ANY\n         ITRACE ID=LIBS,                                               +\n               RDATA1=(R1)\n         USING LIB_CHAIN,R1                   DEFINE BASE\n         MVC   LIB_CHAIN_EYE,LIB_CHAIN_ID\n         ST    R1,0(R5)                       ADD NEW BLOCK TO CHAIN\n         LA    R5,LIB_CHAIN_NEXT              NEW CHAIN POINT\n         XC    LIB_CHAIN_NEXT,LIB_CHAIN_NEXT\n         ST    R3,LIB_CHAIN_LENGTH            LENGTH OF THIS BLOCK\n         SH    R3,=Y(LIB_CHAIN_DATA-LIB_CHAIN)\n         LA    R0,LIB_CHAIN_DATA              LIBRARY DATA IN BLOCK\n         LR    R1,R3                          COPY LENGTH\n         LA    R14,NET_LIBRARIES              DATA IN VTAM I/O AREA\n         LR    R15,R3                         COPY LENGTH\n         MVCL  R0,R14                         COPY DATA\n         CLI   NET_RETURN_CODE,$NET_EOF\n         BNE   INIT0150                       RECEIVE NEXT BLOCK\nINIT0170 DS    0H\n         ITRACE ID=RECVDEOF                   RECEIVED EOF\n         CLC   COMM_LIBRARY_NAME,COMM_BLANKS  LIBRARY SPECIFIED?\n         BNE   LIBS0010                       YES, VERIFY NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBS0000 DS    0H\n         ITRACE ID=CALLDLIB                   CALLING LIBTDLIB\n         L     R15,ATDLIB                     LIBRARY LIST DISPLAY\n         BALR  R14,R15                        DISPLAY LIST OF LIBRARIES\n         LTR   R15,R15                        RETURN CODE = ZERO ?\n         BNZ   EXIT0000                       NO.. EXIT\n         DROP  R1\nLIBS0010 DS    0H\n         ITRACE ID=VERLIB,                                             +\n               DATA1=COMM_LIBRARY_NAME\n         L     R1,COMM_LIBRARY_CHAIN          FIRST CHAIN BLOCK\n         USING LIB_CHAIN,R1                   DEFINE BASE\n         LA    R1,LIB_CHAIN_DATA\n         USING NET_LIBRARY_NAME,R1            DEFINE BASE\n         L     R2,COMM_NBR_OF_LIBRARIES       NUMBER OF LIBRARIES\nLIBS0020 DS    0H\n         ITRACE ID=LIBX,                                               +\n               DATA1=NET_LIBRARY_NAME,                                 +\n               DATA2=COMM_LIBRARY_NAME\n         CLC   NET_LIBRARY_NAME,COMM_LIBRARY_NAME   FOUND THE LIBRARY?\n         BE    LIBS0030                       YES\n         LA    R1,NET_LIBRARY_LENGTH(R1)      NEXT LIBRARY\n         BCT   R2,LIBS0020\n         B     ERR0060                        LIBRARY NOT VALID\nLIBS0030 DS    0H\n         MVC   SPF_LIB_NAME,NET_LIBRARY_NAME\n         MVC   SPF_LIB_DESC,NET_LIBRARY_DESC\n         DROP  R1\n         ITRACE ID=ENQLIB                     ADD TO USERS OF LIB\n         MVI   NET_FUNCTION,$NET_ENQUE_LIB\n         MVC   NET_LIBRARY_NAME,COMM_LIBRARY_NAME\n         LA    R1,NETBLOKL+L'NET_LIBRARY_NAME\n         STH   R1,NET_LENGTH                  SET LENGTH\n         BAL   R8,SEND0000                    SEND THE REQUEST\n         BAL   R8,RECV0000                    RECEIVE THE REPLY\n         CLI   NET_RETURN_CODE,$NET_OK\n         BNE   ERR0070                        ENQUEUE FAILED\n         ITRACE ID=ENQUEUED                   LIBRARY IS ENQUEUED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMEM0000  DS    0H\n         ITRACE ID=CALLDMEM,                  CALLING MEMBER LIST DISP +\n               DATA1=COMM_LIBRARY_NAME\n         L     R15,ATDMEM                     MEMBER LIST DISPLAY\n         BALR  R14,R15                        DISPLAY MEMBER LIST\n         STH   R15,DXD_RC\n         LTR   R15,R15                        RC = 0?\n         BZ    MEM0000                        YES, REDISPLAY MEMBERS\n         ITRACE ID=DEQLIB                     REMOVE FROM USERS\n         MVI   NET_FUNCTION,$NET_DEQ_LIB\n         MVC   NET_LIBRARY_NAME,COMM_LIBRARY_NAME\n         LA    R1,NETBLOKL+L'NET_LIBRARY_NAME\n         STH   R1,NET_LENGTH                  SET LENGTH\n         BAL   R8,SEND0000                    SEND THE REQUEST\n         BAL   R8,RECV0000                    RECEIVE THE REPLY\n         CLI   NET_RETURN_CODE,$NET_OK\n         BNE   ERR0090                        DEQE FAILED\n         ITRACE ID=DEQD                       LIBRARY IS DEQ'D\n         CLC   DXD_RC,H8                      RC = 8\n         BE    LIBS0000                       DISPLAY LIST OF LIBRARIES\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT USING TCP/IP?\n         BNZ   SEND0010                       YES\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0020\nSEND0010 DS    0H\n         ITRACE ID=IP_WRITE,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT USING TCP/IP?\n         BNZ   RECV0010                       YES\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTPUT0000 DS    0H\n         ITRACE ID=TPUT\n         GETMAIN RU,LV=(3),LOC=BELOW\n         LR    R4,R1                          COPY STORAGE ADDRESS\n         LR    R1,R3\n         BCTR  R1,0                           MINUS 1\n         EX    R1,TPUTMVC\n         TPUT  (R4),(R3)\n         FREEMAIN RU,                                                  +\n               A=(R4),                                                 +\n               LV=(R3)\n         BR    R8\nTPUTMVC  MVC   0(0,R4),0(R2)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         LM    R2,R3,MSG01PRM\n         BAL   R8,TPUT0000                    ISSUE MESSAGE\n         B     EXIT0000\nERR0020  DS    0H\n         LM    R2,R3,MSG02PRM\n         BAL   R8,TPUT0000                    ISSUE MESSAGE\n         B     EXIT0000\nERR0030  DS    0H\n         LM    R2,R3,MSG03PRM\n         BAL   R8,TPUT0000                    ISSUE MESSAGE\n         B     EXIT0000\nERR0040  DS    0H\n         LM    R2,R3,MSG04PRM\n         BAL   R8,TPUT0000                    ISSUE MESSAGE\n         B     EXIT0000\nERR0050  DS    0H\n         LM    R2,R3,MSG05PRM\n         BAL   R8,TPUT0000                    ISSUE MESSAGE\n         B     EXIT0000\nERR0060  DS    0H\n         LM    R2,R3,MSG06PRM\n         BAL   R8,TPUT0000                    ISSUE MESSAGE\n         B     EXIT0000\nERR0070  DS    0H\n         LM    R2,R3,MSG07PRM\n         BAL   R8,TPUT0000                    ISSUE MESSAGE\n         B     EXIT0000\nERR0080  DS    0H\n         LM    R2,R3,MSG08PRM\n         BAL   R8,TPUT0000                    ISSUE MESSAGE\n         B     EXIT0000\nERR0090  DS    0H\n         LM    R2,R3,MSG09PRM\n         BAL   R8,TPUT0000                    ISSUE MESSAGE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         TM    COMM_FLAGS,$ABEND\n         BO    ABEND000\n         MVI   VTAM_COMMAND,$VTAM_CLOSE       SET COMMAND (CLOSE)\n         LA    R1,VTAMREQ                     PARM BLOCK ADDRESS\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT 'TALKING' WITH TCP/IP?\n         BNZ   EXIT0010                       YES\n         L     R15,ATVTAM                     VTAM MODULE ENTRY POINT\n         B     EXIT0020\nEXIT0010 DS    0H\n         L     R15,ATTCP                      TCP/IP MODULE ENTRY POINT\nEXIT0020 DS    0H\n         BALR  R14,R15                        CLEAN UP VTAM OR TCP/IP\nEXIT0030 DS    0H\n         TM    COMM_FLAGS,$ABEND\n         BO    ABEND000\n         L     R1,COMM_NETWORK_IO_AREA        NETWORK I/O AREA\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=COMMIOSZ\n         XC    COMM_NETWORK_IO_AREA,COMM_NETWORK_IO_AREA                SS\n         OC    AISPLINK,AISPLINK              ISPLINK LOADED?\n         BZ    EXIT0040                       NO\n         MVI   VARCMD,$VARDEL                 SET COMMAND (DELETE)\n         LA    R1,VARREQ\n         L     R15,ATVMGR                     SPF VARIABLE MANAGER\n         BALR  R14,R15                        DELETE THE SPF VARIABLES\n         DELETE EP=ISPLINK\n         DELETE EP=LIBSPFV\n         DELETE EP=LIBSPFD\n         DELETE EP=LIBUX01                    DELETE USER EXIT 1\n         XC    AISPLINK,AISPLINK              CLEAR ISPLINK'S ADDRESS\n         XC    AUX01,AUX01                    CLEAR USER EXIT ADDRESS\nEXIT0040 DS    0H\n         TM    XTRFLAG,$XTROPEN               EXTERNAL TRACE DCB OPEN?\n         BNO   EXIT0050                       NO\n         MVC   DXD_OCPL(CLOSEL),CLOSEI\n         CLOSE XTRACE,                                                 +\n               MF=(E,DXD_OCPL),                                        +\n               MODE=31\n         NI    XTRFLAG,255-$XTROPEN\nEXIT0050 DS    0H\n         ICM   R9,15,COMM_LIBRARY_CHAIN       FIRST LIB CHAIN BLOCK\n         USING LIB_CHAIN,R9\n         BZ    EXIT0070\nEXIT0060 DS    0H\n         L     R0,LIB_CHAIN_LENGTH            LENGTH OF THIS BLOCK\n         LR    R1,R9                          COPY ADDRESS\n         ICM   R9,15,LIB_CHAIN_NEXT\n         FREEMAIN RU,                         FREE THIS BLOCK          +\n               A=(1),                                                  +\n               LV=(0)\n         LTR   R9,R9\n         BNZ   EXIT0060\nEXIT0070 DS    0H\n         XC    COMM_LIBRARY_CHAIN,COMM_LIBRARY_CHAIN\n         L     R0,TRSIZE                      TRACE TABLE SIZE\n         ICM   R1,15,TRADDR                   TRACE TABLE ADDRESS\n         BZ    EXIT0080\n         FREEMAIN RU,                         FREEMAIN TRACE TABLE     +\n               A=(1),                                                  +\n               LV=(0)\nEXIT0080 DS    0H\n         L     R2,COMMDXDA                    SAVE WORK AREA STORAGE\n         SR    R3,R3                          CLEAR REGISTER\n         IC    R3,COMM_RC                     LOAD RETURN CODE\n         DELETE EP=LIBTCOMM                   DELETE COMMON MODULE\n         L     R0,DXDSIZE                     WORK AREA STORAGE SIZE\n         L     R13,4(R13)                     RESTORE CALLER'S R13\n         FREEMAIN RU,                         FREEMAIN WORK AREA       +\n               A=(R2),                                                 +\n               LV=(0)\n         L     R14,12(R13)                    RESTORE R14\n         LR    R15,R3                         SET RETURN CODE\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTMAIN)          DISPLACEMENT TO WORK AREA\nDXDSIZE  CXD                        WORK AREA TOTAL SIZE\nVTDISP   DC    V(LIBTDISP)          DISPLAY SPF PANELS WITH DYN AREAS\nVTDLIB   DC    V(LIBTDLIB)          DISPLAY LIST OF LIBRARIES\nVTDMEM   DC    V(LIBTDMEM)          DISPLAY LIST OF MEMBERS\nVTPARM   DC    V(LIBTPARM)          START UP PARM PARSER\nVTPRSE   DC    V(LIBTPRSE)          PARM PARSER\nVTSNAP   DC    V(LIBTSNAP)          SNAP DUMP\nVTSTAT   DC    V(LIBTSTAT)          DISPLAY STC STATUS\nVTVMGR   DC    V(LIBTVMGR)          SPF VARIABLE MANAGER\nVTVTAM   DC    V(LIBTVTAM)          VTAM FUNCTIONS\nVTTCP    DC    V(LIBTTCP)           TCP/IP FUNCTIONS\nIOSZ     DC    A(COMMIOSZ)\nMSG01PRM DC    A(MSG01),A(MSG01L)\nMSG02PRM DC    A(MSG02),A(MSG02L)\nMSG03PRM DC    A(MSG03),A(MSG03L)\nMSG04PRM DC    A(MSG04),A(MSG04L)\nMSG05PRM DC    A(MSG05),A(MSG05L)\nMSG06PRM DC    A(MSG06),A(MSG06L)\nMSG07PRM DC    A(MSG07),A(MSG07L)\nMSG08PRM DC    A(MSG08),A(MSG08L)\nMSG09PRM DC    A(MSG09),A(MSG09L)\n\nOPENI    OPEN  (*,OUTPUT),MF=L,MODE=31\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MF=L,MODE=31\nCLOSEL   EQU   *-CLOSEI\n\nH4       DC    H'4'\nH8       DC    H'8'\n\nHEX0000  DC    8X'00'\nHEXCHAR  DC    C'0123456789ABCDEF'\nLIBXTR   DC    CL8'LIBXTR'\nLIBSNAP  DC    CL8'LIBSNAP'\nDEBUG1    DC   CL8'DEBUG1'\nDEBUG2    DC   CL8'DEBUG2'\nDEBUG3    DC   CL8'DEBUG3'\nDEBUG4    DC   CL8'DEBUG4'\nLIB_CHAIN_ID   DC  CL8'LIBCHAIN'\n\nMSG01    DC    C'LIBTMAIN01E APPLID of library STC is required'\nMSG01L   EQU   *-MSG01\nMSG02    DC    C'LIBTMAIN02E STC APPL name is too long'\nMSG02L   EQU   *-MSG02\nMSG03    DC    C'LIBTMAIN03E LIBRARY name is too long'\nMSG03L   EQU   *-MSG03\nMSG04    DC    C'LIBTMAIN04E SMF is not active'\nMSG04L   EQU   *-MSG04\nMSG05    DC    C'LIBTMAIN05E Internal error.  Identify user failed.'\nMSG05L   EQU   *-MSG05\nMSG06    DC    C'LIBTMAIN06E Specified library is not valid.'\nMSG06L   EQU   *-MSG06\nMSG07    DC    C'LIBTMAIN07E Library enqueue failed.'\nMSG07L   EQU   *-MSG07\nMSG08    DC    C'LIBTMAIN08E Could not identify user (LIBUX03)'\nMSG08L   EQU   *-MSG08\nMSG09    DC    C'LIBTMAIN09E Library dequeue failed.'\nMSG09L   EQU   *-MSG09\n\nTSO      DC    CL8'TSO'\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTMAIN         DSECT\n                 LIBSAVE  DSECT=NO\n                 VARREQ   DSECT=NO\n                 VTAMREQ  DSECT=NO\n                 UX03PARM DSECT=NO\nDXD_OCPL         DS       0F,(OPENL)X      OPEN/CLOSE PARAMETER LIST\nDXD_RC           DS       H\nDXD_PARM_LENGTH  DS       H\nDXD_PARM         DS       CL8\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY    OPTDSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    NETBLOK DSECT=YES\nNET_SMF             DS      CL4\nNET_USER            DS      CL8\nNET_JOB             DS      CL8\nNET_SYSTEM_NAME     DS      CL20\nNET_USER_NAME       DS      CL20\nNET_IDENTIFY_LENGTH EQU     *-NETBLOK\n                    ORG     NET_DATA\nNET_LIBRARIES       DS      0C\nNET_LIBRARY_NAME    DS      CL8\nNET_LIBRARY_DESC    DS      CL80\nNET_LIBRARY_STATUS  DS      X\nNET_LIBRARY_LENGTH  EQU     *-NET_LIBRARY_NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB_CHAIN        DSECT\nLIB_CHAIN_EYE    DS   CL8\nLIB_CHAIN_NEXT   DS   A                NEXT BLOCK\nLIB_CHAIN_LENGTH DS   A                LENGTH OF THIS BLOCK\nLIB_CHAIN_DATA   DS   0C\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n         IKJTCB   LIST=NO\n         IEFTIOT1\n* ------------------------------------------------------------------- *\n                  COPY  REGEQU\n$MAX_SOURCE_SIZE  EQU  8000\n         END   LIBTMAIN\n./ ADD NAME=LIBTMDOC 0100-09250-09250-0919-00430-00430-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTMDOC                                              *\n*                                                                     *\n*  Function:                                                          *\n*   Display/update the documentation for a member.                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTMDOC CSECT\nLIBTMDOC AMODE 31\nLIBTMDOC RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTMDOC,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     MDOC0000\nMODID    DC    CL8'LIBTMDOC'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nMDOC0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTMDOC,R13                   DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    MDOC0010                       YES\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\nMDOC0010 DS    0H\n         L     R7,COMM_NETWORK_IO_AREA        I/O AREA ADDRESS\n         USING NETBLOK,R7                     DEFINE BASE\n         MVC   SPF_COMM1,COMM_BLANKS\n         MVC   SPF_COMM2,COMM_BLANKS\n         MVC   SPF_COMM3,COMM_BLANKS\n         MVC   SPF_COMM4,COMM_BLANKS\n         MVC   SPF_COMM5,COMM_BLANKS\n         MVC   SPF_MSG1,COMM_BLANKS\n         MVC   SPF_MSG2,COMM_BLANKS\n         MVC   SPF_MSG3,COMM_BLANKS\n         MVC   SPF_MSG4,COMM_BLANKS\n         MVC   SPF_MSG5,COMM_BLANKS\n         MVC   DXD_COMM1,COMM_BLANKS\n         MVC   DXD_COMM2,COMM_BLANKS\n         MVC   DXD_COMM3,COMM_BLANKS\n         MVC   DXD_COMM4,COMM_BLANKS\n         MVC   DXD_COMM5,COMM_BLANKS\n         XC    DXD_RC,DXD_RC                  DEFAULT RC\n* ------------------------------------------------------------------- *\n*      Verify the user is authorized                                  *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CHKAUTH,                                            +\n               DATA1=COMM_LIBRARY_NAME,                                +\n               DATA2=COMM_MEMBER_NAME\n         MVI   NET_FUNCTION,$NET_CHECK_DESC_AUTH\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME  SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME   SET MEMBER NAME\n         MVC   NET_MEM_VER,COMM_VERSION        SET VERSION\n         LA    R1,NET_DESC_LENGTH\n         STCM  R1,3,NET_LENGTH                 SET LENGTH\n         XC    NET_FILL,NET_FILL               CLEAR THE FILLER AREA\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK         USER AUTHORIZED?\n         BNE   ERR0010                         NO\n*---------------------------------------------------------------------*\n*                                                                     *\n*        USUBGMD will have returned the base index record.            *\n*        Format the over-all status information.                      *\n*                                                                     *\n*        I started hating myself for being long-winded on field names *\n*                                                                     *\n*---------------------------------------------------------------------*\nMDOC0100  DS   0H\n    MVC   SPF_MISC1(MSG01L),MSG01\n    MVC   SPF_MISC1+(MSG01_OWNER-MSG01)(L'MSG01_OWNER),LIB_INDEX_OWNER\n    MVC   SPF_MISC2(MSG02L),MSG02\n    TM    LIB_INDEX_STATUS,$LIB_STATUS_IN\n    BO    MDOC0110\n    MVC   SPF_MISC2+(MSG02_STATUS-MSG02)(L'MSG02_STATUS),=C'OUT'\n    B     MDOC0120\nMDOC0110  DS   0H\n    MVC   SPF_MISC2+(MSG02_STATUS-MSG02)(L'MSG02_STATUS),=C'IN '\nMDOC0120  DS   0H\n    MVC   SPF_MISC3(MSG03L),MSG03\n    ICM   R1,15,LIB_INDEX_RECORDS\n    CVD   R1,DXD_DWORD\n    ED    SPF_MISC3+(MSG03_RECORDS-MSG03)(L'MSG03_RECORDS),DXD_DWORD+4\n    MVC   SPF_MISC4(MSG04L),MSG04\n    ICM   R1,15,LIB_INDEX_CHECK_OUTS\n    CVD   R1,DXD_DWORD\n    ED    SPF_MISC4+(MSG04_CHECK_OUTS-MSG04)(L'MSG04_CHECK_OUTS),DXD_DW+\n               ORD+4\n    MVC   SPF_MISC5(MSG05L),MSG05\n    AP    LIB_INDEX_CREATE_DATE,P1900000\n    ED    SPF_MISC5+(MSG05_DATE-MSG05)(L'MSG05_DATE),LIB_INDEX_CREATE_D+\n               ATE\n    UNPK  DXD_UNPACK(9),LIB_INDEX_CREATE_TIME(5)\n    MVZ   DXD_UNPACK,HEXZERO\n    TR    DXD_UNPACK,HEXCHAR\n    MVC   SPF_MISC5+(MSG05_TIME-MSG05)+0(2),DXD_UNPACK+0\n    MVC   SPF_MISC5+(MSG05_TIME-MSG05)+3(2),DXD_UNPACK+2\n    MVC   SPF_MISC5+(MSG05_TIME-MSG05)+6(2),DXD_UNPACK+4\n    MVI   SPF_MISC5+(MSG05_TIME-MSG05)+2,C':'\n    MVI   SPF_MISC5+(MSG05_TIME-MSG05)+5,C':'\n    MVC   SPF_MISC6(MSG06L),MSG06\n    AP    LIB_INDEX_CHECK_IN_DATE,P1900000\n    ED    SPF_MISC6+(MSG06_DATE-MSG06)(L'MSG06_DATE),LIB_INDEX_CHECK_IN+\n               _DATE\n    UNPK  DXD_UNPACK(9),LIB_INDEX_CHECK_IN_TIME(5)\n    MVZ   DXD_UNPACK,HEXZERO\n    TR    DXD_UNPACK,HEXCHAR\n    MVC   SPF_MISC6+(MSG06_TIME-MSG06)+0(2),DXD_UNPACK+0\n    MVC   SPF_MISC6+(MSG06_TIME-MSG06)+3(2),DXD_UNPACK+2\n    MVC   SPF_MISC6+(MSG06_TIME-MSG06)+6(2),DXD_UNPACK+4\n    MVI   SPF_MISC6+(MSG06_TIME-MSG06)+2,C':'\n    MVI   SPF_MISC6+(MSG06_TIME-MSG06)+5,C':'\n    MVC   SPF_MISC6+(MSG06_USER-MSG06)(L'MSG06_USER),LIB_INDEX_CHECK_IN+\n               _USER\n    MVC   SPF_MISC7(MSG07L),MSG07\n    AP    LIB_INDEX_CHECK_OUT_DATE,P1900000\n    ED    SPF_MISC7+(MSG07_DATE-MSG07)(L'MSG07_DATE),LIB_INDEX_CHECK_OU+\n               T_DATE\n    UNPK  DXD_UNPACK(9),LIB_INDEX_CHECK_OUT_TIME(5)\n    MVZ   DXD_UNPACK,HEXZERO\n    TR    DXD_UNPACK,HEXCHAR\n    MVC   SPF_MISC7+(MSG07_TIME-MSG07)+0(2),DXD_UNPACK+0\n    MVC   SPF_MISC7+(MSG07_TIME-MSG07)+3(2),DXD_UNPACK+2\n    MVC   SPF_MISC7+(MSG07_TIME-MSG07)+6(2),DXD_UNPACK+4\n    MVI   SPF_MISC7+(MSG07_TIME-MSG07)+2,C':'\n    MVI   SPF_MISC7+(MSG07_TIME-MSG07)+5,C':'\n    MVC   SPF_MISC7+(MSG07_USER-MSG07)(L'MSG07_USER),LIB_INDEX_CHECK_OU+\n               T_USER\n*---------------------------------------------------------------------*\n*        Get the existing documentation                               *\n*---------------------------------------------------------------------*\nMDOC0200 DS    0H\n         ITRACE ID=GETDOC\n         MVI   NET_FUNCTION,$NET_GET_DESC\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME   SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME    SET MEMBER NAME\n         MVC   NET_MEM_VER,COMM_VERSION         SET MEMBER VERSION\n         LA    R1,NET_MEM_DOC-NETBLOK\n         STCM  R1,3,NET_LENGTH                  SET LENGTH\n         BAL   R8,SEND0000\n         CLI   NET_RETURN_CODE,$NET_OK\n         BNE   ERR0020\n         BAL   R8,RECV0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         LA    R2,NET_MEM_DOC\n         LH    R3,NET_LENGTH\n         SH    R3,=Y(NET_MEM_DOC-NETBLOK)\n         BZ    MDOC0400\n         LA    R4,SPF_COMM1                     FIRST LINE OF SPF DATA\n         LA    R5,DXD_COMM1                     SAVE COMMENT/DOC\nMDOC0300 DS    0H\n         MVC   0(L'SPF_COMM1,R4),0(R2)\n         MVC   0(L'SPF_COMM1,R5),0(R2)\n         LA    R4,L'SPF_COMM1(R4)\n         LA    R5,L'DXD_COMM1(R5)\n         LA    R2,L'LIB_DATA(R2)\n         SH    R3,=Y(L'LIB_DATA)\n         BNZ   MDOC0300\n*---------------------------------------------------------------------*\n*        Display the documentation panel                              *\n*---------------------------------------------------------------------*\nMDOC0400 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SPF_PANEL,DOCPANEL    SET PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDRESS\n         BALR  R14,R15                        LINK TO SPF\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                        ZERO?\n         BNZ   EXIT0000                       NO\n         LA    R1,DXD_COMM1                   FIRST SAVED COMMENT/DOC\n         LA    R2,SPF_COMM1                   FIRST SPF COMMENT/DOC\n         LA    R3,5                           NUMBER OF COMMENTS/DOCS\nMDOC0410 DS    0H\n         TR    0(L'SPF_COMM1,R2),VALID_CHARACTERS\n         CLC   0(L'DXD_COMM1,R1),0(R2)\n         BNE   MDOC0420\n         LA    R1,L'DXD_COMM1(R1)             NEXT\n         LA    R2,L'SPF_COMM1(R2)             NEXT\n         BCT   R3,MDOC0410\n         B     MDOC0400                       NOTHING UPDATED\nMDOC0420 DS    0H\n         LA    R1,NET_MEM_DOC                 FIRST IN I/O AREA\n         LA    R2,DXD_COMM1                   FIRST SAVED COMMENT/DOC\n         LA    R3,SPF_COMM1                   FIRST SPF COMMENT/DOC\n         LA    R4,5                           NUMBER OF COMMENTS/DOCS\nMDOC0430 DS    0H\n         MVC   0(L'LIB_DATA,R1),0(R3)\n         MVC   0(L'DXD_COMM1,R2),0(R3)\n         LA    R1,L'LIB_DATA(R1)\n         LA    R2,L'DXD_COMM1(R2)\n         LA    R3,L'SPF_COMM1(R3)\n         BCT   R4,MDOC0430\n         LA    R1,(NET_MEM_DOC-NETBLOK)+(5*L'LIB_DATA)\n         LA    R2,NET_MEM_DOC+(4*L'LIB_DATA)\n         LA    R3,5\nMDOC0440 DS    0H\n         CLC   0(L'LIB_DATA,R2),COMM_BLANKS\n         BNE   MDOC0450\n         SH    R1,=Y(L'LIB_DATA)\n         SH    R2,=Y(L'LIB_DATA)\n         BCT   R3,MDOC0440\nMDOC0450 DS    0H\n         STCM  R1,3,NET_LENGTH\n         MVI   NET_FUNCTION,$NET_SEND_DESC\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         XC    DXD_RC,DXD_RC                  SET RC TO ZERO\n         B     MDOC0400\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0010\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0020\nSEND0010 DS    0H\n         ITRACE ID=IP_SEND,                                            +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NOTAUTH\n         MVC   SPF_MSG1,NET_MSG_1\n         MVC   SPF_MSG2,NET_MSG_2\n         MVC   SPF_MSG3,NET_MSG_3\n         MVC   SPF_MSG4,NET_MSG_4\n         MVC   SPF_MSG5,NET_MSG_5\n         B     EXIT0000\nERR0020  DS    0H\n         ITRACE ID=NOTOK\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LH    R15,DXD_RC                      SET RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                      RESTORE SAVE AREA ADDR\n         L     R14,12(R13)                     RESTORE R14\n         LM    R0,R12,20(R13)                  RESTORE REGISTERS\n         BR    R14                             RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART         DC    Q(DXDTMDOC)\nDISPLAY          DC    CL8'DISPLAY'\nDOCPANEL         DC    CL8'DOCPANEL'\nH2               DC    H'2'\nH4               DC    H'4'\n\nP1900000         DC    P'1900000'\nHEXZERO          DC    8X'00'\nHEXCHAR          DC    C'0123456789ABCDEF'\n\nMSG01            DS    0C\n                 DC    C'Owner:            '\n                 DC    CL4' '\nMSG01_OWNER      DC    CL8' '\nMSG01L           EQU   *-MSG01\n\nMSG02            DS    0C\n                 DC    C'Status            '\n                 DC    CL7' '\nMSG02_STATUS     DC    CL3' '\nMSG02L           EQU   *-MSG02\n\nMSG03            DS    0C\n                 DC    C'Size (in records) '\nMSG03_RECORDS    DC    X'40206B2020206B202120'\nMSG03L           EQU   *-MSG03\n\nMSG04            DS    0C\n                 DC    C'Nbr of CHECK-OUTS '\nMSG04_CHECK_OUTS DC    X'40206B2020206B202120'\nMSG04L           EQU   *-MSG04\n\nMSG05            DS    0C\n                 DC    C'Created on:       '\nMSG05_DATE       DC    X'40202020204B202020'\n                 DC    C' at '\nMSG05_TIME       DC    CL8' '\nMSG05L           EQU   *-MSG05\n\nMSG06            DS    0C\n                 DC    C'Last CHECK-IN  on:'\nMSG06_DATE       DC    X'40202020204B202020'\n                 DC    C' at '\nMSG06_TIME       DC    CL8' '\n                 DC    C' by '\nMSG06_USER       DC    CL8' '\nMSG06L           EQU   *-MSG06\n\nMSG07            DS    0C\n                 DC    C'Last CHECK-OUT on:'\nMSG07_DATE       DC    X'40202020204B202020'\n                 DC    C' at '\nMSG07_TIME       DC    CL8' '\n                 DC    C' by '\nMSG07_USER       DC    CL8' '\nMSG07L           EQU   *-MSG07\n\nVALID_CHARACTERS DS    0C    0 1 2 3 4 5 6 7 8 9 A B C D E F\n                 DC    XL16'40404040404040404040404040404040' 00-0F\n                 DC    XL16'40404040404040404040404040404040' 10-1F\n                 DC    XL16'40404040404040404040404040404040' 20-2F\n                 DC    XL16'40404040404040404040404040404040' 30-3F\n                 DC    XL16'404040404040404040404A4B4C4D4E4F' 40-4F\n                 DC    XL16'504040404040404040405A5B5C5D5E5F' 50-5F\n                 DC    XL16'60614040404040404040406B6C6D6E6F' 60-6F\n                 DC    XL16'404040404040404040407A7B7C7D7E7F' 70-7F\n                 DC    XL16'40404040404040404040408B8C8D8E8F' 80-8F\n                 DC    XL16'40404040404040404040409B9C9D9E9F' 90-9F\n                 DC    XL16'4040404040404040404040ABACADAEAF' A0-AF\n                 DC    XL16'4040404040404040404040BBBCBDBEBF' B0-BF\n                 DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF\n                 DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF\n                 DC    XL16'4040E2E3E4E5E6E7E8E9404040404040' E0-EF\n                 DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTMDOC      DSECT\n              LIBSAVE DSECT=NO\n\nDXD_DWORD     DS  D\n\nDXD_SPF_PARMS DS  0F\nDXD_SPF_1     DS  F\nDXD_SPF_2     DS  F\n\nDXD_RC        DS  H                  RETURN CODE FROM DISPLAY\n\n              VTAMREQ DSECT=NO\n\nDXD_COMM1     DS  CL80\nDXD_COMM2     DS  CL80\nDXD_COMM3     DS  CL80\nDXD_COMM4     DS  CL80\nDXD_COMM5     DS  CL80\n\nDXD_UNPACK    DS  CL9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  NETBLOK DSECT=YES\nNET_LIB_NAME      DS   CL8\nNET_MEM_NAME      DS   CL8\nNET_MEM_VER       DS   XL2\nNET_DESC_LENGTH   EQU  *-NETBLOK\nNET_MEM_DOC       DS   0C\n                  ORG  NET_DATA\n                  LIBRECD DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      LIBTMDOC\n./ ADD NAME=LIBTNEW  0100-09250-09250-0919-00557-00557-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTNEW                                               *\n*                                                                     *\n*  Function:                                                          *\n*   Create a new member                                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTNEW  CSECT\nLIBTNEW  AMODE 31\nLIBTNEW  RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTNEW,R12                    DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     INIT0000\nMODID    DC    CL8'LIBTNEW'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTNEW,R13                    DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND\n*---------------------------------------------------------------------*\n*        Verify the user is authorized                                *\n*---------------------------------------------------------------------*\n         ITRACE ID=CHKAUTH\n         MVI   NET_FUNCTION,$NET_CHECK_NEW_AUTH\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION\n         LA    R1,NET_NEW_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         BAL   R8,SEND0020\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?\n         BNE   ERR0010                        NO\n*---------------------------------------------------------------------*\n*        Determine the source dataset's DSORG                         *\n*---------------------------------------------------------------------*\n         ITRACE ID=USERDSN,                                            +\n               DATA1=SPF_USER_DSN+00,                                  +\n               DATA2=SPF_USER_DSN+08\n         ITRACE ID=USERDSN1,                                           +\n               DATA1=SPF_USER_DSN+16,                                  +\n               DATA2=SPF_USER_DSN+24\n         ITRACE ID=USERDSN2,                                           +\n               DATA1=SPF_USER_DSN+32,                                  +\n               DATA2=SPF_USER_DSN+40\n         MVC   SUB0001_PARM_DSN,SPF_USER_DSN\n         LA    R1,SUB0001_PARM_LIST           SUB0001 PARM LIST ADDRESS\n         L     R15,VSUB0001                   SUB0001 ENTRY POINT\n         ITRACE ID=CALLSUB1,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                        CALL SUB0001\n         ITRACE ID=DSORG,                                              +\n               DATA1=SUB0001_PARM_DSORG\n         CLI   SUB0001_PARM_DSORG,C'S'\n         BE    NEW0010                        SEQUENTIAL\n         CLI   SUB0001_PARM_DSORG,C'P'\n         BE    NEW0020                        PARTITIONED\n         MVC   SPF_MSG1(MSG01L),MSG01\n         MVI   DXD_DISPLAY_RC+1,X'01'\n         B     EXIT0000\nNEW0010  DS    0H\n         ITRACE ID=SEQ\n         CLC   SPF_USER_MEMBER,COMM_BLANKS\n         BE    NEW0030\n         MVC   SPF_MSG1(MSG03L),MSG03\n         MVI   DXD_DISPLAY_RC+1,X'01'\n         B     EXIT0000                       EXIT WITH MESSAGE\nNEW0020  DS    0H\n         ITRACE ID=PDS\n         CLC   SPF_USER_MEMBER,COMM_BLANKS\n         BNE   NEW0030\n         ITRACE ID=NOMEM\n         MVC   SPF_MSG1(MSG04L),MSG04\n         MVI   DXD_DISPLAY_RC+1,X'01'\n         B     EXIT0000                       EXIT WITH MESSAGE\nNEW0030  DS    0H\n         BAL   R8,DAIR0100                    ALLOCATE EXISTING FILE\n         CLI   SUB0001_PARM_DSORG,C'S'        SEQUENTIAL FILE?\n         BE    NEW0040\n         ITRACE ID=VERMEM                     VERIFYING MEMBER EXISTS\n         GETMAIN RU,                                                   +\n               LV=PO_DCBL,                                             +\n               LOC=BELOW\n         LR    R7,R1                          SAVE ADDRESS\n         MVC   0(PO_DCBL,R7),PO_DCBI          INITIALIZE THE DCB\n         GETMAIN RU,                                                   +\n               LV=OPENL,                                               +\n               LOC=BELOW\n         LR    R4,R1                          SAVE ADDRESS\n         MVC   0(OPENL,R4),OPENI              INITIALIZE OPEN\n         OPEN  ((R7),INPUT),                                           +\n               MODE=31,                                                +\n               MF=(E,(R4))\n         FIND  (R7),                                                   +\n               SPF_USER_MEMBER,                                        +\n               D\n         STH   R15,DXD_FIND_RC\n         MVC   0(CLOSEL,R4),CLOSEI\n         CLOSE ((R7)),                                                 +\n               MODE=31,                                                +\n               MF=(E,(R4))\n         FREEMAIN RU,                                                  +\n               A=(R4),                                                 +\n               LV=OPENL\n         FREEMAIN RU,                                                  +\n               A=(R7),                                                 +\n               LV=PO_DCBL\n         OC    DXD_FIND_RC,DXD_FIND_RC\n         BZ    NEW0040                        MEMBER DOES NOT EXIST\n         MVC   SPF_MSG1(MSG02L),MSG02\n         MVI   DXD_DISPLAY_RC+1,X'01'\n         B     EXIT0000                       EXIT WITH MESSAGE\n*---------------------------------------------------------------------*\n*                                                                     *\n*     The source dataset (or PDS member) has been allocated.          *\n*                                                                     *\n*     OPEN the source dataset.                                        *\n*                                                                     *\n*     Register 7 has the address of the user's source file's DCB      *\n*                                                                     *\n*---------------------------------------------------------------------*\nNEW0040  DS    0H\n         ITRACE ID=OPENSRC\n         GETMAIN RU,                                                   +\n               LV=PS_DCBL,                                             +\n               LOC=BELOW\n         LR    R7,R1                          COPY DCB ADDRESS\n         GETMAIN RU,                                                   +\n               LV=PS_DCBEL,                                            +\n               LOC=BELOW\n         LR    R5,R1                          SAVE ADDRESS\n         MVC   0(PS_DCBL,R7),PS_DCBI          INITIALIZE DCB\n         MVC   0(PS_DCBEL,R5),PS_DCBEI\n         USING IHADCB,R7\n         ST    R5,DCBDCBE                     RELOCATE DCBE ADDRESS\n         GETMAIN RU,                                                   +\n               LV=OPENL,                                               +\n               LOC=BELOW\n         LR    R4,R1                          COPY ADDRESS\n         MVC   0(OPENL,R4),OPENI              INITIALIZE PARM LIST\n         OPEN  ((R7),INPUT),                                           +\n               MODE=31,                                                +\n               MF=(E,(R4))\n         TM    COMM_DD,$DD_DEBUG1             DEBUG1 DD PRESENT?\n         BNO   NEW0050\n         GETMAIN RU,                                                   +\n               LV=DEBUGDCBL+8004,                                      +\n               LOC=BELOW\n         LR    R6,R1\n         ITRACE ID=OPENBUG1,                                           +\n               RDATA1=R6\n         MVC   0(DEBUGDCBL,R6),DEBUGDCB\n         OPEN  ((R6),OUTPUT),                                          +\n               MODE=31,                                                +\n               MF=(E,(R4))\n         XC    DEBUGDCBL(4,R6),DEBUGDCBL(R6)\nNEW0050  DS    0H\n         FREEMAIN RU,                                                  +\n               A=(R4),                                                 +\n               LV=OPENL\n*---------------------------------------------------------------------*\n*                                                                     *\n*     GETMAIN the source dataset I/O area and initialize the          *\n*     parameter list for the de-compression subroutine.               *\n*                                                                     *\n*---------------------------------------------------------------------*\nNEW0060  DS    0H\n         ITRACE ID=INITCMPR                   INIT COMPRESSION PARMS\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=BELOW\n         ST    R1,UX01_EXPANDED_BUFFER\n         LA    R1,DXD_EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER\n         ST    R1,UX01_COMPRESSED_BUFFER\n         LA    R1,DXD_COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n         SR    R4,R4                          INITIALIZE LENGTH\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Send the description.                                           *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   NET_MEM_DOC+000(80),SPF_COMM1\n         MVC   NET_MEM_DOC+080(80),SPF_COMM2\n         MVC   NET_MEM_DOC+160(80),SPF_COMM3\n         MVC   NET_MEM_DOC+240(80),SPF_COMM4\n         MVC   NET_MEM_DOC+320(80),SPF_COMM5\n         LA    R14,400                        MAXIMUM LENGTH\n         LA    R15,SPF_COMM5                  ADDRESS OF LAST COMMENT\n         LA    R1,5                           MAX LOOPS\nNEW0070  DS    0H\n         CLC   COMM_BLANKS,0(R15)             ALL BLANK?\n         BNE   NEW0080                        NO\n         SH    R14,H80                        MINUS LENGTH OF A COMMENT\n         SH    R15,H80                        MINUS LENGTH OF A COMMENT\n         BCT   R1,NEW0070                     LOOP\nNEW0080  DS    0H\n         LTR   R14,R14                        ANY COMMENTS?\n         BZ    NEW0090                        NO\n         MVI   NET_FUNCTION,$NET_SEND_DESC\n         LA    R14,NET_NEW_LENGTH(R14)        PLUS HEADER LENGTH\n         STCM  R14,3,NET_LENGTH               SET LENGTH\n         ITRACE ID=SENDDESC\n         BAL   R8,SEND0020                    SEND DESCRIPTION\n         BAL   R8,RECV0000                    RECEIVE RESPONSE\n         CLI   NET_RETURN_CODE,$NET_OK        DESCRIPTION SUCCESSFUL?\n         BNE   ERR0020                        NO\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Send the source to the librarian.                               *\n*                                                                     *\n*     The data is read a record at a time into a buffer.              *\n*     When the buffer is filled it is compressed and sent to          *\n*     the librarian.                                                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nNEW0090  DS    0H\n         SR    R3,R3                          CLEAR FOR RECORD COUNT\n         SR    R4,R4                          CLEAR FOR BUFFER LENGTH\n         L     R2,UX01_EXPANDED_BUFFER        CURRENT BUFFER ADDRESS\nNEW0100  DS    0H\n         GET   (R7),0(R2)                     READ A RECORD\n         LA    R3,1(R3)                       PLUS 1 SOURCE RECORD\n         LA    R4,80(R4)                      UPDATE BUFFER LENGTH\n         LA    R2,80(R2)                      UPDATE BUFFER ADDRESS\n         CH    R4,=Y($MAX_SOURCE_SIZE)        BUFFER FULL?\n         BL    NEW0100                        NO\n         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH\n         MVI   NET_FUNCTION,$NET_CHECK_IN_SOURCE\n         BAL   R8,SEND0000                    SEND THIS BUFFER\n         BAL   R8,RECV0000                    RECEIVE RESPONSE\n         SR    R4,R4                          RESET BUFFER LENGTH\n         L     R2,UX01_EXPANDED_BUFFER        RESET BUFFER ADDRESS\n         B     NEW0100                        READ NEXT RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     EOF has been reached on the source file.                        *\n*     Send the last buffer.                                           *\n*     Send the number of records in the source file.                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEOF0000  DS    0H\n         ITRACE ID=EOF\n         MVI   NET_FUNCTION,$NET_CHECK_IN_SOURCE\n         MVI   NET_RETURN_CODE,$NET_EOF       SET EOF\n         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH\n         BAL   R8,SEND0000                    SEND LAST BUFFER\n         BAL   R8,RECV0000                    RECEIVE RESPONSE\n         MVI   NET_FUNCTION,$NET_SEND_RECORDS\n         MVI   NET_RETURN_CODE,$NET_OK\n         STCM  R3,15,NET_SOURCE_RECORDS       SET NUMBER OF RECORDS\n         LA    R1,NETBLOKL+L'NET_SOURCE_RECORDS\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         BAL   R8,SEND0020                    SEND NUMBER OF RECORDS\n         BAL   R8,RECV0000                    RECEIVE RESPONSE\n         GETMAIN RU,                                                   +\n               LV=CLOSEL,                                              +\n               LOC=BELOW\n         LR    R4,R1\n         MVC   0(CLOSEL,R4),CLOSEI\n         CLOSE ((R7)),                                                 +\n               MODE=31,                                                +\n               MF=(E,(R4))\n         FREEMAIN RU,A=(R7),LV=PS_DCBL\n         FREEMAIN RU,A=(R5),LV=PS_DCBEL\n         TM    COMM_DD,$DD_DEBUG1\n         BNO   EOF0010\n         CLOSE ((R6)),                                                 +\n               MODE=31,                                                +\n               MF=(E,(R4))\n         FREEMAIN RU,                                                  +\n               A=(R6),                                                 +\n               LV=DEBUGDCBL+8004\nEOF0010  DS    0H\n         FREEMAIN RU,                                                  +\n               A=(R4),                                                 +\n               LV=CLOSEL\n         L     R1,UX01_EXPANDED_BUFFER        INPUT BUFFER ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=$MAX_SOURCE_SIZE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDAIR0100 DS    0H\n         ITRACE ID=DAIRALE\n         XC    DAIRREQ(DAIRL),DAIRREQ\n         MVI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING DATASET\n         MVC   DAIR_DD,LIBTEMP                SET DDNAME\n         MVC   DAIR_DSN,SPF_USER_DSN\n         MVC   DAIR_MEMBER,SPF_USER_MEMBER\n         LA    R1,DAIRREQ                     DAIR PARM BLOCK ADDRESS\n         ITRACE ID=CALLSUB4,                                           +\n               RDATA1=R1\n         L     R15,VSUB0004                   DAIR ENTRY POINT\n         BALR  R14,R15                        LINK TO DAIR SUBROUTINE\n         ITRACE ID=DAIR_R15,                                           +\n               DATA1=DAIR_R15\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   DAIR0110                       NO\n         OI    DXD_FLAG,$ALLOCATED            SET ALLOCATED INDICATOR\n         BR    R8\nDAIR0110 DS    0H\n         ITRACE ID=DAIRFAIL\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         ITRACE ID=COMPRESS,                                           +\n               RDATA1=R4\n         SR    R0,R0\n         LTR   R4,R4                          ANY DATA TO SEND?\n         BZ    SEND0010                       NO\n         MVI   UX01_FUNCTION,$UX01_COMPRESS\n         LA    R1,UX01_PARMS\n         L     R15,AUX01                      USER EXIT 1 ENTRY POINT\n         BALR  R14,R15                        COMPRESS THE DATA\nSEND0010 DS    0H\n         L     R1,DXD_COMPRESSED_LENGTH\n         LA    R1,NETBLOKL(R1)                PLUS HEADER LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\nSEND0020 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0030\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0040\nSEND0030 DS    0H\n         ITRACE ID=IP_SEND,                                            +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0040 DS    0H\n         CLI   NET_FUNCTION,$NET_CHECK_NEW_AUTH\n         BE    SEND0050\n         TM    COMM_DD,$DD_DEBUG1\n         BNO   SEND0050\n         ST    R15,DXD_DEBUG_SAVE\n         LA    R0,DEBUGDCBL+4(R6)\n         SR    R1,R1\n         ICM   R1,3,NET_LENGTH\n         LA    R14,4(R1)\n         STCM  R14,3,DEBUGDCBL(R6)\n         LA    R14,NET_DATA\n         LR    R15,R1\n         MVCL  R0,R14\n         PUT   (R6),DEBUGDCBL(R6)\n         L     R15,DXD_DEBUG_SAVE\nSEND0050 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NOTAUTH,                                            +\n               DATA1=NET_MSG_1+0,                                      +\n               DATA2=NET_MSG_1+8\n         MVC   SPF_MSG1,NET_MSG_1\n         MVI   DXD_DISPLAY_RC+1,X'01'\n         B     EXIT0000\nERR0020  DS    0H\n         ITRACE ID=DESCFAIL\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         TM    DXD_FLAG,$ALLOCATED            OUTPUT DATASET ALLOCATED?\n         BNO   EXIT0010                       NO\n         ITRACE ID=RELEASE\n         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)\n         MVC   DAIR_DSN,LIBTEMP               SET DDNAME\n         LA    R1,DAIRREQ                     REQUEST BLOCK ADDRESS\n         L     R15,VSUB0004                   DAIR ENTRY POINT\n         BALR  R14,R15                        LINK TO SUBROUTINE\n         NI    DXD_FLAG,255-$ALLOCATED\nEXIT0010 DS    0H\n         LH    R15,DXD_DISPLAY_RC             SET RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTNEW)                     DISPLACEMENT TO WORK AREA\nVSUB0001 DC    V(SUB0001)\nVSUB0004 DC    V(SUB0004)\nLIBTEMP  DC    CL8'LIBTEMP'\n\nPO_DCBI  DCB   DSORG=PO,                                               +\n               DDNAME=LIBTEMP,                                         +\n               MACRF=R\nPO_DCBL  EQU   *-PO_DCBI\nPS_DCBI  DCB   DSORG=PS,                                               +\n               DDNAME=LIBTEMP,                                         +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               DCBE=PS_DCBEI,                                          +\n               MACRF=GM\nPS_DCBL  EQU   *-PS_DCBI\nPS_DCBEI DCBE  EODAD=EOF0000\nPS_DCBEL EQU   *-PS_DCBEI\n\nDEBUGDCB DCB   DSORG=PS,                                               +\n               DDNAME=DEBUG1,                                          +\n               RECFM=VB,                                               +\n               LRECL=16000,                                            +\n               BLKSIZE=16004,                                          +\n               MACRF=PM\nDEBUGDCBL EQU  *-DEBUGDCB\n\nOPENI    OPEN  (*,INPUT),MF=L,MODE=31\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MF=L,MODE=31\nCLOSEL   EQU   *-CLOSEI\n\nH80      DC    H'80'\n\nMSG01    DC    CL11'LIBNEW001E'\n         DC    C'Source data set not found'\nMSG01L   EQU   *-MSG01\nMSG02    DC    CL11'LIBNEW002E'\n         DC    C'Member not found'\nMSG02L   EQU   *-MSG02\nMSG03    DC    CL11'LIBNEW003E'\n         DC    C'Member name not allowed if source dataset is sequentia+\n               l'\nMSG03L   EQU   *-MSG03\nMSG04    DC    CL11'LIBNEW004E'\n         DC    C'Member name is required when source dataset is a PDS'\nMSG04L   EQU   *-MSG04\n\n         LTORG\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nDXDTNEW       DSECT\n              LIBSAVE DSECT=NO\n              DAIRREQ DSECT=NO\n              VTAMREQ DSECT=NO\n              UX01PARM DSECT=NO\n\nDXD_DEBUG_SAVE        DS   F\n\nDXD_SPF_PARMS         DS  0F\nDXD_SPF_1             DS   F\nDXD_SPF_2             DS   F\n\nDXD_EXPANDED_LENGTH   DS   A           LENGTH OF EXPANDED DATA\nDXD_COMPRESSED_LENGTH DS   A           LENGTH OF COMPRESSED DATA\n\nDXD_SOURCE_RECORDS    DS   F           NUMBER OF RECORDS IN SOURCE\nDXD_CURRENT_RECORDS   DS   F           NUMBER OF RECORDS IN BUFFER\n\nSUB0001_PARM_LIST     DS   0A\nSUB0001_PARM_DSN      DS   CL44\nSUB0001_PARM_DSORG    DS   C\n\nDXD_FIND_RC           DS   H           RETURN CODE FROM DISPLAY\nDXD_DISPLAY_RC        DS   H           RETURN CODE FROM DISPLAY\n\nDXD_FLAG              DS   X\n$ALLOCATED            EQU  X'80'       DATASET IS ALLOCATED\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM     TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK   DSECT=YES\nNET_LIB_NAME       DS  CL8\nNET_MEM_NAME       DS  CL8\nNET_MEM_VERSION    DS  XL2\nNET_MEM_DOC        DS  0C\nNET_NEW_LENGTH     EQU *-NETBLOK\n         ORG       NET_DATA\nNET_SOURCE_RECORDS DS  XL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBRECD DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB  AM=VTAM\nACBL     EQU     *-IFGACB\n         LIBBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DCBD    DSORG=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA  DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n$MAX_SOURCE_SIZE EQU 8000\n         COPY REGEQU\n         END  LIBTNEW\n./ ADD NAME=LIBTPARM 0100-09250-09250-0919-00357-00357-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: LIBTPARM                                                     *\n*                                                                     *\n*  Process parameters                                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTPARM CSECT\nLIBTPARM AMODE 31\nLIBTPARM RMODE ANY\n         USING LIBTPARM,R12                   DEFINE BASE\n         USING LIBTCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'LIBTPARM'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0000 DS    0H\n         LR    R9,R1                          COPY PARM ADDRESS\n         L     R1,COMMDXDA\n         A     R1,DXDSTART\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING DXDTPARM,R13\n         MVI   DXD_FLAGS,0                    RESET ALL FLAGS\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   Parameters are                                                    *\n*                                                                     *\n*       ABEND    ABEND during exit/cleanup                            *\n*       A=       VTAM APPLID of library server                        *\n*       I=       TCP/IP hostname or IP address of library server      *\n*       L=       Library name                                         *\n*       P=       TCP/IP port number of library server                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SR    R2,R2                          CLEAR REGISTER\n         ICM   R2,3,0(R9)                     PARAMETER LENGTH\n         BZ    ERR0150                        NO PARAMETER\n         BNH   ERR0150\n         LA    R3,2(R9)                       FIRST BYTE OF PARM(S)\n         MVC   COMM_SERVER_APPL_ID,COMM_BLANKS\n         MVC   COMM_LIBRARY_NAME,COMM_BLANKS  CLEAR LIBRARY NAME\n         XC    COMM_SERVER_PORT,COMM_SERVER_PORT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM0010 DS    0H\n         ITRACE ID=NEW_PARM,                                           +\n               RDATA1=R3,                                              +\n               DATA2=0(R3)\n         LTR   R2,R2                          ANY DATA LEFT?\n         BZ    EOD0000                        NO\n         BAL   R8,PARM1000                    FIND FIRST NON-BLANK\n         CLC   =C'A=',0(R3)                   APPLID?\n         BE    APPL0000                       YES\n         CLC   =C'H=',0(R3)                   HOSTNAME OR IP ADDRESS?\n         BE    HOST0000                       YES\n         CLC   =C'L=',0(R3)                   LIBRARY NAME?\n         BE    LIB0000                        YES\n         CLC   =C'P=',0(R3)                   TCP/IP PORT NUMBER?\n         BE    PORT0000                       YES\n         CLC   =C'ABEND',0(R3)                ABEND?\n         BE    ABEND000                       YES\n         LM    R4,R5,MSG14PARM                MESSAGE 1 PARMS\n         B     TPUT0000\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         BAL   R8,PARM2000\n         OI    COMM_FLAGS,$ABEND\n         B     PARM0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nAPPL0000 DS    0H\n         TM    DXD_FLAGS,$APPL                APPL ALREADY GIVEN?\n         BO    ERR0010\n         OI    DXD_FLAGS,$APPL\n         BAL   R8,PARM2000                    SCAN ARGUEMENT\n         ITRACE ID=APPL,                                               +\n               DATA1=DXD_PARM,                                         +\n               RDATA2=R4\n         CH    R4,H8                          TOO LONG?\n         BH    ERR0020                        YES\n         MVC   COMM_SERVER_APPL_ID,DXD_PARM   COPY APPLID\n         B     PARM0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHOST0000 DS    0H\n         TM    DXD_FLAGS,$HOST                HOST ALREADY GIVEN?\n         BO    ERR0030\n         OI    DXD_FLAGS,$HOST\n         BAL   R8,PARM2000                    SCAN ARGUEMENT\n         CH    R4,H24                         TOO LONG?\n         BH    ERR0040                        YES\n         ITRACE ID=HOST,                                               +\n               DATA1=DXD_PARM,                                         +\n               RDATA2=R4\n         ST    R4,COMM_SERVER_HOST_NAME_LENGTH\n         MVC   COMM_SERVER_HOST_NAME,DXD_PARM\n         B     PARM0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB0000  DS    0H\n         TM    DXD_FLAGS,$LIB                 LIBRARY ALREADY GIVEN?\n         BO    ERR0050\n         OI    DXD_FLAGS,$LIB\n         BAL   R8,PARM2000                    SCAN ARGUEMENT\n         CH    R4,H8                          TOO LONG?\n         BH    ERR0060                        YES\n         ITRACE ID=LIB,                                                +\n               DATA1=DXD_PARM,                                         +\n               RDATA2=R4\n         MVC   COMM_LIBRARY_NAME,DXD_PARM     COPY LIBRARY NAME\n         B     PARM0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPORT0000 DS    0H\n         TM    DXD_FLAGS,$PORT                PORT ALREADY GIVEN?\n         BO    ERR0070\n         OI    DXD_FLAGS,$PORT\n         BAL   R8,PARM2000                    SCAN ARGUEMENT\n         CH    R4,H5                          TOO LONG?\n         BH    ERR0080                        YES\n         LA    R14,DXD_PARM\n         LR    R15,R4                         COPY LENGTH\nPORT0010 DS    0H\n         CLI   0(R14),C'0'                    VALID NUMERIC?\n         BL    ERR0090                        NO\n         CLI   0(R14),C'9'                    VALID NUMERIC?\n         BH    ERR0090                        NO\n         BCTR  R4,0\n         EX    R4,PACKPORT\n         CVB   R1,COMMDWRD                    CONVERT TO BINARY\n         STH   R1,COMM_SERVER_PORT            SET PORT NUMBER\n         ITRACE ID=PORT,                                               +\n               DATA1=DXD_PARM,                                         +\n               RDATA2=R1\n         B     PARM0010\nPACKPORT PACK  COMMDWRD,DXD_PARM(0)           PACK PORT NUMBER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEOD0000  DS    0H\n         TM    DXD_FLAGS,$APPL+$HOST\n         BZ    ERR0100                        NEITHER GIVEN\n         BO    ERR0110                        BOTH GIVEN\n         TM    DXD_FLAGS,$APPL                APPL ID GIVEN?\n         BO    EXIT0000                       NO\n         TM    DXD_FLAGS,$PORT                PORT GIVEN?\n         BNO   ERR0120                        NO\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM1000 DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BNER  R8                             NO\n         LA    R3,1(R3)                       NEXT\n         BCT   R2,PARM1000\n         B     ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM2000 DS    0H\n         MVC   DXD_PARM,COMM_BLANKS           INITIALIZE WORK AREA\n         LA    R1,DXD_PARM\n         SR    R4,R4\n         LA    R3,2(R3)                       SKIP KEYWORD\n         SH    R2,H2                          MINUS LENGTH OF KEYWORD\n         BNH   ERR0130\nPARM2010 DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BER   R8                             YES\n         MVC   0(1,R1),0(R3)                  COPY\n         LA    R1,1(R1)                       NEXT\n         LA    R3,1(R3)                       NEXT\n         LA    R4,1(R4)                       ADD 1 TO LENGTH\n         BCT   R2,PARM2010                    LOOP\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         LM    R4,R5,MSG01PARM\n         B     TPUT0000\nERR0020  DS    0H\n         LM    R4,R5,MSG02PARM\n         B     TPUT0000\nERR0030  DS    0H\n         LM    R4,R5,MSG03PARM\n         B     TPUT0000\nERR0040  DS    0H\n         LM    R4,R5,MSG04PARM\n         B     TPUT0000\nERR0050  DS    0H\n         LM    R4,R5,MSG05PARM\n         B     TPUT0000\nERR0060  DS    0H\n         LM    R4,R5,MSG06PARM\n         B     TPUT0000\nERR0070  DS    0H\n         LM    R4,R5,MSG07PARM\n         B     TPUT0000\nERR0080  DS    0H\n         LM    R4,R5,MSG08PARM\n         B     TPUT0000\nERR0090  DS    0H\n         LM    R4,R5,MSG09PARM\n         B     TPUT0000\nERR0100  DS    0H\n         LM    R4,R5,MSG10PARM\n         B     TPUT0000\nERR0110  DS    0H\n         LM    R4,R5,MSG11PARM\n         B     TPUT0000\nERR0120  DS    0H\n         LM    R4,R5,MSG12PARM\n         B     TPUT0000\nERR0130  DS    0H\n         LM    R4,R5,MSG13PARM\n         B     TPUT0000\nERR0150  DS    0H\n         LM    R4,R5,MSG15PARM\n         B     TPUT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTPUT0000 DS    0H\n         GETMAIN RU,                                                   +\n               LV=(R5),                                                +\n               LOC=BELOW\n         LR    R2,R1                          COPY ADDRESS\n         BCTR  R5,0\n         EX    R5,TPUTMVC\n         LA    R5,1(R5)\n         TPUT  (R2),(R5)                      ISSUE TPUT\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=(R5)\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(R13)                     RESTORE R13\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        SET RC TO ZERO\n         BR    R14                            EXIT\n* ------------------------------------------------------------------- *\nTPUTMVC  MVC   0(0,R2),0(R4)                  COPY TEXT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTPARM)                    DISPLACEMENT TO WORK AREA\n\nMSG01PARM  DC  A(MSG01),A(MSG01L)\nMSG02PARM  DC  A(MSG02),A(MSG02L)\nMSG03PARM  DC  A(MSG03),A(MSG03L)\nMSG04PARM  DC  A(MSG04),A(MSG04L)\nMSG05PARM  DC  A(MSG05),A(MSG05L)\nMSG06PARM  DC  A(MSG06),A(MSG06L)\nMSG07PARM  DC  A(MSG07),A(MSG07L)\nMSG08PARM  DC  A(MSG08),A(MSG08L)\nMSG09PARM  DC  A(MSG09),A(MSG09L)\nMSG10PARM  DC  A(MSG10),A(MSG10L)\nMSG11PARM  DC  A(MSG11),A(MSG11L)\nMSG12PARM  DC  A(MSG12),A(MSG12L)\nMSG13PARM  DC  A(MSG13),A(MSG13L)\nMSG14PARM  DC  A(MSG14),A(MSG14L)\nMSG15PARM  DC  A(MSG15),A(MSG15L)\n\nH2         DC  H'2'\nH5         DC  H'5'\nH8         DC  H'8'\nH24        DC  H'24'\n\nMSG01      DC  C'LIBTPARM01E  APPLID already given'\nMSG01L     equ *-MSG01\nMSG02      DC  C'LIBTPARM02E  APPLID too long'\nMSG02L     EQU *-MSG02\nMSG03      DC  C'LIBTPARM03E  HOST name already given'\nMSG03L     EQU *-MSG03\nMSG04      DC  C'LIBTPARM04E  HOST name too long'\nMSG04L     EQU *-MSG04\nMSG05      DC  C'LIBTPARM05E  LIBRARY name already given'\nMSG05L     EQU *-MSG05\nMSG06      DC  C'LIBTPARM06E  LIBRARY name too long'\nMSG06L     EQU *-MSG06\nMSG07      DC  C'LIBTPARM07E  PORT number already given'\nMSG07L     EQU *-MSG07\nMSG08      DC  C'LIBTPARM08E  PORT number too long'\nMSG08L     EQU *-MSG08\nMSG09      DC  C'LIBTPARM09E  PORT number not numeric'\nMSG09L     EQU *-MSG09\nMSG10      DC  C'LIBTPARM10E  APPL or HOST name is required'\nMSG10L     EQU *-MSG10\nMSG11      DC  C'LIBTPARM11E  APPL and HOST are mutually exclusive'\nMSG11L     EQU *-MSG11\nMSG12      DC  C'LIBTPARM12E  PORT number required when HOST specified'\nMSG12L     EQU *-MSG12\nMSG13      DC  C'LIBTPARM13E  Keyword with no arguement given'\nMSG13L     EQU *-MSG13\nMSG14      DC  C'LIBTPARM14E  Unrecognized keyword'\nMSG14L     EQU *-MSG14\nMSG15      DC  C'LIBTPARM15E  No parameters given'\nMSG15L     EQU *-MSG15\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        WORK AREA                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTPARM DSECT\n         LIBSAVE DSECT=NO\n\nDXD_FLAGS DS     X\n$APPL     EQU    X'80'\n$HOST     EQU    X'40'\n$LIB      EQU    X'20'\n$PORT     EQU    X'10'\n\nDXD_PARM  DS     CL80\n\n* ------------------------------------------------------------------- *\n*        COMMON MODULE                                                *\n* ------------------------------------------------------------------- *\n         TCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n         COPY  REGEQU\n         END   LIBTPARM\n./ ADD NAME=LIBTPRSE 0100-09250-09250-0919-00117-00117-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTPRSE                                              *\n*                                                                     *\n*  Function:                                                          *\n*   Parse SPF_ZCMD                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTPRSE CSECT\nLIBTPRSE AMODE 31\nLIBTPRSE RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTPRSE,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     PRSE0000\nMODID    DC    CL8'LIBTPRSE'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nPRSE0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTPRSE,R13                   DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    PRSE0010                       YES\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\nPRSE0010 DS    0H\n         SR    R2,R2                          INIT NBR OF OPERANDS\n         ST    R2,COMM_OPERANDS_NBR           SET NUMBER OF OPERANDS\n         XC    COMM_OPERANDS(COMM_OPERANDS_L),COMM_OPERANDS\n         LA    R3,SPF_ZCMD                    AREA TO PARSE\n         LA    R4,L'SPF_ZCMD                  LENGTH OF AREA TO PARSE\n         LA    R5,COMM_OPERAND_1_ADDRESS\n         USING OPERAND,R5\nPRSE0020 DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BNE   PRSE0030                       NO\n         LA    R3,1(R3)                       NEXT BYTE\n         BCT   R4,PRSE0020                    LOOP\n         B     EXIT0000                       NOTHING FOUND\nPRSE0030 DS    0H\n         STCM  R3,15,OPERAND_ADDRESS          SET OPERAND ADDRESS\n         LA    R2,1(R2)                       PLUS 1 OPERAND\n         ST    R2,COMM_OPERANDS_NBR           SET NUMBER OF OPERANDS\n         SR    R6,R6                          INITIALIZE LENGTH\nPRSE0040 DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BE    PRSE0050                       YES\n         LA    R6,1(R6)                       ADD 1 TO LENGTH\n         LA    R3,1(R3)                       NEXT BYTE\n         BCT   R4,PRSE0040                    LOOP\n         B     PRSE0060                       END OF AREA REACHED\nPRSE0050 DS    0H\n         STC   R6,OPERAND_LENGTH              SET LENGTH\n         LA    R5,OPERAND_L(R5)               NEXT OPERAND\n         B     PRSE0020\nPRSE0060 DS    0H\n         STC   R6,OPERAND_LENGTH\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               DATA1=COMM_OPERANDS_NBR\n         L     R13,4(R13)                     RESTORE R13\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTPRSE)                    DISPLACEMENT TO WORK AREA\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTPRSE         DSECT\n                 LIBSAVE DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB  AM=VTAM\nACBL     EQU     *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOPERAND          DSECT\nOPERAND_ADDRESS  DS     XL4\nOPERAND_LENGTH   DS     X\nOPERAND_TYPE     DS     X\nOPERAND_L        EQU    *-OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA  DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBTPRSE\n./ ADD NAME=LIBTSNAP 0100-09250-09250-0919-00609-00609-00000-SOURCE\n         MACRO\n         FDEF  &NAME,&TYPE,&LEN,&BASE=\n         LCLC  &T\n         LCLA  &L\n         GBLC  &BASENAME\n         AIF   (T'&BASE EQ 'O').NOBASE\n.BASE    ANOP\n&BASENAME SETC  '&BASE'\n         DC    CL8'&BASE'                     CONTROL BLOCK NAME\n         MEXIT\n.NOBASE  ANOP\n         AIF   (T'&TYPE EQ 'O').TYPE1\n&T       SETC  '&TYPE'\n         AGO   .TYPE2\n.TYPE1   ANOP\n&T       SETC  T'&NAME\n.TYPE2   ANOP\n         AIF   (T'&LEN EQ 'O').LEN1\n&L       SETA  &LEN\n         AGO   .LEN2\n.LEN1    ANOP\n&L       SETA  L'&NAME\n.LEN2    ANOP\n         DC    CL16'&NAME'                    FIELD NAME\n         DC    AL2(&NAME-&BASENAME)           DISP WITHIN CONTROL BLOCK\n         DC    C'&T'                          FIELD TYPE\n         DC    AL2(&L)                        SOURCE FIELD LENGTH\n         MEND\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: LIBTSNAP                                              *\n*                                                                     *\n*  Process SNAP commands                                              *\n*                                                                     *\n*  At entry:                                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTSNAP CSECT\nLIBTSNAP AMODE 31\nLIBTSNAP RMODE ANY\n         USING LIBTSNAP,R12                   DEFINE BASE\n         USING LIBTCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'LIBTSNAP'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LV=WORKAREA_L,                 .. SIZE                  +\n               LOC=BELOW                      .. DCB, MUST BE BELOW\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORK_AREA,R13                  DEFINE BASE\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVI   WORK_HEADING,C' '\n         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING\n         MVI   WORK_PRINT_SPACE,C' '          INITIALIZE SPACE\n         MVC   WORK_PRINT,WORK_PRINT_SPACE\n         MVI   WORK_FLAGS,0                   RESET FLAG(S)\n         L     R7,ALIBSPFD\n         USING LIBSPFD,R7\n         TM    COMM_DD,$DD_SNAP               SNAP DD PRESENT?\n         BNO   ERR0010                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Open the DCB.                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   WORK_DCB(DCBL),DCBI            INITIALIZE THE DCB\n         MVC   WORK_OPEN(OPENL),OPENI\n         OPEN  WORK_DCB,                                               +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         ZAP   WORK_PAGE,P0                   INITIALIZE PAGE NUMBER\n         ZAP   WORK_LINE,P0                   INITIALIZE LINE NUMBER\n         TIME  DEC                            GET DATE AND TIME\n         STM   R0,R1,WORK_TIME_DATE           SAVE TIME AND DATE\n         AP    WORK_DATE,P1900000             ADD CENTURY TO DATE\n         BAL   R10,HEAD0000                   PRINT HEADING\n* ------------------------------------------------------------------- *\n*     Format fields from the USER's common area                       *\n* ------------------------------------------------------------------- *\n         ST    R11,WORK_FMT_BASE              SET BASE\n         MVC   WORK_FMT_FDEF,A_TCOMM_FDEF\n         BAL   R8,FMT0000                     FORMAT THE TCOMM FIELDS\n* ------------------------------------------------------------------- *\n*     Format fields from the library chain                            *\n* ------------------------------------------------------------------- *\n         ICM   R6,15,COMM_LIBRARY_CHAIN\n         BZ    SNAP0100\n         USING LIB_CHAIN,R6\n         LA    R5,LIB_CHAIN_LIBRARIES\n         USING LIB_CHAIN_NAME,R5\n         L     R1,LIB_CHAIN_LENGTH            LENGTH OF DATA\n         SH    R1,=Y(LIB_CHAIN_NAME-LIB_CHAIN)\n         SR    R0,R0                          CLEAR REGISTER\n         D     R0,=A(LIB_CHAIN_PER_LEN)\n         LR    R6,R1                          NUMBER OF LIBS\n         MVC   WORK_FMT_FDEF,A_LIBCHAIN_FDEF\nSNAP0010 DS    0H\n         ST    R5,WORK_FMT_BASE\n         BAL   R8,FMT0000\n         LA    R5,LIB_CHAIN_PER_LEN(R5)\n         BCT   R6,SNAP0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Print the trace table                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSNAP0100 DS    0H\n         OI    WORK_FLAGS,$WORK_TRACE\n         MVI   WORK_PRINT_CC,C'1'              FORCE TOP OF PAGE\n         MVC   WORK_PRINT_DATA(MSG05L),MSG05\n         BAL   R9,PRT0000\n         ICM   R2,15,TRFIRST                   FIRST TRACE TABLE ENTRY\n         BZ    CLOSE000                        NO TRACE TABLE\n         USING TRENTRY,R2                      DEFINE BASE\nSNAP0110 DS    0H\n         OC    TRETCB,TRETCB\n         BZ    CLOSE000\n         MVC   WORK_PRINT_DATA(MSG06L),MSG06\n         C     R2,TRCURR                       CURRENT ENTRY?\n         BNE   SNAP0120                        NO\n         MVC   WORK_PRINT_DATA+(MSG06_CUR-MSG06)(L'MSG06_CUR),=C'CURREN+=>'\n               T -->'\nSNAP0120 DS    0H\n         UNPK  WORK_PRINT_DATA+(MSG06_TCB-MSG06)(7),TRETCB(5)            ADDR\n         TR    WORK_PRINT_DATA+(MSG06_TCB-MSG06)(6),HEXCHAR\n         MVI   WORK_PRINT_DATA+(MSG06_TCB-MSG06)+6,C' '\n         MVC   WORK_PRINT_DATA+(MSG06_MOD-MSG06)(L'MSG06_MOD),TREMOD\n         MVC   WORK_PRINT_DATA+(MSG06_ID-MSG06)(L'MSG06_ID),TREID\n         MVC   WORK_PRINT_DATA+(MSG06_D1-MSG06)(L'MSG06_D1),TREDATA1\n         TR    WORK_PRINT_DATA+(MSG06_D1-MSG06)(L'MSG06_D1),PRINTABLE\n         UNPK  WORK_PRINT_DATA+(MSG06_D1X-MSG06)(9),TREDATA1(5)\n         TR    WORK_PRINT_DATA+(MSG06_D1X-MSG06)(8),HEXCHAR\n         UNPK  WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(9),TREDATA1+4(5)\n         TR    WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(8),HEXCHAR\n         MVI   WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8+8,C' '\n         MVC   WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),TREDATA2\n         MVC   WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),TREDATA2\n         TR    WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),PRINTABLE\n         UNPK  WORK_PRINT_DATA+(MSG06_D2X-MSG06)(9),TREDATA2(5)\n         TR    WORK_PRINT_DATA+(MSG06_D2X-MSG06)(8),HEXCHAR\n         UNPK  WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(9),TREDATA2+4(5)\n         TR    WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(8),HEXCHAR\n         MVI   WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8+8,C' '\n         BAL   R9,PRT0000\n         C     R2,TRLAST                      END OF TABLE?\n         BE    CLOSE000                       YES\n         LA    R2,TRENTRYL(R2)\n         B     SNAP0110\n         DROP  R2\n* ------------------------------------------------------------------- *\n*     CLOSE THE DCB AND EXIT                                          *\n* ------------------------------------------------------------------- *\nCLOSE000 DS    0H\n         MVC   WORK_CLOSE(CLOSEL),CLOSEI\n         CLOSE (WORK_DCB),                                             +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         MVC   SPF_MSG1(MSG01L),MSG01\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMT0000  DS    0H\n         STM   R0,R15,WORK_FMT_SAVE\n         L     R2,WORK_FMT_BASE\n         L     R3,WORK_FMT_FDEF\n         USING FDEF,R3\n         MVC   WORK_PRINT_DATA(MSG03L),MSG03\n         MVC   WORK_PRINT_DATA+(MSG03_BLOCK-MSG03)(L'MSG03_BLOCK),0(R3)\n         UNPK  WORK_UNPACK(9),WORK_FMT_BASE(5)\n         TR    WORK_UNPACK,HEXCHAR\n         MVC   WORK_PRINT_DATA+(MSG03_ADDR-MSG03)(L'MSG03_ADDR),WORK_UN+\n               PACK\n         BAL   R9,PRT0000\n         LA    R3,8(R3)\nFMT0010  DS    0H\n         MVC   WORK_PRINT_DATA(MSG04L),MSG04\n         LA    R4,WORK_PRINT_DATA+(MSG04_DATA-MSG04)\n         USING FLD,R4\n         LA    R5,((L'WORK_PRINT_DATA-MSG04L)/(FLDL+5))\nFMT0020  DS    0H\n         MVC   FLD_LABEL,FDEF_NAME\n         MVC   FLD_TYPE+1(1),FDEF_TYPE\n         SR    R1,R1\n         ICM   R1,3,FDEF_LENGTH\n         CVD   R1,WORK_DWORD\n         MVC   FLD_LENGTH,=X'40202120'\n         ED    FLD_LENGTH,WORK_DWORD+6\n         UNPK  WORK_UNPACK(5),FDEF_DISP(3)\n         TR    WORK_UNPACK(4),HEXCHAR\n         MVC   FLD_DISP,WORK_UNPACK           COPY DISPLACEMENT\n         SR    R14,R14                        CLEAR REGISTER\n         ICM   R14,3,FDEF_LENGTH              FIELD LENGTH\n         SR    R15,R15                        CLEAR REGISTER\n         ICM   R15,3,FDEF_DISP                DISPLACEMENT\n         AR    R15,R2                         DATA ADDRESS\n         CLI   FDEF_TYPE,C'A'                 ADDRESS?\n         BE    FMT0050                        YES\n         CLI   FDEF_TYPE,C'C'                 CHARACTER?\n         BE    FMT0030                        YES\n         CLI   FDEF_TYPE,C'F'                 FULLWORD?\n         BE    FMT0060                        YES\n         CLI   FDEF_TYPE,C'H'                 HALFWORD?\n         BE    FMT0070                        YES\n         CLI   FDEF_TYPE,C'P'                 PACKED DECIMAL?\n         BE    FMT0080                        YES\n         CLI   FDEF_TYPE,C'X'                 HEX?\n         BE    FMT0050                        YES\n         B     FMT0500\n* ----------------------  CHARACTER FIELDS  ------------------------- *\nFMT0030  DS    0H\n         CH    R14,H8                         LONGER THAN 8 CHARACTERS?\n         BNH   FMT0040                        NO\n         LH    R14,H8                         LIMIT TO 8\nFMT0040  DS    0H\n         BCTR  R14,0\n         EX    R14,FMTMVC01                   COPY DATA\n         B     FMT0500\n* ----------------------  ADDRESS FIELDS  --------------------------- *\nFMT0050  DS    0H\n         UNPK  WORK_UNPACK(9),0(5,R15)        UNPACK THE DATA\n         TR    WORK_UNPACK,HEXCHAR            TRANSLATE TO PRINTABLE\n         SLL   R14,1                          MULTIPLY BY 2\n         BCTR  R14,0                          MINUS 1\n         LA    R1,FLD_VALUE+7\n         SR    R1,R14\n         EX    R14,FMTMVC02                   COPY TO PRINT AREA\n         B     FMT0500\n* ----------------------  FULLWORD FIELDS  -------------------------- *\nFMT0060  DS    0H\n         L     R1,0(R15)                      LOAD VALUE\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         MVC   FLD_VALUE,=X'4020202020202120'\n         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE\n         B     FMT0500\n* ----------------------  FULLWORD FIELDS  -------------------------- *\nFMT0070  DS    0H\n         LH    R1,0(R15)                      LOAD VALUE\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         MVC   FLD_VALUE,=X'4020202020202120'\n         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE\n         B     FMT0500\n* ----------------------  PACKED DECIMAL ---------------------------- *\nFMT0080  DS    0H\n         BCTR  R14,0\n         EX    R14,FMTZAP                     ZAP IT INTO DWORD\n         MVC   FLD_VALUE,=X'4020202020202120'\n         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE\nFMT0500  DS    0H\n         LA    R4,FLDL+5(R4)                  NEXT IN OUTPUT\n         LA    R3,FDEFL(R3)                   NEXT FIELD DEFINITION\n         CLI   0(R3),X'FF'                    END OF FIELDS?\n         BE    FMT0510                        YES\n         BCT   R5,FMT0020                     FORMAT NEXT FIELD\n         BAL   R9,PRT0000                     PRINT\n         B     FMT0010\nFMT0510  DS    0H\n         BAL   R9,PRT0000                     PRINT LAST LINE\n         BAL   R9,PRT0000                     PRINT BLANK LINE\n         LM    R0,R15,WORK_FMT_SAVE\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMTMVC01 MVC   FLD_VALUE(0),0(R15)            COPY DATA\nFMTMVC02 MVC   0(0,R1),WORK_UNPACK            COPY DATA\nFMTZAP   ZAP   WORK_DWORD,0(0,R15)            ZAP PACKED DECIMAL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         CP    WORK_LINE,MAXLINE\n         BL    PRT0010\n         BAL   R10,HEAD0000                   PRINT NEXT HEADING\nPRT0010  DS    0H\n         PUT   WORK_DCB,WORK_PRINT            PRINT\n         AP    WORK_LINE,P1                   ADD TO LINE COUNT\n         MVC   WORK_PRINT,WORK_PRINT_SPACE\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHEAD0000 DS    0H\n         MVC   WORK_HEADING(HEADINGL),HEADING\n         ED    WORK_HEADING+(HEAD_DATE-HEADING)(L'HEAD_DATE),WORK_DATE\n         UNPK  WORK_UNPACK(7),WORK_TIME(4)\n         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+0(2),WORK_UNPACK+0\n         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+3(2),WORK_UNPACK+2\n         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+6(2),WORK_UNPACK+4\n         MVI   WORK_HEADING+(HEAD_TIME-HEADING)+2,C':'\n         MVI   WORK_HEADING+(HEAD_TIME-HEADING)+5,C':'\n         AP    WORK_PAGE,P1\n         ED    WORK_HEADING+(HEAD_PAGE-HEADING)(L'HEAD_PAGE),WORK_PAGE\n         PUT   WORK_DCB,WORK_HEADING\n         MVI   WORK_HEADING,C' '\n         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING\n         ZAP   WORK_LINE,P1\n         TM    WORK_FLAGS,$WORK_TRACE\n         BOR   R10\n         LA    R1,((L'WORK_PRINT_DATA-MSG04L)/(FLDL+5))\n         LA    R15,WORK_HEADING+(MSG04_DATA-MSG04)+1\nHEAD0010 DS    0H\n         MVC   0(FLD_HEADL,R15),FLD_HEAD\n         LA    R15,FLD_HEADL+5(R15)\n         BCT   R1,HEAD0010\n         PUT   WORK_DCB,WORK_HEADING\n         MVI   WORK_HEADING,C' '\n         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING\n         AP    WORK_LINE,P1\n         BR    R10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NOSNAP\n         MVC   SPF_MSG1(MSG02L),MSG02\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE CALLER'S REGS\n         SR    R15,R15                        ALWAYS A GOOD RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDCBI     DCB   DDNAME=LIBSNAP,                                         +\n               DSORG=PS,                                               +\n               LRECL=133,                                              +\n               blksize=3990,                                           +\n               RECFM=FBA,                                              +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,OUTPUT),MF=L,MODE=31\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MF=L,MODE=31\nCLOSEL   EQU   *-CLOSEI\n\nA_TCOMM_FDEF    DC  A(TCOMM_FDEF)\nA_LIBCHAIN_FDEF DC  A(LIBCHAIN_FDEF)\n\nH8          DC    H'8'\n\nP0          DC    P'0'\nP1          DC    P'1'\nP1900000    DC    P'1900000'\nMAXLINE     DC    P'65'\nSNAPDDN     DC    CL8'LIBSNAP'\n\nHEXCHAR     EQU   *-C'0'\n            DC    C'0123456789ABCDEF'\n\nHEADING     DS    0C\n            DC    C'1'\nHEAD_DATE   DC    X'40212020204B202020'\n            DC    CL2' '\nHEAD_TIME   DS    CL8' '\n            DC    CL29' '\n            DC    C'LIBRARIAN SNAP DUMP'\n            DC    CL40' '\nHEAD_PAGE   DC    X'402020202120'\nHEADINGL    EQU   *-HEADING\n\nFLD_HEAD    DC    CL16'LABEL'\n            DC    CL2' '\n            DC    CL4'TYPE'\n            DC    CL3' '\n            DC    CL3'LEN'\n            DC    CL2' '\n            DC    CL4'DISP'\n            DC    CL3' '\n            DC    CL7'VALUE'\nFLD_HEADL   EQU   *-FLD_HEAD\n\nMSG01       DS    0C\n            DC    CL11'LIBTSNAP01I'\n            DC    C'SNAP DUMP complete'\nMSG01L      EQU   *-MSG01\nMSG02       DS    0C\n            DC    CL11'LIBTSNAP02E'\n            DC    C'LIBSNAP DD not present'\nMSG02L      EQU   *-MSG02\n\n\nMSG03       DC    CL11'LIBTSNAP03I'\n            DC    C' '\nMSG03_BLOCK DC    CL8' '\n            DC    C' AT '\nMSG03_ADDR  DC    CL8' '\nMSG03L      EQU   *-MSG03\n\nMSG04       DC    CL11'LIBTSNAP04I'\n            DC    C' '\nMSG04_DATA  DS    C\nMSG04L      EQU   *-MSG04\n\nMSG05       DC    CL11'LIBTSNAP05I'\n            DC    CL10' '\n            DC    C'-------------  TRACE TABLE ------------'\nMSG05L      EQU   *-MSG05\n\nMSG06       DS    0C\n            DC    C'          '\nMSG06_CUR   DC    CL11' '\n            DC    CL03' '\nMSG06_TCB   DC    CL06' '\n            DC    CL03' '\nMSG06_MOD   DC    CL05' '\n            DC    CL03' '\nMSG06_ID    DC    CL08' '\n            DC    CL03' '\nMSG06_D1    DC    CL08' '\n            DC    C' '\nMSG06_D1X   DC    CL16' '\n            DC    CL03' '\nMSG06_D2    DC    CL08' '\n            DC    C' '\nMSG06_D2X   DS    CL16' '\n            DC    C' '\nMSG06L      EQU   *-MSG06\n\n*-------------------  0 1 2 3 4 5 6 7 8 9 A B C D E F  --------------*\nPRINTABLE DS    0C\n          DC    XL16'40404040404040404040404040404040'   x'00' - X'0F'\n          DC    XL16'40404040404040404040404040404040'   X'10' - X'1F'\n          DC    XL16'40404040404040404040404040404040'   X'20' - X'2F'\n          DC    XL16'40404040404040404040404040404040'   X'30' - X'3F'\n          DC    XL16'404040404040404040404A4B4C4D4E4F'   X'40' - X'4F'\n          DC    XL16'504040404040404040405A5B5C5D5E5F'   X'50' - X'5F'\n          DC    XL16'60614040404040404040406B6C6D6E6F'   X'60' - X'6F'\n          DC    XL16'404040404040404040407A7B7C7D7E7F'   X'70' - X'7F'\n          DC    XL16'40404040404040404040408B8C8D8E8F'   X'80' - X'8F'\n          DC    XL16'40404040404040404040409B9C9D9E9F'   X'90' - X'9F'\n          DC    XL16'4040404040404040404040ABACADAEAF'   X'A0' - X'AF'\n          DC    XL16'4040404040404040404040BBBCBDBEBF'   X'B0' - X'BF'\n          DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'   X'C0' - X'CF'\n          DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'   X'D0' - X'DF'\n          DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'   X'E0' - X'EF'\n          DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'   X'F0' - X'FF'\n          LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK_AREA        DSECT\n                 LIBSAVE  DSECT=NO\nWORK_DWORD       DS   D\nWORK_FMT_SAVE    DS   16F\nWORK_DCB         DS   0F,(DCBL)X\nWORK_OPEN        DS   0F,(OPENL)X\nWORK_CLOSE       DS   0F,(CLOSEL)X\n\nWORK_FMT_BASE    DS   F\nWORK_FMT_FDEF    DS   F\n\nWORK_TIME_DATE   DS   0F\nWORK_TIME        DS   XL4\nWORK_DATE        DS   PL4\n\nWORK_UNPACK      DS   CL10\n                 DS   X\n\nWORK_PAGE        DS   PL3\nWORK_LINE        DS   PL3\n\nWORK_PRINT_SPACE DS   C\nWORK_PRINT       DS   0CL133\nWORK_PRINT_CC    DS   C\nWORK_PRINT_DATA  DS   CL132\n\nWORK_HEADING     DS   CL133\n\nWORK_FLAGS       DS   X\n$WORK_TRACE      EQU  X'80'\n\nWORKAREA_L       EQU  *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFDEF        DSECT\nFDEF_NAME   DS    CL16                 FIELD NAME\nFDEF_DISP   DS    AL2                  DISPLACEMENT TO FIELD\nFDEF_TYPE   DS    C                    FIELD TYPE\nFDEF_LENGTH DS    AL2                  FIELD LENGTH\nFDEFL       EQU   *-FDEF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFLD         DSECT\nFLD_LABEL   DS    CL16'LABEL'\n            DS    CL2' '\nFLD_TYPE    DS    CL4'TYPE'\n            DS    CL2' '\nFLD_LENGTH  DS    CL4'LEN'\n            DS    CL2' '\nFLD_DISP    DS    CL4' '\n            DS    CL2' '\nFLD_VALUE   DS    CL8'VALUE'\nFLDL        EQU   *-FLD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n            TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB_CHAIN         DSECT\nLIB_CHAIN_EYE     DS   CL8\nLIB_CHAIN_NEXT    DS   A\nLIB_CHAIN_LENGTH  DS   F\nLIB_CHAIN_LIBRARIES DS 0C\nLIB_CHAIN_NAME    DS   CL8\nLIB_CHAIN_DESC    DS   CL80\nLIB_CHAIN_STATUS  DS   X\nLIB_CHAIN_PER_LEN EQU  *-LIB_CHAIN_NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               IFGACB AM=VTAM\nACBL           EQU    *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               IHAPSA LIST=NO\n* ------------------------------------------------------------------- *\n*              STC common area FDEFs                                  *\n* ------------------------------------------------------------------- *\nLIBTSNAP       CSECT\nTCOMM_FDEF     DS    0C\n               FDEF  BASE=LIBTCOMM\n               FDEF  COMMDWRD,X,4\n               FDEF  COMMDWRD+4,X,4\n               FDEF  COMMDXDA\n               FDEF  TRFIRST\n               FDEF  TRLAST\n               FDEF  TRCURR\n               FDEF  TRADDR\n               FDEF  TRSIZE\n               FDEF  ATMAIN\n               FDEF  ATDISP\n               FDEF  ATDLIB\n               FDEF  ATPARM\n               FDEF  ATDMEM\n               FDEF  ATSTAT\n               FDEF  ATVTAM\n               FDEF  ATTCP\n               FDEF  ATVMGR\n               FDEF  ALIBSPFD\n               FDEF  AISPLINK\n               FDEF  AUX01\n               FDEF  COMM_EXLST\n               FDEF  COMM_SERVER_HOST_NAME_LENGTH\n               FDEF  COMM_SERVER_PORT,X,2\n               FDEF  COMM_APPL_NAME_LENGTH,X,2\n               FDEF  COMM_APPL_NAME\n               FDEF  COMM_SERVER_APPL_ID\n               FDEF  COMM_SERVER_HOST_NAME+00,C,8\n               FDEF  COMM_SERVER_HOST_NAME+08,C,8\n               FDEF  COMM_SERVER_HOST_NAME+16,C,8\n               FDEF  COMM_LIBRARY_NAME\n               FDEF  COMM_MEMBER_NAME\n               FDEF  COMM_VERSION\n               FDEF  COMM_SOURCE_RECORDS\n               FDEF  COMMBLKN\n               FDEF  COMMPRI\n               FDEF  COMMSEC\n               FDEF  COMM_CONVERSATION_ID\n               FDEF  COMM_FLAGS\n               FDEF  COMM_RC\n               FDEF  COMMRACF,X,1\n               FDEF  COMMRACF,C,8\n               DC    X'FF'\nLIBCHAIN_FDEF  DS    0C\n               FDEF  BASE=LIB_CHAIN_NAME\n               FDEF  LIB_CHAIN_NAME\n               FDEF  LIB_CHAIN_DESC+00,C,8\n               FDEF  LIB_CHAIN_DESC+08,C,8\n               FDEF  LIB_CHAIN_DESC+16,C,8\n               FDEF  LIB_CHAIN_DESC+24,C,8\n               FDEF  LIB_CHAIN_DESC+32,C,8\n               FDEF  LIB_CHAIN_DESC+40,C,8\n               FDEF  LIB_CHAIN_DESC+48,C,8\n               FDEF  LIB_CHAIN_DESC+56,C,8\n               FDEF  LIB_CHAIN_DESC+64,c,8\n               FDEF  LIB_CHAIN_DESC+72,C,8\n               FDEF  LIB_CHAIN_STATUS\n               DC    X'FF'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD TYPE=DSECT\n         COPY    REGEQU\n         END     LIBTSNAP\n./ ADD NAME=LIBTSTAT 0100-09250-09250-0919-00155-00155-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTSTAT                                              *\n*                                                                     *\n*  Function:                                                          *\n*   Display the status of the STC                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTSTAT CSECT\nLIBTSTAT AMODE 31\nLIBTSTAT RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTSTAT,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     STAT0000\nMODID    DC    CL8'LIBTSTAT'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nSTAT0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTSTAT,R13                   DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         ICM   R1,15,SPF_TEXT_ADDR            SPF DYNAMIC AREA ADDRESS\n         BZ    STAT0010                       NONE\n         L     R0,SPF_TEXT_SIZE\n         FREEMAIN RU,                         FREE PREVIOUS AREA       +\n               a=(1),                                                  +\n               lv=(0)\n*---------------------------------------------------------------------*\n*        Get STC status info                                          *\n*---------------------------------------------------------------------*\nSTAT0010 DS    0H\n         L     R7,COMM_NETWORK_IO_AREA        I/O AREA ADDRESS\n         USING NETBLOK,R7                     DEFINE BASE\n         MVI   NET_FUNCTION,$NET_GET_STATUS\n         LA    R1,NETBLOKL\n         STH   R1,NET_LENGTH                  SET LENGTH\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   STAT0020\n         ITRACE ID=VTAMSEND\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     STAT0030\nSTAT0020 DS    0H\n         ITRACE ID=IP_SEND\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSTAT0030 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         BALR  R14,R15                        SEND\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   STAT0040\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     STAT0050\nSTAT0040 DS    0H\n         ITRACE ID=IP_RECV\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSTAT0050 DS    0H\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         BALR  R14,R15                        RECEIVE\n         TM    XTRFLAG,$XTRON                 EXTERNAL TRACE ON\n         BNO   STAT0060                       NO\n         PUT   XTRACE,NETBLOK\nSTAT0060 DS    0H\n         LA    R1,NET_DATA                    DATA ADDRESS\n         ST    R1,SPF_TEXT_ADDR               TEXT'S ADDRESS\n         SR    R2,R2                          CLEAR REGISTER\n         SR    R3,R3                          CLEAR REGISTER\n         ICM   R3,3,NET_LENGTH                LENGTH\n         SH    R3,=Y(NETBLOKL)                DATA LENGTH\n         ST    R3,SPF_TEXT_SIZE               LENGTH FOR DISPLAY\n         D     R2,F80                         NUMBER OF DATA LINES\n         ST    R3,SPF_TEXT_LINES              SET NUMBER OF LINES\n         MVC   SPF_TEXT_LINE_LENGTH,F80\n         XC    SPF_TEXT_OFFSET,SPF_TEXT_OFFSET\n         XC    SPF_TEXT_RELATIVE_LINE,SPF_TEXT_RELATIVE_LINE\n         MVC   SPF_PANEL,STATPANL             SET PANEL NAME\n         L     R15,ATDISP                     DISPLAY ENTRY POINT\n         BALR  R14,R15                        DISPLAY THE DATA\n         STH   R15,DXDRC\n         LTR   R15,R15                        RC = 0?\n         BZ    STAT0010                       YES, GET INFO AGAIN\n*---------------------------------------------------------------------*\n*        Clear the SPF text storage address and size.                 *\n*        The area is not FREEMAIN'd because LIBUSTAT returns          *\n*        the data already formatted in the network I/O area.          *\n*        We just set SPF_TEXT_ADDR to the address of NET_DATA.        *\n*        The network I/O area will be FREEMAIN'd when LIBTMAIN exits. *\n*---------------------------------------------------------------------*\n         XC    SPF_TEXT_ADDR,SPF_TEXT_ADDR\n         XC    SPF_TEXT_SIZE,SPF_TEXT_SIZE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0010 DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)                    RESTORE R14\n         LH    R15,DXDRC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTSTAT)                    DISPLACEMENT TO WORK AREA\nF80      DC    F'80'                          CONSTANT\nSTATPANL DC    CL8'STATPANL'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTSTAT DSECT\n         LIBSAVE  DSECT=NO\n         VTAMREQ  DSECT=NO\nDXDRC    DS       H\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBRECD  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      LIBTSTAT\n./ ADD NAME=LIBTTCP  0100-09250-09250-0919-00329-00329-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTTCP - TCP/IP FUNCTIONS                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTTCP  CSECT\nLIBTTCP  AMODE 31\nLIBTTCP  RMODE ANY\n         STM   R14,R12,12(R13)                 SAVE REGISTERS\n         LR    R12,R15                         SET BASE REGISTER\n         USING LIBTTCP,R12                     DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                    DEFINE COMMON AREA BASE\n         B     INIT0000\nMODID    DC    CL8'LIBTTCP'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LR    R10,R1                          COPY PARM BLOCK ADDRESS\n         USING VTAMREQ,R10                     DEFINE BASE\n         L     R1,COMMDXDA                     DXD AREA BASE\n         A     R1,DXDSTART                     PLUS DISPLACEMENT\n         ST    R13,4(R1)                       CHAIN CALLER'S SAVE AREA\n         ST    R1,8(R13)                       CHAIN OUR SAVE AREA\n         LR    R13,R1                          COPY DXD AREA ADDRESS\n         USING DXDTTCP,R13                     DEFINE DXD AREA BASE\n         CLC   DXDID,MODID                     DXD AREA INITIALIZED?\n         BE    INIT0010                        YES\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                     DXD AREA INITIALIZED\n         XC    DXD_LENGTH,DXD_LENGTH\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nINIT0010 DS    0H\n         L     R5,COMM_NETWORK_IO_AREA\n         USING NETBLOK,R5\n         CLI   VTAM_COMMAND,$VTAM_OPEN         OPEN?\n         BE    OPEN0000                        YES\n         CLI   VTAM_COMMAND,$VTAM_CLOSE        CLOSE?\n         BE    CLOSE000                        YES\n         CLI   VTAM_COMMAND,$VTAM_RECEIVE      RECEIVE?\n         BE    RECV0000                        YES\n         CLI   VTAM_COMMAND,$VTAM_SEND         SEND?\n         BE    SEND0000                        YES\n         ABEND 1,DUMP,,USER\n*---------------------------------------------------------------------*\n*        Initialize the TCP/IP environment                            *\n*---------------------------------------------------------------------*\nOPEN0000 DS    0H\n         ITRACE ID=INITAPI\n         MVC   DXD_TCPIP_FUNCTION,=CL16'INITAPI'\n         EZASMI TYPE=INITAPI,                                          +\n               MAXSNO=DXD_MAX_SOCKET,                                  +\n               SUBTASK=MODID,                                          +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +\n               ASYNC='NO',                                             +\n               ERROR=ERR0010,                                          +\n               TASK=DXD_TCPIP_TASK\n         TM    DXD_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         ITRACE ID=SOCKET\n         MVC   DXD_TCPIP_FUNCTION,=CL16'SOCKET'\n         EZASMI TYPE=SOCKET,                                           +\n               AF='INET',                                              +\n               SOCTYPE='STREAM',                                       +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +\n               TASK=DXD_TCPIP_TASK\n         TM    DXD_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         MVC   DXD_SOCKET,DXD_TCPIP_RETURN_CODE+2\n         ITRACE ID=SOCK_NBR,                                           +\n               DATA1=DXD_SOCKET\n*\n*     Setting the port to zero allows TCP/IP to choose any\n*     free port number\n*\n         XC    DXD_SOCKET_STRUCTURE,DXD_SOCKET_STRUCTURE\n         MVC   DXD_SOCKET_FAMILY,C_AF_INET\n         XC    DXD_SOCKET_PORT,DXD_SOCKET_PORT\n         ITRACE ID=BIND\n         MVC   DXD_TCPIP_FUNCTION,=CL16'BIND'\n         EZASMI TYPE=BIND,                                             +\n               S=DXD_SOCKET,                                           +\n               NAME=DXD_SOCKET_STRUCTURE,                              +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +\n               TASK=DXD_TCPIP_TASK\n         TM    DXD_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         ITRACE ID=GETHOST\n         MVC   DXD_TCPIP_FUNCTION,=CL16'GETHOSTBYNAME'\n         EZASMI TYPE=GETHOSTBYNAME,                                    +\n               NAMELEN=COMM_SERVER_HOST_NAME_LENGTH,                   +\n               NAME=COMM_SERVER_HOST_NAME,                             +\n               HOSTENT=DXD_HOSTENT,                                    +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERROR=DXD_TCPIP_ERROR_NUMBER\n         ITRACE ID=RC,                                                 +\n               DATA1=DXD_TCPIP_RETURN_CODE,                            +\n               DATA2=DXD_TCPIP_ERROR_NUMBER\n         TM    DXD_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         L     R1,DXD_HOSTENT\n         USING HOSTENT,R1\n         L     R2,HOSTENT_IP_LIST\n         L     R3,0(R2)\n         XC    DXD_PEER,DXD_PEER\n         MVC   DXD_PEER_AF,C_AF_INET\n         MVC   DXD_PEER_PORT,COMM_SERVER_PORT\n         MVC   DXD_PEER_IP_ADDRESS,0(R3)\n         ITRACE ID=CONNECT,                                            +\n               DATA1=DXD_PEER+00,                                      +\n               DATA2=DXD_PEER+08\n         MVC   DXD_TCPIP_FUNCTION,=CL16'CONNECT'\n         EZASMI TYPE=CONNECT,                                          +\n               S=DXD_SOCKET,                                           +\n               NAME=DXD_PEER,                                          +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER\n         TM    DXD_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nRECV0000 DS    0H\n         ITRACE ID=READ\n         MVC   DXD_TCPIP_FUNCTION,=CL16'READ'\n         EZASMI TYPE=READ,                                             +\n               S=DXD_SOCKET,                                           +\n               NBYTE=IOSIZE,                                           +\n               BUF=NETBLOK,                                            +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER\n         ICM   R1,15,DXD_TCPIP_RETURN_CODE\n         BM    ERR0010\n         STCM  R1,3,NET_LENGTH                RETURN LENGTH\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nSEND0000 DS    0H\n         ITRACE ID=WRITE\n         MVC   DXD_TCPIP_FUNCTION,=CL16'WRITE'\n         MVC   DXD_LENGTH+2(2),NET_LENGTH\n         EZASMI TYPE=WRITE,                                            +\n               S=DXD_SOCKET,                                           +\n               NBYTE=DXD_LENGTH,                                       +\n               BUF=NETBLOK,                                            +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER\n         TM    DXD_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCLOSE000 DS    0H\n         ITRACE ID=CLOSE\n         MVI   NET_FUNCTION,$NET_CLOSE\n         LA    R1,NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         MVC   DXD_LENGTH+2(2),NET_LENGTH\n         ITRACE ID=SEND_CLO\n         MVC   DXD_TCPIP_FUNCTION,=CL16'CLOSING WRITE'\n         EZASMI TYPE=WRITE,                                            +\n               S=DXD_SOCKET,                                           +\n               NBYTE=DXD_LENGTH,                                       +\n               BUF=NETBLOK,                                            +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER\n         ITRACE ID=CLS_SOCK\n         MVC   DXD_TCPIP_FUNCTION,=CL16'CLOSE'\n         EZASMI TYPE=CLOSE,                                            +\n               S=DXD_SOCKET,                                           +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER\n         ITRACE ID=TERMAPI\n         MVC   DXD_TCPIP_FUNCTION,=CL16'TERMAPI'\n         EZASMI TYPE=TERMAPI,                                          +\n               TASK=DXD_TCPIP_TASK\n         TM    DXD_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=TCP_ERR,                                            +\n               DATA1=DXD_TCPIP_FUNCTION,                               +\n               DATA2=DXD_TCPIP_ERROR_NUMBER\n         OI    COMM_FLAGS,$ABORT\n         GETMAIN RU,                                                   +\n               LV=MSG02L,                     <-- LONGEST MESSAGE      +\n               LOC=BELOW\n         LR    R3,R1                          COPY STORAGE ADDRESS\n\n         MVC   0(MSG01L,R3),MSG01\n         TPUT  (R3),MSG01L\n\n         MVC   0(MSG02L,R3),MSG02\n         MVC   MSG02_FNC-MSG02(L'MSG02_FNC,R3),DXD_TCPIP_FUNCTION\n         TPUT  (R3),MSG02L\n\n         MVC   0(MSG03L,R3),MSG03\n         UNPK  MSG03_RC-MSG03(9,R3),DXD_TCPIP_RETURN_CODE(5)\n         TR    MSG03_RC-MSG03(8,R3),HEXCHAR\n         MVI   MSG03_RC-MSG03+8(R3),C' '\n         TPUT  (R3),MSG03L\n\n         MVC   0(MSG04L,R3),MSG04\n         UNPK  MSG04_ERR-MSG04(9,R3),DXD_TCPIP_ERROR_NUMBER(5)\n         TR    MSG04_ERR-MSG04(8,R3),HEXCHAR\n         MVI   MSG04_ERR-MSG04+8(R3),C' '\n         TPUT  (R3),MSG04L\n\n         FREEMAIN RU,                                                  +\n               A=(R3),                                                 +\n               LV=MSG02L\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,DXD_RC                     SET RETURN CODE\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART  DC    Q(DXDTTCP)                    DISPLACEMENT TO DXD AREA\nIOSIZE    DC    A(COMMIOSZ)\nH0        DC    H'0'\nX000001   DC    X'00000001'\nC_AF_INET DC    X'0002'\n\nHEXCHAR   EQU   *-C'0'\n          DC    C'0123456789ABCDEF'\n\nMSG01     DC    CL11'LIBTTCP01E '\n          DC    C'TCP/IP error'\nMSG01L    EQU   *-MSG01\n\nMSG02     DC    Cl11'LIBTTCP02I '\n          DC    C'Function:     '\nMSG02_FNC DC    CL16' '\nMSG02L    EQU   *-MSG02\n\nMSG03     DC    CL11'LIBTTCP03I '\n          DC    C'Return code:  '\nMSG03_RC  DC    CL8' '\n          DC    C' '\nMSG03L    EQU   *-MSG03\n\nMSG04     DC    CL11'LIBTTCP04I '\n          DC    C'Error number: '\nMSG04_ERR DC    CL8' '\n          DC    C' '\nMSG04L    EQU   *-MSG04\n          LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTTCP                  DSECT\n                         LIBSAVE DSECT=NO\nDXD_HOSTENT              DS    A\nDXD_TCPIP_RETURN_CODE    DS    F\nDXD_TCPIP_ERROR_NUMBER   DS    F\nDXD_LENGTH               DS    F\n\nDXD_MAX_SOCKET           DS    H\nDXD_SOCKET               DS    H\nDXD_RC                   DS    H\n\nDXD_PEER                 DS    0F,0XL16\nDXD_PEER_AF              DS    XL2\nDXD_PEER_PORT            DS    XL2\nDXD_PEER_IP_ADDRESS      DS    F\nDXD_PEER_RESERVED        DS    XL8\n\n                         DS    0F\nDXD_SOCKET_STRUCTURE     DS    0XL16\nDXD_SOCKET_FAMILY        DS    AL2           FAMILY (ALWAYS = 2)\nDXD_SOCKET_PORT          DS    XL2           PORT NUMBER\nDXD_SOCKET_CLIENT_IP     DS    XL4           CLIENT'S IP ADDRESS\n                         DS    XL8           RESERVED\n\nDXD_TCPIP_FUNCTION       DS    CL16\nDXD_TCPIP_TASK           EZASMI TYPE=TASK,STORAGE=CSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHOSTENT                  DSECT\nHOSTENT_HOSTNAME_ADDRESS DS  A\nHOSTENT_ALIAS_LIST       DS  A\nHOSTENT_FAMILY           DS  XL4\nHOSTENT_IP_LIST_LENGTH   DS  XL4\nHOSTENT_IP_LIST          DS  A\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         EZASMI   TYPE=GLOBAL,STORAGE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         VTAMREQ  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBTTCP\n./ ADD NAME=LIBTUNDO 0100-09250-09250-0919-00176-00176-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTUNDO                                              *\n*                                                                     *\n*  Function:                                                          *\n*   Reset CHECK-OUT status                                            *\n*                                                                     *\n*   At times a user may check-out a member and never make any         *\n*   updates.  They can either check-in the member or 'undo'           *\n*   the check-out.  Only the user that has the member checked-out     *\n*   may 'UNDO' the check-out status.  ADMINs can use the \"A\"          *\n*   line command.                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTUNDO CSECT\nLIBTUNDO AMODE 31\nLIBTUNDO RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING PSA,R0\n         USING LIBTUNDO,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     INIT0000\nMODID    DC    CL8'LIBTUNDO'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTUNDO,R13                   DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\n         XC    DXD_RC,DXD_RC\n*---------------------------------------------------------------------*\n*        Reset the member's CHECK_OUT status                          *\n*---------------------------------------------------------------------*\n         ITRACE ID=UNDO\n         MVC   SPF_COMM1,COMM_BLANKS\n         MVC   SPF_COMM2,COMM_BLANKS\n         MVC   SPF_COMM3,COMM_BLANKS\n         MVC   SPF_COMM4,COMM_BLANKS\n         MVC   SPF_COMM5,COMM_BLANKS\n         MVI   NET_FUNCTION,$NET_CHECK_IN_AUTH\n         MVI   NET_FUNCTION,$NET_UNDO         SET FUNCTION\n         LA    R1,NET_UNDO_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK        OK?\n         BE    EXIT0000                       YES\n         B     ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         ITRACE ID=IP_SEND,                                            +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0010\n         ITRACE ID=VTAMSEND\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0020\nSEND0010 DS    0H\n         ITRACE ID=IP_SEND\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   SPF_MSG1,NET_MSG_1\n         MVC   SPF_MSG2,NET_MSG_2\n         MVC   SPF_MSG3,NET_MSG_3\n         MVC   SPF_MSG4,NET_MSG_4\n         MVC   SPF_MSG5,NET_MSG_5\n         MVI   DXD_RC+1,X'12'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR PRIMARY COMMAND\n         LH    R15,DXD_RC                     SET RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTUNDO)                    DISPLACEMENT TO WORK AREA\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTUNDO DSECT\nDXD_RC   DS      H\n         LIBSAVE DSECT=NO\n         VTAMREQ DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 NETBLOK DSECT=YES\nNET_LIB_NAME     DS  CL8\nNET_MEM_NAME     DS  CL8\nNET_MEM_VERSION  DS  XL2\nNET_MEM_DOC      DS  0C\nNET_UNDO_LENGTH  EQU *-NETBLOK\n                 ORG NET_DATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBRECD DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA  DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB  AM=VTAM\nACBL     EQU     *-IFGACB\n         LIBBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBTUNDO\n./ ADD NAME=LIBTVER  0100-09250-09250-0919-00225-00225-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTVER                                               *\n*                                                                     *\n*  Function:                                                          *\n*   Create new version                                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTVER  CSECT\nLIBTVER  AMODE 31\nLIBTVER  RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTVER,R12                    DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     INIT0000\nMODID    DC    CL8'LIBTVER'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTVER,R13                    DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\n         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND\nVER0100  DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SPF_OPTION,COMM_BLANKS         INITIALIZE THE REPLY\n         MVC   SPF_PANEL,VERPANEL             SET PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDRESS\n         BALR  R14,R15                        DISPLAY THE PANEL\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=SPF_OPTION\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE(S)\n         MVC   SPF_MSG2,COMM_BLANKS\n         MVC   SPF_MSG3,COMM_BLANKS\n         MVC   SPF_MSG4,COMM_BLANKS\n         MVC   SPF_MSG5,COMM_BLANKS\n         LTR   R15,R15                        ZERO?\n         BNZ   VER0300                        NO\n         CLC   SPF_OPTION,=C'Y   '            CONFIRMED?\n         BE    VER0200                        YES\n         CLC   SPF_OPTION,=C'YES '            CONFIRMED?\n         BE    VER0200                        YES\n         CLC   SPF_OPTION,=C'N   '            DON'T CREATE NEW VERSION?\n         BE    VER0300                        CORRECT\n         CLC   SPF_OPTION,=C'NO  '            DON'T CREATE NEW VERSION?\n         BE    VER0300                        CORRECT\n         MVC   SPF_MSG1(MSG03L),MSG03\n         B     VER0100\nVER0200  DS    0H\n         ITRACE ID=CHKAUTH\n         MVI   NET_FUNCTION,$NET_NEW_VERSION\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         XC    NET_NEW_VERSION,NET_NEW_VERSION\n         LA    R1,NET_NEW_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK        SUCCESSFUL?\n         BNE   ERR0010                        NO\n         MVC   SPF_MSG1(MSG01L),MSG01\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,NET_NEW_VERSION\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    SPF_MSG1+(MSG01_VER-MSG01)(L'MSG01_VER),DXD_DWORD+5\n         LA    R15,4                          SET RC\n         B     EXIT0000\nVER0300  DS    0H\n         ITRACE ID=ABORT\n         MVC   SPF_MSG1(MSG02L),MSG02\n         B     EXIT0000\nERR0010  DS    0H\n         MVC   SPF_MSG1,NET_MSG_1\n         MVC   SPF_MSG2,NET_MSG_2\n         MVC   SPF_MSG3,NET_MSG_3\n         MVC   SPF_MSG4,NET_MSG_4\n         MVC   SPF_MSG5,NET_MSG_5\n         LA    R15,4\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0010\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0020\nSEND0010 DS    0H\n         ITRACE ID=IP_SEND,                                            +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART  DC   Q(DXDTVER)                     DISPLACEMENT TO WORK AREA\n\nDISPLAY   DC   CL8'DISPLAY'\n\nVERPANEL  DC   CL8'VERPANEL'\nMSG01     DS   0C\n          DC   CL11'LIBTVER01I'\n          DC   C'Highest version is now '\nMSG01_VER DC   X'402020202120'\nMSG01L    EQU  *-MSG01\n\nMSG02     DS   0C\n          DC   CL11'LIBTVER02W'\n          DC   C'New version aborted'\nMSG02L    EQU  *-MSG02\nMSG03     DS   0C\n          DC   CL11'LIBTVER03E'\n          DC   C'Invalid confirmation reply.  Enter Y(es) or N(o)'\nMSG03L    EQU  *-MSG03\n\n          LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTVER       DSECT\n              LIBSAVE DSECT=NO\n\nDXD_DWORD     DS      D\nDXD_SPF_PARMS DS      0A\nDXD_SPF_1     DS      A\nDXD_SPF_2     DS      A\n\n              VTAMREQ DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              TCOMM   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              LIBSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              NETBLOK DSECT=YES\nNET_LIB_NAME          DS  CL8\nNET_MEM_NAME          DS  CL8\nNET_NEW_VERSION       DS  XL2\nNET_NEW_LENGTH        EQU *-NETBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              LIBRECD DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              IFGACB  AM=VTAM\nACBL          EQU     *-IFGACB\n              LIBBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DCBD    DSORG=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              IHAPSA  DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBTVER\n./ ADD NAME=LIBTVIEW 0100-09250-09250-0919-00616-00616-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTVIEW                                              *\n*                                                                     *\n*  Function:                                                          *\n*   View a member.  This function allows a user to obtain a copy      *\n*   of a member.  The member does not have to be in \"CHECKED IN\"      *\n*   status.  VIEWing a member does not change the status to           *\n*   \"CHECKED OUT\".                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTVIEW CSECT\nLIBTVIEW AMODE 31\nLIBTVIEW RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTVIEW,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     INIT0000\nMODID    DC    CL8'LIBTVIEW'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         L     R2,COMMDXDA                    WORK AREA BASE\n         A     R2,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R2                         COPY WORK AREA ADDRESS\n         USING DXDTVIEW,R13                   DEFINE WORK AREA BASE\n         L     R10,ALIBSPFD                   SPF DATA ADDRESS\n         USING LIBSPFD,R10\n         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\n         XC    DXD_AUX01,DXD_AUX01            INIT EXIT ENTRY POINT\n*---------------------------------------------------------------------*\n*        Verify the user is authorized                                *\n*---------------------------------------------------------------------*\n         MVI   NET_FUNCTION,$NET_CHECK_VIEW_AUTH\n         BAL   R8,SEND0000\n         BAL   R8,RECV0000\n         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?\n         BNE   ERR0020                        NO\n         MVC   DXD_SOURCE_RECORDS,NET_SOURCE_RECORDS\n         MVC   COMM_SOURCE_RECORDS,NET_SOURCE_RECORDS\n*---------------------------------------------------------------------*\n*        Display the view panel                                       *\n*---------------------------------------------------------------------*\nVIEW0000 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SPF_PANEL,VPANEL               SET PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDRESS\n         BALR  R14,R15                        DISPLAY THE PANEL\n         STH   R15,DXD_DISPLAY_RC             SAVE RETURN CODE\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE\n         LTR   R15,R15                        ZERO?\n         BNZ   EXIT0000                       NO\n*---------------------------------------------------------------------*\n*        Determine the output dataset DSORG                           *\n*---------------------------------------------------------------------*\n         MVC   SUB0001_PARM_DSN,SPF_USER_DSN\n         LA    R1,SUB0001_PARM_LIST           SUB0001 PARM LIST ADDRESS\n         L     R15,VSUB0001                   SUB0001 ENTRY POINT\n         ITRACE ID=CALLSUB1,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                        CALL SUB0001\n         ITRACE ID=DSORG,                                              +\n               DATA1=SUB0001_PARM_DSORG\n         CLI   SUB0001_PARM_DSORG,C'S'\n         BE    VIEW0010                       SEQUENTIAL\n         CLI   SUB0001_PARM_DSORG,C'P'\n         BE    VIEW0020                       PARTITIONED\n         CLI   SUB0001_PARM_DSORG,C'X'\n         BE    VIEW0080                       UNCATALOGED\n         MVC   SPF_MSG1(MSG01L),MSG01\n         B     VIEW0000                       RE-SEND WITH MESSAGE\nVIEW0010 DS    0H\n         ITRACE ID=SEQ\n         CLC   SPF_USER_MEMBER,COMM_BLANKS\n         BE    VIEW0040\n         MVC   SPF_MSG1(MSG03L),MSG03\n         B     VIEW0000                       RE-SEND WITH MESSAGE\nVIEW0020 DS    0H\n         ITRACE ID=PDS\n         CLC   SPF_USER_MEMBER,COMM_BLANKS\n         BNE   VIEW0030\n         ITRACE ID=NOMEM\n         MVC   SPF_MSG1(MSG04L),MSG04\n         B     VIEW0000                       RE-SEND WITH MESSAGE\nVIEW0030 DS    0H\n         OI    DXD_FLAG,$NO_MEMBER            NO MEMBER\n         BAL   R8,DAIR0100                    ALLOCATE EXISTING FILE\n         NI    DXD_FLAG,255-$NO_MEMBER\n         ITRACE ID=VERMEM                     VERIFYING MEMBER EXISTS\n         GETMAIN RU,                                                   +\n               LV=PODCBL,                                              +\n               LOC=BELOW\n         LR    R3,R1                          SAVE ADDRESS\n         MVC   0(PODCBL,R3),PODCBI            INITIALIZE THE DCB\n         GETMAIN RU,                                                   +\n               LV=OPENL,                                               +\n               LOC=BELOW\n         LR    R2,R1                          SAVE ADDRESS\n         MVC   0(OPENL,R2),OPENI              INITIALIZE OPEN\n         OPEN  ((R3),INPUT),                                           +\n               MODE=31,                                                +\n               MF=(E,(R2))\n         FIND  (R3),                                                   +\n               SPF_USER_MEMBER,                                        +\n               D\n         STH   R15,DXD_FIND_RC\n         MVC   0(CLOSEL,R2),CLOSEI\n         CLOSE ((R3)),                                                 +\n               MF=(E,(R2)),                                            +\n               MODE=31\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=OPENL\n         FREEMAIN RU,                                                  +\n               A=(R3),                                                 +\n               LV=PODCBL\n         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)\n         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS\n         L     R15,VSUB0004\n         BALR  R14,R15\n         OC    DXD_FIND_RC,DXD_FIND_RC\n         BNZ   VIEW0070                       MEMBER DOES NOT EXIST\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    The output dataset (or PDS member) already exists.               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVIEW0040 DS    0H\n         ITRACE ID=EXISTS\n         TM    SUB0001_PARM_RECFM,DS1RECFV\n         BO    VIEW0050\n         CLC   SUB0001_PARM_LRECL,H80\n         BE    VIEW0060\n         MVC   SPF_MSG1(MSG10L),MSG10\n         B     VIEW0000\nVIEW0050 DS    0H\n         MVC   SPF_MSG1(MSG09L),MSG09\n         B     VIEW0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    Make sure the user wants to replace/over-write it.               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVIEW0060 DS    0H\n         CLC   SPF_OPTION,=C'YES '            REPLACE/OVER-WRITE?\n         BE    VIEW0070                       YES\n         CLC   SPF_OPTION,=C'Y   '            LAZY PERSON?\n         BE    VIEW0070                       YES\n         MVC   SPF_MSG1(MSG05L),MSG05         SET MESSAGE\n         B     VIEW0000                       RE-ISSUE WITH MESSAGE\n* ------------------------------------------------------------------- *\nVIEW0070 DS    0H\n         BAL   R8,DAIR0100                    ALLOCATE OUTPUT DATASET\n         B     VIEW0100\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nVIEW0080 DS    0H\n         CLC   SPF_USER_MEMBER,COMM_BLANKS\n         BE    VIEW0090\n         MVC   SPF_MSG1(MSG02L),MSG02\nVIEW0090 DS    0H\n         ITRACE ID=DISPLAY2\n         MVC   SPF_PANEL,ALOPANEL             SET PANEL NAME\n         LA    R1,DISPLAY                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS\n         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS\n         ST    R1,DXD_SPF_2                   SET ADDRESS\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF INTERFACE ADDRESS\n         BALR  R14,R15                        DISPLAY THE PANEL\n         ITRACE ID=DISPRC,                                             +\n               RDATA1=R15\n         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE\n         BAL   R8,DAIR0200\n*---------------------------------------------------------------------*\n*                                                                     *\n*     The output dataset (or PDS member) has been allocated.          *\n*                                                                     *\n*     OPEN the output dataset.                                        *\n*                                                                     *\n*---------------------------------------------------------------------*\nVIEW0100 DS    0H\n         ITRACE ID=OPENOUT\n         GETMAIN RU,                                                   +\n               LV=PSDCBL,                                              +\n               LOC=BELOW\n         LR    R7,R1                          COPY DCB ADDRESS\n         USING IHADCB,R7\n         MVC   0(PSDCBL,R7),PSDCBI            INITIALIZE DCB\n         TM    DXD_FLAG,$SET_BLKSIZE          SET BLOCK SIZE?\n         BNO   VIEW0110                       NO\n         MVC   DCBBLKSI,H4000\nVIEW0110 DS    0H\n         GETMAIN RU,                                                   +\n               LV=OPENL,                                               +\n               LOC=BELOW\n         LR    R6,R1                          COPY ADDRESS\n         MVC   0(OPENL,R6),OPENI              INITIALIZE PARM LIST\n         OPEN  ((R7),OUTPUT),                                          +\n               MF=(E,(R6)),                                            +\n               MODE=31\n*---------------------------------------------------------------------*\n*                                                                     *\n*     GETMAIN the output dataset I/O area and initialize the          *\n*     parameter list for the de-compression subroutine.               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=ANY\n         ST    R1,UX01_EXPANDED_BUFFER\n         LA    R1,DXD_EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,NET_DATA\n         ST    R1,UX01_COMPRESSED_BUFFER\n         LA    R1,DXD_COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n         OC    DXD_AUX01,DXD_AUX01\n         BNZ   VIEW0120\n         LOAD  EP=LIBUX01\n         ST    R0,DXD_AUX01\n*---------------------------------------------------------------------*\n*     Get source from library, de-compress, write to output dataset   *\n*---------------------------------------------------------------------*\nVIEW0120 DS    0H\n         ITRACE ID=GETSRC\n         MVI   NET_FUNCTION,$NET_VIEW_SOURCE\n         BAL   R8,SEND0000                    SEND\n         BAL   R8,RECV0000                    RECEIVE\n         CLI   NET_RETURN_CODE,$NET_ERROR\n         BE    ERR0010                        YES\n         CLI   NET_RETURN_CODE,$NET_EOF\n         BE    VIEW0200                       YES\n         ITRACE ID=DECOMPRESS\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,NET_LENGTH                LENGTH OF DATA\n         SH    R1,=Y(NETBLOKL)                MINUS HEADER LENGTH\n         ST    R1,DXD_COMPRESSED_LENGTH       LENGTH OF COMPRESSED DATA\n         L     R4,DXD_SOURCE_RECORDS          NUMBER OF SOURCE RECORDS\n         CH    R4,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?\n         BL    VIEW0130                       NO\n         LH    R4,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER\nVIEW0130 DS    0H                             CLEAR FOR RECORD COUNT\n         ST    R4,DXD_CURRENT_RECORDS         NUMBER IN CURRENT BUFFER\n         L     R1,DXD_SOURCE_RECORDS          NUMBER OF RECORDS LEFT\n         SR    R1,R4                          MINUS NUMBER IN BUFFER\n         ST    R1,DXD_SOURCE_RECORDS          SAVE REMAINDER\n         MH    R4,H80                         NUMBER * LENGTH\n         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH\n         MVI   UX01_FUNCTION,$UX01_DECOMPRESS\n         LA    R1,UX01_PARMS\n         L     R15,DXD_AUX01                  USER EXIT 1 ENTRY POINT\n         BALR  R14,R15                        ALLOW DECOMPRESSION\n         L     R2,UX01_EXPANDED_BUFFER        BUFFER ADDRESS\n         L     R4,DXD_CURRENT_RECORDS         NUMBER OF RECORDS\n         ITRACE ID=USERPUT,                                            +\n               RDATA1=R4                      NUMBER OF RECORDS\nVIEW0140 DS    0H\n         PUT   (R7),(R2)                      WRITE TO USER'S DATA SET\n         LA    R2,80(R2)                      NEXT RECORD\n         BCT   R4,VIEW0140                    LOOP\n         ITRACE ID=BUFFDONE                   BUFFER HAS BEEN WRITTEN\n         B     VIEW0120                       ASK FOR NEXT BLOCK\nVIEW0200 DS    0H\n         ITRACE ID=EOF\n         MVC   0(CLOSEL,R6),CLOSEI\n         CLOSE ((R7)),                                                 +\n               MF=(E,(R6)),                                            +\n               MODE=31\n         FREEMAIN RU,                                                  +\n               A=(R7),                                                 +\n               LV=PSDCBL\n         FREEMAIN RU,                                                  +\n               A=(R6),                                                 +\n               LV=OPENL\n         L     R1,UX01_EXPANDED_BUFFER        COMPRESS INPUT BUFFER\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDAIR0100 DS    0H\n         ITRACE ID=DAIRALE\n         XC    DAIRREQ(DAIRL),DAIRREQ\n         MVI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING DATASET\n         MVC   DAIR_DD,LIBTEMP                SET DDNAME\n         MVC   DAIR_DSN,SPF_USER_DSN\n         MVC   DAIR_MEMBER,COMM_BLANKS        CLEAR MEMBER NAME\n         TM    DXD_FLAG,$NO_MEMBER            ALLOCATE MEMBER?\n         BO    DAIR0210                       NO\n         MVC   DAIR_MEMBER,SPF_USER_MEMBER\n         B     DAIR0210\n* ------------------------------------------------------------------- *\nDAIR0200 DS    0H\n         ITRACE ID=DAIR_NEW                   ALLOCATE NEW DATASET\n         OI    DXD_FLAG,$SET_BLKSIZE\n         XC    DAIRREQ(DAIRL),DAIRREQ\n         MVI   DAIR_CMD,$DAIR_NEW             ALLOCATE NEW\n         MVC   DAIR_DD,LIBTEMP                SET DDNAME\n         MVC   DAIR_DSN,SPF_USER_DSN\n         MVC   DAIR_MEMBER,SPF_USER_MEMBER\n         MVC   DAIRUNIT,SPF_UNIT\n         MVC   DAIRBLKN,COMMBLKN              SET BLOCK LENGTH\n         MVC   DAIRPRI,COMMPRI                SET PRIMARY QUANTITY\n         MVC   DAIRSEC,COMMSEC                SET SECONDARY QUANTITY\n         ITRACE ID=SPACE,                                              +\n               DATA1=COMMPRI,                                          +\n               DATA2=COMMSEC\n* ------------------------------------------------------------------- *\nDAIR0210 DS    0H\n         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS\n         L     R15,VSUB0004\n         BALR  R14,R15\n         ITRACE ID=DAIR_R15,                                           +\n               DATA1=DAIR_R15\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BZR   R8                             YES\nDAIR0230 DS    0H\n         ITRACE ID=DAIRFAIL\n         MVC   SPF_MSG1(MSG06L),MSG06\n         MVC   SPF_MSG2(MSG07L),MSG07\n         UNPK  DXD_UNPACK(5),DAIR_R15(3)\n         MVZ   DXD_UNPACK(4),HEXZERO\n         TR    DXD_UNPACK(4),HEXCHAR\n         MVC   SPF_MSG2+(MSG07R15-MSG07)(L'MSG07R15),DXD_UNPACK\n         UNPK  DXD_UNPACK(5),DAIR_ERROR(3)\n         MVZ   DXD_UNPACK(4),HEXZERO\n         TR    DXD_UNPACK(4),HEXCHAR\n         MVC   SPF_MSG2+(MSG07ERR-MSG07)(L'MSG07ERR),DXD_UNPACK\n         UNPK  DXD_UNPACK(5),DAIR_INFO(3)\n         MVZ   DXD_UNPACK(4),HEXZERO\n         TR    DXD_UNPACK(4),HEXCHAR\n         MVC   SPF_MSG2+(MSG07INFO-MSG07)(L'MSG07INFO),DXD_UNPACK\n         L     R15,VDAIRMSG\n         USING DAIR_MSG,R15                   DEFINE BASE\nDAIR0240 DS    0H\n         CLI   0(R15),X'FF'                   END OF TABLE?\n         BER   R8                             YES, NO MORE INFO\n         CLC   DAIR_MSG_CODE,DAIR_R15\n         BE    DAIR0250                       FOUND IT\n         A     R15,DAIR_MSG_LENGTH            LENGTH OF THIS ENTRY\n         B     DAIR0240\nDAIR0250 DS    0H\n         LH    R14,DAIR_MSG_NBR               NBR OF LINES OF MESSAGE\n         CH    R14,H3                         MORE THAN WE CAN DISPLAY?\n         BNH   DAIR0260                       NO\n         LH    R14,H3                         LIMIT TO 3 LINES\nDAIR0260 DS    0H\n         LA    R1,DAIR_MSG_TEXT               FIRST LINE OF TEXT\n         LA    R2,SPF_MSG3                    FIRST MSG (ACTUALLY MSG3)\nDAIR0270 DS    0H\n         MVC   0(L'SPF_MSG3_ID,R2),MSG08ID\n         MVC   10(L'SPF_MSG3_TEXT,R2),0(R1)\n         LA    R1,L'DAIR_MSG_TEXT(R1)\n         LA    R2,L'SPF_MSG3(R2)\n         BCT   R14,DAIR0270\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME\n         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME\n         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION\n         LA    R1,NET_CHECK_OUT_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SEND0010\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     SEND0020\nSEND0010 DS    0H\n         ITRACE ID=IP_SEND,                                            +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nSEND0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   RECV0010\n         ITRACE ID=VTAMRECV\n         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT\n         B     RECV0020\nRECV0010 DS    0H\n         ITRACE ID=IP_READ\n         L     R15,ATTCP                      LIBTTCP ENTRY POINT\nRECV0020 DS    0H\n         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND\n         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR\n         BALR  R14,R15                        LINK TO LIBTVTAM\n         ITRACE ID=RECEIVED,                                           +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA\n         BR    R8\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NOTEOF\n         DC    H'0'\nERR0020  DS    0H\n         ITRACE ID=NOTAUTH\n         MVC   SPF_MSG1,NET_MSG_1\n         MVC   SPF_MSG2,NET_MSG_2\n         MVC   SPF_MSG3,NET_MSG_3\n         MVC   SPF_MSG4,NET_MSG_4\n         MVC   SPF_MSG5,NET_MSG_5\n         MVI   DXD_DISPLAY_RC+1,X'01'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=RELEASE\n         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)\n         MVC   DAIR_DSN,LIBTEMP               SET DDNAME\n         LA    R1,DAIRREQ                     REQUEST BLOCK ADDRESS\n         L     R15,VSUB0004                   DAIR ENTRY POINT\n         BALR  R14,R15                        LINK TO SUBROUTINE\nEXIT0010 DS    0H\n         OC    DXD_AUX01,DXD_AUX01            USER EXIT LOADED?\n         BZ    EXIT0020                       NO\n         DELETE EP=LIBUX01\n         XC    DXD_AUX01,DXD_AUX01            CLEAR THE ADDRESS\nEXIT0020 DS    0H\n         LH    R15,DXD_DISPLAY_RC             SET RETURN CODE\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDTVIEW)                    DISPLACEMENT TO WORK AREA\nVTVIEW   DC    V(LIBTVIEW)\nVSUB0001 DC    V(SUB0001)\nVSUB0004 DC    V(SUB0004)\nVPANEL   DC    CL8'VPANEL'\nVDAIRMSG DC    CL8'VDAIRMSG'\nALOPANEL DC    CL8'ALOPANEL'\nDISPLAY  DC    CL8'DISPLAY'\nLIBTEMP  DC    CL8'LIBTEMP'\n\nPODCBI   DCB   DSORG=PO,                                               +\n               DDNAME=LIBTEMP,                                         +\n               MACRF=R\nPODCBL   EQU   *-PODCBI\nPSDCBI   DCB   DSORG=PS,                                               +\n               DDNAME=LIBTEMP,                                         +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               MACRF=PM\nPSDCBL   EQU   *-PSDCBI\n\nOPENI    OPEN  (*,INPUT),MF=L,MODE=31\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MF=L,MODE=31\nCLOSEL   EQU   *-CLOSEI\n\nH3       DC    H'3'\nH80      DC    H'80'\nH4000    DC    H'4000'\n\nHEXZERO  DC    XL4'00'\nHEXCHAR  DC    C'0123456789ABCDEF'\n\nMSG01    DC    CL11'LIBVIEW01E'\n         DC    C'Your dataset must be sequential or partitioned'\nMSG01L   EQU   *-MSG01\nMSG02    DC    CL11'LIBVIEW02E'\n         DC    C'New dataset will be sequential, member name ignored'\nMSG02L   EQU   *-MSG02\nMSG03    DC    CL11'LIBVIEW03E'\n         DC    C'Member name not allowed if dataset is sequential'\nMSG03L   EQU   *-MSG03\nMSG04    DC    CL11'LIBVIEW04E'\n         DC    C'Member name is required when dataset is partitioned'\nMSG04L   EQU   *-MSG04\nMSG05    DC    CL11'LIBVIEW05E'\n         DC    C'Dataset (or member) already exists.  Not overwritten'\nMSG05L   EQU   *-MSG05\nMSG06    DC    CL11'LIBVIEW06E'\n         DC    C'Output data set allocation failed.'\nMSG06L   EQU   *-MSG06\nMSG07    DC    CL11'LIBVIEW07I'\n         DC    C'R15='\nMSG07R15 DC    CL4' '\n         DC    C', ERROR='\nMSG07ERR DC    CL4' '\n         DC    C', INFO='\nMSG07INFO DC    CL4' '\nMSG07L   EQU   *-MSG07\nMSG08ID  DC    CL11'LIBVIEW08I'\nMSG09    DC    CL11'LIBVIEW09E'\n         DC    C'Output dataset must have RECFM=F or FB'\nMSG09L   EQU   *-MSG09\nMSG10    DC    CL11'LIBVIEW10E'\n         DC    C'Output dataset must have LRECL=80'\nMSG10L   EQU   *-MSG10\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTVIEW      DSECT\n              LIBSAVE DSECT=NO\n              DAIRREQ DSECT=NO\n              VTAMREQ DSECT=NO\n              UX01PARM DSECT=NO\n\nDXD_AUX01             DS   A\n\nDXD_SPF_PARMS         DS  0F\nDXD_SPF_1             DS   F\nDXD_SPF_2             DS   F\n\nDXD_EXPANDED_LENGTH   DS   A           LENGTH OF EXPANDED DATA\nDXD_COMPRESSED_LENGTH DS   A           LENGTH OF COMPRESSED DATA\n\nDXD_SOURCE_RECORDS    DS   F           NUMBER OF RECORDS IN SOURCE\nDXD_CURRENT_RECORDS   DS   F           NUMBER OF RECORDS IN BUFFER\n\nSUB0001_PARM_LIST     DS   0A\nSUB0001_PARM_DSN      DS   CL44\nSUB0001_PARM_DSORG    DS   C\nSUB0001_PARM_RECFM    DS   C\nSUB0001_PARM_LRECL    DS   XL2\n\nDXD_FIND_RC           DS   H           RETURN CODE FROM DISPLAY\nDXD_DISPLAY_RC        DS   H           RETURN CODE FROM DISPLAY\n\nDXD_FLAG              DS   X\n$NO_MEMBER            EQU  X'80'       .. ALLOCATE W/O MEMBER\n$SET_BLKSIZE          EQU  X'40'       .. SET BLOCK SIZE IN DCB\n\nDXD_UNPACK            DS   XL5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBSPFD TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK DSECT=YES\nNET_LIB_NAME            DS  CL8\nNET_MEM_NAME            DS  CL8\nNET_MEM_VERSION         DS  XL2\nNET_CHECK_OUT_LENGTH    EQU *-NETBLOK\n         ORG            NET_DATA\nNET_SOURCE_RECORDS      DS  XL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBRECD DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDAIR_MSG                DSECT\nDAIR_MSG_LENGTH         DS  AL2\nDAIR_MSG_CODE           DS  XL6\nDAIR_MSG_NBR            DS  AL2\nDAIR_MSG_TEXT           DS  CL80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB  AM=VTAM\nACBL     EQU     *-IFGACB\n         LIBBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DCBD    DSORG=PS\n         IHAPSA  DSECT=YES,LIST=NO\n         IECSDSL1 1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$MAX_SOURCE_SIZE EQU 8000\n         COPY REGEQU\n         END  LIBTVIEW\n./ ADD NAME=LIBTVMGR 0100-09250-09250-0919-00293-00293-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTVMGR                                              *\n*                                                                     *\n*  Define or delete SPF variables.                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTVMGR CSECT\nLIBTVMGR AMODE 31\nLIBTVMGR RMODE ANY\n         USING LIBTVMGR,R12                   DEFINE BASE\n         USING LIBTCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000\nMODID    DC    CL8'LIBTVMGR'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n* ------------------------------------------------------------------- *\n         LR    R9,R1                          COPY PARM LIST ADDRESS\n         USING VARREQ,R9                      DEFINE BASE\n         L     R10,COMMDXDA                   WORK AREA BASE\n         A     R10,DXDSTART                   PLUS DISPLACEMENT\n         USING DXDTVAR,R10                    DEFINE WORK AREA BASE\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         LA    R2,DXDSAVE                     OUR SAVE AREA ADDRESS\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      OUR SAVE AREA TO CALLER'S\n         LR    R13,R2                         SET SAVE AREA ADDRESS\n* ------------------------------------------------------------------- *\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    IDENTIFY AREA\n         ITRACE ID=ENTRY,                     TRACE ENTRY              +\n               DATA1=VARCMD                   .. SAVE THE COMMAND\n         MVC   DXD_VAR_NAMES(VAR_NAME_L),VAR_NAME_I\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVAR0010  DS    0H\n         CLI   VARCMD,$VARDEF                 DEFINE VARIABLES?\n         BE    VAR0100                        YES\n         CLI   VARCMD,$VARDEL                 DELETE VARIABLE?\n         BE    VAR0200                        YES\n         SR    R5,R5\n         ICM   R5,1,VARCMD\n         ITRACE ID=BADCMD\n         ABEND 11,DUMP,,USER                  BAD COMMAND\n* ------------------------------------------------------------------- *\n*        PROCESS DEFINE COMMANDS                                      *\n* ------------------------------------------------------------------- *\nVAR0100  DS    0H\n         ITRACE ID=DEFINE,                    DEFINE VARIABLES         +\n               RDATA1=R8,                     .. FIRST VARIABLE ID     +\n               RDATA2=R7                      .. NUMBER OF VARIABLES\n         L     R6,VARTBLE                     FIRST VARIABLE\nVAR0110  DS    0H\n         USING VAR_DSECT,R6                   DEFINE BASE\n         TM    VAR_FLAGS,$VAR_DEFINED         VARIABLE ALREADY DEFINED?\n         BO    VAR0120                        YES\n         LA    R1,VDEFINE                     COMMAND'S ADDRESS\n         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST\n         LA    R1,VAR_NAME                    VARIABLE'S NAME\n         ST    R1,DXD_SPF_2                   SET NAME'S ADDRESS\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,VAR_DISP                  DISPLACEMENT TO DATA\n         A     R1,VARAREA                     PLUS BASE ADDRESS\n         ST    R1,DXD_SPF_3                   SET ADDRESS IN PARM LIST\n         LA    R1,VAR_FORM                    DATA FORMAT\n         ST    R1,DXD_SPF_4                   SET ADDRESS IN PARM LIST\n         LA    R1,VAR_LENGTH                  VARIABLE LENGTH\n         ST    R1,DXD_SPF_5                   SET ADDRESS IN PARM LIST\n         OI    DXD_SPF_5,X'80'                SET END-OF-LIST\n         ITRACE ID=VDEF,                      DEFINING A VARIABLE      +\n               DATA1=VAR_NAME,                .. VARIABLE'S NAME       +\n               DATA2=DXD_SPF_3                .. ADDRESS OF DATA\n         LA    R1,DXD_SPF_PARMS               SPF PARM LIST ADDRESS\n         L     R15,AISPLINK                   SPF LINK ENTRY POINT\n         BALR  R14,R15                        LINK TO SPF\n         LTR   R15,R15                        VDEFINE SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         OI    VAR_FLAGS,$VAR_DEFINED         VARIABLE HAS BEEN DEFINED\n         TM    VAR_FLAGS,$VAR_PROFILE         VGET FROM PROFILE?\n         BNO   VAR0120                        NO\n         ITRACE ID=VGET,                                               +\n               DATA1=VAR_NAME\n         MVC   DXD_VAR_NAME,VAR_NAME          COPY VARIABLE NAME\n         LA    R1,VGET\n         ST    R1,DXD_SPF_1\n         LA    R1,DXD_VAR_NAMES               <-- DON'T LIKE CLOSE NAME\n         ST    R1,DXD_SPF_2                   SET NAME\n         LA    R1,PROFILE                     VARIABLE POOL NAME\n         ST    R1,DXD_SPF_3                   SET ADDRESS\n         OI    DXD_SPF_3,X'80'                FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS\n         L     R15,AISPLINK                   SPF ENTRY POINT\n         BALR  R14,R15\n         ITRACE ID=VGET_RC,                                            +\n               RDATA1=R15\n         ITRACE ID=VPUT,                                               +\n               DATA1=VAR_NAME\n         LA    R1,VPUT\n         ST    R1,DXD_SPF_1\n         LA    R1,DXD_VAR_NAMES              <-- DON'T LIKE CLOSE NAME\n         ST    R1,DXD_SPF_2                  SET NAME\n         LA    R1,SHARED                     VARIABLE POOL NAME\n         ST    R1,DXD_SPF_3                  SET ADDRESS\n         OI    DXD_SPF_3,X'80'               FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS\n         L     R15,AISPLINK                  SPF ENTRY POINT\n         BALR  R14,R15\n         ITRACE ID=VPUT_RC,                                            +\n               RDATA1=R15\nVAR0120  DS    0H\n         LA    R6,VAR_DSECT_L(R6)             NEXT VARIABLE\n         CLI   0(R6),X'FF'                    END OF TABLE?\n         BNE   VAR0110                        NO\n         B     EXIT0000                       ALL PROCESSED\n* ------------------------------------------------------------------- *\n*        PROCESS VARIABLE DELETION                                    *\n* ------------------------------------------------------------------- *\nVAR0200  DS    0H\n         ITRACE ID=DELETE                     DELETING ALL VARIABLES\n         L     R6,VARTBLE                     START WITH FIRST VARIABLE\nVAR0210  DS    0H\n         ITRACE ID=VAR,                                                +\n               DATA1=VAR_NAME,                                         +\n               DATA2=VAR_FLAGS\n         CLI   0(R6),X'FF'                    END OF TABLE?\n         BE    EXIT0000                       YES\n         TM    VAR_FLAGS,$VAR_DEFINED         VARIABLE DEFINED?\n         BNO   VAR0230                        NO\n         TM    VAR_FLAGS,$VAR_PROFILE         VPUT TO PROFILE?\n         BNO   VAR0220                        NO\n         ITRACE ID=VPUT,                                               +\n               DATA1=VAR_NAME\n         MVC   DXD_VAR_NAME,VAR_NAME          COPY VARIABLE NAME\n         LA    R1,VPUT\n         ST    R1,DXD_SPF_1\n         LA    R1,DXD_VAR_NAMES               <-- DON'T LIKE CLOSE NAME\n         ST    R1,DXD_SPF_2                   SET NAME\n         LA    R1,PROFILE                     SAVE IN PROFILE\n         ST    R1,DXD_SPF_3                   SET ADDRESS\n         OI    DXD_SPF_3,X'80'                FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS\n         L     R15,AISPLINK                   SPF ENTRY POINT\n         BALR  R14,R15\n         ITRACE ID=VPUT_RC,                                            +\n               RDATA1=R15\nVAR0220  DS    0H\n         LA    R1,VDELETE\n         ST    R1,DXD_SPF_1\n         ST    R6,DXD_SPF_2                   SET VARIABLE NAME ADDRESS\n         OI    DXD_SPF_2,X'80'                FLAG END-OF-LIST\n         ITRACE ID=VDEL,                      DELETING A VARIABLE      +\n               DATA1=VAR_NAME                 .. VARIABLE NAME\n         LA    R1,DXD_SPF_PARMS               PARM LIST'S ADDRESS\n         L     R15,AISPLINK                   SPF LINK ENTRY POINT\n         BALR  R14,R15                        LINK TO SPF\n         LTR   R15,R15                        VDELETE SUCCESSFUL?\n         BNZ   ERR0020                        NO\nVAR0230  DS    0H\n         LA    R6,VAR_DSECT_L(R6)             NEXT VARIABLE\n         B     VAR0210                        PROCESS ALL VARIABLES\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=VDEFFAIL,                                           +\n               RDATA1=R15\n         STC   R15,DXD_SPF_RC                 SAVE RC\n         UNPK  DXD_WORKA(3),DXD_SPF_RC(2)     UNPACK THE RETURN CODE\n         TR    DXD_WORKA,HEXCHAR              TRANSLATE\n         GETMAIN RU,                          GETMAIN 24-BIT STORAGE   +\n               LV=MSG01_L,                                             +\n               LOC=BELOW\n         LR    R3,R1                          COPY ADDRESS\n         MVC   0(MSG01_L,R3),MSG01            COPY MESSAGE\n         USING MSG01,R3\n         MVC   MSG01_VAR,VAR_NAME             COPY VARIABLE NAME\n         MVC   MSG01_RC,DXD_WORKA             COPY RC\n         DROP  R3\n         TPUT  (R3),MSG01_L\n         FREEMAIN RU,                                                  +\n               A=(R3),                                                 +\n               LV=MSG01_L\n         ABEND 12,DUMP,,USER\nERR0020  DS    0H\n         ITRACE ID=VDELFAIL,                                           +\n               RDATA1=R15\n         STC   R15,DXD_SPF_RC                 SAVE RC\n         UNPK  DXD_WORKA(3),DXD_SPF_RC(2)     UNPACK THE RETURN CODE\n         TR    DXD_WORKA,HEXCHAR              TRANSLATE\n         GETMAIN RU,                          GETMAIN 24-BIT STORAGE   +\n               LV=MSG02_L,                                             +\n               LOC=BELOW\n         LR    R3,R1                          COPY ADDRESS\n         MVC   0(MSG02_L,R3),MSG02            COPY MESSAGE\n         USING MSG02,R3\n         MVC   MSG02_VAR,VAR_NAME             COPY VARIABLE NAME\n         MVC   MSG02_RC,DXD_WORKA             COPY RC\n         DROP  R3\n         TPUT  (R3),MSG02_L\n         FREEMAIN RU,                                                  +\n               A=(R3),                                                 +\n               LV=MSG02_L\n         ABEND 13,DUMP,,USER\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART   DC    Q(DXDTVAR)\n\nVAR_NAME_I DC    F'1'\n           DC    F'0'\n           DC    CL8' '\nVAR_NAME_L EQU   *-VAR_NAME_I\n\nDISPLAY    DC    CL8'DISPLAY'\nERR_PANEL  DC    CL8'LIBERR '\nPROFILE    DC    CL8'PROFILE'\nSHARED     DC    CL8'SHARED'\nVDEFINE    DC    CL8'VDEFINE'\nVDELETE    DC    CL8'VDELETE'\nVGET       DC    CL8'VGET'\nVPUT       DC    CL8'VPUT'\n\nHEXCHAR    EQU   *-C'0'\n           DC    C'0123456789ABCDEF'\n\nMSG01      DS    0C\n           DC    C'LIBTVMGR01E '\n           DC    C'VDEFINE for variable '\nMSG01_VAR  DC    CL8' '\n           DC    C' failed, RC='\nMSG01_RC   DC    CL02' '\nMSG01_L    EQU   *-MSG01\n\nMSG02      DS    0C\n           DC    C'LIBTVMGR02E '\n           DC    C'VDELETE for variable '\nMSG02_VAR  DC    CL8' '\n           DC    C' failed, RC='\nMSG02_RC   DC    CL02' '\nMSG02_L    EQU   *-MSG02\n\n           LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTVAR        DSECT\n               LIBSAVE DSECT=NO\nDXD_SPF_PARMS  DS   0A                    ISPF PARM LIST\nDXD_SPF_1      DS   A                     PARM 1 ADDRESS\nDXD_SPF_2      DS   A                     PARM 2 ADDRESS\nDXD_SPF_3      DS   A                     PARM 3 ADDRESS\nDXD_SPF_4      DS   A                     PARM 4 ADDRESS\nDXD_SPF_5      DS   A                     PARM 5 ADDRESS\n\n\nDXD_VAR_NAMES  DS   0A\n               DS   F\n               DS   F\nDXD_VAR_NAME   DS   CL8\n\nDXD_SPF_RC     DS   X\n               DS   X\nDXD_WORKA      DS   CL3\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     VARDSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         VARREQ   DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      LIBTVMGR\n./ ADD NAME=LIBTVTAM 0100-09250-09250-0919-00437-00437-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: LIBTVTAM - VTAM functions                             *\n*                                                                     *\n*  Function:                                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBTVTAM CSECT\nLIBTVTAM AMODE 31\nLIBTVTAM RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING LIBTVTAM,R12                   DEFINE PROGRAM BASE\n         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE\n         B     INIT0000\nMODID    DC    CL8'LIBTVTAM'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LR    R10,R1                         COPY PARM BLOCK ADDRESS\n         USING VTAMREQ,R10                    DEFINE BASE\n         L     R1,COMMDXDA                    WORK AREA BASE\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)                      CHAIN CALLER'S SAVE AREA\n         ST    R1,8(R13)                      CHAIN OUR SAVE AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING DXDVTAM,R13                    DEFINE WORK AREA BASE\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    INIT0010                       YES\n         ITRACE ID=INIT\n         MVC   DXDID,MODID                    WORK AREA INITIALIZED\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nINIT0010 DS    0H\n         CLI   VTAM_COMMAND,$VTAM_OPEN        OPEN?\n         BE    OPEN0000                       YES\n         L     R8,COMM_ACB\n         L     R7,COMM_RPL\n         L     R6,COMM_RPLX\n         L     R5,COMM_NETWORK_IO_AREA\n         L     R4,COMM_NIB\n         CLI   VTAM_COMMAND,$VTAM_CLOSE       CLOSE?\n         BE    CLOSE000                       YES\n         CLI   VTAM_COMMAND,$VTAM_RECEIVE     RECEIVE?\n         BE    RECV0000                       YES\n         CLI   VTAM_COMMAND,$VTAM_SEND        SEND?\n         BE    SEND0000                       YES\n         ABEND 1,DUMP,,USER\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nOPEN0000 DS    0H\n         ITRACE ID=OPEN\n         LA    R0,ACBL                        ACB'S SIZE\n         ST    R0,COMM_ACB_LENGTH             SAVE LENGTH\n         GETMAIN RU,                          ACQUIRE STORAGE FOR ACB  +\n               LV=(0),                        .. SIZE                  +\n               LOC=BELOW                      .. FROM BELOW THE LINE\n         ST    R1,COMM_ACB                    SAVE ACB'S ADDRESS\n         LR    R8,R1                          COPY ACB ADDRESS\n         USING IFGACB,R8                      DEFINE BASE\n         MVC   0(ACBL,R8),ACBI                INITIALIZE ACB\n         LA    R0,COMM_APPL_NAME_LENGTH       APPLID'S LENGTH ADDRESS\n         ST    R0,ACBAPID                     SET APPLID ADDRESS\n         ST    R11,ACBUSER                    SET LIBTCOMM ADDRESS\n         LA    R0,EXLSTL                      EXLST SIZE\n         GETMAIN RU,                          ACQUIRE STORAGE FOR EXLST+\n               LV=(0),                        .. SIZE                  +\n               LOC=BELOW                      .. FROM BELOW THE LINE\n         MVC   0(EXLSTL,R1),EXLSTI            INITIALIZE EXIT LIST\n         ST    R1,COMM_EXLST                  SAVE EXIT LIST'S ADDRESS\n         ST    R1,ACBEXLST                    SET EXLST'S ADDRESS\n         USING IFGEXLST,R1                    DEFINE BASE\n         XC    EXLATTNP,EXLATTNP              ATTN EXIT\n         LA    R0,RPLL                        RPL'S SIZE\n         GETMAIN RU,                          ACQUIRE STORAGE FOR RPL  +\n               LV=(0),                        .. SIZE                  +\n               LOC=BELOW                      .. FROM BELOW THE LINE\n         LR    R7,R1                          COPY ADDRESS\n         USING IFGRPL,R7                      DEFINE BASE\n         ST    R7,COMM_RPL                    SAVE RPL'S ADDRESS\n         MVC   0(RPLL,R7),RPLI                INITIALIZE RPL\n         LA    R0,RPLEXTL                     RPL EXTENSION SIZE\n         GETMAIN RU,                          ACQUIRE STORAGE          +\n               LV=(0),                        .. SIZE                  +\n               LOC=BELOW                      .. FROM BELOW THE LINE\n         LR    R6,R1                          COPY ADDRESS\n         ST    R6,COMM_RPLX                   SAVE RPL'S ADDRESS\n         USING ISTRPL6X,R6                    DEFINE BASE\n         MVC   0(RPLEXTL,R6),RPLEXTI          INITIALIZE RPL EXTENSION\n         ST    R6,RPLAAREA                    SET RPL EXTENSION'S ADDR\n         MVC   RPLDACB,COMM_ACB               SET ACB'S ADDRESS\n         L     R5,COMM_NETWORK_IO_AREA        SAVE I/O AREA ADDRESS\n         USING NETBLOK,R5                     DEFINE BASE\n         LA    R0,NIBL                        NIB'S SIZE\n         GETMAIN RU,                          ACQUIRE STORAGE FOR NIB  +\n               LV=(0),                        .. SIZE                  +\n               LOC=BELOW                      .. FROM BELOW THE LINE\n         LR    R4,R1                          COPY NIB'S ADDRESS\n         USING ISTDNIB,R4\n         ST    R4,COMM_NIB                    SET NIB'S ADDRESS\n         MVC   0(NIBL,R4),NIBI                INITIALIZE NIB\n         MVC   NIBSYM,COMM_SERVER_APPL_ID\n         ITRACE ID=INQUIRE,                                            +\n               DATA1=NIBSYM\n         INQUIRE RPL=(R7),                    ISSUE INQUIRE            +\n               NIB=(R4),                      .. NIB'S ADDRESS         +\n               OPTCD=APPSTAT                  ..  WANT PARTNER'S STATUS\n         CLI   RPLFDB3,0                      PARTNER READY?\n         BNE   OPEN0050                       NO\n         LOAD  EP=LIBOPT                      LOAD OPTIONS\n         LR    R15,R0                         COPY ADDRESS\n         USING OPTDSECT,R15                   DEFINE BASE\n         LA    R3,OPTACB                      ADDRESS OF ACB NAMES\n         SR    R2,R2                          CLEAR REGISTER\n         ICM   R2,3,OPT#ACB                   NUMBER OF ACBS\nOPEN0010 DS    0H\n         ITRACE ID=ACBNAME,                   TRACE EACH OPEN ATTEMPT  +\n               DATA1=0(R3)                    .. TRACE THE NAME\n         MVC   COMM_APPL_NAME,0(R3)           COPY ACB NAME\n         MVC   DXDOCPL(OPENL),OPENI\n         OPEN  ((R8)),                        OPEN ACB                 +\n               MODE=31,                                                +\n               MF=(E,DXDOCPL)\n         ITRACE ID=OPENRC,                    RETURN CODE FROM OPEN    +\n               RDATA1=R15                     .. TRACE RETURN CODE\n         LTR   R15,R15                        OPEN SUCCESSFUL?\n         BZ    OPEN0020                       YES\n         LA    R3,8(R3)                       NEXT ACB NAME\n         BCT   R2,OPEN0010                    LOOP\n         DELETE EP=LIBOPT                     DELETE OPTIONS\n         ITRACE ID=NOAPPL\n         LA    R2,MSG01L                      MESSAGE LENGTH\n         GETMAIN RU,                          ACQUIRE STORAGE FOR TPUT +\n               LV=(R2),                       .. SIZE OF AREA          +\n               LOC=BELOW                      .. FROM BELOW THE LINE\n         LR    R3,R1                          COPY STORAGE ADDRESS\n         MVC   0(MSG01L,R3),MSG01             COPY MESSAGE\n         TPUT  (R3),(R2)                      ISSUE TPUT\n         FREEMAIN RU,                                                  +\n               A=(R3),                                                 +\n               LV=MSG01L\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     EXIT0000                       EXIT\nOPEN0020 DS    0H\n         ITRACE ID=OPENED\n         DELETE EP=LIBOPT\n         OI    COMM_FLAGS,$ACB_OPEN           ACB IS OPEN\n         ITRACE ID=SETLOGON\n         SETLOGON ACB=(R8),                   ISSUE SETLOGON           +\n               RPL=(R7),                      .. RPL FOR REQUEST       +\n               OPTCD=START                    .. ENABLE EXIT\n         MVC   RPL6LU,COMM_SERVER_APPL_ID\n         ITRACE ID=CNOS\n         APPCCMD CONTROL=OPRCNTL,             ISSUE APPC COMMAND       +\n               QUALIFY=CNOS,                  .. CNOS                  +\n               RPL=(R7),                      .. RPL'S ADDRESS         +\n               LOGMODE=LU62P                  .. LOGMODE\n         CLC   RPL6RC,X000001                 CNOS ACCEPTED?\n         BE    OPEN0030                       YES\n         ITRACE ID=CNOSFAIL,                  CNOS FAILED              +\n               DATA1=RPL6RC                   .. TRACE RETURN CODES\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         ABEND 2,DUMP,,USER\nOPEN0030 DS    0H\n         MVC   0(FMH5L,R5),FMH5               COPY FMH5 TO I/O AREA\n         ITRACE ID=ALLOC                      ALLOCATE A SESSION\n         XC    COMM_VTAM_ECB,COMM_VTAM_ECB    CLEAR THE ECB\n         APPCCMD CONTROL=ALLOC,               ISSUE APPC COMMAND       +\n               QUALIFY=ALLOCD,                .. ALLOCATE A SESSION    +\n               RPL=(R7),                      .. RPL'S ADDRESS         +\n               ECB=COMM_VTAM_ECB,             .. ECB                   +\n               AREA=(R5),                     .. FMH'S ADDRESS         +\n               RECLEN=FMH5L,                  .. FMH'S LENGTH          +\n               LOGMODE=LU62P,                 .. LOGMODE               +\n               OPTCD=ASY\n         WAIT  1,ECB=COMM_VTAM_ECB\n         APPCCMD CONTROL=CHECK,                                        +\n               RPL=(R7)\n         OC    RPL6RC,RPL6RC                  ALL ZEROS?\n         BZ    OPEN0040                       YES\n         ITRACE ID=ALOCFAIL,                  ALLOCATE FAILED          +\n               DATA1=RPL6RC                   .. TRACE RETURN CODES\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         ABEND 3,DUMP,,USER\n         B     EXIT0000                       EXIT\nOPEN0040 DS    0H\n         MVC   COMM_CONVERSATION_ID,RPL6CNVD  SAVE CONVERSATION ID\n         ITRACE ID=CID,                       SESSION ALLOCATED        +\n               DATA1=COMM_CONVERSATION_ID\n         L     R0,COMM_NETWORK_IO_AREA\n         L     R1,=A(COMMIOSZ)\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         B     EXIT0000                       EXIT\nOPEN0050 DS    0H\n         ITRACE ID=NOTREADY                   STC IS NOT READY\n         LA    R2,MSG02L                      MESSAGE LENGTH\n         GETMAIN RU,                          ACQUIRE STORAGE FOR TPUT +\n               LV=(R2),                       .. SIZE OF AREA          +\n               LOC=BELOW                      .. FROM BELOW THE LINE\n         LR    R3,R1                          COPY STORAGE ADDRESS\n         MVC   0(MSG02L,R3),MSG02             COPY MESSAGE\n         TPUT  (R3),(R2)                      ISSUE TPUT\n         FREEMAIN RU,                         FREE MESSAGE STORAGE     +\n               A=(R3),                                                 +\n               LV=MSG02L\n         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nRECV0000 DS    0H\n         ITRACE ID=RECV\n         XC    COMM_VTAM_ECB,COMM_VTAM_ECB    CLEAR THE ECB\n         APPCCMD CONTROL=RECEIVE,             ISSUE RECEIVE            +\n               QUALIFY=SPEC,                  .. FOR A SPECIFIC SESSION+\n               RPL=(R7),                      .. RPL'S ADDRESS         +\n               FILL=LL,                       .. ONLY 1 LOGICAL RECORD +\n               AREA=(R5),                     .. I/O AREA ADDRESS      +\n               AREALEN=COMMIOSZ,              .. I/O AREA SIZE         +\n               CONVID=COMM_CONVERSATION_ID    .. CONVERSATION ID\n         WAIT  1,ECB=COMM_VTAM_ECB            WAIT FOR THE SEND\n         APPCCMD CONTROL=CHECK,                                        +\n               RPL=(R7)\n         ITRACE ID=RECVRC,                                             +\n               DATA1=RPL6RC\n         OC    RPL6RC,RPL6RC                  RECEIVE OK?\n         BNZ   ERR0020                        NO\n         TM    XTRFLAG,$XTRON                 EXTERNAL TRACE ON?\n         BNO   EXIT0000                       NO\n         PUT   XTRACE,0(R5)                   WRITE TO EXTERNAL TRACE\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nSEND0000 DS    0H\n         ITRACE ID=SEND,                                               +\n               DATA1=COMM_CONVERSATION_ID,                             +\n               RDATA2=R5\n         TM    XTRFLAG,$XTRON                 EXTERNAL TRACE ON?\n         BNO   SEND0010                       NO\n         PUT   XTRACE,0(R5)                   WRITE TO EXTERNAL TRACE\nSEND0010 DS    0H\n         XC    COMM_VTAM_ECB,COMM_VTAM_ECB    CLEAR THE ECB\n         SR    R2,R2                          CLEAR REGISTER\n         ICM   R2,3,NET_LENGTH                LENGTH\n         APPCCMD CONTROL=SEND,                ISSUE SEND               +\n               QUALIFY=DATA,                  .. SEND DATA             +\n               RPL=(R7),                      .. RPL'S ADDRESS         +\n               AREA=(R5),                     .. I/O AREA ADDRESS      +\n               ECB=COMM_VTAM_ECB,             .. ECB ADDRESS           +\n               RECLEN=(R2),                   .. I/O LENGTH            +\n               CONMODE=CS,                    .. CONTINUE SPECIFIC     +\n               CONVID=COMM_CONVERSATION_ID,   .. CONVERSATION ID       +\n               OPTCD=ASY\n         WAIT  1,ECB=COMM_VTAM_ECB            WAIT FOR THE SEND\n         APPCCMD CONTROL=CHECK,                                        +\n               RPL=(R7)\n         ITRACE ID=SENDRC,                                             +\n               DATA1=RPL6RC\n         OC    RPL6RC,RPL6RC                  SEND OK?\n         BNZ   ERR0030                        NO\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCLOSE000 DS    0H\n         ITRACE ID=CLOSE\n         TM    COMM_FLAGS,$SESSALO            CONVERSATION ALLOCATED?\n         BNO   CLOSE010                       NO\n         ITRACE ID=DEALLOC                    DEALLOCATING THE SESSION\n         APPCCMD CONTROL=DEALLOC,             DE-ALLOCATE A SESSION    +\n               QUALIFY=FLUSH,                 .. FLUSH BUFFERS         +\n               RPL=(R7),                      .. RPL'S ADDRESS         +\n               CONVID=COMM_CONVERSATION_ID    .. CONVERSATION ID\n         OC    RPL6RC,RPL6RC                  DE-ALLOCATE SUCCESSFUL?\n         BNZ   ERR0010                        NO\nCLOSE010 DS    0H\n         TM    COMM_FLAGS,$ACB_OPEN           ACB OPENED?\n         BNO   CLOSE020                       NO\n         ITRACE ID=CLOSEACB\n         MVC   DXDOCPL(CLOSEL),CLOSEI\n         CLOSE ((R8)),                        CLOSE THE ACB            +\n               MODE=31,                                                +\n               MF=(E,DXDOCPL)\nCLOSE020 DS    0H\n         LTR   R8,R8                          ACB'S ADDRESS\n         BZ    CLOSE030                       NOT ACQUIRED\n         ITRACE ID=FREEACB,                   FREEMAIN ACB             +\n               RDATA1=R8                      .. ACB'S ADDRESS\n         FREEMAIN RU,                         FREEMAIN ACB             +\n               A=(R8),                                                 +\n               LV=ACBL\nCLOSE030 DS    0H\n         LTR   R7,R7                          RPL'S ADDRESS\n         BZ    CLOSE040                       NOT ACQUIRED\n         ITRACE ID=FREERPL,                   FREEMAIN RPL             +\n               RDATA1=R7                      .. RPL'S ADDRESS\n         FREEMAIN RU,                         FREEMAIN RPL             +\n               A=(R7),                                                 +\n               LV=RPLL\nCLOSE040 DS    0H\n         LTR   R6,R6                          RPL EXTENSION'S ADDRESS\n         BZ    CLOSE050                       NOT ACQUIRED\n         ITRACE ID=FREERPLX,                  FREEMAIN RPL             +\n               RDATA1=R6                      .. RPL EXTENSION'S ADD\n         FREEMAIN RU,                         FREEMAIN RPL EXTENSION   +\n               A=(R6),                                                 +\n               LV=RPLEXTL\nCLOSE050 DS    0H\n         LTR   R4,R4                          NIB'S ADDRESS\n         BZ    CLOSE060                       NOT ACQUIRED\n         ITRACE ID=FREENIB,                   FREEMAIN NIB             +\n               RDATA1=R4                      .. NIB'S ADDRESS\n         FREEMAIN RU,                         FREEMAIN NIB             +\n               A=(R4),                                                 +\n               LV=NIBL\nCLOSE060 DS    0H\n         ICM   R1,15,COMM_EXLST               EXLST'S ADDRESS\n         BZ    EXIT0000                       NOT ACQUIRED\n         ITRACE ID=FREEXLST,                  FREEMAIN EXLST           +\n               RDATA1=R1                      .. EXLST'S ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=EXLSTL\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=DALOFAIL,                  DE-ALLOCATE FAILED       +\n               DATA1=RPL6RC                   .. RETURN CODES\n         ABEND 4,DUMP,,USER\nERR0020  DS    0H\n         ITRACE ID=RECVFAIL,                  SEND FAILED              +\n               DATA1=RPL6RC                   .. RETURN CODES\n         ABEND 5,DUMP,,USER\nERR0030  DS    0H\n         ITRACE ID=SENDFAIL,                  SEND FAILED              +\n               DATA1=RPL6RC                   .. RETURN CODES\n         ABEND 6,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LH    R15,DXDRC                      SET RETURN CODE\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART DC    Q(DXDVTAM)            DISPLACEMENT TO WORK AREA\nOPENI    OPEN  (*,INPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\nACBI     ACB   AM=VTAM,              GENERATE VTAM ACB                 +\n               MACRF=LOGON,                                            +\n               EXLST=*,                                                +\n               APPLID=*\nEXLSTI   EXLST AM=VTAM,              GENERATE VTAM EXIT LIST           +\n               ATTN=*,                                                 +\n               LERAD=0\nEXLSTL   EQU   *-EXLSTI\nNIBI     NIB   MODE=RECORD,          GENERATE VTAM NIB                 +\n               NAME=LIB\nNIBL     EQU   *-NIBI\nRPLI     RPL   AM=VTAM,              GENERATE VTAM RPL                 +\n               AAREA=RPLEXTI\nRPLL     EQU   *-RPLI\nRPLEXTI  ISTRPL6\nRPLEXTL  EQU   *-RPLEXTI\n         FMH5  DSECT=NO,TRAN=USER    GENERATE FMH5\nX000001  DC    X'00000001'\nMSG01    DC    C'LIBVTAM01E All user interface APPLIDs are busy, try la+\n               ter'\nMSG01L   EQU   *-MSG01\nMSG02    DC    C'LIBVTAM02E Library STC is not active'\nMSG02L   EQU   *-MSG02\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDVTAM  DSECT\n         LIBSAVE DSECT=NO\nDXDOCPL  DS    0A,(OPENL)X\nDXDRC    DS    H\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         VTAMREQ  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGEXLST AM=VTAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ISTDNIB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY  OPTDSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA  DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  LIBTVTAM\n./ ADD NAME=LIBUX01  0100-09250-09250-0919-00129-00129-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    This exit allows the user to compress data stored in the         *\n*    library members.                                                 *\n*                                                                     *\n*    The function code indicates whether the data needs to be         *\n*    compressed or de-compressed.                                     *\n*                                                                     *\n*    On COMPRESS calls, the EXPANDED buffer will contain the data     *\n*    to be compressed.  The COMPRESSED buffer is the area for the     *\n*    data in compressed form.  The EXPANDED LENGTH will be set to     *\n*    the length of data in the EXPANDED buffer.  Maximum size will    *\n*    be 8K.  Set COMPRESSED LENGTH to the length of the data in its   *\n*    compressed form.                                                 *\n*                                                                     *\n*    On EXPAND calls, the COMPRESSED buffer contain the data in its   *\n*    compressed form.  The EXPANDED LENGTH will be set to the data's  *\n*    original size (the size used when the buffer was COMPRESSed),    *\n*    and the COMPRESSED LENGTH will be set to the length of the data  *\n*    in its compressed form.                                          *\n*                                                                     *\n*                                                                     *\n*    If you do not wish to compress data:                             *\n*    . On compress calls, copy the EXPANDED buffer to the COMPRESSED  *\n*      buffer and set the COMPRESSED length to the EXPANDED length.   *\n*    . On decompress calls, copy the COMPRESSED buffer to the         *\n*      EXPANDED buffer.  The size will already be set.                *\n*                                                                     *\n*                                                                     *\n*    The EXPANDED and COMPRESSED buffers are 8K in size.              *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBUX01  CSECT\nLIBUX01  AMODE 31\nLIBUX01  RMODE ANY\n         USING LIBUX01,R12                    DECLARE THE BASE REGISTER\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         LR    R11,R1                         COPY PARM LIST ADDRESS\n         USING UX01_PARMS,R11                 DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=ANY\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         COPY SAVE AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         CLI   UX01_FUNCTION,$UX01_COMPRESS\n         BE    LIB1000                        YES\n         CLI   UX01_FUNCTION,$UX01_DECOMPRESS\n         BE    LIB2000                        YES\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       COMPRESS                                                      *\n*                                                                     *\n*       As supplied the Librarian uses subroutine SUB0002.            *\n*       SUB0002 returns the length of the compressed data in R0.      *\n*       You can replace code down to label LIB2000 with your          *\n*       own code.                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB1000  DS    0H\n         MVC   COMPRESS_PARM_1,UX01_EXPANDED_BUFFER\n         MVC   COMPRESS_PARM_2,UX01_EXPANDED_LENGTH\n         MVC   COMPRESS_PARM_3,UX01_COMPRESSED_BUFFER\n         LA    R1,COMPRESS_PARMS              ADDRESS OF PARMS\n         L     R15,V_SUB0002\n         BALR  R14,R15                        COMPRESS\n         L     R1,UX01_COMPRESSED_LENGTH\n         ST    R0,0(R1)                       rETURN LENGTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       DECOMPRESS                                                    *\n*                                                                     *\n*       As supplied the Librarian uses subroutine SUB0003.            *\n*       You can replace code down to label EXIT0000 with your         *\n*       own code.                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB2000  DS    0H\n         MVC   DECOMPRESS_PARM_1,UX01_EXPANDED_BUFFER\n         MVC   DECOMPRESS_PARM_2,UX01_EXPANDED_LENGTH\n         MVC   DECOMPRESS_PARM_3,UX01_COMPRESSED_BUFFER\n         LA    R1,DECOMPRESS_PARMS\n         L     R15,V_SUB0003\n         BALR  R14,R15                        DE-COMPRESS THE DATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R1,R13\n         L     R13,4(R13)\n         FREEMAIN RU,A=(1),LV=WORKL\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BSM   R0,R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nV_SUB0002           DC   V(SUB0002)\nV_SUB0003           DC   V(SUB0003)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA            DSECT\n                    DS    18F\nCOMPRESS_PARMS      DS  0A           SUB0002 PARMS\nCOMPRESS_PARM_1     DS   A           EXPANDED BUFFER ADDRESS\nCOMPRESS_PARM_2     DS   A           EXPANDED BUFFER LENGTH\nCOMPRESS_PARM_3     DS   A           COMPRESSED BUFFER ADDRESS\n\nDECOMPRESS_PARMS    DS  0A           SUB0003 PARMS\nDECOMPRESS_PARM_1   DS   A           EXPANDED BUFFER ADDRESS\nDECOMPRESS_PARM_2   DS   A           EXPANDED BUFFER LENGTH\nDECOMPRESS_PARM_3   DS   A           COMPRESSED BUFFER ADDRESS\n\nWORKL               EQU   *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         UX01PARM DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COPY  REGEQU\n         END\n./ ADD NAME=LIBUX02  0100-09250-09250-0919-00078-00078-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    This exit allows the you to implement your own security rules.   *\n*                                                                     *\n*    This exit receives control in 31-bit mode.                       *\n*                                                                     *\n*    The parameter list is mapped by macro AUTHBLOK.  As coded        *\n*    The parameter block is addressed by R11.                         *\n*    Register 12 is used as the base register.                        *\n*    Resister 13 is the work area address.  Code any work area(s)     *\n*      you need after label WORKAREA.                                 *\n*    All other registers are available work registers.                *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*    Return code in R15 at exit                                       *\n*        00  -  Bypass LIBRARIAN security rules, AUTH_RETURN_CODE     *\n*               has been set to indicate whether access should be     *\n*               allowed (AUTH_RETURN_CODE = X'00') or denied          *\n*               (AUTH_RETURN_CODE = any non-zero value).              *\n*                                                                     *\n*    non-zero-  Use LIBRARIAN security rules                          *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBUX02  CSECT\nLIBUX02  AMODE 31\nLIBUX02  RMODE ANY\n         USING LIBUX02,R12                    DECLARE THE BASE REGISTER\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         LR    R11,R1                         COPY PARM LIST ADDRESS\n         USING AUTHBLOK,R11                   DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=ANY\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         COPY SAVE AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       Add your security checking here.                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   WORK_RC,4                      SET RC\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R1,R13\n         L     R13,4(R13)\n         SR    R2,R2\n         IC    R2,WORK_RC\n         FREEMAIN RU,A=(1),LV=WORKL\n         LR    R15,R2\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         BSM   R0,R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA            DSECT\n                    DS    18F\n\n*  ------  Add any work area(s) you need here         -------\n\nWORK_RC             DS    X\nWORKL               EQU   *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n           AUTHBLOK DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    COPY  REGEQU\n         END\n./ ADD NAME=LIBUX03  0100-09250-09250-0919-00085-00085-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: LIBUX03                                                      *\n*                                                                     *\n*  Determine user's ID, name, and their system's SMF ID               *\n*                                                                     *\n*  As supplied this exit obtains the user's ID and name from          *\n*  RACF control blocks.  If your system uses another security         *\n*  system, you may need to change the code to use that system's       *\n*  control blocks.                                                    *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIBUX03  CSECT\nLIBUX03  AMODE 31\nLIBUX03  RMODE ANY\n         USING LIBUX03,R12                    DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'LIBUX03'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\n* ------------------------------------------------------------------- *\n*        Identify the user                                            *\n* ------------------------------------------------------------------- *\nINIT0000 DS    0H\n         LR    R10,R1                         COPY PARM BLOCK ADDRESS\n         USING UX03_PARMS,R10\n         L     R1,CVTPTR                      CVT ADDRESS\n         USING CVT,R1                         DEFINE BASE\n         ICM   R15,15,CVTSMCA                 SMF AREA ADDRESS\n         BZ    EXIT0008                       SMF NOT ACTIVE!\n         USING SMCABASE,R15                   DEFINE BASE\n         MVC   UX03_SMF,SMCASID               COPY SMF ID\n         USING PSA,R0                         DEFINE BASE\n         L     R1,PSAAOLD                     OUR ASCB'S ADDRESS\n         USING ASCB,R1                        DEFINE BASE\n         L     R14,ASCBASXB                   ASXB ADDRESS\n         USING ASXB,R14                       DEFINE ASCB BASE\n         L     R15,ASXBSENV                   ACEE'S ADDRESS\n         USING ACEE,R15                       DEFINE ACEE BASE\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,ACEEUSRL                    USER ID LENGTH\n         BCTR  R1,0                           MINUS 1\n         MVC   UX03_USER,BLANKS               INITIALIZE USERID\n         EX    R1,UIDMVC                      COPY USER ID\n         MVC   UX03_USER_NAME,BLANKS          INITIALIZE USER'S NAME\n         L     R1,ACEEUNAM                    ADDRESS OF USER'S NAME\n         SR    R2,R2                          CLEAR REGISTER\n         ICM   R2,1,0(R1)                     LENGTH OF USER NAME\n         BZ    EXIT0000\n         BCTR  R2,0                           MINUS 1\n         EX    R1,NAMEMVC                     COPY USER'S NAME\nEXIT0000 DS    0H\n         SR    R15,R15\n         B     EXITEXIT\nEXIT0008 DS    0H\n         LA    R15,8\nEXITEXIT DS    0H\n         L     R14,12(R13)                    RESTORE REGISTERS\n         LM    R0,R12,20(R13)\n         BR    R14                            EXIT\nUIDMVC   MVC   UX03_USER,ACEEUSRI             COPY USER ID\nNAMEMVC  MVC   UX03_USER_NAME(0),1(R1)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nBLANKS   DC    CL20' '\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA  DSECT=YES,LIST=NO\n         CVT     DSECT=YES,LIST=NO\n         IHAASCB DSECT=YES,LIST=NO\n         IHAASXB DSECT=YES,LIST=NO\n         IHAACEE\n         IEESMCA\n         UX03PARM DSECT=YES\n* ------------------------------------------------------------------- *\n         COPY  REGEQU\n         END   LIBUX03\n./ ADD NAME=LSUBMAIN 0100-09250-09250-0919-00665-00665-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: LSUBMAIN                                                     *\n*                                                                     *\n*  PURPOSE: Library manager                                           *\n*                                                                     *\n*   This subtask \"owns\" the libraries.  This subtask issues the       *\n*   OPENs and CLOSEs.                                                 *\n*                                                                     *\n*                                                                     *\n*   LIBUSER blocks are used to track who is using a library.          *\n*   This is to prevent closing a library while it is still in use.    *\n*   Before a user starts using a library the user interface makes     *\n*   a call to notify the server end that it is using a specific       *\n*   libary.  When a user changes libraries, or logs-out, another      *\n*   call is made to have the user removed.  When CLOSE is is issued   *\n*   for a library, we make sure there are no users (by checking for   *\n*   LIBUSER blocks).                                                  *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLSUBMAIN CSECT\nLSUBMAIN AMODE 31\nLSUBMAIN RMODE ANY\n         USING LSUBMAIN,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'LSUBMAIN'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,0(R1)                      LIBSCOMM ADDRESS\n* ------------------------------------------------------------------- *\n*        ACQUIRE STORAGE FOR WORK AREA                                *\n* ------------------------------------------------------------------- *\n         GETMAIN RU,                          ACQUIRE WORK AREA STORAGE+\n               LV=WORKAREA_L,                 .. WORK AREA SIZE        +\n               LOC=ANY                        .. MAY BE ABOVE OR BELOW\n         ST    R1,8(R13)                      CHAIN SAVE AREAS\n         ST    R13,4(R1)\n         LR    R13,R1                         COPY SAVE AREA ADDRESS\n         USING WORK,R13                       DEFINE BASE\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK\n         MVC   WORKRPL(RPLL),RPLI             INITIALIZE RPL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0010 DS    0H\n         TM    COMM_EOJ_PHASE,$EOJ2           SHUTDOWN PHASE 2?\n         BO    EXIT0000                       YES\n         TM    COMM_LSUB_WORK_ECB,X'40'       ECB ALREADY POSTED?\n         BO    PROC0020                       YES\n         ITRACE ID=WORKWAIT\n         WAIT  1,ECB=COMM_LSUB_WORK_ECB       WAIT FOR WORK\n         ITRACE ID=WOKEUP\nPROC0020 DS    0H\n         XC    COMM_LSUB_WORK_ECB,COMM_LSUB_WORK_ECB\nPROC0030 DS    0H\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R10,15,COMM_LSUB_REQ           FIRST REQUEST BLOCK\n         USING LIBFUNC,R10\n         BZ    PROC0010                       NOTHING ON CHAIN\n         CS    R10,R1,COMM_LSUB_REQ           OBTAIN WORK CHAIN\n         BC    4,PROC0030                     TRY AGAIN\n         ITRACE ID=HAVEQ,                                              +\n               RDATA1=R10\nPROC0040 DS    0H\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK\n         MVC   LIB_FUNCTION_MESSAGE,COMM_BLANKS\n         CLI   LIB_FUNCTION,$LIB_FUNCTION_OPEN\n         BE    OPEN0000\n         CLI   LIB_FUNCTION,$LIB_FUNCTION_CLOSE\n         BE    CLOSE000\n         CLI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET\n         BE    CLOSET00\n         CLI   LIB_FUNCTION,$LIB_FUNCTION_ADD_USER\n         BE    ADD0000\n         CLI   LIB_FUNCTION,$LIB_FUNCTION_REM_USER\n         BE    REM0000\n         CLI   LIB_FUNCTION,$LIB_FUNCTION_REM_TASK\n         BE    REM1000\n         ABEND 1,DUMP,,USER\nPROC0050 DS    0H\n         L     R2,LIB_FUNCTION_NEXT\n         POST  LIB_FUNCTION_ECB               POST CALLER'S ECB\n         LTR   R10,R2                         NEXT ON CHAIN\n         BZ    PROC0010\n         B     PROC0040\n* ------------------------------------------------------------------- *\n*        Open the library ACBs.                                       *\n* ------------------------------------------------------------------- *\nOPEN0000 DS    0H\n         ITRACE ID=OPEN,                                               +\n               DATA1=LIB_FUNCTION_LIB_NAME\n         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         BZ    OPEN0080                       NO LIBRARIES DEFINED\n         USING LIBBLOK,R4                     DEFINE BASE\nOPEN0010 DS    0H\n         CLC   LIB_FUNCTION_LIB_NAME,ALL\n         BE    OPEN0020\n         CLC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         BNE   OPEN0070\n         TM    LIB_STATUS,$LIB_ALLOCATED\n         BNO   OPEN0030\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         MVC   PRTMSGID(MSG08L),MSG08\n         MVC   PRTMSGID+(MSG08NAM-MSG08)(L'MSG08NAM),LIB_NAME\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         B     OPEN0070\nOPEN0020 DS    0H\n         TM    COMM_FLAGS,$INIT               INITALIZATION COMPLETE?\n         BO    OPEN0030                       YES\n         TM    LIB_STATUS,$LIB_AUTO_OPEN\n         BNO   OPEN0070                       NO, SKIP THIS LIBRARY\nOPEN0030 DS    0H\n         TM    LIB_STATUS,$LIB_ALLOCATED\n         BO    OPEN0070\n         ITRACE ID=OPENING,                                            +\n               DATA1=LIB_NAME\n         LA    R3,LIB_ACB                     ACB'S ADDRESS\n         USING IFGACB,R3                      DEFINE BASE\n         MVC   DAIR_EYE,DAIRID                SET BLOCK EYE-CATCHER\n         XC    DAIR_NEXT,DAIR_NEXT\n         MVC   ACBDDNM,LIB_NAME               SET DDNAME IN ACB\n         MVI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING\n         MVC   DAIR_DD,LIB_NAME               SET DDNAME\n         MVC   DAIR_DSN,LIB_VSAM_DSN          SET DATASET NAME\n         MVC   DAIR_MEMBER,COMM_BLANKS        NO MEMBER NAME\n         XC    DAIR_ECB,DAIR_ECB              CLEAR THE ECB\n         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS\nOPEN0040 DS    0H\n         L     R2,COMM_DSUB_REQ\n         ST    R2,DAIR_NEXT\n         CS    R2,R1,COMM_DSUB_REQ\n         BC    4,OPEN0040\n         POST  COMM_DSUB_WORK_ECB             WAKEUP THE DAIR SUBTASK\n         WAIT  1,ECB=DAIR_ECB                 WAIT\n         OC    DAIR_R15,DAIR_R15              ALLOCATION SUCCESSFUL?\n         BZ    OPEN0050                       YES\n         STH   R15,WORKRC                     SAVE RETURN CODE\n         LTR   R15,R15                        SUCCESSFUL?\n         BZ    OPEN0050                       YES\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         MVC   PRTMSGID(MSG01L),MSG01\n         MVC   PRTMSGID+(MSG01NAM-MSG01)(L'MSG01NAM),LIB_NAME\n         MVC   PRTMSGID+(MSG01DSN-MSG01)(L'MSG01DSN),LIB_VSAM_DSN\n         UNPK  PRTMSGID+(MSG01R15-MSG01)(5),DAIR_R15(3)\n         MVZ   PRTMSGID+(MSG01R15-MSG01)(L'MSG01R15),HEX0000\n         TR    PRTMSGID+(MSG01R15-MSG01)(L'MSG01R15),HEXCHAR\n         MVI   PRTMSGID+(MSG01R15-MSG01)+4,C' '\n         UNPK  PRTMSGID+(MSG01ERR-MSG01)(5),DAIR_ERROR(3)\n         MVZ   PRTMSGID+(MSG01ERR-MSG01)(L'MSG01R15),HEX0000\n         TR    PRTMSGID+(MSG01ERR-MSG01)(L'MSG01R15),HEXCHAR\n         MVI   PRTMSGID+(MSG01ERR-MSG01)+4,C' '\n         UNPK  PRTMSGID+(MSG01INF-MSG01)(5),DAIR_INFO(3)\n         MVZ   PRTMSGID+(MSG01INF-MSG01)(L'MSG01R15),HEX0000\n         TR    PRTMSGID+(MSG01INF-MSG01)(L'MSG01R15),HEXCHAR\n         MVI   PRTMSGID+(MSG01INF-MSG01)+4,C' '\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         B     OPEN0070\nOPEN0050 DS    0H\n         OI    LIB_STATUS,$LIB_ALLOCATED\n         MVC   WORKOCPL(OPENL),OPENI\n         OPEN  ((R3),UPDAT),                                           +\n               MODE=31,                                                +\n               MF=(E,WORKOCPL)\n         STH   R15,WORKRC                     SAVE RETURN CODE\n         LTR   R15,R15                        SUCCESSFUL?\n         BZ    OPEN0060                       YES\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         MVC   PRTMSGID(MSG02L),MSG02\n         MVC   PRTMSGID+(MSG02NAM-MSG02)(L'MSG02NAM),LIB_NAME\n         MVC   PRTMSGID+(MSG02DSN-MSG02)(L'MSG02DSN),LIB_VSAM_DSN\n         UNPK  PRTMSGID+(MSG02R-MSG02)(5),WORKRC(3)\n         MVZ   PRTMSGID+(MSG02R-MSG02)(L'MSG02R),HEX0000\n         TR    PRTMSGID+(MSG02R-MSG02)(L'MSG02R),HEXCHAR\n         MVI   PRTMSGID+(MSG02R-MSG02)+4,C' '\n         BAL   R8,PRT0000\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         B     OPEN0070\nOPEN0060 DS    0H\n         XC    LIB_KEY,LIB_KEY\n         MVI   LIB_KEY_SEQ+3,X'01'\n         LA    R1,WORKRPL\n         LA    R2,LIB_RECORD\n         MODCB RPL=(R1),                                               +\n               ACB=(R3),                                               +\n               AREA=(R2),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R2),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         GET   RPL=WORKRPL\n         LTR   R15,R15\n         BNZ   OPEN0090\n         OI    LIB_STATUS,$LIB_OPEN\n         MVC   LIB_DESCRIPTION,LIB_DATA\n         MVC   PRTMSGID(MSG03L),MSG03\n         MVC   PRTMSGID+(MSG03NAM-MSG03)(L'MSG03NAM),LIB_NAME\n         MVC   PRTMSGID+(MSG03DSN-MSG03)(L'MSG03DSN),LIB_VSAM_DSN\n         BAL   R8,PRT0000\nOPEN0070 DS    0H\n         ICM   R4,15,LIB_NEXT\n         BNZ   OPEN0010\n         B     PROC0050\nOPEN0080 DS    0H\n         ITRACE ID=NOLIBS\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         B     PROC0050\nOPEN0090 DS    0H\n         ITRACE ID=NOTINIT\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         MVC   PRTMSGID(MSG11L),MSG11\n         MVC   PRTMSGID+(MSG11NAM-MSG11)(L'MSG11NAM),LIB_NAME\n         MVC   PRTMSGID+(MSG11DSN-MSG11)(L'MSG11DSN),LIB_VSAM_DSN\n         BAL   R8,PRT0000\n         B     PROC0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLOSE000 DS    0H\n         ITRACE ID=CLOSE\n         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         BZ    CLOSE080\nCLOSE010 DS    0H\n         CLC   LIB_FUNCTION_LIB_NAME,ALL\n         BE    CLOSE020\n         CLC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         BNE   CLOSE070\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BO    CLOSE020                       YES\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         MVC   PRTMSGID(MSG04L),MSG04\n         MVC   PRTMSGID+(MSG04NAM-MSG04)(L'MSG04NAM),LIB_NAME\n         MVC   PRTMSGID+(MSG04DSN-MSG04)(L'MSG04DSN),LIB_VSAM_DSN\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         B     CLOSE070\nCLOSE020 DS    0H\n         TM    LIB_STATUS,$LIB_OPEN           LIBRARY OPEN?\n         BNO   CLOSE030                       NO\n         OC    LIB_USERS,LIB_USERS            ANYONE USING LIBRARY?\n         BNZ   CLOSE050                       YES\n         ITRACE ID=CLOSING,                                            +\n               DATA1=LIB_NAME\n         LA    R3,LIB_ACB                     ACB'S ADDRESS\n         MVC   WORKOCPL(CLOSEL),CLOSEI\n         CLOSE ((R3)),                                                 +\n               MF=(E,WORKOCPL),                                        +\n               MODE=31\n         ITRACE ID=CLOSED\n         MVC   PRTMSGID(MSG05L),MSG05\n         MVC   PRTMSGID+(MSG05NAM-MSG05)(L'MSG05NAM),LIB_NAME\n         MVC   PRTMSGID+(MSG05DSN-MSG05)(L'MSG05DSN),LIB_VSAM_DSN\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         NI    LIB_STATUS,255-$LIB_OPEN\nCLOSE030 DS    0H\n         TM    LIB_STATUS,$LIB_ALLOCATED\n         BNO   CLOSE070                       NOT ALLOCATED\n         ITRACE ID=DEALLOC\n         XC    DAIR_ECB,DAIR_ECB              CLEAR THE ECB\n         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND\n         MVC   DAIR_DD,LIB_NAME               SET DDNAME\n         MVC   DAIR_DSN,LIB_VSAM_DSN          SET DATA SET NAME\n         LA    R1,DAIRREQ                     DAIR REQUEST BLOCK ADDR\nCLOSE040 DS    0H\n         L     R2,COMM_DSUB_REQ               FIRST BLOCK NOW ON CHAIN\n         ST    R2,DAIR_NEXT\n         CS    R2,R1,COMM_DSUB_REQ            ADD NEW BLOCK TO CHAIN\n         BC    4,CLOSE040                     TRY AGAIN\n         POST  COMM_DSUB_WORK_ECB             WAKE UP DAIR SUBTASK\n         WAIT  1,ECB=DAIR_ECB                 WAIT FOR DAIR TASK\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BZ    CLOSE060                       YES\n         ITRACE ID=DAIRFAIL,                                           +\n               DATA1=DAIR_R15\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         MVC   PRTMSGID(MSG06L),MSG06\n         MVC   PRTMSGID+(MSG06NAM-MSG06)(L'MSG06NAM),LIB_NAME\n         MVC   PRTMSGID+(MSG06DSN-MSG06)(L'MSG06DSN),LIB_VSAM_DSN\n         UNPK  PRTMSGID+(MSG06R15-MSG06)(5),DAIR_R15(3)\n         MVZ   PRTMSGID+(MSG06R15-MSG06)(L'MSG06R15),HEX0000\n         TR    PRTMSGID+(MSG06R15-MSG06)(L'MSG06R15),HEXCHAR\n         MVI   PRTMSGID+(MSG06R15-MSG06)+4,C' '\n         UNPK  PRTMSGID+(MSG06ERR-MSG06)(5),DAIR_ERROR(3)\n         MVZ   PRTMSGID+(MSG06ERR-MSG06)(L'MSG06R15),HEX0000\n         TR    PRTMSGID+(MSG06ERR-MSG06)(L'MSG06R15),HEXCHAR\n         MVI   PRTMSGID+(MSG06ERR-MSG06)+4,C' '\n         UNPK  PRTMSGID+(MSG06INF-MSG06)(5),DAIR_INFO(3)\n         MVZ   PRTMSGID+(MSG06INF-MSG06)(L'MSG06R15),HEX0000\n         TR    PRTMSGID+(MSG06INF-MSG06)(L'MSG06R15),HEXCHAR\n         MVI   PRTMSGID+(MSG06INF-MSG06)+4,C' '\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         B     CLOSE070\nCLOSE050 DS    0H\n         ITRACE ID=BUSY\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         MVC   PRTMSGID(MSG07L),MSG07\n         MVC   PRTMSGID+(MSG07NAM-MSG07)(L'MSG07NAM),LIB_NAME\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         B     CLOSE070\nCLOSE060 DS    0H\n         ITRACE ID=FREED\n         NI    LIB_STATUS,255-$LIB_ALLOCATED\nCLOSE070 DS    0H\n         ICM   R4,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   CLOSE010\n         B     PROC0050\nCLOSE080 DS    0H\n         ITRACE ID=NOLIBS\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         B     PROC0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLOSET00 DS    0H\n         ITRACE ID=CLOSE_T,                                            +\n               DATA1=LIB_FUNCTION_LIB_NAME\n         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\nCLOSET10 DS    0H\n         CLC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         BE    CLOSET20\n         ICM   R4,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   CLOSET10\n         ABEND 2,DUMP,,USER\nCLOSET20 DS    0H\n         LA    R3,LIB_ACB                     ACB'S ADDRESS\n         ITRACE ID=LIBFOUND,                                           +\n               DATA1=LIB_FUNCTION_LIB_NAME,                            +\n               RDATA2=R3\n         MVC   WORKOCPL(CLOSEL),CLOSEI\n         CLOSE ((R3)),                                                 +\n               MF=(E,WORKOCPL),                                        +\n               MODE=31,                                                +\n               TYPE=T\n         ITRACE ID=CLOSED_T,                                           +\n               RDATA1=R15\n         LTR   R15,R15\n         BZ    PROC0050\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nADD0000  DS    0H\n         L     R5,LIB_FUNCTION_USER           REQUESTING USERBLOK\n         USING USERBLOK,R5                    DEFINE BASE\n         ITRACE ID=ADD,                                                +\n               DATA1=LIB_FUNCTION_LIB_NAME,                            +\n               DATA2=USER_USER_ID\n         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\nADD0010  DS    0H\n         CLC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         BE    ADD0020\n         ICM   R4,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   ADD0010\n         ABEND 3,DUMP,,USER\nADD0020  DS    0H\n         ITRACE ID=ADD0020,                                            +\n               RDATA1=R5,                                              +\n               DATA2=LIB_USERS\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BNO   ADD0060                        NO\n         ICM   R6,15,LIB_USERS                FIRST USER\n         USING LIBUSER,R6                     DEFINE BASE\n         BZ    ADD0040                        NO USERS ON CHAIN\nADD0030  DS    0H\n         C     R5,LIB_USER_USER               SAME USERBLOK ADDRESS?\n         BE    ADD0050                        YES.. ALREADY ON CHAIN\n         ICM   R6,15,LIB_USER_NEXT            NEXT LIBUSER BLOCK\n         BNZ   ADD0030\nADD0040  DS    0H\n         GETMAIN RU,                                                   +\n               LV=LIBUSERL,                                            +\n               LOC=ANY\n         LR    R6,R1                          COPY NEW LIBUSER ADDRESS\n         MVC   LIB_USER_EYE,LIB_USER_ID\n         MVC   LIB_USER_NEXT,LIB_USERS\n         ST    R5,LIB_USER_USER\n         ST    R6,LIB_USERS\n         ITRACE ID=ADDED,                                              +\n               RDATA1=R4,                                              +\n               RDATA2=R6\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK\n         B     PROC0050\nADD0050  DS    0H\n         MVC   LIB_FUNCTION_MESSAGE(MSG09L),MSG09\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         B     PROC0050\nADD0060  DS    0H\n         ITRACE ID=CLOSED\n         MVC   LIB_FUNCTION_MESSAGE(MSG10L),MSG10\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR\n         B     PROC0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Dequeue a library.                                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREM0000  DS    0H\n         L     R5,LIB_FUNCTION_USER\n         ITRACE ID=REMOVE,                                             +\n               DATA1=LIB_FUNCTION_LIB_NAME,                            +\n               DATA2=USER_USER_ID\n         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\nREM0010  DS    0H\n         CLC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         BE    REM0020\n         ICM   R4,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   REM0010\n         ABEND 4,DUMP,,USER\nREM0020  DS    0H\n         LA    R7,LIB_USERS                   CHAIN POINT\n         ICM   R6,15,LIB_USERS                FIRST USER\n         BZ    REM0040                        NO USERS\nREM0030  DS    0H\n         C     R5,LIB_USER_USER               THIS USER?\n         BE    REM0050                        YES\n         LA    R7,LIB_USER_NEXT               CHAIN POINT\n         ICM   R6,15,LIB_USER_NEXT            NEXT USER\n         BNZ   REM0030\nREM0040  DS    0H\n         ITRACE ID=NOENQ\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK\n         B     PROC0050\nREM0050  DS    0H\n         MVC   0(4,R7),LIB_USER_NEXT\n         ITRACE ID=UNCHAIN\n         FREEMAIN RU,                                                  +\n               A=(R6),                                                 +\n               LV=LIBUSERL\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK\n         B     PROC0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     User subtask has ended.  Remove any LIBUSER blocks for the      *\n*     user from all libraries.                                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREM1000  DS    0H\n         ITRACE ID=REM_TASK,                                           +\n               DATA1=LIB_FUNCTION_USER\n         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK\n         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\nREM1020  DS    0H\n         LA    R7,LIB_USERS                   CHAIN POINT\n         ICM   R6,15,LIB_USERS                FIRST USER\n         BZ    REM1040                        NO USERS\nREM1030  DS    0H\n         CLC   LIB_FUNCTION_USER,LIB_USER_USER\n         BE    REM1050                        YES\n         LA    R7,LIB_USER_NEXT               CHAIN POINT\n         ICM   R6,15,LIB_USER_NEXT            NEXT USER\n         BNZ   REM1030\nREM1040  DS    0H\n         ICM   R4,15,LIB_NEXT\n         BNZ   REM1020\n         B     PROC0050\nREM1050  DS    0H\n         MVC   0(4,R7),LIB_USER_NEXT\n         ITRACE ID=UNCHAIN\n         FREEMAIN RU,                                                  +\n               A=(R6),                                                 +\n               LV=LIBUSERL\n         B     REM1020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         MVC   LIB_FUNCTION_MESSAGE,PRTDATA\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE\n         ST    R2,PRTNEXT-PRTBLOK(R1)                         '\n         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         BR    R8                             COMPLETE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE R13\n         FREEMAIN RU,                         FREEMAIN WORK AREA       +\n               A=(1),                                                  +\n               LV=WORKAREA_L\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        CLEAR REGISTER\n         BR    R14                            EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nALL      DC    CL8'ALL'\nHEX0000  DC    8X'00'\nHEXCHAR  DC    C'0123456789ABCDEF'\nPRTID    DC    CL8'PRTBLOK'\nDAIRID   DC    CL8'DAIRREQ'\nLIB_USER_ID    DC  CL8'LIBUSER'\n\nMSG01    DC    C'LSUBMAIN01E'\n         DC    C'Allocation failed for library '\nMSG01NAM DC    CL8' '\n         DC    C' ('\nMSG01DSN DC    CL44' '\n         DC    C'), R15='\nMSG01R15 DC    CL4' '\n         DC    C' ERR='\nMSG01ERR DC    CL4' '\n         DC    C' INFO='\nMSG01INF DC    CL4' '\n         DC    C' '\nMSG01L   EQU   *-MSG01\n\nMSG02    DC    C'LSUBMAIN02E'\n         DC    C'OPEN failed for library '\nMSG02NAM DC    CL8' '\n         DC    C' ('\nMSG02DSN DC    CL44' '\n         DC    C'), R15='\nMSG02R   DC    CL4' '\n         DC    C' '\nMSG02L   EQU   *-MSG02\nMSG03    DC    C'LSUBMAIN03I'\n         DC    C'LIBRARY '\nMSG03NAM DC    CL8' '\n         DC    C' ('\nMSG03DSN DC    CL44' '\n         DC    C') is open.'\nMSG03L   EQU   *-MSG03\n\nMSG04    DS    0C\n         DC    CL11'LSUBMAIN04I'\n         DC    C'Library '\nMSG04NAM DC    CL8' '\n         DC    C'('\nMSG04DSN DC    CL44' '\n         DC    C') is already closed'\nMSG04L   EQU   *-MSG04\nMSG05    DS    0C\n         DC    CL11'LSUBMAIN05I'\n         DC    C'Library '\nMSG05NAM DC    CL8' '\n         DC    C'('\nMSG05DSN DC    CL44' '\n         DC    C') closed'\nMSG05L   EQU   *-MSG05\n\nMSG06    DC    C'LSUBMAIN06E'\n         DC    C'De-allocation failed for library '\nMSG06NAM DC    CL8' '\n         DC    C' ('\nMSG06DSN DC    CL44' '\n         DC    C'), R15='\nMSG06R15 DC    CL4' '\n         DC    C' ERR='\nMSG06ERR DC    CL4' '\n         DC    C' INFO='\nMSG06INF DC    CL4' '\n         DC    C' '\nMSG06L   EQU   *-MSG06\nMSG07    DS    0C\n         DC    C'LSUBMAIN07E'\n         DC    C'Library '\nMSG07NAM DC    CL8' '\n         DC    C' is busy, cannot CLOSE at this time'\nMSG07L   EQU   *-MSG07\nMSG08    DS    0C\n         DC    C'LSUBMAIN08E'\n         DC    C'Library '\nMSG08NAM DC    CL8' '\n         DC    C' is already open'\nMSG08L   EQU   *-MSG08\nMSG09    DS    0C\n         DC    C'LSUBMAIN09E'\n         DC    C'User is already on user chain'\nMSG09L   EQU   *-MSG09\nMSG10    DS    0C\n         DC    C'LSUBMAIN10E'\n         DC    C'Library is closed'\nMSG10L   EQU   *-MSG10\nMSG11    DS    0C\n         DC    C'LSUBMAIN11E'\n         DC    C'Library '\nMSG11NAM DC    CL8' '\n         DC    C', DSN='\nMSG11DSN DC    CL44' '\n         DC    C' is not initialized'\nMSG11L   EQU   *-MSG11\n\nOPENI    OPEN  (*,UPDAT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\nRPLI     RPL   AM=VTAM\nRPLL     EQU   *-RPLI\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK       DSECT\n           LIBSAVE DSECT=NO\nWORKOCPL   DS      0F,(OPENL)X\nWORKRPL    DS      0F,(RPLL)X\nWORKRC     DS      H\n           PRTBLOK DSECT=NO\n           DAIRREQ DSECT=NO\n           LIBRECD DSECT=NO\n           DS      ($MAX_SOURCE_SIZE*2)X\nWORKAREA_L EQU     *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBFUNC  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LIBUSER  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGEXLST AM=VSAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGRPL   AM=VSAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA LIST=NO\n         COPY  REGEQU\n$MAX_SOURCE_SIZE EQU 8000\n         END   LSUBMAIN\n./ ADD NAME=SUBCKIN  0100-09250-09250-0919-00291-00291-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: SUBCKIN                                               *\n*                                                                     *\n*  Check in a member.                                                 *\n*                                                                     *\n*  Parameter list:                                                    *\n*         Library APPLID          8 characters                        *\n*         Library name            8 characters                        *\n*         Member name             8 characters                        *\n*         Function                8 characters                        *\n*         User dataset           44 characters                        *\n*         User member             8 characters                        *\n*         return code             2 characters                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUBCKIN  CSECT\nSUBCKIN  AMODE 31\nSUBCKIN  RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING SUBCKIN,R12                    DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'SUBCKIN'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESS\n         USING PARM_LIST,R10                  DEFINE BASE\n         USING VTAM_PARM_LIST,R11             DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=BELOW\n         ST    R1,8(R13)                      CHAIN OUR SAVE AREA\n         ST    R13,4(R1)                      CHAIN CALLER'S AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORK_AREA,R13                  DEFINE WORK AREA BASE\n         MVI   WORK_RC,0\n         LOAD  EP=LIBUX01\n         ST    R0,AUX01\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   Determine if user is authorized to check-in the specified member. *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R8,VTAM_PARM_IO                I/O AREA ADDRESS\n         USING NETBLOK,R8                     DEFINE BASE\n         MVI   NET_FUNCTION,$NET_CHECK_IN_AUTH\n         MVC   NET_LIB_NAME,PARM_LIB_NAME\n         MVC   NET_MEM_NAME,PARM_MEM_NAME\n         MVC   NET_MEM_VER,PARM_MEM_VERSION\n         LA    R1,NET_CHECK_IN_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA'\n         BAL   R9,SEND0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   The user is authorized to update this member.                     *\n*                                                                     *\n*   Normally the message area in the subroutine parms is for the      *\n*   LIBRARIAN to return messages to the user.  On check-ins the       *\n*   message area is for the user to supply the comments.              *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LA    R1,PARM_MSG                    FIRST PARM MESSAGE\n         LA    R2,5                           MAXIMUM NUMBER OF LINES\nDESC0000 DS    0H\n         CLC   BLANKS,0(R1)                   ALL BLANK?\n         BNE   DESC0010                       NO\n         LA    R1,80(R1)\n         BCT   R2,DESC0000                    LOOP\n         B     LIB0000\nDESC0010 DS    0H\n         MVC   NET_DATA(200),PARM_MSG\n         MVC   NET_DATA+200(200),PARM_MSG+200\n         LA    R1,NET_DATA+(80*4)             ADDRESS OF 5TH LINE\n         LA    R2,NETBLOKL+(80*5)             MAXIMUM LENGTH\n         LA    R3,5                           LOOP LIMITER\nDESC0020 DS    0H\n         CLC   BLANKS,0(R1)                   ALL BLANK?\n         BNE   DESC0030                       NO\n         SH    R1,H80                         BACK UP 1 LINE\n         SH    R2,H80                         BACK UP LENGTH\n         BCT   R3,DESC0020                    LOOP\nDESC0030 DS    0H\n         STCM  R2,3,NET_LENGTH                SET LENGTH\n         MVI   NET_FUNCTION,$NET_SEND_DESC\n         BAL   R9,SEND0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB0000  DS    0H                                                     *\n         GETMAIN RU,                                                   +\n               LV=DCBL,                                                +\n               LOC=BELOW\n         ST    R1,WORK_DCB\n         LR    R3,R1                          COPY DCB STORAGE ADDRESS\n         MVC   0(DCBL,R3),DCBI                INITIALIZE THE DCB\n         MVC   WORK_OCPL(OPENL),OPENI         INITIALIZE OPEN\n         OPEN  ((R3),INPUT),                                           +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=ANY\n         ST    R1,UX01_EXPANDED_BUFFER\n         LA    R1,WORK_EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER\n         ST    R1,UX01_COMPRESSED_BUFFER\n         LA    R1,WORK_COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n         SR    R4,R4                          INITIALIZE LENGTH\n         L     R5,UX01_EXPANDED_BUFFER\n         SR    R6,R6                          CLEAR FOR RECORD COUNTER\nLIB0010  DS    0H\n         GET   (R3),WORK_IO                   READ A RECORD\n         LA    R6,1(R6)                       PLUS 1 SOURCE RECORD\n         CH    R4,=y($MAX_SOURCE_SIZE)        BUFFER FULL?\n         BL    LIB0020                        NO\n         BAL   R9,SEND0000                    SEND THIS BUFFER\n         SR    R4,R4                          RESET BUFFER LENGTH\n         L     R5,UX01_EXPANDED_BUFFER        RESET BUFFER ADDRESS\nLIB0020  DS    0H\n         MVC   0(80,R5),WORK_IO               COPY TO BUFFER\n         LA    R4,80(R4)                      UPDATE BUFFER LENGTH\n         LA    R5,80(R5)                      UPDATE BUFFER ADDRESS\n         B     LIB0010                        READ NEXT RECORD\nEOF0000  DS    0H\n         MVI   NET_RETURN_CODE,$NET_EOF       LAST BUFFER\n         BAL   R9,SEND0000                    SEND LAST BUFFER\n         MVC   WORK_OCPL(CLOSEL),CLOSEI\n         CLOSE ((R3)),                                                 +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         FREEMAIN RU,A=(3),LV=DCBL\n         L     R1,UX01_EXPANDED_BUFFER        INPUT BUFFER ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE\n         MVI   NET_FUNCTION,$NET_SEND_RECORDS\n         MVI   NET_RETURN_CODE,$NET_OK\n         STCM  R6,15,NET_SOURCE_RECORDS       SET NUMBER OF RECORDS\n         LA    R1,NETBLOK+L'NET_SOURCE_RECORDS\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         BAL   R9,SEND0010\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    Compress and send the buffer                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         LTR   R4,R4                          BUFFER EMPTY?\n         BZR   R9                             YES\n         ST    R4,WORK_EXPANDED_LENGTH        SET LENGTH FOR COMPRESS\n         MVI   UX01_FUNCTION,$UX01_COMPRESS\n         LA    R1,UX01_PARMS                  USER EXIT 1 PARMS\n         L     R15,AUX01                      USER EXIT 1 ENTRY POINT\n         BALR  R14,R15                        COMPRESS\n         L     R1,WORK_COMPRESSED_LENGTH      COMPRESSED LENGTH\n         LA    R1,NETBLOKL(R1)                PLUS HEADER LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         MVI   NET_FUNCTION,$NET_CHECK_IN_SOURCE\nSEND0010 DS    0H\n         MVI   VTAM_PARM_CMD,$VTAM_SEND\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUBROUTINE\n         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUBROUTINE\n         CLI   NET_RETURN_CODE,$NET_OK        OK?\n         BNE   ERR0010                        NO\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   WORK_RC,NET_RETURN_CODE        SET RETURN CODE\n         LA    R2,PARM_MSG                    FIRST MESSAGE\n         LA    R15,5                          LOOP COUNTER\nERR0020  DS    0H\n         MVC   0(80,R2),BLANKS                CLEAR THE MESSAGE\n         LA    R2,80(R2)\n         BCT   R15,ERR0020                    LOOP\n         LA    R2,PARM_MSG\n         LA    R3,NET_DATA                    FIRST MESSAGE IN I/O AREA\n         SR    R15,R15                        CLEAR REGISTER\n         ICM   R15,3,NET_LENGTH               DATA LENGTH\n         SH    R15,=Y(NETBLOKL)               MINUS HEADER LENGTH\n         BZ    EXIT0000\nERR0030  DS    0H\n         MVC   0(80,R2),0(R3)                 COPY MESSAGE\n         LA    R2,80(R2)                      NEXT IN PARM AREA\n         LA    R3,80(R3)                      NEXT IN I/O AREA\n         SH    R15,H80                        MINUS LENGTH\n         BH    ERR0030                        COPY ALL MESSAGE LINES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         DELETE EP=LIBUX01\n         SR    R2,R2                          CLEAR REGISTER\n         IC    R2,WORK_RC                     SET RETURN CODE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=WORK_AREA_LENGTH\n         LR    R15,R2                         SET RETURN CODE\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVVTAMSUB DC    V(VTAMSUB)\n\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=LIBUSER,                                         +\n               MACRF=GM,                                               +\n               DCBE=DCBEXT\nDCBL     EQU   *-DCBI\nDCBEXT   DCBE  EODAD=EOF0000\nOPENI    OPEN  (*,OUTPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\nH80      DC    H'80'\nBLANKS   DC    CL80' '\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK_AREA              DSECT\n                       DS  18F\n\nAUX01                  DS  A\n                       UX01PARM DSECT=NO\n\nWORK_EXPANDED_LENGTH   DS  A            LENGTH OF EXPANDED DATA\nWORK_COMPRESSED_LENGTH DS  A            LENGTH OF COMPRESSED DATA\n\nWORK_DCB               DS  0F,(DCBL)X\nWORK_OCPL              DS  0F,(OPENL)X\n\nWORK_RC                DS  X\n\nWORK_IO                DS  CL80\n         VTAMPARM      DSECT=NO\n\nWORK_AREA_LENGTH       EQU *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM_LIST              DSECT\nPARM_APPL              DS       CL8\nPARM_LIB_NAME          DS       CL8\nPARM_MEM_NAME          DS       CL8\nPARM_MEM_VERSION       DS       XL2\nPARM_FUNCTION          DS       CL8\nPARM_USER_DSN          DS       CL44\nPARM_USER_MEMBER       DS       CL8\nPARM_RETURN_CODE       DS       C\nPARM_MSG               DS      0CL80\nPARM_MSG_1             DS       CL80\nPARM_MSG_2             DS       CL80\nPARM_MSG_3             DS       CL80\nPARM_MSG_4             DS       CL80\nPARM_MSG_5             DS       CL80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK       DSECT=YES\nNET_LIB_NAME           DS  CL8\nNET_MEM_NAME           DS  CL8\nNET_MEM_VER            DS  XL2\nNET_CHECK_IN_LENGTH    EQU *-NETBLOK\n         ORG           NET_DATA\nNET_SOURCE_RECORDS     DS  XL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$MAX_SOURCE_SIZE  EQU  8000\n         COPY REGEQU\n         END  SUBCKIN\n./ ADD NAME=SUBCKOUT 0100-09250-09250-0919-00276-00276-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: SUBCKOUT                                              *\n*                                                                     *\n*  Check out a member.                                                *\n*                                                                     *\n*  Parameter list:                                                    *\n*         Library APPLID          8 characters                        *\n*         Library name            8 characters                        *\n*         Member name             8 characters                        *\n*         Member version          2 bytes, hex                        *\n*         Function                8 characters                        *\n*         User dataset           44 characters                        *\n*         User member             8 characters                        *\n*         return code             2 characters                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUBCKOUT CSECT\nSUBCKOUT AMODE 31\nSUBCKOUT RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING SUBCKOUT,R12                   DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'SUBCKOUT'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESS\n         USING PARM_LIST,R10                  DEFINE BASE\n         USING VTAM_PARM_LIST,R11             DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=BELOW\n         ST    R1,8(R13)                      CHAIN OUR SAVE AREA\n         ST    R13,4(R1)                      CHAIN CALLER'S AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORK_AREA,R13                  DEFINE WORK AREA BASE\n         MVI   WORK_RC,0\n         XC    WORK_AUX01,WORK_AUX01\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Determine if user is authorized to check-out the specified member. *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R8,VTAM_PARM_IO                I/O AREA ADDRESS\n         USING NETBLOK,R8                     DEFINE BASE\n         MVI   NET_FUNCTION,$NET_CHECK_OUT_AUTH\n         MVC   NET_LIB_NAME,PARM_LIB_NAME\n         MVC   NET_MEM_NAME,PARM_MEM_NAME\n         MVC   NET_MEM_VERSION,PARM_MEM_VERSION\n         LA    R1,NET_CHECK_OUT_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         BAL   R9,SENDRECV\n         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?\n         BNE   ERR0010                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   The user is authorized to check-out this member.                  *\n*                                                                     *\n*   The LIBRARIAN will have returned the number of records in the     *\n*   original source.  We need this info to 'de-compress' the data.    *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   WORK_SOURCE_RECORDS,NET_SOURCE_RECORDS\n         LA    R2,5                           MAXIMUM NUMBER OF LINES\n         LA    R1,PARM_MSG                    FIRST MESSAGE\nINIT0010 DS    0h\n         MVC   0(80,R1),BLANKS\n         LA    R1,80(R1)\n         BCT   R2,INIT0010                    LOOP\n         MVI   NET_FUNCTION,$NET_CHECK_OUT_SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB0000  DS    0H                                                     *\n         GETMAIN RU,                                                   +\n               LV=DCBL,                                                +\n               LOC=BELOW\n         ST    R1,WORK_DCB\n         LR    R3,R1                          COPY DCB STORAGE ADDRESS\n         MVC   0(DCBL,R3),DCBI                INITIALIZE THE DCB\n         MVC   WORK_OCPL(OPENL),OPENI         INITIALIZE OPEN\n         OPEN  ((R3),OUTPUT),                                          +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=ANY\n         ST    R1,UX01_EXPANDED_BUFFER\n         LA    R1,WORK_EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER\n         ST    R1,UX01_COMPRESSED_BUFFER\n         LA    R1,WORK_COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n         OC    WORK_AUX01,WORK_AUX01          USER EXIT LOADED?\n         BNZ   LIB0010                        YES, SKIP LOAD\n         LOAD  EP=LIBUX01\n         ST    R0,WORK_AUX01\nLIB0010  DS    0H\n         LA    R1,NETBLOKL                    LENGTH IS HEADER ONLY\n         STCM  R1,3,NET_LENGTH\n         BAL   R9,SENDRECV                    SEND AND RECEIVE\n         CLI   NET_RETURN_CODE,$NET_ERROR     ERROR?\n         BE    ERR0020                        YES\n         CLI   NET_RETURN_CODE,$NET_EOF       EOF?\n         BE    EOF0000                        YES\n         L     R4,WORK_SOURCE_RECORDS         NUMBER OF SOURCE RECORDS\n         CH    R4,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?\n         BL    LIB0020                        NO\n         LH    R4,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER\nLIB0020  DS    0H                             CLEAR FOR RECORD COUNTER\n         ST    R4,WORK_CURRENT_RECORDS        NUMBER IN CURRENT BUFFER\n         L     R1,WORK_SOURCE_RECORDS         NUMBER OF RECORDS LEFT\n         SR    R1,R4                          MINUS NBR IN THIS BUFFER\n         ST    R1,WORK_SOURCE_RECORDS         SAVE REMAINDER\n         MH    R4,H80                         NUMBER * REC LENGTH\n         ST    R4,WORK_EXPANDED_LENGTH        SET LENGTH\n         MVI   UX01_FUNCTION,$UX01_DECOMPRESS\n         LA    R1,UX01_PARMS                  USER EXIT PARM LIST\n         L     R15,WORK_AUX01                 USER EXIT 1 ENTRY POINT\n         BALR  R14,R15                        ALLOW DE-COMPRESSION\n         L     R2,UX01_EXPANDED_BUFFER        UNCOMPRESSED DATA ADDRESS\n         L     R4,WORK_CURRENT_RECORDS        NUMBER OF RECORDS\nLIB0030  DS    0H\n         PUT   (R3),(R2)                      WRITE TO USER'S DATA SET\n         LA    R2,80(R2)                      NEXT RECORD\n         BCT   R4,LIB0030                     LOOP\n         B     LIB0010                        ASK FOR NEXT BLOCK\nEOF0000  DS    0H\n         MVC   WORK_OCPL(CLOSEL),CLOSEI\n         CLOSE ((R3)),                        CLOSE DCB                +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         FREEMAIN RU,A=(3),LV=DCBL\n         L     R1,UX01_EXPANDED_BUFFER        INPUT BUFFER ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Send the CONFIRM.                                              *\n*                                                                     *\n*      The LIBRARIAN does not update the member's statistics or       *\n*      CHECK-IN/CHECK-OUT status until it receives the CONFIRM.       *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   NET_FUNCTION,$NET_CONFIRM_CHECK_OUT\n         LA    R1,NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         BAL   R9,SENDRECV                    SEND CONFIRMATION\n         B     EXIT0000\nSENDRECV DS    0H\n         MVI   VTAM_PARM_CMD,$VTAM_SEND\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUB\n         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUB\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   WORK_RC,4                      SET RETURN CODE\n         MVC   PARM_MSG_1,NET_MSG_1           FIRST MESSAGE\n         MVC   PARM_MSG_2,NET_MSG_2           FIRST MESSAGE\n         MVC   PARM_MSG_3,NET_MSG_3           FIRST MESSAGE\n         MVC   PARM_MSG_4,NET_MSG_4           FIRST MESSAGE\n         MVC   PARM_MSG_5,NET_MSG_5           FIRST MESSAGE\nERR0020  DS    0H\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         OC    WORK_AUX01,WORK_AUX01          USER EXIT LOADED?\n         BZ    EXIT0010                       NO\n         DELETE EP=LIBUX01                    DELETE THE EXIT\n         XC    WORK_AUX01,WORK_AUX01          CLEAR THE ADDRESS\nEXIT0010 DS    0H\n         SR    R2,R2                          CLEAR REGISTER\n         IC    R2,WORK_RC                     SET RETURN CODE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=WORK_AREA_LENGTH\n         LR    R15,R2                         SET RETURN CODE\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVVTAMSUB DC    V(VTAMSUB)\n\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=LIBUSER,                                         +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               BLKSIZE=$MAX_SOURCE_SIZE,                               +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,OUTPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\nH80      DC    H'80'\nBLANKS   DC    CL80' '\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK_AREA              DSECT\n                       DS    18F\n\n                       UX01PARM DSECT=NO\n\nWORK_AUX01             DS    A\n\nWORK_EXPANDED_LENGTH   DS    A             LENGTH OF EXPANDED DATA\nWORK_COMPRESSED_LENGTH DS    A             LENGTH OF COMPRESSED DATA\n\nWORK_SOURCE_RECORDS    DS    F             NUMBER OF RECORDS IN SOURCE\nWORK_CURRENT_RECORDS   DS    F             NUMBER OF RECORDS IN BUFFER\n\nWORK_DCB               DS    0F,(DCBL)X\nWORK_OCPL              DS    0F,(OPENL)X\n\nWORK_RC                DS    X\n\n         VTAMPARM      DSECT=NO\n\nWORK_AREA_LENGTH       EQU   *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM_LIST              DSECT\nPARM_APPL              DS    CL8\nPARM_LIB_NAME          DS    CL8\nPARM_MEM_NAME          DS    CL8\nPARM_MEM_VERSION       DS    XL2\nPARM_FUNCTION          DS    CL8\nPARM_USER_DSN          DS    CL44\nPARM_USER_MEMBER       DS    CL8\nPARM_RETURN_CODE       DS    C\nPARM_MSG               DS   0CL80\nPARM_MSG_1             DS    CL80\nPARM_MSG_2             DS    CL80\nPARM_MSG_3             DS    CL80\nPARM_MSG_4             DS    CL80\nPARM_MSG_5             DS    CL80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                       NETBLOK  DSECT=YES\nNET_LIB_NAME           DS    CL8\nNET_MEM_NAME           DS    CL8\nNET_MEM_VERSION        DS    XL2\nNET_CHECK_OUT_LENGTH   EQU   *-NETBLOK\n                       ORG   NET_DATA\nNET_SOURCE_RECORDS     DS    XL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$MAX_SOURCE_SIZE       EQU   8000\n                       COPY  REGEQU\n         END  SUBCKOUT\n./ ADD NAME=SUBDEL   0100-09250-09250-0919-00154-00154-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: SUBDEL                                                *\n*                                                                     *\n*  DELETE a member                                                    *\n*                                                                     *\n*  Parameter list:                                                    *\n*         Library APPLID          8 characters                        *\n*         Library name            8 characters                        *\n*         Member name             8 characters                        *\n*         Function                8 characters                        *\n*         User dataset           44 characters                        *\n*         User member             8 characters                        *\n*         return code             2 characters                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUBDEL   CSECT\nSUBDEL   AMODE 31\nSUBDEL   RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING SUBDEL,R12                     DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'SUBDEL'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESS\n         USING PARM_LIST,R10                  DEFINE BASE\n         USING VTAM_PARM_LIST,R11             DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=ANY\n         ST    R1,8(R13)                      CHAIN OUR SAVE AREA\n         ST    R13,4(R1)                      CHAIN CALLER'S AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORK_AREA,R13                  DEFINE WORK AREA BASE\n         MVI   WORK_RC,0\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   Determine if user is authorized                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R8,VTAM_PARM_IO                I/O AREA ADDRESS\n         USING NETBLOK,R8                     DEFINE BASE\n         MVI   NET_FUNCTION,$NET_CHECK_DEL_AUTH\n         MVC   NET_LIB_NAME,PARM_LIB_NAME\n         MVC   NET_MEM_NAME,PARM_MEM_NAME\n         MVC   NET_MEM_VER,PARM_MEM_VERSION\n         LA    R1,NET_DESC_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA'\n         BAL   R9,SEND0000\n         CLI   NET_RETURN_CODE,$NET_ERROR\n         BE    ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   The user is authorized                                            *\n*                                                                     *\n*   Send the DELETE command                                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         STCM  R2,3,NET_LENGTH                SET LENGTH\n         MVI   NET_FUNCTION,$NET_DELETE\n         BAL   R9,SEND0000\n         CLI   NET_RETURN_CODE,$NET_ERROR\n         BE    ERR0010\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         MVI   VTAM_PARM_CMD,$VTAM_SEND\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUB\n         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUB\n         MVC   PARM_MSG_1,NET_MSG_1           COPY MESSAGE\n         MVC   PARM_MSG_2,NET_MSG_2           COPY MESSAGE\n         MVC   PARM_MSG_3,NET_MSG_3           COPY MESSAGE\n         MVC   PARM_MSG_4,NET_MSG_4           COPY MESSAGE\n         MVC   PARM_MSG_5,NET_MSG_5           COPY MESSAGE\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   WORK_RC,8                      SET NON ZERO RETURN CODE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         SR    R2,R2                          CLEAR REGISTER\n         IC    R2,WORK_RC                     SET RETURN CODE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,A=(1),LV=WORK_AREA_LENGTH\n         LR    R15,R2                         SET RETURN CODE\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVVTAMSUB DC    V(VTAMSUB)\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK_AREA           DSECT\n                    DS  18F\nWORK_RC             DS  X\n\n         VTAMPARM   DSECT=NO\n\nWORK_AREA_LENGTH    EQU   *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM_LIST           DSECT\nPARM_APPL           DS    CL8\nPARM_LIB_NAME       DS    CL8\nPARM_MEM_NAME       DS    CL8\nPARM_MEM_VERSION    DS    XL2\nPARM_FUNCTION       DS    CL8\nPARM_USER_DSN       DS    CL44\nPARM_USER_MEMBER    DS    CL8\nPARM_RETURN_CODE    DS    C\nPARM_MSG            DS   0CL80\nPARM_MSG_1          DS    CL80\nPARM_MSG_2          DS    CL80\nPARM_MSG_3          DS    CL80\nPARM_MSG_4          DS    CL80\nPARM_MSG_5          DS    CL80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK    DSECT=YES\nNET_LIB_NAME        DS    CL8\nNET_MEM_NAME        DS    CL8\nNET_MEM_VER         DS    XL2\nNET_DESC_LENGTH     EQU   *-NETBLOK\nNET_MEM_DOC         DS    XL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  SUBDEL\n./ ADD NAME=SUBLIBS  0100-09250-09250-0919-00175-00175-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: SUBLIBS                                               *\n*                                                                     *\n*  Returns a list of libraries available from this librarian.         *\n*                                                                     *\n*  Parameter list:                                                    *\n*         Library APPLID          8 characters                        *\n*         Library name            8 characters                        *\n*         Member name             8 characters                        *\n*         Function                8 characters                        *\n*         User dataset           44 characters                        *\n*         User member             8 characters                        *\n*         Return code             2 characters                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUBLIBS  CSECT\nSUBLIBS  AMODE 31\nSUBLIBS  RMODE ANY\n         STM   R14,R12,12(R13)                  SAVE REGISTERS\n         LR    R12,R15                          SET BASE REGISTER\n         USING SUBLIBS,R12                      DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'SUBLIBS'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LM    R10,R11,0(R1)                    COPY PARM BLOCK ADDRESS\n         USING PARM_LIST,R10                    DEFINE BASE\n         USING VTAM_PARM_LIST,R11               DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=BELOW\n         ST    R1,8(R13)                        CHAIN OUR SAVE AREA\n         ST    R13,4(R1)                        CHAIN CALLER'S AREA\n         LR    R13,R1                           COPY WORK AREA ADDRESS\n         USING WORK_AREA,R13                    DEFINE WORK AREA BASE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n*        WTO   'SUBLIBS GETMAIN DCB'\n         GETMAIN RU,                                                   +\n               LV=DCBL,                                                +\n               LOC=BELOW\n         ST    R1,WORK_DCB\n         LR    R3,R1                            COPY DCB ADDRESS\n         MVC   0(DCBL,R3),DCBI                  INITIALIZE THE DCB\n         MVC   WORK_OCPL(OPENL),OPENI           INITIALIZE OPEN\n*        WTO   'SUBLIBS OPEN DCB'\n         OPEN  ((R3),OUTPUT),                                          +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB0000  DS    0H\n*        WTO   'SUBLIBS ISSUE SEND'\n         L     R9,VTAM_PARM_IO                  I/O AREA ADDRESS\n         USING NETBLOK,R9                       DEFINE BASE\n         MVI   NET_FUNCTION,$NET_GET_LIBS\n         LA    R1,NETBLOKL\n         STCM  R1,3,NET_LENGTH                  SET LENGTH\n         XC    NET_FILL,NET_FILL                CLEAR THE FILLER AREA'\n         MVI   VTAM_PARM_CMD,$VTAM_SEND\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                     VTAM SUB ENTRY POINT\n         BALR  R14,R15                          LINK TO VTAM SUB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n*        WTO   'SUBLIBS ISSUE RECEIVE'\n         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                     VTAM SUB ENTRY POINT\n         BALR  R14,R15                          LINK TO VTAM SUB\n         MVC   WORK_IO,BLANKS\n         SR    R0,R0                            CLEAR REGISTER\n         SR    R1,R1                            CLEAR REGISTER\n         ICM   R1,3,NET_LENGTH                  TOTAL DATA LENGTH\n         SH    R1,=Y(NETBLOKL)                  MINUS PREFIX LENGTH\n         D     R0,=A(NET_LIBRARY_LENGTH)        NUMBER IN THIS BUFFER\n         LTR   R2,R1                            ZERO?\n         BZ    LIB0020                          YES\n         LA    R4,NET_LIBRARY_NAMES             FIRST LIBRARY NAME\nLIB0010  DS    0H\n*        WTO   'SUBLIBS WRITE TO USER DATA SET'\n         MVC   WORK_IO(NET_LIBRARY_LENGTH),0(R4)\n         PUT   (R3),WORK_IO                     WRITE TO DATA SET\n         LA    R4,NET_LIBRARY_LENGTH(R4)\n         BCT   R2,LIB0010\nLIB0020  DS    0H\n         CLI   NET_RETURN_CODE,$NET_EOF\n         BNE   LIB0000                NO\n*        WTO   'SUBLIBS CLOSE DCB'\n         MVC   WORK_OCPL(CLOSEL),CLOSEI\n         CLOSE ((R3)),                                                 +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         FREEMAIN RU,                                                  +\n               A=(R3),                                                 +\n               LV=DCBL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n*        WTO   'SUBLIBS EXIT'\n         LR    R1,R13                           COPY WORK AREA ADDRESS\n         L     R13,4(R13)                       RESTORE R13\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=WORK_AREA_LENGTH\n         LM    R14,R12,12(R13)                  RESTORE R14\n         SR    R15,R15                          SET RETURN CODE TO ZERO\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVVTAMSUB DC    V(VTAMSUB)\n\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=LIBUSER,                                         +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,OUTPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\nBLANKS   DC    CL80' '\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK_AREA           DSECT\n                    DS   18F\n\nWORK_DCB            DS   (DCBL)X\nWORK_OCPL           DS   (OPENL)X\nWORK_IO             DS   CL80\n         VTAMPARM   DSECT=NO\n\nWORK_AREA_LENGTH    EQU  *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM_LIST           DSECT\nPARM_APPL           DS   CL8\nPARM_LIB_NAME       DS   CL8\nPARM_MEM_NAME       DS   CL8\nPARM_FUNCTION       DS   CL8\nPARM_USER_DSN       DS   CL44\nPARM_USER_MEMBER    DS   CL8\nPARM_RETURN_CODE    DS   CL2\nPARM_MSG            DS  0CL80\nPARM_MSG_1          DS   CL80\nPARM_MSG_2          DS   CL80\nPARM_MSG_3          DS   CL80\nPARM_MSG_4          DS   CL80\nPARM_MSG_5          DS   CL80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK    DSECT=YES\nNET_LIBRARY_NAMES   DS   0C\nNET_LIBRARY_NAME    DS   CL8\nNET_LIBRARY_DESC    DS   CL40\nNET_LIBRARY_STATUS  DS   x\nNET_LIBRARY_LENGTH  EQU  *-NET_LIBRARY_NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  SUBLIBS\n./ ADD NAME=SUBMAIN  0100-09250-09250-0919-00490-00490-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: SUBMAIN - \"SUBROUTINE\" INTERFACE TO THE LIBRARIAN.    *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  Parmeter list:                                                     *\n*         Library APPLID          8 characters                        *\n*         Library name            8 characters                        *\n*         Member name             8 characters                        *\n*         Member version          2 bytes, binary                     *\n*         Function                8 characters                        *\n*         User dataset           44 characters                        *\n*         User member             8 characters                        *\n*         return code             1 character                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUBMAIN  CSECT\nSUBMAIN  AMODE 31\nSUBMAIN  RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING SUBMAIN,R12                    DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'SUBMAIN'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LR    R10,R1                         COPY PARM BLOCK ADDRESS\n         USING PARM_LIST,R10                  DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=BELOW\n         ST    R1,8(R13)                      CHAIN OUR SAVE AREA\n         ST    R13,4(R1)                      CHAIN CALLER'S AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORK_AREA,R13                  DEFINE WORK AREA BASE\n         MVI   WORK_FLAGS,0                   CLEAR ALL FLAGS\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nINIT0010 DS    0H\n         MVI   PARM_RETURN_CODE,0\n         ST    R10,SUB_PARM_PARM1\n         LA    R1,VTAM_PARM_LIST\n         ST    R1,SUB_PARM_PARM2\n*---------------------------------------------------------------------*\n*        Verify function                                              *\n*---------------------------------------------------------------------*\n         LA    R8,FNCTABLE                    FUNCTION TABLE ADDRESS\n         USING FNCDSECT,R8                    DEFINE BASE\nINIT0020 DS    0H\n         CLI   0(R8),X'FF'                    END OF TABLE?\n         BE    ERR0010                        YES\n         CLC   PARM_FUNCTION,FNCFUNC          FUNCTION FOUND?\n         BE    INIT0030                       YES\n         LA    R8,FNCL(R8)                    NEXT FUNCTION\n         B     INIT0020                       LOOP\n*---------------------------------------------------------------------*\n*        Allocate user data set                                       *\n*---------------------------------------------------------------------*\nINIT0030 DS    0H\n         MVC   SUB0001_PARM_DSN,PARM_USER_DSN\n         LA    R1,SUB0001_PARM_LIST\n         L     R15,VSUB0001                   SUB0001 ENTRY POINT\n         BALR  R14,R15                        LINK TO SUB0001\n         CLI   SUB0001_PARM_DSORG,C'S'        SEQUENTIAL FILE?\n         BE    INIT0040                       YES\n         CLI   SUB0001_PARM_DSORG,C'P'        PARTITIONED?\n         BNE   ERR0090                        NO\n         CLC   PARM_USER_MEMBER,BLANKS        MEMBER GIVEN?\n         BE    ERR0100                        NO\n         B     INIT0050\nINIT0040 DS    0H\n         CLC   PARM_USER_MEMBER,BLANKS        MEMBER GIVEN?\n         BNE   ERR0110                        YES\nINIT0050 DS    0H\n         BAL   R9,DAIR0000                    ALLOCATE THE DATA SET\n         LTR   R15,R15                        DATA SET ALLOCATED?\n         BNZ   ERR0020                        NO\n         OI    WORK_FLAGS,$USER_ALLOCATED\n*---------------------------------------------------------------------*\n*        Establish link to STC                                        *\n*---------------------------------------------------------------------*\n         XC    VTAM_PARM_LIST(VTAM_PARM_LENGTH),VTAM_PARM_LIST\n         MVI   VTAM_PARM_CMD,$VTAM_OPEN\n         MVC   VTAM_PARM_APPL,PARM_APPL\n         LA    R1,VTAM_PARM_LIST              PARM LIST ADDRESS\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUB\n         CLI   VTAM_PARM_RC,1                 ALL INTERFACES BUSY?\n         BE    ERR0030                        YES\n         CLI   VTAM_PARM_RC,2                 CNOS FAILURE?\n         BE    ERR0040                        YES\n         CLI   VTAM_PARM_RC,3                 RECEIVE FAILURE?\n         BE    ERR0050                        YES\n         CLI   VTAM_PARM_RC,4                 LIBRARY ACTIVE?\n         BE    ERR0060                        NO\n         CLI   VTAM_PARM_RC,5                 SMF NOT ACTIVE?\n         BE    ERR0070                        NO\n         CLI   VTAM_PARM_RC,0                 OTHERWISE ZERO?\n         BNE   ERR0080                        NO\n         OI    WORK_FLAGS,$ACB_OPEN           ACB IS OPEN\n* ------------------------------------------------------------------- *\n*        Perform requested function                                   *\n* ------------------------------------------------------------------- *\n         L     R15,FNCADDR\n         BR    R15                            LINK TO FUNCTION\n* ------------------------------------------------------------------- *\n*                                                                     *\n*           1) Verify user is authorized.                             *\n*           2) Open the source file.                                  *\n*           3) Read/transmit the source code.                         *\n*           4) Send \"end of file\".                                    *\n*           5) Close the source file.                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKIN0000 DS    0H\n         LA    R1,SUB_PARM_LIST\n         L     R15,VSUBCKIN                   CHECK-IN SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO CHECK-IN SUB\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB0000  DS    0H\n         LA    R1,SUB_PARM_LIST\n         L     R15,VSUBLIBS                   LIBRARY LIST SUB EP\n         BALR  R14,R15                        LINK TO LIBRARY LIST SUB\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMEM0000  DS    0H\n         LA    R1,SUB_PARM_LIST\n         L     R15,VSUBMEMS                   LIBRARY LIST SUB EP\n         BALR  R14,R15                        LINK TO LIBRARY LIST SUB\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKOUT000 DS    0H\n         LA    R1,SUB_PARM_LIST\n         L     R15,VSUBCKOUT                  CHECK-OUT SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO CHECK-OUT SUB\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDOC0000  DS    0H\n         LA    R1,SUB_PARM_LIST\n         L     R15,VSUBMDOC                   DOCUMENTATION ENTRY POINT\n         BALR  R14,R15                        LINK TO DOCUMENTATION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEL0000  DS    0H\n         LA    R1,SUB_PARM_LIST\n         L     R15,VSUBDEL                    MEMBER DELETE ENTRY POINT\n         BALR  R14,R15                        LINK TO MEMBER DELETE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVIEW0000 DS    0H\n         LA    R1,SUB_PARM_LIST\n         L     R15,VSUBVIEW                   MEMBER VIEW ENTRY POINT\n         BALR  R14,R15                        LINK TO MEMBER DELETE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDAIR0000 DS    0H\n         LA    R3,WORK_RB                     DAIR REQUEST BLOCK\n         USING S99RB,R3\n         ST    R3,WORK_RB_ADDRESS             SET ADDRESS\n         OI    WORK_RB_ADDRESS,X'80'          SET 'END-OF-LIST'\n         MVC   WORK_DAIR_PARMS(WORK_DAIR_PARMSL),DAIRPI                 ETERS\n         XC    WORK_RB(S99RBEND-S99RB),WORK_RB\n         MVI   S99VERB,S99VRBAL               SET VERB\n         MVI   S99RBLN,S99RBEND-S99RB\n         MVC   WORK_DSN,PARM_USER_DSN         DATASET NAME\n         MVC   WORK_MEMBER,PARM_USER_MEMBER\n         MVC   WORK_DD,LIBUSER                DD NAME\n         LA    R1,WORK_TXTP1                  FIRST TEXT UNIT POINTER\n         ST    R1,S99TXTPP                    SET TEXT ADDRESS\n         LA    R1,WORK_DD_PARM                DDNAME PARAMETER\n         ST    R1,WORK_TXTP1                  SET PARAMETER 1 ADDRESS\n         LA    R1,WORK_DSN_PARM               DATASET NAME PARAMETER\n         ST    R1,WORK_TXTP2                  SET PARAMETER 2 ADDRESS\n         LA    R1,WORK_DISP_PARM              INITIAL DISPOSITION\n         ST    R1,WORK_TXTP3                  SET PARAMETER 3 ADDRESS\n         OI    WORK_TXTP3,X'80'               FLAG END-OF-LIST\n         CLC   WORK_MEMBER,BLANKS             MEMBER NAME PRESENT?\n         BE    DAIR0010                       NO\n         NI    WORK_TXTP3,X'7F'               TURN OFF END-OF-LIST\n         LA    R1,WORK_MEM_PARM               MEMBER NAME\n         ST    R1,WORK_TXTP4                  SET PARAMETER 4 ADDRESS\n         OI    WORK_TXTP4,X'80'               FLAG END-OF-LIST\nDAIR0010 DS    0H\n         LA    R1,WORK_RB_ADDRESS\n         SVC   99                             ISSUE SVC\n         STH   R15,WORK_R15                   SAVE RETURN CODE\n         BR    R9\nDAIR1000 DS    0H\n         MVI   S99VERB,S99VRBUN               SET VERB\n         LA    R15,WORK_DD_PARM               DDNAME PARAMETER\n         ST    R15,WORK_TXTP1                 SET PARAMETER 1 ADDRESS\n         OI    WORK_TXTP1,X'80'               FLAG END OF LIST\n         MVI   S99RBLN,S99RBEND-S99RB\n         LA    R1,WORK_TXTP1                  FIRST TEXT UNIT POINTER\n         ST    R1,S99TXTPP                    SET TEXT ADDRESS\n         MVC   WORK_DD,LIBUSER                DD NAME\n         LA    R1,WORK_RB_ADDRESS             REQUEST BLOCK POINTER\n         SVC   99                             ISSUE SVC\n         STH   R15,WORK_R15                   SAVE RETURN CODE\n         BR    R9\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   PARM_RETURN_CODE,C'E'\n         MVC   PARM_MSG_1(MSG01L),MSG01\n         B     EXIT0000\nERR0020  DS    0H\n         MVI   PARM_RETURN_CODE,C'E'\n         MVC   PARM_MSG_1(MSG02L),MSG02\n         MVC   PARM_MSG_2(MSG03L),MSG03\n         UNPK  PARM_MSG_2+(MSG03_R15-MSG03)(5),WORK_R15(3)\n         MVZ   PARM_MSG_2+(MSG03_R15-MSG03)(4),HEXZERO\n         MVZ   PARM_MSG_2+(MSG03_R15-MSG03)(4),HEXCHAR\n         MVI   PARM_MSG_2+(MSG03_R15-MSG03)+4,C' '\n         UNPK  PARM_MSG_2+(MSG03_ERR-MSG03)(5),S99ERROR(3)\n         MVZ   PARM_MSG_2+(MSG03_ERR-MSG03)(4),HEXZERO\n         MVZ   PARM_MSG_2+(MSG03_ERR-MSG03)(4),HEXCHAR\n         MVI   PARM_MSG_2+(MSG03_ERR-MSG03)+4,C' '\n         UNPK  PARM_MSG_2+(MSG03_INFO-MSG03)(5),S99INFO(3)\n         MVZ   PARM_MSG_2+(MSG03_INFO-MSG03)(4),HEXZERO\n         MVZ   PARM_MSG_2+(MSG03_INFO-MSG03)(4),HEXCHAR\n         MVI   PARM_MSG_2+(MSG03_INFO-MSG03)+4,C' '\n         B     EXIT0000\nERR0030  DS    0H\n         MVI   PARM_RETURN_CODE,C'E'\n         MVC   PARM_MSG_1(MSG04L),MSG04\n         B     EXIT0000\nERR0040  DS    0H\n         MVI   PARM_RETURN_CODE,C'E'\n         MVC   PARM_MSG_1(MSG05L),MSG05\n         B     EXIT0000\nERR0050  DS    0H\n         MVI   PARM_RETURN_CODE,C'E'\n         MVC   PARM_MSG_1(MSG06L),MSG06\n         B     EXIT0000\nERR0060  DS    0H\n         MVI   PARM_RETURN_CODE,C'E'\n         MVC   PARM_MSG_1(MSG07L),MSG07\n         B     EXIT0000\nERR0070  DS    0H\n         MVI   PARM_RETURN_CODE,C'E'\n         MVC   PARM_MSG_1(MSG08L),MSG08\n         B     EXIT0000\nERR0080  DS    0H\n         MVI   PARM_RETURN_CODE,C'E'\n         ABEND 1,DUMP,,USER\nERR0090  DS    0H\n         MVI   PARM_RETURN_CODE,C'E'\n         MVC   PARM_MSG_1(MSG09L),MSG09\n         b     exit0000\nERR0100  DS    0H\n         MVI   PARM_RETURN_CODE,C'E'\n         MVC   PARM_MSG_1(MSG10L),MSG10\n         B     EXIT0000\nERR0110  DS    0H\n         MVI   PARM_RETURN_CODE,C'E'\n         MVC   PARM_MSG_1(MSG11L),MSG11\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         TM    WORK_FLAGS,$USER_ALLOCATED\n         BNO   EXIT0010                       NOT ALLOCATED\n         BAL   R9,DAIR1000                    FREE THE USER DATA SET\nEXIT0010 DS    0H\n         TM    WORK_FLAGS,$ACB_OPEN           ACB OPEN?\n         BNO   EXIT0020                       NO\n         MVI   VTAM_PARM_CMD,$VTAM_CLOSE\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        CLOSE THE ACB\nEXIT0020 DS    0H\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,A=(1),LV=WORK_AREA_LENGTH\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        SET RETURN CODE TO ZERO\n         BSM   R0,R14                         RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVSUBCKIN DC    V(SUBCKIN)\nVSUBCKOUT DC   V(SUBCKOUT)\nVSUBDEL  DC    V(SUBDEL)\nVSUBMDOC DC    V(SUBMDOC)\nVSUBLIBS DC    V(SUBLIBS)\nVSUBMEMS DC    V(SUBMEMS)\nVSUBVIEW DC    V(SUBVIEW)\nVSUB0001 DC    V(SUB0001)\nVVTAMSUB DC    V(VTAMSUB)\n\nFNCTABLE DS    0A\n         DC    CL8'CHECKIN ',AL4(CKIN0000)\n         DC    CL8'CHECKOUT',AL4(CKOUT000)\n         DC    CL8'CKIN    ',AL4(CKIN0000)\n         DC    CL8'CKOUT   ',AL4(CKOUT000)\n         DC    CL8'COM     ',AL4(DOC0000)\n         DC    CL8'COMM    ',AL4(DOC0000)\n         DC    CL8'COMMENT ',AL4(DOC0000)\n         DC    CL8'COMMENTS',AL4(DOC0000)\n         DC    CL8'DEL     ',AL4(DEL0000)\n         DC    CL8'DELETE  ',AL4(DEL0000)\n         DC    CL8'DESC    ',AL4(DOC0000)\n         DC    CL8'DESCRIP ',AL4(DOC0000)\n         DC    CL8'DESCRIPT',AL4(DOC0000)\n         DC    CL8'DOC     ',AL4(DOC0000)\n         DC    CL8'DOCS    ',AL4(DOC0000)\n         DC    CL8'DOCUMENT',AL4(DOC0000)\n         DC    CL8'IN      ',AL4(CKIN0000)\n         DC    CL8'LIB     ',AL4(LIB0000)\n         DC    CL8'LIBS    ',AL4(LIB0000)\n         DC    CL8'LIB LIST',AL4(LIB0000)\n         DC    CL8'MEM     ',AL4(MEM0000)\n         DC    CL8'MEMS    ',AL4(MEM0000)\n         DC    CL8'MEM LIST',AL4(MEM0000)\n         DC    CL8'OUT     ',AL4(CKOUT000)\n         DC    CL8'REMOVE  ',AL4(DEL0000)\n         DC    CL8'VIEW',AL4(VIEW0000)\n         DC    X'FF'\n\nDAIRPI   DC    AL2(DALDDNAM)         DDNAME PARMS\n         DC    AL2(1)\n         DC    AL2(8)\n         DC    CL8' '                DDNAME\n\n         DC    AL2(DALDSNAM)         DATASET NAME PARMS\n         DC    AL2(1)\n         DC    AL2(44)\n         DC    CL44' '               DATASET NAME\n\n         DC    AL2(DALMEMBR)         MEMBER NAME\n         DC    AL2(1)\n         DC    AL2(8)\n         DC    CL8' '                MEMBER NAME\n\n         DC    AL2(DALSTATS)         INITIAL DISPOSITION PARMS\n         DC    AL2(1)\n         DC    AL2(1)\n         dc    X'08'                 DISP=SHR\n\nBLANKS   DC    CL80' '\nLIBUSER  DC    CL8'LIBUSER'\nHEXZERO  DC    8X'00'\nHEXCHAR  DC    C'0123456789ABCDEF'\n\n         LTORG\n\nMSG01       DC    C'SUBMAIN01E   Invalid function'\nMSG01L      EQU   *-MSG01\nMSG02       DC    C'SUBMAIN02E   Could not allocate user data set'\nMSG02L      EQU   *-MSG02\nMSG03       DS    0c\n            DC    C'SUBMAIN03E'\n            DC    C'  DAIR R15='\nMSG03_R15   DC    CL4' '\n            DC    C'  ERR='\nMSG03_ERR   DC    CL4' '\n            DC    C'  INFO='\nMSG03_INFO  DC    CL4' '\n            DC    C' '\nMSG03L      EQU   *-MSG03\nMSG04       DC    C'SUBMAIN04E   All VTAM intefaces are busy'\nMSG04L      EQU   *-MSG04\nMSG05       DC    C'SUBMAIN05E   VTAM CNOS failed'\nMSG05L      EQU   *-MSG05\nMSG06       DC    C'SUBMAIN06E   RECEIVE failed during user identify'\nMSG06L      EQU   *-MSG06\nMSG07       DC    C'SUBMAIN07E   Library is not active'\nMSG07L      EQU   *-MSG07\nMSG08       DC    C'SUBMAIN08E   SMF not active, cannot identify user'\nMSG08L      EQU   *-MSG08\nMSG09       DC    C'SUBMAIN09E   User data set DSORG is not PS or PO'\nMSG09L      EQU   *-MSG09\nMSG10       DC    C'SUBMAIN10E   When user data is partitioned, member +\n               name is required'\nMSG10L      EQU   *-MSG10\nMSG11       DC    C'SUBMAIN11E   When user data is sequential, member n+\n               ame is not allowed'\nMSG11L      EQU   *-MSG11\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK_AREA         DSECT\n                  DS    18F\n\nSUB_PARM_LIST     DS    0A\nSUB_PARM_PARM1    DS    A                 ADDRESS OF OUR PARM LIST\nSUB_PARM_PARM2    DS    A                 ADDRESS OF VTAM PARM LIST\n\nWORK_RB_ADDRESS   DS    A                 REQUEST BLOCK'S ADDRESS\nWORK_RB           DS    (S99RBEND-S99RB)X\nWORK_TXTP1        DS    A                 TEXT UNIT 1'S ADDRESS\nWORK_TXTP2        DS    A                 TEXT UNIT 2'S ADDRESS\nWORK_TXTP3        DS    A                 TEXT UNIT 3'S ADDRESS\nWORK_TXTP4        DS    A                 TEXT UNIT 4'S ADDRESS\nWORK_DAIR_PARMS   DS   0C\nWORK_DD_PARM      DS    AL2,AL2,AL2       DDNAME PARMS\nWORK_DD           DS    CL8               DDNAME\nWORK_DSN_PARM     DS    AL2,AL2,AL2       DATASET NAME PARMS\nWORK_DSN          DS    CL44              DATASET NAME\nWORK_MEM_PARM     DS    AL2,AL2,AL2       MEMBER NAME PARMS\nWORK_MEMBER       DS    CL8               MEMBER NAME\nWORK_DISP_PARM    DS    AL2,AL2,AL2       INITIAL DISPOSITION PARMS\nWORK_DISP         DS    X                 INITIAL DISPOSITION\nWORK_DAIR_PARMSL  EQU   *-WORK_DAIR_PARMS\nWORK_R15          DS    H\n\n         VTAMPARM  DSECT=NO\n\nWORK_FLAGS         DS    X\n$USER_ALLOCATED    EQU   X'80'\n$ACB_OPEN          EQU   X'40'\n\nSUB0001_PARM_LIST  DS   0A\nSUB0001_PARM_DSN   DS   CL44\nSUB0001_PARM_DSORG DS   C\n\nWORK_AREA_LENGTH   EQU   *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM_LIST         DSECT\nPARM_APPL         DS       CL8\nPARM_LIB_NAME     DS       CL8\nPARM_MEM_NAME     DS       CL8\nPARM_MEM_VERSION  DS       XL2\nPARM_FUNCTION     DS       CL8\nPARM_USER_DSN     DS       CL44\nPARM_USER_MEMBER  DS       CL8\nPARM_RETURN_CODE  DS       C\nPARM_MSG          DS      0CL80\nPARM_MSG_1        DS       CL80\nPARM_MSG_2        DS       CL80\nPARM_MSG_3        DS       CL80\nPARM_MSG_4        DS       CL80\nPARM_MSG_5        DS       CL80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFNCDSECT          DSECT\nFNCFUNC           DS       CL8\nFNCADDR           DS       AL4\nFNCL              EQU      *-FNCDSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK        DSECT=YES\n                        ORG NET_DATA\nNET_SMF                 DS  CL4\nNET_USER                DS  CL8\nNET_IDENTIFY_LENGTH     EQU *-NETBLOK\n                        ORG NET_DATA\nNET_NUMBER_OF_LIBRARIES DS  XL2\nNET_LIBRARY_NAMES       DS  0C\nNET_LIBRARY_NAME        DS  cL8\nNET_LIBRARY_DESC        DS  CL40\nNET_LIBRARY_LENGTH      EQU *-NET_LIBRARY_NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DCBD     DSORG=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEFZB4D0\n         IEFZB4D2\n         COPY REGEQU\n         END  SUBMAIN\n./ ADD NAME=SUBMDOC  0100-09250-09250-0919-00175-00175-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: SUBMDOC                                               *\n*                                                                     *\n*  Check in a member.                                                 *\n*                                                                     *\n*  Parameter list:                                                    *\n*         Library APPLID          8 characters                        *\n*         Library name            8 characters                        *\n*         Member name             8 characters                        *\n*         Function                8 characters                        *\n*         User dataset           44 characters                        *\n*         User member             8 characters                        *\n*         return code             2 characters                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUBMDOC  CSECT\nSUBMDOC  AMODE 31\nSUBMDOC  RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING SUBMDOC,R12                    DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'SUBMDOC'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESSES\n         USING PARM_LIST,R10                  DEFINE BASE\n         USING VTAM_PARM_LIST,R11             DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=BELOW\n         ST    R1,8(R13)                      CHAIN OUR SAVE AREA\n         ST    R13,4(R1)                      CHAIN CALLER'S AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORK_AREA,R13                  DEFINE WORK AREA BASE\n         MVI   WORK_RC,0\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   Determine if user is authorized                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R8,VTAM_PARM_IO                I/O AREA ADDRESS\n         USING NETBLOK,R8                     DEFINE BASE\n         MVI   NET_FUNCTION,$NET_CHECK_DESC_AUTH\n         MVC   NET_LIB_NAME,PARM_LIB_NAME\n         MVC   NET_MEM_NAME,PARM_MEM_NAME\n         MVC   NET_MEM_VER,PARM_MEM_VERSION\n         LA    R1,NET_DESC_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         BAL   R9,SEND0000\n         CLI   NET_RETURN_CODE,$NET_ERROR\n         BE    ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   The user is authorized                                            *\n*                                                                     *\n*   Normally the message area in the SUBroutine parms is for the      *\n*   LIBRARIAN to return messages to the user.                         *\n*                                                                     *\n*   In this case the same area is used to send the description        *\n*   to the LIBRARIAN.                                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDESC0010 DS    0H\n         MVC   NET_MEM_DOC(200),PARM_MSG\n         MVC   NET_MEM_DOC+200(200),PARM_MSG+200\n         LA    R1,NET_MEM_DOC+(80*4)          ADDRESS OF 5TH LINE\n         LA    R2,NET_DESC_LENGTH+(80*5)      MAXIMUM LENGTH\n         LA    R3,5                           LOOP LIMITER\nDESC0020 DS    0H\n         CLC   BLANKS,0(R1)                   ALL BLANK?\n         BNE   DESC0030                       NO\n         SH    R1,H80                         BACK UP 1 LINE\n         SH    R2,H80                         BACK UP LENGTH\n         BCT   R3,DESC0020                    LOOP\nDESC0030 DS    0H\n         STCM  R2,3,NET_LENGTH                SET LENGTH\n         MVI   NET_FUNCTION,$NET_SEND_DESC\n         BAL   R9,SEND0000\n         CLI   NET_RETURN_CODE,$NET_OK\n         BE    EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   PARM_MSG_1,NET_MSG_1           COPY MESSAGE\n         MVC   PARM_MSG_2,NET_MSG_2           COPY MESSAGE\n         MVC   PARM_MSG_3,NET_MSG_3           COPY MESSAGE\n         MVC   PARM_MSG_4,NET_MSG_4           COPY MESSAGE\n         MVC   PARM_MSG_5,NET_MSG_5           COPY MESSAGE\n         MVI   WORK_RC,8                      SET NON-ZERO RETURN CODE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         MVI   VTAM_PARM_CMD,$VTAM_SEND\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUB\n         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUB\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         SR    R2,R2                          CLEAR REGISTER\n         IC    R2,WORK_RC                     SET RETURN CODE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=WORK_AREA_LENGTH\n         LR    R15,R2                         SET RETURN CODE\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVVTAMSUB DC    V(VTAMSUB)\nH80      DC    H'80'\nBLANKS   DC    CL80' '\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK_AREA          DSECT\n                   DS  18F\nWORK_RC            DS  X\n\n         VTAMPARM  DSECT=NO\n\nWORK_AREA_LENGTH   EQU   *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM_LIST          DSECT\nPARM_APPL          DS    CL8\nPARM_LIB_NAME      DS    CL8\nPARM_MEM_NAME      DS    CL8\nPARM_MEM_VERSION   DS    XL2\nPARM_FUNCTION      DS    CL8\nPARM_USER_DSN      DS    CL44\nPARM_USER_MEMBER   DS    CL8\nPARM_RETURN_CODE   DS    C\nPARM_MSG           DS   0CL80\nPARM_MSG_1         DS    CL80\nPARM_MSG_2         DS    CL80\nPARM_MSG_3         DS    CL80\nPARM_MSG_4         DS    CL80\nPARM_MSG_5         DS    CL80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK   DSECT=YES\nNET_LIB_NAME       DS    CL8\nNET_MEM_NAME       DS    CL8\nNET_MEM_VER        DS    XL2\nNET_DESC_LENGTH    EQU   *-NETBLOK\nNET_MEM_DOC        DS    0C\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  SUBMDOC\n./ ADD NAME=SUBMEMS  0100-09250-09250-0919-00175-00175-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: SUBMEMS                                               *\n*                                                                     *\n*  Returns a list of libraries available from this librarian.         *\n*                                                                     *\n*  Parameter list:                                                    *\n*         Library APPLID          8 characters                        *\n*         Library name            8 characters                        *\n*         Member name             8 characters                        *\n*         Function                8 characters                        *\n*         User dataset           44 characters                        *\n*         User member             8 characters                        *\n*         return code             2 characters                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUBMEMS  CSECT\nSUBMEMS  AMODE 31\nSUBMEMS  RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING SUBMEMS,R12                    DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'SUBMEMS'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESS\n         USING PARM_LIST,R10                  DEFINE BASE\n         USING VTAM_PARM_LIST,R11             DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=BELOW\n         ST    R1,8(R13)                      CHAIN OUR SAVE AREA\n         ST    R13,4(R1)                      CHAIN CALLER'S AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORK_AREA,R13                  DEFINE WORK AREA BASE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         GETMAIN RU,                                                   +\n               LV=DCBL,                                                +\n               LOC=BELOW\n         ST    R1,WORK_DCB\n         LR    R3,R1                          COPY DCB STORAGE ADDRESS\n         MVC   0(DCBL,R3),DCBI                INITIALIZE THE DCB\n         MVC   WORK_OCPL(OPENL),OPENI         INITIALIZE OPEN\n         OPEN  ((R3),OUTPUT),                                          +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R9,VTAM_PARM_IO                I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\nMEMS0000 DS    0H\n         MVI   NET_FUNCTION,$NET_GET_MEMBERS\n         MVC   NET_LIBRARY_NAME,PARM_LIB_NAME\n         LA    R1,NETBLOKL+L'NET_LIBRARY_NAME\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         MVI   VTAM_PARM_CMD,$VTAM_SEND\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SR    R0,R0                          CLEAR REGISTER\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,NET_LENGTH                LENGTH OF THIS BUFFER\n         SH    R1,=Y(NETBLOKL)                MINUS HEADER LENGTH\n         D     R0,=A(lIB_INDEX_RECORD_LENGTH)\n         LTR   R2,R1                          ANY IN THIS BUFFER?\n         BZ    MEMS0020                       NO\n         MVC   WORK_IO,BLANKS\n         LA    R4,NET_MEMBER_NAMES            FIRST MEMBER NAME\nMEMS0010 DS    0H\n         MVC   WORK_IO(LIB_INDEX_RECORD_LENGTH),0(R4)\n         PUT   (R3),WORK_IO                   WRITE TO DATA SET\n         LA    R4,LIB_INDEX_RECORD_LENGTH(R4)\n         BCT   R2,MEMS0010\nMEMS0020 DS    0H\n         CLI   NET_RETURN_CODE,$NET_EOF\n         BNE   MEMS0000                       NO\n         MVC   WORK_OCPL(CLOSEL),CLOSEI\n         CLOSE ((R3)),                                                 +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         FREEMAIN RU,A=(3),LV=DCBL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE R13\n         FREEMAIN RU,A=(1),LV=WORK_AREA_LENGTH\n         LM    R14,R12,12(R13)                RESTORE R14\n         SR    R15,R15                        SET RETURN CODE TO ZERO\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVVTAMSUB DC    V(VTAMSUB)\n\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=LIBUSER,                                         +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,OUTPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\nBLANKS   DC    CL80' '\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK_AREA         DSECT\n                  DS   18F\n\nDWORD             DS   D\nWORK_DCB          DS   (DCBL)X\nWORK_OCPL         DS   (OPENL)X\nWORK_IO           DS   CL80\n                  ORG  WORK_IO\nWORK_MEMBER_NAME  DS   CL8\n                  DS   CL2\nWORK_MEMBER_VER   DS   CL6\n                  ORG\n         VTAMPARM DSECT=NO\n\nWORK_AREA_LENGTH  EQU  *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM_LIST         DSECT\nPARM_APPL         DS   CL8\nPARM_LIB_NAME     DS   CL8\nPARM_MEM_NAME     DS   CL8\nPARM_FUNCTION     DS   CL8\nPARM_USER_DSN     DS   CL44\nPARM_USER_MEMBER  DS   CL8\nPARM_RETURN_CODE  DS   CL2\nPARM_MSG          DS  0CL80\nPARM_MSG_1        DS   CL80\nPARM_MSG_2        DS   CL80\nPARM_MSG_3        DS   CL80\nPARM_MSG_4        DS   CL80\nPARM_MSG_5        DS   CL80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK  DSECT=YES\nNET_LIBRARY_NAME  DS   CL8\n                  ORG  NET_DATA\nNET_MEMBER_NAMES  DS   0C\n         LIBRECD  DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  SUBMEMS\n./ ADD NAME=SUBVIEW  0100-09250-09250-0919-00262-00262-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  MODULE NAME: SUBVIEW                                               *\n*                                                                     *\n*  Check out a member.                                                *\n*                                                                     *\n*  Parameter list:                                                    *\n*         Library APPLID          8 characters                        *\n*         Library name            8 characters                        *\n*         Member name             8 characters                        *\n*         Member version          2 bytes, hex                        *\n*         Function                8 characters                        *\n*         User dataset           44 characters                        *\n*         User member             8 characters                        *\n*         return code             2 characters                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUBVIEW  CSECT\nSUBVIEW  AMODE 31\nSUBVIEW  RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING SUBVIEW,R12                    DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'SUBVIEW'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESS\n         USING PARM_LIST,R10                  DEFINE BASE\n         USING VTAM_PARM_LIST,R11             DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=BELOW\n         ST    R1,8(R13)                      CHAIN OUR SAVE AREA\n         ST    R13,4(R1)                      CHAIN CALLER'S AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORK_AREA,R13                  DEFINE WORK AREA BASE\n         MVI   WORK_RC,0\n         LOAD  EP=LIBUX01                     LOAD USER EXIT 1\n         ST    R0,WORK_AUX01                  SAVE ENTRY POINT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Determine if user is authorized to check-out the specified member. *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R8,VTAM_PARM_IO                I/O AREA ADDRESS\n         USING NETBLOK,R8                     DEFINE BASE\n         MVI   NET_FUNCTION,$NET_CHECK_VIEW_AUTH\n         MVC   NET_LIB_NAME,PARM_LIB_NAME\n         MVC   NET_MEM_NAME,PARM_MEM_NAME\n         MVC   NET_MEM_VERSION,PARM_MEM_VERSION\n         LA    R1,NET_CHECK_OUT_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA\n         BAL   R9,SENDRECV\n         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?\n         BNE   ERR0010                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   The user is authorized to VIEW this member.                       *\n*                                                                     *\n*   The LIBRARIAN will have returned the number of records in the     *\n*   original source.  We need this info to 'de-compress' the data.    *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   WORK_SOURCE_RECORDS,NET_SOURCE_RECORDS\n         LA    R2,5                           MAXIMUM NUMBER OF LINES\n         LA    R1,PARM_MSG                    FIRST MESSAGE\nINIT0010 DS    0h\n         MVC   0(80,R1),BLANKS\n         LA    R1,80(R1)\n         BCT   R2,INIT0010                    LOOP\n         MVI   NET_FUNCTION,$NET_VIEW_SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIB0000  DS    0H                                                     *\n         GETMAIN RU,                                                   +\n               LV=DCBL,                                                +\n               LOC=BELOW\n         ST    R1,WORK_DCB\n         LR    R3,R1                          COPY DCB ADDRESS\n         MVC   0(DCBL,R3),DCBI                INITIALIZE THE DCB\n         MVC   WORK_OCPL(OPENL),OPENI         INITIALIZE OPEN\n         OPEN  ((R3),OUTPUT),                                          +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=ANY\n         ST    R1,UX01_EXPANDED_BUFFER\n         LA    R1,WORK_EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER\n         ST    R1,UX01_COMPRESSED_BUFFER\n         LA    R1,WORK_COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\nLIB0010  DS    0H\n         LA    R1,NETBLOKL                    LENGTH IS HEADER ONLY\n         STCM  R1,3,NET_LENGTH\n         BAL   R9,SENDRECV                    SEND AND RECEIVE\n         CLI   NET_RETURN_CODE,$NET_ERROR\n         BE    ERR0020                        YES\n         CLI   NET_RETURN_CODE,$NET_EOF\n         BE    EOF0000                        YES\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,NET_LENGTH\n         SH    R1,=Y(NETBLOKL)                MINUS HEADER LENGTH\n         ST    R1,WORK_COMPRESSED_LENGTH\n         L     R4,WORK_SOURCE_RECORDS         NUMBER OF SOURCE RECORDS\n         CH    R4,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?\n         BL    LIB0020                        NO\n         LH    R4,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER\nLIB0020  DS    0H                             CLEAR FOR RECORD COUNTER\n         ST    R4,WORK_CURRENT_RECORDS        NUMBER IN CURRENT BUFFER\n         L     R1,WORK_SOURCE_RECORDS         NUMBER OF RECORDS LEFT\n         SR    R1,R4                          MINUS NUMBER IN BUFFER\n         ST    R1,WORK_SOURCE_RECORDS         SAVE REMAINDER\n         MH    R4,H80                         NBR OF RECORDS * LENGTH\n         ST    R4,WORK_EXPANDED_LENGTH        SET LENGTH\n         MVI   UX01_FUNCTION,$UX01_DECOMPRESS\n         LA    R1,UX01_PARMS                  USER EXIT 1 PARM LIST\n         L     R15,WORK_AUX01                 USER EXIT 1 ENTRY POINT\n         BALR  R14,R15                        ALLOW DECOMPRESSION\n         L     R2,UX01_EXPANDED_BUFFER        BUFFER ADDRESS\n         L     R4,WORK_CURRENT_RECORDS        NUMBER OF RECORDS\nLIB0030  DS    0H\n         PUT   (R3),(R2)                      WRITE TO USER'S DATA SET\n         LA    R2,80(R2)                      NEXT RECORD\n         BCT   R4,LIB0030                     LOOP\n         B     LIB0010                        ASK FOR NEXT BLOCK\nEOF0000  DS    0H\n         MVC   WORK_OCPL(CLOSEL),CLOSEI\n         CLOSE ((R3)),                                                 +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         FREEMAIN RU,A=(3),LV=DCBL\n         L     R1,UX01_EXPANDED_BUFFER        EXPANDED DATA BUFFER\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSENDRECV DS    0H\n         MVI   VTAM_PARM_CMD,$VTAM_SEND\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUB\n         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE\n         LA    R1,VTAM_PARM_LIST\n         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT\n         BALR  R14,R15                        LINK TO VTAM SUB\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   WORK_RC,4                      SET RETURN CODE\n         MVC   PARM_MSG_1,NET_MSG_1           COPY MESSAGE\n         MVC   PARM_MSG_2,NET_MSG_2           COPY MESSAGE\n         MVC   PARM_MSG_3,NET_MSG_3           COPY MESSAGE\n         MVC   PARM_MSG_4,NET_MSG_4           COPY MESSAGE\n         MVC   PARM_MSG_5,NET_MSG_5           COPY MESSAGE\n         B     EXIT0000\nERR0020  DS    0H\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         DELETE EP=LIBUX01\n         SR    R2,R2                          CLEAR REGISTER\n         IC    R2,WORK_RC                     SET RETURN CODE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,A=(1),LV=WORK_AREA_LENGTH\n         LR    R15,R2                         SET RETURN CODE\n         L     R14,12(R13)                    RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVVTAMSUB DC    V(VTAMSUB)\n\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=LIBUSER,                                         +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               BLKSIZE=$MAX_SOURCE_SIZE,                               +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,OUTPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\nH80      DC    H'80'\nBLANKS   DC    CL80' '\n\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK_AREA              DSECT\n                       DS    18F\n\nWORK_AUX01             DS    A\n\nWORK_EXPANDED_LENGTH   DS    A             LENGTH OF EXPANDED DATA\nWORK_COMPRESSED_LENGTH DS    A             LENGTH OF COMPRESSED DATA\n\nWORK_SOURCE_RECORDS    DS    F             NUMBER OF RECORDS IN SOURCE\nWORK_CURRENT_RECORDS   DS    F             NUMBER OF RECORDS IN BUFFER\n\nWORK_DCB               DS    0F,(DCBL)X\nWORK_OCPL              DS    0F,(OPENL)X\n\nWORK_RC                DS    X\n\n                       UX01PARM    DSECT=NO\n                       VTAMPARM    DSECT=NO\n\nWORK_AREA_LENGTH       EQU   *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM_LIST              DSECT\nPARM_APPL              DS    CL8\nPARM_LIB_NAME          DS    CL8\nPARM_MEM_NAME          DS    CL8\nPARM_MEM_VERSION       DS    XL2\nPARM_FUNCTION          DS    CL8\nPARM_USER_DSN          DS    CL44\nPARM_USER_MEMBER       DS    CL8\nPARM_RETURN_CODE       DS    C\nPARM_MSG               DS   0CL80\nPARM_MSG_1             DS    CL80\nPARM_MSG_2             DS    CL80\nPARM_MSG_3             DS    CL80\nPARM_MSG_4             DS    CL80\nPARM_MSG_5             DS    CL80\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK       DSECT=YES\nNET_LIB_NAME           DS    CL8\nNET_MEM_NAME           DS    CL8\nNET_MEM_VERSION        DS    XL2\nNET_CHECK_OUT_LENGTH   EQU   *-NETBLOK\n                       ORG   NET_DATA\nNET_SOURCE_RECORDS     DS    XL4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$MAX_SOURCE_SIZE EQU 8000\n         COPY REGEQU\n         END  SUBVIEW\n./ ADD NAME=SUB0001  0100-09250-09250-0919-00208-00208-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     This subroutine determines the \"DSORG\" of a given data set.     *\n*                                                                     *\n*     The subroutine requires two parameters:                         *\n*       1)  the data set's name (44 characters)                       *\n*       2)  the returned data set organization (1 byte)               *\n*                                                                     *\n*     Returned values for the DSORG are:                              *\n*         'P'    ... Partitioned (PO)                                 *\n*         'S'    ... Physically sequential (PS)                       *\n*         'U'    ... Unknown (not PO, PS, or VSAM)                    *\n*         'V'    ... VSAM                                             *\n*         'X'    ... Not cataloged                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUB0001  CSECT\nSUB0001  AMODE 31\nSUB0001  RMODE ANY\n         USING SUB0001,R12                    DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000\nMODID    DC    CL8'SUB0001'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LR    R10,R1                         COPY PARM LIST ADDRESS\n         USING PARM_LIST,R10                  DEFINE BASE\n         GETMAIN RU,                                                   +\n               LOC=BELOW,                                              +\n               LV=WKL\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WK,R13                         DEFINE BASE\n         LA    R1,WKCSIRC                     CATALOG RETURN CODE\n         ST    R1,WKCSIPL                     SET ADDRESS\n         LA    R1,WKCSISP                     CATALOG SEARCH PARMS\n         ST    R1,WKCSIPL+4                   SET ADDRESS\n         MVC   WKCSISP(CSISPL),CSISPI\n         L     R2,CSISIZE                     SIZE OF SEARCH DATA\n         GETMAIN RU,                                                   +\n               LV=(R2),                       .. SIZE OF AREA          +\n               LOC=ANY                        ..\n         ST    R1,WKCSIPL+8                   SET ADDRESS IN PARMIST\n         ST    R2,0(R1)                       SET SIZE\n         MVC   WKCSISP(44),PARM_LIST_DSN      DATASET NAME\n         LOAD  EP=IGGCSI00                    LOAD THE CSI ENTERFACE\n         LR    R15,R0                         COPY THE ENTRY POINT\n         LA    R1,WKCSIPL                     SEARCH PARM LIST\n         BALR  R14,R15                        LINK TO CSI\n         DELETE EP=IGGCSI00                   DELETE CSI INTERFACE\n         OC    WKCSIRC+2(2),WKCSIRC+2\n         BNZ   ERR0010                        ERROR FROM SEARCH\n         L     R2,WKCSIPL+8                   RETURNED DATA ADDRESS\n         USING DATA,R2                        DEFINE BASE\n         L     R3,DATAUL                      LENGTH OF DATA RETURNED\n         LA    R2,DATADST                     SKIP HEADER STUFF\n         USING DATADST,R2\n         SH    R3,=Y(DATADST-DATA)\nPROC0010 DS    0H\n         CLI   DATADST,$DATANVS               NONVSAM?\n         BE    PROC0020                       YES\n         CLI   DATADST,$DATAVSC               VSAM CLUSTER?\n         BE    PROC0050                       YES\n         CLI   DATADST,$DATAVSD               VSAM DATA COMPONENT?\n         BE    PROC0050                       YES\n         CLI   DATADST,$DATAAIX               VSAM ALTERNATE INDEX?\n         BE    PROC0050                       YES\n         CLI   DATADST,$DATAVSI               VSAM INDEX COMPONENT?\n         BNE   ERR0010                        NO.. SKIP\nPROC0020 DS    0H\n         MVC   WKCAMLST(CAMLSTL),CAMLSTI\n         MVC   WKDSN,PARM_LIST_DSN\n         MVC   WKVOL,DATAVOL\n         LA    R0,WKDSN                       DATASET NAME'S ADDRESS\n         ST    R0,WKCAMLST+4                  SET ADDRESS IN PARM LIST\n         LA    R0,WKVOL                       VOLSER'S ADDRESS\n         ST    R0,WKCAMLST+8                  SET ADDRESS IN PARM LIST\n         LA    R0,DS1FMTID                    VTOC DATA ADDRESS\n         ST    R0,WKCAMLST+12                 SET ADDRESS IN PARM LIST\n         LA    R1,WKCAMLST                    OBTAIN PARM LIST\n         OBTAIN (1)                           ISSUE OBTAIN\n         MVC   PARM_LIST_RECFM,DS1RECFM\n         MVC   PARM_LIST_LRECL,DS1LRECL\n         CLI   DS1DSORG,DS1DSGPS              SEQUENTIAL?\n         BE    PROC0030                       YES\n         CLI   DS1DSORG,DS1DSGPO              PARTITIONED?\n         BE    PROC0040                       YES\n         MVI   PARM_LIST_DSORG,C'U'           UNKNOWN\n         B     EXIT0000                       EXIT\nPROC0030 DS    0H\n         MVI   PARM_LIST_DSORG,$PARM_LIST_DSORG_PS\n         B     EXIT0000                       EXIT\nPROC0040 DS    0H\n         MVI   PARM_LIST_DSORG,$PARM_LIST_DSORG_PO\n         B     EXIT0000                       EXIT\nPROC0050 DS    0H\n         MVI   PARM_LIST_DSORG,$PARM_LIST_DSORG_VS\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   PARM_LIST_DSORG,C'X'           NOT CATALOGED\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         L     R1,WKCSIPL+8                   CATALOG SEARCH AREA\n         L     R2,CSISIZE                     SIZE OF AREA\n         FREEMAIN RU,A=(1),LV=(R2)            FREEMAIN THE WORK AREA\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE R13\n         FREEMAIN RU,A=(1),LV=WKL             FREE THE WORK AREA\n         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Constants                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\nCSISIZE  DC    F'2048'\n         LTORG\n\nCSISPI   DS    0F\n         DC    CL44'RLRICE.SUB0001' DATASET NAME\n         DC    CL44' '              CATALOG NAME (OR BLANK)\n         DC    CL44' '              RESUME NAME OR BLANKS\n         DC    CL16'ACGH'           ENTRY TYPES\n         DC    CL1'Y'               RETURN DATA AND INDEX INFO FOR VSAM\n         DS    0CL4                 OPTIONS\n         DC    CL1' '               .. RESUME INDICATOR\n         DC    CL1' '               .. SEARCH MULTIPLE CATALOGS\n         DC    XL1'00'              RESERVED\n         DC    H'1'                 NUMBER OF ENTRIES FOLLOWING\n         DC    CL8'VOLSER  '        FIELD NAME\nCSISPL   EQU   *-CSISPI\nCAMLSTI  CAMLST SEARCH,             READ VTOC BY DATASET NAME          +\n               *,                   .. DATASET NAME'S ADDRESS          +\n               *,                   .. VOLSER'S ADDRESS                +\n               *                    .. RETURNED DATA ADDRESS\nCAMLSTL  EQU   *-CAMLSTI\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK       DSECT\n         DS    18F\nWKCSIPL  DS   0A\n         DS    A                  CSI RETURN CODE INFO ADDRESS\n         DS    A                  CSI SEARCH ARGS ADDRESS\n         DS    A                  CSI RETURNED DATA\n\nWKVOL    DS    CL6\nWKDSN    DS    CL44\n         ORG   WKDSN\nWKVTOC   IECSDSL1   1\n\nWKCSIRC  DS    0A\n         DS    CL2                .. MODULE SUFFIX\n         DS    X                  .. RETURN CODE\n         DS    X                  .. REASON CODE\nWKCSISP  DS    (CSISPL)X          SEARCH PARAMETERS\n\nWKCAMLST DS    0A,(CAMLSTL)X\n\nWKL      EQU   *-WK               BASIC WORK ARE SIZE\n*--------------------------------------------------------------------*\nDATA                DSECT\nDATAAL              DS    F       AREA LENGTH\n                    DS    F\nDATAUL              DS    F       USED LENGTH\nDATACATI            DS    XL4     CATALOG INDICATORS\nDATACATN            DS    CL44    CATALOG NAME\n                    DS    XL5\nDATADST             DS    C\n$DATANVS            EQU   C'A'    NONVSAM\n$DATAVSC            EQU   C'C'    VSAM CLUSTER\n$DATAVSD            EQU   C'D'    VSAM DATA\n$DATAAIX            EQU   C'G'    VSAM ALTERNATE INDEX\n$DATAVSI            EQU   C'I'    VSAM INDEX\nDATADSN             DS    CL44\nDATAVDL             DS    XL2     VOLSER DATA LENGTH\n                    DS    XL2\nDATAVEL             DS    XL2     VOLSER ENTRY LENGTH (TOTAL)\nDATAVOL             DS    CL6     FIRST (OR ONLY) VOLSER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM_LIST           DSECT\nPARM_LIST_DSN       DS  CL44\nPARM_LIST_DSORG     DS  C\n$PARM_LIST_DSORG_PS EQU C'S'      SEQUENTIAL\n$PARM_LIST_DSORG_PO EQU C'P'      PARTITIONED\n$PARM_LIST_DSORG_VS EQU C'V'      VSAM\nPARM_LIST_RECFM     DS  X         Record format\nPARM_LIST_LRECL     DS  XL2       Logical record length\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  SUB0001\n./ ADD NAME=SUB0002  0100-09250-09250-0919-00458-00458-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*    The original source for this subroutine was the 'COMPACT'        *\n*    member of Richard Fochtman's ARCHIVER I found in file 147        *\n*    on the CBT web site.  The copyright rules for freeware on        *\n*    the CBT apply.                                                   *\n*                                                                     *\n*    I took several liberties and made a number of modifications      *\n*    to the original source.  If this doesn't work for some reason    *\n*    don't blame Richard Fochtman...                                  *\n*                                                                     *\n*                                                                     *\n*    This subroutine uses a Huffman tree to compact data into a       *\n*    variable length bit string.  Output lengths are always a         *\n*    multiple of four (4).  Output strings will be padded with        *\n*    hex zeros if necessary.                                          *\n*                                                                     *\n*           Arguements:                                               *\n*               A(INPUT STRING)                                       *\n*               A(INPUT STRING LENGTH)                                *\n*               A(OUTPUT AREA)                                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUB0002  CSECT\nSUB0002  AMODE 31\nSUB0002  RMODE ANY\n         USING SUB0002,R12         DECLARE THE BASE REGISTER\n         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS\n         LR    R12,R15             COPY EPA\n         LM    R2,R4,0(R1)         LOAD PARM VALUES\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=BELOW\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1              COPY SAVE AREA ADDRESS\n         USING WORKAREA,R13        DEFINE BASE\n         ST    R4,WORKOUTA         SAVE OUTPUT AREA ADDRESS\n         L     R3,0(,R3)           LOAD INPUT STRING LENGTH\n         LA    R5,0(R2,R3)         POINT TO INPUT END\n         BCTR  R5,R0               AND BACK UP FOR BXLE\n         LA    R8,TBL60\n         LR    R1,R4               COPY OUTPUT STRING POINTER\n         LA    R4,1                LOAD BXLE INCREMENT\n         SR    R6,R6\n         SR    R7,R7\n         SR    R9,R9\n         SR    R10,R10\n         SR    R11,R11\n         SR    R14,R14\n         SR    R15,R15\n         USING CMPCT,R8            SET THE CONSTANTS DSECT\n*        R14 WILL CONTAIN THE BITS TO BE ADDED TO THE CURRENT STRING\n*        R9 WILL BE THE CURRENT STRING'S LENGTH\n*        R10 WILL BE THE CURRENT STRING\n*        R1 WILL BE THE OUTPUT POINTER\n*        R7 WILL BE THE NUMBER OF BITS BEING ADDED\n*        R0,R11 - WORK REGISTERS\n*        R11 WILL ALSO BE THE RETURN REGISTER FROM THE STORE SUBROUTINE\nCOMP0010 DS    0H\n         LR    R6,R5               COPY END POINTER\n         SR    R6,R2               COMPUTE WHAT'S LEFT\n         CH    R6,=H'4'            CLOSE TO END ??\n         BL    COMP0020            YES; SKIP THE NEXT CHECK\n         CLC   1(3,R2),0(R2)       NEXT CHAR. REPEATED 4 TIMES ??\n         BE    COMP0070            YES; PROCESS SPECIAL WAY\nCOMP0020 DS    0H\n         SR    R6,R6\n         IC    R6,0(,R2)           LOAD A CHARACTER\n         SLL   R6,2                TIMES 4\n         SR    R14,R14             CLEAR LEFT REGISTER\n         L     R15,TREEV(R6)       LOAD THE STRING/LENGTH\n         SLDL  R14,8               SHIFT OFF THE LENGTH\n         LR    R7,R14              COPY THE LENGTH\n         LA    R3,32               LOAD LIMIT VALUE\n         SR    R3,R9               MINUS CURRENT LENGTH\n         SR    R14,R14             CLEAR THAT REG\n         SLDL  R14,0(R3)           SHIFT THOSE BITS OVER\n         OR    R10,R14             ADD TO CURRENT STRING\n         AR    R9,R7               ADD LENGTHS\n         CH    R9,=H'32'           GOT ENOUGH, YET ---\n         BL    COMP0030            NOPE ---\n         BAL   R11,COMP0060        NOPE; PARTIAL ADD AND STORE\nCOMP0030 DS    0H\n         BXLE  R2,R4,COMP0010      AND CONTINUE ---\n*        ALL DONE; STORE STRING REMAINDER AND EXIT\nCOMP0040 DS    0H\n         CH    R9,=H'0'            ZERO LEFT ??\n         BNH   COMP0050            YES ---\n         ST    R10,0(,R1)          STORE THE LAST WORD\n         LA    R1,4(,R1)           BUMP OUTPUT POINTER\nCOMP0050 DS    0H\n         LR    R2,R1               COPY OUTPUT ADDRESS\n         S     R2,WORKOUTA         COMPUTE OUTPUT LENGTH\n         LR    R1,R13              COPY WORK AREA ADDRESS\n         L     R13,4(R13)          RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=WORKL\n         LR    R0,R2               SET OUTPUT LENGTH\n         L     R14,12(R13)         RESTORE R14\n         LM    R1,R12,24(R13)\n         SR    R15,R15             SET ZERO RETURN CODE\n         BR    R14                 AND RETURN TO CALLER\nCOMP0060 DS    0H\n         ST    R10,0(,R1)          STORE COMPLETED STRING\n         LA    R1,4(,R1)           BUMP OUTPUT CURSOR\n         LR    R10,R15             WHAT WAS LEFT FROM BEFORE\n         SH    R9,=H'32'           RESET CURRENT-STRING LENGTH\n         BR    R11                 AND RETURN TO (LOCAL) CALLER\nCOMP0070 DS    0H\n         SR    R0,R0               CLEAR THE COUNT REGISTER\n         SR    R14,R14             CLEAR LEFT REGISTER\n         L     R15,MULTS           LOAD THE STRING/LENGTH\n         SLDL  R14,8               SHIFT OFF THE LENGTH\n         LR    R7,R14              COPY THE LENGTH\n         LA    R3,32               LOAD LIMIT VALUE\n         SR    R3,R9               MINUS CURRENT LENGTH\n         LA    R14,0               CLEAR THAT REG\n         SLDL  R14,0(R3)           SHIFT THOSE BITS OVER\n         OR    R10,R14             ADD TO CURRENT STRING\n         AR    R9,R7               ADD LENGTHS\n         CH    R9,=H'32'           GOT ENOUGH, YET ---\n         BL    COMP0080            NOPE ---\n         BAL   R11,COMP0060        NOPE; PARTIAL ADD AND STORE\nCOMP0080 DS    0H\n         LA    R6,0(,R2)           COPY STARTING ADDRESS\n         LA    R14,0(,R2)             AND RIPPLING ADDRESS\n         LA    R15,1(,R5)          COPY ENDING ADDRESS\n         SR    R15,R14             COMPUTE LENGTH TO COMPARE\n         CH    R15,=H'255'         LONGER THAN MAX ??\n         BNH   COMP0090            NOPE ---\n         LA    R15,255             YES; ASSUME MAX FOR NOW\nCOMP0090 DS    0H\n         LR    R7,R15              AND COPY THAT VALUE\n         SR    R15,R15             TWICE ---\n         ICM   R15,8,0(R6)         INSERT 'PAD' CHARACTER\n         CLCL  R6,R14              COMPARE/SEARCH\n         LR    R0,R6               COPY END ADDRESS\n         SR    R0,R2               COMPUTE BYTES COMPARED\n         LR    R2,R6               NEW INPUT ADDRESS\n         BCTR  R2,R0               ACCOUNT FOR BXLE STUFF\n         LR    R6,R0               COPY TO INPUT CHAR. REGISTER\n         SR    R14,R14             CLEAR LEFT REGISTER\n         SLL   R6,2                TIMES 4\n         L     R15,TREEV(R6)       LOAD THE STRING/LENGTH\n         SLDL  R14,8               SHIFT OFF THE LENGTH\n         LR    R7,R14              COPY THE LENGTH\n         LA    R3,32               LOAD LIMIT VALUE\n         SR    R3,R9               MINUS CURRENT LENGTH\n         SR    R14,R14             CLEAR THAT REG\n         SLDL  R14,0(R3)           SHIFT THOSE BITS OVER\n         OR    R10,R14             ADD TO CURRENT STRING\n         AR    R9,R7               ADD LENGTHS\n         CH    R9,=H'32'           GOT ENOUGH, YET ---\n         BL    COMP0100            NOPE ---\n         BAL   R11,COMP0060        NOPE; PARTIAL ADD AND STORE\nCOMP0100 DS    0H\n         LA    R6,0\n         IC    R6,0(,R2)           INSERT THE REPEATED CHARACTER\n         LA    R14,0               CLEAR LEFT REGISTER\n         SLL   R6,2                TIMES 4\n         L     R15,TREEV(R6)       LOAD THE STRING/LENGTH\n         SLDL  R14,8               SHIFT OFF THE LENGTH\n         LR    R7,R14              COPY THE LENGTH\n         LA    R3,32               LOAD LIMIT VALUE\n         SR    R3,R9               MINUS CURRENT LENGTH\n         SR    R14,R14             CLEAR THAT REG\n         SLDL  R14,0(R3)           SHIFT THOSE BITS OVER\n         OR    R10,R14             ADD TO CURRENT STRING\n         AR    R9,R7               ADD LENGTHS\n         CH    R9,=H'32'           GOT ENOUGH, YET ---\n         BL    COMP0110            NOPE ---\n         BAL   R11,COMP0060        NOPE; PARTIAL ADD AND STORE\nCOMP0110 DS    0H\n         B     COMP0030            NOPE; CONTINUE\n*---------------------------------------------------------------------*\n\n         LTORG\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*        THIS IS THE CURRENT COMPACTION TABLE.  ENTRY FORMAT IS:      *\n*                                                                     *\n*              BYTE 1:  THE NUMBER OF BITS IN THE ENTRY THAT ARE      *\n*                       RETAINED                                      *\n*                                                                     *\n*              BYTES 2-4: THE ACTUAL BIT STRING THAT WILL BE USED     *\n*                      TO REPRESENT THE CHARACTER IN THE              *\n*                      COMPACTED STRING.                              *\n*---------------------------------------------------------------------*\nTBL60    DC    AL1(4),BL.24'010100000000000000000000'   MM\n         DC    AL1(4),BL.24'110100000000000000000000'   00\n         DC    AL1(9),BL.24'011001011000000000000000'   01\n         DC    AL1(10),BL.24'110001000000000000000000'  02\n         DC    AL1(10),BL.24'010000111100000000000000'  03\n         DC    AL1(10),BL.24'101000100000000000000000'  04\n         DC    AL1(11),BL.24'111100111100000000000000'  05\n         DC    AL1(11),BL.24'101000100110000000000000'  06\n         DC    AL1(10),BL.24'001001010000000000000000'  07\n         DC    AL1(10),BL.24'010001110100000000000000'  08\n         DC    AL1(12),BL.24'110001101010000000000000'  09\n         DC    AL1(11),BL.24'000100011110000000000000'  0A\n         DC    AL1(13),BL.24'111101110110100000000000'  0B\n         DC    AL1(11),BL.24'110001101100000000000000'  0C\n         DC    AL1(11),BL.24'010001110010000000000000'  0D\n         DC    AL1(12),BL.24'011101000011000000000000'  0E\n         DC    AL1(12),BL.24'001100110000000000000000'  0F\n         DC    AL1(9),BL.24'101000111000000000000000'   10\n         DC    AL1(12),BL.24'011101011110000000000000'  11\n         DC    AL1(11),BL.24'010000110110000000000000'  12\n         DC    AL1(13),BL.24'111001010101100000000000'  13\n         DC    AL1(11),BL.24'000100111000000000000000'  14\n         DC    AL1(13),BL.24'011101001000100000000000'  15\n         DC    AL1(13),BL.24'111001010000000000000000'  16\n         DC    AL1(13),BL.24'101011000010100000000000'  17\n         DC    AL1(10),BL.24'001001011100000000000000'  18\n         DC    AL1(13),BL.24'111100110110100000000000'  19\n         DC    AL1(12),BL.24'001100110011000000000000'  1A\n         DC    AL1(11),BL.24'000100001110000000000000'  1B\n         DC    AL1(11),BL.24'001100010110000000000000'  1C\n         DC    AL1(13),BL.24'011101011111100000000000'  1D\n         DC    AL1(12),BL.24'001001010110000000000000'  1E\n         DC    AL1(12),BL.24'000100111010000000000000'  1F\n         DC    AL1(9),BL.24'000100010000000000000000'   20\n         DC    AL1(13),BL.24'101011001000000000000000'  21\n         DC    AL1(12),BL.24'010000111000000000000000'  22\n         DC    AL1(13),BL.24'001100110010000000000000'  23\n         DC    AL1(12),BL.24'101000110001000000000000'  24\n         DC    AL1(14),BL.24'111001010101010000000000'  25\n         DC    AL1(13),BL.24'010000110011100000000000'  26\n         DC    AL1(14),BL.24'110001101000110000000000'  27\n         DC    AL1(12),BL.24'101000110100000000000000'  28\n         DC    AL1(14),BL.24'011101011111000000000000'  29\n         DC    AL1(13),BL.24'001001010100100000000000'  2A\n         DC    AL1(14),BL.24'101011000010000000000000'  2B\n         DC    AL1(12),BL.24'011001010100000000000000'  2C\n         DC    AL1(14),BL.24'011101001000010000000000'  2D\n         DC    AL1(13),BL.24'000100011100000000000000'  2E\n         DC    AL1(13),BL.24'010000110000100000000000'  2F\n         DC    AL1(10),BL.24'011101000100000000000000'  30\n         DC    AL1(12),BL.24'110001101011000000000000'  31\n         DC    AL1(12),BL.24'011001010101000000000000'  32\n         DC    AL1(13),BL.24'111001010111100000000000'  33\n         DC    AL1(12),BL.24'101011000011000000000000'  34\n         DC    AL1(13),BL.24'001100010101100000000000'  35\n         DC    AL1(13),BL.24'101000110010100000000000'  36\n         DC    AL1(14),BL.24'111001010101000000000000'  37\n         DC    AL1(11),BL.24'101000100100000000000000'  38\n         DC    AL1(14),BL.24'101011001000110000000000'  39\n         DC    AL1(13),BL.24'001100110001000000000000'  3A\n         DC    AL1(14),BL.24'011101001001110000000000'  3B\n         DC    AL1(12),BL.24'010000110010000000000000'  3C\n         DC    AL1(14),BL.24'011101000010100000000000'  3D\n         DC    AL1(13),BL.24'001100110010100000000000'  3E\n         DC    AL1(14),BL.24'111001010001000000000000'  3F\n         DC    AL1(3),BL.24'100000000000000000000000'   40\n         DC    AL1(9),BL.24'001100111000000000000000'   41\n         DC    AL1(12),BL.24'010000111001000000000000'  42\n         DC    AL1(12),BL.24'010001110001000000000000'  43\n         DC    AL1(12),BL.24'111101110000000000000000'  44\n         DC    AL1(11),BL.24'011101000000000000000000'  45\n         DC    AL1(13),BL.24'101000110101000000000000'  46\n         DC    AL1(9),BL.24'110001001000000000000000'   47\n         DC    AL1(11),BL.24'011101011100000000000000'  48\n         DC    AL1(13),BL.24'011001010011000000000000'  49\n         DC    AL1(12),BL.24'000100111011000000000000'  4A\n         DC    AL1(8),BL.24'101011010000000000000000'   4B\n         DC    AL1(12),BL.24'111101110100000000000000'  4C\n         DC    AL1(8),BL.24'111100100000000000000000'   4D\n         DC    AL1(9),BL.24'111101111000000000000000'   4E\n         DC    AL1(12),BL.24'111001010110000000000000'  4F\n         DC    AL1(8),BL.24'010001100000000000000000'   50\n         DC    AL1(14),BL.24'010000110101000000000000'  51\n         DC    AL1(13),BL.24'000100011100100000000000'  52\n         DC    AL1(14),BL.24'010000110011010000000000'  53\n         DC    AL1(6),BL.24'111111000000000000000000'   54\n         DC    AL1(13),BL.24'011101000010000000000000'  55\n         DC    AL1(13),BL.24'001001010111100000000000'  56\n         DC    AL1(14),BL.24'010001110000010000000000'  57\n         DC    AL1(9),BL.24'011101010000000000000000'   58\n         DC    AL1(13),BL.24'101000110011000000000000'  59\n         DC    AL1(13),BL.24'111100110111000000000000'  5A\n         DC    AL1(10),BL.24'001001011000000000000000'  5B\n         DC    AL1(6),BL.24'000001000000000000000000'   5C\n         DC    AL1(8),BL.24'111101100000000000000000'   5D\n         DC    AL1(10),BL.24'101000101000000000000000'  5E\n         DC    AL1(13),BL.24'101000110110100000000000'  5F\n         DC    AL1(8),BL.24'110001010000000000000000'   60\n         DC    AL1(7),BL.24'001001100000000000000000'   61\n         DC    AL1(13),BL.24'011001010001000000000000'  62\n         DC    AL1(14),BL.24'011101000010110000000000'  63\n         DC    AL1(13),BL.24'111101110111100000000000'  64\n         DC    AL1(14),BL.24'001001010100010000000000'  65\n         DC    AL1(13),BL.24'010000110001000000000000'  66\n         DC    AL1(14),BL.24'011101001001000000000000'  67\n         DC    AL1(12),BL.24'001100010100000000000000'  68\n         DC    AL1(14),BL.24'001100110001100000000000'  69\n         DC    AL1(13),BL.24'010001110000100000000000'  6A\n         DC    AL1(6),BL.24'000000000000000000000000'   6B\n         DC    AL1(11),BL.24'011001010110000000000000'  6C\n         DC    AL1(12),BL.24'101011001011000000000000'  6D\n         DC    AL1(12),BL.24'101011001010000000000000'  6E\n         DC    AL1(12),BL.24'111101110011000000000000'  6F\n         DC    AL1(10),BL.24'101011000100000000000000'  70\n         DC    AL1(13),BL.24'001100010101000000000000'  71\n         DC    AL1(13),BL.24'111101110110000000000000'  72\n         DC    AL1(13),BL.24'011001010000000000000000'  73\n         DC    AL1(13),BL.24'111101110001000000000000'  74\n         DC    AL1(14),BL.24'011001010000100000000000'  75\n         DC    AL1(14),BL.24'111100110110000000000000'  76\n         DC    AL1(14),BL.24'111100110111100000000000'  77\n         DC    AL1(12),BL.24'101011001001000000000000'  78\n         DC    AL1(14),BL.24'001100110001110000000000'  79\n         DC    AL1(10),BL.24'101000101100000000000000'  7A\n         DC    AL1(11),BL.24'010000111010000000000000'  7B\n         DC    AL1(8),BL.24'001100000000000000000000'   7C\n         DC    AL1(7),BL.24'011000100000000000000000'   7D\n         DC    AL1(8),BL.24'011001000000000000000000'   7E\n         DC    AL1(11),BL.24'000100001010000000000000'  7F\n         DC    AL1(9),BL.24'010001111000000000000000'   80\n         DC    AL1(8),BL.24'001001000000000000000000'   81\n         DC    AL1(10),BL.24'001100110100000000000000'  82\n         DC    AL1(10),BL.24'111100110000000000000000'  83\n         DC    AL1(9),BL.24'010001000000000000000000'   84\n         DC    AL1(8),BL.24'110001110000000000000000'   85\n         DC    AL1(10),BL.24'011101011000000000000000'  86\n         DC    AL1(10),BL.24'000100111100000000000000'  87\n         DC    AL1(9),BL.24'010001001000000000000000'   88\n         DC    AL1(9),BL.24'111100011000000000000000'   89\n         DC    AL1(14),BL.24'111100110111110000000000'  8A\n         DC    AL1(14),BL.24'101000110110010000000000'  8B\n         DC    AL1(13),BL.24'110001101001000000000000'  8C\n         DC    AL1(14),BL.24'001001010111010000000000'  8D\n         DC    AL1(14),BL.24'111101110111000000000000'  8E\n         DC    AL1(14),BL.24'001001010101010000000000'  8F\n         DC    AL1(10),BL.24'001100010000000000000000'  90\n         DC    AL1(11),BL.24'111001010010000000000000'  91\n         DC    AL1(11),BL.24'111100111110000000000000'  92\n         DC    AL1(9),BL.24'001100011000000000000000'   93\n         DC    AL1(9),BL.24'000100110000000000000000'   94\n         DC    AL1(8),BL.24'000100100000000000000000'   95\n         DC    AL1(8),BL.24'001100100000000000000000'   96\n         DC    AL1(10),BL.24'011101001100000000000000'  97\n         DC    AL1(12),BL.24'111101110101000000000000'  98\n         DC    AL1(9),BL.24'110001100000000000000000'   99\n         DC    AL1(14),BL.24'110001101001110000000000'  9A\n         DC    AL1(14),BL.24'011001010000110000000000'  9B\n         DC    AL1(13),BL.24'101000110101100000000000'  9C\n         DC    AL1(15),BL.24'101011000010010000000000'  9D\n         DC    AL1(14),BL.24'011101001000000000000000'  9E\n         DC    AL1(15),BL.24'101011000010011000000000'  9F\n         DC    AL1(11),BL.24'110001101110000000000000'  A0\n         DC    AL1(13),BL.24'010000110101100000000000'  A1\n         DC    AL1(9),BL.24'111001011000000000000000'   A2\n         DC    AL1(8),BL.24'010000100000000000000000'   A3\n         DC    AL1(10),BL.24'110001000100000000000000'  A4\n         DC    AL1(12),BL.24'111101110010000000000000'  A5\n         DC    AL1(11),BL.24'011101001010000000000000'  A6\n         DC    AL1(12),BL.24'011001010010000000000000'  A7\n         DC    AL1(10),BL.24'000100011000000000000000'  A8\n         DC    AL1(13),BL.24'000100011101000000000000'  A9\n         DC    AL1(13),BL.24'011001010001100000000000'  AA\n         DC    AL1(14),BL.24'001001010111000000000000'  AB\n         DC    AL1(13),BL.24'101000110000000000000000'  AC\n         DC    AL1(15),BL.24'111001010001011000000000'  AD\n         DC    AL1(14),BL.24'011101011111010000000000'  AE\n         DC    AL1(14),BL.24'000100001100000000000000'  AF\n         DC    AL1(11),BL.24'101011000000000000000000'  B0\n         DC    AL1(13),BL.24'010000110100000000000000'  B1\n         DC    AL1(13),BL.24'101000110000100000000000'  B2\n         DC    AL1(14),BL.24'110001101000100000000000'  B3\n         DC    AL1(13),BL.24'111001010000100000000000'  B4\n         DC    AL1(14),BL.24'101000110011100000000000'  B5\n         DC    AL1(13),BL.24'000100011101100000000000'  B6\n         DC    AL1(14),BL.24'011001010011110000000000'  B7\n         DC    AL1(13),BL.24'111101110001100000000000'  B8\n         DC    AL1(14),BL.24'010001110000000000000000'  B9\n         DC    AL1(13),BL.24'000100001100100000000000'  BA\n         DC    AL1(14),BL.24'101000110011110000000000'  BB\n         DC    AL1(13),BL.24'110001101000000000000000'  BC\n         DC    AL1(14),BL.24'010000110000010000000000'  BD\n         DC    AL1(13),BL.24'010000110100100000000000'  BE\n         DC    AL1(13),BL.24'101000110010000000000000'  BF\n         DC    AL1(11),BL.24'111100110100000000000000'  C0\n         DC    AL1(5),BL.24'001110000000000000000000'   C1\n         DC    AL1(6),BL.24'000101000000000000000000'   C2\n         DC    AL1(5),BL.24'001010000000000000000000'   C3\n         DC    AL1(6),BL.24'111000000000000000000000'   C4\n         DC    AL1(5),BL.24'110010000000000000000000'   C5\n         DC    AL1(7),BL.24'111101000000000000000000'   C6\n         DC    AL1(7),BL.24'011000000000000000000000'   C7\n         DC    AL1(7),BL.24'011001100000000000000000'   C8\n         DC    AL1(6),BL.24'111010000000000000000000'   C9\n         DC    AL1(13),BL.24'010000110001100000000000'  CA\n         DC    AL1(14),BL.24'101000110110000000000000'  CB\n         DC    AL1(13),BL.24'111001010100100000000000'  CC\n         DC    AL1(14),BL.24'011101001001100000000000'  CD\n         DC    AL1(14),BL.24'111100110110010000000000'  CE\n         DC    AL1(14),BL.24'010000110011000000000000'  CF\n         DC    AL1(9),BL.24'000100000000000000000000'   D0\n         DC    AL1(9),BL.24'111100010000000000000000'   D1\n         DC    AL1(8),BL.24'101010000000000000000000'   D2\n         DC    AL1(6),BL.24'110000000000000000000000'   D3\n         DC    AL1(6),BL.24'001101000000000000000000'   D4\n         DC    AL1(6),BL.24'111011000000000000000000'   D5\n         DC    AL1(6),BL.24'111110000000000000000000'   D6\n         DC    AL1(6),BL.24'011100000000000000000000'   D7\n         DC    AL1(8),BL.24'111100000000000000000000'   D8\n         DC    AL1(5),BL.24'010010000000000000000000'   D9\n         DC    AL1(14),BL.24'101011001000100000000000'  DA\n         DC    AL1(14),BL.24'010000110000000000000000'  DB\n         DC    AL1(13),BL.24'111001010111000000000000'  DC\n         DC    AL1(14),BL.24'011101001001010000000000'  DD\n         DC    AL1(13),BL.24'001001010101100000000000'  DE\n         DC    AL1(14),BL.24'001001010100000000000000'  DF\n         DC    AL1(10),BL.24'101011001100000000000000'  E0\n         DC    AL1(14),BL.24'010000110101010000000000'  E1\n         DC    AL1(5),BL.24'011010000000000000000000'   E2\n         DC    AL1(5),BL.24'011110000000000000000000'   E3\n         DC    AL1(6),BL.24'001000000000000000000000'   E4\n         DC    AL1(7),BL.24'010000000000000000000000'   E5\n         DC    AL1(8),BL.24'010001010000000000000000'   E6\n         DC    AL1(8),BL.24'101010010000000000000000'   E7\n         DC    AL1(8),BL.24'111001000000000000000000'   E8\n         DC    AL1(10),BL.24'111100111000000000000000'  E9\n         DC    AL1(14),BL.24'001001010101000000000000'  EA\n         DC    AL1(15),BL.24'011001010011101000000000'  EB\n         DC    AL1(13),BL.24'111001010100000000000000'  EC\n         DC    AL1(15),BL.24'011001010011100000000000'  ED\n         DC    AL1(14),BL.24'111101110111010000000000'  EE\n         DC    AL1(12),BL.24'101000110111000000000000'  EF\n         DC    AL1(4),BL.24'101100000000000000000000'   F0\n         DC    AL1(5),BL.24'000010000000000000000000'   F1\n         DC    AL1(6),BL.24'101001000000000000000000'   F2\n         DC    AL1(6),BL.24'000110000000000000000000'   F3\n         DC    AL1(6),BL.24'000111000000000000000000'   F4\n         DC    AL1(7),BL.24'111001100000000000000000'   F5\n         DC    AL1(7),BL.24'101011100000000000000000'   F6\n         DC    AL1(7),BL.24'101000000000000000000000'   F7\n         DC    AL1(7),BL.24'101010100000000000000000'   F8\n         DC    AL1(7),BL.24'011101100000000000000000'   F9\n         DC    AL1(14),BL.24'110001101001100000000000'  FA\n         DC    AL1(15),BL.24'111001010001010000000000'  FB\n         DC    AL1(13),BL.24'111001010001100000000000'  FC\n         DC    AL1(14),BL.24'000100001100010000000000'  FD\n         DC    AL1(12),BL.24'000100001101000000000000'  FE\n         DC    AL1(11),BL.24'000100001000000000000000'  FF\nCMPCT    DSECT\nMULTS    DS    XL4                 REPEATED-STRING MARKER\nTREEV    DS    256XL4              ACTUAL COMPACTED CHARACTER VALUES\nWORKAREA DSECT\n         DS    18F\nWORKOUTA DS    A\nWORKL    EQU   *-WORKAREA\n         COPY  REGEQU\n         END\n./ ADD NAME=SUB0003  0100-09250-09250-0919-01186-01186-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    \"EXPAND\" or \"DECOMPRESS\"                                         *\n*                                                                     *\n*                                                                     *\n*    The original source for this subroutine was the 'COMPACT'        *\n*    member of Richard Fochtman's ARCHIVER I found in file 147        *\n*    on the CBT web site.  The copyright rules for freeware on        *\n*    the CBT apply.                                                   *\n*                                                                     *\n*    I took several liberties and made a number of modifications      *\n*    to the original source.  If this doesn't work for some reason    *\n*    don't blame Richard Fochtman...                                  *\n*                                                                     *\n*           Arguements:                                               *\n*               A(OUTPUT STRING)                                      *\n*               A(OUTPUT STRING LENGTH)                               *\n*               A(INPUT STRING)                                       *\n*                                                                     *\n*    Note that the parameter list IS NOT the same as the compression  *\n*    subroutine.  For my uses, I had to \"remember\" the size of the    *\n*    original source.                                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUB0003  CSECT\nSUB0003  AMODE 31\nSUB0003  RMODE ANY\n         USING SUB0003,R11\n         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS\n         LR    R11,R15             COPY BASE ADDRESS\n         LM    R2,R4,0(R1)         LOAD PARM POINTERS\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=BELOW\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         L     R3,0(,R3)           LOAD ACTUAL OUTPUT LENGTH\n         LA    R12,0(R2,R3)        POINT TO OUTPUT AREA END\n         BCTR  R12,R0              BACK UP ONE\n         LA    R5,0(,R2)           COPY OUTPUT AREA START\n         LA    R10,0(,R4)          AND INPUT AREA START\n         XC    8(2,R13),8(R13)     CLEAR THE FLAG WORD\n         SR    R14,R14             INITIAL VALUES\n         SR    R6,R6               INITIAL VALUES\n         SR    R7,R7\n         SR    R2,R2\n         SR    R0,R0               BITS-LEFT COUNTER\n*        SELECT THE EXPANSION TABLE.  THIS IS TRICKY BECAUSE I\n*        NEED TO ACCOUNT FOR A TABLE-SELECTOR IN @BYTEC\n*        IF IT'S REALLY THERE.\n         LA    R1,EXP60            YES; POINT TO EXPANSION TABLE\nEXP0010  DS    0H\n         USING EXPNDS,R1\n         LA    R4,SHIFTS           POINT TO INITIAL SHIFT VALUES\n         LA    R3,EXPTAB           POINT TO START OF BIT TABLE\nEXP0020  DS    0H\n         BAL   R9,EXP0100          GO SHIFT SOME BITS (?)\n         AR    R3,R8               POINT INTO THE BIT TABLE\n         ICM   R15,3,0(R3)\n         TM    0(R3),X'40'         REPEATED CHARACTER ??\n         BNO   EXP0030             YES ---\n         OI    8(R13),X'40'        SET 'REPEATER' FLAG\n         B     EXP0070             DISCARD THIS CHARACTER\nEXP0030  DS    0H\n         TM    0(R3),X'80'         ANOTHER LEVEL ??\n         BO    EXP0040             NOPE ---\n         AH    R3,0(,R3)           POINT TO NEXT TABLE LEVEL\n         LA    R4,8(,R4)           LOCATE SECOND SHIFT AMOUNT\n         B     EXP0020             GO SHIFT SOME MORE\nEXP0040  DS    0H\n         TM    8(R13),X'40'        IS THIS A COUNT CHARACTER ??\n         BO    EXP0050             YES ---\n         MVC   0(1,R5),1(R3)       COPY RESULT CHARACTER\n         TM    8(R13),X'80'        ARE WE REPEATING ??\n         BNO   EXP0060             NOPE ---\n         LR    R8,R5               COPY OUTPUT ADDRESS\n         SR    R9,R9               CLEAR COUNT REGISTER\n         IC    R9,9(,R13)          INSERT BYTES-TO-COPY\n         SR    R15,R15             CLEAR INPUT COUNTER\n         ICM   R15,8,1(R3)         INSERT CHARACTER TO INSERT\n         MVCL  R8,R14              PROPOGATE THE CHARACTER\n         LR    R5,R8               REPLACE OUTPUT POINTER\n         XC    8(2,R13),8(R13)     CLEAR THE FLAG WORD\n         B     EXP0070             AND SCOOT ---\nEXP0050  DS    0H\n         MVC   9(1,R13),1(R3)      COPY THE COUNT BYTE\n         XI    8(R13),X'C0'        SET SOME MORE 8(R13)\n         B     EXP0070             AND SKIP SOME MORE\nEXP0060  DS    0H\n         LA    R5,1(,R5)           BUMP OUTPUT CURSOR\nEXP0070  DS    0H\n         MVC   11(1,R13),0(R3)     COPY BIT COUNT\n         NC    10(2,R13),H15       TRIM TO BARE BIT COUNT\n         SH    R2,10(,R13)         BITS TO RETURN\n         AR    R0,R2               RETURN TO BIT COUNT\n         SRDL  R6,0(R2)            SHIFT BACK OVER\n         SR    R2,R2               RE-CLEAR\n         CH    R0,H32              BIGGER THAT IT SHOULD BE ??\n         BNH   EXP0080\n         SH    R0,H32              YES, BACK IT UP\n         SH    R10,H4              BACK UP INPUT POINTER\nEXP0080  DS    0H\n         CR    R5,R12              FAR ENOUGH YET ??\n         BNH   EXP0010             NOPE; KEEP GOING\nEXP0090  DS    0H\n         LR    R1,R13\n         L     R13,4(,R13)\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=WORKL\n         LM    R14,R12,12(R13)     RELOAD REGISTERS\n         SR    R15,R15             RETURN CODE IS ZERO\n         BR    R14                 AND RETURN TO CALLER\nEXP0100  DS    0H\n         STM   R14,R15,12(R13)\n         L     R15,0(,R4)\n         AR    R2,R15              BACKSHIFT ACCUMULATOR\n         LR    R14,R0              COPY BITS-LEFT VALUE\n         SR    R14,R15             ANY LEFT AFTER SHIFT ??\n         BNM   EXP0110             YES ---\n         LR    R14,R0              COPY BITS-LEFT VALUE\n         SLDL  R6,0(R14)           SHIFT THAT FAR\n         SR    R15,R14             DECREMENT REQUEST SIZE\n         L     R7,0(,R10)          LOAD ANOTHER WORD OF INPUT\n         LA    R10,4(,R10)         POINT TO NEXT WORD\n         LA    R0,32               GOT ANOTHER 32 BITS\nEXP0110  DS    0H\n         SLDL  R6,0(R15)           SHIFT OVER\n         LR    R8,R6               COPY SHIFTED BITS\n         N     R8,4(,R4)           GET JUST WHAT WE WANT\n         SLL   R8,1                TIMES TWO\n         SR    R0,R15              ACCOUNT FOR IT\n         LM    R14,R15,12(R13)\n         BR    R9                  AND RETURN TO CALLER\n         LTORG\n*---------------------------------------------------------------------*\nH4       DC    H'4'\nH15      DC    H'15'\nH32      DC    H'32'\n*---------------------------------------------------------------------*\n*---     THIS IS THE EXPANSION TABLE THAT CORRESPONDS TO THE       ---*\n*---     'CURRENT' COMPACTION TABLE.  BECAUSE OF THE WAY THAT THE  ---*\n*---     EXPANDER WORKS, THE TABLE IS MUCH LARGER AND CONTAINS     ---*\n*---     MANY DUPLICATED ENTRIES. HERE'S THE FORMAT:               ---*\n*---                                                               ---*\n*---     WORDS 1-32 ARE THE TABLE OF SHIFT AMOUNTS AND MASKS OF    ---*\n*---                BITS THAT ARE RETAINED DURING EACH STEP OF     ---*\n*---                THE EXPANSION.                                 ---*\n*---                                                               ---*\n*---     THE FOLLOWING TWO-BYTE ENTRIES ARE COMPOSED OF EITHER OF  ---*\n*---     TWO TYPES OF DATA.                                        ---*\n*---                                                               ---*\n*---     TYPE1:  THOSE ENTRIES THAT HAVE THE X'80' BIT ON ARE      ---*\n*---     DIRECT REPLACEMENT CHARACTERS.  THE LOW-ORDER 6 BITS OF   ---*\n*---     THE FIRST BYTE ARE A COUNT OF BITS TO BE REMOVED FROM     ---*\n*---     THE LEFT END OF THE COMPACTED STRING. THE SECOND BYTE IS  ---*\n*---     THE ACTUAL CHARACTER TO BE PLACED IN THE OUTPUT STRING.   ---*\n*---                                                               ---*\n*---     TYPE2:  THOSE BYTES ARE USED IN CONJUNCTION WITH THE      ---*\n*---     SHIFT VALUES TO INDEX INTO 'SUBTABLES', FOR THOSE         ---*\n*---     CHARACTERS THAT, WHEN COMPACTED, EXCEED 8 BITS.  WHAT     ---*\n*---     HAPPENS IS THIS: THE NUMBER OF BITS DEFINED IN THE        ---*\n*---     CURRENT SHIFT TABLE ARE REMOVED FROM THE LEFT END OF THE  ---*\n*---     STRING.  THE REMAINING BITS ARE USED TO INDEX INTO THE    ---*\n*---     'SUBTABLE'.  IF ANOTHER SUBTABLE REFERENCE IS FOUND, THE  ---*\n*---     APPROPRIATE SHIFT IS MADE AND WE START ALL OVER, ANOTHER  ---*\n*---     LEVEL DOWN IN THE EXPANSION TABLE.  TO REALLY GET A FEEL  ---*\n*---     OF HOW THIS ALL WORKS, YOU SHOULD BE LOOKING AT 'EXPAND'  ---*\n*---     AND WATCH HOW IT ITERATES.                                ---*\n*---------------------------------------------------------------------*\nEXP60    DC    F'8',B'00000000000000000000000011111111'\n         DC    F'3',B'00000000000000000000000000000111'\n         DC    F'4',B'00000000000000000000000000001111'\n         DC    F'4',B'00000000000000000000000000001111'\n         DC    F'3',B'00000000000000000000000000000111'\n         DC    11F'0,0'\n         DC    B'10000110',X'6B'\n         DC    B'10000110',X'6B'\n         DC    B'10000110',X'6B'\n         DC    B'10000110',X'6B'\n         DC    B'10000110',X'5C'\n         DC    B'10000110',X'5C'\n         DC    B'10000110',X'5C'\n         DC    B'10000110',X'5C'\n         DC    B'10000101',X'F1'\n         DC    B'10000101',X'F1'\n         DC    B'10000101',X'F1'\n         DC    B'10000101',X'F1'\n         DC    B'10000101',X'F1'\n         DC    B'10000101',X'F1'\n         DC    B'10000101',X'F1'\n         DC    B'10000101',X'F1'\n         DC    AL2(BB1-*) SUBTABLE REFERENCE\n         DC    AL2(BB2-*) SUBTABLE REFERENCE\n         DC    B'10001000',X'95'\n         DC    AL2(BB3-*) SUBTABLE REFERENCE\n         DC    B'10000110',X'C2'\n         DC    B'10000110',X'C2'\n         DC    B'10000110',X'C2'\n         DC    B'10000110',X'C2'\n         DC    B'10000110',X'F3'\n         DC    B'10000110',X'F3'\n         DC    B'10000110',X'F3'\n         DC    B'10000110',X'F3'\n         DC    B'10000110',X'F4'\n         DC    B'10000110',X'F4'\n         DC    B'10000110',X'F4'\n         DC    B'10000110',X'F4'\n         DC    B'10000110',X'E4'\n         DC    B'10000110',X'E4'\n         DC    B'10000110',X'E4'\n         DC    B'10000110',X'E4'\n         DC    B'10001000',X'81'\n         DC    AL2(BB4-*) SUBTABLE REFERENCE\n         DC    B'10000111',X'61'\n         DC    B'10000111',X'61'\n         DC    B'10000101',X'C3'\n         DC    B'10000101',X'C3'\n         DC    B'10000101',X'C3'\n         DC    B'10000101',X'C3'\n         DC    B'10000101',X'C3'\n         DC    B'10000101',X'C3'\n         DC    B'10000101',X'C3'\n         DC    B'10000101',X'C3'\n         DC    B'10001000',X'7C'\n         DC    AL2(BB5-*) SUBTABLE REFERENCE\n         DC    B'10001000',X'96'\n         DC    AL2(BB6-*) SUBTABLE REFERENCE\n         DC    B'10000110',X'D4'\n         DC    B'10000110',X'D4'\n         DC    B'10000110',X'D4'\n         DC    B'10000110',X'D4'\n         DC    B'10000101',X'C1'\n         DC    B'10000101',X'C1'\n         DC    B'10000101',X'C1'\n         DC    B'10000101',X'C1'\n         DC    B'10000101',X'C1'\n         DC    B'10000101',X'C1'\n         DC    B'10000101',X'C1'\n         DC    B'10000101',X'C1'\n         DC    B'10000111',X'E5'\n         DC    B'10000111',X'E5'\n         DC    B'10001000',X'A3'\n         DC    AL2(BB7-*) SUBTABLE REFERENCE\n         DC    AL2(BB8-*) SUBTABLE REFERENCE\n         DC    B'10001000',X'E6'\n         DC    B'10001000',X'50'\n         DC    AL2(BB9-*) SUBTABLE REFERENCE\n         DC    B'10000101',X'D9'\n         DC    B'10000101',X'D9'\n         DC    B'10000101',X'D9'\n         DC    B'10000101',X'D9'\n         DC    B'10000101',X'D9'\n         DC    B'10000101',X'D9'\n         DC    B'10000101',X'D9'\n         DC    B'10000101',X'D9'\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'11000100',X'00' REPEATING STRING\n         DC    B'10000111',X'C7'\n         DC    B'10000111',X'C7'\n         DC    B'10000111',X'7D'\n         DC    B'10000111',X'7D'\n         DC    B'10001000',X'7E'\n         DC    AL2(BB10-*) SUBTABLE REFERENCE\n         DC    B'10000111',X'C8'\n         DC    B'10000111',X'C8'\n         DC    B'10000101',X'E2'\n         DC    B'10000101',X'E2'\n         DC    B'10000101',X'E2'\n         DC    B'10000101',X'E2'\n         DC    B'10000101',X'E2'\n         DC    B'10000101',X'E2'\n         DC    B'10000101',X'E2'\n         DC    B'10000101',X'E2'\n         DC    B'10000110',X'D7'\n         DC    B'10000110',X'D7'\n         DC    B'10000110',X'D7'\n         DC    B'10000110',X'D7'\n         DC    AL2(BB11-*) SUBTABLE REFERENCE\n         DC    AL2(BB12-*) SUBTABLE REFERENCE\n         DC    B'10000111',X'F9'\n         DC    B'10000111',X'F9'\n         DC    B'10000101',X'E3'\n         DC    B'10000101',X'E3'\n         DC    B'10000101',X'E3'\n         DC    B'10000101',X'E3'\n         DC    B'10000101',X'E3'\n         DC    B'10000101',X'E3'\n         DC    B'10000101',X'E3'\n         DC    B'10000101',X'E3'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000011',X'40'\n         DC    B'10000111',X'F7'\n         DC    B'10000111',X'F7'\n         DC    AL2(BB13-*) SUBTABLE REFERENCE\n         DC    AL2(BB14-*) SUBTABLE REFERENCE\n         DC    B'10000110',X'F2'\n         DC    B'10000110',X'F2'\n         DC    B'10000110',X'F2'\n         DC    B'10000110',X'F2'\n         DC    B'10001000',X'D2'\n         DC    B'10001000',X'E7'\n         DC    B'10000111',X'F8'\n         DC    B'10000111',X'F8'\n         DC    AL2(BB15-*) SUBTABLE REFERENCE\n         DC    B'10001000',X'4B'\n         DC    B'10000111',X'F6'\n         DC    B'10000111',X'F6'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000100',X'F0'\n         DC    B'10000110',X'D3'\n         DC    B'10000110',X'D3'\n         DC    B'10000110',X'D3'\n         DC    B'10000110',X'D3'\n         DC    AL2(BB16-*) SUBTABLE REFERENCE\n         DC    B'10001000',X'60'\n         DC    AL2(BB17-*) SUBTABLE REFERENCE\n         DC    B'10001000',X'85'\n         DC    B'10000101',X'C5'\n         DC    B'10000101',X'C5'\n         DC    B'10000101',X'C5'\n         DC    B'10000101',X'C5'\n         DC    B'10000101',X'C5'\n         DC    B'10000101',X'C5'\n         DC    B'10000101',X'C5'\n         DC    B'10000101',X'C5'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000100',X'00'\n         DC    B'10000110',X'C4'\n         DC    B'10000110',X'C4'\n         DC    B'10000110',X'C4'\n         DC    B'10000110',X'C4'\n         DC    B'10001000',X'E8'\n         DC    AL2(BB18-*) SUBTABLE REFERENCE\n         DC    B'10000111',X'F5'\n         DC    B'10000111',X'F5'\n         DC    B'10000110',X'C9'\n         DC    B'10000110',X'C9'\n         DC    B'10000110',X'C9'\n         DC    B'10000110',X'C9'\n         DC    B'10000110',X'D5'\n         DC    B'10000110',X'D5'\n         DC    B'10000110',X'D5'\n         DC    B'10000110',X'D5'\n         DC    B'10001000',X'D8'\n         DC    AL2(BB19-*) SUBTABLE REFERENCE\n         DC    B'10001000',X'4D'\n         DC    AL2(BB20-*) SUBTABLE REFERENCE\n         DC    B'10000111',X'C6'\n         DC    B'10000111',X'C6'\n         DC    B'10001000',X'5D'\n         DC    AL2(BB21-*) SUBTABLE REFERENCE\n         DC    B'10000110',X'D6'\n         DC    B'10000110',X'D6'\n         DC    B'10000110',X'D6'\n         DC    B'10000110',X'D6'\n         DC    B'10000110',X'54'\n         DC    B'10000110',X'54'\n         DC    B'10000110',X'54'\n         DC    B'10000110',X'54'\nBB1      DC    B'10001001',X'D0'\n         DC    B'10001001',X'D0'\n         DC    B'10001001',X'D0'\n         DC    B'10001001',X'D0'\n         DC    B'10001011',X'FF'\n         DC    B'10001011',X'7F'\n         DC    AL2(BB22-*) SUBTABLE REFERENCE\n         DC    B'10001011',X'1B'\nBB2      DC    B'10001001',X'20'\n         DC    B'10001001',X'20'\n         DC    B'10001001',X'20'\n         DC    B'10001001',X'20'\n         DC    B'10001010',X'A8'\n         DC    B'10001010',X'A8'\n         DC    AL2(BB23-*) SUBTABLE REFERENCE\n         DC    B'10001011',X'0A'\nBB3      DC    B'10001001',X'94'\n         DC    B'10001001',X'94'\n         DC    B'10001001',X'94'\n         DC    B'10001001',X'94'\n         DC    B'10001011',X'14'\n         DC    AL2(BB24-*) SUBTABLE REFERENCE\n         DC    B'10001010',X'87'\n         DC    B'10001010',X'87'\nBB4      DC    B'10001010',X'07'\n         DC    B'10001010',X'07'\n         DC    AL2(BB25-*) SUBTABLE REFERENCE\n         DC    AL2(BB26-*) SUBTABLE REFERENCE\n         DC    B'10001010',X'5B'\n         DC    B'10001010',X'5B'\n         DC    B'10001010',X'18'\n         DC    B'10001010',X'18'\nBB5      DC    B'10001010',X'90'\n         DC    B'10001010',X'90'\n         DC    AL2(BB27-*) SUBTABLE REFERENCE\n         DC    B'10001011',X'1C'\n         DC    B'10001001',X'93'\n         DC    B'10001001',X'93'\n         DC    B'10001001',X'93'\n         DC    B'10001001',X'93'\nBB6      DC    AL2(BB28-*) SUBTABLE REFERENCE\n         DC    AL2(BB29-*) SUBTABLE REFERENCE\n         DC    B'10001010',X'82'\n         DC    B'10001010',X'82'\n         DC    B'10001001',X'41'\n         DC    B'10001001',X'41'\n         DC    B'10001001',X'41'\n         DC    B'10001001',X'41'\nBB7      DC    AL2(BB30-*) SUBTABLE REFERENCE\n         DC    AL2(BB31-*) SUBTABLE REFERENCE\n         DC    AL2(BB32-*) SUBTABLE REFERENCE\n         DC    B'10001011',X'12'\n         DC    AL2(BB33-*) SUBTABLE REFERENCE\n         DC    B'10001011',X'7B'\n         DC    B'10001010',X'03'\n         DC    B'10001010',X'03'\nBB8      DC    B'10001001',X'84'\n         DC    B'10001001',X'84'\n         DC    B'10001001',X'84'\n         DC    B'10001001',X'84'\n         DC    B'10001001',X'88'\n         DC    B'10001001',X'88'\n         DC    B'10001001',X'88'\n         DC    B'10001001',X'88'\nBB9      DC    AL2(BB34-*) SUBTABLE REFERENCE\n         DC    B'10001011',X'0D'\n         DC    B'10001010',X'08'\n         DC    B'10001010',X'08'\n         DC    B'10001001',X'80'\n         DC    B'10001001',X'80'\n         DC    B'10001001',X'80'\n         DC    B'10001001',X'80'\nBB10     DC    AL2(BB35-*) SUBTABLE REFERENCE\n         DC    AL2(BB36-*) SUBTABLE REFERENCE\n         DC    AL2(BB37-*) SUBTABLE REFERENCE\n         DC    B'10001011',X'6C'\n         DC    B'10001001',X'01'\n         DC    B'10001001',X'01'\n         DC    B'10001001',X'01'\n         DC    B'10001001',X'01'\nBB11     DC    B'10001011',X'45'\n         DC    AL2(BB38-*) SUBTABLE REFERENCE\n         DC    B'10001010',X'30'\n         DC    B'10001010',X'30'\n         DC    AL2(BB39-*) SUBTABLE REFERENCE\n         DC    B'10001011',X'A6'\n         DC    B'10001010',X'97'\n         DC    B'10001010',X'97'\nBB12     DC    B'10001001',X'58'\n         DC    B'10001001',X'58'\n         DC    B'10001001',X'58'\n         DC    B'10001001',X'58'\n         DC    B'10001010',X'86'\n         DC    B'10001010',X'86'\n         DC    B'10001011',X'48'\n         DC    AL2(BB40-*) SUBTABLE REFERENCE\nBB13     DC    B'10001010',X'04'\n         DC    B'10001010',X'04'\n         DC    B'10001011',X'38'\n         DC    B'10001011',X'06'\n         DC    B'10001010',X'5E'\n         DC    B'10001010',X'5E'\n         DC    B'10001010',X'7A'\n         DC    B'10001010',X'7A'\nBB14     DC    AL2(BB41-*) SUBTABLE REFERENCE\n         DC    AL2(BB42-*) SUBTABLE REFERENCE\n         DC    AL2(BB43-*) SUBTABLE REFERENCE\n         DC    AL2(BB44-*) SUBTABLE REFERENCE\n         DC    B'10001001',X'10'\n         DC    B'10001001',X'10'\n         DC    B'10001001',X'10'\n         DC    B'10001001',X'10'\nBB15     DC    B'10001011',X'B0'\n         DC    AL2(BB45-*) SUBTABLE REFERENCE\n         DC    B'10001010',X'70'\n         DC    B'10001010',X'70'\n         DC    AL2(BB46-*) SUBTABLE REFERENCE\n         DC    AL2(BB47-*) SUBTABLE REFERENCE\n         DC    B'10001010',X'E0'\n         DC    B'10001010',X'E0'\nBB16     DC    B'10001010',X'02'\n         DC    B'10001010',X'02'\n         DC    B'10001010',X'A4'\n         DC    B'10001010',X'A4'\n         DC    B'10001001',X'47'\n         DC    B'10001001',X'47'\n         DC    B'10001001',X'47'\n         DC    B'10001001',X'47'\nBB17     DC    B'10001001',X'99'\n         DC    B'10001001',X'99'\n         DC    B'10001001',X'99'\n         DC    B'10001001',X'99'\n         DC    AL2(BB48-*) SUBTABLE REFERENCE\n         DC    AL2(BB49-*) SUBTABLE REFERENCE\n         DC    B'10001011',X'0C'\n         DC    B'10001011',X'A0'\nBB18     DC    AL2(BB50-*) SUBTABLE REFERENCE\n         DC    B'10001011',X'91'\n         DC    AL2(BB51-*) SUBTABLE REFERENCE\n         DC    AL2(BB52-*) SUBTABLE REFERENCE\n         DC    B'10001001',X'A2'\n         DC    B'10001001',X'A2'\n         DC    B'10001001',X'A2'\n         DC    B'10001001',X'A2'\nBB19     DC    B'10001001',X'D1'\n         DC    B'10001001',X'D1'\n         DC    B'10001001',X'D1'\n         DC    B'10001001',X'D1'\n         DC    B'10001001',X'89'\n         DC    B'10001001',X'89'\n         DC    B'10001001',X'89'\n         DC    B'10001001',X'89'\nBB20     DC    B'10001010',X'83'\n         DC    B'10001010',X'83'\n         DC    B'10001011',X'C0'\n         DC    AL2(BB53-*) SUBTABLE REFERENCE\n         DC    B'10001010',X'E9'\n         DC    B'10001010',X'E9'\n         DC    B'10001011',X'05'\n         DC    B'10001011',X'92'\nBB21     DC    AL2(BB54-*) SUBTABLE REFERENCE\n         DC    AL2(BB55-*) SUBTABLE REFERENCE\n         DC    AL2(BB56-*) SUBTABLE REFERENCE\n         DC    AL2(BB57-*) SUBTABLE REFERENCE\n         DC    B'10001001',X'4E'\n         DC    B'10001001',X'4E'\n         DC    B'10001001',X'4E'\n         DC    B'10001001',X'4E'\nBB22     DC    B'10001110',X'AF'\n         DC    B'10001110',X'AF'\n         DC    B'10001110',X'FD'\n         DC    B'10001110',X'FD'\n         DC    B'10001101',X'BA'\n         DC    B'10001101',X'BA'\n         DC    B'10001101',X'BA'\n         DC    B'10001101',X'BA'\n         DC    B'10001100',X'FE'\n         DC    B'10001100',X'FE'\n         DC    B'10001100',X'FE'\n         DC    B'10001100',X'FE'\n         DC    B'10001100',X'FE'\n         DC    B'10001100',X'FE'\n         DC    B'10001100',X'FE'\n         DC    B'10001100',X'FE'\nBB23     DC    B'10001101',X'2E'\n         DC    B'10001101',X'2E'\n         DC    B'10001101',X'2E'\n         DC    B'10001101',X'2E'\n         DC    B'10001101',X'52'\n         DC    B'10001101',X'52'\n         DC    B'10001101',X'52'\n         DC    B'10001101',X'52'\n         DC    B'10001101',X'A9'\n         DC    B'10001101',X'A9'\n         DC    B'10001101',X'A9'\n         DC    B'10001101',X'A9'\n         DC    B'10001101',X'B6'\n         DC    B'10001101',X'B6'\n         DC    B'10001101',X'B6'\n         DC    B'10001101',X'B6'\nBB24     DC    B'10001100',X'1F'\n         DC    B'10001100',X'1F'\n         DC    B'10001100',X'1F'\n         DC    B'10001100',X'1F'\n         DC    B'10001100',X'1F'\n         DC    B'10001100',X'1F'\n         DC    B'10001100',X'1F'\n         DC    B'10001100',X'1F'\n         DC    B'10001100',X'4A'\n         DC    B'10001100',X'4A'\n         DC    B'10001100',X'4A'\n         DC    B'10001100',X'4A'\n         DC    B'10001100',X'4A'\n         DC    B'10001100',X'4A'\n         DC    B'10001100',X'4A'\n         DC    B'10001100',X'4A'\nBB25     DC    B'10001110',X'DF'\n         DC    B'10001110',X'DF'\n         DC    B'10001110',X'65'\n         DC    B'10001110',X'65'\n         DC    B'10001101',X'2A'\n         DC    B'10001101',X'2A'\n         DC    B'10001101',X'2A'\n         DC    B'10001101',X'2A'\n         DC    B'10001110',X'EA'\n         DC    B'10001110',X'EA'\n         DC    B'10001110',X'8F'\n         DC    B'10001110',X'8F'\n         DC    B'10001101',X'DE'\n         DC    B'10001101',X'DE'\n         DC    B'10001101',X'DE'\n         DC    B'10001101',X'DE'\nBB26     DC    B'10001100',X'1E'\n         DC    B'10001100',X'1E'\n         DC    B'10001100',X'1E'\n         DC    B'10001100',X'1E'\n         DC    B'10001100',X'1E'\n         DC    B'10001100',X'1E'\n         DC    B'10001100',X'1E'\n         DC    B'10001100',X'1E'\n         DC    B'10001110',X'AB'\n         DC    B'10001110',X'AB'\n         DC    B'10001110',X'8D'\n         DC    B'10001110',X'8D'\n         DC    B'10001101',X'56'\n         DC    B'10001101',X'56'\n         DC    B'10001101',X'56'\n         DC    B'10001101',X'56'\nBB27     DC    B'10001100',X'68'\n         DC    B'10001100',X'68'\n         DC    B'10001100',X'68'\n         DC    B'10001100',X'68'\n         DC    B'10001100',X'68'\n         DC    B'10001100',X'68'\n         DC    B'10001100',X'68'\n         DC    B'10001100',X'68'\n         DC    B'10001101',X'71'\n         DC    B'10001101',X'71'\n         DC    B'10001101',X'71'\n         DC    B'10001101',X'71'\n         DC    B'10001101',X'35'\n         DC    B'10001101',X'35'\n         DC    B'10001101',X'35'\n         DC    B'10001101',X'35'\nBB28     DC    B'10001100',X'0F'\n         DC    B'10001100',X'0F'\n         DC    B'10001100',X'0F'\n         DC    B'10001100',X'0F'\n         DC    B'10001100',X'0F'\n         DC    B'10001100',X'0F'\n         DC    B'10001100',X'0F'\n         DC    B'10001100',X'0F'\n         DC    B'10001101',X'3A'\n         DC    B'10001101',X'3A'\n         DC    B'10001101',X'3A'\n         DC    B'10001101',X'3A'\n         DC    B'10001110',X'69'\n         DC    B'10001110',X'69'\n         DC    B'10001110',X'79'\n         DC    B'10001110',X'79'\nBB29     DC    B'10001101',X'23'\n         DC    B'10001101',X'23'\n         DC    B'10001101',X'23'\n         DC    B'10001101',X'23'\n         DC    B'10001101',X'3E'\n         DC    B'10001101',X'3E'\n         DC    B'10001101',X'3E'\n         DC    B'10001101',X'3E'\n         DC    B'10001100',X'1A'\n         DC    B'10001100',X'1A'\n         DC    B'10001100',X'1A'\n         DC    B'10001100',X'1A'\n         DC    B'10001100',X'1A'\n         DC    B'10001100',X'1A'\n         DC    B'10001100',X'1A'\n         DC    B'10001100',X'1A'\nBB30     DC    B'10001110',X'DB'\n         DC    B'10001110',X'DB'\n         DC    B'10001110',X'BD'\n         DC    B'10001110',X'BD'\n         DC    B'10001101',X'2F'\n         DC    B'10001101',X'2F'\n         DC    B'10001101',X'2F'\n         DC    B'10001101',X'2F'\n         DC    B'10001101',X'66'\n         DC    B'10001101',X'66'\n         DC    B'10001101',X'66'\n         DC    B'10001101',X'66'\n         DC    B'10001101',X'CA'\n         DC    B'10001101',X'CA'\n         DC    B'10001101',X'CA'\n         DC    B'10001101',X'CA'\nBB31     DC    B'10001100',X'3C'\n         DC    B'10001100',X'3C'\n         DC    B'10001100',X'3C'\n         DC    B'10001100',X'3C'\n         DC    B'10001100',X'3C'\n         DC    B'10001100',X'3C'\n         DC    B'10001100',X'3C'\n         DC    B'10001100',X'3C'\n         DC    B'10001110',X'CF'\n         DC    B'10001110',X'CF'\n         DC    B'10001110',X'53'\n         DC    B'10001110',X'53'\n         DC    B'10001101',X'26'\n         DC    B'10001101',X'26'\n         DC    B'10001101',X'26'\n         DC    B'10001101',X'26'\nBB32     DC    B'10001101',X'B1'\n         DC    B'10001101',X'B1'\n         DC    B'10001101',X'B1'\n         DC    B'10001101',X'B1'\n         DC    B'10001101',X'BE'\n         DC    B'10001101',X'BE'\n         DC    B'10001101',X'BE'\n         DC    B'10001101',X'BE'\n         DC    B'10001110',X'51'\n         DC    B'10001110',X'51'\n         DC    B'10001110',X'E1'\n         DC    B'10001110',X'E1'\n         DC    B'10001101',X'A1'\n         DC    B'10001101',X'A1'\n         DC    B'10001101',X'A1'\n         DC    B'10001101',X'A1'\nBB33     DC    B'10001100',X'22'\n         DC    B'10001100',X'22'\n         DC    B'10001100',X'22'\n         DC    B'10001100',X'22'\n         DC    B'10001100',X'22'\n         DC    B'10001100',X'22'\n         DC    B'10001100',X'22'\n         DC    B'10001100',X'22'\n         DC    B'10001100',X'42'\n         DC    B'10001100',X'42'\n         DC    B'10001100',X'42'\n         DC    B'10001100',X'42'\n         DC    B'10001100',X'42'\n         DC    B'10001100',X'42'\n         DC    B'10001100',X'42'\n         DC    B'10001100',X'42'\nBB34     DC    B'10001110',X'B9'\n         DC    B'10001110',X'B9'\n         DC    B'10001110',X'57'\n         DC    B'10001110',X'57'\n         DC    B'10001101',X'6A'\n         DC    B'10001101',X'6A'\n         DC    B'10001101',X'6A'\n         DC    B'10001101',X'6A'\n         DC    B'10001100',X'43'\n         DC    B'10001100',X'43'\n         DC    B'10001100',X'43'\n         DC    B'10001100',X'43'\n         DC    B'10001100',X'43'\n         DC    B'10001100',X'43'\n         DC    B'10001100',X'43'\n         DC    B'10001100',X'43'\nBB35     DC    B'10001101',X'73'\n         DC    B'10001101',X'73'\n         DC    B'10001101',X'73'\n         DC    B'10001101',X'73'\n         DC    B'10001110',X'75'\n         DC    B'10001110',X'75'\n         DC    B'10001110',X'9B'\n         DC    B'10001110',X'9B'\n         DC    B'10001101',X'62'\n         DC    B'10001101',X'62'\n         DC    B'10001101',X'62'\n         DC    B'10001101',X'62'\n         DC    B'10001101',X'AA'\n         DC    B'10001101',X'AA'\n         DC    B'10001101',X'AA'\n         DC    B'10001101',X'AA'\nBB36     DC    B'10001100',X'A7'\n         DC    B'10001100',X'A7'\n         DC    B'10001100',X'A7'\n         DC    B'10001100',X'A7'\n         DC    B'10001100',X'A7'\n         DC    B'10001100',X'A7'\n         DC    B'10001100',X'A7'\n         DC    B'10001100',X'A7'\n         DC    B'10001101',X'49'\n         DC    B'10001101',X'49'\n         DC    B'10001101',X'49'\n         DC    B'10001101',X'49'\n         DC    B'10001111',X'ED'\n         DC    B'10001111',X'EB'\n         DC    B'10001110',X'B7'\n         DC    B'10001110',X'B7'\nBB37     DC    B'10001100',X'2C'\n         DC    B'10001100',X'2C'\n         DC    B'10001100',X'2C'\n         DC    B'10001100',X'2C'\n         DC    B'10001100',X'2C'\n         DC    B'10001100',X'2C'\n         DC    B'10001100',X'2C'\n         DC    B'10001100',X'2C'\n         DC    B'10001100',X'32'\n         DC    B'10001100',X'32'\n         DC    B'10001100',X'32'\n         DC    B'10001100',X'32'\n         DC    B'10001100',X'32'\n         DC    B'10001100',X'32'\n         DC    B'10001100',X'32'\n         DC    B'10001100',X'32'\nBB38     DC    B'10001101',X'55'\n         DC    B'10001101',X'55'\n         DC    B'10001101',X'55'\n         DC    B'10001101',X'55'\n         DC    B'10001110',X'3D'\n         DC    B'10001110',X'3D'\n         DC    B'10001110',X'63'\n         DC    B'10001110',X'63'\n         DC    B'10001100',X'0E'\n         DC    B'10001100',X'0E'\n         DC    B'10001100',X'0E'\n         DC    B'10001100',X'0E'\n         DC    B'10001100',X'0E'\n         DC    B'10001100',X'0E'\n         DC    B'10001100',X'0E'\n         DC    B'10001100',X'0E'\nBB39     DC    B'10001110',X'9E'\n         DC    B'10001110',X'9E'\n         DC    B'10001110',X'2D'\n         DC    B'10001110',X'2D'\n         DC    B'10001101',X'15'\n         DC    B'10001101',X'15'\n         DC    B'10001101',X'15'\n         DC    B'10001101',X'15'\n         DC    B'10001110',X'67'\n         DC    B'10001110',X'67'\n         DC    B'10001110',X'DD'\n         DC    B'10001110',X'DD'\n         DC    B'10001110',X'CD'\n         DC    B'10001110',X'CD'\n         DC    B'10001110',X'3B'\n         DC    B'10001110',X'3B'\nBB40     DC    B'10001100',X'11'\n         DC    B'10001100',X'11'\n         DC    B'10001100',X'11'\n         DC    B'10001100',X'11'\n         DC    B'10001100',X'11'\n         DC    B'10001100',X'11'\n         DC    B'10001100',X'11'\n         DC    B'10001100',X'11'\n         DC    B'10001110',X'29'\n         DC    B'10001110',X'29'\n         DC    B'10001110',X'AE'\n         DC    B'10001110',X'AE'\n         DC    B'10001101',X'1D'\n         DC    B'10001101',X'1D'\n         DC    B'10001101',X'1D'\n         DC    B'10001101',X'1D'\nBB41     DC    B'10001101',X'AC'\n         DC    B'10001101',X'AC'\n         DC    B'10001101',X'AC'\n         DC    B'10001101',X'AC'\n         DC    B'10001101',X'B2'\n         DC    B'10001101',X'B2'\n         DC    B'10001101',X'B2'\n         DC    B'10001101',X'B2'\n         DC    B'10001100',X'24'\n         DC    B'10001100',X'24'\n         DC    B'10001100',X'24'\n         DC    B'10001100',X'24'\n         DC    B'10001100',X'24'\n         DC    B'10001100',X'24'\n         DC    B'10001100',X'24'\n         DC    B'10001100',X'24'\nBB42     DC    B'10001101',X'BF'\n         DC    B'10001101',X'BF'\n         DC    B'10001101',X'BF'\n         DC    B'10001101',X'BF'\n         DC    B'10001101',X'36'\n         DC    B'10001101',X'36'\n         DC    B'10001101',X'36'\n         DC    B'10001101',X'36'\n         DC    B'10001101',X'59'\n         DC    B'10001101',X'59'\n         DC    B'10001101',X'59'\n         DC    B'10001101',X'59'\n         DC    B'10001110',X'B5'\n         DC    B'10001110',X'B5'\n         DC    B'10001110',X'BB'\n         DC    B'10001110',X'BB'\nBB43     DC    B'10001100',X'28'\n         DC    B'10001100',X'28'\n         DC    B'10001100',X'28'\n         DC    B'10001100',X'28'\n         DC    B'10001100',X'28'\n         DC    B'10001100',X'28'\n         DC    B'10001100',X'28'\n         DC    B'10001100',X'28'\n         DC    B'10001101',X'46'\n         DC    B'10001101',X'46'\n         DC    B'10001101',X'46'\n         DC    B'10001101',X'46'\n         DC    B'10001101',X'9C'\n         DC    B'10001101',X'9C'\n         DC    B'10001101',X'9C'\n         DC    B'10001101',X'9C'\nBB44     DC    B'10001110',X'CB'\n         DC    B'10001110',X'CB'\n         DC    B'10001110',X'8B'\n         DC    B'10001110',X'8B'\n         DC    B'10001101',X'5F'\n         DC    B'10001101',X'5F'\n         DC    B'10001101',X'5F'\n         DC    B'10001101',X'5F'\n         DC    B'10001100',X'EF'\n         DC    B'10001100',X'EF'\n         DC    B'10001100',X'EF'\n         DC    B'10001100',X'EF'\n         DC    B'10001100',X'EF'\n         DC    B'10001100',X'EF'\n         DC    B'10001100',X'EF'\n         DC    B'10001100',X'EF'\nBB45     DC    B'10001110',X'2B'\n         DC    B'10001110',X'2B'\n         DC    B'10001111',X'9D'\n         DC    B'10001111',X'9F'\n         DC    B'10001101',X'17'\n         DC    B'10001101',X'17'\n         DC    B'10001101',X'17'\n         DC    B'10001101',X'17'\n         DC    B'10001100',X'34'\n         DC    B'10001100',X'34'\n         DC    B'10001100',X'34'\n         DC    B'10001100',X'34'\n         DC    B'10001100',X'34'\n         DC    B'10001100',X'34'\n         DC    B'10001100',X'34'\n         DC    B'10001100',X'34'\nBB46     DC    B'10001101',X'21'\n         DC    B'10001101',X'21'\n         DC    B'10001101',X'21'\n         DC    B'10001101',X'21'\n         DC    B'10001110',X'DA'\n         DC    B'10001110',X'DA'\n         DC    B'10001110',X'39'\n         DC    B'10001110',X'39'\n         DC    B'10001100',X'78'\n         DC    B'10001100',X'78'\n         DC    B'10001100',X'78'\n         DC    B'10001100',X'78'\n         DC    B'10001100',X'78'\n         DC    B'10001100',X'78'\n         DC    B'10001100',X'78'\n         DC    B'10001100',X'78'\nBB47     DC    B'10001100',X'6E'\n         DC    B'10001100',X'6E'\n         DC    B'10001100',X'6E'\n         DC    B'10001100',X'6E'\n         DC    B'10001100',X'6E'\n         DC    B'10001100',X'6E'\n         DC    B'10001100',X'6E'\n         DC    B'10001100',X'6E'\n         DC    B'10001100',X'6D'\n         DC    B'10001100',X'6D'\n         DC    B'10001100',X'6D'\n         DC    B'10001100',X'6D'\n         DC    B'10001100',X'6D'\n         DC    B'10001100',X'6D'\n         DC    B'10001100',X'6D'\n         DC    B'10001100',X'6D'\nBB48     DC    B'10001101',X'BC'\n         DC    B'10001101',X'BC'\n         DC    B'10001101',X'BC'\n         DC    B'10001101',X'BC'\n         DC    B'10001110',X'B3'\n         DC    B'10001110',X'B3'\n         DC    B'10001110',X'27'\n         DC    B'10001110',X'27'\n         DC    B'10001101',X'8C'\n         DC    B'10001101',X'8C'\n         DC    B'10001101',X'8C'\n         DC    B'10001101',X'8C'\n         DC    B'10001110',X'FA'\n         DC    B'10001110',X'FA'\n         DC    B'10001110',X'9A'\n         DC    B'10001110',X'9A'\nBB49     DC    B'10001100',X'09'\n         DC    B'10001100',X'09'\n         DC    B'10001100',X'09'\n         DC    B'10001100',X'09'\n         DC    B'10001100',X'09'\n         DC    B'10001100',X'09'\n         DC    B'10001100',X'09'\n         DC    B'10001100',X'09'\n         DC    B'10001100',X'31'\n         DC    B'10001100',X'31'\n         DC    B'10001100',X'31'\n         DC    B'10001100',X'31'\n         DC    B'10001100',X'31'\n         DC    B'10001100',X'31'\n         DC    B'10001100',X'31'\n         DC    B'10001100',X'31'\nBB50     DC    B'10001101',X'16'\n         DC    B'10001101',X'16'\n         DC    B'10001101',X'16'\n         DC    B'10001101',X'16'\n         DC    B'10001101',X'B4'\n         DC    B'10001101',X'B4'\n         DC    B'10001101',X'B4'\n         DC    B'10001101',X'B4'\n         DC    B'10001110',X'3F'\n         DC    B'10001110',X'3F'\n         DC    B'10001111',X'FB'\n         DC    B'10001111',X'AD'\n         DC    B'10001101',X'FC'\n         DC    B'10001101',X'FC'\n         DC    B'10001101',X'FC'\n         DC    B'10001101',X'FC'\nBB51     DC    B'10001101',X'EC'\n         DC    B'10001101',X'EC'\n         DC    B'10001101',X'EC'\n         DC    B'10001101',X'EC'\n         DC    B'10001101',X'CC'\n         DC    B'10001101',X'CC'\n         DC    B'10001101',X'CC'\n         DC    B'10001101',X'CC'\n         DC    B'10001110',X'37'\n         DC    B'10001110',X'37'\n         DC    B'10001110',X'25'\n         DC    B'10001110',X'25'\n         DC    B'10001101',X'13'\n         DC    B'10001101',X'13'\n         DC    B'10001101',X'13'\n         DC    B'10001101',X'13'\nBB52     DC    B'10001100',X'4F'\n         DC    B'10001100',X'4F'\n         DC    B'10001100',X'4F'\n         DC    B'10001100',X'4F'\n         DC    B'10001100',X'4F'\n         DC    B'10001100',X'4F'\n         DC    B'10001100',X'4F'\n         DC    B'10001100',X'4F'\n         DC    B'10001101',X'DC'\n         DC    B'10001101',X'DC'\n         DC    B'10001101',X'DC'\n         DC    B'10001101',X'DC'\n         DC    B'10001101',X'33'\n         DC    B'10001101',X'33'\n         DC    B'10001101',X'33'\n         DC    B'10001101',X'33'\nBB53     DC    B'10001110',X'76'\n         DC    B'10001110',X'76'\n         DC    B'10001110',X'CE'\n         DC    B'10001110',X'CE'\n         DC    B'10001101',X'19'\n         DC    B'10001101',X'19'\n         DC    B'10001101',X'19'\n         DC    B'10001101',X'19'\n         DC    B'10001101',X'5A'\n         DC    B'10001101',X'5A'\n         DC    B'10001101',X'5A'\n         DC    B'10001101',X'5A'\n         DC    B'10001110',X'77'\n         DC    B'10001110',X'77'\n         DC    B'10001110',X'8A'\n         DC    B'10001110',X'8A'\nBB54     DC    B'10001100',X'44'\n         DC    B'10001100',X'44'\n         DC    B'10001100',X'44'\n         DC    B'10001100',X'44'\n         DC    B'10001100',X'44'\n         DC    B'10001100',X'44'\n         DC    B'10001100',X'44'\n         DC    B'10001100',X'44'\n         DC    B'10001101',X'74'\n         DC    B'10001101',X'74'\n         DC    B'10001101',X'74'\n         DC    B'10001101',X'74'\n         DC    B'10001101',X'B8'\n         DC    B'10001101',X'B8'\n         DC    B'10001101',X'B8'\n         DC    B'10001101',X'B8'\nBB55     DC    B'10001100',X'A5'\n         DC    B'10001100',X'A5'\n         DC    B'10001100',X'A5'\n         DC    B'10001100',X'A5'\n         DC    B'10001100',X'A5'\n         DC    B'10001100',X'A5'\n         DC    B'10001100',X'A5'\n         DC    B'10001100',X'A5'\n         DC    B'10001100',X'6F'\n         DC    B'10001100',X'6F'\n         DC    B'10001100',X'6F'\n         DC    B'10001100',X'6F'\n         DC    B'10001100',X'6F'\n         DC    B'10001100',X'6F'\n         DC    B'10001100',X'6F'\n         DC    B'10001100',X'6F'\nBB56     DC    B'10001100',X'4C'\n         DC    B'10001100',X'4C'\n         DC    B'10001100',X'4C'\n         DC    B'10001100',X'4C'\n         DC    B'10001100',X'4C'\n         DC    B'10001100',X'4C'\n         DC    B'10001100',X'4C'\n         DC    B'10001100',X'4C'\n         DC    B'10001100',X'98'\n         DC    B'10001100',X'98'\n         DC    B'10001100',X'98'\n         DC    B'10001100',X'98'\n         DC    B'10001100',X'98'\n         DC    B'10001100',X'98'\n         DC    B'10001100',X'98'\n         DC    B'10001100',X'98'\nBB57     DC    B'10001101',X'72'\n         DC    B'10001101',X'72'\n         DC    B'10001101',X'72'\n         DC    B'10001101',X'72'\n         DC    B'10001101',X'0B'\n         DC    B'10001101',X'0B'\n         DC    B'10001101',X'0B'\n         DC    B'10001101',X'0B'\n         DC    B'10001110',X'8E'\n         DC    B'10001110',X'8E'\n         DC    B'10001110',X'EE'\n         DC    B'10001110',X'EE'\n         DC    B'10001101',X'64'\n         DC    B'10001101',X'64'\n         DC    B'10001101',X'64'\n         DC    B'10001101',X'64'\nEXPNDS   DSECT\nSHIFTS   DS    32F                 SHIFT VALUES\nEXPTAB   DS    F                   EXPANSION TABLE\nWORKAREA DSECT\n         DS    18F\nWORKL    EQU   *-WORKAREA\n         COPY  REGEQU\n         END\n./ ADD NAME=SUB0004  0100-09250-09250-0919-00318-00318-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: SUB0004                                               *\n*                                                                     *\n*   Interface with MVS's dynamic allocation interface routine (DAIR)  *\n*   to allocate or de-allocate data sets.                             *\n*                                                                     *\n*   The interface block is DAIRREQ.                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUB0004  CSECT\nSUB0004  AMODE 31\nSUB0004  RMODE ANY\n         USING SUB0004,R12                    DEFINE BASE\n         STM   R14,R12,12(R13)                CHAIN REGISTERS\n         LR    R12,R15                        COPY ENTRY POINT ADDRESS\n         B     DAIR0000\n         DC    CL8'SUB0004'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nDAIR0000 DS    0H\n         LR    R10,R1                         COPY PARM BLOCK ADDRESS\n         USING DAIRREQ,R10                    DEFINE BASE\n         GETMAIN RU,                          ACQUIRE STORAGE          +\n               LV=WKL,                        .. ACQUIRE WORK AREA     +\n               LOC=ANY                        .. FROM ANY AREA\n         ST    R13,4(R1)                      CHAIN CALLER'S AREA\n         ST    R1,8(R13)                      CHAIN OUR AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK,R13                         DEFINE BASE\n         USING S99RB,R2                       DEFINE BASE\n         LA    R2,WKRB                        SVC 99 REQUEST BLOCK\n         ST    R2,WKRBA                       SET POINTER\n         OI    WKRBA,X'80'                    SET END OF LIST\n         MVC   WK_DD_PARMS(DAIRPL),DAIRPI     INITIALIZE PARAMETERS\n         XC    WKRB(S99RBEND-S99RB),WKRB\n         CLI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING?\n         BE    DAIR1000                       YES\n         CLI   DAIR_CMD,$DAIR_NEW             ALLOCATE NEW DATA SET?\n         BE    DAIR1000                       YES\n         CLI   DAIR_CMD,$DAIR_SYSOUT          ALLOCATE SYSOUT\n         BE    DAIR1500                       YES\n         CLI   DAIR_CMD,$DAIR_INTRDR          ALLOCATE INTERNAL READER?\n         BE    DAIR1600                       YES\n         CLI   DAIR_CMD,$DAIR_RELEASE         RELEASE?\n         BE    DAIR2000                       YES\n         CLI   DAIR_CMD,$DAIR_DELETE          DELETE?\n         BE    DAIR3000                       YES\n         ABEND 1,DUMP,,USER                   SORRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Allocate DASD data sets                                         *\n*                                                                     *\n*---------------------------------------------------------------------*\nDAIR1000 DS    0H\n         MVI   S99VERB,S99VRBAL               SET VERB\n         LA    R15,WK_DD_PARMS                DDNAME PARAMETER\n         ST    R15,WK_TEXT_1                  SET PARAMETER 1 ADDRESS\n         MVC   WK_DD,DAIR_DD                  SET DD NAME\n         LA    R15,WK_DSN_PARMS               DATASET NAME PARAMETER\n         ST    R15,WK_TEXT_2                  SET PARAMETER 2 ADDRESS\n         MVC   WK_DSN,DAIR_DSN                COPY DATA SET NAME\n         LA    R15,WKDSPIP                    INITIAL DISPOSITION\n         ST    R15,WK_TEXT_3                  SET PARAMETER 3 ADDRESS\n         MVI   WKDSPI,X'08'                   SET DISP TO 'SHR'\n         CLI   DAIR_CMD,$DAIR_NEW             ALLOCATE NEW?\n         BE    DAIR1020                       YES\n         CLC   DAIR_MEMBER,BLANKS             MEMBER NAME?\n         BE    DAIR1010                       NO\n         LA    R15,WK_MEM_PARMS               MEMBER NAME PARAMETERS\n         ST    R15,WK_TEXT_4                  SET PARAMETER 4 ADDRESS\n         MVC   WK_MEMBER,DAIR_MEMBER          COPY MEMBER NAME\n         OI    WK_TEXT_4,X'80'                FLAG END-OF-LIST\n         B     DAIR1030\nDAIR1010 DS    0H\n         OI    WK_TEXT_3,X'80'                FLAG END-OF-LIST\n         B     DAIR1030\nDAIR1020 DS    0H\n         MVI   WKDSPI,X'04'                   SET INITIAL DISP 'NEW'\n         LA    R15,WKDSPNP                    NORMAL DISPOSITION\n         ST    R15,WK_TEXT_4                  SET PARAMETER 4 ADDRESS\n         MVI   WKDSPN,X'02'                   SET NORMAL DISP 'CATLG'\n         LA    R15,WK_UNIT_PARMS              UNIT PARAMETERS\n         ST    R15,WK_TEXT_5                  SET PARAMETER 5 ADDRESS\n         MVC   WK_UNIT,DAIRUNIT               SET UNIT NAME\n         LA    R15,WKBLKNP                    BLOCK LENGTH PARAMETER\n         ST    R15,WK_TEXT_6                  SET PARAMETER 6 ADDRESS\n         MVC   WKBLKN,DAIRBLKN+1              SET BLOCK LENGTH\n         LA    R15,WKPRIP                     PRIMARY SPACE PARAMETER\n         ST    R15,WK_TEXT_7                  SET PARAMETER 7 ADDRESS\n         MVC   WKPRI,DAIRPRI+1                SET PRIMARY QUANTITY\n         LA    R15,WKSECP                     SECONDARY SPACE PARAMETER\n         ST    R15,WK_TEXT_8                  SET PARAMETER 8 ADDRESS\n         MVC   WKSEC,DAIRSEC+1                SET SECONDARY QUANTITY\n         LA    R15,WKRELP                     RELEASE UNUSED SPACE\n         ST    R15,WK_TEXT_9                  SET PARAMETER 9 ADDRESS\n         OI    WK_TEXT_9,X'80'                FLAG END OF LIST\nDAIR1030 DS    0H\n         BAL   R8,DAIR4000                    GO ISSUE SVC 99\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Allocate SNAP (spun SYSOUT)                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nDAIR1500 DS    0H\n         MVI   S99VERB,S99VRBAL               SET VERB\n         MVC   WK_DD,DAIR_DD                  SET DDNAME\n         MVC   WKPRTC,DAIR_CLASS              SET SYSOUT CLASS\n         LA    R1,WK_DD_PARMS                 DDNAME PARAMETERS\n         ST    R1,WK_TEXT_1                   SET PARAMETER 1 ADDRESS\n         LA    R1,WKPRTP                      SYSOUT PARAMETERS\n         ST    R1,WK_TEXT_2                   SET PARAMETER 2 ADDRESS\n         LA    R1,WKFREEP                     FREE ON CLOSE PARAMETERS\n         ST    R1,WK_TEXT_3                   SET PARAMETER 3 ADDRESS\n         OI    WK_TEXT_3,X'80'                SET 'END-OF-LIST'\n         BAL   R8,DAIR4000                    ALLOCATE SNAP\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Allocate internal reader                                        *\n*                                                                     *\n*---------------------------------------------------------------------*\nDAIR1600 DS    0H\n         MVI   S99VERB,S99VRBAL               SET VERB\n         MVC   WK_DD,DAIR_DD                  SET DDNAME\n         MVI   WKPRTC,C'O'                    SET SYSOUT CLASS\n         LA    R1,WK_DD_PARMS                 DDNAME PARAMETERS\n         ST    R1,WK_TEXT_1                   SET PARAMETER 1 ADDRESS\n         LA    R1,WKPRTP                      SYSOUT PARAMETERS\n         ST    R1,WK_TEXT_2                   SET PARAMETER 2 ADDRESS\n         LA    R1,WKFREEP                     FREE ON CLOSE PARAMETERS\n         ST    R1,WK_TEXT_3                   SET PARAMETER 3 ADDRESS\n         LA    R1,WKPGMP                      SYSOUT PROGRAM PARMS\n         ST    R1,WK_TEXT_4                   SET PARAMETER 4 ADDRESS\n         OI    WK_TEXT_4,X'80'                SET 'END-OF-LIST'\n         BAL   R8,DAIR4000                    ALLOCATE SNAP\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Release (un-allocate)                                           *\n*                                                                     *\n*---------------------------------------------------------------------*\nDAIR2000 DS    0H\n         LA    R2,WKRB                        REQUEST BLOCK'S ADDRESS\n         MVC   WK_DD,DAIR_DD                  SET DDNAME TO RELEASE\n         MVI   S99VERB,S99VRBUN               SET VERB\n         LA    R15,WK_DD_PARMS                DDNAME PARAMETER\n         ST    R15,WK_TEXT_1                  SET PARAMETER 1 ADDRESS\n         OI    WK_TEXT_1,X'80'                FLAG END OF LIST\n         BAL   R8,DAIR4000                    GO ISSUE SVC 99\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*    Delete a dataset.  This is a two step process.                   *\n*    The dataset is allocated with 'DISP=(OLD,DELETE)'                *\n*    then unallocated.                                                *\n*                                                                     *\n*---------------------------------------------------------------------*\nDAIR3000 DS    0H\n         MVC   WK_DD,DAIR_DD                  SET DD DDNAME\n         MVC   WK_DSN,DAIR_DSN                SET DATA SET NAME\n         MVI   WKDSPI,X'01'                   SET DISPOSITION 'OLD'\n         MVI   WKDSPN,X'04'                   SET DISPOSITION 'DELETE'\n         XC    WKRB(S99RBEND-S99RB),WKRB\n         MVI   S99VERB,S99VRBAL               SET VERB\n         LA    R15,WK_DD_PARMS                DDNAME PARAMETER\n         ST    R15,WK_TEXT_1                  SET PARAMETER 1 ADDRESS\n         LA    R15,WK_DSN_PARMS               DSN PARAMETER\n         ST    R15,WK_TEXT_2                  SET PARAMETER 2 ADDRESS\n         LA    R15,WKDSPIP                    INITIAL DISP PARAMETER\n         ST    R15,WK_TEXT_3                  SET PARAMETER 3 ADDRESS\n         LA    R15,WKDSPNP                    NORMAL DISP PARAMETER\n         ST    R15,WK_TEXT_4                  SET PARAMETER 4 ADDRESS\n         OI    WK_TEXT_4,X'80'                FLAG END OF LIST\n         BAL   R8,DAIR4000                    GO ISSUE SVC 99\n         LTR   R15,R15                        ALLOCATE SUCCESSFUL?\n         BNZ   EXIT0000                       NO.  PROCESS NEXT REQUEST\n         MVI   S99VERB,S99VRBUN               SET VERB\n         LA    R15,WK_DD_PARMS                DDNAME PARAMETER\n         ST    R15,WK_TEXT_1                  SET PARAMETER 1 ADDRESS\n         OI    WK_TEXT_1,X'80'                FLAG END OF LIST\n         BAL   R8,DAIR4000                    ISSUE SVC 99\n         B     EXIT0000                       PROCESS NEXT REQUEST\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Issue the SVC                                                   *\n*                                                                     *\n*---------------------------------------------------------------------*\nDAIR4000 DS    0H\n         MVI   S99RBLN,S99RBEND-S99RB\n         LA    R1,WK_TEXT_1                   FIRST TEXT UNIT POINTER\n         ST    R1,S99TXTPP                    SET TEXT ADDRESS\n         LA    R1,WKRBA                       REQUEST BLOCK ADDRESS\n         SVC   99                             ISSUE SVC\n         STCM  R15,3,DAIR_R15                 SET RETURN CODE\n         MVC   DAIR_ERROR,S99ERROR            SET ERROR CODE\n         MVC   DAIR_INFO,S99INFO              SET INFO CODE\n         BR    R8                             RETURN\n* ------------------------------------------------------------------- *\n*             EXIT                                                    *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13\n         FREEMAIN RU,A=(1),LV=WKL             FREE WORK AREA\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS\n         SR    R15,R15                        GIVE GOOD RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------ *\n*        CONSTANTS                                                   *\n* ------------------------------------------------------------------ *\nBLANKS   DC    CL8' '\nDAIRPI   DC    AL2(DALDDNAM)         DDNAME PARMS\n         DC    AL2(1)\n         DC    AL2(8)\n         DC    CL8' '                DDNAME\n         DC    AL2(DALDSNAM)         DATASET NAME PARMS\n         DC    AL2(1)\n         DC    AL2(44)\n         DC    CL44' '               DATASET NAME\n         DC    AL2(DALMEMBR)         MEMBER NAME PARMS\n         DC    AL2(1)\n         DC    AL2(8)\n         DC    CL8' '                DATASET NAME\n         DC    AL2(DALSTATS)         INITIAL DISPOSITION PARMS\n         DC    AL2(1)\n         DC    AL2(1)\n         DC    X'00'                 INITIAL DISPOSITION\n         DC    AL2(DALNDISP)         NORMAL DISPOSITION PARMS\n         DC    AL2(1)\n         DC    AL2(1)\n         DC    X'00'                 NORMAL DISPOSITION\n         DC    AL2(DALUNIT)          UNIT PARAMETERS\n         DC    AL2(1)\n         DC    AL2(8)\n         DC    CL8'        '         UNIT NAME\n         DC    AL2(DALBLKLN)         ALLOCATION AVERAGE BLOCK LENGTH\n         DC    AL2(1)\n         DC    AL2(3)\n         DC    XL3'00'               BLOCK LENGTH\n         DC    AL2(DALPRIME)         PRIMARY SPACE PARAMETERS\n         DC    AL2(1)\n         DC    AL2(3)\n         DC    XL3'0'                PRIMARY SPACE (IN TRACKS)\n         DC    AL2(DALSECND)         SECONDARY SPACE PARAMETERS\n         DC    AL2(1)\n         DC    AL2(3)\n         DC    XL3'0'                SECONDARY SPACE (IN TRACKS)\n         DC    AL2(DALRLSE)          RELEASE UNUSED SPACE\n         DC    AL2(0)\n         DC    AL2(DALSYSOU)         ALLOCATE SYSOUT\n         DC    AL2(1)\n         DC    AL2(1)\n         DC    C'O'                  SYSOUT CLASS\n         DC    AL2(DALCLOSE)         SAME AS FREE=CLOSE ON A DD STMT\n         DC    AL2(0)\n         DC    AL2(DALSPGNM)         SYSOUT PROGRAM NAME\n         DC    AL2(1)\n         DC    AL2(6)\n         DC    CL6'INTRDR)'\nDAIRPL   EQU   *-DAIRPI\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nWK            DSECT\n              LIBSAVE DSECT=NO\nWK_TEXT_1     DS    A                  TEXT UNIT 1'S ADDRESS\nWK_TEXT_2     DS    A                  TEXT UNIT 2'S ADDRESS\nWK_TEXT_3     DS    A                  TEXT UNIT 3'S ADDRESS\nWK_TEXT_4     DS    A                  TEXT UNIT 4'S ADDRESS\nWK_TEXT_5     DS    A                  TEXT UNIT 5'S ADDRESS\nWK_TEXT_6     DS    A                  TEXT UNIT 6'S ADDRESS\nWK_TEXT_7     DS    A                  TEXT UNIT 7'S ADDRESS\nWK_TEXT_8     DS    A                  TEXT UNIT 8'S ADDRESS\nWK_TEXT_9     DS    A                  TEXT UNIT 9'S ADDRESS\n\nWKRBA         DS    A                  REQUEST BLOCK'S ADDRESS\nWKRB          DS    (S99RBEND-S99RB)X  RESERVE SPACE FOR REQUEST BLOCK\n\nWK_DD_PARMS   DS    AL2,AL2,AL2        DDNAME PARMS\nWK_DD         DS    CL8                DDNAME\nWK_DSN_PARMS  DS    AL2,AL2,AL2        DATASET NAME PARMS\nWK_DSN        DS    CL44               DATASET NAME\nWK_MEM_PARMS  DS    AL2,AL2,AL2        MEMBER NAME PARMS\nWK_MEMBER     DS    CL8                MEMBER NAME\nWKDSPIP       DS    AL2,AL2,AL2        INITIAL DISPOSITION PARMS\nWKDSPI        DS    X                  INITIAL DISPOSITION\nWKDSPNP       DS    AL2,AL2,AL2        NORMAL DISPOSITION PARMS\nWKDSPN        DS    X                  NORMAL DISPOSITION\nWK_UNIT_PARMS DS    AL2,AL2,AL2        UNIT PARAMETERS\nWK_UNIT       DS    CL8                UNIT NAME\nWKBLKNP       DS    AL2,AL2,AL2        ALLOCATION UNITS (BLOCK LENGTH)\nWKBLKN        DS    XL3                BLOCK LENGTH\nWKPRIP        DS    AL2,AL2,AL2        PRIMARY SPACE PARAMETERS\nWKPRI         DS    XL3                PRIMARY SPACE (IN TRACKS)\nWKSECP        DS    AL2,AL2,AL2        SECONDARY SPACE PARAMETERS\nWKSEC         DS    XL3                SECONDARY SPACE (IN TRACKS)\nWKRELP        DS    AL2,AL2            RELEASE UNUSED SPACE (RLSE)\nWKPRTP        DS    AL2,AL2,AL2        SYSOUT PARAMETERS\nWKPRTC        DS    C                  SYSOUT CLASS\nWKFREEP       DS    AL2,AL2            FREE AT DE-ALLOCATION\nWKPGMP        DS    AL2,AL2,AL2        SYSOUT PROGRAM PARMS\n              DS    CL6                SYSOUT PROGRAM NAME\nWKPL          EQU   *-WK_DD_PARMS\nWKL           EQU   *-WK\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n              DAIRREQ  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n              COPY     REGEQU\n              IEFZB4D0\n              IEFZB4D2\n         END  SUB0004\n./ ADD NAME=USUBADMN 0100-09250-09250-0919-00363-00363-00000-SOURCE\n         TITLE 'USUBADMN CHECK IN/OUT STATUS AND USER ADMINISTRATION'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBADMN                                              *\n*                                                                     *\n*   Administer check_in/check_out status                              *\n*              check_out_user                                         *\n*              owner                                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBADMN CSECT\nUSUBADMN AMODE 31\nUSUBADMN RMODE ANY\n         USING PSA,R0\n         USING USUBADMN,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBADMN'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         L     R1,USER_DXD                    WORK AREA ADDRESS\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDADMN,R13                    DEFINE BASE\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    ADMN0010\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   DXD_RPL(RPLL),RPLI\n         XC    DXD_LIBBLOK_ADDR,DXD_LIBBLOK_ADDR\nADMN0010 DS    0H\n         ITRACE ID=ENTRY\n         L     R9,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         L     R8,USER_RPL                    RPL ADDRESS\n         USING IFGRPL,R8\n         L     R7,USER_RPLX                   RPL EXTENSION ADDRESS\n         USING ISTRPL6X,R7\n         MVI   NET_RETURN_CODE,$NET_OK\n         MVI   DXD_FLAG,0                     RESET ALL FLAGS\n         LA    R1,NET_MSG_1                   FIRST MESSAGE\n         LA    R2,5                           NUMBER OF MESSAGES\nADMN0020 DS    0H\n         MVC   0(L'NET_MSG_1,R1),COMM_BLANKS\n         LA    R1,L'NET_MSG_1(R1)\n         BCT   R2,ADMN0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   NET_FUNCTION,$NET_SEND_ADMIN\n         BE    ADMN0070\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nADMN0030 DS    0H\n         MVC   DXD_MEM_NAME,NET_MEM_NAME\n         MVC   DXD_MEM_VER,NET_MEM_VER\n         MVC   DXD_LIBRARY_NAME,NET_LIB_NAME\n         ITRACE ID=LIBRARY,                                            +\n               DATA1=DXD_LIBRARY_NAME\n         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         USING LIBBLOK,R6                     DEFINE BASE\n         BZ    ADMN0050\nADMN0040 DS    0H\n         ITRACE ID=FINDLIB,                                            +\n               DATA1=LIB_NAME\n         CLC   DXD_LIBRARY_NAME,LIB_NAME\n         BE    ADMN0060\n         ICM   R6,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   ADMN0040\nADMN0050 DS    0H\n         ITRACE ID=BADLIB\n         LA    R1,NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(EMSG01L),EMSG01\n         MVC   NET_MSG_1+(EMSG01_LIBRARY-EMSG01)(L'EMSG01_LIBRARY),DXD_+\n               LIBRARY_NAME\n         B     EXIT0000                       EXIT\nADMN0060 DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               RDATA1=R6\n         ST    R6,DXD_LIBBLOK_ADDR            SAVE LIBBLOK ADDRESS\n* ------------------------------------------------------------------- *\n*     Verify that the library is OPEN.                                *\n* ------------------------------------------------------------------- *\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BNO   ERR0010                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LA    R2,DXD_RPL                     OUR RPL ADDRESS\n         LA    R3,LIB_ACB                     ACB IN LIBBLOK\n         LA    R4,DXD_IO                      OUR I/O AREA ADDRESS\n         LA    R5,LIB_KEY                     RECORD KEY\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R5),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE)\n* ------------------------------------------------------------------- *\n*     Verify the user has authorization                               *\n* ------------------------------------------------------------------- *\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,NET_MEM_NAME\n         MVC   LIB_KEY_VERSION,NET_MEM_VER\n         MVC   LIB_KEY_SEQ,F1\n         ITRACE ID=READ1,                                              +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BAL   R4,READ0000                    READ INDEX RECORD\n         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?\n         BNE   ERR0020                        NO\n         ITRACE ID=CALLAUTH\n         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER\n         MVI   AUTH_FUNCTION,$AUTH_CHECK_ADMIN\n         MVC   AUTH_USER,USER_USER_ID\n         MVC   AUTH_LIB,DXD_LIBRARY_NAME\n         MVC   AUTH_MEMBER,DXD_MEM_NAME\n         MVC   AUTH_VERSION,DXD_MEM_VER\n         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER\n         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER\n         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS\n         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS\n         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT\n         BALR  R14,R15                        LINK TO AUTHORIZATION\n         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?\n         BNE   ERR0030                        NO\n         MVC   NET_DATA(LIB_INDEX_RECORD_LENGTH),LIB_RECORD\n         LA    R1,NETBLOKL+LIB_INDEX_RECORD_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*     Update the index record                                         *\n* ------------------------------------------------------------------- *\nADMN0070 DS    0H\n         L     R6,DXD_LIBBLOK_ADDR\n         BAL   R4,READ1000\n         MVC   LIB_RECORD(LIB_INDEX_RECORD_LENGTH),NET_DATA\n         BAL   R4,PUT0000\n         MVI   NET_RETURN_CODE,$NET_OK\n         ITRACE ID=UPDATED\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         ITRACE ID=READ,                                               +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         A     R1,F1                          PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         GET   RPL=DXD_RPL                    READ NEXT RECORD\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         ITRACE ID=DATAREAD,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD1000 DS    0H\n         ITRACE ID=READUPDT,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         LA    R2,DXD_RPL\n         MODCB RPL=(R2),                                               +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAG,$NEED_CLOSET\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPUT0000  DS    0H\n         ITRACE ID=PUT,                                                +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_WRITES                  NUMBER OF WRITES\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_WRITES                  SAVE TOTAL\n         LA    R2,DXD_RPL\n         MODCB RPL=(R2),                                               +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         PUT   RPL=DXD_RPL\n         ST    R15,DXD_VSAM_RC\n         ITRACE ID=PUTRC,                                              +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAG,$NEED_CLOSET\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLOSET00 DS    0H\n         ITRACE ID=CLOSET,                                             +\n               DATA1=DXD_LIBRARY_NAME\n         ITRACE ID=ENDREQ\n         ENDREQ RPL=DXD_RPL\n         ITRACE ID=ENDREQRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET\n         MVC   LIB_FUNCTION_LIB_NAME,DXD_LIBRARY_NAME\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK\nCLOSET10 DS    0H\n         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN\n         BC    4,CLOSET10                     TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB\n         NI    DXD_FLAG,255-$NEED_CLOSET\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=CLOSED\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(EMSG02L),EMSG02\n         B     EXIT0000                       EXIT\nERR0020  DS    0H\n         ITRACE ID=NOTFOUND\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(EMSG03L),EMSG03\n         MVC   NET_MSG_1+(EMSG03MEM-EMSG03)(L'EMSG03MEM),DXD_MEM_NAME\n         SR    R1,R1\n         ICM   R1,3,DXD_MEM_VER\n         CVD   R1,DXD_DWORD\n         ED    NET_MSG_1+(EMSG03VER-EMSG03)(L'EMSG03VER),DXD_DWORD+5\n         B     EXIT0000                       EXIT\nERR0030  DS    0H\n         ITRACE ID=NOTAUTH\n         MVC   NET_MSG_1,AUTH_MESSAGE_1\n         MVC   NET_MSG_2,AUTH_MESSAGE_2\n         MVC   NET_MSG_3,AUTH_MESSAGE_3\n         MVC   NET_MSG_4,AUTH_MESSAGE_4\n         MVC   NET_MSG_5,AUTH_MESSAGE_5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000  DS   0H\n         ITRACE ID=EXIT                       EXITING\n         TM    DXD_FLAG,$NEED_CLOSET\n         BNO   EXIT0010\n         BAL   R4,CLOSET00\n         NI    DXD_FLAG,255-$NEED_CLOSET\nEXIT0010 DS    0H\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDSTART       DC    Q(DXDADMN)\nVLIBAUTH       DC    V(LIBAUTH)\nF1             DC    F'1'\n\nRPLI           RPL   AM=VTAM\nRPLL           EQU   *-RPLI\n\nAUTHID         DC    CL8'AUTHBLOK'\nLIBFUNC_ID     DC    CL8'LIBFUNC '\n\nEMSG01         DS    0C\n               DC    C'USUBADMN01E Library '\nEMSG01_LIBRARY DC    CL8' '\n               DC    C' not found'\nEMSG01L        EQU   *-EMSG01\nEMSG02         DS    0C\n               DC    C'USUBADMN02E Library is closed'\nEMSG02L        EQU   *-EMSG02\nEMSG03         DS    0C\n               DC    C'USUBADMN03E Member '\nEMSG03MEM      DC    Cl8' '\n               DC    C', version'\nEMSG03VER      DC    X'402020202120'\n               DC    C' not found'\nEMSG03L        EQU   *-EMSG03\n\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDADMN           DSECT\n                  LIBSAVE DSECT=NO\nDXD_DWORD         DS   D\nDXD_RPL           DS   0F,(RPLL)X\nDXD_LIBBLOK_ADDR  DS   A\nDXD_FLAG          DS   X\n$NEED_CLOSET      EQU  X'80'\nDXD_LIBRARY_NAME  DS   CL8\nDXD_MEM_NAME      DS   CL8\nDXD_MEM_VER       DS   XL2\nDXD_VSAM_RC       DS   F\n                  AUTHBLOK DSECT=NO\n                  LIBFUNC  DSECT=NO\nDXD_IO            DS       0F,($MAX_SOURCE_SIZE*2)X\n                  ORG      DXD_IO\n                  LIBRECD  DSECT=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         NETBLOK  DSECT=YES\nNET_LIB_NAME      DS   CL8\nNET_MEM_NAME      DS   CL8\nNET_MEM_VER       DS   XL2\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         COPY REGEQU\n$MAX_SOURCE_SIZE EQU 8000\n         END  USUBADMN\n./ ADD NAME=USUBCKIN 0100-09250-09250-0919-00944-00944-00000-SOURCE\n         TITLE 'USUBCKIN  Check-in'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBCKIN                                              *\n*                                                                     *\n*  This module has two functions                                      *\n*    - check in existing member that is checked-out                   *\n*    - add new members                                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBCKIN CSECT\nUSUBCKIN AMODE 31\nUSUBCKIN RMODE ANY\n         USING PSA,R0\n         USING USUBCKIN,R12,R9                DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBCKIN'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         LA    R9,2048(R12)\n         LA    R9,2048(R9)\n         L     R1,USER_DXD                    WORK AREA BASE\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDUCKIN,R13                   DEFINE BASE\n         USING IFGRPL,DXD_RPL\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    INIT0010\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK\n         MVI   PRTCC,C' '                     INITIALIZE PRINT\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVC   DXD_RPL(RPLL),RPLI             INITIALIZE RPL\nINIT0010 DS    0H\n         L     R7,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R7                     DEFINE BASE\n         ITRACE ID=ENTRY,                                              +\n               DATA1=NET_FUNCTION,                                     +\n               DATA2=NET_DATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R8,DXD_LIB                     LIB BLOCK'S ADDRESS\n         CLI   NET_FUNCTION,$NET_CHECK_IN_AUTH\n         BE    INIT0020                       YES\n         CLI   NET_FUNCTION,$NET_CHECK_NEW_AUTH\n         BE    INIT0020                       YES\n         CLI   NET_FUNCTION,$NET_GET_DESC\n         BE    CKIN0010                       YES\n         CLI   NET_FUNCTION,$NET_SEND_DESC\n         BE    CKIN0100                       YES\n         CLI   NET_FUNCTION,$NET_CHECK_IN_SOURCE\n         BE    CKIN0200                       YES\n         CLI   NET_FUNCTION,$NET_SEND_RECORDS\n         BE    CKIN0400                       YES\n         ABEND 1,DUMP,,USER\nINIT0020 DS    0H\n         NI    DXD_FLAGS,255-$SOURCE_NEW      RESET INDICATORS\n         NI    DXD_FLAGS,255-$HISTORY\n         NI    DXD_FLAGS,255-$SOURCE_DELETED\n         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK\n         BZ    ERR0100                        NO LIBRARIES\n         USING LIBBLOK,R8                     DEFINE BASE\nINIT0030 DS    0H\n         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?\n         BE    INIT0040                       YES\n         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   INIT0030\n         B     ERR0110                        LIBRARY NOT FOUND\nINIT0040 DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               RDATA1=R8\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BNO   ERR0120                        NO\n         ST    R8,DXD_LIB                     SAVE ADDRESS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,NET_MEM_NAME\n         MVC   LIB_KEY_VERSION,NET_MEM_VER\n         MVC   LIB_KEY_SEQ,F1\n         ITRACE ID=READ1,                                              +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BAL   R6,READ1000                    READ INDEX RECORD\n         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?\n         BE    INIT0050                       YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        The member does not already exist.                           *\n*                                                                     *\n*        Make sure the VERSION is 1.                                  *\n*        There are two ways to create new members.  One is to create  *\n*        a new version of an existing member.  The other is to create *\n*        version 1 of a totally new member/version.  CHECK_IN can     *\n*        be used only to update an existing member/version or to      *\n*        create a new member/version.                                 *\n*                                                                     *\n*        Verify the user has authorization to create a new member     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ISITONE\n         CLC   NET_MEM_VER,H1                 IS VERSION 1?\n         BNE   ERR0140\n         ITRACE ID=AUTHNEW\n         OI    DXD_FLAGS,$SOURCE_NEW          INDICATE NEW MEMBER\n         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER\n         MVC   AUTH_USER,USER_USER_ID         COPY USER ID\n         MVC   AUTH_LIB,NET_LIB_NAME          COPY LIBRARY NAME\n         MVC   AUTH_MEMBER,NET_MEM_NAME\n         MVC   AUTH_VERSION,NET_MEM_VER\n         MVI   AUTH_FUNCTION,$AUTH_CHECK_NEW\n         MVI   AUTH_MEMBER_STATUS,$AUTH_STATUS_NONE\n         B     INIT0060\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        The member does exist.                                       *\n*                                                                     *\n*        Verify the user has authorization to CHECK-IN this member.   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0050 DS    0H\n         ITRACE ID=AUTHIN\n         CLI   NET_FUNCTION,$NET_CHECK_NEW_AUTH\n         BE    ERR0150\n         MVC   AUTH_EYE,AUTHID                EYE CATCHER\n         MVC   AUTH_USER,USER_USER_ID         USER ID\n         MVC   AUTH_LIB,NET_LIB_NAME          LIBRARY NAME\n         MVC   AUTH_MEMBER,NET_MEM_NAME       MEMBER NAME\n         MVC   AUTH_VERSION,NET_MEM_VER       VERSION\n         MVI   AUTH_FUNCTION,$AUTH_CHECK_IN\n         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS\n         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER\n         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER\nINIT0060 DS    0H\n         ITRACE ID=CALLAUTH\n         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS\n         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT\n         BALR  R14,R15                        LINK TO AUTHORIZATION\n         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?\n         BNE   ERR0130                        NO\n         ITRACE ID=AUTHOK\n         ICM   R1,15,LIB_CHECK_IN             NUMBER OF CHECK-INS\n         LA    R1,1(R1)                       PLUS 1\n         STCM  R1,15,LIB_CHECK_IN             SAVE TOTAL\n         TM    DXD_FLAGS,$SOURCE_NEW          NEW MEMBER?\n         BNO   INIT0080                       NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Checking in a new member.                                    *\n*                                                                     *\n*        Create the base index record.                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0070 DS    0H\n         ITRACE ID=BLDNDX,                                             +\n               DATA1=NET_MEM_NAME\n         L     R1,LIB_NEW                     NUMBER OF NEW FILES\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_NEW                     SAVE TOTAL\n         MVC   LIB_INDEX_OWNER,USER_USER_ID\n         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN\n         TIME  DEC\n         STCM  R0,15,LIB_INDEX_CREATE_TIME\n         STCM  R1,15,LIB_INDEX_CREATE_DATE\n         XC    LIB_INDEX_CHECK_OUT_TIME,LIB_INDEX_CHECK_OUT_TIME\n         ZAP   LIB_INDEX_CHECK_OUT_DATE,P0\n         MVC   LIB_INDEX_CHECK_OUT_USER,BLANKS\n         XC    LIB_INDEX_CHECK_OUTS,LIB_INDEX_CHECK_OUTS\n         XC    LIB_INDEX_CHECK_IN_TIME,LIB_INDEX_CHECK_IN_TIME\n         ZAP   LIB_INDEX_CHECK_IN_DATE,P0\n         MVC   LIB_INDEX_CHECK_IN_USER,BLANKS\n         XC    LIB_INDEX_RECORDS,LIB_INDEX_RECORDS\n         ITRACE ID=WRITENDX\n         LA    R1,LIB_INDEX_RECORD_LENGTH\n         ST    R1,DXD_LEN\n         BAL   R6,PUT0000\n         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?\n         BNE   ERR0070                        NO\n         B     INIT0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0080 DS    0H\n         ICM   R1,15,LIB_UPDATE               NUMBER OF UPDATED MEMBERS\n         LA    R1,1(R1)                       PLUS 1\n         STCM  R1,15,LIB_UPDATE               SAVE TOTAL\n         OC    COMM_HSUB_TCB,COMM_HSUB_TCB    HISTORY SUBTASK ACTIVE?\n         BZ    INIT0100                       NO\n         ITRACE ID=Q2HIST                     SAVING SOURCE TO HISTORY\n         XC    HISTREQ(HISTREQL),HISTREQ\n         MVC   HISTEYE,HISTID                 SET BLOCK EYE CATCHER\n         MVC   HISTLIB,NET_LIB_NAME           SET LIBRARY NAME\n         MVC   HISTNAME,NET_MEM_NAME          SET MEMBER NAME\n         MVC   HISTVER,NET_MEM_VER            SET VERSION NAME\n         LA    R1,HISTREQ                     OUR REQUEST'S ADDRESS\nINIT0090 DS    0H\n         L     R2,COMM_HSUB_REQ               FIRST REQUEST ON CHAIN\n         CS    R2,R1,COMM_HSUB_REQ            ADD OURS TO CHAIN\n         BC    4,INIT0090                     TRY AGAIN\n         POST  COMM_HSUB_WORK_ECB             WAKE UP HISTORY SUB TASK\n         ITRACE ID=HISTWAIT\n         WAIT  ECB=HISTECB                    WAIT FOR HISTORY SUB TASK\n         OI    DXD_FLAGS,$HISTORY             SOURCE HAS BEEN SAVED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0100 DS    0H\n         ITRACE ID=AUTHDONE\n         MVC   DXD_LIB_NAME,NET_LIB_NAME\n         MVC   DXD_MEM_NAME,NET_MEM_NAME\n         MVC   DXD_VERSION,NET_MEM_VER\n         B     CKIN0500\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       Return the description (comments) about this member           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKIN0010 DS    0H\n         ITRACE ID=GETDESC\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_SEQ,F2                 FIRST DESCRIPTION RECORD\n         LA    R2,NET_MEM_DOC                 OUTPUT I/O AREA ADDRESS\n         SR    R3,R3                          CLEAR REGISTER\nCKIN0020 DS    0H\n         BAL   R6,READ0000\n         CLI   DXD_VSAM_RC+3,X'00'            SUCCESSFUL?\n         BNE   CKIN0030                       NO\n         MVC   0(L'LIB_INDEX_DESC,R2),LIB_INDEX_DESC\n         LA    R2,L'LIB_INDEX_DESC(R2)\n         LA    R3,L'LIB_INDEX_DESC(R3)\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER\n         B     CKIN0020\nCKIN0030 DS    0H\n         ITRACE ID=DESCEOF,                                            +\n               RDATA1=R3,                                              +\n               DATA2=LIB_KEY_SEQ\n         LA    R3,NET_CHECK_IN_LENGTH(R3)     PLUS PREFIX LENGTH\n         STCM  R3,3,NET_LENGTH                SET LENGTH TO SEND\n         XC    LIB_KEY_SEQ,LIB_KEY_SEQ\n         B     EXIT0000\n* ------------------------------------------------------------------- *\nCKIN0100 DS    0H\n         ITRACE ID=NEWDESC,                                            +\n               DATA1=NET_LENGTH\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_SEQ,F2                 SEQ OF 1ST DESC RECD\n         ITRACE ID=READDESC,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BAL   R6,READ0000\n         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?\n         BNE   CKIN0120                       NO\nCKIN0110 DS    0H\n         ITRACE ID=DELDESC\n         BAL   R6,READ1000                    READ INDEX RECORD\n         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?\n         BNE   CKIN0120                       NO\n         BAL   R6,ERASE000                    ERASE (DELETE) THE RECORD\n         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?\n         BNE   ERR0010                        NO\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER\n         B     CKIN0110\nCKIN0120 DS    0H\n         BAL   R6,CLOSET00                    ISSUE A CLOSE TYPE=T\n         MVC   LIB_KEY_SEQ,F2                 RESET SEQUENCE NUMBER\n         LA    R4,NET_MEM_DOC                 FIRST LINE OF DESCRIPTION\n         SR    R5,R5                          CLEAR REGISTER\n         ICM   R5,3,NET_LENGTH                LENGTH OF DATA RECEIVED\n         SH    R5,=Y(NET_CHECK_IN_LENGTH)     LENGTH OF HEADER\n         BZ    CKIN0500\nCKIN0130 DS    0H\n         MVC   LIB_INDEX_DESC,0(R4)           COPY DESCRIPTION\n         LA    R1,LIB_INDEX_RECORD_LENGTH\n         ST    R1,DXD_LEN\n         ITRACE ID=PUTDESC,                                            +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BAL   R6,PUT0000                     WRITE DESCRIPTION RECORD\n         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?\n         BNE   ERR0020                        NO\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              SAVE SEQUENCE NUMBER\n         LA    R4,L'LIB_INDEX_DESC(R4)\n         SH    R5,=Y(L'LIB_INDEX_DESC)\n         BH    CKIN0130\n         BAL   R6,CLOSET00                    ISSUE A CLOSE TYPE=T\n         B     CKIN0500\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKIN0200 DS    0H\n         ITRACE ID=SOURCE\n         TM    DXD_FLAGS,$SOURCE_DELETED\n         BO    CKIN0230                       ALREADY DELETED\n         OI    DXD_FLAGS,$SOURCE_DELETED      SET 'DELETED' FLAG\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         MVC   LIB_KEY_SEQ,F1                 SEQ OF 1ST DATA RECORD\nCKIN0210 DS    0H\n         ITRACE ID=DELSRC,                                             +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BAL   R6,READ1000                    READ DATA RECORD\n         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?\n         BNE   CKIN0220                       NO\n         ITRACE ID=DELSRC\n         BAL   R6,ERASE000                    ERASE (DELETE) THE RECORD\n         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?\n         BNE   ERR0030                        NO\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER\n         B     CKIN0210\nCKIN0220 DS    0H\n         BAL   R6,CLOSET00                    ISSUE A CLOSE TYPE=T\n         MVC   LIB_KEY_SEQ,F1                 RESET SEQUENCE NUMBER\nCKIN0230 DS    0H\n         SR    R5,R5                          CLEAR REGISTER\n         ICM   R5,3,NET_LENGTH                LENGTH OF DATA RECEIVED\n         SH    R5,=Y(NETBLOKL)                MINUS HEADER LENGTH\n         LA    R0,LIB_DATA                    USER DATA IN FILE I/O\n         LR    R1,R5                          COPY LENGTH\n         LA    R14,NET_DATA                   USER DATA IN VTAM I/O\n         LR    R15,R5                         COPY LENGTH\n         MVCL  R0,R14                         COPY DATA\n         LA    R5,LIB_DATA-LIB_RECORD(R5)\n         ST    R5,DXD_LEN                     SET LENGTH\n         ITRACE ID=PUTSRC,                                             +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BAL   R6,PUT0000\n         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?\n         BNE   ERR0040                        NO\n         CLI   NET_RETURN_CODE,$NET_EOF\n         BE    CKIN0300                       YES\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              SAVE SEQUENCE NUMBER\n         B     CKIN0500\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKIN0300 DS    0H\n         ITRACE ID=EOF\n         BAL   R6,CLOSET00\n         MVI   NET_RETURN_CODE,$NET_OK\n         MVC   NET_MSG_1,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_2,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_3,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_4,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_5,COMM_BLANKS          CLEAR MESSAGE\n         LA    R1,NETBLOKL                    ONLY NEED HEADER\n         STCM  R1,3,NET_LENGTH                SET LENGTH TO SEND\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKIN0400 DS    0H\n         ITRACE ID=UPDTRECS,                                           +\n               DATA1=NET_SOURCE_RECORDS\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_SEQ,F1                 SEQ OF INDEX RECORD\n         BAL   R6,READ1000                    READ INDEX RECORD\n         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?\n         BNE   ERR0050                        NO\n         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN\n         MVC   LIB_INDEX_CHECK_IN_USER,USER_USER_ID\n         TIME  DEC\n         STCM  R0,15,LIB_INDEX_CHECK_IN_TIME\n         STCM  R1,15,LIB_INDEX_CHECK_IN_DATE\n         MVC   LIB_INDEX_RECORDS,NET_SOURCE_RECORDS\n         ITRACE ID=UPDTPUT\n         MODCB RPL=DXD_RPL,RECLEN=LIB_INDEX_RECORD_LENGTH\n         PUT   RPL=DXD_RPL\n         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?\n         BNE   ERR0060                        NO\n         BAL   R6,CLOSET00\n         L     R1,AMSG08\n         MVC   PRTMSGID(MSG08L),0(R1)\n         MVC   PRTMSGID+(MSG08_USER-MSG08)(L'MSG08_USER),USER_USER_ID\n         MVC   PRTMSGID+(MSG08_LIB-MSG08)(L'MSG08_LIB),DXD_LIB_NAME\n         MVC   PRTMSGID+(MSG08_MEM-MSG08)(L'MSG08_MEM),DXD_MEM_NAME\n         BAL   R6,PRT0000                     PRINT\n         B     CKIN0700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKIN0500 DS    0H\n         ITRACE ID=OK\n         MVI   NET_RETURN_CODE,$NET_OK\n         LA    R1,NETBLOKL                    ONLY NEED HEADER\n         STCM  R1,3,NET_LENGTH                SET LENGTH TO SEND\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKIN0600 DS    0H\n         ITRACE ID=ABORT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKIN0700 DS    0H\n         ITRACE ID=OK\n         MVI   NET_RETURN_CODE,$NET_OK\n         LA    R1,NETBLOKL                    ONLY NEED HEADER\n         STCM  R1,3,NET_LENGTH                SET LENGTH TO SEND\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=READ,                                               +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         GET   RPL=DXD_RPL                    READ\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD1000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=READUPDT,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPUT0000  DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=PUT,                                                +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_WRITES                  NUMBER OF WRITES\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_WRITES                  SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         L     R5,DXD_LEN\n         MVC   0(RPLL,R2),RPLI\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               RECLEN=(R5),                                            +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         PUT   RPL=DXD_RPL\n         ST    R15,DXD_VSAM_RC\n         ITRACE ID=PUTRC,                                              +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERASE000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=ERASE,                                              +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         ICM   R1,15,LIB_ERASES\n         LA    R1,1(,R1)\n         STCM  R1,15,LIB_ERASES\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         ERASE RPL=DXD_RPL                    ERASE (DELETE THE RECORD)\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=ERASERC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK-IFGRPL(R2)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLOSET00 DS    0H\n         TM    DXD_FLAGS,$NEED_CLOSET\n         BNOR  R6\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=CLOSET,                                             +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         ITRACE ID=ENDREQ\n         ENDREQ RPL=DXD_RPL\n         ITRACE ID=ENDREQRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET\n         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK\nCLOSET10 DS    0H\n         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN\n         BC    4,CLOSET10                     TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT FOR CLOSET\n         NI    DXD_FLAGS,255-$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* -------------------------------------------------------------------\n*        PRINTING\n* -------------------------------------------------------------------\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE\n         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE\n         ST    R14,PRTNEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_REQ\n         BC    4,PRT0010\n         BR    R6                             RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS\n         L     R1,AMSG05\n         MVC   NET_DATA(MSG05L),0(R1)\n         MVC   NET_DATA+(MSG05TYP-MSG05)(L'MSG05TYP),DESCRIPTION\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         UNPK  NET_DATA+(MSG05R15-MSG05)(3),DXD_VSAM_RC+3(2)\n         MVZ   NET_DATA+(MSG05R15-MSG05)(2),HEXZERO\n         TR    NET_DATA+(MSG05R15-MSG05)(2),HEXCHAR\n         MVI   NET_DATA+(MSG05R15-MSG05)+2,C' '\n         UNPK  NET_DATA+(MSG05RSN-MSG05)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)\n         MVZ   NET_DATA+(MSG05RSN-MSG05)(4),HEXZERO\n         TR    NET_DATA+(MSG05RSN-MSG05)(4),HEXCHAR\n         MVI   NET_DATA+(MSG05RSN-MSG05)+4,C' '\n         LA    R1,MSG01L+NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000\nERR0020  DS    0H\n         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS\n         L     R1,AMSG06\n         MVC   NET_DATA(MSG06L),0(R1)\n         MVC   NET_DATA+(MSG06TYP-MSG06)(L'MSG06TYP),DESCRIPTION\n         UNPK  NET_DATA+(MSG06R15-MSG06)(3),DXD_VSAM_RC+3(2)\n         MVZ   NET_DATA+(MSG06R15-MSG06)(2),HEXZERO\n         TR    NET_DATA+(MSG06R15-MSG06)(2),HEXCHAR\n         MVI   NET_DATA+(MSG06R15-MSG06)+2,C' '\n         UNPK  NET_DATA+(MSG06RSN-MSG06)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)\n         MVZ   NET_DATA+(MSG06RSN-MSG06)(4),HEXZERO\n         TR    NET_DATA+(MSG06RSN-MSG06)(4),HEXCHAR\n         MVI   NET_DATA+(MSG06RSN-MSG06)+4,C' '\n         LA    R1,MSG06L+NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000\nERR0030  DS    0H\n         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS\n         L     R1,AMSG05\n         MVC   NET_DATA(MSG05L),0(R1)\n         MVC   NET_DATA+(MSG05TYP-MSG05)(L'MSG05TYP),SOURCE\n         UNPK  NET_DATA+(MSG05R15-MSG05)(3),DXD_VSAM_RC+3(2)\n         MVZ   NET_DATA+(MSG05R15-MSG05)(2),HEXZERO\n         TR    NET_DATA+(MSG05R15-MSG05)(2),HEXCHAR\n         MVI   NET_DATA+(MSG05R15-MSG05)+2,C' '\n         UNPK  NET_DATA+(MSG05RSN-MSG05)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)\n         MVZ   NET_DATA+(MSG05RSN-MSG05)(4),HEXZERO\n         TR    NET_DATA+(MSG05RSN-MSG05)(4),HEXCHAR\n         MVI   NET_DATA+(MSG05RSN-MSG05)+4,C' '\n         LA    R1,MSG05L+NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000\nERR0040  DS    0H\n         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS\n         L     R1,AMSG06\n         MVC   NET_DATA(MSG06L),0(R1)\n         MVC   NET_DATA+(MSG06TYP-MSG06)(L'MSG06TYP),SOURCE\n         UNPK  NET_DATA+(MSG06R15-MSG06)(3),DXD_VSAM_RC+3(2)\n         MVZ   NET_DATA+(MSG06R15-MSG06)(2),HEXZERO\n         TR    NET_DATA+(MSG06R15-MSG06)(2),HEXCHAR\n         MVI   NET_DATA+(MSG06R15-MSG06)+2,C' '\n         UNPK  NET_DATA+(MSG06RSN-MSG06)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)\n         MVZ   NET_DATA+(MSG06RSN-MSG06)(4),HEXZERO\n         TR    NET_DATA+(MSG06RSN-MSG06)(4),HEXCHAR\n         MVI   NET_DATA+(MSG06RSN-MSG06)+4,C' '\n         LA    R1,MSG06L+NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000\nERR0050  DS    0H\n         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS\n         L     R1,AMSG07\n         MVC   NET_DATA(MSG07L),0(R1)\n         UNPK  NET_DATA+(MSG07R15-MSG07)(3),DXD_VSAM_RC+3(2)\n         MVZ   NET_DATA+(MSG07R15-MSG07)(2),HEXZERO\n         TR    NET_DATA+(MSG07R15-MSG07)(2),HEXCHAR\n         MVI   NET_DATA+(MSG07R15-MSG07)+2,C' '\n         UNPK  NET_DATA+(MSG07RSN-MSG07)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)\n         MVZ   NET_DATA+(MSG07RSN-MSG07)(4),HEXZERO\n         TR    NET_DATA+(MSG07RSN-MSG07)(4),HEXCHAR\n         MVI   NET_DATA+(MSG07RSN-MSG07)+4,C' '\n         LA    R1,MSG07L+NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000\nERR0060  DS    0H\n         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS\n         L     R1,AMSG06\n         MVC   NET_DATA(MSG06L),0(R1)\n         MVC   NET_DATA+(MSG06TYP-MSG06)(L'MSG06TYP),EOF\n         UNPK  NET_DATA+(MSG06R15-MSG06)(3),DXD_VSAM_RC+3(2)\n         MVZ   NET_DATA+(MSG06R15-MSG06)(2),HEXZERO\n         TR    NET_DATA+(MSG06R15-MSG06)(2),HEXCHAR\n         MVI   NET_DATA+(MSG06R15-MSG06)+2,C' '\n         UNPK  NET_DATA+(MSG06RSN-MSG06)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)\n         MVZ   NET_DATA+(MSG06RSN-MSG06)(4),HEXZERO\n         TR    NET_DATA+(MSG06RSN-MSG06)(4),HEXCHAR\n         MVI   NET_DATA+(MSG06RSN-MSG06)+4,C' '\n         LA    R1,MSG06L+NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000\nERR0070  DS    0H\n         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS\n         L     R1,AMSG06\n         MVC   NET_DATA(MSG06L),0(R1)\n         MVC   NET_DATA+(MSG06TYP-MSG06)(L'MSG06TYP),NEWINDEX\n         UNPK  NET_DATA+(MSG06R15-MSG06)(3),DXD_VSAM_RC+3(2)\n         MVZ   NET_DATA+(MSG06R15-MSG06)(2),HEXZERO\n         TR    NET_DATA+(MSG06R15-MSG06)(2),HEXCHAR\n         MVI   NET_DATA+(MSG06R15-MSG06)+2,C' '\n         UNPK  NET_DATA+(MSG06RSN-MSG06)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)\n         MVZ   NET_DATA+(MSG06RSN-MSG06)(4),HEXZERO\n         TR    NET_DATA+(MSG06RSN-MSG06)(4),HEXCHAR\n         MVI   NET_DATA+(MSG06RSN-MSG06)+4,C' '\n         LA    R1,MSG06L+NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000\nERR0100  DS    0H\n         BAL   R6,ERR1000\n         L     R1,AMSG01\n         MVC   NET_DATA(MSG01L),0(R1)\n         LA    R1,NETBLOKL+80\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000                       EXIT\nERR0110  DS    0H\n         BAL   R6,ERR1000\n         L     R1,AMSG02\n         MVC   NET_DATA(MSG02L),0(R1)\n         LA    R1,NETBLOKL+80\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000                       EXIT\nERR0120  DS    0H\n         BAL   R6,ERR1000\n         L     R1,AMSG03\n         MVC   NET_DATA(MSG03L),0(R1)\n         LA    R1,NETBLOKL+80\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000                       EXIT\nERR0130  DS    0H\n         BAL   R6,ERR1000\n         MVC   NET_MSG_1,AUTH_MESSAGE_1\n         MVC   NET_MSG_2,AUTH_MESSAGE_2\n         MVC   NET_MSG_3,AUTH_MESSAGE_3\n         MVC   NET_MSG_4,AUTH_MESSAGE_4\n         MVC   NET_MSG_5,AUTH_MESSAGE_5\n         LA    R1,NETBLOKL+400\n         STCM  R1,3,NET_LENGTH\n         L     R1,AEMSG04\n         MVC   PRTMSGID(EMSG04L),0(R1)\n        MVC   PRTMSGID+(EMSG04_USER-EMSG04)(L'EMSG04_USER),USER_USER_ID\n         MVC   PRTMSGID+(EMSG04_LIB-EMSG04)(L'EMSG04_LIB),NET_LIB_NAME\n         MVC   PRTMSGID+(EMSG04_MEM-EMSG04)(L'EMSG04_MEM),NET_MEM_NAME\n         BAL   R6,PRT0000                     PRINT\n         B     EXIT0000                       EXIT\nERR0140  DS    0H\n         BAL   R6,ERR1000\n         L     R1,AEMSG09\n         MVC   NET_DATA(EMSG09L),0(R1)\n         LA    R1,NETBLOKL+80\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000                       EXIT\nERR0150  DS    0H\n         BAL   R6,ERR1000\n         L     R1,AEMSG10\n         MVC   NET_MSG_1(EMSG10L),0(R1)\n         LA    R1,NETBLOKL+80\n         STCM  R1,3,NET_LENGTH\n         B     EXIT0000                       EXIT\nERR1000  DS    0H\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         LA    R1,NET_MSG_1\n         LA    R15,5\nERR1010  DS    0H\n         MVC   0(L'NET_MSG_1,R1),BLANKS       CLEAR MESSAGE\n         LA    R1,L'NET_MSG_1(R1)\n         BCT   R15,ERR1010\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   Note to dummy (the auther.. me that is)                           *\n*                                                                     *\n*   Do not do a CLOSET here.  The CLOSET is done on EOF.              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT                       EXITING PRINT MODULE\n         BAL   R6,CLOSET00\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\nVLIBAUTH          DC       V(LIBAUTH)\nDXDSTART          DC       Q(DXDUCKIN)\nRPLI              RPL      AM=VTAM\nRPLL              EQU      *-RPLI\nAMSG01            DC       A(MSG01)\nAMSG02            DC       A(MSG02)\nAMSG03            DC       A(MSG03)\nAMSG05            DC       A(MSG05)\nAMSG06            DC       A(MSG06)\nAMSG07            DC       A(MSG07)\nAEMSG04           DC       A(EMSG04)\nAMSG08            DC       A(MSG08)\nAEMSG09           DC       A(EMSG09)\nAEMSG10           DC       A(EMSG10)\nF1                DC       F'1'\nF2                DC       F'2'\nH1                DC       H'1'\nP0                DC       P'0'\nAUTHID            DC       CL8'AUTHBLOK'\nHISTID            DC       CL8'HISTREQ'\nLIBFUNC_ID        DC       CL8'LIBFUNC'\nPRTID             DC       CL8'PRTBLOK'\nBLANKS            DC       CL80' '\nDESCRIPTION       DC       CL11'DESCRIPTION'\nNEWINDEX          DC       CL11'NEW INDEX'\nSOURCE            DC       CL11'SOURCE'\nEOF               DC       CL11'EOF'\nHEXZERO           DC       8X'00'\nHEXCHAR           DC       C'0123456789ABCDEF'\n\n                  LTORG\nMSG01             DS       0C\n                  DC       CL11'USUBCKIN01E'\n                  DC       C' No libraries found'\nMSG01L            EQU      *-MSG01\nMSG02             DS       0C\n                  DC       CL11'USUBCKIN02E'\n                  DC       C' Specified library not found'\nMSG02L            EQU      *-MSG02\nMSG03             DS       0C\n                  DC       CL11'USUBCKIN03E'\n                  DC       C' Specified library is closed'\nMSG03L            EQU      *-MSG03\n\nEMSG04            DS       0C\n                  DC       CL11'USUBCKIN04E'\n                  DC       C' Authorization failure.  User:'\nEMSG04_USER       DC       Cl8' '\n                  DC       C'   Library:'\nEMSG04_LIB        DC       Cl8' '\n                  DC       C'   Member:'\nEMSG04_MEM        DC       CL8' '\nEMSG04L           EQU      *-EMSG04\n\nMSG05             DS       0C\n                  DC       CL11'USUBCKIN05E'\n                  DC       C' '\nMSG05TYP          DC       Cl12' '\n                  DC       C' ERASE failed, R15='\nMSG05R15          DC       Cl2' '\n                  DC       C'   reason code '\nMSG05RSN          DC       Cl4' '\n                  DC       C' '\nMSG05L            EQU      *-MSG05\nMSG06             DS       0C\n                  DC       CL11'USUBCKIN06E'\n                  DC       C' '\nMSG06TYP          DC       cl11' '\n                  DC       C' PUT failed, R15='\nMSG06R15          DC       Cl2' '\n                  DC       C'   reason code '\nMSG06RSN          DC       Cl4' '\n                  DC       C' '\nMSG06L            EQU      *-MSG06\nMSG07             DS       0C\n                  DC       CL11'USUBCKIN07E'\n                  DC       C' '\n                  DC       C'EOF GET failed, R15='\nMSG07R15          DC       Cl2' '\n                  DC       C'   reason code '\nMSG07RSN          DC       Cl4' '\n                  DC       C' '\nMSG07L            EQU      *-MSG07\n\nMSG08             DS       0C\n                  DC       CL11'USUBCKIN08I'\n                  DC       C' CHECK IN.  User:'\nMSG08_USER        DC       CL8' '\n                  DC       C'   Library:'\nMSG08_LIB         DC       CL8' '\n                  DC       C'   MEMBER:'\nMSG08_MEM         DC       CL8' '\nMSG08L            EQU      *-MSG08\nEMSG09            DS       0C\n                  DC       CL11'USUBCKIN09E'\n                  DC       C' Version must be 1 for new members'\nEMSG09L           EQU      *-EMSG09\nEMSG10            DS       0C\n                  DC       CL11'USUBCKIN10E'\n                  DC       C' Member already exists'\nEMSG10L           EQU      *-EMSG10\n\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUCKIN          DSECT\n                  LIBSAVE  DSECT=NO\nDXD_IO_SAVE       DS       16F\nDXD_VSAM_RC       DS       F\nDXD_LEN           DS       F\nDXD_LIB           DS       F\nDXD_RPL           DS       0F,(RPLL)X\nDXD_LIB_NAME      DS       CL8\nDXD_MEM_NAME      DS       CL8\nDXD_VERSION       DS       XL2\nDXD_FLAGS         DS       X\n$SOURCE_NEW       EQU      X'80'\n$SOURCE_DELETED   EQU      X'40'\n$HISTORY          EQU      X'20'\n$NEED_CLOSET      EQU      X'10'\n                  AUTHBLOK DSECT=NO\n                  HISTREQ  DSECT=NO\n                  LIBFUNC  DSECT=NO\n                  PRTBLOK  DSECT=NO\nDXD_IO            DS       0F,($MAX_SOURCE_SIZE*2)X\n                  ORG      DXD_IO\n                  LIBRECD  DSECT=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                  LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                  USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                   NETBLOK DSECT=YES\nNET_LIB_NAME       DS      CL8\nNET_MEM_NAME       DS      CL8\nNET_MEM_VER        DS      XL2\nNET_CHECK_IN_LENGTH EQU    *-NETBLOK\nNET_MEM_DOC        DS      0C\n                   ORG     NET_DATA\nNET_SOURCE_RECORDS DS      XL4\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*              EQUATES                                               *\n* ------------------------------------------------------------------ *\n$MAX_SOURCE_SIZE EQU 8000\n         COPY REGEQU\n         END  USUBCKIN\n./ ADD NAME=USUBCKOT 0100-09250-09250-0919-00512-00512-00000-SOURCE\n         TITLE 'USUBCKOT  Check-out'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBCKOT                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBCKOT CSECT\nUSUBCKOT AMODE 31\nUSUBCKOT RMODE ANY\n         USING PSA,R0\n         USING USUBCKOT,R12,R9                DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBCKOT'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         LA    R9,2048(R12)\n         LA    R9,2048(R9)\n         L     R1,USER_DXD                    WORK AREA BASE ADDRESS\n         A     R1,DXDSTART                    DISPLACMENT TO OURS\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDUCKOT,R13                   DEFINE BASE\n         USING IFGRPL,DXD_RPL\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK\n         MVI   PRTCC,C' '                     INITIALIZE PRINT\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVC   DXD_RPL(RPLL),RPLI             INITIALIZE RPL\n         L     R7,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R7                     DEFINE BASE\n         ITRACE ID=ENTRY,                                              +\n               DATA1=NET_FUNCTION,                                     +\n               DATA2=NET_DATA\n         L     R8,DXD_LIB                     LIBRARY BLOCK ADDRESS\n         MVC   NET_MSG_1,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_2,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_3,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_4,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_5,COMM_BLANKS          CLEAR MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   NET_FUNCTION,$NET_CHECK_OUT_AUTH\n         BE    INIT0010\n         L     R8,DXD_LIB                     USE LIB IN AUTH CALL\n         CLI   NET_FUNCTION,$NET_GET_DESC\n         BE    CKOUT000\n         CLI   NET_FUNCTION,$NET_CHECK_OUT_SOURCE\n         BE    CKOUT100\n         CLI   NET_FUNCTION,$NET_CONFIRM_CHECK_OUT\n         BE    CKOUT200\n         DC    H'0'\nINIT0010 DS    0H\n         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK\n         BZ    ERR0010                        NO LIBRARIES\n         USING LIBBLOK,R8                     DEFINE BASE\nINIT0020 DS    0H\n         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?\n         BE    INIT0030                       YES\n         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   INIT0020\n         B     ERR0010                        LIBRARY NOT FOUND\nINIT0030 DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               RDATA1=R8\n         ST    R8,DXD_LIB                     SAVE LIBBLOK ADDRESS\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BNO   ERR0020                        NO\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,NET_MEM_NAME\n         MVC   LIB_KEY_VERSION,NET_MEM_VERSION\n         MVC   LIB_KEY_SEQ,F1\n         ITRACE ID=READ1,                                              +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BAL   R6,READ1000                    READ INDEX RECORD\n         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?\n         BNE   ERR0040                        NO\n         ITRACE ID=CALLAUTH\n         MVC   AUTH_EYE,AUTHID\n         MVI   AUTH_FUNCTION,$AUTH_CHECK_OUT\n         MVC   AUTH_USER,USER_USER_ID\n         MVC   AUTH_LIB,NET_LIB_NAME\n         MVC   AUTH_MEMBER,NET_MEM_NAME\n         MVC   AUTH_VERSION,NET_MEM_VERSION\n         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER\n         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER\n         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS\n         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS\n         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT\n         BALR  R14,R15                        LINK TO AUTHORIZATION\n         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?\n         BNE   ERR0030                        NO\n         ITRACE ID=LIBOK\n         MVC   NET_SOURCE_RECORDS,LIB_INDEX_RECORDS\n         LA    R1,NETBLOKL+L'NET_SOURCE_RECORDS\n         STCM  R1,3,NET_LENGTH\n         MVI   NET_RETURN_CODE,$NET_OK\n         XC    LIB_KEY_SEQ,LIB_KEY_SEQ\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       Return the description (comments) about this member           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKOUT000 DS    0H\n         ITRACE ID=GETDESC\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_SEQ,F2                 FIRST DESCRIPTION RECORD\n         LA    R2,NET_DATA                    OUTPUT I/O AREA ADDRESS\n         SR    R3,R3                          CLEAR REGISTER\nCKOUT010 DS    0H\n         BAL   R6,READ1000\n         CLI   DXD_VSAM_RC+3,X'00'            SUCCESSFUL?\n         BNE   CKOUT020              NO\n         MVC   0(L'LIB_INDEX_DESC,R2),LIB_INDEX_DESC\n         LA    R2,L'LIB_INDEX_DESC(R2)\n         LA    R3,L'LIB_INDEX_DESC(R3)\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER\n         B     CKOUT010\nCKOUT020 DS    0H\n         ITRACE ID=DESCEOF,                                            +\n               RDATA1=R3,                                              +\n               DATA2=LIB_KEY_SEQ\n         LA    R3,LIBBLOKL(R3)                PLUS PREFIX LENGTH\n         STCM  R3,3,NET_LENGTH                SET LENGTH TO SEND\n         XC    LIB_KEY_SEQ,LIB_KEY_SEQ\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKOUT100 DS    0H\n         ITRACE ID=GETSRC\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER\n         BAL   R6,READ1000                    READ NEXT RECORD\n         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?\n         BNE   CKOUT110                       NO.. EOF\n         MVI   NET_RETURN_CODE,$NET_OK\n         LA    R3,DXD_RPL\n         SHOWCB RPL=(R3),                     SHOW DATA FROM RPL       +\n               FIELDS=(RECLEN),               .. REQUEST RECORD LENGTH +\n               AREA=DXD_RECLEN,               .. AREA FOR RETURNED DATA+\n               LENGTH=4                       .. LENGTH OF 'RECLEN'\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0060                        NO\n         L     R2,DXD_RECLEN                  RECORD SIZE\n         SH    R2,=Y(LIB_DATA-LIB_RECORD)     MINUS PREFIX LENGTH\n         LA    R0,LIB_DATA                    ADDRESS OF THE GOOD STUFF\n         LR    R1,R2                          RECORD SIZE\n         LA    R14,NET_DATA                   DATA IN NETWORK I/O AREA\n         LR    R15,R1                         COPY RECORD SIZE\n         MVCL  R14,R0                         COPY TO NETWORK I/O AREA\n         LA    R2,NETBLOKL(R2)                PLUS HEADER LENGTH\n         STCM  R2,3,NET_LENGTH\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKOUT110 DS    0H\n         ITRACE ID=EOF\n         MVI   NET_RETURN_CODE,$NET_EOF\n         LA    R1,NETBLOKL                    ONLY NEED TO SEND HEADER\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         B     EXIT0000                       EXIT\nCKOUT120 DS    0H\n         ITRACE ID=ABORTED\n         MVI   NET_RETURN_CODE,$NET_OK\n         LA    R1,NETBLOKL                    ONLY NEED TO SEND HEADER\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     The source code has been successfully transmitted to the user.  *\n*     The user end has sent back the CONFIRM indicating the source    *\n*     was successfully written to the output file.                    *\n*                                                                     *\n*     Update the statistics and the file's status.                    *\n*                                                                     *\n*     Log the CHECK-OUT to the LOG file.                              *\n*                                                                     *\n*     Send back the \"OK\" and exit without 'return'.                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCKOUT200 DS    0H\n         ITRACE ID=CONFIRM\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_SEQ,F1                 SET SEQUENCE NUMBER\n         BAL   R6,READ0000                    READ WITH UPDATE\n         MVI   LIB_INDEX_STATUS,$LIB_STATUS_OUT\n         TIME  DEC\n         STCM  R0,15,LIB_INDEX_CHECK_OUT_TIME\n         STCM  R1,15,LIB_INDEX_CHECK_OUT_DATE\n         MVC   LIB_INDEX_CHECK_OUT_USER,USER_USER_ID\n         ICM   R1,15,LIB_INDEX_CHECK_OUTS\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_INDEX_CHECK_OUTS\n         ICM   R1,15,LIB_CHECK_OUT\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_CHECK_OUT\n         LA    R1,LIB_INDEX_RECORD_LENGTH\n         STCM  R1,15,DXD_RECLEN               SET RECORD LENGTH\n         BAL   R6,PUT0000                     UPDATE INDEX\n         BAL   R6,CLOSET00                    FLUSH BUFFERS\n         MVC   PRTMSGID(MSG05L),MSG05\n         MVC   PRTMSGID+(MSG05USR-MSG05)(L'MSG05USR),USER_USER_ID\n         MVC   PRTMSGID+(MSG05MEM-MSG05)(L'MSG05MEM),LIB_KEY_NAME\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,LIB_KEY_VERSION\n         CVD   R1,DXD_DWORD\n         ED    PRTMSGID+(MSG05VER-MSG05)(L'MSG05VER),DXD_DWORD+5\n         MVC   PRTMSGID+(MSG05LIB-MSG05)(L'MSG05LIB),LIB_NAME\n         BAL   R6,PRT0000                     PRINT\n         MVI   NET_RETURN_CODE,$NET_OK\n         LA    R1,NETBLOKL\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=READUPDT,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\nREAD1000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=READ,                                               +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         GET   RPL=DXD_RPL                    READ\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPUT0000  DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=PUT,                                                +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_WRITES                  NUMBER OF WRITES\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_WRITES                  SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         L     R5,DXD_RECLEN\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               RECLEN=(R5),                                            +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         PUT   RPL=DXD_RPL\n         ST    R15,DXD_VSAM_RC\n         ITRACE ID=PUTRC,                                              +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*        CLOSE TYPE=T   (flush buffers)                               *\n* ------------------------------------------------------------------- *\nCLOSET00 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=CLOSET,                                             +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         ITRACE ID=ENDREQ\n         ENDREQ RPL=DXD_RPL\n         ITRACE ID=ENDREQRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET\n         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK\nCLOSET10 DS    0H\n         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN\n         BC    4,CLOSET10                     TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT FOR SUBTASK\n         NI    DXD_FLAGS,255-$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* -------------------------------------------------------------------\n*        PRINTING\n* -------------------------------------------------------------------\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE\n         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE\n         ST    R14,PRTNEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_REQ\n         BC    4,PRT0010\n         BR    R6                             RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   NET_MSG_1(MSG01L),MSG01\n         MVC   NET_MSG_1+(MSG01LIB-MSG01)(L'MSG01LIB),LIB_KEY_NAME\n         B     ERR1000\nERR0020  DS    0H\n         MVC   NET_MSG_1(MSG02L),MSG02\n         UNPK  NET_MSG_1+(MSG02LIB-MSG02)(L'MSG02LIB),LIB_NAME\n         B     ERR1000\nERR0030  DS    0H\n         MVC   NET_MSG_1,AUTH_MESSAGE_1\n         MVC   NET_MSG_2,AUTH_MESSAGE_2\n         MVC   NET_MSG_3,AUTH_MESSAGE_3\n         MVC   NET_MSG_4,AUTH_MESSAGE_4\n         MVC   NET_MSG_5,AUTH_MESSAGE_5\n         B     ERR1000\nERR0040  DS    0H\n         MVC   NET_MSG_1(MSG04L),MSG04\n         MVC   NET_MSG_1+(MSG04MEM-MSG04)(L'MSG04MEM),LIB_KEY_NAME\n         SR    R1,R1\n         ICM   R1,3,LIB_KEY_VERSION\n         CVD   R1,DXD_DWORD\n         ED    NET_MSG_1+(MSG04VER-MSG04)(L'MSG04VER),DXD_DWORD+5\n         MVC   NET_MSG_1+(MSG04LIB-MSG04)(L'MSG04LIB),LIB_NAME\n         B     ERR1000\nERR0060  DS    0H\n         DC    H'1'\nERR1000  DS    0H\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         LA    R1,NETBLOKL                    LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         TM    DXD_FLAGS,$NEED_CLOSET\n         BNO   EXIT0010\n         BAL   R6,CLOSET00\nEXIT0010 DS    0H\n         ITRACE ID=EXIT                       EXITING\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVLIBAUTH DC    V(LIBAUTH)\nDXDSTART DC    Q(DXDUCKOT)\nRPLI     RPL   AM=VTAM\nRPLL     EQU   *-RPLI\nF1       DC    F'1'\nF2       DC    F'2'\nAUTHID   DC    CL8'AUTHBLOK'\nLIBFUNC_ID  DC CL8'LIBFUNC'\nPRTID    DC    CL8'PRTBLOK'\nBLANKS   DC    CL80' '\nMSG01    DS    0C\n         DC    CL11'USUBCKOT01E'\n         DC    C' '\n         DC    C' Library '\nMSG01LIB DC    CL8' '\n         DC    C' not found'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    CL11'USUBCKOT02E'\n         DC    C' '\n         DC    C' Library '\nMSG02LIB DC    CL8' '\n         DC    C' not open'\nMSG02L   EQU   *-MSG02\nMSG04    DS    0C\n         DC    CL11'USUBCKOT04E'\n         DC    C' '\n         DC    C' Member '\nMSG04MEM DC    CL8' '\nMSG04VER DC    XL6'402120202020'\n         DC    C' not found in library '\nMSG04LIB DC    Cl8' '\nMSG04L   EQU   *-MSG04\nMSG05    DS    0C\n         DC    CL11'USUBCKOT05I'\n         DC    C' '\n         DC    C' User '\nMSG05USR DC    CL8' '\n         DC    C' checked out member '\nMSG05MEM DC    CL8' '\nMSG05VER DC    XL6'402120202020'\n         DC    C' from library '\nMSG05LIB DC    CL8' '\nMSG05L   EQU   *-MSG05\n\n         LTORG\n\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUCKOT      DSECT\n              LIBSAVE  DSECT=NO\nDXD_DWORD     DS       D\nDXD_IO_SAVE   DS       16F\nDXD_VSAM_RC   DS       F\nDXD_RECLEN    DS       F\nDXD_LIB       DS       F\nDXD_RPL       DS       0F,(RPLL)X\nDXD_FLAGS     DS       X\n$NEED_CLOSET  EQU      X'80'\n         AUTHBLOK DSECT=NO\n         LIBFUNC  DSECT=NO\n         PRTBLOK  DSECT=NO\nDXD_IO   DS       0F,($MAX_SOURCE_SIZE*2)X\n         ORG      DXD_IO\n         LIBRECD  DSECT=NO\n         ORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         NETBLOK   DSECT=YES\nNET_LIB_NAME       DS   CL8\nNET_MEM_NAME       DS   CL8\nNET_MEM_VERSION    DS   XL2\n                   ORG  NET_DATA\nNET_SOURCE_RECORDS DS   XL4\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                  COPY REGEQU\n$MAX_SOURCE_SIZE  EQU  8000\n         END  USUBCKOT\n./ ADD NAME=USUBDEL  0100-09250-09250-0919-00521-00521-00000-SOURCE\n         TITLE 'USUBDEL  Delete'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBDEL                                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBDEL  CSECT\nUSUBDEL  AMODE 31\nUSUBDEL  RMODE ANY\n         USING PSA,R0\n         USING USUBDEL,R12,R9                 DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBDEL'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         LA    R9,2048(R12)\n         LA    R9,2048(R9)\n         L     R1,USER_DXD                    WORK AREA BASE\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDDEL,R13                     DEFINE BASE\n         USING IFGRPL,DXD_RPL\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    INIT0010\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK\n         MVI   PRTCC,C' '                     INITIALIZE PRINT\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVC   DXD_RPL(RPLL),RPLI             INITIALIZE RPL\nINIT0010 DS    0H\n         L     R7,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R7                     DEFINE BASE\n         ITRACE ID=ENTRY,                                              +\n               DATA1=NET_FUNCTION,                                     +\n               DATA2=NET_DATA\n         MVC   DXD_LIB_NAME,NET_LIB_NAME\n         MVC   DXD_MEM_NAME,NET_MEM_NAME\n         MVC   DXD_MEM_VER,NET_MEM_VER\n         MVC   NET_MSG_1,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_2,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_3,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_4,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_5,COMM_BLANKS          CLEAR MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK\n         BZ    ERR0010                        NO LIBRARIES\n         USING LIBBLOK,R8                     DEFINE BASE\nINIT0030 DS    0H\n         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?\n         BE    INIT0040                       YES\n         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   INIT0030\n         B     ERR0020                        LIBRARY NOT FOUND\nINIT0040 DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               RDATA1=R8\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BNO   ERR0030                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,DXD_MEM_NAME\n         MVC   LIB_KEY_VERSION,DXD_MEM_VER\n         MVC   LIB_KEY_SEQ,F1\n         CLI   NET_FUNCTION,$NET_DELETE\n         BE    INIT0050\n         ITRACE ID=READ1,                                              +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BAL   R6,READ1000                    READ INDEX RECORD\n         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?\n         BNE   ERR0040                        NO\n         ITRACE ID=AUTHCHK\n         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER\n         MVC   AUTH_USER,USER_USER_ID         COPY USER ID\n         MVC   AUTH_LIB,NET_LIB_NAME          COPY LIBRARY NAME\n         MVC   AUTH_MEMBER,NET_MEM_NAME\n         MVC   AUTH_VERSION,NET_MEM_VER\n         MVI   AUTH_FUNCTION,$AUTH_CHECK_DELETE\n         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS\n         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER\n         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER\n         ITRACE ID=CALLAUTH\n         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS\n         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT\n         BALR  R14,R15                        LINK TO AUTHORIZATION\n         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?\n         BNE   ERR0050                        NO\n         ITRACE ID=AUTHOK\n         MVI   NET_RETURN_CODE,$NET_OK        SET RETURN CODE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Make sure there are no higher level versions.                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0050 DS    0H\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,DXD_MEM_NAME\n         ICM   R1,3,DXD_MEM_VER               VERSION BEING DELETED\n         LA    R1,1(R1)                       PLUS 1\n         STCM  R1,3,LIB_KEY_VERSION           SET VERSION\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,KGE)\n         GET   RPL=DXD_RPL                    READ\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   EXIT0000                       NO (GOOD IN OUR CASE)\n         CLC   LIB_KEY_NAME,DXD_MEM_NAME\n         BNE   INIT0060\n         MVC   NET_MSG_1(MSG01L),MSG01\n         MVC   NET_MSG_1+(MSG01MEM-MSG01)(L'MSG01MEM),DXD_MEM_NAME\n         MVC   NET_MSG_2(MSG02L),MSG02\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0060 DS    0H\n         OC    COMM_HSUB_TCB,COMM_HSUB_TCB    HISTORY SUBTASK ACTIVE?\n         BZ    DEL0100                        NO\n         ITRACE ID=Q2HIST                     SAVING CURRENT SOURCE\n         XC    HISTREQ(HISTREQL),HISTREQ\n         MVC   HISTEYE,HISTID                 SET BLOCK EYE CATCHER\n         MVC   HISTLIB,DXD_LIB_NAME           SET LIBRARY NAME\n         MVC   HISTNAME,DXD_MEM_NAME          SET MEMBER NAME\n         MVC   HISTVER,DXD_MEM_VER            SET VERSION NAME\n         LA    R1,HISTREQ                     OUR REQUEST'S ADDRESS\nINIT0070 DS    0H\n         L     R2,COMM_HSUB_REQ               FIRST REQUEST ON CHAIN\n         CS    R2,R1,COMM_HSUB_REQ            ADD OURS TO CHAIN\n         BC    4,INIT0070                     TRY AGAIN\n         POST  COMM_HSUB_WORK_ECB             WAKE UP HISTORY SUB TASK\n         ITRACE ID=HISTWAIT\n         WAIT  ECB=HISTECB                    WAIT FOR HISTORY SUB TASK\n         ITRACE ID=HISTDONE\n\n* ------------------------------------------------------------------- *\nDEL0100  DS    0H\n         ITRACE ID=DELETE\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,DXD_MEM_NAME\n         MVC   LIB_KEY_VERSION,DXD_MEM_VER\n         MVC   LIB_KEY_SEQ,F1                 SEQ OF 1ST INDEX RECORD\nDEL0110  DS    0H\n         ITRACE ID=DELDESC\n         BAL   R6,READ0000                    READ INDEX RECORD\n         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?\n         BNE   DEL0120                        NO\n         BAL   R6,ERASE000                    ERASE (DELETE) THE RECORD\n         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?\n         BNE   ERR0010                        NO\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER\n         B     DEL0110\nDEL0120  DS    0H\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         MVC   LIB_KEY_SEQ,F1                 SEQ OF 1ST DATA RECORD\nDEL0130  DS    0H\n         ITRACE ID=DELSRC,                                             +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BAL   R6,READ0000                    READ DATA RECORD\n         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?\n         BNE   DEL0140                        NO\n         BAL   R6,ERASE000                    ERASE (DELETE) THE RECORD\n         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?\n         BNE   ERR0030                        NO\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER\n         B     DEL0130\nDEL0140  DS    0H\n         BAL   R6,CLOSET00                    ISSUE A CLOSE TYPE=T\n         ITRACE ID=DELETED\n         ICM   R1,15,LIB_DELETE               NUMBER OF DELETED MEMBERS\n         LA    R1,1(R1)                       PLUS 1\n         STCM  R1,15,LIB_DELETE               SAVE TOTAL\n         MVC   PRTMSGID(MSG06L),MSG06\n         MVC   PRTMSGID+(MSG06USR-MSG06)(L'MSG06USR),USER_USER_ID\n         MVC   PRTMSGID+(MSG06MEM-MSG06)(L'MSG06MEM),DXD_MEM_NAME\n         SR    R1,R1\n         ICM   R1,3,DXD_MEM_VER               MEMBER VERSION\n         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG06VER-MSG06)(L'MSG06VER),DXD_DWORD+5\n         MVC   PRTMSGID+(MSG06LIB-MSG06)(L'MSG06LIB),DXD_LIB_NAME\n         BAL   R6,PRT0000                     PRINT\n         MVI   NET_RETURN_CODE,$NET_OK\n         LA    R1,NETBLOKL                    ONLY NEED HEADER\n         STCM  R1,3,NET_LENGTH                SET LENGTH TO SEND\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=READUPDT,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD,KEQ)\n         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD1000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=READ,                                               +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         GET   RPL=DXD_RPL                    READ\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERASE000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=ERASE,                                              +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         ICM   R1,15,LIB_ERASES\n         LA    R1,1(,R1)\n         STCM  R1,15,LIB_ERASES\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         ERASE RPL=DXD_RPL                    ERASE (DELETE THE RECORD)\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=ERASERC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK-IFGRPL(R2)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLOSET00 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=CLOSET,                                             +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         ITRACE ID=ENDREQ\n         ENDREQ RPL=DXD_RPL\n         ITRACE ID=ENDREQRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET\n         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK\nCLOSET10 DS    0H\n         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN\n         BC    4,CLOSET10                     TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT ON SUBTASK\n         NI    DXD_FLAGS,255-$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* -------------------------------------------------------------------\n*        PRINTING\n* -------------------------------------------------------------------\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE\n         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE\n         ST    R14,PRTNEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_REQ\n         BC    4,PRT0010\n         BR    R6                             RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NOLIBS\n         MVC   NET_MSG_1(MSG03L),MSG03\n         B     ERR1000\nERR0020  DS    0H\n         ITRACE ID=NOTFOUND\n         MVC   NET_MSG_1(MSG04L),MSG04\n         B     ERR1000\nERR0030  DS    0H\n         ITRACE ID=CLOSED\n         MVC   NET_MSG_1(MSG05L),MSG05\n         MVC   NET_MSG_1+(MSG05LIB-MSG05)(L'MSG05LIB),DXD_LIB_NAME\n         B     ERR1000\nERR0040  DS    0H\n         MVC   NET_MSG_1(MSG07L),MSG07\n         MVC   NET_MSG_1+(MSG07MEM-MSG07)(L'MSG07MEM),DXD_MEM_NAME\n         SR    R1,R1\n         ICM   R1,3,DXD_MEM_VER\n         CVD   R1,DXD_DWORD\n         ED    NET_MSG_1+(MSG07VER-MSG07)(L'MSG07VER),DXD_DWORD+5\n         B     ERR1000\nERR0050  DS    0H\n         ITRACE ID=NOTAUTH\n         MVC   NET_MSG_1,AUTH_MESSAGE_1\n         MVC   NET_MSG_2,AUTH_MESSAGE_2\n         MVC   NET_MSG_3,AUTH_MESSAGE_3\n         MVC   NET_MSG_4,AUTH_MESSAGE_4\n         MVC   NET_MSG_5,AUTH_MESSAGE_5\nERR1000  DS    0H\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         LA    R1,NETBLOKL\n         STCM  R1,3,NET_LENGTH\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT                       EXITING\n         TM    DXD_FLAGS,$NEED_CLOSET\n         BNO   EXIT0010\n         BAL   R6,CLOSET00\nEXIT0010 DS    0H\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\nVLIBAUTH          DC       V(LIBAUTH)\nDXDSTART          DC       Q(DXDDEL)\nRPLI              RPL      AM=VTAM\nRPLL              EQU      *-RPLI\n\nF1                DC       F'1'\n\nAUTHID            DC       CL8'AUTHBLOK'\nHISTID            DC       CL8'HISTREQ'\nLIBFUNC_ID        DC       CL8'LIBFUNC'\nPRTID             DC       CL8'PRTBLOK'\n\n                  LTORG\nMSG01             DS       0C\n                  DC       CL11'USUBDEL01E'\n                  DC       C' Higher version levels of member '\nMSG01MEM          DC       CL8' '\n                  DC       C' exist.'\nMSG01L            EQU      *-MSG01\nMSG02             DS       0C\n                  DC       CL11'USUBDEL02E'\n                  DC       C' Only the highest existing version may be +\n               deleted.'\nMSG02L            EQU      *-MSG02\nMSG03             DS       0C\n                  DC       CL11'USUBDEL03E'\n                  DC       C' No libraries are defined'\nMSG03L            EQU      *-MSG03\nMSG04             DS       0C\n                  DC       CL11'USUBDEL04E'\n                  DC       C' Specified library does not exist'\nMSG04L            EQU      *-MSG04\nMSG05             DS       0C\n                  DC       CL11'USUBDEL05E'\n                  DC       C' Library '\nMSG05LIB          DC       CL8' '\n                  DC       C' is closed'\nMSG05L            EQU      *-MSG05\nMSG06             DS       0C\n                  DC       CL11'USUBDEL06I'\n                  DC       C' User '\nMSG06USR          DC       CL8' '\n                  DC       C' deleted member '\nMSG06MEM          DC       CL8' '\n                  DC       C'  version '\nMSG06VER          DC       X'402020202120'\n                  DC       C' from library '\nMSG06LIB          DC       CL8' '\nMSG06L            EQU      *-MSG06\nMSG07             DS       0C\n                  DC       C'USUBDEL07E'\n                  DC       C'Member '\nMSG07MEM          DC       CL8' '\n                  DC       C'  version '\nMSG07VER          DC       X'402020202120'\n                  DC       C' not found'\nMSG07L            EQU      *-MSG07\n\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDDEL            DSECT\n                  LIBSAVE  DSECT=NO\nDXD_DWORD         DS       D\nDXD_IO_SAVE       DS       16F\nDXD_VSAM_RC       DS       F\nDXD_LEN           DS       F\nDXD_LIB           DS       F\nDXD_RPL           DS       0F,(RPLL)X\n\nDXD_LIB_NAME      DS       CL8\nDXD_MEM_NAME      DS       CL8\nDXD_MEM_VER       DS       XL2\n\nDXD_FLAGS         DS       X\n$NEED_CLOSET      EQU      X'80'\n\n                  AUTHBLOK DSECT=NO\n                  HISTREQ  DSECT=NO\n                  LIBFUNC  DSECT=NO\n                  PRTBLOK  DSECT=NO\nDXD_IO            DS       0F,($MAX_SOURCE_SIZE*2)X                     X\n                  ORG      DXD_IO\n                  LIBRECD  DSECT=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                  LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                  USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                   NETBLOK DSECT=YES\nNET_LIB_NAME       DS      CL8\nNET_MEM_NAME       DS      CL8\nNET_MEM_VER        DS      XL2\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n               COPY REGEQU\n$MAX_SOURCE_SIZE EQU 8000\n         END  USUBDEL\n./ ADD NAME=USUBDQL  0100-09250-09250-0919-00112-00112-00000-SOURCE\n         TITLE 'USUBDQL  Dequeue a library'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBDQL                                               *\n*                                                                     *\n*   We need to know who is using which library and we don't want      *\n*   to close a library while it is in use.  When a user begins        *\n*   accessing a library, the user interface will issue a \"enqueue\"    *\n*   for the library.  When the user ends their session or chamges     *\n*   libraries, the user interface will issue a \"dequeue\".             *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBDQL  CSECT\nUSUBDQL  AMODE 31\nUSUBDQL  RMODE ANY\n         USING PSA,R0\n         USING USUBDQL,R12                    DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBDQL'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         L     R1,USER_DXD                    WORK AREA BASE ADDRESS\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDUDQL,R13                    DEFINE BASE\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         L     R9,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_REM_USER\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         MVC   LIB_FUNCTION_LIB_NAME,NET_LIBRARY_NAME\n         ST    R10,LIB_FUNCTION_USER          OUR USERBLOK ADDRESS\n         LA    R1,LIBFUNC                     PARM BLOCK ADDRESS\nDQL0010  DS    0H\n         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN\n         BC    4,DQL0010                      TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB\n         CLI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK\n         BE    DQL0020                        YES\n         ITRACE ID=DEQFAIL\n         MVC   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1,LIB_FUNCTION_MESSAGE\n         B     EXIT0000\nDQL0020  DS    0H\n         ITRACE ID=DEQOK\n         MVI   NET_RETURN_CODE,$NET_OK\n         MVC   USER_LIBRARY,COMM_BLANKS       CLEAR LIBRARY NAME\nEXIT0000 DS    0H\n         ITRACE ID=EXIT                       EXITING PRINT MODULE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDSTART DC   Q(DXDUDQL)\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUDQL  DSECT\n         LIBSAVE DSECT=NO\n         LIBFUNC DSECT=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         NETBLOK DSECT=YES\nNET_LIBRARY_NAME        DS   CL8\nNET_LIBRARY_LENGTH      EQU  *-NET_LIBRARY_NAME\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*              EQUATES                                               *\n* ------------------------------------------------------------------ *\n         COPY REGEQU\n         END  USUBDQL\n./ ADD NAME=USUBGMD  0100-09250-09250-0919-00304-00304-00000-SOURCE\n         TITLE 'USUBGMD  Return member documentation data'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBGMD                                               *\n*                                                                     *\n*   Return member documentation data                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBGMD  CSECT\nUSUBGMD  AMODE 31\nUSUBGMD  RMODE ANY\n         USING PSA,R0\n         USING USUBGMD,R12                    DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBGMD'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         L     R1,USER_DXD                    WORK AREA ADDRESS\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDUGMD,R13                    DEFINE BASE\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   DXD_RPL(RPLL),RPLI\n         XC    DXD_LIBBLOK_ADDR,DXD_LIBBLOK_ADDR\nDOC0010  DS    0H\n         ITRACE ID=ENTRY\n         L     R9,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         L     R8,USER_RPL                    RPL ADDRESS\n         USING IFGRPL,R8\n         L     R7,USER_RPLX                   RPL EXTENSION ADDRESS\n         USING ISTRPL6X,R7\n         MVI   NET_RETURN_CODE,$NET_OK\n         MVC   DXD_LIBRARY_NAME,NET_LIB_NAME\n         MVC   DXD_MEM_NAME,NET_MEM_NAME\n         MVC   DXD_MEM_VER,NET_MEM_VER\n         LA    R1,NET_MSG_1                   FIRST MESSAGE\n         LA    R2,5                           NUMBER OF MESSAGES\nDOC0020  DS    0H\n         MVC   0(L'NET_MSG_1,R1),COMM_BLANKS\n         LA    R1,L'NET_MSG_1(R1)\n         BCT   R2,DOC0020\n         ITRACE ID=LIBRARY,                                            +\n               DATA1=DXD_LIBRARY_NAME\n         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         USING LIBBLOK,R6                     DEFINE BASE\n         BZ    DOC0040\nDOC0030  DS    0H\n         ITRACE ID=FINDLIB,                                            +\n               DATA1=LIB_NAME\n         CLC   DXD_LIBRARY_NAME,LIB_NAME\n         BE    DOC0050\n         ICM   R6,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   DOC0030\nDOC0040  DS    0H\n         ITRACE ID=BADLIB\n         LA    R1,NETBLOKL\n         STCM  R1,3,NET_LENGTH\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(EMSG01L),EMSG01\n         MVC   NET_MSG_1+(EMSG01_LIBRARY-EMSG01)(L'EMSG01_LIBRARY),DXD_+\n               LIBRARY_NAME\n         B     EXIT0000                       EXIT\nDOC0050  DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               RDATA1=R6\n         ST    R6,DXD_LIBBLOK_ADDR            SAVE LIBBLOK ADDRESS\n* ------------------------------------------------------------------- *\n*     Verify that the library is OPEN.                                *\n* ------------------------------------------------------------------- *\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BNO   ERR0010                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LA    R2,DXD_RPL                     OUR RPL ADDRESS\n         LA    R3,LIB_ACB                     ACB IN LIBBLOK\n         LA    R4,DXD_IO                      OUR I/O AREA ADDRESS\n         LA    R5,LIB_KEY                     RECORD KEY\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R5),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         CLI   NET_FUNCTION,$NET_CHECK_DESC_AUTH\n         BNE   DOC0060\n* ------------------------------------------------------------------- *\n*     Verify the user has authorization                               *\n* ------------------------------------------------------------------- *\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,NET_MEM_NAME\n         MVC   LIB_KEY_VERSION,NET_MEM_VER\n         MVC   LIB_KEY_SEQ,F1\n         ITRACE ID=READ1,                                              +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BAL   R4,READ0010                    READ INDEX RECORD\n         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?\n         BNE   ERR0020                        NO\n         ITRACE ID=CALLAUTH\n         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER\n         MVI   AUTH_FUNCTION,$AUTH_CHECK_DESC\n         MVC   AUTH_USER,USER_USER_ID\n         MVC   AUTH_LIB,NET_LIB_NAME\n         MVC   AUTH_MEMBER,NET_MEM_NAME\n         MVC   AUTH_VERSION,NET_MEM_VER\n         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER\n         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER\n         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS\n         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS\n         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT\n         BALR  R14,R15                        LINK TO AUTHORIZATION\n         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?\n         BNE   ERR0030                        NO\n         MVC   NET_DATA(LIB_INDEX_RECORD_LENGTH),LIB_RECORD\n         LA    R1,NETBLOKL+LIB_INDEX_RECORD_LENGTH\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*     Send the description                                            *\n* ------------------------------------------------------------------- *\nDOC0060  DS    0H\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,DXD_MEM_NAME\n         MVC   LIB_KEY_VERSION,DXD_MEM_VER\n         MVC   LIB_KEY_SEQ,F1                 INITIALIZE SEQUENCE NBR\n         LA    R2,NET_MEM_DOC-NETBLOK         INITIALIZE OUTPUT LENGTH\n         LA    R3,NET_MEM_DOC                 INITIALIZE OUTPUT ADDRESS\n         ITRACE ID=BUILD\nDOC0070  DS    0H\n         ITRACE ID=READNEXT\n         BAL   R4,READ0000                    READ A RECORD\n         OC    DXD_VSAM_RC,DXD_VSAM_RC\n         BNZ   DOC0080\n         MVC   0(L'LIB_DATA,R3),LIB_DATA\n         LA    R3,L'LIB_DATA(R3)              UPDATE OUTPUT ADDRESS\n         LA    R2,L'LIB_DATA(R2)              UPDATE OUTPUT LENGTH\n         C     R2,=A($MAX_SOURCE_SIZE-(2*LIBBLOKL))   BUFFER FULL?\n         BL    DOC0070\nDOC0080  DS    0H\n         ITRACE ID=DONE,                                               +\n               RDATA1=R2\n         STCM  R2,3,NET_LENGTH                SET LENGTH\n         MVI   NET_RETURN_CODE,$NET_OK        SET RETURN CODE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000  DS   0H\n         ITRACE ID=READ0000\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              SAVE TOTAL\nREAD0010  DS   0H\n         ITRACE ID=READ,                                               +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         A     R1,F1                          PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         GET   RPL=DXD_RPL                    READ NEXT RECORD\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         ITRACE ID=DATAREAD,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=CLOSED\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(EMSG02L),EMSG02\n         B     EXIT0000                       EXIT\nERR0020  DS    0H\n         ITRACE ID=NOTFOUND\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(EMSG03L),EMSG03\n         MVC   NET_MSG_1+(EMSG03MEM-EMSG03)(L'EMSG03MEM),DXD_MEM_NAME\n         SR    R1,R1\n         ICM   R1,3,DXD_MEM_VER\n         CVD   R1,DXD_DWORD\n         ED    NET_MSG_1+(EMSG03VER-EMSG03)(L'EMSG03VER),DXD_DWORD+5\n         B     EXIT0000                       EXIT\nERR0030  DS    0H\n         ITRACE ID=NOTAUTH\n         MVC   NET_MSG_1,AUTH_MESSAGE_1\n         MVC   NET_MSG_2,AUTH_MESSAGE_2\n         MVC   NET_MSG_3,AUTH_MESSAGE_3\n         MVC   NET_MSG_4,AUTH_MESSAGE_4\n         MVC   NET_MSG_5,AUTH_MESSAGE_5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000  DS   0H\n         ITRACE ID=EXIT                       EXITING\n         ITRACE ID=ENDREQ\n         ENDREQ RPL=DXD_RPL\n         ITRACE ID=ENDREQRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSTART       DC    Q(DXDUGMD)\nVLIBAUTH       DC    V(LIBAUTH)\nF1             DC    F'1'\n\nRPLI           RPL   AM=VTAM\nRPLL           EQU   *-RPLI\n\nAUTHID         DC    CL8'AUTHBLOK'\n\nEMSG01         DS    0C\n               DC    C'USUBGMD01E Library '\nEMSG01_LIBRARY DC    CL8' '\n               DC    C' not found'\nEMSG01L        EQU   *-EMSG01\nEMSG02         DS    0C\n               DC    C'USUBGMD02E Library is closed'\nEMSG02L        EQU   *-EMSG02\nEMSG03         DS    0C\n               DC    C'USUBGMD03E Member '\nEMSG03MEM      DC    Cl8' '\n               DC    C', version'\nEMSG03VER      DC    X'402020202120'\n               DC    C' not found'\nEMSG03L        EQU   *-EMSG03\n\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUGMD          DSECT\n                 LIBSAVE DSECT=NO\nDXD_DWORD        DS   D\nDXD_RPL          DS   0F,(RPLL)X\nDXD_LIBBLOK_ADDR DS   A\nDXD_LIBRARY_NAME DS   CL8\nDXD_MEM_NAME     DS   CL8\nDXD_MEM_VER      DS   XL2\nDXD_VSAM_RC      DS   F\n                 AUTHBLOK DSECT=NO\nDXD_IO           DS   0F,($MAX_SOURCE_SIZE*2)X\n                 ORG  DXD_IO\n                 LIBRECD DSECT=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                  NETBLOK DSECT=YES\nNET_LIB_NAME      DS   CL8\nNET_MEM_NAME      DS   CL8\nNET_MEM_VER       DS   XL2\nNET_MEM_DOC       DS   0C\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n$MAX_SOURCE_SIZE EQU 8000\n         COPY REGEQU\n         END  USUBGMD\n./ ADD NAME=USUBJOB  0100-09250-09250-0919-00540-00540-00000-SOURCE\n         TITLE 'USUBJOB  Submit a member as a JOB'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBJOB                                               *\n*                                                                     *\n*                                                                     *\n*  Submit member as a batch job                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBJOB  CSECT\nUSUBJOB  AMODE 31\nUSUBJOB  RMODE ANY\n         USING PSA,R0\n         USING USUBJOB,R12                    DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBJOB'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         L     R1,USER_DXD                    WORK AREA BASE\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                        SAVE WORK AREA ADDRESS\n         USING DXDUJOB,R13                   DEFINE BASE\n         USING IFGRPL,DXD_RPL\n         CLC   DXDID,MODID                   WORK AREA INITIALIZED?\n         BE    INIT0010\n         MVC   DXDID,MODID                   IDENTIFY WORK AREA OWNER\n         MVC   PRTEYE,PRTID                  IDENTIFY CONTROL BLOCK\n         MVI   PRTCC,C' '                    INITIALIZE PRINT\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVC   DXD_RPL(RPLL),RPLI\n         MVC   DAIR_EYE,DAIR_ID\n         MVI   DXD_FLAGS,0\n         GETMAIN RU,                                                   +\n               LV=BELOW_L,                                             +\n               LOC=BELOW\n         ITRACE ID=BELOW,                                              +\n               RDATA1=R1\n         LR    R9,R1\n         USING BELOW_DSECT,R9\n         MVC   BELOW_DCB(DCB_L),DCB_I\n         USING IHADCB,BELOW_DCB\n         MVC   BELOW_OPEN(OPEN_L),OPEN_I\n         MVC   BELOW_CLOSE(CLOSE_L),CLOSE_I\n         LA    R1,BELOW_IO\n         ST    R1,UX01_EXPANDED_BUFFER\n         LA    R1,DXD_EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,LIB_DATA\n         ST    R1,UX01_COMPRESSED_BUFFER\n         LA    R1,DXD_RECLEN\n         ST    R1,UX01_COMPRESSED_LENGTH\n         LOAD  EP=LIBUX01                    LOAD DE-COMPRESS EXIT\n         ST    R0,DXD_UX01\nINIT0010 DS    0H\n         L     R7,USER_IO                    I/O AREA ADDRESS\n         USING NETBLOK,R7                    DEFINE BASE\n         ITRACE ID=ENTRY,                                              +\n               DATA1=NET_FUNCTION,                                     +\n               DATA2=NET_DATA\n         MVC   DXD_LIB_NAME,NET_LIB_NAME\n         MVC   DXD_MEM_NAME,NET_MEM_NAME\n         MVC   NET_MSG_1,AUTH_MESSAGE_1\n         MVC   NET_MSG_2,AUTH_MESSAGE_2\n         MVC   NET_MSG_3,AUTH_MESSAGE_3\n         MVC   NET_MSG_4,AUTH_MESSAGE_4\n         MVC   NET_MSG_5,AUTH_MESSAGE_5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0020 DS    0H\n         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK\n         BZ    ERR0010                        NO LIBRARIES\n         USING LIBBLOK,R8                     DEFINE BASE\nINIT0030 DS    0H\n         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?\n         BE    INIT0040                       YES\n         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   INIT0030\n         B     ERR0020                        LIBRARY NOT FOUND\nINIT0040 DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               RDATA1=R8\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BNO   ERR0030                        NO\n         ST    R8,DXD_LIB                     SAVE ADDRESS\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Verify that the user has proper authorization.                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER\n         MVC   AUTH_USER,USER_USER_ID         COPY USER ID\n         MVC   AUTH_LIB,NET_LIB_NAME          COPY LIBRARY NAME\n         MVC   AUTH_MEMBER,NET_MEM_NAME\n         MVI   AUTH_FUNCTION,$AUTH_CHECK_SUBMIT\n         LA    R1,AUTHBLOK\n         L     R15,VLIBAUTH\n         BALR  R14,R15\n         CLI   AUTH_RETURN_CODE,$AUTH_OK\n         BNE   ERR0040\n* ------------------------------------------------------------------- *\n*     Read the index record for the member.                           *\n* ------------------------------------------------------------------- *\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,NET_MEM_NAME\n         MVC   LIB_KEY_SEQ,F1\n         MVC   LIB_KEY_VERSION,NET_MEM_VERSION\n         OC    NET_MEM_VERSION,NET_MEM_VERSION\n         BZ    INIT0050\n         ITRACE ID=SPECIFIC,                                           +\n               DATA1=NET_MEM_VERSION\n         OI    DXD_FLAGS,$SPECIFIC_VERSION\nINIT0050 DS    0H\n         ITRACE ID=INDEX,                                              +\n               DATA1=LIB_KEY+0,                                        +\n               DATA2=LIB_KEY+8\n         BAL   R6,READ0000                    READ INDEX RECORD\n         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?\n         BNE   INIT0060                       NO\n         TM    DXD_FLAGS,$SPECIFIC_VERSION    SPECIFIC VERSION?\n         BO    INIT0070                       YES\n         SR    R1,R1                          CLEAR R1\n         ICM   R1,3,LIB_KEY_VERSION           VERSION JUST FOUND\n         LA    R1,1(,R1)                      PLUS 1\n         STCM  R1,3,LIB_KEY_VERSION           UPDATE VERSION\n         B     INIT0050\nINIT0060 DS    0H\n         TM    DXD_FLAGS,$SPECIFIC_VERSION    SPECIFIC VERSION?\n         BO    ERR0050                        YES.. DOESN'T EXIST\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,LIB_KEY_VERSION           VERSION USED ON READ\n         BCTR  R1,0                           MINUS 1\n         STCM  R1,3,LIB_KEY_VERSION           SET VERSION\nINIT0070 DS    0H\n         MVC   DXD_SOURCE_RECORDS,LIB_INDEX_RECORDS\n         ITRACE ID=RECORDS,                                            +\n               DATA1=DXD_SOURCE_RECORDS\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Member exists.                                               *\n*        Allocate DD for internal reader.                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         AP    COMM_SUBMIT_NBR,P1             ADD 1 TO NBR OF SUBMITS\n         MVC   DAIR_DD,=X'F02120202020202020'\n         ED    DAIR_DD,COMM_SUBMIT_NBR        EDIT\n         MVI   DAIR_DD,C'S'                   SET DDNAME PREFIX\n         MVI   DAIR_CMD,$DAIR_INTRDR          SET COMMAND\n         ITRACE ID=ALLO_RDR,                  ALLOCATING INTERNAL RDR  +\n               DATA1=DAIR_DD\n         BAL   R6,DAIR0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Internal reader allocated                                    *\n*        Initialize and OPEN the DCB                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   DCBDDNAM,DAIR_DD               SET DD NAME\n         OPEN  (BELOW_DCB,OUTPUT),                                     +\n               MODE=31,                                                +\n               MF=(E,BELOW_OPEN)\n* ------------------------------------------------------------------- *\n*        Change key type to data                                      *\n* ------------------------------------------------------------------- *\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         XC    LIB_KEY_SEQ,LIB_KEY_SEQ\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Read a block of data                                         *\n*        Uncompress the block                                         *\n*        Write the data to the internal reader                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nJOB0010  DS    0H\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQ NBR\n         LA    R1,1(,R1)                      PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQ NBR\n         BAL   R6,READ0000                    READ A BLOCK\n         L     R2,DXD_SOURCE_RECORDS          SOURCE RECORDS LEFT\n         CH    R2,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?\n         BNH   JOB0020                        NO\n         LH    R2,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER\nJOB0020  DS    0H\n         LA    R3,BELOW_IO                    FIRST IN EXPANDED BUFFER\nJOB0030  DS    0H\n         PUT   BELOW_DCB,0(R3)                WRITE TO INTERNAL READER\n         LA    R3,80(,R3)                     NEXT IN BUFFER\n         BCT   R2,JOB0030                     LOOP\n         L     R4,DXD_SOURCE_RECORDS          SOURCE RECORDS LEFT\n         SH    R4,=Y($MAX_SOURCE_SIZE/80)     MINUS NBR JUST WRITTEN\n         ST    R4,DXD_SOURCE_RECORDS          UPDATE NBR LEFT\n         LTR   R4,R4                          ALL DONE?\n         BH    JOB0010                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        All records written                                          *\n*        CLOSE DCB                                                    *\n*        De-allocate DD                                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CLOSE\n         CLOSE BELOW_DCB,                                              +\n               MODE=31,                                                +\n               MF=(E,BELOW_CLOSE)\n         MVC   NET_MSG_1(MSG08_L),MSG08\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=READ,                                               +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         GET   RPL=DXD_RPL                    READ\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0050                        NO\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         BE    READ0020                       DON'T DE-COMPRESS INDEX\n         SHOWCB RPL=DXD_RPL,                  SHOW DATA FROM RPL       +\n               FIELDS=(RECLEN),               .. REQUEST RECORD LENGTH +\n               AREA=DXD_RECLEN,               .. AREA FOR RETURNED DATA+\n               LENGTH=4                       .. LENGTH OF 'RECLEN'\n         ITRACE ID=SHOW_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0060                        NO\n         L     R1,DXD_SOURCE_RECORDS          SOURCE RECORDS REMAINING\n         CH    R1,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?\n         BNH   READ0010                       NO\n         LH    R1,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER\nREAD0010 DS    0H\n         MH    R1,H80                         TIMES SIZE PER RECORD\n         ST    R1,DXD_EXPANDED_LENGTH         SET EXPANDED LENGTH\n         MVI   UX01_FUNCTION,$UX01_DECOMPRESS\n         LA    R1,UX01_PARMS\n         L     R15,DXD_UX01\n         ITRACE ID=CALLUX01,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                        DECOMPRESS THIS BUFFER\nREAD0020 DS    0H\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* -------------------------------------------------------------------\n*        DYNAMIC ALLOCATION/DEALLOCATION\n* -------------------------------------------------------------------\nDAIR0000 DS    0H\n         XC    DAIR_ECB,DAIR_ECB              CLEAR THE ECB\n         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS\n         ITRACE ID=DAIRREQ,                                            +\n               RDATA1=R1\nDAIR0010 DS    0H\n         L     R2,COMM_DSUB_REQ\n         ST    R2,DAIR_NEXT\n         CS    R2,R1,COMM_DSUB_REQ            ADD OUR REQUEST TO QUEUE\n         BC    4,DAIR0010                     NO GO.. TRY AGAIN\n         ITRACE ID=POSTDSUB\n         POST  COMM_DSUB_WORK_ECB             WAKEUP THE DAIR SUBTASK\n         ITRACE ID=WAIT\n         WAIT  1,ECB=DAIR_ECB                 WAIT\n         ITRACE ID=RUNNING\n         OC    DAIR_R15,DAIR_R15              ALLOCATION SUCCESSFUL?\n         BNZ   ERR0070                        NO\n         BR    R6\n* -------------------------------------------------------------------\n*        PRINTING\n* -------------------------------------------------------------------\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE\n         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE\n         ST    R14,PRTNEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_REQ\n         BC    4,PRT0010\n         BR    R6                             RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NOLIBS\n         MVC   NET_MSG_1(MSG01_L),MSG01\n         B     EXIT0000\nERR0020  DS    0H\n         ITRACE ID=BADLIB\n         MVC   NET_MSG_1(MSG02_L),MSG02\n         B     EXIT0000\nERR0030  DS    0H\n         ITRACE ID=CLOSED\n         MVC   NET_MSG_1(MSG03_L),MSG03\n         B     EXIT0000\nERR0040  DS    0H\n         ITRACE ID=NOTAUTH\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1,AUTH_MESSAGE_1\n         MVC   NET_MSG_2,AUTH_MESSAGE_2\n         MVC   NET_MSG_3,AUTH_MESSAGE_3\n         MVC   NET_MSG_4,AUTH_MESSAGE_4\n         MVC   NET_MSG_5,AUTH_MESSAGE_5\n         B     EXIT0000\nERR0050  DS    0H\n         ITRACE ID=READ_ERR,                                           +\n               RDATA1=R15\n         MVC   NET_MSG_1(MSG05_L),MSG05\n         UNPK  DXD_UNPACK(3),DXD_VSAM_RC+3(2)\n         TR    DXD_UNPACK(2),HEXCHAR\n         MVC   NET_MSG_1+(MSG05_R15-MSG05)(2),DXD_UNPACK\n         UNPK  DXD_UNPACK(7),DXD_RPL+(RPLFDBK-IFGRPL)(4)\n         TR    DXD_UNPACK(6),HEXCHAR\n         MVC   NET_MSG_1+(MSG05_RPLFDBK-MSG05)(6),DXD_UNPACK\n         B     EXIT0000\nERR0060  DS    0H\n         ITRACE ID=SHOW_ERR,                                           +\n               RDATA1=R15\n         MVC   NET_MSG_1(MSG06_L),MSG06\n         UNPK  DXD_UNPACK(3),DXD_VSAM_RC+2(2)\n         TR    DXD_UNPACK(2),HEXCHAR\n         MVC   NET_MSG_1+(MSG06_R15-MSG06)(2),DXD_UNPACK\n         B     EXIT0000\nERR0070  DS    0H\n         ITRACE ID=DAIR_ERR,                                           +\n               RDATA1=R15\n         MVC   NET_MSG_1(MSG07_L),MSG07\n         UNPK  DXD_UNPACK(3),DAIR_R15+1(2)\n         TR    DXD_UNPACK(2),HEXCHAR\n         MVC   NET_MSG_1+(MSG07_R15-MSG07)(2),DXD_UNPACK\n         UNPK  DXD_UNPACK(5),DAIR_ERROR(3)\n         TR    DXD_UNPACK(4),HEXCHAR\n         MVC   NET_MSG_1+(MSG07_ERROR-MSG07)(4),DXD_UNPACK\n         UNPK  DXD_UNPACK(5),DAIR_INFO(3)\n         TR    DXD_UNPACK(4),HEXCHAR\n         MVC   NET_MSG_1+(MSG07_INFO-MSG07)(4),DXD_UNPACK\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         DELETE EP=LIBUX01\n         XC    DXD_UX01,DXD_UX01\n         ITRACE ID=FREE_LOW,                                           +\n               RDATA1=R9\n         FREEMAIN RU,                                                  +\n               A=(R9),                                                 +\n               LV=BELOW_L\n         ITRACE ID=EXIT                       EXITING\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS\n         SR    R15,R15                        GIVE GOOD RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDCB_I    DCB   DSORG=PS,                                               +\n               DDNAME=S0000000,                                        +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               BLKSIZE=4000,                                           +\n               MACRF=PM\nDCB_L    EQU   *-DCB_I\n\nOPEN_I   OPEN  (*,OUTPUT),                                             +\n               MODE=31,                                                +\n               MF=L\nOPEN_L   EQU   *-OPEN_I\n\nCLOSE_I  CLOSE *,                                                      +\n               MODE=31,                                                +\n               MF=L\nCLOSE_L  EQU   *-CLOSE_I\n\nHEXCHAR           EQU  *-C'0'\n                  DC   C'0123456789ABCDEF'\n\nVLIBAUTH          DC   V(LIBAUTH)\nDXDSTART          DC   Q(DXDUJOB)\nRPLI              RPL  AM=VTAM\nRPLL              EQU  *-RPLI\nF1                DC   F'1'\nH1                DC   H'1'\nH80               DC   H'80'\nP1                DC   P'1'\nPRTID             DC   CL8'PRTBLOK'\nAUTHID            DC   CL8'AUTHBLOK'\nDAIR_ID           DC   CL8'DAIRREQ '\n\nMSG01             DS   0C\n                  DC   C'USUBJOB01E  '\n                  DC   C'No libraries are available'\nMSG01_L           EQU  *-MSG01\n\nMSG02             DS   0C\n                  DC   C'USUBJOB02E  '\n                  DC   C'Library not found'\nMSG02_L           EQU  *-MSG02\n\nMSG03             DS   0C\n                  DC   C'USUBJOB03E  '\n                  DC   C'Library is CLOSED'\nMSG03_L           EQU  *-MSG03\n\nMSG05             DS   0C\n                  DC   C'USUBJOB05E  '\n                  DC   C'VSAM READ error.  R15='\nMSG05_R15         DC   CL2' '\n                  DC   C', RPLFDBK='\nMSG05_RPLFDBK     DC   CL6' '\nMSG05_L           EQU  *-MSG05\n\nMSG06             DS   0C\n                  DC   C'USUBJOB06E  '\n                  DC   C'SHOWCB error.  R15='\nMSG06_R15         DC   CL2' '\nMSG06_L           EQU  *-MSG06\n\nMSG07             DS   0C\n                  DC   C'USUBJOB07E  '\n                  DC   C'DAIR error.  R15='\nMSG07_R15         DC   CL2' '\n                  DC   C', ERROR='\nMSG07_ERROR       DC   CL4' '\n                  DC   C', INFO='\nMSG07_INFO        DC   CL4' '\nMSG07_L           EQU  *-MSG07\n\nMSG08             DS   0C\n                  DC   C'USUBJOB08I  '\n                  DC   C'Submitted'\nMSG08_L           EQU  *-MSG08\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUJOB             DSECT\n                    LIBSAVE  DSECT=NO\nDXD_UX01            DS       A\nDXD_IO_SAVE         DS       16F\nDXD_VSAM_RC         DS       F\nDXD_RECLEN          DS       F\nDXD_LIB             DS       F\nDXD_RPL             DS       0F,(RPLL)X\nDXD_SOURCE_RECORDS  DS       F\nDXD_EXPANDED_LENGTH DS       F\nDXD_LIB_NAME        DS       CL8\nDXD_MEM_NAME        DS       CL8\nDXD_MEM_VERSION     DS       XL2\nDXD_UNPACK          DS       CL8\n\nDXD_FLAGS           DS       X\n$SPECIFIC_VERSION   EQU      X'80'\n\n                    UX01PARM DSECT=NO\n                    AUTHBLOK DSECT=NO\n                    DAIRREQ  DSECT=NO\n                    PRTBLOK  DSECT=NO\n\nDXD_IO              DS       0F,($MAX_SOURCE_SIZE*2)X\n                    ORG      DXD_IO\n                    LIBRECD  DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nBELOW_DSECT         DSECT\nBELOW_DCB           DS       0F,(DCB_L)X\nBELOW_OPEN          DS       0F,(OPEN_L)X\nBELOW_CLOSE         DS       0F,(CLOSE_L)X\nBELOW_IO            DS       32768X\nBELOW_L             EQU      *-BELOW_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    NETBLOK DSECT=YES\nNET_LIB_NAME        DS      CL8\nNET_MEM_NAME        DS      CL8\nNET_MEM_VERSION     DS      XL2\n$NET_VERSION_LENGTH EQU     *-NETBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DCBD     DSORG=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$MAX_SOURCE_SIZE EQU 8000\n         COPY REGEQU\n         END  USUBJOB\n./ ADD NAME=USUBLIBS 0100-09250-09250-0919-00154-00154-00000-SOURCE\n         TITLE 'USUBLIBS  Determine if user is authorized'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBLIBS                                              *\n*                                                                     *\n*   When a user starts a LIBRARIAN connection, the first order of     *\n*   business is to determine which libraries the user may access.     *\n*   This is done by calling RACF with a \"third\" party check for       *\n*   each library that was defined at start-up.                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBLIBS CSECT\nUSUBLIBS AMODE 31\nUSUBLIBS RMODE ANY\n         USING PSA,R0\n         USING USUBLIBS,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBLIBS'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         L     R1,USER_DXD                    WORK AREA BASE ADDRESS\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDULIBS,R13                   DEFINE BASE\n         CLC   DXDID,MODID                    INITIALIZED?\n         BE    LIBS0010                       YES\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   DXDRACL(RACLL),RACLI           INITIALIZE RACLIST\n         MVI   DXD_FLAGS,0                    RESET FLAGS\nLIBS0010 DS    0H\n         L     R9,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         MVI   NET_RETURN_CODE,$NET_OK\n         LA    R2,NET_LIBRARIES               I/O AREA ADDRESS\n         USING NET_LIBRARIES,R2\n         LA    R3,NET_LIBRARIES-NETBLOK       INITIALIZE OUTPUT LENGTH\n         L     R6,DXDLIB                      CURRENT LIBRARY\n         LA    R5,MAX_PER_BUFFER              MAXIMUM PER BUFFER\n         MVI   NET_RETURN_CODE,$NET_OK\n         TM    DXD_FLAGS,$CONTINUE            CONTINUE'ING?\n         BO    LIBS0020                       YES\n         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         USING LIBBLOK,R6                     DEFINE BASE\n         BZ    LIBS0050\nLIBS0020 DS    0H\n         NI    DXD_FLAGS,255-$CONTINUE\nLIBS0030 DS    0H\n         ITRACE ID=CHKLIB,                                             +\n               DATA1=LIB_NAME\n         RACROUTE REQUEST=AUTH,               CHECK FOR AUTHORIZATION  +\n               ATTR=READ,                     .. AT READ LEVEL         +\n               CLASS=COMMRACF,                .. CLASS                 +\n               ENTITY=(LIB_NAME),             .. ENTITY                +\n               USERID=USER_USER_ID,           .. THIRD PARTY CHECK     +\n               WORKA=DXDSAF,                  .. SAF WORK AREA         +\n               RELEASE=1.8.1,                 .. RACF RELEASE          +\n               MF=(E,DXDRACL)\n         ITRACE ID=RACFRC,                    TRACE RETURN CODE        +\n               RDATA1=R15\n         MVC   NET_LIBRARY_NAME,LIB_NAME      MOVE NAME TO I/O AREA\n         MVC   NET_LIBRARY_DESC,LIB_DESCRIPTION\n         MVC   NET_LIBRARY_STATUS,LIB_STATUS\n         LA    R2,NET_LIBRARY_LENGTH(R2)\n         LA    R3,NET_LIBRARY_LENGTH(R3)\n         BCT   R5,LIBS0040                    CONTINUE WITH NEXT LIB\n         OC    LIB_NEXT,LIB_NEXT              MORE LIBRARIES?\n         BZ    LIBS0050                       NO\n         MVC   DXDLIB,LIB_NEXT                SET NEXT LIBRARY BLOCK\n         OI    DXD_FLAGS,$CONTINUE            SET 'CONTINUE' FLAG\n         B     LIBS0060\nLIBS0040 DS    0H\n         ICM   R6,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   LIBS0030\nLIBS0050 DS    0H\n         MVI   NET_RETURN_CODE,$NET_EOF\nLIBS0060 DS    0H\n         STH   R3,NET_LENGTH\nEXIT0000 DS    0H\n         ITRACE ID=EXIT                       EXITING\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDSTART DC   Q(DXDULIBS)\nRACLI    RACROUTE REQUEST=AUTH,      RACF AUTHORIZATION INQUIRY        +\n               USERID=*,             .. WILL BE A THIRD PARTY CHECK    +\n               RELEASE=1.8.1,        .. RACF 1.8.1 FORMAT              +\n               LOG=NONE,             .. DON'T LOG FAILURES             +\n               MF=L                  .. LIST FORM\nRACLL    EQU   *-RACLI\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDULIBS  DSECT\n          LIBSAVE DSECT=NO\nDXDLIB    DS    A\nDXDRACL   DS    (RACLL)X              RACLIST PARM LIST\nDXDSAF    DS    (512)X                SAF WORK ARA\nDXD_FLAGS DS    X\n$CONTINUE EQU   X'80'\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         NETBLOK DSECT=YES\nNET_LIBRARIES           DS   0C\nNET_LIBRARY_NAME        DS   CL8\nNET_LIBRARY_DESC        DS   CL80\nNET_LIBRARY_STATUS      DS   X\nNET_LIBRARY_LENGTH      EQU  *-NET_LIBRARY_NAME\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nMAX_PER_BUFFER   EQU (($MAX_SOURCE_SIZE-NETBLOKL)/NET_LIBRARY_LENGTH)\n$MAX_SOURCE_SIZE EQU 8000\n         COPY REGEQU\n         END  USUBLIBS\n./ ADD NAME=USUBMAIN 0100-09250-09250-0919-00870-00870-00000-SOURCE\n         TITLE 'USUBMAIN  User subtask'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBMAIN                                              *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  For a VTAM connection:                                             *\n*                                                                     *\n*  When a user connects, the attention exit will be 'driven' by VTAM. *\n*  The attention exit will GETMAIN a USERBLOK, add it to the chain    *\n*  anchored at COMM_USER_CHAIN, and POST an ECB the main task is      *\n*  waiting on (COMM_ATTN_ECB).  When the main task 'wakes up', it     *\n*  will find the new USERBLOK and ATTACH this module as a subtask.    *\n*  Each user has a subtask that manages communication with that user. *\n*  When the user disconnects, VTAM will 'drive' the attention exit    *\n*  again.  The main task will find the USERBLOK with the termination  *\n*  ECB POSTed.  The main task will DETACH that subtask and FREEMAIN   *\n*  the USERBLOK.                                                      *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  For a TCP/IP connection:                                           *\n*                                                                     *\n*  During server start-up if a PORT number is specified in the parms, *\n*  the main task will attach the TCP/IP subtask (LIBSIP).  The TCP/IP *\n*  subtask (LIBSIP) will have initialized the TCP/IP API, created a   *\n*  socket, bound to the PORT and have issued a LISTEN and an ACCEPT.  *\n*  When a user connects, TCP/IP POSTs the ECB the ACCEPT is WAITing   *\n*  on.  LIBSIP will GETMAIN a USERBLOK, add it to the chain anchored  *\n*  at COMM_USER_CHAIN and POST an ECB the main task is WAITing on     *\n*  (this is the same ECB as the VTAM exit).                           *\n*                                                                     *\n*  For TCP/IP it gets a bit more complicated.  The reason is that     *\n*  the TCP/IP subtask \"owns\" the connection to the user.  What        *\n*  we want to do is ATTACH a subtask (LIBUSER) and have that subtask  *\n*  manage the communication with the new user.  So, we need to        *\n*  transfer ownership of the connection from one subtask to another.  *\n*  This involves three operating system subtasks...  one is the       *\n*  TCP/IP subtask, the second is the main task, and the third is      *\n*  the user's subtask.                                                *\n*                                                                     *\n*  To summarize:                                                      *\n*                                                                     *\n*      The TCP/IP subtask's LISTEN/ACCEPT has completed               *\n*      The TCP/IP subtask GETMAIN'd a new USERBLOK and added it to    *\n*         the USERBLOK chain                                          *\n*      The TCP/IP subtask POSTs an ECB the main task WAITs on         *\n*      The TCP/IP subtask WAITs for the new user subtask to initialize*\n*      The main task ATTACHs the new user subtask                     *\n*      The main task WAITs for work again                             *\n*      The new user subtask POSTs the ECB the TCP/IP subtask has      *\n*         been waiting for in the new USERBLOK                        *\n*      The TCP/IP subtask issues a GIVESOCKET                         *\n*      The user subtask issues a TAKESOCKET                           *\n*                                                                     *\n*    At this point the user subtask 'owns' the socket.  The TCP/IP    *\n*    subtask is 'out of the loop'.  Network data traffic is directly  *\n*    between the end user on the remote end and the user subtask.     *\n*                                                                     *\n*      The TCP/IP subtask issues another ACCEPT and WAITs for another *\n*         log-in                                                      *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBMAIN CSECT\nUSUBMAIN AMODE 31\nUSUBMAIN RMODE ANY\n         USING PSA,R0\n         USING USUBMAIN,R12,R9                DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBMAIN'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LA    R9,2048(,R12)\n         LA    R9,2048(R9)\n         L     R10,0(R1)                      COPY OUR USERBLOK ADDRESS\n         USING USERBLOK,R10\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         L     R3,DXDSIZE                     WORK AREA SIZE\n         GETMAIN RU,LV=(R3),                  OBTAIN WORK AREA         +\n               LOC=ANY\n         ST    R1,USER_DXD                    SET WORK AREA BASE ADDR\n         LR    R4,R1                          COPY STORAGE ADDRESS\n         LR    R2,R1                          COPY WORK AREA ADDRESS\n         SR    R0,R0                          CLEAR REGISTER\n         SR    R1,R1                          CLEAR REGISTER\n         MVCL  R2,R0                          CLEAR WORK AREA\n         A     R4,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R4)\n         ST    R4,8(R13)\n         LR    R13,R4                         COPY WORKAREA ADDRESS\n         USING DXDUMAIN,R13                   DEFINE BASE\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         ITRACE ID=INIT,RDATA1=R10\n         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID\n         BZ    INIT0010                       YES\n         GETMAIN RU,LV=RPLL                   GETMAIN STORAGE FOR RPL\n         LR    R8,R1                          COPY ADDRESS\n         ITRACE ID=RPL,RDATA1=R8\n         ST    R8,USER_RPL                    SAVE RPL ADDRESS\n         USING IFGRPL,R8                      DEFINE BASE\n         MVC   0(RPLL,R8),RPLI                INITIALIZE RPL\n         MVC   RPLDACB,COMM_ACB               SET THE ACB ADDRESS\n         GETMAIN RU,LV=RPLEXTL                GET STORAGE FOR RPLEXT\n         LR    R7,R1                          COPY ADDRESS\n         ST    R7,USER_RPLX                   SAVE RPL EXTENSION ADDR\n         USING ISTRPL6X,R7                    DEFINE BASE\n         MVC   0(RPLEXTL,R7),RPLEXTI          INITIALIZE RPL EXTENSION\n         B     INIT0020\nINIT0010 DS    0H\n         XC    USER_RPL,USER_RPL\n         XC    USER_RPLX,USER_RPLX\n         ITRACE ID=INITAPI,                                            +\n               DATA1=USER_CLIENT_TASK\n         MVC   DXD_TCPIP_FUNCTION,=CL16'INITAPI'\n         EZASMI TYPE=INITAPI,                                          +\n               MAXSNO=DXD_MAX_SOCKET,                                  +\n               SUBTASK=USER_CLIENT_TASK,                               +\n               ASYNC='ECB',                                            +\n               TASK=TCPTASK,                                           +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +\n               RETCODE=DXD_TCPIP_RETURN_CODE\n         TM    DXD_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0000\n         ITRACE ID=POST_API\n         XC    USER_TAKESOCKET_ECB,USER_TAKESOCKET_ECB\n         POST  USER_API_ECB\n         ITRACE ID=1STWAIT\n         WAIT  ECB=USER_TAKESOCKET_ECB\n         ITRACE ID=TAKESOCK,                                           +\n               DATA1=COMM_MAIN_CLIENT_NAME,                            +\n               DATA2=COMM_MAIN_CLIENT_TASK\n         ITRACE ID=TAKE+,                                              +\n               DATA1=USER_SOCKET\n         MVC   DXD_TCPIP_FUNCTION,=CL16'TAKESOCKET'\n         XC    USER_NETWORK_ECB,USER_NETWORK_ECB\n         EZASMI TYPE=TAKESOCKET,                                       +\n               SOCRECV=USER_SOCKET,                                    +\n               CLIENT=COMM_MAIN_CLIENT,                                +\n               ECB=USER_NETWORK_ECB,                                   +\n               TASK=TCPTASK,                                           +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +\n               RETCODE=DXD_TCPIP_RETURN_CODE\n         WAIT  ECB=USER_NETWORK_ECB\n         TM    DXD_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0000\n         MVC   USER_SOCKET,DXD_TCPIP_RETURN_CODE+2\n         ITRACE ID=NEWSOCK,                                            +\n               DATA1=USER_SOCKET\nINIT0020 DS    0H\n         L     R0,IOSIZE                      I/O AREA SIZE (32768)\n         GETMAIN RU,LV=(0)\n         LR    R6,R1                          COPY I/O AREA ADDRESS\n         ST    R6,USER_IO                     SAVE THE I/O AREA ADDRESS\n         ITRACE ID=IOAREA,                                             +\n               RDATA1=R6\n         USING NETBLOK,R6                     DEFINE BASE\n         XC    0(256,R6),0(R6)                INITIALIZE HEADER PORTION\n         XC    USER_WORK_ECB,USER_WORK_ECB\n         LA    R1,USER_WORK_ECB               ECB THE MAINTASK POSTS\n         ST    R1,DXD_ECB1                    SET ADDRESS IN WAIT LIST\n         LA    R1,USER_NETWORK_ECB            ECB VTAM WILL POST\n         ST    R1,DXD_ECB2                    SET ADDRESS IN WAIT LIST\n         OI    DXD_ECB2,X'80'                 SET 'END-OF-LIST'\n         XC    DXD_BAD,DXD_BAD\n         MVI   PRTCC,C' '                     SINGLE SPACING\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVC   PRTMSGID(MSG01L),MSG01\n         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID\n         BZ    USER0030\n         MVC   PRTMSGID+(MSG01TYP-MSG01)(3),CID\n         UNPK  PRTMSGID+(MSG01ADR-MSG01)(9),USER_CONVERSATION_ID(5)\n         TR    PRTMSGID+(MSG01ADR-MSG01)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG01ADR-MSG01)+8,C' '\n         B     USER0040\nUSER0030 DS    0H\n         MVC   PRTMSGID+(MSG01TYP-MSG01)(3),IP\n         MVC   PRTMSGID+(MSG01ADR-MSG01)(15),USER_IP_ADDRESS\nUSER0040 DS    0H\n         BAL   R14,PRT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSER0050 DS    0H\n         BAL   R14,RECV0000                   ISSUE FIRST RECEIVE\n         CLI   NET_FUNCTION,$NET_IDENTIFY_USER\n         BE    USER0070                       YES\n         TM    USER_STATUS,$USERID            HAS USER BEEN IDENTIFIED?\n         BNO   ERR0050                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Perform the requested service.                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSER0060 DS    0H\n         ITRACE ID=CHKFUNC,                                            +\n               DATA1=NET_FUNCTION\n         CLI   NET_FUNCTION,$NET_GET_LIBS\n         BE    USER0140\n         CLI   NET_FUNCTION,$NET_CHECK_IN_AUTH\n         BE    USER0150\n         CLI   NET_FUNCTION,$NET_CHECK_IN_SOURCE\n         BE    USER0150\n         CLI   NET_FUNCTION,$NET_CHECK_NEW_AUTH\n         BE    USER0150\n         CLI   NET_FUNCTION,$NET_CHECK_OUT_AUTH\n         BE    USER0160\n         CLI   NET_FUNCTION,$NET_CHECK_OUT_SOURCE\n         BE    USER0160\n         CLI   NET_FUNCTION,$NET_CONFIRM_CHECK_OUT\n         BE    USER0160\n         CLI   NET_FUNCTION,$NET_ABORT_CHECK_OUT\n         BE    USER0160\n         CLI   NET_FUNCTION,$NET_GET_MEMBERS\n         BE    USER0170\n         CLI   NET_FUNCTION,$NET_ENQUE_LIB\n         BE    USER0180\n         CLI   NET_FUNCTION,$NET_DEQ_LIB\n         BE    USER0190\n         CLI   NET_FUNCTION,$NET_CHECK_VIEW_AUTH\n         BE    USER0200\n         CLI   NET_FUNCTION,$NET_VIEW_SOURCE\n         BE    USER0200\n         CLI   NET_FUNCTION,$NET_CHECK_DESC_AUTH\n         BE    USER0210\n         CLI   NET_FUNCTION,$NET_GET_DESC\n         BE    USER0210\n         CLI   NET_FUNCTION,$NET_SEND_DESC\n         BE    USER0220\n         CLI   NET_FUNCTION,$NET_CHECK_DEL_AUTH\n         BE    USER0230\n         CLI   NET_FUNCTION,$NET_DELETE\n         BE    USER0230\n         CLI   NET_FUNCTION,$NET_SEND_RECORDS\n         BE    USER0150\n         CLI   NET_FUNCTION,$NET_GET_STATUS\n         BE    USER0240\n         CLI   NET_FUNCTION,$NET_NEW_VERSION\n         BE    USER0250\n         CLI   NET_FUNCTION,$NET_CLOSE\n         BE    TERM0010\n         CLI   NET_FUNCTION,$NET_CHECK_ADMIN_AUTH\n         BE    USER0260\n         CLI   NET_FUNCTION,$NET_SEND_ADMIN\n         BE    USER0260\n         CLI   NET_FUNCTION,$NET_UNDO\n         BE    USER0270\n         CLI   NET_FUNCTION,$NET_SUBMIT_JOB\n         BE    USER0280\n         ITRACE ID=BADCMD,                                             +\n               DATA1=NET_FUNCTION\n         L     R1,DXD_BAD                     NUMBER OF BAD COMMANDS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,DXD_BAD                     SAVE BAD COMMAND COUNT\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_DATA(MSG02L),MSG02\n         LA    R1,NETBLOKL+MSG02L             LENGTH TO SEND BACK\n         STH   R1,NET_LENGTH                  SET LENGTH\n         B     USER0310\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSER0070 DS    0H\n         TM    USER_STATUS,$USERID            ALREADY BEEN IDENTIFIED?\n         BO    ERR0040                        YES\n         OI    USER_STATUS,$USERID            USER HAS BEEN IDENTIFIED\n         ITRACE ID=IDENTIFY,                                           +\n               DATA1=NET_SMF,                 .. SMF NAME              +\n               DATA2=NET_USER                 .. USER ID\n         MVC   USER_SYSTEM_SMF,NET_SMF        COPY SYSTEM SMF ID\n         MVC   USER_USER_ID,NET_USER          COPY USER ID\n         MVC   USER_JOB,NET_JOB               COPY USER'S SPACE NAME\n         MVC   USER_NAME,NET_USER_NAME\n         ICM   R15,15,COMMXUSR                FIRST EXTERNAL USER BLOCK\n         BZ    USER0110                       NO EXTERNAL USER BLOCKS\n         USING XUSRBLOK,R15                   DEFINE BASE\nUSER0080 DS    0H\n         CLC   XUSRSMF,USER_SYSTEM_SMF        SAME SMF ID?\n         BNE   USER0090                       NO\n         CLC   XUSRID1,USER_SYSTEM_SMF        SAME USER ID?\n         BE    USER0100                       YES\nUSER0090 DS    0H\n         ICM   R15,15,XUSRNEXT                NEXT BLOCK\n         BNZ   USER0080                       LOOP\n         B     USER0110\nUSER0100 DS    0H\n         MVC   USER_USER_ID,XUSRID2           CHANGE TO LOCAL USER ID\nUSER0110 DS    0H\n         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID\n         BZ    USER0120\n         MVC   PRTMSGID(MSG03L),MSG03\n         MVC   PRTMSGID+(MSG03USR-MSG03)(L'MSG03USR),USER_USER_ID\n         MVC   PRTMSGID+(MSG03SMF-MSG03)(L'MSG03SMF),USER_SYSTEM_SMF\n         MVC   PRTMSGID+(MSG03JOB-MSG03)(L'MSG03JOB),USER_JOB\n         MVC   PRTMSGID+(MSG03LU-MSG03)(L'MSG03LU),USER_PARTNER_LU\n         UNPK  PRTMSGID+(MSG03CID-MSG03)(9),USER_CONVERSATION_ID(5)\n         TR    PRTMSGID+(MSG03CID-MSG03)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG03CID-MSG03)+8,C' '\n         BAL   R14,PRT0000\n         B     USER0130\nUSER0120 DS    0H\n         MVC   PRTMSGID(MSG05L),MSG05\n         MVC   PRTMSGID+(MSG05USR-MSG05)(L'MSG05USR),USER_USER_ID\n         MVC   PRTMSGID+(MSG05SMF-MSG05)(L'MSG05SMF),USER_SYSTEM_SMF\n         MVC   PRTMSGID+(MSG05JOB-MSG05)(L'MSG05JOB),USER_JOB\n         MVC   PRTMSGID+(MSG05IP-MSG05)(L'MSG05IP),USER_IP_ADDRESS\n         BAL   R14,PRT0000\nUSER0130 DS    0H\n         LA    R1,$NET_IDENTIFY_LENGTH\n         STCM  R1,3,NET_LENGTH\n         MVI   NET_RETURN_CODE,$NET_OK\n         MVC   NET_SYSTEM_NAME,COMM_SYSTEM_NAME\n         B     USER0310\nUSER0140 DS    0H\n         ITRACE ID=GETLIBS\n         MVC   DXD_SUB_EP,V_USUBLIBS          USUBLIBS ENTRY POINT\n         B     USER0300\nUSER0150 DS    0H\n         ITRACE ID=CHECKIN\n         MVC   DXD_SUB_EP,V_USUBCKIN          USUBCKIN ENTRY POINT\n         B     USER0300\nUSER0160 DS    0H\n         ITRACE ID=CHECKOUT\n         MVC   DXD_SUB_EP,V_USUBCKOT          USUBCKOT ENTRY POINT\n         B     USER0300\nUSER0170 DS    0H\n         ITRACE ID=GETMEMS\n         MVC   DXD_SUB_EP,V_USUBMEMS          USUBMEMS ENTRY POINT\n         B     USER0300\nUSER0180 DS    0H\n         ITRACE ID=ENQLIB\n         MVC   DXD_SUB_EP,V_USUBNQL           USUBNQL ENTRY POINT\n         B     USER0300\nUSER0190 DS    0H\n         ITRACE ID=DEQLIB\n         MVC   DXD_SUB_EP,V_USUBDQL           USUBDQL ENTRY POINT\n         B     USER0300\nUSER0200 DS    0H\n         ITRACE ID=VIEW\n         MVC   DXD_SUB_EP,V_USUBVIEW          USUBVIEW ENTRY POINT\n         B     USER0300\nUSER0210 DS    0H\n         ITRACE ID=GETDESC\n         MVC   DXD_SUB_EP,V_USUBGMD           GET MEMBER DOC\n         B     USER0300\nUSER0220 DS    0H\n         ITRACE ID=SENDDESC\n         MVC   DXD_SUB_EP,V_USUBUMD           UPDATE DOC\n         B     USER0300\nUSER0230 DS    0H\n         ITRACE ID=DELETE\n         MVC   DXD_SUB_EP,V_USUBDEL           DELETE MEMBER\n         B     USER0300\nUSER0240 DS    0H\n         ITRACE ID=STATUS\n         MVC   DXD_SUB_EP,V_USUBSTAT          STC STATUS\n         B     USER0300\nUSER0250 DS    0H\n         ITRACE ID=VERSION\n         MVC   DXD_SUB_EP,V_USUBVER           CREATE A NEW VERSION\n         B     USER0300\nUSER0260 DS    0H\n         ITRACE ID=ADMIN\n         MVC   DXD_SUB_EP,V_USUBADMN          IN/OUT AND USER ADMIN\n         B     USER0300\nUSER0270 DS    0H\n         ITRACE ID=UNDO\n         MVC   DXD_SUB_EP,V_USUBUNDO          UNDO CHECK-OUT STATUS\n         B     USER0300\nUSER0280 DS    0H\n         ITRACE ID=JOB\n         MVC   DXD_SUB_EP,V_USUBJOB           SUBMIT AS BATCH JOB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSER0300 DS    0H\n         L     R15,DXD_SUB_EP                 SUBROUTINE ENTRY POINT\n         ITRACE ID=CALLSUB,                                            +\n               RDATA1=R15,                                             +\n               DATA2=MODID-USUBMAIN(R15)\n         BALR  R14,R15                        LINK TO SUBROUTINE\nUSER0310 DS    0H\n         BAL   R14,SEND0000                   ISSUE SEND\n         BAL   R14,RECV0000                   ISSUE RECEIVE\n         TM    USER_STATUS,$USER_KILL\n         BO    TERM0000\n         B     USER0060                       CHECK NEXT FUNCTION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRECV0000 DS    0H\n         ST    R14,DXD_LINK\n         ITRACE ID=RECV0000,                                           +\n               RDATA1=R10,                                             +\n               RDATA2=R14\n         L     R1,USER_RECEIVES               NUMBER OF RECEIVES\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,USER_RECEIVES               SAVE TOTAL\n         MVI   USER_FUNCTION,$USER_RECEIVE\n         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID\n         BZ    RECV0010\n         ITRACE ID=VTAMRECV,                                           +\n               DATA1=USER_CONVERSATION_ID,                             +\n               RDATA2=R10\n         MVC   DXD_VTAM_FUNCTION,=CL16'RECEIVE'\n         XC    USER_NETWORK_ECB,USER_NETWORK_ECB\n         APPCCMD CONTROL=RECEIVE,             ISSUE RECEIVE            +\n               QUALIFY=SPEC,                                           +\n               RPL=(R8),                                               +\n               FILL=LL,                                                +\n               AREA=(R6),                                              +\n               AREALEN=32768,                                          +\n               ECB=USER_NETWORK_ECB,                                   +\n               CONMODE=CS,                                             +\n               CONVID=USER_CONVERSATION_ID,                            +\n               OPTCD=ASY\n         ITRACE ID=WAIT,                                               +\n               DATA1=USER_WORK_ECB,                                    +\n               DATA2=USER_NETWORK_ECB\n         WAIT  1,ECBLIST=DXD_WAIT\n         TM    COMM_EOJ_PHASE,$EOJ1           EOJ SIGNALLED?\n         BO    TERM0000                       YES\n         ITRACE ID=WOKEUP1,                                            +\n               DATA1=USER_WORK_ECB,                                    +\n               DATA2=USER_NETWORK_ECB\n         APPCCMD CONTROL=CHECK,RPL=(R8)\n         MVI   USER_FUNCTION,$USER_RUN        THIS TASK IS RUNNING\n         TM    USER_WORK_ECB,X'40'            MAIN TASK SIGNALLING?\n         BO    TERM0020                       YES.. SHUTDOWN TIME\n         TM    USER_STATUS,$USERLOS           SESSION LOST?\n         BO    LOSS0000                       YES\n         ITRACE ID=RECVDONE,                                           +\n               DATA1=RPL6RC,                                           +\n               DATA2=0(R6)                    .. PORTION OF I/O AREA\n         OC    RPL6RC,RPL6RC                  RECEIVE SUCCESSFUL?\n         BNZ   ERR0020                        NO\n         L     R1,USER_BYTES_RECEIVED         NUMBER OF BYTES RECEIVED\n         AH    R1,NET_LENGTH                  PLUS JUST RECEIVED\n         ST    R1,USER_BYTES_RECEIVED         SAVE TOTAL\n         MVI   USER_FUNCTION,$USER_RUN        STATUS IS 'RUNNING'\n         L     R14,DXD_LINK\n         BR    R14\nRECV0010 DS    0H\n         ITRACE ID=TCP_READ,                                           +\n               RDATA1=R6,                                              +\n               RDATA2=R10\n         MVC   DXD_TCPIP_FUNCTION,=CL16'READ'\n         XC    USER_NETWORK_ECB,USER_NETWORK_ECB\n         EZASMI TYPE=READ,                                             +\n               S=USER_SOCKET,                                          +\n               TASK=TCPTASK,                                           +\n               NBYTE=IOSIZE,                                           +\n               BUF=NETBLOK,                                            +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +\n               ECB=USER_NETWORK_ECB\n         WAIT  1,ECBLIST=DXD_WAIT\n         TM    COMM_EOJ_PHASE,$EOJ1           EOJ SIGNALLED?\n         BO    TERM0000                       YES\n         MVI   USER_FUNCTION,$USER_RUN        STATUS IS 'RUNNING'\n         ICM   R1,15,DXD_TCPIP_RETURN_CODE\n         BM    ERR0000                        IF NEGATIVE.. ERROR\n         ITRACE ID=READDONE,                                           +\n               RDATA1=R10,                                             +\n               RDATA2=R1\n         STH   R1,NET_LENGTH                  SET BYTES RECEIVED (READ)\n         A     R1,USER_BYTES_RECEIVED         PLUS TOTAL SO FAR\n         ST    R1,USER_BYTES_RECEIVED         SAVE TOTAL\n         MVI   USER_FUNCTION,$USER_RUN        STATUS IS 'RUNNING'\n         L     R14,DXD_LINK\n         BR    R14\n*-------------------------------------------------------------------- *\n*                                                                     *\n*        Send data to user                                            *\n*                                                                     *\n*        R2   data length                                             *\n*        R6   data address                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         ST    R14,DXD_LINK\n         ITRACE ID=SEND\n         L     R1,USER_SENDS                  NUMBER OF SENDS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,USER_SENDS                  SAVE TOTAL\n         LH    R2,NET_LENGTH\n         L     R1,USER_BYTES_SENT             NUMBER OF BYTES SENT\n         AR    R1,R2                          PLUS BYTES SENDING NOW\n         ST    R1,USER_BYTES_SENT             SAVE TOTAL\n         OI    USER_STATUS,$USERSND           SENDING DATA\n         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID\n         BZ    SEND0010                       YES\n*-------------------------------------------------------------------- *\n*        Send data using VTAM                                         *\n* ------------------------------------------------------------------- *\n         ITRACE ID=VTAMSEND,                                           +\n               DATA1=USER_CONVERSATION_ID,                             +\n               DATA2=0(R6)\n         MVC   DXD_VTAM_FUNCTION,=CL16'SEND'\n         XC    USER_NETWORK_ECB,USER_NETWORK_ECB\n         APPCCMD CONTROL=SEND,                ISSUE SEND               +\n               QUALIFY=DATA,                                           +\n               RPL=(R8),                                               +\n               AREA=(R6),                                              +\n               RECLEN=(R2),                                            +\n               ECB=USER_NETWORK_ECB,                                   +\n               CONMODE=CS,                                             +\n               CONVID=USER_CONVERSATION_ID,                            +\n               OPTCD=ASY\n         ITRACE ID=WAIT\n         WAIT  1,ECBLIST=DXD_WAIT\n         ITRACE ID=WOKEUP2\n         TM    COMM_EOJ_PHASE,$EOJ1           EOJ SIGNALLED?\n         BO    TERM0000                       YES\n         APPCCMD CONTROL=CHECK,RPL=(R8)\n         L     R14,DXD_LINK\n         NI    USER_STATUS,255-$USERSND       TURN OFF INDICATOR\n         OI    USER_STATUS,$USERRUN           SET STATUS (RUNNING)\n         OC    RPL6RC,RPL6RC                  SEND SUCCESSFUL?\n         BNZ   ERR0020                        NO\n         TM    USER_WORK_ECB,X'40'            MAIN TASK SIGNALLING?\n         BO    TERM0020                       YES.. SHUTDOWN TIME\n         TM    USER_STATUS,$USERLOS           SESSION LOST?\n         BO    LOSS0000                       YES\n         BR    R14\n*-------------------------------------------------------------------- *\n*        Send data using TCP/IP                                       *\n* ------------------------------------------------------------------- *\nSEND0010 DS    0H\n         ITRACE ID=IP_WRITE,                                           +\n               RDATA1=R6,                                              +\n               RDATA2=R2\n         ST    R2,DXD_WRITE_LENGTH\n         MVC   DXD_TCPIP_FUNCTION,=CL16'WRITE'\n         XC    USER_NETWORK_ECB,USER_NETWORK_ECB\n         EZASMI TYPE=WRITE,                                            +\n               S=USER_SOCKET,                                          +\n               TASK=TCPTASK,                                           +\n               NBYTE=DXD_WRITE_LENGTH,                                 +\n               BUF=NETBLOK,                                            +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +\n               ECB=USER_NETWORK_ECB\n         WAIT  1,ECBLIST=DXD_WAIT\n         TM    COMM_EOJ_PHASE,$EOJ1           EOJ SIGNALLED?\n         BO    TERM0000                       YES\n         NI    USER_STATUS,255-$USERSND       TURN OFF INDICATOR\n         OI    USER_STATUS,$USERRUN           SET STATUS (RUNNING)\n         L     R14,DXD_LINK\n         TM    DXD_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0000\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLOSS0000 DS    0H\n         ITRACE ID=SESSLOST,                                           +\n               DATA1=USER_USER_ID\n         ITRACE ID=RESET\n         MVC   DXD_VTAM_FUNCTION,=CL16'RESETRCV'\n         APPCCMD CONTROL=RESETRCV,                                     +\n               RPL=(R8)\n         APPCCMD CONTROL=CHECK,                                        +\n               RPL=(R8)\n         ITRACE ID=RESETRC,                                            +\n               RDATA1=R15\n         LTR   R15,R15\n         BZ    LOSS0010\n         B     ERR0020\nLOSS0010 DS    0H\n         MVC   PRTMSGID(MSG04L),MSG04\n         MVC   PRTMSGID+(MSG04USR-MSG04)(L'MSG04USR),USER_USER_ID\n         UNPK  PRTMSGID+(MSG04CID-MSG04)(9),USER_CONVERSATION_ID(5)\n         TR    PRTMSGID+(MSG04CID-MSG04)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG04CID-MSG04)+8,C' '\n         BAL   R14,PRT0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ST    R14,DXD_LINK\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE\n         ST    R2,PRTNEXT-PRTBLOK(R1)\n         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP PRINT SUBTASK\n         L     R14,DXD_LINK\n         BR    R14\n* ------------------------------------------------------------------- *\n*        Error routines                                               *\n* ------------------------------------------------------------------- *\nERR0000  DS    0H\n         ITRACE ID=TCP_FAIL,                                           +\n               DATA1=DXD_TCPIP_FUNCTION,                               +\n               DATA2=DXD_TCPIP_ERROR_NUMBER\n         MVC   PRTMSGID(MSG07L),MSG07\n         MVC   PRTMSGID+(MSG07FNC-MSG07)(L'MSG07FNC),DXD_TCPIP_FUNCTION\n         L     R1,DXD_TCPIP_ERROR_NUMBER\n         CVD   R1,COMMDWRD\n         ED    PRTMSGID+(MSG07NBR-MSG07)(L'MSG07NBR),COMMDWRD+5\n         BAL   R14,PRT0000\n         B     EXIT0000\nERR0010  DS    0H\n         ITRACE ID=UNKNWAKE                  WOKE UP FOR UNKNOWN REASON\n         DC    H'0'\nERR0020  DS    0H\n         ITRACE ID=VTAMFAIL,                                           +\n               DATA1=DXD_VTAM_FUNCTION,                                +\n               DATA2=RPL6RC\n         MVC   PRTMSGID(MSG08L),MSG08\n         MVC   PRTMSGID+(MSG08FNC-MSG08)(L'MSG08FNC),DXD_VTAM_FUNCTION\n         UNPK  PRTMSGID+(MSG08CDE-MSG08)(9),RPL6RC(5)\n         TR    PRTMSGID+(MSG08CDE-MSG08)(8),HEXCHAR\n         MVI   PRTMSGID+(MSG08CDE-MSG08)+8,C' '\n         BAL   R14,PRT0000\n         B     EXIT0000\nERR0040  DS    0H\n         ITRACE ID=DUPID                      ALREADY ISSUED 'ID'\n         DC    H'0'\nERR0050  DS    0H\n         ITRACE ID=NOTID                      USER HAS NOT ISSUED 'ID'\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTERM0000 DS    0H\n         ITRACE ID=KILLED\n         MVC   PRTMSGID(MSG06L),MSG06\n         MVC   PRTMSGID+(MSG06USR-MSG06)(L'MSG06USR),USER_USER_ID\n         MVC   PRTMSGID+(MSG06SMF-MSG06)(L'MSG06SMF),USER_SYSTEM_SMF\n         BAL   R14,PRT0000\n         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID\n         BNZ   EXIT0000\nTERM0010 DS    0H\n         ITRACE ID=CLOSE\n         MVC   DXD_TCPIP_FUNCTION,=CL16'CLOSE'\n         EZASMI TYPE=CLOSE,                                            +\n               S=USER_SOCKET,                                          +\n               TASK=TCPTASK,                                           +\n               RETCODE=DXD_TCPIP_RETURN_CODE,                          +\n               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +\n               ECB=USER_NETWORK_ECB\n         WAIT  ECB=USER_NETWORK_ECB\n         MVC   DXD_TCPIP_FUNCTION,=CL16'TERMAPI'\n         EZASMI TYPE=TERMAPI,                                          +\n               TASK=TCPTASK\n         B     EXIT0020\nTERM0020 DS    0H\n         ITRACE ID=SHUTDOWN\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ICM   R1,15,USER_RPL\n         BZ    EXIT0010\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=RPLL\n         XC    USER_RPL,USER_RPL\nEXIT0010 DS    0H\n         ICM   R1,15,USER_RPLX\n         BZ    EXIT0020\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=RPLEXTL\n         XC    USER_RPLX,USER_RPLX\nEXIT0020 DS    0H\n         ITRACE ID=EXIT\n         ICM   R1,15,USER_IO                  I/O AREA ADDRESS\n         BZ    EXIT0030\n         L     R0,IOSIZE                      I/O AREA SIZE\n         FREEMAIN RU,                         FREE THE I/O AREA        +\n               A=(1),                                                  +\n               LV=(0)\n         XC    USER_IO,USER_IO\nEXIT0030 DS    0H\n         ICM   R1,15,USER_AUTH_LIBS           ANY LIBS?\n         BZ    EXIT0050                       NO\nEXIT0040 DS    0H\n         L     R2,0(R1)\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=12\n         LTR   R2,R2\n         BNZ   EXIT0040\nEXIT0050 DS    0H\n         POST  COMM_ATTN_ECB                  WAKE UP MAIN TASK\n         L     R1,USER_DXD                    WORK AREA ADDRESS\n         L     R0,DXDSIZE\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE THE I/O AREA        +\n               A=(1),                                                  +\n               LV=(0)\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        ALWAYS A GOOD RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*-------------------------------------------------------------------- *\nDXDSIZE  CXD\nDXDSTART DC    Q(DXDUMAIN)\n\nV_USUBADMN     DC V(USUBADMN)\nV_USUBCKIN     DC V(USUBCKIN)\nV_USUBCKOT     DC V(USUBCKOT)\nV_USUBDEL      DC V(USUBDEL)\nV_USUBDQL      DC V(USUBDQL)\nV_USUBGMD      DC V(USUBGMD)\nV_USUBJOB      DC V(USUBJOB)\nV_USUBLIBS     DC V(USUBLIBS)\nV_USUBMEMS     DC V(USUBMEMS)\nV_USUBNQL      DC V(USUBNQL)\nV_USUBSTAT     DC V(USUBSTAT)\nV_USUBUMD      DC V(USUBUMD)\nV_USUBUNDO     DC V(USUBUNDO)\nV_USUBVER      DC V(USUBVER)\nV_USUBVIEW     DC V(USUBVIEW)\n\nIOSIZE   DC    A(COMMIOSZ)\n\nHEXCHAR  EQU   *-C'0'\n         DC    C'0123456789ABCDEF'\n\nCID      DC    CL3'CID'\nIP       DC    CL3'IP'\nMSG01    DC    C'USUBMAIN01I USER subtask initialized for '\nMSG01TYP DC    CL3' '\nMSG01ADR DC    CL15' '\n         DC    C' '\nMSG01L   EQU   *-MSG01\nMSG02    DC    C'USUBMAIN02I Internal error, invalid function received'\nMSG02L   EQU   *-MSG02\nMSG03    DC    C'USUBMAIN03I User '\nMSG03USR DC    CL8' '\n         DC    C' on system '\nMSG03SMF DC    CL4' '\n         DC    C' with JOB name '\nMSG03JOB DC    CL8' '\n         DC    C' using LU '\nMSG03LU  DC    CL8' '\n         DC    C'  CID '\nMSG03CID DC    CL8' '\n         DC    C' '\nMSG03L   EQU   *-MSG03\nMSG04    DS    0C\n         DC    C'USUBMAIN04I Session lost with user '\nMSG04USR DC    Cl8'  '\n         DC    C', CID '\nMSG04CID DC    CL8' '\n         DC    C', subtask terminating'\nMSG04L   EQU   *-MSG04\nMSG05    DC    C'USUBMAIN05I User '\nMSG05USR DC    CL8' '\n         DC    C'on system '\nMSG05SMF DC    CL4' '\n         DC    C' with JOB name '\nMSG05JOB DC    CL8' '\n         DC    C' connected using IP addr '\nMSG05IP  DC    CL15' '\n         DC    C' '\nMSG05L   EQU   *-MSG05\nMSG06    DC    C'USUBMAIN06W User subtask for '\nMSG06USR DC    CL8' '\n         DC    C'on system '\nMSG06SMF DC    CL4' '\n         DC    C' killed by console command'\nMSG06L   EQU   *-MSG06\nMSG07    DS    0C\n         DC    C'USUBMAIN07E TCP/IP function '\nMSG07FNC DC    CL16' '\n         DC    C' failed, error number='\nMSG07NBR DC    X'402020202120'\nMSG07L   EQU   *-MSG07\nMSG08    DS    0C\n         DC    C'USUBMAIN08E VTAM function '\nMSG08FNC DC    CL16' '\n         DC    C' failed, RPL FDBK='\nMSG08CDE DC    CL8' '\n         DC    C' '\nMSG08L   EQU   *-MSG08\n\nRPLI     RPL   AM=VTAM,AAREA=RPLEXTI\nRPLL     EQU   *-RPLI\nRPLEXTI  ISTRPL6\nRPLEXTL  EQU   *-RPLEXTI\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDUMAIN                DSECT\n                        LIBSAVE DSECT=NO\n\nDXD_SUB_EP              DS     F\n\nDXD_LINK                DS     A\n\nDXD_WAIT                DS     0F\nDXD_ECB1                DS     F\nDXD_ECB2                DS     F\nDXD_BAD                 DS     F\n\nDXD_WRITE_LENGTH        DS     F\n\nDXD_TCPIP_ERROR_NUMBER  DS     F\nDXD_TCPIP_RETURN_CODE   DS     F\n\nDXD_MAX_SOCKET          DS     H\n\nDXD_TCPIP_FUNCTION      DS     CL16\nDXD_VTAM_FUNCTION       DS     CL16\n\n                        CLIENT  PREFIX=DXD\n\n                        PRTBLOK DSECT=NO\n\nTCPTASK                 EZASMI  TYPE=TASK,STORAGE=CSECT\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 XUSRBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 NETBLOK  DSECT=YES\nNET_SMF          DS       CL4\nNET_USER         DS       CL8\nNET_JOB          DS       CL8\nNET_SYSTEM_NAME  DS       CL20\nNET_USER_NAME    DS       CL20\n$NET_IDENTIFY_LENGTH      EQU *-NETBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGRPL AM=VTAM\n         IFGACB AM=VTAM\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  USUBMAIN\n./ ADD NAME=USUBMEMS 0100-09250-09250-0919-00254-00254-00000-SOURCE\n         TITLE 'USUBMEMS  Return the members in a specified library'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBMEMS                                              *\n*                                                                     *\n*   Return the names of the members of a library.                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBMEMS CSECT\nUSUBMEMS AMODE 31\nUSUBMEMS RMODE ANY\n         USING PSA,R0\n         USING USUBMEMS,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBMEMS'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         L     R1,USER_DXD                    WORK AREA ADDRESS\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDUMEMS,R13                   DEFINE BASE\n         CLC   DXDID,MODID                    AREA INITIALIZED?\n         BE    MEMS0010                       YES\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   DXD_RPL(RPLL),RPLI\n         XC    DXD_LIBBLOK_ADDR,DXD_LIBBLOK_ADDR\n         MVI   DXD_FLAGS,0                    CLEAR ALL FLAGS\nMEMS0010 DS    0H\n         ITRACE ID=ENTRY\n         L     R9,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         L     R8,USER_RPL                    RPL ADDRESS\n         USING IFGRPL,R8\n         L     R7,USER_RPLX                   RPL EXTENSION ADDRESS\n         USING ISTRPL6X,R7\n         MVI   NET_RETURN_CODE,$NET_OK\n         MVC   DXD_LIBRARY_NAME,NET_LIBRARY_NAME\n         LA    R1,NET_MSG_1                   FIRST MESSAGE\n         LA    R2,5                           NUMBER OF MESSAGES\nMEMS0020 DS    0H\n         MVC   0(L'NET_MSG_1,R1),COMM_BLANKS\n         LA    R1,L'NET_MSG_1(R1)\n         BCT   R2,MEMS0020\n         ITRACE ID=LIBRARY,                                            +\n               DATA1=DXD_LIBRARY_NAME\n         L     R6,DXD_LIBBLOK_ADDR            LIBRARY BLOCK ADDRESS\n         TM    DXD_FLAGS,$CONTINUE            CONTINUE'ING?\n         BO    MEMS0060                       YES\n         ITRACE ID=NEW\n         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         USING LIBBLOK,R6                     DEFINE BASE\n         BZ    MEMS0040\nMEMS0030 DS    0H\n         ITRACE ID=FINDLIB,                                            +\n               DATA1=LIB_NAME\n         CLC   DXD_LIBRARY_NAME,LIB_NAME\n         BE    MEMS0050\n         ICM   R6,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   MEMS0030\nMEMS0040 DS    0H\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(EMSG01L),EMSG01\n         MVC   NET_MSG_1+(EMSG01_LIBRARY-EMSG01)(L'EMSG01_LIBRARY),DXD_+\n               LIBRARY_NAME\n         B     EXIT0000                       EXIT\nMEMS0050 DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               RDATA1=R6\n         ST    R6,DXD_LIBBLOK_ADDR            SAVE ADDRESS\n* ------------------------------------------------------------------- *\n*     Verify that the library is OPEN.                                *\n* ------------------------------------------------------------------- *\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BNO   ERR0010                        NO\n         LA    R2,DXD_RPL                     OUR RPL ADDRESS\n         LA    R3,LIB_ACB                     ACB IN LIBBLOK\n         LA    R4,DXD_IO                      OUR I/O AREA ADDRESS\n         LA    R5,LIB_KEY                     RECORD KEY\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R5),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,NSP)\n         XC    LIB_KEY,LIB_KEY\n         MVI   LIB_KEY_SEQ+3,X'01'\n         ITRACE ID=1STREAD\n         BAL   R4,READ0000\n         MODCB RPL=(R2),                                               +\n               ARG=0,                                                  +\n               KEYLEN=0,                                               +\n               OPTCD=(SEQ,SYN,MVE)\nMEMS0060 DS    0H\n         ITRACE ID=BUILD\n         NI    DXD_FLAGS,255-$CONTINUE        RESET FLAG\n         LA    R5,MAX_PER_BUFFER              MAXIMUM MEMBERS/BUFFER\n         LA    R2,NET_MEMBERS                 I/O AREA ADDRESS\n         LA    R3,NETBLOKL                    PREFIX LENGTH\n         STH   R3,NET_LENGTH                  SET LENGTH\nMEMS0070 DS    0H\n         ITRACE ID=READNEXT\n         BAL   R4,READ0000                    READ A RECORD\n         OC    DXD_VSAM_RC,DXD_VSAM_RC\n         BNZ   MEMS0080\n         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         BH    MEMS0080                       BEYOND INDEX RECORDS\n         CLC   LIB_KEY_SEQ,F1                 BASE INDEX RECORD?\n         BNE   MEMS0070                       NO\n         ITRACE ID=BUILDMEM,                                           +\n               DATA1=LIB_KEY_NAME\n         MVC   0(LIB_INDEX_RECORD_LENGTH,R2),LIB_RECORD\n         LA    R2,LIB_INDEX_RECORD_LENGTH(R2)\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,NET_LENGTH                LENGTH OF DATA\n         LA    R1,LIB_INDEX_RECORD_LENGTH(R1)\n         STCM  R1,3,NET_LENGTH                SET UPDATED LENGTH\n         BCT   R5,MEMS0070\n         MVI   NET_RETURN_CODE,$NET_OK\n         OI    DXD_FLAGS,$CONTINUE            SET 'RETURN' FLAG\n         B     EXIT0000\nMEMS0080 DS    0H\n         ITRACE ID=EOF\n         MVI   NET_RETURN_CODE,$NET_EOF\n         ITRACE ID=ENDREQ\n         ENDREQ RPL=DXD_RPL\n         ITRACE ID=ENDREQRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         ITRACE ID=READ,                                               +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         GET   RPL=DXD_RPL                    READ NEXT RECORD\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         ITRACE ID=DATAREAD,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=CLOSED\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(EMSG02L),EMSG02\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT                      EXITING\n         LR    R1,R13                        COPY WORK AREA ADDRESS\n         L     R13,4(R13)                    RESTORE REGISTER 13        ASE01670\n         LM    R14,R12,12(R13)               RESTORE OTHER REGISTERS    ASE01680\n         SR    R15,R15                       GIVE GOOD RETURN CODE      ASE01690\n         BR    R14                           RETURN TO CALLER           ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDSTART       DC    Q(DXDUMEMS)\nF1             DC    F'1'\n\nRPLI           RPL   AM=VTAM\nRPLL           EQU   *-RPLI\n\nEMSG01         DS    0C\n               DC    C'USUBMEMS01E Library '\nEMSG01_LIBRARY DC    CL40' '\n               DC    C' not found'\nEMSG01L        EQU   *-EMSG01\nEMSG02         DS    0C\n               DC    C'USUBMEMS02E Library is closed'\nEMSG02L        EQU   *-EMSG02\n\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUMEMS          DSECT\n                  LIBSAVE DSECT=NO\nDXD_RPL           DS   0F,(RPLL)X\nDXD_LIBBLOK_ADDR  DS   A\nDXD_VSAM_RC       DS   F\nDXD_LIBRARY_NAME  DS   CL8\n\nDXD_FLAGS         DS   X\n$CONTINUE         EQU  X'80'\n\nDXD_IO            DS   0F,($MAX_SOURCE_SIZE*2)X\n                  ORG  DXD_IO\n                  LIBRECD DSECT=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         LIBUSER  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         NETBLOK  DSECT=YES\nNET_LIBRARY_NAME  DS   CL8\n                  ORG  NET_DATA\nNET_MEMBERS       DS   0C\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n$MAX_SOURCE_SIZE EQU 8000\nMAX_PER_BUFFER EQU ($MAX_SOURCE_SIZE-NETBLOKL)/LIB_INDEX_RECORD_LENGTH\n         COPY REGEQU\n         END  USUBMEMS\n./ ADD NAME=USUBNQL  0100-09250-09250-0919-00117-00117-00000-SOURCE\n         TITLE 'USUBNQL  Enqueue a library'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBNQL                                               *\n*                                                                     *\n*   We need to know who is using which library and we don't want      *\n*   to close a library while it is in use.  When a user begins        *\n*   accessing a library, the user interface will issue a \"enqueue\"    *\n*   for the library.  When the user ends their session or chamges     *\n*   libraries, the user interface will issue a \"dequeue\".             *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBNQL  CSECT\nUSUBNQL  AMODE 31\nUSUBNQL  RMODE ANY\n         USING PSA,R0\n         USING USUBNQL,R12                    DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBNQL'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         L     R1,USER_DXD                    WORK AREA BASE ADDRESS\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDUNQL,R13                    DEFINE BASE\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         L     R9,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         L     R8,USER_RPL                    RPL ADDRESS\n         USING IFGRPL,R8\n         L     R7,USER_RPLX                   RPL EXTENSION ADDRESS\n         USING ISTRPL6X,R7\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_ADD_USER\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         MVC   LIB_FUNCTION_LIB_NAME,NET_LIBRARY_NAME\n         ST    R10,LIB_FUNCTION_USER           OUR USERBLOK ADDRESS\n         LA    R1,LIBFUNC                      PARM BLOCK ADDRESS\nNQL0010  DS    0H\n         L     R2,COMM_LSUB_REQ                FIRST REQUEST ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT            CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ             ADD OURS TO CHAIN\n         BC    4,NQL0010                       TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB              WAKE UP LIBRARY SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB\n         CLI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK\n         BE    NQL0020                         YES\n         ITRACE ID=ENQFAIL\n         MVC   NET_MSG_1,LIB_FUNCTION_MESSAGE\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         B     EXIT0000                        EXIT\nNQL0020  DS    0H\n         ITRACE ID=ENQOK\n         MVI   NET_RETURN_CODE,$NET_OK\n         MVC   USER_LIBRARY,NET_LIBRARY_NAME\nEXIT0000 DS    0H\n         ITRACE ID=EXIT                        EXITING\n         LR    R1,R13                          COPY WORK AREA ADDRESS\n         L     R13,4(R13)                      RESTORE REGISTER 13      ASE01670\n         LM    R14,R12,12(R13)                 RESTORE OTHER REGISTERS  ASE01680\n         SR    R15,R15                         GIVE GOOD RETURN CODE    ASE01690\n         BR    R14                             RETURN TO CALLER         ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDSTART DC   Q(DXDUNQL)\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUNQL  DSECT\n         LIBSAVE  DSECT=NO\n         LIBFUNC  DSECT=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         NETBLOK  DSECT=YES\nNET_LIBRARY_NAME        DS   CL8\nNET_LIBRARY_LENGTH      EQU  *-NET_LIBRARY_NAME\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         COPY REGEQU\n         END  USUBNQL\n./ ADD NAME=USUBSTAT 0100-09250-09250-0919-00396-00396-00000-SOURCE\n         TITLE 'USUBSTAT  Return the status of the LIBRARIAN STC'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBSTAT                                              *\n*                                                                     *\n*   Returns the users logged-in, status of the libraries, status      *\n*   of the LIBRARIAN subtasks.                                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBSTAT CSECT\nUSUBSTAT AMODE 31\nUSUBSTAT RMODE ANY\n         USING PSA,R0\n         USING USUBSTAT,R12                   DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBSTAT'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         L     R1,USER_DXD                    WORK AREA BASE ADDRESS\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDUSTAT,R13                   DEFINE BASE\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         ITRACE ID=ENTRY\n         MVI   DXD_FLAG,0                     RESET FLAGS\n         L     R9,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         MVI   NET_RETURN_CODE,$NET_OK\n         LA    R8,NET_DATA\n         LA    R5,($MAX_SOURCE_SIZE-NETBLOKL)/80 MAX DETAIL LINES\n         LA    R4,NETBLOKL                    INITIALIZE LENGTH\n         MVI   NET_RETURN_CODE,$NET_OK\n         MVC   DXD_ENQ(ENQL),ENQI\n         ENQ   MF=(E,DXD_ENQ)\n         OI    DXD_FLAG,$ENQ                  SET FLAG\n         ICM   R3,15,COMM_USER_CHAIN          FIRST LOGGED-IN USER\n         BZ    LIB0000                        EXIT\nSTAT     USING USERBLOK,R3                    DEFINE NAMED BASE\n         USING USER_DETAIL,R8                 DEFINE BASE\n         MVC   0(80,R8),COMM_BLANKS\n         OC    STAT.USER_CONVERSATION_ID,STAT.USER_CONVERSATION_ID\n         BZ    STAT0010\n         MVC   0(USER_HEADING_V_L,R8),USER_HEADING_V\n         B     STAT0020\nSTAT0010 DS    0H\n         MVC   0(USER_HEADING_I_L,R8),USER_HEADING_I\nSTAT0020 DS    0H\n         LA    R8,80(R8)\n         LA    R4,80(R4)\n         BCTR  R5,R0                          MINUS 1\nSTAT0030 DS    0H\n         MVC   0(80,R8),COMM_BLANKS\n         MVC   USER_DETAIL_USER,STAT.USER_USER_ID\n         ZAP   DXD_DATE,STAT.USER_DATE\n         AP    DXD_DATE,P1900000\n         MVC   USER_DETAIL_DATE,=X'40202020214B202020'\n         ED    USER_DETAIL_DATE,DXD_DATE\n         UNPK  DXD_UNPACK(7),STAT.USER_TIME(4)\n         TR    DXD_UNPACK,HEXCHAR\n         MVC   USER_DETAIL_TIME+0(2),DXD_UNPACK+0\n         MVC   USER_DETAIL_TIME+3(2),DXD_UNPACK+2\n         MVC   USER_DETAIL_TIME+6(2),DXD_UNPACK+4\n         MVI   USER_DETAIL_TIME+2,C':'\n         MVI   USER_DETAIL_TIME+5,C':'\n         UNPK  DXD_UNPACK(9),STAT.USER_TERMINATION_ECB(5)\n         TR    DXD_UNPACK,HEXCHAR\n         MVC   USER_DETAIL_ECB,DXD_UNPACK\n         OC    STAT.USER_CONVERSATION_ID,STAT.USER_CONVERSATION_ID\n         BZ    STAT0040\n         MVC   USER_DETAIL_LU,STAT.USER_PARTNER_LU\n         UNPK  DXD_UNPACK(9),STAT.USER_CONVERSATION_ID(5)\n         TR    DXD_UNPACK,HEXCHAR\n         MVC   USER_DETAIL_CID,DXD_UNPACK\n         B     STAT0050\nSTAT0040 DS    0H\n         MVC   USER_DETAIL_IP_ADDR,USER_IP_ADDRESS\nSTAT0050 DS    0H\n         MVC   USER_DETAIL_LIB,STAT.USER_LIBRARY\n         L     R1,STAT.USER_IO\n         LA    R14,FUNCTION_TABLE\nSTAT0060 DS    0H\n         CLI   0(R14),X'FF'                   END OF TABLE?\n         BE    STAT0070                       YES\n         CLC   0(1,R14),NET_FUNCTION-NETBLOK(R1)\n         BE    STAT0070\n         LA    R14,17(R14)\n         B     STAT0060\nSTAT0070 DS    0H\n         MVC   USER_DETAIL_FUNCTION,1(R14)\n         LA    R4,80(R4)\n         LA    R8,80(R8)\n         BCT   R5,STAT0080\n         B     EXIT0000\nSTAT0080 DS    0H\n         ICM   R3,15,STAT.USER_NEXT\n         BNZ   STAT0030\n         DROP  STAT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nLIB0000  DS    0H\n         ICM   R3,15,COMM_LIBRARY_CHAIN\n         BZ    EXIT0000\nLIB0010  DS    0H\n         MVC   0(80,R8),COMM_BLANKS\n         LA    R4,80(R4)\n         LA    R8,80(R8)\n         BCT   R5,LIB0020\nLIB0020  DS    0H\nLIB      USING LIBBLOK,R3\n         MVC   0(80,R8),COMM_BLANKS\n         MVC   0(LIB_1_LENGTH,R8),LIB_1\n         MVC   LIB_1_LIB-LIB_1(L'LIB_1_LIB,R8),LIB.LIB_NAME\n         MVC   LIB_1_DESC-LIB_1(L'LIB_1_DESC,R8),LIB.LIB_DESCRIPTION\n         LA    R4,80(R4)\n         LA    R8,80(R8)\n         BCT   R5,LIB0030\n         B     EXIT0000\nLIB0030  DS    0H\n         MVC   0(80,R8),COMM_BLANKS\n         MVC   0(LIB_2_LENGTH,R8),LIB_2\n         TM    LIB.LIB_STATUS,$LIB_OPEN\n         BO    LIB0040\n         MVC   LIB_2_STATUS-LIB_2(L'LIB_2_STATUS,R8),STATUS_CLOSED\n         B     LIB0050\nLIB0040  DS    0H\n         MVC   LIB_2_STATUS-LIB_2(L'LIB_2_STATUS,R8),STATUS_OPEN\nLIB0050  DS    0H\n         MVC   LIB_2_DSN-LIB_2(L'LIB_2_DSN,R8),LIB.LIB_VSAM_DSN\n         LA    R4,80(R4)\n         LA    R8,80(R8)\n         BCT   R5,LIB0060\n         B     EXIT0000\nLIB0060  DS    0H\n         MVC   0(80,R8),COMM_BLANKS\n         MVC   0(LIB_3_LENGTH,R8),LIB_3\n         L     R1,LIB.LIB_READS\n         CVD   R1,DXD_DWORD\n         ED    LIB_3_READS-LIB_3(L'LIB_3_READS,R8),DXD_DWORD+4\n         L     R1,LIB.LIB_WRITES\n         CVD   R1,DXD_DWORD\n         ED    LIB_3_WRITES-LIB_3(L'LIB_3_WRITES,R8),DXD_DWORD+4\n         L     R1,LIB.LIB_erasES\n         CVD   R1,DXD_DWORD\n         ED    LIB_3_ERASES-LIB_3(L'LIB_3_ERASES,R8),DXD_DWORD+4\n         LA    R4,80(R4)\n         LA    R8,80(R8)\n         BCT   R5,LIB0070\n         B     EXIT0000\nLIB0070  DS    0H\n         MVC   0(80,R8),COMM_BLANKS\n         MVC   0(LIB_4_LENGTH,R8),LIB_4\n         L     R1,LIB.LIB_CHECK_IN\n         CVD   R1,DXD_DWORD\n         ED    LIB_4_CHECK_IN-LIB_4(L'LIB_4_CHECK_IN,R8),DXD_DWORD+4\n         L     R1,LIB.LIB_CHECK_OUT\n         CVD   R1,DXD_DWORD\n         ED    LIB_4_CHECK_OUT-LIB_4(L'LIB_4_CHECK_OUT,R8),DXD_DWORD+4\n         L     R1,LIB.LIB_NEW\n         CVD   R1,DXD_DWORD\n         ED    LIB_4_NEW-LIB_4(L'LIB_4_NEW,R8),DXD_DWORD+4\n         LA    R4,80(R4)\n         LA    R8,80(R8)\n         BCT   R5,LIB0080\nLIB0080  DS    0H\n         MVC   0(80,R8),COMM_BLANKS\n         MVC   0(LIB_5_LENGTH,R8),LIB_5\n         L     R1,LIB.LIB_VIEW\n         CVD   R1,DXD_DWORD\n         ED    LIB_5_VIEW-LIB_5(L'LIB_5_VIEW,R8),DXD_DWORD+4\n         L     R1,LIB.LIB_UPDATE\n         CVD   R1,DXD_DWORD\n         ED    LIB_5_UPDATE-LIB_5(L'LIB_5_UPDATE,R8),DXD_DWORD+4\n         L     R1,LIB.LIB_DELETE\n         CVD   R1,DXD_DWORD\n         ED    LIB_5_DELETE-LIB_5(L'LIB_5_DELETE,R8),DXD_DWORD+4\n         LA    R4,80(R4)\n         LA    R8,80(R8)\n         BCT   R5,LIB0090\n         B     EXIT0000\nLIB0090  DS    0H\n         ICM   R3,15,LIB.LIB_NEXT\n         BNZ   LIB0010\n         DROP  LIB\n\nEXIT0000 DS    0H\n         STCM  R4,3,NET_LENGTH                SET LENGTH\n         TM    DXD_FLAG,$ENQ                  ENQ SET?\n         BNO   EXIT0010                       NO\n         MVC   DXD_ENQ(ENQL),ENQI\n         DEQ   MF=(E,DXD_ENQ)\n         NI    DXD_FLAG,255-$ENQ\nEXIT0010 DS    0H\n         ITRACE ID=EXIT                       EXITING MODULE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDSTART       DC    Q(DXDUSTAT)\nENQI           ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L\nENQL           EQU   *-ENQI\nQNAME          DC    CL8'LIB'\nRNAME          DC    CL8'COMMUSER'\nP1900000       DC    P'1900000'\n\nHEXCHAR        EQU   *-C'0'\n               DC    C'0123456789ABCDEF'\n\nSTATUS_OPEN    DC    CL7'OPEN'\nSTATUS_CLOSED  DC    CL7'CLOSED'\n\nUSER_HEADING_V DS    0C\n               DC    CL8'User'\n               DC    C' '\n               DC    CL17'Log in date  time'\n               DC    C' '\n               DC    CL8'Term ECB'\n               DC    C' '\n               DC    CL8'LU name'\n               DC    C' '\n               DC    CL8'  CID'\n               DC    C' '\n               DC    CL8'Library'\n               DC    C' '\n               DC    CL16'Last function'\nUSER_HEADING_V_L EQU   *-USER_HEADING_V\nUSER_HEADING_I DS    0C\n               DC    CL8'User'\n               DC    C' '\n               DC    CL17'Log in date  time'\n               DC    C' '\n               DC    CL8'Term ECB'\n               DC    C' '\n               DC    CL17' IP Address'\n               DC    C' '\n               DC    CL8'Library'\n               DC    C' '\n               DC    CL16'Last function'\nUSER_HEADING_I_L EQU   *-USER_HEADING_I\n\nLIB_1          DS    0C\n               DC    C'Library: '\nLIB_1_LIB      DC    CL8' '\n               DC    C'  Desc: '\nLIB_1_DESC     DC    CL50' '\nLIB_1_LENGTH   EQU   *-LIB_1\n\nLIB_2          DS    0C\n               DC    C'Status: '\nLIB_2_STATUS   DC    CL7' '\n               DC    C'    DSN: '\nLIB_2_DSN      DC    CL44' '\nLIB_2_LENGTH   EQU   *-LIB_2\n\nLIB_3          DS    0C\n               DC    CL10'Reads:'\nLIB_3_READS    DC    X'40206B2020206B202120'\n               DC    CL5' '\n               DC    CL10'Writes:'\nLIB_3_WRITES   DC    X'40206B2020206B202120'\n               DC    CL5' '\n               DC    CL10'Erases:'\nLIB_3_ERASES   DC    X'40206B2020206B202120'\nLIB_3_LENGTH   EQU   *-LIB_3\n\nLIB_4          DS    0C\n               DC    CL10'Check in:'\nLIB_4_CHECK_IN DC    X'40206B2020206B202120'\n               DC    CL5' '\n               DC    CL10'Check out:'\nLIB_4_CHECK_OUT DC   X'40206B2020206B202120'\n               DC    CL5' '\n               DC    CL10'New:'\nLIB_4_NEW      DC    X'40206B2020206B202120'\nLIB_4_LENGTH   EQU   *-LIB_4\n\nLIB_5          DS    0C\n               DC    CL10'View:'\nLIB_5_VIEW     DC    X'40206B2020206B202120'\n               DC    CL5' '\n               DC    CL10'Update:'\nLIB_5_UPDATE   DC    X'40206B2020206B202120'\n               DC    CL5' '\n               DC    CL10'Delete:'\nLIB_5_DELETE   DC    X'40206B2020206B202120'\nLIB_5_LENGTH   EQU   *-LIB_5\n\nFUNCTION_TABLE DS 0C\n         DC   AL1($NET_IDENTIFY_USER),CL16'Identify user'\n         DC   AL1($NET_GET_LIBS),CL16'Get libraries'\n         DC   AL1($NET_GET_MEMBERS),CL16'Get members'\n         DC   AL1($NET_CHECK_IN_AUTH),CL16'Check in auth'\n         DC   AL1($NET_CHECK_IN_SOURCE),CL16'Check in source'\n         DC   AL1($NET_CHECK_NEW_AUTH),CL16'Check new auth'\n         DC   AL1($NET_CHECK_OUT_AUTH),CL16'Check out auth'\n         DC   AL1($NET_CHECK_OUT_SOURCE),CL16'Check out source'\n         DC   AL1($NET_CHECK_VIEW_AUTH),CL16'Check view auth'\n         DC   AL1($NET_VIEW_SOURCE),CL16'View source'\n         DC   AL1($NET_CHECK_DESC_AUTH),CL16'Check desc auth'\n         DC   AL1($NET_SEND_DESC),CL16'Send description'\n         DC   AL1($NET_GET_DESC),CL16'Get description'\n         DC   AL1($NET_GET_RECORDS),CL16'Get records'\n         DC   AL1($NET_SEND_RECORDS),CL16'Send records'\n         DC   AL1($NET_ENQUE_LIB),CL16'Enqueue a lib'\n         DC   AL1($NET_DEQ_LIB),CL16'Dequeue a lib'\n         DC   AL1($NET_CHECK_DEL_AUTH),CL16'Delete a member'\n         DC   AL1($NET_CONFIRM_CHECK_OUT),CL16'Confirm check out'\n         DC   AL1($NET_ABORT_CHECK_OUT),CL16'Abort check out'\n         DC   AL1($NET_GET_STATUS),CL16'Get STC status'\n         DC   AL1($NET_CHECK_IN_AUTH),CL16'Check ADMIN auth'\n         DC   AL1($NET_SEND_ADMIN),CL16'Send ADMIN'\n         DC   AL1($NET_CLOSE),CL16'Close'\n         DC   AL1($NET_UNDO),CL16'Undo'\n         DC   X'FF',CL16'Unknown'\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUSTAT   DSECT\n           LIBSAVE DSECT=NO\nDXD_DWORD  DS      D\nDXD_ENQ    DS      0F,(ENQL)X\nDXD_DATE   DS      PL4\nDXD_UNPACK DS      XL10\nDXD_FLAG   DS      X\n$ENQ       EQU     X'80'\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nUSER_DETAIL          DSECT\nUSER_DETAIL_USER     DS  CL8\n                     DS  X\nUSER_DETAIL_DATE     DS  CL8\n                     DS  X\nUSER_DETAIL_TIME     DS  CL8\n                     DS  X\nUSER_DETAIL_ECB      DS  CL8\n                     DS  X\nUSER_DETAIL_LU       DS  CL8\n                     DS  X\nUSER_DETAIL_CID      DS  CL8\n                     ORG USER_DETAIL_LU\nUSER_DETAIL_IP_ADDR  DS  CL15\n                     ORG\n                     DS  X\nUSER_DETAIL_LIB      DS  CL8\n                     DS  X\nUSER_DETAIL_FUNCTION DS  CL16\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         NETBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         COPY REGEQU\n$MAX_SOURCE_SIZE EQU 8000\n         END  USUBSTAT\n./ ADD NAME=USUBUMD  0100-09250-09250-0919-00338-00338-00000-SOURCE\n         TITLE 'USUBUMD  Update member documentation data'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBUMD                                               *\n*                                                                     *\n*   Update member documentation data                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBUMD  CSECT\nUSUBUMD  AMODE 31\nUSUBUMD  RMODE ANY\n         USING PSA,R0\n         USING USUBUMD,R12                    DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBUMD'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         L     R1,USER_DXD                    WORK AREA ADDRESS\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDUUMD,R13                    DEFINE BASE\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         MVC   DXD_RPL(RPLL),RPLI\n         XC    DXD_LIBBLOK_ADDR,DXD_LIBBLOK_ADDR\nDOC0010  DS    0H\n         ITRACE ID=ENTRY\n         L     R9,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R9                     DEFINE BASE\n         L     R8,USER_RPL                    RPL ADDRESS\n         USING IFGRPL,R8\n         L     R7,USER_RPLX                   RPL EXTENSION ADDRESS\n         USING ISTRPL6X,R7\n         MVI   NET_RETURN_CODE,$NET_OK\n         MVC   DXD_LIBRARY_NAME,NET_LIBRARY_NAME\n         MVC   DXD_MEM_NAME,NET_MEM_NAME\n         MVC   DXD_MEM_VER,NET_MEM_VER\n         LA    R1,NET_MSG_1                   FIRST MESSAGE\n         LA    R2,5                           NUMBER OF MESSAGES\nDOC0020  DS    0H\n         MVC   0(L'NET_MSG_1,R1),COMM_BLANKS\n         LA    R1,L'NET_MSG_1(R1)\n         BCT   R2,DOC0020\n         ITRACE ID=LIBRARY,                                            +\n               DATA1=DXD_LIBRARY_NAME\n         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY\n         USING LIBBLOK,R6                     DEFINE BASE\n         BZ    DOC0040\nDOC0030  DS    0H\n         ITRACE ID=FINDLIB,                                            +\n               DATA1=LIB_NAME\n         CLC   DXD_LIBRARY_NAME,LIB_NAME\n         BE    DOC0050\n         ICM   R6,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   DOC0030\nDOC0040  DS    0H\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(EMSG01L),EMSG01\n         MVC   NET_MSG_1+(EMSG01_LIBRARY-EMSG01)(L'EMSG01_LIBRARY),DXD_+\n               LIBRARY_NAME\n         B     EXIT0000                       EXIT\nDOC0050  DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               RDATA1=R6\n         ST    R6,DXD_LIBBLOK_ADDR            SAVE LIBBLOK ADDRESS\n* ------------------------------------------------------------------- *\n*     Verify that the library is OPEN.                                *\n* ------------------------------------------------------------------- *\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BNO   ERR0010                        NO\n* ------------------------------------------------------------------- *\n*     Delete the existing documentation/comments                      *\n* ------------------------------------------------------------------- *\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,DXD_MEM_NAME\n         MVC   LIB_KEY_VERSION,DXD_MEM_VER\n         MVC   LIB_KEY_SEQ,F1                 INIT SEQUENCE NUMBER\n         ITRACE ID=DELDOC                     DELETE THE EXISTING DOC\nDOC0060  DS    0H\n         BAL   R4,READ0000                    READ WITH UPDATE\n         CLI   DXD_VSAM_RC+3,X'00'            FOUND?\n         BNE   DOC0070                        NO\n         BAL   R4,ERASE000                    DELETE THE RECORD\n         B     DOC0060\nDOC0070  DS    0H\n         ITRACE ID=DELDONE\n         BAL   R4,CLOSET00                    ISSUE CLOSET\n* ------------------------------------------------------------------- *\n*     Write the new documentation/comments                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=NEWDOC\n         LA    R1,NET_MEM_DOC-NETBLOK\n         LA    R2,NET_MEM_DOC\n         LH    R3,NET_LENGTH                  LENGTH OF DATA\n         SH    R3,=Y(NET_MEM_DOC-NETBLOK)\n         ITRACE ID=DOC_LEN,                                            +\n               RDATA1=R3\n         LTR   R3,R3\n         BZ    DOC0090                        NO DATA\n         MVC   LIB_KEY_SEQ,F1\nDOC0080  DS    0H\n         MVC   LIB_DATA,0(R2)                 COPY DATA\n         BAL   R4,PUT0000                     WRITE THE RECORD\n         LA    R2,L'LIB_DATA(R2)              NEXT IN I/O BUFFER\n         SH    R3,=Y(L'LIB_DATA)              MINUS LENGTH USED\n         BNZ   DOC0080\nDOC0090  DS    0H\n         ITRACE ID=DONE\n         BAL   R4,CLOSET00                    ISSUE A CLOSET\n         LA    R1,NETBLOKL\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         MVI   NET_RETURN_CODE,$NET_OK        SET RETURN CODE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ICM   R1,15,LIB_KEY_SEQ\n         LA    R1,1(R1)                       PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ\n         ITRACE ID=READUPDT,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPUT0000  DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ICM   R1,15,LIB_KEY_SEQ\n         LA    R1,1(R1)                       PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ\n         ITRACE ID=PUT,                                                +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_WRITES                  NUMBER OF WRITES\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_WRITES                  SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         LA    R5,LIB_INDEX_RECORD_LENGTH\n         MVC   0(RPLL,R2),RPLI\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               RECLEN=(R5),                                            +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         PUT   RPL=DXD_RPL\n         ST    R15,DXD_VSAM_RC\n         ITRACE ID=PUTRC,                                              +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERASE000 DS    0H\n         ITRACE ID=ERASE\n         STM   R0,R15,DXD_IO_SAVE\n         ICM   R1,15,LIB_ERASES\n         LA    R1,1(,R1)\n         STCM  R1,15,LIB_ERASES\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         ERASE RPL=DXD_RPL                    ERASE (DELETE THE RECORD)\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=ERASERC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK-IFGRPL(R2)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLOSET00 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=CLOSET,                                             +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         ITRACE ID=ENDREQ\n         ENDREQ RPL=DXD_RPL\n         ITRACE ID=ENDREQRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET\n         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK\nCLOSET10 DS    0H\n         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN\n         BC    4,CLOSET10                     TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT FOR SUBTASK\n         NI    DXD_FLAGS,255-$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=CLOSED\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(EMSG02L),EMSG02\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000  DS   0H\n         TM    DXD_FLAGS,$NEED_CLOSET\n         BNO   EXIT0010\n         BAL   R4,CLOSET00\nEXIT0010 DS    0H\n         ITRACE ID=EXIT                       EXITING\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDSTART       DC    Q(DXDUUMD)\nF1             DC    F'1'\nRPLI           RPL   AM=VTAM\nRPLL           EQU   *-RPLI\n\nEMSG01         DS    0C\n               DC    C'USUBUMD01E Library '\nEMSG01_LIBRARY DC    CL40' '\n               DC    C' not found'\nEMSG01L        EQU   *-EMSG01\nEMSG02         DS    0C\n               DC    C'USUBUMD02E Library is closed'\nEMSG02L        EQU   *-EMSG02\n\nLIBFUNC_ID     DC    CL8'LIBFUNC'\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUUMD          DSECT\n                 LIBSAVE DSECT=NO\nDXD_IO_SAVE      DS      16F\n                 LIBFUNC DSECT=NO\nDXD_RPL          DS      0F,(RPLL)X\nDXD_LIBBLOK_ADDR DS      A\nDXD_LIBRARY_NAME DS      CL8\nDXD_MEM_NAME     DS      CL8\nDXD_MEM_VER      DS      XL2\nDXD_FLAGS        DS      X\n$NEED_CLOSET     EQU     X'80'\nDXD_VSAM_RC      DS      F\nDXD_IO           DS      0F,($MAX_SOURCE_SIZE*2)X\n                 ORG     DXD_IO\n                 LIBRECD DSECT=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         NETBLOK DSECT=YES\nNET_LIBRARY_NAME          DS   CL8\nNET_MEM_NAME              DS   CL8\nNET_MEM_VER               DS   XL2\nNET_MEM_DOC               DS   0C\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n$MAX_SOURCE_SIZE  EQU  8000\n         COPY REGEQU\n         END  USUBUMD\n./ ADD NAME=USUBUNDO 0100-09250-09250-0919-00289-00289-00000-SOURCE\n         TITLE 'USUBUNDO  UNDO check-out status'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBUNDO                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBUNDO CSECT\nUSUBUNDO AMODE 31\nUSUBUNDO RMODE ANY\n         USING PSA,R0\n         USING USUBUNDO,R12,R9                DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBUNDO'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         LA    R9,2048(R12)\n         LA    R9,2048(R9)\n         L     R1,USER_DXD                    WORK AREA BASE\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDUUNDO,R13                   DEFINE BASE\n         USING IFGRPL,DXD_RPL\n         CLC   DXDID,MODID                    WORK AREA INITIALIZED?\n         BE    INIT0010\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\nINIT0010 DS    0H\n         ITRACE ID=UNDO\n         L     R7,USER_IO\n         USING NETBLOK,R7\n         MVI   NET_RETURN_CODE,$NET_OK        INITIALIZE RETURN CODE\n         L     R8,COMM_LIBRARY_CHAIN\n         USING LIBBLOK,R8\nINIT0020 DS    0H\n         CLC   LIB_NAME,NET_LIB_NAME          CORRECT LIBRARY?\n         BE    INIT0030                       YES\n         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   INIT0020                       LOOP\n         B     ERR0010\nINIT0030 DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               RDATA1=R8\n         TM    LIB_STATUS,$LIB_OPEN           LIBRARY OPEN?\n         BNO   ERR0020\n         ST    R8,DXD_LIB                     SAVE LIBRARY BLOCK ADDR\n* ------------------------------------------------------------------- *\n*        Read index record                                            *\n* ------------------------------------------------------------------- *\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,NET_MEM_NAME\n         MVC   LIB_KEY_VERSION,NET_MEM_VER\n         MVC   LIB_KEY_SEQ,F1                 SEQ OF INDEX RECORD\n         ITRACE ID=READINDX,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         MVC   DXD_RPL(RPLL),RPLI\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,LIB_RECORD\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=LIB_INDEX_RECORD_LENGTH,                        +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0030                        NO\n* ------------------------------------------------------------------- *\n*        Member does exist, check authorization                       *\n* ------------------------------------------------------------------- *\n         MVC   AUTH_EYE,AUTHID                EYE CATCHER\n         MVC   AUTH_USER,USER_USER_ID         USER ID\n         MVC   AUTH_LIB,NET_LIB_NAME          LIBRARY NAME\n         MVC   AUTH_MEMBER,NET_MEM_NAME       MEMBER NAME\n         MVC   AUTH_VERSION,NET_MEM_VER       VERSION\n         MVI   AUTH_FUNCTION,$AUTH_CHECK_IN\n         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS\n         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER\n         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER\n         ITRACE ID=CALLAUTH\n         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS\n         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POIN\n         BALR  R14,R15                        LINK TO AUTHORIZATION\n         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?\n         BNE   UNDO0020                       NO\n         ITRACE ID=AUTHOK\n* ------------------------------------------------------------------- *\n*        Reset status                                                 *\n* ------------------------------------------------------------------- *\n         ICM   R1,15,LIB_CHECK_IN             NUMBER OF CHECK-INS\n         LA    R1,1(R1)                       PLUS 1\n         STCM  R1,15,LIB_CHECK_IN             SAVE TOTAL\n         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN\n* ------------------------------------------------------------------- *\n*        Update index record                                          *\n* ------------------------------------------------------------------- *\n         ITRACE ID=RE_WRITE\n         L     R1,LIB_WRITES                  NUMBER OF WRITES\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_WRITES                  SAVE TOTAL\n         PUT   RPL=DXD_RPL\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0040                        NO\n* ------------------------------------------------------------------- *\n*        Log the activity                                             *\n* ------------------------------------------------------------------- *\n         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE\n         USING PRTBLOK,R1                     COPY DATA\n         XC    PRTBLOK(PRTBLOKL),PRTBLOK\n         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK\n         MVI   PRTCC,C' '                     INITIALIZE PRINT\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVC   PRTMSGID(MSG03L),MSG03\n         MVC   PRTMSGID+(MSG03_USER-MSG03)(L'MSG03_USER),USER_USER_ID\n         MVC   PRTMSGID+(MSG03_LIBRARY-MSG03)(L'MSG03_LIBRARY),LIB_NAME\n         MVC   PRTMSGID+(MSG03_DSN-MSG03)(L'MSG03_DSN),LIB_VSAM_DSN\n         MVC   PRTMSGID+(MSG03_MEMBER-MSG03)(L'MSG03_MEMBER),NET_MEM_NA+\n               ME\n         SR    R0,R0\n         ICM   R0,3,NET_MEM_VER\n         CVD   R0,COMMDWRD                    CONVERT TO DECIMAL\n         ED    PRTMSGID+(MSG03_VERSION-MSG03)(L'MSG03_VERSION),COMMDWRD+\n               +5\nUNDO0010 DS    0H\n         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE\n         ST    R14,PRTNEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_REQ\n         BC    4,UNDO0010\n         POST  COMM_PRINT_WORK_ECB\n         B     UNDO0030\n* ------------------------------------------------------------------- *\n*        NOT AUTHORIZED                                               *\n* ------------------------------------------------------------------- *\nUNDO0020 DS    0H\n         ITRACE ID=NOTAUTH\n         MVC   NET_MSG_1,AUTH_MESSAGE_1\n         MVC   NET_MSG_2,AUTH_MESSAGE_2\n         MVC   NET_MSG_3,AUTH_MESSAGE_3\n         MVC   NET_MSG_4,AUTH_MESSAGE_4\n         MVC   NET_MSG_5,AUTH_MESSAGE_5\n         MVI   NET_RETURN_CODE,$NET_ERROR\n* ------------------------------------------------------------------- *\n*        Flush the buffer (CLOSET)                                    *\n* ------------------------------------------------------------------- *\nUNDO0030 DS    0H\n         ITRACE ID=FLUSH\n         ITRACE ID=ENDREQ\n         ENDREQ RPL=DXD_RPL\n         ITRACE ID=ENDREQRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET\n         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK\nUNDO0040 DS    0H\n         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN\n         BC    4,UNDO0040                     TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT FOR CLOSET\n         B     EXIT0000                       DONE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   NET_MSG_1(EMSG01L),EMSG01\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         B     EXIT0000\nERR0020  DS    0H\n         MVC   NET_MSG_1(EMSG02L),EMSG02\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         B     EXIT0000\nERR0030  DS    0H\n         ITRACE ID=READFAIL,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         DC    H'0'\nERR0040  DS    0H\n         ITRACE ID=PUT_FAIL,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT                       EXITING PRINT MODULE\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDSTART          DC       Q(DXDUUNDO)\nVLIBAUTH          DC       V(LIBAUTH)\nF1                DC       F'1'\nAUTHID            DC       CL8'AUTHREQ'\nLIBFUNC_ID        DC       CL8'LIBFUNC'\nPRTID             DC       CL8'PRTBLOK'\nRPLI              RPL      AM=VTAM\nRPLL              EQU      *-RPLI\n\nEMSG01            DC       C'USUBUNDO01E Library not found'\nEMSG01L           EQU      *-EMSG01\n\nEMSG02            DC       C'USUBUNDO02E Library is CLOSED'\nEMSG02L           EQU      *-EMSG02\n\nMSG03             DC       C'USUBUNDU03I ''UNDO'' by '\nMSG03_USER        DC       CL8' '\n                  DC       C' on '\nMSG03_LIBRARY     DC       CL8' '\n                  DC       CL2' '\nMSG03_DSN         DC       CL44' '\n                  DC       C' member '\nMSG03_MEMBER      DC       CL8' '\nMSG03_VERSION     DC       X'402020202120'\nMSG03L            EQU      *-MSG03\n\n                  LTORG\n\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUUNDO          DSECT\n                  LIBSAVE  DSECT=NO\nDXD_RC            DS       H\nDXD_VSAM_RC       DS       F\nDXD_LIB           DS       F\nDXD_RPL           DS       0F,(RPLL)X\n                  AUTHBLOK DSECT=NO\n                  LIBFUNC  DSECT=NO\n                  LIBRECD  DSECT=NO\n                  LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                  PRTBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                  USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                   NETBLOK DSECT=YES\nNET_LIB_NAME       DS      CL8\nNET_MEM_NAME       DS      CL8\nNET_MEM_VER        DS      XL2\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         COPY REGEQU\n         END  USUBUNDO\n./ ADD NAME=USUBVER  0100-09250-09250-0919-00568-00568-00000-SOURCE\n         TITLE 'USUBVER  Create a new version of a member'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBVER                                               *\n*                                                                     *\n*                                                                     *\n*  Create new version of an existing member.                          *\n*                                                                     *\n*  New versions are counted in the statistics the same as new         *\n*  members.                                                           *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBVER  CSECT\nUSUBVER  AMODE 31\nUSUBVER  RMODE ANY\n         USING PSA,R0\n         USING USUBVER,R12,R9                 DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBVER'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         LA    R9,2048(R12)\n         LA    R9,2048(R9)\n         L     R1,USER_DXD                    WORK AREA BASE\n         A     R1,DXDSTART                    PLUS DISPLACEMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                        SAVE WORK AREA ADDRESS\n         USING DXDUVER,R13                   DEFINE BASE\n         USING IFGRPL,DXD_RPL\n         CLC   DXDID,MODID                   WORK AREA INITIALIZED?\n         BE    INIT0010\n         MVC   DXDID,MODID                   IDENTIFY WORK AREA OWNER\n         MVC   PRTEYE,PRTID                  IDENTIFY CONTROL BLOCK\n         MVI   PRTCC,C' '                    INITIALIZE PRINT\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\n         MVC   DXD_RPL(RPLL),RPLI\nINIT0010 DS    0H\n         L     R7,USER_IO                    I/O AREA ADDRESS\n         USING NETBLOK,R7                    DEFINE BASE\n         ITRACE ID=ENTRY,                                              +\n               DATA1=NET_FUNCTION,                                     +\n               DATA2=NET_DATA\n         MVC   DXD_LIB_NAME,NET_LIB_NAME\n         MVC   DXD_MEM_NAME,NET_MEM_NAME\n         MVC   NET_MSG_1,AUTH_MESSAGE_1\n         MVC   NET_MSG_2,AUTH_MESSAGE_2\n         MVC   NET_MSG_3,AUTH_MESSAGE_3\n         MVC   NET_MSG_4,AUTH_MESSAGE_4\n         MVC   NET_MSG_5,AUTH_MESSAGE_5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0020 DS    0H\n         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK\n         BZ    ERR0040                        NO LIBRARIES\n         USING LIBBLOK,R8                     DEFINE BASE\nINIT0030 DS    0H\n         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?\n         BE    INIT0040                       YES\n         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   INIT0030\n         B     ERR0050                        LIBRARY NOT FOUND\nINIT0040 DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               RDATA1=R8\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BNO   ERR0060                        NO\n         ST    R8,DXD_LIB                     SAVE ADDRESS\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Verify that the user has proper authorization.                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER\n         MVC   AUTH_USER,USER_USER_ID         COPY USER ID\n         MVC   AUTH_LIB,NET_LIB_NAME          COPY LIBRARY NAME\n         MVC   AUTH_MEMBER,NET_MEM_NAME\n         MVI   AUTH_FUNCTION,$AUTH_CHECK_VERSION\n         LA    R1,AUTHBLOK\n         L     R15,VLIBAUTH\n         BALR  R14,R15\n         CLI   AUTH_RETURN_CODE,$AUTH_OK\n         BNE   ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Determine the highest version of the member that currently      *\n*     exists.                                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,NET_MEM_NAME\n         MVC   LIB_KEY_VERSION,H1\n         MVC   LIB_KEY_SEQ,F1\n         ITRACE ID=READ\nINIT0050 DS    0H\n         BAL   R6,READ0000                    READ INDEX RECORD\n         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?\n         BNE   INIT0060                       NO\n         MVC   DXD_HIGH_VERSION,LIB_KEY_VERSION\n         ICM   R1,3,LIB_KEY_VERSION           SEQUENCE NUMBER\n         LA    R1,1(R1)                       PLUS 1\n         STCM  R1,3,LIB_KEY_VERSION           UPDATE THE NUMBER\n         B     INIT0050                       READ THE NEXT VERSION\nINIT0060 DS    0H\n         ITRACE ID=HIGHVER,                                            +\n               DATA1=DXD_HIGH_VERSION\n         CLC   LIB_KEY_VERSION,H1             VERSION 1?\n         BE    ERR0020                        .. MEMBER DOES NOT EXIST\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        The member does exist.                                       *\n*                                                                     *\n*        Copy the versions \"down\" one version, one at a time.         *\n*                                                                     *\n*    DXD_HIGH_VERSION will be the highest version number that already *\n*    exists.                                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   DXD_NEW_VERSION,LIB_KEY_VERSION\n         MVC   NET_NEW_VERSION,LIB_KEY_VERSION\n         MVC   DXD_CURRENT_VERSION,DXD_HIGH_VERSION\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    First delete the 'new' version if it exists                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0000 DS    0H\n         ITRACE ID=DELETE,                                             +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_VERSION,DXD_NEW_VERSION\n         MVC   LIB_KEY_SEQ,F1                 SET SEQUENCE NUMBER\nPROC0010 DS    0H\n         BAL   R6,READ1000                    READ\n         CLI   DXD_VSAM_RC+3,X'00'            FOUND?\n         BNE   PROC0020                       NO\n         BAL   R6,ERASE000                    ERASE\n         ICM   R1,15,LIB_KEY_SEQ\n         LA    R1,1(R1)\n         STCM  R1,15,LIB_KEY_SEQ\n         B     PROC0010\nPROC0020 DS    0H\n         BAL   R6,CLOSET00                    ISSUE CLOSET\n         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         BE    PROC0030\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         MVC   LIB_KEY_SEQ,F1                 RESET SEQUENCE NUMBER\n         B     PROC0010\n* ------------------------------------------------------------------- *\n*     Old version deleted.                                            *\n* ------------------------------------------------------------------- *\nPROC0030 DS    0H\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_SEQ,F1                 RESET SEQUENCE NUMBER\n* ------------------------------------------------------------------- *\n*     Copy versions                                                   *\n* ------------------------------------------------------------------- *\nPROC0040 DS    0H\n         ITRACE ID=COPY,                                               +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         MVC   LIB_KEY_VERSION,DXD_CURRENT_VERSION\n         BAL   R6,READ0000                    READ A BLOCK FROM LIBRARY\n         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?\n         BNE   PROC0060                       NO\n         SHOWCB RPL=DXD_RPL,                  SHOW DATA FROM RPL       +\n               FIELDS=(RECLEN),               .. REQUEST RECORD LENGTH +\n               AREA=DXD_RECLEN,               .. AREA FOR RETURNED DATA+\n               LENGTH=4                       .. LENGTH OF 'RECLEN'\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0030                        NO\n         BAL   R6,CLOSET00\n         MVC   LIB_KEY_VERSION,DXD_NEW_VERSION\n         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         BNE   PROC0050                       NO\n         TM    DXD_FLAGS,$NEW_DATE            SET NEW DATE?\n         BO    PROC0050                       YES\n         OI    DXD_FLAGS,$NEW_DATE            SET FLAG\n         TIME  DEC                            ASK SYSTEM FOR TIME/DATE\n         ITRACE ID=NEW_TIME,                  TRACE IT                 +\n               RDATA1=R0,                                              +\n               RDATA2=R1\n         STCM  R0,15,LIB_INDEX_CREATE_TIME    SET CREATE TIME\n         STCM  R1,15,LIB_INDEX_CREATE_DATE    SET CREATE DATE\nPROC0050 DS    0H\n         BAL   R6,PUT0000\n         ITRACE ID=NEXTSEQ,                                            +\n               DATA1=LIB_KEY_SEQ\n         ICM   R1,15,LIB_KEY_SEQ\n         LA    R1,1(R1)\n         STCM  R1,15,LIB_KEY_SEQ\n         B     PROC0040\n* ------------------------------------------------------------------- *\n*     Copy for this version done..                                    *\n* ------------------------------------------------------------------- *\nPROC0060 DS    0H\n         ITRACE ID=COPYDONE\n         BAL   R6,CLOSET00                    ISSUE CLOSET\n         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         BE    PROC0070\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         MVC   LIB_KEY_SEQ,F1                 RESET SEQUENCE NUMBER\n         B     PROC0040\nPROC0070 DS    0H\n         ITRACE ID=NEXTVER\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,DXD_CURRENT_VERSION\n         CH    R1,H1                          AT VERSION 1?\n         BE    PROC0080                       YES\n         BCTR  R1,R0                          MINUS 1\n         STCM  R1,3,DXD_CURRENT_VERSION\n         ICM   R1,3,DXD_NEW_VERSION\n         BCTR  R1,R0                          MINUS 1\n         STCM  R1,3,DXD_NEW_VERSION\n         MVC   LIB_KEY_SEQ,F1\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         B     PROC0040\nPROC0080 DS    0H\n         ITRACE ID=ALLDONE\n         ICM   R1,15,LIB_NEW\n         LA    R1,1(,R1)\n         STCM  R1,15,LIB_NEW\n         MVI   NET_RETURN_CODE,$NET_OK\n         LA    R1,$NET_VERSION_LENGTH\n         STCM  R1,3,NET_LENGTH\n         MVC   PRTMSGID(MSG04L),MSG04\n         MVC   PRTMSGID+(MSG04_MEMBER_NAME-MSG04)(L'MSG04_MEMBER_NAME),+\n               DXD_MEM_NAME\n         MVC   PRTMSGID+(MSG04_LIB_DSN-MSG04)(L'MSG04_LIB_DSN),LIB_VSAM+\n               _DSN\n         SR    R1,R1\n         ICM   R1,3,NET_NEW_VERSION\n         CVD   R1,DXD_DWORD\n         ED    PRTMSGID+(MSG04_VERSION-MSG04)(L'MSG04_VERSION),DXD_DWOR+\n               D+5\n         MVC   PRTMSGID+(MSG04_USER-MSG04)(L'MSG04_USER),USER_USER_ID\n         BAL   R6,PRT0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=READ,                                               +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         GET   RPL=DXD_RPL                    READ\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD1000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=READUPDT,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         GET   RPL=DXD_RPL                    READ\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPUT0000  DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=PUT,                                                +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_WRITES                  NUMBER OF WRITES\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_WRITES                  SAVE TOTAL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         L     R5,DXD_RECLEN\n         MVC   0(RPLL,R2),RPLI\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               RECLEN=(R5),                                            +\n               OPTCD=(KEY,DIR,SYN,MVE)\n         PUT   RPL=DXD_RPL\n         ST    R15,DXD_VSAM_RC\n         ITRACE ID=PUTRC,                                              +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERASE000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=ERASE,                                              +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         ICM   R1,15,LIB_ERASES\n         LA    R1,1(,R1)\n         STCM  R1,15,LIB_ERASES\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         ERASE RPL=DXD_RPL                    ERASE (DELETE THE RECORD)\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=ERASERC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK-IFGRPL(R2)\n         OI    DXD_FLAGS,$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLOSET00 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=CLOSET,                                             +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         ITRACE ID=ENDREQ\n         ENDREQ RPL=DXD_RPL\n         ITRACE ID=ENDREQRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID\n         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET\n         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME\n         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB\n         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK\nCLOSET10 DS    0H\n         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN\n         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK\n         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN\n         BC    4,CLOSET10                     TRY AGAIN\n         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK\n         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT ON SUBTASK\n         NI    DXD_FLAGS,255-$NEED_CLOSET\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* -------------------------------------------------------------------\n*        PRINTING\n* -------------------------------------------------------------------\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE\n         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA\n         MVI   PRTCC,C' '                     SINGLE SPACE\n         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE\n         ST    R14,PRTNEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_REQ\n         BC    4,PRT0010\n         BR    R6                             RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NOTAUTH\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1,auth_message_1\n         MVC   NET_MSG_2,AUTH_MESSAGE_2\n         MVC   NET_MSG_3,AUTH_MESSAGE_3\n         MVC   NET_MSG_4,AUTH_MESSAGE_4\n         MVC   NET_MSG_5,AUTH_MESSAGE_5\n         B     EXIT0000\nERR0020  DS    0H\n         ITRACE ID=NOMEM\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(MSG01L),MSG01\n         MVC   NET_MSG_1+(MSG01_MEM_NAME-MSG01)(L'MSG01_MEM_NAME),DXD_M+\n               EM_NAME\n         B     EXIT0000\nERR0030  DS    0H\n         ITRACE ID=ERR0030,                                            +\n               RDATA1=R15\n         DC    H'0'\nERR0040  DS    0H\n         ITRACE ID=NOLIBS\n         DC    H'0'\nERR0050  DS    0H\n         ITRACE ID=NOTFOUND\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(MSG02L),MSG02\n         MVC   NET_MSG_1+(MSG02_LIB_NAME-MSG02)(L'MSG02_LIB_NAME),DXD_L+\n               IB_NAME\n         B     EXIT0000\nERR0060  DS    0H\n         ITRACE ID=CLOSED\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         MVC   NET_MSG_1(MSG03L),MSG03\n         MVC   NET_MSG_1+(MSG03_LIB_NAME-MSG03)(L'MSG03_LIB_NAME),DXD_L+\n               IB_NAME\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         TM    DXD_FLAGS,$NEED_CLOSET\n         BNO   EXIT0010\n         BAL   R6,CLOSET00\nEXIT0010 DS    0H\n         ITRACE ID=EXIT                       EXITING\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\nVLIBAUTH          DC       V(LIBAUTH)\nDXDSTART          DC       Q(DXDUVER)\nRPLI              RPL      AM=VTAM\nRPLL              EQU      *-RPLI\nF1                DC       F'1'\nH1                DC       H'1'\nPRTID             DC       CL8'PRTBLOK'\nAUTHID            DC       CL8'AUTHBLOK'\nLIBFUNC_ID        DC       CL8'LIBFUNC'\nMSG01             DS       0C\n                  DC       CL11'USUBVER01E'\n                  DC       C'No versions of member '\nMSG01_MEM_NAME    DC       CL8' '\n                  DC       C' exist'\nMSG01L            EQU      *-MSG01\nMSG02             DS       0C\n                  DC       CL11'USUBVER02E'\n                  DC       C'Library '\nMSG02_LIB_NAME    DC       CL8' '\n                  DC       C' not found'\nMSG02L            EQU      *-MSG02\nMSG03             DS       0C\n                  DC       CL11'USUBVER03E'\n                  DC       C'Library '\nMSG03_LIB_NAME    DC       CL8' '\n                  DC       C' is CLOSEd'\nMSG03L            EQU      *-MSG03\nMSG04             DS       0C\n                  DC       CL11'USUBVER04E'\n                  DC       C'Member '\nMSG04_MEMBER_NAME DC       CL8' '\n                  DC       C' in '\nMSG04_LIB_DSN     DC       CL44' '\n                  DC       C' now has '\nMSG04_VERSION     DC       X'402020202120'\n                  DC       C' versions.  User: '\nMSG04_USER        DC       CL8' '\nMSG04L            EQU      *-MSG04\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUVER             DSECT\n                    LIBSAVE  DSECT=NO\nDXD_IO_SAVE         DS       16F\nDXD_DWORD           DS       D\nDXD_VSAM_RC         DS       F\nDXD_RECLEN          DS       F\nDXD_LIB             DS       F\nDXD_RPL             DS       0F,(RPLL)X\nDXD_LIB_NAME        DS       CL8\nDXD_MEM_NAME        DS       CL8\nDXD_HIGH_VERSION    DS       XL2\nDXD_CURRENT_VERSION DS       XL2\nDXD_NEW_VERSION     DS       XL2\n\nDXD_FLAGS           DS       X\n$NEED_CLOSET        EQU      X'10'\n$NEW_DATE           EQU      X'01'\n\n                    AUTHBLOK DSECT=NO\n                    LIBFUNC  DSECT=NO\n                    PRTBLOK  DSECT=NO\nDXD_IO              DS       0F,($MAX_SOURCE_SIZE*2)X                   Y)X\n                    ORG      DXD_IO\n                    LIBRECD  DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    USERBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    NETBLOK DSECT=YES\nNET_LIB_NAME        DS      CL8\nNET_MEM_NAME        DS      CL8\nNET_NEW_VERSION     DS      XL2\n$NET_VERSION_LENGTH EQU    *-NETBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$MAX_SOURCE_SIZE EQU 8000\n         COPY REGEQU\n         END  USUBVER\n./ ADD NAME=USUBVIEW 0100-09250-09250-0919-00343-00343-00000-SOURCE\n         TITLE 'USUBVIEW  View (get a copy of) a member'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: USUBVIEW                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSUBVIEW CSECT\nUSUBVIEW AMODE 31\nUSUBVIEW RMODE ANY\n         USING PSA,R0\n         USING USUBVIEW,R12,R9                DEFINE BASE\n         USING LIBSCOMM,R11                   DEFINE BASE\n         USING USERBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'USUBVIEW'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,USER_COMM                  COMMON AREA ADDRESS\n         LA    R9,2048(R12)\n         LA    R9,2048(R9)\n         L     R1,USER_DXD                    WORK AREA BASE ADDRESS\n         A     R1,DXDSTART                    PLUS DISPLACMENT\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING DXDUVIEW,R13                   DEFINE BASE\n         USING IFGRPL,DXD_RPL\n         CLC   DXDID,MODID                    ALREADY INITIALIZED?\n         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER\n         L     R7,USER_IO                     I/O AREA ADDRESS\n         USING NETBLOK,R7                     DEFINE BASE\n         ITRACE ID=ENTRY,                                              +\n               DATA1=NET_FUNCTION,                                     +\n               DATA2=NET_DATA\n         MVC   NET_MSG_1,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_2,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_3,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_4,COMM_BLANKS          CLEAR MESSAGE\n         MVC   NET_MSG_5,COMM_BLANKS          CLEAR MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ITRACE ID=FIND_LIB,                                           +\n               DATA1=NET_LIB_NAME\n         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK\n         USING LIBBLOK,R8\n         BZ    ERR0010                        NO LIBRARIES\nINIT0020 DS    0H\n         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?\n         BE    INIT0030                       YES\n         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY\n         BNZ   INIT0020\n         B     ERR0010                        LIBRARY NOT FOUND\nINIT0030 DS    0H\n         ITRACE ID=LIBFOUND,                                           +\n               RDATA1=R8\n         ST    R8,DXD_LIB                     SAVE LIBBLOK ADDRESS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   NET_FUNCTION,$NET_VIEW_SOURCE\n         BE    VIEW0010\n         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?\n         BNO   ERR0020                        NO\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,NET_MEM_NAME\n         MVC   LIB_KEY_VERSION,NET_MEM_VERSION\n         MVC   LIB_KEY_SEQ,F1\n         ITRACE ID=READINDX,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         BAL   R6,READ0000\n         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?\n         BNE   ERR0040                        NO\n         ITRACE ID=CALLAUTH\n         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER\n         MVI   AUTH_FUNCTION,$AUTH_CHECK_VIEW\n         MVC   AUTH_USER,USER_USER_ID\n         MVC   AUTH_LIB,NET_LIB_NAME\n         MVC   AUTH_MEMBER,NET_MEM_NAME\n         MVC   AUTH_VERSION,NET_MEM_VERSION\n         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER\n         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER\n         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS\n         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS\n         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT\n         BALR  R14,R15                        LINK TO AUTHORIZATION\n         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?\n         BNE   ERR0030                        NO\n         ITRACE ID=AUTHOK\n         MVC   NET_SOURCE_RECORDS,LIB_INDEX_RECORDS\n         LA    R1,NETBLOKL+L'NET_SOURCE_RECORDS\n         STCM  R1,3,NET_LENGTH\n         MVI   NET_RETURN_CODE,$NET_OK\n         XC    LIB_KEY_SEQ,LIB_KEY_SEQ\n         L     R1,LIB_VIEW                    NUMBER OF VIEWS\n         A     R1,F1                          PLUS 1\n         ST    R1,LIB_VIEW                    SAVE UPDATED NUMBER\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVIEW0010 DS    0H\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER\n         BAL   R6,READ0000                    READ NEXT RECORD\n         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?\n         BNE   VIEW0020                       NO.. EOF\n         MVI   NET_RETURN_CODE,$NET_OK\n         LA    R3,DXD_RPL\n         SHOWCB RPL=(R3),                     SHOW DATA FROM RPL       +\n               FIELDS=(RECLEN),               .. REQUEST RECORD LENGTH +\n               AREA=DXD_RECLEN,               .. AREA FOR RETURNED DATA+\n               LENGTH=4                       .. LENGTH OF 'RECLEN'\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0050                        NO\n         L     R2,DXD_RECLEN                  RECORD SIZE\n         SH    R2,=Y(LIB_DATA-LIB_RECORD)     MINUS PREFIX LENGTH\n         LA    R0,LIB_DATA                    ADDRESS OF THE GOOD STUFF\n         LR    R1,R2                          RECORD SIZE\n         LA    R14,NET_DATA                   DATA AREA\n         LR    R15,R1                         COPY RECORD SIZE\n         MVCL  R14,R0                         COPY TO NETWORK I/O AREA\n         LA    R2,NETBLOKL(R2)                PLUS HEADER LENGTH\n         STCM  R2,3,NET_LENGTH\n         B     EXIT0000                       SEND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVIEW0020 DS    0H\n         ITRACE ID=EOF\n         MVI   NET_RETURN_CODE,$NET_EOF\n         LA    R1,NETBLOKL                    ONLY NEED TO SEND HEADER\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         STM   R0,R15,DXD_IO_SAVE\n         ITRACE ID=READ,                                               +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         L     R1,LIB_READS                   NUMBER OF READS\n         LA    R1,1(R1)                       PLUS 1\n         ST    R1,LIB_READS                   SAVE TOTAL\n         MVC   DXD_RPL(RPLL),RPLI             INITIALIZE RPL\n         LA    R2,DXD_RPL\n         LA    R3,LIB_ACB\n         LA    R4,DXD_IO\n         ITRACE ID=MODCB,                                              +\n               RDATA1=R8,                                              +\n               RDATA2=R3\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R4),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2,                             +\n               ARG=(R4),                                               +\n               KEYLEN=L'LIB_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE)\nREAD0010 DS    0H\n         GET   RPL=DXD_RPL                    READ\n         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE\n         ITRACE ID=RECDREAD,                                           +\n               DATA1=LIB_KEY,                                          +\n               DATA2=LIB_KEY+8\n         ITRACE ID=READRC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)\n         LM    R0,R15,DXD_IO_SAVE\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS\n         MVC   NET_MSG_1(MSG01L),MSG01\n         MVC   NET_MSG_1+(MSG01LIB-MSG01)(L'MSG01LIB),LIB_KEY_NAME\n         B     EXIT0000\nERR0020  DS    0H\n         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS\n         MVC   NET_MSG_1(MSG02L),MSG02\n         UNPK  NET_MSG_1+(MSG02LIB-MSG02)(L'MSG02LIB),LIB_NAME\n         B     EXIT0000\nERR0030  DS    0H\n         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS\n         MVC   NET_MSG_1,AUTH_MESSAGE_1\n         MVC   NET_MSG_2,AUTH_MESSAGE_2\n         MVC   NET_MSG_3,AUTH_MESSAGE_3\n         MVC   NET_MSG_4,AUTH_MESSAGE_4\n         MVC   NET_MSG_5,AUTH_MESSAGE_5\n         B     EXIT0000\nERR0040  DS    0H\n         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS\n         MVC   NET_MSG_1(MSG04L),MSG04\n         MVC   NET_MSG_1+(MSG04MEM-MSG04)(L'MSG04MEM),LIB_KEY_NAME\n         SR    R1,R1\n         ICM   R1,3,LIB_KEY_VERSION\n         CVD   R1,DXD_DWORD\n         ED    NET_MSG_1+(MSG04VER-MSG04)(L'MSG04VER),DXD_DWORD+5\n         MVC   NET_MSG_1+(MSG04LIB-MSG04)(L'MSG04LIB),LIB_NAME\n         B     EXIT0000\nERR0050  DS    0H\n         DC    H'1'\nERR1000  DS    0H\n         MVI   NET_RETURN_CODE,$NET_ERROR\n         LA    R1,NET_MSG_1\n         LA    R15,5\nERR1010  DS    0H\n         MVC   0(L'NET_MSG_1,R1),BLANKS       CLEAR MESSAGE\n         LA    R1,L'NET_MSG_1(R1)\n         BCT   R15,ERR1010\n         LA    R1,NETBLOKL\n         STCM  R1,3,NET_LENGTH                SET LENGTH\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT                       EXITING\n         ITRACE ID=ENDREQ\n         ENDREQ RPL=DXD_RPL\n         ITRACE ID=ENDREQRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVLIBAUTH DC    V(LIBAUTH)\nDXDSTART DC    Q(DXDUVIEW)\nRPLI     RPL   AM=VTAM\nRPLL     EQU   *-RPLI\nF1       DC    F'1'\nAUTHID   DC    CL8'AUTHBLOK'\nBLANKS   DC    CL80' '\nMSG01    DS    0C\n         DC    CL11'USUBVIEW001E'\n         DC    C' '\n         DC    C' Library '\nMSG01LIB DC    CL8' '\n         DC    C' not found'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    CL11'USUBVIEW002E'\n         DC    C' '\n         DC    C' Library '\nMSG02LIB DC    CL8' '\n         DC    C' not open'\nMSG02L   EQU   *-MSG02\nMSG03    DS    0C\n         DC    CL11'USUBVIEW003E'\n         DC    C' '\n         DC    C' Authorization failed. User:'\nMSG03USR DC    CL8' '\n         DC    C' Library: '\nMSG03LIB DC    CL8' '\n         DC    C' Member: '\nMSG03MEM DC    CL8' '\n         DC    C' Version:'\nMSG03VER DC    XL6'4021202020'\nMSG03L   EQU   *-MSG03\nMSG04    DS    0C\n         DC    CL11'USUBVIEW004E'\n         DC    C' '\n         DC    C' Member '\nMSG04MEM DC    CL8' '\nMSG04VER DC    XL6'402120202020'\n         DC    C' not found in library '\nMSG04LIB DC    Cl8' '\nMSG04L   EQU   *-MSG04\n\n         LTORG\n\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDXDUVIEW      DSECT\n              LIBSAVE  DSECT=NO\nDXD_DWORD     DS       D\nDXD_IO_SAVE   DS       16F\nDXD_VSAM_RC   DS       F\nDXD_RECLEN    DS       F\nDXD_LIB       DS       F\nDXD_RPL       DS       0F,(RPLL)X\n              AUTHBLOK DSECT=NO\nDXD_FLAGS     DS       X\n$INITRPL      EQU      X'80'\nDXD_IO        DS       0F,($MAX_SOURCE_SIZE*2)X\n              ORG      DXD_IO\n              LIBRECD  DSECT=NO\n              ORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         LIBBLOK  DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         USERBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         NETBLOK   DSECT=YES\nNET_LIB_NAME       DS   CL8\nNET_MEM_NAME       DS   CL8\nNET_MEM_VERSION    DS   XL2\n                   ORG  NET_DATA\nNET_SOURCE_RECORDS DS   XL4\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         SCOMM    TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IFGACB   AM=VTAM\nACBL     EQU      *-IFGACB\n         IFGRPL   AM=VTAM\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         IHAPSA   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------ *\n*              EQUATES                                               *\n* ------------------------------------------------------------------ *\n               COPY REGEQU\n$MAX_SOURCE_SIZE EQU 8000\n         END  USUBVIEW\n./ ADD NAME=UTIL0001 0100-09250-09250-0919-00390-00390-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: Load a source member directly to a library                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUTIL0001 CSECT\nUTIL0001 AMODE 24\nUTIL0001 RMODE 24\n         USING UTIL0001,R12         DEFINE BASE\n         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS\n         LR    R12,R15              COPY BASE\n         B     INIT0000             BRANCH AROUND EYECATCHER\n         DC    CL8'UTIL0001'        MODULE NAME\n         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0000 DS    0H\n         LA    R1,SAVEAREA\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                   COPY SAVE AREA ADDRESS\n         USING SAVEAREA,R13\n         OPEN  (SYSIN,INPUT)            OPEN SYSIN\n         OPEN  (SYSPRINT,OUTPUT)        OPEN SYSPRINT\n         OPEN  (LIB,UPDAT)              OPEN LIBRARY\n         BAL   R10,HEAD0000             PRINT HEADING\n         LOAD  EP=LIBUX01\n         ST    R0,AUX01\nPROC0000 DS    0H\n         BAL   R9,CNTL0000\n         CLC   MEMBER_STATEMENT,CONTROL_STATEMENT\n         BE    MEM0000                  YES\n         CLC   DESCRIPTION_STATEMENT,CONTROL_STATEMENT\n         BE    DESC0000                 YES\n         CLC   SOURCE_STATEMENT,CONTROL_STATEMENT\n         BE    SOURCE00                 YES\n         MVC   PRINT_CC(EMSG01L),EMSG01\n         B     ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMEM0000  DS    0H\n         TM    FLAGS,$MEMBER            ALREADY HAVE MEMBER NAME?\n         BO    ERR0010                  YES\n         BAL   R9,CNTL0000              READ NEXT CONTROL STATEMENT\n         MVC   LIB_KEY_NAME,CONTROL_STATEMENT\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_VERSION,H1       SET VERSION TO 1\n         MVC   LIB_KEY_SEQ,F1           SET SEQUENCE NUMBER TO 1\n         GET   RPL=READRPL              READ THE INDEX RECORD\n         LTR   R15,R15                  RECORD FOUND?\n         BZ    ERR0020                  YES.. MEMBER ALREADY EXISTS\n         OI    FLAGS,$MEMBER            HAVE VALID MEMBER NAME\n         USING PSA,R0                   DEFINE BASE\n         L     R1,PSAAOLD               OUR ASCB'S ADDRESS\n         USING ASCB,R1                  DEFINE BASE\n         L     R14,ASCBASXB             ASXB ADDRESS\n         USING ASXB,R14                 DEFINE ASCB BASE\n         L     R15,ASXBSENV             ACEE'S ADDRESS\n         USING ACEE,R15                 DEFINE ACEE BASE\n         SR    R1,R1                    CLEAR REGISTER\n         IC    R1,ACEEUSRL              USER ID LENGTH\n         BCTR  R1,0                     MINUS 1\n         MVC   LIB_INDEX_OWNER,BLANKS\n         EX    R1,UIDMVC                COPY USER ID\n         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN\n         TIME  DEC\n         STCM  R0,15,LIB_INDEX_CREATE_TIME\n         STCM  R1,15,LIB_INDEX_CREATE_DATE\n         XC    LIB_INDEX_CHECK_OUT_TIME,LIB_INDEX_CHECK_OUT_TIME\n         ZAP   LIB_INDEX_CHECK_OUT_DATE,P0\n         MVC   LIB_INDEX_CHECK_OUT_USER,BLANKS\n         XC    LIB_INDEX_CHECK_OUTS,LIB_INDEX_CHECK_OUTS\n         XC    LIB_INDEX_CHECK_IN_TIME,LIB_INDEX_CHECK_IN_TIME\n         ZAP   LIB_INDEX_CHECK_IN_DATE,P0\n         MVC   LIB_INDEX_CHECK_IN_USER,BLANKS\n         XC    LIB_INDEX_RECORDS,LIB_INDEX_RECORDS\n         MODCB RPL=WRITERPL,                                           +\n               AREA=LIB_RECORD,                                        +\n               RECLEN=LIB_INDEX_RECORD_LENGTH\n         PUT   RPL=WRITERPL\n         LTR   R15,R15                  SUCCESSFUL?\n         BNZ   ERR0040                  NO\n         B     PROC0000\nUIDMVC   MVC   LIB_INDEX_OWNER(0),ACEEUSRI\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDESC0000 DS    0H\n         TM    FLAGS,$MEMBER            HAVE MEMBER NAME?\n         BNO   ERR0030                  NO\n         BAL   R9,CNTL0000              READ A DESCRIPTION\n         OI    FLAGS,$DESC\n         MVC   LIB_INDEX_DESC,CONTROL_STATEMENT\n         ICM   R1,15,LIB_KEY_SEQ        CURRENT SEQUENCE NUMBER\n         A     R1,F1                    PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ\n         MODCB RPL=WRITERPL,                                           +\n               AREA=LIB_RECORD,                                        +\n               RECLEN=LIB_INDEX_RECORD_LENGTH\n         PUT   RPL=WRITERPL\n         LTR   R15,R15                  SUCCESSFUL?\n         BNZ   ERR0040                  NO\n         B     PROC0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSOURCE00 DS    0H\n         TM    FLAGS,$MEMBER+$DESC      HAVE MEMBER NAME AND DESC?\n         BNO   ERR0050                  NO\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         XC    LIB_KEY_SEQ,LIB_KEY_SEQ  SET SEQUENCE NUMBER TO ZERO\n         OI    FLAGS,$SOURCE            LOADING SOURCE\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=BELOW\n         ST    R1,UX01_EXPANDED_BUFFER  SAVE BUFFER ADDRESS\n         LA    R1,EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         MODCB RPL=WRITERPL,                                           +\n               AREA=(R1)\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE*2,                                  +\n               LOC=BELOW\n         ST    R1,COMPRESSED_BUFFER     SAVE BUFFER ADDRESS\n         LA    R1,(L'LIB_KEY)(R1)\n         ST    R1,UX01_COMPRESSED_BUFFER\n         LA    R1,COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n         L     R3,UX01_EXPANDED_BUFFER\n         SR    R4,R4                    CLEAR LENGTH\nSOURCE10 DS    0H\n         BAL   R9,CNTL0000              READ A SOURCE STATEMENT\n         CH    R4,=Y($MAX_SOURCE_SIZE)  BUFFER FULL?\n         BL    SOURCE20                 NO\n         ST    R4,EXPANDED_LENGTH\n         BAL   R9,COMP0000              COMPRESS THE SOURCE\n         L     R5,COMPRESSED_LENGTH\n         LA    R5,L'LIB_KEY(R5)\n         L     R6,COMPRESSED_BUFFER\n         ICM   R1,15,LIB_KEY_SEQ        CURRENT RECORD NUMBER\n         A     R1,F1                    PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ        UPDATE SEQUENCE NUMBER\n         MVC   0(L'LIB_KEY,R6),LIB_KEY  COPY TO BUFFER\n         MODCB RPL=WRITERPL,                                           +\n               RECLEN=(R5),                                            +\n               AREA=(R6)\n         PUT   RPL=WRITERPL\n         LTR   R15,R15                  SUCCESFUL?\n         BNZ   ERR0040                  NO\n         L     R3,UX01_EXPANDED_BUFFER\n         SR    R4,R4                    CLEAR LENGTH\nSOURCE20 DS    0H\n         MVC   0(80,R3),CONTROL_STATEMENT\n         LA    R3,80(R3)\n         LA    R4,80(R4)\n         L     R1,SOURCE_RECORDS        NUMBER OF SOURCE RECORDS\n         A     R1,F1                    PLUS 1\n         ST    R1,SOURCE_RECORDS        SAVE TOTAL\n         B     SOURCE10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCNTL0000 DS    0H\n         GET   SYSIN,CONTROL_STATEMENT\n         MVC   PRINT_DATA(MSG01L),MSG01\n         MVC   PRINT_DATA+MSG01L(80),CONTROL_STATEMENT\n         BAL   R11,PRT0000              PRINT\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMP0000 DS    0H\n         MVI   UX01_FUNCTION,$UX01_COMPRESS\n         LA    R1,UX01_PARMS\n         L     R15,AUX01\n         BASSM R14,R15                  COMPRESS THE SOURCE\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   PRINT_CC(EMSG02L),EMSG02\n         OI    FLAGS,$ERROR             SET ERROR INDICATOR\n         BAL   R11,PRT0000              PRINT\n         B     EXIT0000                 EXIT\nERR0020  DS    0H\n         MVC   PRINT_CC(EMSG03L),EMSG03\n         OI    FLAGS,$ERROR             SET ERROR INDICATOR\n         BAL   R11,PRT0000              PRINT\n         B     EXIT0000                 EXIT\nERR0030  DS    0H\n         MVC   PRINT_CC(EMSG04L),EMSG04\n         OI    FLAGS,$ERROR             SET ERROR INDICATOR\n         BAL   R11,PRT0000              PRINT\n         B     EXIT0000                 EXIT\nERR0040  DS    0H\n         DC    H'0'\nERR0050  DS    0H\n         MVC   PRINT_CC(EMSG05L),EMSG05\n         OI    FLAGS,$ERROR             SET ERROR INDICATOR\n         BAL   R11,PRT0000              PRINT\n         B     EXIT0000                 EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         CP    LINE_COUNT,LINE_MAX      TIME FOR HEADING?\n         BL    PRT0010                  NO\n         BAL   R10,HEAD0000             PRINT HEADING\nPRT0010  DS    0H\n         PUT   SYSPRINT,PRINT_CC        PRINT\n         AP    LINE_COUNT,P1            ADD 1 TO LINE COUNT\n         MVC   PRINT_LINE,PRINT_LINE-1\n         BR    R11                      EXIT\nHEAD0000 DS    0H\n         AP    PAGE_COUNT,P1            ADD 1 TO PAGE COUNTER\n         MVC   PRINT_CC(HEAD1L),HEAD1   COPY HEADING\n         ED    PRINT_CC+(HEAD1_PAGE-HEAD1)(L'HEAD1_PAGE),PAGE_COUNT\n         PUT   SYSPRINT,PRINT_CC        PRINT HEADING\n         MVC   PRINT_LINE,PRINT_LINE-1\n         ZAP   LINE_COUNT,P1            SET LINE COUNT\n         BR    R10                      DONE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEOF0000  DS    0H\n         MVC   PRINT_CC(MSG02L),MSG02\n         BAL   R11,PRT0000              PRINT\n         TM    FLAGS,$SOURCE            WAS I LOADING SOURCE?\n         BNO   EXIT0000                 NO\n         LTR   R4,R4                    ANYTHING IN BUFFER?\n         BZ    EOF0010                  NO\n         ST    R4,EXPANDED_LENGTH\n         BAL   R9,COMP0000              COMPRESS THE SOURCE\n         L     R5,COMPRESSED_LENGTH\n         LA    R5,L'LIB_KEY(R5)\n         L     R6,COMPRESSED_BUFFER\n         ICM   R1,15,LIB_KEY_SEQ        CURRENT RECORD NUMBER\n         A     R1,F1                    PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ        UPDATE SEQUENCE NUMBER\n         MVC   0(L'LIB_KEY,R6),LIB_KEY  COPY TO BUFFER\n         MODCB RPL=WRITERPL,                                           +\n               RECLEN=(R5),                                            +\n               AREA=(R6)\n         PUT   RPL=WRITERPL             WRITE LAST BUFFER\n         LTR   R15,R15                  SUCCESFUL?\n         BNZ   ERR0040                  NO\nEOF0010  DS    0H\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_SEQ,F1\n         GET   RPL=UPDATERPL            RE-READ INDEX RECORD 1\n         LTR   R15,R15                  SUCCESSFUL?\n         BZ    EOF0020                  YES\n         DC    H'0'\nEOF0020  DS    0H\n         MVC   LIB_INDEX_RECORDS,SOURCE_RECORDS\n         MODCB RPL=UPDATERPL,                                          +\n               OPTCD=MVE\n         PUT   RPL=UPDATERPL            UPDATE THE INDEX RECORD\n         LTR   R15,R15                  SUCCESSFUL?\n         BZ    EOF0030                  YES\n         DC    H'0'\nEOF0030  DS    0H\n         ICM   R1,15,UX01_EXPANDED_BUFFER\n         BZ    EXIT0000\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE\n         ICM   R1,15,COMPRESSED_BUFFER\n         BZ    EXIT0000\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE*2\nEXIT0000 DS    0H\n         CLOSE (SYSIN)\n         CLOSE (SYSPRINT)\n         CLOSE (LIB)\n         DELETE EP=LIBUX01\n         L     R13,4(R13)\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSAVEAREA DS    18F\nSYSIN    DCB   DDNAME=SYSIN,                                           +\n               DSORG=PS,                                               +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               EODAD=EOF0000,                                          +\n               MACRF=GM\nSYSPRINT DCB   DDNAME=SYSPRINT,                                        +\n               DSORG=PS,                                               +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               MACRF=PM\nLIB      ACB   AM=VSAM,                                                +\n               DDNAME=LIB,                                             +\n               MACRF=(KEY,DIR,OUT)\n\nREADRPL  RPL   AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB,                 .. ACB                         +\n               ARG=LIB_KEY,             .. KEY                         +\n               KEYLEN=L'LIB_KEY,        .. KEY LENGTH                  +\n               AREA=LIB_RECORD,         .. ADDRESS OF RETURNED RECORD  +\n               AREALEN=LIB_INDEX_RECORD_LENGTH,  INDEX RECORD LENGTH   +\n               OPTCD=(KEY,DIR,SYN,MVE)\nUPDATERPL RPL  AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB,                 .. ACB                         +\n               ARG=LIB_KEY,             .. KEY                         +\n               KEYLEN=L'LIB_KEY,        .. KEY LENGTH                  +\n               AREA=LIB_RECORD,         .. ADDRESS OF RETURNED RECORD  +\n               OPTCD=(KEY,DIR,SYN,UPD,MVE),                            +\n               AREALEN=LIB_INDEX_RECORD_LENGTH,                        +\n               RECLEN=LIB_INDEX_RECORD_LENGTH\nWRITERPL RPL   AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB,                 .. ACB                         +\n               OPTCD=(KEY,DIR,SYN)      ..\n\nFLAGS          DC      X'00'\n$ERROR         EQU     X'80'\n$MEMBER        EQU     X'40'\n$DESC          EQU     X'20'\n$SOURCE        EQU     X'10'\n\nHEAD1                 DC   C'1'\n                      DC   CL50' '\n                      DC   C'LIBRARY UTILITY 1'\n                      DC   CL50' '\n                      DC   C'PAGE'\nHEAD1_PAGE            DC   X'402020202120'\nHEAD1L                EQU  *-HEAD1\n\nMSG01                 DC   C' CONTROL STATEMENT: '\nMSG01L                EQU  *-MSG01\nMSG02                 DC   C' END OF CONTROL FILE'\nMSG02L                EQU  *-MSG02\n\nEMSG01                DC   C'0** INVALID CONTROL STATEMENT'\nEMSG01L               EQU  *-EMSG01\nEMSG02                DC   C'0** MEMBER NAME ALREADY GIVEN'\nEMSG02L               EQU  *-EMSG02\nEMSG03                DC   C'0** MEMBER ALREADY EXISTS'\nEMSG03L               EQU  *-EMSG03\nEMSG04                DC   C'0** MEMBER NAME NOT GIVEN'\nEMSG04L               EQU  *-EMSG04\nEMSG05                DC   C'0** MEMBER NAME OR DESCRIPTION NOT GIVEN'\nEMSG05L               EQU  *-EMSG05\n\n                      UX01PARM DSECT=NO\n\nEXPANDED_LENGTH       DC   F'0'\nCOMPRESSED_BUFFER     DC   A(0)\nCOMPRESSED_LENGTH     DC   F'0'\n\nSOURCE_RECORDS        DC   F'0'\nAUX01                 DC   A(0)\nF1                    DC   F'1'\nH1                    DC   H'1'\nLINE_COUNT            DC   PL3'0'\nPAGE_COUNT            DC   PL3'0'\nP0                    DC   P'0'\nP1                    DC   P'1'\nLINE_MAX              DC   P'65'\n\nBLANKS                DC   CL80' '\nCONTROL_STATEMENT     DS   CL80\nMEMBER_STATEMENT      DC   C'MEMBER'\nDESCRIPTION_STATEMENT DC   C'DESCRIPTION'\nSOURCE_STATEMENT      DC   C'SOURCE'\n\n                      DC   C' '\nPRINT_LINE            DS   0CL133\nPRINT_CC              DS   C\nPRINT_DATA            DS   CL132\n         LIBRECD DSECT=NO\n\n\n         IHAPSA  DSECT=YES,LIST=NO\n         IHAASCB DSECT=YES,LIST=NO\n         IHAASXB DSECT=YES,LIST=NO\n         IHAACEE\n$MAX_SOURCE_SIZE EQU 8000\n\n         COPY  REGEQU\n         END   UTIL0001\n./ ADD NAME=UTIL0002 0100-09250-09250-0919-00178-00178-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Print all members of a library                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUTIL0002 CSECT\nUTIL0002 AMODE 24\nUTIL0002 RMODE 24\n         USING UTIL0002,R12         DEFINE BASE\n         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS\n         LR    R12,R15              COPY BASE\n         B     INIT0000             BRANCH AROUND EYECATCHER\n         DC    CL8'UTIL0002'        MODULE NAME\n         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0000 DS    0H\n         LA    R1,SAVEAREA\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                   COPY SAVE AREA ADDRESS\n         USING SAVEAREA,R13\n         OPEN  (SYSPRINT,OUTPUT)        OPEN SYSPRINT\n         OPEN  (LIB,INPUT)              OPEN LIBRARY\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE*2,                                  +\n               LOC=BELOW\n         LR    R2,R1\n         MODCB RPL=RPL2,                                               +\n               AREA=(R2),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2\n         LA    R2,LIB_DATA-LIB_RECORD(R2)\n         ST    R2,UX01_COMPRESSED_BUFFER\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=BELOW\n         ST    R1,UX01_EXPANDED_BUFFER\n         LA    R1,EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n         MVC   PRINT_LINE,PRINT_LINE-1  INITIALIZE I/O AREA\n         LOAD  EP=LIBUX01\n         ST    R0,AUX01\nPROC0000 DS    0H\n         GET   RPL=RPL1\n         LTR   R15,R15                  EOF?\n         BNZ   EXIT0000                 YES\n         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         BH    EXIT0000                 BEYOND INDEX RECORDS?\n         CLC   LIB_KEY_SEQ,F1           BASE INDEX RECORD?\n         BNE   PROC0000                 NO\n         ICM   R3,15,LIB_INDEX_RECORDS  NUMBER OF SOURCE RECORDS\n         MVI   SEARCH_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         MVC   SEARCH_KEY_NAME,LIB_KEY_NAME\n         MVC   SEARCH_KEY_VERSION,LIB_KEY_VERSION\n         MVC   SEARCH_KEY_SEQUENCE,F1   SET SEQUENCE NUMBER TO 1\nREAD0000 DS    0H\n         GET   RPL=RPL2\n         LTR   R15,R15                  RECORD FOUND?\n         BNZ   PROC0000                 NO\n         SHOWCB RPL=RPL2,               SHOW DATA FROM RPL             +\n               FIELDS=(RECLEN),         .. REQUEST RECORD LENGTH       +\n               AREA=RECORD_SIZE,        .. AREA FOR RETURNED DATA      +\n               LENGTH=4                 .. LENGTH OF 'RECLEN'\n         L     R1,RECORD_SIZE\n         SH    R1,=Y(L'LIB_KEY)\n         ST    R1,COMPRESSED_LENGTH\n         PUT   SYSPRINT,PRINT_LINE\n         PUT   SYSPRINT,PRINT_LINE\n         MVC   MEMBER_NAME,LIB_KEY_NAME COPY MEMBER NAME\n         SR    R1,R1                    CLEAR REGISTER\n         ICM   R1,3,LIB_KEY_VERSION     GET VERSION NUMBER\n         CVD   R1,DWORD                 CONVERT TO DECIMAL\n         MVC   MEMBER_VERSION,=X'402020202120'\n         ED    MEMBER_VERSION,DWORD+5   EDIT VERSION\n         MVC   PRINT_DATA(MEMBER_HEADING_LENGTH),MEMBER_HEADING\n         PUT   SYSPRINT,PRINT_LINE\n         MVC   PRINT_LINE,PRINT_LINE-1  RE-INITIALIZE I/O AREA\n         LR    R4,R3                    COPY NUMBER OF RECORDS\n         CH    R4,H100                  MORE THAN 100 RECORDS LEFT\n         BL    READ0010                 NO\n         LH    R4,H100                  LIMIT TO 100 RECORDS\nREAD0010 DS    0H\n         SR    R3,R4                    MINUS RECORDS IN THIS BUFFER\n         LR    R5,R4                    COPY RECORDS IN THIS BUFFER\n         MH    R4,H80                   SIZE OF EXPANDED SOURCE\n         ST    R4,EXPANDED_LENGTH       SET EXPANDED SIZE\n         LA    R1,UX01_PARMS\n         MVI   UX01_FUNCTION,$UX01_DECOMPRESS\n         L     R15,AUX01                USER EXIT 1 ENTRY POINT\n         BASSM R14,R15                  DECOMPRESS THE DATA\n         L     R2,UX01_EXPANDED_BUFFER\nREAD0020 DS    0H\n         MVC   PRINT_DATA,0(R2)         COPY DATA\n         PUT   SYSPRINT,PRINT_LINE      PRINT THE DATA\n         MVC   PRINT_LINE,PRINT_LINE-1  RE-INITIALIZE I/O AREA\n         LA    R2,80(R2)\n         BCT   R5,READ0020\n         LTR   R3,R3                    ALL RECORDS PROCESSED?\n         BZ    PROC0000                 YES\n         ICM   R1,15,SEARCH_KEY_SEQUENCE\n         LA    R1,1(R1)\n         STCM  R1,15,SEARCH_KEY_SEQUENCE\n         B     READ0000\nEXIT0000 DS    0H\n         CLOSE (SYSPRINT)\n         CLOSE (LIB)\n         DELETE EP=LIBUX01\n         L     R13,4(R13)\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDWORD    DS    D\nSAVEAREA DS    18F\nAUX01    DC    A(0)\nF1       DC    F'1'\nH1       DC    H'1'\nH80      DC    H'80'\nH100     DC    H'100'\n\nSYSPRINT DCB   DDNAME=SYSPRINT,                                        +\n               DSORG=PS,                                               +\n               RECFM=FBA,                                              +\n               LRECL=81,                                               +\n               MACRF=PM\nLIB      ACB   AM=VSAM,                                                +\n               DDNAME=LIB,                                             +\n               MACRF=(KEY,DIR,SEQ)\n\nRPL1     RPL   AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB,                 .. ACB                         +\n               AREA=LIB_RECORD,         .. ADDRESS OF RETURNED RECORD  +\n               AREALEN=LIB_INDEX_RECORD_LENGTH,  INDEX RECORD LENGTH   +\n               OPTCD=(SEQ,SYN,MVE)\n\nRPL2     RPL   AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB,                 .. ACB                         +\n               ARG=SEARCH_KEY,          .. KEY                         +\n               KEYLEN=L'SEARCH_KEY,     .. KEY LENGTH                  +\n               OPTCD=(KEY,DIR,SYN,MVE)\n\n                      UX01PARM DSECT=NO\n\nEXPANDED_LENGTH       DS   F\nCOMPRESSED_LENGTH     DS   F\n\nRECORD_SIZE           DS   F\n\nSEARCH_KEY            DS   0XL15\nSEARCH_KEY_TYPE       DS   X\nSEARCH_KEY_NAME       DS   CL8\nSEARCH_KEY_VERSION    DS   XL2\nSEARCH_KEY_SEQUENCE   DS   XL4\n\n                      DC   C' '\nPRINT_LINE            DS   0CL81\nPRINT_CC              DS   C\nPRINT_DATA            DS   CL80\n\nMEMBER_HEADING        DS   0C\n                      DC   C'Member:'\nMEMBER_NAME           DC   CL8' '\n                      DC   C'   Version:'\nMEMBER_VERSION        DC   CL6' '\nMEMBER_HEADING_LENGTH EQU  *-MEMBER_HEADING\n\n         LIBRECD DSECT=NO\n         IFGRPL  AM=VTAM\n\n$MAX_SOURCE_SIZE EQU 8000\n         COPY  REGEQU\n         END   UTIL0002\n./ ADD NAME=UTIL0003 0100-09250-09250-0919-00123-00123-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: Convert source directly to compacted form                    *\n*                                                                     *\n*        SYSUT1 Source file                                           *\n*        SYSUT2 compacted file                                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUTIL0003 CSECT\nUTIL0003 AMODE 24\nUTIL0003 RMODE 24\n         USING UTIL0003,R12                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\n         DC    CL8'UTIL0003'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0000 DS    0H\n         LA    R1,SAVEAREA\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         COPY SAVE AREA ADDRESS\n         USING SAVEAREA,R13\n         OPEN  (SYSUT1,INPUT)                 OPEN SYSUT1\n         OPEN  (SYSUT2,OUTPUT)                OPEN SYSUT2\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE,                                    +\n               LOC=BELOW\n         ST    R1,UX01_EXPANDED_BUFFER\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE*2,                                  +\n               LOC=BELOW\n         ST    R1,SYSUT2_IO_ADDR\n         LA    R1,4(R1)\n         ST    R1,UX01_COMPRESSED_BUFFER\n         LA    R1,EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n         LOAD  EP=LIBUX01\n         ST    R0,AUX01\nPROC0000 DS    0H\n         L     R3,UX01_EXPANDED_BUFFER        RESET BUFFER ADDR\n         SR    R4,R4                          RESET LENGTH\n         LA    R5,100                         RESET LIMIT\nPROC0010 DS    0H\n         GET   SYSUT1,SYSUT1_IO_ADDR          READ A RECORD\n         MVC   0(80,R3),SYSUT1_IO_ADDR        COPY TO INPUT BUFFER\n         LA    R3,80(R3)                      UPDATE BUFFER ADDRESS\n         LA    R4,80(R4)                      UPDATE LENGTH\n         BCT   R5,PROC0010                    READ NEXT RECORD\n         BAL   R10,WRITE000\n         B     PROC0000\nEOF0000  DS    0H\n         BAL   R10,WRITE000\n         B     EXIT0000\nWRITE000 DS    0H\n         LTR   R4,R4                          LENGTH ZERO?\n         BZR   R10                            YES\n         ST    R4,EXPANDED_LENGTH\n         MVI   UX01_FUNCTION,$UX01_COMPRESS\n         LA    R1,UX01_PARMS                  PARM LIST\n         L     R15,AUX01                      COMPRESSION ENTRY POINT\n         BASSM R14,R15                        COMPRESS THE DATA\n         L     R1,COMPRESSED_LENGTH\n         LA    R1,4(R1)\n         L     R3,SYSUT2_IO_ADDR\n         STCM  R1,3,0(R3)\n         XC    2(2,R3),2(R3)\n         PUT   SYSUT2,0(R3)                   WRITE TO SYSUT2\n         BR    R10\nEXIT0000 DS    0H\n         CLOSE (SYSUT1)\n         CLOSE (SYSUT2)\n         DELETE EP=LIBUX01\n\n         L     R1,UX01_EXPANDED_BUFFER\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE\n         L     R1,SYSUT2_IO_ADDR\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE*2\n\n         L     R13,4(R13)\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSAVEAREA DS    18F\nSYSUT1   DCB   DDNAME=SYSUT1,                                          +\n               DSORG=PS,                                               +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               EODAD=EOF0000,                                          +\n               MACRF=GM\nSYSUT2   DCB   DDNAME=SYSUT2,                                          +\n               DSORG=PS,                                               +\n               RECFM=VB,                                               +\n               LRECL=$MAX_SOURCE_SIZE*2,                               +\n               BLKSIZE=$MAX_SOURCE_SIZE*2+4,                           +\n               MACRF=PM\n\nAUX01                 DC   A(0)\n\n                      UX01PARM  DSECT=NO\nEXPANDED_LENGTH       DC   F'0'\nCOMPRESSED_LENGTH     DC   F'0'\n\nSYSUT2_IO_ADDR        DC   A(0)\n\nSYSUT1_IO_ADDR        DC   CL80' '\n\n$MAX_SOURCE_SIZE EQU  8000\n         COPY  REGEQU\n         END   UTIL0003\n./ ADD NAME=UTIL0004 0100-09250-09250-0919-00347-00347-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Detail library status report.                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUTIL0004 CSECT\nUTIL0004 AMODE 24\nUTIL0004 RMODE 24\n         USING UTIL0004,R12                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\n         DC    CL8'UTIL0004'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0000 DS    0H\n         LA    R1,SAVEAREA\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         COPY SAVE AREA ADDRESS\n         USING SAVEAREA,R13\n         OPEN  (SYSPRINT,OUTPUT)              OPEN SYSPRINT\n         OPEN  (LIB,INPUT)                    OPEN LIBRARY\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE*2,                                  +\n               LOC=BELOW\n         LR    R11,R1\n         USING LIB_RECORD,R11\n         MODCB RPL=RPL1,                                               +\n               AREA=(R11),                                             +\n               AREALEN=$MAX_SOURCE_SIZE*2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0000 DS    0H\n         GET   RPL=RPL1\n         LTR   R15,R15                        EOF?\n         BNZ   EXIT0000                       YES\n         CLI   LIB_KEY_TYPE,$LIB_KEY_LIB_DESC\n         BE    PROC1000                       YES\n         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         BH    EXIT0000                       BEYOND INDEX RECORDS?\n         CLC   LIB_KEY_SEQ,F1                 1ST INDEX RECORD?\n         BNE   PROC0100                       NO\n         NI    WORKFLAGS,255-$DESC_HEADING\n         MVC   SAVE_NAME,LIB_KEY_NAME         SAVE THE MEMBER NAME\n         AP    MEMBERS_FOUND,P1               ADD 1 TO MEMBERS FOUND\n         MVC   PR_NAME,LIB_KEY_NAME           COPY MEMBER NAME\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,LIB_KEY_VERSION           VERSION NUMBER\n         CVD   R1,DWORD                       CONVERT TO DECIMAL\n         MVC   PR_VERSION,=X'F02020202020'\n         ED    PR_VERSION,DWORD+5\n         MVI   PR_VERSION,C' '                LEAVE ONLY 5 DIGITS\n         MVC   PR_OWNER,LIB_INDEX_OWNER       COPY OWNER\n         CLI   LIB_INDEX_STATUS,$LIB_STATUS_IN\n         BE    PROC0010                       CHECKED IN\n         AP    CHECKED_OUT,P1                 ADD 1 TO CHECKED OUT\n         MVC   PR_STATUS,=C'OUT'              INDICATE CHECKED-OUT\n         B     PROC0020\nPROC0010 DS    0H\n         AP    CHECKED_IN,P1                  ADD 1 TO CHECKED-IN\n         MVC   PR_STATUS,=C'IN '              INDICATE CHECKED-IN\nPROC0020 DS    0H\n         AP    LIB_INDEX_CREATE_DATE,P1900000\n         MVC   PR_CREATE_DATE,=X'F0202020204B202020'\n         ED    PR_CREATE_DATE,LIB_INDEX_CREATE_DATE\n         MVI   PR_CREATE_DATE,C' '\n         UNPK  WORK_TIME(9),LIB_INDEX_CREATE_TIME(5)\n         MVC   PR_CREATE_TIME+00(2),WORK_TIME+00\n         MVI   PR_CREATE_TIME+02,C':'\n         MVC   PR_CREATE_TIME+03(2),WORK_TIME+02\n         MVI   PR_CREATE_TIME+05,C':'\n         MVC   PR_CREATE_TIME+06(2),WORK_TIME+04\n         MVI   PR_CREATE_TIME+08,C':'\n         MVC   PR_CREATE_TIME+09(2),WORK_TIME+06\n         ICM   R1,15,LIB_INDEX_CHECK_OUTS\n         CVD   R1,DWORD\n         MVC   PR_CHECK_OUTS,=X'40206B2020206B202120'\n         ED    PR_CHECK_OUTS,DWORD+4\n         MVC   PR_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER\n         AP    LIB_INDEX_CHECK_OUT_DATE,P1900000\n         MVC   PR_CHECK_OUT_DATE,=X'F0202020204B202020'\n         ED    PR_CHECK_OUT_DATE,LIB_INDEX_CREATE_DATE\n         MVI   PR_CHECK_OUT_DATE,C' '\n         UNPK  WORK_TIME(9),LIB_INDEX_CHECK_OUT_TIME(5)\n         MVC   PR_CHECK_OUT_TIME+00(2),WORK_TIME+00\n         MVI   PR_CHECK_OUT_TIME+02,C':'\n         MVC   PR_CHECK_OUT_TIME+03(2),WORK_TIME+02\n         MVI   PR_CHECK_OUT_TIME+05,C':'\n         MVC   PR_CHECK_OUT_TIME+06(2),WORK_TIME+04\n         MVI   PR_CHECK_OUT_TIME+08,C':'\n         MVC   PR_CHECK_OUT_TIME+09(2),WORK_TIME+06\n         MVC   PR_CHECK_IN_USER,LIB_INDEX_CHECK_IN_USER\n         AP    LIB_INDEX_CHECK_IN_DATE,P1900000\n         MVC   PR_CHECK_IN_DATE,=X'F0202020204B202020'\n         ED    PR_CHECK_IN_DATE,LIB_INDEX_CREATE_DATE\n         MVI   PR_CHECK_IN_DATE,C' '\n         UNPK  WORK_TIME(9),LIB_INDEX_CHECK_IN_TIME(5)\n         MVC   PR_CHECK_IN_TIME+00(2),WORK_TIME+00\n         MVI   PR_CHECK_IN_TIME+02,C':'\n         MVC   PR_CHECK_IN_TIME+03(2),WORK_TIME+02\n         MVI   PR_CHECK_IN_TIME+05,C':'\n         MVC   PR_CHECK_IN_TIME+06(2),WORK_TIME+04\n         MVI   PR_CHECK_IN_TIME+08,C':'\n         MVC   PR_CHECK_IN_TIME+09(2),WORK_TIME+06\n         ICM   R1,15,LIB_INDEX_RECORDS\n         ICM   R2,15,TOTAL_RECORDS\n         AR    R2,R1\n         STCM  R2,15,TOTAL_RECORDS\n         CVD   R1,DWORD\n         MVC   PR_RECORDS,=X'40206B2020206B202120'\n         ED    PR_RECORDS,DWORD+4\n         MVC   PR_AREA(PR_1_LENGTH),PR_1\n         BAL   R9,PRT0000\n         B     PROC0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0100 DS    0H\n         TM    WORKFLAGS,$DESC_HEADING      PRINTED DESCRIPTION HEADING\n         BO    PROC0110                     YES\n         OI    WORKFLAGS,$DESC_HEADING      SET INDICATOR\nPROC0110 DS    0H\n         CLC   SAVE_NAME,LIB_KEY_NAME       SAME MEMBER\n         BNE   ERR0010                      NO\n         MVC   PR_AREA+10(L'LIB_DATA),LIB_DATA\n         BAL   R9,PRT0000\n         B     PROC0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC1000 DS    0H\n         CLI   LIB_KEY_SEQ+3,X'01'\n         BNE   PROC1010\n         MVC   HEAD_LIB_DESCRIPTION,LIB_DATA\n         B     PROC0000\nPROC1010 DS    0H\n         MVC   DESC_1_DESC(L'LIB_DATA),LIB_DATA\n         MVC   PR_CC(DESC_1L),DESC_1\n         BAL   R9,PRT0000\n         B     PROC0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         CP    LINE_COUNT,MAX_LINE            TIME FOR HEADING?\n         BL    PRT0010\n         AP    PAGE_COUNT,P1                  ADD 1 TO PAGE COUNT\n         MVC   HEAD_PAGE,=X'40202020202020202120'\n         ED    HEAD_PAGE,PAGE_COUNT\n         PUT   SYSPRINT,HEADING_1             PRINT HEADING 1\n         PUT   SYSPRINT,HEADING_2             PRINT HEADING 2\n         PUT   SYSPRINT,HEADING_3             PRINT HEADING 3\n         ZAP   LINE_COUNT,P0                  RESET LINE COUNT\nPRT0010  DS    0H\n         PUT   SYSPRINT,PR_CC\n         MVC   PR_AREA,PR_AREA-1\n         AP    LINE_COUNT,P1\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   MSG01_SAVE_NAME,SAVE_NAME\n         MVC   MSG01_LIB_NAME,LIB_KEY_NAME\n         MVC   PR_AREA(MSG01L),MSG01\n         BAL   R9,PRT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ED    SUMMARY_MEMBERS,MEMBERS_FOUND\n         ED    SUMMARY_IN,CHECKED_IN\n         ED    SUMMARY_OUT,CHECKED_OUT\n         ICM   R1,15,TOTAL_RECORDS\n         CVD   R1,DWORD\n         ED    SUMMARY_RECORDS,DWORD+3\n         MVC   PR_AREA(SUMMARY1L),SUMMARY1\n         BAL   R9,PRT0000\n         MVC   PR_AREA(SUMMARY2L),SUMMARY2\n         BAL   R9,PRT0000\n         MVC   PR_AREA(SUMMARY3L),SUMMARY3\n         BAL   R9,PRT0000\n         MVC   PR_AREA(SUMMARY4L),SUMMARY4\n         BAL   R9,PRT0000\n         FREEMAIN RU,                                                  +\n               A=(R11),                                                +\n               LV=$MAX_SOURCE_SIZE*2\n         CLOSE (SYSPRINT)\n         CLOSE (LIB)\n         L     R13,4(R13)\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDWORD    DS    D\nSAVEAREA DS    18F\nSYSPRINT DCB   DDNAME=SYSPRINT,                                        +\n               DSORG=PS,                                               +\n               RECFM=FBA,                                              +\n               LRECL=151,                                              +\n               MACRF=PM\nLIB      ACB   AM=VSAM,                                                +\n               DDNAME=LIB,                                             +\n               MACRF=(KEY,DIR,SEQ)\n\nRPL1     RPL   AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB,                 .. ACB                         +\n               OPTCD=(SEQ,SYN,MVE)\n\nF1                    DC   F'1'\nTOTAL_RECORDS         DS   F'0'\n\nWORKFLAGS             DS   X'00'\n$DESC_HEADING         EQU  X'80'\n\nP0                    DC   P'0'\nP1                    DC   P'1'\nP1900000              DC   P'1900000'\nMAX_LINE              DC   PL3'65'\nLINE_COUNT            DC   PL3'99999'\nPAGE_COUNT            DC   PL5'0'\nMEMBERS_FOUND         DC   PL5'0'\nCHECKED_IN            DC   PL5'0'\nCHECKED_OUT           DC   PL5'0'\n\nWORK_TIME             DS   CL9\nSAVE_NAME             DC   CL8' '\n\nHEADING_1             DS   0C\n                      DC   C'1'\n                      DC   CL59' '\n                      DC   C'Library directory'\n                      DC   CL60' '\n                      DC   C'Page'\nHEAD_PAGE             DC   CL10' '\nHEADING_1_LENGTH      EQU  *-HEADING_1\n\nHEADING_2             DS   0C\n                      DC   C'0'\n                      DC   C'Library description: '\nHEAD_LIB_DESCRIPTION  DC   CL80' '\n                      DC   CL50' '\nHEADING_2_LENGTH      EQU  *-HEADING_2\n\nHEADING_3             DC   C' '\n                      DC   CL8'Member  '\n                      DC   C' '\n                      DC   CL6'  Ver '\n                      DC   C' '\n                      DC   CL8'Owner'\n                      DC   C' '\n                      DC   CL3'Sta'\n                      DC   C'  '\n                      DC   CL20'*---- Created -----*'\n                      DC   C' '\n                      DC   CL10'Check outs'\n                      DC   CL2' '\n                      DC   C'*-----Check out by/date------*'\n                      DC   C' '\n                      DC   C'*-----Check in by/date ------*'\n                      DC   CL10'      Size'\n                      DC   CL20' '\nHEADING_3_LENGTH      EQU  *-HEADING_3\n\nMSG01                 DS   0C\n                      DC   C'-'\n                      DC   C'Library index is in error.  Save name:'\nMSG01_SAVE_NAME       DC   CL8' '\n                      DC   C', Key name:'\nMSG01_LIB_NAME        DC   CL8' '\nMSG01L                equ  *-MSG01\n\nDESC_1                DS   0C\n                      DC   C' '\n                      DC   C'Library description: '\nDESC_1_DESC           DS   (L'LIB_DATA)C\nDESC_1L               EQU  *-DESC_1\n\nSUMMARY1              DS   0C\n                      DC   C'-'\n                      DC   CL45'Members in library:'\nSUMMARY_MEMBERS       DC   X'402020206B2020206B202120'\nSUMMARY1L             EQU  *-SUMMARY1\nSUMMARY2              DS   0C\n                      DC   C' '\n                      DC   CL45'Number of members in CHECKED-IN state:'\nSUMMARY_IN            DC   X'402020206B2020206B202120'\nSUMMARY2L             EQU  *-SUMMARY2\nSUMMARY3              DS   0C\n                      DC   C' '\n                     DC   CL45'Number of members in CHECKED-OUT state:'\nSUMMARY_OUT           DC   X'402020206B2020206B202120'\nSUMMARY3L             EQU  *-SUMMARY3\nSUMMARY4              DS   0C\n                      DC   C' '\n                      DC   CL45'Total size of all source (in lines):'\nSUMMARY_RECORDS       DC   X'402020206B2020206B202120'\nSUMMARY4L             EQU  *-SUMMARY4\n\nPR_1                  DC   C' '\nPR_NAME               DC   CL8' '\n                      DC   C' '\nPR_VERSION            DC   CL6' '\n                      DC   C' '\nPR_OWNER              DC   CL8' '\n                      DC   C' '\nPR_STATUS             DC   CL3' '\n                      DC   C' '\nPR_CREATE_DATE        DC   CL9' '\n                      DC   C' '\nPR_CREATE_TIME        DC   CL11' '\n                      DC   C' '\nPR_CHECK_OUTS         DC   CL10' '\n                      DC   CL2' '\nPR_CHECK_OUT_USER     DC   CL8' '\n                      DC   C' '\nPR_CHECK_OUT_DATE     DC   CL9' '\n                      DC   C' '\nPR_CHECK_OUT_TIME     DC   CL11' '\n                      DC   C' '\nPR_CHECK_IN_USER      DC   CL8' '\n                      DC   C' '\nPR_CHECK_IN_DATE      DC   CL9' '\n                      DC   C' '\nPR_CHECK_IN_TIME      DC   CL11' '\nPR_RECORDS            DC   CL10' '\nPR_1_LENGTH           EQU  *-PR_1\n\n                      DC   C' '\nPR_AREA               DS   0CL151\nPR_CC                 DC   C' '\n                      DC   CL150' '\n\n                      LIBRECD DSECT=YES\n\n         IFGRPL  AM=VTAM\n$MAX_SOURCE_SIZE EQU  8000\n\n         COPY  REGEQU\n         END   UTIL0004\n./ ADD NAME=UTIL0005 0100-09250-09250-0919-00393-00393-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  This utility unloads source code into a sequential file in         *\n*  \"export\" format.                                                   *\n*                                                                     *\n*  You may \"export\" all or specific members of a library.             *\n*                                                                     *\n*  Exports of all members of a library may be used as a backup        *\n*  of the library.                                                    *\n*                                                                     *\n*  Exports also may be used to move the contents of one library       *\n*  to another.                                                        *\n*                                                                     *\n*  The complement to this program is UTIL0006.                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUTIL0005 CSECT\nUTIL0005 AMODE 24\nUTIL0005 RMODE 24\n         USING UTIL0005,R12         DEFINE BASE\n         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS\n         LR    R12,R15              COPY BASE\n         B     INIT0000             BRANCH AROUND EYECATCHER\n         DC    CL8'UTIL0005'        MODULE NAME\n         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0000 DS    0H\n         LA    R1,SAVEAREA\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                   COPY SAVE AREA ADDRESS\n         USING SAVEAREA,R13\n         OPEN  (SYSIN,INPUT)            OPEN SYSIN\n         OPEN  (SYSPRINT,OUTPUT)        OPEN SYSPRINT\n         OPEN  (SYSUT2,OUTPUT)          OPEN SYSUT2\n         OPEN  (LIB,INPUT)              OPEN LIBRARY\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE*2,                                  +\n               LOC=BELOW\n         LR    R11,R1\n         USING LIB_RECORD,R11\n         MODCB RPL=RPL1,                                               +\n               AREA=(R11),                                             +\n               AREALEN=$MAX_SOURCE_SIZE*2\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE*2,                                  +\n               LOC=BELOW\n         LR    R10,R1\n         LA    R2,4(R10)\n         MODCB RPL=RPL2,                                               +\n               AREA=(R2),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2\nINIT0010 DS    0H\n         GET   SYSIN,CONTROL_STATEMENT\n         MVC   PRINT_DATA(L'CONTROL_STATEMENT),CONTROL_STATEMENT\n         MVC   WORK_MEMBER,BLANKS       CLEAR MEMBER NAME\n         MVC   WORK_VERSION,H1          DEFAULT TO VERSION 1\n         LA    R1,CONTROL_STATEMENT\n         LA    R2,WORK_MEMBER\n         LA    R3,L'WORK_MEMBER+1       LOOP LIMIT\nINIT0020 DS    0H\n         CLI   0(R1),C' '               A BLANK?\n         BE    INIT0060                 YES\n         CLI   0(R1),C','               A COMMA?\n         BE    INIT0030                 YES\n         MVC   0(1,R2),0(R1)            COPY THE CHARACTER\n         LA    R1,1(R1)                 NEXT ON CONTROL STATEMENT\n         LA    R2,1(R2)                 NEXT IN WORK AREA\n         BCT   R3,INIT0020              LOOP\n         MVC   PRINT_DATA+L'CONTROL_STATEMENT(EMSG01L),EMSG01\n         BAL   R9,PRT0000               PRINT\n         OI    FLAGS,$ERROR             SET ERROR INDICATOR\n         MVI   WORK_RC,8                SET RETURN CODE\n         B     INIT0010\nINIT0030 DS    0H\n         LA    R1,1(R1)                 SKIP COMMA\n         LA    R3,6                     LOOP LIMIT\n         MVC   WORK_NUMBER,ZEROS        INITIALIZE TO ALL ZERO\nINIT0040 DS    0H\n         CLI   0(R1),C' '               BLANK?\n         BE    INIT0050                 YES\n         MVC   WORK_NUMBER(4),WORK_NUMBER+1\n         MVC   WORK_NUMBER+4(1),0(R1)\n         LA    R1,1(R1)                 NEXT IN CONTROL STATEMENT\n         BCT   R3,INIT0040              LOOP\n         MVC   PRINT_DATA+L'CONTROL_STATEMENT(EMSG02L),EMSG02\n         BAL   R9,PRT0000\n         OI    FLAGS,$ERROR\n         MVI   WORK_RC,8                SET RETURN CODE\n         B     INIT0010\nINIT0050 DS    0H\n         PACK  DWORD,WORK_NUMBER        PACK VERSION\n         CVB   R1,DWORD                 CONVERT TO BINARY\n         STCM  R1,3,WORK_VERSION        SAVE VERSION\nINIT0060 DS    0H\n         NI    FLAGS,255-$EXPORT_ALL    TURN OFF 'ALL' FLAG\n         GETMAIN RU,                                                   +\n               LV=EXPORT_BLOCK_LENGTH,                                 +\n               LOC=BELOW\n         USING EXPORT_BLOCK,R1\n         MVC   EXPORT_EYE,EXPORT_ID     SET EYE CATCHER\n         MVC   EXPORT_NEXT,EXPORT_CHAIN SET 'NEXT' BLOCK ADDRESS\n         MVC   EXPORT_MEMBER,WORK_MEMBER\n         MVC   EXPORT_VERSION,WORK_VERSION\n         MVI   EXPORT_FLAG,0            CLEAR FLAGS\n         ST    R1,EXPORT_CHAIN          SAVE NEW BLOCK'S ADDRESS\n         BAL   R9,PRT0000               PRINT THE CONTROL STATEMENT\n         B     INIT0010                 READ NEXT CONTROL STATEMENT\n         DROP  R1\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  All control statments have been read.                              *\n*                                                                     *\n*  Export the library member(s).                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0000 DS    0H\n         TM    FLAGS,$ERROR             SERIOUS ERROR?\n         BO    EXIT0000                 YES\nPROC0010 DS    0H\n         GET   RPL=RPL1\n         LTR   R15,R15                  EOF?\n         BNZ   EXIT0000                 YES\n         CLI   LIB_KEY_TYPE,$LIB_KEY_LIB_DESC\n         BE    PROC0010                 BYPASS LIBRARY DESCRIPTOR(S)\n         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         BH    EXIT0000                 BEYOND INDEX RECORDS?\n         OC    SAVE_KEY,SAVE_KEY        FIRST PASS?\n         BNZ   PROC0020                 NO\n         MVC   SAVE_KEY,LIB_KEY         INITIALIZE SAVED KEY\n         B     PROC0030\nPROC0020 DS    0H\n         CLC   SAVE_KEY,LIB_KEY         SAME MEMBER?\n         BE    PROC0080                 YES\n         TM    FLAGS,$EXPORT            EXPORTING PREVIOUS MEMBER?\n         BNO   PROC0030                 NO\n         BAL   R8,PROC1000\nPROC0030 DS    0H\n         MVC   SAVE_KEY,LIB_KEY         COPY NEW KEY\n         NI    FLAGS,255-$EXPORT        RESET FLAG\n         ICM   R2,15,EXPORT_CHAIN       FIRST EXPORT BLOCK\n         BZ    PROC0070                 NONE.. EXPORTING ALL\n         USING EXPORT_BLOCK,R2\nPROC0040 DS    0H\n         CLC   LIB_KEY_NAME,EXPORT_MEMBER\n         BNE   PROC0050                 NO\n         CLC   LIB_KEY_VERSION,EXPORT_VERSION\n         BE    PROC0060                 YES\nPROC0050 DS    0H\n         ICM   R2,15,EXPORT_NEXT        NEXT EXPORT BLOCK\n         BNZ   PROC0040\n         B     PROC0010\nPROC0060 DS    0H\n         OI    EXPORT_FLAG,$EXPORT_FOUND\nPROC0070 DS    0H\n         OI    FLAGS,$EXPORT            SET EXPORT THIS MEMBER FLAG\n         MVC   WORK_SOURCE_RECORDS,LIB_INDEX_RECORDS\n         OC    EXPORT_CHAIN,EXPORT_CHAIN\n         BNZ   PROC0080                 DOING SPECIFIC MEMBERS\n         MVC   MSG01_NAME,LIB_KEY_NAME  COPY MEMBER NAME\n         SR    R1,R1                    CLEAR REGISTER\n         ICM   R1,3,LIB_KEY_VERSION     GET VERSION NUMBER\n         CVD   R1,DWORD                 CONVERT TO DECIMAL\n         MVC   MSG01_VERSION,=X'402020202120'\n         ED    MSG01_VERSION,DWORD+5\n         MVC   PRINT_CC(MSG01L),MSG01   COPY MESSAGE\n         BAL   R9,PRT0000               PRINT\nPROC0080 DS    0H\n         TM    FLAGS,$EXPORT            EXPORTING THIS MEMBER?\n         BNO   PROC0010                 NO\n         MVC   0(2,R10),=Y(LIB_INDEX_RECORD_LENGTH+4)\n         XC    2(2,R10),2(R10)\n         MVC   4(LIB_INDEX_RECORD_LENGTH,R10),0(R11)\n         PUT   SYSUT2,0(R10)            WRITE TO EXPORT FILE\n         B     PROC0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC1000 DS    0H\n         MVC   SEARCH_KEY,SAVE_KEY\n         MVI   SEARCH_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         MVC   SEARCH_KEY_SEQUENCE,F1   SET SEQUENCE NUMBER TO 1\nPROC1010 DS    0H\n         GET   RPL=RPL2\n         LTR   R15,R15                  RECORD FOUND?\n         BNZR  R8                       NO\n         SHOWCB RPL=RPL2,               SHOW DATA FROM RPL             +\n               FIELDS=(RECLEN),         .. REQUEST RECORD LENGTH       +\n               AREA=RECLEN,             .. AREA FOR RETURNED DATA      +\n               LENGTH=4                 .. LENGTH OF 'RECLEN'\n         ICM   R1,15,RECLEN             RECORD LENGTH\n         LA    R1,4(R1)                 PLUS LENGTH OF LLBB\n         STCM  R1,3,0(R10)              SET LENGTH\n         XC    2(2,R10),2(R10)\n         PUT   SYSUT2,0(R10)            WRITE TO EXPORT FILE\n         ICM   R1,15,SEARCH_KEY_SEQUENCE\n         LA    R1,1(R1)\n         STCM  R1,15,SEARCH_KEY_SEQUENCE\n         B     PROC1010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         CP    LINE_COUNT,MAX_LINE      TIME FOR HEADING?\n         BL    PRT0010\n         AP    PAGE_COUNT,P1            ADD 1 TO PAGE COUNT\n         MVC   HEAD_PAGE,=X'40202020202020202120'\n         ED    HEAD_PAGE,PAGE_COUNT\n         PUT   SYSPRINT,HEADING         PRINT HEADING\n         ZAP   LINE_COUNT,P0            RESET LINE COUNT\nPRT0010  DS    0H\n         PUT   SYSPRINT,PRINT_CC\n         MVI   PRINT_CC,C' '\n         MVC   PRINT_DATA(PRINT_LENGTH),PRINT_CC\n         AP    LINE_COUNT,P1\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         TM    FLAGS,$ERROR             SERIOUS ERROR?\n         BO    EXIT0050                 YES\n         TM    FLAGS,$EXPORT            EXPORTING PREVIOUS MEMBER?\n         BNO   EXIT0010                 NO\n         BAL   R8,PROC1000\nEXIT0010 DS    0H\n         ICM   R2,15,EXPORT_CHAIN       FIRST EXPORT BLOCK\n         BZ    EXIT0050                 NONE\n         BAL   R9,PRT0000\n         BAL   R9,PRT0000\nEXIT0020 DS    0H\n         MVC   SUMMARY_MEMBER,EXPORT_MEMBER\n         SR    R1,R1                    CLEAR REGISTER\n         ICM   R1,3,EXPORT_VERSION      GET VERSION\n         CVD   R1,DWORD                 CONVERT TO DECIMAL\n         MVC   SUMMARY_VERSION,=X'402020202120'\n         ED    SUMMARY_VERSION,DWORD+5\n         TM    EXPORT_FLAG,$EXPORT_FOUND\n         BO    EXIT0030                 YES\n         MVC   SUMMARY_STATUS,=CL10'NOT FOUND'\n         MVI   WORK_RC,4                SET RETURN CODE\n         B     EXIT0040\nEXIT0030 DS    0H\n         MVC   SUMMARY_STATUS,=CL10'EXPORTED'\nEXIT0040 DS    0H\n         MVC   PRINT_DATA(SUMMARY_LENGTH),SUMMARY\n         BAL   R9,PRT0000               PRINT\n         ICM   R2,15,EXPORT_NEXT        NEXT EXPORT BLOCK\n         BNZ   EXIT0020\nEXIT0050 DS    0H\n         FREEMAIN RU,                                                  +\n               A=(R10),                                                +\n               LV=$MAX_SOURCE_SIZE*2\n         FREEMAIN RU,                                                  +\n               A=(R11),                                                +\n               LV=$MAX_SOURCE_SIZE*2\n         CLOSE (SYSIN)\n         CLOSE (SYSPRINT)\n         CLOSE (SYSUT2)\n         CLOSE (LIB)\n         SR    R15,R15\n         IC    R15,WORK_RC\n         L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDWORD    DS    D\nSAVEAREA DS    18F\nSYSIN    DCB   DDNAME=SYSIN,                                           +\n               DSORG=PS,                                               +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               EODAD=PROC0000,                                         +\n               MACRF=GM\nSYSPRINT DCB   DDNAME=SYSPRINT,                                        +\n               DSORG=PS,                                               +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               MACRF=PM\nSYSUT2   DCB   DDNAME=SYSUT2,                                          +\n               DSORG=PS,                                               +\n               RECFM=VB,                                               +\n               LRECL=$MAX_SOURCE_SIZE*2,                               +\n               BLKSIZE=$MAX_SOURCE_SIZE*2+4,                           +\n               MACRF=PM\nLIB      ACB   AM=VSAM,                                                +\n               DDNAME=LIB,                                             +\n               MACRF=(KEY,DIR,SEQ)\n\nRPL1     RPL   AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB,                 .. ACB                         +\n               OPTCD=(SEQ,SYN,MVE)\n\nRPL2     RPL   AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB,                 .. ACB                         +\n               ARG=SEARCH_KEY,          .. KEY                         +\n               KEYLEN=L'SEARCH_KEY,     .. KEY LENGTH                  +\n               OPTCD=(KEY,DIR,SYN,MVE)\n\nSEARCH_KEY            DS   0XL15\nSEARCH_KEY_TYPE       DS   X\nSEARCH_KEY_NAME       DS   CL8\nSEARCH_KEY_VERSION    DS   XL2\nSEARCH_KEY_SEQUENCE   DS   XL4\n\nSAVE_KEY              DC   XL11'0000000000000000000000'\n\nEXPORT_CHAIN          DC   A(0)\nRECLEN                DS   F\nF1                    DC   F'1'\nH1                    DC   H'1'\nH80                   DC   H'80'\nH100                  DC   H'100'\nP0                    DC   P'0'\nP1                    DC   P'1'\nMAX_LINE              DC   PL3'65'\nLINE_COUNT            DC   PL3'99999'\nPAGE_COUNT            DC   PL5'0'\nFILES_READ            DC   PL5'0'\nFILES_EXPORTED        DC   PL5'0'\n\nWORK_RC               DC   X'00'\nWORK_SOURCE_RECORDS   DS   XL4\nWORK_MEMBER           DC   CL8' '\nWORK_VERSION          DC   XL2'0000'\nWORK_NUMBER           DC   CL5' '\n\nFLAGS                 DC   X'80'\n$EXPORT_ALL           EQU  X'80'\n$ERROR                EQU  X'40'\n$EXPORT               EQU  X'20'\n\nZEROS                 DC   CL5'00000'\nEXPORT_ID             DC   CL8'EXPORT'\nBLANKS                DC   CL80' '\nCONTROL_STATEMENT     DC   CL80' '\n\nHEADING               DS   0C\n                      DC   C'1'\n                      DC   CL47' '\n                      DC   C'Librarian export utility'\n                      DC   CL46' '\n                      DC   C'Page'\nHEAD_PAGE             DC   cl10' '\nHEADING_LENGTH        EQU  *-HEADING\n\nMSG01                 DS   0C\n                      DC   C' '\n                      DC   c'Exporting member '\nMSG01_NAME            DC   CL8' '\n                      DC   C'   Version '\nMSG01_VERSION         DC   Cl6' '\nMSG01L                equ  *-MSG01\n\nSUMMARY               DS   0C\nSUMMARY_MEMBER        DC   CL8' '\n                      DC   CL3' '\nSUMMARY_VERSION       DC   CL6' '\n                      DC   CL3' '\nSUMMARY_STATUS        DC   CL10' '\nSUMMARY_LENGTH        EQU  *-SUMMARY\n\nEMSG01                DC   C'Member name too long'\nEMSG01L               EQU  *-EMSG01\nEMSG02                DC   C'Version number too long'\nEMSG02L               EQU  *-EMSG02\n\nPRINT_CC              DC   C' '\nPRINT_DATA            DC   CL132' '\nPRINT_LENGTH          EQU  *-PRINT_CC\n\n                      LIBRECD DSECT=YES\n\nEXPORT_BLOCK          DSECT\nEXPORT_EYE            DS   CL8\nEXPORT_NEXT           DS   A\nEXPORT_MEMBER         DS   CL8\nEXPORT_VERSION        DS   XL2\nEXPORT_FLAG           DS   X\n$EXPORT_FOUND         EQU  X'80'\nEXPORT_BLOCK_LENGTH   EQU  *-EXPORT_BLOCK\n         IFGRPL  AM=VTAM\n\n$MAX_SOURCE_SIZE EQU  8000\n\n         COPY  REGEQU\n         END   UTIL0005\n./ ADD NAME=UTIL0006 0100-09250-09250-0919-00665-00665-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Import files previously exported by utility 5.                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUTIL0006 CSECT\nUTIL0006 AMODE 24\nUTIL0006 RMODE 24\n         USING UTIL0006,R12         DEFINE BASE\n         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS\n         LR    R12,R15              COPY BASE\n         B     INIT0000             BRANCH AROUND EYECATCHER\n         DC    CL8'UTIL0006'        MODULE NAME\n         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0000 DS    0H\n         LA    R1,SAVEAREA\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                   COPY SAVE AREA ADDRESS\n         USING SAVEAREA,R13\n         OPEN  (SYSPRINT,OUTPUT)        OPEN SYSPRINT\n         OPEN  (LIB,UPDAT)              OPEN LIBRARY\n         OPEN  (SYSUT1,INPUT)           OPEN EXPORT\n         OPEN  (SYSIN,INPUT)            OPEN CONTROL STATEMENTS\n         BAL   R10,HEAD0000             PRINT HEADING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0000 DS    0H\n         GET   SYSIN,CNTLSTMT           READ A CONTROL STATEMENT\n         MVC   MSG00SMT,CNTLSTMT        COPY CONTROL STATEMENT\n         MVC   PRINT_DATA(MSG00L),MSG00\n         BAL   R11,PRT0000              PRINT CONTROL STATEMENT\n         CLC   RESTORE_STATEMENT,CNTLSTMT\n         BE    PROC0010                 YES\n         CLC   REPLACE_STATEMENT,CNTLSTMT\n         BE    PROC0110                 YES\n         MVC   PRINT_LINE(MSG11L),MSG11\n         OI    FLAGS,$ERROR\n         BAL   R11,PRT0000              PRINT\n         B     PROC0000\nPROC0010 DS    0H\n         LA    R1,CNTLSTMT+L'RESTORE_STATEMENT\n         CLC   CNTLSTMT+L'RESTORE_STATEMENT(50),BLANKS\n         BNE   PROC0020\n         MVC   PRINT_LINE(MSG12L),MSG12\n         OI    FLAGS,$ERROR\n         BAL   R11,PRT0000              PRINT\n         B     PROC0000\nPROC0020 DS    0H\n         CLI   0(R1),C' '               BLANK?\n         BNE   PROC0030                 NO\n         LA    R1,1(R1)                 NEXT\n         B     PROC0020\nPROC0030 DS    0H\n         MVC   WORKMEM,BLANKS           INITIALIZE NAME\n         MVC   WORKVER,H1               INITIALIZE VERSION\n         MVI   WORKREPL,C'N'            INITIALIZE REPLACE INDICATOR\n         LA    R2,WORKMEM\n         SR    R3,R3                    FOR LENGTH\nPROC0040 DS    0H\n         CLI   0(R1),C' '               BLANK?\n         BE    PROC0100                 YES\n         CLI   0(R1),C','               COMMA?\n         BE    PROC0060                 YES\nPROC0050 DS    0H\n         CH    R1,H8                    NAME TOO LONG?\n         BE    ERR0010                  YES\n         MVC   0(1,R2),0(R1)            COPY\n         LA    R1,1(R1)\n         LA    R2,1(R2)\n         LA    R3,1(R3)\n         B     PROC0040                 LOOP\nPROC0060 DS    0H\n         LA    R1,1(R1)                 SKIP COMMA\n         MVC   WORKWORK,=C'00000'       INITIALIZE VERSION TO ZERO\n         SR    R3,R3                    FOR LENGTH\nPROC0070 DS    0H\n         CLI   0(R1),C' '               BLANK?\n         BE    PROC0080                 YES\n         CLI   0(R1),C','               COMMA?\n         BE    PROC0080                 YES\n         CLI   0(R1),C'0'               AT LEAST A ZERO?\n         BL    ERR0020                  NO\n         CLI   0(R1),C'9'               MORE THAN EBCDIC 9?\n         BH    ERR0020                  YES\n         CH    R3,H5                    TOO MANY DIGITS IN VERSION?\n         BE    ERR0030                  YES\n         MVC   WORKWORK(4),WORKWORK+1\n         MVC   WORKWORK+4(1),0(R1)\n         LA    R1,1(R1)                 NEXT\n         LA    R3,1(R3)\n         B     PROC0070\nPROC0080 DS    0H\n         PACK  DWORD,WORKWORK           PACK THE VERSION NUMBER\n         CVB   R2,DWORD                 CONVERT TO BINARY\n         STCM  R2,3,WORKVER             SAVE VERSION\n         CLI   0(R1),C' '               STOP ON A BLANK?\n         BE    PROC0100                 YES\n         CLC   REPLACE_STATEMENT,1(R1)  REPLACE OPTION?\n         BE    PROC0090                 YES\n         MVC   PRINT_LINE(MSG13L),MSG13\n         OI    FLAGS,$ERROR\n         BAL   R11,PRT0000              PRINT\n         B     PROC0000\nPROC0090 DS    0H\n         MVI   WORKREPL,C'Y'            SET FLAG\nPROC0100 DS    0H\n         CLC   WORKMEM,BLANKS           NAME BLANK?\n         BE    ERR0040                  YES\n         GETMAIN RU,                                                   +\n               LV=INCLUDEL,                                            +\n               LOC=BELOW\n         LR    R9,R1                    COPY ADDRESS\n         USING INCLUDE,R9               DEFINE BASE\n         MVC   INCLUDE_EYE,INCLUDE_ID   IDENTIFY THE CONTROL BLOCK\n         MVC   INCLUDE_NEXT,INCLUDE_CHAIN\n         MVC   INCLUDE_MEMBER,WORKMEM   COPY MEMBER NAME\n         MVC   INCLUDE_VERSION,WORKVER  COPY VERSION NUMBER\n         ST    R9,INCLUDE_CHAIN\n         CLI   WORKREPL,C'Y'            REPLACE THIS MEMBER?\n         BNE   PROC0000                 NO\n         OI    INCLUDE_FLAG,$INCLUDE_REPLACE\n         B     PROC0000\nPROC0110 DS    0H\n         OI    FLAGS,$GLOBAL_REPLACE    SET GLOBAL REPLACE FLAG\n         B     PROC0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   All control statements have been processed.                       *\n*                                                                     *\n*   Start \"restore\" process.                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0200 DS    0H\n         TM    FLAGS,$ERROR             ERROR(S) FOUND?\n         BNO   PROC0210                 NO\n         MVC   PRINT_LINE(MSG05L),MSG05 COPY MESSAGE\n         BAL   R11,PRT0000              PRINT\n         B     EXIT0000                 AND EXIT\nPROC0210 DS    0H\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE*2,                                  +\n               LOC=BELOW\n         LR    R8,R1                    COPY BUFFER ADDRESS\n         USING EXPORT_RECORD,R8         DEFINE BASE\n         ST    R8,BUFFER_ADDRESS_1\n         LA    R2,4(R8)                 SKIP LLBB\n         MODCB RPL=RPL1,                                               +\n               AREA=(R2),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2\n         LTR   R15,R15                  SUCCESSFUL?\n         BNZ   ERR0050                  NO\n         GETMAIN RU,                                                   +\n               LV=$MAX_SOURCE_SIZE*2,                                  +\n               LOC=BELOW\n         LR    R7,R1\n         ST    R7,BUFFER_ADDRESS_2\n         MODCB RPL=RPL2,                                               +\n               AREA=(R7),                                              +\n               AREALEN=$MAX_SOURCE_SIZE*2\n         LTR   R15,R15                  SUCCESSFUL?\n         BNZ   ERR0050                  NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0220 DS    0H\n         GET   SYSUT1,0(R8)             READ SYSUT1\n         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         BE    PROC0230                 YES\n         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         BE    PROC0240                 YES\n         B     PROC0220\nPROC0230 DS    0H\n         CLC   LIB_KEY_SEQ,F1           SEQUENCE NUMBER 1?\n         BE    PROC0250                 YES\nPROC0240 DS    0H\n         TM    FLAGS,$RESTORE           RESTORING THIS MEMBER?\n         BO    PROC0400                 YES\n         B     PROC0220                 READ NEXT EXPORT RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     A new member has been found on the EXPORT file                  *\n*                                                                     *\n*     If there were no control statements, we are to \"restore\"        *\n*     every member on the EXPORT file.                                *\n*                                                                     *\n*     If any RESTORE statements were given, only the members          *\n*     explicitly named will be restored.                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0250 DS    0H\n         NI    FLAGS,255-$RESTORE       RESET RESTORE INDICATOR\n         ICM   R9,15,INCLUDE_CHAIN\n         BZ    PROC0300                 NONE, RESTORE EVERYTHING\nPROC0260 DS    0H\n         CLC   INCLUDE_MEMBER,LIB_KEY_NAME\n         BNE   PROC0270                 NO\n         CLC   INCLUDE_VERSION,LIB_KEY_VERSION\n         BE    PROC0290\nPROC0270 DS    0H\n         ICM   R9,15,INCLUDE_NEXT\n         BNZ   PROC0260\n* ------------------------------------------------------------------- *\n*     THE CURRENT MEMBER WAS NOT SELECTED                             *\n* ------------------------------------------------------------------- *\nPROC0280 DS    0H\n         MVC   MSG15MEM,LIB_KEY_NAME\n         SR    R1,R1\n         ICM   R1,3,LIB_KEY_VERSION     VERSION NUMBER\n         CVD   R1,DWORD                 CONVERT TO DECIMAL\n         MVC   MSG15VER,=X'402120202020'\n         ED    MSG15VER,DWORD+5         EDIT VERSION\n         MVC   PRINT_LINE(MSG15L),MSG15\n         BAL   R11,PRT0000              PRINT THE MESSAGE\n         B     PROC0220\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      We have a an possible member to restore.                       *\n*      First find out if it already exists in the library.            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0290 DS    0H\n         OI    INCLUDE_FLAG,$INCLUDE_FOUND\nPROC0300 DS    0H\n         MVI   SEARCH_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   SEARCH_KEY_NAME,LIB_KEY_NAME\n         MVC   SEARCH_KEY_VERSION,LIB_KEY_VERSION\n         MVC   SEARCH_KEY_SEQUENCE,F1\n         GET   RPL=RPL2                 READ INDEX RECORD\n         LTR   R15,R15                  SUCCESSFUL?\n         BNZ   PROC0380                 DOES NOT EXIST\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     The current member already exists in the master file.           *\n*     determine of the member should be replaced.                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TM    FLAGS,$GLOBAL_REPLACE    GLOBAL REPLACE ON?\n         BO    PROC0340                 YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Determine if there is a restore with \"REPLACE\".     .           *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ICM   R9,15,INCLUDE_CHAIN      FIRST INCLUDE BLOCK\nPROC0310 DS    0H\n         CLC   INCLUDE_MEMBER,LIB_KEY_NAME\n         BNE   PROC0320\n         CLC   INCLUDE_VERSION,LIB_KEY_VERSION\n         BE    PROC0330                 REPLACE\nPROC0320 DS    0H\n         ICM   R9,15,INCLUDE_NEXT\n         BNZ   PROC0310                 LOOP\n         B     PROC0280\nPROC0330 DS    0H\n         OI    INCLUDE_FLAG,$INCLUDE_FOUND\n         TM    INCLUDE_FLAG,$INCLUDE_REPLACE\n         BO    PROC0340\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    Member exists. Replace was NOT specified.                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DS    0H\n         MVC   MSG16MEM,LIB_KEY_NAME\n         SR    R1,R1\n         ICM   R1,3,LIB_KEY_VERSION     VERSION NUMBER\n         CVD   R1,DWORD                 CONVERT TO DECIMAL\n         MVC   MSG16VER,=X'402120202020'\n         ED    MSG16VER,DWORD+5         EDIT VERSION\n         MVC   PRINT_LINE(MSG16L),MSG16\n         BAL   R11,PRT0000              PRINT THE MESSAGE\n         B     PROC0220\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   This member exists and REPLACE is specified                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0340 DS    0H\n         MVC   MSG17MEM,SEARCH_KEY_NAME COPY MEMBER NAME\n         SR    R1,R1\n         ICM   R1,3,SEARCH_KEY_VERSION  VERSION NUMBER\n         CVD   R1,DWORD                 CONVERT TO DECIMAL\n         MVC   MSG17VER,=X'402120202020'\n         ED    MSG17VER,DWORD+5         EDIT VERSION\n         MVC   PRINT_LINE(MSG17L),MSG17\n         BAL   R11,PRT0000              PRINT THE MESSAGE\n         OI    FLAGS,$RESTORE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   DELETE ALL RECORDS THAT APPLY TO THE EXISTING MEMBER.             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0350 DS    0H\n         ERASE RPL=RPL2\n         LTR   R15,R15                  SUCCESSFUL\n         BNZ   PROC0370\n         ICM   R1,15,SEARCH_KEY_SEQUENCE\n         LA    R1,1(R1)                 PLUS 1\n         STCM  R1,15,SEARCH_KEY_SEQUENCE\nPROC0360 DS    0H\n         GET   RPL=RPL2                 READ NEXT RECORD\n         LTR   R15,R15\n         BZ    PROC0350                 ERASE THIS RECORD\nPROC0370 DS    0H\n         CLI   SEARCH_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         BE    PROC0390                 YES, INDEX AND DATA DELETED\n         MVI   SEARCH_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         MVC   SEARCH_KEY_SEQUENCE,F1\n         B     PROC0360\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   This member did not exist. Add it to the library.                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0380 DS    0H\n         MVC   MSG18MEM,SEARCH_KEY_NAME COPY MEMBER NAME\n         SR    R1,R1\n         ICM   R1,3,SEARCH_KEY_VERSION  VERSION NUMBER\n         CVD   R1,DWORD                 CONVERT TO DECIMAL\n         MVC   MSG18VER,=X'402120202020'\n         ED    MSG18VER,DWORD+5         EDIT VERSION\n         MVC   PRINT_LINE(MSG18L),MSG18\n         BAL   R11,PRT0000              PRINT THE MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   Add the member.                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0390 DS    0H\n         OI    FLAGS,$RESTORE           SET 'RESTORING' INDICATOR\nPROC0400 DS    0H\n         SR    R2,R2                    CLEAR REGISTER\n         ICM   R2,3,0(R8)               RECORD LENGTH\n         SH    R2,H4                    MINUS LLBB\n         LA    R3,4(R8)\n         MODCB RPL=RPL1,                                               +\n               RECLEN=(R2),                                            +\n               AREA=(R3)\n         PUT   RPL=RPL1\n         LTR   R15,R15\n         BNZ   ERR0080\n         B     PROC0220\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   EOF on SYSUT1 has been found.                                     *\n*                                                                     *\n*   If specific members were requested, make sure all were found.     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0500 DS    0H\n         ICM   R9,15,INCLUDE_CHAIN\n         BZ    EXIT0000                 NOTHING ON THE CHAIN\n         TM    INCLUDE_FLAG,$INCLUDE_FOUND\n         BO    PROC0510                 YES\n         MVC   MSG14MEM,INCLUDE_MEMBER  COPY MEMBER NAME\n         SR    R1,R1\n         ICM   R1,3,INCLUDE_VERSION     VERSION NUMBER\n         CVD   R1,DWORD                 CONVERT TO DECIMAL\n         MVC   MSG14VER,=X'402120202020'\n         ED    MSG14VER,DWORD+5         EDIT VERSION\n         MVC   PRINT_LINE(MSG14L),MSG14\n         BAL   R11,PRT0000              PRINT THE MESSAGE\nPROC0510 DS    0H\n         ICM   R9,15,INCLUDE_NEXT\n         B     EXIT0000                 EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   PRINT_LINE(MSG01L),MSG01\n         BAL   R11,PRT0000\n         MVI   RC,8\n         OI    FLAGS,$ERROR\n         B     PROC0000\nERR0020  DS    0H\n         MVC   PRINT_LINE(MSG02L),MSG02\n         BAL   R11,PRT0000\n         MVI   RC,8\n         OI    FLAGS,$ERROR\n         B     PROC0000\nERR0030  DS    0H\n         MVC   PRINT_LINE(MSG03L),MSG03\n         BAL   R11,PRT0000\n         OI    FLAGS,$ERROR\n         MVI   RC,8\n         B     PROC0000\nERR0040  DS    0H\n         MVC   PRINT_LINE(MSG04L),MSG04\n         BAL   R11,PRT0000\n         MVI   RC,8\n         OI    FLAGS,$ERROR\n         B     PROC0000\nERR0050  DS    0H\n         ST    R15,DWORD\n         UNPK  MSG08RC(3),DWORD+3(2)\n         MVZ   MSG08RC(2),=X'0F0F'\n         TR    MSG08RC,HEXCHAR\n         MVI   MSG08RC+2,C' '\n         MVC   PRINT_LINE(MSG08L),MSG08\n         BAL   R11,PRT0000\n         MVI   RC,8\n         B     EXIT0000\nERR0060  DS    0H\n         ST    R15,DWORD\n         UNPK  MSG09RC(3),DWORD+3(2)\n         MVZ   MSG09RC(2),=X'0F0F'\n         TR    MSG09RC,HEXCHAR\n         MVI   MSG09RC+2,C' '\n         MVC   PRINT_LINE(MSG09L),MSG09\n         MVI   RC,8\n         BAL   R11,PRT0000\n         B     EXIT0000\nERR0070  DS    0H\n         ST    R15,DWORD\n         UNPK  MSG10RC(3),DWORD+3(2)\n         MVZ   MSG10RC(2),=X'0F0F'\n         TR    MSG10RC,HEXCHAR\n         MVI   MSG10RC+2,C' '\n         MVC   PRINT_LINE(MSG10L),MSG10\n         BAL   R11,PRT0000\n         MVI   RC,8\n         B     EXIT0000\nERR0080  DS    0H\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         CP    LINE_COUNT,LINE_MAX      TIME FOR HEADING?\n         BL    PRT0010                  NO\n         BAL   R10,HEAD0000             PRINT HEADING\nPRT0010  DS    0H\n         PUT   SYSPRINT,PRINT_CC        PRINT\n         AP    LINE_COUNT,P1            ADD 1 TO LINE COUNT\n         MVC   PRINT_LINE,PRINT_LINE-1\n         BR    R11                      EXIT\nHEAD0000 DS    0H\n         AP    PAGE_COUNT,P1            ADD 1 TO PAGE COUNTER\n         MVC   PRINT_CC(HEAD1L),HEAD1   COPY HEADING\n         ED    PRINT_CC+(HEAD1_PAGE-HEAD1)(L'HEAD1_PAGE),PAGE_COUNT\n         PUT   SYSPRINT,PRINT_CC        PRINT HEADING\n         MVC   PRINT_LINE,PRINT_LINE-1\n         ZAP   LINE_COUNT,P1            SET LINE COUNT\n         BR    R10                      DONE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ICM   R1,15,BUFFER_ADDRESS_1   WAS BUFFER OBTAINED?\n         BZ    EXIT0010                 NO\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE*2\nEXIT0010 DS    0H\n         ICM   R1,15,BUFFER_ADDRESS_2   WAS BUFFER OBTAINED?\n         BZ    EXIT0020                 NO\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$MAX_SOURCE_SIZE*2\nEXIT0020 DS    0H\n         CLOSE (SYSIN)\n         CLOSE (SYSPRINT)\n         CLOSE (SYSUT1)\n         CLOSE (LIB)\n         SR    R15,R15\n         IC    R15,RC\n         L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R14)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDWORD    DS    D\nSAVEAREA DS    18F\nSYSUT1   DCB   DDNAME=SYSUT1,                                          +\n               DSORG=PS,                                               +\n               RECFM=VB,                                               +\n               LRECL=$MAX_SOURCE_SIZE*2,                               +\n               BLKSIZE=$MAX_SOURCE_SIZE*2+4,                           +\n               EODAD=PROC0500,                                         +\n               MACRF=GM\n\nSYSIN    DCB   DDNAME=SYSIN,                                           +\n               DSORG=PS,                                               +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               EODAD=PROC0200,                                         +\n               MACRF=GM\n\nSYSPRINT DCB   DDNAME=SYSPRINT,                                        +\n               DSORG=PS,                                               +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               MACRF=PM\n\nLIB      ACB   AM=VSAM,                                                +\n               DDNAME=LIB,                                             +\n               MACRF=(KEY,DIR,OUT)\n\nRPL1     RPL   AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB,                 .. ACB                         +\n               OPTCD=(KEY,DIR,SYN,MVE)\n\nRPL2     RPL   AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB,                 .. ACB                         +\n               ARG=SEARCH_KEY,                                         +\n               KEYLEN=L'SEARCH_KEY,                                    +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n\nINCLUDE_CHAIN         DS   A\n\nSEARCH_KEY            DS   0CL15\nSEARCH_KEY_TYPE       DS   X\nSEARCH_KEY_NAME       DS   CL8\nSEARCH_KEY_VERSION    DS   XL2\nSEARCH_KEY_SEQUENCE   DS   XL4\n\nRC                    DS   X'00'\n\nCNTLSTMT              DC   CL80' '\nRESTORE_STATEMENT     DC   C'RESTORE '\nREPLACE_STATEMENT     DC   C'REPLACE                      '\n\nWORKMEM               DC   CL8' '\nWORKVER               DC   XL2'0000'\nWORKREPL              DC   C' '\nWORKWORK              DC   CL5'00000'\n\nFLAGS                 DC   X'00'\n$ERROR                EQU  X'80'\n$GLOBAL_REPLACE       EQU  X'40'\n$RESTORE              EQU  X'20'\n\nINCLUDE_ID            DC   CL8'INCLUDE'\nHEXCHAR               DC   C'0123456789ABCDEF'\n\nHEAD1                 DC   C'1'\n                      DC   CL50' '\n                      DC   C'LIBRARY UTILITY 6'\n                      DC   CL50' '\n                      DC   C'PAGE'\nHEAD1_PAGE            DC   X'402020202120'\nHEAD1L                EQU  *-HEAD1\n\nMSG00                 DS   0C\n                      DC   C'CONTROL STATEMENT: '\nMSG00SMT              DC   CL80' '\nMSG00L                EQU  *-MSG00\n\nMSG01                 DS   0C\n                      DC   C'** Name too long'\nMSG01L                EQU  *-MSG01\nMSG02                 DS   0C\n                      DC   C'** Non-numeric digit in version'\nMSG02L                EQU  *-MSG02\nMSG03                 DS   0C\n                      DC   C'** Too many digits in version number'\nMSG03L                EQU  *-MSG03\nMSG04                 DS   0C\n                      DC   C'** Name omitted'\nMSG04L                EQU  *-MSG04\nMSG05                 DS   0C\n                      DC   C'** Error(s) encountered, aborting'\nMSG05L                EQU  *-MSG05\nMSG08                 DS   0C\n                      DC   C'MODCB (AREA) failed, R15='\nMSG08RC               DC   CL2' '\n                      DC   C' '\nMSG08L                EQU  *-MSG08\nMSG09                 DS   0C\n                      DC   C'MODCB (RECLEN) failed, R15='\nMSG09RC               DC   CL2' '\n                      DC   C' '\nMSG09L                EQU  *-MSG09\nMSG10                 DS   0C\n                      DC   C'PUT failed, R15='\nMSG10RC               DC   CL2' '\n                      DC   C' '\nMSG10L                EQU  *-MSG10\nMSG11                 DS   0C\n                      DC   C'** Invalid control statement'\nMSG11L                EQU  *-MSG11\nMSG12                 DS   0C\n                      DC   C'** Invalid RESTORE statement'\nMSG12L                EQU  *-MSG12\nMSG13                 DS   0C\n                      DC   C'** Invalid option on RESTORE statement'\nMSG13L                EQU  *-MSG13\nMSG14                 DS   0C\n                      DC   C'Member '\nMSG14MEM              DC   CL8' '\nMSG14VER              DC   CL6' '\n                      DC   C' not found in export.'\nMSG14L                EQU  *-MSG14\nMSG15                 DS   0C\n                      DC   C'Member '\nMSG15MEM              DC   CL8' '\nMSG15VER              DC   CL6' '\n                      DC   C' not selected, not restored'\nMSG15L                equ  *-MSG15\nMSG16                 DS   0C\n                      DC   C'Member '\nMSG16MEM              DC   CL8' '\nMSG16VER              DC   CL6' '\n                      DC   C' exists, NOT replaced'\nMSG16L                EQU  *-MSG16\nMSG17                 DS   0C\n                      DC   C'Member '\nMSG17MEM              DC   CL8' '\nMSG17VER              DC   CL6' '\n                      DC   C' exists and will be replaced'\nMSG17L                EQU  *-MSG17\nMSG18                 DS   0C\n                      DC   C'Member '\nMSG18MEM              DC   CL8' '\nMSG18VER              DC   CL6' '\n                      DC   C' has been added to the library'\nMSG18L                EQU  *-MSG18\n\nBUFFER_ADDRESS_1      DC   A(0)\nBUFFER_ADDRESS_2      DC   A(0)\nBUFFER_SIZE           EQU  8004\n\nF1                    DC   F'1'\nH1                    DC   H'1'\nH4                    DC   H'4'\nH5                    DC   H'5'\nH8                    DC   H'8'\nLINE_COUNT            DC   PL3'0'\nPAGE_COUNT            DC   PL3'0'\nP1                    DC   P'1'\nLINE_MAX              DC   P'65'\n\nBLANKS                DC   CL80' '\n\n                      DC   C' '\nPRINT_LINE            DS   0CL133\nPRINT_CC              DC   C' '\nPRINT_DATA            DC   CL132' '\nINCLUDE               DSECT\nINCLUDE_EYE           DS   CL8\nINCLUDE_NEXT          DS   XL4\nINCLUDE_MEMBER        DS   CL8\nINCLUDE_VERSION       DS   XL2\nINCLUDE_FLAG          DS   X\n$INCLUDE_FOUND        EQU  X'80'\n$INCLUDE_REPLACE      EQU  X'40'\nINCLUDEL              EQU  *-INCLUDE\n\nEXPORT_RECORD         DSECT\nEXPORT_LENGTH         DS   XL2\n                      DS   XL2\n                      LIBRECD DSECT=NO\n\n$MAX_SOURCE_SIZE EQU 8000\n\n         COPY  REGEQU\n         END   UTIL0006\n./ ADD NAME=UTIL0007 0100-09250-09250-0919-00415-00415-00000-SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: Load members of PDS directly to a library                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUTIL0007 CSECT\nUTIL0007 AMODE 24\nUTIL0007 RMODE 24\n         USING UTIL0007,R12                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\n         DC    CL8'UTIL0007'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0000 DS    0H\n         LA    R1,SAVEAREA\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         COPY SAVE AREA ADDRESS\n         USING SAVEAREA,R13\n         OPEN  (DIR,INPUT)                    PDS DIRECTORY\n         OPEN  (MEMBER,INPUT)                 OPEN MEMBER DCB\n         OPEN  (SYSPRINT,OUTPUT)              OPEN SYSPRINT\n         OPEN  (LIB,UPDAT)                    OPEN LIBRARY\n         BAL   R14,HEAD0000                   PRINT HEADING\n         LOAD  EP=LIBUX01\n         ST    R0,AUX01\n         L     R1,=A(EXPANDED_BUFFER)\n         ST    R1,UX01_EXPANDED_BUFFER\n         L     R1,=A(COMPRESSED_BUFFER)\n         ST    R1,UX01_COMPRESSED_BUFFER\n         LA    R1,EXPANDED_LENGTH\n         ST    R1,UX01_EXPANDED_LENGTH\n         LA    R1,COMPRESSED_LENGTH\n         ST    R1,UX01_COMPRESSED_LENGTH\n         LA    R1,LIB_KEY\n         L     R6,=A(EXPANDED_BUFFER)\n         SR    R7,R7                          CLEAR LENGTH\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        R2  Length of data remaining in directory block              *\n*        R3  address within directory data                            *\n*        R4  address within source data buffer                        *\n*        R5  data remaining in source buffer                          *\n*        R6  address within de-compressed buffer                      *\n*        R7  length of data in de-compressed buffer                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0010 DS    0H\n         GET   DIR,DIRAREA                    BLOCK OF DIRECTORY\n         LH    R2,DIRAREA                     BYTES OF DATA IN RECORD\n         SH    R2,H2                          MINUS 2 FOR LENGTH\n         LA    R3,DIRAREA+2                   FIRST ENTRY IN BLOCK\n         USING DIRDSECT,R3                    DEFINE BASE\nPROC0020 DS    0H\n         CLI   0(R3),X'FF'                    END OF DIRECTORY?\n         BE    EXIT0000                       YES\n         MVC   TTRZ(3),DIRTTR                 MOVE TO FULLWORD BOUNDARY\n         MVI   TTRZ+3,X'00'                   SET 'Z' TO ZERO\n         POINT MEMBER,TTRZ,TYPE=REL           ISSUE POINT\n         LTR   R15,R15                        LOCATED SUCCESSFULLY??\n         BNZ   ERR0010                        NO\n         AP    TOTAL_MEMBERS,P1               ADD 1 TO MEMBERS\n         MVC   LIB_KEY_NAME,0(R3)             SET MEMBER NAME\n         XC    LIB_KEY_SEQ,LIB_KEY_SEQ        RESET SEQUENCE NUMBER\nPROC0040 DS    0H\n         XC    READECB,READECB                CLEAR READ ECB\n         L     R4,=A(SOURCE_BUFFER)           MEMBER I/O AREA\n         READ  READECB,                       READ BLOCK OF MEMBER     +\n               SF,                            .. SEQUENTIALLY FORWARD  +\n               MEMBER,                        .. DCB                   +\n               (R4),                          .. I/O AREA ADDRESS      +\n               ,                              .. NO SPECIFIED LENGTH   +\n               S                              .. BLOCK SIZE FROM DCB\n         CHECK READECB                        WAIT FOR I/O COMPLETION\n         LA    R9,MEMBER                      MEMBER DCB\n         USING IHADCB,R9                      DEFINE BASE\n         LH    R5,DCBBLKSI                    BLOCK SIZE FROM DCB\n         L     R1,DCBIOBA                     IOB ADDRESS\n         SH    R1,H8                          DCB POINTS AT IOB+8\n         USING IOB,R1                         DEFINE BASE\n         SH    R5,IOBSTDRD+14                 LENGTH ACTUALLY READ\nPROC0050 DS    0H\n         AP    MEMBER_SOURCE_RECORDS,P1       add 1 to records\n         MVC   0(80,R6),0(R4)                 COPY SOURCE TO BUFFER\n         LA    R6,80(,R6)                     NEXT SOURCE RECORD\n         AH    R7,H80                         PLUS 80\n         CH    R7,=Y($MAX_SOURCE_SIZE)        BUFFER FULL?\n         BL    PROC0060                       NO\n         BAL   R11,PROC0200                   COMPRESS/WRITE BUFFER\nPROC0060 DS    0H\n         AH    R4,H80                         NEXT SOURCE RECORD\n         SH    R5,H80                         MINUS A RECORD\n         BH    PROC0050                       ADD NEXT RECORD TO BUFFER\n         B     PROC0040                       READ NEXT BUFFER\n* ------------------------------------------------------------------- *\n*        EOF on current member                                        *\n* ------------------------------------------------------------------- *\nPROC0150 DS    0H\n         LTR   R7,R7                          ANY DATA IN BUFFER?\n         BZ    PROC0160                       NO\n         BAL   R11,PROC0200                   COMPRESS/WRITE LAST BUFR\nPROC0160 DS    0H\n* ------------------------------------------------------------------- *\n*        Build/write index record                                     *\n* ------------------------------------------------------------------- *\n         XC    LIB_RECORD(LIB_INDEX_RECORD_LENGTH),LIB_RECORD\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX\n         MVC   LIB_KEY_NAME,0(R3)\n         MVC   LIB_KEY_VERSION,H1\n         MVC   LIB_KEY_SEQ,F1\n         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN\n         TIME  DEC\n         STCM  R0,15,LIB_INDEX_CREATE_TIME\n         STCM  R1,15,LIB_INDEX_CREATE_DATE\n         XC    LIB_INDEX_CHECK_OUT_TIME,LIB_INDEX_CHECK_OUT_TIME\n         ZAP   LIB_INDEX_CHECK_OUT_DATE,P0\n         MVC   LIB_INDEX_CHECK_OUT_USER,BLANKS\n         XC    LIB_INDEX_CHECK_OUTS,LIB_INDEX_CHECK_OUTS\n         XC    LIB_INDEX_CHECK_IN_TIME,LIB_INDEX_CHECK_IN_TIME\n         ZAP   LIB_INDEX_CHECK_IN_DATE,P0\n         MVC   LIB_INDEX_OWNER,BLANKS\n         MVC   LIB_INDEX_CHECK_IN_USER,BLANKS\n         ZAP   DWORD,MEMBER_SOURCE_RECORDS\n         CVB   R1,DWORD\n         STCM  R1,15,LIB_INDEX_RECORDS\n         LA    R14,LIB_INDEX_RECORD_LENGTH\n         LA    R15,LIB_RECORD\n         MODCB RPL=WRITERPL,                                           +\n               RECLEN=(R14),                                           +\n               AREA=(R15)\n         PUT   RPL=WRITERPL                   WRITE INDEX RECORD\n         LTR   R15,R15                        SUCCESFUL?\n         BNZ   ERR0020                        NO\n         MVC   PRINT_CC(MSG02L),MSG02\n         MVC   PRINT_CC+(MSG02_NAME-MSG02)(L'MSG02_NAME),0(R3)\n         ED    PRINT_CC+(MSG02_SOURCE_RECORDS-MSG02)(L'MSG02_SOURCE_REC+\n               ORDS),MEMBER_SOURCE_RECORDS\n         ED    PRINT_CC+(MSG02_DATA_RECORDS-MSG02)(L'MSG02_DATA_RECORDS+\n               ),MEMBER_DATA_RECORDS\n         L     R1,MEMBER_LENGTH               COMPRESSED SIZE\n         CVD   R1,DWORD                       CONVERT TO DECIMAL\n         ED    PRINT_CC+(MSG02_DATA_SIZE-MSG02)(L'MSG02_DATA_SIZE),DWOR+\n               D+3\n         BAL   R14,PRT0000\n         AP    TOTAL_SOURCE_RECORDS,MEMBER_SOURCE_RECORDS\n         ZAP   MEMBER_SOURCE_RECORDS,P0\n         AP    TOTAL_DATA_RECORDS,MEMBER_DATA_RECORDS\n         ZAP   MEMBER_DATA_RECORDS,P0\n         L     R1,TOTAL_LENGTH\n         A     R1,MEMBER_LENGTH\n         ST    R1,TOTAL_LENGTH\n         XC    MEMBER_LENGTH,MEMBER_LENGTH\n* ------------------------------------------------------------------- *\n*        Locate next directory entry                                  *\n* ------------------------------------------------------------------- *\n         NI    DIRC,X'1F'                     ONLY LENGTH BITS\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,DIRC                        HALFWORDS OF USER DATA\n         AR    R1,R1                          BYTES OF USER DATA\n         LA    R1,DIRUSER-DIRDSECT(R1)        TOTAL LENGTH\n         SR    R2,R1                          DIRECTORY DATA REMAINING\n         BZ    PROC0010                       READ NEXT DIRECOTRY BLOCK\n         AR    R3,R1                          NEXT MEMBER\n         B     PROC0020                       PROCESS NEXT MEMBER\n* ------------------------------------------------------------------- *\n*        Compress buffer and write data record                        *\n* ------------------------------------------------------------------- *\nPROC0200 DS    0H\n         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA\n         MVC   LIB_KEY_VERSION,H1\n         ICM   R1,15,LIB_KEY_SEQ              CURRENT RECORD NUMBER\n         A     R1,F1                          PLUS 1\n         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER\n         ST    R7,EXPANDED_LENGTH\n         MVI   UX01_FUNCTION,$UX01_COMPRESS\n         LA    R1,UX01_PARMS\n         L     R15,AUX01\n         BASSM R14,R15                        COMPRESS THE SOURCE\n         MVC   0(L'LIB_KEY,R6),LIB_KEY        COPY TO BUFFER\n         L     R14,MEMBER_LENGTH\n         A     R14,COMPRESSED_LENGTH\n         ST    R14,MEMBER_LENGTH\n         L     R14,COMPRESSED_LENGTH\n         LA    R14,L'LIB_KEY(R14)             PLUS LENGTH OF KEY\n         LA    R15,LIB_RECORD\n         MODCB RPL=WRITERPL,                                           +\n               RECLEN=(R14),                                           +\n               AREA=(R15)\n         PUT   RPL=WRITERPL\n         LTR   R15,R15                        SUCCESFUL?\n         BNZ   ERR0020                        NO\n         AP    MEMBER_DATA_RECORDS,P1\n         L     R6,=A(EXPANDED_BUFFER)\n         SR    R7,R7                          CLEAR LENGTH\n         BR    R11\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         CVD   R15,DWORD                      CONVERT TO DECIMAL\n         MVC   PRINT_CC(EMSG01L),EMSG01\n         ED    PRINT_CC+(EMSG01_RC-EMSG01)(L'EMSG01_RC),DWORD+6\n         BAL   R14,PRT0000                    PRINT\n         B     EXIT0000\nERR0020  DS    0H\n         CVD   R15,DWORD                      CONVERT TO DECIMAL\n         MVC   PRINT_CC(EMSG02L),EMSG02\n         ED    PRINT_CC+(EMSG02_RC-EMSG02)(L'EMSG02_RC),DWORD+6\n         LA    R1,WRITERPL\n         USING IFGRPL,R1\n         UNPK  PRINT_CC+(EMSG02_FDBK-EMSG02)(9),RPLFDBK(5)\n         TR    PRINT_CC+(EMSG02_FDBK-EMSG02)(8),HEXCHAR\n         MVI   PRINT_CC+(EMSG02_FDBK-EMSG02)+8,C' '\n         BAL   R14,PRT0000                    PRINT\n         DC    H'0'\n         B     EXIT0000\n         DROP  R1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ST    R14,PRINT_LINK\n         CP    LINE_COUNT,LINE_MAX            TIME FOR HEADING?\n         BL    PRT0010                        NO\n         BAL   R14,HEAD0000                   PRINT HEADING\nPRT0010  DS    0H\n         PUT   SYSPRINT,PRINT_CC              PRINT\n         AP    LINE_COUNT,P1                  ADD 1 TO LINE COUNT\n         MVC   PRINT_LINE,PRINT_LINE-1\n         L     R14,PRINT_LINK\n         BR    R14                            EXIT\nHEAD0000 DS    0H\n         ST    R14,HEAD_LINK\n         AP    PAGE_COUNT,P1                  ADD 1 TO PAGE COUNTER\n         MVC   PRINT_CC(HEAD1L),HEAD1         COPY HEADING\n         ED    PRINT_CC+(HEAD1_PAGE-HEAD1)(L'HEAD1_PAGE),PAGE_COUNT\n         PUT   SYSPRINT,PRINT_CC              PRINT HEADING\n         MVC   PRINT_LINE,PRINT_LINE-1\n         ZAP   LINE_COUNT,P1                  SET LINE COUNT\n         L     R14,HEAD_LINK\n         BR    R14                            DONE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         MVC   PRINT_CC(MSG03L),MSG03\n         ED    PRINT_CC+(MSG03_MEMBERS-MSG03)(L'MSG03_MEMBERS),TOTAL_ME+\n               MBERS\n         ED    PRINT_CC+(MSG03_SOURCE_RECORDS-MSG03)(L'MSG03_SOURCE_REC+\n               ORDS),TOTAL_SOURCE_RECORDS\n         ED    PRINT_CC+(MSG03_DATA_RECORDS-MSG03)(L'MSG03_DATA_RECORDS+\n               ),TOTAL_DATA_RECORDS\n         L     R1,TOTAL_LENGTH                COMPRESSED SIZE\n         CVD   R1,DWORD                       CONVERT TO DECIMAL\n         ED    PRINT_CC+(MSG03_DATA_SIZE-MSG03)(L'MSG03_DATA_SIZE),DWOR+\n               D+3\n         BAL   R14,PRT0000\n         BAL   R14,PRT0000\n         CLOSE (SYSPRINT)\n         CLOSE (DIR)\n         CLOSE (MEMBER)\n         CLOSE (LIB)\n         DELETE EP=LIBUX01\n         L     R13,4(R13)\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDWORD    DS    D\nSAVEAREA DS    18F\nDIR      DCB   DSORG=PS,                                               +\n               DDNAME=SYSUT1,                                          +\n               RECFM=U,                                                +\n               LRECL=256,                                              +\n               EODAD=EXIT0000,                                         +\n               MACRF=GM\nMEMBER   DCB   DSORG=PO,                                               +\n               DDNAME=SYSUT1,                                          +\n               RECFM=FB,                                               +\n               EODAD=PROC0150,                                         +\n               MACRF=R\nSYSPRINT DCB   DDNAME=SYSPRINT,                                        +\n               DSORG=PS,                                               +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               MACRF=PM\nLIB      ACB   AM=VSAM,                                                +\n               DDNAME=LIB,                                             +\n               MACRF=(KEY,DIR,OUT)\n\nWRITERPL RPL   AM=VSAM,                GENERATE VSAM RPL               +\n               ACB=LIB,                 .. ACB                         +\n               OPTCD=(KEY,DIR,SYN)      ..\n\n                      UX01PARM DSECT=NO\n\nEXPANDED_LENGTH       DC   F'0'\nCOMPRESSED_LENGTH     DC   F'0'\n\nTTRZ                  DC   F'0'\n\nPRINT_LINK            DS   A\nHEAD_LINK             DS   A\n\nAUX01                 DC   A(0)\nF1                    DC   F'1'\nH1                    DC   H'1'\nH2                    DC   H'2'\nH8                    DC   H'8'\nH80                   DC   H'80'\nLINE_COUNT            DC   PL3'0'\nPAGE_COUNT            DC   PL3'0'\nP0                    DC   P'0'\nP1                    DC   P'1'\nLINE_MAX              DC   P'65'\nMEMBER_SOURCE_RECORDS DC   PL5'0'\nMEMBER_DATA_RECORDS   DC   PL5'0'\nMEMBER_LENGTH         DC   F'0'\nTOTAL_MEMBERS         DC   PL5'0'\nTOTAL_DATA_RECORDS    DC   PL5'0'\nTOTAL_SOURCE_RECORDS  DC   PL6'0'\nTOTAL_LENGTH          DC   F'0'\n\nBLANKS                DC   CL80' '\n\nHEXCHAR               EQU  *-C'0'\n                      DC   C'0123456789ABCDEF'\n\nHEAD1                 DC   C'1'\n                      DC   CL50' '\n                      DC   C'LIBRARY UTILITY 7'\n                      DC   CL50' '\n                      DC   C'PAGE'\nHEAD1_PAGE            DC   X'402020202120'\nHEAD1L                EQU  *-HEAD1\n\nMSG02                 DS   0C\n                      DC   C' '\n                      DC   C'Member '\nMSG02_NAME            DC   CL8' '\n                      DC   C' source records:'\nMSG02_SOURCE_RECORDS  DC   X'40202020202020202120'\n                      DC   C'    data records:'\nMSG02_DATA_RECORDS    DC   X'40202020202020202120'\n                      DC   C'    data size:'\nMSG02_DATA_SIZE       DC   X'40202020202020202120'\nMSG02L                EQU  *-MSG02\n\nMSG03                 DS   0C\n                      DC   C'-'\n                      DC   C'TOTAL  '\n                      DC   CL4' '\nMSG03_MEMBERS         DC   X'40202020202020202120'\n                      DC   CL8' '\nMSG03_SOURCE_RECORDS  DC   X'402020202020202020202120'\n                      DC   C'                 '\nMSG03_DATA_RECORDS    DC   X'40202020202020202120'\n                      DC   C'              '\nMSG03_DATA_SIZE       DC   X'40202020202020202120'\nMSG03L                EQU  *-MSG03\n\nEMSG01                DS   0C\n                      DC   C'-'\n                      DC   C'UTIL000701E '\n                      DC   C'POINT failed, RC='\nEMSG01_RC             DC   X'40202120'\nEMSG01L               EQU  *-EMSG01\n\nEMSG02                DS   0C\n                      DC   C'-'\n                      DC   C'UTIL000702E '\n                      DC   C'VSAM PUT failed, R15='\nEMSG02_RC             DC   X'40202120'\n                      DC   C', RPLFDBK='\nEMSG02_FDBK           DC   CL8' '\n                      DC   C' '\nEMSG02L               EQU  *-EMSG02\n\n                      DC   C' '\nPRINT_LINE            DS   0CL133\nPRINT_CC              DC   C' '\nPRINT_DATA            DC   CL132' '\n\nDIRAREA               DS   0H,CL256\n\n                      LTORG\n\n                      LIBRECD DSECT=NO\n                      ORG  LIB_DATA\nCOMPRESSED_BUFFER     DS   ($MAX_SOURCE_SIZE*2)x\n\nEXPANDED_BUFFER       DS   ($MAX_SOURCE_SIZE)X\n\nSOURCE_BUFFER         DS   ($MAX_SOURCE_SIZE)X\n\n         SPACE 2\nDIRDSECT DSECT\nDIRNAME  DS    CL8\nDIRTTR   DS    CL3\nDIRC     DS    X\nDIRUSER  DS    0C\n\n         IFGRPL AM=VSAM\n         IEZIOB\n         DCBD   DSORG=PO\n         COPY   REGEQU\n$MAX_SOURCE_SIZE EQU 8000\n         END    UTIL0007\n./ ADD NAME=VTAMSUB  0100-09250-09250-0919-00394-00394-00000-SOURCE\n*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVTAMSUB  CSECT\nVTAMSUB  AMODE 31\nVTAMSUB  RMODE ANY\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING VTAMSUB,R12                    DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'VTAMSUB'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LR    R10,R1                         COPY PARM BLOCK ADDRESS\n         USING VTAM_PARM_LIST,R10             DEFINE BASE\n         L     R8,VTAM_PARM_ACB\n         USING IFGACB,R8                      DEFINE BASE\n         L     R7,VTAM_PARM_RPL\n         USING IFGRPL,R7                      DEFINE BASE\n         L     R6,VTAM_PARM_RPLX\n         USING ISTRPL6X,R6                    DEFINE BASE\n         L     R5,VTAM_PARM_IO\n         USING NETBLOK,R5                     DEFINE BASE\n         GETMAIN RU,                                                   +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=ANY\n         ST    R1,8(R13)                      CHAIN OUR SAVE AREA\n         ST    R13,4(R1)                      CHAIN CALLER'S AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORK_AREA,R13                  DEFINE WORK AREA BASE\n         MVC   WORK_JOB_NAME,BLANKS           CLEAR JOB NAME\n         CLI   VTAM_PARM_CMD,$VTAM_OPEN\n         BE    OPEN0000                       YES\n         CLI   VTAM_PARM_CMD,$VTAM_SEND\n         BE    SEND0000                       YES\n         CLI   VTAM_PARM_CMD,$VTAM_RECEIVE\n         BE    RECV0000                       YES\n         CLI   VTAM_PARM_CMD,$VTAM_CLOSE\n         BE    CLOSE000                       YES\n         MVI   VTAM_PARM_RC,10\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nOPEN0000 DS    0H\n         LA    R0,ACBL                        ACB'S SIZE\n         GETMAIN RU,                          ACQUIRE STORAGE FOR ACB  +\n               LV=(0),                        .. SIZE                  +\n               LOC=ANY                        ..\n         ST    R1,VTAM_PARM_ACB               SAVE ACB'S ADDRESS\n         LR    R8,R1                          COPY ACB ADDRESS\n         MVC   0(ACBL,R8),ACBI                INITIALIZE ACB\n         MVI   WORK_APPL_LENGTH,8             SET LENGTH\n         LA    R0,WORK_APPL_LENGTH            APPLID'S LENGTH ADDRESS\n         ST    R0,ACBAPID                     SET APPLID ADDRESS IN ACB\n         LA    R0,EXLSTL                      EXLST SIZE\n         GETMAIN RU,                          ACQUIRE STORAGE FOR EXLST+\n               LV=(0),                        .. SIZE                  +\n               LOC=ANY                        .. FROM BELOW THE LINE\n         MVC   0(EXLSTL,R1),EXLSTI            INITIALIZE EXIT LIST\n         ST    R1,VTAM_PARM_XLST              SAVE EXIT LIST'S ADDRESS\n         ST    R1,ACBEXLST                    SET EXLST'S ADDRESS\n         USING IFGEXLST,R1                    DEFINE BASE\n         XC    EXLATTNP,EXLATTNP              ATTN EXIT\n         LA    R0,RPLL                        RPL'S SIZE\n         GETMAIN RU,                          ACQUIRE STORAGE FOR RPL  +\n               LV=(0),                        .. SIZE                  +\n               LOC=ANY                        .. FROM BELOW THE LINE\n         LR    R7,R1                          COPY ADDRESS\n         ST    R7,VTAM_PARM_RPL               SAVE RPL'S ADDRESS\n         MVC   0(RPLL,R7),RPLI                INITIALIZE RPL\n         LA    R0,RPLEXTL                     RPL EXTENSION SIZE\n         GETMAIN RU,                          GET STORAGE FOR RPLEXT   +\n               LV=(0),                        .. SIZE                  +\n               LOC=ANY                        .. FROM BELOW THE LINE\n         LR    R6,R1                          COPY ADDRESS\n         ST    R6,VTAM_PARM_RPLX              SAVE RPL'S ADDRESS\n         MVC   0(RPLEXTL,R6),RPLEXTI          INITIALIZE RPL EXTENSION\n         ST    R6,RPLAAREA                    SET RPL EXTENSION'S ADDR\n         MVC   RPLDACB,VTAM_PARM_ACB          SET ACB'S ADDRESS\n         GETMAIN RU,                          GET STORAGE FOR I/O AREA +\n               LV=32768,                      .. SIZE                  +\n               LOC=ANY                        ..\n         LR    R5,R1                          COPY ADDRESS\n         ST    R5,VTAM_PARM_IO                SAVE I/O AREA ADDRESS\n         LA    R0,NIBL                        NIB'S SIZE\n         GETMAIN RU,                          ACQUIRE STORAGE FOR NIB  +\n               LV=(0),                        .. SIZE                  +\n               LOC=ANY                        .. FROM BELOW THE LINE\n         LR    R4,R1                          COPY NIB'S ADDRESS\n         USING ISTDNIB,R4\n         ST    R4,VTAM_PARM_NIB               SET NIB'S ADDRESS\n         MVC   0(NIBL,R4),NIBI                INITIALIZE NIB\n         MVC   NIBSYM,VTAM_PARM_APPL          SET STC'S APPLID\n         INQUIRE RPL=(R7),                    ISSUE INQUIRE            +\n               NIB=(R4),                      .. NIB'S ADDRESS         +\n               OPTCD=APPSTAT                  .. WANT PARTNER'S STATUS\n         CLI   RPLFDB3,0                      PARTNER READY?\n         BNE   OPEN0060                       NO\n         LOAD  EP=LIBOPT                      LOAD OPTIONS\n         LR    R15,R0                         COPY ADDRESS\n         USING OPTDSECT,R15                   DEFINE BASE\n         LA    R3,OPTACB                      ADDRESS OF ACB NAMES\n         SR    R2,R2                          CLEAR REGISTER\n         ICM   R2,3,OPT#ACB                   NUMBER OF ACBS\nOPEN0010 DS    0H\n         MVC   WORK_APPL_NAME,0(R3)           COPY ACB NAME\n         MVC   WORK_OCPL(OPENL),OPENI\n         OPEN  ((R8)),                                                 +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)               OPEN ACB\n         LTR   R15,R15                        OPEN SUCCESSFUL?\n         BZ    OPEN0020                       YES\n         LA    R3,8(R3)                       NEXT ACB NAME\n         BCT   R2,OPEN0010                    LOOP\n         DELETE EP=LIBOPT                     DELETE OPTIONS\n         MVI   VTAM_PARM_RC,1                 SET RETURN CODE\n         B     EXIT0000                       EXIT\nOPEN0020 DS    0H\n         DELETE EP=LIBOPT\n         SETLOGON ACB=(R8),                   ISSUE SETLOGON           +\n               RPL=(R7),                      .. RPL FOR REQUEST       +\n               OPTCD=START                    .. ENABLE EXIT\n         MVC   RPL6LU,VTAM_PARM_APPL          SET PARTNER'S LU NAME\n         APPCCMD CONTROL=OPRCNTL,             ISSUE APPC COMMAND       +\n               QUALIFY=CNOS,                  .. CNOS                  +\n               RPL=(R7),                      .. RPL'S ADDRESS         +\n               LOGMODE=LU62P                  .. LOGMODE\n         CLC   RPL6RC,X000001                 CNOS ACCEPTED?\n         BE    OPEN0030                       YES\n         MVI   VTAM_PARM_RC,2                 SET RETURN CODE\n         B     EXIT0000                       EXIT\nOPEN0030 DS    0H\n         MVC   0(FMH5L,R5),FMH5               COPY FMH5 TO I/O AREA\n         XC    WORK_VTAM_ECB,WORK_VTAM_ECB    CLEAR THE ECB\n         APPCCMD CONTROL=ALLOC,               ISSUE APPC COMMAND       +\n               QUALIFY=ALLOCD,                .. ALLOCATE A SESSION    +\n               RPL=(R7),                      .. RPL'S ADDRESS         +\n               ECB=WORK_VTAM_ECB,             .. ECB                   +\n               AREA=(R5),                     .. FMH'S ADDRESS         +\n               RECLEN=FMH5L,                  .. FMH'S LENGTH          +\n               LOGMODE=LU62P,                 .. LOGMODE               +\n               OPTCD=ASY\n         WAIT  1,ECB=WORK_VTAM_ECB\n         APPCCMD CONTROL=CHECK,RPL=(R7)\n         OC    RPL6RC,RPL6RC                  ALL ZEROS?\n         BNZ   OPEN0060                       NO\n         MVC   VTAM_PARM_CNVID,RPL6CNVD       SAVE CONVERSATION ID\n* ------------------------------------------------------------------- *\n*        Identify the user                                            *\n* ------------------------------------------------------------------- *\n         L     R1,CVTPTR                      CVT ADDRESS\n         USING CVT,R1                         DEFINE BASE\n         ICM   R15,15,CVTSMCA                 SMF AREA ADDRESS\n         BZ    OPEN0070                       SMF NOT ACTIVE!\n         USING SMCABASE,R15                   DEFINE BASE\n         MVC   WORK_SMF,SMCASID               COPY SMF ID\n         USING PSA,R0                         DEFINE BASE\n         L     R1,PSAAOLD                     OUR ASCB'S ADDRESS\n         USING ASCB,R1                        DEFINE BASE\n         ICM   R14,15,ASCBJBNI                JOB NAME ADDRESS\n         BNZ   OPEN0040\n         ICM   R14,15,ASCBJBNS                STC NAME ADDRESS\n         BZ    OPEN0050                       NO NAME.. STRANGE..\nOPEN0040 DS    0H\n         MVC   WORK_JOB_NAME,0(R14)           SAVE JOB OR STC NAME\nOPEN0050 DS    0H\n         L     R14,ASCBASXB                   ASXB ADDRESS\n         USING ASXB,R14                       DEFINE ASCB BASE\n         L     R15,ASXBSENV                   ACEE'S ADDRESS\n         USING ACEE,R15                       DEFINE ACEE BASE\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,ACEEUSRL                    USER ID LENGTH\n         BCTR  R1,0                           MINUS 1\n         MVC   WORK_USER,BLANKS               INITIALIZE USERID\n         EX    R1,UIDMVC                      COPY USER ID\n         MVI   NET_FUNCTION,$NET_IDENTIFY_USER\n         MVC   NET_SMF,WORK_SMF\n         MVC   NET_USER,WORK_USER\n         MVC   NET_JOB_NAME,WORK_JOB_NAME\n         LA    R0,NET_IDENTIFY_LENGTH\n         STCM  R0,3,NET_LENGTH\n         BAL   R9,SEND0010                    SEND\n         BAL   R9,RECV0010                    RECEIVE\n         CLI   NET_RETURN_CODE,$NET_OK\n         BE    EXIT0000                       NO\n         MVI   VTAM_PARM_RC,3                 SET RETURN CODE\n         B     EXIT0000                       AND EXIT\nOPEN0060 DS    0H\n         MVI   VTAM_PARM_RC,4                 SET RETURN CODE\n         B     EXIT0000                       AND EXIT\nOPEN0070 DS    0H\n         MVI   VTAM_PARM_RC,5                 SET RETURN CODE\n         B     EXIT0000                       AND EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nRECV0000 DS    0H\n         BAL   R9,RECV0010\n         B     EXIT0000\nRECV0010 DS    0H\n         XC    WORK_VTAM_ECB,WORK_VTAM_ECB    CLEAR THE ECB\n         APPCCMD CONTROL=RECEIVE,             ISSUE RECEIVE            +\n               QUALIFY=SPEC,                  .. FOR A SPECIFIC SESSION+\n               RPL=(R7),                      .. RPL'S ADDRESS         +\n               FILL=LL,                       .. ONLY 1 LOGICAL RECORD +\n               AREA=(R5),                     .. I/O AREA ADDRESS      +\n               AREALEN=32768,                 .. I/O AREA SIZE         +\n               CONVID=VTAM_PARM_CNVID,        .. CONVERSATION ID       +\n               OPTCD=ASY\n         WAIT  ECB=WORK_VTAM_ECB              WAIT FOR THE SEND\n         APPCCMD CONTROL=CHECK,RPL=(R7)\n         OC    RPL6RC,RPL6RC                  RECEIVE OK?\n         BZR   R9                             YES\n         MVI   VTAM_PARM_RC,1                 SET RETURN CODE\n         BR    R9\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nSEND0000 DS    0H\n         BAL   R9,SEND0010\n         B     EXIT0000\nSEND0010 DS    0H\n         XC    WORK_VTAM_ECB,WORK_VTAM_ECB    CLEAR THE ECB\n         SR    R2,R2                          CLEAR REGISTER\n         ICM   R2,3,NET_LENGTH                LENGTH\n         XC    NET_FILL,NET_FILL\n         APPCCMD CONTROL=SEND,                ISSUE SEND               +\n               QUALIFY=DATA,                  .. SEND DATA             +\n               RPL=(R7),                      .. RPL'S ADDRESS         +\n               AREA=(R5),                     .. I/O AREA ADDRESS      +\n               ECB=WORK_VTAM_ECB,             .. ECB ADDRESS           +\n               RECLEN=(R2),                   .. I/O LENGTH            +\n               CONMODE=CS,                    .. CONTINUE SPECIFIC     +\n               CONVID=VTAM_PARM_CNVID,        .. CONVERSATION ID       +\n               OPTCD=ASY\n         WAIT  ECB=WORK_VTAM_ECB              WAIT FOR THE SEND\n         APPCCMD CONTROL=CHECK,RPL=(R7)\n         OC    RPL6RC,RPL6RC                  SEND OK?\n         BZR   R9                             YES\n         MVI   VTAM_PARM_RC,1                 SET RETURN CODE\n         BR    R9\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCLOSE000 DS    0H\n         APPCCMD CONTROL=DEALLOC,             DE-ALLOCATE A SESSION    +\n               QUALIFY=FLUSH,                 .. FLUSH BUFFERS         +\n               RPL=(R7),                      .. RPL'S ADDRESS         +\n               CONVID=VTAM_PARM_CNVID         .. CONVERSATION ID\n         OC    RPL6RC,RPL6RC                  DE-ALLOCATE SUCCESSFUL?\n         BNZ   CLOSE100                       NO\nCLOSE010 DS    0H\n         MVC   WORK_OCPL(CLOSEL),CLOSEI\n         CLOSE ((R8)),                        CLOSE THE ACB            +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\nCLOSE020 DS    0H\n         ICM   R1,15,VTAM_PARM_ACB            ACB'S ADDRESS\n         BZ    CLOSE030                       NOT ACQUIRED\n         FREEMAIN RU,A=(1),LV=ACBL            FREEMAIN ACB\nCLOSE030 DS    0H\n         ICM   R1,15,VTAM_PARM_RPL            RPL'S ADDRESS\n         BZ    CLOSE040                       NOT ACQUIRED\n         FREEMAIN RU,A=(1),LV=RPLL            FREEMAIN RPL\nCLOSE040 DS    0H\n         ICM   R1,R15,VTAM_PARM_RPLX          RPL EXTENSION'S ADDRESS\n         BZ    CLOSE050                       NOT ACQUIRED\n         FREEMAIN RU,A=(1),LV=RPLEXTL         FREEMAIN RPL EXTENSION\nCLOSE050 DS    0H\n         ICM   R1,15,VTAM_PARM_NIB            NIB'S ADDRESS\n         BZ    CLOSE060                       NOT ACQUIRED\n         FREEMAIN RU,A=(1),LV=NIBL            FREEMAIN NIB\nCLOSE060 DS    0H\n         ICM   R1,15,VTAM_PARM_XLST           EXLST'S ADDRESS\n         BZ    CLOSE070                       NOT ACQUIRED\n         FREEMAIN RU,A=(1),LV=EXLSTL\nCLOSE070 DS    0H\n         ICM   R1,15,VTAM_PARM_IO             I/O AREA ADDRESS\n         BZ    CLOSE080                       NOT ACQUIRED\n         FREEMAIN RU,A=(1),LV=32768\nCLOSE080 DS    0H\n         B     EXIT0000                       AND EXIT\nCLOSE100 DS    0H\n         MVI   VTAM_PARM_RC,1                 SET RETURN CODE\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS\n         FREEMAIN RU,A=(1),LV=WORK_AREA_LENGTH\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        SET RC TO ZERO\n         BR    R14                            RETURN\n* ------------------------------------------------------------------- *\n         USING ACEE,R15                       DEFINE ACEE BASE\nUIDMVC   MVC   WORK_USER(0),ACEEUSRI          COPY USERID\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOPENI    OPEN  (*,INPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\nACBI     ACB   AM=VTAM,              GENERATE VTAM ACB                 +\n               MACRF=LOGON,                                            +\n               EXLST=*,                                                +\n               APPLID=*\nEXLSTI   EXLST AM=VTAM,              GENERATE VTAM EXIT LIST           +\n               ATTN=*,                                                 +\n               LERAD=0\nEXLSTL   EQU   *-EXLSTI\nNIBI     NIB   MODE=RECORD,          GENERATE VTAM NIB                 +\n               NAME=LIB\nNIBL     EQU   *-NIBI\nRPLI     RPL   AM=VTAM,              GENERATE VTAM RPL                 +\n               AAREA=RPLEXTI\nRPLL     EQU   *-RPLI\nRPLEXTI  ISTRPL6\nRPLEXTL  EQU   *-RPLEXTI\n         FMH5  DSECT=NO,TRAN=XXXX\nX000001  DC    X'00000001'\nBLANKS   DC    CL80' '\n         LTORG\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nWORK_AREA         DSECT\n                  DS  18F\nWORK_OCPL         DS   0A,(OPENL)X\nWORK_VTAM_ECB     DS    F\n\nWORK_APPL         DS    0C\nWORK_APPL_LENGTH  DS    X\nWORK_APPL_NAME    DS    CL8\n\nWORK_SMF          DS    CL4\nWORK_USER         DS    CL8\nWORK_JOB_NAME     DS    CL8\n\nWORK_AREA_LENGTH  EQU   *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         VTAMPARM   DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK    DSECT=YES\nNET_SMF             DS    CL4\nNET_USER            DS    CL8\nNET_JOB_NAME        DS    CL8\nNET_IDENTIFY_LENGTH EQU   *-NETBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IFGACB     AM=VTAM\nACBL     EQU        *-IFGACB\n* ------------------------------------------------------------------- *\n*              RPL                                                    *\n* ------------------------------------------------------------------- *\n         IFGRPL     AM=VTAM\n* ------------------------------------------------------------------- *\n*              EXLST                                                  *\n* ------------------------------------------------------------------- *\n         IFGEXLST   AM=VTAM\n* ------------------------------------------------------------------- *\n*              NIB                                                    *\n* ------------------------------------------------------------------- *\n         ISTDNIB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY  OPTDSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA  DSECT=YES,LIST=NO\n         CVT     DSECT=YES,LIST=NO\n         IHAASCB DSECT=YES,LIST=NO\n         IHAASXB DSECT=YES,LIST=NO\n         IHAACEE\n         IEESMCA\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  VTAMSUB\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT811/FILE811.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT811", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}