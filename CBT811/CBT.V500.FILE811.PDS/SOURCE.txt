./ ADD NAME=$CHANGE  0100-09250-09250-0919-00081-00081-00000-SOURCE
Feb 09     Corrected several bugs.
           .. setting wrong 'task' bits in LIBSMAIN
           .. ADMIN function not working correctly
           .. misc other minor bugs
           Changed most labels in the "comm" areas.  Labels are now
           longer and easier to read.  Trade of is that the librarian
           will require the HL assembler.
           Create date on new versions of a member will now be the
              date/time the new version is created.
           Added the JOB function to submit members as batch jobs.
           ... now I need to enable it to submit work with some else's
              USER ID (surrogate?)...
           Added the "help" (?) function to the STC.
           All panels (I think) will now 'fit' on a model 2 display
           Renamed SPFDATA to LIBSPFD
           Renamed SPFVARS to LIBSPFV

Jan 06     Corrected S0C1 in UTIL0001.
              - changed the BALR to the compress exit to a BASSM.
              - corrected the parms to the compress exit

           Chagnded some mississippipellings in the messgaages


           Corrected the allocation of PDS members as the output
             data set for check-outs and view

           Corrected a problem with the shut-down statistics.
             The number of members viewed was always showing zero.

           Corrected ENQ without corresponding DEQ in CSUBUSER


Feb 06     Added support for TCP/IP
           Corrected several logic errors
           Removed some unused code from USUBCKOT
           Added "A" (Admin) command line option
           Added the "kill" user console command
           Change messages to display IP address rather than
              conversation id (CID) if user logs in with TCP/IP


Mar 06     Corrected S0C4 in LIBTDMEM after doing a "STAT"
           Corrected logic problem that could leave a library
              ENQ'd when a user changes from library to library
           Corrected a problem with BLKSIZE in check-out and view.
           Added select, check-in, check-out, etc primary commands
              to member display

APR 06     Added confirmation prompt to new version processing
           Added user exit 3 for identifying the user.

May 06     Corrected S013-24 in LIBTVIEW and LIBTCKOT
           Added logic to LIBTVIEW and LIBTCKOT to check output data set
               RECFM for F or FB
               LRECL=80

Jun 07     Corrected the "R" line command.

           The following are fixes to bugs or enhancements from
           Norm Gard from S and E.

           . Correct obtaining data length in CIBs due to changes
             in z/OS 1.8 for extended console support.

           . Corrected bug in CHECK-IN or creation of new members
             with 10 records or less.

           . Corrected bug in printing IP addresses in LIBSIP.
             Each segment of an IP address was being 'shifted'...
             192.168.36.34 was being printed as 019.016.003.003

           . Added new "U" (undo) member line command.

           . Added new "B" (browse) member line command.

           . Changed default member list.  Default now shows only
             highest version of members.  New option "A" or "F"
             lists all members.


./ ADD NAME=CALLSUB  0100-09250-09250-0919-00330-00330-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: CALLSUB - Test the LIBRARIAN interface subroutine.    *
*                                                                     *
*                                                                     *
*                                                                     *
*  Parmeter list:                                                     *
*         Library APPLID          8 characters                        *
*         Library name            8 characters                        *
*         Member name             8 characters                        *
*         Function                8 characters                        *
*         User dataset           44 characters                        *
*         User member             8 characters                        *
*         return code             2 characters                        *
*                                                                     *
* ------------------------------------------------------------------- *
CALLSUB  CSECT
CALLSUB  AMODE 31
CALLSUB  RMODE ANY
         STM   R14,R12,12(R13)       SAVE REGISTERS
         LR    R12,R15               SET BASE REGISTER
         USING CALLSUB,R12           DEFINE PROGRAM BASE
         B     INIT0000
MODID    DC    CL8'CALLSUB'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         GETMAIN RU,LV=WORKL,LOC=BELOW
         ST    R1,8(R13)
         ST    R13,4(R1)
         LR    R13,R1
         USING WORK,R13
         LOAD  EP=LIBSUB
         ST    R0,LIBSUBEP
         MVC   WORKIN(SYSINL),SYSINI COPY SYSIN DCB
         MVC   WORKOCPL(OPENL),OPENI
         OPEN  (WORKIN,INPUT),MODE=31,MF=(E,WORKOCPL)
         MVC   WORKPRT(SYSPRINTL),SYSPRINTI
         MVC   WORKOCPL(OPENL),OPENI
         OPEN  (WORKPRT,OUTPUT),MODE=31,MF=(E,WORKOCPL)
         MVI   PR_CC,C' '
         MVC   PR_LINE,PR_CC
         ZAP   PAGE_COUNT,P0
         MVC   PARM_APPL,BLANKS
         MVC   PARM_LIB_NAME,BLANKS
         MVC   PARM_MEM_NAME,BLANKS
         XC    PARM_MEM_VERSION,PARM_MEM_VERSION
         MVC   PARM_FUNCTION,BLANKS
         MVC   PARM_USER_DSN,BLANKS
         MVC   PARM_USER_MEMBER,BLANKS
         LA    R1,PARM_MSG_1           FIRST MESSAGE
         LA    R2,5                    NUMBER OF MESSAGES
INIT0010 DS    0H
         MVC   0(80,R1),BLANKS
         LA    R1,80(R1)               NEXT MESSAGE
         BCT   R2,INIT0010             LOOP
         BAL   R11,HEAD0000
PROC0000 DS    0H
         GET   WORKIN,WORKCARD         READ A CONTROL STATEMENT
         MVC   PR_LINE(L'WORKCARD),WORKCARD
         BAL   R10,PRT0000             PRINT
         CLC   APPLSTMT,WORKCARD       APPLID STATEMENT?
         BE    APPL0000                YES
         CLC   LIBSTMT,WORKCARD        LIBRARY STATEMENT?
         BE    LIB0000                 YES
         CLC   MEMSTMT,WORKCARD        MEMBER STATEMENT?
         BE    MEM0000                 YES
         CLC   VERSTMT,WORKCARD        VERSION STATEMENT?
         BE    VER0000                 YES
         CLC   FUNCSTMT,WORKCARD       FUNCTION STATEMENT
         BE    FUNC0000                YES
         CLC   UDSNSTMT,WORKCARD       USER DATA SET STATEMENT?
         BE    UDSN0000                YES
         CLC   UMEMSTMT,WORKCARD       USER MEMBER STATEMENT?
         BE    UMEM0000                YES
         CLC   MSG1STMT,WORKCARD       MESSAGE 1 STATEMENT?
         BE    MSG10000                YES
         CLC   MSG2STMT,WORKCARD       MESSAGE 2 STATEMENT?
         BE    MSG20000                YES
         CLC   MSG3STMT,WORKCARD       MESSAGE 3 STATEMENT?
         BE    MSG30000                YES
         CLC   MSG4STMT,WORKCARD       MESSAGE 4 STATEMENT?
         BE    MSG40000                YES
         CLC   MSG5STMT,WORKCARD       MESSAGE 5 STATEMENT?
         BE    MSG50000                YES
         CLC   CALLSTMT,WORKCARD       CALL STATEMENT?
         BE    CALL0000                YES
         MVC   PR_LINE(MSG05L),MSG05
         BAL   R10,PRT0000
         B     EOF0000
APPL0000 DS    0H
         OI    WORKFLAGS,$PENDING
         MVC   PARM_APPL,WORKCARD+09
         B     PROC0000
LIB0000  DS    0H
         OI    WORKFLAGS,$PENDING
         MVC   PARM_LIB_NAME,WORKCARD+09
         B     PROC0000
MEM0000  DS    0H
         OI    WORKFLAGS,$PENDING
         MVC   PARM_MEM_NAME,WORKCARD+09
         B     PROC0000
VER0000  DS    0H
         PACK  WORK_DWORD,WORKCARD+09(5)
         CVB   R1,WORK_DWORD           CONVERT TO BINARY
         STCM  R1,3,PARM_MEM_VERSION
         B     PROC0000
FUNC0000 DS    0H
         OI    WORKFLAGS,$PENDING
         MVC   PARM_FUNCTION,WORKCARD+09
         B     PROC0000
UDSN0000 DS    0H
         OI    WORKFLAGS,$PENDING
         MVC   PARM_USER_DSN,WORKCARD+09
         B     PROC0000
UMEM0000 DS    0H
         OI    WORKFLAGS,$PENDING
         MVC   PARM_USER_MEMBER,WORKCARD+09
         B     PROC0000
MSG10000 DS    0H
         OI    WORKFLAGS,$PENDING
         MVC   PARM_MSG_1,WORKCARD+09
         TR    PARM_MSG_1,VALID_CHARACTERS
         B     PROC0000
MSG20000 DS    0H
         OI    WORKFLAGS,$PENDING
         MVC   PARM_MSG_2,WORKCARD+09
         TR    PARM_MSG_2,VALID_CHARACTERS
         B     PROC0000
MSG30000 DS    0H
         OI    WORKFLAGS,$PENDING
         MVC   PARM_MSG_3,WORKCARD+09
         TR    PARM_MSG_3,VALID_CHARACTERS
         B     PROC0000
MSG40000 DS    0H
         OI    WORKFLAGS,$PENDING
         MVC   PARM_MSG_4,WORKCARD+09
         TR    PARM_MSG_4,VALID_CHARACTERS
         B     PROC0000
MSG50000 DS    0H
         OI    WORKFLAGS,$PENDING
         MVC   PARM_MSG_5,WORKCARD+09
         TR    PARM_MSG_5,VALID_CHARACTERS
         B     PROC0000
CALL0000 DS    0H
         LA    R1,PARM_LIST
         L     R15,LIBSUBEP
         BASSM R14,R15                 'CALL' THE SUBROUTINE
         MVC   PR_LINE(MSG02L),MSG02
         BAL   R10,PRT0000
         MVC   PR_LINE(MSG03L),MSG03
         UNPK  PR_LINE+(MSG03RC-MSG03)(3),PARM_RETURN_CODE(2)
         MVZ   PR_LINE+(MSG03RC-MSG03)(L'MSG03RC),HEXZERO
         TR    PR_LINE+(MSG03RC-MSG03)(L'MSG03RC),HEXCHAR
         MVI   PR_LINE+(MSG03RC-MSG03)+2,C' '
         BAL   R10,PRT0000             PRINT
         LA    R2,5
         LA    R3,PARM_MSG_1           FIRST MESSAGE
CALL0010 DS    0H
         MVC   PR_LINE(MSG04L),MSG04
         MVC   PR_LINE+(MSG04MSG-MSG04)(80),0(R3)
         BAL   R10,PRT0000
         LA    R3,80(R3)
         BCT   R2,CALL0010
         NI    WORKFLAGS,255-$PENDING
         B     PROC0000
PRT0000  DS    0H
         CP    LINE_COUNT,MAX_LINE     TIME FOR HEADING?
         BL    PRT0010                 NO
         BAL   R11,HEAD0000            PRINT HEADING
PRT0010  DS    0H
         PUT   WORKPRT,PR_CC
         MVI   PR_CC,C' '
         MVC   PR_LINE,PR_CC
         AP    LINE_COUNT,P1
         BR    R10
HEAD0000 DS    0H
         MVC   PR_SAVE,PR_CC
         AP    PAGE_COUNT,P1
         MVC   PR_CC(HEADINGL),HEADING
         ED    PR_CC+(HEADPAGE-HEADING)(L'HEADPAGE),PAGE_COUNT
         PUT   WORKPRT,PR_CC
         MVC   PR_CC(121),PR_SAVE
         ZAP   LINE_COUNT,P1
         BR    R11
EOF0000  DS    0H
         TM    WORKFLAGS,$PENDING
         BNO   EOF0010
         MVC   PR_LINE(MSG01L),MSG01
         BAL   R10,PRT0000
         MVI   WORK_RC,4
EOF0010  DS    0H
         MVC   WORKOCPL(CLOSEL),CLOSEI
         CLOSE WORKIN,MODE=31,MF=(E,WORKOCPL)
         CLOSE WORKPRT,MODE=31,MF=(E,WORKOCPL)
         DELETE EP=LIBSUB
         SR    R2,R2                   CLEAR REGISTER
         IC    R2,WORK_RC
         LR    R1,R13                  COPY WORK AREA ADDRESS
         L     R13,4(R13)              RESTORE CALLER'S R13
         FREEMAIN RU,A=(1),LV=WORKL    FREE THE WORK AREA
         L     R14,12(R13)             RESTORE R14
         LR    R15,R2                  INSERT RETURN CODE
         LM    R0,R12,20(R13)
         BR    R14
* ------------------------------------------------------------------- *
SYSINI   DCB   DSORG=PS,                                               +
               DDNAME=SYSIN,                                           +
               LRECL=80,                                               +
               RECFM=FB,                                               +
               DCBE=DCBE,                                              +
               MACRF=GM
SYSINL   EQU   *-SYSINI
SYSPRINTI DCB  DSORG=PS,                                               +
               DDNAME=SYSPRINT,                                        +
               LRECL=121,                                              +
               RECFM=FBA,                                              +
               MACRF=PM
SYSPRINTL EQU  *-SYSPRINTI
DCBE     DCBE  EODAD=EOF0000
OPENI    OPEN  (*,INPUT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
P0       DC    P'0'
P1       DC    P'1'
MAX_LINE DC    P'65'
BLANKS   DC    CL80' '
HEADING  DS    0C
         DC    C'1'
         DC    CL30' '
         DC    C'LIBRARIAN batch utility'
         DC    CL30' '
         DC    C'Page'
HEADPAGE DC    X'402020202120'
HEADINGL EQU   *-HEADING

MSG01    DS    0C
         DC    C'Last control statement was not a CALL statement'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    C'Results of call'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    C'Return code: '
MSG03RC  DC    CL2'  '
         DC    C' (zero is good)'
MSG03L   EQU   *-MSG03
MSG04    DC    C'Message: '
MSG04MSG DC    CL80' '
MSG04L   EQU   *-MSG04
MSG05    DC    C'Invalid control statement, exiting'
MSG05L   EQU   *-MSG05
APPLSTMT DC    CL09'LIB APPL'
LIBSTMT  DC    CL09'LIBRARY '
MEMSTMT  DC    CL09'MEMBER  '
VERSTMT  DC    CL09'VERSION '
FUNCSTMT DC    CL09'FUNCTION'
MSG1STMT DC    CL09'MSG 1   '
MSG2STMT DC    CL09'MSG 2   '
MSG3STMT DC    CL09'MSG 3   '
MSG4STMT DC    CL09'MSG 4   '
MSG5STMT DC    CL09'MSG 5   '
UDSNSTMT DC    CL09'UDSN    '
UMEMSTMT DC    CL09'UMEM    '
CALLSTMT DC    CL09'CALL'

HEXZERO  DC    8X'00'
HEXCHAR  DC    C'0123456789ABCDEF'

VALID_CHARACTERS DS 0C
       DC    XL16'40404040404040404040404040404040'     X'00' - X'0F'
       DC    XL16'40404040404040404040404040404040'     X'10' - X'1F'
       DC    XL16'40404040404040404040404040404040'     X'20' - X'2F'
       DC    XL16'40404040404040404040404040404040'     X'30' - X'3F'
       DC    XL16'404040404040404040404A4B4C4D4E4F'     X'40' - X'4F'
       DC    XL16'504040404040404040405A5B5C5D5E5F'     X'50' - X'5F'
       DC    XL16'60614040404040404040406B6C6D6E6F'     X'60' - X'6F'
       DC    XL16'404040404040404040407A7B7C7D7E7F'     X'70' - X'7F'
       DC    XL16'40818283848586878889408B8C8D8E8F'     X'80' - X'8F'
       DC    XL16'40919293949596979899409B9C9D9E9F'     X'90' - X'9F'
       DC    XL16'40A1A2A3A4A5A6A7A8A940ABACADAEAF'     X'A0' - X'AF'
       DC    XL16'4040404040404040404040BBBCBDBEBF'     X'B0' - X'BF'
       DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'     X'C0' - X'CF'
       DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'     X'D0' - X'DF'
       DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'     X'E0' - X'EF'
       DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'     X'F0' - X'FF'

* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
WORK              DSECT
                  DS    18F
WORK_DWORD        DS    D
LIBSUBEP          DS    A
WORKIN            DS    0F,(SYSINL)X
WORKPRT           DS    0F,(SYSPRINTL)X
WORKOCPL          DS    0F,(OPENL)X
WORKCARD          DS    CL80
                  DC    CL20' '  ... FILLER
WORK_RC           DS    X
WORKFLAGS         DS    X
$PENDING          EQU   X'80'
PAGE_COUNT        DS    PL3
LINE_COUNT        DS    PL3

PR_CC             DS    C
PR_LINE           DS    CL120
PR_SAVE           DS    CL121
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM_LIST         DS    0A
PARM_APPL         DS    CL8
PARM_LIB_NAME     DS    CL8
PARM_MEM_NAME     DS    CL8
PARM_MEM_VERSION  DS    XL2
PARM_FUNCTION     DS    CL8
PARM_USER_DSN     DS    CL44
PARM_USER_MEMBER  DS    CL8
PARM_RETURN_CODE  DS    C
PARM_MSG          DS   0CL80
PARM_MSG_1        DS    CL80
PARM_MSG_2        DS    CL80
PARM_MSG_3        DS    CL80
PARM_MSG_4        DS    CL80
PARM_MSG_5        DS    CL80
WORKL    EQU   *-WORK
         COPY REGEQU
         END  CALLSUB
./ ADD NAME=CSUBCLSE 0100-09250-09250-0919-00191-00191-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: CSUBCLSE                                              *
*                                                                     *
*  Process CLOSE commands entered via the console.                    *
*                                                                     *
*  At entry:                                                          *
*    R1 command address                                               *
*    R2 command length                                                *
*    R3 address of console id                                         *
*                                                                     *
* ------------------------------------------------------------------- *
CSUBCLSE CSECT
CSUBCLSE AMODE 31
CSUBCLSE RMODE ANY
         USING CSUBCLSE,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'CSUBCLSE'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LR    R8,R1                          COPY COMMAND ADDRESS
         LR    R9,R2                          COPY COMMAND LENGTH
         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +
               LV=WORKAREA_L,                 .. SIZE                  +
               LOC=BELOW                      .. BELOW 31-BIT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ITRACE ID=INIT,                                               +
               RDATA1=R8,                                              +
               RDATA2=R9
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   WORK_CONSOLE_ID,0(R3)          COPY CONSOLE ID
         MVC   WORK_WTO(WTOL),WTOI            INITIALIZE WTO
         LA    R6,WORK_WTO
         USING WPL,R6                         DEFINE BASE
         SH    R9,H6                          MINUS LENGTH OF "CLOSE"
         BH    PROC0010
         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE WTO
         B     EXIT0000                       AND EXIT
PROC0010 DS    0H
         CH    R9,H8                          TOO LONG?
         BH    PROC0080                       YES
         MVC   WORK_LIBRARY,COMM_BLANKS       INITIALIZE LIBRARY NAME
         BCTR  R9,0                           FOR EX INSTRUCTION
         EX    R9,LIBMVC                      COPY LIBRARY NAME
         ITRACE ID=LIB,                                                +
               DATA1=WORK_LIBRARY
         MVI   WORK_FLAGS,0                   CLEAR FLAGS
         ICM   R7,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         BZ    PROC0070
         USING LIBBLOK,R7                     DEFINE BASE
PROC0020 DS    0H
         CLC   WORK_LIBRARY,ALL               ALL LIBRARIES?
         BE    PROC0030                       YES
         CLC   WORK_LIBRARY,LIB_NAME          CORRECT LIBRARY?
         BNE   PROC0060                       NO
PROC0030 DS    0H
         ITRACE ID=FOUND,                                              +
               RDATA1=R7
         OI    WORK_FLAGS,$FOUND              LIBRARY FOUND
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSE
         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         LA    R1,LIBFUNC                     PARM BLOCK ADDRESS
PROC0040 DS    0H
         L     R2,COMM_LSUB_REQ               FIRST REQUEST ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN
         BC    4,PROC0040                     TRY AGAIN
         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB
         CLI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK
         BE    PROC0050                       YES
         MVC   WPLTXT(100),LIB_FUNCTION_MESSAGE
         BAL   R10,WTO0000                    SEND MESSAGE
         B     PROC0060
PROC0050 DS    0H
         MVC   WPLTXT(MSG02L),MSG02           COPY MESSAGE
         MVC   WPLTXT+(MSG02LIB-MSG02)(L'MSG02LIB),LIB_NAME
         MVC   WPLTXT+(MSG02DSC-MSG02)(L'MSG02DSC),LIB_DESCRIPTION
         BAL   R10,WTO0000                    ISSUE WTO
PROC0060 DS    0H
         ICM   R7,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   PROC0020
PROC0070 DS    0H
         TM    WORK_FLAGS,$FOUND              LIBRARY FOUND?
         BO    EXIT0000                       YES
         ITRACE ID=NOTFOUND
         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE MESSAGE
         B     EXIT0000
PROC0080 DS    0H
         ITRACE ID=TOOLONG
         MVC   WPLTXT(MSG04L),MSG04           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE WTO
         B     EXIT0000                       AND EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WTO0000  DS    0H
         ITRACE ID=WTO
         WTO   MF=(E,WORK_WTO),               ISSUE WTO                +
               CONSID=WORK_CONSOLE_ID         .. TO SAME CONSOLE
         MVC   WORK_WTO(WTOL),WTOI
         BR    R10
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
LIBMVC   MVC   WORK_LIBRARY(0),6(R8)          COPY LIBRARY NAME
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
H6       DC    H'6'
H8       DC    H'8'
WTOI     WTO   '                                                       +
                                                                     ',+
               CONSID=,                                                +
               MF=L
WTOL     EQU   *-WTOI
MSG01    DC    C'CSUBCLSE01E No library name given for CLOSE'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    C'CSUBCLSE02I Library '
MSG02LIB DC    CL8' '
         DC    CL2' '
MSG02DSC DC    CL40' '
         DC    C' closed'
MSG02L   EQU   *-MSG02
MSG03    DC    C'CSUBCLSE02E Library not found'
MSG03L   EQU   *-MSG03
MSG04    DC    C'CSUBCLSE03E Library name too long'
MSG04L   EQU   *-MSG04
ALL      DC    CL8'ALL'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA          DSECT
                  LIBSAVE  DSECT=NO
                  LIBFUNC  DSECT=NO
WORK_CONSOLE_ID   DS       F
WORK_WTO          DS       0A,(WTOL)X
WORK_LIBRARY      DS       CL8
WORK_FLAGS        DS       X
$FOUND            EQU      X'80'
WORKAREA_L        EQU      *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZWPL   DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  CSUBCLSE
./ ADD NAME=CSUBDEF  0100-09250-09250-0919-00268-00268-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: CSUBDEF                                               *
*                                                                     *
*  Process library define commands entered via the console.           *
*                                                                     *
*  At entry:                                                          *
*    R1 command address                                               *
*    R2 command length                                                *
*    R3 address of console id                                         *
*                                                                     *
* ------------------------------------------------------------------- *
CSUBDEF  CSECT
CSUBDEF  AMODE 31
CSUBDEF  RMODE ANY
         USING CSUBDEF,R12                    DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'CSUBDEF'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LR    R8,R1                          COPY COMMAND ADDRESS
         LR    R9,R2                          COPY COMMAND LENGTH
         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +
               LV=WORKAREA_L,                 .. SIZE                  +
               LOC=BELOW                      .. BELOW 24-BIT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ITRACE ID=INIT,                                               +
               RDATA1=R8,                                              +
               RDATA2=R9
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   WORKCID,0(R3)                  COPY CONSOLE ID
         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO
         LA    R6,WORKWTO
         USING WPL,R6                         DEFINE BASE
         CH    R9,H80                         TOO LONG?
         BH    ERR0010                        YES.. WAY TOO LONG
INIT0010 DS    0H
         CLI   0(R8),C','                     COMMA?
         BE    INIT0020
         LA    R8,1(R8)                       NEXT
         BCT   R9,INIT0010                    LOOP
         B     ERR0020
INIT0020 DS    0H
         LA    R8,1(R8)                       NEXT
         BCT   R9,INIT0030
         B     ERR0020
INIT0030 DS    0H
         MVC   WORK_LIB,COMM_BLANKS           INITIALIZE TO BLANKS
         LA    R1,WORK_LIB                    OUTPUT (LIBRARY NAME)
         BAL   R10,PARSE000                   PARSE LIBRARY NAME
         CLC   WORK_LENGTH,H8                 TOO LONG?
         BH    ERR0030                        YES
         LTR   R9,R9                          ANY DATA LEFT?
         BZ    ERR0040                        NO
         MVC   WORK_DSN,COMM_BLANKS           INITIALIZE TO BLANKS
         LA    R1,WORK_DSN                    OUTPUT (LIBRARY DSN)
         BAL   R10,PARSE000                   PARSE DSN
         CLC   WORK_LENGTH,H44                TOO LONG?
         BH    ERR0050                        YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LA    R4,COMM_LIBRARY_CHAIN
         ICM   R5,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         BZ    DEF0010
         USING LIBBLOK,R5                     DEFINE BASE
DEF0000  DS    0H
         CLC   WORK_LIB,LIB_NAME              ALREADY DEFINED?
         BE    ERR0060                        YES
         CLC   WORK_DSN,LIB_VSAM_DSN          ALREADY DEFINED?
         BE    ERR0070                        YES
         LA    R4,LIB_NEXT                    CHAIN POINT
         ICM   R5,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   DEF0000
DEF0010  DS    0H
         ITRACE ID=NEWLIB
         GETMAIN RU,                                                   +
               LV=LIBBLOKL,                                            +
               LOC=ANY
         ST    R1,0(R4)
         LR    R5,R1                          COPY STORAGE ADDRESS
         LR    R0,R1                          COPY ADDRESS
         LA    R1,LIBBLOKL                    LENGTH
         SR    R14,R14                        CLEAR ADDRESS
         SR    R15,R15                        CLEAR LENGTH
         MVCL  R0,R14                         INITIALIZE THE STORAGE
         MVC   LIB_EYE,LIB_ID                 IDENTIFY THE BLOCK
         MVC   LIB_NAME,WORK_LIB              COPY LIBRARY NAME
         MVC   LIB_VSAM_DSN,WORK_DSN          COPY LIBRARY DSN
         MVC   LIB_DESCRIPTION,INIT_DESCRIPTION
         MVC   LIB_ACB(ACBL),ACBI             INITIALIZE THE ACB
         MVC   WPLTXT(MSG08L),MSG08
         BAL   R10,WTO0000
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARSE000 DS    0H
         SR    R15,R15                        CLEAR FOR OUTPUT LENGTH
PARSE010 DS    0H
         CLI   0(R8),C','                     COMMA?
         BE    PARSE020                       YES
         MVC   0(1,R1),0(R8)                  COPY
         LA    R1,1(R1)                       NEXT
         LA    R8,1(R8)                       NEXT
         BCT   R9,PARSE010
         B     PARSE030
PARSE020 DS    0H
         LA    R8,1(R8)                       SKIP COMMA
         BCTR  R9,0                           ACCOUNT FOR COMMA
PARSE030 DS    0H
         STH   R15,WORK_LENGTH                SET OUTPUT LENGTH
         BR    R10
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WTO0000  DS    0H
         ITRACE ID=WTO
         WTO   MF=(E,WORKWTO),                ISSUE WTO                +
               CONSID=WORKCID                 .. TO SAME CONSOLE
         MVC   WORKWTO(WTOL),WTOI             RE-INITIALIZE THE WTO
         BR    R10
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=TOOLONG
         MVC   WPLTXT(MSG01L),MSG01
         B     ERR1000
ERR0020  DS    0H
         ITRACE ID=NOCOMMA
         MVC   WPLTXT(MSG02L),MSG02
         B     ERR1000
ERR0030  DS    0H
         ITRACE ID=LONGNAME
         MVC   WPLTXT(MSG03L),MSG03
         B     ERR1000
ERR0040  DS    0H
         ITRACE ID=NODSN
         MVC   WPLTXT(MSG04L),MSG04
         B     ERR1000
ERR0050  DS    0H
         ITRACE ID=LONGDSN
         MVC   WPLTXT(MSG05L),MSG05
         B     ERR1000
ERR0060  DS    0H
         ITRACE ID=DUPLIB
         MVC   WPLTXT(MSG06L),MSG06
         B     ERR1000
ERR0070  DS    0H
         ITRACE ID=DUPDSN
         MVC   WPLTXT(MSG07L),MSG07
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR1000  DS    0H
         BAL   R10,WTO0000
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               a=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
ACBI     ACB   AM=VSAM,                                                +
               DDNAME=VSAMFILE,                                        +
               MACRF=(KEY,DIR,SEQ,OUT)
WTOI     WTO   '                                                       +
                                                                     ',+
               CONSID=,                                                +
               MF=L
WTOL     EQU   *-WTOI
H8       DC    H'8'
H44      DC    H'44'
H80      DC    H'80'

LIB_ID   DC    CL8'LIBBLOK'

INIT_DESCRIPTION DC CL80'<No description until first OPEN>'

MSG01    DS    0C
         DC    C'CSUBDEF01E '
         DC    C'Command too long'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    C'CSUBDEF02E '
         DC    C'Syntax error.  Syntax is DEF[ine],LIBNAME,DSN'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    C'CSUBDEF03E '
         DC    C'Library name is too long (8 characters max)'
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    C'CSUBDEF04E '
         DC    C'Library DSN is required. Syntax is DEF[ine],LIBNAME,DS+
               N'
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    C'CSUBDEF05E '
         DC    C'Library DSN is too long (44 characters max)'
MSG05L   EQU   *-MSG05
MSG06    DS    0C
         DC    C'CSUBDEF06E '
         DC    C'Library with same name is already defined'
MSG06L   EQU   *-MSG06
MSG07    DS    0C
         DC    C'CSUBDEF07E '
         DC    C'Library with same DSN is already defined'
MSG07L   EQU   *-MSG07
MSG08    DS    0C
         DC    C'CSUBDEF08I '
         DC    C'New library has been defined'
MSG08L   EQU   *-MSG08
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
WORKAREA    DSECT
            LIBSAVE  DSECT=NO
WORKCID     DS       F
WORKWTO     DS       0A,(WTOL)X
WORK_LENGTH DS       H                   PARSED DATA LENGTH
WORK_LIB    DS       CL80                EXTRA LENGTH IS SO PARSE DOES
WORK_DSN    DS       CL80                .. NOT HAVE TO BE TOO SMART
WORKAREA_L  EQU      *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZWPL   DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  CSUBDEF
./ ADD NAME=CSUBKILL 0100-09250-09250-0919-00195-00195-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: CSUBKILL                                              *
*                                                                     *
*  Kill a user                                                        *
*    The librarian 'enq's libraries whenever a user displays the      *
*    member names, checks-in a member, checks-out a member, etc.      *
*    The library stays enq'd until the user switches to a different   *
*    library or terminates their session with the LIBRARIAN.          *
*    The librarian will not close a library until there are no        *
*    users activily using that library (no one has it enq'd).  This   *
*    command allows user sessions to be 'killed' and therefore        *
*    release their "enq's" allowing libraries to be closed.           *
*                                                                     *
*                                                                     *
*                                                                     *
*  At entry:                                                          *
*    R1 command address                                               *
*    R2 command length                                                *
*    R3 address of console id                                         *
*                                                                     *
* ------------------------------------------------------------------- *
CSUBKILL CSECT
CSUBKILL AMODE 31
CSUBKILL RMODE ANY
         USING CSUBKILL,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'CSUBKILL'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LR    R8,R1                          COPY COMMAND ADDRESS
         LR    R9,R2                          COPY COMMAND LENGTH
         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +
               LV=WORKAREA_L,                 .. SIZE                  +
               LOC=BELOW                      .. BELOW 24-BIT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ITRACE ID=INIT,                                               +
               RDATA1=R8,                                              +
               RDATA2=R9
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   WORKCID,0(R3)                  COPY CONSOLE ID
         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO
         LA    R6,WORKWTO                     WTO LIST FORM ADDRESS
         USING WPL,R6                         DEFINE BASE
         MVC   WORK_USER,ALL                  ASSUME ALL USERS
         SH    R9,H5                          MINUS LENGTH OF "KILL "
         BL    PROC0010
         CH    R9,H8                          TOO LONG?
         BH    PROC0070                       YES
         MVC   WORK_USER,COMM_BLANKS          INITIALIZE USER NAME
         BCTR  R9,0
         EX    R9,USERMVC                     COPY USER NAME
PROC0010 DS    0H
         ITRACE ID=USER,                                               +
               DATA1=WORK_USER
         MVI   WORK_FLAG,0                    CLEAR FLAGS
         ICM   R7,15,COMM_USER_CHAIN          FIRST USER
         BZ    PROC0060
         USING USERBLOK,R7                    DEFINE BASE
PROC0020 DS    0H
         CLC   WORK_USER,ALL                  ALL USERS?
         BE    PROC0030                       YES
         ITRACE ID=CK_USER,                                            +
               DATA1=USER_USER_ID
         CLC   WORK_USER,USER_USER_ID
         BNE   PROC0050                       NO
PROC0030 DS    0H
         ITRACE ID=FOUND,                                              +
               RDATA1=R7
         OI    WORK_FLAG,$FOUND               USER FOUND
         TM    WORK_FLAG,$HEADING             HEADING ISSUED?
         BO    PROC0040                       YES
         OI    WORK_FLAG,$HEADING             INDICATE HEADING ISSUED
         MVC   WPLTXT(HEADINGL),HEADING
         BAL   R10,WTO0000                    SENDING HEADING
PROC0040 DS    0H
         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE
         MVC   WPLTXT+(MSG01_USER-MSG01)(L'MSG01_USER),USER_USER_ID
         BAL   R10,WTO0000
         OI    USER_STATUS,$USER_KILL
         POST  USER_NETWORK_ECB
PROC0050 DS    0H
         ICM   R7,15,USER_NEXT                NEXT USER
         BNZ   PROC0020
PROC0060 DS    0H
         TM    WORK_FLAG,$FOUND               USER FOUND?
         BO    EXIT0000                       YES
         ITRACE ID=NOTFOUND
         MVC   WPLTXT(MSG02L),MSG02           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE MESSAGE
         B     EXIT0000
PROC0070 DS    0H
         ITRACE ID=TOOLONG
         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE WTO
         B     EXIT0000                       AND EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WTO0000  DS    0H
         ITRACE ID=WTO
         WTO   MF=(E,WORKWTO),                ISSUE WTO                +
               CONSID=WORKCID                 .. TO SAME CONSOLE
         MVC   WORKWTO(WTOL),WTOI
         BR    R10
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
USERMVC  MVC   WORK_USER(0),5(R8)    COPY USER NAME
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
H5       DC    H'5'
H8       DC    H'8'
*
WTOI     WTO   '                                                       +
                                                                     ',+
               CONSID=,                                                +
               MF=L
WTOL     EQU   *-WTOI


HEADING        DS    0C
               DC    C'CSUBKILL00H '
               DC    C'Killed user(s):'
HEADINGL       EQU   *-HEADING

MSG01          DS    0C
               DC    C'CSUBKILL01I '
MSG01_USER     DC    CL8' '
MSG01L         EQU   *-MSG01

MSG02          DC    C'CSUBKILL02E User not found '
MSG02L         EQU   *-MSG02
MSG03          DC    C'CSUBKILL03E User id too long'
MSG03L         EQU   *-MSG03
ALL            DC    CL8'ALL'
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
WORKAREA   DSECT
           LIBSAVE  DSECT=NO
WORKCID    DS       F
WORKWTO    DS       0A,(WTOL)X
WORK_USER  DS       CL8
WORK_FLAG  DS       X
$FOUND     EQU      X'80'
$HEADING   EQU      X'40'
WORKAREA_L EQU      *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZWPL   DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  CSUBKILL
./ ADD NAME=CSUBLIBS 0100-09250-09250-0919-00231-00231-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: CSUBLIBS                                              *
*                                                                     *
*  Display status of libraries.                                       *
*                                                                     *
*  At entry:                                                          *
*    R1 command address                                               *
*    R2 command length                                                *
*    R3 address of console id                                         *
*                                                                     *
* ------------------------------------------------------------------- *
CSUBLIBS CSECT
CSUBLIBS AMODE 31
CSUBLIBS RMODE ANY
         USING CSUBLIBS,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'CSUBLIBS'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LR    R8,R1                          COPY COMMAND ADDRESS
         LR    R9,R2                          COPY COMMAND LENGTH
         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +
               LV=WORKAREA_L,                 .. SIZE                  +
               LOC=BELOW                      .. BELOW 24-BIT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ITRACE ID=INIT,                                               +
               RDATA1=R8,                                              +
               RDATA2=R9
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   WORKCID,0(R3)                  COPY CONSOLE ID
         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO
         LA    R6,WORKWTO                     WTO LIST FORM ADDRESS
         USING WPL,R6                         DEFINE BASE
         MVC   WORK_LIB,ALL                   ASSUME ALL USERS
         SH    R9,H5                          MINUS LENGTH OF "LIB"
         BL    PROC0010
         CH    R9,H8                          TOO LONG?
         BH    PROC0100                       YES
         MVC   WORK_LIB,COMM_BLANKS           INITIALIZE LIB NAME
         EX    R9,LIBMVC                      COPY USER NAME
PROC0010 DS    0H
         ITRACE ID=LIB,                                                +
               DATA1=WORK_LIB
         MVI   WORK_FLAGS,0                   CLEAR FLAGS
         ICM   R7,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         BZ    PROC0090
         USING LIBBLOK,R7                     DEFINE BASE
PROC0020 DS    0H
         CLC   WORK_LIB,ALL                   ALL LIBRARIES?
         BE    PROC0030                       YES
         CLC   WORK_LIB,LIB_NAME              CORRECT LIBRARY?
         BNE   PROC0080                       NO
PROC0030 DS    0H
         ITRACE ID=FOUND,                                              +
               RDATA1=R7
         OI    WORK_FLAGS,$FOUND              LIBRARY FOUND
         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE
         MVC   WPLTXT+(MSG01LIB-MSG01)(L'MSG01LIB),LIB_NAME
         MVC   WPLTXT+(MSG01DSC-MSG01)(L'MSG01DSC),LIB_DESCRIPTION
         TM    LIB_STATUS,$LIB_OPEN           OPEN?
         BO    PROC0040                       YES
         MVC   WPLTXT+(MSG01STA-MSG01)(L'MSG01STA),STATCLS
         B     PROC0050
PROC0040 DS    0H
         MVC   WPLTXT+(MSG01STA-MSG01)(L'MSG01STA),STATOPEN
PROC0050 DS    0H
         ICM   R5,15,LIB_USERS                FIRST LIBUSER BLOCK
         BNZ   PROC0060
         MVC   WPLTXT+(MSG01IDL-MSG01)(L'MSG01IDL),IDLE
         BAL   R10,WTO0000                    ISSUE WTO
         B     PROC0080
PROC0060 DS    0H
         BAL   R10,WTO0000                    ISSUE WTO
         USING LIBUSER,R5                     DEFINE BASE
PROC0070 DS    0H
         L     R1,LIB_USER_USER               USER BLOCK ADDRESS
         MVC   WPLTXT(MSG02L),MSG02           COPY MESSAGE
         MVC   WPLTXT+(MSG02USR-MSG02)(L'MSG02USR),USER_USER_ID-USERBLO+
               K(R1)
         MVC   WPLTXT+(MSG02NAME-MSG02)(L'MSG02NAME),USER_NAME-USERBLOK+
               (R1)
         BAL   R10,WTO0000                    ISSUE WTO
         ICM   R5,15,LIB_USER_NEXT            NEXT USER
         BNZ   PROC0070                       PROCESS NEXT USER
PROC0080 DS    0H
         ICM   R7,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   PROC0020
PROC0090 DS    0H
         TM    WORK_FLAGS,$FOUND              LIBRARY FOUND?
         BO    EXIT0000                       YES
         ITRACE ID=NOTFOUND
         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE MESSAGE
         B     EXIT0000
PROC0100 DS    0H
         ITRACE ID=TOOLONG
         MVC   WPLTXT(MSG04L),MSG04           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE WTO
         B     EXIT0000                       AND EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WTO0000  DS    0H
         ITRACE ID=WTO
         WTO   MF=(E,WORKWTO),                ISSUE WTO                +
               CONSID=WORKCID                 .. TO SAME CONSOLE
         MVC   WORKWTO(WTOL),WTOI
         BR    R10
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                          COPY SAVE AREA ADDRESS
         L     R13,4(R13)                      CALLER'S SAVE AREA
         FREEMAIN RU,                          FREE WORK AREA          +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                 RESTORE REGISTERS
         SR    R15,R15                         RETURN CODE
         BR    R14                             RETURN TO CALLER
* ------------------------------------------------------------------- *
LIBMVC   MVC   WORK_LIB(0),4(R8)               COPY LIBRARY NAME
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
H5       DC    H'5'
H8       DC    H'8'
*
*
*
* NOTE: The text length in the following WTO is 100 characters
*
WTOI     WTO   '                                                       +
                                                        ',             +
               CONSID=,                                                +
               MF=L
WTOL     EQU   *-WTOI

IDLE     DC    C'IDLE'

MSG01    DS    0C
         DC    C'CSUBLIBS01I '
MSG01LIB DC    CL8' '
         DC    C' '
MSG01DSC DC    CL40' '
         DC    C' '
MSG01STA DC    CL6' '
         DC    C' '
MSG01IDL DC    CL4' '
MSG01L   EQU   *-MSG01
MSG02    DC    C'CSUBLIBS02I Active user: '
MSG02USR DC    CL8' '
         DC    CL2' '
MSG02NAME DC   CL20' '
MSG02L   EQU   *-MSG02
MSG03    DC    C'CSUBLIBS02E Library not found'
MSG03L   EQU   *-MSG03
MSG04    DC    C'CSUBLIBS03E Library name too long'
MSG04L   EQU   *-MSG04

STATOPEN DC    CL6'OPEN  '
STATCLS  DC    CL6'CLOSED'
ALL      DC    CL8'ALL'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA   DSECT
           LIBSAVE  DSECT=NO
           LIBFUNC  DSECT=NO
WORKDWRD   DS       D
WORKCID    DS       F
WORKWTO    DS       0A,(WTOL)X

WORK_LIB   DS       CL8
           DS       CL8                .. ALLOW FOR SCANNER OVER-RUNS

WORK_FLAGS DS       X
$FOUND     EQU      X'80'
WORKAREA_L EQU    *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FNCDSCT  DSECT
FNCCODE  DS       X
FNCDESC  DS       CL20
FNCL     EQU      *-FNCDSCT
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBUSER  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*              WTO PARM LIST                                          *
* ------------------------------------------------------------------- *
         IEZWPL DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  CSUBLIBS
./ ADD NAME=CSUBLSTA 0100-09250-09250-0919-00234-00234-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: CSUBLSTA                                              *
*                                                                     *
*  Display library statistics .                                       *
*                                                                     *
*  At entry:                                                          *
*    R1 command address                                               *
*    R2 command length                                                *
*    R3 address of console id                                         *
*                                                                     *
* ------------------------------------------------------------------- *
CSUBLSTA CSECT
CSUBLSTA AMODE 31
CSUBLSTA RMODE ANY
         USING CSUBLSTA,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'CSUBLSTA'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LR    R8,R1                          COPY COMMAND ADDRESS
         LR    R9,R2                          COPY COMMAND LENGTH
         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +
               LV=WORKAREA_L,                 .. SIZE                  +
               LOC=BELOW                      .. BELOW 24-BIT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ITRACE ID=INIT,                                               +
               RDATA1=R8,                                              +
               RDATA2=R9
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   WORKCID,0(R3)                  COPY CONSOLE ID
         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO
         LA    R6,WORKWTO                     WTO LIST FORM ADDRESS
         USING WPL,R6                         DEFINE BASE
         MVC   WORKLIB,ALL                    ASSUME ALL USERS
         SH    R9,H9                          MINUS LENGTH OF "LIBSTAT"
         BL    PROC0010
         CH    R9,H7                          TOO LONG?
         BH    PROC0100                       YES
         MVC   WORKLIB,COMM_BLANKS            INITIALIZE LIB NAME
         EX    R9,LIBMVC                      COPY USER NAME
PROC0010 DS    0H
         ITRACE ID=LIB,                                                +
               DATA1=WORKLIB
         MVI   WORK_FLAGS,0                   CLEAR FLAGS
         ICM   R7,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         BZ    PROC0090
         USING LIBBLOK,R7                     DEFINE BASE
PROC0020 DS    0H
         CLC   WORKLIB,ALL                    ALL LIBRARIES?
         BE    PROC0030                       YES
         CLC   WORKLIB,LIB_NAME               CORRECT LIBRARY?
         BNE   PROC0080                       NO
PROC0030 DS    0H
         ITRACE ID=FOUND,                                              +
               RDATA1=R7
         OI    WORK_FLAGS,$FOUND              LIBRARY FOUND
         TM    WORK_FLAGS,$HEADING            HEADING ISSUED?
         BO    PROC0040                       YES
         OI    WORK_FLAGS,$HEADING            INDICATE HEADING ISSUED
         MVC   WPLTXT(HEADINGL),HEADING
         BAL   R10,WTO0000                    SENDING HEADING
PROC0040 DS    0H
         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE
         MVC   WPLTXT+(MSG01_LIB-MSG01)(L'MSG01_LIB),LIB_NAME
         TM    LIB_STATUS,$LIB_OPEN           OPEN?
         BO    PROC0050                       YES
         MVC   WPLTXT+(MSG01_STA-MSG01)(L'MSG01_STA),STATCLS
         B     PROC0060
PROC0050 DS    0H
         MVC   WPLTXT+(MSG01_STA-MSG01)(L'MSG01_STA),STATOPEN
PROC0060 DS    0H
         ICM   R1,15,LIB_READS
         CVD   R1,WORKDWRD
         ED    WPLTXT+(MSG01_READS-MSG01)(L'MSG01_READS),WORKDWRD+3
         ICM   R1,15,LIB_WRITES
         CVD   R1,WORKDWRD
         ED    WPLTXT+(MSG01_WRITES-MSG01)(L'MSG01_WRITES),WORKDWRD+3
         ICM   R1,15,LIB_ERASES
         CVD   R1,WORKDWRD
         ED    WPLTXT+(MSG01_ERASES-MSG01)(L'MSG01_ERASES),WORKDWRD+3
         ICM   R1,15,LIB_NEW
         CVD   R1,WORKDWRD
         ED    WPLTXT+(MSG01_NEW-MSG01)(L'MSG01_NEW),WORKDWRD+3
         ICM   R1,15,LIB_UPDATE
         CVD   R1,WORKDWRD
         ED    WPLTXT+(MSG01_UPDATES-MSG01)(L'MSG01_UPDATES),WORKDWRD+3
         ICM   R1,15,LIB_DELETE
         CVD   R1,WORKDWRD
         ED    WPLTXT+(MSG01_DELETES-MSG01)(L'MSG01_DELETES),WORKDWRD+3
         BAL   R10,WTO0000                    SENDING HEADING
PROC0080 DS    0H
         ICM   R7,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   PROC0020
PROC0090 DS    0H
         TM    WORK_FLAGS,$FOUND              LIBRARY FOUND?
         BO    EXIT0000                       YES
         ITRACE ID=NOTFOUND
         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE MESSAGE
         B     EXIT0000
PROC0100 DS    0H
         ITRACE ID=TOOLONG
         MVC   WPLTXT(MSG04L),MSG04           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE WTO
         B     EXIT0000                       AND EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WTO0000  DS    0H
         ITRACE ID=WTO
         WTO   MF=(E,WORKWTO),                ISSUE WTO                +
               CONSID=WORKCID                 .. TO SAME CONSOLE
         MVC   WORKWTO(WTOL),WTOI
         BR    R10
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
LIBMVC   MVC   WORKLIB(0),4(R8)         \     COPY LIBRARY NAME
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
H7       DC    H'7'
H9       DC    H'9'
*
WTOI     WTO   '                                                       +
                                                                     ',+
               CONSID=,                                                +
               MF=L
WTOL     EQU   *-WTOI


HEADING        DS    0C
               DC    C'CSUBLSTA00H '
               DC    CL8'Library'
               DC    C'  state'
               DC    C'        reads'
               DC    C'      writes'
               DC    C'      erases'
               DC    C' new members'
               DC    C' updated members'
               DC    C' deleted members'
HEADINGL       EQU   *-HEADING

MSG01          DS    0C
               DC    C'CSUBLSTA01I '
MSG01_LIB      DC    CL8' '
               DC    C'  '
MSG01_STA      DC    CL6' '
MSG01_READS    DC    X'402020206B2020206B202120'
MSG01_WRITES   DC    X'402020206B2020206B202120'
MSG01_ERASES   DC    X'402020206B2020206B202120'
MSG01_NEW      DC    X'402020206B2020206B202120'
               DC    CL4' '
MSG01_UPDATES  DC    X'402020206B2020206B202120'
               DC    CL4' '
MSG01_DELETES  DC    X'402020206B2020206B202120'
MSG01L         EQU   *-MSG01

MSG03    DC    C'CSUBLSTA02E Library not found'
MSG03L   EQU   *-MSG03
MSG04    DC    C'CSUBLSTA03E Library name too long'
MSG04L   EQU   *-MSG04

STATOPEN DC    CL6'OPEN  '
STATCLS  DC    CL6'CLOSED'
ALL      DC    CL8'ALL'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA   DSECT
           LIBSAVE  DSECT=NO
WORKDWRD   DS       D
WORKCID    DS       F
WORKWTO    DS       0A,(WTOL)X
WORKLIB    DS       CL8
WORK_FLAGS DS       X
$FOUND     EQU      X'80'
$HEADING   EQU      X'40'
WORKAREA_L EQU      *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBUSER  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZWPL DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  CSUBLSTA
./ ADD NAME=CSUBMAIN 0100-09250-09250-0919-00496-00496-00000-SOURCE
         TITLE 'CONSOLE COMMUNICATION'
         MACRO
         CMD   &TEXT,&ADDR,&DESC,&SAMP
         LCLA  &LEN
         AIF   (T'&TEXT EQ 'O').ERR0010
         AIF   (T'&ADDR EQ 'O').ERR0020
&LEN     SETA  K'&TEXT
         DC    AL2(&LEN)
         DC    &ADDR
         DC    CL8'&TEXT'
         DC    CL50&DESC
         DC    CL50&SAMP
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'COMMAND TEXT IS REQUIRED'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'COMMAND PROCESSOR ADDRESS IS REQUIRED'
         MEND
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: CSUBMAIN                                              *
*                                                                     *
*  Console subtask mainline                                           *
*                                                                     *
* ------------------------------------------------------------------- *
CSUBMAIN CSECT
CSUBMAIN AMODE 31
CSUBMAIN RMODE ANY
         USING CSUBMAIN,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'FSXCSUB'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,0(R1)                      COPY COMM AREA BASE
         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +
               LV=WORKAREA_L,                                          +
               LOC=BELOW
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK
         MVI   PRTCC,C' '                     SINGLE SPACING
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         GETMAIN RU,                          ACQUIRE STORAGE          +
               LV=EXTRACTL+4,                 .. LENGTH                +
               LOC=BELOW                      .. 24-BIT AREA
         LR    R2,R1                          SAVE THE ADDRESS
         LA    R3,EXTRACTL(R2)                RETURNED DATA ADDRESS
         MVC   0(EXTRACTL,R2),EXTRACTI
         EXTRACT (R3),                        EXTRACT COMM LIST ADDRESS+
               FIELDS=COMM,                   .. RETURN COMLIST ADDRESS+
               MF=(E,(R2))                    ..
         L     R9,0(R3)                       COMM LIST ADDRESS
         FREEMAIN RU,A=(2),LV=EXTRACTL+4      FREE EXTRACT WORK AREA
         ITRACE ID=COMLIST,                   TRACE COMLIST ADDRESS    +
               RDATA1=R9
         ST    R9,WORK_COMM                   SAVE COMLIST ADDRESS
         USING COMLIST,R9                     DEFINE COMLIST BASE
         MVC   WORK_CONS_ECB,COMECBPT         SAVE ECB ADDRESS
         ITRACE ID=SETCTR                     SETTING CIB LIMIT
         QEDIT ORIGIN=COMCIBPT,               SET CIB LIMIT            +
               CIBCTR=2                       .. ALLOW 2 CIBS
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0020                        NO
         LA    R1,COMM_CSUB_WORK_ECB          ECB POSTED BY LIBSMAIN
         ST    R1,WORK_WORK_ECB               SET ADDRESS IN ECB LIST
         OI    WORK_WORK_ECB,X'80'            FLAG END-OF-LIST
         MVC   WORK_WTO(WTOL),WTOI
         USING WPL,WORK_WTO                   DEFINE WTO PARM LIST BASE
CONS0010 DS    0H
         LA    R2,WORK_WAIT                   ECB LIST ADDRESS
         ITRACE ID=WAIT,                                               +
               RDATA1=(R2)                    .. WAIT LIST ADDRESS
         TM    COMM_EOJ_PHASE,$EOJ3           PHASE 3 OF SHUTDOWN?
         BO    EXIT0000                       YES
         WAIT  ECBLIST=(R2)                   WAIT
CONS0020 DS    0H
         ICM   R8,15,COMCIBPT                 FIRST CIB
         BZ    CONS0010                       NO CIB'S
         USING CIB,R8                         DEFINE CIB BASE
CONS0030 DS    0H
         ITRACE ID=CIB,                       TRACE EACH CIB           +
               RDATA1=R8,                     .. CIB ADDRESS           +
               DATA2=CIBVERB                  .. VERB FROM CIB
         MVC   PRTMSGID(MSG07L),MSG07
         CLI   CIBVERB,CIBSTOP                STOP?
         BE    CONS0050                       YES
         SR    R5,R5                          CLEAR REGISTER
         ICM   R5,3,CIBDATLN                  DATA LENGTH
         BZ    CONS0070                       NO DATA
         CH    R5,H50                         TOO LONG?
         BNH   CONS0040                       NO
         LH    R5,H50                         LIMIT LENGTH
CONS0040 DS    0H
         LR    R15,R5                         COPY LENGTH
         BCTR  R15,0                          ADJUST FOR EXECUTE
         EX    R15,MVC01                      MOVE TO I/O AREA
         B     CONS0060
CONS0050 DS    0H
         MVC   PRTMSGID+(MSG07TXT-MSG07)(4),STOP
CONS0060 DS    0H
         BAL   R10,PRT0000                    PRINT THE MESSAGE
CONS0070 DS    0H
         ITRACE ID=CIBDATA,                                            +
               DATA1=MSG07TXT
         CLI   CIBVERB,CIBSTART               START COMMAND?
         BE    CONS0160                       YES
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
*    I HATE "backward" type logic!!                                   *
*                                                                     *
*    If the LIBRARIAN is being assembled for a z/OS 1.8 or later      *
*    system, COMMENT out the following AGO.  For z/OS 1.7 or          *
*    earlier un-comment the AGO.                                      *
*                                                                     *
*                                                                     *
*        AGO   .COND1                                                 *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         LH    R2,CIBDATLN                    DATA LENGTH
         AR    R2,R8                          PLUS CIB ADDRESS
         USING CIBX,R2
         MVC   WORK_CONSID,CIBXCNID           COPY CONSOLE ID
         DROP  R2
         AGO   .COND2
.COND1   ANOP
         MVC   WORK_CONSID+3(1),CIBCONID      COPY CONSOLE ID
.COND2   ANOP
         CLI   CIBVERB,CIBSTOP                STOP COMMAND?
         BE    SHUT0000                       YES
         CLI   CIBVERB,CIBMODFY               MODIFY?
         BNE   CONS0160                       NO
         LA    R4,CIBDATA                     FIRST CHARACTER
         SR    R2,R2                          LENGTH
CONS0080 DS    0H
         CLI   0(R4),C' '                     BLANK?
         BE    CONS0090                       YES
         CLI   0(R4),C','                     COMMA?
         BE    CONS0090                       YES
         LA    R4,1(,R4)                      PLUS 1
         LA    R2,1(,R2)                      PLUS 1
         BCT   R5,CONS0080                    LOOP
         ICM   R2,3,CIBDATLN                  RESTORE TO FULL LENGTH
CONS0090 DS    0H
         LA    R6,CMD_TABLE                   OUR LIST OF COMMANDS
         USING CMD_DSECT,R6                   DEFINE BASE
         SR    R1,R1                          CLEAR REGISTER
CONS0100 DS    0H
         CLI   0(R6),X'FF'                    END OF TABLE?
         BE    CONS0120                       YES
         ICM   R1,3,CMD_LENGTH                TEXT LENGTH
         CLR   R2,R1                          LENGTH CORRECT?
         BNE   CONS0110                       NO
         BCTR  R1,0                           MINUS 1 FOR EXECUTE
         EX    R1,CMDCLC                      COMMAND FOUND?
         BE    CONS0130                       YES
CONS0110 DS    0H
         LA    R6,CMD_DSECT_L(,R6)            NEXT COMMAND
         B     CONS0100                       LOOP
CMDCLC   CLC   CMD_CMD(0),CIBDATA             COMMAND LOCATED?
CONS0120 DS    0H
         MVC   WPLTXT(MSG01L),MSG01           MESSAGE TO WTO
         BAL   R10,WTO0000                    ISSUE WTO
         B     CONS0160                       RELEASE THIS CIB
CONS0130 DS    0H
         CLC   =C',?',0(R4)                   SAMPLE WANTED?
         BE    CONS0150                       YES
         LA    R1,CIBDATA                     DATA ADDRESS
         SR    R2,R2                          CLEAR REGISTER
         ICM   R2,3,CIBDATLN                  COMMAND LENGTH
         LA    R3,WORK_CONSID                 CONSOLE'S ID ADDR
         ICM   R15,15,CMD_ADDR                COMMAND PROCESSOR ADDRESS
         BALR  R14,R15                        PROCESS THE COMMAND
         B     CONS0160
CONS0150 DS    0H
         MVC   WPLTXT(MSG10L),MSG10
         MVC   WPLTXT+(MSG10SAM-MSG10)(L'MSG10SAM),CMD_SAMPLE
         BAL   R10,WTO0000
CONS0160 DS    0H
         L     R2,CIBNEXT                     NEXT CIB
         QEDIT ORIGIN=COMCIBPT,               FREE THIS CIB            +
               BLOCK=(R8)
         LTR   R15,R15                        QEDIT SUCCESSFUL?
         BNZ   ERR0010                        NO
         LTR   R8,R2                          NEXT CIB'S ADDRESS
         BNZ   CONS0030                       LOOP
         B     CONS0010                       WAIT FOR ANOTHER EVENT
* ------------------------------------------------------------------- *
*   PERFORM A SNAP DUMP                                               *
* ------------------------------------------------------------------- *
SNAP0000 DS    0H
         ITRACE ID=SNAP
         LOAD  EP=LIBSSNAP
         LR    R15,R0                         COPY ENTY POINT
         BALR  R14,R15                        LINK TO LIBSSNAP
         DELETE EP=LIBSSNAP                   DELETE LIBSSNAP
         ITRACE ID=SNAPDONE
         B     CONS0160
* ------------------------------------------------------------------- *
*   LIST AVAILABLE COMMANDS                                           *
* ------------------------------------------------------------------- *
LIST0000 DS    0H
         ITRACE ID=LIST
         MVC   WPLTXT(MSG08L),MSG08
         BAL   R10,WTO0000                    ISSUE WTO
         LA    R6,CMD_TABLE                   OUR LIST OF COMMANDS
         USING CMD_DSECT,R6                   DEFINE BASE
LIST0010 DS    0H
         CLI   0(R6),X'FF'                    END OF TABLE?
         BE    CONS0160                       YES
         MVC   WPLTXT(MSG09L),MSG09
         MVC   WPLTXT+(MSG09CMD-MSG09)(L'MSG09CMD),CMD_CMD
         MVC   WPLTXT+(MSG09DSC-MSG09)(L'MSG09DSC),CMD_DESC
         BAL   R10,WTO0000                    ISSUE WTO
         LA    R6,CMD_DSECT_L(,R6)            NEXT COMMAND
         B     LIST0010
* ------------------------------------------------------------------- *
*   Shutdown the STC                                                  *
* ------------------------------------------------------------------- *
SHUT0000 DS    0H
         ITRACE ID=STOP
         TM    COMM_EOJ_PHASE,$EOJ1           EOJ ALREADY IN PROGRESS?
         BO    SHUT0010                       YES
         POST  COMM_TERMINATION_ECB           POST THE TERMINATION ECB
         MVC   WPLTXT(MSG04L),MSG04           COPY WTO
         BAL   R10,WTO0000                    ISSUE WTO
         B     CONS0160                       RELEASE THIS CIB
SHUT0010 DS    0H
         MVC   WPLTXT(MSG05L),MSG05           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE WTO
         B     CONS0160                       RELEASE THIS CIB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WTO0000  DS    0H
         ITRACE ID=WTO
         WTO   MF=(E,WORK_WTO),               ISSUE WTO                +
               CONSID=WORK_CONSID             .. TO SAME CONSOLE
         MVC   WORK_WTO(WTOL),WTOI
         BR    R10
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,                                                   +
               LV=PRTBLOKL,                                            +
               LOC=ANY
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE
         ST    R2,PRTNEXT-PRTBLOK(R1)
         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN
         BC    4,PRT0010                      TRY AGAIN
         POST  COMM_PRINT_WORK_ECB            WAKE UP PRINT SUBTASK
         BR    R10
* ------------------------------------------------------------------- *
*        Error routines                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=CIBDELF,                   QEDIT FAILED             +
               RDATA1=R15                     .. RETURN CODE
         ABEND 1,DUMP,,USER
ERR0020  DS    0H
         ITRACE ID=CIBCTRF,                   QEDIT FAILED             +
               RDATA1=R15                     .. RETURN CODE
         ABEND 1,DUMP,,USER
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER
*
* ------------------------------------------------------------------- *
*
MVC01    MVC   PRTMSGID+(MSG07TXT-MSG07)(0),CIBDATA
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
EXTRACTI EXTRACT *,                  EXTRACT LIST FORM                 +
               FIELDS=COMM,          .. COMLIST ADDRESS PLEASE         +
               MF=L
EXTRACTL EQU   *-EXTRACTI
WTOI     WTO   '                                                       +
                                                                     ',+
               CONSID=,                                                +
               MF=L
WTOL     EQU   *-WTOI
* ------------------------------------------------------------------- *
H50      DC    H'50'
PRTID    DC    CL8'PRTBLOK'
MSG01    DC    C'CSUBMAIN01E * Invalid command'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    C'CSUBMAIN02I   Taking snap dump'
MSG02L   EQU   *-MSG02
MSG04    DS    0C
         DC    C'CSUBMAIN04I   Library shutting down'
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    C'CSUBMAIN05E * Shutdown already in progress'
MSG05L   EQU   *-MSG05
MSG07    DS    0C
         DC    C'CSUBMAIN07I   Command from console: '
MSG07TXT DC    CL50' '
MSG07L   EQU   *-MSG07

MSG08    DS    0C
         DC    C'CSUBMAIN08I   Available commands:'
MSG08L   EQU   *-MSG08

MSG09    DS    0C
MSG09CMD DC    CL8' '
         DC    C'   '
MSG09DSC DC    CL50' '
MSG09L   EQU   *-MSG09

MSG10    DS    0C
         DC    C'CSUBMAIN10I   SAMPLE OF COMMAND:'
MSG10SAM DC    CL50' '
MSG10L   EQU   *-MSG10

HEXZERO  DC    XL8'0000000000000000'
HEXCHAR  DC    C'0123456789ABCDEF'
STOP     DC    CL4'STOP'
* ------------------------------------------------------------------- *
*              COMMANDS TABLE                                         *
* ------------------------------------------------------------------- *
CMD_TABLE DS   0C
         CMD   QUIT,                                                   +
               AL4(SHUT0000),                                          +
               'STOP (shutdown the STC)',                              +
               'STOP'

         CMD   CLOSE,                                                  +
               VL4(CSUBCLSE),                                          +
               'CLOSE a library',                                      +
               'CLOSE,lib'

         CMD   DEF,                                                    +
               VL4(CSUBDEF),                                           +
               'DEFine a library',                                     +
               'DEFine,lib,DSN'

         CMD   DEFINE,                                                 +
               VL4(CSUBDEF),                                           +
               'DEFINE a library',                                     +
               'DEFINE,lib,DSN'

         CMD   KILL,                                                   +
               VL4(CSUBKILL),                                          +
               'KILL a (or all) user(s)',                              +
               'KILL,user or KILL,ALL'

         CMD   LIB,                                                    +
               VL4(CSUBLIBS),                                          +
               'Display libraries',                                    +
               'LIB'

         CMD   LIBS,                                                   +
               VL4(CSUBLIBS),                                          +
               'Display libraries',                                    +
               'LIBS'

         CMD   LIBSTAT,                                                +
               VL4(CSUBLSTA),                                          +
               'Display library statistics',                           +
               'LIBSTAT'

         CMD   OPEN,                                                   +
               VL4(CSUBOPEN),                                          +
               'OPEN a library',                                       +
               'OPEN,lib'

         CMD   SHUT,                                                   +
               AL4(SHUT0000),                                          +
               'SHUTdown the STC',                                     +
               'SHUT'

         CMD   SNAP,                                                   +
               AL4(SNAP0000),                                          +
               'SNAPshot the STC',                                     +
               'SNAP'

         CMD   STAT,                                                   +
               VL4(CSUBSTAT),                                          +
               'Overall STC STATUS',                                   +
               'STAT'

         CMD   STATUS,                                                 +
               VL4(CSUBSTAT),                                          +
               'Overall STC STATUS',                                   +
               'STATUS'

         CMD   STOP,                                                   +
               AL4(SHUT0000),                                          +
               'STOP the STC',                                         +
               'STOP'

         CMD   USER,                                                   +
               VL4(CSUBUSER),                                          +
               'DISPLAY users',                                        +
               'USER'

         CMD   USERS,                                                  +
               VL4(CSUBUSER),                                          +
               'DISPLAY users',                                        +
               'USERS'

         CMD   ?,                                                      +
               AL4(LIST0000),                                          +
               'LIST available commands',                              +
               '?'

         DC    X'FF'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA      DSECT
              LIBSAVE  DSECT=NO
              PRTBLOK  DSECT=NO
WORK_COMM     DS   F                  ADDRESS OF COMM LIST
WORK_CONSID   DS   F                  CONSOLE ID
*
WORK_WAIT     DS   0A
WORK_CONS_ECB DS   A                  ADDRESS OF ECB POSTED BY MVS
WORK_WORK_ECB DS   A                  ADDRESS IF ECB POSTED BY LIBSMAIN
*
WORK_WTO      DS   0F,(WTOL)X
WORK_WORK     DS   CL10
WORKAREA_L    EQU  *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CMD_DSECT     DSECT
CMD_LENGTH    DS   AL2                COMMAND TEXT LENGTH
CMD_ADDR      DS   AL4                COMMAND PROCESSOR ENTRY POINT
CMD_CMD       DS   CL8                COMMAND TEXT
CMD_DESC      DS   CL50
CMD_SAMPLE    DS   CL50
CMD_DSECT_L   EQU  *-CMD_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZCOM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CIB      DSECT
         IEZCIB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZWPL   DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  CSUBMAIN
./ ADD NAME=CSUBOPEN 0100-09250-09250-0919-00194-00194-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: CSUBOPEN                                              *
*                                                                     *
*  PROCESS OPEN COMMANDS ENTERED VIA THE CONSOLE.                     *
*                                                                     *
*  At entry:                                                          *
*    R1 command address                                               *
*    R2 command length                                                *
*    R3 address of console id                                         *
*                                                                     *
* ------------------------------------------------------------------- *
CSUBOPEN CSECT
CSUBOPEN AMODE 31
CSUBOPEN RMODE ANY
         USING CSUBOPEN,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'CSUBOPEN'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LR    R8,R1                          COPY COMMAND ADDRESS
         LR    R9,R2                          COPY COMMAND LENGTH
         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +
               LV=WORKAREA_L,                 .. SIZE                  +
               LOC=BELOW                      .. BELOW 24-BIT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ITRACE ID=INIT,                                               +
               RDATA1=R8,                                              +
               RDATA2=R9
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   WORKCID,0(R3)                  COPY CONSOLE ID
         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO
         LA    R6,WORKWTO
         USING WPL,R6                         DEFINE BASE
         SH    R9,H5                          MINUS LENGTH OF "OPEN"
         BH    PROC0010
         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE WTO
         B     EXIT0000                       AND EXIT
PROC0010 DS    0H
         CH    R9,H8                          TOO LONG?
         BH    PROC0080                       YES
         MVC   WORKLIB,COMM_BLANKS            INITIALIZE LIBRARY NAME
         BCTR  R9,0                           FOR EX INSTRUCTION
         EX    R9,LIBMVC                      COPY LIBRARY NAME
         ITRACE ID=LIB,                                                +
               DATA1=WORKLIB
         MVI   WORKFLAG,0                     CLEAR FLAGS
         ICM   R7,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         BZ    PROC0070
         USING LIBBLOK,R7                     DEFINE BASE
PROC0020 DS    0H
         CLC   WORKLIB,ALL                    ALL LIBRARIES?
         BE    PROC0030                       YES
         CLC   WORKLIB,LIB_NAME               CORRECT LIBRARY?
         BNE   PROC0060                       NO
PROC0030 DS    0H
         ITRACE ID=FOUND,                                              +
               RDATA1=R7
         OI    WORKFLAG,$FOUND                LIBRARY FOUND
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         MVI   LIB_FUNCTION,$LIB_FUNCTION_OPEN
         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         LA    R1,LIBFUNC                     PARM BLOCK ADDRESS
PROC0040 DS    0H
         L     R2,COMM_LSUB_REQ               FIRST REQUEST ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN
         BC    4,PROC0040                     TRY AGAIN
         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB
         CLI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK
         BE    PROC0050                       YES
         MVC   WPLTXT(100),LIB_FUNCTION_MESSAGE
         BAL   R10,WTO0000                    SEND MESSAGE
         B     PROC0060
PROC0050 DS    0H
         MVC   WPLTXT(MSG02L),MSG02           COPY MESSAGE
         MVC   WPLTXT+(MSG02LIB-MSG02)(L'MSG02LIB),LIB_NAME
         MVC   WPLTXT+(MSG02DSC-MSG02)(L'MSG02DSC),LIB_DESCRIPTION
         BAL   R10,WTO0000                    ISSUE WTO
PROC0060 DS    0H
         ICM   R7,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   PROC0020
PROC0070 DS    0H
         TM    WORKFLAG,$FOUND                LIBRARY FOUND?
         BO    EXIT0000                       YES
         ITRACE ID=NOTFOUND
         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE MESSAGE
         B     EXIT0000
PROC0080 DS    0H
         ITRACE ID=TOOLONG
         MVC   WPLTXT(MSG04L),MSG04           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE WTO
         B     EXIT0000                       AND EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WTO0000  DS    0H
         ITRACE ID=WTO
         WTO   MF=(E,WORKWTO),                ISSUE WTO                +
               CONSID=WORKCID                 .. TO SAME CONSOLE
         MVC   WORKWTO(WTOL),WTOI
         BR    R10
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
LIBMVC   MVC   WORKLIB(0),5(R8)               COPY LIBRARY NAME
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
H5       DC    H'5'
H8       DC    H'8'
WTOI     WTO   '                                                       +
                                                                     ',+
               CONSID=,                                                +
               MF=L
WTOL     EQU   *-WTOI
MSG01    DC    C'CSUBOPEN01E No library name given for OPEN'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    C'CSUBOPEN02I Library '
MSG02LIB DC    CL8' '
         DC    CL2' '
MSG02DSC DC    CL40' '
         DC    C' opened'
MSG02L   EQU   *-MSG02
MSG03    DC    C'CSUBOPEN02E Library not found'
MSG03L   EQU   *-MSG03
MSG04    DC    C'CSUBOPEN03E Library name too long'
MSG04L   EQU   *-MSG04
ALL      DC    CL8'ALL'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA   DSECT
           LIBSAVE DSECT=NO
           LIBFUNC DSECT=NO
WORKCID    DS      F
WORKWTO    DS      0A,(WTOL)X
WORKFLAG   DS      X
$FOUND     EQU     X'80'

WORKLIB    DS      CL8
           DS      CL8               .. ALLOW FOR SCANNER TO OVER-RUN

WORKAREA_L EQU     *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZWPL   DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  CSUBOPEN
./ ADD NAME=CSUBSTAT 0100-09250-09250-0919-00251-00251-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: CSUBSTAT                                              *
*                                                                     *
*  Display status of users.                                           *
*                                                                     *
*  At entry:                                                          *
*    R1 command address                                               *
*    R2 command length                                                *
*    R3 address of console id                                         *
*                                                                     *
* ------------------------------------------------------------------- *
CSUBSTAT CSECT
CSUBSTAT AMODE 31
CSUBSTAT RMODE ANY
         USING CSUBSTAT,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'CSUBSTAT'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LR    R8,R1                          COPY COMMAND ADDRESS
         LR    R9,R2                          COPY COMMAND LENGTH
         GETMAIN RU,                          OBTAIN WORK AREA         +
               LV=WORKAREA_L,                 .. SIZE                  +
               LOC=BELOW                      .. BELOW 24-BIT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ITRACE ID=INIT,                                               +
               RDATA1=R8,                                              +
               RDATA2=R9
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   WORKCID,0(R3)                  COPY CONSOLE ID
         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO
         LA    R6,WORKWTO
         USING WPL,R6                         DEFINE BASE
* ------------------------------------------------------------------- *
*        Print subtask                                                *
* ------------------------------------------------------------------- *
PROC0000 DS    0H
         MVC   WPLTXT(MSG01L),MSG01
         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),PRINT
         OC    COMM_PRINT_TCB,COMM_PRINT_TCB  PRINT SUBTASK ACTIVE?
         BZ    PROC0010                       NO
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE
         B     PROC0020
PROC0010 DS    0H
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE
PROC0020 DS    0H
         UNPK  WORKUNPK(9),COMM_PRINT_TERM_ECB(5)
         TR    WORKUNPK(8),HEXCHAR
         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK
         BAL   R10,WTO0000                    ISSUE WTO
* ------------------------------------------------------------------- *
*        Dynamic allocation/deallocation                              *
* ------------------------------------------------------------------- *
         MVC   WPLTXT(MSG01L),MSG01
         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),DAIR
         OC    COMM_DSUB_TCB,COMM_DSUB_TCB    DAIR SUBTASK ACTIVE?
         BZ    PROC0030                       NO
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE
         B     PROC0040
PROC0030 DS    0H
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE
PROC0040 DS    0H
         UNPK  WORKUNPK(9),COMM_DSUB_TERM_ECB(5)
         TR    WORKUNPK(8),HEXCHAR
         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK
         BAL   R10,WTO0000                    ISSUE WTO
* ------------------------------------------------------------------- *
*        Library OPEN/CLOSE                                           *
* ------------------------------------------------------------------- *
         MVC   WPLTXT(MSG01L),MSG01
         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),LIBRARY
         OC    COMM_LSUB_TCB,COMM_LSUB_TCB    OPEN/CLOSE ACTIVE?
         BZ    PROC0050                       NO
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE
         B     PROC0060
PROC0050 DS    0H
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE
PROC0060 DS    0H
         UNPK  WORKUNPK(9),COMM_LSUB_TERM_ECB(5)
         TR    WORKUNPK(8),HEXCHAR
         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK
         BAL   R10,WTO0000                    ISSUE WTO
* ------------------------------------------------------------------- *
*        Changed source history                                       *
* ------------------------------------------------------------------- *
         MVC   WPLTXT(MSG01L),MSG01
         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),HISTORY
         OC    COMM_HSUB_TCB,COMM_HSUB_TCB    SOURCE HISTORY ACTIVE?
         BZ    PROC0070                       NO
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE
         B     PROC0080
PROC0070 DS    0H
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE
PROC0080 DS    0H
         UNPK  WORKUNPK(9),COMM_LSUB_TERM_ECB(5)
         TR    WORKUNPK(8),HEXCHAR
         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK
         BAL   R10,WTO0000                    ISSUE WTO
* ------------------------------------------------------------------- *
*        VTAM subtask                                                 *
* ------------------------------------------------------------------- *
         MVC   WPLTXT(MSG01L),MSG01
         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),VTAM
         OC    COMM_VTAM_TCB,COMM_VTAM_TCB    VTAM SUBTASK ACTIVE?
         BZ    PROC0090                       NO
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE
         B     PROC0100
PROC0090 DS    0H
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE
PROC0100 DS    0H
         UNPK  WORKUNPK(9),COMM_VTAM_TERM_ECB(5)
         TR    WORKUNPK(8),HEXCHAR
         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK
         BAL   R10,WTO0000                    ISSUE WTO
         MVC   WPLTXT(MSG02L),MSG02
         MVC   WPLTXT+(MSG02_APPL-MSG02)(L'MSG02_APPL),COMM_APPL_NAME
         BAL   R10,WTO0000                    ISSUE WTO
* ------------------------------------------------------------------- *
*        TCP/IP subtask                                               *
* ------------------------------------------------------------------- *
         MVC   WPLTXT(MSG01L),MSG01
         MVC   WPLTXT+(MSG01_SUBTASK-MSG01)(8),TCPIP
         OC    COMM_TCPIP_TCB,COMM_TCPIP_TCB  TCP/IP SUBTASK ACTIVE?
         BZ    PROC0110                       NO
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),ACTIVE
         B     PROC0120
PROC0110 DS    0H
         MVC   WPLTXT+(MSG01_STATUS-MSG01)(8),INACTIVE
PROC0120 DS    0H
         UNPK  WORKUNPK(9),COMM_TCPIP_TERM_ECB(5)
         TR    WORKUNPK(8),HEXCHAR
         MVC   WPLTXT+(MSG01_ECB-MSG01)(8),WORKUNPK
         BAL   R10,WTO0000                    ISSUE WTO
         MVC   WPLTXT(MSG03L),MSG03
         SR    R1,R1
         ICM   R1,3,COMM_PORT
         CVD   R1,WORKUNPK
         ED    WPLTXT+(MSG03_PORT-MSG03)(6),WORKUNPK+5
         BAL   R10,WTO0000                    ISSUE WTO
* ------------------------------------------------------------------- *
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WTO0000  DS    0H
         ITRACE ID=WTO
         WTO   MF=(E,WORKWTO),                ISSUE WTO                +
               CONSID=WORKCID                 .. TO SAME CONSOLE
         MVC   WORKWTO(WTOL),WTOI             RE-INITIALIZE WTO
         BR    R10
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
HEXCHAR  EQU   *-X'F0'
         DC    C'0123456789ABCDEF'

ACTIVE   DC    CL8'ACTIVE'
DAIR     DC    CL8'DAIR'
HISTORY  DC    CL8'HISTORY'
INACTIVE DC    CL8'INACTIVE'
LIBRARY  DC    CL8'LIBRARY'
PRINT    DC    CL8'PRINT'
TCPIP    DC    CL8'TCP/IP'
VTAM     DC    CL8'VTAM'
WTOI     WTO   '                                                       +
                                                                     ',+
               CONSID=,                                                +
               MF=L
WTOL     EQU   *-WTOI
MSG01          DS    0C
               DC    C'CSUBSTAT01I '
MSG01_SUBTASK  DC    CL8' '
               DC    C' IS '
MSG01_STATUS   DC    CL8' '
               DC    C'  TERMINATION ECB='
MSG01_ECB      DC    CL8' '
MSG01L         EQU   *-MSG01
MSG02          DS    0C
               DC    C'CSUBSTAT02I '
               DC    C'VTAM APPLID='
MSG02_APPL     DC    CL8' '
MSG02L         EQU   *-MSG02
MSG03          DS    0C
               DC    C'CSUBSTAT03I '
               DC    C'TCP/IP PORT NUMBER'
MSG03_PORT     DC    X'402020202120'
MSG03L         EQU   *-MSG03
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA   DSECT
           LIBSAVE  DSECT=NO
WORKCID    DS       F
WORKWTO    DS       0A,(WTOL)X
WORKUNPK   DS       CL9
WORKAREA_L EQU      *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FUNCTION_DSECT        DSECT
FUNCTION_CODE         DS  X
FUNCTION_DESCRIPTION  DS  CL16
FUNCTION_LENGTH       EQU *-FUNCTION_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZWPL   DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  CSUBSTAT
./ ADD NAME=CSUBUSER 0100-09250-09250-0919-00290-00290-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: CSUBUSER                                              *
*                                                                     *
*  Display status of users.                                           *
*                                                                     *
*  At entry:                                                          *
*    R1 command address                                               *
*    R2 command length                                                *
*    R3 address of console id                                         *
*                                                                     *
* ------------------------------------------------------------------- *
CSUBUSER CSECT
CSUBUSER AMODE 31
CSUBUSER RMODE ANY
         USING CSUBUSER,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'CSUBUSER'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LR    R8,R1                          COPY COMMAND ADDRESS
         LR    R9,R2                          COPY COMMAND LENGTH
         GETMAIN RU,                          OBTAIN WORK AREA         +
               LV=WORKAREA_L,                 .. SIZE                  +
               LOC=BELOW                      .. BELOW 24-BIT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ITRACE ID=INIT,                                               +
               RDATA1=R8,                                              +
               RDATA2=R9
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   WORKCID,0(R3)                  COPY CONSOLE ID
         MVC   WORKWTO(WTOL),WTOI             INITIALIZE WTO
         MVI   WORKFLAG,0                     CLEAR FLAGS
         LA    R6,WORKWTO
         USING WPL,R6                         DEFINE BASE
         MVC   WORKUSER,ALL                   ASSUME ALL USERS
         SH    R9,H6                          MINUS LENGTH OF "USER"
         BL    PROC0010
         CH    R9,H7                          TOO LONG?
         BH    PROC0100                       YES
         BCTR  R9,0                           FOR EX INSTRUCTION
         EX    R9,USERMVC                     COPY USER NAME
PROC0010 DS    0H
         ITRACE ID=USER,                                               +
               DATA1=WORKUSER
         MVC   WORKENQ(ENQL),ENQI
         ENQ   MF=(E,WORKENQ)                 ENQUE THE USER CHAIN
         OI    WORKFLAG,$ENQ                  SET FLAG
         ICM   R7,15,COMM_USER_CHAIN          FIRST USER
         BZ    PROC0110
         USING USERBLOK,R7                    DEFINE BASE
PROC0020 DS    0H
         CLC   WORKUSER,ALL                   ALL USERS?
         BE    PROC0030                       YES
         CLC   WORKUSER,USER_USER_ID          CORRECT USER?
         BNE   PROC0080                       NO
PROC0030 DS    0H
         ITRACE ID=FOUND,                                              +
               RDATA1=R7
         OI    WORKFLAG,$FOUND                LIBRARY FOUND
         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE
         MVC   WPLTXT+(MSG01USR-MSG01)(L'MSG01USR),USER_USER_ID
         MVC   WPLTXT+(MSG01LIB-MSG01)(L'MSG01LIB),USER_LIBRARY
*---------------------------------------------------------------------*
*        Determine last network function                              *
*---------------------------------------------------------------------*
         L     R9,USER_IO                     USER'S I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         LA    R1,FUNCTION_TABLE              FUNCTIONS TABLE
         USING FUNCTION_DSECT,R1              DEFINE BASE
PROC0040 DS    0H
         CLI   0(R1),X'FF'                    END OF TABLE?
         BE    PROC0050                       YES
         CLC   NET_FUNCTION,FUNCTION_CODE     FUNCTION LOCATED?
         BE    PROC0050                       YES
         LA    R1,FUNCTION_LENGTH(R1)         NEXT FUNCTION
         B     PROC0040                       LOOP
PROC0050 DS    0H
         MVC   WPLTXT+(MSG01FNC-MSG01)(L'MSG01FNC),FUNCTION_DESCRIPTION
         BAL   R10,WTO0000
*---------------------------------------------------------------------*
*        Display network statistics                                   *
*---------------------------------------------------------------------*
         MVC   WPLTXT(MSG02L),MSG02
         ICM   R1,15,USER_SENDS
         CVD   R1,COMMDWRD
         ED    WPLTXT+(MSG02S-MSG02)(L'MSG02S),COMMDWRD+5
         ICM   R1,15,USER_BYTES_SENT
         CVD   R1,COMMDWRD
         ED    WPLTXT+(MSG02SB-MSG02)(L'MSG02SB),COMMDWRD+4
         ICM   R1,15,USER_RECEIVES
         CVD   R1,COMMDWRD
         ED    WPLTXT+(MSG02R-MSG02)(L'MSG02R),COMMDWRD+5
         ICM   R1,15,USER_BYTES_RECEIVED
         CVD   R1,COMMDWRD
         ED    WPLTXT+(MSG02RB-MSG02)(L'MSG02RB),COMMDWRD+4
         BAL   R10,WTO0000
         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID
         BNZ   PROC0060
         MVC   WPLTXT(MSG07L),MSG07
         MVC   WPLTXT+(MSG07IP-MSG07)(L'MSG07IP),USER_IP_ADDRESS
         B     PROC0070
PROC0060 DS    0H
         MVC   WPLTXT(MSG06L),MSG06
         MVC   WPLTXT+(MSG06LU-MSG06)(L'MSG06LU),USER_PARTNER_LU
PROC0070 DS    0H
         BAL   R10,WTO0000
PROC0080 DS    0H
         ICM   R7,15,USER_NEXT                NEXT USER
         BNZ   PROC0020
PROC0090 DS    0H
         TM    WORKFLAG,$FOUND                LIBRARY FOUND?
         BO    EXIT0000                       YES
         ITRACE ID=NOTFOUND
         MVC   WPLTXT(MSG03L),MSG03           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE MESSAGE
         B     EXIT0000
PROC0100 DS    0H
         ITRACE ID=TOOLONG
         MVC   WPLTXT(MSG04L),MSG04           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE WTO
         B     EXIT0000                       AND EXIT
PROC0110 DS    0H
         ITRACE ID=NOUSERS
         MVC   WPLTXT(MSG05L),MSG05           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE WTO
         B     EXIT0000                       AND EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WTO0000  DS    0H
         ITRACE ID=WTO
         WTO   MF=(E,WORKWTO),                ISSUE WTO                +
               CONSID=WORKCID                 .. TO SAME CONSOLE
         MVC   WORKWTO(WTOL),WTOI             RE-INITIALIZE WTO
         BR    R10
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         TM    WORKFLAG,$ENQ                  ENQ ISSUED?
         BNO   EXIT0010                       NO
         MVC   WORKENQ(ENQL),ENQI
         DEQ   MF=(E,WORKENQ)                 DEQ THE USER CHAIN
         NI    WORKFLAG,255-$ENQ
EXIT0010 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
USERMVC  MVC   WORKUSER(0),5(R8)              COPY USER NAME
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
H6       DC    H'6'
H7       DC    H'7'
WTOI     WTO   '                                                       +
                                                                     ',+
               CONSID=,                                                +
               MF=L
WTOL     EQU   *-WTOI
ENQI     ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L
ENQL     EQU   *-ENQI
QNAME    DC    CL8'LIB'
RNAME    DC    CL8'COMMUSER'
MSG01    DS    0C
         DC    C'CSUBUSER01I '
MSG01USR DC    CL8' '
         DC    C' '
MSG01LIB DC    CL8' '
         DC    C' '
MSG01FNC DC    CL16' '
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    C'CSUBUSER02I '
         DC    CL9' '
         DC    C'Sends '
MSG02S   DC    X'402020202120'
         DC    C' bytes'
MSG02SB  DC    X'4020202020202120'
         DC    C'   Receives '
MSG02R   DC    X'402020202120'
         DC    C' bytes'
MSG02RB  DC    X'4020202020202120'
MSG02L   EQU   *-MSG02
MSG03    DC    C'CSUBUSER03E User not found'
MSG03L   EQU   *-MSG03
MSG04    DC    C'CSUBUSER04E User name too long'
MSG04L   EQU   *-MSG04
MSG05    DC    C'CSUBUSER05I No users currently connected'
MSG05L   EQU   *-MSG05
MSG06    DC    C'CSUBUSER06I '
         DC    CL9' '
         DC    C'VTAM LU '
MSG06LU  DC    CL8' '
MSG06L   EQU   *-MSG06
MSG07    DC    C'CSUBUSER07I '
         DC    CL9' '
         DC    C'IP address: '
MSG07IP  DC    CL15' '
MSG07L   EQU   *-MSG07

FUNCTION_TABLE DS 0C
         DC   AL1($NET_IDENTIFY_USER),CL16'Identify user'
         DC   AL1($NET_GET_LIBS),CL16'Get libraries'
         DC   AL1($NET_GET_MEMBERS),CL16'Get members'
         DC   AL1($NET_CHECK_IN_AUTH),CL16'Check in auth'
         DC   AL1($NET_CHECK_IN_SOURCE),CL16'Check in source'
         DC   AL1($NET_CHECK_NEW_AUTH),CL16'Check new auth'
         DC   AL1($NET_CHECK_OUT_AUTH),CL16'Check out auth'
         DC   AL1($NET_CHECK_OUT_SOURCE),CL16'Check out source'
         DC   AL1($NET_CHECK_VIEW_AUTH),CL16'Check view auth'
         DC   AL1($NET_VIEW_SOURCE),CL16'View source'
         DC   AL1($NET_CHECK_DESC_AUTH),CL16'Check desc auth'
         DC   AL1($NET_SEND_DESC),CL16'Send description'
         DC   AL1($NET_GET_DESC),CL16'Get description'
         DC   AL1($NET_GET_RECORDS),CL16'Get records'
         DC   AL1($NET_SEND_RECORDS),CL16'Send records'
         DC   AL1($NET_ENQUE_LIB),CL16'Enqueue a lib'
         DC   AL1($NET_DEQ_LIB),CL16'Dequeue a lib'
         DC   AL1($NET_CHECK_DEL_AUTH),CL16'Delete a member'
         DC   AL1($NET_CONFIRM_CHECK_OUT),CL16'Confirm check out'
         DC   AL1($NET_ABORT_CHECK_OUT),CL16'Abort check out'
         DC   AL1($NET_GET_STATUS),CL16'Get STC status'
         DC   AL1($NET_CHECK_ADMIN_AUTH),CL16'Check ADMIN Auth'
         DC   AL1($NET_SEND_ADMIN),CL16'Send ADMIN'
         DC   AL1($NET_UNDO),CL16'Undo'
         DC   X'FF',CL16'Unknown'
ALL      DC    CL8'ALL'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA   DSECT
           LIBSAVE  DSECT=NO
           LIBFUNC  DSECT=NO
WORKCID    DS       F
WORKWTO    DS       0A,(WTOL)X
WORKENQ    DS       0F,(ENQL)X
WORKUSER   DS       CL8
WORKFLAG   DS       X
$FOUND     EQU      X'80'
$ENQ       EQU      X'40'
WORKAREA_L EQU      *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FUNCTION_DSECT        DSECT
FUNCTION_CODE         DS  X
FUNCTION_DESCRIPTION  DS  CL16
FUNCTION_LENGTH       EQU *-FUNCTION_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEZWPL   DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  CSUBUSER
./ ADD NAME=DAIRMSG  0100-09250-09250-0919-00071-00071-00000-SOURCE
         MACRO
         DAIRMSG &CODE,&MSG1=,&MSG2=,&MSG3=,&MSG4=,&MSG5=
         LCLA &NBR
&NBR     SETA 0
         AIF (T'&CODE EQ 'O').ERR0010
         AIF (K'&CODE NE 12).ERR0015
         AIF (T'&MSG5 EQ 'O').LBL0010
         AIF (T'&MSG4 EQ 'O').ERR0020
&NBR     SETA &NBR+1
.LBL0010 ANOP
         AIF (T'&MSG4 EQ 'O').LBL0020
         AIF (T'&MSG3 EQ 'O').ERR0030
&NBR     SETA &NBR+1
.LBL0020 ANOP
         AIF (T'&MSG3 EQ 'O').LBL0030
         AIF (T'&MSG2 EQ 'O').ERR0040
&NBR     SETA &NBR+1
.LBL0030 ANOP
         AIF (T'&MSG2 EQ 'O').LBL0040
         AIF (T'&MSG1 EQ 'O').ERR0050
&NBR     SETA &NBR+1
.LBL0040 ANOP
         AIF (T'&MSG1 EQ 'O').ERR0060
&NBR     SETA &NBR+1
A&SYSNDX DS  0X
         DC  AL2(E&SYSNDX-A&SYSNDX)         TOTAL LENGTH
         DC  XL6'&CODE'                     R15, ERROR, INFO
         DC  AL2(&NBR)                      NUMBER OF MESSAGES
         DC  CL80&MSG1
         AIF (T'&MSG2 EQ 'O').LBL0050
         DC  CL80&MSG2
         AIF (T'&MSG3 EQ 'O').LBL0050
         DC  CL80&MSG3
         AIF (T'&MSG4 EQ 'O').LBL0050
         DC  CL80&MSG4
         AIF (T'&MSG5 EQ 'O').LBL0050
         DC  CL80&MSG5
.LBL0050 ANOP
E&SYSNDX DS  0X
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'DAIR ERROR CODES ARE REQUIRED'
         MEXIT
.ERR0015 ANOP
         MNOTE 12,'DAIR ERROR CODES MUST BE 12 CHARACTERS IN LENGTH'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'MSG5 NOT VALID WITHOUT MSG1, MSG2, MSG3, AND MSG4'
         MEXIT
.ERR0030 ANOP
         MNOTE 12,'MSG4 NOT VALID WITHOUT MSG1, MSG2, AND MSG3'
         MEXIT
.ERR0040 ANOP
         MNOTE 12,'MSG3 NOT VALID WITHOUT MSG1 AND MSG2'
         MEXIT
.ERR0050 ANOP
         MNOTE 12,'MSG2 NOT VALID WITHOUT MSG1'
         MEXIT
.ERR0060 ANOP
         MNOTE 12,'MSG1 IS REQUIRED'
         MEND



DAIRMSG  CSECT
DAIRMSG  AMODE  31
DAIRMSG  RMODE  ANY
         DAIRMSG 0004021C0000,                                         +
               MSG1='Invalid UNIT NAME'
         DC    X'FF'
         END   DAIRMSG
./ ADD NAME=DSUBMAIN 0100-09250-09250-0919-00107-00107-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: DSUBMAIN                                              *
*                                                                     *
*   Interface with MVS's dynamic allocation interface routine (DAIR)  *
*   to allocate or de-allocate data sets.                             *
*                                                                     *
*   The interface block is DAIRREQ.                                   *
*                                                                     *
* ------------------------------------------------------------------- *
DSUBMAIN CSECT
DSUBMAIN AMODE 31
DSUBMAIN RMODE ANY
         USING DSUBMAIN,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                CHAIN REGISTERS
         LR    R12,R15                        COPY ENTRY POINT ADDRESS
         B     DAIR0000
         DC    CL8'DSUBMAIN'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
DAIR0000 DS    0H
         L     R11,0(R1)                      COMMON AREA ADDRESS
         USING DAIRREQ,R10                    DEFINE BASE
         GETMAIN RU,                          ACQUIRE WORK AREA        +
               LV=WKL,                        .. ACQUIRE WORK AREA     +
               LOC=ANY                        .. FROM ANY AREA
         ST    R13,4(R1)                      CHAIN CALLER'S AREA
         ST    R1,8(R13)                      CHAIN OUR AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WK,R13                         DEFINE BASE
DAIR0010 DS    0H
         SR    R1,R1                          CLEAR REGISTER
         L     R10,COMM_DSUB_REQ              FIRST REQUEST
         CS    R10,R1,COMM_DSUB_REQ           GRAB THE CHAIN
         BC    4,DAIR0010                     MISSED, TRY AGAIN
         ITRACE ID=HAVEQ,                                              +
               RDATA1=R10
         LTR   R10,R10                        ANYTHING?
         BNZ   DAIR0020                       YES.. WE'VE GOT WORK
         ITRACE ID=WORKWAIT                   WAITING FOR WORK
         WAIT  ECB=COMM_DSUB_WORK_ECB         WAIT FOR WORK
         XC    COMM_DSUB_WORK_ECB,COMM_DSUB_WORK_ECB
         TM    COMM_EOJ_PHASE,$EOJ3           TIME TO CLOSE DOWN?
         BO    EXIT0000                       YES
         ITRACE ID=WOKEUP
         B     DAIR0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0020 DS    0H
         ITRACE ID=PROCREQ,                                            +
               RDATA1=R10
         TM    COMM_EOJ_PHASE,$EOJ3           TIME TO CLOSE DOWN?
         BO    EXIT0000                       YES
         LA    R1,DAIRREQ                     PARAMETER BLOCK ADDRESS
         L     R15,VSUB0004                   DAIR ENTRY POINT
         ITRACE ID=CALL0004,                                           +
               RDATA1=R15,                                             +
               RDATA2=R1
         BALR  R14,R15                        LINK TO DAIR SUBROUTINE
         ITRACE ID=POST_ECB
         POST  DAIR_ECB
         ICM   R10,15,DAIR_NEXT               NEXT REQUEST
         BNZ   DAIR0020
         B     DAIR0010
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT                       EXITING
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WKL
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
VSUB0004 DC    V(SUB0004)                     DAIR SUBROUTINE
         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
WK       DSECT
         LIBSAVE  DSECT=NO
WKL      EQU      *-WK
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         DAIRREQ  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  DSUBMAIN
./ ADD NAME=HSUBMAIN 0100-09250-09250-0919-00469-00469-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: HSUBMAIN                                                     *
*                                                                     *
*  Purpose: When a user updates a library member, the contents of     *
*           the member are written to a history file prior to the     *
*           update.  Each member written to the history file is       *
*           preceded by a header that identifies the member being     *
*           recorded.  This should allow source to be retrieved       *
*           in the event an update needs to be backed-out.            *
*                                                                     *
* ------------------------------------------------------------------- *
HSUBMAIN CSECT
HSUBMAIN AMODE 31
HSUBMAIN RMODE ANY
         USING HSUBMAIN,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'HSUBMAIN'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,0(R1)                      LIBSCOMM ADDRESS
* ------------------------------------------------------------------- *
*        ACQUIRE STORAGE FOR WORK AREA                                *
* ------------------------------------------------------------------- *
         GETMAIN RU,                          ACQUIRE WORK AREA        +
               LV=WORKAREA_L,                 .. WORK AREA SIZE        +
               LOC=BELOW                      .. BELOW 16M LINE
         ST    R1,8(R13)                      CHAIN SAVE AREAS
         ST    R13,4(R1)
         LR    R13,R1                         COPY SAVE AREA ADDRESS
         USING WORK,R13                       DEFINE BASE
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK
         MVC   WORK_DCB(DCBL),DCBI            INITIALIZE DCB
         MVC   WORK_OCPL(OPENL),OPENI
         OPEN  (WORK_DCB,OUTPUT),             OPEN THE DCB             +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         MVC   PRTMSGID(MSG01L),MSG01
         MVC   WORK_RPL(RPLL),RPLI
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=ANY
         ST    R1,UX01_EXPANDED_BUFFER
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE*2,                                  +
               LOC=ANY
         ST    R1,WORK_VSAM_IO_AREA
         LR    R7,R1
         USING LIB_RECORD,R7
         LA    R2,WORK_RPL
         LA    R3,WORK_KEY
         MODCB RPL=(R2),                                               +
               AREA=(R7),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R3),                                               +
               KEYLEN=L'WORK_KEY,                                      +
               OPTCD=(KEY,DIR,SYN,MVE)
         LA    R1,LIB_DATA                    DATA ADDRESS
         ST    R1,UX01_COMPRESSED_BUFFER
         BAL   R8,PRT0000                     PRINT
         LA    R1,WORK_EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,WORK_COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
         MVI   WORK_HISTORY_SPACE,C' '
         LOAD  EP=LIBUX01
         ST    R0,WORK_AUX01
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0010 DS    0H
         TM    COMM_EOJ_PHASE,$EOJ2           SHUTDOWN PHASE 2?
         BO    EXIT0000                       YES
         TM    COMM_HSUB_WORK_ECB,X'40'       ECB ALREADY POSTED?
         BO    PROC0020                       YES
         ITRACE ID=WORKWAIT
         WAIT  1,ECB=COMM_HSUB_WORK_ECB       WAIT FOR WORK
         XC    COMM_HSUB_WORK_ECB,COMM_HSUB_WORK_ECB
         ITRACE ID=WOKEUP
PROC0020 DS    0H
         SR    R1,R1                          CLEAR REGISTER
         ICM   R10,15,COMM_HSUB_REQ           FIRST REQUEST BLOCK
         USING HISTREQ,R10
         BZ    PROC0010                       NOTHING ON CHAIN
         CS    R10,R1,COMM_HSUB_REQ           OBTAIN WORK CHAIN
         BC    4,PROC0020                     TRY AGAIN
         ITRACE ID=HAVEQ,                                              +
               RDATA1=R10
PROC0030 DS    0H
         ICM   R9,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         BZ    ERR0010
         USING LIBBLOK,R9                     DEFINE BASE
PROC0040 DS    0H
         CLC   LIB_NAME,HISTLIB               IS THIS THE LIBRARY?
         BE    PROC0050                       YES
         ICM   R9,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   PROC0040
         B     ERR0010
PROC0050 DS    0H
         ITRACE ID=LIBFOUND,                                           +
               DATA1=LIB_NAME,                                         +
               RDATA2=R9
         LA    R2,WORK_RPL                    ACB'S ADDRESS
         LA    R3,LIB_ACB
         MODCB RPL=(R2),                                               +
               ACB=(R3)
         MVI   WORK_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   WORK_KEY_NAME,HISTNAME
         MVC   WORK_KEY_VER,HISTVER
         MVC   WORK_KEY_SEQ,F1                START WITH RECORD 1
         MVC   PRTMSGID(MSG02L),MSG02
         MVC   PRTMSGID+(MSG02LIB-MSG02)(L'MSG02LIB),HISTLIB
         MVC   PRTMSGID+(MSG02NAME-MSG02)(L'MSG02NAME),HISTNAME
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,HISTVER                   VERSION NUMBER
         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG02VER-MSG02)(L'MSG02VER),WORK_DWORD+5
         BAL   R8,PRT0000                     PRINT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0000 DS    0H
         ITRACE ID=READ,                                               +
               DATA1=WORK_KEY,                                         +
               DATA2=WORK_KEY+8
         GET   RPL=WORK_RPL
         ITRACE ID=READRC,                                             +
               RDATA1=R15
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   READ1000                       NO
         SHOWCB RPL=WORK_RPL,                 GET RECORD LENGTH        +
               FIELDS=(RECLEN),                                        +
               AREA=WORK_RECORD_LENGTH,                                +
               LENGTH=4
         L     R1,WORK_RECORD_LENGTH
         SH    R1,=Y(L'LIB_KEY)
         ST    R1,WORK_COMPRESSED_LENGTH
         CLI   WORK_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         BE    READ0100
         CLI   WORK_KEY_TYPE,$LIB_KEY_TYPE_DATA
         BE    READ0200
         ABEND 1,DUMP,,USER
READ0100 DS    0H
         ITRACE ID=BLDINDX
         XC    WORK_HISTORY_RECORD(WORK_HISTORY_RECORD_LENGTH),WORK_HIS+
               TORY_RECORD
         MVC   WORK_HISTORY_RECORD_TYPE,INDEX
         MVC   WORK_HISTORY_RECORD_TYPE+5(1),LIB_KEY_SEQ+3
         OI    WORK_HISTORY_RECORD_TYPE+5,X'F0'
         CLC   WORK_KEY_SEQ,F1
         BH    READ0250
         MVC   WORK_RECORDS_IN_FILE,LIB_INDEX_RECORDS
         MVC   WORK_HISTORY_NAME,LIB_KEY_NAME
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,LIB_KEY_VERSION           VERSION NUMBER
         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL
         MVC   WORK_VERSION,=X'F02020202020'
         ED    WORK_VERSION,WORK_DWORD+5
         MVC   WORK_HISTORY_VERSION,WORK_VERSION+1
         MVC   WORK_HISTORY_OWNER,LIB_INDEX_OWNER
         TM    LIB_INDEX_STATUS,$LIB_STATUS_IN
         BO    READ0110
         MVC   WORK_HISTORY_STATUS,OUT
         B     READ0120
READ0110 DS    0H
         MVC   WORK_HISTORY_STATUS,IN
READ0120 DS    0H
         AP    LIB_INDEX_CREATE_DATE,=P'1900000'
         MVC   WORK_DATE,=X'40212020204B202020'
         ED    WORK_DATE,LIB_INDEX_CREATE_DATE
         MVC   WORK_HISTORY_CREATE_DATE,WORK_DATE+1
         UNPK  WORK_TIME(9),LIB_INDEX_CREATE_TIME(5)
         MVC   WORK_HISTORY_CREATE_TIME+00(2),WORK_TIME+00
         MVI   WORK_HISTORY_CREATE_TIME+02,C':'
         MVC   WORK_HISTORY_CREATE_TIME+03(2),WORK_TIME+02
         MVI   WORK_HISTORY_CREATE_TIME+05,C':'
         MVC   WORK_HISTORY_CREATE_TIME+06(2),WORK_TIME+04
         MVC   WORK_HISTORY_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER
         AP    LIB_INDEX_CHECK_OUT_DATE,=P'1900000'
         MVC   WORK_DATE,=X'40212020204B202020'
         ED    WORK_DATE,LIB_INDEX_CHECK_OUT_DATE
         MVC   WORK_HISTORY_CHECK_OUT_DATE,WORK_DATE+1
         UNPK  WORK_TIME(9),LIB_INDEX_CHECK_OUT_TIME(5)
         MVC   WORK_HISTORY_CHECK_OUT_TIME+00(2),WORK_TIME+00
         MVI   WORK_HISTORY_CHECK_OUT_TIME+02,C':'
         MVC   WORK_HISTORY_CHECK_OUT_TIME+03(2),WORK_TIME+02
         MVI   WORK_HISTORY_CHECK_OUT_TIME+05,C':'
         MVC   WORK_HISTORY_CHECK_OUT_TIME+06(2),WORK_TIME+04
         ICM   R1,15,LIB_INDEX_CHECK_OUTS
         CVD   R1,WORK_DWORD
         MVC   WORK_HISTORY_CHECK_OUTS,=X'40206B2020206B202120'
         ED    WORK_HISTORY_CHECK_OUTS,WORK_DWORD+4
         MVC   WORK_HISTORY_CHECK_IN_USER,LIB_INDEX_CHECK_IN_USER
         AP    LIB_INDEX_CHECK_IN_DATE,=P'1900000'
         MVC   WORK_DATE,=X'40212020204B202020'
         ED    WORK_DATE,LIB_INDEX_CHECK_IN_DATE
         MVC   WORK_HISTORY_CHECK_IN_DATE,WORK_DATE+1
         UNPK  WORK_TIME(9),LIB_INDEX_CHECK_IN_TIME(5)
         MVC   WORK_HISTORY_CHECK_IN_TIME+00(2),WORK_TIME+00
         MVI   WORK_HISTORY_CHECK_IN_TIME+02,C':'
         MVC   WORK_HISTORY_CHECK_IN_TIME+03(2),WORK_TIME+02
         MVI   WORK_HISTORY_CHECK_IN_TIME+05,C':'
         MVC   WORK_HISTORY_CHECK_IN_TIME+06(2),WORK_TIME+04
         PUT   WORK_DCB,WORK_HISTORY_RECORD
         B     READ0300
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0200 DS    0H
         ITRACE ID=DATARECD
         L     R2,WORK_RECORDS_IN_FILE
         LR    R3,R2                          COPY TO R3
         C     R2,MAX_RECORDS_PER_BUFFER      MORE THAN 1 BUFFER?
         BL    READ0210                       NO
         L     R2,MAX_RECORDS_PER_BUFFER      LIMIT TO 1 BUFFER
READ0210 DS    0H
         SR    R3,R2                          MINUS NUMBER IN BUFFER
         ST    R3,WORK_RECORDS_IN_FILE        SAVE RECORDS REMAINING
         LR    R3,R2                          COPY NUMBER OF RECORDS
         MH    R2,H80                         SIZE OF DECOMPRESSED DATA
         ST    R2,WORK_EXPANDED_LENGTH
         MVI   UX01_FUNCTION,$UX01_DECOMPRESS
         LA    R1,UX01_PARMS
         L     R15,WORK_AUX01
         BALR  R14,R15                        DE-COMPRESS THE DATA
         L     R2,UX01_EXPANDED_BUFFER
         ITRACE ID=WRTDATA,                                            +
               RDATA1=R3
         MVC   WORK_HISTORY_RECORD(WORK_HISTORY_RECORD_LENGTH),WORK_HIS+
               TORY_RECORD-1
         MVC   WORK_HISTORY_RECORD_TYPE,DATA00
         MVC   WORK_HISTORY_RECORD_TYPE+5(1),LIB_KEY_SEQ+3
         OI    WORK_HISTORY_RECORD_TYPE+5,X'F0'
READ0220 DS    0H
         MVC   WORK_HISTORY_SOURCE,0(R2)
         PUT   WORK_DCB,WORK_HISTORY_RECORD
         LA    R2,80(R2)
         BCT   R3,READ0220
         B     READ0300
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0250 DS    0H
         ITRACE ID=WRTDESC
         MVC   WORK_HISTORY_NAME(80),LIB_DATA
         PUT   WORK_DCB,WORK_HISTORY_RECORD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0300 DS    0H
         ITRACE ID=UPDTEKEY,                                           +
               DATA1=WORK_KEY,                                         +
               DATA2=WORK_KEY+8
         ICM   R1,15,WORK_KEY_SEQ
         LA    R1,1(R1)
         STCM  R1,15,WORK_KEY_SEQ
         B     READ0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0900 DS    0H
         PUT   WORK_DCB,WORK_HISTORY_RECORD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ1000 DS    0H
         ITRACE ID=CHGTYPE
         CLI   WORK_KEY_TYPE,$LIB_KEY_TYPE_DATA
         BE    NEXT0000
         MVI   WORK_KEY_TYPE,$LIB_KEY_TYPE_DATA
         MVC   WORK_KEY_SEQ,F1
         B     READ0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
NEXT0000 DS    0H
         ITRACE ID=NEXT
         L     R2,HISTNEXT
         POST  HISTECB                        WAKE UP THE CALLER
         LTR   R10,R2                         COPY NEXT ECB ADDRESS
         BNZ   PROC0030                       PROCESS THIS REQUEST
         B     PROC0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,                                                   +
               LV=PRTBLOKL,                                            +
               LOC=ANY
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE
         ST    R2,PRTNEXT-PRTBLOK(R1)                         '
         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN
         BC    4,PRT0010                      TRY AGAIN
         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK
         BR    R8                             COMPLETE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ABEND 1,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         MVC   WORK_OCPL(CLOSEL),CLOSEI
         CLOSE WORK_DCB,                                               +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         L     R1,UX01_EXPANDED_BUFFER
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE
         L     R1,WORK_VSAM_IO_AREA
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE*2
         DELETE EP=LIBUX01
         LR    R1,R13                         COPY WORK ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDR
         FREEMAIN RU,                         FREEMAIN WORK AREA       +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        CLEAR REGISTER
         BR    R14                            EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
MAX_RECORDS_PER_BUFFER DC A($MAX_SOURCE_SIZE/80)

PRTID    DC    CL8'PRTBLOK'
F1       DC    F'1'
DCBI     DCB   DSORG=PS,                                               +
               DDNAME=LIBHIST,                                         +
               RECFM=FB,                                               +
               LRECL=WORK_HISTORY_RECORD_LENGTH,                       +
               MACRF=PM
DCBL     EQU   *-DCBI
OPENI    OPEN  (*,UPDAT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
RPLI     RPL   AM=VSAM
H80      DC    H'80'
INDEX    DC    CL5'INDEX'
DATA00   DC    CL5'DATA0'
IN       DC    CL3'IN'
OUT      DC    CL3'OUT'
MSG01    DS    0C
         DC    C'HSUBMAIN01I'
         DC    C' Changed source history subtask is active'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    C'HSUBMAIN02I'
         DC    C'Received request for library '
MSG02LIB DC    CL8' '
         DC    C' member '
MSG02NAME DC   CL8' '
         DC    C' version '
MSG02VER DC    x'402120202020'
MSG02L   EQU   *-MSG02
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREA                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
WORK                        DSECT
                            LIBSAVE DSECT=NO
WORK_DWORD                  DS      D

                            PRTBLOK  DSECT=NO
                            UX01PARM DSECT=NO

WORK_AUX01                  DS  A             USER EXIT 1 ENTRY POINT
WORK_EXPANDED_LENGTH        DS  A             LENGTH OF EXPANDED DATA
WORK_COMPRESSED_LENGTH      DS  A             LENGTH OF COMPRESSED DATA

WORK_RECORD_LENGTH          DS  F
WORK_RECORDS_IN_FILE        DS  F

WORK_VSAM_IO_AREA           DS  A

WORK_RPL                    DS  (RPLL)X
WORK_DCB                    DS  (DCBL)X
WORK_OCPL                   DS  (OPENL)X

WORK_VERSION                DS  CL6
WORK_DATE                   DS  CL09
WORK_TIME                   DS  CL09

WORK_KEY                    DS  0CL15
WORK_KEY_TYPE               DS  X
WORK_KEY_NAME               DS  CL8
WORK_KEY_VER                DS  XL2
WORK_KEY_SEQ                DS  XL4

WORK_HISTORY_SPACE          DS  C
WORK_HISTORY_RECORD         DS  0C
WORK_HISTORY_RECORD_TYPE    DS  CL6
WORK_HISTORY_NAME           DS  CL8
WORK_HISTORY_VERSION        DS  CL5
WORK_HISTORY_OWNER          DS  CL8
WORK_HISTORY_STATUS         DS  CL3
WORK_HISTORY_CREATE_DATE    DS  CL8
WORK_HISTORY_CREATE_TIME    DS  CL8
WORK_HISTORY_CHECK_OUT_USER DS  CL8
WORK_HISTORY_CHECK_OUT_DATE DS  CL8
WORK_HISTORY_CHECK_OUT_TIME DS  CL8
WORK_HISTORY_CHECK_OUTS     DS  CL10
WORK_HISTORY_CHECK_IN_USER  DS  CL8
WORK_HISTORY_CHECK_IN_DATE  DS  CL8
WORK_HISTORY_CHECK_IN_TIME  DS  CL8
WORK_HISTORY_RECORD_LENGTH  EQU *-WORK_HISTORY_RECORD
                            ORG WORK_HISTORY_NAME
WORK_HISTORY_SOURCE         DS  CL80
                            ORG
WORKAREA_L                  EQU *-WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         HISTREQ  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBRECD  DSECT=YES
* ------------------------------------------------------------------- *
*        ACB                                                          *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGEXLST AM=VSAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGRPL   AM=VTAM
RPLL     EQU      *-IFGRPL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA LIST=NO
$MAX_SOURCE_SIZE EQU 8000
         COPY  REGEQU
         END   HSUBMAIN
./ ADD NAME=LIBAUTH  0100-09250-09250-0919-00204-00204-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*    Default authorization checking.                                  *
*                                                                     *
*    Allow anything (now that's what I call security!)                *
*                                                                     *
* ------------------------------------------------------------------- *
LIBAUTH  CSECT
LIBAUTH  AMODE 31
LIBAUTH  RMODE ANY
         USING LIBAUTH,R12                    DECLARE THE BASE REGISTER
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY EPA
         B     INIT0000
         DC    CL8'LIBAUTH'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LR    R10,R1                         COPY PARM BLOCK ADDRESS
         USING AUTHBLOK,R10                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORKL,                                               +
               LOC=ANY
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1                         COPY SAVE AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   AUTH_MESSAGE_1,BLANKS
         MVC   AUTH_MESSAGE_2,BLANKS
         MVC   AUTH_MESSAGE_3,BLANKS
         MVC   AUTH_MESSAGE_4,BLANKS
         MVC   AUTH_MESSAGE_5,BLANKS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LOAD  EP=LIBUX02
         LR    R15,R0                         COPY ENTRY POINT
         LR    R1,R10                         COPY PARM BLOCK ADDRESS
         BALR  R14,R15                        LINK TO USER EXIT
         LR    R2,R15                         SAVE RETURN CODE
         DELETE EP=LIBUX02
         LTR   R2,R2                          RC = ZERO?
         BZ    EXIT0000                       YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   AUTH_FUNCTION,$AUTH_CHECK_ADMIN
         BE    ADMIN000
         CLI   AUTH_FUNCTION,$AUTH_CHECK_DELETE
         BE    DEL0000
         CLI   AUTH_FUNCTION,$AUTH_CHECK_DESC
         BE    DESC0000
         CLI   AUTH_FUNCTION,$AUTH_CHECK_IN
         BE    IN0000
         CLI   AUTH_FUNCTION,$AUTH_CHECK_NEW
         BE    NEW0000
         CLI   AUTH_FUNCTION,$AUTH_CHECK_OUT
         BE    OUT0000
         CLI   AUTH_FUNCTION,$AUTH_CHECK_VERSION
         BE    VER0000
         CLI   AUTH_FUNCTION,$AUTH_CHECK_VIEW
         BE    VIEW0000
         CLI   AUTH_FUNCTION,$AUTH_CHECK_SUBMIT
         BE    JOB0000
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ADMIN000 DS    0H
         MVI   AUTH_RETURN_CODE,0
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DEL0000  DS    0H
         MVI   AUTH_RETURN_CODE,0
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DESC0000 DS    0H
         MVI   AUTH_RETURN_CODE,0
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
IN0000   DS    0H
         CLI   AUTH_MEMBER_STATUS,$AUTH_STATUS_OUT
         BNE   IN0010
         MVI   AUTH_RETURN_CODE,0
         B     EXIT0000
IN0010   DS    0H
         MVC   AUTH_MESSAGE_1(MSG01L),MSG01
         MVC   AUTH_MESSAGE_1+(MSG01_MEMBER-MSG01)(L'MSG01_MEMBER),AUTH+
               _MEMBER
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,AUTH_VERSION              VERSION NUMBER
         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL
         MVC   WORK_VERSION,=X'F02020202020'
         ED    WORK_VERSION,WORK_DWORD+5
         MVC   AUTH_MESSAGE_1+(MSG01_VERSION-MSG01)(L'MSG01_VERSION),WO+
               RK_VERSION+1
         MVI   AUTH_RETURN_CODE,4
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
JOB0000  DS    0H
         MVI   AUTH_RETURN_CODE,0
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
NEW0000  DS    0H
         MVI   AUTH_RETURN_CODE,0
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OUT0000  DS    0H
         CLI   AUTH_MEMBER_STATUS,$AUTH_STATUS_OUT
         BE    OUT0010
         MVI   AUTH_RETURN_CODE,0
         B     EXIT0000
OUT0010  DS    0H
         MVC   AUTH_MESSAGE_1(MSG02L),MSG02
         MVC   AUTH_MESSAGE_1+(MSG02_MEMBER-MSG02)(L'MSG02_MEMBER),AUTH+
               _MEMBER
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,AUTH_VERSION              VERSION NUMBER
         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL
         MVC   WORK_VERSION,=X'F02020202020'
         ED    WORK_VERSION,WORK_DWORD+5
         MVC   AUTH_MESSAGE_1+(MSG02_VERSION-MSG02)(L'MSG02_VERSION),WO+
               RK_VERSION+1
         MVC   AUTH_MESSAGE_2(MSG03L),MSG03
         MVC   AUTH_MESSAGE_2+(MSG03_USER-MSG03)+2(L'MSG03_USER),AUTH_C+
               HECK_OUT_USER
         MVI   AUTH_RETURN_CODE,4
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
VER0000  DS    0H
         MVI   AUTH_RETURN_CODE,0
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
VIEW0000 DS    0H
         MVI   AUTH_RETURN_CODE,0
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=WORKL
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        SET RC=0
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
BLANKS         DC    CL80' '
MSG01          DS    0C
               DC    CL11'LIBAUTH01E'
               DC    C'Member '
MSG01_MEMBER   DC    CL8' '
               DC    C'  version '
MSG01_VERSION  DC    CL5' '
               DC    C' is not checked out to you.'
MSG01L         EQU   *-MSG01
MSG02          DS    0C
               DC    CL11'LIBAUTH02E'
               DC    C'Member '
MSG02_MEMBER   DC    CL8' '
               DC    C', version '
MSG02_VERSION  DC    CL5' '
MSG02L         EQU   *-MSG02
MSG03          DS    0C
               DC    CL11'LIBAUTH03E'
               DC    C'is already checked out to user '
MSG03_USER     DC    CL8' '
MSG03L         EQU   *-MSG03
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA DSECT
                 LIBSAVE  DSECT=NO
WORK_DWORD       DS       D
WORK_VERSION     DS       XL6
WORKL            EQU      *-WORKAREA
                 SCOMM    TYPE=DSECT
                 AUTHBLOK DSECT=YES
                 IHAPSA   DSECT=YES,LIST=NO
                 COPY     REGEQU
         END
./ ADD NAME=LIBINIT  0100-09250-09250-0919-00148-00148-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*    Initialize a library                                             *
*                                                                     *
* ------------------------------------------------------------------- *
LIBINIT  CSECT
LIBINIT  AMODE 24
LIBINIT  RMODE 24
         USING LIBINIT,R12                    DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
         DC    CL8'LIBINIT'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         LA    R1,SAVEAREA
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         COPY SAVE AREA ADDRESS
         USING SAVEAREA,R13
         OPEN  (SYSIN,INPUT)                  OPEN SYSIN
         OPEN  (SYSPRINT,OUTPUT)              OPEN SYSPRINT
         OPEN  (LIB_ACB,OUTPUT)               OPEN LIBRARY
         LTR   R15,R15                        OPEN SUCCESSFUL?
         BNZ   ERR0010                        NO
         BAL   R10,HEAD0000                   PRINT HEADING
         MVI   LIB_KEY_TYPE,$LIB_KEY_LIB_DESC
         XC    LIB_KEY_NAME,LIB_KEY_NAME
         XC    LIB_KEY_VERSION,LIB_KEY_VERSION
         XC    LIB_KEY_SEQ,LIB_KEY_SEQ        SET SEQUENCE NUMBER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0000 DS    0H
         GET   SYSIN,DESCRIPTION
         MVC   PRINT_DATA(L'DESCRIPTION),DESCRIPTION
         BAL   R11,PRT0000                    PRINT
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         LA    R1,1(R1)                       PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              SAVE SEQUENCE NUMBER
         MVC   LIB_DATA,DESCRIPTION           COPY DESCRIPTION
         PUT   RPL=LIB_RPL                    WRITE TO LIBRARY
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0020                        NO
         B     PROC0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         CP    LINE_COUNT,LINE_MAX            TIME FOR HEADING?
         BL    PRT0010                        NO
         BAL   R10,HEAD0000                   PRINT HEADING
PRT0010  DS    0H
         PUT   SYSPRINT,PRINT_CC              PRINT
         AP    LINE_COUNT,P1                  ADD 1 TO LINE COUNT
         MVC   PRINT_LINE,PRINT_LINE-1
         BR    R11                            EXIT
HEAD0000 DS    0H
         AP    PAGE_COUNT,P1                  ADD 1 TO PAGE COUNTER
         MVC   PRINT_CC(HEAD1L),HEAD1         COPY HEADING
         ED    PRINT_CC+(HEAD1_PAGE-HEAD1)(L'HEAD1_PAGE),PAGE_COUNT
         PUT   SYSPRINT,PRINT_CC              PRINT HEADING
         MVC   PRINT_LINE,PRINT_LINE-1
         ZAP   LINE_COUNT,P1                  SET LINE COUNT
         BR    R10                            DONE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         DC    H'1'
ERR0020  DS    0H
         DC    H'2'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EOF0000  DS    0H
         MVC   PRINT_CC(MSG01L),MSG01
         BAL   R11,PRT0000
         CLOSE (SYSIN)
         CLOSE (SYSPRINT)
         CLOSE (LIB_ACB)
         L     R13,4(R13)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SAVEAREA DS    18F
SYSIN    DCB   DDNAME=SYSIN,                                           +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               EODAD=EOF0000,                                          +
               MACRF=GM
SYSPRINT DCB   DDNAME=SYSPRINT,                                        +
               DSORG=PS,                                               +
               RECFM=FBA,                                              +
               LRECL=133,                                              +
               MACRF=PM

LIB_ACB  ACB   AM=VSAM,                                                +
               DDNAME=LIB,                                             +
               MACRF=(KEY,SEQ,OUT)

LIB_RPL  RPL   AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB_ACB,             .. ACB                         +
               ARG=LIB_KEY,             .. KEY                         +
               KEYLEN=L'LIB_KEY,        .. KEY LENGTH                  +
               AREA=LIB_RECORD,         .. ADDRESS OF RETURNED RECORD  +
               OPTCD=(KEY,SEQ,SYN,MVE),                                +
               AREALEN=LIB_INDEX_RECORD_LENGTH,                        +
               RECLEN=LIB_INDEX_RECORD_LENGTH

HEAD1                 DC   C'1'
                      DC   CL45' '
                      DC   C'LIBRARY INITIALIZATION'
                      DC   CL45' '
                      DC   C'PAGE'
HEAD1_PAGE            DC   X'402020202120'
HEAD1L                EQU  *-HEAD1

MSG01                 DS   0C
                      DC   C'-'
                      DC   C'LIBINIT01I '
                      DC   C'Library initialization successful'
MSG01L                EQU  *-MSG01

DESCRIPTION           DS   CL80

LINE_COUNT            DC   PL3'0'
PAGE_COUNT            DC   PL3'0'
P0                    DC   P'0'
P1                    DC   P'1'
LINE_MAX              DC   P'65'

                      DC   C' '
PRINT_LINE            DS   0CL133
PRINT_CC              DC   C' '
PRINT_DATA            DC   CL132' '
         LIBRECD DSECT=NO

         COPY  REGEQU
         END   LIBINIT
./ ADD NAME=LIBLERAD 0100-09250-09250-0919-00049-00049-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: LIBLERAD                                              *
*                                                                     *
*  STC LERAD exit                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIBLERAD CSECT
LIBLERAD AMODE 31
LIBLERAD RMODE ANY
         USING LIBLERAD,R15                   DEFINE BASE
         B     LERAD010                       SKIP EYECATCHER
         DC    CL8'LIBLERAD'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
LERAD010 DS    0H
         USING IFGRPL,R1                      DEFINE BASE
         L     R2,RPLAAREA                    RPL EXTENSION ADDRESS
         USING ISTRPL6X,R2                    DEFINE BASE
         LA    R3,GOODRC                      GOOD RETURN CODES TABLE
LERAD020 DS    0H
         CLI   0(R3),X'FF'                    END OF TABLE
         BE    LERAD030                       NO GOOD
         CLC   RPL6RC,0(R3)                   ACCEPTABLE?
         BE    EXIT0000                       YES, EXIT
         LA    R3,4(R3)                       NEXT CODE
         B     LERAD020                       LOOP
LERAD030 DS    0H
         L     R4,RPL6RC                      MAKE RC EASY TO FIND
         DC    H'0'
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*              CONSTANTS                                             *
* ------------------------------------------------------------------ *
GOODRC   DS    0C
         DC    X'00000000'                    GOOD
         DC    X'00000001'                    CNOS ACCEPTED BY PARTNER
         DC    X'002C0002'
         DC    X'FF'
         IFGRPL AM=VTAM
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  LIBLERAD
./ ADD NAME=LIBOPT   0100-09250-09250-0919-00007-00007-00000-SOURCE
         OPTIONS TRSIZE=2000,                                          +
               MAXLINES=65,                                            +
               PORT=2222,                                              +
               RACCLASS=ENTITY,                                        +
               SNAPCLAS=Z,                                             +
               UACB=(BVLIBTU1,BVLIBTU2,BVLIBTU3,BVLIBTU4,BVLIBTU5)
         END   LIBOPT
./ ADD NAME=LIBSATTN 0100-09250-09250-0919-00354-00354-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: LIBSATTN                                              *
*                                                                     *
*  VTAM ATTN exit.                                                    *
*                                                                     *
*   Register usage:                                                   *
*                                                                     *
*      R4   FMH5 address                                              *
*      R5   Return address                                            *
*      R7   USERBLOK ADDRESS                                          *
*      R8   RPL extension address                                     *
*      R9   RPL address                                               *
*      R10  Parameter list passed by VTAM (EXITPARM DSECT)            *
*      R11  LIBSCOMM ADDRESS                                          *
*      R12  Program base                                              *
*                                                                     *
*  -----------------------------------------------------------------  *
*                                                                     *
*  For session establishment (FMH5 calls)                             *
*         1) The user must not already be logged on.                  *
*         2) A USERBLOK is added to the USERBLOK chain.               *
*         3) A message is printed to log the conversation.            *
*                                                                     *
* ------------------------------------------------------------------- *
LIBSATTN CSECT
LIBSATTN AMODE 31
LIBSATTN RMODE ANY
         USING LIBSATTN,R12                   DEFINE BASE
         NOP   *
         LR    R12,R15                        LOAD BASE
         B     ATTN0010                       SKIP EYECATCHER
         DC    CL8'LIBSATTN'                  MODULE NAME
         DC    C'&SYSDATE'                    DATE OF ASSEMBLY
         DC    C'&SYSTIME'                    TIME OF ASSEMBLY
ATTN0010 DS    0H
         LR    R10,R1                         COPY PARM LIST ADDRESS
         USING EXITPARM,R10                   DEFINE BASE
         LR    R5,R14                         SAVE RETURN ADDRESS
         GETMAIN RU,                                                   +
               LV=WKL,                                                 +
               LOC=ANY
         LR    R13,R1                         SAVE AREA ADDRESS
         USING WK,R13
         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK
         MVI   PRTCC,C' '                     INITIALIZE CC
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         L     R1,EXITACB                     ACB'S ADDRESS
         USING IFGACB,R1                      DEFINE BASE
         L     R11,ACBUSER                    COMMON DATA ADDRESS
         USING LIBSCOMM,R11                   DEFINE BASE
         L     R9,EXITRPL                     RPL'S ADDRESS
         USING IFGRPL,R9                      DEFINE BASE
         L     R8,RPLAAREA                    RPL EXTENSTION'S ADDRESS
         USING ISTRPL6X,R8                    DEFINE BASE
         ITRACE ID=ENTRY,                                              +
               DATA1=EXITTYPE,                .. REASON FOR CALL       +
               DATA2=RPL6LU                   .. LU INVOLVED
         CLC   EXITTYPE,CNOSTYPE              CNOS CALL?
         BE    CNOS0000                       YES
         CLC   EXITTYPE,FMH5TYPE              FMH5 CALL?
         BE    FMH50000                       YES
         CLC   EXITTYPE,LOSSTYPE              LOSS CALL?
         BE    LOSS0000                       YES
         B     EXIT0000                       OTHERWISE EXIT
* ------------------------------------------------------------------- *
*             CNOS                                                    *
* ------------------------------------------------------------------- *
CNOS0000 DS    0H
         ITRACE ID=CNOS,                      CNOS                     +
               DATA1=RPL6LU                   .. LU NAME
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*             FMH5                                                    *
* ------------------------------------------------------------------- *
FMH50000 DS    0H
         ITRACE ID=FMH5,                      FMH5 RECEIVED            +
               DATA1=RPL6LU                   .. LU'S NAME
         TM    COMM_EOJ_PHASE,$EOJ1           IN SHUTDOWN?
         BO    TERM0000                       YES
         LA    R9,WKRPL                       RPL ADDRESS
         MVC   WKRPL(RPLL),RPLI               INITIALIZE RPL
         LA    R8,WKRPLEXT                    RPL EXTENSION ADDRESS
         MVC   0(RPLEXTL,R8),RPLEXTI          INITIALIZE RPL EXTENSION
         ST    R8,RPLAAREA                    SET EXTENSION ADDRESS
         MVC   RPLDACB,EXITACB                SET ACB ADDRESS
         LA    R4,FMH5                        I/O AREA
         ITRACE ID=RECVFMH5
         XC    WKECB,WKECB                    CLEAR THE ECB
         APPCCMD CONTROL=RCVFMH5,             RECEIVE THE FMH5         +
               RPL=(R9),                      .. RPL ADDRESS           +
               CONMODE=CS,                    .. CONTINUE SPECIFIC     +
               ECB=WKECB,                     .. ECB                   +
               AREA=(R4),                     .. FMH5 STORAGE ADDRESS  +
               AREALEN=FMH5L,                 .. FMH5 STORAGE SIZE     +
               OPTCD=ASY                      .. SYNCHRONOUS
         WAIT  1,ECB=WKECB
         APPCCMD CONTROL=CHECK,RPL=(R9)
         ITRACE ID=HAVEFMH5,DATA1=RPL6RC
         OC    RPL6RC,RPL6RC                  SUCCESSFUL?
         BNZ   FMH50100                       NO
* ------------------------------------------------------------------- *
*                                                                     *
*   A FMH-5 has been received.                                        *
*     1) Verify the LU is not already on the USERBLOK chain.          *
*     2) Acquire a USERBLOK and add it to the chain.                  *
*     3) Post the ATTN ECB to wake up the main task                   *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=SCANUSER
         ICM   R7,15,COMM_USER_CHAIN          FIRST USER BLOCK ADDRESS
         USING USERBLOK,R7                    DEFINE BASE
         BZ    FMH50020                       NOT ON CHAIN
FMH50010 DS    0H
         CLC   USER_PARTNER_LU,RPL6LU         USER ALREADY ACTIVE?
         BE    FMH50110                       YES.. NOT ALLOWED
         ICM   R7,15,USER_NEXT                NEXT USER
         BNZ   FMH50010                       LOOP
FMH50020 DS    0H
         ITRACE ID=NEWUSER
         L     R1,COMM_VTAM_LOGINS            NUMBER OF LOGONS SO FAR
         LA    R1,1(,R1)                      PLUS 1
         ST    R1,COMM_VTAM_LOGINS            SAVE TOTAL
         GETMAIN RU,                          GETMAIN A NEW USERBLOK   +
               LV=USERBLOKL,                                           +
               LOC=ANY
         LR    R7,R1                          COPY STORAGE ADDRESS
         LR    R0,R1
         LA    R1,USERBLOKL                   INITIALIZE
         SR    R14,R14                          THE NEW
         SR    R15,R15                            USERBLOK
         MVCL  R0,R14                               TO BINARY ZEROS
         MVC   USEREYE,USERBID                SET EYECATCHER
         ST    R7,USER_SELF                   ADDRESS OF USER BLOCK
         MVC   USER_PARTNER_LU,RPL6LU
         MVC   USER_USER_ID,FMH5UID           SET USER'S ID
         MVC   USER_SYSTEM_SMF,FMH5SMF        SMF ID OF USER'S SYSTEM
         TIME  DEC
         ST    R0,USER_TIME                   SAVE TIME
         ST    R1,USER_DATE                   SAVE DATE
         ST    R11,USER_COMM                  SET LIBSCOMM'S ADDRESS
         MVC   USER_CONVERSATION_ID,RPL6CNVD
         XC    USER_SOCKET,USER_SOCKET
         MVC   USER_LIBRARY,COMM_BLANKS       INITIALIZE LIBRARY NAME
         MVC   USER_JOB,COMM_BLANKS           INITIALIZE BATCH JOB NAME
         MVC   USER_NAME,COMM_BLANKS          INITIALIZE USER'S NAME
         ITRACE ID=ENQ
         MVC   WKENQ(ENQL),ENQI
         ENQ   MF=(E,WKENQ)
         MVC   USER_NEXT,COMM_USER_CHAIN      CURRENTLY FIRST ON CHAIN
         ST    R7,COMM_USER_CHAIN             ADD OURS TO CHAIN
         ITRACE ID=DEQ
         DEQ   MF=(E,WKENQ)
         MVC   PRTMSGID(MSG01L),MSG01         SET MESSAGE
         MVC   PRTMSGID+(MSG01LU-MSG01)(L'MSG01LU),USER_PARTNER_LU
         UNPK  PRTMSGID+(MSG01CID-MSG01)(9),USER_CONVERSATION_ID(5)
         MVZ   PRTMSGID+(MSG01CID-MSG01)(8),HEXZERO
         TR    PRTMSGID+(MSG01CID-MSG01)(8),HEXCHAR
         MVI   PRTMSGID+(MSG01CID-MSG01)+8,C' '
         BAL   R10,PRT0000                    ADD REQUEST TO queue
         POST  COMM_ATTN_ECB                  WAKE UP MAIN TASK
         ITRACE ID=CID,                       TRACE CONVERSATION ID'S  +
               DATA1=RPL6CNVD                 .. SAVE CONVERSATION ID
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FMH50100 DS    0H
         ITRACE ID=FMH5FAIL
         LR    R2,R15                         COPY RETURN CODE
         ABEND 1,DUMP,,USER                   ABEND
FMH50110 DS    0H
         ITRACE ID=DUPUSER                    SECOND FMH-5?
         APPCCMD CONTROL=REJECT,              ISSUE APPC COMMAND       +
               QUALIFY=SESSION,               .. REJECT THE SESSION    +
               DEACTYP=HEX0F,                 .. DEACTIVATE TYPE       +
               RPL=(R9),                      .. RPL ADDRESS           +
               OPTCD=SYN                      ..  SYNCHRONOUS
         OC    RPL6RC,RPL6RC                  SUCCESSFUL?
         BNZ   FMH50120                       NO
         L     R9,EXITRPL                     RPL PASSED BY VTAM
         L     R8,RPLAAREA                    RPL PASSED BY VTAM
         MVC   PRTMSGID(MSG02L),MSG02         SET MESSAGE
         MVC   PRTMSGID+(MSG02NDE-MSG02)(L'MSG02NDE),RPL6LU
         BAL   R10,PRT0000                    PRINT
         B     EXIT0000                       EXIT
FMH50120 DS    0H
         ITRACE ID=DACTFAIL,                  SESSION REJECT FAILED    +
               DATA1=RPL6RC                   .. RETURN CODE
         ABEND 2,DUMP,,USER                   ABEND
* ------------------------------------------------------------------- *
*             LOSS                                                    *
* ------------------------------------------------------------------- *
LOSS0000 DS    0H
         ITRACE ID=LOSS,                      LOSS OF SESSION          +
               DATA1=RPL6LU
         ICM   R7,15,COMM_USER_CHAIN          FIRST USER BLOCK
         USING USERBLOK,R7
         BZ    EXIT0000
LOSS0010 DS    0H
         CLC   RPL6LU,USER_PARTNER_LU         LOST THIS USER?
         BE    LOSS0020                       YES
         ICM   R7,15,USER_NEXT                NEXT USER
         BNZ   LOSS0010
         ITRACE ID=UNKNLOSS
         B     EXIT0000                       DON'T KNOW WHO WAS LOST
LOSS0020 DS    0H
         USING USERBLOK,R7
         TM    USER_STATUS,$USERLOS           INDICATOR ALREADY SET?
         BO    EXIT0000                       YES.. GET OUTTA HERE
         OI    USER_STATUS,$USERLOS           SET INDICATOR
         MVC   PRTMSGID(MSG04L),MSG04
         MVC   PRTMSGID+(MSG04USR-MSG04)(L'MSG04USR),USER_USER_ID
         MVC   PRTMSGID+(MSG04LU-MSG04)(L'MSG04LU),USER_PARTNER_LU
         UNPK  PRTMSGID+(MSG04CID-MSG04)(9),USER_CONVERSATION_ID(5)
         MVZ   PRTMSGID+(MSG04CID-MSG04)(8),HEXZERO
         TR    PRTMSGID+(MSG04CID-MSG04)(8),HEXCHAR
         MVI   PRTMSGID+(MSG04CID-MSG04)+8,C' '
         BAL   R10,PRT0000                    PRINT
         POST  USER_NETWORK_ECB               POST THE VTAM WORK ECB
         B     EXIT0000                       AND EXIT
* ------------------------------------------------------------------- *
*             LOSS                                                    *
* ------------------------------------------------------------------- *
TERM0000 DS    0H
         ITRACE ID=TERM,                      SESSION NOT ALLOWED      +
               DATA1=RPL6LU
         MVC   PRTMSGID(MSG03L),MSG03
         MVC   PRTMSGID+(MSG03NDE-MSG03)(L'MSG03NDE),RPL6LU
         BAL   R10,PRT0000
         B     EXIT0000
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,                                                   +
               LV=PRTBLOKL,                                            +
               LOC=ANY
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE
         ST    R2,PRTNEXT-PRTBLOK(R1)
         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN
         BC    4,PRT0010                      TRY AGAIN
         POST  COMM_PRINT_WORK_ECB            WAKE UP PRINT SUBTASK
         BR    R10
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT                       EXITING
         FREEMAIN RU,                         FREEMAIN SAVE AREA       +
               a=(13),                                                 +
               lv=wkl
         BR    R5                             RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
HEX0F    DC    X'0F'
HEXZERO  DC    8X'00'
HEXCHAR  DC    C'0123456789ABCDEF'
CNOSTYPE DC    CL4'CNOS'             CHANGE NUMBER OF SESSIONS
FMH5TYPE DC    CL4'FMH5'             FMH5
LOSSTYPE DC    CL4'LOSS'             LOSS OF SESSION
PRTID    DC    CL8'PRTBLOK'
USERBID  DC    CL8'USERBLOK'
RPLI     RPL   AM=VTAM
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
ENQI     ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L
ENQL     EQU   *-ENQI
QNAME    DC    CL8'LIB'
RNAME    DC    CL8'COMMUSER'
MSG01    DS    0C
         DC    CL11'LIBSATTN01I'
         DC    C'Conversation with USER using LUNAME '
MSG01LU  DC    Cl8' '
         DC    C' established, CID '
MSG01CID DC    CL8' '
         DC    C' '
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'LIBSATTN02E'
         DC    C'Conversation with LU '
MSG02NDE DC    CL8' '
         DC    C' rejected, user is already active'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    CL11'LIBSATTN03E'
         DC    C'Conversation with LU '
MSG03NDE DC    CL8' '
         DC    C' rejected, shutdown is in progress'
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    CL11'LIBSATTN04W'
         DC    C'Session lost with USER '
MSG04USR DC    CL8' '
         DC    C', LU '
MSG04LU  DC    CL8' '
         DC    C', CID '
         DC    C' '
MSG04CID DC    CL8' '
         DC    C' '
MSG04L   EQU   *-MSG04
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
WK       DSECT
         LIBSAVE  DSECT=NO
         PRTBLOK  DSECT=NO
         FMH5     DSECT=NO,TRAN=xxxx
WKECB    DS       F
WKRPL    DS       (RPLL)X
WKRPLEXT DS       (RPLEXTL)X
WKENQ    DS       0F,(ENQL)X
WKL      EQU      *-WK
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
EXITPARM DSECT
EXITACB  DS   A                      ACB ADDRESS
         DS   A                      RESERVED
         DS   A                      RESERVED
EXITTYPE DS   CL4                    TYPE OF CALL
EXITRPL  DS   A                      RPL ADDRESS
         DS   A                      RESERVED
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGRPL AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  LIBSATTN
./ ADD NAME=LIBSCOMM 0100-09250-09250-0919-00006-00006-00000-SOURCE
         USING     LIBSCOMM,R11
         SCOMM     TYPE=CSECT
         COPY      REGEQU
         IHAPSA    DSECT=YES,LIST=NO
         LIBSAVE   DSECT=YES
         END       LIBSCOMM
./ ADD NAME=LIBSIP   0100-09250-09250-0919-00532-00532-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*    TCP/IP subtask                                                   *
*                                                                     *
*   The PORT number we are to use is given on the PORT statement      *
*   in the start up parameters.                                       *
*                                                                     *
*   At start-up this subtask                                          *
*      1) initializes the TCP/IP environment                          *
*      2) obtains its own CLIENTID                                    *
*      3) creates a socket                                            *
*      4) BINDs to the port given in the start-up parameters          *
*      5) issues a LISTEN                                             *
*                                                                     *
*                                                                     *
*   When a LIBRARIAN user contacts the server                         *
*      1) Issue an ACCEPT to get the socket for this connection       *
*      2) Log this connection                                         *
*      3) GETMAIN a new USERBLOK                                      *
*      4) Issue a GIVESOCKET                                          *
*      5) POST the main task                                          *
*                                                                     *
*                                                                     *
*                                                                     *
*   When the user subtask initializes, it issues a TAKESOCKET.        *
*   After the GIVESOCKET/TAKESOCKET, the user subtask communicates    *
*   directly with the user.. that is this subtask is no longer        *
*   involved in the sending and receiving of data via the network     *
*   for that particular user.  Each user will have their own subtask. *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIBSIP   CSECT
LIBSIP   AMODE 31
LIBSIP   RMODE ANY
         USING LIBSIP,R12                     DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'LIBSIP'                    MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,0(R1)                      COPY COMM AREA BASE
         GETMAIN RU,                          OBTAIN WORK AREA         +
               LV=WORKAREA_L,                                          +
               LOC=ANY
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ITRACE ID=INIT
         GETMAIN RU,                                                   +
               LV=GWALENTH,                                            +
               LOC=ANY
         ST    R1,WORK_TCPIP_GWA              TCP/IP GLOBAL WORK AREA
         LA    R1,COMM_TCPIP_WORK_ECB
         ST    R1,WORK_WAIT_ECB_1
         LA    R1,WORK_TCPIP_ECB
         ST    R1,WORK_WAIT_ECB_2
         OI    WORK_WAIT_ECB_2,X'80'
         MVI   PRTCMD,$PRTPRT                 PRINT
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
* ------------------------------------------------------------------- *
*     Make the INITAPI call                                           *
* ------------------------------------------------------------------- *
         ITRACE ID=INITAPI,                                            +
               DATA1=C_LIBSMAIN
         MVC   PRTMSGID(MSG01_L),MSG01
         BAL   R10,PRT0000
         XC    WORK_TCPIP_TASK(TIELENTH),WORK_TCPIP_TASK
         MVC   WORK_TCPIP_FUNCTION,=CL16'INITAPI'
         EZASMI TYPE=INITAPI,                                          +
               MAXSNO=WORK_MAX_SOCKET,                                 +
               SUBTASK=C_LIBSMAIN,                                     +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ASYNC='ECB',                                            +
               ERROR=ERR0010,                                          +
               TASK=WORK_TCPIP_TASK
         BAL   R10,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
* ------------------------------------------------------------------- *
*     Get our CLIENTID                                                *
* ------------------------------------------------------------------- *
         ITRACE ID=GETID
         MVC   COMM_MAIN_CLIENT_NAME,COMM_BLANKS
         MVC   COMM_MAIN_CLIENT_TASK,COMM_BLANKS
         XC    COMM_MAIN_CLIENT_TASK+8(20),COMM_MAIN_CLIENT_TASK+8
         MVC   WORK_TCPIP_FUNCTION,=CL16'GETCLIENTID'
         EZASMI TYPE=GETCLIENTID,                                      +
               CLIENT=COMM_MAIN_CLIENT,                                +
               ECB=WORK_TCPIP_ECB,                                     +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
         ITRACE ID=CLIENTID,                                           +
               DATA1=COMM_MAIN_CLIENT_NAME,                            +
               DATA2=COMM_MAIN_CLIENT_TASK
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
* ------------------------------------------------------------------- *
*     Create the socket                                               *
* ------------------------------------------------------------------- *
         MVC   PRTMSGID(MSG02_L),MSG02
         BAL   R10,PRT0000
         ITRACE ID=SOCKET
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'SOCKET'
         EZASMI TYPE=SOCKET,                                           +
               AF='INET',                                              +
               SOCTYPE='STREAM',                                       +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         BAL   R10,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
         MVC   WORK_MY_SOCKET,WORK_TCPIP_RETURN_CODE+2
* ------------------------------------------------------------------- *
*     BIND the socket                                                 *
* ------------------------------------------------------------------- *
         ITRACE ID=BIND
         XC    WORK_SOCKET_STRUCTURE,WORK_SOCKET_STRUCTURE
         MVC   WORK_SOCKET_FAMILY,C_AF_INET
         MVC   WORK_SOCKET_PORT,COMM_PORT
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'BIND'
         EZASMI TYPE=BIND,                                             +
               S=WORK_MY_SOCKET,                                       +
               NAME=WORK_SOCKET_STRUCTURE,                             +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         BAL   R10,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
* ------------------------------------------------------------------- *
*     Start LISTENing                                                 *
* ------------------------------------------------------------------- *
         MVC   PRTMSGID(MSG04_L),MSG04
         BAL   R10,PRT0000
         ITRACE ID=LISTEN
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'LISTEN'
         EZASMI TYPE=LISTEN,                                           +
               BACKLOG=5,                                              +
               S=WORK_MY_SOCKET,                                       +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         BAL   R10,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
* ------------------------------------------------------------------- *
*                                                                     *
*     Print "Accepting LOG ONs" message                               *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   PRTMSGID(MSG05_L),MSG05
         BAL   R10,PRT0000
* ------------------------------------------------------------------- *
*     Issue ACCEPT                                                    *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         TM    COMM_EOJ_PHASE,$EOJ1
         BO    TERM0000
         ITRACE ID=ACCEPT
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'ACCEPT'
         EZASMI TYPE=ACCEPT,                                           +
               S=WORK_MY_SOCKET,                                       +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               NAME=WORK_SOCKET_STRUCTURE,                             +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         TM    WORK_TCPIP_RETURN_CODE,X'80'
         BO    ERR0020
* ------------------------------------------------------------------- *
*                                                                     *
*        Wait for either a CONNECT or server shutdown                 *
*        command (entered via the console).                           *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=WAIT
         WAIT  ECBLIST=WORK_WAIT_LIST
         ITRACE ID=AWAKE
         TM    COMM_EOJ_PHASE,$EOJ1
         BO    TERM0000
* ------------------------------------------------------------------- *
*                                                                     *
*        We have been contacted..                                     *
*          build a new USERBLOK                                       *
*          issue a GIVESOCKET                                         *
*          ATTACH a new user subtask                                  *
*          all that was tiring so go WAIT again                       *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R1,COMM_TCPIP_LOGINS           NUMBER OF TCP/IP LOGONS
         LA    R1,1(,R1)                      PLUS 1
         ST    R1,COMM_TCPIP_LOGINS           SAVE TOTAL
         GETMAIN RU,                                                   +
               LV=USERBLOKL,                                           +
               LOC=ANY
         LR    R8,R1
         USING USERBLOK,R8
         ITRACE ID=NEWUSER,                                            +
               RDATA1=R8
         LR    R0,R1
         LA    R1,USERBLOKL
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14

         MVC   USEREYE,C_USERBLOK             IDENTIFY CONTROL BLOCK
         ST    R8,USER_SELF                   ADDRESS OF THIS USEBLOK
         MVC   WORK_USER_SOCKET,WORK_TCPIP_RETURN_CODE+2
         MVC   USER_SOCKET,WORK_TCPIP_RETURN_CODE+2
         TIME  DEC
         ST    R0,USER_TIME                   SAVE TIME
         ST    R1,USER_DATE                   SAVE DATE
         ST    R11,USER_COMM                  SET LIBSCOMM'S ADDRESS
         MVC   USER_LIBRARY,COMM_BLANKS       INITIALIZE LIBRARY NAME
         MVC   USER_JOB,COMM_BLANKS           INITIALIZE BATCH JOB NAME
         MVC   USER_NAME,COMM_BLANKS          INITIALIZE USER'S NAME
         MVC   WORK_ENQ(ENQL),ENQI
         MVC   USER_CLIENT(36),COMM_MAIN_CLIENT
         MVC   USER_CLIENT_NAME,COMM_MAIN_CLIENT_NAME
         MVC   USER_CLIENT_TASK,=X'F020202020202120'

         SR    R1,R1

         IC    R1,WORK_SOCKET_CLIENT_IP+0
         CVD   R1,COMMDWRD
         MVC   WORK_PACK_IN,=X'F0212020'
         ED    WORK_PACK_IN,COMMDWRD+6
         MVC   USER_IP_ADDRESS+00(3),WORK_PACK_IN+1

         IC    R1,WORK_SOCKET_CLIENT_IP+1
         CVD   R1,COMMDWRD
         MVC   WORK_PACK_IN,=X'F0212020'
         ED    WORK_PACK_IN,COMMDWRD+6
         MVC   USER_IP_ADDRESS+04(3),WORK_PACK_IN+1

         IC    R1,WORK_SOCKET_CLIENT_IP+2
         CVD   R1,COMMDWRD
         MVC   WORK_PACK_IN,=X'F0212020'
         ED    WORK_PACK_IN,COMMDWRD+6
         MVC   USER_IP_ADDRESS+08(3),WORK_PACK_IN+1

         IC    R1,WORK_SOCKET_CLIENT_IP+3
         CVD   R1,COMMDWRD
         MVC   WORK_PACK_IN,=X'F0212020'
         ED    WORK_PACK_IN,COMMDWRD+6
         MVC   USER_IP_ADDRESS+12(3),WORK_PACK_IN+1

         MVI   USER_IP_ADDRESS+03,C'.'
         MVI   USER_IP_ADDRESS+07,C'.'
         MVI   USER_IP_ADDRESS+11,C'.'

         L     R1,COMM_TCPIP_LOGINS
         CVD   R1,COMMDWRD                    CONVERT TO DECIMAL
         ED    USER_CLIENT_TASK,COMMDWRD+4
         MVI   USER_CLIENT_TASK,C'U'
         ITRACE ID=ENQ
         ENQ   MF=(E,WORK_ENQ)
         MVC   USER_NEXT,COMM_USER_CHAIN      CURRENTLY FIRST ON CHAIN
         ST    R8,COMM_USER_CHAIN             ADD OURS TO CHAIN
         ITRACE ID=DEQ
         DEQ   MF=(E,WORK_ENQ)
         ITRACE ID=POSTAECB
         POST  COMM_ATTN_ECB                  WAKE UP MAIN TASK
         ITRACE ID=WAITAPI
         WAIT  ECB=USER_API_ECB               WAIT FOR SUBTASK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   WORK_TCPIP_FUNCTION,=CL16'GIVESOCKET'
         ITRACE ID=GIVESOKT,                                           +
               DATA1=USER_CLIENT_NAME,                                 +
               DATA2=USER_CLIENT_TASK
         ITRACE ID=GIVE+,                                              +
               DATA1=WORK_USER_SOCKET,                                 +
               DATA2=USER_SOCKET
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         EZASMI TYPE=GIVESOCKET,                                       +
               S=WORK_USER_SOCKET,                                     +
               CLIENT=USER_CLIENT,                                     +
               ECB=WORK_TCPIP_ECB,                                     +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               RETCODE=WORK_TCPIP_RETURN_CODE
         POST  USER_TAKESOCKET_ECB
         WAIT  ECB=WORK_TCPIP_ECB
         TM    WORK_TCPIP_RETURN_CODE,X'80'
         BO    ERR0050
* ------------------------------------------------------------------- *
*                                                                     *
*              Log the connection                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   PRTMSGID(MSG10_L),MSG10
         MVC   PRTMSGID+(MSG10_IP_ADDRESS-MSG10)(L'MSG10_IP_ADDRESS),US+
               ER_IP_ADDRESS
         BAL   R10,PRT0000
* ------------------------------------------------------------------- *
*        The new connection has been processed.                       *
*        At least this subtask's work is done.                        *
*        Now issue another ACCEPT.                                    *
* ------------------------------------------------------------------- *
         B     MAIN0000
* ------------------------------------------------------------------- *
*                                                                     *
*        The main task has signalled shutdown                         *
*                                                                     *
*        CLOSE the socket and issue a TERMAPI to clean-up.            *
*                                                                     *
* ------------------------------------------------------------------- *
TERM0000 DS    0H
         ITRACE ID=CLOSE
         MVC   WORK_TCPIP_FUNCTION,=CL16'CLOSE'
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         EZASMI TYPE=CLOSE,                                            +
               S=WORK_MY_SOCKET,                                       +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB
         WAIT  ECB=WORK_TCPIP_ECB
         BAL   R10,INFO0000

         ITRACE ID=TERMAPI
         MVC   WORK_TCPIP_FUNCTION,=CL16'TERMAPI'
         EZASMI TYPE=TERMAPI,                                          +
               TASK=WORK_TCPIP_TASK
         BAL   R10,INFO0000
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INFO0000 DS    0H
         MVC   PRTMSGID(MSG90_L),MSG90
         MVC   PRTMSGID+(MSG90_FUNCTION-MSG90)(L'MSG90_FUNCTION),WORK_T+
               CPIP_FUNCTION
         UNPK  PRTMSGID+(MSG90_RETURN_CODE-MSG90)(9),WORK_TCPIP_RETURN_+
               CODE(5)
         MVZ   PRTMSGID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXZERO
         TR    PRTMSGID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXCHAR
         MVI   PRTMSGID+(MSG90_RETURN_CODE-MSG90)+8,C' '
         L     R1,WORK_TCPIP_ERROR_NUMBER
         CVD   R1,COMMDWRD
         ED    PRTMSGID+(MSG90_ERROR_NUMBER-MSG90)(L'MSG90_ERROR_NUMBER+
               ),COMMDWRD+5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,                                                   +
               LV=PRTBLOKL,                                            +
               LOC=ANY
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE
         ST    R14,PRTNEXT-PRTBLOK(R1)                        '
         CS    R14,R1,COMM_PRINT_REQ          ADD NEW BLOCK TO CHAIN
         BC    4,PRT0010                      TRY AGAIN
         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK
         BR    R10
* ------------------------------------------------------------------- *
*        Error routines                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         DC    H'1'
ERR0020  DS    0H
         BAL   R10,INFO0000
         DC    H'2'
ERR0030  DS    0H
         DC    H'3'
ERR0040  DS    0H
         DC    H'4'
ERR0050  DS    0H
         BAL   R10,INFO0000
         DC    H'5'
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         MVC   PRTMSGID(MSG91_L),MSG91
         BAL   R10,PRT0000
         ICM   R1,15,WORK_TCPIP_GWA
         BZ    EXIT0010
         FREEMAIN RU,A=(1),LV=GWALENTH
EXIT0010 DS    0H
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
ENQI     ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L
ENQL     EQU   *-ENQI
QNAME    DC    CL8'LIB'
RNAME    DC    CL8'COMMUSER'

C_H4                     DC    H'4'
C_AF_INET                DC    X'0002'
C_HEXCHAR                DC    C'0123456789ABCDEF'
C_HEXZERO                DC    0F,XL8'0000000000000000'
C_PRTID                  DC    CL8'PRTBLOK'
C_USERBLOK               DC    CL8'USERBLOK'
C_LIBSMAIN               DC    CL8'LIBSMAIN'
MSG01                    DS    0C
                         DC    CL15'LIBSIP01I'
                         DC    C'Issuing INITAPI'
MSG01_L                  EQU   *-MSG01
MSG02                    DS    0C
                         DC    CL15'LIBSIP02I'
                         DC    C'Creating socket'
MSG02_L                  EQU   *-MSG02
MSG03                    DS    0C
                         DC    CL15'LIBSIP03I'
                         DC    C'BINDing to port '
MSG03_PORT               DC    CL5' '
MSG03_L                  EQU   *-MSG03
MSG04                    DS    0C
                         DC    CL15'LIBSIP04I'
                         DC    C'LISTENing'
MSG04_L                  EQU   *-MSG04
MSG05                    DS    0C
                         DC    CL15'LIBSIP05I'
                         DC    C'ACCEPTing connections'
MSG05_L                  EQU   *-MSG05
MSG10                    DS    0C
                         DC    CL15'LIBSIP10I'
                         DC    C'CONNECTION arrived from '
MSG10_IP_ADDRESS         DC    CL15' '
MSG10_L                  EQU   *-MSG10
MSG90                    DS    0C
                         DC    CL15'LIBSIP90I'
                         DC    C'TCP/IP function '
MSG90_FUNCTION           DC    CL16' '
                         DC    C'  Return code: '
MSG90_RETURN_CODE        DC    CL8' '
                         DC    C'  Error number:'
MSG90_ERROR_NUMBER       DC    X'402020202120'
MSG90_L                  EQU   *-MSG90
MSG91                    DS    0C
                         DC    CL15'LIBSIP91I'
                         DC    C'TCP/IP subtask terminating'
MSG91_L                  EQU   *-MSG91

                         LTORG
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
WORKAREA                 DSECT
                         LIBSAVE  DSECT=NO
WORK_MAX_SOCKET          DS   F
WORK_PACK_IN             DS   XL4

WORK_USER_SOCKET         DS   H
WORK_RC                  DS   H

WORK_MY_SOCKET           DS   H
WORK_NEW_SOCKET          DS   H

WORK_ENQ                 DS   0F,(ENQL)X

                         DS   0F
WORK_SOCKET_STRUCTURE    DS   0XL16
WORK_SOCKET_FAMILY       DS   AL2           FAMILY (ALWAYS = 2)
WORK_SOCKET_PORT         DS   XL2           PORT NUMBER
WORK_SOCKET_CLIENT_IP    DS   XL4           CLIENT'S IP ADDRESS
                         DS   XL8           RESERVED

WORK_TCPIP_ECB           DS   F
                         DS   XL100

WORK_TCPIP_ERROR_NUMBER  DS   F
WORK_TCPIP_FUNCTION      DS   CL16
WORK_TCPIP_GWA           DS   F
WORK_TCPIP_RETURN_CODE   DS   F
WORK_TCPIP_TASK          EZASMI TYPE=TASK,STORAGE=CSECT

WORK_WAIT_LIST           DS   0F            WAIT LIST
WORK_WAIT_ECB_1          DS   F             COMM_TERMINATION_ECB
WORK_WAIT_ECB_2          DS   F             TCPIP_ECB

                         PRTBLOK  DSECT=NO

WORKAREA_L               EQU  *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
         USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         EZASMI   TYPE=GLOBAL,STORAGE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  COPY   REGEQU
         END      LIBSIP
./ ADD NAME=LIBSMAIN 0100-09250-09250-0919-01297-01297-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: LIBSMAIN                                                     *
*                                                                     *
*  Purpose: Librarian STC mainline                                    *
*                                                                     *
* ------------------------------------------------------------------- *
LIBSMAIN CSECT
LIBSMAIN AMODE 31
LIBSMAIN RMODE ANY
         USING LIBSMAIN,R12,R9                DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'LIBSMAIN'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LA    R9,2048(R12)                   SET 2ND..
         LA    R9,2048(R9)                    .. BASE REGISTER
* ------------------------------------------------------------------- *
*        ACQUIRE STORAGE FOR WORK AREAS                               *
* ------------------------------------------------------------------- *
         L     R3,DXDSIZE                     WORK AREA SIZE
         GETMAIN RU,                          ACQUIRE WORK AREA STORAGE+
               LV=(R3),                       .. AREA SIZE IS IN R3    +
               LOC=ANY                        .. MAY BE ABOVE OR BELOW
         LR    R4,R1                          COPY STORAGE ADDRESS
         LR    R10,R1                         COPY STORAGE ADDRESS
         LR    R2,R1                          COPY WORK AREA ADDRESS
         SR    R1,R1                          CLEAR REGISTER
         MVCL  R2,R0                          CLEAR WORK AREA
         A     R10,DXDSTART                   PLUS DISPLACEMENT
         USING DXDSMAIN,R10                   DEFINE WORK AREA BASE
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         LA    R2,DXDSAVE                     OUR SAVE AREA ADDRESS
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      OUR SAVE AREA TO CALLER'S
         LR    R13,R2                         SET SAVE AREA ADDRESS
         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK
* ------------------------------------------------------------------- *
*        Load common data module  (LIBSCOMM)                          *
* ------------------------------------------------------------------- *
         LOAD  EP=LIBSCOMM                    LOAD COMMON DATA MODULE
         LR    R11,R0                         COPY TO PERMANENT BASE
         USING LIBSCOMM,R11                   DEFINE COMMON AREA BASE
         ST    R12,COMM_LIBSMAIN              MAINLINE'S ADDRESS
         ST    R4,COMMDXDA                    DYNAMIC WORK AREA ADDR
* ------------------------------------------------------------------- *
*        Extract info from OPTIONS                                    *
* ------------------------------------------------------------------- *
         LOAD  EP=LIBOPT                      LOAD THE OPTIONS
         LR    R1,R0                          COPY OPTIONS ADDRESS
         USING OPTDSECT,R1                    DEFINE OPTIONS BASE
         LH    R0,OPTTRACE                    NUMBER OF TRACE ENTRIES
         MH    R0,=Y(TRENTRYL)                TIMES SIZE PER ENTRY
         ST    R0,TRSIZE                      SAVE TRACE TABLE SIZE
         ZAP   COMM_MAX_LINES,OPTMAXL         SET LINE COUNT LIMIT
         MVC   COMMRACF,OPTRACF               RACF CLASS AND ENTITY
         MVC   COMM_SNAP_CLASS,OPTSNAPC       SNAP DUMP SYSOUT CLASS
         DELETE EP=LIBOPT
* ------------------------------------------------------------------- *
*        Set entry points in common area                              *
* ------------------------------------------------------------------- *
         MVC   COMM_LIBATTN,V_LIBATTN         VTAM ATTN EXIT ADDRESS
         MVC   COMM_LIBLERAD,V_LIBLERAD       LERAD EXIT ADDRESS
* ------------------------------------------------------------------- *
*        ACQUIRE STORAGE FOR TRACE TABLE                              *
* ------------------------------------------------------------------- *
         L     R3,TRSIZE                      TRACE TABLE SIZE
         GETMAIN RU,                          STORAGE FOR TRACE TABLE  +
               LV=(R3),                       .. SIZE IS IN R3         +
               LOC=ANY                        .. ABOVE OR BELOW
         ST    R1,TRADDR                      SAVE TRACE TABLE ADDRESS
         SR    R0,R0                          ASSUME ON 32-BYTE BNDRY
         TM    TRADDR+3,X'07'                 ON 32-BYTE BOUNDARY?
         BNO   INIT0010                       YES
         SRL   R1,5                           SHIFT OUT LOW BITS ..
         SLL   R1,5                           .. TO ROUND TO BNDRY
         LA    R1,32(R1)                      PLUS 32
         LA    R0,TRENTRYL                    1 LESS AVAILABLE
INIT0010 DS    0H
         ST    R1,TRFIRST                     FIRST TRACE ENTRY
         ST    R1,TRCURR                      CURRENT TRACE ENTRY
         A     R1,TRSIZE                      LAST ENTRY IN TABLE
         SH    R1,=Y(TRENTRYL)                MINUS 1 ENTRY
         SR    R1,R0                          MINUS 1 MORE IF NECESSARY
         ST    R1,TRLAST                      LAST TRACE ENTRY ADDRESS
* ------------------------------------------------------------------- *
*        Determine DD's present                                       *
* ------------------------------------------------------------------- *
         USING PSA,R0                         DEFINE BASE
         L     R1,PSATNEW                     OUR TCB ADDRESS FROM PSA
         USING TCB,R1                         DEFINE TCB BASE
         L     R2,TCBTIO                      TIOT ADDRESS FROM OUR TCB
         USING TIOT1,R2                       DEFINE TIOT BASE
         LA    R3,TIOENTRY                    FIRST TIOT ENTRY
         USING TIOENTRY,R3                    DEFINE TIOT ENTRY BASE
         SR    R4,R4                          CLEAR FOR LENGTHS
INIT0020 DS    0H
         ICM   R4,1,TIOELNGH                  LENGTH OF THIS ENTRY
         BZ    INIT0060                       END OF TABLE
         ITRACE ID=TIOTDDNM,                  TRACE EACH TIOT ENTRY    +
               DATA1=TIOEDDNM
         LA    R5,DDTBLE                      REQUIRED DD_NAMES TABLE
         USING DD_DSECT,R5                    DEFINE BASE
INIT0030 DS    0H
         CLI   0(R5),X'FF'                    END OF TABLE?
         BE    INIT0050                       YES, NOT IN TABLE
         CLC   TIOEDDNM,DD_NAME               DD NAME FOUND?
         BE    INIT0040                       YES
         LA    R5,DD_DSECT_L(R5)              NEXT DD
         B     INIT0030                       LOOP
INIT0040 DS    0H
         ITRACE ID=SETDD_ID,                  SETTING DD ID            +
               DATA1=TIOEDDNM,                .. DD_NAME               +
               DATA2=DD_ID                    .. FLAG VALUE
         OC    DXD_DD,DD_ID                   TURN ON MATCHING ID
INIT0050 DS    0H
         AR    R3,R4                          NEXT ENTRY
         B     INIT0020                       LOOP
INIT0060 DS    0H
         ITRACE ID=TIOTDONE,                  TIOT SCAN COMPLETE       +
               DATA1=DXD_DD                   .. INCLUDE FLAG BYTE
         TM    DXD_DD,$DD_LIBPRT              PRINT DD PRESENT?
         BO    INIT0070                       YES
         GETMAIN RU,                          ACQUIRE STORAGE FOR WTO  +
               LV=WTO01L,                     .. STORAGE SIZE REQUIRED +
               LOC=BELOW                      .. FROM BELOW THE LINE
         LR    R2,R1                          COPY STORAGE ADDRESS
         MVC   0(WTO01L,R2),WTO01             COPY WTO
         WTO   MF=(E,(R2))                    ISSUE WTO
         FREEMAIN RU,                                                  +
               A=(R2),                                                 +
               LV=WTO01L
         ABEND 1,DUMP,,USER
* ------------------------------------------------------------------- *
*        ATTACH print sub-task                                        *
* ------------------------------------------------------------------- *
INIT0070 DS    0H
         MVC   DXD_ATTACH(ATTCHL),ATTCHI
         MVC   DXD_TASK,PRINT                 TASK BEING ATTACHED
         LA    R2,COMM_PRINT_TERM_ECB         TERMINATION ECB'S ADDRESS
         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS
         ITRACE ID=ATCHPRT                    ATTACHING PRINT SUBTASK
         ATTACH EP=LIBSPSUB,                  ATTACH PRINT SUBTASK     +
               PARAM=((R11)),                 .. PARAMETER             +
               ECB=(R2),                      .. TERMINATION ECB       +
               PURGE=QUIESCE,                 .. FINISH UP I/O         +
               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +
               SF=(E,DXD_ATTACH)              ..
         LTR   R15,R15                        ATTACH SUCCESSFUL?
         BNZ   ERR0010                        NO
         ST    R1,COMM_PRINT_TCB              SET TCB'S ADDRESS
         ITRACE ID=PRTOK,                     SUBTASK ATTACH SUCCESSFUL+
               RDATA1=R1                      .. INCLUDE TCB ADDRESS
         OI    COMM_TASKS,$TASK_PRINT         PRINT SUBTASK IS ACTIVE
* ------------------------------------------------------------------- *
*        Print start-up messages                                      *
* ------------------------------------------------------------------- *
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVI   PRTCMD,$PRTHEAD                SET COMMAND
         BAL   R8,PRT0000                     PRINT
         MVI   PRTCMD,$PRTPRT                 CHANGE COMMAND TO PRINT
         MVC   PRTMSGID(MSG01L),MSG01
         BAL   R8,PRT0000                     PRINT MESSAGE
         MVC   PRTMSGID(MSG02L),MSG02
         BAL   R8,PRT0000                     PRINT MESSAGE
* ------------------------------------------------------------------- *
*        Make sure all required DD's are present                      *
* ------------------------------------------------------------------- *
         LA    R5,DDTBLE                      FIRST DD_NAME
         SR    R2,R2                          CLEAR REGISTER
INIT0080 DS    0H
         TM    DD_FLAG,$DD_REQUIRED           IS THIS A REQUIRED DD?
         BNO   INIT0090                       NO
         IC    R2,DD_ID                       INSERT DD ID
         EX    R2,DDTM                        IS DD PRESENT?
         BO    INIT0090                       YES
         MVC   PRTMSGID(MSG03L),MSG03
         MVC   PRTMSGID+(MSG03D-MSG03)(L'MSG03D),DD_NAME
         BAL   R8,PRT0000                     PRINT MESSAGE
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
INIT0090 DS    0H
         LA    R5,DD_DSECT_L(R5)              NEXT DD
         CLI   0(R5),X'FF'                    END OF TABLE?
         BNE   INIT0080                       NO
         TM    COMM_FLAGS,$ABORT              ABORT FLAG SET?
         BNO   INIT0100                       NO
         MVC   PRTMSGID(MSG04L),MSG04
         BAL   R8,PRT0000                     PRINT MESSAGE
         B     EXIT0000                       EXIT
DDTM     TM    DXD_DD,X'00'                   TEST FOR PRESENCE OF DD
* ------------------------------------------------------------------- *
*        Call parameter interpreter                                   *
* ------------------------------------------------------------------- *
INIT0100 DS    0H
         LOAD  EP=LIBSPARM                    LOAD PARM CONVERTER
         LR    R15,R0                         PARAMETER ENTRY POINT
         BALR  R14,R15                        LINK TO INTERPRETER
         DELETE EP=LIBSPARM                   DELETE INTERPRETER
         TM    COMM_FLAGS,$ABORT              ERRORS IN PARAMETERS?
         BNO   INIT0110                       NO
         MVC   PRTMSGID(MSG07L),MSG07
         BAL   R8,PRT0000                     PRINT MESSAGE
         B     TERM0000                       START TERMINATION
* ------------------------------------------------------------------- *
*        Verify that we have a VTAM APPLID or                         *
*        a TCP/IP port number or both                                 *
* ------------------------------------------------------------------- *
INIT0110 DS    0H
         CLC   COMM_APPL_NAME,COMM_BLANKS     APPLID PRESENT?
         BNE   INIT0120                       YES
         OC    COMM_PORT,COMM_PORT            PORT NUMBER PRESENT?
         BZ    ERR0070                        NO..
* ------------------------------------------------------------------- *
*        ATTACH console subtask                                       *
* ------------------------------------------------------------------- *
INIT0120 DS    0H
         MVC   DXD_TASK,LIBSCSUB              SUBTASK BEING ATTTACHED
         LA    R2,COMM_CSUB_TERM_ECB          TERMINATION ECB'S ADDRESS
         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS
         ITRACE ID=ATCHCONS                   ATTACHING CONSOLE SUBTASK
         ATTACH EP=LIBSCSUB,                  ATTACH CONSOLE SUBTASK   +
               PARAM=((R11)),                 .. PARAMETER             +
               ECB=(R2),                      .. TERMINATION ECB       +
               PURGE=QUIESCE,                 .. FINISH UP I/O         +
               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +
               SF=(E,DXD_ATTACH)              ..
         LTR   R15,R15                        ATTACH SUCCESSFUL?
         BNZ   ERR0010                        NO
         ST    R1,COMM_CSUB_TCB               TCB'S ADDRESS
         ITRACE ID=CONSOK,                    SUBTASK ATTACH SUCCESSFUL+
               RDATA1=R1                      .. TCB ADDRESS
         OI    COMM_TASKS,$TASK_CONSOLE       CONSOLE SUBTASK ACTIVE
         MVC   PRTMSGID(MSG05L),MSG05
         MVC   PRTMSGID+(MSG05TSK-MSG05)(L'MSG05TSK),LIBSCSUB
         MVC   PRTMSGID+(MSG05DSC-MSG05)(L'CSUBDSC),CSUBDSC
         BAL   R8,PRT0000                     PRINT MESSAGE
* ------------------------------------------------------------------- *
*        ATTACH dynamic allocation/de-allocation subtask              *
* ------------------------------------------------------------------- *
         MVC   DXD_TASK,LIBSDSUB              SUBTASK BEING ATTTACHED
         LA    R2,COMM_DSUB_TERM_ECB          TERMINATION ECB
         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS
         ITRACE ID=ATCHDSUB                   ATTACHING DSUB
         ATTACH EP=LIBSDSUB,                  ATTACH DSUB (DAIR)       +
               PARAM=((R11)),                 .. PARAMETER             +
               ECB=(R2),                      .. TERMINATION ECB       +
               PURGE=QUIESCE,                 .. FINISH UP I/O         +
               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +
               SF=(E,DXD_ATTACH)              ..
         LTR   R15,R15                        ATTACH SUCCESSFUL?
         BNZ   ERR0010                        NO
         ST    R1,COMM_DSUB_TCB               TCB ADDRESS
         ITRACE ID=DSUBOK,                    ATTACH SUCCESSFUL        +
               RDATA1=R1                      .. TCB ADDRESS
         OI    COMM_TASKS,$TASK_DAIR          DAIR SUBTASK ACTIVE
         MVC   PRTMSGID(MSG05L),MSG05
         MVC   PRTMSGID+(MSG05TSK-MSG05)(L'MSG05TSK),LIBSDSUB
         MVC   PRTMSGID+(MSG05DSC-MSG05)(L'DSUBDSC),DSUBDSC
         BAL   R8,PRT0000                     PRINT MESSAGE
* ------------------------------------------------------------------- *
*        ATTACH Library OPEN/CLOSE subtask                            *
* ------------------------------------------------------------------- *
         MVC   DXD_TASK,LIBSLSUB              SUBTASK BEING ATTTACHED
         LA    R2,COMM_LSUB_TERM_ECB          TERMINATION ECB'S ADDRESS
         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS
         ITRACE ID=ATCHLSUB                   ATTACHING LIB OPEN/CLOSE
         ATTACH EP=LIBSLSUB,                  ATTACH LIBRARY OPEN/CLOSE+
               PARAM=((R11)),                 .. PARAMETER             +
               ECB=(R2),                      .. TERMINATION ECB       +
               PURGE=QUIESCE,                 .. FINISH UP I/O         +
               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +
               SF=(E,DXD_ATTACH)              ..
         LTR   R15,R15                        ATTACH SUCCESSFUL?
         BNZ   ERR0010                        NO
         ST    R1,COMM_LSUB_TCB               TCBS ADDRESS
         ITRACE ID=LSUBOK,                    OPEN/CLOSE ATTACH SUCCESS+
               RDATA1=R1                      .. TCB ADDRESS
         OI    COMM_TASKS,$TASK_LIB           OPEN/CLOSE SUBTASK ACTIVE
         MVC   PRTMSGID(MSG05L),MSG05
         MVC   PRTMSGID+(MSG05TSK-MSG05)(L'MSG05TSK),LIBSLSUB
         MVC   PRTMSGID+(MSG05DSC-MSG05)(L'LSUBDSC),LSUBDSC
         BAL   R8,PRT0000                     PRINT MESSAGE
* ------------------------------------------------------------------- *
*        ATTACH Source History subtask                                *
* ------------------------------------------------------------------- *
         TM    DXD_DD,$DD_LIBHIST             IS HISTORY DD PRESENT
         BNO   PROC0010                       NO
         MVC   DXD_TASK,LIBSHSUB              SUBTASK BEING ATTTACHED
         LA    R2,COMM_HSUB_TERM_ECB          TERMINATION ECB'S ADDRESS
         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS
         ITRACE ID=ATCHHSUB                   ATTACHING SOURCE HISTORY
         ATTACH EP=LIBSHSUB,                  ATTACH SOURCE HISTORY    +
               PARAM=((R11)),                 .. PARAMETER             +
               ECB=(R2),                      .. TERMINATION ECB       +
               PURGE=QUIESCE,                 .. FINISH UP I/O         +
               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +
               SF=(E,DXD_ATTACH)              ..
         LTR   R15,R15                        ATTACH SUCCESSFUL?
         BNZ   ERR0010                        NO
         ST    R1,COMM_HSUB_TCB               TCB ADDRESS
         ITRACE ID=HSUBOK,                    HISTORY SUBTASK SUCCESS  +
               RDATA1=R1                      TCB ADDRESS
         OI    COMM_TASKS,$TASK_HISTORY       HISTORY SUBTASK ACTIVE
         MVC   PRTMSGID(MSG05L),MSG05
         MVC   PRTMSGID+(MSG05TSK-MSG05)(L'MSG05TSK),LIBSHSUB
         MVC   PRTMSGID+(MSG05DSC-MSG05)(L'HSUBDSC),HSUBDSC
         BAL   R8,PRT0000                     PRINT MESSAGE
* ------------------------------------------------------------------- *
*        Open the library ACBs.                                       *
* ------------------------------------------------------------------- *
PROC0010 DS    0H
         ITRACE ID=OPENLIBS
         MVC   LIB_FUNCTION_EYE,LIBID
         MVI   LIB_FUNCTION,$LIB_FUNCTION_OPEN
         MVC   LIB_FUNCTION_LIB_NAME,ALL
         BAL   R8,LIB0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TM    LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         BNO   PROC0030                       NO
         MVC   PRTMSGID(MSG07L),MSG07
         BAL   R8,PRT0000                     PRINT MESSAGE
         B     TERM0000                       CLEAN-UP
PROC0030 DS    0H
         OI    COMM_FLAGS,$INIT               INITIALIZATION COMPLETE
         GETMAIN RU,                          ACQUIRE STORAGE FOR WTO  +
               LV=WTO06L,                     .. STORAGE SIZE REQUIRED +
               LOC=BELOW                      .. FROM BELOW THE LINE
         LR    R2,R1                          COPY STORAGE ADDRESS
         MVC   0(WTO06L,R2),WTO06             COPY WTO
         WTO   MF=(E,(R2))                    ISSUE WTO
         FREEMAIN RU,                                                  +
               A=(R2),                                                 +
               LV=WTO06L
* ------------------------------------------------------------------- *
*                                                                     *
*        If a VTAM APPLID was specified in the options,               *
*        ATTACH the VTAM communication subtask.                       *
*                                                                     *
* ------------------------------------------------------------------- *
         CLC   COMM_APPL_NAME,COMM_BLANKS     VTAM APPLID GIVEN?
         BE    PROC0040                       NO
         MVC   DXD_TASK,VTAM                  TASK BEING ATTACHED
         LA    R2,COMM_VTAM_TERM_ECB          TERMINATION ECB
         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS
         ITRACE ID=ATCHVTAM                   ATTACHING VTAM SUBTASK
         ATTACH EP=LIBSVTAM,                  ATTACH VTAM SUBTASK      +
               PARAM=((R11)),                 .. PARAMETER             +
               ECB=(R2),                      .. TERMINATION ECB       +
               PURGE=QUIESCE,                 .. FINISH UP I/O         +
               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +
               SF=(E,DXD_ATTACH)              ..
         LTR   R15,R15                        ATTACH SUCCESSFUL?
         BNZ   ERR0010                        NO
         ST    R1,COMM_VTAM_TCB               TCB ADDRESS IN COMMON
         ITRACE ID=VTAMOK,                    SUBTASK ATTACH SUCCESSFUL+
               RDATA1=R1                      TCB ADDRESS IN TRACE
         OI    COMM_TASKS,$TASK_VTAM          VTAM SUBTASK IS ACTIVE
* ------------------------------------------------------------------- *
*                                                                     *
*        If a TCP/IP port nuber was specified in the options,         *
*        ATTACH the TCP/IP communication subtask.                     *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0040 DS    0H
         OC    COMM_PORT,COMM_PORT            PORT NUMBER GIVEN?
         BZ    PROC0070                       NO
         MVC   DXD_TASK,TCPIP                 TASK BEING ATTACHED
         LA    R2,COMM_TCPIP_TERM_ECB         TERMINATION ECB
         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS
         ITRACE ID=ATCHSIP                    ATTACHING TCPIP SUBTASK
         ATTACH EP=LIBSIP,                    ATTACH TCP/IP SUBTASK    +
               PARAM=((R11)),                 .. PARAMETER             +
               ECB=(R2),                      .. TERMINATION ECB       +
               PURGE=QUIESCE,                 .. FINISH UP I/O         +
               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +
               SF=(E,DXD_ATTACH)              ..
         LTR   R15,R15                        ATTACH SUCCESSFUL?
         BNZ   ERR0010                        NO
         ST    R1,COMM_TCPIP_TCB              TCB ADDRESS IN COMMON
         ITRACE ID=TCPIPOK,                   TCP/IP ATTACH SUCCESSFUL +
               RDATA1=R1                      TCB ADDRESS
         OI    COMM_TASKS,$TASK_TCPIP         TCP/IP SUBTASK IS ACTIVE
* ------------------------------------------------------------------- *
*                                                                     *
*   At the present time there is no work to do.                       *
*                                                                     *
*   The number of ECBs we need to WAIT on varies.                     *
*   The main task WAITs for:                                          *
*     1) A user to connect or disconnect                              *
*                                                                     *
*     2) The console subtask.                                         *
*        The console subtask POSTs COMM_TERMINATION_ECB when the      *
*        LIBRARIAN is to be shutdown.                                 *
*                                                                     *
*    Since the number of users can vary, the number of ECBs can also  *
*    vary.  There are always the ECBs for the ATTENTION exit and the  *
*    termination ECB (POSTed by LIBSCSUB).  There is also one ECB     *
*    the completion ECB) for each LIBSUSUB subtask.                   *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0070 DS    0H
         LA    R2,8                           MINIMUM WAIT LIST LENGTH
         SR    R3,R3                          USER BLOCK COUNTER
         ITRACE ID=WAITENQ
         MVC   DXD_ENQ(ENQL),ENQI             INITIALIZE PARM LIST
         ENQ   MF=(E,DXD_ENQ)                 ENQ USER CHAIN
         ICM   R5,15,COMM_USER_CHAIN          FIRST USER BLOCK ADDRESS
         USING USERBLOK,R5                    DEFINE BASE
         BZ    PROC0090
PROC0080 DS    0H
         LA    R2,4(R2)                       PLUS 4
         LA    R3,1(R3)                       ADD 1 TO COUNTER
         ICM   R5,15,USER_NEXT
         BNZ   PROC0080
PROC0090 DS    0H
         ITRACE ID=GETWAIT,                   GETMAINING WAIT LIST     +
               RDATA1=R2,                     .. SIZE OF WAIT LIST     +
               RDATA2=R3                      .. NUMBER OF USERBLOKS
         ST    R2,DXD_WAIT_SIZE               SAVE SIZE OF WAIT LIST
         GETMAIN RU,                          OBTAIN STORAGE           +
               LV=(R2),                                                +
               LOC=ANY
         ST    R1,DXD_WAIT                    SAVE THE ADDRESS
         LA    R0,COMM_TERMINATION_ECB        TERMINATION ECB
         ST    R0,0(R1)
         LA    R0,COMM_ATTN_ECB               ATTENTION EXIT ECB
         ST    R0,4(R1)
         LA    R1,4(R1)                       NEXT ECB
         LTR   R3,R3                          ANY USER BLOCKS?
         BZ    PROC0110                       NO
         ICM   R5,15,COMM_USER_CHAIN          FIRST USER BLOCK
         BZ    ERR0040                        NOT THERE NOW?
PROC0100 DS    0H
         LA    R1,4(R1)                       NEXT ECB ADDR SLOT
         LA    R0,USER_TERMINATION_ECB        TERMINATION ECB
         ST    R0,0(R1)                       SET ADDRESS IN WAIT LIST
         L     R5,USER_NEXT                   NEXT USERBLOK
         BCT   R3,PROC0100
PROC0110 DS    0H
         OI    0(R1),X'80'                    FLAG END-OF-LIST
         ITRACE ID=WAITDEQ
         MVC   DXD_ENQ(DEQL),DEQI             INITIALIZE DEQ PARM LIST
         DEQ   MF=(E,DXD_ENQ)                 DEQ USER CHAIN
         L     R2,DXD_WAIT                    ECB LIST'S ADDRESS
         ITRACE ID=WAIT,                                               +
               RDATA1=R2
         WAIT  1,ECBLIST=(R2)                 WAIT FOR SOMETHING
         L     R3,DXD_WAIT_SIZE               SIZE OF WAIT LIST
         ITRACE ID=FREEWAIT,                                           +
               RDATA1=R2,                                              +
               RDATA2=R3
         FREEMAIN RU,                         FREE WAITLIST STORAGE    +
               A=(R2),                                                 +
               LV=(R3)
         XC    DXD_WAIT,DXD_WAIT              CLEAR ADDRESS
         XC    DXD_WAIT_SIZE,DXD_WAIT_SIZE
         TM    COMM_TERMINATION_ECB,X'40'     TERMINATION ECB POSTED?
         BO    TERM0000                       YES
* ------------------------------------------------------------------- *
*        USER LOG-INS/LOG-OUTS                                        *
* ------------------------------------------------------------------- *
USER0000 DS    0H
         XC    COMM_ATTN_ECB,COMM_ATTN_ECB    CLEAR ATTENTION EXIT ECB
         ITRACE ID=LOGENQ
         MVC   DXD_ENQ(ENQL),ENQI             INITIALIZE PARM LIST
         ENQ   MF=(E,DXD_ENQ)                 ENQ USER CHAIN
         ICM   R5,15,COMM_USER_CHAIN          FIRST USER BLOCK
         BZ    PROC0070                       NO USER BLOCKS
USER0010 DS    0H
         ITRACE ID=USERBLOK,                                           +
               DATA1=USER_USER_ID,            .. USER'S TSO ID         +
               DATA2=USER_TCB                 .. SUBTASK'S TCB ADDRESS
         TM    USER_TERMINATION_ECB,X'40'     TERMINATED?
         BO    USER0040                       YES
         OC    USER_TCB,USER_TCB              SUBTASK ADDRESS PRESENT?
         BNZ   USER0110                       YES
         ITRACE ID=ATCHUSER,                  ATTACHING USER SUBTASK   +
               RDATA1=R5,                     .. USERBLOK ADDRESS      +
               DATA2=USER_PARTNER_LU          .. USER'S LU NAME
         MVC   DXD_ATTACH(ATTCHL),ATTCHI
         LA    R2,USER_TERMINATION_ECB        TERMINATION ECB
         LA    R3,USER_SELF                   PARM LIST ADDRESS
         ATTACH EP=LIBSUSUB,                  ATTACH USER SUBTASK      +
               PARAM=((R5)),                  .. PARAMETER             +
               ECB=(R2),                      .. TERMINATION ECB       +
               PURGE=QUIESCE,                 .. FINISH UP I/O         +
               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +
               SF=(E,DXD_ATTACH)              ..
         LTR   R15,R15                        ATTACH SUCCESSFUL?
         BNZ   ERR0010                        NO
         ST    R1,USER_TCB                    SET TCB ADDRESS
         ITRACE ID=USEROK,                    SUBTASK ATTACH SUCCESSFUL+
               RDATA1=R1                      TCB ADDRESS
         MVC   PRTMSGID(MSG13L),MSG13
         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID
         BZ    USER0020
         MVC   PRTMSGID+(MSG13TYP-MSG13)(4),CID
         UNPK  PRTMSGID+(MSG13ADR-MSG13)(9),USER_CONVERSATION_ID(5)
         TR    PRTMSGID+(MSG13ADR-MSG13)(8),HEXCHAR
         MVI   PRTMSGID+(MSG13ADR-MSG13)+8,C' '
         B     USER0030
USER0020 DS    0H
         MVC   PRTMSGID+(MSG13TYP-MSG13)(4),IP
         MVC   PRTMSGID+(MSG13ADR-MSG13)(15),USER_IP_ADDRESS
USER0030 DS    0H
         BAL   R8,PRT0000
         B     USER0110
* ------------------------------------------------------------------- *
*        USER HAS LOGGED-OUT                                          *
* ------------------------------------------------------------------- *
USER0040 DS    0H
         TM    USER_STATUS,$USERCLN           CLEAN-UP SCHEDULED?
         BO    USER0110                       YES
         OI    USER_STATUS,$USERCLN           CLEAN-UP IS UNDERWAY
         ITRACE ID=LOGOUT,                                             +
               RDATA1=R5,                                              +
               DATA2=USER_NAME
         MVC   PRTMSGID(MSG14L),MSG14
         MVC   PRTMSGID+(MSG14END-MSG14)(L'MSG14END),DETACHED
         OC    USER_TERMINATION_ECB+1(3),USER_TERMINATION_ECB+1
         BZ    USER0045
         MVC   PRTMSGID+(MSG14END-MSG14)(L'MSG14END),ABENDED
USER0045 DS    0H
         MVC   PRTMSGID+(MSG14USR-MSG14)(L'MSG14USR),USER_USER_ID
         UNPK  PRTMSGID+(MSG14ECB-MSG14)(9),USER_TERMINATION_ECB(5)
         TR    PRTMSGID+(MSG14ECB-MSG14)(8),HEXCHAR
         MVI   PRTMSGID+(MSG14ECB-MSG14)+8,C' '
         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID
         BZ    USER0050
         MVC   PRTMSGID+(MSG14TYP-MSG14)(4),CID
         UNPK  PRTMSGID+(MSG14ADR-MSG14)(9),USER_CONVERSATION_ID(5)
         TR    PRTMSGID+(MSG14ADR-MSG14)(8),HEXCHAR
         MVI   PRTMSGID+(MSG14ADR-MSG14)+8,C' '
         B     USER0060
USER0050 DS    0H
         MVC   PRTMSGID+(MSG14TYP-MSG14)(4),IP
         MVC   PRTMSGID+(MSG14ADR-MSG14)(15),USER_IP_ADDRESS
USER0060 DS    0H
         UNPK  PRTMSGID+(MSG14STA-MSG14)(3),USER_STATUS(2)
         TR    PRTMSGID+(MSG14STA-MSG14)(2),HEXCHAR
         MVI   PRTMSGID+(MSG14STA-MSG14)+2,C' '
         BAL   R8,PRT0000
*
*      Remove any library ENQs for this user
*
         MVI   LIB_FUNCTION,$LIB_FUNCTION_REM_TASK
         ST    R5,LIB_FUNCTION_USER
         MVC   LIB_FUNCTION_LIB_NAME,USER_LIBRARY
         BAL   R8,LIB0000
USER0070 DS    0H
         ITRACE ID=DTACHUSR,                                           +
               RDATA1=R5,                                              +
               DATA2=USER_USER_ID
         DETACH USER_TCB
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0020                        NO
         ITRACE ID=UNCHUSER,                                           +
               RDATA1=R5
USER0080 DS    0H
         LA    R1,COMM_USER_CHAIN             STARTING CHAIN POINT
USER0090 DS    0H
         C     R5,0(R1)                       OUR USER BLOCK?
         BE    USER0100                       YES
         ICM   R1,15,0(R1)                    NEXT BLOCK'S ADDRESS
         BZ    ERR0050
         LA    R1,USER_NEXT-USERBLOK(R1)
         B     USER0090
USER0100 DS    0H
         MVC   0(4,R1),USER_NEXT              NEXT BLOCK ON CHAIN
         ITRACE ID=USEROUT
         LR    R1,R5                          COPY USERBLOK ADDRESS
         ICM   R5,15,USER_NEXT                NEXT BLOCK
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=USERBLOKL
         B     USER0120
USER0110 DS    0H
         ICM   R5,15,USER_NEXT
USER0120 DS    0H
         LTR   R5,R5                          NEXT BLOCK EXIST?
         BNZ   USER0010                       YES
         ITRACE ID=LOGDEQ
         MVC   DXD_ENQ(DEQL),DEQI             INITIALIZE DEQ PARM LIST
         DEQ   MF=(E,DXD_ENQ)                 DEQ THE USER CHAIN
         ITRACE ID=USERDONE
         B     PROC0070
* ------------------------------------------------------------------- *
*                                                                     *
*  Error(s) detected in the start-up parameters or the                *
*  termination ECB has been POSTed.                                   *
*                                                                     *
*  SHUTDOWN OCCURS IN 4 PHASES                                        *
*    --------------------------------------------------------------   *
*                                                                     *
*                       Phase 1                                       *
*                                                                     *
*  Quiesce the LIBRARY-to-USERs activity                              *
*                                                                     *
*  Set the EOJ phase 1 indicator.                                     *
*                                                                     *
*  Terminate logged in users                                          *
*  Terminate the VTAM and TCP/IP subtasks                             *
*  Terminate the library OPEN/CLOSE subtask                           *
*                                                                     *
*    --------------------------------------------------------------   *
*                                                                     *
*                       Phase 2                                       *
*  Set the EOJ phase 2 indicator.                                     *
*  Post the changed source history subtask's "work to do" ECB and     *
*  wait for the subtask to terminate.                                 *
*  Post the library "open/close" "work to do" ECB and wait for the    *
*  LSUB subtask to terminate.                                         *
*                                                                     *
*    --------------------------------------------------------------   *
*                                                                     *
*                       Phase 3                                       *
*  Set the EOJ phase 3 indicator.                                     *
*  Post the library "allocation/de-allocation" "work to do" ECB       *
*  and wait for the DSUB subtask to terminate.                        *
*  Shutdown the console communication subtask.                        *
*                                                                     *
*                                                                     *
*  Print the log-on and library statistics.                           *
*                                                                     *
*                                                                     *
*    --------------------------------------------------------------   *
*                                                                     *
*  Set the EOJ phase 4 indicator                                      *
*  Shutdown the print subtask.                                        *
*  Post the print subtask's "work to do" ECB and wait for the         *
*  subtask to terminate.                                              *
*                                                                     *
* ------------------------------------------------------------------- *
TERM0000 DS    0H
         ITRACE ID=TERM
         MVC   PRTMSGID(MSG80L),MSG80
         BAL   R8,PRT0000                     PRINT MESSAGE
         ITRACE ID=EOJ1
         OI    COMM_EOJ_PHASE,$EOJ1           SIGNAL SHUTDOWN..
         MVC   PRTMSGID(MSG81L),MSG81
         BAL   R8,PRT0000                     PRINT MESSAGE
* ------------------------------------------------------------------- *
*                Terminate subtasks for logged-in users.              *
* ------------------------------------------------------------------- *
TERM0010 DS    0H
         ITRACE ID=TERMUSER
         ICM   R5,15,COMM_USER_CHAIN          FIRST USER BLOCK
         BZ    TERM0040                       NO USERS LOGGED IN
         XC    COMM_USER_CHAIN,COMM_USER_CHAIN
TERM0020 DS    0H
         ITRACE ID=NOTFYUSR,                                           +
               DATA1=USER_USER_ID
         POST  USER_WORK_ECB                  WAKE UP USER'S SUBTASK
         WAIT  ECB=USER_TERMINATION_ECB
         MVI   LIB_FUNCTION,$LIB_FUNCTION_REM_USER
         MVC   LIB_FUNCTION_LIB_NAME,USER_LIBRARY
         ST    R5,LIB_FUNCTION_USER           SET USER BLOCK ADDRESS
         BAL   R8,LIB0000
TERM0030 DS    0H
         ITRACE ID=DTCHUSER,                                           +
               DATA1=USER_TCB
         DETACH USER_TCB                      DETACH THE SUBTASK
         LR    R1,R5                          COPY STORAGE ADDRESS
         L     R5,USER_NEXT                   NEXT BLOCK ON CHAIN
         ITRACE ID=FREEUSER,                                           +
               DATA1=R1,                                               +
               DATA2=R5
         FREEMAIN RU,                         FREEMAIN THE USERBLOK    +
               A=(R1),                                                 +
               LV=USERBLOKL
         ITRACE ID=USEROUT
         LTR   R5,R5                          ANOTHER USER ON CHAIN?
         BNZ   TERM0020                       YES
* ------------------------------------------------------------------- *
*                Terminate the VTAM subtask                           *
* ------------------------------------------------------------------- *
TERM0040 DS    0H
         OC    COMM_VTAM_TCB,COMM_VTAM_TCB    VTAM SUBTASK ATTACHED?
         BZ    TERM0050                       NO
         ITRACE ID=TERMVTAM
         POST  COMM_VTAM_WORK_ECB             POST VTAM SUBTASK ECB
         WAIT  ECB=COMM_VTAM_TERM_ECB         WAIT FOR SUBTASK
         DETACH COMM_VTAM_TCB                 DETACH THE SUBTASK
* ------------------------------------------------------------------- *
*                Terminate the TCP/IP subtask                         *
* ------------------------------------------------------------------- *
TERM0050 DS    0H
         OC    COMM_TCPIP_TCB,COMM_TCPIP_TCB  TCP/IP SUBTASK ATTACHED?
         BZ    TERM0060                       NO
         ITRACE ID=TERMIP
         POST  COMM_TCPIP_WORK_ECB            POST TCP/IP SUBTASK ECB
         WAIT  ECB=COMM_TCPIP_TERM_ECB        WAIT FOR SUBTASK
         DETACH COMM_TCPIP_TCB                DETACH THE SUBTASK
* ------------------------------------------------------------------- *
*                Close the library ACB(s)                             *
* ------------------------------------------------------------------- *
TERM0060 DS    0H
         OC    COMM_LSUB_TCB,COMM_LSUB_TCB    LIBRARY SUBTASK ATTACHED?
         BZ    TERM0070                       NO
         ITRACE ID=CLOSELIB
         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSE
         MVC   LIB_FUNCTION_LIB_NAME,ALL
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         BAL   R8,LIB0000
* ------------------------------------------------------------------- *
*                START OF PHASE 2 OF SHUTDOWN                         *
* ------------------------------------------------------------------- *
TERM0070 DS    0H
         ITRACE ID=EOJ2
         OI    COMM_EOJ_PHASE,$EOJ2           SHUTDOWN PHASE 2
         MVC   PRTMSGID(MSG83L),MSG83
         BAL   R8,PRT0000                     PRINT THE MESSAGE
* ------------------------------------------------------------------- *
*               Terminate the changed source history subtask          *
* ------------------------------------------------------------------- *
         OC    COMM_HSUB_TCB,COMM_HSUB_TCB    HISTORY SUBTASK ATTACHED?
         BZ    TERM0090                       NO
         ITRACE ID=CLSEHIST
         POST  COMM_HSUB_WORK_ECB             POST HISTORY SUBTASK ECB
         WAIT  ECB=COMM_HSUB_TERM_ECB         WAIT FOR SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB
         DETACH COMM_HSUB_TCB                 DETACH THE SUBTASK
         ITRACE ID=COMM_HSUB_TERM_ECB,        SUBTASK TERMINATED       +
               DATA1=COMM_HSUB_TERM_ECB       .. ECB'S STATUS
         MVC   PRTMSGID(MSG84L),MSG84
         UNPK  PRTMSGID+(MSG84ECB-MSG84)(9),COMM_HSUB_TERM_ECB(5)
         TR    PRTMSGID+(MSG84ECB-MSG84)(8),HEXCHAR
         MVI   PRTMSGID+(MSG84ECB-MSG84)+8,C' '
         OC    COMM_HSUB_TERM_ECB+1(3),COMM_HSUB_TERM_ECB+1
         BZ    TERM0080
         MVC   PRTMSGID+(MSG84AB-MSG84)(L'MSG84AB),ABENDED
TERM0080 DS    0H
         BAL   R8,PRT0000                     PRINT THE MESSAGE
         OC    COMM_HSUB_TERM_ECB+1(3),COMM_HSUB_TERM_ECB+1
         BZ    TERM0090
         BAL   R8,SNAP0000                    TAKE A SNAP DUMP
* ------------------------------------------------------------------- *
*               Terminate the Library OPEN/CLOSE subtask              *
* ------------------------------------------------------------------- *
TERM0090 DS    0H
         OC    COMM_LSUB_TCB,COMM_LSUB_TCB    OPEN/CLOSE TASK PRESENT?
         BZ    TERM0110                       NO
         ITRACE ID=LSUBWAIT
         POST  COMM_LSUB_WORK_ECB             POST OPEN/CLOSE TASK ECB
         WAIT  ECB=COMM_LSUB_TERM_ECB         WAIT FOR TASK TO TERM
         DETACH COMM_LSUB_TCB                 DETACH OPEN/CLOSE SUBTASK
         ITRACE ID=COMM_LSUB_TERM_ECB,        TASK TERMINATED          +
               DATA1=COMM_LSUB_TERM_ECB       .. ECB'S STATUS
         MVC   PRTMSGID(MSG85L),MSG85
         UNPK  PRTMSGID+(MSG85ECB-MSG85)(9),COMM_LSUB_TERM_ECB(5)
         TR    PRTMSGID+(MSG85ECB-MSG85)(8),HEXCHAR
         MVI   PRTMSGID+(MSG85ECB-MSG85)+8,C' '
         OC    COMM_LSUB_TERM_ECB+1(3),COMM_LSUB_TERM_ECB+1
         BZ    TERM0100
         MVC   PRTMSGID+(MSG85AB-MSG85)(L'MSG85AB),ABENDED
TERM0100 DS    0H
         BAL   R8,PRT0000                     PRINT THE MESSAGE
         OC    COMM_LSUB_TERM_ECB+1(3),COMM_LSUB_TERM_ECB+1
         BZ    TERM0110
         BAL   R8,SNAP0000                    TAKE A SNAP DUMP
* ------------------------------------------------------------------- *
*                Start Phase 3 of shutdown                            *
* ------------------------------------------------------------------- *
TERM0110 DS    0H
         ITRACE ID=EOJ3
         MVC   PRTMSGID(MSG86L),MSG86
         BAL   R8,PRT0000                     PRINT THE MESSAGE
         OI    COMM_EOJ_PHASE,$EOJ3           SHUTDOWN PHASE 3
         OC    COMM_DSUB_TCB,COMM_DSUB_TCB    DAIR SUBTASK PRESENT?
         BZ    TERM0130                       NO
         ITRACE ID=DAIRWAIT
         POST  COMM_DSUB_WORK_ECB             POST THE DAIR SUBTASK ECB
         WAIT  ECB=COMM_DSUB_TERM_ECB         WAIT FOR TASK TERMINATE
         DETACH COMM_DSUB_TCB                 DETACH DAIR SUBTASK
         ITRACE ID=DSUBTERM,                  DAIR TASK HAS TERMINATED +
               DATA1=COMM_DSUB_TERM_ECB       .. ECB'S STATUS
         MVC   PRTMSGID(MSG87L),MSG87
         UNPK  PRTMSGID+(MSG87ECB-MSG87)(9),COMM_DSUB_TERM_ECB(5)
         TR    PRTMSGID+(MSG87ECB-MSG87)(8),HEXCHAR
         MVI   PRTMSGID+(MSG87ECB-MSG87)+8,C' '
         OC    COMM_DSUB_TERM_ECB+1(3),COMM_DSUB_TERM_ECB+1
         BZ    TERM0120
         MVC   PRTMSGID+(MSG87AB-MSG87)(L'MSG87AB),ABENDED
TERM0120 DS    0H
         BAL   R8,PRT0000                     PRINT THE MESSAGE
         OC    COMM_DSUB_TERM_ECB+1(3),COMM_DSUB_TERM_ECB+1
         BZ    TERM0130
         BAL   R8,SNAP0000                    TAKE A SNAP DUMP
TERM0130 DS    0H
         OC    COMM_CSUB_TCB,COMM_CSUB_TCB    CONSOLE SUBTASK PRESENT?
         BZ    TERM0150                       NO
         ITRACE ID=CONSWAIT
         POST  COMM_CSUB_WORK_ECB             POST CONSOLE TASK ECB
         WAIT  ECB=COMM_CSUB_TERM_ECB         WAIT FOR TASK TERMINATE
         DETACH COMM_CSUB_TCB                 DETACH CONSOLE SUBTASK
         ITRACE ID=CSUBTERM,                  SUBTASK TERMINATED       +
               DATA1=COMM_CSUB_TERM_ECB       .. ECB'S STATUS
         MVC   PRTMSGID(MSG88L),MSG88
         UNPK  PRTMSGID+(MSG88ECB-MSG88)(9),COMM_CSUB_TERM_ECB(5)
         TR    PRTMSGID+(MSG88ECB-MSG88)(8),HEXCHAR
         MVI   PRTMSGID+(MSG88ECB-MSG88)+8,C' '
         OC    COMM_CSUB_TERM_ECB+1(3),COMM_CSUB_TERM_ECB+1
         BZ    TERM0140
         MVC   PRTMSGID+(MSG88AB-MSG88)(L'MSG88AB),ABENDED
TERM0140 DS    0H
         BAL   R8,PRT0000                     PRINT THE MESSAGE
         OC    COMM_CSUB_TERM_ECB+1(3),COMM_CSUB_TERM_ECB+1
         BZ    TERM0150
         BAL   R8,SNAP0000                    TAKE A SNAP DUMP
* ------------------------------------------------------------------- *
*                Print statistics                                     *
* ------------------------------------------------------------------- *
TERM0150 DS    0H
         MVI   PRTCMD,$PRTASIS                CHANGE PRINT TO 'AS-IS'
         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBBLOK
         BZ    TERM0170
         USING LIBBLOK,R4                     DEFINE BASE
         MVC   PRTMSGID(MSG89L),MSG89
         BAL   R8,PRT0000                     PRINT THE MESSAGE
TERM0160 DS    0H
         MVC   PRTMSGID(MSG90L),MSG90
         MVC   PRTMSGID+(MSG90LIB-MSG90)(L'MSG90LIB),LIB_NAME
         L     R1,LIB_READS                   NUMBER OF READS
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG90RDS-MSG90)(L'MSG90RDS),DXD_DWORD+3
         L     R1,LIB_WRITES                  NUMBER OF WRITES
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG90WTS-MSG90)(L'MSG90WTS),DXD_DWORD+3
         L     R1,LIB_NEW                     NUMBER OF NEW MEMBERS
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG90NEW-MSG90)(L'MSG90NEW),DXD_DWORD+3
         L     R1,LIB_UPDATE                  NUMBER OF UPDATED MEMBERS
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG90UPD-MSG90)(L'MSG90UPD),DXD_DWORD+3
         L     R1,LIB_DELETE                  NUMBER OF DELETED MEMBERS
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG90DEL-MSG90)(L'MSG90DEL),DXD_DWORD+3
         L     R1,LIB_CHECK_IN                NBR OF MEMBER CHECK INS
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG90IN-MSG90)(L'MSG90IN),DXD_DWORD+3
         L     R1,LIB_CHECK_OUT               NUMBER OF CHECK OUTS
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG90OUT-MSG90)(L'MSG90OUT),DXD_DWORD+3
         L     R1,LIB_VIEW                    NUMBER OF MEMBER VIEWS
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG90VW-MSG90)(L'MSG90VW),DXD_DWORD+3
         BAL   R8,PRT0000                     PRINT
         LR    R1,R4                          COPY LIBBLOK ADDRESS
         ICM   R4,15,LIB_NEXT                 NEXT LIBRARY
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=LIBBLOKL
         LTR   R4,R4
         BNZ   TERM0160
TERM0170 DS    0H
         MVC   PRTMSGID(MSG91L),MSG91
         L     R1,COMM_VTAM_LOGINS            NUMBER OF VTAM LOG-INS
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG91LOG-MSG91)(L'MSG91LOG),DXD_DWORD+3
         BAL   R8,PRT0000                     PRINT
         MVC   PRTMSGID(MSG92L),MSG92
         L     R1,COMM_TCPIP_LOGINS           NUMBER OF VTAM LOG-INS
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG92LOG-MSG92)(L'MSG92LOG),DXD_DWORD+3
         BAL   R8,PRT0000                     PRINT
         DROP  R4
         ICM   R4,15,COMMXUSR                 FIRST EXTERNAL USER BLOCK
         BZ    TERM0190
         USING XUSRBLOK,R4                    DEFINE BASE
TERM0180 DS    0H
         LR    R1,R4                          COPY ADDRESS
         ICM   R4,15,XUSRNEXT                 NEXT BLOCK'S ADDRESS
         FREEMAIN RU,                         FREE THE XUSER BLOCK     +
               A=(R1),                                                 +
               LV=XUSRL
         LTR   R4,R4
         BNZ   TERM0180
* ------------------------------------------------------------------- *
*                Start phase 4 of shutdown                            *
* ------------------------------------------------------------------- *
TERM0190 DS    0H
         MVC   PRTMSGID(MSG99L),MSG99
         BAL   R8,PRT0000                     PRINT THE MESSAGE
         ITRACE ID=EOJ4
         OI    COMM_EOJ_PHASE,$EOJ4           SHUTDOWN PHASE 3
         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK
         WAIT  1,ECB=COMM_PRINT_TERM_ECB      WAIT FOR TASK TERMINATION
         DETACH COMM_PRINT_TCB                DETACH CONSOLE SUBTASK
         ITRACE ID=COMM_PRINT_TERM_ECB,       CONSOLE TASK TERMINATED  +
               DATA1=COMM_PRINT_TERM_ECB      .. ECB'S STATUS
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=ATCHFAIL                   SUBTASK ATTACH FAILED
         STH   R15,DXD_RC                     SAVE RETURN CODE
         MVC   PRTMSGID(MSG15L),MSG15
         MVC   PRTMSGID+(MSG15T-MSG15)(L'MSG15),DXD_TASK
         UNPK  PRTMSGID+(MSG15R-MSG15)(5),DXD_RC(3)
         TR    PRTMSGID+(MSG15R-MSG15)(L'MSG15R),HEXCHAR
         MVI   PRTMSGID+(MSG15R-MSG15)+4,C' '
         BAL   R8,PRT0000                     PRINT MESSAGE
         ABEND 2,DUMP,,USER
ERR0020  DS    0H
         ITRACE ID=DTCHFAIL                   SUBTASK DETACH FAILED
         STH   R15,DXD_RC                     SAVE RETURN CODE
         MVC   PRTMSGID(MSG16L),MSG16
         MVC   PRTMSGID+(MSG16T-MSG16)(L'MSG16T),DXD_TASK
         UNPK  PRTMSGID+(MSG16R-MSG16)(5),DXD_RC(3)
         TR    PRTMSGID+(MSG16R-MSG16)(L'MSG16R),HEXCHAR
         MVI   PRTMSGID+(MSG16R-MSG16)+4,C' '
         BAL   R8,PRT0000                     PRINT MESSAGE
         ABEND 3,DUMP,,USER                   TIME TO FIX THIS THING
ERR0030  DS    0H
         ITRACE ID=ACBOPENF                   ACB OPEN FAILED
         STH   R15,DXD_RC                     SAVE RETURN CODE
         MVC   PRTMSGID(MSG17L),MSG17
         UNPK  PRTMSGID+(MSG17R-MSG17)(5),DXD_RC(3)
         TR    PRTMSGID+(MSG17R-MSG17)(L'MSG17R),HEXCHAR
         MVI   PRTMSGID+(MSG17R-MSG17)+4,C' '
         BAL   R8,PRT0000                     PRINT MESSAGE
         ABEND 4,DUMP,,USER
ERR0040  DS    0H
         ITRACE ID=NOUSERS                    ERROR BUILDING WAIT LIST
         ABEND 10,DUMP,,USER
ERR0050  DS    0H
         ITRACE ID=NOUSER                     USERBLOK NOT FOUND
         ABEND 5,DUMP,,USER
ERR0060  DS    0H
         ITRACE ID=NOLIBS                     NO LIBRARIES
         ABEND 6,DUMP,,USER
ERR0070  DS    0H
         ITRACE ID=NO_NET                     NO APPLID OR PORT NUMBER
         ABEND 7,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LIB0000  DS    0H
         ITRACE ID=LIBFUNC,                                            +
               DATA1=LIB_FUNCTION,                                     +
               DATA2=LIB_FUNCTION_LIB_NAME
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK
LIB0010  DS    0H
         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN
         BC    4,LIB0010                      TRY AGAIN
         POST  COMM_LSUB_WORK_ECB             WAKE UP OPEN/CLOSE TASK
         WAIT  1,ECB=LIB_FUNCTION_ECB
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,                                                   +
               LV=PRTBLOKL,                                            +
               LOC=ANY
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE
         ST    R2,PRTNEXT-PRTBLOK(R1)                         '
         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN
         BC    4,PRT0010                      TRY AGAIN
         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK
         BR    R8                             COMPLETE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SNAP0000 DS    0H
         TM    DXD_SNAP,$SNAPPED              ALREADY SNAP DUMPED?
         BOR   R8                             YES
         LOAD  EP=LIBSSNAP                    LOAD SNAP DUMPER
         LR    R15,R0                         COPY ENTRY POINT
         BALR  R14,R15                        LINK TO SNAP DUMP
         DELETE EP=LIBSSNAP                   DELETE SNAP DUMP
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         L     R0,TRSIZE                      TRACE TABLE SIZE
         L     R1,TRADDR                      TABLE STORAGE ADDRESS
         FREEMAIN RU,                         FREEMAIN TRACE TABLE     +
               A=(R1),                                                 +
               LV=(R0)
         L     R4,COMMDXDA                    SAVE WORK AREA ADDRESS
         DELETE EP=LIBSCOMM                   DELETE COMMON MODULE
         L     R0,DXDSIZE                     WORK AREA STORAGE SIZE
         L     R13,4(R13)                     RESTORE SAVE AREA
         FREEMAIN RU,                         FREEMAIN WORK AREA       +
               A=(R4),                                                 +
               LV=(R0)
         LM    R14,R12,12(R13)                RESTORES REGISTERS
         SR    R15,R15                        CLEAR REGISTER
         BR    R14                            EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDSMAIN)                    DISP TO WORK AREA
DXDSIZE  CXD                                  WORK AREA TOTAL SIZE
NEVER    DC    A(0)
v_LIBATTN  DC  V(LIBSATTN)                    VTAM ATTENTION EXIT
V_LIBLERAD DC  V(LIBLERAD)                    VTAM LERAD EXIT

HEXCHAR  EQU   *-C'0'
         DC    C'0123456789ABCDEF'

PRTID    DC    CL8'PRTBLOK'
LIBID    DC    CL8'LIBFUNC'
ALL      DC    CL8'ALL'
ABENDED  DC    CL8'abended'
CID      DC    CL4'CID='
DETACHED DC    CL8'detached'
IP       DC    CL4' IP='

DDTBLE   DS    0C
         DC    CL8'LIBIN',AL1($DD_REQUIRED),AL1($DD_LIBIN)
         DC    CL8'LIBPRT',AL1($DD_REQUIRED),AL1($DD_LIBPRT)
HISTDD   DC    CL8'LIBHIST',AL1(0),AL1($DD_LIBHIST)
         DC    X'FF'

USER     DC    CL8'USER'
LIBSCSUB DC    C'LIBSCSUB'
LIBSDSUB DC    C'LIBSDSUB'
LIBSLSUB DC    C'LIBSLSUB'
LIBSHSUB DC    C'LIBSHSUB'
CSUBDSC  DC    C'console communication'
DSUBDSC  DC    C'dynamic allocation'
LSUBDSC  DC    C'library open/close'
HSUBDSC  DC    C'changed source history'
PRINT    DC    CL8'PRINT'
VTAM     DC    CL8'VTAM'
TCPIP    DC    CL8'TCPIP'
WTO01    WTO   'LIBSMAIN01E * LIBPRT  DD statement is not present',MF=L
WTO01L   EQU   *-WTO01
MSG01    DS    0C
         DC    CL11'LIBSMAIN01I'
         DC    C'PRINT subtask attached'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'LIBSMAIN02I'
         DC    C'Initialization starting'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    CL11'LIBSMAIN03E'
         DC    C'Required DD '
MSG03D   DC    CL8' '
         DC    C' is not present'
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    CL11'LIBSMAIN04E'
         DC    C'Add required DD(s) to your JCL and re-submit'
MSG04L   EQU   *-MSG04
MSG05    DC    C'LIBSMAIN05I '
MSG05TSK DC    CL8' '
         DC    C' ('
MSG05DSC DC    CL35' '
         DC    C')'
         DC    C' attached'
MSG05L   EQU   *-MSG05

WTO06    WTO   'LIBSMAIN06I LIBRARY STC initialization complete',MF=L
WTO06L   EQU   *-WTO06

MSG07    DC    C'LIBSMAIN07I Error(s) have been detected. Aborting.'
MSG07L   EQU   *-MSG07

MSG13    DS    0C
         DC    CL11'LIBSMAIN13I'
         DC    C'Subtask attached for user with '
MSG13TYP DC    CL4' '
MSG13ADR DC    CL15' '
         DC    C' '
MSG13L   EQU   *-MSG13
MSG14    DS    0C
         DC    CL11'LIBSMAIN14I'
         DC    C'Subtask '
MSG14END DC    CL8' '
         DC    C' for user '
MSG14USR DC    CL8' '
         DC    C', '
MSG14TYP DC    CL4' '
MSG14ADR DC    CL15' '
         DC    C' '
MSG14ECB DC    CL8' '
         DC    C' '
MSG14STA DC    CL2' '
         DC    C' '
MSG14L   EQU   *-MSG14
MSG15    DS    0C
         DC    CL11'LIBSMAIN15E'
         DC    C'ATTACH failed for '
MSG15T   DC    CL8' '
         DC    C'  RC='
MSG15R   DC    CL5' '
         DC    C' '
MSG15L   EQU   *-MSG15
MSG16    DS    0C
         DC    CL11'LIBSMAIN16E'
         DC    C'DETACH failed for '
MSG16T   DC    CL8' '
         DC    C'  RC='
MSG16R   DC    CL5' '
         DC    C' '
MSG16L   EQU   *-MSG16
MSG17    DS    0C
         DC    CL11'LIBSMAIN17E'
         DC    C'ACB open failed R15='
MSG17R   DC    CL5' '
         DC    C' '
MSG17L   EQU   *-MSG17
MSG80    DS    0C
         DC    CL11'LIBSMAIN80I'
         DC    C'Termination phase 1 beginning.'
MSG80L   EQU   *-MSG80
MSG81    DS    0C
         DC    CL11'LIBSMAIN81I'
         DC    C'Terminating logged in users.'
MSG81L   EQU   *-MSG81
MSG82    DS    0C
         DC    CL11'LIBSMAIN82I'
         DC    C'VTAM ACB has been closed.'
MSG82L   EQU   *-MSG82
MSG83    DS    0C
         DC    CL11'LIBSMAIN83I'
         DC    C'Termination phase 2 beginning.'
MSG83L   EQU   *-MSG83
MSG84    DS    0C
         DC    CL11'LIBSMAIN84I'
         DC    C'Changed source history subtask terminated, ECB='
MSG84ECB DC    CL8' '
         DC    C' '
MSG84AB  DC    CL7' '
MSG84L   EQU   *-MSG84
MSG85    DS    0C
         DC    CL11'LIBSMAIN85I'
         DC    C'Library OPEN/CLOSE subtask terminated, ECB='
MSG85ECB DC    CL8' '
         DC    C' '
MSG85AB  DC    CL7' '
MSG85L   EQU   *-MSG85
MSG86    DS    0C
         DC    CL11'LIBSMAIN86I'
         DC    C'Termination phase 3 beginning.'
MSG86L   EQU   *-MSG86
MSG87    DS    0C
         DC    CL11'LIBSMAIN87I'
         DC    C'Dynamic allocation/deallocation terminated, ECB='
MSG87ECB DC    CL8' '
         DC    C' '
MSG87AB  DC    CL7' '
MSG87L   EQU   *-MSG87
MSG88    DS    0C
         DC    CL11'LIBSMAIN88I'
         DC    C'Console communication subtask terminated, ECB='
MSG88ECB DC    CL8' '
         DC    C' '
MSG88AB  DC    CL7' '
MSG88L   EQU   *-MSG88
MSG89    DS    0C
         DC    CL11'LIBSMAIN89I'
         DC    C'Library statistics          Reads      Writes         +
               New     Updated     Deleted  Check-outs   Check_ins     +
                  View'
MSG89L   EQU   *-MSG89
MSG90    DS    0C
         DC    CL11'LIBSMAIN90I'
MSG90LIB DC    CL8' '
         DC    C'             '
MSG90RDS DC    X'402020206B2020206B202120'
MSG90WTS DC    X'402020206B2020206B202120'
MSG90NEW DC    X'402020206B2020206B202120'
MSG90UPD DC    X'402020206B2020206B202120'
MSG90DEL DC    X'402020206B2020206B202120'
MSG90OUT DC    X'402020206B2020206B202120'
MSG90IN  DC    X'402020206B2020206B202120'
MSG90VW  DC    X'402020206B2020206B202120'
MSG90L   EQU   *-MSG90
MSG91    DS    0C
         DC    CL11'LIBSMAIN91I'
         DC    C'VTAM log-ins:  '
MSG91LOG DC    X'402020206B2020206B202120'
MSG91L   EQU   *-MSG91
MSG92    DS    0C
         DC    CL11'LIBSMAIN92I'
         DC    C'TCP/IP log-ins:'
MSG92LOG DC    X'402020206B2020206B202120'
MSG92L   EQU   *-MSG92
MSG99    DS    0C
         DC    CL11'LIBSMAIN99I'
         DC    C'Termination complete.'
MSG99L   EQU   *-MSG99
ATTCHI   ATTACH EP=LIBSCONS,        ATTACH LIST FORM                   +
               ECB=*,               .. TERMINATION ECB'S ADDRESS       +
               PURGE=QUIESCE,       .. FINISH UP I/O IN PROGRESS       +
               SF=L                 .. LIST FORM
ATTCHL   EQU   *-ATTCHI
ENQI     ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L
ENQL     EQU   *-ENQI
DEQI     ENQ   (QNAME,RNAME,E,,STEP),MF=L
DEQL     EQU   *-DEQI
QNAME    DC    CL8'LIB'
RNAME    DC    CL8'COMMUSER'
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*                A                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSMAIN        DSECT
                LIBSAVE DSECT=NO
DXD_DWORD       DS    D
DXD_ATTACH_PARM DS    A              ATTACH PARM
DXD_ATTACH      DS    (ATTCHL)X      RESERVE ROOM FOR ATTACH LIST FORM
DXD_ENQ         DS    0F,(ENQL)X
DXD_DEQ         DS    0F,(DEQL)X

DXD_WAIT        DS    A
DXD_WAIT_SIZE   DS    F

DXD_RC          DS    H              RETURN CODE FROM SYSTEM MACRO(S)

DXD_TASK        DS    CL8            SUBTASK BEING ATTACH/DETACHED

DXD_DD          DS    X              DD'S PRESENT
$DD_LIBIN       EQU   X'80'          .. LIBIN PRESENT
$DD_LIBPRT      EQU   X'40'          .. LIBPRT PRESENT
$DD_LIBHIST     EQU   X'20'          .. LIBHIST PRESENT

DXD_SNAP        DS    X
$SNAPPED        EQU   X'80'
                PRTBLOK  DSECT=NO
                LIBFUNC  DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     OPTDSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         XUSRBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DD_DSECT      DSECT
DD_NAME       DS    CL8
DD_FLAG       DS    X
$DD_REQUIRED  EQU   X'80'
DD_ID         DS    X
DD_DSECT_L    EQU   *-DD_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGEXLST AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   LIST=NO
         IKJTCB   LIST=NO
         IEFTIOT1
         COPY     REGEQU
         END      LIBSMAIN
./ ADD NAME=LIBSPARM 0100-09250-09250-0919-00755-00755-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: LIBSPARM                                              *
*                                                                     *
*   This module interprets the control statements entered via LIBIN.  *
*   Since the control statements are only read once, this module is   *
*   linked separately.  LIBSMAIN issues a LOAD, then links to this,   *
*   and then DELETEs it.  This frees up the storage that would        *
*   otherwise be wasted by having code that is only used at start-up. *
*                                                                     *
* ------------------------------------------------------------------- *
LIBSPARM CSECT
LIBSPARM AMODE 31
LIBSPARM RMODE ANY
         USING LIBSPARM,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE CALLER'S REGISTERS
         LR    R12,R15                        SET BASE
         B     PARM0000
         DC    CL8'LIBSPARM'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
PARM0000 DS    0H
         GETMAIN RU,                          STORAGE FOR WORK AREA    +
               LV=WORKAREA_L,                 .. AMOUNT REQUIRED       +
               LOC=BELOW                      .. FROM BELOW THE LINE
         ST    R1,8(R13)                      CHAIN TO PREVIOUS
         ST    R13,4(R1)                      CHAIN PREVIOUS TO OURS
         LR    R13,R1                         SET SAVE AREA ADDRESS
         USING WORKAREA,R13
         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK
         MVI   PRTCC,C' '                     INITIALIZE PRINT
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   WORKOCPL(OPENL),OPENI          COPY LIST FORM
         MVC   WORKDCB(DCBL),DCBI             INITIAILZE
         OPEN  (WORKDCB,INPUT),                                        +
               MODE=31,                                                +
               MF=(E,WORKOCPL)
PARM0010 DS    0H
         ITRACE ID=READCARD
         GET   WORKDCB,CARDDATA               READ A CONTROL STATEMENT
         MVC   PRTMSGID(MSG01L),MSG01
         MVC   PRTMSGID+(MSG01D-MSG01)(L'MSG01D),CARDDATA
         MVI   PRTCMD,$PRTASIS                PRINT 'AS IS'
         BAL   R9,PRT0000                     PRINT
         CLI   CARDDATA,C'*'                  COMMENT?
         BE    PARM0010                       YES
         CLC   ABNDSTMT,CARDDATA              ABEND STATEMENT?
         BE    ABND0000                       YES
         CLC   APPLSTMT,CARDDATA              APPLID STATEMENT?
         BE    APPL0000                       YES
         CLC   LIBSTMT,CARDDATA               LIBRARY STATEMENT?
         BE    LIB0000                        YES
         CLC   PORTSTMT,CARDDATA              PORT NUMBER STATEMENT?
         BE    PORT0000                       YES
         CLC   SNPCSTMT,CARDDATA              SNAP SYSOUT STATEMENT?
         BE    SNPC0000                       YES
         CLC   SYSNSTMT,CARDDATA              SYSTEM NAME STATEMENT?
         BE    SYSN0000                       YES
         CLC   XUSRSTMT,CARDDATA              EXTERNAL USER STATEMENT?
         BE    XUSR0000                       YES
         ITRACE ID=INVALID                    INVALID STATEMENT
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG02L),MSG02
         BAL   R9,PRT0000                     PRINT ERROR MESSAGE
         B     PARM0010                       READ NEXT STATEMENT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
PARM0100 DS    0H
         ITRACE ID=EOF
         MVC   WORKOCPL(CLOSEL),CLOSEI
         CLOSE WORKDCB,                       CLOSE THE DCB            +
               MODE=31,                                                +
               MF=(E,WORKOCPL)
         TM    COMM_FLAGS,$ABORT              ABORT FLAG SET?
         BO    EXIT0000                       YES.. EXIT NOW
         CLC   COMM_APPL_NAME,COMM_BLANKS     APPL NAME BLANK?
         BNE   EXIT0000                       NO
         OC    COMM_PORT,COMM_PORT            PORT NUMBER ZERO?
         BNZ   EXIT0000                       YES
         ITRACE ID=NO_NET
         MVC   PRTMSGID(MSG03L),MSG03
         BAL   R9,PRT0000                     PRINT MESSAGE
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     EXIT0000                       AND EXIT
*---------------------------------------------------------------------*
*        Process ABEND statement                                      *
*---------------------------------------------------------------------*
ABND0000 DS    0H
         ITRACE ID=SETABEND                   ABEND STATEMENT PROCESSED
         OI    COMM_FLAGS,$ABEND              SET ABEND FLAG
         B     PARM0010                       READ NEXT STATEMENT
*---------------------------------------------------------------------*
*        Process APPLID statement                                     *
*---------------------------------------------------------------------*
APPL0000 DS    0H
         ITRACE ID=APPLID                     APPLID BEING PROCESSED
         CLC   COMM_APPL_NAME,COMM_BLANKS     APPLID ALREADY SPECIFIED?
         BNE   APPL0030                       YES
         LA    R1,CARDDATA+L'APPLSTMT         APPL NAME
         ST    R1,PARSEIN                     SET INPUT DATA ADDRESS
         LA    R1,72-L'APPLSTMT               MAXIMUM INPUT LENGTH
         STH   R1,PARSEIL                     SET INPUT LENGTH
         LA    R1,8                           MAXIMUM CHARACTERS
         STH   R1,PARSEOL                     MAXIMUM OUTPUT LENGTH
         BAL   R9,PARSE000                    LINK TO PARSE
         OC    PARSEOL,PARSEOL                NAME LENGTH ZERO?
         BZ    APPL0010                       YES
         CLI   PARSEDLM,C' '                  STOPPED ON A BLANK?
         BNE   APPL0020                       NO.. NAME IS TOO LONG
         ITRACE ID=GOODAPPL                   APPL LENGTH IS OK
         MVC   COMM_APPL_NAME,PARSEOUT        SAVE APPL NAME
         B     PARM0010                       READ NEXT STATEMENT
APPL0010 DS    0H
         ITRACE ID=NOAPPL                     APPL NAME OMITTED
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG04L),MSG04         APPL NAME OMITTED
         BAL   R9,PRT0000                     PRINT
         B     PARM0010                       READ NEXT STATEMENT
APPL0020 DS    0H
         ITRACE ID=LONGAPPL                   APPL NAME IS TOO LONG
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG05L),MSG05         APPL NAME IS TOO LONG
         BAL   R9,PRT0000                     PRINT
         B     PARM0010                       READ NEXT STATEMENT
APPL0030 DS    0H
         ITRACE ID=DUPAPPL                    DUPLICATE APPL STATEMENT
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG06L),MSG06
         BAL   R9,PRT0000                     PRINT
         B     PARM0010                       READ NEXT STATEMENT
*---------------------------------------------------------------------*
*        PROCESS LIBRARY STATEMENT                                    *
*---------------------------------------------------------------------*
LIB0000  DS    0H
         ITRACE ID=LIBRARY
         MVI   WORKFLAG,0                     TURN OFF FLAGS
         MVC   WORKLIB,COMM_BLANKS
         MVC   WORKDSN,COMM_BLANKS
         LA    R1,CARDDATA+L'LIBSTMT          FIRST CHAR OF NAME
         ST    R1,PARSEIN                     PASS ADDR TO PARSER
         LA    R1,72-L'LIBSTMT                INITIAL LENGTH
         STH   R1,PARSEIL                     SET LENGTH
         LA    R1,8                           MAXIMUM NAME LENGTH
         STH   R1,PARSEOL                     PASS LENGTH TO PARSER
         BAL   R9,PARSE000                    PARSE OFF LIBRARY NAME
         OC    PARSEOL,PARSEOL                ANYTHING?
         BZ    LIB0120                        NO
         CLI   PARSEDLM,C' '                  STOP ON A BLANK?
         BE    LIB0140                        YES
         CLI   PARSEDLM,C','                  STOP ON A COMMA?
         BNE   LIB0140                        NO
         MVC   WORKLIB,PARSEOUT               SAVE LIBRARY NAME
         LA    R1,8                           MAXIMUM LENGTH
         STH   R1,PARSEOL                     SET LENGTH
         BAL   R9,PARSE000                    PARSE OUT NEXT KEYWORD
         OC    PARSEOL,PARSEOL                ANYTHING?
         BZ    LIB0140                        NO
         CLC   DSNKYWD,PARSEOUT               DSN KEYWORD?
         BE    LIB0010                        YES
         CLC   OPENKYWD,PARSEOUT              OPEN KEYWORD?
         BE    LIB0020                        YES
         ITRACE ID=BADKEY
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG21L),MSG21
         BAL   R9,PRT0000                     PRINT
         B     PARM0010                       READ NEXT STATEMENT
LIB0010  DS    0H
         L     R1,PARSEIN                     REMAINING DATA ADDRESS
         MVC   WORKDSN,0(R1)                  COPY DATA SET NAME
         B     LIB0050
LIB0020  DS    0H
         L     R1,PARSEIN                     REMAINING DATA ADDRESS
         CLC   YES,0(R1)                      'YES'?
         BE    LIB0030
         CLC   NO,0(R1)                       'NO'
         BE    LIB0040
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG20L),MSG20
         BAL   R9,PRT0000                     PRINT
         B     PARM0010                       READ NEXT STATEMENT
LIB0030  DS    0H
         OI    WORKFLAG,$AUTOOPN              OPEN AT START UP
         B     LIB0050
LIB0040  DS    0H
         OI    WORKFLAG,$NOAUTO               DO NOT OPEN AT START UP
LIB0050  DS    0H
         ICM   R1,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         USING LIBBLOK,R1                     DEFINE BASE
         BZ    LIB0070                        NO LIBRARIES YET
LIB0060  DS    0H
         CLC   LIB_NAME,WORKLIB               CORRECT LIBRARY?
         BE    LIB0080                        YES
         ICM   R1,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   LIB0060
LIB0070  DS    0H
         GETMAIN RU,                                                   +
               LV=LIBBLOKL,                   .. SIZE                  +
               LOC=ANY                        ..
         ITRACE ID=NEWLIB,                                             +
               RDATA1=R1
         MVC   LIB_EYE,LIBID                  IDENTIFY THE BLOCK
         MVC   LIB_NEXT,COMM_LIBRARY_CHAIN    CHAIN EXISTING BLOCK(S)
         ST    R1,COMM_LIBRARY_CHAIN
         MVC   LIB_NAME,WORKLIB               SET LIBRARY NAME
         MVC   LIB_VSAM_DSN,COMM_BLANKS       CLEAR DATA SET NAME
         MVC   LIB_DESCRIPTION,INIT_DESCRIPTION
         MVC   LIB_ACB(ACBL),ACBI             COPY ACB
         MVI   LIB_STATUS,0                   SET STATUS BITS TO ZERO
LIB0080  DS    0H
         CLC   WORKDSN,COMM_BLANKS            DATA SET NAME?
         BNE   LIB0090                        YES
         TM    WORKFLAG,$AUTOOPN              OPEN?
         BO    LIB0100                        YES
         TM    WORKFLAG,$NOAUTO               DON'T OPEN?
         BO    LIB0110                        YES
         B     PARM0010                       READ NEXT STATEMENT
LIB0090  DS    0H
         CLC   LIB_VSAM_DSN,COMM_BLANKS       NAME ALREADY GIVEN?
         BNE   LIB0130                        YES
         MVC   LIB_VSAM_DSN,WORKDSN           SET VSAM DSN
         B     PARM0010
LIB0100  DS    0H
         OI    LIB_STATUS,$LIB_AUTO_OPEN
         B     PARM0010                       READ NEXT STATEMENT
LIB0110  DS    0H
         NI    LIB_STATUS,255-$LIB_AUTO_OPEN
         B     PARM0010                       READ NEXT STATEMENT
LIB0120  DS    0H
         ITRACE ID=NOKEYWD
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG17L),MSG17
         BAL   R9,PRT0000                     PRINT
         B     PARM0010                       READ NEXT STATEMENT
LIB0130  DS    0H
         ITRACE ID=DUPDSN
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG22L),MSG22
         BAL   R9,PRT0000                     PRINT
         B     PARM0010                       READ NEXT STATEMENT
LIB0140  DS    0H
         ITRACE ID=INCOMPLETE
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG24L),MSG24
         BAL   R9,PRT0000                     PRINT
         B     PARM0010                       READ NEXT STATEMENT
*---------------------------------------------------------------------*
*        PROCESS PORT NUMBER STATEMENT                                *
*---------------------------------------------------------------------*
PORT0000 DS    0H
         ITRACE ID=PORT
         OC    COMM_PORT,COMM_PORT            PORT ALREADY GIVEN?
         BNZ   PORT0010                       YES
         LA    R1,CARDDATA+L'PORTSTMT         FIRST DIGIT OF PORT
         ST    R1,PARSEIN                     SET INPUT DATA ADDRESS
         LA    R1,72-L'APPLSTMT               MAXIMUM INPUT LENGTH
         STH   R1,PARSEIL                     SET INPUT LENGTH
         LA    R1,8                           MAXIMUM IN NAME
         STH   R1,PARSEOL                     SET MAXIMUM OUTPUT LENGTH
         BAL   R9,PARSE000                    LINK TO PARSE
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,PARSEOL                   PORT NUMBER LENGTH
         BZ    PORT0020                       NO NUMBER PRESENT
         CH    R1,H15                         TOO MANY DIGITS?
         BH    PORT0030                       YES
         BCTR  R1,0                           ADJUST FOR PACK
         EX    R1,PORTPACK                    PACK PORT NUMBER
         CVB   R1,COMMDWRD                    CONVERT TO BINARY
         CH    R1,H1024                       PORT 1024 OR LESS?
         BL    PORT0040                       YES
         CLM   R1,3,H65535                    TOO LARGE?
         BH    PORT0050                       YES
         STCM  R1,3,COMM_PORT                 SET PORT NUMBER
         B     PARM0010                       READ NEXT PARM STATEMENT
PORT0010 DS    0H
         ITRACE ID=DUPPORT
         MVC   PRTMSGID(MSG25L),MSG25
         BAL   R9,PRT0000                     PRINT MESSAGE
         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     PARM0010                       READ NEXT STATEMENT
PORT0020 DS    0H
         ITRACE ID=SHRTPORT
         MVC   PRTMSGID(MSG26L),MSG26
         BAL   R9,PRT0000                     PRINT MESSAGE
         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     PARM0010                       READ NEXT STATEMENT
PORT0030 DS    0H
         ITRACE ID=LONGPORT
         MVC   PRTMSGID(MSG27L),MSG27
         BAL   R9,PRT0000                     PRINT MESSAGE
         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     PARM0010                       READ NEXT STATEMENT
PORT0040 DS    0H
         ITRACE ID=LOWPORT
         MVC   PRTMSGID(MSG28L),MSG28
         BAL   R9,PRT0000                     PRINT MESSAGE
         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     PARM0010                       READ NEXT STATEMENT
PORT0050 DS    0H
         ITRACE ID=HIGHPORT
         MVC   PRTMSGID(MSG29L),MSG29
         BAL   R9,PRT0000                     PRINT MESSAGE
         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     PARM0010                       READ NEXT STATEMENT
PORTPACK PACK  COMMDWRD,CARDDATA+L'PORTSTMT(0)
*---------------------------------------------------------------------*
*        PROCESS SNAPCLASS STATEMENT                                  *
*---------------------------------------------------------------------*
SNPC0000 DS    0H
         ITRACE ID=SNAPCLAS                   SNAPSHOT SYSOUT CLASS
         CLI   CARDDATA+L'SNPCSTMT,C' '       BLANK?
         BE    SNPC0010                       YES.. INVALID
         CLI   CARDDATA+L'SNPCSTMT+1,C' '     BLANK?
         BNE   SNPC0020                       NO.. INVALID
         MVC   COMM_SNAP_CLASS,CARDDATA+L'SNPCSTMT
         B     PARM0010                       READ NEXT STATEMENT
SNPC0010 DS    0H
         ITRACE ID=SNAPBLNK
         MVC   PRTMSGID(MSG07L),MSG07
         BAL   R9,PRT0000                     PRINT MESSAGE
         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     PARM0010                       READ NEXT STATEMENT
SNPC0020 DS    0H
         ITRACE ID=SNAPLONG
         MVC   PRTMSGID(MSG08L),MSG08
         BAL   R9,PRT0000                     PRINT MESSAGE
         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     PARM0010                       READ NEXT STATEMENT
*---------------------------------------------------------------------*
*        PROCESS SYSNAME STATEMENT                                    *
*---------------------------------------------------------------------*
SYSN0000 DS    0H
         ITRACE ID=SYSNAME                    SYSTEM NAME
         CLC   CARDDATA+L'SYSNSTMT(20),COMM_BLANKS
         BE    SYSN0010                       YES
         MVC   COMM_SYSTEM_NAME,CARDDATA+L'SYSNSTMT
         B     PARM0010                       READ NEXT STATEMENT
SYSN0010 DS    0H
         MVC   PRTMSGID(MSG09L),MSG09
         BAL   R9,PRT0000                     PRINT MESSAGE
         MVI   COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     PARM0010                       READ NEXT STATEMENT
*---------------------------------------------------------------------*
*        PROCESS XUSER STATEMENT                                      *
*---------------------------------------------------------------------*
XUSR0000 DS    0H
         ITRACE ID=XUSER                      XUSER STATEMENT PROCESSED
         LA    R1,CARDDATA+L'XUSRSTMT
         ST    R1,PARSEIN                     PARSE STARTING POINT
         LA    R1,72-L'XUSRSTMT               MAX INPUT LENGTH
         STH   R1,PARSEIL                     SET STARTING LENGTH
         LA    R1,4                           MAXIMUM OUTPUT LENGTH
         STH   R1,PARSEOL                     SET MAX OUTPUT LENGTH
         BAL   R9,PARSE000                    LINK TO PARSE
         OC    PARSEOL,PARSEOL                LENGTH ZERO?
         BZ    XUSR0050                       YES
         CLI   PARSEDLM,C' '                  STOP ON A BLANK?
         BE    XUSR0070                       YES
         CLI   PARSEDLM,C','                  STOP ON A COMMA?
         BNE   XUSR0060                       NO
         MVC   WORKWORK(4),PARSEOUT           SAVE SMF ID
         LA    R1,8                           MAXIMUM OUTPUT LENGTH
         STH   R1,PARSEOL                     SET OUTPUT LENGTH
         BAL   R9,PARSE000                    LINK TO PARSE
         OC    PARSEOL,PARSEOL                LENGTH ZERO?
         BZ    XUSR0070                       YES
         CLI   PARSEDLM,C' '                  STOP ON A BLANK?
         BE    XUSR0090                       YES
         CLI   PARSEDLM,C','                  STOP ON A COMMA?
         BNE   XUSR0080                       NO
         MVC   WORKWORK+4(8),PARSEOUT         SAVE USER ID
         LA    R1,8                           MAXIMUM OUTPUT LENGTH
         STH   R1,PARSEOL                     SET OUTPUT LENGTH
         BAL   R9,PARSE000                    LINK TO PARSE
         OC    PARSEOL,PARSEOL                LENGTH ZERO?
         BZ    XUSR0090                       YES
         CLI   PARSEDLM,C' '                  STOP ON A BLANK?
         BNE   XUSR0100                       NO
XUSR0020 DS    0H
         ITRACE ID=NEWXUSR                    ADDING A NEW XUSRBLOK
         GETMAIN RU,                          ACQUIRING XUSER BLOCK    +
               LV=XUSRL,                      .. SIZE                  +
               LOC=ANY                        .. FROM ANY AREA
         LA    R14,COMMXUSR                   CHAIN POINT
         USING XUSRBLOK,R5                    DEFINE XUSRBLOK BASE
XUSR0030 DS    0H
         ICM   R5,15,0(R14)                   NEXT XUSR BLOCK
         BZ    XUSR0040                       END OF CHAIN
         LA    R14,XUSRNEXT                   CHAIN POINT
         B     XUSR0030                       LOOP
XUSR0040 DS    0H
         ST    R1,0(R14)                      ADD NEW BLOCK TO CHAIN
         LR    R5,R1                          SET BASE
         XC    XUSRBLOK(XUSRL),XUSRBLOK
         MVC   XUSREYE,XUSRID                 SET EYECATCHER
         MVC   XUSRSMF,WORKWORK               COPY SMF ID
         MVC   XUSRID1,WORKWORK+4             COPY ID ON OTHER SYSTEM
         MVC   XUSRID2,PARSEOUT               COPY ID ON OUR SYSTEM
         B     PARM0010                       READ NEXT STATEMENT
XUSR0050 DS    0H
         ITRACE ID=NOSMF
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG10L),MSG10
         BAL   R9,PRT0000                     PRINT MESSAGE
         B     PARM0010                       READ NEXT STATEMENT
XUSR0060 DS    0H
         ITRACE ID=SMFLONG
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG11L),MSG11
         BAL   R9,PRT0000                     PRINT MESSAGE
         B     PARM0010                       READ NEXT STATEMENT
XUSR0070 DS    0H
         ITRACE ID=NOID1
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG12L),MSG12
         BAL   R9,PRT0000                     PRINT MESSAGE
         B     PARM0010                       READ NEXT STATEMENT
XUSR0080 DS    0H
         ITRACE ID=ID1LONG
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG13L),MSG13
         BAL   R9,PRT0000                     PRINT MESSAGE
         B     PARM0010                       READ NEXT STATEMENT
XUSR0090 DS    0H
         ITRACE ID=NOID2
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG14L),MSG14
         BAL   R9,PRT0000                     PRINT MESSAGE
         B     PARM0010                       READ NEXT STATEMENT
XUSR0100 DS    0H
         ITRACE ID=ID2LONG
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG15L),MSG15
         BAL   R9,PRT0000                     PRINT MESSAGE
         B     PARM0010                       READ NEXT STATEMENT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         MVC   PRTMSGID(MSG16L),MSG16
         BAL   R9,PRT0000                     PRINT
         B     PARM0010                       READ NEXT STATEMENT
ERR0020  DS    0H
         ITRACE ID=DEVNFND
         ABEND 1,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
*  Parsing                                                            *
*                                                                     *
*  At entry:                                                          *
*     PARSEIN  must be set to the data starting address               *
*     PARSEIL  must be set to the data length                         *
*     PARSEOL  must be set to the maximum output length               *
*                                                                     *
*  At exit:                                                           *
*     PARSEIN  will be set the address of the byte following the      *
*              delimiter that stopped the scan                        *
*     PARSEIL  will be set to the length of the data following the    *
*              delimiter                                              *
*     PARSEOUT will be the data up to but not including the delimiter *
*     PARSEOL  will be set to the length of the data in PARSEOUT      *
*     PARSEDLM will be set to the delimiter that stopped the scan or  *
*              to a null if the scan stopped due to end of data       *
*                                                                     *
* ------------------------------------------------------------------- *
PARSE000 DS    0H
         STM   R1,R5,PARSESAV                 SAVE REGISTERS
         ITRACE ID=PARSE,                     STARTING A PARSE         +
               DATA1=PARSEIN,                 .. STARTING ADDRESS      +
               DATA2=PARSEIL                  ..
         MVC   PARSEOUT,COMM_BLANKS           CLEAR OUTPUT DATA
         LH    R1,PARSEIL                     INPUT DATA LENGTH
         LH    R2,PARSEOL                     MAXIMUM OUTPUT LENGTH
         L     R3,PARSEIN                     INPUT DATA ADDRESS
         LA    R4,PARSEOUT                    OUTPUT DATA ADDRESS
         SR    R5,R5                          INITIALIZE FOR LENGTH
         MVI   PARSEDLM,0                     SET DELIMITER TO A NULL
         LTR   R1,R1                          ANY DATA LEFT?
         BZ    PARSE050                       NO
PARSE010 DS    0H
         CLI   0(R3),C' '                     BLANK?
         BNE   PARSE020                       NO
         LA    R3,1(R3)                       NEXT
         BCT   R1,PARSE010                    LOOP
         B     PARSE050
PARSE020 DS    0H
         CLI   0(R3),C' '                     BLANK?
         BE    PARSE040                       YES
         CLI   0(R3),C','                     COMMA?
         BE    PARSE040                       YES
         CLI   0(R3),C'='                     EQUALS SIGN?
         BE    PARSE040                       YES
         MVC   0(1,R4),0(R3)                  COPY TO OUTPUT
         LA    R3,1(R3)                       NEXT
         LA    R4,1(R4)                       NEXT
         LA    R5,1(R5)                       PLUS 1 BYTE OF LENGTH
         BCT   R1,PARSE030                    MINUS 1 BYTE OF INPUT
         B     PARSE050                       FORCE EXIT
PARSE030 DS    0H
         BCT   R2,PARSE020                    LOOP
         CLI   0(R3),C' '                     BLANK?
         BE    PARSE040                       YES
         CLI   0(R3),C','                     COMMA?
         BNE   PARSE050                       NO
PARSE040 DS    0H
         MVC   PARSEDLM,0(R3)                 SAVE DELIMITER
         LA    R3,1(R3)                       SKIP DELIMITER
         BCTR  R1,0                           MINUS BYTE FOR DELIMITER
PARSE050 DS    0H
         STH   R1,PARSEIL                     SAVE INPUT LENGTH LEFT
         STH   R5,PARSEOL                     SAVE OUTPUT LENGTH
         ST    R3,PARSEIN                     SAVE INPUT ENDING POINT
         ITRACE ID=PARSEOUT,                  PARSE ENDING             +
               DATA1=PARSEOUT,                .. PART OF OUTPUT DATA   +
               DATA2=PARSEOL                  .. OUTPUT LENGTH
         LM    R1,R5,PARSESAV                 RESTORE SAVED REGISTERS
         BR    R9                             EXIT
* ------------------------------------------------------------------- *
*        PRINTING                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE
         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE
         ST    R14,PRTNEXT-PRTBLOK(R1)
         CS    R14,R1,COMM_PRINT_REQ
         BC    4,PRT0010
         BR    R9                             RETURN
* ------------------------------------------------------------------- *
*        EXIT                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT                       EXITING
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         FREEMAIN RU,                         FREEMAIN WORK AREA       +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680
         SR    R15,R15                        RETURN CODE               ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
ACBI     ACB   AM=VSAM,                                                +
               DDNAME=VSAMFILE,                                        +
               MACRF=(KEY,DIR,SEQ,OUT)
DCBI     DCB   DSORG=PS,                                               +
               DDNAME=LIBIN,                                           +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               DCBE=DCBEI,                                             +
               MACRF=GM
DCBL     EQU   *-DCBI
DCBEI    DCBE  EODAD=PARM0100
DCBEL    EQU   *-DCBEI
OPENI    OPEN  (*,INPUT),MF=L,MODE=31
OPENL    EQU   *-OPENI
CLOSEI   CLOSE *,MF=L,MODE=31
CLOSEL   EQU   *-CLOSEI
H6       DC    H'6'                  CONSTANT
H8       DC    H'8'                  CONSTANT
H15      DC    H'15'                 CONSTANT
H1024    DC    H'1024'               CONSTANT
H65535   DC    0H,X'FFFE'            CONSTANT
PRTID    DC    CL8'PRTBLOK'
LIBID    DC    CL8'LIBBLOK'
XUSRID   DC    CL8'XUSRBLOK'
ABNDSTMT DC    C'ABEND '             ABEND CONTROL STATEMENT
APPLSTMT DC    C'APPLID='            APPLID STATEMENT
LIBSTMT  DC    C'LIBRARY='           LIBRARY STATEMENT
PORTSTMT DC    C'PORT='              TCP/IP PORT NUMBER
SNPCSTMT DC    C'SNAPCLASS='         SNAPSHOT SYSOUT CLASS STATEMENT
SYSNSTMT DC    C'SYSNAME='           SYSTEM NAME STATEMENT
XUSRSTMT DC    C'XUSER='             EXTERNAL USER STATEMENT
DSNKYWD  DC    C'DSN'
OPENKYWD DC    C'OPEN'
NO       DC    C'NO '
YES      DC    C'YES '

INIT_DESCRIPTION   DC CL80'<No description until first OPEN>'

MSG01    DS    0C
         DC    CL11'LIBSPARM01I'
         DC    C'Control statement:'
         DC    C' '
MSG01D   DC    CL80' '
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'LIBSPARM02E'
         DC    C'Invalid control statement.'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    CL11'LIBSPARM03E'
         DC    C'You must specify ''APPLID'', ''PORT'', or both'
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    CL11'LIBSPARM04E'
         DC    C'APPLID omitted.'
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    CL11'LIBSPARM05E'
         DC    C'APPLID is too long.'
MSG05L   EQU   *-MSG05
MSG06    DS    0C
         DC    CL11'LIBSPARM06E'
         DC    C'Duplicate APPLID statement.'
MSG06L   EQU   *-MSG06
MSG07    DS    0C
         DC    CL11'LIBSPARM07E'
         DC    C'SNAPSHOT SYSOUT class cannot be blank.'
MSG07L   EQU   *-MSG07
MSG08    DS    0C
         DC    CL11'LIBSPARM08E'
         DC    C'SNAPSHOT SYSOUT class too long.'
MSG08L   EQU   *-MSG08
MSG09    DS    0C
         DC    CL11'LIBSPARM09E'
         DC    C'SYSTEM name cannot be blank.'
MSG09L   EQU   *-MSG09
MSG10    DS    0C
         DC    CL11'LIBSPARM10E'
         DC    C'SMF name is required on XUSER statements.'
MSG10L   EQU   *-MSG10
MSG11    DS    0C
         DC    CL11'LIBSPARM11E'
         DC    C'SMF name on XUSER statement is too long.'
MSG11L   EQU   *-MSG11
MSG12    DS    0C
         DC    CL11'LIBSPARM12E'
         DC    C'XUSER user id omitted.'
MSG12L   EQU   *-MSG12
MSG13    DS    0C
         DC    CL11'LIBSPARM13E'
         DC    C'XUSER USER ID is too long.'
MSG13L   EQU   *-MSG13
MSG14    DS    0C
         DC    CL11'LIBSPARM14E'
         DC    C'Local user id omitted.'
MSG14L   EQU   *-MSG14
MSG15    DS    0C
         DC    CL11'LIBSPARM15E'
         DC    C'Local user id is too long.'
MSG15L   EQU   *-MSG15
MSG16    DS    0C
         DC    CL11'LIBSPARM16E'
         DC    C'Extraneous data on control statement.'
MSG16L   EQU   *-MSG16
MSG17    DS    0C
         DC    CL11'LIBSPARM17E'
         DC    C'Library name omitted on LIBRARY statement.'
MSG17L   EQU   *-MSG17
MSG18    DS    0C
         DC    CL11'LIBSPARM18E'
         DC    C'VSAM cluster name omitted on LIBRARY statement.'
MSG18L   EQU   *-MSG18
MSG19    DS    0C
         DC    CL11'LIBSPARM19E'
         DC    C'Library name too long.  8 characters max.'
MSG19L   EQU   *-MSG19
MSG20    DS    0C
         DC    CL11'LIBSPARM20E'
         DC    C'Unknown keyword on LIBRARY statement.'
MSG20L   EQU   *-MSG20
MSG21    DS    0C
         DC    CL11'LIBSPARM21E'
         DC    C'Invalid keyword on LIBRARY statement'
MSG21L   EQU   *-MSG21
MSG22    DS    0C
         DC    CL11'LIBSPARM22E'
         DC    C'Duplicate data set name for this library'
MSG22L   EQU   *-MSG22
MSG24    DS    0C
         DC    CL11'LIBSPARM24E'
         DC    C'Incomplete LIBRARY statement'
MSG24L   EQU   *-MSG24
MSG25    DS    0C
         DC    CL11'LIBSPARM25E'
         DC    C'Duplicate PORT statement'
MSG25L   EQU   *-MSG25
MSG26    DS    0C
         DC    CL11'LIBSPARM26E'
         DC    C'PORT number must be at least 1 digit'
MSG26L   EQU   *-MSG26
MSG27    DS    0C
         DC    CL11'LIBSPARM27E'
         DC    C'PORT number has too many digits'
MSG27L   EQU   *-MSG27
MSG28    DS    0C
         DC    CL11'LIBSPARM28E'
         DC    C'PORT number too low (1-1024 are reserved)'
MSG28L   EQU   *-MSG28
MSG29    DS    0C
         DC    CL11'LIBSPARM29E'
         DC    C'PORT number too high (must be 1025-65535)'
MSG29L   EQU   *-MSG29
         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
*                                                                    *
*                                                                    *
* ------------------------------------------------------------------ *
WORKAREA   DSECT
           LIBSAVE DSECT=NO            REGISTER SAVE AREA
           PRTBLOK DSECT=NO
PARSESAV   DS    5F                    REGISTER SAVE AREA FOR PARSE
PARSEIN    DS    A                     PARSE DATA INPUT ADDRESS
WORKOCPL   DS    (OPENL)X
WORKDCB    DS    (DCBL)X
PARSEIL    DS    H                     LENGTH OF DATA AT PARSE IN
PARSEOL    DS    H                     LENGTH OF DATA IN PARSE OUT
PARSEOUT   DS    CL80                  OUTPUT FROM PARSE
CARDDATA   DS    CL80                  CONTROL STATEMENT I/O AREA
PARSEDLM   DS    C                     DELIMITER THAT STOPPED PARSE
WORKWORK   DS    CL16
WORKLIB    DS    CL8                   LIBRARY NAME
WORKDSN    DS    CL44                  LIBRARY VSAM CLUSTER NAME
WORKFLAG   DS    X
$AUTOOPN   EQU   X'80'
$NOAUTO    EQU   X'40'
WORKAREA_L EQU   *-WORKAREA
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         XUSRBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  LIBSPARM
./ ADD NAME=LIBSPFD  0100-09250-09250-0919-00002-00002-00000-SOURCE
       LIBSPFD TYPE=CSECT
       END     LIBSPFD
./ ADD NAME=LIBSPFV  0100-09250-09250-0919-00207-00207-00000-SOURCE
LIBSPFV  CSECT
         VDEF  BASE=LIBSPFD
         VDEF  NAME=PUSER,           DEFINE VARIABLE                   +
               DATA=SPF_USER,        .. FIELD NAME IN LIBSPFD          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PSYSN,           DEFINE VARIABLE                   +
               DATA=SPF_SYSTEM_NAME, .. FIELD NAME IN LIBSPFD          +
               LENGTH=20,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSG1I,          DEFINE VARIABLE                   +
               DATA=SPF_MSG1_ID,     .. FIELD NAME IN LIBSPFD          +
               LENGTH=11,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSG2I,          DEFINE VARIABLE                   +
               DATA=SPF_MSG2_ID,     .. FIELD NAME IN LIBSPFD          +
               LENGTH=11,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSG3I,          DEFINE VARIABLE                   +
               DATA=SPF_MSG3_ID,     .. FIELD NAME IN LIBSPFD          +
               LENGTH=11,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSG4I,          DEFINE VARIABLE                   +
               DATA=SPF_MSG4_ID,     .. FIELD NAME IN LIBSPFD          +
               LENGTH=11,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSG5I,          DEFINE VARIABLE                   +
               DATA=SPF_MSG5_ID,     .. FIELD NAME IN LIBSPFD          +
               LENGTH=11,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PLIB,            DEFINE VARIABLE                   +
               DATA=SPF_LIB_NAME,    .. FIELD NAME IN LIBSPFD          +
               LENGTH=08,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PDESC,           DEFINE VARIABLE                   +
               DATA=SPF_LIB_DESC,    .. FIELD NAME IN LIBSPFD          +
               LENGTH=40,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMEM,            DEFINE VARIABLE                   +
               DATA=SPF_MEM_NAME,    .. FIELD NAME IN LIBSPFD          +
               LENGTH=08,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PVER,            DEFINE VARIABLE                   +
               DATA=SPF_MEM_VERSION, .. FIELD NAME IN LIBSPFD          +
               LENGTH=05,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PUDSN,           DEFINE VARIABLE                   +
               DATA=SPF_USER_DSN,    .. FIELD NAME IN LIBSPFD          +
               LENGTH=44,            .. LENGTH                         +
               FLAGS=$VAR_PROFILE,   .. SAVE THIS IN USER'S PROFILE    +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PUMEM,           DEFINE VARIABLE                   +
               DATA=SPF_USER_MEMBER, .. FIELD NAME IN LIBSPFD          +
               LENGTH=08,            .. LENGTH                         +
               FLAGS=$VAR_PROFILE,   .. SAVE THIS IN USER'S PROFILE    +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PIO,             DEFINE VARIABLE                   +
               DATA=SPF_IN_OUT_STATUS,  FIELD NAME IN LIBSPFD          +
               LENGTH=03,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=POUTUSER,        DEFINE VARIABLE                   +
               DATA=SPF_OUT_USER,    .. FIELD NAME IN LIBSPFD          +
               LENGTH=08,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=POWNER,          DEFINE VARIABLE                   +
               DATA=SPF_OWNER,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=08,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=POPT,            DEFINE VARIABLE                   +
               DATA=SPF_OPTION,      .. FIELD NAME IN LIBSPFD          +
               LENGTH=04,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PUNIT,           DEFINE VARIABLE                   +
               DATA=SPF_UNIT,        .. FIELD NAME IN LIBSPFD          +
               LENGTH=08,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSG1T,          DEFINE VARIABLE                   +
               DATA=SPF_MSG1_TEXT,   .. FIELD NAME IN LIBSPFD          +
               LENGTH=59,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSG2T,          DEFINE VARIABLE                   +
               DATA=SPF_MSG2_TEXT,   .. FIELD NAME IN LIBSPFD          +
               LENGTH=59,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSG3T,          DEFINE VARIABLE                   +
               DATA=SPF_MSG3_TEXT,   .. FIELD NAME IN LIBSPFD          +
               LENGTH=59,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSG4T,          DEFINE VARIABLE                   +
               DATA=SPF_MSG4_TEXT,   .. FIELD NAME IN LIBSPFD          +
               LENGTH=59,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMSG5T,          DEFINE VARIABLE                   +
               DATA=SPF_MSG5_TEXT,   .. FIELD NAME IN LIBSPFD          +
               LENGTH=59,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMISC1,          DEFINE VARIABLE                   +
               DATA=SPF_MISC1,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=79,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMISC2,          DEFINE VARIABLE                   +
               DATA=SPF_MISC2,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=79,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMISC3,          DEFINE VARIABLE                   +
               DATA=SPF_MISC3,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=79,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMISC4,          DEFINE VARIABLE                   +
               DATA=SPF_MISC4,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=79,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMISC5,          DEFINE VARIABLE                   +
               DATA=SPF_MISC5,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=79,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMISC6,          DEFINE VARIABLE                   +
               DATA=SPF_MISC6,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=79,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMISC7,          DEFINE VARIABLE                   +
               DATA=SPF_MISC7,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=79,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMISC8,          DEFINE VARIABLE                   +
               DATA=SPF_MISC8,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=79,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMISC9,          DEFINE VARIABLE                   +
               DATA=SPF_MISC9,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=79,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PMISC10,         DEFINE VARIABLE                   +
               DATA=SPF_MISC10,      .. FIELD NAME IN LIBSPFD          +
               LENGTH=79,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=ZCMD,            DEFINE VARIABLE                   +
               DATA=SPF_ZCMD,        .. FIELD NAME IN LIBSPFD          +
               LENGTH=80,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=LVLINE,          DEFINE VARIABLE                   +
               DATA=SPF_LVLINE,      .. FIELD NAME IN LIBSPFD          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VCOL,            DEFINE VARIABLE                   +
               DATA=SPF_VCOL,        .. FIELD NAME IN LIBSPFD          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VDEPTH,          DEFINE VARIABLE                   +
               DATA=SPF_VDEPTH,      .. FIELD NAME IN LIBSPFD          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VROW,            DEFINE VARIABLE                   +
               DATA=SPF_VCOL,        .. FIELD NAME IN LIBSPFD          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=VTYPE,           DEFINE VARIABLE                   +
               DATA=SPF_VTYPE,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=VWIDTH,          DEFINE VARIABLE                   +
               DATA=SPF_VWIDTH,      .. FIELD NAME IN LIBSPFD          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=ZSCROLLN,        DEFINE VARIABLE                   +
               DATA=SPF_ZSCROLLN,    .. FIELD NAME IN LIBSPFD          +
               LENGTH=4,             .. LENGTH                         +
               FORM=FIXED            .. FORMAT
         VDEF  NAME=ZSCROLLA,        DEFINE VARIABLE                   +
               DATA=SPF_ZSCROLLA,    .. FIELD NAME IN LIBSPFD          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=ZVERB,           DEFINE VARIABLE                   +
               DATA=SPF_ZVERB,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PCOMM1,          DEFINE VARIABLE                   +
               DATA=SPF_COMM1,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=80,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PCOMM2,          DEFINE VARIABLE                   +
               DATA=SPF_COMM2,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=80,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PCOMM3,          DEFINE VARIABLE                   +
               DATA=SPF_COMM3,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=80,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PCOMM4,          DEFINE VARIABLE                   +
               DATA=SPF_COMM4,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=80,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=PCOMM5,          DEFINE VARIABLE                   +
               DATA=SPF_COMM5,       .. FIELD NAME IN LIBSPFD          +
               LENGTH=80,            .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         VDEF  NAME=DATAID,          DEFINE VARIABLE                   +
               DATA=SPF_DATA_ID,     .. FIELD NAME IN LIBSPFD          +
               LENGTH=8,             .. LENGTH                         +
               FORM=CHAR             .. FORMAT
         DC    X'FF'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD TYPE=DSECT
         COPY    VARDSECT
         END     LIBSPFV
./ ADD NAME=LIBSPSUB 0100-09250-09250-0919-00284-00284-00000-SOURCE
         TITLE 'LIBSPSUB    PRINT SUBTASK'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: LIBSPSUB                                              *
*                                                                     *
*   The LIBRARIAN consists of multiple subtasks.  Hopefully this will *
*   allow multiple users to use the LIBRARIAN without impacting each  *
*   other.  This subtask allows all other subtasks to print to one    *
*   DCB (SYSPRINT).                                                   *
*                                                                     *
*   This subtask performs all printing for all STC tasks.             *
*                                                                     *
* ------------------------------------------------------------------- *
LIBSPSUB CSECT
LIBSPSUB AMODE 31
LIBSPSUB RMODE ANY
         USING LIBSPSUB,R12                   DEFINE BASE
         USING PRTBLOK,R7                     DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                CHAIN REGISTERS
         LR    R12,R15                        COPY ENTRY POINT ADDRESS
         B     PRT0000
         DC    CL8'LIBSPSUB'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
PRT0000  DS    0H
         L     R11,0(R1)                      LOAD LIBSCOMM'S ADDRESS
         GETMAIN RU,                          STORAGE FOR WORK AREA    +
               LV=WORKAREA_L,                                          +
               LOC=BELOW
         USING WORKAREA,R1                    DEFINE BASE
         XC    WORKAREA+000(256),WORKAREA+000
         XC    WORKAREA+256(WORKAREA_L-256),WORKAREA+000
         ST    R13,4(R1)                      CHAIN PREVIOUS SAVE AREA
         ST    R1,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         DROP  R1
         USING WORKAREA,R13                   DEFINE BASE
         ST    R13,COMM_PRINT_DXD             SET WORK AREA ADDRESS
         ITRACE ID=INIT,                                               +
               RDATA1=R13
         MVC   WKDCB(DCBL),DCBI               INITIALIZE DCB
         MVI   WKCC,C' '                      INITIALIZE CC
         MVC   WKDATE(PRTLRECL-1),WKCC
         MVC   WKOCPL(OPENL),OPENI            INITIALIZE OPEN/CLOSE
         ZAP   WKLINE,P0                      INITIALIZE LINE NUMBER
         ZAP   WKPAGE,P0                      INITIALIZE PAGE NUMBER
         OPEN  (WKDCB,OUTPUT),                                         +
               MF=(E,WKOCPL),                                          +
               MODE=31
         B     PRT0030                        FORCE A CHECK OF QUEUE
PRT0010  DS    0H
         TM    COMM_EOJ_PHASE,$EOJ4           SHUTDOWN PHASE 4?
         BO    EXIT0000                       YES.. IT'S MILLER TIME
         TM    COMM_PRINT_WORK_ECB,X'40'      ECB ALREADY POSTED?
         BO    PRT0020                        GET BUSY
         ITRACE ID=WORKWAIT,                  WAITING FOR WORK         +
               RDATA1=R1                      .. ECB'S ADDRESS
         WAIT  ECB=COMM_PRINT_WORK_ECB        WAIT FOR WORK TO DO ECB
         ITRACE ID=WOKEUP
PRT0020  DS    0H
         XC    COMM_PRINT_WORK_ECB,COMM_PRINT_WORK_ECB
PRT0030  DS    0H
         SR    R1,R1                          CLEAR REGISTER
PRT0040  DS    0H
         ICM   R2,15,COMM_PRINT_REQ           FIRST REQUEST BLOCK
         BZ    PRT0010                        NOTHING ON CHAIN
         CS    R2,R1,COMM_PRINT_REQ           GET REQUEST CHAIN
         BC    4,PRT0040
         USING PRTBLOK,R10                    DEFINE BASE
         ITRACE ID=HAVEQ,                     WE HAVE THE QUEUE        +
               RDATA1=R2                      .. FIRST (LAST) BLOCK
         LR    R3,R2                          COPY ADDRESS
         LA    R1,4                           INITIALIZE GETMAIN LENGTH
PRT0050  DS    0H
         ICM   R3,15,PRTNEXT-PRTBLOK(R3)
         BZ    PRT0060                        NEXT BLOCK'S ADDRESS
         ITRACE ID=VEC1,                                               +
               RDATA1=R3,                                              +
               RDATA2=R1
         LA    R1,4(R1)                       ADD TO VECTOR LENGTH
         B     PRT0050                        LOOP
PRT0060  DS    0H
         ITRACE ID=GETVEC,                                             +
               RDATA1=R1                      .. SIZE OF VECTOR LIST
         ST    R1,WKVECSZ                     SAVE VECTOR SIZE
         GETMAIN RU,                          GETMAIN STORAGE          +
               LV=(1),                                                 +
               LOC=ANY
         ST    R1,WKVECADR                    SAVE VECTOR ADDRESS
         ITRACE ID=VECADDR,                                            +
               RDATA1=R1                      .. VECTOR ADDRESS
PRT0070  DS    0H
         ITRACE ID=BLDVEC,                                             +
               RDATA1=R1,                     .. VECTOR ADDRESS        +
               RDATA2=R2                      .. PRTBLOK'S ADDRESS
         ST    R2,0(R1)                       SET ADDRESS
         ST    R1,WKVECCUR
         LA    R1,4(R1)                       NEXT
         ICM   R2,15,PRTNEXT-PRTBLOK(R2)
         BNZ   PRT0070
PRT0080  DS    0H
         L     R1,WKVECCUR
         L     R10,0(R1)                      PRTBLOK'S ADDRESS
         ITRACE ID=PRT,                                                +
               RDATA1=R1,                                              +
               RDATA2=R10
         CLI   PRTCMD,$PRTHEAD                FORCED HEADING?
         BE    PRT0170                        YES
         MVC   WKCC,PRTCC                     COPY CARRIAGE CONTROL
         TIME  DEC
         STM   R0,R1,WKTIMDAY                 SAVE TIME AND DATE
         MVC   WKTIME,TIMEEDWD                INITIALIZE WITH EDIT WORD
         ED    WKTIME,WKTIMDAY                EDIT TIME
         MVC   WKDATE,DATEEDWD                INITIALIZE WITH EDIT WORD
         AP    WKTIMDAY+4(4),P1900000
         ED    WKDATE,WKTIMDAY+5              EDIT DATE
         MVC   WKMSGID,PRTMSGID               COPY MESSAGE ID
         LA    R1,WKMSGID+(L'WKMSGID-1)
PRT0090  DS    0H
         CLI   0(R1),C' '                     BLANK?
         BNE   PRT0100                        NO
         BCT   R1,PRT0090                     LOOP
PRT0100  DS    0H
         CLI   0(R1),C'E'                     'ERROR' MESSAGE
         BNE   PRT0110
         MVI   WKMSGERR,C'*'                  FLAG ERROR MESSAGE
PRT0110  DS    0H
         CLI   PRTCMD,$PRTASIS                PRINT AS IS?
         BE    PRT0140                        YES
         LA    R1,WKDATA                      FIRST PRINT AREA BYTE
         LA    R2,PRTDATA                     PRINT OUTPUT AREA BYTE
         LA    R3,L'PRTDATA                   MAXIMUM LOOPS
PRT0120  DS    0H
         CLC   COMM_BLANKS(2),0(R2)           2 BLANKS IN A ROW?
         BE    PRT0130                        YES
         CLC   =C' )',0(R2)                   BLANK AND AN OPEN PAREN?
         BE    PRT0130                        YES
         CLC   =C' ,',0(R2)                   BLANK AND A COMMA?
         BE    PRT0130                        YES
         MVC   0(1,R1),0(R2)                  COPY TO OUTPUT AREA
         LA    R1,1(R1)                       NEXT OUTPUT BYTE
PRT0130  DS    0H
         LA    R2,1(R2)                       NEXT INPUT BYTE
         BCT   R3,PRT0120                     LOOP
         B     PRG0150
PRT0140  DS    0H
         MVC   WKDATA,PRTDATA                 COPY AS IS
PRG0150  DS    0H
         PUT   WKDCB,WKCC                     PRINT
         AP    WKLINE,P1                      ADD 1 TO LINE NUMBER
         CLI   WKCC,C' '                      SINGLE SPACE
         BE    PRT0160                        YES
         AP    WKLINE,P1                      ADD 1 TO LINE NUMBER
         CLI   WKCC,C'0'                      DOUBLE SPACE?
         BE    PRT0160                        YES
         AP    WKLINE,P1                      ADD 1 TO LINE NUMBER
PRT0160  DS    0H
         MVI   WKCC,C' '                      INITIALIZE CC
         MVC   WKDATE(PRTLRECL-1),WKCC
         CP    WKLINE,COMM_MAX_LINES          TIME FOR HEADING?
         BNH   PRT0200                        NOT YET
PRT0170  DS    0H
         AP    WKPAGE,P1                      ADD 1 TO PAGE NUMBER
         MVC   WKDATA(HEADINGL),HEADING
         MVC   WKDATA+(HEADPAGE-HEADING)(L'HEADPAGE),PAGEEDWD
         ED    WKDATA+(HEADPAGE-HEADING)(L'HEADPAGE),WKPAGE
         PUT   WKDCB,WKCC                     PRINT
         ZAP   WKLINE,P1                      RESET LINE NUMBER
         MVI   WKCC,C' '                      INITIALIZE CC
         MVC   WKDATE(PRTLRECL-1),WKCC
PRT0200  DS    0H
         ITRACE ID=FREEPRT,                                            +
               RDATA1=R10
         FREEMAIN RU,                                                  +
               A=(R10),                                                +
               LV=PRTBLOKL
         L     R1,WKVECCUR                    CURRENT ADDRESS IN VECTOR
         C     R1,WKVECADR                    AT FIRST ENTRY?
         BE    PRT0210                        YES
         SH    R1,H4                          BACK UP 1 ENTRY
         ST    R1,WKVECCUR                    SAVE CURRENT ADDRESS
         B     PRT0080                        PROCESS THIS PRTBLOK
PRT0210  DS    0H
         L     R0,WKVECSZ                     VECTOR SIZE
         ITRACE ID=FREEVEC,                                            +
               RDATA1=R1,                                              +
               RDATA2=R0
         FREEMAIN RU,                         FREE THE VECTOR          +
               A=(1),                                                  +
               LV=(0)
         B     PRT0020
* ------------------------------------------------------------------- *
*        EXIT                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         MVC   WKOCPL(CLOSEL),CLOSEI          COPY CLOSE LIST FORM
         CLOSE WKDCB,                         CLOSE DCB                +
               MF=(E,WKOCPL),                                          +
               MODE=31
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
PRTMVC   MVC   WKDATE(0),PRTDATA              COPY PRINT DATA
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
H4       DC    H'4'
DATEEDWD DC    X'4021204B202020'
TIMEEDWD DC    X'4021204B20204B2020'
PAGEEDWD DC    X'402020202120'
P0       DC    P'0'
P1       DC    P'1'
P1900000 DC    P'1900000'
HEADING  DS    0C
         DC    48C' '
         DC    C'Librarian log'
         DC    48C' '
         DC    C'PAGE '
HEADPAGE DC    CL6' '
HEADINGL EQU   *-HEADING
DCBI     DCB   DSORG=PS,                                               +
               DDNAME=LIBPRT,                                          +
               RECFM=FBA,                                              +
               LRECL=PRTLRECL,                                         +
               MACRF=PM
DCBL     EQU   *-DCBI
OPENI    OPEN  (*,OUTPUT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA   DSECT
           LIBSAVE DSECT=NO
WKTIMDAY   DS    2F                  TIME/DATE
WKVECSZ    DS    F                   ADDRESS VECTOR SIZE
WKVECADR   DS    A                   ADDRESS OF ADDRESS VECTOR
WKVECCUR   DS    A                   CURRENT ADDRESS IN ADDRESS VECTOR
WKLINE     DS    PL3
WKPAGE     DS    PL3
WKCC       DS    C                   CARRIAGE CONTROL
WKDATE     DS    CL7                 DATE
           DS    C
WKTIME     DS    CL9                 TIME
           DS    C
WKMSGID    DS    CL11                MESSAGE ID
           DS    C
WKMSGERR   DS    C                   ERROR MESSAGE FLAG
           DS    C
WKDATA     DS    CL120               PRINT DATA
PRTLRECL   EQU   *-WKCC
WKDCB      DS    0A,(DCBL)X          RESERVE SPACE FOR DCB
WKOCPL     DS    (OPENL)X
WORKAREA_L EQU   *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         PRTBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBSPSUB
./ ADD NAME=LIBSSNAP 0100-09250-09250-0919-00748-00748-00000-SOURCE
         MACRO
         FDEF  &NAME,&TYPE,&LEN,&BASE=
         LCLC  &T
         LCLA  &L
         GBLC  &BASENAME
         AIF   (T'&BASE EQ 'O').NOBASE
.BASE    ANOP
&BASENAME SETC  '&BASE'
         DC    CL8'&BASE'            CONTROL BLOCK NAME
         MEXIT
.NOBASE  ANOP
         AIF   (T'&TYPE EQ 'O').TYPE1
&T       SETC  '&TYPE'
         AGO   .TYPE2
.TYPE1   ANOP
&T       SETC  T'&NAME
.TYPE2   ANOP
         AIF   (T'&LEN EQ 'O').LEN1
&L       SETA  &LEN
         AGO   .LEN2
.LEN1    ANOP
&L       SETA  L'&NAME
.LEN2    ANOP
         DC    CL16'&NAME'           FIELD NAME
         DC    AL2(&NAME-&BASENAME)  DISP WITHIN CONTROL BLOCK
         DC    C'&T'                 FIELD TYPE
         DC    AL2(&L)               SOURCE FIELD LENGTH
         MEND
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: LIBSSNAP                                              *
*                                                                     *
*  PROCESS SNAP commands entered via the console.                     *
*                                                                     *
*  At entry:                                                          *
*    R1 command address                                               *
*    R2 command length                                                *
*    R3 address of console id                                         *
*                                                                     *
* ------------------------------------------------------------------- *
LIBSSNAP CSECT
LIBSSNAP AMODE 31
LIBSSNAP RMODE ANY
         USING LIBSSNAP,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'LIBSSNAP'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +
               LV=WORKAREA_L,                 .. SIZE                  +
               LOC=BELOW                      .. MUST BE BELOW
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORK_AREA,R13                  DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   WORK_CID,0(R3)                 COPY CONSOLE ID
         MVC   WORK_WTO(WTOL),WTOI            INITIALIZE WTO
         LA    R7,WORK_WTO
         USING WPL,R7                         DEFINE BASE
         MVI   WORK_HEADING,C' '
         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING
         MVI   WORK_PRINT_SPACE,C' '          INITIALIZE SPACE
         MVC   WORK_PRINT,WORK_PRINT_SPACE
         MVI   WORK_FLAGS,0                   RESET FLAG(S)
         MVC   DAIR_EYE,DAIRID                SET BLOCK EYE-CATCHER
         XC    DAIR_NEXT,DAIR_NEXT            CLEAR 'NEXT' ADDRESS
         MVC   DAIR_DD,SNAPDDN                SET DDNAME IN ACB
         MVI   DAIR_CMD,$DAIR_SYSOUT          ALLOCATE SNAP SYSOUT
         MVC   DAIR_CLASS,COMM_SNAP_CLASS     SET OUTPUT CLASS
         XC    DAIR_ECB,DAIR_ECB              CLEAR THE ECB
         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS
SNAP0010 DS    0H
         L     R2,COMM_DSUB_REQ
         ST    R2,DAIR_NEXT
         CS    R2,R1,COMM_DSUB_REQ
         BC    4,SNAP0010
         POST  COMM_DSUB_WORK_ECB             WAKEUP THE DAIR SUBTASK
         WAIT  1,ECB=DAIR_ECB                 WAIT
         OC    DAIR_R15,DAIR_R15              ALLOCATION SUCCESSFUL?
         BNZ   ERR0010                        NO
* ------------------------------------------------------------------- *
*                                                                     *
*     The output DD has been allocated.                               *
*                                                                     *
*     Open the DCB.                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   WORK_DCB(DCBL),DCBI            INITIALIZE THE DCB
         MVC   WORK_OPEN(OPENL),OPENI
         OPEN  WORK_DCB,                                               +
               MODE=31,                                                +
               MF=(E,WORK_OPEN)
         ZAP   WORK_PAGE,P0                   INITIALIZE PAGE NUMBER
         ZAP   WORK_LINE,P0                   INITIALIZE LINE NUMBER
         AP    COMM_SNAP_NBR,P1               ADD 1 TO NUMBER OF DUMPS
         TIME  DEC                            GET DATE AND TIME
         STM   R0,R1,WORK_TIME_DATE           SAVE TIME AND DATE
         AP    WORK_DATE,P1900000             ADD CENTURY TO DATE
         BAL   R10,HEAD0000                   PRINT HEADING
* ------------------------------------------------------------------- *
*     Format fields from the STC common area                          *
* ------------------------------------------------------------------- *
         ST    R11,WORK_FMT_BASE              SET BASE
         MVC   WORK_FMT_FDEF,A_SCOMM_FDEF
         BAL   R8,FMT0000                     FORMAT THE SCOMM FIELDS
* ------------------------------------------------------------------- *
*     Format fields from the LIBBLOKs and LIBUSER blocks              *
* ------------------------------------------------------------------- *
         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK
         BZ    SNAP0050                       NO LIBBLOK'S
         USING LIBBLOK,R6                     DEFINE BASE
SNAP0020 DS    0H
         MVC   WORK_FMT_FDEF,A_LIBBLOK_FDEF
         ST    R6,WORK_FMT_BASE               SET BASE
         BAL   R8,FMT0000                     FORMAT THE LIBBLOK
         ICM   R1,15,LIB_USERS                FIRST LIBUSER BLOCK
         BZ    SNAP0040
SNAP0030 DS    0H
         ST    R1,WORK_FMT_BASE               SET BASE
         MVC   WORK_FMT_FDEF,A_LIBUSER_FDEF
         BAL   R8,FMT0000                     FORMAT THE CONTROL BLOCK
         L     R1,WORK_FMT_BASE               CURRENT LIBUSER BLOCK
         ICM   R1,15,LIB_USER_NEXT-LIBUSER(R1)
         BNZ   SNAP0030
SNAP0040 DS    0H
         ICM   R6,15,LIB_NEXT
         BNZ   SNAP0020
         DROP  R6
* ------------------------------------------------------------------- *
*     Format fields from the USERBLOKs                                *
* ------------------------------------------------------------------- *
SNAP0050 DS    0H
         MVC   WORK_FMT_FDEF,A_USERBLOK_FDEF
         MVC   WORK_ENQ(ENQL),ENQI
         ENQ   MF=(E,WORK_ENQ)
         ICM   R6,15,COMM_USER_CHAIN          FIRST USER BLOCK
         BZ    SNAP0100                       NO USERBLOK'S
         USING USERBLOK,R6                    DEFINE BASE
SNAP0060 DS    0H
         ST    R6,WORK_FMT_BASE               SET BASE
         BAL   R8,FMT0000                     FORMAT THE LIBBLOK
         ICM   R6,15,USER_NEXT
         BNZ   SNAP0060
         MVC   WORK_ENQ(ENQL),ENQI
SNAP0100 DS    0H
         DEQ   MF=(E,WORK_ENQ)
* ------------------------------------------------------------------- *
*                                                                     *
*      Print the trace table                                          *
*                                                                     *
* ------------------------------------------------------------------- *
         OI    WORK_FLAGS,$WORK_TRACE
         MVI   WORK_PRINT_CC,C'1'             FORCE TOP OF PAGE
         MVC   WORK_PRINT_DATA(MSG05L),MSG05
         BAL   R9,PRT0000
         ICM   R2,15,TRFIRST                  FIRST TRACE TABLE ENTRY
         BZ    CLOSE000                       NO TRACE TABLE
         USING TRENTRY,R2                     DEFINE BASE
SNAP0110 DS    0H
         MVC   WORK_PRINT_DATA(MSG06L),MSG06
         C     R2,TRCURR                      CURRENT ENTRY?
         BNE   SNAP0120                       NO
         MVC   WORK_PRINT_DATA+(MSG06_CUR-MSG06)(L'MSG06_CUR),=C'CURREN+=>'
               T -->'
SNAP0120 DS    0H
         UNPK  WORK_PRINT_DATA+(MSG06_TCB-MSG06)(7),TRETCB(5)            ADDR
         MVZ   WORK_PRINT_DATA+(MSG06_TCB-MSG06)(6),HEXZERO
         TR    WORK_PRINT_DATA+(MSG06_TCB-MSG06)(6),HEXCHAR
         MVI   WORK_PRINT_DATA+(MSG06_TCB-MSG06)+6,C' '
         MVC   WORK_PRINT_DATA+(MSG06_MOD-MSG06)(L'MSG06_MOD),TREMOD
         MVC   WORK_PRINT_DATA+(MSG06_ID-MSG06)(L'MSG06_ID),TREID
         MVC   WORK_PRINT_DATA+(MSG06_D1-MSG06)(L'MSG06_D1),TREDATA1
         TR    WORK_PRINT_DATA+(MSG06_D1-MSG06)(L'MSG06_D1),PRINTABLE
         UNPK  WORK_PRINT_DATA+(MSG06_D1X-MSG06)(9),TREDATA1(5)
         MVZ   WORK_PRINT_DATA+(MSG06_D1X-MSG06)(8),HEXZERO
         TR    WORK_PRINT_DATA+(MSG06_D1X-MSG06)(8),HEXCHAR
         UNPK  WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(9),TREDATA1+4(5)
         MVZ   WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(8),HEXZERO
         TR    WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(8),HEXCHAR
         MVI   WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8+8,C' '
         MVC   WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),TREDATA2
         MVC   WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),TREDATA2
         TR    WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),PRINTABLE
         UNPK  WORK_PRINT_DATA+(MSG06_D2X-MSG06)(9),TREDATA2(5)
         MVZ   WORK_PRINT_DATA+(MSG06_D2X-MSG06)(8),HEXZERO
         TR    WORK_PRINT_DATA+(MSG06_D2X-MSG06)(8),HEXCHAR
         UNPK  WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(9),TREDATA2+4(5)
         MVZ   WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(8),HEXZERO
         TR    WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(8),HEXCHAR
         MVI   WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8+8,C' '
         BAL   R9,PRT0000
         C     R2,TRLAST                      END OF TABLE?
         BE    CLOSE000                       YES
         LA    R2,TRENTRYL(R2)
         B     SNAP0110
         DROP  R2
* ------------------------------------------------------------------- *
*     Close the DCB, issue WTO and exit                               *
* ------------------------------------------------------------------- *
CLOSE000 DS    0H
         MVC   WORK_CLOSE(CLOSEL),CLOSEI
         CLOSE (WORK_DCB),                                             +
               MODE=31,                                                +
               MF=(E,WORK_CLOSE)
         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE
         BAL   R10,WTO0000                    ISSUE WTO
         B     EXIT0000                       AND EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
FMT0000  DS    0H
         L     R2,WORK_FMT_BASE
         L     R3,WORK_FMT_FDEF
         USING FDEF,R3
         MVC   WORK_PRINT_DATA(MSG03L),MSG03
         MVC   WORK_PRINT_DATA+(MSG03_BLOCK-MSG03)(L'MSG03_BLOCK),0(R3)
         UNPK  WORK_UNPACK(9),WORK_FMT_BASE(5)
         MVZ   WORK_UNPACK,HEXZERO
         TR    WORK_UNPACK,HEXCHAR
         MVC   WORK_PRINT_DATA+(MSG03_ADDR-MSG03)(L'MSG03_ADDR),WORK_UN+
               PACK
         BAL   R9,PRT0000                     PRINT
         LA    R3,8(R3)                       FIRST FIELD DEFINITION
FMT0010  DS    0H
         MVC   WORK_PRINT_DATA(MSG04L),MSG04
         LA    R4,WORK_PRINT_DATA+(MSG04_DATA-MSG04)
         USING FLD,R4
         LA    R5,((L'WORK_PRINT_DATA-MSG04L)/(FLDL+5))
FMT0020  DS    0H
         MVC   FLD_LABEL,FDEF_NAME            COPY FIELD NAME
         MVC   FLD_TYPE+1(1),FDEF_TYPE        FIELD TYPE
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,FDEF_LENGTH               LENGTH
         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL
         MVC   FLD_LENGTH,=X'40202120'        INITIALIZE WITH EDIT WORD
         ED    FLD_LENGTH,WORK_DWORD+6        EDIT LENGTH
         UNPK  WORK_UNPACK(5),FDEF_DISP(3)    UNPACK DISPLACEMENT
         MVZ   WORK_UNPACK(4),HEXZERO         CLEAR ZONES
         TR    WORK_UNPACK(4),HEXCHAR         CONVERT TO PRINTABLE
         MVC   FLD_DISP,WORK_UNPACK           COPY DISPLACEMENT
         SR    R14,R14                        CLEAR REGISTER
         ICM   R14,3,FDEF_LENGTH              FIELD LENGTH
         SR    R15,R15                        CLEAR REGISTER
         ICM   R15,3,FDEF_DISP                DISPLACEMENT
         AR    R15,R2                         DATA ADDRESS
         CLI   FDEF_TYPE,C'A'                 ADDRESS?
         BE    FMT0050                        YES
         CLI   FDEF_TYPE,C'C'                 CHARACTER?
         BE    FMT0030                        YES
         CLI   FDEF_TYPE,C'F'                 FULLWORD?
         BE    FMT0060                        YES
         CLI   FDEF_TYPE,C'H'                 HALFWORD?
         BE    FMT0070                        YES
         CLI   FDEF_TYPE,C'P'                 PACKED DECIMAL?
         BE    FMT0080                        YES
         CLI   FDEF_TYPE,C'X'                 HEX?
         BE    FMT0050                        YES
         B     FMT0500
* ----------------------  CHARACTER FIELDS  ------------------------- *
FMT0030  DS    0H
         CH    R14,H8                         LONGER THAN 8 CHARACTERS?
         BNH   FMT0040                        NO
         LH    R14,H8                         LIMIT TO 8
FMT0040  DS    0H
         BCTR  R14,0
         EX    R14,FMTMVC01                   COPY DATA
         B     FMT0500
* ----------------------  ADDRESS FIELDS  --------------------------- *
FMT0050  DS    0H
         UNPK  WORK_UNPACK(9),0(5,R15)        UNPACK THE DATA
         MVZ   WORK_UNPACK,HEXZERO            CLEAR ZONES
         TR    WORK_UNPACK,HEXCHAR            TRANSLATE TO PRINTABLE
         SLL   R14,1                          MULTIPLY BY 2
         BCTR  R14,0                          MINUS 1
         LA    R1,FLD_VALUE+7
         SR    R1,R14
         EX    R14,FMTMVC02                   COPY TO PRINT AREA
         B     FMT0500
* ----------------------  FULLWORD FIELDS  -------------------------- *
FMT0060  DS    0H
         L     R1,0(R15)                      LOAD VALUE
         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL
         MVC   FLD_VALUE,=X'4020202020202120'
         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE
         B     FMT0500
* ----------------------  FULLWORD FIELDS  -------------------------- *
FMT0070  DS    0H
         LH    R1,0(R15)                      LOAD VALUE
         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL
         MVC   FLD_VALUE,=X'4020202020202120'
         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE
         B     FMT0500
* ----------------------  PACKED DECIMAL ---------------------------- *
FMT0080  DS    0H
         BCTR  R14,0
         EX    R14,FMTZAP                     ZAP IT INTO DWORD
         MVC   FLD_VALUE,=X'4020202020202120'
         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE
FMT0500  DS    0H
         LA    R4,FLDL+5(R4)                  NEXT IN OUTPUT
         LA    R3,FDEFL(R3)                   NEXT FIELD DEFINITION
         CLI   0(R3),X'FF'                    END OF FIELDS?
         BE    FMT0510                        YES
         BCT   R5,FMT0020                     FORMAT NEXT FIELD
         BAL   R9,PRT0000                     PRINT
         B     FMT0010
FMT0510  DS    0H
         BAL   R9,PRT0000                     PRINT LAST LINE
         BAL   R9,PRT0000                     PRINT BLANK LINE
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FMTMVC01 MVC   FLD_VALUE(0),0(R15)            COPY DATA
FMTMVC02 MVC   0(0,R1),WORK_UNPACK            COPY DATA
FMTZAP   ZAP   WORK_DWORD,0(0,R15)            ZAP PACKED DECIMAL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         CP    WORK_LINE,MAXLINE
         BL    PRT0010
         BAL   R10,HEAD0000                   PRINT NEXT HEADING
PRT0010  DS    0H
         PUT   WORK_DCB,WORK_PRINT            PRINT
         AP    WORK_LINE,P1                   ADD TO LINE COUNT
         MVC   WORK_PRINT,WORK_PRINT_SPACE
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
HEAD0000 DS    0H
         MVC   WORK_HEADING(HEADINGL),HEADING
         ED    WORK_HEADING+(HEAD_DATE-HEADING)(L'HEAD_DATE),WORK_DATE
         UNPK  WORK_UNPACK(7),WORK_TIME(4)
         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+0(2),WORK_UNPACK+0
         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+3(2),WORK_UNPACK+2
         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+6(2),WORK_UNPACK+4
         MVI   WORK_HEADING+(HEAD_TIME-HEADING)+2,C':'
         MVI   WORK_HEADING+(HEAD_TIME-HEADING)+5,C':'
         ED    WORK_HEADING+(HEAD_DUMP-HEADING)(L'HEAD_DUMP),COMM_SNAP_+
               NBR
         AP    WORK_PAGE,P1
         ED    WORK_HEADING+(HEAD_PAGE-HEADING)(L'HEAD_PAGE),WORK_PAGE
         PUT   WORK_DCB,WORK_HEADING
         MVI   WORK_HEADING,C' '
         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING
         ZAP   WORK_LINE,P1
         TM    WORK_FLAGS,$WORK_TRACE
         BOR   R10
         LA    R1,((L'WORK_PRINT_DATA-MSG04L)/(FLDL+5))
         LA    R15,WORK_HEADING+(MSG04_DATA-MSG04)+1
HEAD0010 DS    0H
         MVC   0(FLD_HEADL,R15),FLD_HEAD
         LA    R15,FLD_HEADL+5(R15)
         BCT   R1,HEAD0010
         PUT   WORK_DCB,WORK_HEADING
         MVI   WORK_HEADING,C' '
         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING
         AP    WORK_LINE,P1
         BR    R10
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   WPLTXT(MSG02L),MSG02
         UNPK  WPLTXT+(MSG02_R15-MSG02)(5),DAIR_R15(3)
         MVZ   WPLTXT+(MSG02_R15-MSG02)(4),HEXZERO
         TR    WPLTXT+(MSG02_R15-MSG02)(4),HEXCHAR
         MVI   WPLTXT+(MSG02_R15-MSG02)+4,C' '
         UNPK  WPLTXT+(MSG02_ERR-MSG02)(5),DAIR_ERROR(3)
         MVZ   WPLTXT+(MSG02_ERR-MSG02)(4),HEXZERO
         TR    WPLTXT+(MSG02_ERR-MSG02)(4),HEXCHAR
         MVI   WPLTXT+(MSG02_ERR-MSG02)+4,C' '
         UNPK  WPLTXT+(MSG02_INFO-MSG02)(5),DAIR_INFO(3)
         MVZ   WPLTXT+(MSG02_INFO-MSG02)(4),HEXZERO
         TR    WPLTXT+(MSG02_INFO-MSG02)(4),HEXCHAR
         MVI   WPLTXT+(MSG02_INFO-MSG02)+4,C' '
         BAL   R10,WTO0000
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WTO0000  DS    0H
         ITRACE ID=WTO
         WTO   MF=(E,WORK_WTO),               ISSUE WTO                +
               CONSID=WORK_CID                .. TO SAME CONSOLE
         MVI   WPLTXT,C' '
         MVC   WPLTXT+1(99),WPLTXT
         BR    R10
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DCBI     DCB   DDNAME=LIBSNAP,                                         +
               DSORG=PS,                                               +
               LRECL=133,                                              +
               RECFM=FBA,                                              +
               MACRF=PM
DCBL     EQU   *-DCBI
OPENI    OPEN  (*,OUTPUT),MF=L,MODE=31
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MF=L,MODE=31
CLOSEL   EQU   *-CLOSEI
ENQI     ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L
ENQL     EQU   *-ENQI
QNAME    DC    CL8'LIB'
RNAME    DC    CL8'COMMUSER'

A_SCOMM_FDEF    DC  A(SCOMM_FDEF)
A_LIBBLOK_FDEF  DC  A(LIBBLOK_FDEF)
A_USERBLOK_FDEF DC  A(USERBLOK_FDEF)
A_LIBUSER_FDEF  DC  A(LIBUSER_FDEF)

WTOI     WTO   '                                                       +
                                                                     ',+
               CONSID=,                                                +
               MF=L
WTOL     EQU   *-WTOI

H8          DC    H'8'

P0          DC    P'0'
P1          DC    P'1'
P1900000    DC    P'1900000'
MAXLINE     DC    P'65'
DAIRID      DC    CL8'DAIRREQ'
SNAPDDN     DC    CL8'LIBSNAP'
HEXZERO     DC    8X'00'
HEXCHAR     DC    C'0123456789ABCDEF'

HEADING     DS    0C
            DC    C'1'
HEAD_DATE   DC    X'40212020204B202020'
            DC    CL2' '
HEAD_TIME   DS    CL8' '
            DC    CL29' '
            DC    C'LIBRARIAN SNAP DUMP'
HEAD_DUMP   DC    X'40206B2020206B202120'
            DC    CL40' '
HEAD_PAGE   DC    X'402020202120'
HEADINGL    EQU   *-HEADING

FLD_HEAD    DC    CL16'LABEL'
            DC    CL2' '
            DC    CL4'TYPE'
            DC    CL3' '
            DC    CL3'LEN'
            DC    CL2' '
            DC    CL4'DISP'
            DC    CL3' '
            DC    CL7'VALUE'
FLD_HEADL   EQU   *-FLD_HEAD

MSG01       DS    0C
            DC    C'LIBSSNAP01I'
            DC    C'SNAP DUMP complete'
MSG01L      EQU   *-MSG01

MSG02       DS    0C
            DC    C'LIBSSNAP02E '
            DC    C'Allocation for SNAP DUMP failed.  R15='
MSG02_R15   DC    CL4' '
            DC    C'  ERROR='
MSG02_ERR   DC    CL4' '
            DC    C' INFO='
MSG02_INFO  DC    CL4' '
MSG02L      EQU   *-MSG02

MSG03       DC    C'LIBSSNAP03I'
            DC    C' '
MSG03_BLOCK DC    CL8' '
            DC    C' AT '
MSG03_ADDR  DC    CL8' '
MSG03L      EQU   *-MSG03

MSG04       DC    C'LIBSSNAP04I'
            DC    C' '
MSG04_DATA  DS    C
MSG04L      EQU   *-MSG04

MSG05       DC    C'LIBSSNAP05I'
            DC    CL10' '
            DC    C'-------------  TRACE TABLE ------------'
MSG05L      EQU   *-MSG05

MSG06       DS    0C
            DC    C'          '
MSG06_CUR   DC    CL11' '
            DC    CL03' '
MSG06_TCB   DC    CL06' '
            DC    CL03' '
MSG06_MOD   DC    CL05' '
            DC    CL03' '
MSG06_ID    DC    CL08' '
            DC    CL03' '
MSG06_D1    DC    CL08' '
            DC    C' '
MSG06_D1X   DC    CL16' '
            DC    CL03' '
MSG06_D2    DC    CL08' '
            DC    C' '
MSG06_D2X   DS    CL16' '
            DC    C' '
MSG06L      EQU   *-MSG06

*-------------------  0 1 2 3 4 5 6 7 8 9 A B C D E F  --------------*
PRINTABLE DS    0C
          DC    XL16'40404040404040404040404040404040'   x'00' - X'0F'
          DC    XL16'40404040404040404040404040404040'   X'10' - X'1F'
          DC    XL16'40404040404040404040404040404040'   X'20' - X'2F'
          DC    XL16'40404040404040404040404040404040'   X'30' - X'3F'
          DC    XL16'404040404040404040404A4B4C4D4E4F'   X'40' - X'4F'
          DC    XL16'504040404040404040405A5B5C5D5E5F'   X'50' - X'5F'
          DC    XL16'60614040404040404040406B6C6D6E6F'   X'60' - X'6F'
          DC    XL16'404040404040404040407A7B7C7D7E7F'   X'70' - X'7F'
          DC    XL16'40404040404040404040408B8C8D8E8F'   X'80' - X'8F'
          DC    XL16'40404040404040404040409B9C9D9E9F'   X'90' - X'9F'
          DC    XL16'4040404040404040404040ABACADAEAF'   X'A0' - X'AF'
          DC    XL16'4040404040404040404040BBBCBDBEBF'   X'B0' - X'BF'
          DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'   X'C0' - X'CF'
          DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'   X'D0' - X'DF'
          DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'   X'E0' - X'EF'
          DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'   X'F0' - X'FF'
          LTORG
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
WORK_AREA        DSECT
                 LIBSAVE  DSECT=NO
WORK_DWORD       DS   D
WORK_CID         DS   F
WORK_WTO         DS   0A,(WTOL)X
WORK_DCB         DS   0F,(DCBL)X
WORK_OPEN        DS   0F,(OPENL)X
WORK_CLOSE       DS   0F,(CLOSEL)X
WORK_ENQ         DS   0F,(ENQL)X

WORK_FMT_BASE    DS   F
WORK_FMT_FDEF    DS   F

WORK_TIME_DATE   DS   0F
WORK_TIME        DS   XL4
WORK_DATE        DS   PL4

WORK_UNPACK      DS   CL10
                 DS   X

WORK_PAGE        DS   PL3
WORK_LINE        DS   PL3

WORK_PRINT_SPACE DS   C
WORK_PRINT       DS   0CL133
WORK_PRINT_CC    DS   C
WORK_PRINT_DATA  DS   CL132

WORK_HEADING     DS   CL133

WORK_FLAGS       DS   X
$WORK_TRACE      EQU  X'80'

                 DAIRREQ  DSECT=NO
WORKAREA_L       EQU  *-WORK_AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FDEF        DSECT
FDEF_NAME   DS    CL16                 FIELD NAME
FDEF_DISP   DS    AL2                  DISPLACEMENT TO FIELD
FDEF_TYPE   DS    C                    FIELD TYPE
FDEF_LENGTH DS    AL2                  FIELD LENGTH
FDEFL       EQU   *-FDEF
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FLD        DSECT
FLD_LABEL  DS    CL16'LABEL'
           DS    CL2' '
FLD_TYPE   DS    CL4'TYPE'
           DS    CL2' '
FLD_LENGTH DS    CL4'LEN'
           DS    CL2' '
FLD_DISP   DS    CL4' '
           DS    CL2' '
FLD_VALUE  DS    CL8'VALUE'
FLDL       EQU   *-FLD
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBBLOK  DSECT=YES
         LIBUSER  DSECT=YES
         USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*              WTO PARM LIST                                          *
* ------------------------------------------------------------------- *
         IEZWPL DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB AM=VTAM
ACBL     EQU    *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA LIST=NO
* ------------------------------------------------------------------- *
*              STC common area FDEFs                                  *
* ------------------------------------------------------------------- *
LIBSSNAP       CSECT
SCOMM_FDEF     DS    0C
               FDEF  BASE=LIBSCOMM
               FDEF  COMMDWRD,X,4
               FDEF  COMMDWRD+4,X,4
               FDEF  COMMDXDA
               FDEF  TRFIRST
               FDEF  TRLAST
               FDEF  TRCURR
               FDEF  TRADDR
               FDEF  TRSIZE
               FDEF  COMM_LIBATTN
               FDEF  COMM_LIBLERAD
               FDEF  COMM_LIBSMAIN
               FDEF  COMM_PRINT_TCB
               FDEF  COMM_PRINT_REQ
               FDEF  COMM_PRINT_TERM_ECB
               FDEF  COMM_PRINT_WORK_ECB
               FDEF  COMM_CSUB_TCB
               FDEF  COMM_CSUB_TERM_ECB
               FDEF  COMM_CSUB_WORK_ECB
               FDEF  COMM_DSUB_TCB
               FDEF  COMM_DSUB_REQ
               FDEF  COMM_DSUB_TERM_ECB
               FDEF  COMM_DSUB_WORK_ECB
               FDEF  COMM_LSUB_TCB
               FDEF  COMM_LSUB_REQ
               FDEF  COMM_LSUB_TERM_ECB
               FDEF  COMM_LSUB_WORK_ECB
               FDEF  COMM_HSUB_TCB
               FDEF  COMM_HSUB_REQ
               FDEF  COMM_HSUB_TERM_ECB
               FDEF  COMM_HSUB_WORK_ECB
               FDEF  COMM_LIBRARY_CHAIN
               FDEF  COMM_USER_CHAIN
               FDEF  COMM_VTAM_LOGINS
               FDEF  COMM_TCPIP_LOGINS
               FDEF  COMMXUSR
               FDEF  COMM_ATTN_ECB,X,4
               FDEF  COMM_TERMINATION_ECB,X,4
               FDEF  COMM_NETWORK_IO_AREA
               FDEF  COMM_VTAM_ECB,X,4
               FDEF  COMM_ACB
               FDEF  COMM_APPL_NAME_LENGTH,X,1
               FDEF  COMM_APPL_NAME
               FDEF  COMM_FLAGS
               FDEF  COMM_EOJ_PHASE
               FDEF  COMM_SNAP_CLASS
               FDEF  COMM_RC
               FDEF  COMMRACF,X,1
               FDEF  COMMRACF+1,C,8
               FDEF  COMM_MAX_LINES
               DC    X'FF'
LIBBLOK_FDEF   DS    0C
               FDEF  BASE=LIBBLOK
               FDEF  LIB_EYE
               FDEF  LIB_NEXT
               FDEF  LIB_READS
               FDEF  LIB_WRITES
               FDEF  LIB_NEW
               FDEF  LIB_CHECK_OUT
               FDEF  LIB_CHECK_IN
               FDEF  LIB_VIEW
               FDEF  LIB_UPDATE
               FDEF  LIB_DELETE
               FDEF  LIB_USERS
               FDEF  LIB_NAME
               FDEF  LIB_DESCRIPTION
               FDEF  LIB_VSAM_DSN
               FDEF  LIB_ACB
               FDEF  LIB_STATUS
               DC    X'FF'
LIBUSER_FDEF   DS    0C
               FDEF  BASE=LIBUSER
               FDEF  LIB_USER_EYE
               FDEF  LIB_USER_NEXT
               FDEF  LIB_USER_USER
               DC    X'FF'
USERBLOK_FDEF  DS    0C
               FDEF  BASE=USERBLOK
               FDEF  USEREYE
               FDEF  USER_NEXT
               FDEF  USER_TIME
               FDEF  USER_DATE
               FDEF  USER_TCB
               FDEF  USER_TERMINATION_ECB
               FDEF  USER_COMM
               FDEF  USER_SELF
               FDEF  USER_DXD
               FDEF  USER_RPL
               FDEF  USER_RPLX
               FDEF  USER_NETWORK_ECB
               FDEF  USER_WORK_ECB
               FDEF  USER_CONVERSATION_ID
               FDEF  USER_IO
               FDEF  USER_PARTNER_LU
               FDEF  USER_RECEIVES
               FDEF  USER_BYTES_RECEIVED
               FDEF  USER_SENDS
               FDEF  USER_BYTES_SENT
               FDEF  USER_SYSTEM_SMF
               FDEF  USER_USER_ID
               FDEF  USER_JOB
               FDEF  USER_NAME
               FDEF  USER_LIBRARY
               FDEF  USER_AUTH_LIBS
               FDEF  USER_STATUS
               FDEF  USER_IP_ADDRESS
               DC    X'FF'
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBSSNAP
./ ADD NAME=LIBSVTAM 0100-09250-09250-0919-00184-00184-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: LIBSVTAM                                                     *
*                                                                     *
*  Purpose: VTAM subtask                                              *
*           The librarian uses VTAM LU 6.2 protocols.                 *
*           As VTAM applications go, 6.2 is very simple.              *
*           All this subtask does is OPEN, SETLOGON, and CLOSE.       *
*           The majority of the work is done in the attention exit    *
*           and the user subtask(s).                                  *
*                                                                     *
* ------------------------------------------------------------------- *
LIBSVTAM CSECT
LIBSVTAM AMODE 31
LIBSVTAM RMODE ANY
         USING LIBSVTAM,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'LIBSVTAM'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,0(R1)                      LIBSCOMM ADDRESS
* ------------------------------------------------------------------- *
*        ACQUIRE STORAGE FOR WORK AREA                                *
* ------------------------------------------------------------------- *
         GETMAIN RU,                          ACQUIRE WORK AREA STORAGE+
               LV=WORKAREA_L,                 .. WORK AREA SIZE        +
               LOC=ANY                        ..
         ST    R1,8(R13)                      CHAIN SAVE AREAS
         ST    R13,4(R1)
         LR    R13,R1                         COPY SAVE AREA ADDRESS
         USING WORK,R13                       DEFINE BASE
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK
         MVC   WORK_ACB(ACBL),ACBI            INITIALIZE ACB
         MVC   WORK_EXLST(EXLSTL),EXLSTI
         MVC   WORK_RPL(RPLL),RPLI
         LA    R10,WORK_ACB                   ACB ADDRESS
         USING IFGACB,R10                     DEFINE BASE
         ST    R10,COMM_ACB                   SET ACB ADDRESS
         LA    R0,ACBL                        ACB LENGTH
         ST    R0,COMM_ACB_LENGTH             SET ACB LENGTH
         LA    R9,WORK_EXLST                  EXIT LIST ADDRESS
         USING IFGEXLST,R9                    DEFINE BASE
         ST    R11,ACBUSER                    SET COMM ADDRESS IN ACB
         LA    R1,COMM_APPL_NAME_LENGTH       ADDR OF ACB NAME LENGTH
         ST    R1,ACBAPID                     SET ADDRESS
         ST    R9,ACBEXLST                    SET ADDRESS OF EXIT LIST
         MVC   EXLATTNP,COMM_LIBATTN          SET ATTENTION EXIT ADDR
         MVC   EXLLERP,COMM_LIBLERAD          SET LERAD EXIT ADDRESS
         MVC   WORK_OCPL(OPENL),OPENI
         OPEN  ((R10),OUTPUT),                OPEN THE ACB             +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         ITRACE ID=OPEN_RC,                                            +
               RDATA1=R15
         SETLOGON ACB=(R10),                  ALLOW LOGONS             +
               RPL=WORK_RPL,                  .. RPL ADDRESS           +
               OPTCD=START                    .. ENABLE ATTN EXIT
         MVC   PRTMSGID(MSG01L),MSG01
         BAL   R8,PRT0000
* ------------------------------------------------------------------- *
*                                                                     *
*       Strange, isn't it?                                            *
*                                                                     *
*       All this does is OPEN the ACB and issue a SETLOGON.           *
*       After issuing the SETLOGON the rest of the work is            *
*       done in the attention exit and in the user subtask(s).        *
*                                                                     *
*       All this needs to do is WAIT for the main task to             *
*       POST An ECB.  The only reason the main task POSTs the         *
*       ECB is to signal shutdown time.                               *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         WAIT  1,ECB=COMM_VTAM_WORK_ECB       WAIT FOR MAIN TASK
         MVC   PRTMSGID(MSG02L),MSG02
         BAL   R8,PRT0000
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,                                                   +
               LV=PRTBLOKL,                                            +
               LOC=ANY
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE
         ST    R2,PRTNEXT-PRTBLOK(R1)                         '
         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN
         BC    4,PRT0010                      TRY AGAIN
         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK
         BR    R8                             COMPLETE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         MVC   WORK_OCPL(CLOSEL),CLOSEI
         CLOSE WORK_ACB,                                               +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        CLEAR REGISTER
         BR    R14                            EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
OPENI    OPEN  (*,UPDAT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
ACBI     ACB   AM=VTAM,                                                +
               MACRF=LOGON,                                            +
               EXLST=*,                                                +
               APPLID=*
EXLSTI   EXLST AM=VTAM,                                                +
               ATTN=*,                                                 +
               LERAD=*
EXLSTL   EQU   *-EXLSTI
RPLI     RPL   AM=VTAM
PRTID    DC    CL8'PRTBLOK'
MSG01    DC    CL11'LIBSVTAM01I'
         DC    C'VTAM subtask initialization complete'
MSG01L   EQU   *-MSG01
MSG02    DC    CL11'LIBSVTAM02I'
         DC    C'VTAM subtask terminating'
MSG02L   EQU   *-MSG02
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREA                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
WORK      DSECT
                LIBSAVE DSECT=NO
WORK_DWORD      DS      D

WORK_ACB        DS      0A,(ACBL)X
WORK_EXLST      DS      0A,(EXLSTL)X
WORK_RPL        DS      0A,(RPLL)X
WORK_OCPL       DS      0A,(OPENL)X

                PRTBLOK DSECT=NO
WORKAREA_L      EQU *-WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*        ACB                                                          *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*        EXIT LIST                                                    *
* ------------------------------------------------------------------- *
         IFGEXLST AM=VTAM
* ------------------------------------------------------------------- *
*        RPL                                                          *
* ------------------------------------------------------------------- *
         IFGRPL   AM=VTAM
RPLL     EQU      *-IFGRPL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
         COPY     REGEQU
         END      LIBSVTAM
./ ADD NAME=LIBTADMN 0100-09250-09250-0919-00304-00304-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTADMN                                              *
*                                                                     *
*  Function:                                                          *
*   Allows the status to be updated "manually"                        *
*                                                                     *
*                                                                     *
*   At times you may need to 'force' the status of a member from      *
*   IN to OUT or change who the member is "checked out to".           *
*                                                                     *
*                                                                     *
*   This will display the current status and allow it to be           *
*   overtyped.  You should use this utility with great caution        *
*   and the security for it should be tightly controlled.             *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTADMN CSECT
LIBTADMN AMODE 31
LIBTADMN RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTADMN,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     ADMN0000
MODID    DC    CL8'LIBTADMN'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
ADMN0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTADMN,R13                   DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    ADMN0010                       YES
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
ADMN0010 DS    0H
         L     R7,COMM_NETWORK_IO_AREA        I/O AREA ADDRESS
         USING NETBLOK,R7                     DEFINE BASE
         MVC   SPF_COMM1,COMM_BLANKS
         MVC   SPF_COMM2,COMM_BLANKS
         MVC   SPF_COMM3,COMM_BLANKS
         MVC   SPF_COMM4,COMM_BLANKS
         MVC   SPF_COMM5,COMM_BLANKS
         MVC   DXD_RC,H2                      DEFAULT RC
* ------------------------------------------------------------------- *
*      Verify the user is authorized                                  *
* ------------------------------------------------------------------- *
         ITRACE ID=CHKAUTH
         MVI   NET_FUNCTION,$NET_CHECK_ADMIN_AUTH
         LA    R1,NET_LENGTH_1
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         MVC   NET_MEM_VER,COMM_VERSION       SET VERSION
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?
         BNE   ERR0010                        NO
         MVC   LIB_RECORD(LIB_INDEX_RECORD_LENGTH),NET_DATA
*---------------------------------------------------------------------*
*                                                                     *
*        USUBADMN will have returned the base index record.           *
*                                                                     *
*        Display the current state                                    *
*                                                                     *
*---------------------------------------------------------------------*
ADMN0100 DS    0H
         TM    LIB_INDEX_STATUS,$LIB_STATUS_IN
         BO    ADMN0110
         MVC   SPF_IN_OUT_STATUS,=CL3'OUT'
         B     ADMN0120
ADMN0110 DS    0H
         MVC   SPF_IN_OUT_STATUS,=CL3'IN '
ADMN0120 DS    0H
         MVC   SPF_OUT_USER,LIB_INDEX_CHECK_OUT_USER
         MVC   SPF_OWNER,LIB_INDEX_OWNER
*---------------------------------------------------------------------*
*        Display the ADMIN panel                                      *
*---------------------------------------------------------------------*
ADMN0200 DS    0H
         ITRACE ID=DISPLAY,                                            +
               LIB_INDEX_OWNER,                                        +
               SPF_OWNER
         MVC   SPF_PANEL,ADMIN_PANEL          SET PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS
         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS
         ST    R1,DXD_SPF_2                   SET ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDRESS
         BALR  R14,R15                        DISPLAY THE PANEL
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE
         MVC   SPF_MSG2,COMM_BLANKS
         MVC   SPF_MSG3,COMM_BLANKS
         MVC   SPF_MSG4,COMM_BLANKS
         MVC   SPF_MSG5,COMM_BLANKS
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15
         LTR   R15,R15                        ZERO?
         BNZ   EXIT0000                       NO
*---------------------------------------------------------------------*
*        Check for any update(s)                                      *
*---------------------------------------------------------------------*
         ITRACE ID=XX
         NI    DXD_FLAG,255-$UPDATE
         CLC   SPF_IN_OUT_STATUS,=C'IN '
         BE    ADMN0220
         CLC   SPF_IN_OUT_STATUS,=C'I  '
         BE    ADMN0220
         CLC   SPF_IN_OUT_STATUS,=C'OUT'
         BE    ADMN0230
         CLC   SPF_IN_OUT_STATUS,=C'O  '
         BE    ADMN0230
ADMN0210 DS    0H
         ITRACE ID=BADSTAT,                                            +
               DATA1=SPF_IN_OUT_STATUS
         MVC   SPF_MSG1(MSG01L),MSG01
         B     ADMN0200
ADMN0220 DS    0H
         ITRACE ID=ADMN0220
         CLI   LIB_INDEX_STATUS,$LIB_STATUS_IN
         BE    ADMN0240
         ITRACE ID=IN
         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN
         OI    DXD_FLAG,$UPDATE
         B     ADMN0240
ADMN0230 DS    0H
         ITRACE ID=ADMN0230
         CLI   LIB_INDEX_STATUS,$LIB_STATUS_OUT
         BE    ADMN0240
         ITRACE ID=OUT
         MVI   LIB_INDEX_STATUS,$LIB_STATUS_OUT
         TIME  DEC
         STCM  R0,15,LIB_INDEX_CHECK_OUT_TIME
         STCM  R1,15,LIB_INDEX_CHECK_OUT_DATE
         OI    DXD_FLAG,$UPDATE
ADMN0240 DS    0H
         ITRACE ID=ADMN0240
         CLC   SPF_OUT_USER,LIB_INDEX_CHECK_OUT_USER
         BE    ADMN0250
         ITRACE ID=NEW_OUT,                                            +
               DATA1=SPF_OUT_USER,                                     +
               DATA2=LIB_INDEX_CHECK_OUT_USER
         MVC   LIB_INDEX_CHECK_OUT_USER,SPF_OUT_USER
         OI    DXD_FLAG,$UPDATE
ADMN0250 DS    0H
         ITRACE ID=ADMN0250
         CLC   SPF_OWNER,LIB_INDEX_OWNER
         BE    ADMN0260
         ITRACE ID=NEWOWNER,                                           +
               DATA1=SPF_OWNER,                                        +
               DATA2=LIB_INDEX_OWNER
         MVC   LIB_INDEX_OWNER,SPF_OWNER
         OI    DXD_FLAG,$UPDATE
ADMN0260 DS    0H
         ITRACE ID=ADMN0260
         TM    DXD_FLAG,$UPDATE
         BNO   ADMN0200
         ITRACE ID=UPDATE
         MVI   NET_FUNCTION,$NET_SEND_ADMIN
         LA    R1,NET_LENGTH_1+LIB_INDEX_RECORD_LENGTH
         STCM  R1,3,NET_LENGTH
         MVC   NET_DATA(LIB_INDEX_RECORD_LENGTH),LIB_RECORD
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         B     ADMN0100
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0010
         ITRACE ID=VTAMSEND
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0030
SEND0010 DS    0H
         ITRACE ID=IP_SEND
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0030 DS    0H
         ITRACE ID=SEND0000,                                           +
               DATA1=NET_LENGTH
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=SENT
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         ITRACE ID=RECV0020
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOTAUTH
         MVC   SPF_MSG1,NET_MSG_1
         MVC   SPF_MSG2,NET_MSG_2
         MVC   SPF_MSG3,NET_MSG_3
         MVC   SPF_MSG4,NET_MSG_4
         MVC   SPF_MSG5,NET_MSG_5
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         LH    R15,DXD_RC                     SET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART       DC    Q(DXDTADMN)
DISPLAY        DC    CL8'DISPLAY'
ADMIN_PANEL    DC    CL8'ADMPANEL'
H2             DC    H'2'

MSG01          DC    CL11'LIBTADMN1E'
               DC    C'Invalid in/out status'
MSG01L         EQU   *-MSG01

               LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDTADMN       DSECT
               LIBSAVE DSECT=NO

DXD_DWORD      DS      D

DXD_SPF_PARMS  DS     0F
DXD_SPF_1      DS      F
DXD_SPF_2      DS      F

DXD_RC         DS      H

DXD_FLAG       DS      X
$UPDATE        EQU     X'80'

               VTAMREQ DSECT=NO

               LIBRECD DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               TCOMM   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               LIBSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               NETBLOK DSECT=YES
NET_LIB_NAME   DS      CL8
NET_MEM_NAME   DS      CL8
NET_MEM_VER    DS      XL2
NET_LENGTH_1   EQU     *-NETBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB  AM=VTAM
ACBL     EQU     *-IFGACB
         LIBBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY    REGEQU
         END     LIBTADMN
./ ADD NAME=LIBTBRWS 0100-09250-09250-0919-00390-00390-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTBRWS                                              *
*                                                                     *
*  Function:                                                          *
*   Browse a member.  This is similar to the 'view' option.           *
*   The primary difference is that the user does not have to          *
*   specify a data set.  The data is written to a temporary           *
*   data set then displayed by SPF BROWSE.                            *
*                                                                     *
*   DD LIBBRWS must be pre-allocated.                                 *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTBRWS CSECT
LIBTBRWS AMODE 31
LIBTBRWS RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTBRWS,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     INIT0000
MODID    DC    CL8'LIBTBRWS'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTBRWS,R13                   DEFINE WORK AREA BASE
         USING IHADCB,R7
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
         XC    DXD_AUX01,DXD_AUX01            INIT EXIT ENTRY POINT
         SR    R6,R6
         SR    R7,R7
*---------------------------------------------------------------------*
*        Verify the user is authorized                                *
*---------------------------------------------------------------------*
         MVI   NET_FUNCTION,$NET_CHECK_VIEW_AUTH
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?
         BNE   ERR0020                        NO
*---------------------------------------------------------------------*
*        Save number of records                                       *
*---------------------------------------------------------------------*
         ICM   R0,15,NET_SOURCE_RECORDS       NBR OF SOURCE RECORDS
         STCM  R0,15,COMM_SOURCE_RECORDS      SAVE NBR
         STCM  R0,15,DXD_SOURCE_RECORDS       SAVE NBR
*---------------------------------------------------------------------*
*        GETMAIN DCB and OPEN/CLOSE PARM list                         *
*---------------------------------------------------------------------*
         GETMAIN RU,                                                   +
               LV=DCBL,                                                +
               LOC=BELOW
         LR    R7,R1
         MVC   0(DCBL,R7),DCBI                INITIALIZE DCB
         GETMAIN RU,                                                   +
               LV=OPENL,                                               +
               LOC=BELOW
         LR    R6,R1
*---------------------------------------------------------------------*
*        OPEN the DCB                                                 *
*---------------------------------------------------------------------*
         MVC   0(OPENL,R6),OPENI
         OPEN  ((R7),OUTPUT),                                          +
               MODE=31,                                                +
               MF=(E,(R6))
*---------------------------------------------------------------------*
*                                                                     *
*     GETMAIN a buffer for decompression and initialize the           *
*     parameter list for the de-compression subroutine.               *
*                                                                     *
*---------------------------------------------------------------------*
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=BELOW
         ST    R1,UX01_EXPANDED_BUFFER
         LA    R1,DXD_EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,NET_DATA
         ST    R1,UX01_COMPRESSED_BUFFER
         LA    R1,DXD_COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
         OC    DXD_AUX01,DXD_AUX01
         BNZ   BRWS0010
         LOAD  EP=LIBUX01
         ST    R0,DXD_AUX01
*---------------------------------------------------------------------*
*     Get source from library, de-compress, write to output dataset   *
*---------------------------------------------------------------------*
BRWS0010 DS    0H
         ITRACE ID=GETSRC
         MVI   NET_FUNCTION,$NET_VIEW_SOURCE
         BAL   R8,SEND0000                    SEND
         BAL   R8,RECV0000                    RECEIVE
         CLI   NET_RETURN_CODE,$NET_ERROR     ERROR?
         BE    ERR0030                        YES
         CLI   NET_RETURN_CODE,$NET_EOF       EOF?
         BE    BRWS0040                       YES
         ITRACE ID=DECOMPRESS
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,NET_LENGTH                LENGTH OF DATA
         SH    R1,=Y(NETBLOKL)                MINUS HEADER LENGTH
         ST    R1,DXD_COMPRESSED_LENGTH       LENGTH OF COMPRESSED DATA
         L     R4,DXD_SOURCE_RECORDS          NUMBER OF SOURCE RECORDS
         CH    R4,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?
         BL    BRWS0020                       NO
         LH    R4,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER
BRWS0020 DS    0H                             CLEAR FOR RECORD COUNT
         ST    R4,DXD_CURRENT_RECORDS         NUMBER IN CURRENT BUFFER
         L     R1,DXD_SOURCE_RECORDS          NUMBER OF RECORDS LEFT
         SR    R1,R4                          MINUS NUMBER IN BUFFER
         ST    R1,DXD_SOURCE_RECORDS          SAVE REMAINDER
         MH    R4,H80                         NUMBER * LENGTH
         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH
         MVI   UX01_FUNCTION,$UX01_DECOMPRESS
         LA    R1,UX01_PARMS
         L     R15,DXD_AUX01                  USER EXIT 1 ENTRY POINT
         BALR  R14,R15                        ALLOW DECOMPRESSION
         L     R2,UX01_EXPANDED_BUFFER        EXPANDED DATA BUFFER
         L     R3,DXD_CURRENT_RECORDS         NBR OF RECORDS
BRWS0030 DS    0H
         PUT   (R7),(R2)                      WRITE DATA
         LA    R2,80(,R2)                     NEXT RECORD
         BCT   R3,BRWS0030                    LOOP
         B     BRWS0010                       ASK FOR NEXT BLOCK
*---------------------------------------------------------------------*
*        All source has been written.                                 *
*---------------------------------------------------------------------*
BRWS0040 DS    0H
         ITRACE ID=EOF
*---------------------------------------------------------------------*
*        Free decompress buffer                                       *
*---------------------------------------------------------------------*
         L     R1,UX01_EXPANDED_BUFFER        DECOMPRESS BUFFER
         FREEMAIN RU,                         FREEMAIN BUFFER          +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE
         XC    UX01_EXPANDED_BUFFER,UX01_EXPANDED_BUFFER
*---------------------------------------------------------------------*
*        Close DCB                                                    *
*---------------------------------------------------------------------*
         CLOSE ((R7)),                                                 +
               MODE=31,                                                +
               MF=(E,(R6))
*---------------------------------------------------------------------*
*        Free DCB and OPEN/CLOSE PARM list                            *
*---------------------------------------------------------------------*
         FREEMAIN RU,                                                  +
               A=(R7),                                                 +
               LV=DCBL
         FREEMAIN RU,                                                  +
               A=(R6),                                                 +
               LV=OPENL
*---------------------------------------------------------------------*
*        Issue LMINIT                                                 *
*---------------------------------------------------------------------*
         ITRACE ID=LMINIT
         LA    R0,LMINIT                      BUILD LMINIT PARM LIST
         ST    R0,DXD_SPF_1
         LA    R0,DATAID
         ST    R0,DXD_SPF_2
         LA    R0,COMM_BLANKS
         ST    R0,DXD_SPF_3
         ST    R0,DXD_SPF_4
         ST    R0,DXD_SPF_5
         ST    R0,DXD_SPF_6
         ST    R0,DXD_SPF_7
         ST    R0,DXD_SPF_8
         ST    R0,DXD_SPF_9
         LA    R0,LIBBRWS
         ST    R0,DXD_SPF_10
         OI    DXD_SPF_10,X'80'
         LA    R1,DXD_SPF_PARMS
         L     R15,AISPLINK
         BALR  R14,R15                        ISSUE LMINIT
         ITRACE ID=INIT_RC,                                            +
               RDATA1=R15
         LTR   R15,R15
         BNZ   ERR0010
*---------------------------------------------------------------------*
*        Invoke browse                                                *
*---------------------------------------------------------------------*
         ITRACE ID=BROWSE,                                             +
               DATA1=SPF_DATA_ID
         LA    R0,BROWSE
         ST    R0,DXD_SPF_1
         LA    R0,COMM_BLANKS
         ST    R0,DXD_SPF_2
         ST    R0,DXD_SPF_3
         ST    R0,DXD_SPF_4
         ST    R0,DXD_SPF_5
         LA    R0,SPF_DATA_ID
         ST    R0,DXD_SPF_6
         OI    DXD_SPF_6,X'80'
         LA    R1,DXD_SPF_PARMS
         L     R15,AISPLINK
         BALR  R14,R15                        INVOKE BROWSE
         ITRACE ID=BROWSERC,                                           +
               RDATA1=R15
         LTR   R15,R15
         BNZ   ERR0040
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION
         LA    R1,NET_BROWSE_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0010
         ITRACE ID=VTAMSEND,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0020
SEND0010 DS    0H
         ITRACE ID=IP_SEND,                                            +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         BALR  R14,R15                        LINK TO LIBTVTAM
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         DC    H'0'
ERR0020  DS    0H
         DC    H'0'
ERR0030  DS    0H
         DC    H'0'
ERR0040  DS    0H
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         OC    DXD_AUX01,DXD_AUX01            USER EXIT LOADED?
         BZ    EXIT0010                       NO
         DELETE EP=LIBUX01
         XC    DXD_AUX01,DXD_AUX01            CLEAR THE ADDRESS
EXIT0010 DS    0H
         ICM   R1,15,UX01_EXPANDED_BUFFER     BUFFER GETMAINED?
         BZ    EXIT0020                       NO
         ITRACE ID=FREEBUFF,                                           +
               RDATA1=R1
         FREEMAIN RU,                         FREE EXPANDED BUFFER     +
               A=(R1),                                                 +
               LV=$MAX_SOURCE_SIZE
EXIT0020 DS    0H
         LH    R15,DXD_DISPLAY_RC             SET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTBRWS)                    DISPLACEMENT TO WORK AREA

H80      DC    H'80'

DCBI     DCB   DSORG=PS,                                               +
               DDNAME=LIBBRWS,                                         +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               BLKSIZE=4000,                                           +
               MACRF=PM
DCBL     EQU   *-DCBI
OPENI    OPEN  (*,OUTPUT),                                             +
               MODE=31,                                                +
               MF=L
OPENL    EQU   *-OPENI

BROWSE   DC    CL8'BROWSE'
LMINIT   DC    CL8'LMINIT'
DATAID   DC    CL8'DATAID'
LIBBRWS  DC    CL8'LIBBRWS'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDTBRWS      DSECT
              LIBSAVE DSECT=NO
              VTAMREQ DSECT=NO

DXD_DCB               DS   0F,(DCBL)X
DXD_OPEN_CLOSE        DS   0F,(OPENL)X

DXD_SPF_PARMS         DS   0A
DXD_SPF_1             DS   A
DXD_SPF_2             DS   A
DXD_SPF_3             DS   A
DXD_SPF_4             DS   A
DXD_SPF_5             DS   A
DXD_SPF_6             DS   A
DXD_SPF_7             DS   A
DXD_SPF_8             DS   A
DXD_SPF_9             DS   A
DXD_SPF_10            DS   A

DXD_AUX01             DS   A

DXD_CURRENT_RECORDS   DS   F

DXD_EXPANDED_LENGTH   DS   A           LENGTH OF EXPANDED DATA
DXD_COMPRESSED_LENGTH DS   A           LENGTH OF COMPRESSED DATA

DXD_SOURCE_RECORDS    DS   F           NUMBER OF RECORDS IN SOURCE

DXD_SAVE_R14          DS   A

DXD_DISPLAY_RC        DS   H           RETURN CODE FROM DISPLAY

                      UX01PARM DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                      TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                      LIBSPFD  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                      NETBLOK  DSECT=YES
NET_LIB_NAME          DS       CL8
NET_MEM_NAME          DS       CL8
NET_MEM_VERSION       DS       XL2
NET_BROWSE_LENGTH     EQU      *-NETBLOK
                      ORG      NET_DATA
NET_SOURCE_RECORDS    DS       XL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBRECD DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB  AM=VTAM
ACBL     EQU     *-IFGACB
         LIBBLOK DSECT=YES
         IHAPSA  DSECT=YES,LIST=NO
         DCBD    DSORG=PS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
$MAX_SOURCE_SIZE EQU 8000
         COPY REGEQU
         END  LIBTBRWS
./ ADD NAME=LIBTCKIN 0100-09250-09250-0919-00562-00562-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTCKIN                                              *
*                                                                     *
*  Function:                                                          *
*   MEMBER CHECK-IN                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTCKIN CSECT
LIBTCKIN AMODE 31
LIBTCKIN RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTCKIN,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     INIT0000
MODID    DC    CL8'LIBTCKIN'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTCKIN,R13                   DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
*---------------------------------------------------------------------*
*        Verify the user is authorized                                *
*---------------------------------------------------------------------*
         MVI   NET_FUNCTION,$NET_CHECK_IN_AUTH
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION
         LA    R1,NET_CHECK_IN_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         BAL   R8,SEND0020
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?
         BNE   ERR0010                        NO
*---------------------------------------------------------------------*
*        Get the member's description                                 *
*---------------------------------------------------------------------*
         ITRACE ID=GETDESC
         MVC   SPF_COMM1,COMM_BLANKS
         MVC   SPF_COMM2,COMM_BLANKS
         MVC   SPF_COMM3,COMM_BLANKS
         MVC   SPF_COMM4,COMM_BLANKS
         MVC   SPF_COMM5,COMM_BLANKS
         MVI   NET_FUNCTION,$NET_GET_DESC
         LA    R1,NET_CHECK_IN_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         BAL   R8,SEND0020
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK        ANY COMMENTS?
         BNE   CKIN0000                       NO
         SR    R14,R14                        CLEAR REGISTER
         ICM   R14,3,NET_LENGTH               LENGTH RETURNED
         SH    R14,=Y(NET_CHECK_IN_LENGTH)
         BZ    CKIN0000                       NO DESCRIPTION
         LA    R15,NET_MEM_DOC                FIRST LINE IN I/O AREA
         LA    R1,SPF_COMM1                   FIRST LINE IN SPF AREA
INIT0010 DS    0H
         MVC   0(L'SPF_COMM1,R1),0(R15)       COPY TO SPF AREA
         AH    R15,=Y(L'SPF_COMM1)            NEXT IN SPF AREA
         AH    R1,=Y(L'SPF_COMM1)             NEXT IN I/O AREA
         SH    R14,=Y(L'SPF_COMM1)            MINUS LENGTH OF 1 AREA
         BH    INIT0010
*---------------------------------------------------------------------*
*        Display the CHECK-IN panel                                   *
*---------------------------------------------------------------------*
CKIN0000 DS    0H
         ITRACE ID=DISPLAY
         MVC   SPF_PANEL,INPANEL              SET PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS
         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS
         ST    R1,DXD_SPF_2                   SET ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDRESS
         BALR  R14,R15                        DISPLAY THE PANEL
         STH   R15,DXD_DISPLAY_RC             SAVE RETURN CODE
         CLC   =C'END ',SPF_ZCMD              DID THE USER ENTER 'END'?
         BE    ABORT000                       YES
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE
         LTR   R15,R15                        ZERO?
         BNZ   ABORT000                       NO
*---------------------------------------------------------------------*
*        Determine the source dataset's DSORG                         *
*---------------------------------------------------------------------*
         MVC   SUB0001_PARM_DSN,SPF_USER_DSN
         LA    R1,SUB0001_PARM_LIST           SUB0001 PARM LIST ADDRESS
         L     R15,VSUB0001                   SUB0001 ENTRY POINT
         ITRACE ID=CALLSUB1,                                           +
               RDATA1=R1,                                              +
               RDATA2=R15
         BALR  R14,R15                        CALL SUB0001
         ITRACE ID=DSORG,                                              +
               DATA1=SUB0001_PARM_DSORG
         CLI   SUB0001_PARM_DSORG,C'S'
         BE    CKIN0010                       SEQUENTIAL
         CLI   SUB0001_PARM_DSORG,C'P'
         BE    CKIN0020                       PARTITIONED
         MVC   SPF_MSG1(MSG01L),MSG01
         B     CKIN0000                       RE-SEND WITH MESSAGE
CKIN0010 DS    0H
         ITRACE ID=SEQ
         CLC   SPF_USER_MEMBER,COMM_BLANKS
         BE    CKIN0030
         MVC   SPF_MSG1(MSG03L),MSG03
         B     CKIN0000                       RE-SEND WITH MESSAGE
CKIN0020 DS    0H
         ITRACE ID=PDS
         CLC   SPF_USER_MEMBER,COMM_BLANKS
         BNE   CKIN0030
         ITRACE ID=NOMEM
         MVC   SPF_MSG1(MSG04L),MSG04
         B     CKIN0000                       RE-SEND WITH MESSAGE
CKIN0030 DS    0H
         BAL   R8,DAIR0100                    ALLOCATE EXISTING FILE
         CLI   SUB0001_PARM_DSORG,C'S'        SEQUENTIAL FILE?
         BE    CKIN0040
         ITRACE ID=VERMEM                     VERIFYING MEMBER EXISTS
         GETMAIN RU,                                                   +
               LV=PO_DCBL,                                             +
               LOC=BELOW
         LR    R7,R1                          SAVE ADDRESS
         MVC   0(PO_DCBL,R7),PO_DCBI          INITIALIZE THE DCB
         GETMAIN RU,                                                   +
               LV=OPENL,                                               +
               LOC=BELOW
         LR    R6,R1                          SAVE ADDRESS
         MVC   0(OPENL,R6),OPENI              INITIALIZE OPEN
         OPEN  ((R7),INPUT),                                           +
               MODE=31,                                                +
               MF=(E,(R6))
         FIND  (R7),                                                   +
               SPF_USER_MEMBER,                                        +
               D
         STH   R15,DXD_FIND_RC
         MVC   0(CLOSEL,R6),CLOSEI
         CLOSE ((R7)),                                                 +
               MODE=31,                                                +
               MF=(E,(R6))
         FREEMAIN RU,                                                  +
               A=(R6),                                                 +
               LV=OPENL
         FREEMAIN RU,                                                  +
               A=(R7),                                                 +
               LV=PO_DCBL
         OC    DXD_FIND_RC,DXD_FIND_RC
         BZ    CKIN0040                       MEMBER DOES NOT EXIST
         MVC   SPF_MSG1(MSG02L),MSG02
         B     CKIN0000                       RE-SEND WITH MESSAGE
*---------------------------------------------------------------------*
*                                                                     *
*     The source dataset (or PDS member) has been allocated.          *
*                                                                     *
*     OPEN the source dataset.                                        *
*                                                                     *
*---------------------------------------------------------------------*
CKIN0040 DS    0H
         ITRACE ID=OPENSRC
         GETMAIN RU,                                                   +
               LV=PS_DCBL,                                             +
               LOC=BELOW
         LR    R7,R1                          COPY DCB ADDRESS
         GETMAIN RU,                                                   +
               LV=OPENL,                                               +
               LOC=BELOW
         LR    R6,R1                          COPY ADDRESS
         GETMAIN RU,                                                   +
               LV=PS_DCBEL,                                            +
               LOC=BELOW
         LR    R5,R1                          SAVE ADDRESS
         MVC   0(PS_DCBL,R7),PS_DCBI          INITIALIZE DCB
         MVC   0(OPENL,R6),OPENI              INITIALIZE PARM LIST
         MVC   0(PS_DCBEL,R5),PS_DCBEI
         USING IHADCB,R7
         ST    R5,DCBDCBE                     RELOCATE THE DCBE ADDRESS
         OPEN  ((R7),INPUT),                                           +
               MODE=31,                                                +
               MF=(E,(R6))
*---------------------------------------------------------------------*
*                                                                     *
*     GETMAIN the source dataset I/O area and initialize the          *
*     parameter list for the compression subroutine.                  *
*                                                                     *
*---------------------------------------------------------------------*
CKIN0050 DS    0H
         ITRACE ID=INITCMPR                   INITIALIZING PARMS
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=BELOW
         ST    R1,UX01_EXPANDED_BUFFER
         LA    R1,DXD_EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,DXD_COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER
         ST    R1,UX01_COMPRESSED_BUFFER
         SR    R4,R4                          INITIALIZE LENGTH
*---------------------------------------------------------------------*
*                                                                     *
*     Send the description.                                           *
*                                                                     *
*---------------------------------------------------------------------*
         MVC   NET_MEM_DOC+000(80),SPF_COMM1
         MVC   NET_MEM_DOC+080(80),SPF_COMM2
         MVC   NET_MEM_DOC+160(80),SPF_COMM3
         MVC   NET_MEM_DOC+240(80),SPF_COMM4
         MVC   NET_MEM_DOC+320(80),SPF_COMM5
         LA    R14,400                        MAXIMUM LENGTH
         LA    R15,SPF_COMM5                  ADDRESS OF LAST COMMENT
         LA    R1,5                           MAX LOOPS
CKIN0060 DS    0H
         CLC   COMM_BLANKS,0(R15)             ALL BLANK?
         BNE   CKIN0070                       NO
         SH    R14,H80                        MINUS LENGTH OF ONE
         SH    R15,H80                        MINUS LENGTH OF A COMMENT
         BCT   R1,CKIN0060                    LOOP
CKIN0070 DS    0H
         LTR   R14,R14                        ANY COMMENTS?
         BZ    CKIN0080                       NO
         MVI   NET_FUNCTION,$NET_SEND_DESC
         LA    R14,NET_CHECK_IN_LENGTH(R14)
         STCM  R14,3,NET_LENGTH               SET LENGTH
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION
         ITRACE ID=SENDDESC
         BAL   R8,SEND0020                    SEND DESCRIPTION
         BAL   R8,RECV0000                    RECEIVE RESPONSE
         CLI   NET_RETURN_CODE,$NET_OK        SUCCESSFUL?
         BNE   ERR0020
*---------------------------------------------------------------------*
*                                                                     *
*     Send the source to the librarian.                               *
*                                                                     *
*     The data is read a record at a time into a buffer.              *
*     When the buffer is filled it is compressed and sent to          *
*     the librarian.                                                  *
*                                                                     *
*---------------------------------------------------------------------*
CKIN0080 DS    0H
         SR    R3,R3                          CLEAR RECORD COUNTER
         SR    R4,R4                          CLEAR FOR BUFFER LENGTH
         L     R2,UX01_EXPANDED_BUFFER        CURRENT BUFFER ADDRESS
CKIN0090 DS    0H
         GET   (R7),0(R2)                     READ A RECORD
         LA    R3,1(R3)                       PLUS 1 SOURCE RECORD
         LA    R4,80(R4)                      UPDATE BUFFER LENGTH
         LA    R2,80(R2)                      UPDATE BUFFER ADDRESS
         CH    R4,=Y($MAX_SOURCE_SIZE)        BUFFER FULL?
         BL    CKIN0090                       NO
         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH
         MVI   NET_FUNCTION,$NET_CHECK_IN_SOURCE
         BAL   R8,SEND0000                    SEND THIS BUFFER
         BAL   R8,RECV0000                    RECEIVE RESPONSE
         SR    R4,R4                          RESET BUFFER LENGTH
         L     R2,UX01_EXPANDED_BUFFER        RESET BUFFER ADDRESS
         B     CKIN0090                       READ NEXT RECORD
* ------------------------------------------------------------------- *
*                                                                     *
*     EOF has been reached on the source file.                        *
*     Send the last buffer.                                           *
*     Send the number of records in the source file.                  *
*                                                                     *
* ------------------------------------------------------------------- *
EOF0000  DS    0H
         ITRACE ID=EOF
         MVI   NET_RETURN_CODE,$NET_EOF       SET EOF
         MVI   NET_FUNCTION,$NET_CHECK_IN_SOURCE
         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH
         BAL   R8,SEND0000                    SEND LAST BUFFER
         BAL   R8,RECV0000                    RECEIVE RESPONSE
         MVI   NET_FUNCTION,$NET_SEND_RECORDS
         MVI   NET_RETURN_CODE,$NET_OK
         STCM  R3,15,NET_SOURCE_RECORDS       NUMBER OF SOURCE RECORDS
         LA    R1,NETBLOKL+L'NET_SOURCE_RECORDS
         STCM  R1,3,NET_LENGTH                SET LENGTH
         BAL   R8,SEND0020                    SEND NUMBER OF RECORDS
         BAL   R8,RECV0000                    RECEIVE RESPONSE
         MVC   0(CLOSEL,R6),CLOSEI
         CLOSE ((R7)),                                                 +
               MODE=31,                                                +
               MF=(E,(R6))
         FREEMAIN RU,                                                  +
               A=(R7),                                                 +
               LV=PS_DCBL
         FREEMAIN RU,                                                  +
               A=(R6),                                                 +
               LV=OPENL
         FREEMAIN RU,                                                  +
               A=(R5),                                                 +
               LV=PS_DCBEL
         L     R1,UX01_EXPANDED_BUFFER        INPUT BUFFER ADDRESS
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=$MAX_SOURCE_SIZE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*     Abort this CHECK-IN.                                            *
*                                                                     *
* ------------------------------------------------------------------- *
ABORT000 DS    0H
         ITRACE ID=ABORT
         MVC   SPF_MSG1(MSG06L),MSG06
         MVC   DXD_DISPLAY_RC,H8
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0100 DS    0H
         ITRACE ID=DAIRALE
         XC    DAIRREQ(DAIRL),DAIRREQ
         MVI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING DATASET
         MVC   DAIR_DD,LIBTEMP                SET DDNAME
         MVC   DAIR_DSN,SPF_USER_DSN
         MVC   DAIR_MEMBER,SPF_USER_MEMBER
         LA    R1,DAIRREQ                     DAIR PARM BLOCK ADDRESS
         ITRACE ID=CALLSUB4,                                           +
               RDATA1=R1
         L     R15,VSUB0004                   DAIR SUBR ENTRY POINT
         BALR  R14,R15                        LINK TO DAIR SUBROUTINE
         ITRACE ID=DAIR_R15,                                           +
               DATA1=DAIR_R15
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   DAIR0110                       NO
         OI    DXD_FLAG,$ALLOCATED            SET ALLOCATED INDICATOR
         BR    R8
DAIR0110 DS    0H
         ITRACE ID=DAIRFAIL
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         ITRACE ID=COMPRESS,                                           +
               RDATA1=R4
         SR    R0,R0
         LTR   R4,R4                          ANY DATA TO SEND?
         BZ    SEND0010                       NO
         MVI   UX01_FUNCTION,$UX01_COMPRESS
         LA    R1,UX01_PARMS
         L     R15,AUX01                      COMPRESSION ENTRY POINT
         BALR  R14,R15                        COMPRESS THE DATA
SEND0010 DS    0H
         L     R1,DXD_COMPRESSED_LENGTH
         LA    R1,NETBLOKL(R1)                PLUS HEADER LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
SEND0020 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0030
         ITRACE ID=VTAMSEND,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0040
SEND0030 DS    0H
         ITRACE ID=IP_SEND,                                            +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0040 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOTAUTH
         MVC   SPF_MSG1,NET_MSG_1
         MVC   SPF_MSG2,NET_MSG_2
         MVC   SPF_MSG3,NET_MSG_3
         MVC   SPF_MSG4,NET_MSG_4
         MVC   SPF_MSG5,NET_MSG_5
         MVI   DXD_DISPLAY_RC+1,X'12'
         B     EXIT0000
ERR0020  DS    0H
         ITRACE ID=DESCFAIL
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR PRIMARY COMMAND
         TM    DXD_FLAG,$ALLOCATED            SOURCE DATASET ALLOCATED?
         BNO   EXIT0010                       NO
         ITRACE ID=RELEASE
         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)
         MVC   DAIR_DSN,LIBTEMP               SET DDNAME
         LA    R1,DAIRREQ                     REQUEST BLOCK ADDRESS
         L     R15,VSUB0004                   DAIR SUBR ENTRY POINT
         BALR  R14,R15                        LINK TO SUBROUTINE
         NI    DXD_FLAG,255-$ALLOCATED
EXIT0010 DS    0H
         LH    R15,DXD_DISPLAY_RC             SET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTCKIN)                    DISPLACEMENT TO WORK AREA
VSUB0001 DC    V(SUB0001)
VSUB0004 DC    V(SUB0004)
INPANEL  DC    CL8'INPANEL'
DISPLAY  DC    CL8'DISPLAY'
LIBTEMP  DC    CL8'LIBTEMP'

PO_DCBI  DCB   DSORG=PO,                                               +
               DDNAME=LIBTEMP,                                         +
               MACRF=R
PO_DCBL  EQU   *-PO_DCBI
PS_DCBI  DCB   DSORG=PS,                                               +
               DDNAME=LIBTEMP,                                         +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               DCBE=PS_DCBEI,                                          +
               MACRF=GM
PS_DCBL  EQU   *-PS_DCBI
PS_DCBEI DCBE  EODAD=EOF0000
PS_DCBEL EQU   *-PS_DCBEI

OPENI    OPEN  (*,INPUT),MF=L,MODE=31
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MF=L,MODE=31
CLOSEL   EQU   *-CLOSEI

H8       DC    H'8'
H80      DC    H'80'

MSG01    DC    CL11'LIBCKIN01E'
         DC    C'Source data set not found'
MSG01L   EQU   *-MSG01
MSG02    DC    CL11'LIBCKIN02E'
         DC    C'Member not found'
MSG02L   EQU   *-MSG02
MSG03    DC    CL11'LIBCKIN03E'
         DC    C'Member name not allowed if dataset is sequential'
MSG03L   EQU   *-MSG03
MSG04    DC    CL11'LIBCKIN04E'
         DC    C'Member name is required when dataset is partitioned'
MSG04L   EQU   *-MSG04
MSG05    DC    CL11'LIBCKIN05I'
         DC    C'Press PF3, PF4 or enter END to abort CHECK IN'
MSG05L   EQU   *-MSG05
MSG06    DC    CL11'LIBCKIN06I'
         DC    C'CHECK IN aborted'
MSG06L   EQU   *-MSG06

         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDTCKIN      DSECT
              LIBSAVE DSECT=NO
              DAIRREQ DSECT=NO
              VTAMREQ DSECT=NO
              UX01PARM DSECT=NO

DXD_SPF_PARMS          DS  0F
DXD_SPF_1              DS   F
DXD_SPF_2              DS   F

DXD_EXPANDED_LENGTH    DS   A           LENGTH OF EXPANDED DATA
DXD_COMPRESSED_LENGTH  DS   A           LENGTH OF COMPRESSED DATA

DXD_SOURCE_RECORDS     DS   F           NUMBER OF RECORDS IN SOURCE
DXD_CURRENT_RECORDS    DS   F           NUMBER OF RECORDS IN BUFFER

SUB0001_PARM_LIST      DS   0A
SUB0001_PARM_DSN       DS   CL44
SUB0001_PARM_DSORG     DS   C

DXD_FIND_RC            DS   H           RETURN CODE FROM DISPLAY
DXD_DISPLAY_RC         DS   H           RETURN CODE FROM DISPLAY

DXD_FLAG               DS   X
$ALLOCATED             EQU  X'80'       DATASET IS ALLOCATED

* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                        NETBLOK DSECT=YES
NET_LIB_NAME            DS  CL8
NET_MEM_NAME            DS  CL8
NET_MEM_VERSION         DS  XL2
NET_MEM_DOC             DS  0C
NET_CHECK_IN_LENGTH     EQU *-NETBLOK
                        ORG NET_DATA
NET_SOURCE_RECORDS      DS  XL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBRECD DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB  AM=VTAM
ACBL     EQU     *-IFGACB
         LIBBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         DCBD    DSORG=PS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
$MAX_SOURCE_SIZE EQU 8000
         COPY REGEQU
         END  LIBTCKIN
./ ADD NAME=LIBTCKOT 0100-09250-09250-0919-00768-00768-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTCKOT                                              *
*                                                                     *
*  Function:                                                          *
*   Member CHECK-OUT                                                  *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTCKOT CSECT
LIBTCKOT AMODE 31
LIBTCKOT RMODE 24
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTCKOT,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     INIT0000
MODID    DC    CL8'LIBTCKOT'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTCKOT,R13                   DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
         MVI   DXD_FLAG,0                     RESET ALL FLAGS
*---------------------------------------------------------------------*
*        Verify the user is authorized                                *
*---------------------------------------------------------------------*
         MVI   NET_FUNCTION,$NET_CHECK_OUT_AUTH
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION
         LA    R1,NET_CHECK_OUT_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?
         BNE   ERR0020                        NO
         MVC   DXD_SOURCE_RECORDS,NET_SOURCE_RECORDS
         MVC   COMM_SOURCE_RECORDS,NET_SOURCE_RECORDS
         ITRACE ID=RECORDS,                                            +
               DATA1=DXD_SOURCE_RECORDS
*---------------------------------------------------------------------*
*        Display the check-out panel                                  *
*---------------------------------------------------------------------*
CKOT0000 DS    0H
         ITRACE ID=DISPLAY
         MVC   SPF_PANEL,OUTPANEL             SET PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS
         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS
         ST    R1,DXD_SPF_2                   SET ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDRESS
         BALR  R14,R15                        DISPLAY THE PANEL
         STH   R15,DXD_DISPLAY_RC             SAVE RETURN CODE
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE
         MVC   SPF_MSG2,COMM_BLANKS           CLEAR MESSAGE
         MVC   SPF_MSG3,COMM_BLANKS           CLEAR MESSAGE
         MVC   SPF_MSG4,COMM_BLANKS           CLEAR MESSAGE
         MVC   SPF_MSG5,COMM_BLANKS           CLEAR MESSAGE
         LTR   R15,R15                        ZERO?
         BNZ   ABORT000                       NO
*---------------------------------------------------------------------*
*        Determine the output dataset DSORG                           *
*---------------------------------------------------------------------*
         ITRACE ID=USERDSN,                                            +
               DATA1=SPF_USER_DSN+00,                                  +
               DATA2=SPF_USER_DSN+08
         ITRACE ID=USERDSN1,                                           +
               DATA1=SPF_USER_DSN+16,                                  +
               DATA2=SPF_USER_DSN+24
         ITRACE ID=USERDSN2,                                           +
               DATA1=SPF_USER_DSN+32,                                  +
               DATA2=SPF_USER_DSN+40
         MVC   SUB0001_PARM_DSN,SPF_USER_DSN
         LA    R1,SUB0001_PARM_LIST           SUB0001 PARM LIST ADDRESS
         L     R15,VSUB0001                   SUB0001 ENTRY POINT
         ITRACE ID=CALLSUB1,                                           +
               RDATA1=R1,                                              +
               RDATA2=R15
         BALR  R14,R15                        CALL SUB0001
         ITRACE ID=DSORG,                                              +
               DATA1=SUB0001_PARM_DSORG
         CLI   SUB0001_PARM_DSORG,C'S'
         BE    CKOT0010                       SEQUENTIAL
         CLI   SUB0001_PARM_DSORG,C'P'
         BE    CKOT0020                       PARTITIONED
         CLI   SUB0001_PARM_DSORG,C'X'
         BE    CKOT0060                       UNCATALOGED
         MVC   SPF_MSG1(MSG01L),MSG01
         B     CKOT0000                       RE-SEND WITH MESSAGE
CKOT0010 DS    0H
         ITRACE ID=SEQ
         CLC   SPF_USER_MEMBER,COMM_BLANKS
         BE    CKOT0040
         MVC   SPF_MSG1(MSG03L),MSG03
         B     CKOT0000                       RE-SEND WITH MESSAGE
CKOT0020 DS    0H
         ITRACE ID=PDS
         CLC   SPF_USER_MEMBER,COMM_BLANKS
         BNE   CKOT0030
         ITRACE ID=NOMEM
         MVC   SPF_MSG1(MSG04L),MSG04
         B     CKOT0000                       RE-SEND WITH MESSAGE
CKOT0030 DS    0H
         OI    DXD_FLAG,$NO_MEMBER            SET NO MEMBER FLAG
         BAL   R8,DAIR0100                    ALLOCATE EXISTING FILE
         NI    DXD_FLAG,255-$NO_MEMBER
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   CKOT0000                       NO
         ITRACE ID=VERMEM                     VERIFYING MEMBER EXISTS
         GETMAIN RU,                                                   +
               LV=PODCBL,                                              +
               LOC=BELOW
         ST    R1,DXD_DCB_ADDR                SAVE DCB ADDRESS
         LR    R3,R1                          SAVE ADDRESS
         MVC   0(PODCBL,R3),PODCBI            INITIALIZE THE DCB
         GETMAIN RU,                                                   +
               LV=OPENL,                                               +
               LOC=BELOW
         ST    R1,DXD_OPEN_ADDR               SAVE ADDRESS
         LR    R2,R1                          SAVE ADDRESS
         MVC   0(OPENL,R2),OPENI              INITIALIZE OPEN
         OPEN  ((R3),INPUT),                                           +
               MODE=31,                                                +
               MF=(E,(R2))
         FIND  (R3),                                                   +
               SPF_USER_MEMBER,                                        +
               D
         STH   R15,DXD_FIND_RC
         MVC   0(CLOSEL,R2),CLOSEI
         CLOSE ((R3)),                                                 +
               MODE=31,                                                +
               MF=(E,(R2))
         FREEMAIN RU,                                                  +
               A=(R2),                                                 +
               LV=OPENL
         XC    DXD_OPEN_ADDR,DXD_OPEN_ADDR
         FREEMAIN RU,                                                  +
               A=(R3),                                                 +
               LV=PODCBL
         XC    DXD_DCB_ADDR,DXD_DCB_ADDR
         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)
         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS
         L     R15,VSUB0004
         BALR  R14,R15
         OC    DXD_FIND_RC,DXD_FIND_RC
         BNZ   CKOT0050                       MEMBER DOES NOT EXIST
* ------------------------------------------------------------------- *
*                                                                     *
*    The output dataset (or PDS member) already exists.               *
*                                                                     *
*    Make sure the user wants to replace/over-write it.               *
*                                                                     *
* ------------------------------------------------------------------- *
CKOT0040 DS    0H
         ITRACE ID=EXISTS
         TM    SUB0001_PARM_RECFM,DS1RECFV
         BO    CKOT0042
         CLC   SUB0001_PARM_LRECL,H80
         BNE   CKOT0044
         CLC   SPF_OPTION,=C'YES '            REPLACE/OVER-WRITE?
         BE    CKOT0050                       YES
         CLC   SPF_OPTION,=C'Y   '            REPLACE/OVER-WRITE?
         BE    CKOT0050                       YES
         MVC   SPF_MSG1(MSG05L),MSG05         SET MESSAGE
         B     CKOT0000                       RE-ISSUE WITH MESSAGE
CKOT0042 DS    0H
         MVC   SPF_MSG1(MSG11L),MSG11         SET MESSAGE
         B     CKOT0000                       RE-ISSUE WITH MESSAGE
CKOT0044 DS    0H
         MVC   SPF_MSG1(MSG12L),MSG12         SET MESSAGE
         B     CKOT0000                       RE-ISSUE WITH MESSAGE
* ------------------------------------------------------------------- *
CKOT0050 DS    0H
         BAL   R8,DAIR0100                    ALLOCATE OUTPUT DATASET
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   CKOT0000                       NO
         B     CKOT0080
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
CKOT0060 DS    0H
         CLC   SPF_USER_MEMBER,COMM_BLANKS
         BE    CKOT0070
         MVC   SPF_MSG1(MSG02L),MSG02
CKOT0070 DS    0H
         ITRACE ID=DISPLAY2
         MVC   SPF_PANEL,ALOPANEL             SET PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS
         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS
         ST    R1,DXD_SPF_2                   SET ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDRESS
         BALR  R14,R15                        DISPLAY THE PANEL
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE
         BAL   R8,DAIR0200
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   CKOT0000                       NO
*---------------------------------------------------------------------*
*                                                                     *
*     The output dataset (or PDS member) has been allocated.          *
*                                                                     *
*     OPEN the output dataset.                                        *
*                                                                     *
*---------------------------------------------------------------------*
CKOT0080 DS    0H
         ITRACE ID=OPENOUT
         GETMAIN RU,                                                   +
               LV=PSDCBL,                                              +
               LOC=BELOW
         ST    R1,DXD_DCB_ADDR
         LR    R7,R1                          COPY DCB ADDRESS
         USING IHADCB,R7
         MVC   0(PSDCBL,R7),PSDCBI            INITIALIZE DCB
         TM    DXD_FLAG,$SET_BLKSIZE          SET BLOCKSIZE?
         BNO   CKOT0090                       NO
         MVC   DCBBLKSI,H4000                 SET BLOCK SIZE
CKOT0090 DS    0H
         GETMAIN RU,                                                   +
               LV=EXLSTL,                                              +
               LOC=BELOW
         ST    R1,DXD_EXLST_ADDR
         MVC   0(EXLSTL,R1),EXLSTI            INITIALIZE THE EXIT LIST
         STCM  R1,7,DCBEXLSA                  SET ADDRESS IN DCB
         LR    R2,R1                          SAVE EXIT LIST ADDRESS
         GETMAIN RU,                                                   +
               LV=DCB1000L,                                            +
               LOC=BELOW
         ST    R1,DXD_EXIT_ADDR
         MVC   0(DCB1000L,R1),DCB1000
         LA    R0,DCB0000
         ST    R0,DCB0000_ADDRESS-DCB1000(R1)
         OI    DCB0000_ADDRESS-DCB1000(R1),X'80'
         ST    R13,WORK_AREA_ADDRESS-DCB1000(R1)
         STCM  R1,7,1(R2)                     SET ADDRESS IN EXIT LIST
         GETMAIN RU,                                                   +
               LV=OPENL,                                               +
               LOC=BELOW
         ST    R1,DXD_OPEN_ADDR
         LR    R6,R1                          COPY ADDRESS
         MVC   0(OPENL,R6),OPENI              INITIALIZE PARM LIST
         OPEN  ((R7),OUTPUT),                                          +
               MODE=31,                                                +
               MF=(E,(R6))
*---------------------------------------------------------------------*
*                                                                     *
*     GETMAIN the output dataset I/O area and initialize the          *
*     parameter list for the de-compression subroutine.               *
*                                                                     *
*---------------------------------------------------------------------*
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=ANY
         ST    R1,UX01_EXPANDED_BUFFER
         LA    R1,DXD_EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER
         ST    R1,UX01_COMPRESSED_BUFFER
         LA    R1,DXD_COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
*---------------------------------------------------------------------*
*     Get source from library, de-compress, write to output dataset   *
*---------------------------------------------------------------------*
CKOT0110 DS    0H
         ITRACE ID=GETSRC
         MVI   NET_FUNCTION,$NET_CHECK_OUT_SOURCE
         LA    R1,NETBLOKL                    LENGTH IS HEADER ONLY
         STCM  R1,3,NET_LENGTH                SET LENGTH
         BAL   R8,SEND0000                    SEND
         BAL   R8,RECV0000                    RECEIVE
         CLI   NET_RETURN_CODE,$NET_ERROR
         BE    ERR0010                        YES
         CLI   NET_RETURN_CODE,$NET_EOF
         BE    CKOT0200                       YES
         ITRACE ID=DECOMPRESS
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,NET_LENGTH
         SH    R1,=Y(NETBLOKL)
         ST    R1,DXD_COMPRESSED_LENGTH       LENGTH OF COMPRESSED DATA
         L     R4,DXD_SOURCE_RECORDS          NUMBER OF SOURCE RECORDS
         CH    R4,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?
         BL    CKOT0120                       NO
         LH    R4,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER
CKOT0120 DS    0H
         ST    R4,DXD_CURRENT_RECORDS         NUMBER IN CURRENT BUFFER
         L     R1,DXD_SOURCE_RECORDS          NUMBER OF RECORDS LEFT
         SR    R1,R4                          MINUS NUMBER IN BUFFER
         ST    R1,DXD_SOURCE_RECORDS          SAVE REMAINDER
         MH    R4,H80                         RECORDS * REC LENGTH
         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH
         MVI   UX01_FUNCTION,$UX01_DECOMPRESS
         LA    R1,UX01_PARMS                  DE-COMPRESS PARMS
         L     R15,AUX01                      DE-COMPRESS ENTRY POINT
         BALR  R14,R15                        DE-COMPRESS
         L     R2,UX01_EXPANDED_BUFFER        BUFFER ADDRESS
         L     R4,DXD_CURRENT_RECORDS         NUMBER OF RECORDS
         ITRACE ID=USERPUT,                                            +
               RDATA1=R4                      NUMBER OF RECORDS
CKOT0130 DS    0H
         PUT   (R7),(R2)                      WRITE TO USER'S DATA SET
         TM    DXD_FLAG,$X37                  DID A X-37 ABEND OCCUR?
         BO    CKOT0140                       YES
         LA    R2,80(R2)                      NEXT RECORD
         BCT   R4,CKOT0130                    LOOP
         ITRACE ID=BUFFDONE                   BUFFER HAS BEEN WRITTEN
         B     CKOT0110                       ASK FOR NEXT BLOCK
CKOT0140 DS    0H
         ITRACE ID=X37
         MVC   SPF_MSG1(MSG09L),MSG09         COPY MESSAGE
         UNPK  DXD_UNPACK(7),DXD_ABEND_CODE(4)
         MVZ   DXD_UNPACK,HEXZERO
         TR    DXD_UNPACK,HEXCHAR
         MVC   SPF_MSG1+(MSG09ERR-MSG09)(L'MSG09ERR),DXD_UNPACK
         MVC   SPF_MSG1+(MSG09RSN-MSG09)(L'MSG09RSN),DXD_UNPACK+3
         B     CKOT0210
CKOT0200 DS    0H
         ITRACE ID=EOF
CKOT0210 DS    0H
         MVC   0(CLOSEL,R6),CLOSEI
         CLOSE ((R7)),                                                 +
               MODE=31,                                                +
               MF=(E,(R6))
         L     R1,DXD_EXIT_ADDR
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=DCB1000L
         XC    DXD_EXIT_ADDR,DXD_EXIT_ADDR
         L     R1,DXD_EXLST_ADDR
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=EXLSTL
         XC    DXD_EXLST_ADDR,DXD_EXLST_ADDR
         L     R1,DXD_DCB_ADDR
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=PSDCBL
         XC    DXD_DCB_ADDR,DXD_DCB_ADDR
         L     R1,DXD_OPEN_ADDR
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=OPENL
         XC    DXD_OPEN_ADDR,DXD_OPEN_ADDR
         L     R1,UX01_EXPANDED_BUFFER
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE
         XC    UX01_EXPANDED_BUFFER,UX01_EXPANDED_BUFFER
         TM    DXD_FLAG,$X37
         BO    EXIT0000
         ITRACE ID=CONFIRM
         MVI   NET_FUNCTION,$NET_CONFIRM_CHECK_OUT
         LA    R1,NETBLOKL
         STCM  R1,3,NET_LENGTH
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0100 DS    0H
         ITRACE ID=DAIRALE
         XC    DAIRREQ(DAIRL),DAIRREQ
         MVI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING DATASET
         MVC   DAIR_DD,LIBTEMP                SET DDNAME
         MVC   DAIR_DSN,SPF_USER_DSN
         MVC   DAIR_MEMBER,COMM_BLANKS        CLEAR MEMBER NAME
         TM    DXD_FLAG,$NO_MEMBER            ALLOCATE MEMBER?
         BO    DAIR0210                       NO
         MVC   DAIR_MEMBER,SPF_USER_MEMBER
         B     DAIR0210
* ------------------------------------------------------------------- *
DAIR0200 DS    0H
         ITRACE ID=DAIR_NEW                   ALLOCATE NEW DATASET
         XC    DAIRREQ(DAIRL),DAIRREQ
         MVI   DAIR_CMD,$DAIR_NEW             ALLOCATE NEW
         MVC   DAIR_DD,LIBTEMP                SET DDNAME
         MVC   DAIR_DSN,SPF_USER_DSN
         MVC   DAIR_MEMBER,SPF_USER_MEMBER
         MVC   DAIRUNIT,SPF_UNIT
         MVC   DAIRBLKN,COMMBLKN              SET BLOCK LENGTH
         MVC   DAIRPRI,COMMPRI                SET PRIMARY QUANTITY
         MVC   DAIRSEC,COMMSEC                SET SECONDARY QUANTITY
         OI    DXD_FLAG,$SET_BLKSIZE          NEED TO SET BLOCK SIZE
* ------------------------------------------------------------------- *
DAIR0210 DS    0H
         LA    R1,DAIRREQ                     DAIR PARM BLOCK ADDRESS
         ITRACE ID=CALLSUB4,                                           +
               RDATA1=R1
         L     R15,VSUB0004                   DAIR SUBR ENTRY POINT
         BALR  R14,R15                        LINK TO DAIR SUBROUTINE
         ITRACE ID=DAIR_R15,                                           +
               DATA1=DAIR_R15
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BZR   R8                             YES
DAIR0220 DS    0H
         ITRACE ID=DAIRFAIL,                                           +
               DATA1=DAIR_R15
         MVC   SPF_MSG1(MSG06L),MSG06
         MVC   SPF_MSG2(MSG07L),MSG07
         UNPK  DXD_UNPACK(5),DAIR_R15(3)
         MVZ   DXD_UNPACK(4),HEXZERO
         TR    DXD_UNPACK(4),HEXCHAR
         MVC   SPF_MSG2+(MSG07R15-MSG07)(L'MSG07R15),DXD_UNPACK
         UNPK  DXD_UNPACK(5),DAIR_ERROR(3)
         MVZ   DXD_UNPACK(4),HEXZERO
         TR    DXD_UNPACK(4),HEXCHAR
         MVC   SPF_MSG2+(MSG07ERR-MSG07)(L'MSG07ERR),DXD_UNPACK
         UNPK  DXD_UNPACK(5),DAIR_INFO(3)
         MVZ   DXD_UNPACK(4),HEXZERO
         TR    DXD_UNPACK(4),HEXCHAR
         MVC   SPF_MSG2+(MSG07INFO-MSG07)(L'MSG07INFO),DXD_UNPACK
         L     R15,VDAIRMSG
         USING DAIR_MSG,R15                   DEFINE BASE
DAIR0230 DS    0H
         CLI   0(R15),X'FF'                   END OF TABLE?
         BER   R8                             YES, NO MORE INFO
         CLC   DAIR_MSG_CODE,DAIR_R15
         BE    DAIR0240                       FOUND IT
         A     R15,DAIR_MSG_LENGTH            LENGTH OF THIS ENTRY
         B     DAIR0230
DAIR0240 DS    0H
         LH    R14,DAIR_MSG_NBR               NBR OF LINES OF MESSAGE
         CH    R14,H3                         MORE THAN WE CAN DISPLAY?
         BNH   DAIR0250                       NO
         LH    R14,H3                         LIMIT TO 3 LINES
DAIR0250 DS    0H
         LA    R1,DAIR_MSG_TEXT               FIRST LINE OF TEXT
         LA    R2,SPF_MSG3                    FIRST SPF MESSAGE
DAIR0260 DS    0H
         MVC   0(L'SPF_MSG3_ID,R2),MSG08ID
         MVC   10(L'SPF_MSG3_TEXT,R2),0(R1)
         LA    R1,L'DAIR_MSG_TEXT(R1)
         LA    R2,L'SPF_MSG3(R2)
         BCT   R14,DAIR0260
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0010
         ITRACE ID=VTAMSEND,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0020
SEND0010 DS    0H
         ITRACE ID=IP_SEND,                                            +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOTEOF
         DC    H'0'
ERR0020  DS    0H
         ITRACE ID=NOTAUTH
         MVC   SPF_MSG1,NET_MSG_1
         MVC   SPF_MSG2,NET_MSG_2
         MVC   SPF_MSG3,NET_MSG_3
         MVC   SPF_MSG4,NET_MSG_4
         MVC   SPF_MSG5,NET_MSG_5
         MVI   DXD_DISPLAY_RC+1,X'04'
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ABORT000 DS    0H
         ITRACE ID=ABORT
         MVC   DXD_DISPLAY_RC,H8              FORCE A 'FAKE' ERROR
         MVC   SPF_MSG1(MSG10L),MSG10
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=RELEASE
         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)
         MVC   DAIR_DSN,LIBTEMP               SET DDNAME
         LA    R1,DAIRREQ                     REQUEST BLOCK ADDRESS
         L     R15,VSUB0004                   DAIR SUBR ENTRY POINT
         BALR  R14,R15                        LINK TO SUBROUTINE
EXIT0010 DS    0H
         LH    R15,DXD_DISPLAY_RC             SET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*     DCB error exit.                                                 *
*                                                                     *
*     When the DCB used to write to the user's data set is opened,    *
*     the address of an exit list is placed in DCBEXLSA.  It was      *
*     difficult to find the documentation for this.  The exit list    *
*     must be on a fullword boundary.  Each entry in the list is 4    *
*     bytes long.  The first byte is a "type".  The last three are    *
*     a 24-bit address.  The exit will receive control in 24-bit mode *
*     regardless of the AMODE used by the program that issued OPEN    *
*     and/or the PUT.  The first half of this is to switch AMODE to   *
*     31-bit (glue a 24-bit exit to 31-bit program).  The second      *
*     half sets the "X37" flag in the work area used by LIBTCKOT.     *
*                                                                     *
* ------------------------------------------------------------------- *
DCB0000  DS    0H
         DROP  R13
         USING DXDTCKOT,R2
         MVI   3(R1),X'04'                    SET 'ALLOW RECOVERY'
         OI    DXD_FLAG,$X37                  NOTIFY OURSELVES
         MVC   DXD_ABEND_CODE,0(R1)           SAVE ABEND CODE
         BSM   R0,R14
         DROP  R2
         USING DXDTCKOT,R13
* ------------------------------------------------------------------- *
*                                                                     *
*    Keep your eye on the bouncing ball...                            *
*                                                                     *
*    When an error occurs, the system will branch to this point.      *
*    The address of label DCB0000 with the 31-bit mode bit set        *
*    will have been placed in DCB0000_ADDRESS and the work area       *
*    (contents of R13) will have been placed in WORK_AREA_ADDRESS     *
*    when the DCB was OPENed.                                         *
*                                                                     *
*    R13 points to the system's register save area, not ours.         *
*                                                                     *
*    This sets R2 to the address of LIBTCKOT's work area, then        *
*    branches to DCB0000 in 31-bit mode (so LIBTCKOT's work area      *
*    can be accessed).                                                *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DCB1000            DS 0H
                   USING *,R15
                   L     R2,WORK_AREA_ADDRESS
                   L     R15,DCB0000_ADDRESS
                   BSM   R0,R15
DCB0000_ADDRESS    DS    A
WORK_AREA_ADDRESS  DS    A
                   DROP  R15
DCB1000L           EQU   *-DCB1000
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTCKOT)           DISPLACEMENT TO WORK AREA
VSUB0001 DC    V(SUB0001)
VSUB0004 DC    V(SUB0004)
VDAIRMSG DC    V(DAIRMSG)
OUTPANEL DC    CL8'OUTPANEL'
ALOPANEL DC    CL8'ALOPANEL'
DISPLAY  DC    CL8'DISPLAY'
LIBTEMP  DC    CL8'LIBTEMP'

PODCBI   DCB   DSORG=PO,                                               +
               DDNAME=LIBTEMP,                                         +
               MACRF=R
PODCBL   EQU   *-PODCBI
PSDCBI   DCB   DSORG=PS,                                               +
               DDNAME=LIBTEMP,                                         +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               EXLST=EXLSTI,                                           +
               MACRF=PM
PSDCBL   EQU   *-PSDCBI

* I finally found the exit list documented in:
* OS/390 V2R10.0 DFSMS: USING DATA SETS
* DOCUMENT NUMBER: SC26-7339-01
EXLSTI   DS    0F
         DC    0F,X'91',AL3(*)       EXIT CODE 11 + 'END OF LIST' BIT
EXLSTL   EQU   *-EXLSTI

HEXZERO  DC    8X'00'
HEXCHAR  DC    C'0123456789ABCDEF'

OPENI    OPEN  (*,INPUT),MF=L,MODE=31
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MF=L,MODE=31
CLOSEL   EQU   *-CLOSEI

H3       DC    H'3'
H8       DC    H'8'
H80      DC    H'80'
H4000    DC    H'4000'

MSG01    DC    CL11'LIBCKOT01E'
         DC    C'Your dataset must be sequential or partitioned'
MSG01L   EQU   *-MSG01
MSG02    DC    CL11'LIBCKOT02E'
         DC    C'New dataset will be sequential, member name ignored'
MSG02L   EQU   *-MSG02
MSG03    DC    CL11'LIBCKOT03E'
         DC    C'Member name not allowed if dataset is sequential'
MSG03L   EQU   *-MSG03
MSG04    DC    CL11'LIBCKOT04E'
         DC    C'Member name is required when dataset is partitioned'
MSG04L   EQU   *-MSG04
MSG05    DC    CL11'LIBCKOT05E'
         DC    C'Dataset (or member) already exists.  Not overwritten'
MSG05L   EQU   *-MSG05
MSG06    DC    CL11'LIBCKOT06E'
         DC    C'Output data set allocation failed.'
MSG06L   EQU   *-MSG06
MSG07    DC    CL11'LIBCKOT07I'
         DC    C'R15='
MSG07R15 DC    CL4' '
         DC    C', ERROR='
MSG07ERR DC    CL4' '
         DC    C', INFO='
MSG07INFO DC    CL4' '
MSG07L   EQU   *-MSG07
MSG08ID  DC    CL11'LIBCKOT08I'
MSG09    DC    CL11'LIBCKOT09E'
         DC    C'Abend '
MSG09ERR DC    XL3'00'
         DC    C'-'
MSG09RSN DC    XL3'00'
         DC    C' occurred writing to output data set'
MSG09L   EQU   *-MSG09
MSG10    DC    CL11'LIBCKOT10E'
         DC    C'Check out aborted'
MSG10L   EQU   *-MSG10
MSG11    DC    CL11'LIBCKOT11E'
         DC    C'Output data set must have RECFM=F or FB'
MSG11L   EQU   *-MSG11
MSG12    DC    CL11'LIBCKOT12E'
         DC    C'Output data set must have LRECL=80'
MSG12L   EQU   *-MSG12

         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDTCKOT      DSECT
              LIBSAVE DSECT=NO
              DAIRREQ DSECT=NO
              VTAMREQ DSECT=NO
              UX01PARM DSECT=NO

DXD_SPF_PARMS        DS  0F
DXD_SPF_1            DS   F
DXD_SPF_2            DS   F

DXD_EXPANDED_LENGTH    DS   F         LENGTH OF EXPANDED DATA
DXD_COMPRESSED_LENGTH  DS   F         LENGTH OF COMPRESSED DATA

DXD_SOURCE_RECORDS   DS   F           NUMBER OF RECORDS IN SOURCE
DXD_CURRENT_RECORDS  DS   F           NUMBER OF RECORDS IN BUFFER

DXD_DCB_ADDR         DS   A
DXD_OPEN_ADDR        DS   A
DXD_EXLST_ADDR       DS   A
DXD_EXIT_ADDR        DS   A

SUB0001_PARM_LIST    DS   0A
SUB0001_PARM_DSN     DS   CL44
SUB0001_PARM_DSORG   DS   C
SUB0001_PARM_RECFM   DS   X
SUB0001_PARM_LRECL   DS   XL2

DXD_FIND_RC          DS   H           RETURN CODE FROM DISPLAY
DXD_DISPLAY_RC       DS   H           RETURN CODE FROM DISPLAY

DXD_FLAG             DS   X
$X37                 EQU  X'80'       X-37 ABEND HAS OCCURRED
$NO_MEMBER           EQU  X'40'       ALLOCATE PDS (NOT MEMBER)
$SET_BLKSIZE         EQU  X'20'       SET BLOCK SIZE IN OUTPUT DCB

DXD_ABEND_CODE       DS   XL3         ABEND CODE (FROM DCB ABEND EXIT)
DXD_UNPACK           DS   CL8
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                        NETBLOK DSECT=YES
NET_LIB_NAME            DS  CL8
NET_MEM_NAME            DS  CL8
NET_MEM_VERSION         DS  XL2
NET_CHECK_OUT_LENGTH    EQU *-NETBLOK
                        ORG NET_DATA
NET_SOURCE_RECORDS      DS  XL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                        LIBRECD DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR_MSG                DSECT
DAIR_MSG_LENGTH         DS  AL2
DAIR_MSG_CODE           DS  XL6
DAIR_MSG_NBR            DS  AL2
DAIR_MSG_TEXT           DS  CL80
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         DCBD     DSORG=PS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
         IECSDSL1 1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
$MAX_SOURCE_SIZE   EQU  8000
         COPY REGEQU
         END  LIBTCKOT
./ ADD NAME=LIBTCOMM 0100-09250-09250-0919-00006-00006-00000-SOURCE
         USING     LIBTCOMM,R11
         TCOMM     TYPE=CSECT
         COPY      REGEQU
         IHAPSA    DSECT=YES,LIST=NO
         LIBSAVE   DSECT=YES
         END       LIBTCOMM
./ ADD NAME=LIBTDEL  0100-09250-09250-0919-00249-00249-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTDEL                                               *
*                                                                     *
*  Function:                                                          *
*   Delete a member                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTDEL  CSECT
LIBTDEL  AMODE 31
LIBTDEL  RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTDEL,R12                    DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     DEL0000
MODID    DC    CL8'LIBTDEL'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
DEL0000  DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTDEL,R13                    DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    DEL0010                        YES
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
DEL0010  DS    0H
         L     R7,COMM_NETWORK_IO_AREA        I/O AREA ADDRESS
         USING NETBLOK,R7                     DEFINE BASE
         XC    DXD_RC,DXD_RC                  INITIALIZE RETURN CODE
         MVC   SPF_MSG1,COMM_BLANKS
         MVC   SPF_MSG2,COMM_BLANKS
         MVC   SPF_MSG3,COMM_BLANKS
         MVC   SPF_MSG4,COMM_BLANKS
         MVC   SPF_MSG5,COMM_BLANKS
*---------------------------------------------------------------------*
*        Display the delete confirmation panel                        *
*---------------------------------------------------------------------*
DEL0100  DS    0H
         ITRACE ID=DISPLAY
         MVC   SPF_OPTION,COMM_BLANKS         INITIALIZE THE REPLY
         MVC   SPF_PANEL,DELPANEL             SET PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS
         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS
         ST    R1,DXD_SPF_2                   SET ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDRESS
         BALR  R14,R15                        DISPLAY THE PANEL
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15,                                             +
               DATA2=SPF_OPTION
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE(S)
         MVC   SPF_MSG2,COMM_BLANKS
         MVC   SPF_MSG3,COMM_BLANKS
         MVC   SPF_MSG4,COMM_BLANKS
         MVC   SPF_MSG5,COMM_BLANKS
         LTR   R15,R15                        ZERO?
         BNZ   DEL0300                        NO
         CLC   SPF_OPTION,=C'Y   '            DELETION CONFIRMED?
         BE    DEL0200                        YES
         CLC   SPF_OPTION,=C'YES '            DELETION CONFIRMED?
         BE    DEL0200                        YES
         CLC   SPF_OPTION,=C'N   '            DON'T DELETE?
         BE    DEL0300                        CORRECT
         CLC   SPF_OPTION,=C'NO  '            DON'T DELETE?
         BE    DEL0300                        CORRECT
         MVC   SPF_MSG1(MSG01L),MSG01
         B     DEL0100
* ------------------------------------------------------------------- *
*      Verify the user is authorized                                  *
* ------------------------------------------------------------------- *
DEL0200  DS   0H
         ITRACE ID=CHKAUTH
         MVI   NET_FUNCTION,$NET_CHECK_DEL_AUTH
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         MVC   NET_MEM_VER,COMM_VERSION       SET VERSION
         LA    R1,NET_DELETE_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?
         BNE   ERR0010                        NO
* ------------------------------------------------------------------- *
*      The user has confirmed they want to proceed with the           *
*      deletion and they have authorization.
* ------------------------------------------------------------------- *
         ITRACE ID=DELETE
         MVI   NET_FUNCTION,$NET_DELETE
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         MVC   NET_MEM_VER,COMM_VERSION       SET FUNCTION
         LA    R1,NET_DELETE_LENGTH           LENGTH TO SEND
         STCM  R1,3,NET_LENGTH                SET LENGTH
         BAL   R8,SEND0000                    SEND DELETE REQUEST
         BAL   R8,RECV0000                    RECEIVE RESPONSE
         MVC   SPF_MSG1,NET_MSG_1             COPY MESSAGE(S)
         MVC   SPF_MSG2,NET_MSG_2
         MVC   SPF_MSG3,NET_MSG_3
         MVC   SPF_MSG4,NET_MSG_4
         MVC   SPF_MSG5,NET_MSG_5
         CLI   NET_RETURN_CODE,$NET_OK        DELETE SUCCESSFUL?
         BE    EXIT0000                       YES
         MVI   DXD_RC+1,X'02'
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DEL0300  DS   0H
         ITRACE ID=ABORT
         MVC   SPF_MSG1(MSG02L),MSG02
         MVI   DXD_RC+1,X'12'
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0010
         ITRACE ID=VTAMSEND,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0020
SEND0010 DS    0H
         ITRACE ID=IP_SEND,                                            +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOTAUTH
         MVC   SPF_MSG1,NET_MSG_1
         MVC   SPF_MSG2,NET_MSG_2
         MVC   SPF_MSG3,NET_MSG_3
         MVC   SPF_MSG4,NET_MSG_4
         MVC   SPF_MSG5,NET_MSG_5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         LH    R15,DXD_RC                     SET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTDEL)                     DISPLACEMENT TO WORK AREA
DISPLAY  DC    CL8'DISPLAY'
DELPANEL DC    CL8'DELPANEL'
MSG01    DS    0C
         DC    CL11'LIBTDEL01E'
         DC    C'Invalid confirmation reply.  Enter Y(es) or N(o)'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'LIBTDEL02E'
         DC    C'Delete request aborted'
MSG02L   EQU   *-MSG02

         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDTDEL       DSECT
              LIBSAVE DSECT=NO
              VTAMREQ DSECT=NO

DXD_SPF_PARMS DS  0F
DXD_SPF_1     DS  F
DXD_SPF_2     DS  F

DXD_RC        DS  H                           RETURN CODE FROM DISPLAY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                      NETBLOK DSECT=YES
NET_LIB_NAME          DS   CL8
NET_MEM_NAME          DS   CL8
NET_MEM_VER           DS   XL2
NET_DELETE_LENGTH     EQU  *-NETBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBRECD DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB  AM=VTAM
ACBL     EQU     *-IFGACB
         LIBBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBTDEL
./ ADD NAME=LIBTDISP 0100-09250-09250-0919-00475-00475-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTDISP - Dynamic area manager                       *
*                                                                     *
*  Function:                                                          *
*   Manage the dynamic area displays.                                 *
*                                                                     *
*  This module expects the caller to provide:                         *
*                                                                     *
*    1) The panel name                                                *
*    2) The number of lines of text data                              *
*    3) The address of the text storage                               *
*    4) Length of each line of "detail" data                          *
*    5) The relative line number of the first line to be displayed    *
*    6) The offset to the data for the first line to be displayed     *
*                                                                     *
*  The caller may specify that the data be scrollable or non-         *
*  scrollable.  The caller may specify a cursor position.             *
*                                                                     *
*  If the user allows scrolling, the scroll commands are processed    *
*  here.                                                              *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTDISP CSECT
LIBTDISP AMODE 31
LIBTDISP RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTDISP,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     DISP0000
MODID    DC    CL8'LIBTDISP'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
DISP0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDDISP,R13                    DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    DISP0010                       YES
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
*---------------------------------------------------------------------*
*        Acquire storage for dynamic area                             *
*---------------------------------------------------------------------*
DISP0010 DS    0H
         ITRACE ID=PQUERY
         LA    R1,PQUERY                      COMMAND'S ADDRESS
         ST    R1,DXDSPF1                     SET IN PARM LIST
         LA    R1,SPF_PANEL                   PANEL NAME'S ADDRESS
         ST    R1,DXDSPF2                     SET IN PARM LIST
         LA    R1,CVDATA                      AREA NAME
         ST    R1,DXDSPF3                     SET IN PARM LIST
         LA    R1,CVTYPE                      AREA TYPE
         ST    R1,DXDSPF4                     SET IN PARM LIST
         LA    R1,CVWIDTH                     SCREEN DEPTH
         ST    R1,DXDSPF5                     SET IN PARM LIST
         LA    R1,CVDEPTH                     SCREEN WIDTH
         ST    R1,DXDSPF6                     SET IN PARM LIST
         LA    R1,CVROW                       SCREEN ROW
         ST    R1,DXDSPF7                     SET IN PARM LIST
         LA    R1,CVCOL                       SCREEN COLUMN
         ST    R1,DXDSPF8                     SET IN PARM LIST
         OI    DXDSPF8,X'80'                  FLAG 'END-OF-LIST'
         LA    R1,DXDSPF                      PQUERY PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE'S ADDRESS
         BALR  R14,R15                        ISSUE QUERY
         LTR   R15,R15                        PQUERY SUCCESSFUL?
         BNZ   ERR0020                        NO
         ITRACE ID=VDATA,                                              +
               DATA1=SPF_VWIDTH,                                       +
               DATA2=SPF_VDEPTH
         L     R0,SPF_VWIDTH                  SCREEN WIDTH
         MH    R0,SPF_VDEPTH+2                COMPUTE SIZE
         ST    R0,SPF_DYNAMIC_AREA_SIZE       DYNAMIC STORAGE AREA SIZE
         GETMAIN RU,                          STORAGE FOR DYNAMIC AREA +
               LV=(0),                        .. SIZE OF AREA          +
               LOC=ANY                        .. FROM ANY AREA
         ITRACE ID=VDA,                                                +
               RDATA1=R1
         ST    R1,SPF_DYNAMIC_AREA_ADDR       DYNAMIC AREA ADDRESS
*---------------------------------------------------------------------*
*        Define 'VDATA' to SPF                                        *
*---------------------------------------------------------------------*
         ITRACE ID=DEFVDATA,                  DEFINING 'VDATA'         +
               DATA1=SPF_DYNAMIC_AREA_ADDR,                            +
               DATA2=SPF_DYNAMIC_AREA_SIZE
         LA    R1,VDEFINE                     COMMAND'S ADDRESS
         ST    R1,DXDSPF1                     SET ADDRESS IN PARM LIST
         LA    R1,CVDATA                      VARIABLE NAME ADDRESS
         ST    R1,DXDSPF2                     SET ADDRESS IN PARM LIST
         MVC   DXDSPF3,SPF_DYNAMIC_AREA_ADDR
         LA    R1,CHARFORM                    DATA FORMAT ADDRESS
         ST    R1,DXDSPF4                     SET ADDRESS IN PARM LIST
         LA    R1,SPF_DYNAMIC_AREA_SIZE
         ST    R1,DXDSPF5                     SET ADDRESS IN PARM LIST
         OI    DXDSPF5,X'80'                  FLAG END-OF-LIST
         LA    R1,DXDSPF                      SPF PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF ENTRY POINT
         BALR  R14,R15                        DEFINE 'VDATA'
         LTR   R15,R15                        DEFINE SUCCESSFUL?
         BNZ   ERR0010                        NO
         TM    SPF_DISPLAY_FLAGS,$NO_SCROLL   SCROLLING?
         BO    DISP0150                       NO.. COPY TEXT INTACT
         MVC   SPF_LVLINE,SPF_VDEPTH
*---------------------------------------------------------------------*
*        Build dynamic area                                           *
*---------------------------------------------------------------------*
DISP0100 DS    0H
         ITRACE ID=BLDVDATA                   BUILDING 'VDATA'
         L     R0,SPF_DYNAMIC_AREA_ADDR
         L     R1,SPF_DYNAMIC_AREA_SIZE
         SR    R14,R14                        CLEAR REGISTER
         SR    R15,R15                        CLEAR REGISTER
         ICM   R15,8,COMM_BLANKS              SET PAD CHARACTER
         MVCL  R0,R14                         CLEAR DYNAMIC AREA
         L     R3,SPF_TEXT_ADDR               TEXT'S ADDRESS
         A     R3,SPF_TEXT_OFFSET             PLUS OFFSET
         ST    R3,DXDTEXT                     START OF DISPLAYED TEXT
         L     R4,SPF_TEXT_LINES              NUMBER OF TEXT LINES
         S     R4,SPF_TEXT_RELATIVE_LINE      MINUS RELATIVE LINE NBR
         C     R4,SPF_LVLINE                  MORE THAN DISPLAYABLE?
         BNH   DISP0110                       NO
         L     R4,SPF_LVLINE                  LIMIT TO DISPLAY SIZE
DISP0110 DS    0H
         ST    R4,DXDLINES                    SAVE DISPLAYABLE LINES
DISP0120 DS    0H
         L     R1,SPF_TEXT_LINE_LENGTH        TEXT'S WIDTH
         C     R1,SPF_VWIDTH                  TEXT WIDER THAN SCREEN?
         BNH   DISP0130                       NO
         L     R1,SPF_VWIDTH                  LIMIT TO SCREEN WIDTH
DISP0130 DS    0H
         L     R2,SPF_VWIDTH                  VISIBLE WIDTH
         SR    R2,R1                          MINUS USED WIDTH
         SRL   R2,1                           DIVIDE BY 2
         BCTR  R1,0                           FOR MVC
         STH   R2,DXD_LINE_OFFSET             SAVE OFFSET
         ITRACE ID=LINEOFF,                                            +
               RDATA1=R2
         A     R2,SPF_DYNAMIC_AREA_ADDR
DISP0140 DS    0H
         EX    R1,DYNMVC                      MOVE DATA TO DYNAMIC AREA
         A     R2,SPF_VWIDTH                  NEXT TEXT DATA LINE
         A     R3,SPF_TEXT_LINE_LENGTH        NEXT DYNAMIC AREA LINE
         BCT   R4,DISP0140                    LOOP
         B     DISP0160                       DISPLAY THE PANEL
*---------------------------------------------------------------------*
*        Copy text intact                                             *
*---------------------------------------------------------------------*
DISP0150 DS    0H
         L     R0,SPF_TEXT_ADDR               TEXT ADDRESS
         L     R1,SPF_TEXT_SIZE               TEXT SIZE
         L     R2,SPF_DYNAMIC_AREA_ADDR       VDATA ADDRESS
         L     R3,SPF_DYNAMIC_AREA_SIZE       VDATA SIZE
         ICM   R3,8,COMM_BLANKS               PAD CHARACTER
         MVCL  R2,R0                          COPY TEXT
*---------------------------------------------------------------------*
*        Display panel                                                *
*---------------------------------------------------------------------*
DISP0160 DS    0H
         ITRACE ID=DISPLAY
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXDSPF1                     SET ADDRESS IN PARM LIST
         LA    R1,SPF_PANEL                   PANEL'S NAME
         ST    R1,DXDSPF2                     SET ADDRESS IN PARM LIST
         OI    DXDSPF2,X'80'                  FLAG END-OF-LIST
         TM    SPF_DISPLAY_FLAGS,$NO_CURSOR   CURSOR DATA?
         BO    DISP0170                       NO
         OC    SPF_CURSOR_POSITION,SPF_CURSOR_POSITION                  ERO?
         BZ    DISP0170                       YES
         NI    DXDSPF2,X'7F'                  RESET END-OF-LIST
         LA    R1,COMM_BLANKS                 MESSAGE ID (BLANKS)
         ST    R1,DXDSPF3                     CLEAR MESSAGE ID
         LA    R1,CVDATA                      CURSOR FIELD NAME
         ST    R1,DXDSPF4                     VARIABLE NAME FOR CURSOR
         L     R1,SPF_CURSOR_POSITION
         LA    R1,1(R1)                       PLUS 1
         ST    R1,SPF_CURSOR_POSITION         SAVE UPDATED POSITION
         LA    R1,SPF_CURSOR_POSITION         CURSOR POSITION
         ST    R1,DXDSPF5                     SET CURSOR POSITION
         OI    DXDSPF5,X'80'                  FLAG END-OF-LIST
DISP0170 DS    0H
         LA    R1,DXDSPF                      PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE
         BALR  R14,R15                        DISPLAY PANEL
         STH   R15,DXDRC                      SAVE RETURN CODE
         ITRACE ID=DISPRC,                    TRACE RETURN FROM SPF    +
               RDATA1=R15,                    .. INCLUDE RETURN CODE   +
               DATA2=SPF_ZCMD                 .. AND NEW COMMAND
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE
         MVC   SPF_MSG2,COMM_BLANKS           CLEAR MESSAGE
         MVC   SPF_MSG3,COMM_BLANKS           CLEAR MESSAGE
         MVC   SPF_MSG4,COMM_BLANKS           CLEAR MESSAGE
         MVC   SPF_MSG5,COMM_BLANKS           CLEAR MESSAGE
         TM    SPF_DISPLAY_FLAGS,$NO_SCROLL   SCROLLING?
         BO    DISP0400                       NO..
         CH    R15,H8                         EXIT?
         BE    DISP2000                       YES
         CLI   SPF_ZCMD,C'X'                  EXIT?
         BE    DISP2000                       YES
         NI    DXDFLAG,255-$DXDVPUT           RESET VPUT FLAG
*---------------------------------------------------------------------*
*        Request scroll parameters                                    *
*---------------------------------------------------------------------*
DISP0180 DS    0H
         ITRACE ID=VGET                       REQUESTING SCROLL VARS
         LA    R1,VGET                        COMMAND'S ADDRESS
         ST    R1,DXDSPF1                     SET ADDRESS IN PARM LIST
         LA    R1,VGETVARS                    VARIABLE NAMES
         ST    R1,DXDSPF2                     SET ADDRESS IN PARM LIST
         LA    R1,SHARED                      FROM SHARED POOL
         ST    R1,DXDSPF3                     SET ADDRESS IN PARM LIST
         OI    DXDSPF3,X'80'                  SET END-OF-LIST
         LA    R1,DXDSPF                      PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE
         BALR  R14,R15                        DISPLAY PANEL
         ITRACE ID=VGETRC,                    VGET COMPLETE            +
               RDATA1=R15                     .. INCLUDE RETURN CODE
         LTR   R15,R15                        VGET SUCCESSFUL?
         BZ    DISP0190                       YES
         TM    DXDFLAG,$DXDVPUT               VPUT ALREADY ISSUED?
         BO    DISP0190                       YES
*---------------------------------------------------------------------*
*        Issue VPUT, try VGET again                                   *
*---------------------------------------------------------------------*
         ITRACE ID=VPUT
         LA    R1,VPUT                        COMMAND'S ADDRESS
         ST    R1,DXDSPF1                     SET ADDRESS IN PARM LIST
         LA    R1,VGETVARS                    VARIABLE NAMES
         ST    R1,DXDSPF2                     SET ADDRESS IN PARM LIST
         LA    R1,SHARED                      FROM SHARED POOL
         ST    R1,DXDSPF3                     SET ADDRESS IN PARM LIST
         OI    DXDSPF3,X'80'                  SET END-OF-LIST
         LA    R1,DXDSPF                      PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE
         BALR  R14,R15                        DISPLAY PANEL
         ITRACE ID=VPUTRC,                    VPUT COMPLETE            +
               RDATA1=R15                     .. INCLUDE RETURN CODE
         B     DISP0180                       YES
*---------------------------------------------------------------------*
*        Process command or scroll                                    *
*---------------------------------------------------------------------*
DISP0190 DS    0H
         ITRACE ID=CHKVERB,                   CHECK FOR SCROLL COMMAND +
               DATA1=SPF_ZVERB                .. TRACE VERB VALUE
         L     R2,SPF_ZSCROLLN                NUMBER OF LINES TO SCROLL
         CLI   SPF_ZVERB,C'U'                 SCROLL UP?
         BE    DISP0200                       YES
         CLI   SPF_ZVERB,C'D'                 SCROLL DOWN?
         BE    DISP0300                       YES
         CLI   SPF_ZVERB,C'R'                 SCROLL RIGHT?
         BE    DISP0100                       YES
         CLI   SPF_ZVERB,C'L'                 SCROLL LEFT?
         BE    DISP0100                       YES
         B     DISP1000                       NOT A SCROLL COMMAND
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DISP0200 DS    0H
         ITRACE ID=SCROLLUP
         SR    R0,R0                          CLEAR REGISTER
         L     R1,SPF_ZSCROLLN                NUMBER OF LINES TO SCROLL
         M     R0,SPF_TEXT_LINE_LENGTH        TIMES LINE LENGTH
         L     R2,SPF_TEXT_OFFSET             CLEAR REGISTER
         CR    R1,R2                          SCROLL PAST FIRST LINE?
         BNH   DISP0210                       NO
         LR    R2,R1                          LIMIT TO 1ST LINE
DISP0210 DS    0H
         SR    R2,R1                          NEW OFFSET
         L     R1,SPF_TEXT_RELATIVE_LINE      RELATIVE LINE NUMBER
         S     R1,SPF_ZSCROLLN                MINUS NUMBER SCROLLED
         BP    DISP0220
         SR    R1,R1                          RESET TO ZERO IF NEGATIVE
DISP0220 DS    0H
         ST    R1,SPF_TEXT_RELATIVE_LINE      SAVE RELATIVE LINE NUMBER
         ST    R2,SPF_TEXT_OFFSET             SAVE OFFSET INTO TEXT
         B     DISP0100                       RE-BUILD DYNAMIC AREA
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DISP0300 DS    0H
         ITRACE ID=SCROLLDN
         L     R1,SPF_ZSCROLLN                NUMBER OF LINES TO SCROLL
         A     R1,SPF_TEXT_RELATIVE_LINE      PLUS RELATIVE NUMBER NOW
         C     R1,SPF_TEXT_LINES              BEYOND END OF DATA?
         BE    DISP0310                       YES
         BNH   DISP0320                       NO
DISP0310 DS    0H
         SR    R0,R0                          CLEAR REGISTER
         L     R1,SPF_TEXT_LINES              MAXIMUM LINE NUMBER
         BCTR  R1,0                           ADJUST FOR RELATIVE
         ST    R1,SPF_TEXT_RELATIVE_LINE      SAVE RELATIVE NUMBER
         M     R0,SPF_TEXT_LINE_LENGTH        TIMES LENGTH OF EACH LINE
         ST    R1,SPF_TEXT_OFFSET             SAVE OFFSET
         B     DISP0100                       RE-BUILD DYNAMIC AREA
DISP0320 DS    0H
         SR    R0,R0                          CLEAR REGISTER
         ST    R1,SPF_TEXT_RELATIVE_LINE      SAVE NEW RELATIVE LINE
         M     R0,SPF_TEXT_LINE_LENGTH        TIMES LINE LENGTH
         ST    R1,SPF_TEXT_OFFSET             SAVE OFFSET
         B     DISP0100                       RE-BUILD DYNAMIC AREA
*---------------------------------------------------------------------*
*        Copy updated text area back to caller                        *
*---------------------------------------------------------------------*
DISP0400 DS    0H
         L     R0,SPF_TEXT_ADDR               TEXT ADDRESS
         L     R1,SPF_TEXT_SIZE               TEXT SIZE
         L     R2,SPF_DYNAMIC_AREA_ADDR       VDATA ADDRESS
         L     R3,SPF_DYNAMIC_AREA_SIZE       VDATA LENGTH
         MVCL  R0,R2                          COPY RETURNED AREA
         B     DISP2000                       FREE OLD DYNAMIC AREA
*---------------------------------------------------------------------*
*        Copy selection data back to text area                        *
*---------------------------------------------------------------------*
DISP1000 DS    0H
         ITRACE ID=COPYSEL
         L     R2,DXDTEXT                     START OF TEXT
         L     R3,SPF_DYNAMIC_AREA_ADDR       START OF DYNAMIC AREA
         AH    R3,DXD_LINE_OFFSET             PLUS OFFSET
         L     R4,SPF_TEXT_LINE_LENGTH        LENGTH OF TEXT LINES
         C     R4,SPF_VWIDTH                  MORE THAN DISPLAYABLE?
         BL    DISP1010                       NO
         L     R4,SPF_VWIDTH                  LIMIT TO DISPLAYED WIDTH
DISP1010 DS    0H
         BCTR  R4,0                           MINUS 1
         L     R5,DXDLINES                    NUMBER OF LINES DISPLAYED
DISP1020 DS    0H
         EX    R4,DYNMVC                      COPY DATA TO TEXT AREA
         A     R2,SPF_TEXT_LINE_LENGTH        NEXT LINE IN TEXT
         A     R3,SPF_VWIDTH                  NEXT LINE IN DYNAMIC AREA
         BCT   R5,DISP1020                    LOOP
*---------------------------------------------------------------------*
*        Clean-up                                                     *
*---------------------------------------------------------------------*
DISP2000 DS    0H
         ITRACE ID=CLEANUP
         TM    XTRFLAG,$XTRON
         BNO   DISP2010
         L     R15,SPF_DYNAMIC_AREA_ADDR
         MVC   0(2,R15),SPF_DYNAMIC_AREA_SIZE+2
         XC    2(2,R15),2(R15)
         PUT   XTRACE,0(R15)
DISP2010 DS    0H
         LA    R1,VDELETE                     COMMAND'S ADDRESS
         ST    R1,DXDSPF1                     SET IN PARM LIST
         LA    R1,CVDATA                      VARIABLE'S NAME
         ST    R1,DXDSPF2                     SET IN PARM LIST
         OI    DXDSPF2,X'80'                  SET END-OF-LIST
         LA    R1,DXDSPF                      PARM LIST'S ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ENTRY POINT
         BALR  R14,R15                        LINK TO SPF
         LTR   R15,R15                        VDELETE OK?
         BNZ   ERR0030                        NO
         ITRACE ID=FREEVDA
         ICM   R1,15,SPF_DYNAMIC_AREA_ADDR    DYNAMIC AREA ADDRESS
         BZ    EXIT0000                       NO ADDRESS.. EXIT
         L     R0,SPF_DYNAMIC_AREA_SIZE       DYNAMIC AREA SIZE
         FREEMAIN RU,A=(1),LV=(0)             FREEMAIN DYNAMIC AREA
         XC    SPF_DYNAMIC_AREA_ADDR,SPF_DYNAMIC_AREA_ADDR               ADDRESS
         XC    SPF_DYNAMIC_AREA_SIZE,SPF_DYNAMIC_AREA_SIZE
         B     EXIT0000
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=VDEFFAIL,                  VDEFINE FAILED           +
               RDATA1=R15                     .. VDEFINE RETURN CODE
         ABEND 1,DUMP,,USER
ERR0020  DS    0H
         ITRACE ID=PQRYFAIL,                  PQUERY FAILED            +
               RDATA1=R15                     .. PQUERY RETURN CODE
         ABEND 2,DUMP,,USER
ERR0030  DS    0H
         ITRACE ID=VDELFAIL,                  VDELETE FAILED           +
               RDATA1=R15                     .. PQUERY RETURN CODE
         ABEND 3,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         ICM   R1,15,SPF_DYNAMIC_AREA_ADDR
         BZ    EXIT0010
         L     R0,SPF_DYNAMIC_AREA_SIZE
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=(0)
         XC    SPF_DYNAMIC_AREA_ADDR,SPF_DYNAMIC_AREA_ADDR
         XC    SPF_DYNAMIC_AREA_SIZE,SPF_DYNAMIC_AREA_SIZE
         LA    R1,VDELETE                     COMMAND'S ADDRESS
         ST    R1,DXDSPF1                     SET ADDRESS IN PARM LIST
         LA    R1,CVDATA                      VARIABLE NAME ADDRESS
         ST    R1,DXDSPF2                     SET ADDRESS IN PARM LIST
         OI    DXDSPF2,X'80'
         LA    R1,DXDSPF
         L     R15,AISPLINK
         BALR  R14,R15
EXIT0010 DS    0H
         LH    R15,DXDRC                      SET RETURN CODE
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
DYNMVC   MVC   0(0,R2),0(R3)                  MOVE TEXT TO DYNAMIC AREA
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDDISP)                     DISPLACEMENT TO WORK AREA
VGETVARS DC    F'3'                           NUMBER OF VARIABLE NAMES
         DC    F'0'                           UNPROTECTED STORAGE
         DC    CL8'ZVERB'                     VARIABLE NAME
         DC    CL8'ZSCROLLA'                  VARIABLE NAME
         DC    CL8'ZSCROLLN'                  VARIABLE NAME
H8       DC    H'8'                           CONSTANT
PQUERY   DC    CL8'PQUERY'
CVDATA   DC    CL8'VDATA'
CVTYPE   DC    CL8'VTYPE'
CVWIDTH  DC    CL8'VWIDTH'
CVDEPTH  DC    CL8'VDEPTH'
CVROW    DC    CL8'VROW'
CVCOL    DC    CL8'VCOL'
VDEFINE  DC    CL8'VDEFINE'
VDELETE  DC    CL8'VDELETE'
DISPLAY  DC    CL8'DISPLAY'
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
SHARED   DC    CL8'SHARED'
CHARFORM DC    CL4'CHAR'
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDDISP  DSECT
         LIBSAVE DSECT=NO

DXDSPF   DS    0A                    ISPF PARM LIST
DXDSPF1  DS    A                     PARM 1 ADDRESS
DXDSPF2  DS    A                     PARM 2 ADDRESS
DXDSPF3  DS    A                     PARM 3 ADDRESS
DXDSPF4  DS    A                     PARM 4 ADDRESS
DXDSPF5  DS    A                     PARM 5 ADDRESS
DXDSPF6  DS    A                     PARM 6 ADDRESS
DXDSPF7  DS    A                     PARM 7 ADDRESS
DXDSPF8  DS    A                     PARM 8 ADDRESS

DXDTEXT  DS    A                     START OF DISPLAYED TEXT
DXDLINES DS    F                     LINES OF DISPLAYED TEXT
DXD_LINE_OFFSET DS H
DXDRC    DS    H                     RETURN CODE FROM DISPLAY
DXDFLAG  DS    X                     INTERNAL FLAGS
$DXDVPUT EQU   X'80'                 .. VPUT HAS BEEN ISSUED
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBTDISP
./ ADD NAME=LIBTDLIB 0100-09250-09250-0919-00292-00292-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTDLIB                                              *
*                                                                     *
*  Function:                                                          *
*   Display list of available libraries.                              *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTDLIB CSECT
LIBTDLIB AMODE 31
LIBTDLIB RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTDLIB,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     DISP0000
MODID    DC    CL8'LIBTDLIB'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
DISP0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTDLIB,R13                   DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    DISP0010                       YES
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
         XC    DXDRC,DXDRC                    SET RETURN CODE TO ZERO
*---------------------------------------------------------------------*
*        Acquire storage for dynamic area                             *
*---------------------------------------------------------------------*
DISP0010 DS    0H
         ICM   R1,15,SPF_TEXT_ADDR            ANY PREVIOUS AREA?
         BZ    DISP0020                       NO
         L     R0,SPF_TEXT_SIZE               SIZE OF AREA
         FREEMAIN RU,                         FREE THE AREA            +
               A=(1),                                                  +
               LV=(0)
DISP0020 DS    0H
         L     R0,COMM_NBR_OF_LIBRARIES       NUMBER OF LIBRARIES
         ST    R0,SPF_TEXT_LINES              NBR OF LINES TO DISPLAY
         MH    R0,=Y(DETAILL)                 TIMES SIZE PER LINE
         ST    R0,SPF_TEXT_SIZE               SIZE OF TEXT AREA
         MVC   SPF_TEXT_LINE_LENGTH,=A(DETAILL)
         XC    SPF_TEXT_OFFSET,SPF_TEXT_OFFSET
         XC    SPF_TEXT_RELATIVE_LINE,SPF_TEXT_RELATIVE_LINE
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=ANY
         ST    R1,SPF_TEXT_ADDR               SAVE TEXT AREA ADDRESS
         LR    R9,R1                          COPY ADDRESSS
         USING DETAIL,R9                      DEFINE BASE
         L     R8,COMM_LIBRARY_CHAIN          FIRST LIBRARY CHAIN BLOCK
         USING LIB_CHAIN,R8
DISP0030 DS    0H
         LA    R7,LIB_CHAIN_LIBRARIES         FIRST LIBRARY
         USING LIB_CHAIN_NAME,R7
         L     R1,LIB_CHAIN_LENGTH            LENGTH OF DATA
         SH    R1,=Y(LIB_CHAIN_NAME-LIB_CHAIN)
         SR    R0,R0                          CLEAR REGISTER
         D     R0,=A(LIB_CHAIN_PER_LEN)
         LR    R6,R1                          NUMBER IN THIS BLOCK
DISP0040 DS    0H
         MVC   DETAIL(DETAILL),COMM_BLANKS
         MVI   DETAIL_ATTR_1,X'02'
         MVI   DETAIL_ATTR_2,X'01'
         MVC   DETAIL_LIB_NAME,LIB_CHAIN_NAME
         MVC   DETAIL_LIB_DESC,LIB_CHAIN_DESC
         TM    LIB_CHAIN_STATUS,$LIB_OPEN
         BO    DISP0050
         MVC   DETAIL_LIB_STATUS,STATUS_CLOSED
         B     DISP0060
DISP0050 DS    0H
         MVC   DETAIL_LIB_STATUS,STATUS_OPEN
DISP0060 DS    0H
         LA    R9,DETAILL(R9)
         LA    R7,LIB_CHAIN_PER_LEN(R7)
         BCT   R6,DISP0040
         ICM   R8,15,LIB_CHAIN_NEXT
         BNZ   DISP0030
DISP0070 DS    0H
         MVC   SPF_PANEL,LIBPANEL             SET PANEL NAME
         ITRACE ID=DISPLAY
         L     R15,ATDISP                     DISPLAY MANAGER
         BALR  R14,R15                        LINK TO SPF
         STH   R15,DXDRC                      SAVE RETURN CODE
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15                     .. RETURN CODE
         LTR   R15,R15                        RC = ZERO?
         BNZ   EXIT0000                       NO
DISP0080 DS    0H
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR ANY MESSAGE
         MVC   SPF_MSG2,COMM_BLANKS           CLEAR ANY MESSAGE
         MVC   SPF_MSG3,COMM_BLANKS           CLEAR ANY MESSAGE
         MVC   SPF_MSG4,COMM_BLANKS           CLEAR ANY MESSAGE
         MVC   SPF_MSG5,COMM_BLANKS           CLEAR ANY MESSAGE
         CLC   =C'STAT ',SPF_ZCMD             LIBRARY STATUS?
         BE    STAT0000
         CLC   =C'STATUS ',SPF_ZCMD           LIBRARY STATUS?
         BE    STAT0000
         CLC   =C'SNAP ',SPF_ZCMD             SNAP DUMP?
         BE    SNAP0000
         L     R9,SPF_TEXT_ADDR               TEXT ADRESS
         SR    R2,R2                          INITIALIZE FOR COUNTER
         L     R3,COMM_NBR_OF_LIBRARIES       NUMBER OF LIBRARIES
         ITRACE ID=CHKSEL,                                             +
               DATA1=DETAIL_LIB_NAME,                                  +
               DATA2=DETAIL_SELECT
DISP0090 DS    0H
         OI    DETAIL_SELECT,C' '             TRANSLATE TO UPPER CASE
         CLI   DETAIL_SELECT,C'A'             'ALL'?
         BE    DISP0100                       YES
         CLI   DETAIL_SELECT,C'F'             'FULL' LIST?
         BE    DISP0100                       YES
         CLI   DETAIL_SELECT,C' '             LIBRARY SELECTED?
         BE    DISP0120                       NO
         NI    COMM_FLAGS,255-$LIST_ALL       'NORMAL' LIST
         B     DISP0110
DISP0100 DS    0H
         ITRACE ID=SET_ALL
         OI    COMM_FLAGS,$LIST_ALL           LIST ALL MEMBERS
DISP0110 DS    0H
         ITRACE ID=SELECTED,                                           +
               DATA1=DETAIL_LIB_NAME,                                  +
               DATA2=COMM_FLAGS
         LA    R2,1(R2)                       PLUS 1
         MVC   DXD_LIB_NAME,DETAIL_LIB_NAME
         MVC   DXD_LIB_DESC,DETAIL_LIB_DESC
         MVC   DXD_LIB_STATUS,DETAIL_LIB_STATUS
DISP0120 DS    0H
         ITRACE ID=NEXTLIB
         LA    R9,DETAILL(R9)                 NEXT LIBRARY
         BCT   R3,DISP0090                    LOOP
         CH    R2,H1                          ANY LIBRARIES SELECTED?
         BL    DISP0070                       NO.. DISPLAY LIST AGAIN
         BH    ERR0010                        TOO MANY
         CLI   DXD_LIB_STATUS,C'O'            IS THE LIBRARY OPEN?
         BNE   ERR0020                        NO
         MVC   COMM_LIBRARY_NAME,DXD_LIB_NAME SET LIBRARY NAME
         MVC   SPF_LIB_NAME,DXD_LIB_NAME      SET LIBRARY NAME
         MVC   SPF_LIB_DESC,DXD_LIB_DESC      SET LIBRARY DESCRIPTION
         ITRACE ID=GOODLIB,                                            +
               DATA1=COMM_LIBRARY_NAME
         XC    DXDRC,DXDRC                    RETURN CODE IS ZERO
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*        SNAP DUMP                                                    *
* ------------------------------------------------------------------- *
SNAP0000 DS    0H
         ITRACE ID=SNAP
         MVC   SPF_ZCMD,COMM_BLANKS           RESET THE COMMAND
         L     R15,ATSNAP
         BALR  R14,R15                        LINK TO STATUS DISPLAY
         B     DISP0070
* ------------------------------------------------------------------- *
*        LIBRARY STC STATUS                                           *
* ------------------------------------------------------------------- *
STAT0000 DS    0H
         ITRACE ID=STATUS
         MVC   SPF_ZCMD,COMM_BLANKS           RESET THE COMMAND
         L     R15,ATSTAT
         BALR  R14,R15                        LINK TO STATUS DISPLAY
         STH   R15,DXDRC                      SAVE RETURN CODE
         CH    R15,H4                         QUIT?
         BE    EXIT0000                       YES
         B     DISP0010
* ------------------------------------------------------------------- *
*        abend user task                                              *
* ------------------------------------------------------------------- *
ABEND000 DS    0H
         ITRACE ID=ABEND
         MVC   SPF_ZCMD,COMM_BLANKS           RESET THE COMMAND
         L     R15,ATSNAP
         BALR  R14,R15                        LINK TO STATUS DISPLAY
         B     DISP0070
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=TOOMANY
         MVC   SPF_MSG1(MSG01L),MSG01
         B     DISP0070
ERR0020  DS    0H
         ITRACE ID=NOTOPEN
         MVC   SPF_MSG1(MSG02L),MSG02
         B     DISP0070
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ICM   R1,15,SPF_TEXT_ADDR            ANY PREVIOUS AREA?
         BZ    EXIT0010                       NO
         L     R0,SPF_TEXT_SIZE               SIZE OF AREA
         FREEMAIN RU,A=(1),LV=(0)             FREE THE AREA
         XC    SPF_TEXT_ADDR,SPF_TEXT_ADDR
         XC    SPF_TEXT_SIZE,SPF_TEXT_SIZE
EXIT0010 DS    0H
         LH    R15,DXDRC                      SET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE registers
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
DYNMVC   MVC   0(0,R2),0(R3)                  MOVE TEXT TO DYNAMIC AREA
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTDLIB)                    DISPLACEMENT TO WORK AREA
H1       DC    H'1'
H4       DC    H'4'
LIBPANEL DC    CL8'LIBPANEL'

STATUS_OPEN    DC  CL6'OPEN'
STATUS_CLOSED  DC  CL6'CLOSED'

MSG01    DS    0C
         DC    CL11'LIBTDLIB01'
         DC    C'Select one library only'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'LIBTDLIB02'
         DC    C'Library is not open'
MSG02L   EQU   *-MSG02
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDTDLIB     DSECT
             LIBSAVE DSECT=NO

DXDRC          DS H                  RETURN CODE FROM DISPLAY
DXD_LIB_NAME   DS CL8                SELECTED LIBRARY NAME
DXD_LIB_DESC   DS CL40               SELECTED LIBRARY DESCRIPTION
DXD_LIB_STATUS DS C                  SELECTED LIBRARY STATUS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DETAIL            DSECT
DETAIL_ATTR_1     DS   X
DETAIL_SELECT     DS   C
DETAIL_ATTR_2     DS   X
                  DS   X
DETAIL_LIB_NAME   DS   CL8
                  DS   CL4
DETAIL_LIB_DESC   DS   CL40
                  DS   CL4
DETAIL_LIB_STATUS DS   CL6
DETAILL           EQU  *-DETAIL


LIB_CHAIN         DSECT
LIB_CHAIN_EYE     DS   CL8
LIB_CHAIN_NEXT    DS   A
LIB_CHAIN_LENGTH  DS   F
LIB_CHAIN_LIBRARIES DS 0C
LIB_CHAIN_NAME    DS   CL8
LIB_CHAIN_DESC    DS   CL80
LIB_CHAIN_STATUS  DS   X
LIB_CHAIN_PER_LEN EQU  *-LIB_CHAIN_NAME
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBTDLIB
./ ADD NAME=LIBTDMEM 0100-09250-09250-0919-01531-01531-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTDMEM                                              *
*                                                                     *
*  Function:                                                          *
*   Display the list of members in a library.                         *
*                                                                     *
*   The library name will have been verified to be valid.             *
*   The library name will be in COMM_LIBRARY_NAME.                    *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTDMEM CSECT
LIBTDMEM AMODE 31
LIBTDMEM RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTDMEM,R12,R10               DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     MEM0000
MODID    DC    CL8'LIBTDMEM'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
MEM0000  DS    0H
         LA    R10,2048(R12)
         LA    R10,2048(R10)
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTDMEM,R13                   DEFINE WORK AREA BASE
         L     R5,ALIBSPFD                    SPF DATA ADDRESS
         USING LIBSPFD,R5
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    MEM0010                        YES
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK REA INITIALIZED
*---------------------------------------------------------------------*
*        Get list of members                                          *
*---------------------------------------------------------------------*
MEM0010  DS    0H
         XC    DXD_RC,DXD_RC
         XC    DXD_MEMBERS,DXD_MEMBERS
         L     R7,COMM_NETWORK_IO_AREA        I/O AREA ADDRESS
         USING NETBLOK,R7                     DEFINE BASE
         LA    R8,DXD_MEM_CHAIN               MEMBER CHAIN ANCHOR
         USING MEM_CHAIN,R8
         XC    MEM_CHAIN_NEXT,MEM_CHAIN_NEXT
         XC    MEM_CHAIN_PREV,MEM_CHAIN_PREV
         MVI   MEM_CHAIN_FLAG,$MEM_CHAIN_DUMMY ANCHOR IS A DUMMY MEMBER
         XC    DXD_MEMBERS,DXD_MEMBERS
MEM0020  DS    0H
         MVI   NET_FUNCTION,$NET_GET_MEMBERS
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME
         LA    R1,NETBLOKL+L'NET_LIB_NAME
         STH   R1,NET_LENGTH                  SET LENGTH
         BAL   R14,SEND0000                   ISSUE SEND
         ITRACE ID=RECVMEMS
         BAL   R14,RECV0000                   ISSUE RECEIVE
         TM    XTRFLAG,$XTRON                 EXTERNAL TRACE ON
         BNO   MEM0030                        NO
         PUT   XTRACE,NETBLOK
MEM0030  DS    0H
         SR    R3,R3                          CLEAR REGISTER
         ICM   R3,3,NET_LENGTH                LENGTH
         SH    R3,=Y(NETBLOKL)                DATA LENGTH
         BZ    MEM0050                        NO DATA
         LA    R4,NET_MEMBERS                 FIRST MEMBER
         ITRACE ID=BLDCHAIN,                                           +
               RDATA1=R3,                                              +
               RDATA2=R4
MEM0040  DS    0H
         GETMAIN RU,                          GETMAIN MEMBER CHAIN     +
               LV=MEM_CHAIN_L,                                         +
               LOC=ANY
         ITRACE ID=NEWCHAIN,                                           +
               RDATA1=R1,                                              +
               RDATA2=R8
         ST    R1,MEM_CHAIN_NEXT
         ST    R8,MEM_CHAIN_PREV-MEM_CHAIN(R1)
         LR    R8,R1
         MVC   MEM_CHAIN_EYE,MEM_CHAIN_ID
         XC    MEM_CHAIN_NEXT,MEM_CHAIN_NEXT
         MVI   MEM_CHAIN_FUNCTION,0
         MVI   MEM_CHAIN_FLAG,0
         MVC   MEM_CHAIN_MEMBER(LIB_INDEX_RECORD_LENGTH),0(R4)
         L     R1,DXD_MEMBERS                 NUMBER OF MEMBERS SO FAR
         LA    R1,1(,R1)                      PLUS 1 MEMBER
         ST    R1,DXD_MEMBERS                 SAVE TOTAL
         LA    R4,LIB_INDEX_RECORD_LENGTH(,R4)
         SH    R3,=Y(LIB_INDEX_RECORD_LENGTH)
         BNZ   MEM0040
MEM0050  DS    0H
         CLI   NET_RETURN_CODE,$NET_EOF       EOF?
         BNE   MEM0020                        NO
         ITRACE ID=MEM_EOF,                                            +
               DATA1=DXD_MEMBERS
*---------------------------------------------------------------------*
*        Verify the library does have members                         *
*---------------------------------------------------------------------*
         OC    DXD_MEMBERS,DXD_MEMBERS
         BZ    MEM0100
*---------------------------------------------------------------------*
*        Scan the members and flag highest (current) version          *
*---------------------------------------------------------------------*
         LA    R8,DXD_MEM_CHAIN
         L     R8,MEM_CHAIN_NEXT              FIRST MEMBER
MEM0060  DS    0H
         ICM   R1,15,MEM_CHAIN_NEXT           NEXT MEMBER
         BZ    MEM0090
CURR     USING MEM_CHAIN,R8
NEXT     USING MEM_CHAIN,R1
         CLC   CURR.MEM_CHAIN_MEMBER+(LIB_KEY_NAME-LIB_RECORD)(L'LIB_KE+
               Y_NAME),NEXT.MEM_CHAIN_MEMBER+(LIB_KEY_NAME-LIB_RECORD)
         BE    MEM0070                        SAME MEMBER NAME
         OI    CURR.MEM_CHAIN_FLAG,$MEM_CURRENT
         B     MEM0080
MEM0070  DS    0H
         NI    CURR.MEM_CHAIN_FLAG,255-$MEM_CURRENT
MEM0080  DS    0H
         LR    R8,R1                          NEXT ON CHAIN
         B     MEM0060
MEM0090  DS    0H
         OI    CURR.MEM_CHAIN_FLAG,$MEM_CURRENT
         DROP  CURR,NEXT
*---------------------------------------------------------------------*
*        Set first member for 1st pass                                *
*---------------------------------------------------------------------*
         LA    R8,DXD_MEM_CHAIN
         MVC   DXD_FIRST_MEMBER,MEM_CHAIN_NEXT
         ITRACE ID=INIT_1ST,                                           +
               RDATA1=R8
         BAL   R14,DBUG0000
*---------------------------------------------------------------------*
*        Acquire storage for dynamic area                             *
*---------------------------------------------------------------------*
MEM0100  DS    0H
         MVC   SPF_PANEL,MEMPANEL             PANEL NAME
         BAL   R14,DYNA0000                   ACQUIRE DYNAMIC AREA
         OC    DXD_MEMBERS,DXD_MEMBERS
         BNZ   MEM0110
         ITRACE ID=NOMEMS
         MVC   SPF_MSG1(MSG06L),MSG06
         B     DISP0070
MEM0110  DS    0H
         MVC   DXD_DEPTH,SPF_VDEPTH
         MVC   DXD_WIDTH,SPF_VWIDTH
         L     R1,DXD_MEMBERS                 NUMBER OF MEMBERS
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         MVC   SPF_MSG5(MSG05L),MSG05
         ED    SPF_MSG5+(MSG05MEM-MSG05)(L'MSG05MEM),DXD_DWORD+4
*---------------------------------------------------------------------*
*        Build the text for the dynamic area                          *
*---------------------------------------------------------------------*
DISP0010 DS    0H
         L     R8,DXD_FIRST_MEMBER
         ITRACE ID=BLD_TEXT,                                           +
               RDATA1=R8,                                              +
               DATA2=MEM_CHAIN_NEXT
         L     R9,DXD_DYNA_ADDR
         L     R6,DXD_DEPTH
DISP0020 DS    0H
         MVC   0(80,R9),COMM_BLANKS
         A     R9,DXD_WIDTH
         BCT   R6,DISP0020
         L     R9,DXD_DYNA_ADDR               COPY ADDRESSS
         USING DETAIL,R9                      DEFINE BASE
         L     R6,DXD_DEPTH                   NUMBER OF LINES
DISP0030 DS    0H
         ST    R8,DXD_LAST_MEMBER
         CLI   MEM_CHAIN_FLAG,$MEM_CHAIN_DUMMY
         BE    DISP0060
         TM    COMM_FLAGS,$LIST_ALL           LIST ALL MEMBERS?
         BO    DISP0040                       YES
         TM    MEM_CHAIN_FLAG,$MEM_CURRENT    CURRENT MEMBER?
         BNO   DISP0060                       NO
DISP0040 DS    0H
         LA    R4,MEM_CHAIN_MEMBER
         USING LIB_RECORD,R4
         ITRACE ID=BLD,                                                +
               RDATA1=R4,                                              +
               DATA2=LIB_KEY_NAME
         BAL   R14,DETL0000
         BCT   R6,DISP0050
         B     DISP0070
DISP0050 DS    0H
         A     R9,DXD_WIDTH
DISP0060 DS    0H
         ICM   R8,15,MEM_CHAIN_NEXT
         BNZ   DISP0030
*---------------------------------------------------------------------*
*        Display the panel                                            *
*---------------------------------------------------------------------*
DISP0070 DS    0H
         ITRACE ID=DISPLAY
         MVC   SPF_PANEL,MEMPANEL             PANEL NAME
         NI    DXD_FLAGS,255-$SELECT          RESET INDICATOR
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST
         LA    R1,SPF_PANEL                   PANEL'S NAME
         ST    R1,DXD_SPF_2                   SET PANEL NAME ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS
         L     R15,AISPLINK
         BALR  R14,R15                        LINK TO SPF
         STH   R15,DXD_RC                     SAVE RETURN CODE
         CLC   ABEND,SPF_ZCMD                 ABEND OURSELVES?
         BE    ABND0000                       YES
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR ANY MESSAGE
         MVC   SPF_MSG2,COMM_BLANKS           CLEAR ANY MESSAGE
         MVC   SPF_MSG3,COMM_BLANKS           CLEAR ANY MESSAGE
         MVC   SPF_MSG4,COMM_BLANKS           CLEAR ANY MESSAGE
         MVC   SPF_MSG5,COMM_BLANKS           CLEAR ANY MESSAGE
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15                     .. RETURN CODE
         LTR   R15,R15                        RC = ZERO?
         BNZ   EXIT0000                       NO
         BAL   R14,DBUG0000
         OC    DXD_MEMBERS,DXD_MEMBERS
         BZ    DISP0070
*---------------------------------------------------------------------*
*        Process primary command if any                               *
*---------------------------------------------------------------------*
DISP0080 DS    0H
         CLC   SPF_ZCMD,COMM_BLANKS           BLANK?
         BE    DISP0140                       YES
         L     R15,ATPRSE
         BALR  R14,R15                        CALL PARSER
         ITRACE ID=PARMS,                                              +
               DATA1=COMM_OPERANDS_NBR
         OC    COMM_OPERANDS_NBR,COMM_OPERANDS_NBR
         BZ    DISP0140
         L     R1,COMM_OPERAND_1_ADDRESS
         CLI   COMM_OPERAND_1_LENGTH,1
         BH    DISP0090
         CLI   0(R1),C'A'                    'ADMIN' COMMAND?
         BE    ADMIN000                      YES
         CLI   0(R1),C'D'                    'DELETE' COMMAND?
         BE    DEL0000                       YES
         CLI   0(R1),C'I'                    'CHECK IN' COMMAND?
         BE    IN0000                        YES
         CLI   0(R1),C'J'                    SUBMIT AS A JOB?
         BE    JOB0000                       YES
         CLI   0(R1),C'L'                    LOCATE?
         BE    LOC0000                       YES
         CLI   0(R1),C'N'                    'NEW' COMMAND?
         BE    DISP0500                      YES
         CLI   0(R1),C'O'                    'CHECK OUT' COMMAND?
         BE    OUT0000                       YES
         CLI   0(R1),C'S'                    SELECT?
         BE    SEL0000                       YES
         CLI   0(R1),C'V'                    VIEW?
         BE    VIEW0000                      YES
         CLI   0(R1),C'?'                    HELP?
         BE    HELP0000                      YES
         B     DISP0130
DISP0090 DS    0H
         CLI   COMM_OPERAND_1_LENGTH,2
         BH    DISP0100
         CLC   =C'IN',0(R1)                  CHECK IN?
         BE    IN0000                        YES
         B     DISP0130
DISP0100 DS    0H
         CLI   COMM_OPERAND_1_LENGTH,3
         BH    DISP0110
         CLC   =C'DEL',0(R1)                 DELETE?
         BE    DEL0000                       YES
         CLC   =C'JOB',0(R1)                 SUBMIT AS A JOB?
         BE    JOB0000                       YES
         CLC   =C'LOC',0(R1)                 LOCATE?
         BE    LOC0000                       YES
         CLC   =C'NEW',0(R1)                 NEW MEMBER?
         BE    DISP0500                      YES
         CLC   =C'SEL',0(R1)                 SELECT?
         BE    SEL0000                       YES
         CLC   =C'SUB',0(R1)                 SUBmit?
         BE    JOB0000                       YES
         CLC   =C'OUT',0(R1)                 CHECK-OUT?
         BE    OUT0000                       YES
         B     DISP0130
DISP0110 DS    0H
         CLI   COMM_OPERAND_1_LENGTH,4
         BH    DISP0120
         CLC   =C'SNAP',0(R1)                'SNAP' COMMAND?
         BE    SNAP0000
         CLC   =C'STAT',0(R1)                'STAT' COMMAND?
         BE    STAT0000
         CLC   =C'VIEW',0(R1)                'VIEW' COMMAND?
         BE    VIEW0000
         B     DISP0130
DISP0120 DS    0H
         CLI   COMM_OPERAND_1_LENGTH,6
         BNE   DISP0130
         CLC   =C'STATUS',0(R1)              'STATUS' COMMAND?
         BE    STAT0000
         CLC   =C'SUBMIT',0(R1)              'SUBMIT' COMMAND?
         BE    JOB0000
         CLC   =C'LOCATE',0(R1)               LOCATE?
         BE    LOC0000                        YES
         CLC   =C'SELECT',0(R1)               SELECT?
         BE    SEL0000                        YES
DISP0130 DS    0H
         MVC   SPF_MSG1(MSG07L),MSG07
*---------------------------------------------------------------------*
*        Process line command(s)                                      *
*---------------------------------------------------------------------*
DISP0140 DS    0H
         L     R6,DXD_DEPTH
         L     R8,DXD_FIRST_MEMBER            1ST MEMBER BUILT
         L     R9,DXD_DYNA_ADDR               TEXT ADRESS
         ITRACE ID=PROCCMDS,                                           +
               RDATA1=R8
DISP0150 DS    0H
         TM    COMM_FLAGS,$LIST_ALL           ALL MEMBERS LISTED?
         BO    DISP0160                       YES
         TM    MEM_CHAIN_FLAG,$MEM_CURRENT    CURRENT VERSION?
         BO    DISP0160                       YES
         ICM   R8,15,MEM_CHAIN_NEXT           NEXT MEMBER
         B     DISP0150
DISP0160 DS    0H
         LA    R4,MEM_CHAIN_MEMBER
         ITRACE ID=CHKSEL,                                             +
               DATA1=DETAIL_SELECT,                                    +
               RDATA2=R4
         CLI   DETAIL_SELECT,C' '             MEMBER SELECTED?
         BE    DISP1000                       NO
         ITRACE ID=SELECTED,                                           +
               DATA1=DETAIL_NAME
         OI    DXD_FLAGS,255-$SELECT          SET INDICATOR

         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_DELETE
         BE    DISP0270

         CLI   DETAIL_SELECT,C'D'             DELETE?
         BE    DISP0170                       YES
         CLI   DETAIL_SELECT,C'd'             DELETE?
         BE    DISP0170                       YES

         CLI   DETAIL_SELECT,C'A'             ADMIN?
         BE    DISP0250                       YES
         CLI   DETAIL_SELECT,C'a'             ADMIN?
         BE    DISP0250                       YES

         CLI   DETAIL_SELECT,C'B'             BROWSE?
         BE    DISP0260                       YES
         CLI   DETAIL_SELECT,C'b'             BROWSE?
         BE    DISP0260                       YES

         CLI   DETAIL_SELECT,C'J'             SUBMIT AS BATCH JOB?
         BE    DISP0280                       YES
         CLI   DETAIL_SELECT,C'j'             SUBMIT AS BATCH JOB?
         BE    DISP0280                       YES

         CLI   DETAIL_SELECT,C'I'             CHECK-IN?
         BE    DISP0180                       YES
         CLI   DETAIL_SELECT,C'i'             CHECK-IN?
         BE    DISP0180                       YES

         CLI   DETAIL_SELECT,C'L'             SELECT?
         BE    DISP0200                       YES
         CLI   DETAIL_SELECT,C'l'             SELECT?
         BE    DISP0200                       YES

         CLI   DETAIL_SELECT,C'O'             CHECK-OUT?
         BE    DISP0190                       YES
         CLI   DETAIL_SELECT,C'o'             CHECK-OUT?
         BE    DISP0190                       YES

         CLI   DETAIL_SELECT,C'S'             SELECT?
         BE    DISP0200                       YES
         CLI   DETAIL_SELECT,C's'             SELECT?
         BE    DISP0200                       YES

         CLI   DETAIL_SELECT,C'R'             RE-FRESH DATA?
         BE    DISP0220                       YES
         CLI   DETAIL_SELECT,C'r'             RE-FRESH DATA?
         BE    DISP0220                       YES

         CLI   DETAIL_SELECT,C'U'             UNDO?
         BE    DISP0230                       YES
         CLI   DETAIL_SELECT,C'u'             UNDO?
         BE    DISP0230                       YES

         CLI   DETAIL_SELECT,C'V'             VIEW?
         BE    DISP0210                       YES
         CLI   DETAIL_SELECT,C'v'             VIEW?
         BE    DISP0210                       YES

         CLI   DETAIL_SELECT,C'X'             NEW VERSION?
         BE    DISP0240                       YES
         CLI   DETAIL_SELECT,C'x'             NEW VERSION?
         BE    DISP0240                       YES

         CLI   DETAIL_SELECT,C'?'             HELP?
         BE    HELP0010                       YES

         ITRACE ID=BAD_SEL,                                            +
               DATA1=DETAIL_SELECT,                                    +
               DATA2=DETAIL_NAME
         MVI   DETAIL_ATTR_2,X'03'            HIGHLIGHT THE MEMBER
         MVI   DETAIL_SELECT,C'*'             CHANGE SELECT TO ASTERISK
         MVC   SPF_MSG1(MSG01L),MSG01
         B     DISP0070                       DISPLAY AGAIN
DISP0170 DS    0H
         ITRACE ID=DELETE,                                             +
               DATA1=DETAIL_NAME
         MVC   DXD_FUNCTION,VTDEL
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_DELETE
         B     DISP0400
DISP0180 DS    0H
         ITRACE ID=CHECKIN,                                            +
               DATA1=DETAIL_NAME
         MVC   DXD_FUNCTION,VTCKIN
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_IN
         B     DISP0400
DISP0190 DS    0H
         ITRACE ID=CHECKOUT,                                           +
               DATA1=DETAIL_NAME
         MVC   DXD_FUNCTION,VTCKOT
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_OUT
         B     DISP0400
DISP0200 DS    0H
         ITRACE ID=MEMDOC,                                             +
               DATA1=DETAIL_NAME,                                      +
               DATA2=LIB_KEY_NAME
         MVC   DXD_FUNCTION,VTMDOC
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_DOC
         B     DISP0400
DISP0210 DS    0H
         ITRACE ID=VIEW,                                               +
               DATA1=DETAIL_NAME
         MVC   DXD_FUNCTION,VTVIEW
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_VIEW
         B     DISP0400
DISP0220 DS    0H
         ITRACE ID=REFRESH,                                            +
               DATA1=DETAIL_NAME
         MVI   NET_FUNCTION,$NET_CHECK_DESC_AUTH
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME
         MVC   NET_MEM_NAME,LIB_KEY_NAME
         MVC   NET_MEM_VERSION,LIB_KEY_VERSION
         LA    R1,NET_DESC_LENGTH
         STCM  R1,3,NET_LENGTH
         BAL   R14,SEND0000
         BAL   R14,RECV0000
         MVC   MEM_CHAIN_MEMBER(LIB_INDEX_RECORD_LENGTH),NET_DATA
         BAL   R14,DETL0000
         MVI   MEM_CHAIN_FUNCTION,0
         B     DISP1000
DISP0230 DS    0H
         ITRACE ID=UNDO,                                               +
               DATA1=DETAIL_NAME
         MVC   DXD_FUNCTION,VTUNDO
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_UNDO
         B     DISP0400
DISP0240 DS    0H
         ITRACE ID=VERSION,                                            +
               DATA1=DETAIL_NAME
         MVC   DXD_FUNCTION,VTVER
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_VER
         B     DISP0400
DISP0250 DS    0H
         ITRACE ID=ADMIN,                                              +
               DATA1=DETAIL_NAME
         MVC   DXD_FUNCTION,VTADMN
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_ADMN
         B     DISP0400
DISP0260 DS    0H
         ITRACE ID=BROWSE,                                             +
               DATA1=DETAIL_NAME
         MVC   DXD_FUNCTION,VTBRWS
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_BROWSE
         B     DISP0400
DISP0270 DS    0H
         ITRACE ID=DELETED
         MVC   SPF_MSG1(MSG11L),MSG11
         MVI   DETAIL_SELECT,C'*'
         MVI   DETAIL_ATTR_2,X'03'
         B     DISP0070
DISP0280 DS    0H
         XC    LIB_KEY_VERSION,LIB_KEY_VERSION
         ITRACE ID=SUBMIT,                                             +
               DATA1=DETAIL_NAME,                                      +
               DATA2=LIB_KEY_NAME
         MVC   DXD_FUNCTION,VTJOB
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_SUBMIT
         B     DISP0400
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DISP0400 DS    0H
         OI    DXD_FLAGS,$SELECT              SET INDICATOR
         MVC   COMM_MEMBER_NAME,LIB_KEY_NAME  COPY MEMBER NAME
         MVC   COMM_VERSION,LIB_KEY_VERSION
         MVC   SPF_MEM_NAME,DETAIL_NAME
         MVC   SPF_MEM_VERSION,DETAIL_VERSION
         MVC   COMM_SOURCE_RECORDS,LIB_INDEX_RECORDS
         MVC   COMMBLKN,F4000                 SET ALLOCATION BLOCK SIZE
         SR    R0,R0                          CLEAR REGISTER
         ICM   R1,15,LIB_INDEX_RECORDS        NUMBER OF RECORDS
         D     R0,F4000                       COMPUTE NUMBER OF RECORDS
         STCM  R1,15,COMMPRI                  PRIMARY SPACE QUANTITY
         LR    R1,R0                          COPY REMAINDER
         SR    R0,R0                          CLEAR REGISTER
         D     R0,F10                         COMPUTE 10%
         STCM  R1,15,COMMSEC                  SECONDARY SPACE QUANTITY
DISP0410 DS    0H
         ITRACE ID=CALLFUNC
         L     R15,DXD_FUNCTION               FUNCTION ENTRY POINT
         BALR  R14,R15                        LINK
         ITRACE ID=FUNCRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DETAIL_SELECT
         CLI   DETAIL_SELECT,C'A'             ADMIN?
         BE    DISP0420                       YES
         CLI   DETAIL_SELECT,C'a'             ADMIN?
         BNE   DISP0430                       NO
DISP0420 DS    0H
         MVC   LIB_INDEX_STATUS,NET_DATA+(LIB_INDEX_STATUS-LIB_RECORD)
         MVC   LIB_INDEX_OWNER,NET_DATA+(LIB_INDEX_OWNER-LIB_RECORD)
         MVC   LIB_INDEX_CHECK_OUT_USER,NET_DATA+(LIB_INDEX_CHECK_OUT_U+
               SER-LIB_RECORD)
         MVI   DETAIL_SELECT,C' '             RESET COMMAND
         B     DISP0440
DISP0430 DS    0H
         MVI   DETAIL_SELECT,C' '             RESET COMMAND
         LTR   R15,R15                        ERROR?
         BNZ   DISP0070                       YES
DISP0440 DS    0H
         MVC   MEM_CHAIN_FUNCTION,DXD_FUNCTION_FLAG
         BAL   R14,DYNA0100
         B     DISP1000
*---------------------------------------------------------------------*
*        Display the new member panel                                 *
*---------------------------------------------------------------------*
DISP0500 DS    0H
         ITRACE ID=NEW
         MVC   SPF_ZCMD,COMM_BLANKS
         MVC   SPF_MEM_NAME,COMM_BLANKS
         MVC   SPF_MEM_VERSION,=C'00001'
         MVC   DXD_MEM_VERSION,H1             FORCE VERSION TO 1
         MVC   SPF_COMM1,COMM_BLANKS
         MVC   SPF_COMM2,COMM_BLANKS
         MVC   SPF_COMM3,COMM_BLANKS
         MVC   SPF_COMM4,COMM_BLANKS
         MVC   SPF_COMM5,COMM_BLANKS
DISP0510 DS    0H
         MVC   SPF_PANEL,NEWPANEL             SET PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS
         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS
         ST    R1,DXD_SPF_2                   SET ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDRESS
         BALR  R14,R15                        DISPLAY THE PANEL
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15
         LTR   R15,R15                        ZERO?
         BNZ   DISP0010                       NO
*---------------------------------------------------------------------*
*        Verify the member does not already exist                     *
*---------------------------------------------------------------------*
         CLC   SPF_MEM_NAME,COMM_BLANKS       MEMBER NAME GIVEN?
         BE    DISP0590                       NO..
         ICM   R8,15,DXD_MEM_CHAIN            FIRST MEMBER CHAIN BLOCK
         BZ    DISP0550                       NO MEMBERS
DISP0520 DS    0H
         ITRACE ID=CURRMEMS,                                           +
               RDATA1=R8
         LA    R4,MEM_CHAIN_MEMBER            ADDRESS OF FIRST MEMBER
DISP0530 DS    0H
         CLC   SPF_MEM_NAME,LIB_KEY_NAME
         BNE   DISP0540
         CLC   DXD_MEM_VERSION,LIB_KEY_VERSION
         BE    DISP0600
DISP0540 DS    0H
         ICM   R8,15,MEM_CHAIN_NEXT           NEXT BLOCK
         BNZ   DISP0520
*---------------------------------------------------------------------*
*        Call LIBTNEW to add the new member                           *
*---------------------------------------------------------------------*
DISP0550 DS    0H
         MVC   COMM_MEMBER_NAME,SPF_MEM_NAME
         MVC   COMM_VERSION,DXD_MEM_VERSION
         ITRACE ID=CALLTNEW
         L     R15,VTNEW                      LIBTNEW ENTRY POINT
         BALR  R14,R15                        LINK
         LR    R2,R15                         SAVE RC
         BAL   R14,DYNA0100
         LTR   R2,R2                          MEMBER ADDED?
         BNZ   DISP0010                       NO
         ITRACE ID=ADD_NEW
         LA    R8,DXD_MEM_CHAIN               DUMMY HEAD OF CHAIN
DISP0560 DS    0H
         LR    R2,R8                          SAVE CURRENT MEMBER
         ICM   R8,15,MEM_CHAIN_NEXT
         BZ    DISP0570
         LA    R4,MEM_CHAIN_MEMBER
         CLC   SPF_MEM_NAME,LIB_KEY_NAME
         BH    DISP0560
DISP0570 DS    0H
         GETMAIN RU,                          GETMAIN MEMBER CHAIN     +
               LV=MEM_CHAIN_L,                                         +
               LOC=ANY
         ST    R1,MEM_CHAIN_NEXT-MEM_CHAIN(R2)
         LTR   R8,R8
         BZ    DISP0580
         ST    R1,MEM_CHAIN_PREV
DISP0580 DS    0H
         ST    R8,MEM_CHAIN_NEXT-MEM_CHAIN(R1)
         ST    R2,MEM_CHAIN_PREV-MEM_CHAIN(R1)
         LR    R8,R1
         LA    R4,MEM_CHAIN_MEMBER
         MVC   MEM_CHAIN_EYE,MEM_CHAIN_ID
         MVI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_NEW
         MVI   MEM_CHAIN_FLAG,$MEM_CURRENT
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,SPF_MEM_NAME
         MVC   LIB_KEY_VERSION,H1
         MVC   LIB_KEY_SEQ,F1
         MVC   LIB_INDEX_OWNER,SPF_USER
         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN
         TIME  DEC
         STCM  R0,15,LIB_INDEX_CREATE_TIME
         STCM  R1,15,LIB_INDEX_CREATE_DATE
         XC    LIB_INDEX_CHECK_OUT_TIME,LIB_INDEX_CHECK_OUT_TIME
         ZAP   LIB_INDEX_CHECK_OUT_DATE,P0
         MVC   LIB_INDEX_CHECK_OUT_USER,COMM_BLANKS
         XC    LIB_INDEX_CHECK_OUTS,LIB_INDEX_CHECK_OUTS
         XC    LIB_INDEX_CHECK_IN_TIME,LIB_INDEX_CHECK_IN_TIME
         ZAP   LIB_INDEX_CHECK_IN_DATE,P0
         MVC   LIB_INDEX_CHECK_IN_USER,COMM_BLANKS
         XC    LIB_INDEX_RECORDS,LIB_INDEX_RECORDS
         B     DISP0010
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DISP0590 DS    0H
         MVC   SPF_MSG1(MSG03L),MSG03
         B     DISP0510
DISP0600 DS    0H
         MVC   SPF_MSG1(MSG04L),MSG04
         B     DISP0510
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DISP1000 DS    0H
         ITRACE ID=NEXTMEM,                                            +
               RDATA1=R8,                                              +
               RDATA2=R6
         A     R9,DXD_WIDTH
         ICM   R8,15,MEM_CHAIN_NEXT
         BZ    DISP1010
         BCT   R6,DISP0150
DISP1010 DS    0H
         TM    DXD_FLAGS,$SELECT              ANYTHING SELECTED?
         BO    DISP0010                       YES, DON'T DO SCROLLING
         ITRACE ID=SCROLL,                                             +
               DATA1=SPF_ZVERB,                                        +
               DATA2=SPF_ZSCROLLN
         NI    DXD_FLAGS,255-$VPUT
DISP1020 DS    0H
         ITRACE ID=VGET                       REQUESTING VARIABLES
         LA    R1,VGET                        COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST
         LA    R1,VGETVARS                    VARIABLE NAMES
         ST    R1,DXD_SPF_2                   SET ADDRESS IN PARM LIST
         LA    R1,SHARED                      FROM SHARED POOL
         ST    R1,DXD_SPF_3                   SET ADDRESS IN PARM LIST
         OI    DXD_SPF_3,X'80'                SET END-OF-LIST
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDR
         BALR  R14,R15                        LINK TO SPF
         ITRACE ID=VGETRC,                    VGET COMPLETE            +
               RDATA1=R15                     .. INCLUDE RETURN CODE
         LTR   R15,R15                        VGET SUCCESSFUL?
         BZ    DISP1030                       YES
         TM    DXD_FLAGS,$VPUT                VPUT ALREADY ISSUED?
         BO    DISP1030                       YES
*---------------------------------------------------------------------*
*        Issue VPUT, try VGET again                                   *
*---------------------------------------------------------------------*
         ITRACE ID=VPUT
         LA    R1,VPUT                        COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST
         LA    R1,VGETVARS                    VARIABLE NAMES
         ST    R1,DXD_SPF_2                   SET ADDRESS IN PARM LIST
         LA    R1,SHARED                      FROM SHARED POOL
         ST    R1,DXD_SPF_3                   SET ADDRESS IN PARM LIST
         OI    DXD_SPF_3,X'80'                SET END-OF-LIST
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDR
         BALR  R14,R15                        LINK TO SPF
         ITRACE ID=VPUTRC,                    VPUT COMPLETE            +
               RDATA1=R15                     .. INCLUDE RETURN CODE
         B     DISP1020
*---------------------------------------------------------------------*
*        Process command or scroll                                    *
*---------------------------------------------------------------------*
DISP1030 DS    0H
         CLI   SPF_ZVERB,C'D'                 DOWN?
         BE    DISP1040                       YES
         CLI   SPF_ZVERB,C'U'                 UP?
         BE    DISP1060                       YES
         MVC   SPF_MSG3_ID(MSG12L),MSG12
         B     DISP0010                       DISPLAY MEMBER LIST AGAIN
DISP1040 DS    0H
         ITRACE ID=DOWN
         L     R1,SPF_ZSCROLLN                NUMBER OF LINES
         L     R8,DXD_FIRST_MEMBER
DISP1050 DS    0H
         ST    R8,DXD_FIRST_MEMBER
         ICM   R8,15,MEM_CHAIN_NEXT
         BZ    DISP0010
         BCT   R1,DISP1050
         B     DISP0010
DISP1060 DS    0H
         L     R1,SPF_ZSCROLLN                NUMBER OF LINES
         L     R8,DXD_FIRST_MEMBER
DISP1070 DS    0H
         ST    R8,DXD_FIRST_MEMBER
         ICM   R8,15,MEM_CHAIN_PREV
         CLI   MEM_CHAIN_FLAG,$MEM_CHAIN_DUMMY
         BE    DISP0010
         BCT   R1,DISP1070
         B     DISP0010
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
DETL0000 DS    0H
         ST    R14,DXD_SAVE_R14
         ITRACE ID=DETAIL,                                             +
               RDATA1=R4
         MVC   DETAIL(DETAILL),COMM_BLANKS
         MVI   DETAIL_ATTR_1,X'02'
         MVI   DETAIL_ATTR_2,X'01'
         MVC   DETAIL_NAME,LIB_KEY_NAME
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,LIB_KEY_VERSION           VERSION NUMBER
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         MVC   DXD_WORK_1,=X'402020202120'    INITIALIZE EDIT WORD
         ED    DXD_WORK_1,DXD_DWORD+(5)       EDIT VERSION NUMBER
         MVC   DETAIL_VERSION,DXD_WORK_1+1    COPY EDITED VERSION
         MVC   DETAIL_OWNER,LIB_INDEX_OWNER   COPY OWNER
         ICM   R1,15,LIB_INDEX_RECORDS        NUMBER OF RECORDS
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         MVC   DXD_WORK_2,=X'402020206B2020206B202120'
         ED    DXD_WORK_2,DXD_DWORD+3         EDIT NUMBER OF RECORDS
         MVC   DETAIL_SIZE,DXD_WORK_2+1       COPY EDITED SIZE
         CLI   LIB_INDEX_STATUS,$LIB_STATUS_IN
         BE    DETL0010
         MVC   DETAIL_STATUS,OUT              STATUS IS CHECKED OUT
         MVC   DETAIL_USER,LIB_INDEX_CHECK_OUT_USER
         ZAP   DXD_DATE,LIB_INDEX_CHECK_OUT_DATE
         AP    DXD_DATE,P1900000
         UNPK  DXD_WORK_3(9),DXD_DATE(5)
         MVC   DETAIL_DATE(4),DXD_WORK_3
         MVI   DETAIL_DATE+4,C'.'
         MVC   DETAIL_DATE+5(3),DXD_WORK_3+4
         UNPK  DXD_WORK_3(9),LIB_INDEX_CHECK_OUT_TIME(5)
         MVC   DETAIL_TIME+0(2),DXD_WORK_3+0
         MVI   DETAIL_TIME+2,C':'
         MVC   DETAIL_TIME+3(2),DXD_WORK_3+2
         MVI   DETAIL_TIME+5,C':'
         MVC   DETAIL_TIME+6(2),DXD_WORK_3+4
         MVI   DETAIL_TIME+8,C'.'
         MVC   DETAIL_TIME+9(2),DXD_WORK_3+6
         B     DETL0020
DETL0010 DS    0H
         MVC   DETAIL_STATUS,IN               STATUS IS CHECKED IN
         MVC   DETAIL_USER,LIB_INDEX_CHECK_IN_USER
         ZAP   DXD_DATE,LIB_INDEX_CHECK_IN_DATE
         AP    DXD_DATE,P1900000
         UNPK  DXD_WORK_3(9),DXD_DATE(5)
         MVC   DETAIL_DATE(4),DXD_WORK_3
         MVI   DETAIL_DATE+4,C'.'
         MVC   DETAIL_DATE+5(3),DXD_WORK_3+4
         UNPK  DXD_WORK_3(9),LIB_INDEX_CHECK_IN_TIME(5)
         MVC   DETAIL_TIME+0(2),DXD_WORK_3+0
         MVI   DETAIL_TIME+2,C':'
         MVC   DETAIL_TIME+3(2),DXD_WORK_3+2
         MVI   DETAIL_TIME+5,C':'
         MVC   DETAIL_TIME+6(2),DXD_WORK_3+4
         MVI   DETAIL_TIME+8,C'.'
         MVC   DETAIL_TIME+9(2),DXD_WORK_3+6
DETL0020 DS    0H
         MVI   DETAIL_ATTR_3,X'03'            SET ATTRIBUTE
         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_ADMN
         BE    DETL0030
         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_DELETE
         BE    DETL0040
         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_DOC
         BE    DETL0050
         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_IN
         BE    DETL0060
         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_OUT
         BE    DETL0070
         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_VIEW
         BE    DETL0080
         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_VER
         BE    DETL0090
         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_NEW
         BE    DETL0100
         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_UNDO
         BE    DETL0110
         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_BROWSE
         BE    DETL0115
         CLI   MEM_CHAIN_FUNCTION,$MEM_CHAIN_SUBMIT
         BE    DETL0116
         MVI   DETAIL_ATTR_3,X'01'
         B     DETL0120
DETL0030 DS    0H
         MVC   DETAIL_USER(29),ADMIN
         B     DETL0120
DETL0040 DS    0H
         MVC   DETAIL_USER(29),DELETED
         B     DETL0120
DETL0050 DS    0H
         MVC   DETAIL_USER(29),DOC
         B     DETL0120
DETL0060 DS    0H
         MVC   DETAIL_USER(29),CHECKED_IN
         B     DETL0120
DETL0070 DS    0H
         MVC   DETAIL_USER(29),CHECKED_OUT
         B     DETL0120
DETL0080 DS    0H
         MVC   DETAIL_USER(29),VIEWED
         B     DETL0120
DETL0090 DS    0H
         MVC   DETAIL_USER(29),VERSION
         B     DETL0120
DETL0100 DS    0H
         MVC   DETAIL_USER(29),NEW
         B     DETL0120
DETL0110 DS    0H
         MVC   DETAIL_USER(29),UNDO
         B     DETL0120
DETL0115 DS    0H
         MVC   DETAIL_USER(29),BROWSE
         B     DETL0120
DETL0116 DS    0H
         MVC   DETAIL_USER(29),SUBMIT
DETL0120 DS    0H
         L     R14,DXD_SAVE_R14
         BR    R14
* ------------------------------------------------------------------- *
*        LOCATE                                                       *
* ------------------------------------------------------------------- *
LOC0000  DS    0H
         ITRACE ID=LOCATE
         CLC   COMM_OPERANDS_NBR,F2
         BNE   ERR0030
         CLI   COMM_OPERAND_2_LENGTH,8
         BH    ERR0040
         ICM   R1,15,COMM_OPERAND_2_ADDRESS
         LA    R8,DXD_MEM_CHAIN
LOC0010  DS    0H
         ICM   R8,15,MEM_CHAIN_NEXT
         BZ    LOC0020
         LA    R4,MEM_CHAIN_MEMBER
         CLC   LIB_KEY_NAME,0(R1)
         BL    LOC0010
         ST    R8,DXD_FIRST_MEMBER
LOC0020  DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS
         B     DISP0010
* ------------------------------------------------------------------- *
*        DELETE                                                       *
* ------------------------------------------------------------------- *
ADMIN000 DS    0H
         ITRACE ID=ADMIN
         MVC   DXD_FUNCTION,VTADMN
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_ADMN
         B     PRIM0000
* ------------------------------------------------------------------- *
*        DELETE                                                       *
* ------------------------------------------------------------------- *
DEL0000  DS    0H
         ITRACE ID=DELETE
         MVC   DXD_FUNCTION,VTDEL
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_DELETE
         B     PRIM0000
* ------------------------------------------------------------------- *
*        DISPLAY HELP                                                 *
* ------------------------------------------------------------------- *
HELP0000 DS    0H
         ITRACE ID=PRIMHELP
         MVC   SPF_ZCMD,COMM_BLANKS           BLANK?
         MVC   SPF_PANEL,PRIM_HELP            PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST
         LA    R1,SPF_PANEL                   PANEL'S NAME
         ST    R1,DXD_SPF_2                   SET PANEL NAME ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS
         L     R15,AISPLINK
         BALR  R14,R15                        LINK TO SPF
         B     DISP0070
HELP0010 DS    0H
         ITRACE ID=LINEHELP
         MVI   DETAIL_SELECT,C'?'             RESET COMMAND
         MVC   SPF_PANEL,LINE_HELP            PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST
         LA    R1,SPF_PANEL                   PANEL'S NAME
         ST    R1,DXD_SPF_2                   SET PANEL NAME ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS
         L     R15,AISPLINK
         BALR  R14,R15                        LINK TO SPF
         SR    R15,r15
         B     DISP0430
* ------------------------------------------------------------------- *
*        CHECK IN                                                     *
* ------------------------------------------------------------------- *
IN0000   DS    0H
         ITRACE ID=IN
         MVC   DXD_FUNCTION,VTCKIN
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_IN
         B     PRIM0000
* ------------------------------------------------------------------- *
*        SUBMIT AS A BATCH JOB                                        *
* ------------------------------------------------------------------- *
JOB0000  DS    0H
         ITRACE ID=JOB
         MVC   DXD_FUNCTION,VTJOB
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_SUBMIT
         B     PRIM0000
* ------------------------------------------------------------------- *
*        SELECT                                                       *
* ------------------------------------------------------------------- *
SEL0000  DS    0H
         ITRACE ID=SELECT
         MVC   DXD_FUNCTION,VTMDOC
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_DOC
         B     PRIM0000
* ------------------------------------------------------------------- *
*        CHECK OUT                                                    *
* ------------------------------------------------------------------- *
OUT0000  DS    0H
         ITRACE ID=CKOUT
         MVC   DXD_FUNCTION,VTCKOT
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_OUT
         B     PRIM0000
* ------------------------------------------------------------------- *
*        VIEW                                                         *
* ------------------------------------------------------------------- *
VIEW0000 DS    0H
         ITRACE ID=VIEW
         MVC   DXD_FUNCTION,VTVIEW
         MVI   DXD_FUNCTION_FLAG,$MEM_CHAIN_VIEW
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRIM0000 DS    0H
         ITRACE ID=PRIM0000,                                           +
               DATA1=COMM_OPERANDS_NBR,                                +
               DATA2=COMM_OPERAND_2_LENGTH
         CLC   COMM_OPERANDS_NBR,F2           TWO OPERANDS?
         BNE   ERR0030                        NO
         CLI   COMM_OPERAND_2_LENGTH,8        SECOND OPERAND 8 BYTES?
         BH    ERR0040                        LONGER.. ERROR
         ITRACE ID=SEARCH
         ICM   R1,15,COMM_OPERAND_2_ADDRESS
         LA    R8,DXD_MEM_CHAIN
PRIM0010 DS    0H
         ICM   R8,15,MEM_CHAIN_NEXT
         BZ    ERR0050
         LA    R4,MEM_CHAIN_MEMBER
         CLC   LIB_KEY_NAME,0(R1)
         BL    PRIM0010
         BH    ERR0050
PRIM0020 DS    0H
         ICM   R1,15,MEM_CHAIN_NEXT           NEXT ON CHAIN
NEXT     USING MEM_CHAIN,R1
         LA    R2,NEXT.MEM_CHAIN_MEMBER
         CLC   LIB_KEY_NAME,LIB_KEY_NAME-LIB_RECORD(R2)
         BNE   PRIM0030                       NO
         LR    R8,R1                          COPY NEXT ADDRESS
         LA    R4,MEM_CHAIN_MEMBER
         B     PRIM0020                       KEEP FOLLOWING CHAIN
         DROP  NEXT
PRIM0030 DS    0H
         ST    R8,DXD_FIRST_MEMBER
         MVC   COMM_MEMBER_NAME,LIB_KEY_NAME
         MVC   SPF_MEM_NAME,LIB_KEY_NAME
         MVC   COMM_VERSION,LIB_KEY_VERSION
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,LIB_KEY_VERSION           VERSION NUMBER
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         MVC   DXD_WORK_1,=X'F02120202020'    INITIALIZE EDIT WORD
         ED    DXD_WORK_1,DXD_DWORD+(5)       EDIT VERSION NUMBER
         MVC   SPF_MEM_VERSION,DXD_WORK_1+1   COPY EDITED VERSION
         MVC   SPF_ZCMD,COMM_BLANKS
         L     R15,DXD_FUNCTION
         BALR  R14,R15
         MVC   MEM_CHAIN_FUNCTION,DXD_FUNCTION_FLAG
         CLI   DXD_FUNCTION_FLAG,$MEM_CHAIN_ADMN
         BNE   DISP0010
         MVC   LIB_INDEX_STATUS,NET_DATA+(LIB_INDEX_STATUS-LIB_RECORD)
         MVC   LIB_INDEX_OWNER,NET_DATA+(LIB_INDEX_OWNER-LIB_RECORD)
         MVC   LIB_INDEX_CHECK_OUT_USER,NET_DATA+(LIB_INDEX_CHECK_OUT_U+
               SER-LIB_RECORD)
         B     DISP0010
* ------------------------------------------------------------------- *
*        LIBRARY STC STATUS                                           *
* ------------------------------------------------------------------- *
STAT0000 DS    0H
         ITRACE ID=STATUS
         CLC   COMM_OPERANDS_NBR,F1  CORRECT NUMBER OF OPERANDS?
         BH    ERR0030               NO
         MVC   SPF_ZCMD,COMM_BLANKS  RESET THE COMMAND
         L     R15,ATSTAT
         BALR  R14,R15               LINK TO STATUS DISPLAY
         CH    R15,H4                QUIT?
         BE    EXIT0000              YES
         BAL   R14,DYNA0100
         B     DISP0010
* ------------------------------------------------------------------- *
*                                                                     *
*        Compute size of dynamic area.                                *
*        GETMAIN storage.                                             *
*                                                                     *
* ------------------------------------------------------------------- *
DYNA0000 DS    0H
         ST    R14,DXD_SAVE_R14
         ITRACE ID=PQUERY
         LA    R1,PQUERY             COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1          SET IN PARM LIST
         LA    R1,SPF_PANEL          PANEL NAME'S ADDRESS
         ST    R1,DXD_SPF_2          SET IN PARM LIST
         LA    R1,CVDATA             AREA NAME WITHIN THE PANEL
         ST    R1,DXD_SPF_3          SET IN PARM LIST
         LA    R1,CVTYPE             AREA TYPE
         ST    R1,DXD_SPF_4          SET IN PARM LIST
         LA    R1,CVWIDTH            SCREEN DEPTH
         ST    R1,DXD_SPF_5          SET IN PARM LIST
         LA    R1,CVDEPTH            SCREEN WIDTH
         ST    R1,DXD_SPF_6          SET IN PARM LIST
         LA    R1,CVROW              SCREEN ROW
         ST    R1,DXD_SPF_7          SET IN PARM LIST
         LA    R1,CVCOL              SCREEN COLUMN
         ST    R1,DXD_SPF_8          SET IN PARM LIST
         OI    DXD_SPF_8,X'80'       FLAG 'END-OF-LIST'
         LA    R1,DXD_SPF_PARMS      PQUERY PARM LIST ADDRESS
         L     R15,AISPLINK          SPF INTERFACE'S ADDRESS
         BALR  R14,R15               ISSUE QUERY
         LTR   R15,R15               PQUERY SUCCESSFUL?
         BNZ   ERR0010               NO
         L     R0,SPF_VWIDTH                 SCREEN WIDTH
         MH    R0,SPF_VDEPTH+2               TIMES DEPTH
         ST    R0,DXD_DYNA_SIZE              NUMBER OF LINES TO DISPLAY
         ITRACE ID=GET_DYNA,                                           +
               RDATA1=R0
         GETMAIN RU,                                                   +
               LV=(0),                                                 +
               LOC=ANY
         ITRACE ID=DYNA,                                               +
               RDATA1=R1
         ST    R1,DXD_DYNA_ADDR              SAVE TEXT AREA ADDRESS
         L     R0,DXD_DYNA_ADDR
         L     R1,DXD_DYNA_SIZE
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                INITIALIZE VDATA STORAGE
         LA    R1,VDEFINE            COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1          SET ADDRESS IN PARM LIST
         LA    R1,CVDATA             VARIABLE NAME ADDRESS
         ST    R1,DXD_SPF_2          SET ADDRESS IN PARM LIST
         MVC   DXD_SPF_3,DXD_DYNA_ADDR
         LA    R1,CHARFORM           DATA FORMAT ADDRESS
         ST    R1,DXD_SPF_4          SET ADDRESS IN PARM LIST
         LA    R1,DXD_DYNA_SIZE
         ST    R1,DXD_SPF_5          SET ADDRESS IN PARM LIST
         OI    DXD_SPF_5,X'80'       FLAG END-OF-LIST
         LA    R1,DXD_SPF_PARMS      SPF PARM LIST ADDRESS
         L     R15,AISPLINK          SPF ENTRY POINT
         BALR  R14,R15               DEFINE 'VDATA'
         LTR   R15,R15               DEFINE SUCCESSFUL?
         BNZ   ERR0020               NO
         L     R14,DXD_SAVE_R14
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
*        VDELETE/VDEFINE VDATA                                        *
*                                                                     *
* ------------------------------------------------------------------- *
DYNA0100 DS    0H
         ST    R14,DXD_SAVE_R14
         LA    R1,VDELETE            COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1          SET ADDRESS IN PARM LIST
         LA    R1,CVDATA             VARIABLE NAME ADDRESS
         ST    R1,DXD_SPF_2          SET ADDRESS IN PARM LIST
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS
         L     R15,AISPLINK
         BALR  R14,R15
         LA    R1,VDEFINE            COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1          SET ADDRESS IN PARM LIST
         LA    R1,CVDATA             VARIABLE NAME ADDRESS
         ST    R1,DXD_SPF_2          SET ADDRESS IN PARM LIST
         MVC   DXD_SPF_3,DXD_DYNA_ADDR
         LA    R1,CHARFORM           DATA FORMAT ADDRESS
         ST    R1,DXD_SPF_4          SET ADDRESS IN PARM LIST
         LA    R1,DXD_DYNA_SIZE
         ST    R1,DXD_SPF_5          SET ADDRESS IN PARM LIST
         OI    DXD_SPF_5,X'80'       FLAG END-OF-LIST
         LA    R1,DXD_SPF_PARMS      SPF PARM LIST ADDRESS
         L     R15,AISPLINK          SPF ENTRY POINT
         BALR  R14,R15               DEFINE 'VDATA'
         LTR   R15,R15               DEFINE SUCCESSFUL?
         BNZ   ERR0020               NO
         L     R14,DXD_SAVE_R14
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         ST    R14,DXD_SAVE_R14
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0010
         ITRACE ID=VTAMSEND,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATVTAM               LIBTVTAM ENTRY POINT
         B     SEND0020
SEND0010 DS    0H
         ITRACE ID=IP_SEND,                                            +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATTCP                LIBTTCP ENTRY POINT
SEND0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND  COMMAND
         LA    R1,VTAMREQ               VTAM REQUEST BLOCK ADDRESS
         BALR  R14,R15                  LINK TO LIBTVTAM
         L     R14,DXD_SAVE_R14
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         ST    R14,DXD_SAVE_R14
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM              LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP               LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE  COMMAND
         LA    R1,VTAMREQ              VTAM REQUEST BLOCK ADDRESS
         BALR  R14,R15                 LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R14,DXD_SAVE_R14
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SNAP0000 DS    0H
         ITRACE ID=SNAP
         CLC   COMM_OPERANDS_NBR,F1  CORRECT NUMBER OF OPERANDS?
         BH    ERR0030               NO
         MVC   SPF_ZCMD,COMM_BLANKS  RESET THE COMMAND
         L     R15,ATSNAP
         ITRACE ID=SNAP,                                               +
               RDATA1=R15
         BALR  R14,R15               LINK TO SNAP DUMP
         B     DISP0070
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=BAD_PQRY,                                           +
               RDATA1=R15
         DC    H'0'
ERR0020  DS    0H
         ITRACE ID=BAD_VDEF,                                           +
               RDATA1=R15
         DC    H'0'
ERR0030  DS    0H
         ITRACE ID=ERR0030
         MVC   SPF_MSG1(MSG08L),MSG08
         B     DISP0010
ERR0040  DS    0H
         ITRACE ID=ERR0040
         MVC   SPF_MSG1(MSG09L),MSG09
         B     DISP0010
ERR0050  DS    0H
         ITRACE ID=ERR0050
         MVC   SPF_MSG1(MSG10L),MSG10
         B     DISP0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DBUG0000 DS    0H
         ST    R14,DXD_SAVE_R14
         ITRACE ID=DEBUG
         TM    XTRFLAG,$XTRON
         BNO   DBUG0040
         GETMAIN RU,                                                   +
               LV=MEM_CHAIN_L+8,                                       +
               LOC=BELOW
         LR    R2,R1
         LA    R1,MEM_CHAIN_L+8
         STCM  R1,3,0(R2)
         XC    2(2,R2),2(R2)
         LA    R8,DXD_MEM_CHAIN
         B     DBUG0020
DBUG0010 DS    0H
         ST    R8,4(R2)
         MVC   8(MEM_CHAIN_L,R2),0(R8)
         PUT   XTRACE,0(R2)
DBUG0020 DS    0H
         ICM   R8,15,MEM_CHAIN_NEXT
         BNZ   DBUG0010
DBUG0030 DS    0H
         FREEMAIN RU,A=(R2),LV=MEM_CHAIN_L+8
DBUG0040 DS    0H
         ITRACE ID=END_DBUG
         L     R14,DXD_SAVE_R14
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LA    R8,DXD_MEM_CHAIN
         ICM   R8,15,MEM_CHAIN_NEXT  FIRST MEMBER ON CHAIN
         BZ    EXIT0020
EXIT0010 DS    0H
         L     R3,MEM_CHAIN_NEXT     NEXT BLOCK
         FREEMAIN RU,                                                  +
               A=(R8),                                                 +
               LV=MEM_CHAIN_L
         LTR   R8,R3                 NEXT BLOCK'S ADDRESS
         BNZ   EXIT0010              FREE THIS BLOCK
EXIT0020 DS    0H
         XC    DXD_MEM_CHAIN,DXD_MEM_CHAIN
         ICM   R1,15,DXD_DYNA_ADDR
         BZ    EXIT0030
         L     R0,DXD_DYNA_SIZE
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=(0)
         XC    DXD_DYNA_ADDR,DXD_DYNA_ADDR
         XC    DXD_DYNA_SIZE,DXD_DYNA_SIZE
         LA    R1,VDELETE            COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1          SET ADDRESS IN PARM LIST
         LA    R1,CVDATA             VARIABLE NAME ADDRESS
         ST    R1,DXD_SPF_2          SET ADDRESS IN PARM LIST
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS
         L     R15,AISPLINK
         BALR  R14,R15
EXIT0030 DS    0H
         LH    R15,DXD_RC            SET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)            RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)           RESTORE R14
         LM    R0,R12,20(R13)        RESTORE REMAINING REGISTERS
         BR    R14                   RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ABND0000 DS    0H
         ITRACE ID=ABEND
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTDMEM)           DISPLACEMENT TO WORK AREA
VTADMN   DC    V(LIBTADMN)           CHECK-IN/OUT AND USER ADMIN
VTBRWS   DC    V(LIBTBRWS)           BROWSE
VTCKIN   DC    V(LIBTCKIN)           CHECK-IN
VTCKOT   DC    V(LIBTCKOT)           CHECK-OUT
VTDEL    DC    V(LIBTDEL)            DELETE
VTMDOC   DC    V(LIBTMDOC)           DISPLAY/UPDATE DOCUMENATION
VTNEW    DC    V(LIBTNEW)            ADD NEW MEMBERS
VTJOB    DC    V(LIBTJOB)            SUBMIT MEMBER AS BATCH JOB
VTUNDO   DC    V(LIBTUNDO)           UNDO (RESET CHECK-OUT STATUS)
VTVER    DC    V(LIBTVER)            CREATE NEW VERSION
VTVIEW   DC    V(LIBTVIEW)           VIEW MEMBER SOURCE
F1       DC    F'1'                  CONSTANT
F2       DC    F'2'                  CONSTANT
F10      DC    F'10'                 CONSTANT
F4000    DC    F'4000'               OUTPUT FILE BLOCK SIZE

VGETVARS DC    F'3'                  NUMBER OF VARIABLE NAMES
         DC    F'0'                  UNPROTECTED STORAGE
         DC    CL8'ZVERB'            VARIABLE NAME
         DC    CL8'ZSCROLLA'         VARIABLE NAME
         DC    CL8'ZSCROLLN'         VARIABLE NAME

H1       DC    H'1'
H2       DC    H'2'
H4       DC    H'4'
H8       DC    H'8'
ABEND    DC    C'ABEND '
CHARFORM DC    CL4'CHAR'
PQUERY   DC    CL8'PQUERY'
CVDATA   DC    CL8'VDATA'
CVTYPE   DC    CL8'VTYPE'
CVWIDTH  DC    CL8'VWIDTH'
CVDEPTH  DC    CL8'VDEPTH'
CVROW    DC    CL8'VROW'
CVCOL    DC    CL8'VCOL'
VDEFINE  DC    CL8'VDEFINE'
VDELETE  DC    CL8'VDELETE'
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
SHARED   DC    CL8'SHARED'
DISPLAY  DC    CL8'DISPLAY'
MEMPANEL DC    CL8'MEMPANEL'
NEWPANEL DC    CL8'NEWPANEL'
LINE_HELP  DC  CL8'LINEHELP'
PRIM_HELP  DC  CL8'PRIMHELP'

MEM_CHAIN_ID   DC CL8'MEMCHAIN'

P0       DC    P'0'
P1900000 DC    P'1900000'

IN       DC    CL3'IN '
OUT      DC    CL3'OUT'

ADMIN          DC CL29'< -----Administration------ >'
BROWSE         DC CL29'< -------- Browsed -------- >'
CHECKED_IN     DC CL29'< ------ Checked in ------- >'
CHECKED_OUT    DC CL29'< ------ Checked OUT ------ >'
DELETED        DC CL29'< ------  Deleted --------- >'
DOC            DC CL29'< ----- Documentation ----- >'
SUBMIT         DC CL29'< ------ Submitted -------- >'
VIEWED         DC CL29'< -------- Viewed --------- >'
VERSION        DC CL29'< ------ New version ------ >'
NEW            DC CL29'< ------ New member ------- >'
UNDO           DC CL29'< --------- Undo ---------- >'

MSG01    DC    CL11'LIBTDMEM01'
         DC    C'Invalid function code'
MSG01L   EQU   *-MSG01
MSG02    DC    CL11'LIBTDMEM02'
         DC    C'Authorization failed'
MSG02L   EQU   *-MSG02
MSG03    DC    CL11'LIBTDMEM03'
         DC    C'Member name is required'
MSG03L   EQU   *-MSG03
MSG04    DC    CL11'LIBTDMEM04'
         DC    C'Specified member/version already exists'
MSG04L   EQU   *-MSG04
MSG05    DC    CL11'LIBTDMEM05'
         DC    C'Number of members in library is'
MSG05MEM DC    X'40206B2020206B202120'
MSG05L   EQU   *-MSG05
MSG06    DC    CL11'LIBTDMEM06'
         DC    C'Library '
MSG06LIB DC    CL8' '
         DC    C' is empty'
MSG06L   EQU   *-MSG06
MSG07    DC    CL11'LIBTDMEM07'
         DC    C'Unrecognized primary command'
MSG07L   EQU   *-MSG07
MSG08    DC    CL11'LIBTDMEM08E'
         DC    C'Incorrect number of parameters'
MSG08L   EQU   *-MSG08
MSG09    DC    CL11'LIBTDMEM09E'
         DC    C'Member name too long'
MSG09L   EQU   *-MSG09
MSG10    DC    CL11'LIBTDMEM10E'
         DC    C'Member not found'
MSG10L   EQU   *-MSG10
MSG11    DC    CL11'LIBTDMEM11E'
         DC    C'Member deleted, no further action permitted'
MSG11L   EQU   *-MSG11
MSG12    DC    CL11'LIBTDMEM12I'
         DC    C'For a list of commands, enter -?-'
MSG12L   EQU   *-MSG12

         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDTDMEM        DSECT
                LIBSAVE DSECT=NO
DXD_DWORD       DS  D                  WORK AREA FOR CVD

*  THIS NEEDS TO 'LOOK' LIKE THE PREFIX OF THE MEM_CHAIN AREA(S)
DXD_MEM_CHAIN   DS  0A                 CHAIN OF MEMBER BLOCKS
                DS  CL8                EYECATCHER
                DS  A                  'NEXT'
                DS  A                  'PREV'
                DS  X                  FLAG

DXD_MEMBERS     DS  F                  NUMBER OF MEMBERS
DXD_FUNCTION    DS  A
DXD_SAVE_R14    DS  A

DXD_FIRST_MEMBER DS A
DXD_LAST_MEMBER  DS A

DXD_SPF_PARMS   DS  0F
DXD_SPF_1       DS  F
DXD_SPF_2       DS  F
DXD_SPF_3       DS  F
DXD_SPF_4       DS  F
DXD_SPF_5       DS  F
DXD_SPF_6       DS  F
DXD_SPF_7       DS  F
DXD_SPF_8       DS  F

DXD_WIDTH       DS  F
DXD_DEPTH       DS  F
DXD_DYNA_SIZE   DS  F                  DYNAMIC AREA SIZE
DXD_DYNA_ADDR   DS  A                  DYNAMIC AREA ADDRESS

DXD_RC          DS  H                  RETURN CODE FROM DISPLAY
DXD_MEM_VERSION DS  H
DXD_WORK_1      DS  CL6
DXD_WORK_2      DS  CL12
DXD_WORK_3      DS  CL9
DXD_DATE        DS  PL4
DXD_FLAGS       DS  X
$SELECT         EQU X'80'              .. AT LEAST 1 MEMBER SELECTED
$VPUT           EQU X'40'
DXD_FUNCTION_FLAG   DS   X
                VTAMREQ DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DETAIL            DSECT
DETAIL_ATTR_1     DS   X           1- 1
DETAIL_SELECT     DS   C           2- 2
DETAIL_ATTR_2     DS   X           3- 3
                  DS   X           4- 4
DETAIL_NAME       DS   CL8         5-12
                  DS   CL1        13-13
DETAIL_VERSION    DS   CL5        14-18
                  DS   CL1        19-19
DETAIL_OWNER      DS   CL8        20-27
                  DS   CL1        28-28
DETAIL_SIZE       DS   CL11       29-39
                  DS   CL1        40-40
DETAIL_STATUS     DS   CL3        41-43
DETAIL_ATTR_3     DS   CL1        44-44
DETAIL_USER       DS   CL8        45-52
                  DS   CL1        53-53
DETAIL_DATE       DS   CL8        54-61
                  DS   CL1        62-62
DETAIL_TIME       DS   CL11       63-73
DETAILL           EQU  *-DETAIL

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MEM_CHAIN          DSECT
MEM_CHAIN_EYE      DS   CL8
MEM_CHAIN_NEXT     DS   A
MEM_CHAIN_PREV     DS   A
MEM_CHAIN_FUNCTION DS   X
$MEM_CHAIN_ADMN    EQU  X'01'
$MEM_CHAIN_DOC     EQU  X'02'
$MEM_CHAIN_DELETE  EQU  X'03'
$MEM_CHAIN_IN      EQU  X'04'
$MEM_CHAIN_OUT     EQU  X'05'
$MEM_CHAIN_VIEW    EQU  X'06'
$MEM_CHAIN_VER     EQU  X'07'
$MEM_CHAIN_NEW     EQU  X'08'
$MEM_CHAIN_UNDO    EQU  X'09'
$MEM_CHAIN_BROWSE  EQU  X'0A'
$MEM_CHAIN_SUBMIT  EQU  X'0B'
MEM_CHAIN_FLAG     DS   X
$MEM_CURRENT       EQU  X'80'
$MEM_CHAIN_DUMMY   EQU  X'FF'
MEM_CHAIN_MEMBER   DS   (LIB_INDEX_RECORD_LENGTH)X
MEM_CHAIN_L        EQU  *-MEM_CHAIN
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                      NETBLOK DSECT=YES
NET_LIB_NAME          DS   CL8
NET_MEM_NAME          DS   CL8
NET_MEM_VERSION       DS   XL2
NET_DESC_LENGTH       EQU  *-NETBLOK
                      ORG  NET_DATA
NET_MEMBERS           DS   0C
                      ORG  NET_DATA
NET_SOURCE_RECORDS    DS   XL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBRECD DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB  AM=VTAM
ACBL     EQU     *-IFGACB
         LIBBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OPERAND          DSECT
OPERAND_ADDRESS  DS    XL4
OPERAND_LENGTH   DS    X
OPERAND_TYPE     DS    X
OPERAND_L        EQU   *-OPERAND
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBTDMEM
./ ADD NAME=LIBTJOB  0100-09250-09250-0919-00174-00174-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTJOB                                               *
*                                                                     *
*  Function:                                                          *
*   Submit as a batch job                                             *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTJOB  CSECT
LIBTJOB  AMODE 31
LIBTJOB  RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTJOB,R12                    DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     INIT0000
MODID    DC    CL8'LIBTJOB'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTJOB,R13                    DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND
         ITRACE ID=SUBMIT
         MVI   NET_FUNCTION,$NET_SUBMIT_JOB   SET FUNCTION
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION
         LA    R1,NET_JOB_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK        SUCCESSFUL?
         BNE   ERR0010                        NO
         MVC   SPF_MSG1(MSG01L),MSG01
         B     EXIT0000
ERR0010  DS    0H
         MVC   SPF_MSG1,NET_MSG_1
         MVC   SPF_MSG2,NET_MSG_2
         MVC   SPF_MSG3,NET_MSG_3
         MVC   SPF_MSG4,NET_MSG_4
         MVC   SPF_MSG5,NET_MSG_5
         LA    R15,4
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0010
         ITRACE ID=VTAMSEND,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0020
SEND0010 DS    0H
         ITRACE ID=IP_SEND,                                            +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         BALR  R14,R15                        LINK TO LIBTVTAM
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)                    RESTORE R14
         SR    R15,R15                        SET RC
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART  DC   Q(DXDTJOB)                     DISPLACEMENT TO WORK AREA

DISPLAY   DC   CL8'DISPLAY'

VERPANEL  DC   CL8'VERPANEL'
MSG01     DS   0C
          DC   CL11'LIBTJOB01I'
          DC   C'Submitted'
MSG01L    EQU  *-MSG01

          LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDTJOB       DSECT
              LIBSAVE DSECT=NO

DXD_DWORD     DS      D
DXD_SPF_PARMS DS      0A
DXD_SPF_1     DS      A
DXD_SPF_2     DS      A

              VTAMREQ DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK  DSECT=YES
NET_LIB_NAME      DS    CL8
NET_MEM_NAME      DS    CL8
NET_MEM_VERSION   DS    XL2
NET_JOB_LENGTH    EQU   *-NETBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBRECD  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         DCBD     DSORG=PS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBTJOB
./ ADD NAME=LIBTMAIN 0100-09250-09250-0919-00691-00691-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: LIBTMAIN                                                     *
*                                                                     *
*  Mainline of the TSO interface to the LIBRARIAN                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTMAIN CSECT
LIBTMAIN AMODE 31
LIBTMAIN RMODE ANY
         USING LIBTMAIN,R12                  DEFINE BASE
         STM   R14,R12,12(R13)               SAVE ENTRY REGISTERS
         LR    R12,R15                       COPY BASE
         B     INIT0000                      BRANCH AROUND EYECATCHER
MODID    DC    CL8'LIBTMAIN'                 MODULE NAME
         DC    CL8'&SYSDATE'                 DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                 TIME OF ASSEMBLY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         ESTAE 0
         LTR   R9,R1                         COPY PARM ADDRESS
         BZ    ERR0010                       NO PARM
         ICM   R9,15,0(R1)                   PARAMETER ADDRESS
* ------------------------------------------------------------------- *
*        ACQUIRE STORAGE FOR WORK AREAS                               *
* ------------------------------------------------------------------- *
INIT0010 DS    0H
         L     R3,DXDSIZE                    WORK AREA SIZE
         GETMAIN RU,                         GETMAIN WORK AREA         +
               LV=(R3),                                                +
               LOC=ANY
         LR    R4,R1                         COPY STORAGE ADDRESS
         LR    R10,R1                        COPY STORAGE ADDRESS
         LR    R2,R1                         COPY WORK AREA ADDRESS
         SR    R1,R1                         CLEAR REGISTER
         MVCL  R2,R0                         CLEAR WORK AREA
         A     R10,DXDSTART                  PLUS DISPLACEMENT
         USING DXDTMAIN,R10                  DEFINE WORK AREA BASE
         MVC   DXDID,MODID                   IDENTIFY WORK AREA OWNER
         LA    R2,DXDSAVE                    OUR SAVE AREA ADDRESS
         ST    R13,4(R2)                     CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                     OUR SAVE AREA TO CALLER'S
         LR    R13,R2                        SET SAVE AREA ADDRESS
* ------------------------------------------------------------------- *
*        Load common data module  (LIBTCOMM)                          *
* ------------------------------------------------------------------- *
         LOAD  EP=LIBTCOMM                   LOAD COMMON DATA MODULE
         LR    R11,R0                        COPY TO PERMANENT BASE
         USING LIBTCOMM,R11                  DEFINE COMMON AREA BASE
         ST    R12,ATMAIN                    SET MAINLINE'S ADDRESS
         ST    R4,COMMDXDA                   SET DYNAMIC WORK AREA ADDR
* ------------------------------------------------------------------- *
*        GETMAIN I/O area for network communication                   *
* ------------------------------------------------------------------- *
         GETMAIN RU,                         GETMAIN I/O AREA          +
               LV=COMMIOSZ,                                            +
               LOC=ANY
         ST    R1,COMM_NETWORK_IO_AREA       SAVE I/O AREA ADDRESS
* ------------------------------------------------------------------- *
*        Determine if external trace DD is present                    *
* ------------------------------------------------------------------- *
         USING PSA,R0                        DEFINE BASE
         L     R1,PSATNEW                    OUR TCB ADDRESS FROM PSA
         USING TCB,R1                        DEFINE TCB BASE
         L     R2,TCBTIO                     TIOT ADDRESS FROM OUR TCB
         USING TIOT1,R2                      DEFINE TIOT BASE
         LA    R3,TIOENTRY                   FIRST TIOT ENTRY
         USING TIOENTRY,R3                   DEFINE TIOT ENTRY BASE
INIT0020 DS    0H
         SR    R4,R4                         CLEAR FOR LENGTHS
         ICM   R4,1,TIOELNGH                 LENGTH OF THIS ENTRY
         BZ    INIT0100                      END OF TABLE
         ITRACE ID=DD,                                                 +
               DATA1=TIOEDDNM
         CLC   TIOEDDNM,LIBXTR               LIBXTR DD?
         BE    INIT0040                      YES
         CLC   TIOEDDNM,LIBSNAP              LIBSNAP DD?
         BE    INIT0050                      YES
         CLC   TIOEDDNM,DEBUG1               DEBUG1  DD?
         BE    INIT0060                      YES
         CLC   TIOEDDNM,DEBUG2               DEBUG2  DD?
         BE    INIT0070                      YES
         CLC   TIOEDDNM,DEBUG3               DEBUG3  DD?
         BE    INIT0070                      YES
         CLC   TIOEDDNM,DEBUG4               DEBUG4  DD?
         BE    INIT0090                      YES
INIT0030 DS    0H
         AR    R3,R4                         NEXT ENTRY
         B     INIT0020                      LOOP
INIT0040 DS    0H
         OI    XTRFLAG,$XTRON                EXTERNAL TRACE IS ON
         MVC   DXD_OCPL(OPENL),OPENI         COPY OPEN PARAMETER LIST
         OPEN  (XTRACE,OUTPUT),                                        +
               MF=(E,DXD_OCPL),                                        +
               MODE=31
         OI    XTRFLAG,$XTROPEN              EXTERNAL TRACE DCB IS OPEN
         LA    R1,TRENTRYL+4
         STH   R1,XTRLEN                     SET LENGTH
         XC    XTRBB,XTRBB                   CLEAR THE 'BB'
         B     INIT0030                      KEEP SEARCHING
INIT0050 DS    0H
         ITRACE ID=SNAPDD
         OI    COMM_DD,$DD_SNAP              SNAP DD IS PRESENT
         B     INIT0030                      KEEP SEARCHING
INIT0060 DS    0H
         ITRACE ID=DEBUG1
         OI    COMM_DD,$DD_DEBUG1            DEBUG 1 DD IS PRESENT
         B     INIT0030                      KEEP SEARCHING
INIT0070 DS    0H
         ITRACE ID=DEBUG2
         OI    COMM_DD,$DD_DEBUG2            DEBUG 2 DD IS PRESENT
         B     INIT0030                      KEEP SEARCHING
INIT0080 DS    0H
         ITRACE ID=DEBUG3
         OI    COMM_DD,$DD_DEBUG3            DEBUG 3 DD IS PRESENT
         B     INIT0030                      KEEP SEARCHING
INIT0090 DS    0H
         ITRACE ID=DEBUG4
         OI    COMM_DD,$DD_DEBUG4            DEBUG 4 DD IS PRESENT
         B     INIT0030                      KEEP SEARCHING
INIT0100 DS    0H
         LOAD  EP=LIBOPT                     LOAD THE OPTIONS
         LR    R1,R0                         COPY ENTRY POINT
         USING OPTDSECT,R1                   DEFINE BASE
         LH    R0,OPTTRACE                   NUMBER OF TRACE ENTRIES
         MH    R0,=Y(TRENTRYL)               TIMES SIZE PER ENTRY
         ST    R0,TRSIZE                     SAVE TRACE TABLE SIZE
         DELETE EP=LIBOPT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   ATDISP,VTDISP                 SPF DISPLAY MANAGER
         MVC   ATDLIB,VTDLIB                 LIBRARY LIST DISPLAY
         MVC   ATDMEM,VTDMEM                 MEMBER LIST DISPLAY
         MVC   ATPARM,VTPARM                 START UP PARM PARSER
         MVC   ATPRSE,VTPRSE                 PARM PARSER
         MVC   ATSNAP,VTSNAP                 SNAP DUMP
         MVC   ATSTAT,VTSTAT                 STC STATUS DISPLAY
         MVC   ATVMGR,VTVMGR                 SPF VARIABLE MANAGER
         MVC   ATVTAM,VTVTAM                 VTAM FUNCTIONS
         MVC   ATTCP,VTTCP                   TCP/IP FUNCTIONS
         LOAD  EP=LIBUX01                    LOAD USER EXIT 1
         ST    R0,AUX01                      SAVE THE ENTRY POINT
* ------------------------------------------------------------------- *
*        ACQUIRE STORAGE FOR TRACE TABLE                              *
* ------------------------------------------------------------------- *
         L     R3,TRSIZE                     TRACE TABLE SIZE
         GETMAIN RU,                         GETMAIN TRACE TABLE       +
               LV=(R3),                                                +
               LOC=BELOW                     .. MAY BE ABOVE OR BELOW
         ST    R1,TRADDR                     SAVE TRACE TABLE ADDRESS
         SR    R0,R0                         ASSUME ON BOUNDARY
         TM    TRADDR+3,X'07'                ALREADY ON BOUNDARY?
         BNO   INIT0110                      YES
         SRL   R1,5                          SHIFT OUT LOW BITS ..
         SLL   R1,5                          .. TO ROUND TO 32-BYTE
         LA    R1,32(R1)                     PLUS 32
         LA    R0,TRENTRYL                   1 LESS  AVAILABLE
INIT0110 DS    0H
         ST    R1,TRFIRST                    FIRST TRACE ENTRY
         ST    R1,TRCURR                     CURRENT TRACE ENTRY
         A     R1,TRSIZE                     LAST ENTRY IN TABLE
         SH    R1,=Y(TRENTRYL)               MINUS 1 ENTRY
         SR    R1,R0                         MINUS 1 MORE IF NECESSARY
         ST    R1,TRLAST                     LAST TRACE ENTRY ADDRESS
* ------------------------------------------------------------------- *
*        Parse out library STC APPLID, host name, port number         *
*        and/or library name                                          *
* ------------------------------------------------------------------- *
         LR    R1,R9                         COPY PARM ADDRESS
         L     R15,ATPARM                    PARM PARSER ENTRY POINT
         BALR  R14,R15                       CALL PARM PARSER
         TM    COMM_FLAGS,$ABORT             ABORT FLAG SET?
         BO    EXIT0030                      YES
* ------------------------------------------------------------------- *
*        LOAD SPF INTERFACE MODULE                                    *
* ------------------------------------------------------------------- *
         ITRACE ID=LOADSPF
         LOAD  EP=ISPLINK                    LOAD SPF INTERFACE MODULE
         ST    R0,AISPLINK                   SET ADDRESS IN COMMON AREA
* ------------------------------------------------------------------- *
*        CALL SPF VARIABLE DEFINITION                                 *
* ------------------------------------------------------------------- *
         ITRACE ID=DEFVARS                   DEFINING SPF VARIABLES
         LOAD  EP=LIBSPFD
         ST    R0,VARAREA                    SET ADDRESS IN PARMS
         ST    R0,ALIBSPFD                   SET ADDRESS IN COMMON AREA
         LOAD  EP=LIBSPFV
         ST    R0,VARTBLE                    SET ADDRESS IN PARM LIST
         MVI   VARCMD,$VARDEF                SET COMMAND
         LA    R1,VARREQ                     PARAMETER BLOCK ADDRESS
         L     R15,ATVMGR                    SPF VARIABLE MANAGER
         BALR  R14,R15                       DEFINE SPF VARIABLES
* ------------------------------------------------------------------- *
*        Initialize VTAM or TCP/IP environment                        *
* ------------------------------------------------------------------- *
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT USING TCP/IP?
         BNZ   INIT0120                      YES
         ITRACE ID=OPENVTAM                  OPENING VTAM ENVIRONMENT
         L     R15,ATVTAM                    VTAM FUNCTIONS ENTRY POINT
         B     INIT0130
INIT0120 DS    0H
         ITRACE ID=OPEN_IP                   INITIALIZING TCP/IP
         L     R15,ATTCP                     TCP/IP FUNCTIONS
INIT0130 DS    0H
         MVI   VTAM_COMMAND,$VTAM_OPEN       SET COMMAND (OPEN)
         LA    R1,VTAMREQ                    REQUEST BLOCK ADDRESS
         BALR  R14,R15                       INITIALIZE VTAM OR TCP/IP
         TM    COMM_FLAGS,$ABORT             ABORT SET?
         BO    EXIT0000                      YES
* ------------------------------------------------------------------- *
*        Identify the user                                            *
* ------------------------------------------------------------------- *
         LOAD  EP=LIBUX03
         LR    R15,R0
         LA    R1,UX03_PARMS
         ITRACE ID=CALLUX03,                                           +
               RDATA1=R1,                                              +
               RDATA2=R15
         BALR  R14,R15
         LR    R2,R15
         DELETE EP=LIBUX03
         LTR   R2,R2
         BNZ   ERR0080
         L     R6,ALIBSPFD
         USING LIBSPFD,R6
         MVC   SPF_SMF,UX03_SMF
         MVC   SPF_USER,UX03_USER
         MVC   SPF_USER_NAME,UX03_USER_NAME
         L     R7,COMM_NETWORK_IO_AREA        I/O ARA
         USING NETBLOK,R7                     DEFINE BASE
         ITRACE ID=USER,                                               +
               DATA1=SPF_USER,                                         +
               DATA2=SPF_SMF
         MVI   NET_FUNCTION,$NET_IDENTIFY_USER
         MVC   NET_SMF,SPF_SMF
         MVC   NET_USER,SPF_USER
         MVC   NET_JOB,TSO
         MVC   NET_USER_NAME,SPF_USER_NAME
         LA    R0,NET_IDENTIFY_LENGTH
         STCM  R0,R3,NET_LENGTH
         ITRACE ID=SENDID
         BAL   R8,SEND0000                    SEND
         ITRACE ID=RECVID
         BAL   R8,RECV0000                    RECEIVE
         CLI   NET_RETURN_CODE,$NET_OK
         BNE   ERR0050                        NO
         MVC   SPF_SYSTEM_NAME,NET_SYSTEM_NAME
* ------------------------------------------------------------------- *
*        Get list of libraries                                        *
* ------------------------------------------------------------------- *
         ITRACE ID=GETLIBS
         MVI   NET_FUNCTION,$NET_GET_LIBS
         LA    R1,NETBLOKL                    ONLY HEADER
         STH   R1,NET_LENGTH                  SET LENGTH
         BAL   R8,SEND0000                    ISSUE SEND
         LA    R5,COMM_LIBRARY_CHAIN          CHAIN POINT
INIT0150 DS    0H
         ITRACE ID=RECVLIBS
         BAL   R8,RECV0000                    ISSUE RECEIVE
         TM    XTRFLAG,$XTRON
         BNO   INIT0160
         PUT   XTRACE,NETBLOK
INIT0160 DS    0H
         LH    R1,NET_LENGTH                  LENGTH OF DATA
         SH    R1,=Y(NET_LIBRARIES-NETBLOK)
         ITRACE ID=LIBLEN,                                             +
               RDATA1=R1
         SR    R0,R0                          CLEAR REGISTER
         D     R0,=A(NET_LIBRARY_LENGTH)
         LTR   R1,R1                          ANY LIBS?
         BZ    INIT0170                       NONE IN THIS BLOCK
         A     R1,COMM_NBR_OF_LIBRARIES       PLUS TOTAL SO FAR
         ST    R1,COMM_NBR_OF_LIBRARIES       SAVE TOTAL
         ITRACE ID=LIBS,                                               +
               RDATA1=R1
         LH    R3,NET_LENGTH                  LENGTH OF DATA (TOTAL)
         SH    R3,=Y(NET_LIBRARIES-NETBLOK)   MINUS HEADER LENGTH
         AH    R3,=Y(LIB_CHAIN_DATA-LIB_CHAIN)
         ITRACE ID=LIBL,                                               +
               RDATA1=(R3)
         GETMAIN RU,                                                   +
               LV=(R3),                                                +
               LOC=ANY
         ITRACE ID=LIBS,                                               +
               RDATA1=(R1)
         USING LIB_CHAIN,R1                   DEFINE BASE
         MVC   LIB_CHAIN_EYE,LIB_CHAIN_ID
         ST    R1,0(R5)                       ADD NEW BLOCK TO CHAIN
         LA    R5,LIB_CHAIN_NEXT              NEW CHAIN POINT
         XC    LIB_CHAIN_NEXT,LIB_CHAIN_NEXT
         ST    R3,LIB_CHAIN_LENGTH            LENGTH OF THIS BLOCK
         SH    R3,=Y(LIB_CHAIN_DATA-LIB_CHAIN)
         LA    R0,LIB_CHAIN_DATA              LIBRARY DATA IN BLOCK
         LR    R1,R3                          COPY LENGTH
         LA    R14,NET_LIBRARIES              DATA IN VTAM I/O AREA
         LR    R15,R3                         COPY LENGTH
         MVCL  R0,R14                         COPY DATA
         CLI   NET_RETURN_CODE,$NET_EOF
         BNE   INIT0150                       RECEIVE NEXT BLOCK
INIT0170 DS    0H
         ITRACE ID=RECVDEOF                   RECEIVED EOF
         CLC   COMM_LIBRARY_NAME,COMM_BLANKS  LIBRARY SPECIFIED?
         BNE   LIBS0010                       YES, VERIFY NAME
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LIBS0000 DS    0H
         ITRACE ID=CALLDLIB                   CALLING LIBTDLIB
         L     R15,ATDLIB                     LIBRARY LIST DISPLAY
         BALR  R14,R15                        DISPLAY LIST OF LIBRARIES
         LTR   R15,R15                        RETURN CODE = ZERO ?
         BNZ   EXIT0000                       NO.. EXIT
         DROP  R1
LIBS0010 DS    0H
         ITRACE ID=VERLIB,                                             +
               DATA1=COMM_LIBRARY_NAME
         L     R1,COMM_LIBRARY_CHAIN          FIRST CHAIN BLOCK
         USING LIB_CHAIN,R1                   DEFINE BASE
         LA    R1,LIB_CHAIN_DATA
         USING NET_LIBRARY_NAME,R1            DEFINE BASE
         L     R2,COMM_NBR_OF_LIBRARIES       NUMBER OF LIBRARIES
LIBS0020 DS    0H
         ITRACE ID=LIBX,                                               +
               DATA1=NET_LIBRARY_NAME,                                 +
               DATA2=COMM_LIBRARY_NAME
         CLC   NET_LIBRARY_NAME,COMM_LIBRARY_NAME   FOUND THE LIBRARY?
         BE    LIBS0030                       YES
         LA    R1,NET_LIBRARY_LENGTH(R1)      NEXT LIBRARY
         BCT   R2,LIBS0020
         B     ERR0060                        LIBRARY NOT VALID
LIBS0030 DS    0H
         MVC   SPF_LIB_NAME,NET_LIBRARY_NAME
         MVC   SPF_LIB_DESC,NET_LIBRARY_DESC
         DROP  R1
         ITRACE ID=ENQLIB                     ADD TO USERS OF LIB
         MVI   NET_FUNCTION,$NET_ENQUE_LIB
         MVC   NET_LIBRARY_NAME,COMM_LIBRARY_NAME
         LA    R1,NETBLOKL+L'NET_LIBRARY_NAME
         STH   R1,NET_LENGTH                  SET LENGTH
         BAL   R8,SEND0000                    SEND THE REQUEST
         BAL   R8,RECV0000                    RECEIVE THE REPLY
         CLI   NET_RETURN_CODE,$NET_OK
         BNE   ERR0070                        ENQUEUE FAILED
         ITRACE ID=ENQUEUED                   LIBRARY IS ENQUEUED
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MEM0000  DS    0H
         ITRACE ID=CALLDMEM,                  CALLING MEMBER LIST DISP +
               DATA1=COMM_LIBRARY_NAME
         L     R15,ATDMEM                     MEMBER LIST DISPLAY
         BALR  R14,R15                        DISPLAY MEMBER LIST
         STH   R15,DXD_RC
         LTR   R15,R15                        RC = 0?
         BZ    MEM0000                        YES, REDISPLAY MEMBERS
         ITRACE ID=DEQLIB                     REMOVE FROM USERS
         MVI   NET_FUNCTION,$NET_DEQ_LIB
         MVC   NET_LIBRARY_NAME,COMM_LIBRARY_NAME
         LA    R1,NETBLOKL+L'NET_LIBRARY_NAME
         STH   R1,NET_LENGTH                  SET LENGTH
         BAL   R8,SEND0000                    SEND THE REQUEST
         BAL   R8,RECV0000                    RECEIVE THE REPLY
         CLI   NET_RETURN_CODE,$NET_OK
         BNE   ERR0090                        DEQE FAILED
         ITRACE ID=DEQD                       LIBRARY IS DEQ'D
         CLC   DXD_RC,H8                      RC = 8
         BE    LIBS0000                       DISPLAY LIST OF LIBRARIES
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT USING TCP/IP?
         BNZ   SEND0010                       YES
         ITRACE ID=VTAMSEND,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0020
SEND0010 DS    0H
         ITRACE ID=IP_WRITE,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT USING TCP/IP?
         BNZ   RECV0010                       YES
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
TPUT0000 DS    0H
         ITRACE ID=TPUT
         GETMAIN RU,LV=(3),LOC=BELOW
         LR    R4,R1                          COPY STORAGE ADDRESS
         LR    R1,R3
         BCTR  R1,0                           MINUS 1
         EX    R1,TPUTMVC
         TPUT  (R4),(R3)
         FREEMAIN RU,                                                  +
               A=(R4),                                                 +
               LV=(R3)
         BR    R8
TPUTMVC  MVC   0(0,R4),0(R2)
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         LM    R2,R3,MSG01PRM
         BAL   R8,TPUT0000                    ISSUE MESSAGE
         B     EXIT0000
ERR0020  DS    0H
         LM    R2,R3,MSG02PRM
         BAL   R8,TPUT0000                    ISSUE MESSAGE
         B     EXIT0000
ERR0030  DS    0H
         LM    R2,R3,MSG03PRM
         BAL   R8,TPUT0000                    ISSUE MESSAGE
         B     EXIT0000
ERR0040  DS    0H
         LM    R2,R3,MSG04PRM
         BAL   R8,TPUT0000                    ISSUE MESSAGE
         B     EXIT0000
ERR0050  DS    0H
         LM    R2,R3,MSG05PRM
         BAL   R8,TPUT0000                    ISSUE MESSAGE
         B     EXIT0000
ERR0060  DS    0H
         LM    R2,R3,MSG06PRM
         BAL   R8,TPUT0000                    ISSUE MESSAGE
         B     EXIT0000
ERR0070  DS    0H
         LM    R2,R3,MSG07PRM
         BAL   R8,TPUT0000                    ISSUE MESSAGE
         B     EXIT0000
ERR0080  DS    0H
         LM    R2,R3,MSG08PRM
         BAL   R8,TPUT0000                    ISSUE MESSAGE
         B     EXIT0000
ERR0090  DS    0H
         LM    R2,R3,MSG09PRM
         BAL   R8,TPUT0000                    ISSUE MESSAGE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         TM    COMM_FLAGS,$ABEND
         BO    ABEND000
         MVI   VTAM_COMMAND,$VTAM_CLOSE       SET COMMAND (CLOSE)
         LA    R1,VTAMREQ                     PARM BLOCK ADDRESS
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT 'TALKING' WITH TCP/IP?
         BNZ   EXIT0010                       YES
         L     R15,ATVTAM                     VTAM MODULE ENTRY POINT
         B     EXIT0020
EXIT0010 DS    0H
         L     R15,ATTCP                      TCP/IP MODULE ENTRY POINT
EXIT0020 DS    0H
         BALR  R14,R15                        CLEAN UP VTAM OR TCP/IP
EXIT0030 DS    0H
         TM    COMM_FLAGS,$ABEND
         BO    ABEND000
         L     R1,COMM_NETWORK_IO_AREA        NETWORK I/O AREA
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=COMMIOSZ
         XC    COMM_NETWORK_IO_AREA,COMM_NETWORK_IO_AREA                SS
         OC    AISPLINK,AISPLINK              ISPLINK LOADED?
         BZ    EXIT0040                       NO
         MVI   VARCMD,$VARDEL                 SET COMMAND (DELETE)
         LA    R1,VARREQ
         L     R15,ATVMGR                     SPF VARIABLE MANAGER
         BALR  R14,R15                        DELETE THE SPF VARIABLES
         DELETE EP=ISPLINK
         DELETE EP=LIBSPFV
         DELETE EP=LIBSPFD
         DELETE EP=LIBUX01                    DELETE USER EXIT 1
         XC    AISPLINK,AISPLINK              CLEAR ISPLINK'S ADDRESS
         XC    AUX01,AUX01                    CLEAR USER EXIT ADDRESS
EXIT0040 DS    0H
         TM    XTRFLAG,$XTROPEN               EXTERNAL TRACE DCB OPEN?
         BNO   EXIT0050                       NO
         MVC   DXD_OCPL(CLOSEL),CLOSEI
         CLOSE XTRACE,                                                 +
               MF=(E,DXD_OCPL),                                        +
               MODE=31
         NI    XTRFLAG,255-$XTROPEN
EXIT0050 DS    0H
         ICM   R9,15,COMM_LIBRARY_CHAIN       FIRST LIB CHAIN BLOCK
         USING LIB_CHAIN,R9
         BZ    EXIT0070
EXIT0060 DS    0H
         L     R0,LIB_CHAIN_LENGTH            LENGTH OF THIS BLOCK
         LR    R1,R9                          COPY ADDRESS
         ICM   R9,15,LIB_CHAIN_NEXT
         FREEMAIN RU,                         FREE THIS BLOCK          +
               A=(1),                                                  +
               LV=(0)
         LTR   R9,R9
         BNZ   EXIT0060
EXIT0070 DS    0H
         XC    COMM_LIBRARY_CHAIN,COMM_LIBRARY_CHAIN
         L     R0,TRSIZE                      TRACE TABLE SIZE
         ICM   R1,15,TRADDR                   TRACE TABLE ADDRESS
         BZ    EXIT0080
         FREEMAIN RU,                         FREEMAIN TRACE TABLE     +
               A=(1),                                                  +
               LV=(0)
EXIT0080 DS    0H
         L     R2,COMMDXDA                    SAVE WORK AREA STORAGE
         SR    R3,R3                          CLEAR REGISTER
         IC    R3,COMM_RC                     LOAD RETURN CODE
         DELETE EP=LIBTCOMM                   DELETE COMMON MODULE
         L     R0,DXDSIZE                     WORK AREA STORAGE SIZE
         L     R13,4(R13)                     RESTORE CALLER'S R13
         FREEMAIN RU,                         FREEMAIN WORK AREA       +
               A=(R2),                                                 +
               LV=(0)
         L     R14,12(R13)                    RESTORE R14
         LR    R15,R3                         SET RETURN CODE
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ABEND000 DS    0H
         ITRACE ID=ABEND
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTMAIN)          DISPLACEMENT TO WORK AREA
DXDSIZE  CXD                        WORK AREA TOTAL SIZE
VTDISP   DC    V(LIBTDISP)          DISPLAY SPF PANELS WITH DYN AREAS
VTDLIB   DC    V(LIBTDLIB)          DISPLAY LIST OF LIBRARIES
VTDMEM   DC    V(LIBTDMEM)          DISPLAY LIST OF MEMBERS
VTPARM   DC    V(LIBTPARM)          START UP PARM PARSER
VTPRSE   DC    V(LIBTPRSE)          PARM PARSER
VTSNAP   DC    V(LIBTSNAP)          SNAP DUMP
VTSTAT   DC    V(LIBTSTAT)          DISPLAY STC STATUS
VTVMGR   DC    V(LIBTVMGR)          SPF VARIABLE MANAGER
VTVTAM   DC    V(LIBTVTAM)          VTAM FUNCTIONS
VTTCP    DC    V(LIBTTCP)           TCP/IP FUNCTIONS
IOSZ     DC    A(COMMIOSZ)
MSG01PRM DC    A(MSG01),A(MSG01L)
MSG02PRM DC    A(MSG02),A(MSG02L)
MSG03PRM DC    A(MSG03),A(MSG03L)
MSG04PRM DC    A(MSG04),A(MSG04L)
MSG05PRM DC    A(MSG05),A(MSG05L)
MSG06PRM DC    A(MSG06),A(MSG06L)
MSG07PRM DC    A(MSG07),A(MSG07L)
MSG08PRM DC    A(MSG08),A(MSG08L)
MSG09PRM DC    A(MSG09),A(MSG09L)

OPENI    OPEN  (*,OUTPUT),MF=L,MODE=31
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MF=L,MODE=31
CLOSEL   EQU   *-CLOSEI

H4       DC    H'4'
H8       DC    H'8'

HEX0000  DC    8X'00'
HEXCHAR  DC    C'0123456789ABCDEF'
LIBXTR   DC    CL8'LIBXTR'
LIBSNAP  DC    CL8'LIBSNAP'
DEBUG1    DC   CL8'DEBUG1'
DEBUG2    DC   CL8'DEBUG2'
DEBUG3    DC   CL8'DEBUG3'
DEBUG4    DC   CL8'DEBUG4'
LIB_CHAIN_ID   DC  CL8'LIBCHAIN'

MSG01    DC    C'LIBTMAIN01E APPLID of library STC is required'
MSG01L   EQU   *-MSG01
MSG02    DC    C'LIBTMAIN02E STC APPL name is too long'
MSG02L   EQU   *-MSG02
MSG03    DC    C'LIBTMAIN03E LIBRARY name is too long'
MSG03L   EQU   *-MSG03
MSG04    DC    C'LIBTMAIN04E SMF is not active'
MSG04L   EQU   *-MSG04
MSG05    DC    C'LIBTMAIN05E Internal error.  Identify user failed.'
MSG05L   EQU   *-MSG05
MSG06    DC    C'LIBTMAIN06E Specified library is not valid.'
MSG06L   EQU   *-MSG06
MSG07    DC    C'LIBTMAIN07E Library enqueue failed.'
MSG07L   EQU   *-MSG07
MSG08    DC    C'LIBTMAIN08E Could not identify user (LIBUX03)'
MSG08L   EQU   *-MSG08
MSG09    DC    C'LIBTMAIN09E Library dequeue failed.'
MSG09L   EQU   *-MSG09

TSO      DC    CL8'TSO'

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDTMAIN         DSECT
                 LIBSAVE  DSECT=NO
                 VARREQ   DSECT=NO
                 VTAMREQ  DSECT=NO
                 UX03PARM DSECT=NO
DXD_OCPL         DS       0F,(OPENL)X      OPEN/CLOSE PARAMETER LIST
DXD_RC           DS       H
DXD_PARM_LENGTH  DS       H
DXD_PARM         DS       CL8

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY    OPTDSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    NETBLOK DSECT=YES
NET_SMF             DS      CL4
NET_USER            DS      CL8
NET_JOB             DS      CL8
NET_SYSTEM_NAME     DS      CL20
NET_USER_NAME       DS      CL20
NET_IDENTIFY_LENGTH EQU     *-NETBLOK
                    ORG     NET_DATA
NET_LIBRARIES       DS      0C
NET_LIBRARY_NAME    DS      CL8
NET_LIBRARY_DESC    DS      CL80
NET_LIBRARY_STATUS  DS      X
NET_LIBRARY_LENGTH  EQU     *-NET_LIBRARY_NAME
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LIB_CHAIN        DSECT
LIB_CHAIN_EYE    DS   CL8
LIB_CHAIN_NEXT   DS   A                NEXT BLOCK
LIB_CHAIN_LENGTH DS   A                LENGTH OF THIS BLOCK
LIB_CHAIN_DATA   DS   0C
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
         IKJTCB   LIST=NO
         IEFTIOT1
* ------------------------------------------------------------------- *
                  COPY  REGEQU
$MAX_SOURCE_SIZE  EQU  8000
         END   LIBTMAIN
./ ADD NAME=LIBTMDOC 0100-09250-09250-0919-00430-00430-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTMDOC                                              *
*                                                                     *
*  Function:                                                          *
*   Display/update the documentation for a member.                    *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTMDOC CSECT
LIBTMDOC AMODE 31
LIBTMDOC RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTMDOC,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     MDOC0000
MODID    DC    CL8'LIBTMDOC'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
MDOC0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTMDOC,R13                   DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    MDOC0010                       YES
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
MDOC0010 DS    0H
         L     R7,COMM_NETWORK_IO_AREA        I/O AREA ADDRESS
         USING NETBLOK,R7                     DEFINE BASE
         MVC   SPF_COMM1,COMM_BLANKS
         MVC   SPF_COMM2,COMM_BLANKS
         MVC   SPF_COMM3,COMM_BLANKS
         MVC   SPF_COMM4,COMM_BLANKS
         MVC   SPF_COMM5,COMM_BLANKS
         MVC   SPF_MSG1,COMM_BLANKS
         MVC   SPF_MSG2,COMM_BLANKS
         MVC   SPF_MSG3,COMM_BLANKS
         MVC   SPF_MSG4,COMM_BLANKS
         MVC   SPF_MSG5,COMM_BLANKS
         MVC   DXD_COMM1,COMM_BLANKS
         MVC   DXD_COMM2,COMM_BLANKS
         MVC   DXD_COMM3,COMM_BLANKS
         MVC   DXD_COMM4,COMM_BLANKS
         MVC   DXD_COMM5,COMM_BLANKS
         XC    DXD_RC,DXD_RC                  DEFAULT RC
* ------------------------------------------------------------------- *
*      Verify the user is authorized                                  *
* ------------------------------------------------------------------- *
         ITRACE ID=CHKAUTH,                                            +
               DATA1=COMM_LIBRARY_NAME,                                +
               DATA2=COMM_MEMBER_NAME
         MVI   NET_FUNCTION,$NET_CHECK_DESC_AUTH
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME  SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME   SET MEMBER NAME
         MVC   NET_MEM_VER,COMM_VERSION        SET VERSION
         LA    R1,NET_DESC_LENGTH
         STCM  R1,3,NET_LENGTH                 SET LENGTH
         XC    NET_FILL,NET_FILL               CLEAR THE FILLER AREA
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK         USER AUTHORIZED?
         BNE   ERR0010                         NO
*---------------------------------------------------------------------*
*                                                                     *
*        USUBGMD will have returned the base index record.            *
*        Format the over-all status information.                      *
*                                                                     *
*        I started hating myself for being long-winded on field names *
*                                                                     *
*---------------------------------------------------------------------*
MDOC0100  DS   0H
    MVC   SPF_MISC1(MSG01L),MSG01
    MVC   SPF_MISC1+(MSG01_OWNER-MSG01)(L'MSG01_OWNER),LIB_INDEX_OWNER
    MVC   SPF_MISC2(MSG02L),MSG02
    TM    LIB_INDEX_STATUS,$LIB_STATUS_IN
    BO    MDOC0110
    MVC   SPF_MISC2+(MSG02_STATUS-MSG02)(L'MSG02_STATUS),=C'OUT'
    B     MDOC0120
MDOC0110  DS   0H
    MVC   SPF_MISC2+(MSG02_STATUS-MSG02)(L'MSG02_STATUS),=C'IN '
MDOC0120  DS   0H
    MVC   SPF_MISC3(MSG03L),MSG03
    ICM   R1,15,LIB_INDEX_RECORDS
    CVD   R1,DXD_DWORD
    ED    SPF_MISC3+(MSG03_RECORDS-MSG03)(L'MSG03_RECORDS),DXD_DWORD+4
    MVC   SPF_MISC4(MSG04L),MSG04
    ICM   R1,15,LIB_INDEX_CHECK_OUTS
    CVD   R1,DXD_DWORD
    ED    SPF_MISC4+(MSG04_CHECK_OUTS-MSG04)(L'MSG04_CHECK_OUTS),DXD_DW+
               ORD+4
    MVC   SPF_MISC5(MSG05L),MSG05
    AP    LIB_INDEX_CREATE_DATE,P1900000
    ED    SPF_MISC5+(MSG05_DATE-MSG05)(L'MSG05_DATE),LIB_INDEX_CREATE_D+
               ATE
    UNPK  DXD_UNPACK(9),LIB_INDEX_CREATE_TIME(5)
    MVZ   DXD_UNPACK,HEXZERO
    TR    DXD_UNPACK,HEXCHAR
    MVC   SPF_MISC5+(MSG05_TIME-MSG05)+0(2),DXD_UNPACK+0
    MVC   SPF_MISC5+(MSG05_TIME-MSG05)+3(2),DXD_UNPACK+2
    MVC   SPF_MISC5+(MSG05_TIME-MSG05)+6(2),DXD_UNPACK+4
    MVI   SPF_MISC5+(MSG05_TIME-MSG05)+2,C':'
    MVI   SPF_MISC5+(MSG05_TIME-MSG05)+5,C':'
    MVC   SPF_MISC6(MSG06L),MSG06
    AP    LIB_INDEX_CHECK_IN_DATE,P1900000
    ED    SPF_MISC6+(MSG06_DATE-MSG06)(L'MSG06_DATE),LIB_INDEX_CHECK_IN+
               _DATE
    UNPK  DXD_UNPACK(9),LIB_INDEX_CHECK_IN_TIME(5)
    MVZ   DXD_UNPACK,HEXZERO
    TR    DXD_UNPACK,HEXCHAR
    MVC   SPF_MISC6+(MSG06_TIME-MSG06)+0(2),DXD_UNPACK+0
    MVC   SPF_MISC6+(MSG06_TIME-MSG06)+3(2),DXD_UNPACK+2
    MVC   SPF_MISC6+(MSG06_TIME-MSG06)+6(2),DXD_UNPACK+4
    MVI   SPF_MISC6+(MSG06_TIME-MSG06)+2,C':'
    MVI   SPF_MISC6+(MSG06_TIME-MSG06)+5,C':'
    MVC   SPF_MISC6+(MSG06_USER-MSG06)(L'MSG06_USER),LIB_INDEX_CHECK_IN+
               _USER
    MVC   SPF_MISC7(MSG07L),MSG07
    AP    LIB_INDEX_CHECK_OUT_DATE,P1900000
    ED    SPF_MISC7+(MSG07_DATE-MSG07)(L'MSG07_DATE),LIB_INDEX_CHECK_OU+
               T_DATE
    UNPK  DXD_UNPACK(9),LIB_INDEX_CHECK_OUT_TIME(5)
    MVZ   DXD_UNPACK,HEXZERO
    TR    DXD_UNPACK,HEXCHAR
    MVC   SPF_MISC7+(MSG07_TIME-MSG07)+0(2),DXD_UNPACK+0
    MVC   SPF_MISC7+(MSG07_TIME-MSG07)+3(2),DXD_UNPACK+2
    MVC   SPF_MISC7+(MSG07_TIME-MSG07)+6(2),DXD_UNPACK+4
    MVI   SPF_MISC7+(MSG07_TIME-MSG07)+2,C':'
    MVI   SPF_MISC7+(MSG07_TIME-MSG07)+5,C':'
    MVC   SPF_MISC7+(MSG07_USER-MSG07)(L'MSG07_USER),LIB_INDEX_CHECK_OU+
               T_USER
*---------------------------------------------------------------------*
*        Get the existing documentation                               *
*---------------------------------------------------------------------*
MDOC0200 DS    0H
         ITRACE ID=GETDOC
         MVI   NET_FUNCTION,$NET_GET_DESC
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME   SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME    SET MEMBER NAME
         MVC   NET_MEM_VER,COMM_VERSION         SET MEMBER VERSION
         LA    R1,NET_MEM_DOC-NETBLOK
         STCM  R1,3,NET_LENGTH                  SET LENGTH
         BAL   R8,SEND0000
         CLI   NET_RETURN_CODE,$NET_OK
         BNE   ERR0020
         BAL   R8,RECV0000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         LA    R2,NET_MEM_DOC
         LH    R3,NET_LENGTH
         SH    R3,=Y(NET_MEM_DOC-NETBLOK)
         BZ    MDOC0400
         LA    R4,SPF_COMM1                     FIRST LINE OF SPF DATA
         LA    R5,DXD_COMM1                     SAVE COMMENT/DOC
MDOC0300 DS    0H
         MVC   0(L'SPF_COMM1,R4),0(R2)
         MVC   0(L'SPF_COMM1,R5),0(R2)
         LA    R4,L'SPF_COMM1(R4)
         LA    R5,L'DXD_COMM1(R5)
         LA    R2,L'LIB_DATA(R2)
         SH    R3,=Y(L'LIB_DATA)
         BNZ   MDOC0300
*---------------------------------------------------------------------*
*        Display the documentation panel                              *
*---------------------------------------------------------------------*
MDOC0400 DS    0H
         ITRACE ID=DISPLAY
         MVC   SPF_PANEL,DOCPANEL    SET PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS
         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS
         ST    R1,DXD_SPF_2                   SET ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDRESS
         BALR  R14,R15                        LINK TO SPF
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15
         LTR   R15,R15                        ZERO?
         BNZ   EXIT0000                       NO
         LA    R1,DXD_COMM1                   FIRST SAVED COMMENT/DOC
         LA    R2,SPF_COMM1                   FIRST SPF COMMENT/DOC
         LA    R3,5                           NUMBER OF COMMENTS/DOCS
MDOC0410 DS    0H
         TR    0(L'SPF_COMM1,R2),VALID_CHARACTERS
         CLC   0(L'DXD_COMM1,R1),0(R2)
         BNE   MDOC0420
         LA    R1,L'DXD_COMM1(R1)             NEXT
         LA    R2,L'SPF_COMM1(R2)             NEXT
         BCT   R3,MDOC0410
         B     MDOC0400                       NOTHING UPDATED
MDOC0420 DS    0H
         LA    R1,NET_MEM_DOC                 FIRST IN I/O AREA
         LA    R2,DXD_COMM1                   FIRST SAVED COMMENT/DOC
         LA    R3,SPF_COMM1                   FIRST SPF COMMENT/DOC
         LA    R4,5                           NUMBER OF COMMENTS/DOCS
MDOC0430 DS    0H
         MVC   0(L'LIB_DATA,R1),0(R3)
         MVC   0(L'DXD_COMM1,R2),0(R3)
         LA    R1,L'LIB_DATA(R1)
         LA    R2,L'DXD_COMM1(R2)
         LA    R3,L'SPF_COMM1(R3)
         BCT   R4,MDOC0430
         LA    R1,(NET_MEM_DOC-NETBLOK)+(5*L'LIB_DATA)
         LA    R2,NET_MEM_DOC+(4*L'LIB_DATA)
         LA    R3,5
MDOC0440 DS    0H
         CLC   0(L'LIB_DATA,R2),COMM_BLANKS
         BNE   MDOC0450
         SH    R1,=Y(L'LIB_DATA)
         SH    R2,=Y(L'LIB_DATA)
         BCT   R3,MDOC0440
MDOC0450 DS    0H
         STCM  R1,3,NET_LENGTH
         MVI   NET_FUNCTION,$NET_SEND_DESC
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         XC    DXD_RC,DXD_RC                  SET RC TO ZERO
         B     MDOC0400
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0010
         ITRACE ID=VTAMSEND,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0020
SEND0010 DS    0H
         ITRACE ID=IP_SEND,                                            +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         BALR  R14,R15                        LINK TO LIBTVTAM
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOTAUTH
         MVC   SPF_MSG1,NET_MSG_1
         MVC   SPF_MSG2,NET_MSG_2
         MVC   SPF_MSG3,NET_MSG_3
         MVC   SPF_MSG4,NET_MSG_4
         MVC   SPF_MSG5,NET_MSG_5
         B     EXIT0000
ERR0020  DS    0H
         ITRACE ID=NOTOK
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         LH    R15,DXD_RC                      SET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                      RESTORE SAVE AREA ADDR
         L     R14,12(R13)                     RESTORE R14
         LM    R0,R12,20(R13)                  RESTORE REGISTERS
         BR    R14                             RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART         DC    Q(DXDTMDOC)
DISPLAY          DC    CL8'DISPLAY'
DOCPANEL         DC    CL8'DOCPANEL'
H2               DC    H'2'
H4               DC    H'4'

P1900000         DC    P'1900000'
HEXZERO          DC    8X'00'
HEXCHAR          DC    C'0123456789ABCDEF'

MSG01            DS    0C
                 DC    C'Owner:            '
                 DC    CL4' '
MSG01_OWNER      DC    CL8' '
MSG01L           EQU   *-MSG01

MSG02            DS    0C
                 DC    C'Status            '
                 DC    CL7' '
MSG02_STATUS     DC    CL3' '
MSG02L           EQU   *-MSG02

MSG03            DS    0C
                 DC    C'Size (in records) '
MSG03_RECORDS    DC    X'40206B2020206B202120'
MSG03L           EQU   *-MSG03

MSG04            DS    0C
                 DC    C'Nbr of CHECK-OUTS '
MSG04_CHECK_OUTS DC    X'40206B2020206B202120'
MSG04L           EQU   *-MSG04

MSG05            DS    0C
                 DC    C'Created on:       '
MSG05_DATE       DC    X'40202020204B202020'
                 DC    C' at '
MSG05_TIME       DC    CL8' '
MSG05L           EQU   *-MSG05

MSG06            DS    0C
                 DC    C'Last CHECK-IN  on:'
MSG06_DATE       DC    X'40202020204B202020'
                 DC    C' at '
MSG06_TIME       DC    CL8' '
                 DC    C' by '
MSG06_USER       DC    CL8' '
MSG06L           EQU   *-MSG06

MSG07            DS    0C
                 DC    C'Last CHECK-OUT on:'
MSG07_DATE       DC    X'40202020204B202020'
                 DC    C' at '
MSG07_TIME       DC    CL8' '
                 DC    C' by '
MSG07_USER       DC    CL8' '
MSG07L           EQU   *-MSG07

VALID_CHARACTERS DS    0C    0 1 2 3 4 5 6 7 8 9 A B C D E F
                 DC    XL16'40404040404040404040404040404040' 00-0F
                 DC    XL16'40404040404040404040404040404040' 10-1F
                 DC    XL16'40404040404040404040404040404040' 20-2F
                 DC    XL16'40404040404040404040404040404040' 30-3F
                 DC    XL16'404040404040404040404A4B4C4D4E4F' 40-4F
                 DC    XL16'504040404040404040405A5B5C5D5E5F' 50-5F
                 DC    XL16'60614040404040404040406B6C6D6E6F' 60-6F
                 DC    XL16'404040404040404040407A7B7C7D7E7F' 70-7F
                 DC    XL16'40404040404040404040408B8C8D8E8F' 80-8F
                 DC    XL16'40404040404040404040409B9C9D9E9F' 90-9F
                 DC    XL16'4040404040404040404040ABACADAEAF' A0-AF
                 DC    XL16'4040404040404040404040BBBCBDBEBF' B0-BF
                 DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040' C0-CF
                 DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040' D0-DF
                 DC    XL16'4040E2E3E4E5E6E7E8E9404040404040' E0-EF
                 DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040' F0-FF

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDTMDOC      DSECT
              LIBSAVE DSECT=NO

DXD_DWORD     DS  D

DXD_SPF_PARMS DS  0F
DXD_SPF_1     DS  F
DXD_SPF_2     DS  F

DXD_RC        DS  H                  RETURN CODE FROM DISPLAY

              VTAMREQ DSECT=NO

DXD_COMM1     DS  CL80
DXD_COMM2     DS  CL80
DXD_COMM3     DS  CL80
DXD_COMM4     DS  CL80
DXD_COMM5     DS  CL80

DXD_UNPACK    DS  CL9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                  NETBLOK DSECT=YES
NET_LIB_NAME      DS   CL8
NET_MEM_NAME      DS   CL8
NET_MEM_VER       DS   XL2
NET_DESC_LENGTH   EQU  *-NETBLOK
NET_MEM_DOC       DS   0C
                  ORG  NET_DATA
                  LIBRECD DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      LIBTMDOC
./ ADD NAME=LIBTNEW  0100-09250-09250-0919-00557-00557-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTNEW                                               *
*                                                                     *
*  Function:                                                          *
*   Create a new member                                               *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTNEW  CSECT
LIBTNEW  AMODE 31
LIBTNEW  RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTNEW,R12                    DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     INIT0000
MODID    DC    CL8'LIBTNEW'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTNEW,R13                    DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND
*---------------------------------------------------------------------*
*        Verify the user is authorized                                *
*---------------------------------------------------------------------*
         ITRACE ID=CHKAUTH
         MVI   NET_FUNCTION,$NET_CHECK_NEW_AUTH
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION
         LA    R1,NET_NEW_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         BAL   R8,SEND0020
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?
         BNE   ERR0010                        NO
*---------------------------------------------------------------------*
*        Determine the source dataset's DSORG                         *
*---------------------------------------------------------------------*
         ITRACE ID=USERDSN,                                            +
               DATA1=SPF_USER_DSN+00,                                  +
               DATA2=SPF_USER_DSN+08
         ITRACE ID=USERDSN1,                                           +
               DATA1=SPF_USER_DSN+16,                                  +
               DATA2=SPF_USER_DSN+24
         ITRACE ID=USERDSN2,                                           +
               DATA1=SPF_USER_DSN+32,                                  +
               DATA2=SPF_USER_DSN+40
         MVC   SUB0001_PARM_DSN,SPF_USER_DSN
         LA    R1,SUB0001_PARM_LIST           SUB0001 PARM LIST ADDRESS
         L     R15,VSUB0001                   SUB0001 ENTRY POINT
         ITRACE ID=CALLSUB1,                                           +
               RDATA1=R1,                                              +
               RDATA2=R15
         BALR  R14,R15                        CALL SUB0001
         ITRACE ID=DSORG,                                              +
               DATA1=SUB0001_PARM_DSORG
         CLI   SUB0001_PARM_DSORG,C'S'
         BE    NEW0010                        SEQUENTIAL
         CLI   SUB0001_PARM_DSORG,C'P'
         BE    NEW0020                        PARTITIONED
         MVC   SPF_MSG1(MSG01L),MSG01
         MVI   DXD_DISPLAY_RC+1,X'01'
         B     EXIT0000
NEW0010  DS    0H
         ITRACE ID=SEQ
         CLC   SPF_USER_MEMBER,COMM_BLANKS
         BE    NEW0030
         MVC   SPF_MSG1(MSG03L),MSG03
         MVI   DXD_DISPLAY_RC+1,X'01'
         B     EXIT0000                       EXIT WITH MESSAGE
NEW0020  DS    0H
         ITRACE ID=PDS
         CLC   SPF_USER_MEMBER,COMM_BLANKS
         BNE   NEW0030
         ITRACE ID=NOMEM
         MVC   SPF_MSG1(MSG04L),MSG04
         MVI   DXD_DISPLAY_RC+1,X'01'
         B     EXIT0000                       EXIT WITH MESSAGE
NEW0030  DS    0H
         BAL   R8,DAIR0100                    ALLOCATE EXISTING FILE
         CLI   SUB0001_PARM_DSORG,C'S'        SEQUENTIAL FILE?
         BE    NEW0040
         ITRACE ID=VERMEM                     VERIFYING MEMBER EXISTS
         GETMAIN RU,                                                   +
               LV=PO_DCBL,                                             +
               LOC=BELOW
         LR    R7,R1                          SAVE ADDRESS
         MVC   0(PO_DCBL,R7),PO_DCBI          INITIALIZE THE DCB
         GETMAIN RU,                                                   +
               LV=OPENL,                                               +
               LOC=BELOW
         LR    R4,R1                          SAVE ADDRESS
         MVC   0(OPENL,R4),OPENI              INITIALIZE OPEN
         OPEN  ((R7),INPUT),                                           +
               MODE=31,                                                +
               MF=(E,(R4))
         FIND  (R7),                                                   +
               SPF_USER_MEMBER,                                        +
               D
         STH   R15,DXD_FIND_RC
         MVC   0(CLOSEL,R4),CLOSEI
         CLOSE ((R7)),                                                 +
               MODE=31,                                                +
               MF=(E,(R4))
         FREEMAIN RU,                                                  +
               A=(R4),                                                 +
               LV=OPENL
         FREEMAIN RU,                                                  +
               A=(R7),                                                 +
               LV=PO_DCBL
         OC    DXD_FIND_RC,DXD_FIND_RC
         BZ    NEW0040                        MEMBER DOES NOT EXIST
         MVC   SPF_MSG1(MSG02L),MSG02
         MVI   DXD_DISPLAY_RC+1,X'01'
         B     EXIT0000                       EXIT WITH MESSAGE
*---------------------------------------------------------------------*
*                                                                     *
*     The source dataset (or PDS member) has been allocated.          *
*                                                                     *
*     OPEN the source dataset.                                        *
*                                                                     *
*     Register 7 has the address of the user's source file's DCB      *
*                                                                     *
*---------------------------------------------------------------------*
NEW0040  DS    0H
         ITRACE ID=OPENSRC
         GETMAIN RU,                                                   +
               LV=PS_DCBL,                                             +
               LOC=BELOW
         LR    R7,R1                          COPY DCB ADDRESS
         GETMAIN RU,                                                   +
               LV=PS_DCBEL,                                            +
               LOC=BELOW
         LR    R5,R1                          SAVE ADDRESS
         MVC   0(PS_DCBL,R7),PS_DCBI          INITIALIZE DCB
         MVC   0(PS_DCBEL,R5),PS_DCBEI
         USING IHADCB,R7
         ST    R5,DCBDCBE                     RELOCATE DCBE ADDRESS
         GETMAIN RU,                                                   +
               LV=OPENL,                                               +
               LOC=BELOW
         LR    R4,R1                          COPY ADDRESS
         MVC   0(OPENL,R4),OPENI              INITIALIZE PARM LIST
         OPEN  ((R7),INPUT),                                           +
               MODE=31,                                                +
               MF=(E,(R4))
         TM    COMM_DD,$DD_DEBUG1             DEBUG1 DD PRESENT?
         BNO   NEW0050
         GETMAIN RU,                                                   +
               LV=DEBUGDCBL+8004,                                      +
               LOC=BELOW
         LR    R6,R1
         ITRACE ID=OPENBUG1,                                           +
               RDATA1=R6
         MVC   0(DEBUGDCBL,R6),DEBUGDCB
         OPEN  ((R6),OUTPUT),                                          +
               MODE=31,                                                +
               MF=(E,(R4))
         XC    DEBUGDCBL(4,R6),DEBUGDCBL(R6)
NEW0050  DS    0H
         FREEMAIN RU,                                                  +
               A=(R4),                                                 +
               LV=OPENL
*---------------------------------------------------------------------*
*                                                                     *
*     GETMAIN the source dataset I/O area and initialize the          *
*     parameter list for the de-compression subroutine.               *
*                                                                     *
*---------------------------------------------------------------------*
NEW0060  DS    0H
         ITRACE ID=INITCMPR                   INIT COMPRESSION PARMS
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=BELOW
         ST    R1,UX01_EXPANDED_BUFFER
         LA    R1,DXD_EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER
         ST    R1,UX01_COMPRESSED_BUFFER
         LA    R1,DXD_COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
         SR    R4,R4                          INITIALIZE LENGTH
*---------------------------------------------------------------------*
*                                                                     *
*     Send the description.                                           *
*                                                                     *
*---------------------------------------------------------------------*
         MVC   NET_MEM_DOC+000(80),SPF_COMM1
         MVC   NET_MEM_DOC+080(80),SPF_COMM2
         MVC   NET_MEM_DOC+160(80),SPF_COMM3
         MVC   NET_MEM_DOC+240(80),SPF_COMM4
         MVC   NET_MEM_DOC+320(80),SPF_COMM5
         LA    R14,400                        MAXIMUM LENGTH
         LA    R15,SPF_COMM5                  ADDRESS OF LAST COMMENT
         LA    R1,5                           MAX LOOPS
NEW0070  DS    0H
         CLC   COMM_BLANKS,0(R15)             ALL BLANK?
         BNE   NEW0080                        NO
         SH    R14,H80                        MINUS LENGTH OF A COMMENT
         SH    R15,H80                        MINUS LENGTH OF A COMMENT
         BCT   R1,NEW0070                     LOOP
NEW0080  DS    0H
         LTR   R14,R14                        ANY COMMENTS?
         BZ    NEW0090                        NO
         MVI   NET_FUNCTION,$NET_SEND_DESC
         LA    R14,NET_NEW_LENGTH(R14)        PLUS HEADER LENGTH
         STCM  R14,3,NET_LENGTH               SET LENGTH
         ITRACE ID=SENDDESC
         BAL   R8,SEND0020                    SEND DESCRIPTION
         BAL   R8,RECV0000                    RECEIVE RESPONSE
         CLI   NET_RETURN_CODE,$NET_OK        DESCRIPTION SUCCESSFUL?
         BNE   ERR0020                        NO
*---------------------------------------------------------------------*
*                                                                     *
*     Send the source to the librarian.                               *
*                                                                     *
*     The data is read a record at a time into a buffer.              *
*     When the buffer is filled it is compressed and sent to          *
*     the librarian.                                                  *
*                                                                     *
*---------------------------------------------------------------------*
NEW0090  DS    0H
         SR    R3,R3                          CLEAR FOR RECORD COUNT
         SR    R4,R4                          CLEAR FOR BUFFER LENGTH
         L     R2,UX01_EXPANDED_BUFFER        CURRENT BUFFER ADDRESS
NEW0100  DS    0H
         GET   (R7),0(R2)                     READ A RECORD
         LA    R3,1(R3)                       PLUS 1 SOURCE RECORD
         LA    R4,80(R4)                      UPDATE BUFFER LENGTH
         LA    R2,80(R2)                      UPDATE BUFFER ADDRESS
         CH    R4,=Y($MAX_SOURCE_SIZE)        BUFFER FULL?
         BL    NEW0100                        NO
         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH
         MVI   NET_FUNCTION,$NET_CHECK_IN_SOURCE
         BAL   R8,SEND0000                    SEND THIS BUFFER
         BAL   R8,RECV0000                    RECEIVE RESPONSE
         SR    R4,R4                          RESET BUFFER LENGTH
         L     R2,UX01_EXPANDED_BUFFER        RESET BUFFER ADDRESS
         B     NEW0100                        READ NEXT RECORD
* ------------------------------------------------------------------- *
*                                                                     *
*     EOF has been reached on the source file.                        *
*     Send the last buffer.                                           *
*     Send the number of records in the source file.                  *
*                                                                     *
* ------------------------------------------------------------------- *
EOF0000  DS    0H
         ITRACE ID=EOF
         MVI   NET_FUNCTION,$NET_CHECK_IN_SOURCE
         MVI   NET_RETURN_CODE,$NET_EOF       SET EOF
         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH
         BAL   R8,SEND0000                    SEND LAST BUFFER
         BAL   R8,RECV0000                    RECEIVE RESPONSE
         MVI   NET_FUNCTION,$NET_SEND_RECORDS
         MVI   NET_RETURN_CODE,$NET_OK
         STCM  R3,15,NET_SOURCE_RECORDS       SET NUMBER OF RECORDS
         LA    R1,NETBLOKL+L'NET_SOURCE_RECORDS
         STCM  R1,3,NET_LENGTH                SET LENGTH
         BAL   R8,SEND0020                    SEND NUMBER OF RECORDS
         BAL   R8,RECV0000                    RECEIVE RESPONSE
         GETMAIN RU,                                                   +
               LV=CLOSEL,                                              +
               LOC=BELOW
         LR    R4,R1
         MVC   0(CLOSEL,R4),CLOSEI
         CLOSE ((R7)),                                                 +
               MODE=31,                                                +
               MF=(E,(R4))
         FREEMAIN RU,A=(R7),LV=PS_DCBL
         FREEMAIN RU,A=(R5),LV=PS_DCBEL
         TM    COMM_DD,$DD_DEBUG1
         BNO   EOF0010
         CLOSE ((R6)),                                                 +
               MODE=31,                                                +
               MF=(E,(R4))
         FREEMAIN RU,                                                  +
               A=(R6),                                                 +
               LV=DEBUGDCBL+8004
EOF0010  DS    0H
         FREEMAIN RU,                                                  +
               A=(R4),                                                 +
               LV=CLOSEL
         L     R1,UX01_EXPANDED_BUFFER        INPUT BUFFER ADDRESS
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=$MAX_SOURCE_SIZE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0100 DS    0H
         ITRACE ID=DAIRALE
         XC    DAIRREQ(DAIRL),DAIRREQ
         MVI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING DATASET
         MVC   DAIR_DD,LIBTEMP                SET DDNAME
         MVC   DAIR_DSN,SPF_USER_DSN
         MVC   DAIR_MEMBER,SPF_USER_MEMBER
         LA    R1,DAIRREQ                     DAIR PARM BLOCK ADDRESS
         ITRACE ID=CALLSUB4,                                           +
               RDATA1=R1
         L     R15,VSUB0004                   DAIR ENTRY POINT
         BALR  R14,R15                        LINK TO DAIR SUBROUTINE
         ITRACE ID=DAIR_R15,                                           +
               DATA1=DAIR_R15
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BNZ   DAIR0110                       NO
         OI    DXD_FLAG,$ALLOCATED            SET ALLOCATED INDICATOR
         BR    R8
DAIR0110 DS    0H
         ITRACE ID=DAIRFAIL
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         ITRACE ID=COMPRESS,                                           +
               RDATA1=R4
         SR    R0,R0
         LTR   R4,R4                          ANY DATA TO SEND?
         BZ    SEND0010                       NO
         MVI   UX01_FUNCTION,$UX01_COMPRESS
         LA    R1,UX01_PARMS
         L     R15,AUX01                      USER EXIT 1 ENTRY POINT
         BALR  R14,R15                        COMPRESS THE DATA
SEND0010 DS    0H
         L     R1,DXD_COMPRESSED_LENGTH
         LA    R1,NETBLOKL(R1)                PLUS HEADER LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
SEND0020 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0030
         ITRACE ID=VTAMSEND,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0040
SEND0030 DS    0H
         ITRACE ID=IP_SEND,                                            +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0040 DS    0H
         CLI   NET_FUNCTION,$NET_CHECK_NEW_AUTH
         BE    SEND0050
         TM    COMM_DD,$DD_DEBUG1
         BNO   SEND0050
         ST    R15,DXD_DEBUG_SAVE
         LA    R0,DEBUGDCBL+4(R6)
         SR    R1,R1
         ICM   R1,3,NET_LENGTH
         LA    R14,4(R1)
         STCM  R14,3,DEBUGDCBL(R6)
         LA    R14,NET_DATA
         LR    R15,R1
         MVCL  R0,R14
         PUT   (R6),DEBUGDCBL(R6)
         L     R15,DXD_DEBUG_SAVE
SEND0050 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOTAUTH,                                            +
               DATA1=NET_MSG_1+0,                                      +
               DATA2=NET_MSG_1+8
         MVC   SPF_MSG1,NET_MSG_1
         MVI   DXD_DISPLAY_RC+1,X'01'
         B     EXIT0000
ERR0020  DS    0H
         ITRACE ID=DESCFAIL
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         TM    DXD_FLAG,$ALLOCATED            OUTPUT DATASET ALLOCATED?
         BNO   EXIT0010                       NO
         ITRACE ID=RELEASE
         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)
         MVC   DAIR_DSN,LIBTEMP               SET DDNAME
         LA    R1,DAIRREQ                     REQUEST BLOCK ADDRESS
         L     R15,VSUB0004                   DAIR ENTRY POINT
         BALR  R14,R15                        LINK TO SUBROUTINE
         NI    DXD_FLAG,255-$ALLOCATED
EXIT0010 DS    0H
         LH    R15,DXD_DISPLAY_RC             SET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTNEW)                     DISPLACEMENT TO WORK AREA
VSUB0001 DC    V(SUB0001)
VSUB0004 DC    V(SUB0004)
LIBTEMP  DC    CL8'LIBTEMP'

PO_DCBI  DCB   DSORG=PO,                                               +
               DDNAME=LIBTEMP,                                         +
               MACRF=R
PO_DCBL  EQU   *-PO_DCBI
PS_DCBI  DCB   DSORG=PS,                                               +
               DDNAME=LIBTEMP,                                         +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               DCBE=PS_DCBEI,                                          +
               MACRF=GM
PS_DCBL  EQU   *-PS_DCBI
PS_DCBEI DCBE  EODAD=EOF0000
PS_DCBEL EQU   *-PS_DCBEI

DEBUGDCB DCB   DSORG=PS,                                               +
               DDNAME=DEBUG1,                                          +
               RECFM=VB,                                               +
               LRECL=16000,                                            +
               BLKSIZE=16004,                                          +
               MACRF=PM
DEBUGDCBL EQU  *-DEBUGDCB

OPENI    OPEN  (*,INPUT),MF=L,MODE=31
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MF=L,MODE=31
CLOSEL   EQU   *-CLOSEI

H80      DC    H'80'

MSG01    DC    CL11'LIBNEW001E'
         DC    C'Source data set not found'
MSG01L   EQU   *-MSG01
MSG02    DC    CL11'LIBNEW002E'
         DC    C'Member not found'
MSG02L   EQU   *-MSG02
MSG03    DC    CL11'LIBNEW003E'
         DC    C'Member name not allowed if source dataset is sequentia+
               l'
MSG03L   EQU   *-MSG03
MSG04    DC    CL11'LIBNEW004E'
         DC    C'Member name is required when source dataset is a PDS'
MSG04L   EQU   *-MSG04

         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
DXDTNEW       DSECT
              LIBSAVE DSECT=NO
              DAIRREQ DSECT=NO
              VTAMREQ DSECT=NO
              UX01PARM DSECT=NO

DXD_DEBUG_SAVE        DS   F

DXD_SPF_PARMS         DS  0F
DXD_SPF_1             DS   F
DXD_SPF_2             DS   F

DXD_EXPANDED_LENGTH   DS   A           LENGTH OF EXPANDED DATA
DXD_COMPRESSED_LENGTH DS   A           LENGTH OF COMPRESSED DATA

DXD_SOURCE_RECORDS    DS   F           NUMBER OF RECORDS IN SOURCE
DXD_CURRENT_RECORDS   DS   F           NUMBER OF RECORDS IN BUFFER

SUB0001_PARM_LIST     DS   0A
SUB0001_PARM_DSN      DS   CL44
SUB0001_PARM_DSORG    DS   C

DXD_FIND_RC           DS   H           RETURN CODE FROM DISPLAY
DXD_DISPLAY_RC        DS   H           RETURN CODE FROM DISPLAY

DXD_FLAG              DS   X
$ALLOCATED            EQU  X'80'       DATASET IS ALLOCATED

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM     TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK   DSECT=YES
NET_LIB_NAME       DS  CL8
NET_MEM_NAME       DS  CL8
NET_MEM_VERSION    DS  XL2
NET_MEM_DOC        DS  0C
NET_NEW_LENGTH     EQU *-NETBLOK
         ORG       NET_DATA
NET_SOURCE_RECORDS DS  XL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBRECD DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB  AM=VTAM
ACBL     EQU     *-IFGACB
         LIBBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         DCBD    DSORG=PS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
$MAX_SOURCE_SIZE EQU 8000
         COPY REGEQU
         END  LIBTNEW
./ ADD NAME=LIBTPARM 0100-09250-09250-0919-00357-00357-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: LIBTPARM                                                     *
*                                                                     *
*  Process parameters                                                 *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTPARM CSECT
LIBTPARM AMODE 31
LIBTPARM RMODE ANY
         USING LIBTPARM,R12                   DEFINE BASE
         USING LIBTCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'LIBTPARM'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         LR    R9,R1                          COPY PARM ADDRESS
         L     R1,COMMDXDA
         A     R1,DXDSTART
         ST    R1,8(R13)
         ST    R13,4(R1)
         LR    R13,R1
         USING DXDTPARM,R13
         MVI   DXD_FLAGS,0                    RESET ALL FLAGS
         ITRACE ID=ENTRY,                                              +
               RDATA1=R9
* ------------------------------------------------------------------- *
*                                                                     *
*   Parameters are                                                    *
*                                                                     *
*       ABEND    ABEND during exit/cleanup                            *
*       A=       VTAM APPLID of library server                        *
*       I=       TCP/IP hostname or IP address of library server      *
*       L=       Library name                                         *
*       P=       TCP/IP port number of library server                 *
*                                                                     *
* ------------------------------------------------------------------- *
         SR    R2,R2                          CLEAR REGISTER
         ICM   R2,3,0(R9)                     PARAMETER LENGTH
         BZ    ERR0150                        NO PARAMETER
         BNH   ERR0150
         LA    R3,2(R9)                       FIRST BYTE OF PARM(S)
         MVC   COMM_SERVER_APPL_ID,COMM_BLANKS
         MVC   COMM_LIBRARY_NAME,COMM_BLANKS  CLEAR LIBRARY NAME
         XC    COMM_SERVER_PORT,COMM_SERVER_PORT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM0010 DS    0H
         ITRACE ID=NEW_PARM,                                           +
               RDATA1=R3,                                              +
               DATA2=0(R3)
         LTR   R2,R2                          ANY DATA LEFT?
         BZ    EOD0000                        NO
         BAL   R8,PARM1000                    FIND FIRST NON-BLANK
         CLC   =C'A=',0(R3)                   APPLID?
         BE    APPL0000                       YES
         CLC   =C'H=',0(R3)                   HOSTNAME OR IP ADDRESS?
         BE    HOST0000                       YES
         CLC   =C'L=',0(R3)                   LIBRARY NAME?
         BE    LIB0000                        YES
         CLC   =C'P=',0(R3)                   TCP/IP PORT NUMBER?
         BE    PORT0000                       YES
         CLC   =C'ABEND',0(R3)                ABEND?
         BE    ABEND000                       YES
         LM    R4,R5,MSG14PARM                MESSAGE 1 PARMS
         B     TPUT0000
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ABEND000 DS    0H
         ITRACE ID=ABEND
         BAL   R8,PARM2000
         OI    COMM_FLAGS,$ABEND
         B     PARM0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
APPL0000 DS    0H
         TM    DXD_FLAGS,$APPL                APPL ALREADY GIVEN?
         BO    ERR0010
         OI    DXD_FLAGS,$APPL
         BAL   R8,PARM2000                    SCAN ARGUEMENT
         ITRACE ID=APPL,                                               +
               DATA1=DXD_PARM,                                         +
               RDATA2=R4
         CH    R4,H8                          TOO LONG?
         BH    ERR0020                        YES
         MVC   COMM_SERVER_APPL_ID,DXD_PARM   COPY APPLID
         B     PARM0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
HOST0000 DS    0H
         TM    DXD_FLAGS,$HOST                HOST ALREADY GIVEN?
         BO    ERR0030
         OI    DXD_FLAGS,$HOST
         BAL   R8,PARM2000                    SCAN ARGUEMENT
         CH    R4,H24                         TOO LONG?
         BH    ERR0040                        YES
         ITRACE ID=HOST,                                               +
               DATA1=DXD_PARM,                                         +
               RDATA2=R4
         ST    R4,COMM_SERVER_HOST_NAME_LENGTH
         MVC   COMM_SERVER_HOST_NAME,DXD_PARM
         B     PARM0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LIB0000  DS    0H
         TM    DXD_FLAGS,$LIB                 LIBRARY ALREADY GIVEN?
         BO    ERR0050
         OI    DXD_FLAGS,$LIB
         BAL   R8,PARM2000                    SCAN ARGUEMENT
         CH    R4,H8                          TOO LONG?
         BH    ERR0060                        YES
         ITRACE ID=LIB,                                                +
               DATA1=DXD_PARM,                                         +
               RDATA2=R4
         MVC   COMM_LIBRARY_NAME,DXD_PARM     COPY LIBRARY NAME
         B     PARM0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PORT0000 DS    0H
         TM    DXD_FLAGS,$PORT                PORT ALREADY GIVEN?
         BO    ERR0070
         OI    DXD_FLAGS,$PORT
         BAL   R8,PARM2000                    SCAN ARGUEMENT
         CH    R4,H5                          TOO LONG?
         BH    ERR0080                        YES
         LA    R14,DXD_PARM
         LR    R15,R4                         COPY LENGTH
PORT0010 DS    0H
         CLI   0(R14),C'0'                    VALID NUMERIC?
         BL    ERR0090                        NO
         CLI   0(R14),C'9'                    VALID NUMERIC?
         BH    ERR0090                        NO
         BCTR  R4,0
         EX    R4,PACKPORT
         CVB   R1,COMMDWRD                    CONVERT TO BINARY
         STH   R1,COMM_SERVER_PORT            SET PORT NUMBER
         ITRACE ID=PORT,                                               +
               DATA1=DXD_PARM,                                         +
               RDATA2=R1
         B     PARM0010
PACKPORT PACK  COMMDWRD,DXD_PARM(0)           PACK PORT NUMBER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EOD0000  DS    0H
         TM    DXD_FLAGS,$APPL+$HOST
         BZ    ERR0100                        NEITHER GIVEN
         BO    ERR0110                        BOTH GIVEN
         TM    DXD_FLAGS,$APPL                APPL ID GIVEN?
         BO    EXIT0000                       NO
         TM    DXD_FLAGS,$PORT                PORT GIVEN?
         BNO   ERR0120                        NO
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM1000 DS    0H
         CLI   0(R3),C' '                     BLANK?
         BNER  R8                             NO
         LA    R3,1(R3)                       NEXT
         BCT   R2,PARM1000
         B     ERR0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM2000 DS    0H
         MVC   DXD_PARM,COMM_BLANKS           INITIALIZE WORK AREA
         LA    R1,DXD_PARM
         SR    R4,R4
         LA    R3,2(R3)                       SKIP KEYWORD
         SH    R2,H2                          MINUS LENGTH OF KEYWORD
         BNH   ERR0130
PARM2010 DS    0H
         CLI   0(R3),C' '                     BLANK?
         BER   R8                             YES
         MVC   0(1,R1),0(R3)                  COPY
         LA    R1,1(R1)                       NEXT
         LA    R3,1(R3)                       NEXT
         LA    R4,1(R4)                       ADD 1 TO LENGTH
         BCT   R2,PARM2010                    LOOP
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         LM    R4,R5,MSG01PARM
         B     TPUT0000
ERR0020  DS    0H
         LM    R4,R5,MSG02PARM
         B     TPUT0000
ERR0030  DS    0H
         LM    R4,R5,MSG03PARM
         B     TPUT0000
ERR0040  DS    0H
         LM    R4,R5,MSG04PARM
         B     TPUT0000
ERR0050  DS    0H
         LM    R4,R5,MSG05PARM
         B     TPUT0000
ERR0060  DS    0H
         LM    R4,R5,MSG06PARM
         B     TPUT0000
ERR0070  DS    0H
         LM    R4,R5,MSG07PARM
         B     TPUT0000
ERR0080  DS    0H
         LM    R4,R5,MSG08PARM
         B     TPUT0000
ERR0090  DS    0H
         LM    R4,R5,MSG09PARM
         B     TPUT0000
ERR0100  DS    0H
         LM    R4,R5,MSG10PARM
         B     TPUT0000
ERR0110  DS    0H
         LM    R4,R5,MSG11PARM
         B     TPUT0000
ERR0120  DS    0H
         LM    R4,R5,MSG12PARM
         B     TPUT0000
ERR0130  DS    0H
         LM    R4,R5,MSG13PARM
         B     TPUT0000
ERR0150  DS    0H
         LM    R4,R5,MSG15PARM
         B     TPUT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
TPUT0000 DS    0H
         GETMAIN RU,                                                   +
               LV=(R5),                                                +
               LOC=BELOW
         LR    R2,R1                          COPY ADDRESS
         BCTR  R5,0
         EX    R5,TPUTMVC
         LA    R5,1(R5)
         TPUT  (R2),(R5)                      ISSUE TPUT
         FREEMAIN RU,                                                  +
               A=(R2),                                                 +
               LV=(R5)
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)                     RESTORE R13
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        SET RC TO ZERO
         BR    R14                            EXIT
* ------------------------------------------------------------------- *
TPUTMVC  MVC   0(0,R2),0(R4)                  COPY TEXT
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTPARM)                    DISPLACEMENT TO WORK AREA

MSG01PARM  DC  A(MSG01),A(MSG01L)
MSG02PARM  DC  A(MSG02),A(MSG02L)
MSG03PARM  DC  A(MSG03),A(MSG03L)
MSG04PARM  DC  A(MSG04),A(MSG04L)
MSG05PARM  DC  A(MSG05),A(MSG05L)
MSG06PARM  DC  A(MSG06),A(MSG06L)
MSG07PARM  DC  A(MSG07),A(MSG07L)
MSG08PARM  DC  A(MSG08),A(MSG08L)
MSG09PARM  DC  A(MSG09),A(MSG09L)
MSG10PARM  DC  A(MSG10),A(MSG10L)
MSG11PARM  DC  A(MSG11),A(MSG11L)
MSG12PARM  DC  A(MSG12),A(MSG12L)
MSG13PARM  DC  A(MSG13),A(MSG13L)
MSG14PARM  DC  A(MSG14),A(MSG14L)
MSG15PARM  DC  A(MSG15),A(MSG15L)

H2         DC  H'2'
H5         DC  H'5'
H8         DC  H'8'
H24        DC  H'24'

MSG01      DC  C'LIBTPARM01E  APPLID already given'
MSG01L     equ *-MSG01
MSG02      DC  C'LIBTPARM02E  APPLID too long'
MSG02L     EQU *-MSG02
MSG03      DC  C'LIBTPARM03E  HOST name already given'
MSG03L     EQU *-MSG03
MSG04      DC  C'LIBTPARM04E  HOST name too long'
MSG04L     EQU *-MSG04
MSG05      DC  C'LIBTPARM05E  LIBRARY name already given'
MSG05L     EQU *-MSG05
MSG06      DC  C'LIBTPARM06E  LIBRARY name too long'
MSG06L     EQU *-MSG06
MSG07      DC  C'LIBTPARM07E  PORT number already given'
MSG07L     EQU *-MSG07
MSG08      DC  C'LIBTPARM08E  PORT number too long'
MSG08L     EQU *-MSG08
MSG09      DC  C'LIBTPARM09E  PORT number not numeric'
MSG09L     EQU *-MSG09
MSG10      DC  C'LIBTPARM10E  APPL or HOST name is required'
MSG10L     EQU *-MSG10
MSG11      DC  C'LIBTPARM11E  APPL and HOST are mutually exclusive'
MSG11L     EQU *-MSG11
MSG12      DC  C'LIBTPARM12E  PORT number required when HOST specified'
MSG12L     EQU *-MSG12
MSG13      DC  C'LIBTPARM13E  Keyword with no arguement given'
MSG13L     EQU *-MSG13
MSG14      DC  C'LIBTPARM14E  Unrecognized keyword'
MSG14L     EQU *-MSG14
MSG15      DC  C'LIBTPARM15E  No parameters given'
MSG15L     EQU *-MSG15
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREA                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDTPARM DSECT
         LIBSAVE DSECT=NO

DXD_FLAGS DS     X
$APPL     EQU    X'80'
$HOST     EQU    X'40'
$LIB      EQU    X'20'
$PORT     EQU    X'10'

DXD_PARM  DS     CL80

* ------------------------------------------------------------------- *
*        COMMON MODULE                                                *
* ------------------------------------------------------------------- *
         TCOMM  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
         COPY  REGEQU
         END   LIBTPARM
./ ADD NAME=LIBTPRSE 0100-09250-09250-0919-00117-00117-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTPRSE                                              *
*                                                                     *
*  Function:                                                          *
*   Parse SPF_ZCMD                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTPRSE CSECT
LIBTPRSE AMODE 31
LIBTPRSE RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTPRSE,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     PRSE0000
MODID    DC    CL8'LIBTPRSE'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
PRSE0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTPRSE,R13                   DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    PRSE0010                       YES
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
PRSE0010 DS    0H
         SR    R2,R2                          INIT NBR OF OPERANDS
         ST    R2,COMM_OPERANDS_NBR           SET NUMBER OF OPERANDS
         XC    COMM_OPERANDS(COMM_OPERANDS_L),COMM_OPERANDS
         LA    R3,SPF_ZCMD                    AREA TO PARSE
         LA    R4,L'SPF_ZCMD                  LENGTH OF AREA TO PARSE
         LA    R5,COMM_OPERAND_1_ADDRESS
         USING OPERAND,R5
PRSE0020 DS    0H
         CLI   0(R3),C' '                     BLANK?
         BNE   PRSE0030                       NO
         LA    R3,1(R3)                       NEXT BYTE
         BCT   R4,PRSE0020                    LOOP
         B     EXIT0000                       NOTHING FOUND
PRSE0030 DS    0H
         STCM  R3,15,OPERAND_ADDRESS          SET OPERAND ADDRESS
         LA    R2,1(R2)                       PLUS 1 OPERAND
         ST    R2,COMM_OPERANDS_NBR           SET NUMBER OF OPERANDS
         SR    R6,R6                          INITIALIZE LENGTH
PRSE0040 DS    0H
         CLI   0(R3),C' '                     BLANK?
         BE    PRSE0050                       YES
         LA    R6,1(R6)                       ADD 1 TO LENGTH
         LA    R3,1(R3)                       NEXT BYTE
         BCT   R4,PRSE0040                    LOOP
         B     PRSE0060                       END OF AREA REACHED
PRSE0050 DS    0H
         STC   R6,OPERAND_LENGTH              SET LENGTH
         LA    R5,OPERAND_L(R5)               NEXT OPERAND
         B     PRSE0020
PRSE0060 DS    0H
         STC   R6,OPERAND_LENGTH
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT,                                               +
               DATA1=COMM_OPERANDS_NBR
         L     R13,4(R13)                     RESTORE R13
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTPRSE)                    DISPLACEMENT TO WORK AREA

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDTPRSE         DSECT
                 LIBSAVE DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB  AM=VTAM
ACBL     EQU     *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
OPERAND          DSECT
OPERAND_ADDRESS  DS     XL4
OPERAND_LENGTH   DS     X
OPERAND_TYPE     DS     X
OPERAND_L        EQU    *-OPERAND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBTPRSE
./ ADD NAME=LIBTSNAP 0100-09250-09250-0919-00609-00609-00000-SOURCE
         MACRO
         FDEF  &NAME,&TYPE,&LEN,&BASE=
         LCLC  &T
         LCLA  &L
         GBLC  &BASENAME
         AIF   (T'&BASE EQ 'O').NOBASE
.BASE    ANOP
&BASENAME SETC  '&BASE'
         DC    CL8'&BASE'                     CONTROL BLOCK NAME
         MEXIT
.NOBASE  ANOP
         AIF   (T'&TYPE EQ 'O').TYPE1
&T       SETC  '&TYPE'
         AGO   .TYPE2
.TYPE1   ANOP
&T       SETC  T'&NAME
.TYPE2   ANOP
         AIF   (T'&LEN EQ 'O').LEN1
&L       SETA  &LEN
         AGO   .LEN2
.LEN1    ANOP
&L       SETA  L'&NAME
.LEN2    ANOP
         DC    CL16'&NAME'                    FIELD NAME
         DC    AL2(&NAME-&BASENAME)           DISP WITHIN CONTROL BLOCK
         DC    C'&T'                          FIELD TYPE
         DC    AL2(&L)                        SOURCE FIELD LENGTH
         MEND
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: LIBTSNAP                                              *
*                                                                     *
*  Process SNAP commands                                              *
*                                                                     *
*  At entry:                                                          *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTSNAP CSECT
LIBTSNAP AMODE 31
LIBTSNAP RMODE ANY
         USING LIBTSNAP,R12                   DEFINE BASE
         USING LIBTCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'LIBTSNAP'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +
               LV=WORKAREA_L,                 .. SIZE                  +
               LOC=BELOW                      .. DCB, MUST BE BELOW
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORK_AREA,R13                  DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVI   WORK_HEADING,C' '
         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING
         MVI   WORK_PRINT_SPACE,C' '          INITIALIZE SPACE
         MVC   WORK_PRINT,WORK_PRINT_SPACE
         MVI   WORK_FLAGS,0                   RESET FLAG(S)
         L     R7,ALIBSPFD
         USING LIBSPFD,R7
         TM    COMM_DD,$DD_SNAP               SNAP DD PRESENT?
         BNO   ERR0010                        NO
* ------------------------------------------------------------------- *
*                                                                     *
*     Open the DCB.                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   WORK_DCB(DCBL),DCBI            INITIALIZE THE DCB
         MVC   WORK_OPEN(OPENL),OPENI
         OPEN  WORK_DCB,                                               +
               MODE=31,                                                +
               MF=(E,WORK_OPEN)
         ZAP   WORK_PAGE,P0                   INITIALIZE PAGE NUMBER
         ZAP   WORK_LINE,P0                   INITIALIZE LINE NUMBER
         TIME  DEC                            GET DATE AND TIME
         STM   R0,R1,WORK_TIME_DATE           SAVE TIME AND DATE
         AP    WORK_DATE,P1900000             ADD CENTURY TO DATE
         BAL   R10,HEAD0000                   PRINT HEADING
* ------------------------------------------------------------------- *
*     Format fields from the USER's common area                       *
* ------------------------------------------------------------------- *
         ST    R11,WORK_FMT_BASE              SET BASE
         MVC   WORK_FMT_FDEF,A_TCOMM_FDEF
         BAL   R8,FMT0000                     FORMAT THE TCOMM FIELDS
* ------------------------------------------------------------------- *
*     Format fields from the library chain                            *
* ------------------------------------------------------------------- *
         ICM   R6,15,COMM_LIBRARY_CHAIN
         BZ    SNAP0100
         USING LIB_CHAIN,R6
         LA    R5,LIB_CHAIN_LIBRARIES
         USING LIB_CHAIN_NAME,R5
         L     R1,LIB_CHAIN_LENGTH            LENGTH OF DATA
         SH    R1,=Y(LIB_CHAIN_NAME-LIB_CHAIN)
         SR    R0,R0                          CLEAR REGISTER
         D     R0,=A(LIB_CHAIN_PER_LEN)
         LR    R6,R1                          NUMBER OF LIBS
         MVC   WORK_FMT_FDEF,A_LIBCHAIN_FDEF
SNAP0010 DS    0H
         ST    R5,WORK_FMT_BASE
         BAL   R8,FMT0000
         LA    R5,LIB_CHAIN_PER_LEN(R5)
         BCT   R6,SNAP0010
* ------------------------------------------------------------------- *
*                                                                     *
*      Print the trace table                                          *
*                                                                     *
* ------------------------------------------------------------------- *
SNAP0100 DS    0H
         OI    WORK_FLAGS,$WORK_TRACE
         MVI   WORK_PRINT_CC,C'1'              FORCE TOP OF PAGE
         MVC   WORK_PRINT_DATA(MSG05L),MSG05
         BAL   R9,PRT0000
         ICM   R2,15,TRFIRST                   FIRST TRACE TABLE ENTRY
         BZ    CLOSE000                        NO TRACE TABLE
         USING TRENTRY,R2                      DEFINE BASE
SNAP0110 DS    0H
         OC    TRETCB,TRETCB
         BZ    CLOSE000
         MVC   WORK_PRINT_DATA(MSG06L),MSG06
         C     R2,TRCURR                       CURRENT ENTRY?
         BNE   SNAP0120                        NO
         MVC   WORK_PRINT_DATA+(MSG06_CUR-MSG06)(L'MSG06_CUR),=C'CURREN+=>'
               T -->'
SNAP0120 DS    0H
         UNPK  WORK_PRINT_DATA+(MSG06_TCB-MSG06)(7),TRETCB(5)            ADDR
         TR    WORK_PRINT_DATA+(MSG06_TCB-MSG06)(6),HEXCHAR
         MVI   WORK_PRINT_DATA+(MSG06_TCB-MSG06)+6,C' '
         MVC   WORK_PRINT_DATA+(MSG06_MOD-MSG06)(L'MSG06_MOD),TREMOD
         MVC   WORK_PRINT_DATA+(MSG06_ID-MSG06)(L'MSG06_ID),TREID
         MVC   WORK_PRINT_DATA+(MSG06_D1-MSG06)(L'MSG06_D1),TREDATA1
         TR    WORK_PRINT_DATA+(MSG06_D1-MSG06)(L'MSG06_D1),PRINTABLE
         UNPK  WORK_PRINT_DATA+(MSG06_D1X-MSG06)(9),TREDATA1(5)
         TR    WORK_PRINT_DATA+(MSG06_D1X-MSG06)(8),HEXCHAR
         UNPK  WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(9),TREDATA1+4(5)
         TR    WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(8),HEXCHAR
         MVI   WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8+8,C' '
         MVC   WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),TREDATA2
         MVC   WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),TREDATA2
         TR    WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),PRINTABLE
         UNPK  WORK_PRINT_DATA+(MSG06_D2X-MSG06)(9),TREDATA2(5)
         TR    WORK_PRINT_DATA+(MSG06_D2X-MSG06)(8),HEXCHAR
         UNPK  WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(9),TREDATA2+4(5)
         TR    WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(8),HEXCHAR
         MVI   WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8+8,C' '
         BAL   R9,PRT0000
         C     R2,TRLAST                      END OF TABLE?
         BE    CLOSE000                       YES
         LA    R2,TRENTRYL(R2)
         B     SNAP0110
         DROP  R2
* ------------------------------------------------------------------- *
*     CLOSE THE DCB AND EXIT                                          *
* ------------------------------------------------------------------- *
CLOSE000 DS    0H
         MVC   WORK_CLOSE(CLOSEL),CLOSEI
         CLOSE (WORK_DCB),                                             +
               MODE=31,                                                +
               MF=(E,WORK_CLOSE)
         MVC   SPF_MSG1(MSG01L),MSG01
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
FMT0000  DS    0H
         STM   R0,R15,WORK_FMT_SAVE
         L     R2,WORK_FMT_BASE
         L     R3,WORK_FMT_FDEF
         USING FDEF,R3
         MVC   WORK_PRINT_DATA(MSG03L),MSG03
         MVC   WORK_PRINT_DATA+(MSG03_BLOCK-MSG03)(L'MSG03_BLOCK),0(R3)
         UNPK  WORK_UNPACK(9),WORK_FMT_BASE(5)
         TR    WORK_UNPACK,HEXCHAR
         MVC   WORK_PRINT_DATA+(MSG03_ADDR-MSG03)(L'MSG03_ADDR),WORK_UN+
               PACK
         BAL   R9,PRT0000
         LA    R3,8(R3)
FMT0010  DS    0H
         MVC   WORK_PRINT_DATA(MSG04L),MSG04
         LA    R4,WORK_PRINT_DATA+(MSG04_DATA-MSG04)
         USING FLD,R4
         LA    R5,((L'WORK_PRINT_DATA-MSG04L)/(FLDL+5))
FMT0020  DS    0H
         MVC   FLD_LABEL,FDEF_NAME
         MVC   FLD_TYPE+1(1),FDEF_TYPE
         SR    R1,R1
         ICM   R1,3,FDEF_LENGTH
         CVD   R1,WORK_DWORD
         MVC   FLD_LENGTH,=X'40202120'
         ED    FLD_LENGTH,WORK_DWORD+6
         UNPK  WORK_UNPACK(5),FDEF_DISP(3)
         TR    WORK_UNPACK(4),HEXCHAR
         MVC   FLD_DISP,WORK_UNPACK           COPY DISPLACEMENT
         SR    R14,R14                        CLEAR REGISTER
         ICM   R14,3,FDEF_LENGTH              FIELD LENGTH
         SR    R15,R15                        CLEAR REGISTER
         ICM   R15,3,FDEF_DISP                DISPLACEMENT
         AR    R15,R2                         DATA ADDRESS
         CLI   FDEF_TYPE,C'A'                 ADDRESS?
         BE    FMT0050                        YES
         CLI   FDEF_TYPE,C'C'                 CHARACTER?
         BE    FMT0030                        YES
         CLI   FDEF_TYPE,C'F'                 FULLWORD?
         BE    FMT0060                        YES
         CLI   FDEF_TYPE,C'H'                 HALFWORD?
         BE    FMT0070                        YES
         CLI   FDEF_TYPE,C'P'                 PACKED DECIMAL?
         BE    FMT0080                        YES
         CLI   FDEF_TYPE,C'X'                 HEX?
         BE    FMT0050                        YES
         B     FMT0500
* ----------------------  CHARACTER FIELDS  ------------------------- *
FMT0030  DS    0H
         CH    R14,H8                         LONGER THAN 8 CHARACTERS?
         BNH   FMT0040                        NO
         LH    R14,H8                         LIMIT TO 8
FMT0040  DS    0H
         BCTR  R14,0
         EX    R14,FMTMVC01                   COPY DATA
         B     FMT0500
* ----------------------  ADDRESS FIELDS  --------------------------- *
FMT0050  DS    0H
         UNPK  WORK_UNPACK(9),0(5,R15)        UNPACK THE DATA
         TR    WORK_UNPACK,HEXCHAR            TRANSLATE TO PRINTABLE
         SLL   R14,1                          MULTIPLY BY 2
         BCTR  R14,0                          MINUS 1
         LA    R1,FLD_VALUE+7
         SR    R1,R14
         EX    R14,FMTMVC02                   COPY TO PRINT AREA
         B     FMT0500
* ----------------------  FULLWORD FIELDS  -------------------------- *
FMT0060  DS    0H
         L     R1,0(R15)                      LOAD VALUE
         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL
         MVC   FLD_VALUE,=X'4020202020202120'
         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE
         B     FMT0500
* ----------------------  FULLWORD FIELDS  -------------------------- *
FMT0070  DS    0H
         LH    R1,0(R15)                      LOAD VALUE
         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL
         MVC   FLD_VALUE,=X'4020202020202120'
         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE
         B     FMT0500
* ----------------------  PACKED DECIMAL ---------------------------- *
FMT0080  DS    0H
         BCTR  R14,0
         EX    R14,FMTZAP                     ZAP IT INTO DWORD
         MVC   FLD_VALUE,=X'4020202020202120'
         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE
FMT0500  DS    0H
         LA    R4,FLDL+5(R4)                  NEXT IN OUTPUT
         LA    R3,FDEFL(R3)                   NEXT FIELD DEFINITION
         CLI   0(R3),X'FF'                    END OF FIELDS?
         BE    FMT0510                        YES
         BCT   R5,FMT0020                     FORMAT NEXT FIELD
         BAL   R9,PRT0000                     PRINT
         B     FMT0010
FMT0510  DS    0H
         BAL   R9,PRT0000                     PRINT LAST LINE
         BAL   R9,PRT0000                     PRINT BLANK LINE
         LM    R0,R15,WORK_FMT_SAVE
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FMTMVC01 MVC   FLD_VALUE(0),0(R15)            COPY DATA
FMTMVC02 MVC   0(0,R1),WORK_UNPACK            COPY DATA
FMTZAP   ZAP   WORK_DWORD,0(0,R15)            ZAP PACKED DECIMAL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         CP    WORK_LINE,MAXLINE
         BL    PRT0010
         BAL   R10,HEAD0000                   PRINT NEXT HEADING
PRT0010  DS    0H
         PUT   WORK_DCB,WORK_PRINT            PRINT
         AP    WORK_LINE,P1                   ADD TO LINE COUNT
         MVC   WORK_PRINT,WORK_PRINT_SPACE
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
HEAD0000 DS    0H
         MVC   WORK_HEADING(HEADINGL),HEADING
         ED    WORK_HEADING+(HEAD_DATE-HEADING)(L'HEAD_DATE),WORK_DATE
         UNPK  WORK_UNPACK(7),WORK_TIME(4)
         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+0(2),WORK_UNPACK+0
         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+3(2),WORK_UNPACK+2
         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+6(2),WORK_UNPACK+4
         MVI   WORK_HEADING+(HEAD_TIME-HEADING)+2,C':'
         MVI   WORK_HEADING+(HEAD_TIME-HEADING)+5,C':'
         AP    WORK_PAGE,P1
         ED    WORK_HEADING+(HEAD_PAGE-HEADING)(L'HEAD_PAGE),WORK_PAGE
         PUT   WORK_DCB,WORK_HEADING
         MVI   WORK_HEADING,C' '
         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING
         ZAP   WORK_LINE,P1
         TM    WORK_FLAGS,$WORK_TRACE
         BOR   R10
         LA    R1,((L'WORK_PRINT_DATA-MSG04L)/(FLDL+5))
         LA    R15,WORK_HEADING+(MSG04_DATA-MSG04)+1
HEAD0010 DS    0H
         MVC   0(FLD_HEADL,R15),FLD_HEAD
         LA    R15,FLD_HEADL+5(R15)
         BCT   R1,HEAD0010
         PUT   WORK_DCB,WORK_HEADING
         MVI   WORK_HEADING,C' '
         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING
         AP    WORK_LINE,P1
         BR    R10
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOSNAP
         MVC   SPF_MSG1(MSG02L),MSG02
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE CALLER'S REGS
         SR    R15,R15                        ALWAYS A GOOD RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DCBI     DCB   DDNAME=LIBSNAP,                                         +
               DSORG=PS,                                               +
               LRECL=133,                                              +
               blksize=3990,                                           +
               RECFM=FBA,                                              +
               MACRF=PM
DCBL     EQU   *-DCBI
OPENI    OPEN  (*,OUTPUT),MF=L,MODE=31
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MF=L,MODE=31
CLOSEL   EQU   *-CLOSEI

A_TCOMM_FDEF    DC  A(TCOMM_FDEF)
A_LIBCHAIN_FDEF DC  A(LIBCHAIN_FDEF)

H8          DC    H'8'

P0          DC    P'0'
P1          DC    P'1'
P1900000    DC    P'1900000'
MAXLINE     DC    P'65'
SNAPDDN     DC    CL8'LIBSNAP'

HEXCHAR     EQU   *-C'0'
            DC    C'0123456789ABCDEF'

HEADING     DS    0C
            DC    C'1'
HEAD_DATE   DC    X'40212020204B202020'
            DC    CL2' '
HEAD_TIME   DS    CL8' '
            DC    CL29' '
            DC    C'LIBRARIAN SNAP DUMP'
            DC    CL40' '
HEAD_PAGE   DC    X'402020202120'
HEADINGL    EQU   *-HEADING

FLD_HEAD    DC    CL16'LABEL'
            DC    CL2' '
            DC    CL4'TYPE'
            DC    CL3' '
            DC    CL3'LEN'
            DC    CL2' '
            DC    CL4'DISP'
            DC    CL3' '
            DC    CL7'VALUE'
FLD_HEADL   EQU   *-FLD_HEAD

MSG01       DS    0C
            DC    CL11'LIBTSNAP01I'
            DC    C'SNAP DUMP complete'
MSG01L      EQU   *-MSG01
MSG02       DS    0C
            DC    CL11'LIBTSNAP02E'
            DC    C'LIBSNAP DD not present'
MSG02L      EQU   *-MSG02


MSG03       DC    CL11'LIBTSNAP03I'
            DC    C' '
MSG03_BLOCK DC    CL8' '
            DC    C' AT '
MSG03_ADDR  DC    CL8' '
MSG03L      EQU   *-MSG03

MSG04       DC    CL11'LIBTSNAP04I'
            DC    C' '
MSG04_DATA  DS    C
MSG04L      EQU   *-MSG04

MSG05       DC    CL11'LIBTSNAP05I'
            DC    CL10' '
            DC    C'-------------  TRACE TABLE ------------'
MSG05L      EQU   *-MSG05

MSG06       DS    0C
            DC    C'          '
MSG06_CUR   DC    CL11' '
            DC    CL03' '
MSG06_TCB   DC    CL06' '
            DC    CL03' '
MSG06_MOD   DC    CL05' '
            DC    CL03' '
MSG06_ID    DC    CL08' '
            DC    CL03' '
MSG06_D1    DC    CL08' '
            DC    C' '
MSG06_D1X   DC    CL16' '
            DC    CL03' '
MSG06_D2    DC    CL08' '
            DC    C' '
MSG06_D2X   DS    CL16' '
            DC    C' '
MSG06L      EQU   *-MSG06

*-------------------  0 1 2 3 4 5 6 7 8 9 A B C D E F  --------------*
PRINTABLE DS    0C
          DC    XL16'40404040404040404040404040404040'   x'00' - X'0F'
          DC    XL16'40404040404040404040404040404040'   X'10' - X'1F'
          DC    XL16'40404040404040404040404040404040'   X'20' - X'2F'
          DC    XL16'40404040404040404040404040404040'   X'30' - X'3F'
          DC    XL16'404040404040404040404A4B4C4D4E4F'   X'40' - X'4F'
          DC    XL16'504040404040404040405A5B5C5D5E5F'   X'50' - X'5F'
          DC    XL16'60614040404040404040406B6C6D6E6F'   X'60' - X'6F'
          DC    XL16'404040404040404040407A7B7C7D7E7F'   X'70' - X'7F'
          DC    XL16'40404040404040404040408B8C8D8E8F'   X'80' - X'8F'
          DC    XL16'40404040404040404040409B9C9D9E9F'   X'90' - X'9F'
          DC    XL16'4040404040404040404040ABACADAEAF'   X'A0' - X'AF'
          DC    XL16'4040404040404040404040BBBCBDBEBF'   X'B0' - X'BF'
          DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'   X'C0' - X'CF'
          DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'   X'D0' - X'DF'
          DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'   X'E0' - X'EF'
          DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'   X'F0' - X'FF'
          LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORK_AREA        DSECT
                 LIBSAVE  DSECT=NO
WORK_DWORD       DS   D
WORK_FMT_SAVE    DS   16F
WORK_DCB         DS   0F,(DCBL)X
WORK_OPEN        DS   0F,(OPENL)X
WORK_CLOSE       DS   0F,(CLOSEL)X

WORK_FMT_BASE    DS   F
WORK_FMT_FDEF    DS   F

WORK_TIME_DATE   DS   0F
WORK_TIME        DS   XL4
WORK_DATE        DS   PL4

WORK_UNPACK      DS   CL10
                 DS   X

WORK_PAGE        DS   PL3
WORK_LINE        DS   PL3

WORK_PRINT_SPACE DS   C
WORK_PRINT       DS   0CL133
WORK_PRINT_CC    DS   C
WORK_PRINT_DATA  DS   CL132

WORK_HEADING     DS   CL133

WORK_FLAGS       DS   X
$WORK_TRACE      EQU  X'80'

WORKAREA_L       EQU  *-WORK_AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FDEF        DSECT
FDEF_NAME   DS    CL16                 FIELD NAME
FDEF_DISP   DS    AL2                  DISPLACEMENT TO FIELD
FDEF_TYPE   DS    C                    FIELD TYPE
FDEF_LENGTH DS    AL2                  FIELD LENGTH
FDEFL       EQU   *-FDEF
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FLD         DSECT
FLD_LABEL   DS    CL16'LABEL'
            DS    CL2' '
FLD_TYPE    DS    CL4'TYPE'
            DS    CL2' '
FLD_LENGTH  DS    CL4'LEN'
            DS    CL2' '
FLD_DISP    DS    CL4' '
            DS    CL2' '
FLD_VALUE   DS    CL8'VALUE'
FLDL        EQU   *-FLD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
            TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LIB_CHAIN         DSECT
LIB_CHAIN_EYE     DS   CL8
LIB_CHAIN_NEXT    DS   A
LIB_CHAIN_LENGTH  DS   F
LIB_CHAIN_LIBRARIES DS 0C
LIB_CHAIN_NAME    DS   CL8
LIB_CHAIN_DESC    DS   CL80
LIB_CHAIN_STATUS  DS   X
LIB_CHAIN_PER_LEN EQU  *-LIB_CHAIN_NAME
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               IFGACB AM=VTAM
ACBL           EQU    *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
               IHAPSA LIST=NO
* ------------------------------------------------------------------- *
*              STC common area FDEFs                                  *
* ------------------------------------------------------------------- *
LIBTSNAP       CSECT
TCOMM_FDEF     DS    0C
               FDEF  BASE=LIBTCOMM
               FDEF  COMMDWRD,X,4
               FDEF  COMMDWRD+4,X,4
               FDEF  COMMDXDA
               FDEF  TRFIRST
               FDEF  TRLAST
               FDEF  TRCURR
               FDEF  TRADDR
               FDEF  TRSIZE
               FDEF  ATMAIN
               FDEF  ATDISP
               FDEF  ATDLIB
               FDEF  ATPARM
               FDEF  ATDMEM
               FDEF  ATSTAT
               FDEF  ATVTAM
               FDEF  ATTCP
               FDEF  ATVMGR
               FDEF  ALIBSPFD
               FDEF  AISPLINK
               FDEF  AUX01
               FDEF  COMM_EXLST
               FDEF  COMM_SERVER_HOST_NAME_LENGTH
               FDEF  COMM_SERVER_PORT,X,2
               FDEF  COMM_APPL_NAME_LENGTH,X,2
               FDEF  COMM_APPL_NAME
               FDEF  COMM_SERVER_APPL_ID
               FDEF  COMM_SERVER_HOST_NAME+00,C,8
               FDEF  COMM_SERVER_HOST_NAME+08,C,8
               FDEF  COMM_SERVER_HOST_NAME+16,C,8
               FDEF  COMM_LIBRARY_NAME
               FDEF  COMM_MEMBER_NAME
               FDEF  COMM_VERSION
               FDEF  COMM_SOURCE_RECORDS
               FDEF  COMMBLKN
               FDEF  COMMPRI
               FDEF  COMMSEC
               FDEF  COMM_CONVERSATION_ID
               FDEF  COMM_FLAGS
               FDEF  COMM_RC
               FDEF  COMMRACF,X,1
               FDEF  COMMRACF,C,8
               DC    X'FF'
LIBCHAIN_FDEF  DS    0C
               FDEF  BASE=LIB_CHAIN_NAME
               FDEF  LIB_CHAIN_NAME
               FDEF  LIB_CHAIN_DESC+00,C,8
               FDEF  LIB_CHAIN_DESC+08,C,8
               FDEF  LIB_CHAIN_DESC+16,C,8
               FDEF  LIB_CHAIN_DESC+24,C,8
               FDEF  LIB_CHAIN_DESC+32,C,8
               FDEF  LIB_CHAIN_DESC+40,C,8
               FDEF  LIB_CHAIN_DESC+48,C,8
               FDEF  LIB_CHAIN_DESC+56,C,8
               FDEF  LIB_CHAIN_DESC+64,c,8
               FDEF  LIB_CHAIN_DESC+72,C,8
               FDEF  LIB_CHAIN_STATUS
               DC    X'FF'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD TYPE=DSECT
         COPY    REGEQU
         END     LIBTSNAP
./ ADD NAME=LIBTSTAT 0100-09250-09250-0919-00155-00155-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTSTAT                                              *
*                                                                     *
*  Function:                                                          *
*   Display the status of the STC                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTSTAT CSECT
LIBTSTAT AMODE 31
LIBTSTAT RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTSTAT,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     STAT0000
MODID    DC    CL8'LIBTSTAT'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
STAT0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTSTAT,R13                   DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         ICM   R1,15,SPF_TEXT_ADDR            SPF DYNAMIC AREA ADDRESS
         BZ    STAT0010                       NONE
         L     R0,SPF_TEXT_SIZE
         FREEMAIN RU,                         FREE PREVIOUS AREA       +
               a=(1),                                                  +
               lv=(0)
*---------------------------------------------------------------------*
*        Get STC status info                                          *
*---------------------------------------------------------------------*
STAT0010 DS    0H
         L     R7,COMM_NETWORK_IO_AREA        I/O AREA ADDRESS
         USING NETBLOK,R7                     DEFINE BASE
         MVI   NET_FUNCTION,$NET_GET_STATUS
         LA    R1,NETBLOKL
         STH   R1,NET_LENGTH                  SET LENGTH
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   STAT0020
         ITRACE ID=VTAMSEND
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     STAT0030
STAT0020 DS    0H
         ITRACE ID=IP_SEND
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
STAT0030 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         BALR  R14,R15                        SEND
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   STAT0040
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     STAT0050
STAT0040 DS    0H
         ITRACE ID=IP_RECV
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
STAT0050 DS    0H
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         BALR  R14,R15                        RECEIVE
         TM    XTRFLAG,$XTRON                 EXTERNAL TRACE ON
         BNO   STAT0060                       NO
         PUT   XTRACE,NETBLOK
STAT0060 DS    0H
         LA    R1,NET_DATA                    DATA ADDRESS
         ST    R1,SPF_TEXT_ADDR               TEXT'S ADDRESS
         SR    R2,R2                          CLEAR REGISTER
         SR    R3,R3                          CLEAR REGISTER
         ICM   R3,3,NET_LENGTH                LENGTH
         SH    R3,=Y(NETBLOKL)                DATA LENGTH
         ST    R3,SPF_TEXT_SIZE               LENGTH FOR DISPLAY
         D     R2,F80                         NUMBER OF DATA LINES
         ST    R3,SPF_TEXT_LINES              SET NUMBER OF LINES
         MVC   SPF_TEXT_LINE_LENGTH,F80
         XC    SPF_TEXT_OFFSET,SPF_TEXT_OFFSET
         XC    SPF_TEXT_RELATIVE_LINE,SPF_TEXT_RELATIVE_LINE
         MVC   SPF_PANEL,STATPANL             SET PANEL NAME
         L     R15,ATDISP                     DISPLAY ENTRY POINT
         BALR  R14,R15                        DISPLAY THE DATA
         STH   R15,DXDRC
         LTR   R15,R15                        RC = 0?
         BZ    STAT0010                       YES, GET INFO AGAIN
*---------------------------------------------------------------------*
*        Clear the SPF text storage address and size.                 *
*        The area is not FREEMAIN'd because LIBUSTAT returns          *
*        the data already formatted in the network I/O area.          *
*        We just set SPF_TEXT_ADDR to the address of NET_DATA.        *
*        The network I/O area will be FREEMAIN'd when LIBTMAIN exits. *
*---------------------------------------------------------------------*
         XC    SPF_TEXT_ADDR,SPF_TEXT_ADDR
         XC    SPF_TEXT_SIZE,SPF_TEXT_SIZE
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
EXIT0010 DS    0H
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)                    RESTORE R14
         LH    R15,DXDRC
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTSTAT)                    DISPLACEMENT TO WORK AREA
F80      DC    F'80'                          CONSTANT
STATPANL DC    CL8'STATPANL'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDTSTAT DSECT
         LIBSAVE  DSECT=NO
         VTAMREQ  DSECT=NO
DXDRC    DS       H
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD  TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBRECD  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      LIBTSTAT
./ ADD NAME=LIBTTCP  0100-09250-09250-0919-00329-00329-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTTCP - TCP/IP FUNCTIONS                            *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTTCP  CSECT
LIBTTCP  AMODE 31
LIBTTCP  RMODE ANY
         STM   R14,R12,12(R13)                 SAVE REGISTERS
         LR    R12,R15                         SET BASE REGISTER
         USING LIBTTCP,R12                     DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                    DEFINE COMMON AREA BASE
         B     INIT0000
MODID    DC    CL8'LIBTTCP'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LR    R10,R1                          COPY PARM BLOCK ADDRESS
         USING VTAMREQ,R10                     DEFINE BASE
         L     R1,COMMDXDA                     DXD AREA BASE
         A     R1,DXDSTART                     PLUS DISPLACEMENT
         ST    R13,4(R1)                       CHAIN CALLER'S SAVE AREA
         ST    R1,8(R13)                       CHAIN OUR SAVE AREA
         LR    R13,R1                          COPY DXD AREA ADDRESS
         USING DXDTTCP,R13                     DEFINE DXD AREA BASE
         CLC   DXDID,MODID                     DXD AREA INITIALIZED?
         BE    INIT0010                        YES
         ITRACE ID=INIT
         MVC   DXDID,MODID                     DXD AREA INITIALIZED
         XC    DXD_LENGTH,DXD_LENGTH
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
INIT0010 DS    0H
         L     R5,COMM_NETWORK_IO_AREA
         USING NETBLOK,R5
         CLI   VTAM_COMMAND,$VTAM_OPEN         OPEN?
         BE    OPEN0000                        YES
         CLI   VTAM_COMMAND,$VTAM_CLOSE        CLOSE?
         BE    CLOSE000                        YES
         CLI   VTAM_COMMAND,$VTAM_RECEIVE      RECEIVE?
         BE    RECV0000                        YES
         CLI   VTAM_COMMAND,$VTAM_SEND         SEND?
         BE    SEND0000                        YES
         ABEND 1,DUMP,,USER
*---------------------------------------------------------------------*
*        Initialize the TCP/IP environment                            *
*---------------------------------------------------------------------*
OPEN0000 DS    0H
         ITRACE ID=INITAPI
         MVC   DXD_TCPIP_FUNCTION,=CL16'INITAPI'
         EZASMI TYPE=INITAPI,                                          +
               MAXSNO=DXD_MAX_SOCKET,                                  +
               SUBTASK=MODID,                                          +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +
               ASYNC='NO',                                             +
               ERROR=ERR0010,                                          +
               TASK=DXD_TCPIP_TASK
         TM    DXD_TCPIP_RETURN_CODE,X'80'
         BO    ERR0010
         ITRACE ID=SOCKET
         MVC   DXD_TCPIP_FUNCTION,=CL16'SOCKET'
         EZASMI TYPE=SOCKET,                                           +
               AF='INET',                                              +
               SOCTYPE='STREAM',                                       +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +
               TASK=DXD_TCPIP_TASK
         TM    DXD_TCPIP_RETURN_CODE,X'80'
         BO    ERR0010
         MVC   DXD_SOCKET,DXD_TCPIP_RETURN_CODE+2
         ITRACE ID=SOCK_NBR,                                           +
               DATA1=DXD_SOCKET
*
*     Setting the port to zero allows TCP/IP to choose any
*     free port number
*
         XC    DXD_SOCKET_STRUCTURE,DXD_SOCKET_STRUCTURE
         MVC   DXD_SOCKET_FAMILY,C_AF_INET
         XC    DXD_SOCKET_PORT,DXD_SOCKET_PORT
         ITRACE ID=BIND
         MVC   DXD_TCPIP_FUNCTION,=CL16'BIND'
         EZASMI TYPE=BIND,                                             +
               S=DXD_SOCKET,                                           +
               NAME=DXD_SOCKET_STRUCTURE,                              +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +
               TASK=DXD_TCPIP_TASK
         TM    DXD_TCPIP_RETURN_CODE,X'80'
         BO    ERR0010
         ITRACE ID=GETHOST
         MVC   DXD_TCPIP_FUNCTION,=CL16'GETHOSTBYNAME'
         EZASMI TYPE=GETHOSTBYNAME,                                    +
               NAMELEN=COMM_SERVER_HOST_NAME_LENGTH,                   +
               NAME=COMM_SERVER_HOST_NAME,                             +
               HOSTENT=DXD_HOSTENT,                                    +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERROR=DXD_TCPIP_ERROR_NUMBER
         ITRACE ID=RC,                                                 +
               DATA1=DXD_TCPIP_RETURN_CODE,                            +
               DATA2=DXD_TCPIP_ERROR_NUMBER
         TM    DXD_TCPIP_RETURN_CODE,X'80'
         BO    ERR0010
         L     R1,DXD_HOSTENT
         USING HOSTENT,R1
         L     R2,HOSTENT_IP_LIST
         L     R3,0(R2)
         XC    DXD_PEER,DXD_PEER
         MVC   DXD_PEER_AF,C_AF_INET
         MVC   DXD_PEER_PORT,COMM_SERVER_PORT
         MVC   DXD_PEER_IP_ADDRESS,0(R3)
         ITRACE ID=CONNECT,                                            +
               DATA1=DXD_PEER+00,                                      +
               DATA2=DXD_PEER+08
         MVC   DXD_TCPIP_FUNCTION,=CL16'CONNECT'
         EZASMI TYPE=CONNECT,                                          +
               S=DXD_SOCKET,                                           +
               NAME=DXD_PEER,                                          +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERRNO=DXD_TCPIP_ERROR_NUMBER
         TM    DXD_TCPIP_RETURN_CODE,X'80'
         BO    ERR0010
         B     EXIT0000
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
RECV0000 DS    0H
         ITRACE ID=READ
         MVC   DXD_TCPIP_FUNCTION,=CL16'READ'
         EZASMI TYPE=READ,                                             +
               S=DXD_SOCKET,                                           +
               NBYTE=IOSIZE,                                           +
               BUF=NETBLOK,                                            +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERRNO=DXD_TCPIP_ERROR_NUMBER
         ICM   R1,15,DXD_TCPIP_RETURN_CODE
         BM    ERR0010
         STCM  R1,3,NET_LENGTH                RETURN LENGTH
         B     EXIT0000                       EXIT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
SEND0000 DS    0H
         ITRACE ID=WRITE
         MVC   DXD_TCPIP_FUNCTION,=CL16'WRITE'
         MVC   DXD_LENGTH+2(2),NET_LENGTH
         EZASMI TYPE=WRITE,                                            +
               S=DXD_SOCKET,                                           +
               NBYTE=DXD_LENGTH,                                       +
               BUF=NETBLOK,                                            +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERRNO=DXD_TCPIP_ERROR_NUMBER
         TM    DXD_TCPIP_RETURN_CODE,X'80'
         BO    ERR0010
         B     EXIT0000                       EXIT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
CLOSE000 DS    0H
         ITRACE ID=CLOSE
         MVI   NET_FUNCTION,$NET_CLOSE
         LA    R1,NETBLOKL
         STCM  R1,3,NET_LENGTH
         MVC   DXD_LENGTH+2(2),NET_LENGTH
         ITRACE ID=SEND_CLO
         MVC   DXD_TCPIP_FUNCTION,=CL16'CLOSING WRITE'
         EZASMI TYPE=WRITE,                                            +
               S=DXD_SOCKET,                                           +
               NBYTE=DXD_LENGTH,                                       +
               BUF=NETBLOK,                                            +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERRNO=DXD_TCPIP_ERROR_NUMBER
         ITRACE ID=CLS_SOCK
         MVC   DXD_TCPIP_FUNCTION,=CL16'CLOSE'
         EZASMI TYPE=CLOSE,                                            +
               S=DXD_SOCKET,                                           +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERRNO=DXD_TCPIP_ERROR_NUMBER
         ITRACE ID=TERMAPI
         MVC   DXD_TCPIP_FUNCTION,=CL16'TERMAPI'
         EZASMI TYPE=TERMAPI,                                          +
               TASK=DXD_TCPIP_TASK
         TM    DXD_TCPIP_RETURN_CODE,X'80'
         BO    ERR0010
         B     EXIT0000                       AND EXIT
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=TCP_ERR,                                            +
               DATA1=DXD_TCPIP_FUNCTION,                               +
               DATA2=DXD_TCPIP_ERROR_NUMBER
         OI    COMM_FLAGS,$ABORT
         GETMAIN RU,                                                   +
               LV=MSG02L,                     <-- LONGEST MESSAGE      +
               LOC=BELOW
         LR    R3,R1                          COPY STORAGE ADDRESS

         MVC   0(MSG01L,R3),MSG01
         TPUT  (R3),MSG01L

         MVC   0(MSG02L,R3),MSG02
         MVC   MSG02_FNC-MSG02(L'MSG02_FNC,R3),DXD_TCPIP_FUNCTION
         TPUT  (R3),MSG02L

         MVC   0(MSG03L,R3),MSG03
         UNPK  MSG03_RC-MSG03(9,R3),DXD_TCPIP_RETURN_CODE(5)
         TR    MSG03_RC-MSG03(8,R3),HEXCHAR
         MVI   MSG03_RC-MSG03+8(R3),C' '
         TPUT  (R3),MSG03L

         MVC   0(MSG04L,R3),MSG04
         UNPK  MSG04_ERR-MSG04(9,R3),DXD_TCPIP_ERROR_NUMBER(5)
         TR    MSG04_ERR-MSG04(8,R3),HEXCHAR
         MVI   MSG04_ERR-MSG04+8(R3),C' '
         TPUT  (R3),MSG04L

         FREEMAIN RU,                                                  +
               A=(R3),                                                 +
               LV=MSG02L
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LH    R15,DXD_RC                     SET RETURN CODE
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART  DC    Q(DXDTTCP)                    DISPLACEMENT TO DXD AREA
IOSIZE    DC    A(COMMIOSZ)
H0        DC    H'0'
X000001   DC    X'00000001'
C_AF_INET DC    X'0002'

HEXCHAR   EQU   *-C'0'
          DC    C'0123456789ABCDEF'

MSG01     DC    CL11'LIBTTCP01E '
          DC    C'TCP/IP error'
MSG01L    EQU   *-MSG01

MSG02     DC    Cl11'LIBTTCP02I '
          DC    C'Function:     '
MSG02_FNC DC    CL16' '
MSG02L    EQU   *-MSG02

MSG03     DC    CL11'LIBTTCP03I '
          DC    C'Return code:  '
MSG03_RC  DC    CL8' '
          DC    C' '
MSG03L    EQU   *-MSG03

MSG04     DC    CL11'LIBTTCP04I '
          DC    C'Error number: '
MSG04_ERR DC    CL8' '
          DC    C' '
MSG04L    EQU   *-MSG04
          LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDTTCP                  DSECT
                         LIBSAVE DSECT=NO
DXD_HOSTENT              DS    A
DXD_TCPIP_RETURN_CODE    DS    F
DXD_TCPIP_ERROR_NUMBER   DS    F
DXD_LENGTH               DS    F

DXD_MAX_SOCKET           DS    H
DXD_SOCKET               DS    H
DXD_RC                   DS    H

DXD_PEER                 DS    0F,0XL16
DXD_PEER_AF              DS    XL2
DXD_PEER_PORT            DS    XL2
DXD_PEER_IP_ADDRESS      DS    F
DXD_PEER_RESERVED        DS    XL8

                         DS    0F
DXD_SOCKET_STRUCTURE     DS    0XL16
DXD_SOCKET_FAMILY        DS    AL2           FAMILY (ALWAYS = 2)
DXD_SOCKET_PORT          DS    XL2           PORT NUMBER
DXD_SOCKET_CLIENT_IP     DS    XL4           CLIENT'S IP ADDRESS
                         DS    XL8           RESERVED

DXD_TCPIP_FUNCTION       DS    CL16
DXD_TCPIP_TASK           EZASMI TYPE=TASK,STORAGE=CSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
HOSTENT                  DSECT
HOSTENT_HOSTNAME_ADDRESS DS  A
HOSTENT_ALIAS_LIST       DS  A
HOSTENT_FAMILY           DS  XL4
HOSTENT_IP_LIST_LENGTH   DS  XL4
HOSTENT_IP_LIST          DS  A
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         EZASMI   TYPE=GLOBAL,STORAGE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VTAMREQ  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBTTCP
./ ADD NAME=LIBTUNDO 0100-09250-09250-0919-00176-00176-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTUNDO                                              *
*                                                                     *
*  Function:                                                          *
*   Reset CHECK-OUT status                                            *
*                                                                     *
*   At times a user may check-out a member and never make any         *
*   updates.  They can either check-in the member or 'undo'           *
*   the check-out.  Only the user that has the member checked-out     *
*   may 'UNDO' the check-out status.  ADMINs can use the "A"          *
*   line command.                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTUNDO CSECT
LIBTUNDO AMODE 31
LIBTUNDO RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING PSA,R0
         USING LIBTUNDO,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     INIT0000
MODID    DC    CL8'LIBTUNDO'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTUNDO,R13                   DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
         XC    DXD_RC,DXD_RC
*---------------------------------------------------------------------*
*        Reset the member's CHECK_OUT status                          *
*---------------------------------------------------------------------*
         ITRACE ID=UNDO
         MVC   SPF_COMM1,COMM_BLANKS
         MVC   SPF_COMM2,COMM_BLANKS
         MVC   SPF_COMM3,COMM_BLANKS
         MVC   SPF_COMM4,COMM_BLANKS
         MVC   SPF_COMM5,COMM_BLANKS
         MVI   NET_FUNCTION,$NET_CHECK_IN_AUTH
         MVI   NET_FUNCTION,$NET_UNDO         SET FUNCTION
         LA    R1,NET_UNDO_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK        OK?
         BE    EXIT0000                       YES
         B     ERR0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         ITRACE ID=IP_SEND,                                            +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0010
         ITRACE ID=VTAMSEND
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0020
SEND0010 DS    0H
         ITRACE ID=IP_SEND
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   SPF_MSG1,NET_MSG_1
         MVC   SPF_MSG2,NET_MSG_2
         MVC   SPF_MSG3,NET_MSG_3
         MVC   SPF_MSG4,NET_MSG_4
         MVC   SPF_MSG5,NET_MSG_5
         MVI   DXD_RC+1,X'12'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR PRIMARY COMMAND
         LH    R15,DXD_RC                     SET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTUNDO)                    DISPLACEMENT TO WORK AREA

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDTUNDO DSECT
DXD_RC   DS      H
         LIBSAVE DSECT=NO
         VTAMREQ DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 NETBLOK DSECT=YES
NET_LIB_NAME     DS  CL8
NET_MEM_NAME     DS  CL8
NET_MEM_VERSION  DS  XL2
NET_MEM_DOC      DS  0C
NET_UNDO_LENGTH  EQU *-NETBLOK
                 ORG NET_DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBRECD DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB  AM=VTAM
ACBL     EQU     *-IFGACB
         LIBBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBTUNDO
./ ADD NAME=LIBTVER  0100-09250-09250-0919-00225-00225-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTVER                                               *
*                                                                     *
*  Function:                                                          *
*   Create new version                                                *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTVER  CSECT
LIBTVER  AMODE 31
LIBTVER  RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTVER,R12                    DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     INIT0000
MODID    DC    CL8'LIBTVER'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTVER,R13                    DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
         MVC   SPF_ZCMD,COMM_BLANKS           CLEAR THE COMMAND
VER0100  DS    0H
         ITRACE ID=DISPLAY
         MVC   SPF_OPTION,COMM_BLANKS         INITIALIZE THE REPLY
         MVC   SPF_PANEL,VERPANEL             SET PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS
         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS
         ST    R1,DXD_SPF_2                   SET ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDRESS
         BALR  R14,R15                        DISPLAY THE PANEL
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15,                                             +
               DATA2=SPF_OPTION
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE(S)
         MVC   SPF_MSG2,COMM_BLANKS
         MVC   SPF_MSG3,COMM_BLANKS
         MVC   SPF_MSG4,COMM_BLANKS
         MVC   SPF_MSG5,COMM_BLANKS
         LTR   R15,R15                        ZERO?
         BNZ   VER0300                        NO
         CLC   SPF_OPTION,=C'Y   '            CONFIRMED?
         BE    VER0200                        YES
         CLC   SPF_OPTION,=C'YES '            CONFIRMED?
         BE    VER0200                        YES
         CLC   SPF_OPTION,=C'N   '            DON'T CREATE NEW VERSION?
         BE    VER0300                        CORRECT
         CLC   SPF_OPTION,=C'NO  '            DON'T CREATE NEW VERSION?
         BE    VER0300                        CORRECT
         MVC   SPF_MSG1(MSG03L),MSG03
         B     VER0100
VER0200  DS    0H
         ITRACE ID=CHKAUTH
         MVI   NET_FUNCTION,$NET_NEW_VERSION
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         XC    NET_NEW_VERSION,NET_NEW_VERSION
         LA    R1,NET_NEW_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK        SUCCESSFUL?
         BNE   ERR0010                        NO
         MVC   SPF_MSG1(MSG01L),MSG01
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,NET_NEW_VERSION
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    SPF_MSG1+(MSG01_VER-MSG01)(L'MSG01_VER),DXD_DWORD+5
         LA    R15,4                          SET RC
         B     EXIT0000
VER0300  DS    0H
         ITRACE ID=ABORT
         MVC   SPF_MSG1(MSG02L),MSG02
         B     EXIT0000
ERR0010  DS    0H
         MVC   SPF_MSG1,NET_MSG_1
         MVC   SPF_MSG2,NET_MSG_2
         MVC   SPF_MSG3,NET_MSG_3
         MVC   SPF_MSG4,NET_MSG_4
         MVC   SPF_MSG5,NET_MSG_5
         LA    R15,4
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0010
         ITRACE ID=VTAMSEND,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0020
SEND0010 DS    0H
         ITRACE ID=IP_SEND,                                            +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         BALR  R14,R15                        LINK TO LIBTVTAM
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART  DC   Q(DXDTVER)                     DISPLACEMENT TO WORK AREA

DISPLAY   DC   CL8'DISPLAY'

VERPANEL  DC   CL8'VERPANEL'
MSG01     DS   0C
          DC   CL11'LIBTVER01I'
          DC   C'Highest version is now '
MSG01_VER DC   X'402020202120'
MSG01L    EQU  *-MSG01

MSG02     DS   0C
          DC   CL11'LIBTVER02W'
          DC   C'New version aborted'
MSG02L    EQU  *-MSG02
MSG03     DS   0C
          DC   CL11'LIBTVER03E'
          DC   C'Invalid confirmation reply.  Enter Y(es) or N(o)'
MSG03L    EQU  *-MSG03

          LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDTVER       DSECT
              LIBSAVE DSECT=NO

DXD_DWORD     DS      D
DXD_SPF_PARMS DS      0A
DXD_SPF_1     DS      A
DXD_SPF_2     DS      A

              VTAMREQ DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              TCOMM   TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              LIBSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              NETBLOK DSECT=YES
NET_LIB_NAME          DS  CL8
NET_MEM_NAME          DS  CL8
NET_NEW_VERSION       DS  XL2
NET_NEW_LENGTH        EQU *-NETBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              LIBRECD DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              IFGACB  AM=VTAM
ACBL          EQU     *-IFGACB
              LIBBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              DCBD    DSORG=PS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
              IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBTVER
./ ADD NAME=LIBTVIEW 0100-09250-09250-0919-00616-00616-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTVIEW                                              *
*                                                                     *
*  Function:                                                          *
*   View a member.  This function allows a user to obtain a copy      *
*   of a member.  The member does not have to be in "CHECKED IN"      *
*   status.  VIEWing a member does not change the status to           *
*   "CHECKED OUT".                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTVIEW CSECT
LIBTVIEW AMODE 31
LIBTVIEW RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTVIEW,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     INIT0000
MODID    DC    CL8'LIBTVIEW'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         L     R2,COMMDXDA                    WORK AREA BASE
         A     R2,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R2                         COPY WORK AREA ADDRESS
         USING DXDTVIEW,R13                   DEFINE WORK AREA BASE
         L     R10,ALIBSPFD                   SPF DATA ADDRESS
         USING LIBSPFD,R10
         L     R9,COMM_NETWORK_IO_AREA        NETWORK I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
         XC    DXD_AUX01,DXD_AUX01            INIT EXIT ENTRY POINT
*---------------------------------------------------------------------*
*        Verify the user is authorized                                *
*---------------------------------------------------------------------*
         MVI   NET_FUNCTION,$NET_CHECK_VIEW_AUTH
         BAL   R8,SEND0000
         BAL   R8,RECV0000
         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?
         BNE   ERR0020                        NO
         MVC   DXD_SOURCE_RECORDS,NET_SOURCE_RECORDS
         MVC   COMM_SOURCE_RECORDS,NET_SOURCE_RECORDS
*---------------------------------------------------------------------*
*        Display the view panel                                       *
*---------------------------------------------------------------------*
VIEW0000 DS    0H
         ITRACE ID=DISPLAY
         MVC   SPF_PANEL,VPANEL               SET PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS
         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS
         ST    R1,DXD_SPF_2                   SET ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDRESS
         BALR  R14,R15                        DISPLAY THE PANEL
         STH   R15,DXD_DISPLAY_RC             SAVE RETURN CODE
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE
         LTR   R15,R15                        ZERO?
         BNZ   EXIT0000                       NO
*---------------------------------------------------------------------*
*        Determine the output dataset DSORG                           *
*---------------------------------------------------------------------*
         MVC   SUB0001_PARM_DSN,SPF_USER_DSN
         LA    R1,SUB0001_PARM_LIST           SUB0001 PARM LIST ADDRESS
         L     R15,VSUB0001                   SUB0001 ENTRY POINT
         ITRACE ID=CALLSUB1,                                           +
               RDATA1=R1,                                              +
               RDATA2=R15
         BALR  R14,R15                        CALL SUB0001
         ITRACE ID=DSORG,                                              +
               DATA1=SUB0001_PARM_DSORG
         CLI   SUB0001_PARM_DSORG,C'S'
         BE    VIEW0010                       SEQUENTIAL
         CLI   SUB0001_PARM_DSORG,C'P'
         BE    VIEW0020                       PARTITIONED
         CLI   SUB0001_PARM_DSORG,C'X'
         BE    VIEW0080                       UNCATALOGED
         MVC   SPF_MSG1(MSG01L),MSG01
         B     VIEW0000                       RE-SEND WITH MESSAGE
VIEW0010 DS    0H
         ITRACE ID=SEQ
         CLC   SPF_USER_MEMBER,COMM_BLANKS
         BE    VIEW0040
         MVC   SPF_MSG1(MSG03L),MSG03
         B     VIEW0000                       RE-SEND WITH MESSAGE
VIEW0020 DS    0H
         ITRACE ID=PDS
         CLC   SPF_USER_MEMBER,COMM_BLANKS
         BNE   VIEW0030
         ITRACE ID=NOMEM
         MVC   SPF_MSG1(MSG04L),MSG04
         B     VIEW0000                       RE-SEND WITH MESSAGE
VIEW0030 DS    0H
         OI    DXD_FLAG,$NO_MEMBER            NO MEMBER
         BAL   R8,DAIR0100                    ALLOCATE EXISTING FILE
         NI    DXD_FLAG,255-$NO_MEMBER
         ITRACE ID=VERMEM                     VERIFYING MEMBER EXISTS
         GETMAIN RU,                                                   +
               LV=PODCBL,                                              +
               LOC=BELOW
         LR    R3,R1                          SAVE ADDRESS
         MVC   0(PODCBL,R3),PODCBI            INITIALIZE THE DCB
         GETMAIN RU,                                                   +
               LV=OPENL,                                               +
               LOC=BELOW
         LR    R2,R1                          SAVE ADDRESS
         MVC   0(OPENL,R2),OPENI              INITIALIZE OPEN
         OPEN  ((R3),INPUT),                                           +
               MODE=31,                                                +
               MF=(E,(R2))
         FIND  (R3),                                                   +
               SPF_USER_MEMBER,                                        +
               D
         STH   R15,DXD_FIND_RC
         MVC   0(CLOSEL,R2),CLOSEI
         CLOSE ((R3)),                                                 +
               MF=(E,(R2)),                                            +
               MODE=31
         FREEMAIN RU,                                                  +
               A=(R2),                                                 +
               LV=OPENL
         FREEMAIN RU,                                                  +
               A=(R3),                                                 +
               LV=PODCBL
         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)
         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS
         L     R15,VSUB0004
         BALR  R14,R15
         OC    DXD_FIND_RC,DXD_FIND_RC
         BNZ   VIEW0070                       MEMBER DOES NOT EXIST
* ------------------------------------------------------------------- *
*                                                                     *
*    The output dataset (or PDS member) already exists.               *
*                                                                     *
* ------------------------------------------------------------------- *
VIEW0040 DS    0H
         ITRACE ID=EXISTS
         TM    SUB0001_PARM_RECFM,DS1RECFV
         BO    VIEW0050
         CLC   SUB0001_PARM_LRECL,H80
         BE    VIEW0060
         MVC   SPF_MSG1(MSG10L),MSG10
         B     VIEW0000
VIEW0050 DS    0H
         MVC   SPF_MSG1(MSG09L),MSG09
         B     VIEW0000
* ------------------------------------------------------------------- *
*                                                                     *
*    Make sure the user wants to replace/over-write it.               *
*                                                                     *
* ------------------------------------------------------------------- *
VIEW0060 DS    0H
         CLC   SPF_OPTION,=C'YES '            REPLACE/OVER-WRITE?
         BE    VIEW0070                       YES
         CLC   SPF_OPTION,=C'Y   '            LAZY PERSON?
         BE    VIEW0070                       YES
         MVC   SPF_MSG1(MSG05L),MSG05         SET MESSAGE
         B     VIEW0000                       RE-ISSUE WITH MESSAGE
* ------------------------------------------------------------------- *
VIEW0070 DS    0H
         BAL   R8,DAIR0100                    ALLOCATE OUTPUT DATASET
         B     VIEW0100
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
VIEW0080 DS    0H
         CLC   SPF_USER_MEMBER,COMM_BLANKS
         BE    VIEW0090
         MVC   SPF_MSG1(MSG02L),MSG02
VIEW0090 DS    0H
         ITRACE ID=DISPLAY2
         MVC   SPF_PANEL,ALOPANEL             SET PANEL NAME
         LA    R1,DISPLAY                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS
         LA    R1,SPF_PANEL                   PANEL NAME ADDRESS
         ST    R1,DXD_SPF_2                   SET ADDRESS
         OI    DXD_SPF_2,X'80'
         LA    R1,DXD_SPF_PARMS               PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF INTERFACE ADDRESS
         BALR  R14,R15                        DISPLAY THE PANEL
         ITRACE ID=DISPRC,                                             +
               RDATA1=R15
         MVC   SPF_MSG1,COMM_BLANKS           CLEAR MESSAGE
         BAL   R8,DAIR0200
*---------------------------------------------------------------------*
*                                                                     *
*     The output dataset (or PDS member) has been allocated.          *
*                                                                     *
*     OPEN the output dataset.                                        *
*                                                                     *
*---------------------------------------------------------------------*
VIEW0100 DS    0H
         ITRACE ID=OPENOUT
         GETMAIN RU,                                                   +
               LV=PSDCBL,                                              +
               LOC=BELOW
         LR    R7,R1                          COPY DCB ADDRESS
         USING IHADCB,R7
         MVC   0(PSDCBL,R7),PSDCBI            INITIALIZE DCB
         TM    DXD_FLAG,$SET_BLKSIZE          SET BLOCK SIZE?
         BNO   VIEW0110                       NO
         MVC   DCBBLKSI,H4000
VIEW0110 DS    0H
         GETMAIN RU,                                                   +
               LV=OPENL,                                               +
               LOC=BELOW
         LR    R6,R1                          COPY ADDRESS
         MVC   0(OPENL,R6),OPENI              INITIALIZE PARM LIST
         OPEN  ((R7),OUTPUT),                                          +
               MF=(E,(R6)),                                            +
               MODE=31
*---------------------------------------------------------------------*
*                                                                     *
*     GETMAIN the output dataset I/O area and initialize the          *
*     parameter list for the de-compression subroutine.               *
*                                                                     *
*---------------------------------------------------------------------*
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=ANY
         ST    R1,UX01_EXPANDED_BUFFER
         LA    R1,DXD_EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,NET_DATA
         ST    R1,UX01_COMPRESSED_BUFFER
         LA    R1,DXD_COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
         OC    DXD_AUX01,DXD_AUX01
         BNZ   VIEW0120
         LOAD  EP=LIBUX01
         ST    R0,DXD_AUX01
*---------------------------------------------------------------------*
*     Get source from library, de-compress, write to output dataset   *
*---------------------------------------------------------------------*
VIEW0120 DS    0H
         ITRACE ID=GETSRC
         MVI   NET_FUNCTION,$NET_VIEW_SOURCE
         BAL   R8,SEND0000                    SEND
         BAL   R8,RECV0000                    RECEIVE
         CLI   NET_RETURN_CODE,$NET_ERROR
         BE    ERR0010                        YES
         CLI   NET_RETURN_CODE,$NET_EOF
         BE    VIEW0200                       YES
         ITRACE ID=DECOMPRESS
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,NET_LENGTH                LENGTH OF DATA
         SH    R1,=Y(NETBLOKL)                MINUS HEADER LENGTH
         ST    R1,DXD_COMPRESSED_LENGTH       LENGTH OF COMPRESSED DATA
         L     R4,DXD_SOURCE_RECORDS          NUMBER OF SOURCE RECORDS
         CH    R4,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?
         BL    VIEW0130                       NO
         LH    R4,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER
VIEW0130 DS    0H                             CLEAR FOR RECORD COUNT
         ST    R4,DXD_CURRENT_RECORDS         NUMBER IN CURRENT BUFFER
         L     R1,DXD_SOURCE_RECORDS          NUMBER OF RECORDS LEFT
         SR    R1,R4                          MINUS NUMBER IN BUFFER
         ST    R1,DXD_SOURCE_RECORDS          SAVE REMAINDER
         MH    R4,H80                         NUMBER * LENGTH
         ST    R4,DXD_EXPANDED_LENGTH         SET LENGTH
         MVI   UX01_FUNCTION,$UX01_DECOMPRESS
         LA    R1,UX01_PARMS
         L     R15,DXD_AUX01                  USER EXIT 1 ENTRY POINT
         BALR  R14,R15                        ALLOW DECOMPRESSION
         L     R2,UX01_EXPANDED_BUFFER        BUFFER ADDRESS
         L     R4,DXD_CURRENT_RECORDS         NUMBER OF RECORDS
         ITRACE ID=USERPUT,                                            +
               RDATA1=R4                      NUMBER OF RECORDS
VIEW0140 DS    0H
         PUT   (R7),(R2)                      WRITE TO USER'S DATA SET
         LA    R2,80(R2)                      NEXT RECORD
         BCT   R4,VIEW0140                    LOOP
         ITRACE ID=BUFFDONE                   BUFFER HAS BEEN WRITTEN
         B     VIEW0120                       ASK FOR NEXT BLOCK
VIEW0200 DS    0H
         ITRACE ID=EOF
         MVC   0(CLOSEL,R6),CLOSEI
         CLOSE ((R7)),                                                 +
               MF=(E,(R6)),                                            +
               MODE=31
         FREEMAIN RU,                                                  +
               A=(R7),                                                 +
               LV=PSDCBL
         FREEMAIN RU,                                                  +
               A=(R6),                                                 +
               LV=OPENL
         L     R1,UX01_EXPANDED_BUFFER        COMPRESS INPUT BUFFER
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0100 DS    0H
         ITRACE ID=DAIRALE
         XC    DAIRREQ(DAIRL),DAIRREQ
         MVI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING DATASET
         MVC   DAIR_DD,LIBTEMP                SET DDNAME
         MVC   DAIR_DSN,SPF_USER_DSN
         MVC   DAIR_MEMBER,COMM_BLANKS        CLEAR MEMBER NAME
         TM    DXD_FLAG,$NO_MEMBER            ALLOCATE MEMBER?
         BO    DAIR0210                       NO
         MVC   DAIR_MEMBER,SPF_USER_MEMBER
         B     DAIR0210
* ------------------------------------------------------------------- *
DAIR0200 DS    0H
         ITRACE ID=DAIR_NEW                   ALLOCATE NEW DATASET
         OI    DXD_FLAG,$SET_BLKSIZE
         XC    DAIRREQ(DAIRL),DAIRREQ
         MVI   DAIR_CMD,$DAIR_NEW             ALLOCATE NEW
         MVC   DAIR_DD,LIBTEMP                SET DDNAME
         MVC   DAIR_DSN,SPF_USER_DSN
         MVC   DAIR_MEMBER,SPF_USER_MEMBER
         MVC   DAIRUNIT,SPF_UNIT
         MVC   DAIRBLKN,COMMBLKN              SET BLOCK LENGTH
         MVC   DAIRPRI,COMMPRI                SET PRIMARY QUANTITY
         MVC   DAIRSEC,COMMSEC                SET SECONDARY QUANTITY
         ITRACE ID=SPACE,                                              +
               DATA1=COMMPRI,                                          +
               DATA2=COMMSEC
* ------------------------------------------------------------------- *
DAIR0210 DS    0H
         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS
         L     R15,VSUB0004
         BALR  R14,R15
         ITRACE ID=DAIR_R15,                                           +
               DATA1=DAIR_R15
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BZR   R8                             YES
DAIR0230 DS    0H
         ITRACE ID=DAIRFAIL
         MVC   SPF_MSG1(MSG06L),MSG06
         MVC   SPF_MSG2(MSG07L),MSG07
         UNPK  DXD_UNPACK(5),DAIR_R15(3)
         MVZ   DXD_UNPACK(4),HEXZERO
         TR    DXD_UNPACK(4),HEXCHAR
         MVC   SPF_MSG2+(MSG07R15-MSG07)(L'MSG07R15),DXD_UNPACK
         UNPK  DXD_UNPACK(5),DAIR_ERROR(3)
         MVZ   DXD_UNPACK(4),HEXZERO
         TR    DXD_UNPACK(4),HEXCHAR
         MVC   SPF_MSG2+(MSG07ERR-MSG07)(L'MSG07ERR),DXD_UNPACK
         UNPK  DXD_UNPACK(5),DAIR_INFO(3)
         MVZ   DXD_UNPACK(4),HEXZERO
         TR    DXD_UNPACK(4),HEXCHAR
         MVC   SPF_MSG2+(MSG07INFO-MSG07)(L'MSG07INFO),DXD_UNPACK
         L     R15,VDAIRMSG
         USING DAIR_MSG,R15                   DEFINE BASE
DAIR0240 DS    0H
         CLI   0(R15),X'FF'                   END OF TABLE?
         BER   R8                             YES, NO MORE INFO
         CLC   DAIR_MSG_CODE,DAIR_R15
         BE    DAIR0250                       FOUND IT
         A     R15,DAIR_MSG_LENGTH            LENGTH OF THIS ENTRY
         B     DAIR0240
DAIR0250 DS    0H
         LH    R14,DAIR_MSG_NBR               NBR OF LINES OF MESSAGE
         CH    R14,H3                         MORE THAN WE CAN DISPLAY?
         BNH   DAIR0260                       NO
         LH    R14,H3                         LIMIT TO 3 LINES
DAIR0260 DS    0H
         LA    R1,DAIR_MSG_TEXT               FIRST LINE OF TEXT
         LA    R2,SPF_MSG3                    FIRST MSG (ACTUALLY MSG3)
DAIR0270 DS    0H
         MVC   0(L'SPF_MSG3_ID,R2),MSG08ID
         MVC   10(L'SPF_MSG3_TEXT,R2),0(R1)
         LA    R1,L'DAIR_MSG_TEXT(R1)
         LA    R2,L'SPF_MSG3(R2)
         BCT   R14,DAIR0270
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         MVC   NET_LIB_NAME,COMM_LIBRARY_NAME SET LIBRARY NAME
         MVC   NET_MEM_NAME,COMM_MEMBER_NAME  SET MEMBER NAME
         MVC   NET_MEM_VERSION,COMM_VERSION   SET VERSION
         LA    R1,NET_CHECK_OUT_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   SEND0010
         ITRACE ID=VTAMSEND,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     SEND0020
SEND0010 DS    0H
         ITRACE ID=IP_SEND,                                            +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
SEND0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_SEND        SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         BALR  R14,R15                        LINK TO LIBTVTAM
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         OC    COMM_SERVER_PORT,COMM_SERVER_PORT
         BNZ   RECV0010
         ITRACE ID=VTAMRECV
         L     R15,ATVTAM                     LIBTVTAM ENTRY POINT
         B     RECV0020
RECV0010 DS    0H
         ITRACE ID=IP_READ
         L     R15,ATTCP                      LIBTTCP ENTRY POINT
RECV0020 DS    0H
         MVI   VTAM_COMMAND,$VTAM_RECEIVE     SET COMMAND
         LA    R1,VTAMREQ                     VTAM REQUEST BLOCK ADDR
         BALR  R14,R15                        LINK TO LIBTVTAM
         ITRACE ID=RECEIVED,                                           +
               DATA1=NET_LENGTH,                                       +
               DATA2=NET_DATA
         BR    R8
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOTEOF
         DC    H'0'
ERR0020  DS    0H
         ITRACE ID=NOTAUTH
         MVC   SPF_MSG1,NET_MSG_1
         MVC   SPF_MSG2,NET_MSG_2
         MVC   SPF_MSG3,NET_MSG_3
         MVC   SPF_MSG4,NET_MSG_4
         MVC   SPF_MSG5,NET_MSG_5
         MVI   DXD_DISPLAY_RC+1,X'01'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=RELEASE
         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND (RELEASE)
         MVC   DAIR_DSN,LIBTEMP               SET DDNAME
         LA    R1,DAIRREQ                     REQUEST BLOCK ADDRESS
         L     R15,VSUB0004                   DAIR ENTRY POINT
         BALR  R14,R15                        LINK TO SUBROUTINE
EXIT0010 DS    0H
         OC    DXD_AUX01,DXD_AUX01            USER EXIT LOADED?
         BZ    EXIT0020                       NO
         DELETE EP=LIBUX01
         XC    DXD_AUX01,DXD_AUX01            CLEAR THE ADDRESS
EXIT0020 DS    0H
         LH    R15,DXD_DISPLAY_RC             SET RETURN CODE
         ITRACE ID=EXIT,                                               +
               RDATA1=R15
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDTVIEW)                    DISPLACEMENT TO WORK AREA
VTVIEW   DC    V(LIBTVIEW)
VSUB0001 DC    V(SUB0001)
VSUB0004 DC    V(SUB0004)
VPANEL   DC    CL8'VPANEL'
VDAIRMSG DC    CL8'VDAIRMSG'
ALOPANEL DC    CL8'ALOPANEL'
DISPLAY  DC    CL8'DISPLAY'
LIBTEMP  DC    CL8'LIBTEMP'

PODCBI   DCB   DSORG=PO,                                               +
               DDNAME=LIBTEMP,                                         +
               MACRF=R
PODCBL   EQU   *-PODCBI
PSDCBI   DCB   DSORG=PS,                                               +
               DDNAME=LIBTEMP,                                         +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               MACRF=PM
PSDCBL   EQU   *-PSDCBI

OPENI    OPEN  (*,INPUT),MF=L,MODE=31
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MF=L,MODE=31
CLOSEL   EQU   *-CLOSEI

H3       DC    H'3'
H80      DC    H'80'
H4000    DC    H'4000'

HEXZERO  DC    XL4'00'
HEXCHAR  DC    C'0123456789ABCDEF'

MSG01    DC    CL11'LIBVIEW01E'
         DC    C'Your dataset must be sequential or partitioned'
MSG01L   EQU   *-MSG01
MSG02    DC    CL11'LIBVIEW02E'
         DC    C'New dataset will be sequential, member name ignored'
MSG02L   EQU   *-MSG02
MSG03    DC    CL11'LIBVIEW03E'
         DC    C'Member name not allowed if dataset is sequential'
MSG03L   EQU   *-MSG03
MSG04    DC    CL11'LIBVIEW04E'
         DC    C'Member name is required when dataset is partitioned'
MSG04L   EQU   *-MSG04
MSG05    DC    CL11'LIBVIEW05E'
         DC    C'Dataset (or member) already exists.  Not overwritten'
MSG05L   EQU   *-MSG05
MSG06    DC    CL11'LIBVIEW06E'
         DC    C'Output data set allocation failed.'
MSG06L   EQU   *-MSG06
MSG07    DC    CL11'LIBVIEW07I'
         DC    C'R15='
MSG07R15 DC    CL4' '
         DC    C', ERROR='
MSG07ERR DC    CL4' '
         DC    C', INFO='
MSG07INFO DC    CL4' '
MSG07L   EQU   *-MSG07
MSG08ID  DC    CL11'LIBVIEW08I'
MSG09    DC    CL11'LIBVIEW09E'
         DC    C'Output dataset must have RECFM=F or FB'
MSG09L   EQU   *-MSG09
MSG10    DC    CL11'LIBVIEW10E'
         DC    C'Output dataset must have LRECL=80'
MSG10L   EQU   *-MSG10

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDTVIEW      DSECT
              LIBSAVE DSECT=NO
              DAIRREQ DSECT=NO
              VTAMREQ DSECT=NO
              UX01PARM DSECT=NO

DXD_AUX01             DS   A

DXD_SPF_PARMS         DS  0F
DXD_SPF_1             DS   F
DXD_SPF_2             DS   F

DXD_EXPANDED_LENGTH   DS   A           LENGTH OF EXPANDED DATA
DXD_COMPRESSED_LENGTH DS   A           LENGTH OF COMPRESSED DATA

DXD_SOURCE_RECORDS    DS   F           NUMBER OF RECORDS IN SOURCE
DXD_CURRENT_RECORDS   DS   F           NUMBER OF RECORDS IN BUFFER

SUB0001_PARM_LIST     DS   0A
SUB0001_PARM_DSN      DS   CL44
SUB0001_PARM_DSORG    DS   C
SUB0001_PARM_RECFM    DS   C
SUB0001_PARM_LRECL    DS   XL2

DXD_FIND_RC           DS   H           RETURN CODE FROM DISPLAY
DXD_DISPLAY_RC        DS   H           RETURN CODE FROM DISPLAY

DXD_FLAG              DS   X
$NO_MEMBER            EQU  X'80'       .. ALLOCATE W/O MEMBER
$SET_BLKSIZE          EQU  X'40'       .. SET BLOCK SIZE IN DCB

DXD_UNPACK            DS   XL5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBSPFD TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK DSECT=YES
NET_LIB_NAME            DS  CL8
NET_MEM_NAME            DS  CL8
NET_MEM_VERSION         DS  XL2
NET_CHECK_OUT_LENGTH    EQU *-NETBLOK
         ORG            NET_DATA
NET_SOURCE_RECORDS      DS  XL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBRECD DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR_MSG                DSECT
DAIR_MSG_LENGTH         DS  AL2
DAIR_MSG_CODE           DS  XL6
DAIR_MSG_NBR            DS  AL2
DAIR_MSG_TEXT           DS  CL80
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB  AM=VTAM
ACBL     EQU     *-IFGACB
         LIBBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         DCBD    DSORG=PS
         IHAPSA  DSECT=YES,LIST=NO
         IECSDSL1 1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
$MAX_SOURCE_SIZE EQU 8000
         COPY REGEQU
         END  LIBTVIEW
./ ADD NAME=LIBTVMGR 0100-09250-09250-0919-00293-00293-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTVMGR                                              *
*                                                                     *
*  Define or delete SPF variables.                                    *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTVMGR CSECT
LIBTVMGR AMODE 31
LIBTVMGR RMODE ANY
         USING LIBTVMGR,R12                   DEFINE BASE
         USING LIBTCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000
MODID    DC    CL8'LIBTVMGR'
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
* ------------------------------------------------------------------- *
         LR    R9,R1                          COPY PARM LIST ADDRESS
         USING VARREQ,R9                      DEFINE BASE
         L     R10,COMMDXDA                   WORK AREA BASE
         A     R10,DXDSTART                   PLUS DISPLACEMENT
         USING DXDTVAR,R10                    DEFINE WORK AREA BASE
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         LA    R2,DXDSAVE                     OUR SAVE AREA ADDRESS
         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA
         ST    R2,8(R13)                      OUR SAVE AREA TO CALLER'S
         LR    R13,R2                         SET SAVE AREA ADDRESS
* ------------------------------------------------------------------- *
         ITRACE ID=INIT
         MVC   DXDID,MODID                    IDENTIFY AREA
         ITRACE ID=ENTRY,                     TRACE ENTRY              +
               DATA1=VARCMD                   .. SAVE THE COMMAND
         MVC   DXD_VAR_NAMES(VAR_NAME_L),VAR_NAME_I
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
VAR0010  DS    0H
         CLI   VARCMD,$VARDEF                 DEFINE VARIABLES?
         BE    VAR0100                        YES
         CLI   VARCMD,$VARDEL                 DELETE VARIABLE?
         BE    VAR0200                        YES
         SR    R5,R5
         ICM   R5,1,VARCMD
         ITRACE ID=BADCMD
         ABEND 11,DUMP,,USER                  BAD COMMAND
* ------------------------------------------------------------------- *
*        PROCESS DEFINE COMMANDS                                      *
* ------------------------------------------------------------------- *
VAR0100  DS    0H
         ITRACE ID=DEFINE,                    DEFINE VARIABLES         +
               RDATA1=R8,                     .. FIRST VARIABLE ID     +
               RDATA2=R7                      .. NUMBER OF VARIABLES
         L     R6,VARTBLE                     FIRST VARIABLE
VAR0110  DS    0H
         USING VAR_DSECT,R6                   DEFINE BASE
         TM    VAR_FLAGS,$VAR_DEFINED         VARIABLE ALREADY DEFINED?
         BO    VAR0120                        YES
         LA    R1,VDEFINE                     COMMAND'S ADDRESS
         ST    R1,DXD_SPF_1                   SET ADDRESS IN PARM LIST
         LA    R1,VAR_NAME                    VARIABLE'S NAME
         ST    R1,DXD_SPF_2                   SET NAME'S ADDRESS
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,VAR_DISP                  DISPLACEMENT TO DATA
         A     R1,VARAREA                     PLUS BASE ADDRESS
         ST    R1,DXD_SPF_3                   SET ADDRESS IN PARM LIST
         LA    R1,VAR_FORM                    DATA FORMAT
         ST    R1,DXD_SPF_4                   SET ADDRESS IN PARM LIST
         LA    R1,VAR_LENGTH                  VARIABLE LENGTH
         ST    R1,DXD_SPF_5                   SET ADDRESS IN PARM LIST
         OI    DXD_SPF_5,X'80'                SET END-OF-LIST
         ITRACE ID=VDEF,                      DEFINING A VARIABLE      +
               DATA1=VAR_NAME,                .. VARIABLE'S NAME       +
               DATA2=DXD_SPF_3                .. ADDRESS OF DATA
         LA    R1,DXD_SPF_PARMS               SPF PARM LIST ADDRESS
         L     R15,AISPLINK                   SPF LINK ENTRY POINT
         BALR  R14,R15                        LINK TO SPF
         LTR   R15,R15                        VDEFINE SUCCESSFUL?
         BNZ   ERR0010                        NO
         OI    VAR_FLAGS,$VAR_DEFINED         VARIABLE HAS BEEN DEFINED
         TM    VAR_FLAGS,$VAR_PROFILE         VGET FROM PROFILE?
         BNO   VAR0120                        NO
         ITRACE ID=VGET,                                               +
               DATA1=VAR_NAME
         MVC   DXD_VAR_NAME,VAR_NAME          COPY VARIABLE NAME
         LA    R1,VGET
         ST    R1,DXD_SPF_1
         LA    R1,DXD_VAR_NAMES               <-- DON'T LIKE CLOSE NAME
         ST    R1,DXD_SPF_2                   SET NAME
         LA    R1,PROFILE                     VARIABLE POOL NAME
         ST    R1,DXD_SPF_3                   SET ADDRESS
         OI    DXD_SPF_3,X'80'                FLAG END-OF-LIST
         LA    R1,DXD_SPF_PARMS
         L     R15,AISPLINK                   SPF ENTRY POINT
         BALR  R14,R15
         ITRACE ID=VGET_RC,                                            +
               RDATA1=R15
         ITRACE ID=VPUT,                                               +
               DATA1=VAR_NAME
         LA    R1,VPUT
         ST    R1,DXD_SPF_1
         LA    R1,DXD_VAR_NAMES              <-- DON'T LIKE CLOSE NAME
         ST    R1,DXD_SPF_2                  SET NAME
         LA    R1,SHARED                     VARIABLE POOL NAME
         ST    R1,DXD_SPF_3                  SET ADDRESS
         OI    DXD_SPF_3,X'80'               FLAG END-OF-LIST
         LA    R1,DXD_SPF_PARMS
         L     R15,AISPLINK                  SPF ENTRY POINT
         BALR  R14,R15
         ITRACE ID=VPUT_RC,                                            +
               RDATA1=R15
VAR0120  DS    0H
         LA    R6,VAR_DSECT_L(R6)             NEXT VARIABLE
         CLI   0(R6),X'FF'                    END OF TABLE?
         BNE   VAR0110                        NO
         B     EXIT0000                       ALL PROCESSED
* ------------------------------------------------------------------- *
*        PROCESS VARIABLE DELETION                                    *
* ------------------------------------------------------------------- *
VAR0200  DS    0H
         ITRACE ID=DELETE                     DELETING ALL VARIABLES
         L     R6,VARTBLE                     START WITH FIRST VARIABLE
VAR0210  DS    0H
         ITRACE ID=VAR,                                                +
               DATA1=VAR_NAME,                                         +
               DATA2=VAR_FLAGS
         CLI   0(R6),X'FF'                    END OF TABLE?
         BE    EXIT0000                       YES
         TM    VAR_FLAGS,$VAR_DEFINED         VARIABLE DEFINED?
         BNO   VAR0230                        NO
         TM    VAR_FLAGS,$VAR_PROFILE         VPUT TO PROFILE?
         BNO   VAR0220                        NO
         ITRACE ID=VPUT,                                               +
               DATA1=VAR_NAME
         MVC   DXD_VAR_NAME,VAR_NAME          COPY VARIABLE NAME
         LA    R1,VPUT
         ST    R1,DXD_SPF_1
         LA    R1,DXD_VAR_NAMES               <-- DON'T LIKE CLOSE NAME
         ST    R1,DXD_SPF_2                   SET NAME
         LA    R1,PROFILE                     SAVE IN PROFILE
         ST    R1,DXD_SPF_3                   SET ADDRESS
         OI    DXD_SPF_3,X'80'                FLAG END-OF-LIST
         LA    R1,DXD_SPF_PARMS
         L     R15,AISPLINK                   SPF ENTRY POINT
         BALR  R14,R15
         ITRACE ID=VPUT_RC,                                            +
               RDATA1=R15
VAR0220  DS    0H
         LA    R1,VDELETE
         ST    R1,DXD_SPF_1
         ST    R6,DXD_SPF_2                   SET VARIABLE NAME ADDRESS
         OI    DXD_SPF_2,X'80'                FLAG END-OF-LIST
         ITRACE ID=VDEL,                      DELETING A VARIABLE      +
               DATA1=VAR_NAME                 .. VARIABLE NAME
         LA    R1,DXD_SPF_PARMS               PARM LIST'S ADDRESS
         L     R15,AISPLINK                   SPF LINK ENTRY POINT
         BALR  R14,R15                        LINK TO SPF
         LTR   R15,R15                        VDELETE SUCCESSFUL?
         BNZ   ERR0020                        NO
VAR0230  DS    0H
         LA    R6,VAR_DSECT_L(R6)             NEXT VARIABLE
         B     VAR0210                        PROCESS ALL VARIABLES
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=VDEFFAIL,                                           +
               RDATA1=R15
         STC   R15,DXD_SPF_RC                 SAVE RC
         UNPK  DXD_WORKA(3),DXD_SPF_RC(2)     UNPACK THE RETURN CODE
         TR    DXD_WORKA,HEXCHAR              TRANSLATE
         GETMAIN RU,                          GETMAIN 24-BIT STORAGE   +
               LV=MSG01_L,                                             +
               LOC=BELOW
         LR    R3,R1                          COPY ADDRESS
         MVC   0(MSG01_L,R3),MSG01            COPY MESSAGE
         USING MSG01,R3
         MVC   MSG01_VAR,VAR_NAME             COPY VARIABLE NAME
         MVC   MSG01_RC,DXD_WORKA             COPY RC
         DROP  R3
         TPUT  (R3),MSG01_L
         FREEMAIN RU,                                                  +
               A=(R3),                                                 +
               LV=MSG01_L
         ABEND 12,DUMP,,USER
ERR0020  DS    0H
         ITRACE ID=VDELFAIL,                                           +
               RDATA1=R15
         STC   R15,DXD_SPF_RC                 SAVE RC
         UNPK  DXD_WORKA(3),DXD_SPF_RC(2)     UNPACK THE RETURN CODE
         TR    DXD_WORKA,HEXCHAR              TRANSLATE
         GETMAIN RU,                          GETMAIN 24-BIT STORAGE   +
               LV=MSG02_L,                                             +
               LOC=BELOW
         LR    R3,R1                          COPY ADDRESS
         MVC   0(MSG02_L,R3),MSG02            COPY MESSAGE
         USING MSG02,R3
         MVC   MSG02_VAR,VAR_NAME             COPY VARIABLE NAME
         MVC   MSG02_RC,DXD_WORKA             COPY RC
         DROP  R3
         TPUT  (R3),MSG02_L
         FREEMAIN RU,                                                  +
               A=(R3),                                                 +
               LV=MSG02_L
         ABEND 13,DUMP,,USER
EXIT0000 DS    0H
         ITRACE ID=EXIT
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART   DC    Q(DXDTVAR)

VAR_NAME_I DC    F'1'
           DC    F'0'
           DC    CL8' '
VAR_NAME_L EQU   *-VAR_NAME_I

DISPLAY    DC    CL8'DISPLAY'
ERR_PANEL  DC    CL8'LIBERR '
PROFILE    DC    CL8'PROFILE'
SHARED     DC    CL8'SHARED'
VDEFINE    DC    CL8'VDEFINE'
VDELETE    DC    CL8'VDELETE'
VGET       DC    CL8'VGET'
VPUT       DC    CL8'VPUT'

HEXCHAR    EQU   *-C'0'
           DC    C'0123456789ABCDEF'

MSG01      DS    0C
           DC    C'LIBTVMGR01E '
           DC    C'VDEFINE for variable '
MSG01_VAR  DC    CL8' '
           DC    C' failed, RC='
MSG01_RC   DC    CL02' '
MSG01_L    EQU   *-MSG01

MSG02      DS    0C
           DC    C'LIBTVMGR02E '
           DC    C'VDELETE for variable '
MSG02_VAR  DC    CL8' '
           DC    C' failed, RC='
MSG02_RC   DC    CL02' '
MSG02_L    EQU   *-MSG02

           LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDTVAR        DSECT
               LIBSAVE DSECT=NO
DXD_SPF_PARMS  DS   0A                    ISPF PARM LIST
DXD_SPF_1      DS   A                     PARM 1 ADDRESS
DXD_SPF_2      DS   A                     PARM 2 ADDRESS
DXD_SPF_3      DS   A                     PARM 3 ADDRESS
DXD_SPF_4      DS   A                     PARM 4 ADDRESS
DXD_SPF_5      DS   A                     PARM 5 ADDRESS


DXD_VAR_NAMES  DS   0A
               DS   F
               DS   F
DXD_VAR_NAME   DS   CL8

DXD_SPF_RC     DS   X
               DS   X
DXD_WORKA      DS   CL3
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     VARDSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VARREQ   DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY     REGEQU
         END      LIBTVMGR
./ ADD NAME=LIBTVTAM 0100-09250-09250-0919-00437-00437-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: LIBTVTAM - VTAM functions                             *
*                                                                     *
*  Function:                                                          *
*                                                                     *
* ------------------------------------------------------------------- *
LIBTVTAM CSECT
LIBTVTAM AMODE 31
LIBTVTAM RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING LIBTVTAM,R12                   DEFINE PROGRAM BASE
         USING LIBTCOMM,R11                   DEFINE COMMON AREA BASE
         B     INIT0000
MODID    DC    CL8'LIBTVTAM'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LR    R10,R1                         COPY PARM BLOCK ADDRESS
         USING VTAMREQ,R10                    DEFINE BASE
         L     R1,COMMDXDA                    WORK AREA BASE
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)                      CHAIN CALLER'S SAVE AREA
         ST    R1,8(R13)                      CHAIN OUR SAVE AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING DXDVTAM,R13                    DEFINE WORK AREA BASE
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    INIT0010                       YES
         ITRACE ID=INIT
         MVC   DXDID,MODID                    WORK AREA INITIALIZED
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
INIT0010 DS    0H
         CLI   VTAM_COMMAND,$VTAM_OPEN        OPEN?
         BE    OPEN0000                       YES
         L     R8,COMM_ACB
         L     R7,COMM_RPL
         L     R6,COMM_RPLX
         L     R5,COMM_NETWORK_IO_AREA
         L     R4,COMM_NIB
         CLI   VTAM_COMMAND,$VTAM_CLOSE       CLOSE?
         BE    CLOSE000                       YES
         CLI   VTAM_COMMAND,$VTAM_RECEIVE     RECEIVE?
         BE    RECV0000                       YES
         CLI   VTAM_COMMAND,$VTAM_SEND        SEND?
         BE    SEND0000                       YES
         ABEND 1,DUMP,,USER
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
OPEN0000 DS    0H
         ITRACE ID=OPEN
         LA    R0,ACBL                        ACB'S SIZE
         ST    R0,COMM_ACB_LENGTH             SAVE LENGTH
         GETMAIN RU,                          ACQUIRE STORAGE FOR ACB  +
               LV=(0),                        .. SIZE                  +
               LOC=BELOW                      .. FROM BELOW THE LINE
         ST    R1,COMM_ACB                    SAVE ACB'S ADDRESS
         LR    R8,R1                          COPY ACB ADDRESS
         USING IFGACB,R8                      DEFINE BASE
         MVC   0(ACBL,R8),ACBI                INITIALIZE ACB
         LA    R0,COMM_APPL_NAME_LENGTH       APPLID'S LENGTH ADDRESS
         ST    R0,ACBAPID                     SET APPLID ADDRESS
         ST    R11,ACBUSER                    SET LIBTCOMM ADDRESS
         LA    R0,EXLSTL                      EXLST SIZE
         GETMAIN RU,                          ACQUIRE STORAGE FOR EXLST+
               LV=(0),                        .. SIZE                  +
               LOC=BELOW                      .. FROM BELOW THE LINE
         MVC   0(EXLSTL,R1),EXLSTI            INITIALIZE EXIT LIST
         ST    R1,COMM_EXLST                  SAVE EXIT LIST'S ADDRESS
         ST    R1,ACBEXLST                    SET EXLST'S ADDRESS
         USING IFGEXLST,R1                    DEFINE BASE
         XC    EXLATTNP,EXLATTNP              ATTN EXIT
         LA    R0,RPLL                        RPL'S SIZE
         GETMAIN RU,                          ACQUIRE STORAGE FOR RPL  +
               LV=(0),                        .. SIZE                  +
               LOC=BELOW                      .. FROM BELOW THE LINE
         LR    R7,R1                          COPY ADDRESS
         USING IFGRPL,R7                      DEFINE BASE
         ST    R7,COMM_RPL                    SAVE RPL'S ADDRESS
         MVC   0(RPLL,R7),RPLI                INITIALIZE RPL
         LA    R0,RPLEXTL                     RPL EXTENSION SIZE
         GETMAIN RU,                          ACQUIRE STORAGE          +
               LV=(0),                        .. SIZE                  +
               LOC=BELOW                      .. FROM BELOW THE LINE
         LR    R6,R1                          COPY ADDRESS
         ST    R6,COMM_RPLX                   SAVE RPL'S ADDRESS
         USING ISTRPL6X,R6                    DEFINE BASE
         MVC   0(RPLEXTL,R6),RPLEXTI          INITIALIZE RPL EXTENSION
         ST    R6,RPLAAREA                    SET RPL EXTENSION'S ADDR
         MVC   RPLDACB,COMM_ACB               SET ACB'S ADDRESS
         L     R5,COMM_NETWORK_IO_AREA        SAVE I/O AREA ADDRESS
         USING NETBLOK,R5                     DEFINE BASE
         LA    R0,NIBL                        NIB'S SIZE
         GETMAIN RU,                          ACQUIRE STORAGE FOR NIB  +
               LV=(0),                        .. SIZE                  +
               LOC=BELOW                      .. FROM BELOW THE LINE
         LR    R4,R1                          COPY NIB'S ADDRESS
         USING ISTDNIB,R4
         ST    R4,COMM_NIB                    SET NIB'S ADDRESS
         MVC   0(NIBL,R4),NIBI                INITIALIZE NIB
         MVC   NIBSYM,COMM_SERVER_APPL_ID
         ITRACE ID=INQUIRE,                                            +
               DATA1=NIBSYM
         INQUIRE RPL=(R7),                    ISSUE INQUIRE            +
               NIB=(R4),                      .. NIB'S ADDRESS         +
               OPTCD=APPSTAT                  ..  WANT PARTNER'S STATUS
         CLI   RPLFDB3,0                      PARTNER READY?
         BNE   OPEN0050                       NO
         LOAD  EP=LIBOPT                      LOAD OPTIONS
         LR    R15,R0                         COPY ADDRESS
         USING OPTDSECT,R15                   DEFINE BASE
         LA    R3,OPTACB                      ADDRESS OF ACB NAMES
         SR    R2,R2                          CLEAR REGISTER
         ICM   R2,3,OPT#ACB                   NUMBER OF ACBS
OPEN0010 DS    0H
         ITRACE ID=ACBNAME,                   TRACE EACH OPEN ATTEMPT  +
               DATA1=0(R3)                    .. TRACE THE NAME
         MVC   COMM_APPL_NAME,0(R3)           COPY ACB NAME
         MVC   DXDOCPL(OPENL),OPENI
         OPEN  ((R8)),                        OPEN ACB                 +
               MODE=31,                                                +
               MF=(E,DXDOCPL)
         ITRACE ID=OPENRC,                    RETURN CODE FROM OPEN    +
               RDATA1=R15                     .. TRACE RETURN CODE
         LTR   R15,R15                        OPEN SUCCESSFUL?
         BZ    OPEN0020                       YES
         LA    R3,8(R3)                       NEXT ACB NAME
         BCT   R2,OPEN0010                    LOOP
         DELETE EP=LIBOPT                     DELETE OPTIONS
         ITRACE ID=NOAPPL
         LA    R2,MSG01L                      MESSAGE LENGTH
         GETMAIN RU,                          ACQUIRE STORAGE FOR TPUT +
               LV=(R2),                       .. SIZE OF AREA          +
               LOC=BELOW                      .. FROM BELOW THE LINE
         LR    R3,R1                          COPY STORAGE ADDRESS
         MVC   0(MSG01L,R3),MSG01             COPY MESSAGE
         TPUT  (R3),(R2)                      ISSUE TPUT
         FREEMAIN RU,                                                  +
               A=(R3),                                                 +
               LV=MSG01L
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     EXIT0000                       EXIT
OPEN0020 DS    0H
         ITRACE ID=OPENED
         DELETE EP=LIBOPT
         OI    COMM_FLAGS,$ACB_OPEN           ACB IS OPEN
         ITRACE ID=SETLOGON
         SETLOGON ACB=(R8),                   ISSUE SETLOGON           +
               RPL=(R7),                      .. RPL FOR REQUEST       +
               OPTCD=START                    .. ENABLE EXIT
         MVC   RPL6LU,COMM_SERVER_APPL_ID
         ITRACE ID=CNOS
         APPCCMD CONTROL=OPRCNTL,             ISSUE APPC COMMAND       +
               QUALIFY=CNOS,                  .. CNOS                  +
               RPL=(R7),                      .. RPL'S ADDRESS         +
               LOGMODE=LU62P                  .. LOGMODE
         CLC   RPL6RC,X000001                 CNOS ACCEPTED?
         BE    OPEN0030                       YES
         ITRACE ID=CNOSFAIL,                  CNOS FAILED              +
               DATA1=RPL6RC                   .. TRACE RETURN CODES
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         ABEND 2,DUMP,,USER
OPEN0030 DS    0H
         MVC   0(FMH5L,R5),FMH5               COPY FMH5 TO I/O AREA
         ITRACE ID=ALLOC                      ALLOCATE A SESSION
         XC    COMM_VTAM_ECB,COMM_VTAM_ECB    CLEAR THE ECB
         APPCCMD CONTROL=ALLOC,               ISSUE APPC COMMAND       +
               QUALIFY=ALLOCD,                .. ALLOCATE A SESSION    +
               RPL=(R7),                      .. RPL'S ADDRESS         +
               ECB=COMM_VTAM_ECB,             .. ECB                   +
               AREA=(R5),                     .. FMH'S ADDRESS         +
               RECLEN=FMH5L,                  .. FMH'S LENGTH          +
               LOGMODE=LU62P,                 .. LOGMODE               +
               OPTCD=ASY
         WAIT  1,ECB=COMM_VTAM_ECB
         APPCCMD CONTROL=CHECK,                                        +
               RPL=(R7)
         OC    RPL6RC,RPL6RC                  ALL ZEROS?
         BZ    OPEN0040                       YES
         ITRACE ID=ALOCFAIL,                  ALLOCATE FAILED          +
               DATA1=RPL6RC                   .. TRACE RETURN CODES
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         ABEND 3,DUMP,,USER
         B     EXIT0000                       EXIT
OPEN0040 DS    0H
         MVC   COMM_CONVERSATION_ID,RPL6CNVD  SAVE CONVERSATION ID
         ITRACE ID=CID,                       SESSION ALLOCATED        +
               DATA1=COMM_CONVERSATION_ID
         L     R0,COMM_NETWORK_IO_AREA
         L     R1,=A(COMMIOSZ)
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14
         B     EXIT0000                       EXIT
OPEN0050 DS    0H
         ITRACE ID=NOTREADY                   STC IS NOT READY
         LA    R2,MSG02L                      MESSAGE LENGTH
         GETMAIN RU,                          ACQUIRE STORAGE FOR TPUT +
               LV=(R2),                       .. SIZE OF AREA          +
               LOC=BELOW                      .. FROM BELOW THE LINE
         LR    R3,R1                          COPY STORAGE ADDRESS
         MVC   0(MSG02L,R3),MSG02             COPY MESSAGE
         TPUT  (R3),(R2)                      ISSUE TPUT
         FREEMAIN RU,                         FREE MESSAGE STORAGE     +
               A=(R3),                                                 +
               LV=MSG02L
         OI    COMM_FLAGS,$ABORT              SET ABORT FLAG
         B     EXIT0000                       EXIT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
RECV0000 DS    0H
         ITRACE ID=RECV
         XC    COMM_VTAM_ECB,COMM_VTAM_ECB    CLEAR THE ECB
         APPCCMD CONTROL=RECEIVE,             ISSUE RECEIVE            +
               QUALIFY=SPEC,                  .. FOR A SPECIFIC SESSION+
               RPL=(R7),                      .. RPL'S ADDRESS         +
               FILL=LL,                       .. ONLY 1 LOGICAL RECORD +
               AREA=(R5),                     .. I/O AREA ADDRESS      +
               AREALEN=COMMIOSZ,              .. I/O AREA SIZE         +
               CONVID=COMM_CONVERSATION_ID    .. CONVERSATION ID
         WAIT  1,ECB=COMM_VTAM_ECB            WAIT FOR THE SEND
         APPCCMD CONTROL=CHECK,                                        +
               RPL=(R7)
         ITRACE ID=RECVRC,                                             +
               DATA1=RPL6RC
         OC    RPL6RC,RPL6RC                  RECEIVE OK?
         BNZ   ERR0020                        NO
         TM    XTRFLAG,$XTRON                 EXTERNAL TRACE ON?
         BNO   EXIT0000                       NO
         PUT   XTRACE,0(R5)                   WRITE TO EXTERNAL TRACE
         B     EXIT0000                       EXIT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
SEND0000 DS    0H
         ITRACE ID=SEND,                                               +
               DATA1=COMM_CONVERSATION_ID,                             +
               RDATA2=R5
         TM    XTRFLAG,$XTRON                 EXTERNAL TRACE ON?
         BNO   SEND0010                       NO
         PUT   XTRACE,0(R5)                   WRITE TO EXTERNAL TRACE
SEND0010 DS    0H
         XC    COMM_VTAM_ECB,COMM_VTAM_ECB    CLEAR THE ECB
         SR    R2,R2                          CLEAR REGISTER
         ICM   R2,3,NET_LENGTH                LENGTH
         APPCCMD CONTROL=SEND,                ISSUE SEND               +
               QUALIFY=DATA,                  .. SEND DATA             +
               RPL=(R7),                      .. RPL'S ADDRESS         +
               AREA=(R5),                     .. I/O AREA ADDRESS      +
               ECB=COMM_VTAM_ECB,             .. ECB ADDRESS           +
               RECLEN=(R2),                   .. I/O LENGTH            +
               CONMODE=CS,                    .. CONTINUE SPECIFIC     +
               CONVID=COMM_CONVERSATION_ID,   .. CONVERSATION ID       +
               OPTCD=ASY
         WAIT  1,ECB=COMM_VTAM_ECB            WAIT FOR THE SEND
         APPCCMD CONTROL=CHECK,                                        +
               RPL=(R7)
         ITRACE ID=SENDRC,                                             +
               DATA1=RPL6RC
         OC    RPL6RC,RPL6RC                  SEND OK?
         BNZ   ERR0030                        NO
         B     EXIT0000                       EXIT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
CLOSE000 DS    0H
         ITRACE ID=CLOSE
         TM    COMM_FLAGS,$SESSALO            CONVERSATION ALLOCATED?
         BNO   CLOSE010                       NO
         ITRACE ID=DEALLOC                    DEALLOCATING THE SESSION
         APPCCMD CONTROL=DEALLOC,             DE-ALLOCATE A SESSION    +
               QUALIFY=FLUSH,                 .. FLUSH BUFFERS         +
               RPL=(R7),                      .. RPL'S ADDRESS         +
               CONVID=COMM_CONVERSATION_ID    .. CONVERSATION ID
         OC    RPL6RC,RPL6RC                  DE-ALLOCATE SUCCESSFUL?
         BNZ   ERR0010                        NO
CLOSE010 DS    0H
         TM    COMM_FLAGS,$ACB_OPEN           ACB OPENED?
         BNO   CLOSE020                       NO
         ITRACE ID=CLOSEACB
         MVC   DXDOCPL(CLOSEL),CLOSEI
         CLOSE ((R8)),                        CLOSE THE ACB            +
               MODE=31,                                                +
               MF=(E,DXDOCPL)
CLOSE020 DS    0H
         LTR   R8,R8                          ACB'S ADDRESS
         BZ    CLOSE030                       NOT ACQUIRED
         ITRACE ID=FREEACB,                   FREEMAIN ACB             +
               RDATA1=R8                      .. ACB'S ADDRESS
         FREEMAIN RU,                         FREEMAIN ACB             +
               A=(R8),                                                 +
               LV=ACBL
CLOSE030 DS    0H
         LTR   R7,R7                          RPL'S ADDRESS
         BZ    CLOSE040                       NOT ACQUIRED
         ITRACE ID=FREERPL,                   FREEMAIN RPL             +
               RDATA1=R7                      .. RPL'S ADDRESS
         FREEMAIN RU,                         FREEMAIN RPL             +
               A=(R7),                                                 +
               LV=RPLL
CLOSE040 DS    0H
         LTR   R6,R6                          RPL EXTENSION'S ADDRESS
         BZ    CLOSE050                       NOT ACQUIRED
         ITRACE ID=FREERPLX,                  FREEMAIN RPL             +
               RDATA1=R6                      .. RPL EXTENSION'S ADD
         FREEMAIN RU,                         FREEMAIN RPL EXTENSION   +
               A=(R6),                                                 +
               LV=RPLEXTL
CLOSE050 DS    0H
         LTR   R4,R4                          NIB'S ADDRESS
         BZ    CLOSE060                       NOT ACQUIRED
         ITRACE ID=FREENIB,                   FREEMAIN NIB             +
               RDATA1=R4                      .. NIB'S ADDRESS
         FREEMAIN RU,                         FREEMAIN NIB             +
               A=(R4),                                                 +
               LV=NIBL
CLOSE060 DS    0H
         ICM   R1,15,COMM_EXLST               EXLST'S ADDRESS
         BZ    EXIT0000                       NOT ACQUIRED
         ITRACE ID=FREEXLST,                  FREEMAIN EXLST           +
               RDATA1=R1                      .. EXLST'S ADDRESS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=EXLSTL
         B     EXIT0000                       AND EXIT
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=DALOFAIL,                  DE-ALLOCATE FAILED       +
               DATA1=RPL6RC                   .. RETURN CODES
         ABEND 4,DUMP,,USER
ERR0020  DS    0H
         ITRACE ID=RECVFAIL,                  SEND FAILED              +
               DATA1=RPL6RC                   .. RETURN CODES
         ABEND 5,DUMP,,USER
ERR0030  DS    0H
         ITRACE ID=SENDFAIL,                  SEND FAILED              +
               DATA1=RPL6RC                   .. RETURN CODES
         ABEND 6,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LH    R15,DXDRC                      SET RETURN CODE
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART DC    Q(DXDVTAM)            DISPLACEMENT TO WORK AREA
OPENI    OPEN  (*,INPUT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
ACBI     ACB   AM=VTAM,              GENERATE VTAM ACB                 +
               MACRF=LOGON,                                            +
               EXLST=*,                                                +
               APPLID=*
EXLSTI   EXLST AM=VTAM,              GENERATE VTAM EXIT LIST           +
               ATTN=*,                                                 +
               LERAD=0
EXLSTL   EQU   *-EXLSTI
NIBI     NIB   MODE=RECORD,          GENERATE VTAM NIB                 +
               NAME=LIB
NIBL     EQU   *-NIBI
RPLI     RPL   AM=VTAM,              GENERATE VTAM RPL                 +
               AAREA=RPLEXTI
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
         FMH5  DSECT=NO,TRAN=USER    GENERATE FMH5
X000001  DC    X'00000001'
MSG01    DC    C'LIBVTAM01E All user interface APPLIDs are busy, try la+
               ter'
MSG01L   EQU   *-MSG01
MSG02    DC    C'LIBVTAM02E Library STC is not active'
MSG02L   EQU   *-MSG02
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDVTAM  DSECT
         LIBSAVE DSECT=NO
DXDOCPL  DS    0A,(OPENL)X
DXDRC    DS    H
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VTAMREQ  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         TCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGEXLST AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         ISTDNIB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  OPTDSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  LIBTVTAM
./ ADD NAME=LIBUX01  0100-09250-09250-0919-00129-00129-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*    This exit allows the user to compress data stored in the         *
*    library members.                                                 *
*                                                                     *
*    The function code indicates whether the data needs to be         *
*    compressed or de-compressed.                                     *
*                                                                     *
*    On COMPRESS calls, the EXPANDED buffer will contain the data     *
*    to be compressed.  The COMPRESSED buffer is the area for the     *
*    data in compressed form.  The EXPANDED LENGTH will be set to     *
*    the length of data in the EXPANDED buffer.  Maximum size will    *
*    be 8K.  Set COMPRESSED LENGTH to the length of the data in its   *
*    compressed form.                                                 *
*                                                                     *
*    On EXPAND calls, the COMPRESSED buffer contain the data in its   *
*    compressed form.  The EXPANDED LENGTH will be set to the data's  *
*    original size (the size used when the buffer was COMPRESSed),    *
*    and the COMPRESSED LENGTH will be set to the length of the data  *
*    in its compressed form.                                          *
*                                                                     *
*                                                                     *
*    If you do not wish to compress data:                             *
*    . On compress calls, copy the EXPANDED buffer to the COMPRESSED  *
*      buffer and set the COMPRESSED length to the EXPANDED length.   *
*    . On decompress calls, copy the COMPRESSED buffer to the         *
*      EXPANDED buffer.  The size will already be set.                *
*                                                                     *
*                                                                     *
*    The EXPANDED and COMPRESSED buffers are 8K in size.              *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIBUX01  CSECT
LIBUX01  AMODE 31
LIBUX01  RMODE ANY
         USING LIBUX01,R12                    DECLARE THE BASE REGISTER
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         LR    R11,R1                         COPY PARM LIST ADDRESS
         USING UX01_PARMS,R11                 DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORKL,                                               +
               LOC=ANY
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         COPY SAVE AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         CLI   UX01_FUNCTION,$UX01_COMPRESS
         BE    LIB1000                        YES
         CLI   UX01_FUNCTION,$UX01_DECOMPRESS
         BE    LIB2000                        YES
         ABEND 1,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
*       COMPRESS                                                      *
*                                                                     *
*       As supplied the Librarian uses subroutine SUB0002.            *
*       SUB0002 returns the length of the compressed data in R0.      *
*       You can replace code down to label LIB2000 with your          *
*       own code.                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIB1000  DS    0H
         MVC   COMPRESS_PARM_1,UX01_EXPANDED_BUFFER
         MVC   COMPRESS_PARM_2,UX01_EXPANDED_LENGTH
         MVC   COMPRESS_PARM_3,UX01_COMPRESSED_BUFFER
         LA    R1,COMPRESS_PARMS              ADDRESS OF PARMS
         L     R15,V_SUB0002
         BALR  R14,R15                        COMPRESS
         L     R1,UX01_COMPRESSED_LENGTH
         ST    R0,0(R1)                       rETURN LENGTH
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*       DECOMPRESS                                                    *
*                                                                     *
*       As supplied the Librarian uses subroutine SUB0003.            *
*       You can replace code down to label EXIT0000 with your         *
*       own code.                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIB2000  DS    0H
         MVC   DECOMPRESS_PARM_1,UX01_EXPANDED_BUFFER
         MVC   DECOMPRESS_PARM_2,UX01_EXPANDED_LENGTH
         MVC   DECOMPRESS_PARM_3,UX01_COMPRESSED_BUFFER
         LA    R1,DECOMPRESS_PARMS
         L     R15,V_SUB0003
         BALR  R14,R15                        DE-COMPRESS THE DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         LR    R1,R13
         L     R13,4(R13)
         FREEMAIN RU,A=(1),LV=WORKL
         LM    R14,R12,12(R13)
         SR    R15,R15
         BSM   R0,R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
V_SUB0002           DC   V(SUB0002)
V_SUB0003           DC   V(SUB0003)
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA            DSECT
                    DS    18F
COMPRESS_PARMS      DS  0A           SUB0002 PARMS
COMPRESS_PARM_1     DS   A           EXPANDED BUFFER ADDRESS
COMPRESS_PARM_2     DS   A           EXPANDED BUFFER LENGTH
COMPRESS_PARM_3     DS   A           COMPRESSED BUFFER ADDRESS

DECOMPRESS_PARMS    DS  0A           SUB0003 PARMS
DECOMPRESS_PARM_1   DS   A           EXPANDED BUFFER ADDRESS
DECOMPRESS_PARM_2   DS   A           EXPANDED BUFFER LENGTH
DECOMPRESS_PARM_3   DS   A           COMPRESSED BUFFER ADDRESS

WORKL               EQU   *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         UX01PARM DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    COPY  REGEQU
         END
./ ADD NAME=LIBUX02  0100-09250-09250-0919-00078-00078-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*    This exit allows the you to implement your own security rules.   *
*                                                                     *
*    This exit receives control in 31-bit mode.                       *
*                                                                     *
*    The parameter list is mapped by macro AUTHBLOK.  As coded        *
*    The parameter block is addressed by R11.                         *
*    Register 12 is used as the base register.                        *
*    Resister 13 is the work area address.  Code any work area(s)     *
*      you need after label WORKAREA.                                 *
*    All other registers are available work registers.                *
*                                                                     *
*                                                                     *
*                                                                     *
*    Return code in R15 at exit                                       *
*        00  -  Bypass LIBRARIAN security rules, AUTH_RETURN_CODE     *
*               has been set to indicate whether access should be     *
*               allowed (AUTH_RETURN_CODE = X'00') or denied          *
*               (AUTH_RETURN_CODE = any non-zero value).              *
*                                                                     *
*    non-zero-  Use LIBRARIAN security rules                          *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIBUX02  CSECT
LIBUX02  AMODE 31
LIBUX02  RMODE ANY
         USING LIBUX02,R12                    DECLARE THE BASE REGISTER
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         LR    R11,R1                         COPY PARM LIST ADDRESS
         USING AUTHBLOK,R11                   DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORKL,                                               +
               LOC=ANY
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         COPY SAVE AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
* ------------------------------------------------------------------- *
*                                                                     *
*       Add your security checking here.                              *
*                                                                     *
* ------------------------------------------------------------------- *
         MVI   WORK_RC,4                      SET RC
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         LR    R1,R13
         L     R13,4(R13)
         SR    R2,R2
         IC    R2,WORK_RC
         FREEMAIN RU,A=(1),LV=WORKL
         LR    R15,R2
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BSM   R0,R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA            DSECT
                    DS    18F

*  ------  Add any work area(s) you need here         -------

WORK_RC             DS    X
WORKL               EQU   *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
           AUTHBLOK DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    COPY  REGEQU
         END
./ ADD NAME=LIBUX03  0100-09250-09250-0919-00085-00085-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: LIBUX03                                                      *
*                                                                     *
*  Determine user's ID, name, and their system's SMF ID               *
*                                                                     *
*  As supplied this exit obtains the user's ID and name from          *
*  RACF control blocks.  If your system uses another security         *
*  system, you may need to change the code to use that system's       *
*  control blocks.                                                    *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LIBUX03  CSECT
LIBUX03  AMODE 31
LIBUX03  RMODE ANY
         USING LIBUX03,R12                    DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'LIBUX03'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
* ------------------------------------------------------------------- *
*        Identify the user                                            *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         LR    R10,R1                         COPY PARM BLOCK ADDRESS
         USING UX03_PARMS,R10
         L     R1,CVTPTR                      CVT ADDRESS
         USING CVT,R1                         DEFINE BASE
         ICM   R15,15,CVTSMCA                 SMF AREA ADDRESS
         BZ    EXIT0008                       SMF NOT ACTIVE!
         USING SMCABASE,R15                   DEFINE BASE
         MVC   UX03_SMF,SMCASID               COPY SMF ID
         USING PSA,R0                         DEFINE BASE
         L     R1,PSAAOLD                     OUR ASCB'S ADDRESS
         USING ASCB,R1                        DEFINE BASE
         L     R14,ASCBASXB                   ASXB ADDRESS
         USING ASXB,R14                       DEFINE ASCB BASE
         L     R15,ASXBSENV                   ACEE'S ADDRESS
         USING ACEE,R15                       DEFINE ACEE BASE
         SR    R1,R1                          CLEAR REGISTER
         IC    R1,ACEEUSRL                    USER ID LENGTH
         BCTR  R1,0                           MINUS 1
         MVC   UX03_USER,BLANKS               INITIALIZE USERID
         EX    R1,UIDMVC                      COPY USER ID
         MVC   UX03_USER_NAME,BLANKS          INITIALIZE USER'S NAME
         L     R1,ACEEUNAM                    ADDRESS OF USER'S NAME
         SR    R2,R2                          CLEAR REGISTER
         ICM   R2,1,0(R1)                     LENGTH OF USER NAME
         BZ    EXIT0000
         BCTR  R2,0                           MINUS 1
         EX    R1,NAMEMVC                     COPY USER'S NAME
EXIT0000 DS    0H
         SR    R15,R15
         B     EXITEXIT
EXIT0008 DS    0H
         LA    R15,8
EXITEXIT DS    0H
         L     R14,12(R13)                    RESTORE REGISTERS
         LM    R0,R12,20(R13)
         BR    R14                            EXIT
UIDMVC   MVC   UX03_USER,ACEEUSRI             COPY USER ID
NAMEMVC  MVC   UX03_USER_NAME(0),1(R1)
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
BLANKS   DC    CL20' '
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
         CVT     DSECT=YES,LIST=NO
         IHAASCB DSECT=YES,LIST=NO
         IHAASXB DSECT=YES,LIST=NO
         IHAACEE
         IEESMCA
         UX03PARM DSECT=YES
* ------------------------------------------------------------------- *
         COPY  REGEQU
         END   LIBUX03
./ ADD NAME=LSUBMAIN 0100-09250-09250-0919-00665-00665-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: LSUBMAIN                                                     *
*                                                                     *
*  PURPOSE: Library manager                                           *
*                                                                     *
*   This subtask "owns" the libraries.  This subtask issues the       *
*   OPENs and CLOSEs.                                                 *
*                                                                     *
*                                                                     *
*   LIBUSER blocks are used to track who is using a library.          *
*   This is to prevent closing a library while it is still in use.    *
*   Before a user starts using a library the user interface makes     *
*   a call to notify the server end that it is using a specific       *
*   libary.  When a user changes libraries, or logs-out, another      *
*   call is made to have the user removed.  When CLOSE is is issued   *
*   for a library, we make sure there are no users (by checking for   *
*   LIBUSER blocks).                                                  *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
LSUBMAIN CSECT
LSUBMAIN AMODE 31
LSUBMAIN RMODE ANY
         USING LSUBMAIN,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'LSUBMAIN'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,0(R1)                      LIBSCOMM ADDRESS
* ------------------------------------------------------------------- *
*        ACQUIRE STORAGE FOR WORK AREA                                *
* ------------------------------------------------------------------- *
         GETMAIN RU,                          ACQUIRE WORK AREA STORAGE+
               LV=WORKAREA_L,                 .. WORK AREA SIZE        +
               LOC=ANY                        .. MAY BE ABOVE OR BELOW
         ST    R1,8(R13)                      CHAIN SAVE AREAS
         ST    R13,4(R1)
         LR    R13,R1                         COPY SAVE AREA ADDRESS
         USING WORK,R13                       DEFINE BASE
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK
         MVC   WORKRPL(RPLL),RPLI             INITIALIZE RPL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0010 DS    0H
         TM    COMM_EOJ_PHASE,$EOJ2           SHUTDOWN PHASE 2?
         BO    EXIT0000                       YES
         TM    COMM_LSUB_WORK_ECB,X'40'       ECB ALREADY POSTED?
         BO    PROC0020                       YES
         ITRACE ID=WORKWAIT
         WAIT  1,ECB=COMM_LSUB_WORK_ECB       WAIT FOR WORK
         ITRACE ID=WOKEUP
PROC0020 DS    0H
         XC    COMM_LSUB_WORK_ECB,COMM_LSUB_WORK_ECB
PROC0030 DS    0H
         SR    R1,R1                          CLEAR REGISTER
         ICM   R10,15,COMM_LSUB_REQ           FIRST REQUEST BLOCK
         USING LIBFUNC,R10
         BZ    PROC0010                       NOTHING ON CHAIN
         CS    R10,R1,COMM_LSUB_REQ           OBTAIN WORK CHAIN
         BC    4,PROC0030                     TRY AGAIN
         ITRACE ID=HAVEQ,                                              +
               RDATA1=R10
PROC0040 DS    0H
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK
         MVC   LIB_FUNCTION_MESSAGE,COMM_BLANKS
         CLI   LIB_FUNCTION,$LIB_FUNCTION_OPEN
         BE    OPEN0000
         CLI   LIB_FUNCTION,$LIB_FUNCTION_CLOSE
         BE    CLOSE000
         CLI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET
         BE    CLOSET00
         CLI   LIB_FUNCTION,$LIB_FUNCTION_ADD_USER
         BE    ADD0000
         CLI   LIB_FUNCTION,$LIB_FUNCTION_REM_USER
         BE    REM0000
         CLI   LIB_FUNCTION,$LIB_FUNCTION_REM_TASK
         BE    REM1000
         ABEND 1,DUMP,,USER
PROC0050 DS    0H
         L     R2,LIB_FUNCTION_NEXT
         POST  LIB_FUNCTION_ECB               POST CALLER'S ECB
         LTR   R10,R2                         NEXT ON CHAIN
         BZ    PROC0010
         B     PROC0040
* ------------------------------------------------------------------- *
*        Open the library ACBs.                                       *
* ------------------------------------------------------------------- *
OPEN0000 DS    0H
         ITRACE ID=OPEN,                                               +
               DATA1=LIB_FUNCTION_LIB_NAME
         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         BZ    OPEN0080                       NO LIBRARIES DEFINED
         USING LIBBLOK,R4                     DEFINE BASE
OPEN0010 DS    0H
         CLC   LIB_FUNCTION_LIB_NAME,ALL
         BE    OPEN0020
         CLC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         BNE   OPEN0070
         TM    LIB_STATUS,$LIB_ALLOCATED
         BNO   OPEN0030
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         MVC   PRTMSGID(MSG08L),MSG08
         MVC   PRTMSGID+(MSG08NAM-MSG08)(L'MSG08NAM),LIB_NAME
         BAL   R8,PRT0000                     PRINT THE MESSAGE
         B     OPEN0070
OPEN0020 DS    0H
         TM    COMM_FLAGS,$INIT               INITALIZATION COMPLETE?
         BO    OPEN0030                       YES
         TM    LIB_STATUS,$LIB_AUTO_OPEN
         BNO   OPEN0070                       NO, SKIP THIS LIBRARY
OPEN0030 DS    0H
         TM    LIB_STATUS,$LIB_ALLOCATED
         BO    OPEN0070
         ITRACE ID=OPENING,                                            +
               DATA1=LIB_NAME
         LA    R3,LIB_ACB                     ACB'S ADDRESS
         USING IFGACB,R3                      DEFINE BASE
         MVC   DAIR_EYE,DAIRID                SET BLOCK EYE-CATCHER
         XC    DAIR_NEXT,DAIR_NEXT
         MVC   ACBDDNM,LIB_NAME               SET DDNAME IN ACB
         MVI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING
         MVC   DAIR_DD,LIB_NAME               SET DDNAME
         MVC   DAIR_DSN,LIB_VSAM_DSN          SET DATASET NAME
         MVC   DAIR_MEMBER,COMM_BLANKS        NO MEMBER NAME
         XC    DAIR_ECB,DAIR_ECB              CLEAR THE ECB
         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS
OPEN0040 DS    0H
         L     R2,COMM_DSUB_REQ
         ST    R2,DAIR_NEXT
         CS    R2,R1,COMM_DSUB_REQ
         BC    4,OPEN0040
         POST  COMM_DSUB_WORK_ECB             WAKEUP THE DAIR SUBTASK
         WAIT  1,ECB=DAIR_ECB                 WAIT
         OC    DAIR_R15,DAIR_R15              ALLOCATION SUCCESSFUL?
         BZ    OPEN0050                       YES
         STH   R15,WORKRC                     SAVE RETURN CODE
         LTR   R15,R15                        SUCCESSFUL?
         BZ    OPEN0050                       YES
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         MVC   PRTMSGID(MSG01L),MSG01
         MVC   PRTMSGID+(MSG01NAM-MSG01)(L'MSG01NAM),LIB_NAME
         MVC   PRTMSGID+(MSG01DSN-MSG01)(L'MSG01DSN),LIB_VSAM_DSN
         UNPK  PRTMSGID+(MSG01R15-MSG01)(5),DAIR_R15(3)
         MVZ   PRTMSGID+(MSG01R15-MSG01)(L'MSG01R15),HEX0000
         TR    PRTMSGID+(MSG01R15-MSG01)(L'MSG01R15),HEXCHAR
         MVI   PRTMSGID+(MSG01R15-MSG01)+4,C' '
         UNPK  PRTMSGID+(MSG01ERR-MSG01)(5),DAIR_ERROR(3)
         MVZ   PRTMSGID+(MSG01ERR-MSG01)(L'MSG01R15),HEX0000
         TR    PRTMSGID+(MSG01ERR-MSG01)(L'MSG01R15),HEXCHAR
         MVI   PRTMSGID+(MSG01ERR-MSG01)+4,C' '
         UNPK  PRTMSGID+(MSG01INF-MSG01)(5),DAIR_INFO(3)
         MVZ   PRTMSGID+(MSG01INF-MSG01)(L'MSG01R15),HEX0000
         TR    PRTMSGID+(MSG01INF-MSG01)(L'MSG01R15),HEXCHAR
         MVI   PRTMSGID+(MSG01INF-MSG01)+4,C' '
         BAL   R8,PRT0000                     PRINT MESSAGE
         B     OPEN0070
OPEN0050 DS    0H
         OI    LIB_STATUS,$LIB_ALLOCATED
         MVC   WORKOCPL(OPENL),OPENI
         OPEN  ((R3),UPDAT),                                           +
               MODE=31,                                                +
               MF=(E,WORKOCPL)
         STH   R15,WORKRC                     SAVE RETURN CODE
         LTR   R15,R15                        SUCCESSFUL?
         BZ    OPEN0060                       YES
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         MVC   PRTMSGID(MSG02L),MSG02
         MVC   PRTMSGID+(MSG02NAM-MSG02)(L'MSG02NAM),LIB_NAME
         MVC   PRTMSGID+(MSG02DSN-MSG02)(L'MSG02DSN),LIB_VSAM_DSN
         UNPK  PRTMSGID+(MSG02R-MSG02)(5),WORKRC(3)
         MVZ   PRTMSGID+(MSG02R-MSG02)(L'MSG02R),HEX0000
         TR    PRTMSGID+(MSG02R-MSG02)(L'MSG02R),HEXCHAR
         MVI   PRTMSGID+(MSG02R-MSG02)+4,C' '
         BAL   R8,PRT0000
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         B     OPEN0070
OPEN0060 DS    0H
         XC    LIB_KEY,LIB_KEY
         MVI   LIB_KEY_SEQ+3,X'01'
         LA    R1,WORKRPL
         LA    R2,LIB_RECORD
         MODCB RPL=(R1),                                               +
               ACB=(R3),                                               +
               AREA=(R2),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R2),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE)
         GET   RPL=WORKRPL
         LTR   R15,R15
         BNZ   OPEN0090
         OI    LIB_STATUS,$LIB_OPEN
         MVC   LIB_DESCRIPTION,LIB_DATA
         MVC   PRTMSGID(MSG03L),MSG03
         MVC   PRTMSGID+(MSG03NAM-MSG03)(L'MSG03NAM),LIB_NAME
         MVC   PRTMSGID+(MSG03DSN-MSG03)(L'MSG03DSN),LIB_VSAM_DSN
         BAL   R8,PRT0000
OPEN0070 DS    0H
         ICM   R4,15,LIB_NEXT
         BNZ   OPEN0010
         B     PROC0050
OPEN0080 DS    0H
         ITRACE ID=NOLIBS
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         B     PROC0050
OPEN0090 DS    0H
         ITRACE ID=NOTINIT
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         MVC   PRTMSGID(MSG11L),MSG11
         MVC   PRTMSGID+(MSG11NAM-MSG11)(L'MSG11NAM),LIB_NAME
         MVC   PRTMSGID+(MSG11DSN-MSG11)(L'MSG11DSN),LIB_VSAM_DSN
         BAL   R8,PRT0000
         B     PROC0050
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLOSE000 DS    0H
         ITRACE ID=CLOSE
         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         BZ    CLOSE080
CLOSE010 DS    0H
         CLC   LIB_FUNCTION_LIB_NAME,ALL
         BE    CLOSE020
         CLC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         BNE   CLOSE070
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BO    CLOSE020                       YES
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         MVC   PRTMSGID(MSG04L),MSG04
         MVC   PRTMSGID+(MSG04NAM-MSG04)(L'MSG04NAM),LIB_NAME
         MVC   PRTMSGID+(MSG04DSN-MSG04)(L'MSG04DSN),LIB_VSAM_DSN
         BAL   R8,PRT0000                     PRINT THE MESSAGE
         B     CLOSE070
CLOSE020 DS    0H
         TM    LIB_STATUS,$LIB_OPEN           LIBRARY OPEN?
         BNO   CLOSE030                       NO
         OC    LIB_USERS,LIB_USERS            ANYONE USING LIBRARY?
         BNZ   CLOSE050                       YES
         ITRACE ID=CLOSING,                                            +
               DATA1=LIB_NAME
         LA    R3,LIB_ACB                     ACB'S ADDRESS
         MVC   WORKOCPL(CLOSEL),CLOSEI
         CLOSE ((R3)),                                                 +
               MF=(E,WORKOCPL),                                        +
               MODE=31
         ITRACE ID=CLOSED
         MVC   PRTMSGID(MSG05L),MSG05
         MVC   PRTMSGID+(MSG05NAM-MSG05)(L'MSG05NAM),LIB_NAME
         MVC   PRTMSGID+(MSG05DSN-MSG05)(L'MSG05DSN),LIB_VSAM_DSN
         BAL   R8,PRT0000                     PRINT THE MESSAGE
         NI    LIB_STATUS,255-$LIB_OPEN
CLOSE030 DS    0H
         TM    LIB_STATUS,$LIB_ALLOCATED
         BNO   CLOSE070                       NOT ALLOCATED
         ITRACE ID=DEALLOC
         XC    DAIR_ECB,DAIR_ECB              CLEAR THE ECB
         MVI   DAIR_CMD,$DAIR_RELEASE         SET COMMAND
         MVC   DAIR_DD,LIB_NAME               SET DDNAME
         MVC   DAIR_DSN,LIB_VSAM_DSN          SET DATA SET NAME
         LA    R1,DAIRREQ                     DAIR REQUEST BLOCK ADDR
CLOSE040 DS    0H
         L     R2,COMM_DSUB_REQ               FIRST BLOCK NOW ON CHAIN
         ST    R2,DAIR_NEXT
         CS    R2,R1,COMM_DSUB_REQ            ADD NEW BLOCK TO CHAIN
         BC    4,CLOSE040                     TRY AGAIN
         POST  COMM_DSUB_WORK_ECB             WAKE UP DAIR SUBTASK
         WAIT  1,ECB=DAIR_ECB                 WAIT FOR DAIR TASK
         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?
         BZ    CLOSE060                       YES
         ITRACE ID=DAIRFAIL,                                           +
               DATA1=DAIR_R15
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         MVC   PRTMSGID(MSG06L),MSG06
         MVC   PRTMSGID+(MSG06NAM-MSG06)(L'MSG06NAM),LIB_NAME
         MVC   PRTMSGID+(MSG06DSN-MSG06)(L'MSG06DSN),LIB_VSAM_DSN
         UNPK  PRTMSGID+(MSG06R15-MSG06)(5),DAIR_R15(3)
         MVZ   PRTMSGID+(MSG06R15-MSG06)(L'MSG06R15),HEX0000
         TR    PRTMSGID+(MSG06R15-MSG06)(L'MSG06R15),HEXCHAR
         MVI   PRTMSGID+(MSG06R15-MSG06)+4,C' '
         UNPK  PRTMSGID+(MSG06ERR-MSG06)(5),DAIR_ERROR(3)
         MVZ   PRTMSGID+(MSG06ERR-MSG06)(L'MSG06R15),HEX0000
         TR    PRTMSGID+(MSG06ERR-MSG06)(L'MSG06R15),HEXCHAR
         MVI   PRTMSGID+(MSG06ERR-MSG06)+4,C' '
         UNPK  PRTMSGID+(MSG06INF-MSG06)(5),DAIR_INFO(3)
         MVZ   PRTMSGID+(MSG06INF-MSG06)(L'MSG06R15),HEX0000
         TR    PRTMSGID+(MSG06INF-MSG06)(L'MSG06R15),HEXCHAR
         MVI   PRTMSGID+(MSG06INF-MSG06)+4,C' '
         BAL   R8,PRT0000                     PRINT THE MESSAGE
         B     CLOSE070
CLOSE050 DS    0H
         ITRACE ID=BUSY
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         MVC   PRTMSGID(MSG07L),MSG07
         MVC   PRTMSGID+(MSG07NAM-MSG07)(L'MSG07NAM),LIB_NAME
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         BAL   R8,PRT0000                     PRINT THE MESSAGE
         B     CLOSE070
CLOSE060 DS    0H
         ITRACE ID=FREED
         NI    LIB_STATUS,255-$LIB_ALLOCATED
CLOSE070 DS    0H
         ICM   R4,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   CLOSE010
         B     PROC0050
CLOSE080 DS    0H
         ITRACE ID=NOLIBS
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         B     PROC0050
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLOSET00 DS    0H
         ITRACE ID=CLOSE_T,                                            +
               DATA1=LIB_FUNCTION_LIB_NAME
         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
CLOSET10 DS    0H
         CLC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         BE    CLOSET20
         ICM   R4,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   CLOSET10
         ABEND 2,DUMP,,USER
CLOSET20 DS    0H
         LA    R3,LIB_ACB                     ACB'S ADDRESS
         ITRACE ID=LIBFOUND,                                           +
               DATA1=LIB_FUNCTION_LIB_NAME,                            +
               RDATA2=R3
         MVC   WORKOCPL(CLOSEL),CLOSEI
         CLOSE ((R3)),                                                 +
               MF=(E,WORKOCPL),                                        +
               MODE=31,                                                +
               TYPE=T
         ITRACE ID=CLOSED_T,                                           +
               RDATA1=R15
         LTR   R15,R15
         BZ    PROC0050
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ADD0000  DS    0H
         L     R5,LIB_FUNCTION_USER           REQUESTING USERBLOK
         USING USERBLOK,R5                    DEFINE BASE
         ITRACE ID=ADD,                                                +
               DATA1=LIB_FUNCTION_LIB_NAME,                            +
               DATA2=USER_USER_ID
         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
ADD0010  DS    0H
         CLC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         BE    ADD0020
         ICM   R4,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   ADD0010
         ABEND 3,DUMP,,USER
ADD0020  DS    0H
         ITRACE ID=ADD0020,                                            +
               RDATA1=R5,                                              +
               DATA2=LIB_USERS
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BNO   ADD0060                        NO
         ICM   R6,15,LIB_USERS                FIRST USER
         USING LIBUSER,R6                     DEFINE BASE
         BZ    ADD0040                        NO USERS ON CHAIN
ADD0030  DS    0H
         C     R5,LIB_USER_USER               SAME USERBLOK ADDRESS?
         BE    ADD0050                        YES.. ALREADY ON CHAIN
         ICM   R6,15,LIB_USER_NEXT            NEXT LIBUSER BLOCK
         BNZ   ADD0030
ADD0040  DS    0H
         GETMAIN RU,                                                   +
               LV=LIBUSERL,                                            +
               LOC=ANY
         LR    R6,R1                          COPY NEW LIBUSER ADDRESS
         MVC   LIB_USER_EYE,LIB_USER_ID
         MVC   LIB_USER_NEXT,LIB_USERS
         ST    R5,LIB_USER_USER
         ST    R6,LIB_USERS
         ITRACE ID=ADDED,                                              +
               RDATA1=R4,                                              +
               RDATA2=R6
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK
         B     PROC0050
ADD0050  DS    0H
         MVC   LIB_FUNCTION_MESSAGE(MSG09L),MSG09
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         B     PROC0050
ADD0060  DS    0H
         ITRACE ID=CLOSED
         MVC   LIB_FUNCTION_MESSAGE(MSG10L),MSG10
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_ERROR
         B     PROC0050
* ------------------------------------------------------------------- *
*                                                                     *
*        Dequeue a library.                                           *
*                                                                     *
* ------------------------------------------------------------------- *
REM0000  DS    0H
         L     R5,LIB_FUNCTION_USER
         ITRACE ID=REMOVE,                                             +
               DATA1=LIB_FUNCTION_LIB_NAME,                            +
               DATA2=USER_USER_ID
         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
REM0010  DS    0H
         CLC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         BE    REM0020
         ICM   R4,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   REM0010
         ABEND 4,DUMP,,USER
REM0020  DS    0H
         LA    R7,LIB_USERS                   CHAIN POINT
         ICM   R6,15,LIB_USERS                FIRST USER
         BZ    REM0040                        NO USERS
REM0030  DS    0H
         C     R5,LIB_USER_USER               THIS USER?
         BE    REM0050                        YES
         LA    R7,LIB_USER_NEXT               CHAIN POINT
         ICM   R6,15,LIB_USER_NEXT            NEXT USER
         BNZ   REM0030
REM0040  DS    0H
         ITRACE ID=NOENQ
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK
         B     PROC0050
REM0050  DS    0H
         MVC   0(4,R7),LIB_USER_NEXT
         ITRACE ID=UNCHAIN
         FREEMAIN RU,                                                  +
               A=(R6),                                                 +
               LV=LIBUSERL
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK
         B     PROC0050
* ------------------------------------------------------------------- *
*                                                                     *
*     User subtask has ended.  Remove any LIBUSER blocks for the      *
*     user from all libraries.                                        *
*                                                                     *
* ------------------------------------------------------------------- *
REM1000  DS    0H
         ITRACE ID=REM_TASK,                                           +
               DATA1=LIB_FUNCTION_USER
         MVI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK
         ICM   R4,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
REM1020  DS    0H
         LA    R7,LIB_USERS                   CHAIN POINT
         ICM   R6,15,LIB_USERS                FIRST USER
         BZ    REM1040                        NO USERS
REM1030  DS    0H
         CLC   LIB_FUNCTION_USER,LIB_USER_USER
         BE    REM1050                        YES
         LA    R7,LIB_USER_NEXT               CHAIN POINT
         ICM   R6,15,LIB_USER_NEXT            NEXT USER
         BNZ   REM1030
REM1040  DS    0H
         ICM   R4,15,LIB_NEXT
         BNZ   REM1020
         B     PROC0050
REM1050  DS    0H
         MVC   0(4,R7),LIB_USER_NEXT
         ITRACE ID=UNCHAIN
         FREEMAIN RU,                                                  +
               A=(R6),                                                 +
               LV=LIBUSERL
         B     REM1020
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         MVC   LIB_FUNCTION_MESSAGE,PRTDATA
         GETMAIN RU,                                                   +
               LV=PRTBLOKL,                                            +
               LOC=ANY
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE
         ST    R2,PRTNEXT-PRTBLOK(R1)                         '
         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN
         BC    4,PRT0010                      TRY AGAIN
         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK
         BR    R8                             COMPLETE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE R13
         FREEMAIN RU,                         FREEMAIN WORK AREA       +
               A=(1),                                                  +
               LV=WORKAREA_L
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        CLEAR REGISTER
         BR    R14                            EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
ALL      DC    CL8'ALL'
HEX0000  DC    8X'00'
HEXCHAR  DC    C'0123456789ABCDEF'
PRTID    DC    CL8'PRTBLOK'
DAIRID   DC    CL8'DAIRREQ'
LIB_USER_ID    DC  CL8'LIBUSER'

MSG01    DC    C'LSUBMAIN01E'
         DC    C'Allocation failed for library '
MSG01NAM DC    CL8' '
         DC    C' ('
MSG01DSN DC    CL44' '
         DC    C'), R15='
MSG01R15 DC    CL4' '
         DC    C' ERR='
MSG01ERR DC    CL4' '
         DC    C' INFO='
MSG01INF DC    CL4' '
         DC    C' '
MSG01L   EQU   *-MSG01

MSG02    DC    C'LSUBMAIN02E'
         DC    C'OPEN failed for library '
MSG02NAM DC    CL8' '
         DC    C' ('
MSG02DSN DC    CL44' '
         DC    C'), R15='
MSG02R   DC    CL4' '
         DC    C' '
MSG02L   EQU   *-MSG02
MSG03    DC    C'LSUBMAIN03I'
         DC    C'LIBRARY '
MSG03NAM DC    CL8' '
         DC    C' ('
MSG03DSN DC    CL44' '
         DC    C') is open.'
MSG03L   EQU   *-MSG03

MSG04    DS    0C
         DC    CL11'LSUBMAIN04I'
         DC    C'Library '
MSG04NAM DC    CL8' '
         DC    C'('
MSG04DSN DC    CL44' '
         DC    C') is already closed'
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    CL11'LSUBMAIN05I'
         DC    C'Library '
MSG05NAM DC    CL8' '
         DC    C'('
MSG05DSN DC    CL44' '
         DC    C') closed'
MSG05L   EQU   *-MSG05

MSG06    DC    C'LSUBMAIN06E'
         DC    C'De-allocation failed for library '
MSG06NAM DC    CL8' '
         DC    C' ('
MSG06DSN DC    CL44' '
         DC    C'), R15='
MSG06R15 DC    CL4' '
         DC    C' ERR='
MSG06ERR DC    CL4' '
         DC    C' INFO='
MSG06INF DC    CL4' '
         DC    C' '
MSG06L   EQU   *-MSG06
MSG07    DS    0C
         DC    C'LSUBMAIN07E'
         DC    C'Library '
MSG07NAM DC    CL8' '
         DC    C' is busy, cannot CLOSE at this time'
MSG07L   EQU   *-MSG07
MSG08    DS    0C
         DC    C'LSUBMAIN08E'
         DC    C'Library '
MSG08NAM DC    CL8' '
         DC    C' is already open'
MSG08L   EQU   *-MSG08
MSG09    DS    0C
         DC    C'LSUBMAIN09E'
         DC    C'User is already on user chain'
MSG09L   EQU   *-MSG09
MSG10    DS    0C
         DC    C'LSUBMAIN10E'
         DC    C'Library is closed'
MSG10L   EQU   *-MSG10
MSG11    DS    0C
         DC    C'LSUBMAIN11E'
         DC    C'Library '
MSG11NAM DC    CL8' '
         DC    C', DSN='
MSG11DSN DC    CL44' '
         DC    C' is not initialized'
MSG11L   EQU   *-MSG11

OPENI    OPEN  (*,UPDAT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
RPLI     RPL   AM=VTAM
RPLL     EQU   *-RPLI
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
WORK       DSECT
           LIBSAVE DSECT=NO
WORKOCPL   DS      0F,(OPENL)X
WORKRPL    DS      0F,(RPLL)X
WORKRC     DS      H
           PRTBLOK DSECT=NO
           DAIRREQ DSECT=NO
           LIBRECD DSECT=NO
           DS      ($MAX_SOURCE_SIZE*2)X
WORKAREA_L EQU     *-WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBFUNC  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LIBUSER  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGEXLST AM=VSAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGRPL   AM=VSAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA LIST=NO
         COPY  REGEQU
$MAX_SOURCE_SIZE EQU 8000
         END   LSUBMAIN
./ ADD NAME=SUBCKIN  0100-09250-09250-0919-00291-00291-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: SUBCKIN                                               *
*                                                                     *
*  Check in a member.                                                 *
*                                                                     *
*  Parameter list:                                                    *
*         Library APPLID          8 characters                        *
*         Library name            8 characters                        *
*         Member name             8 characters                        *
*         Function                8 characters                        *
*         User dataset           44 characters                        *
*         User member             8 characters                        *
*         return code             2 characters                        *
*                                                                     *
* ------------------------------------------------------------------- *
SUBCKIN  CSECT
SUBCKIN  AMODE 31
SUBCKIN  RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING SUBCKIN,R12                    DEFINE PROGRAM BASE
         B     INIT0000
MODID    DC    CL8'SUBCKIN'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESS
         USING PARM_LIST,R10                  DEFINE BASE
         USING VTAM_PARM_LIST,R11             DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORK_AREA_LENGTH,                                    +
               LOC=BELOW
         ST    R1,8(R13)                      CHAIN OUR SAVE AREA
         ST    R13,4(R1)                      CHAIN CALLER'S AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WORK_AREA,R13                  DEFINE WORK AREA BASE
         MVI   WORK_RC,0
         LOAD  EP=LIBUX01
         ST    R0,AUX01
* ------------------------------------------------------------------- *
*                                                                     *
*   Determine if user is authorized to check-in the specified member. *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R8,VTAM_PARM_IO                I/O AREA ADDRESS
         USING NETBLOK,R8                     DEFINE BASE
         MVI   NET_FUNCTION,$NET_CHECK_IN_AUTH
         MVC   NET_LIB_NAME,PARM_LIB_NAME
         MVC   NET_MEM_NAME,PARM_MEM_NAME
         MVC   NET_MEM_VER,PARM_MEM_VERSION
         LA    R1,NET_CHECK_IN_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA'
         BAL   R9,SEND0010
* ------------------------------------------------------------------- *
*                                                                     *
*   The user is authorized to update this member.                     *
*                                                                     *
*   Normally the message area in the subroutine parms is for the      *
*   LIBRARIAN to return messages to the user.  On check-ins the       *
*   message area is for the user to supply the comments.              *
*                                                                     *
* ------------------------------------------------------------------- *
         LA    R1,PARM_MSG                    FIRST PARM MESSAGE
         LA    R2,5                           MAXIMUM NUMBER OF LINES
DESC0000 DS    0H
         CLC   BLANKS,0(R1)                   ALL BLANK?
         BNE   DESC0010                       NO
         LA    R1,80(R1)
         BCT   R2,DESC0000                    LOOP
         B     LIB0000
DESC0010 DS    0H
         MVC   NET_DATA(200),PARM_MSG
         MVC   NET_DATA+200(200),PARM_MSG+200
         LA    R1,NET_DATA+(80*4)             ADDRESS OF 5TH LINE
         LA    R2,NETBLOKL+(80*5)             MAXIMUM LENGTH
         LA    R3,5                           LOOP LIMITER
DESC0020 DS    0H
         CLC   BLANKS,0(R1)                   ALL BLANK?
         BNE   DESC0030                       NO
         SH    R1,H80                         BACK UP 1 LINE
         SH    R2,H80                         BACK UP LENGTH
         BCT   R3,DESC0020                    LOOP
DESC0030 DS    0H
         STCM  R2,3,NET_LENGTH                SET LENGTH
         MVI   NET_FUNCTION,$NET_SEND_DESC
         BAL   R9,SEND0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LIB0000  DS    0H                                                     *
         GETMAIN RU,                                                   +
               LV=DCBL,                                                +
               LOC=BELOW
         ST    R1,WORK_DCB
         LR    R3,R1                          COPY DCB STORAGE ADDRESS
         MVC   0(DCBL,R3),DCBI                INITIALIZE THE DCB
         MVC   WORK_OCPL(OPENL),OPENI         INITIALIZE OPEN
         OPEN  ((R3),INPUT),                                           +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=ANY
         ST    R1,UX01_EXPANDED_BUFFER
         LA    R1,WORK_EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER
         ST    R1,UX01_COMPRESSED_BUFFER
         LA    R1,WORK_COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
         SR    R4,R4                          INITIALIZE LENGTH
         L     R5,UX01_EXPANDED_BUFFER
         SR    R6,R6                          CLEAR FOR RECORD COUNTER
LIB0010  DS    0H
         GET   (R3),WORK_IO                   READ A RECORD
         LA    R6,1(R6)                       PLUS 1 SOURCE RECORD
         CH    R4,=y($MAX_SOURCE_SIZE)        BUFFER FULL?
         BL    LIB0020                        NO
         BAL   R9,SEND0000                    SEND THIS BUFFER
         SR    R4,R4                          RESET BUFFER LENGTH
         L     R5,UX01_EXPANDED_BUFFER        RESET BUFFER ADDRESS
LIB0020  DS    0H
         MVC   0(80,R5),WORK_IO               COPY TO BUFFER
         LA    R4,80(R4)                      UPDATE BUFFER LENGTH
         LA    R5,80(R5)                      UPDATE BUFFER ADDRESS
         B     LIB0010                        READ NEXT RECORD
EOF0000  DS    0H
         MVI   NET_RETURN_CODE,$NET_EOF       LAST BUFFER
         BAL   R9,SEND0000                    SEND LAST BUFFER
         MVC   WORK_OCPL(CLOSEL),CLOSEI
         CLOSE ((R3)),                                                 +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         FREEMAIN RU,A=(3),LV=DCBL
         L     R1,UX01_EXPANDED_BUFFER        INPUT BUFFER ADDRESS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE
         MVI   NET_FUNCTION,$NET_SEND_RECORDS
         MVI   NET_RETURN_CODE,$NET_OK
         STCM  R6,15,NET_SOURCE_RECORDS       SET NUMBER OF RECORDS
         LA    R1,NETBLOK+L'NET_SOURCE_RECORDS
         STCM  R1,3,NET_LENGTH                SET LENGTH
         BAL   R9,SEND0010
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*    Compress and send the buffer                                     *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         LTR   R4,R4                          BUFFER EMPTY?
         BZR   R9                             YES
         ST    R4,WORK_EXPANDED_LENGTH        SET LENGTH FOR COMPRESS
         MVI   UX01_FUNCTION,$UX01_COMPRESS
         LA    R1,UX01_PARMS                  USER EXIT 1 PARMS
         L     R15,AUX01                      USER EXIT 1 ENTRY POINT
         BALR  R14,R15                        COMPRESS
         L     R1,WORK_COMPRESSED_LENGTH      COMPRESSED LENGTH
         LA    R1,NETBLOKL(R1)                PLUS HEADER LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         MVI   NET_FUNCTION,$NET_CHECK_IN_SOURCE
SEND0010 DS    0H
         MVI   VTAM_PARM_CMD,$VTAM_SEND
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUBROUTINE
         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUBROUTINE
         CLI   NET_RETURN_CODE,$NET_OK        OK?
         BNE   ERR0010                        NO
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   WORK_RC,NET_RETURN_CODE        SET RETURN CODE
         LA    R2,PARM_MSG                    FIRST MESSAGE
         LA    R15,5                          LOOP COUNTER
ERR0020  DS    0H
         MVC   0(80,R2),BLANKS                CLEAR THE MESSAGE
         LA    R2,80(R2)
         BCT   R15,ERR0020                    LOOP
         LA    R2,PARM_MSG
         LA    R3,NET_DATA                    FIRST MESSAGE IN I/O AREA
         SR    R15,R15                        CLEAR REGISTER
         ICM   R15,3,NET_LENGTH               DATA LENGTH
         SH    R15,=Y(NETBLOKL)               MINUS HEADER LENGTH
         BZ    EXIT0000
ERR0030  DS    0H
         MVC   0(80,R2),0(R3)                 COPY MESSAGE
         LA    R2,80(R2)                      NEXT IN PARM AREA
         LA    R3,80(R3)                      NEXT IN I/O AREA
         SH    R15,H80                        MINUS LENGTH
         BH    ERR0030                        COPY ALL MESSAGE LINES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         DELETE EP=LIBUX01
         SR    R2,R2                          CLEAR REGISTER
         IC    R2,WORK_RC                     SET RETURN CODE
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=WORK_AREA_LENGTH
         LR    R15,R2                         SET RETURN CODE
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
VVTAMSUB DC    V(VTAMSUB)

DCBI     DCB   DSORG=PS,                                               +
               DDNAME=LIBUSER,                                         +
               MACRF=GM,                                               +
               DCBE=DCBEXT
DCBL     EQU   *-DCBI
DCBEXT   DCBE  EODAD=EOF0000
OPENI    OPEN  (*,OUTPUT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
H80      DC    H'80'
BLANKS   DC    CL80' '

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORK_AREA              DSECT
                       DS  18F

AUX01                  DS  A
                       UX01PARM DSECT=NO

WORK_EXPANDED_LENGTH   DS  A            LENGTH OF EXPANDED DATA
WORK_COMPRESSED_LENGTH DS  A            LENGTH OF COMPRESSED DATA

WORK_DCB               DS  0F,(DCBL)X
WORK_OCPL              DS  0F,(OPENL)X

WORK_RC                DS  X

WORK_IO                DS  CL80
         VTAMPARM      DSECT=NO

WORK_AREA_LENGTH       EQU *-WORK_AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM_LIST              DSECT
PARM_APPL              DS       CL8
PARM_LIB_NAME          DS       CL8
PARM_MEM_NAME          DS       CL8
PARM_MEM_VERSION       DS       XL2
PARM_FUNCTION          DS       CL8
PARM_USER_DSN          DS       CL44
PARM_USER_MEMBER       DS       CL8
PARM_RETURN_CODE       DS       C
PARM_MSG               DS      0CL80
PARM_MSG_1             DS       CL80
PARM_MSG_2             DS       CL80
PARM_MSG_3             DS       CL80
PARM_MSG_4             DS       CL80
PARM_MSG_5             DS       CL80
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK       DSECT=YES
NET_LIB_NAME           DS  CL8
NET_MEM_NAME           DS  CL8
NET_MEM_VER            DS  XL2
NET_CHECK_IN_LENGTH    EQU *-NETBLOK
         ORG           NET_DATA
NET_SOURCE_RECORDS     DS  XL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
$MAX_SOURCE_SIZE  EQU  8000
         COPY REGEQU
         END  SUBCKIN
./ ADD NAME=SUBCKOUT 0100-09250-09250-0919-00276-00276-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: SUBCKOUT                                              *
*                                                                     *
*  Check out a member.                                                *
*                                                                     *
*  Parameter list:                                                    *
*         Library APPLID          8 characters                        *
*         Library name            8 characters                        *
*         Member name             8 characters                        *
*         Member version          2 bytes, hex                        *
*         Function                8 characters                        *
*         User dataset           44 characters                        *
*         User member             8 characters                        *
*         return code             2 characters                        *
*                                                                     *
* ------------------------------------------------------------------- *
SUBCKOUT CSECT
SUBCKOUT AMODE 31
SUBCKOUT RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING SUBCKOUT,R12                   DEFINE PROGRAM BASE
         B     INIT0000
MODID    DC    CL8'SUBCKOUT'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESS
         USING PARM_LIST,R10                  DEFINE BASE
         USING VTAM_PARM_LIST,R11             DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORK_AREA_LENGTH,                                    +
               LOC=BELOW
         ST    R1,8(R13)                      CHAIN OUR SAVE AREA
         ST    R13,4(R1)                      CHAIN CALLER'S AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WORK_AREA,R13                  DEFINE WORK AREA BASE
         MVI   WORK_RC,0
         XC    WORK_AUX01,WORK_AUX01
* ------------------------------------------------------------------- *
*                                                                     *
*  Determine if user is authorized to check-out the specified member. *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R8,VTAM_PARM_IO                I/O AREA ADDRESS
         USING NETBLOK,R8                     DEFINE BASE
         MVI   NET_FUNCTION,$NET_CHECK_OUT_AUTH
         MVC   NET_LIB_NAME,PARM_LIB_NAME
         MVC   NET_MEM_NAME,PARM_MEM_NAME
         MVC   NET_MEM_VERSION,PARM_MEM_VERSION
         LA    R1,NET_CHECK_OUT_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         BAL   R9,SENDRECV
         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?
         BNE   ERR0010                        NO
* ------------------------------------------------------------------- *
*                                                                     *
*   The user is authorized to check-out this member.                  *
*                                                                     *
*   The LIBRARIAN will have returned the number of records in the     *
*   original source.  We need this info to 'de-compress' the data.    *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   WORK_SOURCE_RECORDS,NET_SOURCE_RECORDS
         LA    R2,5                           MAXIMUM NUMBER OF LINES
         LA    R1,PARM_MSG                    FIRST MESSAGE
INIT0010 DS    0h
         MVC   0(80,R1),BLANKS
         LA    R1,80(R1)
         BCT   R2,INIT0010                    LOOP
         MVI   NET_FUNCTION,$NET_CHECK_OUT_SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LIB0000  DS    0H                                                     *
         GETMAIN RU,                                                   +
               LV=DCBL,                                                +
               LOC=BELOW
         ST    R1,WORK_DCB
         LR    R3,R1                          COPY DCB STORAGE ADDRESS
         MVC   0(DCBL,R3),DCBI                INITIALIZE THE DCB
         MVC   WORK_OCPL(OPENL),OPENI         INITIALIZE OPEN
         OPEN  ((R3),OUTPUT),                                          +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=ANY
         ST    R1,UX01_EXPANDED_BUFFER
         LA    R1,WORK_EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER
         ST    R1,UX01_COMPRESSED_BUFFER
         LA    R1,WORK_COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
         OC    WORK_AUX01,WORK_AUX01          USER EXIT LOADED?
         BNZ   LIB0010                        YES, SKIP LOAD
         LOAD  EP=LIBUX01
         ST    R0,WORK_AUX01
LIB0010  DS    0H
         LA    R1,NETBLOKL                    LENGTH IS HEADER ONLY
         STCM  R1,3,NET_LENGTH
         BAL   R9,SENDRECV                    SEND AND RECEIVE
         CLI   NET_RETURN_CODE,$NET_ERROR     ERROR?
         BE    ERR0020                        YES
         CLI   NET_RETURN_CODE,$NET_EOF       EOF?
         BE    EOF0000                        YES
         L     R4,WORK_SOURCE_RECORDS         NUMBER OF SOURCE RECORDS
         CH    R4,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?
         BL    LIB0020                        NO
         LH    R4,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER
LIB0020  DS    0H                             CLEAR FOR RECORD COUNTER
         ST    R4,WORK_CURRENT_RECORDS        NUMBER IN CURRENT BUFFER
         L     R1,WORK_SOURCE_RECORDS         NUMBER OF RECORDS LEFT
         SR    R1,R4                          MINUS NBR IN THIS BUFFER
         ST    R1,WORK_SOURCE_RECORDS         SAVE REMAINDER
         MH    R4,H80                         NUMBER * REC LENGTH
         ST    R4,WORK_EXPANDED_LENGTH        SET LENGTH
         MVI   UX01_FUNCTION,$UX01_DECOMPRESS
         LA    R1,UX01_PARMS                  USER EXIT PARM LIST
         L     R15,WORK_AUX01                 USER EXIT 1 ENTRY POINT
         BALR  R14,R15                        ALLOW DE-COMPRESSION
         L     R2,UX01_EXPANDED_BUFFER        UNCOMPRESSED DATA ADDRESS
         L     R4,WORK_CURRENT_RECORDS        NUMBER OF RECORDS
LIB0030  DS    0H
         PUT   (R3),(R2)                      WRITE TO USER'S DATA SET
         LA    R2,80(R2)                      NEXT RECORD
         BCT   R4,LIB0030                     LOOP
         B     LIB0010                        ASK FOR NEXT BLOCK
EOF0000  DS    0H
         MVC   WORK_OCPL(CLOSEL),CLOSEI
         CLOSE ((R3)),                        CLOSE DCB                +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         FREEMAIN RU,A=(3),LV=DCBL
         L     R1,UX01_EXPANDED_BUFFER        INPUT BUFFER ADDRESS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE
* ------------------------------------------------------------------- *
*                                                                     *
*      Send the CONFIRM.                                              *
*                                                                     *
*      The LIBRARIAN does not update the member's statistics or       *
*      CHECK-IN/CHECK-OUT status until it receives the CONFIRM.       *
*                                                                     *
* ------------------------------------------------------------------- *
         MVI   NET_FUNCTION,$NET_CONFIRM_CHECK_OUT
         LA    R1,NETBLOKL
         STCM  R1,3,NET_LENGTH
         BAL   R9,SENDRECV                    SEND CONFIRMATION
         B     EXIT0000
SENDRECV DS    0H
         MVI   VTAM_PARM_CMD,$VTAM_SEND
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUB
         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUB
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   WORK_RC,4                      SET RETURN CODE
         MVC   PARM_MSG_1,NET_MSG_1           FIRST MESSAGE
         MVC   PARM_MSG_2,NET_MSG_2           FIRST MESSAGE
         MVC   PARM_MSG_3,NET_MSG_3           FIRST MESSAGE
         MVC   PARM_MSG_4,NET_MSG_4           FIRST MESSAGE
         MVC   PARM_MSG_5,NET_MSG_5           FIRST MESSAGE
ERR0020  DS    0H
         ABEND 1,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         OC    WORK_AUX01,WORK_AUX01          USER EXIT LOADED?
         BZ    EXIT0010                       NO
         DELETE EP=LIBUX01                    DELETE THE EXIT
         XC    WORK_AUX01,WORK_AUX01          CLEAR THE ADDRESS
EXIT0010 DS    0H
         SR    R2,R2                          CLEAR REGISTER
         IC    R2,WORK_RC                     SET RETURN CODE
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=WORK_AREA_LENGTH
         LR    R15,R2                         SET RETURN CODE
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
VVTAMSUB DC    V(VTAMSUB)

DCBI     DCB   DSORG=PS,                                               +
               DDNAME=LIBUSER,                                         +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               BLKSIZE=$MAX_SOURCE_SIZE,                               +
               MACRF=PM
DCBL     EQU   *-DCBI
OPENI    OPEN  (*,OUTPUT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
H80      DC    H'80'
BLANKS   DC    CL80' '

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORK_AREA              DSECT
                       DS    18F

                       UX01PARM DSECT=NO

WORK_AUX01             DS    A

WORK_EXPANDED_LENGTH   DS    A             LENGTH OF EXPANDED DATA
WORK_COMPRESSED_LENGTH DS    A             LENGTH OF COMPRESSED DATA

WORK_SOURCE_RECORDS    DS    F             NUMBER OF RECORDS IN SOURCE
WORK_CURRENT_RECORDS   DS    F             NUMBER OF RECORDS IN BUFFER

WORK_DCB               DS    0F,(DCBL)X
WORK_OCPL              DS    0F,(OPENL)X

WORK_RC                DS    X

         VTAMPARM      DSECT=NO

WORK_AREA_LENGTH       EQU   *-WORK_AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM_LIST              DSECT
PARM_APPL              DS    CL8
PARM_LIB_NAME          DS    CL8
PARM_MEM_NAME          DS    CL8
PARM_MEM_VERSION       DS    XL2
PARM_FUNCTION          DS    CL8
PARM_USER_DSN          DS    CL44
PARM_USER_MEMBER       DS    CL8
PARM_RETURN_CODE       DS    C
PARM_MSG               DS   0CL80
PARM_MSG_1             DS    CL80
PARM_MSG_2             DS    CL80
PARM_MSG_3             DS    CL80
PARM_MSG_4             DS    CL80
PARM_MSG_5             DS    CL80
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                       NETBLOK  DSECT=YES
NET_LIB_NAME           DS    CL8
NET_MEM_NAME           DS    CL8
NET_MEM_VERSION        DS    XL2
NET_CHECK_OUT_LENGTH   EQU   *-NETBLOK
                       ORG   NET_DATA
NET_SOURCE_RECORDS     DS    XL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
$MAX_SOURCE_SIZE       EQU   8000
                       COPY  REGEQU
         END  SUBCKOUT
./ ADD NAME=SUBDEL   0100-09250-09250-0919-00154-00154-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: SUBDEL                                                *
*                                                                     *
*  DELETE a member                                                    *
*                                                                     *
*  Parameter list:                                                    *
*         Library APPLID          8 characters                        *
*         Library name            8 characters                        *
*         Member name             8 characters                        *
*         Function                8 characters                        *
*         User dataset           44 characters                        *
*         User member             8 characters                        *
*         return code             2 characters                        *
*                                                                     *
* ------------------------------------------------------------------- *
SUBDEL   CSECT
SUBDEL   AMODE 31
SUBDEL   RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING SUBDEL,R12                     DEFINE PROGRAM BASE
         B     INIT0000
MODID    DC    CL8'SUBDEL'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESS
         USING PARM_LIST,R10                  DEFINE BASE
         USING VTAM_PARM_LIST,R11             DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORK_AREA_LENGTH,                                    +
               LOC=ANY
         ST    R1,8(R13)                      CHAIN OUR SAVE AREA
         ST    R13,4(R1)                      CHAIN CALLER'S AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WORK_AREA,R13                  DEFINE WORK AREA BASE
         MVI   WORK_RC,0
* ------------------------------------------------------------------- *
*                                                                     *
*   Determine if user is authorized                                   *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R8,VTAM_PARM_IO                I/O AREA ADDRESS
         USING NETBLOK,R8                     DEFINE BASE
         MVI   NET_FUNCTION,$NET_CHECK_DEL_AUTH
         MVC   NET_LIB_NAME,PARM_LIB_NAME
         MVC   NET_MEM_NAME,PARM_MEM_NAME
         MVC   NET_MEM_VER,PARM_MEM_VERSION
         LA    R1,NET_DESC_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA'
         BAL   R9,SEND0000
         CLI   NET_RETURN_CODE,$NET_ERROR
         BE    ERR0010
* ------------------------------------------------------------------- *
*                                                                     *
*   The user is authorized                                            *
*                                                                     *
*   Send the DELETE command                                           *
*                                                                     *
* ------------------------------------------------------------------- *
         STCM  R2,3,NET_LENGTH                SET LENGTH
         MVI   NET_FUNCTION,$NET_DELETE
         BAL   R9,SEND0000
         CLI   NET_RETURN_CODE,$NET_ERROR
         BE    ERR0010
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         MVI   VTAM_PARM_CMD,$VTAM_SEND
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUB
         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUB
         MVC   PARM_MSG_1,NET_MSG_1           COPY MESSAGE
         MVC   PARM_MSG_2,NET_MSG_2           COPY MESSAGE
         MVC   PARM_MSG_3,NET_MSG_3           COPY MESSAGE
         MVC   PARM_MSG_4,NET_MSG_4           COPY MESSAGE
         MVC   PARM_MSG_5,NET_MSG_5           COPY MESSAGE
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   WORK_RC,8                      SET NON ZERO RETURN CODE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         SR    R2,R2                          CLEAR REGISTER
         IC    R2,WORK_RC                     SET RETURN CODE
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORK_AREA_LENGTH
         LR    R15,R2                         SET RETURN CODE
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
VVTAMSUB DC    V(VTAMSUB)

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORK_AREA           DSECT
                    DS  18F
WORK_RC             DS  X

         VTAMPARM   DSECT=NO

WORK_AREA_LENGTH    EQU   *-WORK_AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM_LIST           DSECT
PARM_APPL           DS    CL8
PARM_LIB_NAME       DS    CL8
PARM_MEM_NAME       DS    CL8
PARM_MEM_VERSION    DS    XL2
PARM_FUNCTION       DS    CL8
PARM_USER_DSN       DS    CL44
PARM_USER_MEMBER    DS    CL8
PARM_RETURN_CODE    DS    C
PARM_MSG            DS   0CL80
PARM_MSG_1          DS    CL80
PARM_MSG_2          DS    CL80
PARM_MSG_3          DS    CL80
PARM_MSG_4          DS    CL80
PARM_MSG_5          DS    CL80
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK    DSECT=YES
NET_LIB_NAME        DS    CL8
NET_MEM_NAME        DS    CL8
NET_MEM_VER         DS    XL2
NET_DESC_LENGTH     EQU   *-NETBLOK
NET_MEM_DOC         DS    XL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  SUBDEL
./ ADD NAME=SUBLIBS  0100-09250-09250-0919-00175-00175-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: SUBLIBS                                               *
*                                                                     *
*  Returns a list of libraries available from this librarian.         *
*                                                                     *
*  Parameter list:                                                    *
*         Library APPLID          8 characters                        *
*         Library name            8 characters                        *
*         Member name             8 characters                        *
*         Function                8 characters                        *
*         User dataset           44 characters                        *
*         User member             8 characters                        *
*         Return code             2 characters                        *
*                                                                     *
* ------------------------------------------------------------------- *
SUBLIBS  CSECT
SUBLIBS  AMODE 31
SUBLIBS  RMODE ANY
         STM   R14,R12,12(R13)                  SAVE REGISTERS
         LR    R12,R15                          SET BASE REGISTER
         USING SUBLIBS,R12                      DEFINE PROGRAM BASE
         B     INIT0000
MODID    DC    CL8'SUBLIBS'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LM    R10,R11,0(R1)                    COPY PARM BLOCK ADDRESS
         USING PARM_LIST,R10                    DEFINE BASE
         USING VTAM_PARM_LIST,R11               DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORK_AREA_LENGTH,                                    +
               LOC=BELOW
         ST    R1,8(R13)                        CHAIN OUR SAVE AREA
         ST    R13,4(R1)                        CHAIN CALLER'S AREA
         LR    R13,R1                           COPY WORK AREA ADDRESS
         USING WORK_AREA,R13                    DEFINE WORK AREA BASE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
*        WTO   'SUBLIBS GETMAIN DCB'
         GETMAIN RU,                                                   +
               LV=DCBL,                                                +
               LOC=BELOW
         ST    R1,WORK_DCB
         LR    R3,R1                            COPY DCB ADDRESS
         MVC   0(DCBL,R3),DCBI                  INITIALIZE THE DCB
         MVC   WORK_OCPL(OPENL),OPENI           INITIALIZE OPEN
*        WTO   'SUBLIBS OPEN DCB'
         OPEN  ((R3),OUTPUT),                                          +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LIB0000  DS    0H
*        WTO   'SUBLIBS ISSUE SEND'
         L     R9,VTAM_PARM_IO                  I/O AREA ADDRESS
         USING NETBLOK,R9                       DEFINE BASE
         MVI   NET_FUNCTION,$NET_GET_LIBS
         LA    R1,NETBLOKL
         STCM  R1,3,NET_LENGTH                  SET LENGTH
         XC    NET_FILL,NET_FILL                CLEAR THE FILLER AREA'
         MVI   VTAM_PARM_CMD,$VTAM_SEND
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                     VTAM SUB ENTRY POINT
         BALR  R14,R15                          LINK TO VTAM SUB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
*        WTO   'SUBLIBS ISSUE RECEIVE'
         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                     VTAM SUB ENTRY POINT
         BALR  R14,R15                          LINK TO VTAM SUB
         MVC   WORK_IO,BLANKS
         SR    R0,R0                            CLEAR REGISTER
         SR    R1,R1                            CLEAR REGISTER
         ICM   R1,3,NET_LENGTH                  TOTAL DATA LENGTH
         SH    R1,=Y(NETBLOKL)                  MINUS PREFIX LENGTH
         D     R0,=A(NET_LIBRARY_LENGTH)        NUMBER IN THIS BUFFER
         LTR   R2,R1                            ZERO?
         BZ    LIB0020                          YES
         LA    R4,NET_LIBRARY_NAMES             FIRST LIBRARY NAME
LIB0010  DS    0H
*        WTO   'SUBLIBS WRITE TO USER DATA SET'
         MVC   WORK_IO(NET_LIBRARY_LENGTH),0(R4)
         PUT   (R3),WORK_IO                     WRITE TO DATA SET
         LA    R4,NET_LIBRARY_LENGTH(R4)
         BCT   R2,LIB0010
LIB0020  DS    0H
         CLI   NET_RETURN_CODE,$NET_EOF
         BNE   LIB0000                NO
*        WTO   'SUBLIBS CLOSE DCB'
         MVC   WORK_OCPL(CLOSEL),CLOSEI
         CLOSE ((R3)),                                                 +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         FREEMAIN RU,                                                  +
               A=(R3),                                                 +
               LV=DCBL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
*        WTO   'SUBLIBS EXIT'
         LR    R1,R13                           COPY WORK AREA ADDRESS
         L     R13,4(R13)                       RESTORE R13
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=WORK_AREA_LENGTH
         LM    R14,R12,12(R13)                  RESTORE R14
         SR    R15,R15                          SET RETURN CODE TO ZERO
         BR    R14                              RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
VVTAMSUB DC    V(VTAMSUB)

DCBI     DCB   DSORG=PS,                                               +
               DDNAME=LIBUSER,                                         +
               MACRF=PM
DCBL     EQU   *-DCBI
OPENI    OPEN  (*,OUTPUT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
BLANKS   DC    CL80' '

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORK_AREA           DSECT
                    DS   18F

WORK_DCB            DS   (DCBL)X
WORK_OCPL           DS   (OPENL)X
WORK_IO             DS   CL80
         VTAMPARM   DSECT=NO

WORK_AREA_LENGTH    EQU  *-WORK_AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM_LIST           DSECT
PARM_APPL           DS   CL8
PARM_LIB_NAME       DS   CL8
PARM_MEM_NAME       DS   CL8
PARM_FUNCTION       DS   CL8
PARM_USER_DSN       DS   CL44
PARM_USER_MEMBER    DS   CL8
PARM_RETURN_CODE    DS   CL2
PARM_MSG            DS  0CL80
PARM_MSG_1          DS   CL80
PARM_MSG_2          DS   CL80
PARM_MSG_3          DS   CL80
PARM_MSG_4          DS   CL80
PARM_MSG_5          DS   CL80
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK    DSECT=YES
NET_LIBRARY_NAMES   DS   0C
NET_LIBRARY_NAME    DS   CL8
NET_LIBRARY_DESC    DS   CL40
NET_LIBRARY_STATUS  DS   x
NET_LIBRARY_LENGTH  EQU  *-NET_LIBRARY_NAME
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  SUBLIBS
./ ADD NAME=SUBMAIN  0100-09250-09250-0919-00490-00490-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: SUBMAIN - "SUBROUTINE" INTERFACE TO THE LIBRARIAN.    *
*                                                                     *
*                                                                     *
*                                                                     *
*  Parmeter list:                                                     *
*         Library APPLID          8 characters                        *
*         Library name            8 characters                        *
*         Member name             8 characters                        *
*         Member version          2 bytes, binary                     *
*         Function                8 characters                        *
*         User dataset           44 characters                        *
*         User member             8 characters                        *
*         return code             1 character                         *
*                                                                     *
* ------------------------------------------------------------------- *
SUBMAIN  CSECT
SUBMAIN  AMODE 31
SUBMAIN  RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING SUBMAIN,R12                    DEFINE PROGRAM BASE
         B     INIT0000
MODID    DC    CL8'SUBMAIN'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LR    R10,R1                         COPY PARM BLOCK ADDRESS
         USING PARM_LIST,R10                  DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORK_AREA_LENGTH,                                    +
               LOC=BELOW
         ST    R1,8(R13)                      CHAIN OUR SAVE AREA
         ST    R13,4(R1)                      CHAIN CALLER'S AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WORK_AREA,R13                  DEFINE WORK AREA BASE
         MVI   WORK_FLAGS,0                   CLEAR ALL FLAGS
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
INIT0010 DS    0H
         MVI   PARM_RETURN_CODE,0
         ST    R10,SUB_PARM_PARM1
         LA    R1,VTAM_PARM_LIST
         ST    R1,SUB_PARM_PARM2
*---------------------------------------------------------------------*
*        Verify function                                              *
*---------------------------------------------------------------------*
         LA    R8,FNCTABLE                    FUNCTION TABLE ADDRESS
         USING FNCDSECT,R8                    DEFINE BASE
INIT0020 DS    0H
         CLI   0(R8),X'FF'                    END OF TABLE?
         BE    ERR0010                        YES
         CLC   PARM_FUNCTION,FNCFUNC          FUNCTION FOUND?
         BE    INIT0030                       YES
         LA    R8,FNCL(R8)                    NEXT FUNCTION
         B     INIT0020                       LOOP
*---------------------------------------------------------------------*
*        Allocate user data set                                       *
*---------------------------------------------------------------------*
INIT0030 DS    0H
         MVC   SUB0001_PARM_DSN,PARM_USER_DSN
         LA    R1,SUB0001_PARM_LIST
         L     R15,VSUB0001                   SUB0001 ENTRY POINT
         BALR  R14,R15                        LINK TO SUB0001
         CLI   SUB0001_PARM_DSORG,C'S'        SEQUENTIAL FILE?
         BE    INIT0040                       YES
         CLI   SUB0001_PARM_DSORG,C'P'        PARTITIONED?
         BNE   ERR0090                        NO
         CLC   PARM_USER_MEMBER,BLANKS        MEMBER GIVEN?
         BE    ERR0100                        NO
         B     INIT0050
INIT0040 DS    0H
         CLC   PARM_USER_MEMBER,BLANKS        MEMBER GIVEN?
         BNE   ERR0110                        YES
INIT0050 DS    0H
         BAL   R9,DAIR0000                    ALLOCATE THE DATA SET
         LTR   R15,R15                        DATA SET ALLOCATED?
         BNZ   ERR0020                        NO
         OI    WORK_FLAGS,$USER_ALLOCATED
*---------------------------------------------------------------------*
*        Establish link to STC                                        *
*---------------------------------------------------------------------*
         XC    VTAM_PARM_LIST(VTAM_PARM_LENGTH),VTAM_PARM_LIST
         MVI   VTAM_PARM_CMD,$VTAM_OPEN
         MVC   VTAM_PARM_APPL,PARM_APPL
         LA    R1,VTAM_PARM_LIST              PARM LIST ADDRESS
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUB
         CLI   VTAM_PARM_RC,1                 ALL INTERFACES BUSY?
         BE    ERR0030                        YES
         CLI   VTAM_PARM_RC,2                 CNOS FAILURE?
         BE    ERR0040                        YES
         CLI   VTAM_PARM_RC,3                 RECEIVE FAILURE?
         BE    ERR0050                        YES
         CLI   VTAM_PARM_RC,4                 LIBRARY ACTIVE?
         BE    ERR0060                        NO
         CLI   VTAM_PARM_RC,5                 SMF NOT ACTIVE?
         BE    ERR0070                        NO
         CLI   VTAM_PARM_RC,0                 OTHERWISE ZERO?
         BNE   ERR0080                        NO
         OI    WORK_FLAGS,$ACB_OPEN           ACB IS OPEN
* ------------------------------------------------------------------- *
*        Perform requested function                                   *
* ------------------------------------------------------------------- *
         L     R15,FNCADDR
         BR    R15                            LINK TO FUNCTION
* ------------------------------------------------------------------- *
*                                                                     *
*           1) Verify user is authorized.                             *
*           2) Open the source file.                                  *
*           3) Read/transmit the source code.                         *
*           4) Send "end of file".                                    *
*           5) Close the source file.                                 *
*                                                                     *
* ------------------------------------------------------------------- *
CKIN0000 DS    0H
         LA    R1,SUB_PARM_LIST
         L     R15,VSUBCKIN                   CHECK-IN SUB ENTRY POINT
         BALR  R14,R15                        LINK TO CHECK-IN SUB
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LIB0000  DS    0H
         LA    R1,SUB_PARM_LIST
         L     R15,VSUBLIBS                   LIBRARY LIST SUB EP
         BALR  R14,R15                        LINK TO LIBRARY LIST SUB
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MEM0000  DS    0H
         LA    R1,SUB_PARM_LIST
         L     R15,VSUBMEMS                   LIBRARY LIST SUB EP
         BALR  R14,R15                        LINK TO LIBRARY LIST SUB
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CKOUT000 DS    0H
         LA    R1,SUB_PARM_LIST
         L     R15,VSUBCKOUT                  CHECK-OUT SUB ENTRY POINT
         BALR  R14,R15                        LINK TO CHECK-OUT SUB
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DOC0000  DS    0H
         LA    R1,SUB_PARM_LIST
         L     R15,VSUBMDOC                   DOCUMENTATION ENTRY POINT
         BALR  R14,R15                        LINK TO DOCUMENTATION
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DEL0000  DS    0H
         LA    R1,SUB_PARM_LIST
         L     R15,VSUBDEL                    MEMBER DELETE ENTRY POINT
         BALR  R14,R15                        LINK TO MEMBER DELETE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
VIEW0000 DS    0H
         LA    R1,SUB_PARM_LIST
         L     R15,VSUBVIEW                   MEMBER VIEW ENTRY POINT
         BALR  R14,R15                        LINK TO MEMBER DELETE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DAIR0000 DS    0H
         LA    R3,WORK_RB                     DAIR REQUEST BLOCK
         USING S99RB,R3
         ST    R3,WORK_RB_ADDRESS             SET ADDRESS
         OI    WORK_RB_ADDRESS,X'80'          SET 'END-OF-LIST'
         MVC   WORK_DAIR_PARMS(WORK_DAIR_PARMSL),DAIRPI                 ETERS
         XC    WORK_RB(S99RBEND-S99RB),WORK_RB
         MVI   S99VERB,S99VRBAL               SET VERB
         MVI   S99RBLN,S99RBEND-S99RB
         MVC   WORK_DSN,PARM_USER_DSN         DATASET NAME
         MVC   WORK_MEMBER,PARM_USER_MEMBER
         MVC   WORK_DD,LIBUSER                DD NAME
         LA    R1,WORK_TXTP1                  FIRST TEXT UNIT POINTER
         ST    R1,S99TXTPP                    SET TEXT ADDRESS
         LA    R1,WORK_DD_PARM                DDNAME PARAMETER
         ST    R1,WORK_TXTP1                  SET PARAMETER 1 ADDRESS
         LA    R1,WORK_DSN_PARM               DATASET NAME PARAMETER
         ST    R1,WORK_TXTP2                  SET PARAMETER 2 ADDRESS
         LA    R1,WORK_DISP_PARM              INITIAL DISPOSITION
         ST    R1,WORK_TXTP3                  SET PARAMETER 3 ADDRESS
         OI    WORK_TXTP3,X'80'               FLAG END-OF-LIST
         CLC   WORK_MEMBER,BLANKS             MEMBER NAME PRESENT?
         BE    DAIR0010                       NO
         NI    WORK_TXTP3,X'7F'               TURN OFF END-OF-LIST
         LA    R1,WORK_MEM_PARM               MEMBER NAME
         ST    R1,WORK_TXTP4                  SET PARAMETER 4 ADDRESS
         OI    WORK_TXTP4,X'80'               FLAG END-OF-LIST
DAIR0010 DS    0H
         LA    R1,WORK_RB_ADDRESS
         SVC   99                             ISSUE SVC
         STH   R15,WORK_R15                   SAVE RETURN CODE
         BR    R9
DAIR1000 DS    0H
         MVI   S99VERB,S99VRBUN               SET VERB
         LA    R15,WORK_DD_PARM               DDNAME PARAMETER
         ST    R15,WORK_TXTP1                 SET PARAMETER 1 ADDRESS
         OI    WORK_TXTP1,X'80'               FLAG END OF LIST
         MVI   S99RBLN,S99RBEND-S99RB
         LA    R1,WORK_TXTP1                  FIRST TEXT UNIT POINTER
         ST    R1,S99TXTPP                    SET TEXT ADDRESS
         MVC   WORK_DD,LIBUSER                DD NAME
         LA    R1,WORK_RB_ADDRESS             REQUEST BLOCK POINTER
         SVC   99                             ISSUE SVC
         STH   R15,WORK_R15                   SAVE RETURN CODE
         BR    R9
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   PARM_RETURN_CODE,C'E'
         MVC   PARM_MSG_1(MSG01L),MSG01
         B     EXIT0000
ERR0020  DS    0H
         MVI   PARM_RETURN_CODE,C'E'
         MVC   PARM_MSG_1(MSG02L),MSG02
         MVC   PARM_MSG_2(MSG03L),MSG03
         UNPK  PARM_MSG_2+(MSG03_R15-MSG03)(5),WORK_R15(3)
         MVZ   PARM_MSG_2+(MSG03_R15-MSG03)(4),HEXZERO
         MVZ   PARM_MSG_2+(MSG03_R15-MSG03)(4),HEXCHAR
         MVI   PARM_MSG_2+(MSG03_R15-MSG03)+4,C' '
         UNPK  PARM_MSG_2+(MSG03_ERR-MSG03)(5),S99ERROR(3)
         MVZ   PARM_MSG_2+(MSG03_ERR-MSG03)(4),HEXZERO
         MVZ   PARM_MSG_2+(MSG03_ERR-MSG03)(4),HEXCHAR
         MVI   PARM_MSG_2+(MSG03_ERR-MSG03)+4,C' '
         UNPK  PARM_MSG_2+(MSG03_INFO-MSG03)(5),S99INFO(3)
         MVZ   PARM_MSG_2+(MSG03_INFO-MSG03)(4),HEXZERO
         MVZ   PARM_MSG_2+(MSG03_INFO-MSG03)(4),HEXCHAR
         MVI   PARM_MSG_2+(MSG03_INFO-MSG03)+4,C' '
         B     EXIT0000
ERR0030  DS    0H
         MVI   PARM_RETURN_CODE,C'E'
         MVC   PARM_MSG_1(MSG04L),MSG04
         B     EXIT0000
ERR0040  DS    0H
         MVI   PARM_RETURN_CODE,C'E'
         MVC   PARM_MSG_1(MSG05L),MSG05
         B     EXIT0000
ERR0050  DS    0H
         MVI   PARM_RETURN_CODE,C'E'
         MVC   PARM_MSG_1(MSG06L),MSG06
         B     EXIT0000
ERR0060  DS    0H
         MVI   PARM_RETURN_CODE,C'E'
         MVC   PARM_MSG_1(MSG07L),MSG07
         B     EXIT0000
ERR0070  DS    0H
         MVI   PARM_RETURN_CODE,C'E'
         MVC   PARM_MSG_1(MSG08L),MSG08
         B     EXIT0000
ERR0080  DS    0H
         MVI   PARM_RETURN_CODE,C'E'
         ABEND 1,DUMP,,USER
ERR0090  DS    0H
         MVI   PARM_RETURN_CODE,C'E'
         MVC   PARM_MSG_1(MSG09L),MSG09
         b     exit0000
ERR0100  DS    0H
         MVI   PARM_RETURN_CODE,C'E'
         MVC   PARM_MSG_1(MSG10L),MSG10
         B     EXIT0000
ERR0110  DS    0H
         MVI   PARM_RETURN_CODE,C'E'
         MVC   PARM_MSG_1(MSG11L),MSG11
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         TM    WORK_FLAGS,$USER_ALLOCATED
         BNO   EXIT0010                       NOT ALLOCATED
         BAL   R9,DAIR1000                    FREE THE USER DATA SET
EXIT0010 DS    0H
         TM    WORK_FLAGS,$ACB_OPEN           ACB OPEN?
         BNO   EXIT0020                       NO
         MVI   VTAM_PARM_CMD,$VTAM_CLOSE
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        CLOSE THE ACB
EXIT0020 DS    0H
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORK_AREA_LENGTH
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        SET RETURN CODE TO ZERO
         BSM   R0,R14                         RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
VSUBCKIN DC    V(SUBCKIN)
VSUBCKOUT DC   V(SUBCKOUT)
VSUBDEL  DC    V(SUBDEL)
VSUBMDOC DC    V(SUBMDOC)
VSUBLIBS DC    V(SUBLIBS)
VSUBMEMS DC    V(SUBMEMS)
VSUBVIEW DC    V(SUBVIEW)
VSUB0001 DC    V(SUB0001)
VVTAMSUB DC    V(VTAMSUB)

FNCTABLE DS    0A
         DC    CL8'CHECKIN ',AL4(CKIN0000)
         DC    CL8'CHECKOUT',AL4(CKOUT000)
         DC    CL8'CKIN    ',AL4(CKIN0000)
         DC    CL8'CKOUT   ',AL4(CKOUT000)
         DC    CL8'COM     ',AL4(DOC0000)
         DC    CL8'COMM    ',AL4(DOC0000)
         DC    CL8'COMMENT ',AL4(DOC0000)
         DC    CL8'COMMENTS',AL4(DOC0000)
         DC    CL8'DEL     ',AL4(DEL0000)
         DC    CL8'DELETE  ',AL4(DEL0000)
         DC    CL8'DESC    ',AL4(DOC0000)
         DC    CL8'DESCRIP ',AL4(DOC0000)
         DC    CL8'DESCRIPT',AL4(DOC0000)
         DC    CL8'DOC     ',AL4(DOC0000)
         DC    CL8'DOCS    ',AL4(DOC0000)
         DC    CL8'DOCUMENT',AL4(DOC0000)
         DC    CL8'IN      ',AL4(CKIN0000)
         DC    CL8'LIB     ',AL4(LIB0000)
         DC    CL8'LIBS    ',AL4(LIB0000)
         DC    CL8'LIB LIST',AL4(LIB0000)
         DC    CL8'MEM     ',AL4(MEM0000)
         DC    CL8'MEMS    ',AL4(MEM0000)
         DC    CL8'MEM LIST',AL4(MEM0000)
         DC    CL8'OUT     ',AL4(CKOUT000)
         DC    CL8'REMOVE  ',AL4(DEL0000)
         DC    CL8'VIEW',AL4(VIEW0000)
         DC    X'FF'

DAIRPI   DC    AL2(DALDDNAM)         DDNAME PARMS
         DC    AL2(1)
         DC    AL2(8)
         DC    CL8' '                DDNAME

         DC    AL2(DALDSNAM)         DATASET NAME PARMS
         DC    AL2(1)
         DC    AL2(44)
         DC    CL44' '               DATASET NAME

         DC    AL2(DALMEMBR)         MEMBER NAME
         DC    AL2(1)
         DC    AL2(8)
         DC    CL8' '                MEMBER NAME

         DC    AL2(DALSTATS)         INITIAL DISPOSITION PARMS
         DC    AL2(1)
         DC    AL2(1)
         dc    X'08'                 DISP=SHR

BLANKS   DC    CL80' '
LIBUSER  DC    CL8'LIBUSER'
HEXZERO  DC    8X'00'
HEXCHAR  DC    C'0123456789ABCDEF'

         LTORG

MSG01       DC    C'SUBMAIN01E   Invalid function'
MSG01L      EQU   *-MSG01
MSG02       DC    C'SUBMAIN02E   Could not allocate user data set'
MSG02L      EQU   *-MSG02
MSG03       DS    0c
            DC    C'SUBMAIN03E'
            DC    C'  DAIR R15='
MSG03_R15   DC    CL4' '
            DC    C'  ERR='
MSG03_ERR   DC    CL4' '
            DC    C'  INFO='
MSG03_INFO  DC    CL4' '
            DC    C' '
MSG03L      EQU   *-MSG03
MSG04       DC    C'SUBMAIN04E   All VTAM intefaces are busy'
MSG04L      EQU   *-MSG04
MSG05       DC    C'SUBMAIN05E   VTAM CNOS failed'
MSG05L      EQU   *-MSG05
MSG06       DC    C'SUBMAIN06E   RECEIVE failed during user identify'
MSG06L      EQU   *-MSG06
MSG07       DC    C'SUBMAIN07E   Library is not active'
MSG07L      EQU   *-MSG07
MSG08       DC    C'SUBMAIN08E   SMF not active, cannot identify user'
MSG08L      EQU   *-MSG08
MSG09       DC    C'SUBMAIN09E   User data set DSORG is not PS or PO'
MSG09L      EQU   *-MSG09
MSG10       DC    C'SUBMAIN10E   When user data is partitioned, member +
               name is required'
MSG10L      EQU   *-MSG10
MSG11       DC    C'SUBMAIN11E   When user data is sequential, member n+
               ame is not allowed'
MSG11L      EQU   *-MSG11
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORK_AREA         DSECT
                  DS    18F

SUB_PARM_LIST     DS    0A
SUB_PARM_PARM1    DS    A                 ADDRESS OF OUR PARM LIST
SUB_PARM_PARM2    DS    A                 ADDRESS OF VTAM PARM LIST

WORK_RB_ADDRESS   DS    A                 REQUEST BLOCK'S ADDRESS
WORK_RB           DS    (S99RBEND-S99RB)X
WORK_TXTP1        DS    A                 TEXT UNIT 1'S ADDRESS
WORK_TXTP2        DS    A                 TEXT UNIT 2'S ADDRESS
WORK_TXTP3        DS    A                 TEXT UNIT 3'S ADDRESS
WORK_TXTP4        DS    A                 TEXT UNIT 4'S ADDRESS
WORK_DAIR_PARMS   DS   0C
WORK_DD_PARM      DS    AL2,AL2,AL2       DDNAME PARMS
WORK_DD           DS    CL8               DDNAME
WORK_DSN_PARM     DS    AL2,AL2,AL2       DATASET NAME PARMS
WORK_DSN          DS    CL44              DATASET NAME
WORK_MEM_PARM     DS    AL2,AL2,AL2       MEMBER NAME PARMS
WORK_MEMBER       DS    CL8               MEMBER NAME
WORK_DISP_PARM    DS    AL2,AL2,AL2       INITIAL DISPOSITION PARMS
WORK_DISP         DS    X                 INITIAL DISPOSITION
WORK_DAIR_PARMSL  EQU   *-WORK_DAIR_PARMS
WORK_R15          DS    H

         VTAMPARM  DSECT=NO

WORK_FLAGS         DS    X
$USER_ALLOCATED    EQU   X'80'
$ACB_OPEN          EQU   X'40'

SUB0001_PARM_LIST  DS   0A
SUB0001_PARM_DSN   DS   CL44
SUB0001_PARM_DSORG DS   C

WORK_AREA_LENGTH   EQU   *-WORK_AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM_LIST         DSECT
PARM_APPL         DS       CL8
PARM_LIB_NAME     DS       CL8
PARM_MEM_NAME     DS       CL8
PARM_MEM_VERSION  DS       XL2
PARM_FUNCTION     DS       CL8
PARM_USER_DSN     DS       CL44
PARM_USER_MEMBER  DS       CL8
PARM_RETURN_CODE  DS       C
PARM_MSG          DS      0CL80
PARM_MSG_1        DS       CL80
PARM_MSG_2        DS       CL80
PARM_MSG_3        DS       CL80
PARM_MSG_4        DS       CL80
PARM_MSG_5        DS       CL80
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FNCDSECT          DSECT
FNCFUNC           DS       CL8
FNCADDR           DS       AL4
FNCL              EQU      *-FNCDSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK        DSECT=YES
                        ORG NET_DATA
NET_SMF                 DS  CL4
NET_USER                DS  CL8
NET_IDENTIFY_LENGTH     EQU *-NETBLOK
                        ORG NET_DATA
NET_NUMBER_OF_LIBRARIES DS  XL2
NET_LIBRARY_NAMES       DS  0C
NET_LIBRARY_NAME        DS  cL8
NET_LIBRARY_DESC        DS  CL40
NET_LIBRARY_LENGTH      EQU *-NET_LIBRARY_NAME
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         DCBD     DSORG=PS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IEFZB4D0
         IEFZB4D2
         COPY REGEQU
         END  SUBMAIN
./ ADD NAME=SUBMDOC  0100-09250-09250-0919-00175-00175-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: SUBMDOC                                               *
*                                                                     *
*  Check in a member.                                                 *
*                                                                     *
*  Parameter list:                                                    *
*         Library APPLID          8 characters                        *
*         Library name            8 characters                        *
*         Member name             8 characters                        *
*         Function                8 characters                        *
*         User dataset           44 characters                        *
*         User member             8 characters                        *
*         return code             2 characters                        *
*                                                                     *
* ------------------------------------------------------------------- *
SUBMDOC  CSECT
SUBMDOC  AMODE 31
SUBMDOC  RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING SUBMDOC,R12                    DEFINE PROGRAM BASE
         B     INIT0000
MODID    DC    CL8'SUBMDOC'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESSES
         USING PARM_LIST,R10                  DEFINE BASE
         USING VTAM_PARM_LIST,R11             DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORK_AREA_LENGTH,                                    +
               LOC=BELOW
         ST    R1,8(R13)                      CHAIN OUR SAVE AREA
         ST    R13,4(R1)                      CHAIN CALLER'S AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WORK_AREA,R13                  DEFINE WORK AREA BASE
         MVI   WORK_RC,0
* ------------------------------------------------------------------- *
*                                                                     *
*   Determine if user is authorized                                   *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R8,VTAM_PARM_IO                I/O AREA ADDRESS
         USING NETBLOK,R8                     DEFINE BASE
         MVI   NET_FUNCTION,$NET_CHECK_DESC_AUTH
         MVC   NET_LIB_NAME,PARM_LIB_NAME
         MVC   NET_MEM_NAME,PARM_MEM_NAME
         MVC   NET_MEM_VER,PARM_MEM_VERSION
         LA    R1,NET_DESC_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         BAL   R9,SEND0000
         CLI   NET_RETURN_CODE,$NET_ERROR
         BE    ERR0010
* ------------------------------------------------------------------- *
*                                                                     *
*   The user is authorized                                            *
*                                                                     *
*   Normally the message area in the SUBroutine parms is for the      *
*   LIBRARIAN to return messages to the user.                         *
*                                                                     *
*   In this case the same area is used to send the description        *
*   to the LIBRARIAN.                                                 *
*                                                                     *
* ------------------------------------------------------------------- *
DESC0010 DS    0H
         MVC   NET_MEM_DOC(200),PARM_MSG
         MVC   NET_MEM_DOC+200(200),PARM_MSG+200
         LA    R1,NET_MEM_DOC+(80*4)          ADDRESS OF 5TH LINE
         LA    R2,NET_DESC_LENGTH+(80*5)      MAXIMUM LENGTH
         LA    R3,5                           LOOP LIMITER
DESC0020 DS    0H
         CLC   BLANKS,0(R1)                   ALL BLANK?
         BNE   DESC0030                       NO
         SH    R1,H80                         BACK UP 1 LINE
         SH    R2,H80                         BACK UP LENGTH
         BCT   R3,DESC0020                    LOOP
DESC0030 DS    0H
         STCM  R2,3,NET_LENGTH                SET LENGTH
         MVI   NET_FUNCTION,$NET_SEND_DESC
         BAL   R9,SEND0000
         CLI   NET_RETURN_CODE,$NET_OK
         BE    EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   PARM_MSG_1,NET_MSG_1           COPY MESSAGE
         MVC   PARM_MSG_2,NET_MSG_2           COPY MESSAGE
         MVC   PARM_MSG_3,NET_MSG_3           COPY MESSAGE
         MVC   PARM_MSG_4,NET_MSG_4           COPY MESSAGE
         MVC   PARM_MSG_5,NET_MSG_5           COPY MESSAGE
         MVI   WORK_RC,8                      SET NON-ZERO RETURN CODE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         MVI   VTAM_PARM_CMD,$VTAM_SEND
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUB
         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUB
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         SR    R2,R2                          CLEAR REGISTER
         IC    R2,WORK_RC                     SET RETURN CODE
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=WORK_AREA_LENGTH
         LR    R15,R2                         SET RETURN CODE
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
VVTAMSUB DC    V(VTAMSUB)
H80      DC    H'80'
BLANKS   DC    CL80' '

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORK_AREA          DSECT
                   DS  18F
WORK_RC            DS  X

         VTAMPARM  DSECT=NO

WORK_AREA_LENGTH   EQU   *-WORK_AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM_LIST          DSECT
PARM_APPL          DS    CL8
PARM_LIB_NAME      DS    CL8
PARM_MEM_NAME      DS    CL8
PARM_MEM_VERSION   DS    XL2
PARM_FUNCTION      DS    CL8
PARM_USER_DSN      DS    CL44
PARM_USER_MEMBER   DS    CL8
PARM_RETURN_CODE   DS    C
PARM_MSG           DS   0CL80
PARM_MSG_1         DS    CL80
PARM_MSG_2         DS    CL80
PARM_MSG_3         DS    CL80
PARM_MSG_4         DS    CL80
PARM_MSG_5         DS    CL80
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK   DSECT=YES
NET_LIB_NAME       DS    CL8
NET_MEM_NAME       DS    CL8
NET_MEM_VER        DS    XL2
NET_DESC_LENGTH    EQU   *-NETBLOK
NET_MEM_DOC        DS    0C
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  SUBMDOC
./ ADD NAME=SUBMEMS  0100-09250-09250-0919-00175-00175-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: SUBMEMS                                               *
*                                                                     *
*  Returns a list of libraries available from this librarian.         *
*                                                                     *
*  Parameter list:                                                    *
*         Library APPLID          8 characters                        *
*         Library name            8 characters                        *
*         Member name             8 characters                        *
*         Function                8 characters                        *
*         User dataset           44 characters                        *
*         User member             8 characters                        *
*         return code             2 characters                        *
*                                                                     *
* ------------------------------------------------------------------- *
SUBMEMS  CSECT
SUBMEMS  AMODE 31
SUBMEMS  RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING SUBMEMS,R12                    DEFINE PROGRAM BASE
         B     INIT0000
MODID    DC    CL8'SUBMEMS'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESS
         USING PARM_LIST,R10                  DEFINE BASE
         USING VTAM_PARM_LIST,R11             DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORK_AREA_LENGTH,                                    +
               LOC=BELOW
         ST    R1,8(R13)                      CHAIN OUR SAVE AREA
         ST    R13,4(R1)                      CHAIN CALLER'S AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WORK_AREA,R13                  DEFINE WORK AREA BASE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         GETMAIN RU,                                                   +
               LV=DCBL,                                                +
               LOC=BELOW
         ST    R1,WORK_DCB
         LR    R3,R1                          COPY DCB STORAGE ADDRESS
         MVC   0(DCBL,R3),DCBI                INITIALIZE THE DCB
         MVC   WORK_OCPL(OPENL),OPENI         INITIALIZE OPEN
         OPEN  ((R3),OUTPUT),                                          +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R9,VTAM_PARM_IO                I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
MEMS0000 DS    0H
         MVI   NET_FUNCTION,$NET_GET_MEMBERS
         MVC   NET_LIBRARY_NAME,PARM_LIB_NAME
         LA    R1,NETBLOKL+L'NET_LIBRARY_NAME
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         MVI   VTAM_PARM_CMD,$VTAM_SEND
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SR    R0,R0                          CLEAR REGISTER
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,NET_LENGTH                LENGTH OF THIS BUFFER
         SH    R1,=Y(NETBLOKL)                MINUS HEADER LENGTH
         D     R0,=A(lIB_INDEX_RECORD_LENGTH)
         LTR   R2,R1                          ANY IN THIS BUFFER?
         BZ    MEMS0020                       NO
         MVC   WORK_IO,BLANKS
         LA    R4,NET_MEMBER_NAMES            FIRST MEMBER NAME
MEMS0010 DS    0H
         MVC   WORK_IO(LIB_INDEX_RECORD_LENGTH),0(R4)
         PUT   (R3),WORK_IO                   WRITE TO DATA SET
         LA    R4,LIB_INDEX_RECORD_LENGTH(R4)
         BCT   R2,MEMS0010
MEMS0020 DS    0H
         CLI   NET_RETURN_CODE,$NET_EOF
         BNE   MEMS0000                       NO
         MVC   WORK_OCPL(CLOSEL),CLOSEI
         CLOSE ((R3)),                                                 +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         FREEMAIN RU,A=(3),LV=DCBL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE R13
         FREEMAIN RU,A=(1),LV=WORK_AREA_LENGTH
         LM    R14,R12,12(R13)                RESTORE R14
         SR    R15,R15                        SET RETURN CODE TO ZERO
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
VVTAMSUB DC    V(VTAMSUB)

DCBI     DCB   DSORG=PS,                                               +
               DDNAME=LIBUSER,                                         +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               MACRF=PM
DCBL     EQU   *-DCBI
OPENI    OPEN  (*,OUTPUT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
BLANKS   DC    CL80' '

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORK_AREA         DSECT
                  DS   18F

DWORD             DS   D
WORK_DCB          DS   (DCBL)X
WORK_OCPL         DS   (OPENL)X
WORK_IO           DS   CL80
                  ORG  WORK_IO
WORK_MEMBER_NAME  DS   CL8
                  DS   CL2
WORK_MEMBER_VER   DS   CL6
                  ORG
         VTAMPARM DSECT=NO

WORK_AREA_LENGTH  EQU  *-WORK_AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM_LIST         DSECT
PARM_APPL         DS   CL8
PARM_LIB_NAME     DS   CL8
PARM_MEM_NAME     DS   CL8
PARM_FUNCTION     DS   CL8
PARM_USER_DSN     DS   CL44
PARM_USER_MEMBER  DS   CL8
PARM_RETURN_CODE  DS   CL2
PARM_MSG          DS  0CL80
PARM_MSG_1        DS   CL80
PARM_MSG_2        DS   CL80
PARM_MSG_3        DS   CL80
PARM_MSG_4        DS   CL80
PARM_MSG_5        DS   CL80
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK  DSECT=YES
NET_LIBRARY_NAME  DS   CL8
                  ORG  NET_DATA
NET_MEMBER_NAMES  DS   0C
         LIBRECD  DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  SUBMEMS
./ ADD NAME=SUBVIEW  0100-09250-09250-0919-00262-00262-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  MODULE NAME: SUBVIEW                                               *
*                                                                     *
*  Check out a member.                                                *
*                                                                     *
*  Parameter list:                                                    *
*         Library APPLID          8 characters                        *
*         Library name            8 characters                        *
*         Member name             8 characters                        *
*         Member version          2 bytes, hex                        *
*         Function                8 characters                        *
*         User dataset           44 characters                        *
*         User member             8 characters                        *
*         return code             2 characters                        *
*                                                                     *
* ------------------------------------------------------------------- *
SUBVIEW  CSECT
SUBVIEW  AMODE 31
SUBVIEW  RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING SUBVIEW,R12                    DEFINE PROGRAM BASE
         B     INIT0000
MODID    DC    CL8'SUBVIEW'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LM    R10,R11,0(R1)                  COPY PARM BLOCK ADDRESS
         USING PARM_LIST,R10                  DEFINE BASE
         USING VTAM_PARM_LIST,R11             DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORK_AREA_LENGTH,                                    +
               LOC=BELOW
         ST    R1,8(R13)                      CHAIN OUR SAVE AREA
         ST    R13,4(R1)                      CHAIN CALLER'S AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WORK_AREA,R13                  DEFINE WORK AREA BASE
         MVI   WORK_RC,0
         LOAD  EP=LIBUX01                     LOAD USER EXIT 1
         ST    R0,WORK_AUX01                  SAVE ENTRY POINT
* ------------------------------------------------------------------- *
*                                                                     *
*  Determine if user is authorized to check-out the specified member. *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R8,VTAM_PARM_IO                I/O AREA ADDRESS
         USING NETBLOK,R8                     DEFINE BASE
         MVI   NET_FUNCTION,$NET_CHECK_VIEW_AUTH
         MVC   NET_LIB_NAME,PARM_LIB_NAME
         MVC   NET_MEM_NAME,PARM_MEM_NAME
         MVC   NET_MEM_VERSION,PARM_MEM_VERSION
         LA    R1,NET_CHECK_OUT_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         XC    NET_FILL,NET_FILL              CLEAR THE FILLER AREA
         BAL   R9,SENDRECV
         CLI   NET_RETURN_CODE,$NET_OK        USER AUTHORIZED?
         BNE   ERR0010                        NO
* ------------------------------------------------------------------- *
*                                                                     *
*   The user is authorized to VIEW this member.                       *
*                                                                     *
*   The LIBRARIAN will have returned the number of records in the     *
*   original source.  We need this info to 'de-compress' the data.    *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   WORK_SOURCE_RECORDS,NET_SOURCE_RECORDS
         LA    R2,5                           MAXIMUM NUMBER OF LINES
         LA    R1,PARM_MSG                    FIRST MESSAGE
INIT0010 DS    0h
         MVC   0(80,R1),BLANKS
         LA    R1,80(R1)
         BCT   R2,INIT0010                    LOOP
         MVI   NET_FUNCTION,$NET_VIEW_SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LIB0000  DS    0H                                                     *
         GETMAIN RU,                                                   +
               LV=DCBL,                                                +
               LOC=BELOW
         ST    R1,WORK_DCB
         LR    R3,R1                          COPY DCB ADDRESS
         MVC   0(DCBL,R3),DCBI                INITIALIZE THE DCB
         MVC   WORK_OCPL(OPENL),OPENI         INITIALIZE OPEN
         OPEN  ((R3),OUTPUT),                                          +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=ANY
         ST    R1,UX01_EXPANDED_BUFFER
         LA    R1,WORK_EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,NET_DATA                    I/O AREA IS OUTPUT BUFFER
         ST    R1,UX01_COMPRESSED_BUFFER
         LA    R1,WORK_COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
LIB0010  DS    0H
         LA    R1,NETBLOKL                    LENGTH IS HEADER ONLY
         STCM  R1,3,NET_LENGTH
         BAL   R9,SENDRECV                    SEND AND RECEIVE
         CLI   NET_RETURN_CODE,$NET_ERROR
         BE    ERR0020                        YES
         CLI   NET_RETURN_CODE,$NET_EOF
         BE    EOF0000                        YES
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,NET_LENGTH
         SH    R1,=Y(NETBLOKL)                MINUS HEADER LENGTH
         ST    R1,WORK_COMPRESSED_LENGTH
         L     R4,WORK_SOURCE_RECORDS         NUMBER OF SOURCE RECORDS
         CH    R4,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?
         BL    LIB0020                        NO
         LH    R4,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER
LIB0020  DS    0H                             CLEAR FOR RECORD COUNTER
         ST    R4,WORK_CURRENT_RECORDS        NUMBER IN CURRENT BUFFER
         L     R1,WORK_SOURCE_RECORDS         NUMBER OF RECORDS LEFT
         SR    R1,R4                          MINUS NUMBER IN BUFFER
         ST    R1,WORK_SOURCE_RECORDS         SAVE REMAINDER
         MH    R4,H80                         NBR OF RECORDS * LENGTH
         ST    R4,WORK_EXPANDED_LENGTH        SET LENGTH
         MVI   UX01_FUNCTION,$UX01_DECOMPRESS
         LA    R1,UX01_PARMS                  USER EXIT 1 PARM LIST
         L     R15,WORK_AUX01                 USER EXIT 1 ENTRY POINT
         BALR  R14,R15                        ALLOW DECOMPRESSION
         L     R2,UX01_EXPANDED_BUFFER        BUFFER ADDRESS
         L     R4,WORK_CURRENT_RECORDS        NUMBER OF RECORDS
LIB0030  DS    0H
         PUT   (R3),(R2)                      WRITE TO USER'S DATA SET
         LA    R2,80(R2)                      NEXT RECORD
         BCT   R4,LIB0030                     LOOP
         B     LIB0010                        ASK FOR NEXT BLOCK
EOF0000  DS    0H
         MVC   WORK_OCPL(CLOSEL),CLOSEI
         CLOSE ((R3)),                                                 +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
         FREEMAIN RU,A=(3),LV=DCBL
         L     R1,UX01_EXPANDED_BUFFER        EXPANDED DATA BUFFER
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SENDRECV DS    0H
         MVI   VTAM_PARM_CMD,$VTAM_SEND
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUB
         MVI   VTAM_PARM_CMD,$VTAM_RECEIVE
         LA    R1,VTAM_PARM_LIST
         L     R15,VVTAMSUB                   VTAM SUB ENTRY POINT
         BALR  R14,R15                        LINK TO VTAM SUB
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   WORK_RC,4                      SET RETURN CODE
         MVC   PARM_MSG_1,NET_MSG_1           COPY MESSAGE
         MVC   PARM_MSG_2,NET_MSG_2           COPY MESSAGE
         MVC   PARM_MSG_3,NET_MSG_3           COPY MESSAGE
         MVC   PARM_MSG_4,NET_MSG_4           COPY MESSAGE
         MVC   PARM_MSG_5,NET_MSG_5           COPY MESSAGE
         B     EXIT0000
ERR0020  DS    0H
         ABEND 1,DUMP,,USER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         DELETE EP=LIBUX01
         SR    R2,R2                          CLEAR REGISTER
         IC    R2,WORK_RC                     SET RETURN CODE
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORK_AREA_LENGTH
         LR    R15,R2                         SET RETURN CODE
         L     R14,12(R13)                    RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
VVTAMSUB DC    V(VTAMSUB)

DCBI     DCB   DSORG=PS,                                               +
               DDNAME=LIBUSER,                                         +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               BLKSIZE=$MAX_SOURCE_SIZE,                               +
               MACRF=PM
DCBL     EQU   *-DCBI
OPENI    OPEN  (*,OUTPUT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
H80      DC    H'80'
BLANKS   DC    CL80' '

         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORK_AREA              DSECT
                       DS    18F

WORK_AUX01             DS    A

WORK_EXPANDED_LENGTH   DS    A             LENGTH OF EXPANDED DATA
WORK_COMPRESSED_LENGTH DS    A             LENGTH OF COMPRESSED DATA

WORK_SOURCE_RECORDS    DS    F             NUMBER OF RECORDS IN SOURCE
WORK_CURRENT_RECORDS   DS    F             NUMBER OF RECORDS IN BUFFER

WORK_DCB               DS    0F,(DCBL)X
WORK_OCPL              DS    0F,(OPENL)X

WORK_RC                DS    X

                       UX01PARM    DSECT=NO
                       VTAMPARM    DSECT=NO

WORK_AREA_LENGTH       EQU   *-WORK_AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM_LIST              DSECT
PARM_APPL              DS    CL8
PARM_LIB_NAME          DS    CL8
PARM_MEM_NAME          DS    CL8
PARM_MEM_VERSION       DS    XL2
PARM_FUNCTION          DS    CL8
PARM_USER_DSN          DS    CL44
PARM_USER_MEMBER       DS    CL8
PARM_RETURN_CODE       DS    C
PARM_MSG               DS   0CL80
PARM_MSG_1             DS    CL80
PARM_MSG_2             DS    CL80
PARM_MSG_3             DS    CL80
PARM_MSG_4             DS    CL80
PARM_MSG_5             DS    CL80
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK       DSECT=YES
NET_LIB_NAME           DS    CL8
NET_MEM_NAME           DS    CL8
NET_MEM_VERSION        DS    XL2
NET_CHECK_OUT_LENGTH   EQU   *-NETBLOK
                       ORG   NET_DATA
NET_SOURCE_RECORDS     DS    XL4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
$MAX_SOURCE_SIZE EQU 8000
         COPY REGEQU
         END  SUBVIEW
./ ADD NAME=SUB0001  0100-09250-09250-0919-00208-00208-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*     This subroutine determines the "DSORG" of a given data set.     *
*                                                                     *
*     The subroutine requires two parameters:                         *
*       1)  the data set's name (44 characters)                       *
*       2)  the returned data set organization (1 byte)               *
*                                                                     *
*     Returned values for the DSORG are:                              *
*         'P'    ... Partitioned (PO)                                 *
*         'S'    ... Physically sequential (PS)                       *
*         'U'    ... Unknown (not PO, PS, or VSAM)                    *
*         'V'    ... VSAM                                             *
*         'X'    ... Not cataloged                                    *
*                                                                     *
* ------------------------------------------------------------------- *
SUB0001  CSECT
SUB0001  AMODE 31
SUB0001  RMODE ANY
         USING SUB0001,R12                    DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000
MODID    DC    CL8'SUB0001'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LR    R10,R1                         COPY PARM LIST ADDRESS
         USING PARM_LIST,R10                  DEFINE BASE
         GETMAIN RU,                                                   +
               LOC=BELOW,                                              +
               LV=WKL
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1
         USING WK,R13                         DEFINE BASE
         LA    R1,WKCSIRC                     CATALOG RETURN CODE
         ST    R1,WKCSIPL                     SET ADDRESS
         LA    R1,WKCSISP                     CATALOG SEARCH PARMS
         ST    R1,WKCSIPL+4                   SET ADDRESS
         MVC   WKCSISP(CSISPL),CSISPI
         L     R2,CSISIZE                     SIZE OF SEARCH DATA
         GETMAIN RU,                                                   +
               LV=(R2),                       .. SIZE OF AREA          +
               LOC=ANY                        ..
         ST    R1,WKCSIPL+8                   SET ADDRESS IN PARMIST
         ST    R2,0(R1)                       SET SIZE
         MVC   WKCSISP(44),PARM_LIST_DSN      DATASET NAME
         LOAD  EP=IGGCSI00                    LOAD THE CSI ENTERFACE
         LR    R15,R0                         COPY THE ENTRY POINT
         LA    R1,WKCSIPL                     SEARCH PARM LIST
         BALR  R14,R15                        LINK TO CSI
         DELETE EP=IGGCSI00                   DELETE CSI INTERFACE
         OC    WKCSIRC+2(2),WKCSIRC+2
         BNZ   ERR0010                        ERROR FROM SEARCH
         L     R2,WKCSIPL+8                   RETURNED DATA ADDRESS
         USING DATA,R2                        DEFINE BASE
         L     R3,DATAUL                      LENGTH OF DATA RETURNED
         LA    R2,DATADST                     SKIP HEADER STUFF
         USING DATADST,R2
         SH    R3,=Y(DATADST-DATA)
PROC0010 DS    0H
         CLI   DATADST,$DATANVS               NONVSAM?
         BE    PROC0020                       YES
         CLI   DATADST,$DATAVSC               VSAM CLUSTER?
         BE    PROC0050                       YES
         CLI   DATADST,$DATAVSD               VSAM DATA COMPONENT?
         BE    PROC0050                       YES
         CLI   DATADST,$DATAAIX               VSAM ALTERNATE INDEX?
         BE    PROC0050                       YES
         CLI   DATADST,$DATAVSI               VSAM INDEX COMPONENT?
         BNE   ERR0010                        NO.. SKIP
PROC0020 DS    0H
         MVC   WKCAMLST(CAMLSTL),CAMLSTI
         MVC   WKDSN,PARM_LIST_DSN
         MVC   WKVOL,DATAVOL
         LA    R0,WKDSN                       DATASET NAME'S ADDRESS
         ST    R0,WKCAMLST+4                  SET ADDRESS IN PARM LIST
         LA    R0,WKVOL                       VOLSER'S ADDRESS
         ST    R0,WKCAMLST+8                  SET ADDRESS IN PARM LIST
         LA    R0,DS1FMTID                    VTOC DATA ADDRESS
         ST    R0,WKCAMLST+12                 SET ADDRESS IN PARM LIST
         LA    R1,WKCAMLST                    OBTAIN PARM LIST
         OBTAIN (1)                           ISSUE OBTAIN
         MVC   PARM_LIST_RECFM,DS1RECFM
         MVC   PARM_LIST_LRECL,DS1LRECL
         CLI   DS1DSORG,DS1DSGPS              SEQUENTIAL?
         BE    PROC0030                       YES
         CLI   DS1DSORG,DS1DSGPO              PARTITIONED?
         BE    PROC0040                       YES
         MVI   PARM_LIST_DSORG,C'U'           UNKNOWN
         B     EXIT0000                       EXIT
PROC0030 DS    0H
         MVI   PARM_LIST_DSORG,$PARM_LIST_DSORG_PS
         B     EXIT0000                       EXIT
PROC0040 DS    0H
         MVI   PARM_LIST_DSORG,$PARM_LIST_DSORG_PO
         B     EXIT0000                       EXIT
PROC0050 DS    0H
         MVI   PARM_LIST_DSORG,$PARM_LIST_DSORG_VS
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   PARM_LIST_DSORG,C'X'           NOT CATALOGED
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         L     R1,WKCSIPL+8                   CATALOG SEARCH AREA
         L     R2,CSISIZE                     SIZE OF AREA
         FREEMAIN RU,A=(1),LV=(R2)            FREEMAIN THE WORK AREA
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE R13
         FREEMAIN RU,A=(1),LV=WKL             FREE THE WORK AREA
         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------- *
*                                                                     *
*        Constants                                                    *
*                                                                     *
* ------------------------------------------------------------------- *

CSISIZE  DC    F'2048'
         LTORG

CSISPI   DS    0F
         DC    CL44'RLRICE.SUB0001' DATASET NAME
         DC    CL44' '              CATALOG NAME (OR BLANK)
         DC    CL44' '              RESUME NAME OR BLANKS
         DC    CL16'ACGH'           ENTRY TYPES
         DC    CL1'Y'               RETURN DATA AND INDEX INFO FOR VSAM
         DS    0CL4                 OPTIONS
         DC    CL1' '               .. RESUME INDICATOR
         DC    CL1' '               .. SEARCH MULTIPLE CATALOGS
         DC    XL1'00'              RESERVED
         DC    H'1'                 NUMBER OF ENTRIES FOLLOWING
         DC    CL8'VOLSER  '        FIELD NAME
CSISPL   EQU   *-CSISPI
CAMLSTI  CAMLST SEARCH,             READ VTOC BY DATASET NAME          +
               *,                   .. DATASET NAME'S ADDRESS          +
               *,                   .. VOLSER'S ADDRESS                +
               *                    .. RETURNED DATA ADDRESS
CAMLSTL  EQU   *-CAMLSTI
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
WK       DSECT
         DS    18F
WKCSIPL  DS   0A
         DS    A                  CSI RETURN CODE INFO ADDRESS
         DS    A                  CSI SEARCH ARGS ADDRESS
         DS    A                  CSI RETURNED DATA

WKVOL    DS    CL6
WKDSN    DS    CL44
         ORG   WKDSN
WKVTOC   IECSDSL1   1

WKCSIRC  DS    0A
         DS    CL2                .. MODULE SUFFIX
         DS    X                  .. RETURN CODE
         DS    X                  .. REASON CODE
WKCSISP  DS    (CSISPL)X          SEARCH PARAMETERS

WKCAMLST DS    0A,(CAMLSTL)X

WKL      EQU   *-WK               BASIC WORK ARE SIZE
*--------------------------------------------------------------------*
DATA                DSECT
DATAAL              DS    F       AREA LENGTH
                    DS    F
DATAUL              DS    F       USED LENGTH
DATACATI            DS    XL4     CATALOG INDICATORS
DATACATN            DS    CL44    CATALOG NAME
                    DS    XL5
DATADST             DS    C
$DATANVS            EQU   C'A'    NONVSAM
$DATAVSC            EQU   C'C'    VSAM CLUSTER
$DATAVSD            EQU   C'D'    VSAM DATA
$DATAAIX            EQU   C'G'    VSAM ALTERNATE INDEX
$DATAVSI            EQU   C'I'    VSAM INDEX
DATADSN             DS    CL44
DATAVDL             DS    XL2     VOLSER DATA LENGTH
                    DS    XL2
DATAVEL             DS    XL2     VOLSER ENTRY LENGTH (TOTAL)
DATAVOL             DS    CL6     FIRST (OR ONLY) VOLSER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARM_LIST           DSECT
PARM_LIST_DSN       DS  CL44
PARM_LIST_DSORG     DS  C
$PARM_LIST_DSORG_PS EQU C'S'      SEQUENTIAL
$PARM_LIST_DSORG_PO EQU C'P'      PARTITIONED
$PARM_LIST_DSORG_VS EQU C'V'      VSAM
PARM_LIST_RECFM     DS  X         Record format
PARM_LIST_LRECL     DS  XL2       Logical record length
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  SUB0001
./ ADD NAME=SUB0002  0100-09250-09250-0919-00458-00458-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*    The original source for this subroutine was the 'COMPACT'        *
*    member of Richard Fochtman's ARCHIVER I found in file 147        *
*    on the CBT web site.  The copyright rules for freeware on        *
*    the CBT apply.                                                   *
*                                                                     *
*    I took several liberties and made a number of modifications      *
*    to the original source.  If this doesn't work for some reason    *
*    don't blame Richard Fochtman...                                  *
*                                                                     *
*                                                                     *
*    This subroutine uses a Huffman tree to compact data into a       *
*    variable length bit string.  Output lengths are always a         *
*    multiple of four (4).  Output strings will be padded with        *
*    hex zeros if necessary.                                          *
*                                                                     *
*           Arguements:                                               *
*               A(INPUT STRING)                                       *
*               A(INPUT STRING LENGTH)                                *
*               A(OUTPUT AREA)                                        *
*                                                                     *
* ------------------------------------------------------------------- *
SUB0002  CSECT
SUB0002  AMODE 31
SUB0002  RMODE ANY
         USING SUB0002,R12         DECLARE THE BASE REGISTER
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         LR    R12,R15             COPY EPA
         LM    R2,R4,0(R1)         LOAD PARM VALUES
         GETMAIN RU,                                                   +
               LV=WORKL,                                               +
               LOC=BELOW
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1              COPY SAVE AREA ADDRESS
         USING WORKAREA,R13        DEFINE BASE
         ST    R4,WORKOUTA         SAVE OUTPUT AREA ADDRESS
         L     R3,0(,R3)           LOAD INPUT STRING LENGTH
         LA    R5,0(R2,R3)         POINT TO INPUT END
         BCTR  R5,R0               AND BACK UP FOR BXLE
         LA    R8,TBL60
         LR    R1,R4               COPY OUTPUT STRING POINTER
         LA    R4,1                LOAD BXLE INCREMENT
         SR    R6,R6
         SR    R7,R7
         SR    R9,R9
         SR    R10,R10
         SR    R11,R11
         SR    R14,R14
         SR    R15,R15
         USING CMPCT,R8            SET THE CONSTANTS DSECT
*        R14 WILL CONTAIN THE BITS TO BE ADDED TO THE CURRENT STRING
*        R9 WILL BE THE CURRENT STRING'S LENGTH
*        R10 WILL BE THE CURRENT STRING
*        R1 WILL BE THE OUTPUT POINTER
*        R7 WILL BE THE NUMBER OF BITS BEING ADDED
*        R0,R11 - WORK REGISTERS
*        R11 WILL ALSO BE THE RETURN REGISTER FROM THE STORE SUBROUTINE
COMP0010 DS    0H
         LR    R6,R5               COPY END POINTER
         SR    R6,R2               COMPUTE WHAT'S LEFT
         CH    R6,=H'4'            CLOSE TO END ??
         BL    COMP0020            YES; SKIP THE NEXT CHECK
         CLC   1(3,R2),0(R2)       NEXT CHAR. REPEATED 4 TIMES ??
         BE    COMP0070            YES; PROCESS SPECIAL WAY
COMP0020 DS    0H
         SR    R6,R6
         IC    R6,0(,R2)           LOAD A CHARACTER
         SLL   R6,2                TIMES 4
         SR    R14,R14             CLEAR LEFT REGISTER
         L     R15,TREEV(R6)       LOAD THE STRING/LENGTH
         SLDL  R14,8               SHIFT OFF THE LENGTH
         LR    R7,R14              COPY THE LENGTH
         LA    R3,32               LOAD LIMIT VALUE
         SR    R3,R9               MINUS CURRENT LENGTH
         SR    R14,R14             CLEAR THAT REG
         SLDL  R14,0(R3)           SHIFT THOSE BITS OVER
         OR    R10,R14             ADD TO CURRENT STRING
         AR    R9,R7               ADD LENGTHS
         CH    R9,=H'32'           GOT ENOUGH, YET ---
         BL    COMP0030            NOPE ---
         BAL   R11,COMP0060        NOPE; PARTIAL ADD AND STORE
COMP0030 DS    0H
         BXLE  R2,R4,COMP0010      AND CONTINUE ---
*        ALL DONE; STORE STRING REMAINDER AND EXIT
COMP0040 DS    0H
         CH    R9,=H'0'            ZERO LEFT ??
         BNH   COMP0050            YES ---
         ST    R10,0(,R1)          STORE THE LAST WORD
         LA    R1,4(,R1)           BUMP OUTPUT POINTER
COMP0050 DS    0H
         LR    R2,R1               COPY OUTPUT ADDRESS
         S     R2,WORKOUTA         COMPUTE OUTPUT LENGTH
         LR    R1,R13              COPY WORK AREA ADDRESS
         L     R13,4(R13)          RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=WORKL
         LR    R0,R2               SET OUTPUT LENGTH
         L     R14,12(R13)         RESTORE R14
         LM    R1,R12,24(R13)
         SR    R15,R15             SET ZERO RETURN CODE
         BR    R14                 AND RETURN TO CALLER
COMP0060 DS    0H
         ST    R10,0(,R1)          STORE COMPLETED STRING
         LA    R1,4(,R1)           BUMP OUTPUT CURSOR
         LR    R10,R15             WHAT WAS LEFT FROM BEFORE
         SH    R9,=H'32'           RESET CURRENT-STRING LENGTH
         BR    R11                 AND RETURN TO (LOCAL) CALLER
COMP0070 DS    0H
         SR    R0,R0               CLEAR THE COUNT REGISTER
         SR    R14,R14             CLEAR LEFT REGISTER
         L     R15,MULTS           LOAD THE STRING/LENGTH
         SLDL  R14,8               SHIFT OFF THE LENGTH
         LR    R7,R14              COPY THE LENGTH
         LA    R3,32               LOAD LIMIT VALUE
         SR    R3,R9               MINUS CURRENT LENGTH
         LA    R14,0               CLEAR THAT REG
         SLDL  R14,0(R3)           SHIFT THOSE BITS OVER
         OR    R10,R14             ADD TO CURRENT STRING
         AR    R9,R7               ADD LENGTHS
         CH    R9,=H'32'           GOT ENOUGH, YET ---
         BL    COMP0080            NOPE ---
         BAL   R11,COMP0060        NOPE; PARTIAL ADD AND STORE
COMP0080 DS    0H
         LA    R6,0(,R2)           COPY STARTING ADDRESS
         LA    R14,0(,R2)             AND RIPPLING ADDRESS
         LA    R15,1(,R5)          COPY ENDING ADDRESS
         SR    R15,R14             COMPUTE LENGTH TO COMPARE
         CH    R15,=H'255'         LONGER THAN MAX ??
         BNH   COMP0090            NOPE ---
         LA    R15,255             YES; ASSUME MAX FOR NOW
COMP0090 DS    0H
         LR    R7,R15              AND COPY THAT VALUE
         SR    R15,R15             TWICE ---
         ICM   R15,8,0(R6)         INSERT 'PAD' CHARACTER
         CLCL  R6,R14              COMPARE/SEARCH
         LR    R0,R6               COPY END ADDRESS
         SR    R0,R2               COMPUTE BYTES COMPARED
         LR    R2,R6               NEW INPUT ADDRESS
         BCTR  R2,R0               ACCOUNT FOR BXLE STUFF
         LR    R6,R0               COPY TO INPUT CHAR. REGISTER
         SR    R14,R14             CLEAR LEFT REGISTER
         SLL   R6,2                TIMES 4
         L     R15,TREEV(R6)       LOAD THE STRING/LENGTH
         SLDL  R14,8               SHIFT OFF THE LENGTH
         LR    R7,R14              COPY THE LENGTH
         LA    R3,32               LOAD LIMIT VALUE
         SR    R3,R9               MINUS CURRENT LENGTH
         SR    R14,R14             CLEAR THAT REG
         SLDL  R14,0(R3)           SHIFT THOSE BITS OVER
         OR    R10,R14             ADD TO CURRENT STRING
         AR    R9,R7               ADD LENGTHS
         CH    R9,=H'32'           GOT ENOUGH, YET ---
         BL    COMP0100            NOPE ---
         BAL   R11,COMP0060        NOPE; PARTIAL ADD AND STORE
COMP0100 DS    0H
         LA    R6,0
         IC    R6,0(,R2)           INSERT THE REPEATED CHARACTER
         LA    R14,0               CLEAR LEFT REGISTER
         SLL   R6,2                TIMES 4
         L     R15,TREEV(R6)       LOAD THE STRING/LENGTH
         SLDL  R14,8               SHIFT OFF THE LENGTH
         LR    R7,R14              COPY THE LENGTH
         LA    R3,32               LOAD LIMIT VALUE
         SR    R3,R9               MINUS CURRENT LENGTH
         SR    R14,R14             CLEAR THAT REG
         SLDL  R14,0(R3)           SHIFT THOSE BITS OVER
         OR    R10,R14             ADD TO CURRENT STRING
         AR    R9,R7               ADD LENGTHS
         CH    R9,=H'32'           GOT ENOUGH, YET ---
         BL    COMP0110            NOPE ---
         BAL   R11,COMP0060        NOPE; PARTIAL ADD AND STORE
COMP0110 DS    0H
         B     COMP0030            NOPE; CONTINUE
*---------------------------------------------------------------------*

         LTORG

*---------------------------------------------------------------------*
*                                                                     *
*        THIS IS THE CURRENT COMPACTION TABLE.  ENTRY FORMAT IS:      *
*                                                                     *
*              BYTE 1:  THE NUMBER OF BITS IN THE ENTRY THAT ARE      *
*                       RETAINED                                      *
*                                                                     *
*              BYTES 2-4: THE ACTUAL BIT STRING THAT WILL BE USED     *
*                      TO REPRESENT THE CHARACTER IN THE              *
*                      COMPACTED STRING.                              *
*---------------------------------------------------------------------*
TBL60    DC    AL1(4),BL.24'010100000000000000000000'   MM
         DC    AL1(4),BL.24'110100000000000000000000'   00
         DC    AL1(9),BL.24'011001011000000000000000'   01
         DC    AL1(10),BL.24'110001000000000000000000'  02
         DC    AL1(10),BL.24'010000111100000000000000'  03
         DC    AL1(10),BL.24'101000100000000000000000'  04
         DC    AL1(11),BL.24'111100111100000000000000'  05
         DC    AL1(11),BL.24'101000100110000000000000'  06
         DC    AL1(10),BL.24'001001010000000000000000'  07
         DC    AL1(10),BL.24'010001110100000000000000'  08
         DC    AL1(12),BL.24'110001101010000000000000'  09
         DC    AL1(11),BL.24'000100011110000000000000'  0A
         DC    AL1(13),BL.24'111101110110100000000000'  0B
         DC    AL1(11),BL.24'110001101100000000000000'  0C
         DC    AL1(11),BL.24'010001110010000000000000'  0D
         DC    AL1(12),BL.24'011101000011000000000000'  0E
         DC    AL1(12),BL.24'001100110000000000000000'  0F
         DC    AL1(9),BL.24'101000111000000000000000'   10
         DC    AL1(12),BL.24'011101011110000000000000'  11
         DC    AL1(11),BL.24'010000110110000000000000'  12
         DC    AL1(13),BL.24'111001010101100000000000'  13
         DC    AL1(11),BL.24'000100111000000000000000'  14
         DC    AL1(13),BL.24'011101001000100000000000'  15
         DC    AL1(13),BL.24'111001010000000000000000'  16
         DC    AL1(13),BL.24'101011000010100000000000'  17
         DC    AL1(10),BL.24'001001011100000000000000'  18
         DC    AL1(13),BL.24'111100110110100000000000'  19
         DC    AL1(12),BL.24'001100110011000000000000'  1A
         DC    AL1(11),BL.24'000100001110000000000000'  1B
         DC    AL1(11),BL.24'001100010110000000000000'  1C
         DC    AL1(13),BL.24'011101011111100000000000'  1D
         DC    AL1(12),BL.24'001001010110000000000000'  1E
         DC    AL1(12),BL.24'000100111010000000000000'  1F
         DC    AL1(9),BL.24'000100010000000000000000'   20
         DC    AL1(13),BL.24'101011001000000000000000'  21
         DC    AL1(12),BL.24'010000111000000000000000'  22
         DC    AL1(13),BL.24'001100110010000000000000'  23
         DC    AL1(12),BL.24'101000110001000000000000'  24
         DC    AL1(14),BL.24'111001010101010000000000'  25
         DC    AL1(13),BL.24'010000110011100000000000'  26
         DC    AL1(14),BL.24'110001101000110000000000'  27
         DC    AL1(12),BL.24'101000110100000000000000'  28
         DC    AL1(14),BL.24'011101011111000000000000'  29
         DC    AL1(13),BL.24'001001010100100000000000'  2A
         DC    AL1(14),BL.24'101011000010000000000000'  2B
         DC    AL1(12),BL.24'011001010100000000000000'  2C
         DC    AL1(14),BL.24'011101001000010000000000'  2D
         DC    AL1(13),BL.24'000100011100000000000000'  2E
         DC    AL1(13),BL.24'010000110000100000000000'  2F
         DC    AL1(10),BL.24'011101000100000000000000'  30
         DC    AL1(12),BL.24'110001101011000000000000'  31
         DC    AL1(12),BL.24'011001010101000000000000'  32
         DC    AL1(13),BL.24'111001010111100000000000'  33
         DC    AL1(12),BL.24'101011000011000000000000'  34
         DC    AL1(13),BL.24'001100010101100000000000'  35
         DC    AL1(13),BL.24'101000110010100000000000'  36
         DC    AL1(14),BL.24'111001010101000000000000'  37
         DC    AL1(11),BL.24'101000100100000000000000'  38
         DC    AL1(14),BL.24'101011001000110000000000'  39
         DC    AL1(13),BL.24'001100110001000000000000'  3A
         DC    AL1(14),BL.24'011101001001110000000000'  3B
         DC    AL1(12),BL.24'010000110010000000000000'  3C
         DC    AL1(14),BL.24'011101000010100000000000'  3D
         DC    AL1(13),BL.24'001100110010100000000000'  3E
         DC    AL1(14),BL.24'111001010001000000000000'  3F
         DC    AL1(3),BL.24'100000000000000000000000'   40
         DC    AL1(9),BL.24'001100111000000000000000'   41
         DC    AL1(12),BL.24'010000111001000000000000'  42
         DC    AL1(12),BL.24'010001110001000000000000'  43
         DC    AL1(12),BL.24'111101110000000000000000'  44
         DC    AL1(11),BL.24'011101000000000000000000'  45
         DC    AL1(13),BL.24'101000110101000000000000'  46
         DC    AL1(9),BL.24'110001001000000000000000'   47
         DC    AL1(11),BL.24'011101011100000000000000'  48
         DC    AL1(13),BL.24'011001010011000000000000'  49
         DC    AL1(12),BL.24'000100111011000000000000'  4A
         DC    AL1(8),BL.24'101011010000000000000000'   4B
         DC    AL1(12),BL.24'111101110100000000000000'  4C
         DC    AL1(8),BL.24'111100100000000000000000'   4D
         DC    AL1(9),BL.24'111101111000000000000000'   4E
         DC    AL1(12),BL.24'111001010110000000000000'  4F
         DC    AL1(8),BL.24'010001100000000000000000'   50
         DC    AL1(14),BL.24'010000110101000000000000'  51
         DC    AL1(13),BL.24'000100011100100000000000'  52
         DC    AL1(14),BL.24'010000110011010000000000'  53
         DC    AL1(6),BL.24'111111000000000000000000'   54
         DC    AL1(13),BL.24'011101000010000000000000'  55
         DC    AL1(13),BL.24'001001010111100000000000'  56
         DC    AL1(14),BL.24'010001110000010000000000'  57
         DC    AL1(9),BL.24'011101010000000000000000'   58
         DC    AL1(13),BL.24'101000110011000000000000'  59
         DC    AL1(13),BL.24'111100110111000000000000'  5A
         DC    AL1(10),BL.24'001001011000000000000000'  5B
         DC    AL1(6),BL.24'000001000000000000000000'   5C
         DC    AL1(8),BL.24'111101100000000000000000'   5D
         DC    AL1(10),BL.24'101000101000000000000000'  5E
         DC    AL1(13),BL.24'101000110110100000000000'  5F
         DC    AL1(8),BL.24'110001010000000000000000'   60
         DC    AL1(7),BL.24'001001100000000000000000'   61
         DC    AL1(13),BL.24'011001010001000000000000'  62
         DC    AL1(14),BL.24'011101000010110000000000'  63
         DC    AL1(13),BL.24'111101110111100000000000'  64
         DC    AL1(14),BL.24'001001010100010000000000'  65
         DC    AL1(13),BL.24'010000110001000000000000'  66
         DC    AL1(14),BL.24'011101001001000000000000'  67
         DC    AL1(12),BL.24'001100010100000000000000'  68
         DC    AL1(14),BL.24'001100110001100000000000'  69
         DC    AL1(13),BL.24'010001110000100000000000'  6A
         DC    AL1(6),BL.24'000000000000000000000000'   6B
         DC    AL1(11),BL.24'011001010110000000000000'  6C
         DC    AL1(12),BL.24'101011001011000000000000'  6D
         DC    AL1(12),BL.24'101011001010000000000000'  6E
         DC    AL1(12),BL.24'111101110011000000000000'  6F
         DC    AL1(10),BL.24'101011000100000000000000'  70
         DC    AL1(13),BL.24'001100010101000000000000'  71
         DC    AL1(13),BL.24'111101110110000000000000'  72
         DC    AL1(13),BL.24'011001010000000000000000'  73
         DC    AL1(13),BL.24'111101110001000000000000'  74
         DC    AL1(14),BL.24'011001010000100000000000'  75
         DC    AL1(14),BL.24'111100110110000000000000'  76
         DC    AL1(14),BL.24'111100110111100000000000'  77
         DC    AL1(12),BL.24'101011001001000000000000'  78
         DC    AL1(14),BL.24'001100110001110000000000'  79
         DC    AL1(10),BL.24'101000101100000000000000'  7A
         DC    AL1(11),BL.24'010000111010000000000000'  7B
         DC    AL1(8),BL.24'001100000000000000000000'   7C
         DC    AL1(7),BL.24'011000100000000000000000'   7D
         DC    AL1(8),BL.24'011001000000000000000000'   7E
         DC    AL1(11),BL.24'000100001010000000000000'  7F
         DC    AL1(9),BL.24'010001111000000000000000'   80
         DC    AL1(8),BL.24'001001000000000000000000'   81
         DC    AL1(10),BL.24'001100110100000000000000'  82
         DC    AL1(10),BL.24'111100110000000000000000'  83
         DC    AL1(9),BL.24'010001000000000000000000'   84
         DC    AL1(8),BL.24'110001110000000000000000'   85
         DC    AL1(10),BL.24'011101011000000000000000'  86
         DC    AL1(10),BL.24'000100111100000000000000'  87
         DC    AL1(9),BL.24'010001001000000000000000'   88
         DC    AL1(9),BL.24'111100011000000000000000'   89
         DC    AL1(14),BL.24'111100110111110000000000'  8A
         DC    AL1(14),BL.24'101000110110010000000000'  8B
         DC    AL1(13),BL.24'110001101001000000000000'  8C
         DC    AL1(14),BL.24'001001010111010000000000'  8D
         DC    AL1(14),BL.24'111101110111000000000000'  8E
         DC    AL1(14),BL.24'001001010101010000000000'  8F
         DC    AL1(10),BL.24'001100010000000000000000'  90
         DC    AL1(11),BL.24'111001010010000000000000'  91
         DC    AL1(11),BL.24'111100111110000000000000'  92
         DC    AL1(9),BL.24'001100011000000000000000'   93
         DC    AL1(9),BL.24'000100110000000000000000'   94
         DC    AL1(8),BL.24'000100100000000000000000'   95
         DC    AL1(8),BL.24'001100100000000000000000'   96
         DC    AL1(10),BL.24'011101001100000000000000'  97
         DC    AL1(12),BL.24'111101110101000000000000'  98
         DC    AL1(9),BL.24'110001100000000000000000'   99
         DC    AL1(14),BL.24'110001101001110000000000'  9A
         DC    AL1(14),BL.24'011001010000110000000000'  9B
         DC    AL1(13),BL.24'101000110101100000000000'  9C
         DC    AL1(15),BL.24'101011000010010000000000'  9D
         DC    AL1(14),BL.24'011101001000000000000000'  9E
         DC    AL1(15),BL.24'101011000010011000000000'  9F
         DC    AL1(11),BL.24'110001101110000000000000'  A0
         DC    AL1(13),BL.24'010000110101100000000000'  A1
         DC    AL1(9),BL.24'111001011000000000000000'   A2
         DC    AL1(8),BL.24'010000100000000000000000'   A3
         DC    AL1(10),BL.24'110001000100000000000000'  A4
         DC    AL1(12),BL.24'111101110010000000000000'  A5
         DC    AL1(11),BL.24'011101001010000000000000'  A6
         DC    AL1(12),BL.24'011001010010000000000000'  A7
         DC    AL1(10),BL.24'000100011000000000000000'  A8
         DC    AL1(13),BL.24'000100011101000000000000'  A9
         DC    AL1(13),BL.24'011001010001100000000000'  AA
         DC    AL1(14),BL.24'001001010111000000000000'  AB
         DC    AL1(13),BL.24'101000110000000000000000'  AC
         DC    AL1(15),BL.24'111001010001011000000000'  AD
         DC    AL1(14),BL.24'011101011111010000000000'  AE
         DC    AL1(14),BL.24'000100001100000000000000'  AF
         DC    AL1(11),BL.24'101011000000000000000000'  B0
         DC    AL1(13),BL.24'010000110100000000000000'  B1
         DC    AL1(13),BL.24'101000110000100000000000'  B2
         DC    AL1(14),BL.24'110001101000100000000000'  B3
         DC    AL1(13),BL.24'111001010000100000000000'  B4
         DC    AL1(14),BL.24'101000110011100000000000'  B5
         DC    AL1(13),BL.24'000100011101100000000000'  B6
         DC    AL1(14),BL.24'011001010011110000000000'  B7
         DC    AL1(13),BL.24'111101110001100000000000'  B8
         DC    AL1(14),BL.24'010001110000000000000000'  B9
         DC    AL1(13),BL.24'000100001100100000000000'  BA
         DC    AL1(14),BL.24'101000110011110000000000'  BB
         DC    AL1(13),BL.24'110001101000000000000000'  BC
         DC    AL1(14),BL.24'010000110000010000000000'  BD
         DC    AL1(13),BL.24'010000110100100000000000'  BE
         DC    AL1(13),BL.24'101000110010000000000000'  BF
         DC    AL1(11),BL.24'111100110100000000000000'  C0
         DC    AL1(5),BL.24'001110000000000000000000'   C1
         DC    AL1(6),BL.24'000101000000000000000000'   C2
         DC    AL1(5),BL.24'001010000000000000000000'   C3
         DC    AL1(6),BL.24'111000000000000000000000'   C4
         DC    AL1(5),BL.24'110010000000000000000000'   C5
         DC    AL1(7),BL.24'111101000000000000000000'   C6
         DC    AL1(7),BL.24'011000000000000000000000'   C7
         DC    AL1(7),BL.24'011001100000000000000000'   C8
         DC    AL1(6),BL.24'111010000000000000000000'   C9
         DC    AL1(13),BL.24'010000110001100000000000'  CA
         DC    AL1(14),BL.24'101000110110000000000000'  CB
         DC    AL1(13),BL.24'111001010100100000000000'  CC
         DC    AL1(14),BL.24'011101001001100000000000'  CD
         DC    AL1(14),BL.24'111100110110010000000000'  CE
         DC    AL1(14),BL.24'010000110011000000000000'  CF
         DC    AL1(9),BL.24'000100000000000000000000'   D0
         DC    AL1(9),BL.24'111100010000000000000000'   D1
         DC    AL1(8),BL.24'101010000000000000000000'   D2
         DC    AL1(6),BL.24'110000000000000000000000'   D3
         DC    AL1(6),BL.24'001101000000000000000000'   D4
         DC    AL1(6),BL.24'111011000000000000000000'   D5
         DC    AL1(6),BL.24'111110000000000000000000'   D6
         DC    AL1(6),BL.24'011100000000000000000000'   D7
         DC    AL1(8),BL.24'111100000000000000000000'   D8
         DC    AL1(5),BL.24'010010000000000000000000'   D9
         DC    AL1(14),BL.24'101011001000100000000000'  DA
         DC    AL1(14),BL.24'010000110000000000000000'  DB
         DC    AL1(13),BL.24'111001010111000000000000'  DC
         DC    AL1(14),BL.24'011101001001010000000000'  DD
         DC    AL1(13),BL.24'001001010101100000000000'  DE
         DC    AL1(14),BL.24'001001010100000000000000'  DF
         DC    AL1(10),BL.24'101011001100000000000000'  E0
         DC    AL1(14),BL.24'010000110101010000000000'  E1
         DC    AL1(5),BL.24'011010000000000000000000'   E2
         DC    AL1(5),BL.24'011110000000000000000000'   E3
         DC    AL1(6),BL.24'001000000000000000000000'   E4
         DC    AL1(7),BL.24'010000000000000000000000'   E5
         DC    AL1(8),BL.24'010001010000000000000000'   E6
         DC    AL1(8),BL.24'101010010000000000000000'   E7
         DC    AL1(8),BL.24'111001000000000000000000'   E8
         DC    AL1(10),BL.24'111100111000000000000000'  E9
         DC    AL1(14),BL.24'001001010101000000000000'  EA
         DC    AL1(15),BL.24'011001010011101000000000'  EB
         DC    AL1(13),BL.24'111001010100000000000000'  EC
         DC    AL1(15),BL.24'011001010011100000000000'  ED
         DC    AL1(14),BL.24'111101110111010000000000'  EE
         DC    AL1(12),BL.24'101000110111000000000000'  EF
         DC    AL1(4),BL.24'101100000000000000000000'   F0
         DC    AL1(5),BL.24'000010000000000000000000'   F1
         DC    AL1(6),BL.24'101001000000000000000000'   F2
         DC    AL1(6),BL.24'000110000000000000000000'   F3
         DC    AL1(6),BL.24'000111000000000000000000'   F4
         DC    AL1(7),BL.24'111001100000000000000000'   F5
         DC    AL1(7),BL.24'101011100000000000000000'   F6
         DC    AL1(7),BL.24'101000000000000000000000'   F7
         DC    AL1(7),BL.24'101010100000000000000000'   F8
         DC    AL1(7),BL.24'011101100000000000000000'   F9
         DC    AL1(14),BL.24'110001101001100000000000'  FA
         DC    AL1(15),BL.24'111001010001010000000000'  FB
         DC    AL1(13),BL.24'111001010001100000000000'  FC
         DC    AL1(14),BL.24'000100001100010000000000'  FD
         DC    AL1(12),BL.24'000100001101000000000000'  FE
         DC    AL1(11),BL.24'000100001000000000000000'  FF
CMPCT    DSECT
MULTS    DS    XL4                 REPEATED-STRING MARKER
TREEV    DS    256XL4              ACTUAL COMPACTED CHARACTER VALUES
WORKAREA DSECT
         DS    18F
WORKOUTA DS    A
WORKL    EQU   *-WORKAREA
         COPY  REGEQU
         END
./ ADD NAME=SUB0003  0100-09250-09250-0919-01186-01186-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*    "EXPAND" or "DECOMPRESS"                                         *
*                                                                     *
*                                                                     *
*    The original source for this subroutine was the 'COMPACT'        *
*    member of Richard Fochtman's ARCHIVER I found in file 147        *
*    on the CBT web site.  The copyright rules for freeware on        *
*    the CBT apply.                                                   *
*                                                                     *
*    I took several liberties and made a number of modifications      *
*    to the original source.  If this doesn't work for some reason    *
*    don't blame Richard Fochtman...                                  *
*                                                                     *
*           Arguements:                                               *
*               A(OUTPUT STRING)                                      *
*               A(OUTPUT STRING LENGTH)                               *
*               A(INPUT STRING)                                       *
*                                                                     *
*    Note that the parameter list IS NOT the same as the compression  *
*    subroutine.  For my uses, I had to "remember" the size of the    *
*    original source.                                                 *
*                                                                     *
* ------------------------------------------------------------------- *
SUB0003  CSECT
SUB0003  AMODE 31
SUB0003  RMODE ANY
         USING SUB0003,R11
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         LR    R11,R15             COPY BASE ADDRESS
         LM    R2,R4,0(R1)         LOAD PARM POINTERS
         GETMAIN RU,                                                   +
               LV=WORKL,                                               +
               LOC=BELOW
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1
         USING WORKAREA,R13
         L     R3,0(,R3)           LOAD ACTUAL OUTPUT LENGTH
         LA    R12,0(R2,R3)        POINT TO OUTPUT AREA END
         BCTR  R12,R0              BACK UP ONE
         LA    R5,0(,R2)           COPY OUTPUT AREA START
         LA    R10,0(,R4)          AND INPUT AREA START
         XC    8(2,R13),8(R13)     CLEAR THE FLAG WORD
         SR    R14,R14             INITIAL VALUES
         SR    R6,R6               INITIAL VALUES
         SR    R7,R7
         SR    R2,R2
         SR    R0,R0               BITS-LEFT COUNTER
*        SELECT THE EXPANSION TABLE.  THIS IS TRICKY BECAUSE I
*        NEED TO ACCOUNT FOR A TABLE-SELECTOR IN @BYTEC
*        IF IT'S REALLY THERE.
         LA    R1,EXP60            YES; POINT TO EXPANSION TABLE
EXP0010  DS    0H
         USING EXPNDS,R1
         LA    R4,SHIFTS           POINT TO INITIAL SHIFT VALUES
         LA    R3,EXPTAB           POINT TO START OF BIT TABLE
EXP0020  DS    0H
         BAL   R9,EXP0100          GO SHIFT SOME BITS (?)
         AR    R3,R8               POINT INTO THE BIT TABLE
         ICM   R15,3,0(R3)
         TM    0(R3),X'40'         REPEATED CHARACTER ??
         BNO   EXP0030             YES ---
         OI    8(R13),X'40'        SET 'REPEATER' FLAG
         B     EXP0070             DISCARD THIS CHARACTER
EXP0030  DS    0H
         TM    0(R3),X'80'         ANOTHER LEVEL ??
         BO    EXP0040             NOPE ---
         AH    R3,0(,R3)           POINT TO NEXT TABLE LEVEL
         LA    R4,8(,R4)           LOCATE SECOND SHIFT AMOUNT
         B     EXP0020             GO SHIFT SOME MORE
EXP0040  DS    0H
         TM    8(R13),X'40'        IS THIS A COUNT CHARACTER ??
         BO    EXP0050             YES ---
         MVC   0(1,R5),1(R3)       COPY RESULT CHARACTER
         TM    8(R13),X'80'        ARE WE REPEATING ??
         BNO   EXP0060             NOPE ---
         LR    R8,R5               COPY OUTPUT ADDRESS
         SR    R9,R9               CLEAR COUNT REGISTER
         IC    R9,9(,R13)          INSERT BYTES-TO-COPY
         SR    R15,R15             CLEAR INPUT COUNTER
         ICM   R15,8,1(R3)         INSERT CHARACTER TO INSERT
         MVCL  R8,R14              PROPOGATE THE CHARACTER
         LR    R5,R8               REPLACE OUTPUT POINTER
         XC    8(2,R13),8(R13)     CLEAR THE FLAG WORD
         B     EXP0070             AND SCOOT ---
EXP0050  DS    0H
         MVC   9(1,R13),1(R3)      COPY THE COUNT BYTE
         XI    8(R13),X'C0'        SET SOME MORE 8(R13)
         B     EXP0070             AND SKIP SOME MORE
EXP0060  DS    0H
         LA    R5,1(,R5)           BUMP OUTPUT CURSOR
EXP0070  DS    0H
         MVC   11(1,R13),0(R3)     COPY BIT COUNT
         NC    10(2,R13),H15       TRIM TO BARE BIT COUNT
         SH    R2,10(,R13)         BITS TO RETURN
         AR    R0,R2               RETURN TO BIT COUNT
         SRDL  R6,0(R2)            SHIFT BACK OVER
         SR    R2,R2               RE-CLEAR
         CH    R0,H32              BIGGER THAT IT SHOULD BE ??
         BNH   EXP0080
         SH    R0,H32              YES, BACK IT UP
         SH    R10,H4              BACK UP INPUT POINTER
EXP0080  DS    0H
         CR    R5,R12              FAR ENOUGH YET ??
         BNH   EXP0010             NOPE; KEEP GOING
EXP0090  DS    0H
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=WORKL
         LM    R14,R12,12(R13)     RELOAD REGISTERS
         SR    R15,R15             RETURN CODE IS ZERO
         BR    R14                 AND RETURN TO CALLER
EXP0100  DS    0H
         STM   R14,R15,12(R13)
         L     R15,0(,R4)
         AR    R2,R15              BACKSHIFT ACCUMULATOR
         LR    R14,R0              COPY BITS-LEFT VALUE
         SR    R14,R15             ANY LEFT AFTER SHIFT ??
         BNM   EXP0110             YES ---
         LR    R14,R0              COPY BITS-LEFT VALUE
         SLDL  R6,0(R14)           SHIFT THAT FAR
         SR    R15,R14             DECREMENT REQUEST SIZE
         L     R7,0(,R10)          LOAD ANOTHER WORD OF INPUT
         LA    R10,4(,R10)         POINT TO NEXT WORD
         LA    R0,32               GOT ANOTHER 32 BITS
EXP0110  DS    0H
         SLDL  R6,0(R15)           SHIFT OVER
         LR    R8,R6               COPY SHIFTED BITS
         N     R8,4(,R4)           GET JUST WHAT WE WANT
         SLL   R8,1                TIMES TWO
         SR    R0,R15              ACCOUNT FOR IT
         LM    R14,R15,12(R13)
         BR    R9                  AND RETURN TO CALLER
         LTORG
*---------------------------------------------------------------------*
H4       DC    H'4'
H15      DC    H'15'
H32      DC    H'32'
*---------------------------------------------------------------------*
*---     THIS IS THE EXPANSION TABLE THAT CORRESPONDS TO THE       ---*
*---     'CURRENT' COMPACTION TABLE.  BECAUSE OF THE WAY THAT THE  ---*
*---     EXPANDER WORKS, THE TABLE IS MUCH LARGER AND CONTAINS     ---*
*---     MANY DUPLICATED ENTRIES. HERE'S THE FORMAT:               ---*
*---                                                               ---*
*---     WORDS 1-32 ARE THE TABLE OF SHIFT AMOUNTS AND MASKS OF    ---*
*---                BITS THAT ARE RETAINED DURING EACH STEP OF     ---*
*---                THE EXPANSION.                                 ---*
*---                                                               ---*
*---     THE FOLLOWING TWO-BYTE ENTRIES ARE COMPOSED OF EITHER OF  ---*
*---     TWO TYPES OF DATA.                                        ---*
*---                                                               ---*
*---     TYPE1:  THOSE ENTRIES THAT HAVE THE X'80' BIT ON ARE      ---*
*---     DIRECT REPLACEMENT CHARACTERS.  THE LOW-ORDER 6 BITS OF   ---*
*---     THE FIRST BYTE ARE A COUNT OF BITS TO BE REMOVED FROM     ---*
*---     THE LEFT END OF THE COMPACTED STRING. THE SECOND BYTE IS  ---*
*---     THE ACTUAL CHARACTER TO BE PLACED IN THE OUTPUT STRING.   ---*
*---                                                               ---*
*---     TYPE2:  THOSE BYTES ARE USED IN CONJUNCTION WITH THE      ---*
*---     SHIFT VALUES TO INDEX INTO 'SUBTABLES', FOR THOSE         ---*
*---     CHARACTERS THAT, WHEN COMPACTED, EXCEED 8 BITS.  WHAT     ---*
*---     HAPPENS IS THIS: THE NUMBER OF BITS DEFINED IN THE        ---*
*---     CURRENT SHIFT TABLE ARE REMOVED FROM THE LEFT END OF THE  ---*
*---     STRING.  THE REMAINING BITS ARE USED TO INDEX INTO THE    ---*
*---     'SUBTABLE'.  IF ANOTHER SUBTABLE REFERENCE IS FOUND, THE  ---*
*---     APPROPRIATE SHIFT IS MADE AND WE START ALL OVER, ANOTHER  ---*
*---     LEVEL DOWN IN THE EXPANSION TABLE.  TO REALLY GET A FEEL  ---*
*---     OF HOW THIS ALL WORKS, YOU SHOULD BE LOOKING AT 'EXPAND'  ---*
*---     AND WATCH HOW IT ITERATES.                                ---*
*---------------------------------------------------------------------*
EXP60    DC    F'8',B'00000000000000000000000011111111'
         DC    F'3',B'00000000000000000000000000000111'
         DC    F'4',B'00000000000000000000000000001111'
         DC    F'4',B'00000000000000000000000000001111'
         DC    F'3',B'00000000000000000000000000000111'
         DC    11F'0,0'
         DC    B'10000110',X'6B'
         DC    B'10000110',X'6B'
         DC    B'10000110',X'6B'
         DC    B'10000110',X'6B'
         DC    B'10000110',X'5C'
         DC    B'10000110',X'5C'
         DC    B'10000110',X'5C'
         DC    B'10000110',X'5C'
         DC    B'10000101',X'F1'
         DC    B'10000101',X'F1'
         DC    B'10000101',X'F1'
         DC    B'10000101',X'F1'
         DC    B'10000101',X'F1'
         DC    B'10000101',X'F1'
         DC    B'10000101',X'F1'
         DC    B'10000101',X'F1'
         DC    AL2(BB1-*) SUBTABLE REFERENCE
         DC    AL2(BB2-*) SUBTABLE REFERENCE
         DC    B'10001000',X'95'
         DC    AL2(BB3-*) SUBTABLE REFERENCE
         DC    B'10000110',X'C2'
         DC    B'10000110',X'C2'
         DC    B'10000110',X'C2'
         DC    B'10000110',X'C2'
         DC    B'10000110',X'F3'
         DC    B'10000110',X'F3'
         DC    B'10000110',X'F3'
         DC    B'10000110',X'F3'
         DC    B'10000110',X'F4'
         DC    B'10000110',X'F4'
         DC    B'10000110',X'F4'
         DC    B'10000110',X'F4'
         DC    B'10000110',X'E4'
         DC    B'10000110',X'E4'
         DC    B'10000110',X'E4'
         DC    B'10000110',X'E4'
         DC    B'10001000',X'81'
         DC    AL2(BB4-*) SUBTABLE REFERENCE
         DC    B'10000111',X'61'
         DC    B'10000111',X'61'
         DC    B'10000101',X'C3'
         DC    B'10000101',X'C3'
         DC    B'10000101',X'C3'
         DC    B'10000101',X'C3'
         DC    B'10000101',X'C3'
         DC    B'10000101',X'C3'
         DC    B'10000101',X'C3'
         DC    B'10000101',X'C3'
         DC    B'10001000',X'7C'
         DC    AL2(BB5-*) SUBTABLE REFERENCE
         DC    B'10001000',X'96'
         DC    AL2(BB6-*) SUBTABLE REFERENCE
         DC    B'10000110',X'D4'
         DC    B'10000110',X'D4'
         DC    B'10000110',X'D4'
         DC    B'10000110',X'D4'
         DC    B'10000101',X'C1'
         DC    B'10000101',X'C1'
         DC    B'10000101',X'C1'
         DC    B'10000101',X'C1'
         DC    B'10000101',X'C1'
         DC    B'10000101',X'C1'
         DC    B'10000101',X'C1'
         DC    B'10000101',X'C1'
         DC    B'10000111',X'E5'
         DC    B'10000111',X'E5'
         DC    B'10001000',X'A3'
         DC    AL2(BB7-*) SUBTABLE REFERENCE
         DC    AL2(BB8-*) SUBTABLE REFERENCE
         DC    B'10001000',X'E6'
         DC    B'10001000',X'50'
         DC    AL2(BB9-*) SUBTABLE REFERENCE
         DC    B'10000101',X'D9'
         DC    B'10000101',X'D9'
         DC    B'10000101',X'D9'
         DC    B'10000101',X'D9'
         DC    B'10000101',X'D9'
         DC    B'10000101',X'D9'
         DC    B'10000101',X'D9'
         DC    B'10000101',X'D9'
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'11000100',X'00' REPEATING STRING
         DC    B'10000111',X'C7'
         DC    B'10000111',X'C7'
         DC    B'10000111',X'7D'
         DC    B'10000111',X'7D'
         DC    B'10001000',X'7E'
         DC    AL2(BB10-*) SUBTABLE REFERENCE
         DC    B'10000111',X'C8'
         DC    B'10000111',X'C8'
         DC    B'10000101',X'E2'
         DC    B'10000101',X'E2'
         DC    B'10000101',X'E2'
         DC    B'10000101',X'E2'
         DC    B'10000101',X'E2'
         DC    B'10000101',X'E2'
         DC    B'10000101',X'E2'
         DC    B'10000101',X'E2'
         DC    B'10000110',X'D7'
         DC    B'10000110',X'D7'
         DC    B'10000110',X'D7'
         DC    B'10000110',X'D7'
         DC    AL2(BB11-*) SUBTABLE REFERENCE
         DC    AL2(BB12-*) SUBTABLE REFERENCE
         DC    B'10000111',X'F9'
         DC    B'10000111',X'F9'
         DC    B'10000101',X'E3'
         DC    B'10000101',X'E3'
         DC    B'10000101',X'E3'
         DC    B'10000101',X'E3'
         DC    B'10000101',X'E3'
         DC    B'10000101',X'E3'
         DC    B'10000101',X'E3'
         DC    B'10000101',X'E3'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000011',X'40'
         DC    B'10000111',X'F7'
         DC    B'10000111',X'F7'
         DC    AL2(BB13-*) SUBTABLE REFERENCE
         DC    AL2(BB14-*) SUBTABLE REFERENCE
         DC    B'10000110',X'F2'
         DC    B'10000110',X'F2'
         DC    B'10000110',X'F2'
         DC    B'10000110',X'F2'
         DC    B'10001000',X'D2'
         DC    B'10001000',X'E7'
         DC    B'10000111',X'F8'
         DC    B'10000111',X'F8'
         DC    AL2(BB15-*) SUBTABLE REFERENCE
         DC    B'10001000',X'4B'
         DC    B'10000111',X'F6'
         DC    B'10000111',X'F6'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000100',X'F0'
         DC    B'10000110',X'D3'
         DC    B'10000110',X'D3'
         DC    B'10000110',X'D3'
         DC    B'10000110',X'D3'
         DC    AL2(BB16-*) SUBTABLE REFERENCE
         DC    B'10001000',X'60'
         DC    AL2(BB17-*) SUBTABLE REFERENCE
         DC    B'10001000',X'85'
         DC    B'10000101',X'C5'
         DC    B'10000101',X'C5'
         DC    B'10000101',X'C5'
         DC    B'10000101',X'C5'
         DC    B'10000101',X'C5'
         DC    B'10000101',X'C5'
         DC    B'10000101',X'C5'
         DC    B'10000101',X'C5'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000100',X'00'
         DC    B'10000110',X'C4'
         DC    B'10000110',X'C4'
         DC    B'10000110',X'C4'
         DC    B'10000110',X'C4'
         DC    B'10001000',X'E8'
         DC    AL2(BB18-*) SUBTABLE REFERENCE
         DC    B'10000111',X'F5'
         DC    B'10000111',X'F5'
         DC    B'10000110',X'C9'
         DC    B'10000110',X'C9'
         DC    B'10000110',X'C9'
         DC    B'10000110',X'C9'
         DC    B'10000110',X'D5'
         DC    B'10000110',X'D5'
         DC    B'10000110',X'D5'
         DC    B'10000110',X'D5'
         DC    B'10001000',X'D8'
         DC    AL2(BB19-*) SUBTABLE REFERENCE
         DC    B'10001000',X'4D'
         DC    AL2(BB20-*) SUBTABLE REFERENCE
         DC    B'10000111',X'C6'
         DC    B'10000111',X'C6'
         DC    B'10001000',X'5D'
         DC    AL2(BB21-*) SUBTABLE REFERENCE
         DC    B'10000110',X'D6'
         DC    B'10000110',X'D6'
         DC    B'10000110',X'D6'
         DC    B'10000110',X'D6'
         DC    B'10000110',X'54'
         DC    B'10000110',X'54'
         DC    B'10000110',X'54'
         DC    B'10000110',X'54'
BB1      DC    B'10001001',X'D0'
         DC    B'10001001',X'D0'
         DC    B'10001001',X'D0'
         DC    B'10001001',X'D0'
         DC    B'10001011',X'FF'
         DC    B'10001011',X'7F'
         DC    AL2(BB22-*) SUBTABLE REFERENCE
         DC    B'10001011',X'1B'
BB2      DC    B'10001001',X'20'
         DC    B'10001001',X'20'
         DC    B'10001001',X'20'
         DC    B'10001001',X'20'
         DC    B'10001010',X'A8'
         DC    B'10001010',X'A8'
         DC    AL2(BB23-*) SUBTABLE REFERENCE
         DC    B'10001011',X'0A'
BB3      DC    B'10001001',X'94'
         DC    B'10001001',X'94'
         DC    B'10001001',X'94'
         DC    B'10001001',X'94'
         DC    B'10001011',X'14'
         DC    AL2(BB24-*) SUBTABLE REFERENCE
         DC    B'10001010',X'87'
         DC    B'10001010',X'87'
BB4      DC    B'10001010',X'07'
         DC    B'10001010',X'07'
         DC    AL2(BB25-*) SUBTABLE REFERENCE
         DC    AL2(BB26-*) SUBTABLE REFERENCE
         DC    B'10001010',X'5B'
         DC    B'10001010',X'5B'
         DC    B'10001010',X'18'
         DC    B'10001010',X'18'
BB5      DC    B'10001010',X'90'
         DC    B'10001010',X'90'
         DC    AL2(BB27-*) SUBTABLE REFERENCE
         DC    B'10001011',X'1C'
         DC    B'10001001',X'93'
         DC    B'10001001',X'93'
         DC    B'10001001',X'93'
         DC    B'10001001',X'93'
BB6      DC    AL2(BB28-*) SUBTABLE REFERENCE
         DC    AL2(BB29-*) SUBTABLE REFERENCE
         DC    B'10001010',X'82'
         DC    B'10001010',X'82'
         DC    B'10001001',X'41'
         DC    B'10001001',X'41'
         DC    B'10001001',X'41'
         DC    B'10001001',X'41'
BB7      DC    AL2(BB30-*) SUBTABLE REFERENCE
         DC    AL2(BB31-*) SUBTABLE REFERENCE
         DC    AL2(BB32-*) SUBTABLE REFERENCE
         DC    B'10001011',X'12'
         DC    AL2(BB33-*) SUBTABLE REFERENCE
         DC    B'10001011',X'7B'
         DC    B'10001010',X'03'
         DC    B'10001010',X'03'
BB8      DC    B'10001001',X'84'
         DC    B'10001001',X'84'
         DC    B'10001001',X'84'
         DC    B'10001001',X'84'
         DC    B'10001001',X'88'
         DC    B'10001001',X'88'
         DC    B'10001001',X'88'
         DC    B'10001001',X'88'
BB9      DC    AL2(BB34-*) SUBTABLE REFERENCE
         DC    B'10001011',X'0D'
         DC    B'10001010',X'08'
         DC    B'10001010',X'08'
         DC    B'10001001',X'80'
         DC    B'10001001',X'80'
         DC    B'10001001',X'80'
         DC    B'10001001',X'80'
BB10     DC    AL2(BB35-*) SUBTABLE REFERENCE
         DC    AL2(BB36-*) SUBTABLE REFERENCE
         DC    AL2(BB37-*) SUBTABLE REFERENCE
         DC    B'10001011',X'6C'
         DC    B'10001001',X'01'
         DC    B'10001001',X'01'
         DC    B'10001001',X'01'
         DC    B'10001001',X'01'
BB11     DC    B'10001011',X'45'
         DC    AL2(BB38-*) SUBTABLE REFERENCE
         DC    B'10001010',X'30'
         DC    B'10001010',X'30'
         DC    AL2(BB39-*) SUBTABLE REFERENCE
         DC    B'10001011',X'A6'
         DC    B'10001010',X'97'
         DC    B'10001010',X'97'
BB12     DC    B'10001001',X'58'
         DC    B'10001001',X'58'
         DC    B'10001001',X'58'
         DC    B'10001001',X'58'
         DC    B'10001010',X'86'
         DC    B'10001010',X'86'
         DC    B'10001011',X'48'
         DC    AL2(BB40-*) SUBTABLE REFERENCE
BB13     DC    B'10001010',X'04'
         DC    B'10001010',X'04'
         DC    B'10001011',X'38'
         DC    B'10001011',X'06'
         DC    B'10001010',X'5E'
         DC    B'10001010',X'5E'
         DC    B'10001010',X'7A'
         DC    B'10001010',X'7A'
BB14     DC    AL2(BB41-*) SUBTABLE REFERENCE
         DC    AL2(BB42-*) SUBTABLE REFERENCE
         DC    AL2(BB43-*) SUBTABLE REFERENCE
         DC    AL2(BB44-*) SUBTABLE REFERENCE
         DC    B'10001001',X'10'
         DC    B'10001001',X'10'
         DC    B'10001001',X'10'
         DC    B'10001001',X'10'
BB15     DC    B'10001011',X'B0'
         DC    AL2(BB45-*) SUBTABLE REFERENCE
         DC    B'10001010',X'70'
         DC    B'10001010',X'70'
         DC    AL2(BB46-*) SUBTABLE REFERENCE
         DC    AL2(BB47-*) SUBTABLE REFERENCE
         DC    B'10001010',X'E0'
         DC    B'10001010',X'E0'
BB16     DC    B'10001010',X'02'
         DC    B'10001010',X'02'
         DC    B'10001010',X'A4'
         DC    B'10001010',X'A4'
         DC    B'10001001',X'47'
         DC    B'10001001',X'47'
         DC    B'10001001',X'47'
         DC    B'10001001',X'47'
BB17     DC    B'10001001',X'99'
         DC    B'10001001',X'99'
         DC    B'10001001',X'99'
         DC    B'10001001',X'99'
         DC    AL2(BB48-*) SUBTABLE REFERENCE
         DC    AL2(BB49-*) SUBTABLE REFERENCE
         DC    B'10001011',X'0C'
         DC    B'10001011',X'A0'
BB18     DC    AL2(BB50-*) SUBTABLE REFERENCE
         DC    B'10001011',X'91'
         DC    AL2(BB51-*) SUBTABLE REFERENCE
         DC    AL2(BB52-*) SUBTABLE REFERENCE
         DC    B'10001001',X'A2'
         DC    B'10001001',X'A2'
         DC    B'10001001',X'A2'
         DC    B'10001001',X'A2'
BB19     DC    B'10001001',X'D1'
         DC    B'10001001',X'D1'
         DC    B'10001001',X'D1'
         DC    B'10001001',X'D1'
         DC    B'10001001',X'89'
         DC    B'10001001',X'89'
         DC    B'10001001',X'89'
         DC    B'10001001',X'89'
BB20     DC    B'10001010',X'83'
         DC    B'10001010',X'83'
         DC    B'10001011',X'C0'
         DC    AL2(BB53-*) SUBTABLE REFERENCE
         DC    B'10001010',X'E9'
         DC    B'10001010',X'E9'
         DC    B'10001011',X'05'
         DC    B'10001011',X'92'
BB21     DC    AL2(BB54-*) SUBTABLE REFERENCE
         DC    AL2(BB55-*) SUBTABLE REFERENCE
         DC    AL2(BB56-*) SUBTABLE REFERENCE
         DC    AL2(BB57-*) SUBTABLE REFERENCE
         DC    B'10001001',X'4E'
         DC    B'10001001',X'4E'
         DC    B'10001001',X'4E'
         DC    B'10001001',X'4E'
BB22     DC    B'10001110',X'AF'
         DC    B'10001110',X'AF'
         DC    B'10001110',X'FD'
         DC    B'10001110',X'FD'
         DC    B'10001101',X'BA'
         DC    B'10001101',X'BA'
         DC    B'10001101',X'BA'
         DC    B'10001101',X'BA'
         DC    B'10001100',X'FE'
         DC    B'10001100',X'FE'
         DC    B'10001100',X'FE'
         DC    B'10001100',X'FE'
         DC    B'10001100',X'FE'
         DC    B'10001100',X'FE'
         DC    B'10001100',X'FE'
         DC    B'10001100',X'FE'
BB23     DC    B'10001101',X'2E'
         DC    B'10001101',X'2E'
         DC    B'10001101',X'2E'
         DC    B'10001101',X'2E'
         DC    B'10001101',X'52'
         DC    B'10001101',X'52'
         DC    B'10001101',X'52'
         DC    B'10001101',X'52'
         DC    B'10001101',X'A9'
         DC    B'10001101',X'A9'
         DC    B'10001101',X'A9'
         DC    B'10001101',X'A9'
         DC    B'10001101',X'B6'
         DC    B'10001101',X'B6'
         DC    B'10001101',X'B6'
         DC    B'10001101',X'B6'
BB24     DC    B'10001100',X'1F'
         DC    B'10001100',X'1F'
         DC    B'10001100',X'1F'
         DC    B'10001100',X'1F'
         DC    B'10001100',X'1F'
         DC    B'10001100',X'1F'
         DC    B'10001100',X'1F'
         DC    B'10001100',X'1F'
         DC    B'10001100',X'4A'
         DC    B'10001100',X'4A'
         DC    B'10001100',X'4A'
         DC    B'10001100',X'4A'
         DC    B'10001100',X'4A'
         DC    B'10001100',X'4A'
         DC    B'10001100',X'4A'
         DC    B'10001100',X'4A'
BB25     DC    B'10001110',X'DF'
         DC    B'10001110',X'DF'
         DC    B'10001110',X'65'
         DC    B'10001110',X'65'
         DC    B'10001101',X'2A'
         DC    B'10001101',X'2A'
         DC    B'10001101',X'2A'
         DC    B'10001101',X'2A'
         DC    B'10001110',X'EA'
         DC    B'10001110',X'EA'
         DC    B'10001110',X'8F'
         DC    B'10001110',X'8F'
         DC    B'10001101',X'DE'
         DC    B'10001101',X'DE'
         DC    B'10001101',X'DE'
         DC    B'10001101',X'DE'
BB26     DC    B'10001100',X'1E'
         DC    B'10001100',X'1E'
         DC    B'10001100',X'1E'
         DC    B'10001100',X'1E'
         DC    B'10001100',X'1E'
         DC    B'10001100',X'1E'
         DC    B'10001100',X'1E'
         DC    B'10001100',X'1E'
         DC    B'10001110',X'AB'
         DC    B'10001110',X'AB'
         DC    B'10001110',X'8D'
         DC    B'10001110',X'8D'
         DC    B'10001101',X'56'
         DC    B'10001101',X'56'
         DC    B'10001101',X'56'
         DC    B'10001101',X'56'
BB27     DC    B'10001100',X'68'
         DC    B'10001100',X'68'
         DC    B'10001100',X'68'
         DC    B'10001100',X'68'
         DC    B'10001100',X'68'
         DC    B'10001100',X'68'
         DC    B'10001100',X'68'
         DC    B'10001100',X'68'
         DC    B'10001101',X'71'
         DC    B'10001101',X'71'
         DC    B'10001101',X'71'
         DC    B'10001101',X'71'
         DC    B'10001101',X'35'
         DC    B'10001101',X'35'
         DC    B'10001101',X'35'
         DC    B'10001101',X'35'
BB28     DC    B'10001100',X'0F'
         DC    B'10001100',X'0F'
         DC    B'10001100',X'0F'
         DC    B'10001100',X'0F'
         DC    B'10001100',X'0F'
         DC    B'10001100',X'0F'
         DC    B'10001100',X'0F'
         DC    B'10001100',X'0F'
         DC    B'10001101',X'3A'
         DC    B'10001101',X'3A'
         DC    B'10001101',X'3A'
         DC    B'10001101',X'3A'
         DC    B'10001110',X'69'
         DC    B'10001110',X'69'
         DC    B'10001110',X'79'
         DC    B'10001110',X'79'
BB29     DC    B'10001101',X'23'
         DC    B'10001101',X'23'
         DC    B'10001101',X'23'
         DC    B'10001101',X'23'
         DC    B'10001101',X'3E'
         DC    B'10001101',X'3E'
         DC    B'10001101',X'3E'
         DC    B'10001101',X'3E'
         DC    B'10001100',X'1A'
         DC    B'10001100',X'1A'
         DC    B'10001100',X'1A'
         DC    B'10001100',X'1A'
         DC    B'10001100',X'1A'
         DC    B'10001100',X'1A'
         DC    B'10001100',X'1A'
         DC    B'10001100',X'1A'
BB30     DC    B'10001110',X'DB'
         DC    B'10001110',X'DB'
         DC    B'10001110',X'BD'
         DC    B'10001110',X'BD'
         DC    B'10001101',X'2F'
         DC    B'10001101',X'2F'
         DC    B'10001101',X'2F'
         DC    B'10001101',X'2F'
         DC    B'10001101',X'66'
         DC    B'10001101',X'66'
         DC    B'10001101',X'66'
         DC    B'10001101',X'66'
         DC    B'10001101',X'CA'
         DC    B'10001101',X'CA'
         DC    B'10001101',X'CA'
         DC    B'10001101',X'CA'
BB31     DC    B'10001100',X'3C'
         DC    B'10001100',X'3C'
         DC    B'10001100',X'3C'
         DC    B'10001100',X'3C'
         DC    B'10001100',X'3C'
         DC    B'10001100',X'3C'
         DC    B'10001100',X'3C'
         DC    B'10001100',X'3C'
         DC    B'10001110',X'CF'
         DC    B'10001110',X'CF'
         DC    B'10001110',X'53'
         DC    B'10001110',X'53'
         DC    B'10001101',X'26'
         DC    B'10001101',X'26'
         DC    B'10001101',X'26'
         DC    B'10001101',X'26'
BB32     DC    B'10001101',X'B1'
         DC    B'10001101',X'B1'
         DC    B'10001101',X'B1'
         DC    B'10001101',X'B1'
         DC    B'10001101',X'BE'
         DC    B'10001101',X'BE'
         DC    B'10001101',X'BE'
         DC    B'10001101',X'BE'
         DC    B'10001110',X'51'
         DC    B'10001110',X'51'
         DC    B'10001110',X'E1'
         DC    B'10001110',X'E1'
         DC    B'10001101',X'A1'
         DC    B'10001101',X'A1'
         DC    B'10001101',X'A1'
         DC    B'10001101',X'A1'
BB33     DC    B'10001100',X'22'
         DC    B'10001100',X'22'
         DC    B'10001100',X'22'
         DC    B'10001100',X'22'
         DC    B'10001100',X'22'
         DC    B'10001100',X'22'
         DC    B'10001100',X'22'
         DC    B'10001100',X'22'
         DC    B'10001100',X'42'
         DC    B'10001100',X'42'
         DC    B'10001100',X'42'
         DC    B'10001100',X'42'
         DC    B'10001100',X'42'
         DC    B'10001100',X'42'
         DC    B'10001100',X'42'
         DC    B'10001100',X'42'
BB34     DC    B'10001110',X'B9'
         DC    B'10001110',X'B9'
         DC    B'10001110',X'57'
         DC    B'10001110',X'57'
         DC    B'10001101',X'6A'
         DC    B'10001101',X'6A'
         DC    B'10001101',X'6A'
         DC    B'10001101',X'6A'
         DC    B'10001100',X'43'
         DC    B'10001100',X'43'
         DC    B'10001100',X'43'
         DC    B'10001100',X'43'
         DC    B'10001100',X'43'
         DC    B'10001100',X'43'
         DC    B'10001100',X'43'
         DC    B'10001100',X'43'
BB35     DC    B'10001101',X'73'
         DC    B'10001101',X'73'
         DC    B'10001101',X'73'
         DC    B'10001101',X'73'
         DC    B'10001110',X'75'
         DC    B'10001110',X'75'
         DC    B'10001110',X'9B'
         DC    B'10001110',X'9B'
         DC    B'10001101',X'62'
         DC    B'10001101',X'62'
         DC    B'10001101',X'62'
         DC    B'10001101',X'62'
         DC    B'10001101',X'AA'
         DC    B'10001101',X'AA'
         DC    B'10001101',X'AA'
         DC    B'10001101',X'AA'
BB36     DC    B'10001100',X'A7'
         DC    B'10001100',X'A7'
         DC    B'10001100',X'A7'
         DC    B'10001100',X'A7'
         DC    B'10001100',X'A7'
         DC    B'10001100',X'A7'
         DC    B'10001100',X'A7'
         DC    B'10001100',X'A7'
         DC    B'10001101',X'49'
         DC    B'10001101',X'49'
         DC    B'10001101',X'49'
         DC    B'10001101',X'49'
         DC    B'10001111',X'ED'
         DC    B'10001111',X'EB'
         DC    B'10001110',X'B7'
         DC    B'10001110',X'B7'
BB37     DC    B'10001100',X'2C'
         DC    B'10001100',X'2C'
         DC    B'10001100',X'2C'
         DC    B'10001100',X'2C'
         DC    B'10001100',X'2C'
         DC    B'10001100',X'2C'
         DC    B'10001100',X'2C'
         DC    B'10001100',X'2C'
         DC    B'10001100',X'32'
         DC    B'10001100',X'32'
         DC    B'10001100',X'32'
         DC    B'10001100',X'32'
         DC    B'10001100',X'32'
         DC    B'10001100',X'32'
         DC    B'10001100',X'32'
         DC    B'10001100',X'32'
BB38     DC    B'10001101',X'55'
         DC    B'10001101',X'55'
         DC    B'10001101',X'55'
         DC    B'10001101',X'55'
         DC    B'10001110',X'3D'
         DC    B'10001110',X'3D'
         DC    B'10001110',X'63'
         DC    B'10001110',X'63'
         DC    B'10001100',X'0E'
         DC    B'10001100',X'0E'
         DC    B'10001100',X'0E'
         DC    B'10001100',X'0E'
         DC    B'10001100',X'0E'
         DC    B'10001100',X'0E'
         DC    B'10001100',X'0E'
         DC    B'10001100',X'0E'
BB39     DC    B'10001110',X'9E'
         DC    B'10001110',X'9E'
         DC    B'10001110',X'2D'
         DC    B'10001110',X'2D'
         DC    B'10001101',X'15'
         DC    B'10001101',X'15'
         DC    B'10001101',X'15'
         DC    B'10001101',X'15'
         DC    B'10001110',X'67'
         DC    B'10001110',X'67'
         DC    B'10001110',X'DD'
         DC    B'10001110',X'DD'
         DC    B'10001110',X'CD'
         DC    B'10001110',X'CD'
         DC    B'10001110',X'3B'
         DC    B'10001110',X'3B'
BB40     DC    B'10001100',X'11'
         DC    B'10001100',X'11'
         DC    B'10001100',X'11'
         DC    B'10001100',X'11'
         DC    B'10001100',X'11'
         DC    B'10001100',X'11'
         DC    B'10001100',X'11'
         DC    B'10001100',X'11'
         DC    B'10001110',X'29'
         DC    B'10001110',X'29'
         DC    B'10001110',X'AE'
         DC    B'10001110',X'AE'
         DC    B'10001101',X'1D'
         DC    B'10001101',X'1D'
         DC    B'10001101',X'1D'
         DC    B'10001101',X'1D'
BB41     DC    B'10001101',X'AC'
         DC    B'10001101',X'AC'
         DC    B'10001101',X'AC'
         DC    B'10001101',X'AC'
         DC    B'10001101',X'B2'
         DC    B'10001101',X'B2'
         DC    B'10001101',X'B2'
         DC    B'10001101',X'B2'
         DC    B'10001100',X'24'
         DC    B'10001100',X'24'
         DC    B'10001100',X'24'
         DC    B'10001100',X'24'
         DC    B'10001100',X'24'
         DC    B'10001100',X'24'
         DC    B'10001100',X'24'
         DC    B'10001100',X'24'
BB42     DC    B'10001101',X'BF'
         DC    B'10001101',X'BF'
         DC    B'10001101',X'BF'
         DC    B'10001101',X'BF'
         DC    B'10001101',X'36'
         DC    B'10001101',X'36'
         DC    B'10001101',X'36'
         DC    B'10001101',X'36'
         DC    B'10001101',X'59'
         DC    B'10001101',X'59'
         DC    B'10001101',X'59'
         DC    B'10001101',X'59'
         DC    B'10001110',X'B5'
         DC    B'10001110',X'B5'
         DC    B'10001110',X'BB'
         DC    B'10001110',X'BB'
BB43     DC    B'10001100',X'28'
         DC    B'10001100',X'28'
         DC    B'10001100',X'28'
         DC    B'10001100',X'28'
         DC    B'10001100',X'28'
         DC    B'10001100',X'28'
         DC    B'10001100',X'28'
         DC    B'10001100',X'28'
         DC    B'10001101',X'46'
         DC    B'10001101',X'46'
         DC    B'10001101',X'46'
         DC    B'10001101',X'46'
         DC    B'10001101',X'9C'
         DC    B'10001101',X'9C'
         DC    B'10001101',X'9C'
         DC    B'10001101',X'9C'
BB44     DC    B'10001110',X'CB'
         DC    B'10001110',X'CB'
         DC    B'10001110',X'8B'
         DC    B'10001110',X'8B'
         DC    B'10001101',X'5F'
         DC    B'10001101',X'5F'
         DC    B'10001101',X'5F'
         DC    B'10001101',X'5F'
         DC    B'10001100',X'EF'
         DC    B'10001100',X'EF'
         DC    B'10001100',X'EF'
         DC    B'10001100',X'EF'
         DC    B'10001100',X'EF'
         DC    B'10001100',X'EF'
         DC    B'10001100',X'EF'
         DC    B'10001100',X'EF'
BB45     DC    B'10001110',X'2B'
         DC    B'10001110',X'2B'
         DC    B'10001111',X'9D'
         DC    B'10001111',X'9F'
         DC    B'10001101',X'17'
         DC    B'10001101',X'17'
         DC    B'10001101',X'17'
         DC    B'10001101',X'17'
         DC    B'10001100',X'34'
         DC    B'10001100',X'34'
         DC    B'10001100',X'34'
         DC    B'10001100',X'34'
         DC    B'10001100',X'34'
         DC    B'10001100',X'34'
         DC    B'10001100',X'34'
         DC    B'10001100',X'34'
BB46     DC    B'10001101',X'21'
         DC    B'10001101',X'21'
         DC    B'10001101',X'21'
         DC    B'10001101',X'21'
         DC    B'10001110',X'DA'
         DC    B'10001110',X'DA'
         DC    B'10001110',X'39'
         DC    B'10001110',X'39'
         DC    B'10001100',X'78'
         DC    B'10001100',X'78'
         DC    B'10001100',X'78'
         DC    B'10001100',X'78'
         DC    B'10001100',X'78'
         DC    B'10001100',X'78'
         DC    B'10001100',X'78'
         DC    B'10001100',X'78'
BB47     DC    B'10001100',X'6E'
         DC    B'10001100',X'6E'
         DC    B'10001100',X'6E'
         DC    B'10001100',X'6E'
         DC    B'10001100',X'6E'
         DC    B'10001100',X'6E'
         DC    B'10001100',X'6E'
         DC    B'10001100',X'6E'
         DC    B'10001100',X'6D'
         DC    B'10001100',X'6D'
         DC    B'10001100',X'6D'
         DC    B'10001100',X'6D'
         DC    B'10001100',X'6D'
         DC    B'10001100',X'6D'
         DC    B'10001100',X'6D'
         DC    B'10001100',X'6D'
BB48     DC    B'10001101',X'BC'
         DC    B'10001101',X'BC'
         DC    B'10001101',X'BC'
         DC    B'10001101',X'BC'
         DC    B'10001110',X'B3'
         DC    B'10001110',X'B3'
         DC    B'10001110',X'27'
         DC    B'10001110',X'27'
         DC    B'10001101',X'8C'
         DC    B'10001101',X'8C'
         DC    B'10001101',X'8C'
         DC    B'10001101',X'8C'
         DC    B'10001110',X'FA'
         DC    B'10001110',X'FA'
         DC    B'10001110',X'9A'
         DC    B'10001110',X'9A'
BB49     DC    B'10001100',X'09'
         DC    B'10001100',X'09'
         DC    B'10001100',X'09'
         DC    B'10001100',X'09'
         DC    B'10001100',X'09'
         DC    B'10001100',X'09'
         DC    B'10001100',X'09'
         DC    B'10001100',X'09'
         DC    B'10001100',X'31'
         DC    B'10001100',X'31'
         DC    B'10001100',X'31'
         DC    B'10001100',X'31'
         DC    B'10001100',X'31'
         DC    B'10001100',X'31'
         DC    B'10001100',X'31'
         DC    B'10001100',X'31'
BB50     DC    B'10001101',X'16'
         DC    B'10001101',X'16'
         DC    B'10001101',X'16'
         DC    B'10001101',X'16'
         DC    B'10001101',X'B4'
         DC    B'10001101',X'B4'
         DC    B'10001101',X'B4'
         DC    B'10001101',X'B4'
         DC    B'10001110',X'3F'
         DC    B'10001110',X'3F'
         DC    B'10001111',X'FB'
         DC    B'10001111',X'AD'
         DC    B'10001101',X'FC'
         DC    B'10001101',X'FC'
         DC    B'10001101',X'FC'
         DC    B'10001101',X'FC'
BB51     DC    B'10001101',X'EC'
         DC    B'10001101',X'EC'
         DC    B'10001101',X'EC'
         DC    B'10001101',X'EC'
         DC    B'10001101',X'CC'
         DC    B'10001101',X'CC'
         DC    B'10001101',X'CC'
         DC    B'10001101',X'CC'
         DC    B'10001110',X'37'
         DC    B'10001110',X'37'
         DC    B'10001110',X'25'
         DC    B'10001110',X'25'
         DC    B'10001101',X'13'
         DC    B'10001101',X'13'
         DC    B'10001101',X'13'
         DC    B'10001101',X'13'
BB52     DC    B'10001100',X'4F'
         DC    B'10001100',X'4F'
         DC    B'10001100',X'4F'
         DC    B'10001100',X'4F'
         DC    B'10001100',X'4F'
         DC    B'10001100',X'4F'
         DC    B'10001100',X'4F'
         DC    B'10001100',X'4F'
         DC    B'10001101',X'DC'
         DC    B'10001101',X'DC'
         DC    B'10001101',X'DC'
         DC    B'10001101',X'DC'
         DC    B'10001101',X'33'
         DC    B'10001101',X'33'
         DC    B'10001101',X'33'
         DC    B'10001101',X'33'
BB53     DC    B'10001110',X'76'
         DC    B'10001110',X'76'
         DC    B'10001110',X'CE'
         DC    B'10001110',X'CE'
         DC    B'10001101',X'19'
         DC    B'10001101',X'19'
         DC    B'10001101',X'19'
         DC    B'10001101',X'19'
         DC    B'10001101',X'5A'
         DC    B'10001101',X'5A'
         DC    B'10001101',X'5A'
         DC    B'10001101',X'5A'
         DC    B'10001110',X'77'
         DC    B'10001110',X'77'
         DC    B'10001110',X'8A'
         DC    B'10001110',X'8A'
BB54     DC    B'10001100',X'44'
         DC    B'10001100',X'44'
         DC    B'10001100',X'44'
         DC    B'10001100',X'44'
         DC    B'10001100',X'44'
         DC    B'10001100',X'44'
         DC    B'10001100',X'44'
         DC    B'10001100',X'44'
         DC    B'10001101',X'74'
         DC    B'10001101',X'74'
         DC    B'10001101',X'74'
         DC    B'10001101',X'74'
         DC    B'10001101',X'B8'
         DC    B'10001101',X'B8'
         DC    B'10001101',X'B8'
         DC    B'10001101',X'B8'
BB55     DC    B'10001100',X'A5'
         DC    B'10001100',X'A5'
         DC    B'10001100',X'A5'
         DC    B'10001100',X'A5'
         DC    B'10001100',X'A5'
         DC    B'10001100',X'A5'
         DC    B'10001100',X'A5'
         DC    B'10001100',X'A5'
         DC    B'10001100',X'6F'
         DC    B'10001100',X'6F'
         DC    B'10001100',X'6F'
         DC    B'10001100',X'6F'
         DC    B'10001100',X'6F'
         DC    B'10001100',X'6F'
         DC    B'10001100',X'6F'
         DC    B'10001100',X'6F'
BB56     DC    B'10001100',X'4C'
         DC    B'10001100',X'4C'
         DC    B'10001100',X'4C'
         DC    B'10001100',X'4C'
         DC    B'10001100',X'4C'
         DC    B'10001100',X'4C'
         DC    B'10001100',X'4C'
         DC    B'10001100',X'4C'
         DC    B'10001100',X'98'
         DC    B'10001100',X'98'
         DC    B'10001100',X'98'
         DC    B'10001100',X'98'
         DC    B'10001100',X'98'
         DC    B'10001100',X'98'
         DC    B'10001100',X'98'
         DC    B'10001100',X'98'
BB57     DC    B'10001101',X'72'
         DC    B'10001101',X'72'
         DC    B'10001101',X'72'
         DC    B'10001101',X'72'
         DC    B'10001101',X'0B'
         DC    B'10001101',X'0B'
         DC    B'10001101',X'0B'
         DC    B'10001101',X'0B'
         DC    B'10001110',X'8E'
         DC    B'10001110',X'8E'
         DC    B'10001110',X'EE'
         DC    B'10001110',X'EE'
         DC    B'10001101',X'64'
         DC    B'10001101',X'64'
         DC    B'10001101',X'64'
         DC    B'10001101',X'64'
EXPNDS   DSECT
SHIFTS   DS    32F                 SHIFT VALUES
EXPTAB   DS    F                   EXPANSION TABLE
WORKAREA DSECT
         DS    18F
WORKL    EQU   *-WORKAREA
         COPY  REGEQU
         END
./ ADD NAME=SUB0004  0100-09250-09250-0919-00318-00318-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: SUB0004                                               *
*                                                                     *
*   Interface with MVS's dynamic allocation interface routine (DAIR)  *
*   to allocate or de-allocate data sets.                             *
*                                                                     *
*   The interface block is DAIRREQ.                                   *
*                                                                     *
* ------------------------------------------------------------------- *
SUB0004  CSECT
SUB0004  AMODE 31
SUB0004  RMODE ANY
         USING SUB0004,R12                    DEFINE BASE
         STM   R14,R12,12(R13)                CHAIN REGISTERS
         LR    R12,R15                        COPY ENTRY POINT ADDRESS
         B     DAIR0000
         DC    CL8'SUB0004'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
DAIR0000 DS    0H
         LR    R10,R1                         COPY PARM BLOCK ADDRESS
         USING DAIRREQ,R10                    DEFINE BASE
         GETMAIN RU,                          ACQUIRE STORAGE          +
               LV=WKL,                        .. ACQUIRE WORK AREA     +
               LOC=ANY                        .. FROM ANY AREA
         ST    R13,4(R1)                      CHAIN CALLER'S AREA
         ST    R1,8(R13)                      CHAIN OUR AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WK,R13                         DEFINE BASE
         USING S99RB,R2                       DEFINE BASE
         LA    R2,WKRB                        SVC 99 REQUEST BLOCK
         ST    R2,WKRBA                       SET POINTER
         OI    WKRBA,X'80'                    SET END OF LIST
         MVC   WK_DD_PARMS(DAIRPL),DAIRPI     INITIALIZE PARAMETERS
         XC    WKRB(S99RBEND-S99RB),WKRB
         CLI   DAIR_CMD,$DAIR_EXISTING        ALLOCATE EXISTING?
         BE    DAIR1000                       YES
         CLI   DAIR_CMD,$DAIR_NEW             ALLOCATE NEW DATA SET?
         BE    DAIR1000                       YES
         CLI   DAIR_CMD,$DAIR_SYSOUT          ALLOCATE SYSOUT
         BE    DAIR1500                       YES
         CLI   DAIR_CMD,$DAIR_INTRDR          ALLOCATE INTERNAL READER?
         BE    DAIR1600                       YES
         CLI   DAIR_CMD,$DAIR_RELEASE         RELEASE?
         BE    DAIR2000                       YES
         CLI   DAIR_CMD,$DAIR_DELETE          DELETE?
         BE    DAIR3000                       YES
         ABEND 1,DUMP,,USER                   SORRY
*---------------------------------------------------------------------*
*                                                                     *
*     Allocate DASD data sets                                         *
*                                                                     *
*---------------------------------------------------------------------*
DAIR1000 DS    0H
         MVI   S99VERB,S99VRBAL               SET VERB
         LA    R15,WK_DD_PARMS                DDNAME PARAMETER
         ST    R15,WK_TEXT_1                  SET PARAMETER 1 ADDRESS
         MVC   WK_DD,DAIR_DD                  SET DD NAME
         LA    R15,WK_DSN_PARMS               DATASET NAME PARAMETER
         ST    R15,WK_TEXT_2                  SET PARAMETER 2 ADDRESS
         MVC   WK_DSN,DAIR_DSN                COPY DATA SET NAME
         LA    R15,WKDSPIP                    INITIAL DISPOSITION
         ST    R15,WK_TEXT_3                  SET PARAMETER 3 ADDRESS
         MVI   WKDSPI,X'08'                   SET DISP TO 'SHR'
         CLI   DAIR_CMD,$DAIR_NEW             ALLOCATE NEW?
         BE    DAIR1020                       YES
         CLC   DAIR_MEMBER,BLANKS             MEMBER NAME?
         BE    DAIR1010                       NO
         LA    R15,WK_MEM_PARMS               MEMBER NAME PARAMETERS
         ST    R15,WK_TEXT_4                  SET PARAMETER 4 ADDRESS
         MVC   WK_MEMBER,DAIR_MEMBER          COPY MEMBER NAME
         OI    WK_TEXT_4,X'80'                FLAG END-OF-LIST
         B     DAIR1030
DAIR1010 DS    0H
         OI    WK_TEXT_3,X'80'                FLAG END-OF-LIST
         B     DAIR1030
DAIR1020 DS    0H
         MVI   WKDSPI,X'04'                   SET INITIAL DISP 'NEW'
         LA    R15,WKDSPNP                    NORMAL DISPOSITION
         ST    R15,WK_TEXT_4                  SET PARAMETER 4 ADDRESS
         MVI   WKDSPN,X'02'                   SET NORMAL DISP 'CATLG'
         LA    R15,WK_UNIT_PARMS              UNIT PARAMETERS
         ST    R15,WK_TEXT_5                  SET PARAMETER 5 ADDRESS
         MVC   WK_UNIT,DAIRUNIT               SET UNIT NAME
         LA    R15,WKBLKNP                    BLOCK LENGTH PARAMETER
         ST    R15,WK_TEXT_6                  SET PARAMETER 6 ADDRESS
         MVC   WKBLKN,DAIRBLKN+1              SET BLOCK LENGTH
         LA    R15,WKPRIP                     PRIMARY SPACE PARAMETER
         ST    R15,WK_TEXT_7                  SET PARAMETER 7 ADDRESS
         MVC   WKPRI,DAIRPRI+1                SET PRIMARY QUANTITY
         LA    R15,WKSECP                     SECONDARY SPACE PARAMETER
         ST    R15,WK_TEXT_8                  SET PARAMETER 8 ADDRESS
         MVC   WKSEC,DAIRSEC+1                SET SECONDARY QUANTITY
         LA    R15,WKRELP                     RELEASE UNUSED SPACE
         ST    R15,WK_TEXT_9                  SET PARAMETER 9 ADDRESS
         OI    WK_TEXT_9,X'80'                FLAG END OF LIST
DAIR1030 DS    0H
         BAL   R8,DAIR4000                    GO ISSUE SVC 99
         B     EXIT0000                       EXIT
*---------------------------------------------------------------------*
*                                                                     *
*     Allocate SNAP (spun SYSOUT)                                     *
*                                                                     *
*---------------------------------------------------------------------*
DAIR1500 DS    0H
         MVI   S99VERB,S99VRBAL               SET VERB
         MVC   WK_DD,DAIR_DD                  SET DDNAME
         MVC   WKPRTC,DAIR_CLASS              SET SYSOUT CLASS
         LA    R1,WK_DD_PARMS                 DDNAME PARAMETERS
         ST    R1,WK_TEXT_1                   SET PARAMETER 1 ADDRESS
         LA    R1,WKPRTP                      SYSOUT PARAMETERS
         ST    R1,WK_TEXT_2                   SET PARAMETER 2 ADDRESS
         LA    R1,WKFREEP                     FREE ON CLOSE PARAMETERS
         ST    R1,WK_TEXT_3                   SET PARAMETER 3 ADDRESS
         OI    WK_TEXT_3,X'80'                SET 'END-OF-LIST'
         BAL   R8,DAIR4000                    ALLOCATE SNAP
         B     EXIT0000                       EXIT
*---------------------------------------------------------------------*
*                                                                     *
*     Allocate internal reader                                        *
*                                                                     *
*---------------------------------------------------------------------*
DAIR1600 DS    0H
         MVI   S99VERB,S99VRBAL               SET VERB
         MVC   WK_DD,DAIR_DD                  SET DDNAME
         MVI   WKPRTC,C'O'                    SET SYSOUT CLASS
         LA    R1,WK_DD_PARMS                 DDNAME PARAMETERS
         ST    R1,WK_TEXT_1                   SET PARAMETER 1 ADDRESS
         LA    R1,WKPRTP                      SYSOUT PARAMETERS
         ST    R1,WK_TEXT_2                   SET PARAMETER 2 ADDRESS
         LA    R1,WKFREEP                     FREE ON CLOSE PARAMETERS
         ST    R1,WK_TEXT_3                   SET PARAMETER 3 ADDRESS
         LA    R1,WKPGMP                      SYSOUT PROGRAM PARMS
         ST    R1,WK_TEXT_4                   SET PARAMETER 4 ADDRESS
         OI    WK_TEXT_4,X'80'                SET 'END-OF-LIST'
         BAL   R8,DAIR4000                    ALLOCATE SNAP
         B     EXIT0000                       EXIT
*---------------------------------------------------------------------*
*                                                                     *
*     Release (un-allocate)                                           *
*                                                                     *
*---------------------------------------------------------------------*
DAIR2000 DS    0H
         LA    R2,WKRB                        REQUEST BLOCK'S ADDRESS
         MVC   WK_DD,DAIR_DD                  SET DDNAME TO RELEASE
         MVI   S99VERB,S99VRBUN               SET VERB
         LA    R15,WK_DD_PARMS                DDNAME PARAMETER
         ST    R15,WK_TEXT_1                  SET PARAMETER 1 ADDRESS
         OI    WK_TEXT_1,X'80'                FLAG END OF LIST
         BAL   R8,DAIR4000                    GO ISSUE SVC 99
         B     EXIT0000                       EXIT
*---------------------------------------------------------------------*
*                                                                     *
*    Delete a dataset.  This is a two step process.                   *
*    The dataset is allocated with 'DISP=(OLD,DELETE)'                *
*    then unallocated.                                                *
*                                                                     *
*---------------------------------------------------------------------*
DAIR3000 DS    0H
         MVC   WK_DD,DAIR_DD                  SET DD DDNAME
         MVC   WK_DSN,DAIR_DSN                SET DATA SET NAME
         MVI   WKDSPI,X'01'                   SET DISPOSITION 'OLD'
         MVI   WKDSPN,X'04'                   SET DISPOSITION 'DELETE'
         XC    WKRB(S99RBEND-S99RB),WKRB
         MVI   S99VERB,S99VRBAL               SET VERB
         LA    R15,WK_DD_PARMS                DDNAME PARAMETER
         ST    R15,WK_TEXT_1                  SET PARAMETER 1 ADDRESS
         LA    R15,WK_DSN_PARMS               DSN PARAMETER
         ST    R15,WK_TEXT_2                  SET PARAMETER 2 ADDRESS
         LA    R15,WKDSPIP                    INITIAL DISP PARAMETER
         ST    R15,WK_TEXT_3                  SET PARAMETER 3 ADDRESS
         LA    R15,WKDSPNP                    NORMAL DISP PARAMETER
         ST    R15,WK_TEXT_4                  SET PARAMETER 4 ADDRESS
         OI    WK_TEXT_4,X'80'                FLAG END OF LIST
         BAL   R8,DAIR4000                    GO ISSUE SVC 99
         LTR   R15,R15                        ALLOCATE SUCCESSFUL?
         BNZ   EXIT0000                       NO.  PROCESS NEXT REQUEST
         MVI   S99VERB,S99VRBUN               SET VERB
         LA    R15,WK_DD_PARMS                DDNAME PARAMETER
         ST    R15,WK_TEXT_1                  SET PARAMETER 1 ADDRESS
         OI    WK_TEXT_1,X'80'                FLAG END OF LIST
         BAL   R8,DAIR4000                    ISSUE SVC 99
         B     EXIT0000                       PROCESS NEXT REQUEST
*---------------------------------------------------------------------*
*                                                                     *
*     Issue the SVC                                                   *
*                                                                     *
*---------------------------------------------------------------------*
DAIR4000 DS    0H
         MVI   S99RBLN,S99RBEND-S99RB
         LA    R1,WK_TEXT_1                   FIRST TEXT UNIT POINTER
         ST    R1,S99TXTPP                    SET TEXT ADDRESS
         LA    R1,WKRBA                       REQUEST BLOCK ADDRESS
         SVC   99                             ISSUE SVC
         STCM  R15,3,DAIR_R15                 SET RETURN CODE
         MVC   DAIR_ERROR,S99ERROR            SET ERROR CODE
         MVC   DAIR_INFO,S99INFO              SET INFO CODE
         BR    R8                             RETURN
* ------------------------------------------------------------------- *
*             EXIT                                                    *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13
         FREEMAIN RU,A=(1),LV=WKL             FREE WORK AREA
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS
         SR    R15,R15                        GIVE GOOD RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------ *
*        CONSTANTS                                                   *
* ------------------------------------------------------------------ *
BLANKS   DC    CL8' '
DAIRPI   DC    AL2(DALDDNAM)         DDNAME PARMS
         DC    AL2(1)
         DC    AL2(8)
         DC    CL8' '                DDNAME
         DC    AL2(DALDSNAM)         DATASET NAME PARMS
         DC    AL2(1)
         DC    AL2(44)
         DC    CL44' '               DATASET NAME
         DC    AL2(DALMEMBR)         MEMBER NAME PARMS
         DC    AL2(1)
         DC    AL2(8)
         DC    CL8' '                DATASET NAME
         DC    AL2(DALSTATS)         INITIAL DISPOSITION PARMS
         DC    AL2(1)
         DC    AL2(1)
         DC    X'00'                 INITIAL DISPOSITION
         DC    AL2(DALNDISP)         NORMAL DISPOSITION PARMS
         DC    AL2(1)
         DC    AL2(1)
         DC    X'00'                 NORMAL DISPOSITION
         DC    AL2(DALUNIT)          UNIT PARAMETERS
         DC    AL2(1)
         DC    AL2(8)
         DC    CL8'        '         UNIT NAME
         DC    AL2(DALBLKLN)         ALLOCATION AVERAGE BLOCK LENGTH
         DC    AL2(1)
         DC    AL2(3)
         DC    XL3'00'               BLOCK LENGTH
         DC    AL2(DALPRIME)         PRIMARY SPACE PARAMETERS
         DC    AL2(1)
         DC    AL2(3)
         DC    XL3'0'                PRIMARY SPACE (IN TRACKS)
         DC    AL2(DALSECND)         SECONDARY SPACE PARAMETERS
         DC    AL2(1)
         DC    AL2(3)
         DC    XL3'0'                SECONDARY SPACE (IN TRACKS)
         DC    AL2(DALRLSE)          RELEASE UNUSED SPACE
         DC    AL2(0)
         DC    AL2(DALSYSOU)         ALLOCATE SYSOUT
         DC    AL2(1)
         DC    AL2(1)
         DC    C'O'                  SYSOUT CLASS
         DC    AL2(DALCLOSE)         SAME AS FREE=CLOSE ON A DD STMT
         DC    AL2(0)
         DC    AL2(DALSPGNM)         SYSOUT PROGRAM NAME
         DC    AL2(1)
         DC    AL2(6)
         DC    CL6'INTRDR)'
DAIRPL   EQU   *-DAIRPI
         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
WK            DSECT
              LIBSAVE DSECT=NO
WK_TEXT_1     DS    A                  TEXT UNIT 1'S ADDRESS
WK_TEXT_2     DS    A                  TEXT UNIT 2'S ADDRESS
WK_TEXT_3     DS    A                  TEXT UNIT 3'S ADDRESS
WK_TEXT_4     DS    A                  TEXT UNIT 4'S ADDRESS
WK_TEXT_5     DS    A                  TEXT UNIT 5'S ADDRESS
WK_TEXT_6     DS    A                  TEXT UNIT 6'S ADDRESS
WK_TEXT_7     DS    A                  TEXT UNIT 7'S ADDRESS
WK_TEXT_8     DS    A                  TEXT UNIT 8'S ADDRESS
WK_TEXT_9     DS    A                  TEXT UNIT 9'S ADDRESS

WKRBA         DS    A                  REQUEST BLOCK'S ADDRESS
WKRB          DS    (S99RBEND-S99RB)X  RESERVE SPACE FOR REQUEST BLOCK

WK_DD_PARMS   DS    AL2,AL2,AL2        DDNAME PARMS
WK_DD         DS    CL8                DDNAME
WK_DSN_PARMS  DS    AL2,AL2,AL2        DATASET NAME PARMS
WK_DSN        DS    CL44               DATASET NAME
WK_MEM_PARMS  DS    AL2,AL2,AL2        MEMBER NAME PARMS
WK_MEMBER     DS    CL8                MEMBER NAME
WKDSPIP       DS    AL2,AL2,AL2        INITIAL DISPOSITION PARMS
WKDSPI        DS    X                  INITIAL DISPOSITION
WKDSPNP       DS    AL2,AL2,AL2        NORMAL DISPOSITION PARMS
WKDSPN        DS    X                  NORMAL DISPOSITION
WK_UNIT_PARMS DS    AL2,AL2,AL2        UNIT PARAMETERS
WK_UNIT       DS    CL8                UNIT NAME
WKBLKNP       DS    AL2,AL2,AL2        ALLOCATION UNITS (BLOCK LENGTH)
WKBLKN        DS    XL3                BLOCK LENGTH
WKPRIP        DS    AL2,AL2,AL2        PRIMARY SPACE PARAMETERS
WKPRI         DS    XL3                PRIMARY SPACE (IN TRACKS)
WKSECP        DS    AL2,AL2,AL2        SECONDARY SPACE PARAMETERS
WKSEC         DS    XL3                SECONDARY SPACE (IN TRACKS)
WKRELP        DS    AL2,AL2            RELEASE UNUSED SPACE (RLSE)
WKPRTP        DS    AL2,AL2,AL2        SYSOUT PARAMETERS
WKPRTC        DS    C                  SYSOUT CLASS
WKFREEP       DS    AL2,AL2            FREE AT DE-ALLOCATION
WKPGMP        DS    AL2,AL2,AL2        SYSOUT PROGRAM PARMS
              DS    CL6                SYSOUT PROGRAM NAME
WKPL          EQU   *-WK_DD_PARMS
WKL           EQU   *-WK
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
              DAIRREQ  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
              COPY     REGEQU
              IEFZB4D0
              IEFZB4D2
         END  SUB0004
./ ADD NAME=USUBADMN 0100-09250-09250-0919-00363-00363-00000-SOURCE
         TITLE 'USUBADMN CHECK IN/OUT STATUS AND USER ADMINISTRATION'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBADMN                                              *
*                                                                     *
*   Administer check_in/check_out status                              *
*              check_out_user                                         *
*              owner                                                  *
*                                                                     *
* ------------------------------------------------------------------- *
USUBADMN CSECT
USUBADMN AMODE 31
USUBADMN RMODE ANY
         USING PSA,R0
         USING USUBADMN,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBADMN'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         L     R1,USER_DXD                    WORK AREA ADDRESS
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDADMN,R13                    DEFINE BASE
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    ADMN0010
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   DXD_RPL(RPLL),RPLI
         XC    DXD_LIBBLOK_ADDR,DXD_LIBBLOK_ADDR
ADMN0010 DS    0H
         ITRACE ID=ENTRY
         L     R9,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         L     R8,USER_RPL                    RPL ADDRESS
         USING IFGRPL,R8
         L     R7,USER_RPLX                   RPL EXTENSION ADDRESS
         USING ISTRPL6X,R7
         MVI   NET_RETURN_CODE,$NET_OK
         MVI   DXD_FLAG,0                     RESET ALL FLAGS
         LA    R1,NET_MSG_1                   FIRST MESSAGE
         LA    R2,5                           NUMBER OF MESSAGES
ADMN0020 DS    0H
         MVC   0(L'NET_MSG_1,R1),COMM_BLANKS
         LA    R1,L'NET_MSG_1(R1)
         BCT   R2,ADMN0020
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   NET_FUNCTION,$NET_SEND_ADMIN
         BE    ADMN0070
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ADMN0030 DS    0H
         MVC   DXD_MEM_NAME,NET_MEM_NAME
         MVC   DXD_MEM_VER,NET_MEM_VER
         MVC   DXD_LIBRARY_NAME,NET_LIB_NAME
         ITRACE ID=LIBRARY,                                            +
               DATA1=DXD_LIBRARY_NAME
         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         USING LIBBLOK,R6                     DEFINE BASE
         BZ    ADMN0050
ADMN0040 DS    0H
         ITRACE ID=FINDLIB,                                            +
               DATA1=LIB_NAME
         CLC   DXD_LIBRARY_NAME,LIB_NAME
         BE    ADMN0060
         ICM   R6,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   ADMN0040
ADMN0050 DS    0H
         ITRACE ID=BADLIB
         LA    R1,NETBLOKL
         STCM  R1,3,NET_LENGTH
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(EMSG01L),EMSG01
         MVC   NET_MSG_1+(EMSG01_LIBRARY-EMSG01)(L'EMSG01_LIBRARY),DXD_+
               LIBRARY_NAME
         B     EXIT0000                       EXIT
ADMN0060 DS    0H
         ITRACE ID=LIBFOUND,                                           +
               RDATA1=R6
         ST    R6,DXD_LIBBLOK_ADDR            SAVE LIBBLOK ADDRESS
* ------------------------------------------------------------------- *
*     Verify that the library is OPEN.                                *
* ------------------------------------------------------------------- *
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BNO   ERR0010                        NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LA    R2,DXD_RPL                     OUR RPL ADDRESS
         LA    R3,LIB_ACB                     ACB IN LIBBLOK
         LA    R4,DXD_IO                      OUR I/O AREA ADDRESS
         LA    R5,LIB_KEY                     RECORD KEY
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R5),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE)
* ------------------------------------------------------------------- *
*     Verify the user has authorization                               *
* ------------------------------------------------------------------- *
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,NET_MEM_NAME
         MVC   LIB_KEY_VERSION,NET_MEM_VER
         MVC   LIB_KEY_SEQ,F1
         ITRACE ID=READ1,                                              +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BAL   R4,READ0000                    READ INDEX RECORD
         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?
         BNE   ERR0020                        NO
         ITRACE ID=CALLAUTH
         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER
         MVI   AUTH_FUNCTION,$AUTH_CHECK_ADMIN
         MVC   AUTH_USER,USER_USER_ID
         MVC   AUTH_LIB,DXD_LIBRARY_NAME
         MVC   AUTH_MEMBER,DXD_MEM_NAME
         MVC   AUTH_VERSION,DXD_MEM_VER
         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER
         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER
         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS
         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS
         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT
         BALR  R14,R15                        LINK TO AUTHORIZATION
         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?
         BNE   ERR0030                        NO
         MVC   NET_DATA(LIB_INDEX_RECORD_LENGTH),LIB_RECORD
         LA    R1,NETBLOKL+LIB_INDEX_RECORD_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         B     EXIT0000
* ------------------------------------------------------------------- *
*     Update the index record                                         *
* ------------------------------------------------------------------- *
ADMN0070 DS    0H
         L     R6,DXD_LIBBLOK_ADDR
         BAL   R4,READ1000
         MVC   LIB_RECORD(LIB_INDEX_RECORD_LENGTH),NET_DATA
         BAL   R4,PUT0000
         MVI   NET_RETURN_CODE,$NET_OK
         ITRACE ID=UPDATED
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0000 DS    0H
         ITRACE ID=READ,                                               +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         A     R1,F1                          PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         GET   RPL=DXD_RPL                    READ NEXT RECORD
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         ITRACE ID=DATAREAD,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BR    R4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ1000 DS    0H
         ITRACE ID=READUPDT,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         LA    R2,DXD_RPL
         MODCB RPL=(R2),                                               +
               OPTCD=(KEY,DIR,SYN,MVE,UPD)
         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAG,$NEED_CLOSET
         BR    R4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PUT0000  DS    0H
         ITRACE ID=PUT,                                                +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_WRITES                  NUMBER OF WRITES
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_WRITES                  SAVE TOTAL
         LA    R2,DXD_RPL
         MODCB RPL=(R2),                                               +
               OPTCD=(KEY,DIR,SYN,MVE)
         PUT   RPL=DXD_RPL
         ST    R15,DXD_VSAM_RC
         ITRACE ID=PUTRC,                                              +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAG,$NEED_CLOSET
         BR    R4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLOSET00 DS    0H
         ITRACE ID=CLOSET,                                             +
               DATA1=DXD_LIBRARY_NAME
         ITRACE ID=ENDREQ
         ENDREQ RPL=DXD_RPL
         ITRACE ID=ENDREQRC,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID
         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET
         MVC   LIB_FUNCTION_LIB_NAME,DXD_LIBRARY_NAME
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK
CLOSET10 DS    0H
         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN
         BC    4,CLOSET10                     TRY AGAIN
         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB
         NI    DXD_FLAG,255-$NEED_CLOSET
         BR    R4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=CLOSED
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(EMSG02L),EMSG02
         B     EXIT0000                       EXIT
ERR0020  DS    0H
         ITRACE ID=NOTFOUND
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(EMSG03L),EMSG03
         MVC   NET_MSG_1+(EMSG03MEM-EMSG03)(L'EMSG03MEM),DXD_MEM_NAME
         SR    R1,R1
         ICM   R1,3,DXD_MEM_VER
         CVD   R1,DXD_DWORD
         ED    NET_MSG_1+(EMSG03VER-EMSG03)(L'EMSG03VER),DXD_DWORD+5
         B     EXIT0000                       EXIT
ERR0030  DS    0H
         ITRACE ID=NOTAUTH
         MVC   NET_MSG_1,AUTH_MESSAGE_1
         MVC   NET_MSG_2,AUTH_MESSAGE_2
         MVC   NET_MSG_3,AUTH_MESSAGE_3
         MVC   NET_MSG_4,AUTH_MESSAGE_4
         MVC   NET_MSG_5,AUTH_MESSAGE_5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000  DS   0H
         ITRACE ID=EXIT                       EXITING
         TM    DXD_FLAG,$NEED_CLOSET
         BNO   EXIT0010
         BAL   R4,CLOSET00
         NI    DXD_FLAG,255-$NEED_CLOSET
EXIT0010 DS    0H
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
DXDSTART       DC    Q(DXDADMN)
VLIBAUTH       DC    V(LIBAUTH)
F1             DC    F'1'

RPLI           RPL   AM=VTAM
RPLL           EQU   *-RPLI

AUTHID         DC    CL8'AUTHBLOK'
LIBFUNC_ID     DC    CL8'LIBFUNC '

EMSG01         DS    0C
               DC    C'USUBADMN01E Library '
EMSG01_LIBRARY DC    CL8' '
               DC    C' not found'
EMSG01L        EQU   *-EMSG01
EMSG02         DS    0C
               DC    C'USUBADMN02E Library is closed'
EMSG02L        EQU   *-EMSG02
EMSG03         DS    0C
               DC    C'USUBADMN03E Member '
EMSG03MEM      DC    Cl8' '
               DC    C', version'
EMSG03VER      DC    X'402020202120'
               DC    C' not found'
EMSG03L        EQU   *-EMSG03

         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
DXDADMN           DSECT
                  LIBSAVE DSECT=NO
DXD_DWORD         DS   D
DXD_RPL           DS   0F,(RPLL)X
DXD_LIBBLOK_ADDR  DS   A
DXD_FLAG          DS   X
$NEED_CLOSET      EQU  X'80'
DXD_LIBRARY_NAME  DS   CL8
DXD_MEM_NAME      DS   CL8
DXD_MEM_VER       DS   XL2
DXD_VSAM_RC       DS   F
                  AUTHBLOK DSECT=NO
                  LIBFUNC  DSECT=NO
DXD_IO            DS       0F,($MAX_SOURCE_SIZE*2)X
                  ORG      DXD_IO
                  LIBRECD  DSECT=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         NETBLOK  DSECT=YES
NET_LIB_NAME      DS   CL8
NET_MEM_NAME      DS   CL8
NET_MEM_VER       DS   XL2
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         COPY REGEQU
$MAX_SOURCE_SIZE EQU 8000
         END  USUBADMN
./ ADD NAME=USUBCKIN 0100-09250-09250-0919-00944-00944-00000-SOURCE
         TITLE 'USUBCKIN  Check-in'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBCKIN                                              *
*                                                                     *
*  This module has two functions                                      *
*    - check in existing member that is checked-out                   *
*    - add new members                                                *
*                                                                     *
* ------------------------------------------------------------------- *
USUBCKIN CSECT
USUBCKIN AMODE 31
USUBCKIN RMODE ANY
         USING PSA,R0
         USING USUBCKIN,R12,R9                DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBCKIN'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         LA    R9,2048(R12)
         LA    R9,2048(R9)
         L     R1,USER_DXD                    WORK AREA BASE
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDUCKIN,R13                   DEFINE BASE
         USING IFGRPL,DXD_RPL
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    INIT0010
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK
         MVI   PRTCC,C' '                     INITIALIZE PRINT
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   DXD_RPL(RPLL),RPLI             INITIALIZE RPL
INIT0010 DS    0H
         L     R7,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R7                     DEFINE BASE
         ITRACE ID=ENTRY,                                              +
               DATA1=NET_FUNCTION,                                     +
               DATA2=NET_DATA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R8,DXD_LIB                     LIB BLOCK'S ADDRESS
         CLI   NET_FUNCTION,$NET_CHECK_IN_AUTH
         BE    INIT0020                       YES
         CLI   NET_FUNCTION,$NET_CHECK_NEW_AUTH
         BE    INIT0020                       YES
         CLI   NET_FUNCTION,$NET_GET_DESC
         BE    CKIN0010                       YES
         CLI   NET_FUNCTION,$NET_SEND_DESC
         BE    CKIN0100                       YES
         CLI   NET_FUNCTION,$NET_CHECK_IN_SOURCE
         BE    CKIN0200                       YES
         CLI   NET_FUNCTION,$NET_SEND_RECORDS
         BE    CKIN0400                       YES
         ABEND 1,DUMP,,USER
INIT0020 DS    0H
         NI    DXD_FLAGS,255-$SOURCE_NEW      RESET INDICATORS
         NI    DXD_FLAGS,255-$HISTORY
         NI    DXD_FLAGS,255-$SOURCE_DELETED
         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK
         BZ    ERR0100                        NO LIBRARIES
         USING LIBBLOK,R8                     DEFINE BASE
INIT0030 DS    0H
         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?
         BE    INIT0040                       YES
         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   INIT0030
         B     ERR0110                        LIBRARY NOT FOUND
INIT0040 DS    0H
         ITRACE ID=LIBFOUND,                                           +
               RDATA1=R8
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BNO   ERR0120                        NO
         ST    R8,DXD_LIB                     SAVE ADDRESS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,NET_MEM_NAME
         MVC   LIB_KEY_VERSION,NET_MEM_VER
         MVC   LIB_KEY_SEQ,F1
         ITRACE ID=READ1,                                              +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BAL   R6,READ1000                    READ INDEX RECORD
         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?
         BE    INIT0050                       YES
* ------------------------------------------------------------------- *
*                                                                     *
*        The member does not already exist.                           *
*                                                                     *
*        Make sure the VERSION is 1.                                  *
*        There are two ways to create new members.  One is to create  *
*        a new version of an existing member.  The other is to create *
*        version 1 of a totally new member/version.  CHECK_IN can     *
*        be used only to update an existing member/version or to      *
*        create a new member/version.                                 *
*                                                                     *
*        Verify the user has authorization to create a new member     *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=ISITONE
         CLC   NET_MEM_VER,H1                 IS VERSION 1?
         BNE   ERR0140
         ITRACE ID=AUTHNEW
         OI    DXD_FLAGS,$SOURCE_NEW          INDICATE NEW MEMBER
         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER
         MVC   AUTH_USER,USER_USER_ID         COPY USER ID
         MVC   AUTH_LIB,NET_LIB_NAME          COPY LIBRARY NAME
         MVC   AUTH_MEMBER,NET_MEM_NAME
         MVC   AUTH_VERSION,NET_MEM_VER
         MVI   AUTH_FUNCTION,$AUTH_CHECK_NEW
         MVI   AUTH_MEMBER_STATUS,$AUTH_STATUS_NONE
         B     INIT0060
* ------------------------------------------------------------------- *
*                                                                     *
*        The member does exist.                                       *
*                                                                     *
*        Verify the user has authorization to CHECK-IN this member.   *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0050 DS    0H
         ITRACE ID=AUTHIN
         CLI   NET_FUNCTION,$NET_CHECK_NEW_AUTH
         BE    ERR0150
         MVC   AUTH_EYE,AUTHID                EYE CATCHER
         MVC   AUTH_USER,USER_USER_ID         USER ID
         MVC   AUTH_LIB,NET_LIB_NAME          LIBRARY NAME
         MVC   AUTH_MEMBER,NET_MEM_NAME       MEMBER NAME
         MVC   AUTH_VERSION,NET_MEM_VER       VERSION
         MVI   AUTH_FUNCTION,$AUTH_CHECK_IN
         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS
         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER
         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER
INIT0060 DS    0H
         ITRACE ID=CALLAUTH
         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS
         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT
         BALR  R14,R15                        LINK TO AUTHORIZATION
         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?
         BNE   ERR0130                        NO
         ITRACE ID=AUTHOK
         ICM   R1,15,LIB_CHECK_IN             NUMBER OF CHECK-INS
         LA    R1,1(R1)                       PLUS 1
         STCM  R1,15,LIB_CHECK_IN             SAVE TOTAL
         TM    DXD_FLAGS,$SOURCE_NEW          NEW MEMBER?
         BNO   INIT0080                       NO
* ------------------------------------------------------------------- *
*                                                                     *
*        Checking in a new member.                                    *
*                                                                     *
*        Create the base index record.                                *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0070 DS    0H
         ITRACE ID=BLDNDX,                                             +
               DATA1=NET_MEM_NAME
         L     R1,LIB_NEW                     NUMBER OF NEW FILES
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_NEW                     SAVE TOTAL
         MVC   LIB_INDEX_OWNER,USER_USER_ID
         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN
         TIME  DEC
         STCM  R0,15,LIB_INDEX_CREATE_TIME
         STCM  R1,15,LIB_INDEX_CREATE_DATE
         XC    LIB_INDEX_CHECK_OUT_TIME,LIB_INDEX_CHECK_OUT_TIME
         ZAP   LIB_INDEX_CHECK_OUT_DATE,P0
         MVC   LIB_INDEX_CHECK_OUT_USER,BLANKS
         XC    LIB_INDEX_CHECK_OUTS,LIB_INDEX_CHECK_OUTS
         XC    LIB_INDEX_CHECK_IN_TIME,LIB_INDEX_CHECK_IN_TIME
         ZAP   LIB_INDEX_CHECK_IN_DATE,P0
         MVC   LIB_INDEX_CHECK_IN_USER,BLANKS
         XC    LIB_INDEX_RECORDS,LIB_INDEX_RECORDS
         ITRACE ID=WRITENDX
         LA    R1,LIB_INDEX_RECORD_LENGTH
         ST    R1,DXD_LEN
         BAL   R6,PUT0000
         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?
         BNE   ERR0070                        NO
         B     INIT0100
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0080 DS    0H
         ICM   R1,15,LIB_UPDATE               NUMBER OF UPDATED MEMBERS
         LA    R1,1(R1)                       PLUS 1
         STCM  R1,15,LIB_UPDATE               SAVE TOTAL
         OC    COMM_HSUB_TCB,COMM_HSUB_TCB    HISTORY SUBTASK ACTIVE?
         BZ    INIT0100                       NO
         ITRACE ID=Q2HIST                     SAVING SOURCE TO HISTORY
         XC    HISTREQ(HISTREQL),HISTREQ
         MVC   HISTEYE,HISTID                 SET BLOCK EYE CATCHER
         MVC   HISTLIB,NET_LIB_NAME           SET LIBRARY NAME
         MVC   HISTNAME,NET_MEM_NAME          SET MEMBER NAME
         MVC   HISTVER,NET_MEM_VER            SET VERSION NAME
         LA    R1,HISTREQ                     OUR REQUEST'S ADDRESS
INIT0090 DS    0H
         L     R2,COMM_HSUB_REQ               FIRST REQUEST ON CHAIN
         CS    R2,R1,COMM_HSUB_REQ            ADD OURS TO CHAIN
         BC    4,INIT0090                     TRY AGAIN
         POST  COMM_HSUB_WORK_ECB             WAKE UP HISTORY SUB TASK
         ITRACE ID=HISTWAIT
         WAIT  ECB=HISTECB                    WAIT FOR HISTORY SUB TASK
         OI    DXD_FLAGS,$HISTORY             SOURCE HAS BEEN SAVED
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0100 DS    0H
         ITRACE ID=AUTHDONE
         MVC   DXD_LIB_NAME,NET_LIB_NAME
         MVC   DXD_MEM_NAME,NET_MEM_NAME
         MVC   DXD_VERSION,NET_MEM_VER
         B     CKIN0500
* ------------------------------------------------------------------- *
*                                                                     *
*       Return the description (comments) about this member           *
*                                                                     *
* ------------------------------------------------------------------- *
CKIN0010 DS    0H
         ITRACE ID=GETDESC
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_SEQ,F2                 FIRST DESCRIPTION RECORD
         LA    R2,NET_MEM_DOC                 OUTPUT I/O AREA ADDRESS
         SR    R3,R3                          CLEAR REGISTER
CKIN0020 DS    0H
         BAL   R6,READ0000
         CLI   DXD_VSAM_RC+3,X'00'            SUCCESSFUL?
         BNE   CKIN0030                       NO
         MVC   0(L'LIB_INDEX_DESC,R2),LIB_INDEX_DESC
         LA    R2,L'LIB_INDEX_DESC(R2)
         LA    R3,L'LIB_INDEX_DESC(R3)
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER
         B     CKIN0020
CKIN0030 DS    0H
         ITRACE ID=DESCEOF,                                            +
               RDATA1=R3,                                              +
               DATA2=LIB_KEY_SEQ
         LA    R3,NET_CHECK_IN_LENGTH(R3)     PLUS PREFIX LENGTH
         STCM  R3,3,NET_LENGTH                SET LENGTH TO SEND
         XC    LIB_KEY_SEQ,LIB_KEY_SEQ
         B     EXIT0000
* ------------------------------------------------------------------- *
CKIN0100 DS    0H
         ITRACE ID=NEWDESC,                                            +
               DATA1=NET_LENGTH
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_SEQ,F2                 SEQ OF 1ST DESC RECD
         ITRACE ID=READDESC,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BAL   R6,READ0000
         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?
         BNE   CKIN0120                       NO
CKIN0110 DS    0H
         ITRACE ID=DELDESC
         BAL   R6,READ1000                    READ INDEX RECORD
         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?
         BNE   CKIN0120                       NO
         BAL   R6,ERASE000                    ERASE (DELETE) THE RECORD
         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?
         BNE   ERR0010                        NO
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER
         B     CKIN0110
CKIN0120 DS    0H
         BAL   R6,CLOSET00                    ISSUE A CLOSE TYPE=T
         MVC   LIB_KEY_SEQ,F2                 RESET SEQUENCE NUMBER
         LA    R4,NET_MEM_DOC                 FIRST LINE OF DESCRIPTION
         SR    R5,R5                          CLEAR REGISTER
         ICM   R5,3,NET_LENGTH                LENGTH OF DATA RECEIVED
         SH    R5,=Y(NET_CHECK_IN_LENGTH)     LENGTH OF HEADER
         BZ    CKIN0500
CKIN0130 DS    0H
         MVC   LIB_INDEX_DESC,0(R4)           COPY DESCRIPTION
         LA    R1,LIB_INDEX_RECORD_LENGTH
         ST    R1,DXD_LEN
         ITRACE ID=PUTDESC,                                            +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BAL   R6,PUT0000                     WRITE DESCRIPTION RECORD
         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?
         BNE   ERR0020                        NO
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              SAVE SEQUENCE NUMBER
         LA    R4,L'LIB_INDEX_DESC(R4)
         SH    R5,=Y(L'LIB_INDEX_DESC)
         BH    CKIN0130
         BAL   R6,CLOSET00                    ISSUE A CLOSE TYPE=T
         B     CKIN0500
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CKIN0200 DS    0H
         ITRACE ID=SOURCE
         TM    DXD_FLAGS,$SOURCE_DELETED
         BO    CKIN0230                       ALREADY DELETED
         OI    DXD_FLAGS,$SOURCE_DELETED      SET 'DELETED' FLAG
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         MVC   LIB_KEY_SEQ,F1                 SEQ OF 1ST DATA RECORD
CKIN0210 DS    0H
         ITRACE ID=DELSRC,                                             +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BAL   R6,READ1000                    READ DATA RECORD
         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?
         BNE   CKIN0220                       NO
         ITRACE ID=DELSRC
         BAL   R6,ERASE000                    ERASE (DELETE) THE RECORD
         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?
         BNE   ERR0030                        NO
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER
         B     CKIN0210
CKIN0220 DS    0H
         BAL   R6,CLOSET00                    ISSUE A CLOSE TYPE=T
         MVC   LIB_KEY_SEQ,F1                 RESET SEQUENCE NUMBER
CKIN0230 DS    0H
         SR    R5,R5                          CLEAR REGISTER
         ICM   R5,3,NET_LENGTH                LENGTH OF DATA RECEIVED
         SH    R5,=Y(NETBLOKL)                MINUS HEADER LENGTH
         LA    R0,LIB_DATA                    USER DATA IN FILE I/O
         LR    R1,R5                          COPY LENGTH
         LA    R14,NET_DATA                   USER DATA IN VTAM I/O
         LR    R15,R5                         COPY LENGTH
         MVCL  R0,R14                         COPY DATA
         LA    R5,LIB_DATA-LIB_RECORD(R5)
         ST    R5,DXD_LEN                     SET LENGTH
         ITRACE ID=PUTSRC,                                             +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BAL   R6,PUT0000
         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?
         BNE   ERR0040                        NO
         CLI   NET_RETURN_CODE,$NET_EOF
         BE    CKIN0300                       YES
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              SAVE SEQUENCE NUMBER
         B     CKIN0500
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CKIN0300 DS    0H
         ITRACE ID=EOF
         BAL   R6,CLOSET00
         MVI   NET_RETURN_CODE,$NET_OK
         MVC   NET_MSG_1,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_2,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_3,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_4,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_5,COMM_BLANKS          CLEAR MESSAGE
         LA    R1,NETBLOKL                    ONLY NEED HEADER
         STCM  R1,3,NET_LENGTH                SET LENGTH TO SEND
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CKIN0400 DS    0H
         ITRACE ID=UPDTRECS,                                           +
               DATA1=NET_SOURCE_RECORDS
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_SEQ,F1                 SEQ OF INDEX RECORD
         BAL   R6,READ1000                    READ INDEX RECORD
         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?
         BNE   ERR0050                        NO
         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN
         MVC   LIB_INDEX_CHECK_IN_USER,USER_USER_ID
         TIME  DEC
         STCM  R0,15,LIB_INDEX_CHECK_IN_TIME
         STCM  R1,15,LIB_INDEX_CHECK_IN_DATE
         MVC   LIB_INDEX_RECORDS,NET_SOURCE_RECORDS
         ITRACE ID=UPDTPUT
         MODCB RPL=DXD_RPL,RECLEN=LIB_INDEX_RECORD_LENGTH
         PUT   RPL=DXD_RPL
         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?
         BNE   ERR0060                        NO
         BAL   R6,CLOSET00
         L     R1,AMSG08
         MVC   PRTMSGID(MSG08L),0(R1)
         MVC   PRTMSGID+(MSG08_USER-MSG08)(L'MSG08_USER),USER_USER_ID
         MVC   PRTMSGID+(MSG08_LIB-MSG08)(L'MSG08_LIB),DXD_LIB_NAME
         MVC   PRTMSGID+(MSG08_MEM-MSG08)(L'MSG08_MEM),DXD_MEM_NAME
         BAL   R6,PRT0000                     PRINT
         B     CKIN0700
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CKIN0500 DS    0H
         ITRACE ID=OK
         MVI   NET_RETURN_CODE,$NET_OK
         LA    R1,NETBLOKL                    ONLY NEED HEADER
         STCM  R1,3,NET_LENGTH                SET LENGTH TO SEND
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CKIN0600 DS    0H
         ITRACE ID=ABORT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CKIN0700 DS    0H
         ITRACE ID=OK
         MVI   NET_RETURN_CODE,$NET_OK
         LA    R1,NETBLOKL                    ONLY NEED HEADER
         STCM  R1,3,NET_LENGTH                SET LENGTH TO SEND
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=READ,                                               +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE)
         GET   RPL=DXD_RPL                    READ
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ1000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=READUPDT,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,UPD)
         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PUT0000  DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=PUT,                                                +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_WRITES                  NUMBER OF WRITES
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_WRITES                  SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         L     R5,DXD_LEN
         MVC   0(RPLL,R2),RPLI
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               RECLEN=(R5),                                            +
               OPTCD=(KEY,DIR,SYN,MVE)
         PUT   RPL=DXD_RPL
         ST    R15,DXD_VSAM_RC
         ITRACE ID=PUTRC,                                              +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERASE000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=ERASE,                                              +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         ICM   R1,15,LIB_ERASES
         LA    R1,1(,R1)
         STCM  R1,15,LIB_ERASES
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,UPD)
         ERASE RPL=DXD_RPL                    ERASE (DELETE THE RECORD)
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=ERASERC,                                            +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK-IFGRPL(R2)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLOSET00 DS    0H
         TM    DXD_FLAGS,$NEED_CLOSET
         BNOR  R6
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=CLOSET,                                             +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         ITRACE ID=ENDREQ
         ENDREQ RPL=DXD_RPL
         ITRACE ID=ENDREQRC,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID
         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET
         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK
CLOSET10 DS    0H
         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN
         BC    4,CLOSET10                     TRY AGAIN
         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT FOR CLOSET
         NI    DXD_FLAGS,255-$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* -------------------------------------------------------------------
*        PRINTING
* -------------------------------------------------------------------
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE
         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE
         ST    R14,PRTNEXT-PRTBLOK(R1)
         CS    R14,R1,COMM_PRINT_REQ
         BC    4,PRT0010
         BR    R6                             RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS
         L     R1,AMSG05
         MVC   NET_DATA(MSG05L),0(R1)
         MVC   NET_DATA+(MSG05TYP-MSG05)(L'MSG05TYP),DESCRIPTION
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         UNPK  NET_DATA+(MSG05R15-MSG05)(3),DXD_VSAM_RC+3(2)
         MVZ   NET_DATA+(MSG05R15-MSG05)(2),HEXZERO
         TR    NET_DATA+(MSG05R15-MSG05)(2),HEXCHAR
         MVI   NET_DATA+(MSG05R15-MSG05)+2,C' '
         UNPK  NET_DATA+(MSG05RSN-MSG05)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)
         MVZ   NET_DATA+(MSG05RSN-MSG05)(4),HEXZERO
         TR    NET_DATA+(MSG05RSN-MSG05)(4),HEXCHAR
         MVI   NET_DATA+(MSG05RSN-MSG05)+4,C' '
         LA    R1,MSG01L+NETBLOKL
         STCM  R1,3,NET_LENGTH
         B     EXIT0000
ERR0020  DS    0H
         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS
         L     R1,AMSG06
         MVC   NET_DATA(MSG06L),0(R1)
         MVC   NET_DATA+(MSG06TYP-MSG06)(L'MSG06TYP),DESCRIPTION
         UNPK  NET_DATA+(MSG06R15-MSG06)(3),DXD_VSAM_RC+3(2)
         MVZ   NET_DATA+(MSG06R15-MSG06)(2),HEXZERO
         TR    NET_DATA+(MSG06R15-MSG06)(2),HEXCHAR
         MVI   NET_DATA+(MSG06R15-MSG06)+2,C' '
         UNPK  NET_DATA+(MSG06RSN-MSG06)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)
         MVZ   NET_DATA+(MSG06RSN-MSG06)(4),HEXZERO
         TR    NET_DATA+(MSG06RSN-MSG06)(4),HEXCHAR
         MVI   NET_DATA+(MSG06RSN-MSG06)+4,C' '
         LA    R1,MSG06L+NETBLOKL
         STCM  R1,3,NET_LENGTH
         B     EXIT0000
ERR0030  DS    0H
         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS
         L     R1,AMSG05
         MVC   NET_DATA(MSG05L),0(R1)
         MVC   NET_DATA+(MSG05TYP-MSG05)(L'MSG05TYP),SOURCE
         UNPK  NET_DATA+(MSG05R15-MSG05)(3),DXD_VSAM_RC+3(2)
         MVZ   NET_DATA+(MSG05R15-MSG05)(2),HEXZERO
         TR    NET_DATA+(MSG05R15-MSG05)(2),HEXCHAR
         MVI   NET_DATA+(MSG05R15-MSG05)+2,C' '
         UNPK  NET_DATA+(MSG05RSN-MSG05)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)
         MVZ   NET_DATA+(MSG05RSN-MSG05)(4),HEXZERO
         TR    NET_DATA+(MSG05RSN-MSG05)(4),HEXCHAR
         MVI   NET_DATA+(MSG05RSN-MSG05)+4,C' '
         LA    R1,MSG05L+NETBLOKL
         STCM  R1,3,NET_LENGTH
         B     EXIT0000
ERR0040  DS    0H
         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS
         L     R1,AMSG06
         MVC   NET_DATA(MSG06L),0(R1)
         MVC   NET_DATA+(MSG06TYP-MSG06)(L'MSG06TYP),SOURCE
         UNPK  NET_DATA+(MSG06R15-MSG06)(3),DXD_VSAM_RC+3(2)
         MVZ   NET_DATA+(MSG06R15-MSG06)(2),HEXZERO
         TR    NET_DATA+(MSG06R15-MSG06)(2),HEXCHAR
         MVI   NET_DATA+(MSG06R15-MSG06)+2,C' '
         UNPK  NET_DATA+(MSG06RSN-MSG06)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)
         MVZ   NET_DATA+(MSG06RSN-MSG06)(4),HEXZERO
         TR    NET_DATA+(MSG06RSN-MSG06)(4),HEXCHAR
         MVI   NET_DATA+(MSG06RSN-MSG06)+4,C' '
         LA    R1,MSG06L+NETBLOKL
         STCM  R1,3,NET_LENGTH
         B     EXIT0000
ERR0050  DS    0H
         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS
         L     R1,AMSG07
         MVC   NET_DATA(MSG07L),0(R1)
         UNPK  NET_DATA+(MSG07R15-MSG07)(3),DXD_VSAM_RC+3(2)
         MVZ   NET_DATA+(MSG07R15-MSG07)(2),HEXZERO
         TR    NET_DATA+(MSG07R15-MSG07)(2),HEXCHAR
         MVI   NET_DATA+(MSG07R15-MSG07)+2,C' '
         UNPK  NET_DATA+(MSG07RSN-MSG07)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)
         MVZ   NET_DATA+(MSG07RSN-MSG07)(4),HEXZERO
         TR    NET_DATA+(MSG07RSN-MSG07)(4),HEXCHAR
         MVI   NET_DATA+(MSG07RSN-MSG07)+4,C' '
         LA    R1,MSG07L+NETBLOKL
         STCM  R1,3,NET_LENGTH
         B     EXIT0000
ERR0060  DS    0H
         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS
         L     R1,AMSG06
         MVC   NET_DATA(MSG06L),0(R1)
         MVC   NET_DATA+(MSG06TYP-MSG06)(L'MSG06TYP),EOF
         UNPK  NET_DATA+(MSG06R15-MSG06)(3),DXD_VSAM_RC+3(2)
         MVZ   NET_DATA+(MSG06R15-MSG06)(2),HEXZERO
         TR    NET_DATA+(MSG06R15-MSG06)(2),HEXCHAR
         MVI   NET_DATA+(MSG06R15-MSG06)+2,C' '
         UNPK  NET_DATA+(MSG06RSN-MSG06)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)
         MVZ   NET_DATA+(MSG06RSN-MSG06)(4),HEXZERO
         TR    NET_DATA+(MSG06RSN-MSG06)(4),HEXCHAR
         MVI   NET_DATA+(MSG06RSN-MSG06)+4,C' '
         LA    R1,MSG06L+NETBLOKL
         STCM  R1,3,NET_LENGTH
         B     EXIT0000
ERR0070  DS    0H
         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS
         L     R1,AMSG06
         MVC   NET_DATA(MSG06L),0(R1)
         MVC   NET_DATA+(MSG06TYP-MSG06)(L'MSG06TYP),NEWINDEX
         UNPK  NET_DATA+(MSG06R15-MSG06)(3),DXD_VSAM_RC+3(2)
         MVZ   NET_DATA+(MSG06R15-MSG06)(2),HEXZERO
         TR    NET_DATA+(MSG06R15-MSG06)(2),HEXCHAR
         MVI   NET_DATA+(MSG06R15-MSG06)+2,C' '
         UNPK  NET_DATA+(MSG06RSN-MSG06)(5),DXD_RPL+(RPLFDB2-IFGRPL)(3)
         MVZ   NET_DATA+(MSG06RSN-MSG06)(4),HEXZERO
         TR    NET_DATA+(MSG06RSN-MSG06)(4),HEXCHAR
         MVI   NET_DATA+(MSG06RSN-MSG06)+4,C' '
         LA    R1,MSG06L+NETBLOKL
         STCM  R1,3,NET_LENGTH
         B     EXIT0000
ERR0100  DS    0H
         BAL   R6,ERR1000
         L     R1,AMSG01
         MVC   NET_DATA(MSG01L),0(R1)
         LA    R1,NETBLOKL+80
         STCM  R1,3,NET_LENGTH
         B     EXIT0000                       EXIT
ERR0110  DS    0H
         BAL   R6,ERR1000
         L     R1,AMSG02
         MVC   NET_DATA(MSG02L),0(R1)
         LA    R1,NETBLOKL+80
         STCM  R1,3,NET_LENGTH
         B     EXIT0000                       EXIT
ERR0120  DS    0H
         BAL   R6,ERR1000
         L     R1,AMSG03
         MVC   NET_DATA(MSG03L),0(R1)
         LA    R1,NETBLOKL+80
         STCM  R1,3,NET_LENGTH
         B     EXIT0000                       EXIT
ERR0130  DS    0H
         BAL   R6,ERR1000
         MVC   NET_MSG_1,AUTH_MESSAGE_1
         MVC   NET_MSG_2,AUTH_MESSAGE_2
         MVC   NET_MSG_3,AUTH_MESSAGE_3
         MVC   NET_MSG_4,AUTH_MESSAGE_4
         MVC   NET_MSG_5,AUTH_MESSAGE_5
         LA    R1,NETBLOKL+400
         STCM  R1,3,NET_LENGTH
         L     R1,AEMSG04
         MVC   PRTMSGID(EMSG04L),0(R1)
        MVC   PRTMSGID+(EMSG04_USER-EMSG04)(L'EMSG04_USER),USER_USER_ID
         MVC   PRTMSGID+(EMSG04_LIB-EMSG04)(L'EMSG04_LIB),NET_LIB_NAME
         MVC   PRTMSGID+(EMSG04_MEM-EMSG04)(L'EMSG04_MEM),NET_MEM_NAME
         BAL   R6,PRT0000                     PRINT
         B     EXIT0000                       EXIT
ERR0140  DS    0H
         BAL   R6,ERR1000
         L     R1,AEMSG09
         MVC   NET_DATA(EMSG09L),0(R1)
         LA    R1,NETBLOKL+80
         STCM  R1,3,NET_LENGTH
         B     EXIT0000                       EXIT
ERR0150  DS    0H
         BAL   R6,ERR1000
         L     R1,AEMSG10
         MVC   NET_MSG_1(EMSG10L),0(R1)
         LA    R1,NETBLOKL+80
         STCM  R1,3,NET_LENGTH
         B     EXIT0000                       EXIT
ERR1000  DS    0H
         MVI   NET_RETURN_CODE,$NET_ERROR
         LA    R1,NET_MSG_1
         LA    R15,5
ERR1010  DS    0H
         MVC   0(L'NET_MSG_1,R1),BLANKS       CLEAR MESSAGE
         LA    R1,L'NET_MSG_1(R1)
         BCT   R15,ERR1010
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
*   Note to dummy (the auther.. me that is)                           *
*                                                                     *
*   Do not do a CLOSET here.  The CLOSET is done on EOF.              *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT                       EXITING PRINT MODULE
         BAL   R6,CLOSET00
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
VLIBAUTH          DC       V(LIBAUTH)
DXDSTART          DC       Q(DXDUCKIN)
RPLI              RPL      AM=VTAM
RPLL              EQU      *-RPLI
AMSG01            DC       A(MSG01)
AMSG02            DC       A(MSG02)
AMSG03            DC       A(MSG03)
AMSG05            DC       A(MSG05)
AMSG06            DC       A(MSG06)
AMSG07            DC       A(MSG07)
AEMSG04           DC       A(EMSG04)
AMSG08            DC       A(MSG08)
AEMSG09           DC       A(EMSG09)
AEMSG10           DC       A(EMSG10)
F1                DC       F'1'
F2                DC       F'2'
H1                DC       H'1'
P0                DC       P'0'
AUTHID            DC       CL8'AUTHBLOK'
HISTID            DC       CL8'HISTREQ'
LIBFUNC_ID        DC       CL8'LIBFUNC'
PRTID             DC       CL8'PRTBLOK'
BLANKS            DC       CL80' '
DESCRIPTION       DC       CL11'DESCRIPTION'
NEWINDEX          DC       CL11'NEW INDEX'
SOURCE            DC       CL11'SOURCE'
EOF               DC       CL11'EOF'
HEXZERO           DC       8X'00'
HEXCHAR           DC       C'0123456789ABCDEF'

                  LTORG
MSG01             DS       0C
                  DC       CL11'USUBCKIN01E'
                  DC       C' No libraries found'
MSG01L            EQU      *-MSG01
MSG02             DS       0C
                  DC       CL11'USUBCKIN02E'
                  DC       C' Specified library not found'
MSG02L            EQU      *-MSG02
MSG03             DS       0C
                  DC       CL11'USUBCKIN03E'
                  DC       C' Specified library is closed'
MSG03L            EQU      *-MSG03

EMSG04            DS       0C
                  DC       CL11'USUBCKIN04E'
                  DC       C' Authorization failure.  User:'
EMSG04_USER       DC       Cl8' '
                  DC       C'   Library:'
EMSG04_LIB        DC       Cl8' '
                  DC       C'   Member:'
EMSG04_MEM        DC       CL8' '
EMSG04L           EQU      *-EMSG04

MSG05             DS       0C
                  DC       CL11'USUBCKIN05E'
                  DC       C' '
MSG05TYP          DC       Cl12' '
                  DC       C' ERASE failed, R15='
MSG05R15          DC       Cl2' '
                  DC       C'   reason code '
MSG05RSN          DC       Cl4' '
                  DC       C' '
MSG05L            EQU      *-MSG05
MSG06             DS       0C
                  DC       CL11'USUBCKIN06E'
                  DC       C' '
MSG06TYP          DC       cl11' '
                  DC       C' PUT failed, R15='
MSG06R15          DC       Cl2' '
                  DC       C'   reason code '
MSG06RSN          DC       Cl4' '
                  DC       C' '
MSG06L            EQU      *-MSG06
MSG07             DS       0C
                  DC       CL11'USUBCKIN07E'
                  DC       C' '
                  DC       C'EOF GET failed, R15='
MSG07R15          DC       Cl2' '
                  DC       C'   reason code '
MSG07RSN          DC       Cl4' '
                  DC       C' '
MSG07L            EQU      *-MSG07

MSG08             DS       0C
                  DC       CL11'USUBCKIN08I'
                  DC       C' CHECK IN.  User:'
MSG08_USER        DC       CL8' '
                  DC       C'   Library:'
MSG08_LIB         DC       CL8' '
                  DC       C'   MEMBER:'
MSG08_MEM         DC       CL8' '
MSG08L            EQU      *-MSG08
EMSG09            DS       0C
                  DC       CL11'USUBCKIN09E'
                  DC       C' Version must be 1 for new members'
EMSG09L           EQU      *-EMSG09
EMSG10            DS       0C
                  DC       CL11'USUBCKIN10E'
                  DC       C' Member already exists'
EMSG10L           EQU      *-EMSG10

* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUCKIN          DSECT
                  LIBSAVE  DSECT=NO
DXD_IO_SAVE       DS       16F
DXD_VSAM_RC       DS       F
DXD_LEN           DS       F
DXD_LIB           DS       F
DXD_RPL           DS       0F,(RPLL)X
DXD_LIB_NAME      DS       CL8
DXD_MEM_NAME      DS       CL8
DXD_VERSION       DS       XL2
DXD_FLAGS         DS       X
$SOURCE_NEW       EQU      X'80'
$SOURCE_DELETED   EQU      X'40'
$HISTORY          EQU      X'20'
$NEED_CLOSET      EQU      X'10'
                  AUTHBLOK DSECT=NO
                  HISTREQ  DSECT=NO
                  LIBFUNC  DSECT=NO
                  PRTBLOK  DSECT=NO
DXD_IO            DS       0F,($MAX_SOURCE_SIZE*2)X
                  ORG      DXD_IO
                  LIBRECD  DSECT=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
                  LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
                  USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
                   NETBLOK DSECT=YES
NET_LIB_NAME       DS      CL8
NET_MEM_NAME       DS      CL8
NET_MEM_VER        DS      XL2
NET_CHECK_IN_LENGTH EQU    *-NETBLOK
NET_MEM_DOC        DS      0C
                   ORG     NET_DATA
NET_SOURCE_RECORDS DS      XL4
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
$MAX_SOURCE_SIZE EQU 8000
         COPY REGEQU
         END  USUBCKIN
./ ADD NAME=USUBCKOT 0100-09250-09250-0919-00512-00512-00000-SOURCE
         TITLE 'USUBCKOT  Check-out'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBCKOT                                              *
*                                                                     *
* ------------------------------------------------------------------- *
USUBCKOT CSECT
USUBCKOT AMODE 31
USUBCKOT RMODE ANY
         USING PSA,R0
         USING USUBCKOT,R12,R9                DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBCKOT'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         LA    R9,2048(R12)
         LA    R9,2048(R9)
         L     R1,USER_DXD                    WORK AREA BASE ADDRESS
         A     R1,DXDSTART                    DISPLACMENT TO OURS
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDUCKOT,R13                   DEFINE BASE
         USING IFGRPL,DXD_RPL
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK
         MVI   PRTCC,C' '                     INITIALIZE PRINT
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   DXD_RPL(RPLL),RPLI             INITIALIZE RPL
         L     R7,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R7                     DEFINE BASE
         ITRACE ID=ENTRY,                                              +
               DATA1=NET_FUNCTION,                                     +
               DATA2=NET_DATA
         L     R8,DXD_LIB                     LIBRARY BLOCK ADDRESS
         MVC   NET_MSG_1,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_2,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_3,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_4,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_5,COMM_BLANKS          CLEAR MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   NET_FUNCTION,$NET_CHECK_OUT_AUTH
         BE    INIT0010
         L     R8,DXD_LIB                     USE LIB IN AUTH CALL
         CLI   NET_FUNCTION,$NET_GET_DESC
         BE    CKOUT000
         CLI   NET_FUNCTION,$NET_CHECK_OUT_SOURCE
         BE    CKOUT100
         CLI   NET_FUNCTION,$NET_CONFIRM_CHECK_OUT
         BE    CKOUT200
         DC    H'0'
INIT0010 DS    0H
         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK
         BZ    ERR0010                        NO LIBRARIES
         USING LIBBLOK,R8                     DEFINE BASE
INIT0020 DS    0H
         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?
         BE    INIT0030                       YES
         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   INIT0020
         B     ERR0010                        LIBRARY NOT FOUND
INIT0030 DS    0H
         ITRACE ID=LIBFOUND,                                           +
               RDATA1=R8
         ST    R8,DXD_LIB                     SAVE LIBBLOK ADDRESS
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BNO   ERR0020                        NO
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,NET_MEM_NAME
         MVC   LIB_KEY_VERSION,NET_MEM_VERSION
         MVC   LIB_KEY_SEQ,F1
         ITRACE ID=READ1,                                              +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BAL   R6,READ1000                    READ INDEX RECORD
         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?
         BNE   ERR0040                        NO
         ITRACE ID=CALLAUTH
         MVC   AUTH_EYE,AUTHID
         MVI   AUTH_FUNCTION,$AUTH_CHECK_OUT
         MVC   AUTH_USER,USER_USER_ID
         MVC   AUTH_LIB,NET_LIB_NAME
         MVC   AUTH_MEMBER,NET_MEM_NAME
         MVC   AUTH_VERSION,NET_MEM_VERSION
         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER
         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER
         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS
         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS
         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT
         BALR  R14,R15                        LINK TO AUTHORIZATION
         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?
         BNE   ERR0030                        NO
         ITRACE ID=LIBOK
         MVC   NET_SOURCE_RECORDS,LIB_INDEX_RECORDS
         LA    R1,NETBLOKL+L'NET_SOURCE_RECORDS
         STCM  R1,3,NET_LENGTH
         MVI   NET_RETURN_CODE,$NET_OK
         XC    LIB_KEY_SEQ,LIB_KEY_SEQ
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*       Return the description (comments) about this member           *
*                                                                     *
* ------------------------------------------------------------------- *
CKOUT000 DS    0H
         ITRACE ID=GETDESC
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_SEQ,F2                 FIRST DESCRIPTION RECORD
         LA    R2,NET_DATA                    OUTPUT I/O AREA ADDRESS
         SR    R3,R3                          CLEAR REGISTER
CKOUT010 DS    0H
         BAL   R6,READ1000
         CLI   DXD_VSAM_RC+3,X'00'            SUCCESSFUL?
         BNE   CKOUT020              NO
         MVC   0(L'LIB_INDEX_DESC,R2),LIB_INDEX_DESC
         LA    R2,L'LIB_INDEX_DESC(R2)
         LA    R3,L'LIB_INDEX_DESC(R3)
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER
         B     CKOUT010
CKOUT020 DS    0H
         ITRACE ID=DESCEOF,                                            +
               RDATA1=R3,                                              +
               DATA2=LIB_KEY_SEQ
         LA    R3,LIBBLOKL(R3)                PLUS PREFIX LENGTH
         STCM  R3,3,NET_LENGTH                SET LENGTH TO SEND
         XC    LIB_KEY_SEQ,LIB_KEY_SEQ
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CKOUT100 DS    0H
         ITRACE ID=GETSRC
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER
         BAL   R6,READ1000                    READ NEXT RECORD
         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?
         BNE   CKOUT110                       NO.. EOF
         MVI   NET_RETURN_CODE,$NET_OK
         LA    R3,DXD_RPL
         SHOWCB RPL=(R3),                     SHOW DATA FROM RPL       +
               FIELDS=(RECLEN),               .. REQUEST RECORD LENGTH +
               AREA=DXD_RECLEN,               .. AREA FOR RETURNED DATA+
               LENGTH=4                       .. LENGTH OF 'RECLEN'
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0060                        NO
         L     R2,DXD_RECLEN                  RECORD SIZE
         SH    R2,=Y(LIB_DATA-LIB_RECORD)     MINUS PREFIX LENGTH
         LA    R0,LIB_DATA                    ADDRESS OF THE GOOD STUFF
         LR    R1,R2                          RECORD SIZE
         LA    R14,NET_DATA                   DATA IN NETWORK I/O AREA
         LR    R15,R1                         COPY RECORD SIZE
         MVCL  R14,R0                         COPY TO NETWORK I/O AREA
         LA    R2,NETBLOKL(R2)                PLUS HEADER LENGTH
         STCM  R2,3,NET_LENGTH
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CKOUT110 DS    0H
         ITRACE ID=EOF
         MVI   NET_RETURN_CODE,$NET_EOF
         LA    R1,NETBLOKL                    ONLY NEED TO SEND HEADER
         STCM  R1,3,NET_LENGTH                SET LENGTH
         B     EXIT0000                       EXIT
CKOUT120 DS    0H
         ITRACE ID=ABORTED
         MVI   NET_RETURN_CODE,$NET_OK
         LA    R1,NETBLOKL                    ONLY NEED TO SEND HEADER
         STCM  R1,3,NET_LENGTH                SET LENGTH
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
*     The source code has been successfully transmitted to the user.  *
*     The user end has sent back the CONFIRM indicating the source    *
*     was successfully written to the output file.                    *
*                                                                     *
*     Update the statistics and the file's status.                    *
*                                                                     *
*     Log the CHECK-OUT to the LOG file.                              *
*                                                                     *
*     Send back the "OK" and exit without 'return'.                   *
*                                                                     *
* ------------------------------------------------------------------- *
CKOUT200 DS    0H
         ITRACE ID=CONFIRM
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_SEQ,F1                 SET SEQUENCE NUMBER
         BAL   R6,READ0000                    READ WITH UPDATE
         MVI   LIB_INDEX_STATUS,$LIB_STATUS_OUT
         TIME  DEC
         STCM  R0,15,LIB_INDEX_CHECK_OUT_TIME
         STCM  R1,15,LIB_INDEX_CHECK_OUT_DATE
         MVC   LIB_INDEX_CHECK_OUT_USER,USER_USER_ID
         ICM   R1,15,LIB_INDEX_CHECK_OUTS
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_INDEX_CHECK_OUTS
         ICM   R1,15,LIB_CHECK_OUT
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_CHECK_OUT
         LA    R1,LIB_INDEX_RECORD_LENGTH
         STCM  R1,15,DXD_RECLEN               SET RECORD LENGTH
         BAL   R6,PUT0000                     UPDATE INDEX
         BAL   R6,CLOSET00                    FLUSH BUFFERS
         MVC   PRTMSGID(MSG05L),MSG05
         MVC   PRTMSGID+(MSG05USR-MSG05)(L'MSG05USR),USER_USER_ID
         MVC   PRTMSGID+(MSG05MEM-MSG05)(L'MSG05MEM),LIB_KEY_NAME
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,LIB_KEY_VERSION
         CVD   R1,DXD_DWORD
         ED    PRTMSGID+(MSG05VER-MSG05)(L'MSG05VER),DXD_DWORD+5
         MVC   PRTMSGID+(MSG05LIB-MSG05)(L'MSG05LIB),LIB_NAME
         BAL   R6,PRT0000                     PRINT
         MVI   NET_RETURN_CODE,$NET_OK
         LA    R1,NETBLOKL
         STCM  R1,3,NET_LENGTH                SET LENGTH
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=READUPDT,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,UPD)
         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
READ1000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=READ,                                               +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE)
         GET   RPL=DXD_RPL                    READ
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PUT0000  DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=PUT,                                                +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_WRITES                  NUMBER OF WRITES
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_WRITES                  SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         L     R5,DXD_RECLEN
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               RECLEN=(R5),                                            +
               OPTCD=(KEY,DIR,SYN,MVE)
         PUT   RPL=DXD_RPL
         ST    R15,DXD_VSAM_RC
         ITRACE ID=PUTRC,                                              +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*        CLOSE TYPE=T   (flush buffers)                               *
* ------------------------------------------------------------------- *
CLOSET00 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=CLOSET,                                             +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         ITRACE ID=ENDREQ
         ENDREQ RPL=DXD_RPL
         ITRACE ID=ENDREQRC,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID
         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET
         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK
CLOSET10 DS    0H
         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN
         BC    4,CLOSET10                     TRY AGAIN
         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT FOR SUBTASK
         NI    DXD_FLAGS,255-$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* -------------------------------------------------------------------
*        PRINTING
* -------------------------------------------------------------------
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE
         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE
         ST    R14,PRTNEXT-PRTBLOK(R1)
         CS    R14,R1,COMM_PRINT_REQ
         BC    4,PRT0010
         BR    R6                             RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   NET_MSG_1(MSG01L),MSG01
         MVC   NET_MSG_1+(MSG01LIB-MSG01)(L'MSG01LIB),LIB_KEY_NAME
         B     ERR1000
ERR0020  DS    0H
         MVC   NET_MSG_1(MSG02L),MSG02
         UNPK  NET_MSG_1+(MSG02LIB-MSG02)(L'MSG02LIB),LIB_NAME
         B     ERR1000
ERR0030  DS    0H
         MVC   NET_MSG_1,AUTH_MESSAGE_1
         MVC   NET_MSG_2,AUTH_MESSAGE_2
         MVC   NET_MSG_3,AUTH_MESSAGE_3
         MVC   NET_MSG_4,AUTH_MESSAGE_4
         MVC   NET_MSG_5,AUTH_MESSAGE_5
         B     ERR1000
ERR0040  DS    0H
         MVC   NET_MSG_1(MSG04L),MSG04
         MVC   NET_MSG_1+(MSG04MEM-MSG04)(L'MSG04MEM),LIB_KEY_NAME
         SR    R1,R1
         ICM   R1,3,LIB_KEY_VERSION
         CVD   R1,DXD_DWORD
         ED    NET_MSG_1+(MSG04VER-MSG04)(L'MSG04VER),DXD_DWORD+5
         MVC   NET_MSG_1+(MSG04LIB-MSG04)(L'MSG04LIB),LIB_NAME
         B     ERR1000
ERR0060  DS    0H
         DC    H'1'
ERR1000  DS    0H
         MVI   NET_RETURN_CODE,$NET_ERROR
         LA    R1,NETBLOKL                    LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         TM    DXD_FLAGS,$NEED_CLOSET
         BNO   EXIT0010
         BAL   R6,CLOSET00
EXIT0010 DS    0H
         ITRACE ID=EXIT                       EXITING
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
VLIBAUTH DC    V(LIBAUTH)
DXDSTART DC    Q(DXDUCKOT)
RPLI     RPL   AM=VTAM
RPLL     EQU   *-RPLI
F1       DC    F'1'
F2       DC    F'2'
AUTHID   DC    CL8'AUTHBLOK'
LIBFUNC_ID  DC CL8'LIBFUNC'
PRTID    DC    CL8'PRTBLOK'
BLANKS   DC    CL80' '
MSG01    DS    0C
         DC    CL11'USUBCKOT01E'
         DC    C' '
         DC    C' Library '
MSG01LIB DC    CL8' '
         DC    C' not found'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'USUBCKOT02E'
         DC    C' '
         DC    C' Library '
MSG02LIB DC    CL8' '
         DC    C' not open'
MSG02L   EQU   *-MSG02
MSG04    DS    0C
         DC    CL11'USUBCKOT04E'
         DC    C' '
         DC    C' Member '
MSG04MEM DC    CL8' '
MSG04VER DC    XL6'402120202020'
         DC    C' not found in library '
MSG04LIB DC    Cl8' '
MSG04L   EQU   *-MSG04
MSG05    DS    0C
         DC    CL11'USUBCKOT05I'
         DC    C' '
         DC    C' User '
MSG05USR DC    CL8' '
         DC    C' checked out member '
MSG05MEM DC    CL8' '
MSG05VER DC    XL6'402120202020'
         DC    C' from library '
MSG05LIB DC    CL8' '
MSG05L   EQU   *-MSG05

         LTORG

* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUCKOT      DSECT
              LIBSAVE  DSECT=NO
DXD_DWORD     DS       D
DXD_IO_SAVE   DS       16F
DXD_VSAM_RC   DS       F
DXD_RECLEN    DS       F
DXD_LIB       DS       F
DXD_RPL       DS       0F,(RPLL)X
DXD_FLAGS     DS       X
$NEED_CLOSET  EQU      X'80'
         AUTHBLOK DSECT=NO
         LIBFUNC  DSECT=NO
         PRTBLOK  DSECT=NO
DXD_IO   DS       0F,($MAX_SOURCE_SIZE*2)X
         ORG      DXD_IO
         LIBRECD  DSECT=NO
         ORG
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         NETBLOK   DSECT=YES
NET_LIB_NAME       DS   CL8
NET_MEM_NAME       DS   CL8
NET_MEM_VERSION    DS   XL2
                   ORG  NET_DATA
NET_SOURCE_RECORDS DS   XL4
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
                  COPY REGEQU
$MAX_SOURCE_SIZE  EQU  8000
         END  USUBCKOT
./ ADD NAME=USUBDEL  0100-09250-09250-0919-00521-00521-00000-SOURCE
         TITLE 'USUBDEL  Delete'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBDEL                                               *
*                                                                     *
* ------------------------------------------------------------------- *
USUBDEL  CSECT
USUBDEL  AMODE 31
USUBDEL  RMODE ANY
         USING PSA,R0
         USING USUBDEL,R12,R9                 DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBDEL'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         LA    R9,2048(R12)
         LA    R9,2048(R9)
         L     R1,USER_DXD                    WORK AREA BASE
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDDEL,R13                     DEFINE BASE
         USING IFGRPL,DXD_RPL
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    INIT0010
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK
         MVI   PRTCC,C' '                     INITIALIZE PRINT
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   DXD_RPL(RPLL),RPLI             INITIALIZE RPL
INIT0010 DS    0H
         L     R7,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R7                     DEFINE BASE
         ITRACE ID=ENTRY,                                              +
               DATA1=NET_FUNCTION,                                     +
               DATA2=NET_DATA
         MVC   DXD_LIB_NAME,NET_LIB_NAME
         MVC   DXD_MEM_NAME,NET_MEM_NAME
         MVC   DXD_MEM_VER,NET_MEM_VER
         MVC   NET_MSG_1,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_2,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_3,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_4,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_5,COMM_BLANKS          CLEAR MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK
         BZ    ERR0010                        NO LIBRARIES
         USING LIBBLOK,R8                     DEFINE BASE
INIT0030 DS    0H
         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?
         BE    INIT0040                       YES
         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   INIT0030
         B     ERR0020                        LIBRARY NOT FOUND
INIT0040 DS    0H
         ITRACE ID=LIBFOUND,                                           +
               RDATA1=R8
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BNO   ERR0030                        NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,DXD_MEM_NAME
         MVC   LIB_KEY_VERSION,DXD_MEM_VER
         MVC   LIB_KEY_SEQ,F1
         CLI   NET_FUNCTION,$NET_DELETE
         BE    INIT0050
         ITRACE ID=READ1,                                              +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BAL   R6,READ1000                    READ INDEX RECORD
         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?
         BNE   ERR0040                        NO
         ITRACE ID=AUTHCHK
         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER
         MVC   AUTH_USER,USER_USER_ID         COPY USER ID
         MVC   AUTH_LIB,NET_LIB_NAME          COPY LIBRARY NAME
         MVC   AUTH_MEMBER,NET_MEM_NAME
         MVC   AUTH_VERSION,NET_MEM_VER
         MVI   AUTH_FUNCTION,$AUTH_CHECK_DELETE
         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS
         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER
         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER
         ITRACE ID=CALLAUTH
         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS
         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT
         BALR  R14,R15                        LINK TO AUTHORIZATION
         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?
         BNE   ERR0050                        NO
         ITRACE ID=AUTHOK
         MVI   NET_RETURN_CODE,$NET_OK        SET RETURN CODE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
*     Make sure there are no higher level versions.                   *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0050 DS    0H
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,DXD_MEM_NAME
         ICM   R1,3,DXD_MEM_VER               VERSION BEING DELETED
         LA    R1,1(R1)                       PLUS 1
         STCM  R1,3,LIB_KEY_VERSION           SET VERSION
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,KGE)
         GET   RPL=DXD_RPL                    READ
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   EXIT0000                       NO (GOOD IN OUR CASE)
         CLC   LIB_KEY_NAME,DXD_MEM_NAME
         BNE   INIT0060
         MVC   NET_MSG_1(MSG01L),MSG01
         MVC   NET_MSG_1+(MSG01MEM-MSG01)(L'MSG01MEM),DXD_MEM_NAME
         MVC   NET_MSG_2(MSG02L),MSG02
         MVI   NET_RETURN_CODE,$NET_ERROR
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0060 DS    0H
         OC    COMM_HSUB_TCB,COMM_HSUB_TCB    HISTORY SUBTASK ACTIVE?
         BZ    DEL0100                        NO
         ITRACE ID=Q2HIST                     SAVING CURRENT SOURCE
         XC    HISTREQ(HISTREQL),HISTREQ
         MVC   HISTEYE,HISTID                 SET BLOCK EYE CATCHER
         MVC   HISTLIB,DXD_LIB_NAME           SET LIBRARY NAME
         MVC   HISTNAME,DXD_MEM_NAME          SET MEMBER NAME
         MVC   HISTVER,DXD_MEM_VER            SET VERSION NAME
         LA    R1,HISTREQ                     OUR REQUEST'S ADDRESS
INIT0070 DS    0H
         L     R2,COMM_HSUB_REQ               FIRST REQUEST ON CHAIN
         CS    R2,R1,COMM_HSUB_REQ            ADD OURS TO CHAIN
         BC    4,INIT0070                     TRY AGAIN
         POST  COMM_HSUB_WORK_ECB             WAKE UP HISTORY SUB TASK
         ITRACE ID=HISTWAIT
         WAIT  ECB=HISTECB                    WAIT FOR HISTORY SUB TASK
         ITRACE ID=HISTDONE

* ------------------------------------------------------------------- *
DEL0100  DS    0H
         ITRACE ID=DELETE
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,DXD_MEM_NAME
         MVC   LIB_KEY_VERSION,DXD_MEM_VER
         MVC   LIB_KEY_SEQ,F1                 SEQ OF 1ST INDEX RECORD
DEL0110  DS    0H
         ITRACE ID=DELDESC
         BAL   R6,READ0000                    READ INDEX RECORD
         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?
         BNE   DEL0120                        NO
         BAL   R6,ERASE000                    ERASE (DELETE) THE RECORD
         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?
         BNE   ERR0010                        NO
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER
         B     DEL0110
DEL0120  DS    0H
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         MVC   LIB_KEY_SEQ,F1                 SEQ OF 1ST DATA RECORD
DEL0130  DS    0H
         ITRACE ID=DELSRC,                                             +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BAL   R6,READ0000                    READ DATA RECORD
         CLI   DXD_VSAM_RC+3,0                RECORD FOUND?
         BNE   DEL0140                        NO
         BAL   R6,ERASE000                    ERASE (DELETE) THE RECORD
         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?
         BNE   ERR0030                        NO
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER
         B     DEL0130
DEL0140  DS    0H
         BAL   R6,CLOSET00                    ISSUE A CLOSE TYPE=T
         ITRACE ID=DELETED
         ICM   R1,15,LIB_DELETE               NUMBER OF DELETED MEMBERS
         LA    R1,1(R1)                       PLUS 1
         STCM  R1,15,LIB_DELETE               SAVE TOTAL
         MVC   PRTMSGID(MSG06L),MSG06
         MVC   PRTMSGID+(MSG06USR-MSG06)(L'MSG06USR),USER_USER_ID
         MVC   PRTMSGID+(MSG06MEM-MSG06)(L'MSG06MEM),DXD_MEM_NAME
         SR    R1,R1
         ICM   R1,3,DXD_MEM_VER               MEMBER VERSION
         CVD   R1,DXD_DWORD                   CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG06VER-MSG06)(L'MSG06VER),DXD_DWORD+5
         MVC   PRTMSGID+(MSG06LIB-MSG06)(L'MSG06LIB),DXD_LIB_NAME
         BAL   R6,PRT0000                     PRINT
         MVI   NET_RETURN_CODE,$NET_OK
         LA    R1,NETBLOKL                    ONLY NEED HEADER
         STCM  R1,3,NET_LENGTH                SET LENGTH TO SEND
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=READUPDT,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,UPD,KEQ)
         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ1000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=READ,                                               +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE)
         GET   RPL=DXD_RPL                    READ
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERASE000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=ERASE,                                              +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         ICM   R1,15,LIB_ERASES
         LA    R1,1(,R1)
         STCM  R1,15,LIB_ERASES
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,UPD)
         ERASE RPL=DXD_RPL                    ERASE (DELETE THE RECORD)
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=ERASERC,                                            +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK-IFGRPL(R2)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLOSET00 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=CLOSET,                                             +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         ITRACE ID=ENDREQ
         ENDREQ RPL=DXD_RPL
         ITRACE ID=ENDREQRC,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID
         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET
         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK
CLOSET10 DS    0H
         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN
         BC    4,CLOSET10                     TRY AGAIN
         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT ON SUBTASK
         NI    DXD_FLAGS,255-$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* -------------------------------------------------------------------
*        PRINTING
* -------------------------------------------------------------------
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE
         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE
         ST    R14,PRTNEXT-PRTBLOK(R1)
         CS    R14,R1,COMM_PRINT_REQ
         BC    4,PRT0010
         BR    R6                             RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOLIBS
         MVC   NET_MSG_1(MSG03L),MSG03
         B     ERR1000
ERR0020  DS    0H
         ITRACE ID=NOTFOUND
         MVC   NET_MSG_1(MSG04L),MSG04
         B     ERR1000
ERR0030  DS    0H
         ITRACE ID=CLOSED
         MVC   NET_MSG_1(MSG05L),MSG05
         MVC   NET_MSG_1+(MSG05LIB-MSG05)(L'MSG05LIB),DXD_LIB_NAME
         B     ERR1000
ERR0040  DS    0H
         MVC   NET_MSG_1(MSG07L),MSG07
         MVC   NET_MSG_1+(MSG07MEM-MSG07)(L'MSG07MEM),DXD_MEM_NAME
         SR    R1,R1
         ICM   R1,3,DXD_MEM_VER
         CVD   R1,DXD_DWORD
         ED    NET_MSG_1+(MSG07VER-MSG07)(L'MSG07VER),DXD_DWORD+5
         B     ERR1000
ERR0050  DS    0H
         ITRACE ID=NOTAUTH
         MVC   NET_MSG_1,AUTH_MESSAGE_1
         MVC   NET_MSG_2,AUTH_MESSAGE_2
         MVC   NET_MSG_3,AUTH_MESSAGE_3
         MVC   NET_MSG_4,AUTH_MESSAGE_4
         MVC   NET_MSG_5,AUTH_MESSAGE_5
ERR1000  DS    0H
         MVI   NET_RETURN_CODE,$NET_ERROR
         LA    R1,NETBLOKL
         STCM  R1,3,NET_LENGTH
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT                       EXITING
         TM    DXD_FLAGS,$NEED_CLOSET
         BNO   EXIT0010
         BAL   R6,CLOSET00
EXIT0010 DS    0H
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
VLIBAUTH          DC       V(LIBAUTH)
DXDSTART          DC       Q(DXDDEL)
RPLI              RPL      AM=VTAM
RPLL              EQU      *-RPLI

F1                DC       F'1'

AUTHID            DC       CL8'AUTHBLOK'
HISTID            DC       CL8'HISTREQ'
LIBFUNC_ID        DC       CL8'LIBFUNC'
PRTID             DC       CL8'PRTBLOK'

                  LTORG
MSG01             DS       0C
                  DC       CL11'USUBDEL01E'
                  DC       C' Higher version levels of member '
MSG01MEM          DC       CL8' '
                  DC       C' exist.'
MSG01L            EQU      *-MSG01
MSG02             DS       0C
                  DC       CL11'USUBDEL02E'
                  DC       C' Only the highest existing version may be +
               deleted.'
MSG02L            EQU      *-MSG02
MSG03             DS       0C
                  DC       CL11'USUBDEL03E'
                  DC       C' No libraries are defined'
MSG03L            EQU      *-MSG03
MSG04             DS       0C
                  DC       CL11'USUBDEL04E'
                  DC       C' Specified library does not exist'
MSG04L            EQU      *-MSG04
MSG05             DS       0C
                  DC       CL11'USUBDEL05E'
                  DC       C' Library '
MSG05LIB          DC       CL8' '
                  DC       C' is closed'
MSG05L            EQU      *-MSG05
MSG06             DS       0C
                  DC       CL11'USUBDEL06I'
                  DC       C' User '
MSG06USR          DC       CL8' '
                  DC       C' deleted member '
MSG06MEM          DC       CL8' '
                  DC       C'  version '
MSG06VER          DC       X'402020202120'
                  DC       C' from library '
MSG06LIB          DC       CL8' '
MSG06L            EQU      *-MSG06
MSG07             DS       0C
                  DC       C'USUBDEL07E'
                  DC       C'Member '
MSG07MEM          DC       CL8' '
                  DC       C'  version '
MSG07VER          DC       X'402020202120'
                  DC       C' not found'
MSG07L            EQU      *-MSG07

* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
DXDDEL            DSECT
                  LIBSAVE  DSECT=NO
DXD_DWORD         DS       D
DXD_IO_SAVE       DS       16F
DXD_VSAM_RC       DS       F
DXD_LEN           DS       F
DXD_LIB           DS       F
DXD_RPL           DS       0F,(RPLL)X

DXD_LIB_NAME      DS       CL8
DXD_MEM_NAME      DS       CL8
DXD_MEM_VER       DS       XL2

DXD_FLAGS         DS       X
$NEED_CLOSET      EQU      X'80'

                  AUTHBLOK DSECT=NO
                  HISTREQ  DSECT=NO
                  LIBFUNC  DSECT=NO
                  PRTBLOK  DSECT=NO
DXD_IO            DS       0F,($MAX_SOURCE_SIZE*2)X                     X
                  ORG      DXD_IO
                  LIBRECD  DSECT=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
                  LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
                  USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
                   NETBLOK DSECT=YES
NET_LIB_NAME       DS      CL8
NET_MEM_NAME       DS      CL8
NET_MEM_VER        DS      XL2
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
               COPY REGEQU
$MAX_SOURCE_SIZE EQU 8000
         END  USUBDEL
./ ADD NAME=USUBDQL  0100-09250-09250-0919-00112-00112-00000-SOURCE
         TITLE 'USUBDQL  Dequeue a library'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBDQL                                               *
*                                                                     *
*   We need to know who is using which library and we don't want      *
*   to close a library while it is in use.  When a user begins        *
*   accessing a library, the user interface will issue a "enqueue"    *
*   for the library.  When the user ends their session or chamges     *
*   libraries, the user interface will issue a "dequeue".             *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
USUBDQL  CSECT
USUBDQL  AMODE 31
USUBDQL  RMODE ANY
         USING PSA,R0
         USING USUBDQL,R12                    DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBDQL'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         L     R1,USER_DXD                    WORK AREA BASE ADDRESS
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDUDQL,R13                    DEFINE BASE
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         L     R9,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         MVI   LIB_FUNCTION,$LIB_FUNCTION_REM_USER
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         MVC   LIB_FUNCTION_LIB_NAME,NET_LIBRARY_NAME
         ST    R10,LIB_FUNCTION_USER          OUR USERBLOK ADDRESS
         LA    R1,LIBFUNC                     PARM BLOCK ADDRESS
DQL0010  DS    0H
         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN
         BC    4,DQL0010                      TRY AGAIN
         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB
         CLI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK
         BE    DQL0020                        YES
         ITRACE ID=DEQFAIL
         MVC   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1,LIB_FUNCTION_MESSAGE
         B     EXIT0000
DQL0020  DS    0H
         ITRACE ID=DEQOK
         MVI   NET_RETURN_CODE,$NET_OK
         MVC   USER_LIBRARY,COMM_BLANKS       CLEAR LIBRARY NAME
EXIT0000 DS    0H
         ITRACE ID=EXIT                       EXITING PRINT MODULE
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
DXDSTART DC   Q(DXDUDQL)
         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUDQL  DSECT
         LIBSAVE DSECT=NO
         LIBFUNC DSECT=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         NETBLOK DSECT=YES
NET_LIBRARY_NAME        DS   CL8
NET_LIBRARY_LENGTH      EQU  *-NET_LIBRARY_NAME
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  USUBDQL
./ ADD NAME=USUBGMD  0100-09250-09250-0919-00304-00304-00000-SOURCE
         TITLE 'USUBGMD  Return member documentation data'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBGMD                                               *
*                                                                     *
*   Return member documentation data                                  *
*                                                                     *
* ------------------------------------------------------------------- *
USUBGMD  CSECT
USUBGMD  AMODE 31
USUBGMD  RMODE ANY
         USING PSA,R0
         USING USUBGMD,R12                    DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBGMD'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         L     R1,USER_DXD                    WORK AREA ADDRESS
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDUGMD,R13                    DEFINE BASE
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   DXD_RPL(RPLL),RPLI
         XC    DXD_LIBBLOK_ADDR,DXD_LIBBLOK_ADDR
DOC0010  DS    0H
         ITRACE ID=ENTRY
         L     R9,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         L     R8,USER_RPL                    RPL ADDRESS
         USING IFGRPL,R8
         L     R7,USER_RPLX                   RPL EXTENSION ADDRESS
         USING ISTRPL6X,R7
         MVI   NET_RETURN_CODE,$NET_OK
         MVC   DXD_LIBRARY_NAME,NET_LIB_NAME
         MVC   DXD_MEM_NAME,NET_MEM_NAME
         MVC   DXD_MEM_VER,NET_MEM_VER
         LA    R1,NET_MSG_1                   FIRST MESSAGE
         LA    R2,5                           NUMBER OF MESSAGES
DOC0020  DS    0H
         MVC   0(L'NET_MSG_1,R1),COMM_BLANKS
         LA    R1,L'NET_MSG_1(R1)
         BCT   R2,DOC0020
         ITRACE ID=LIBRARY,                                            +
               DATA1=DXD_LIBRARY_NAME
         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         USING LIBBLOK,R6                     DEFINE BASE
         BZ    DOC0040
DOC0030  DS    0H
         ITRACE ID=FINDLIB,                                            +
               DATA1=LIB_NAME
         CLC   DXD_LIBRARY_NAME,LIB_NAME
         BE    DOC0050
         ICM   R6,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   DOC0030
DOC0040  DS    0H
         ITRACE ID=BADLIB
         LA    R1,NETBLOKL
         STCM  R1,3,NET_LENGTH
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(EMSG01L),EMSG01
         MVC   NET_MSG_1+(EMSG01_LIBRARY-EMSG01)(L'EMSG01_LIBRARY),DXD_+
               LIBRARY_NAME
         B     EXIT0000                       EXIT
DOC0050  DS    0H
         ITRACE ID=LIBFOUND,                                           +
               RDATA1=R6
         ST    R6,DXD_LIBBLOK_ADDR            SAVE LIBBLOK ADDRESS
* ------------------------------------------------------------------- *
*     Verify that the library is OPEN.                                *
* ------------------------------------------------------------------- *
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BNO   ERR0010                        NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LA    R2,DXD_RPL                     OUR RPL ADDRESS
         LA    R3,LIB_ACB                     ACB IN LIBBLOK
         LA    R4,DXD_IO                      OUR I/O AREA ADDRESS
         LA    R5,LIB_KEY                     RECORD KEY
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R5),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE)
         CLI   NET_FUNCTION,$NET_CHECK_DESC_AUTH
         BNE   DOC0060
* ------------------------------------------------------------------- *
*     Verify the user has authorization                               *
* ------------------------------------------------------------------- *
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,NET_MEM_NAME
         MVC   LIB_KEY_VERSION,NET_MEM_VER
         MVC   LIB_KEY_SEQ,F1
         ITRACE ID=READ1,                                              +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BAL   R4,READ0010                    READ INDEX RECORD
         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?
         BNE   ERR0020                        NO
         ITRACE ID=CALLAUTH
         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER
         MVI   AUTH_FUNCTION,$AUTH_CHECK_DESC
         MVC   AUTH_USER,USER_USER_ID
         MVC   AUTH_LIB,NET_LIB_NAME
         MVC   AUTH_MEMBER,NET_MEM_NAME
         MVC   AUTH_VERSION,NET_MEM_VER
         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER
         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER
         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS
         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS
         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT
         BALR  R14,R15                        LINK TO AUTHORIZATION
         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?
         BNE   ERR0030                        NO
         MVC   NET_DATA(LIB_INDEX_RECORD_LENGTH),LIB_RECORD
         LA    R1,NETBLOKL+LIB_INDEX_RECORD_LENGTH
         STCM  R1,3,NET_LENGTH                SET LENGTH
         B     EXIT0000
* ------------------------------------------------------------------- *
*     Send the description                                            *
* ------------------------------------------------------------------- *
DOC0060  DS    0H
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,DXD_MEM_NAME
         MVC   LIB_KEY_VERSION,DXD_MEM_VER
         MVC   LIB_KEY_SEQ,F1                 INITIALIZE SEQUENCE NBR
         LA    R2,NET_MEM_DOC-NETBLOK         INITIALIZE OUTPUT LENGTH
         LA    R3,NET_MEM_DOC                 INITIALIZE OUTPUT ADDRESS
         ITRACE ID=BUILD
DOC0070  DS    0H
         ITRACE ID=READNEXT
         BAL   R4,READ0000                    READ A RECORD
         OC    DXD_VSAM_RC,DXD_VSAM_RC
         BNZ   DOC0080
         MVC   0(L'LIB_DATA,R3),LIB_DATA
         LA    R3,L'LIB_DATA(R3)              UPDATE OUTPUT ADDRESS
         LA    R2,L'LIB_DATA(R2)              UPDATE OUTPUT LENGTH
         C     R2,=A($MAX_SOURCE_SIZE-(2*LIBBLOKL))   BUFFER FULL?
         BL    DOC0070
DOC0080  DS    0H
         ITRACE ID=DONE,                                               +
               RDATA1=R2
         STCM  R2,3,NET_LENGTH                SET LENGTH
         MVI   NET_RETURN_CODE,$NET_OK        SET RETURN CODE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0000  DS   0H
         ITRACE ID=READ0000
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              SAVE TOTAL
READ0010  DS   0H
         ITRACE ID=READ,                                               +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         A     R1,F1                          PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         GET   RPL=DXD_RPL                    READ NEXT RECORD
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         ITRACE ID=DATAREAD,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BR    R4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=CLOSED
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(EMSG02L),EMSG02
         B     EXIT0000                       EXIT
ERR0020  DS    0H
         ITRACE ID=NOTFOUND
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(EMSG03L),EMSG03
         MVC   NET_MSG_1+(EMSG03MEM-EMSG03)(L'EMSG03MEM),DXD_MEM_NAME
         SR    R1,R1
         ICM   R1,3,DXD_MEM_VER
         CVD   R1,DXD_DWORD
         ED    NET_MSG_1+(EMSG03VER-EMSG03)(L'EMSG03VER),DXD_DWORD+5
         B     EXIT0000                       EXIT
ERR0030  DS    0H
         ITRACE ID=NOTAUTH
         MVC   NET_MSG_1,AUTH_MESSAGE_1
         MVC   NET_MSG_2,AUTH_MESSAGE_2
         MVC   NET_MSG_3,AUTH_MESSAGE_3
         MVC   NET_MSG_4,AUTH_MESSAGE_4
         MVC   NET_MSG_5,AUTH_MESSAGE_5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000  DS   0H
         ITRACE ID=EXIT                       EXITING
         ITRACE ID=ENDREQ
         ENDREQ RPL=DXD_RPL
         ITRACE ID=ENDREQRC,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
DXDSTART       DC    Q(DXDUGMD)
VLIBAUTH       DC    V(LIBAUTH)
F1             DC    F'1'

RPLI           RPL   AM=VTAM
RPLL           EQU   *-RPLI

AUTHID         DC    CL8'AUTHBLOK'

EMSG01         DS    0C
               DC    C'USUBGMD01E Library '
EMSG01_LIBRARY DC    CL8' '
               DC    C' not found'
EMSG01L        EQU   *-EMSG01
EMSG02         DS    0C
               DC    C'USUBGMD02E Library is closed'
EMSG02L        EQU   *-EMSG02
EMSG03         DS    0C
               DC    C'USUBGMD03E Member '
EMSG03MEM      DC    Cl8' '
               DC    C', version'
EMSG03VER      DC    X'402020202120'
               DC    C' not found'
EMSG03L        EQU   *-EMSG03

         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
*                                                                    *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUGMD          DSECT
                 LIBSAVE DSECT=NO
DXD_DWORD        DS   D
DXD_RPL          DS   0F,(RPLL)X
DXD_LIBBLOK_ADDR DS   A
DXD_LIBRARY_NAME DS   CL8
DXD_MEM_NAME     DS   CL8
DXD_MEM_VER      DS   XL2
DXD_VSAM_RC      DS   F
                 AUTHBLOK DSECT=NO
DXD_IO           DS   0F,($MAX_SOURCE_SIZE*2)X
                 ORG  DXD_IO
                 LIBRECD DSECT=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
                  NETBLOK DSECT=YES
NET_LIB_NAME      DS   CL8
NET_MEM_NAME      DS   CL8
NET_MEM_VER       DS   XL2
NET_MEM_DOC       DS   0C
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
$MAX_SOURCE_SIZE EQU 8000
         COPY REGEQU
         END  USUBGMD
./ ADD NAME=USUBJOB  0100-09250-09250-0919-00540-00540-00000-SOURCE
         TITLE 'USUBJOB  Submit a member as a JOB'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBJOB                                               *
*                                                                     *
*                                                                     *
*  Submit member as a batch job                                       *
*                                                                     *
* ------------------------------------------------------------------- *
USUBJOB  CSECT
USUBJOB  AMODE 31
USUBJOB  RMODE ANY
         USING PSA,R0
         USING USUBJOB,R12                    DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBJOB'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         L     R1,USER_DXD                    WORK AREA BASE
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                        SAVE WORK AREA ADDRESS
         USING DXDUJOB,R13                   DEFINE BASE
         USING IFGRPL,DXD_RPL
         CLC   DXDID,MODID                   WORK AREA INITIALIZED?
         BE    INIT0010
         MVC   DXDID,MODID                   IDENTIFY WORK AREA OWNER
         MVC   PRTEYE,PRTID                  IDENTIFY CONTROL BLOCK
         MVI   PRTCC,C' '                    INITIALIZE PRINT
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   DXD_RPL(RPLL),RPLI
         MVC   DAIR_EYE,DAIR_ID
         MVI   DXD_FLAGS,0
         GETMAIN RU,                                                   +
               LV=BELOW_L,                                             +
               LOC=BELOW
         ITRACE ID=BELOW,                                              +
               RDATA1=R1
         LR    R9,R1
         USING BELOW_DSECT,R9
         MVC   BELOW_DCB(DCB_L),DCB_I
         USING IHADCB,BELOW_DCB
         MVC   BELOW_OPEN(OPEN_L),OPEN_I
         MVC   BELOW_CLOSE(CLOSE_L),CLOSE_I
         LA    R1,BELOW_IO
         ST    R1,UX01_EXPANDED_BUFFER
         LA    R1,DXD_EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,LIB_DATA
         ST    R1,UX01_COMPRESSED_BUFFER
         LA    R1,DXD_RECLEN
         ST    R1,UX01_COMPRESSED_LENGTH
         LOAD  EP=LIBUX01                    LOAD DE-COMPRESS EXIT
         ST    R0,DXD_UX01
INIT0010 DS    0H
         L     R7,USER_IO                    I/O AREA ADDRESS
         USING NETBLOK,R7                    DEFINE BASE
         ITRACE ID=ENTRY,                                              +
               DATA1=NET_FUNCTION,                                     +
               DATA2=NET_DATA
         MVC   DXD_LIB_NAME,NET_LIB_NAME
         MVC   DXD_MEM_NAME,NET_MEM_NAME
         MVC   NET_MSG_1,AUTH_MESSAGE_1
         MVC   NET_MSG_2,AUTH_MESSAGE_2
         MVC   NET_MSG_3,AUTH_MESSAGE_3
         MVC   NET_MSG_4,AUTH_MESSAGE_4
         MVC   NET_MSG_5,AUTH_MESSAGE_5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0020 DS    0H
         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK
         BZ    ERR0010                        NO LIBRARIES
         USING LIBBLOK,R8                     DEFINE BASE
INIT0030 DS    0H
         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?
         BE    INIT0040                       YES
         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   INIT0030
         B     ERR0020                        LIBRARY NOT FOUND
INIT0040 DS    0H
         ITRACE ID=LIBFOUND,                                           +
               RDATA1=R8
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BNO   ERR0030                        NO
         ST    R8,DXD_LIB                     SAVE ADDRESS
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE)
* ------------------------------------------------------------------- *
*                                                                     *
*     Verify that the user has proper authorization.                  *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER
         MVC   AUTH_USER,USER_USER_ID         COPY USER ID
         MVC   AUTH_LIB,NET_LIB_NAME          COPY LIBRARY NAME
         MVC   AUTH_MEMBER,NET_MEM_NAME
         MVI   AUTH_FUNCTION,$AUTH_CHECK_SUBMIT
         LA    R1,AUTHBLOK
         L     R15,VLIBAUTH
         BALR  R14,R15
         CLI   AUTH_RETURN_CODE,$AUTH_OK
         BNE   ERR0040
* ------------------------------------------------------------------- *
*     Read the index record for the member.                           *
* ------------------------------------------------------------------- *
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,NET_MEM_NAME
         MVC   LIB_KEY_SEQ,F1
         MVC   LIB_KEY_VERSION,NET_MEM_VERSION
         OC    NET_MEM_VERSION,NET_MEM_VERSION
         BZ    INIT0050
         ITRACE ID=SPECIFIC,                                           +
               DATA1=NET_MEM_VERSION
         OI    DXD_FLAGS,$SPECIFIC_VERSION
INIT0050 DS    0H
         ITRACE ID=INDEX,                                              +
               DATA1=LIB_KEY+0,                                        +
               DATA2=LIB_KEY+8
         BAL   R6,READ0000                    READ INDEX RECORD
         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?
         BNE   INIT0060                       NO
         TM    DXD_FLAGS,$SPECIFIC_VERSION    SPECIFIC VERSION?
         BO    INIT0070                       YES
         SR    R1,R1                          CLEAR R1
         ICM   R1,3,LIB_KEY_VERSION           VERSION JUST FOUND
         LA    R1,1(,R1)                      PLUS 1
         STCM  R1,3,LIB_KEY_VERSION           UPDATE VERSION
         B     INIT0050
INIT0060 DS    0H
         TM    DXD_FLAGS,$SPECIFIC_VERSION    SPECIFIC VERSION?
         BO    ERR0050                        YES.. DOESN'T EXIST
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,LIB_KEY_VERSION           VERSION USED ON READ
         BCTR  R1,0                           MINUS 1
         STCM  R1,3,LIB_KEY_VERSION           SET VERSION
INIT0070 DS    0H
         MVC   DXD_SOURCE_RECORDS,LIB_INDEX_RECORDS
         ITRACE ID=RECORDS,                                            +
               DATA1=DXD_SOURCE_RECORDS
* ------------------------------------------------------------------- *
*                                                                     *
*        Member exists.                                               *
*        Allocate DD for internal reader.                             *
*                                                                     *
* ------------------------------------------------------------------- *
         AP    COMM_SUBMIT_NBR,P1             ADD 1 TO NBR OF SUBMITS
         MVC   DAIR_DD,=X'F02120202020202020'
         ED    DAIR_DD,COMM_SUBMIT_NBR        EDIT
         MVI   DAIR_DD,C'S'                   SET DDNAME PREFIX
         MVI   DAIR_CMD,$DAIR_INTRDR          SET COMMAND
         ITRACE ID=ALLO_RDR,                  ALLOCATING INTERNAL RDR  +
               DATA1=DAIR_DD
         BAL   R6,DAIR0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Internal reader allocated                                    *
*        Initialize and OPEN the DCB                                  *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   DCBDDNAM,DAIR_DD               SET DD NAME
         OPEN  (BELOW_DCB,OUTPUT),                                     +
               MODE=31,                                                +
               MF=(E,BELOW_OPEN)
* ------------------------------------------------------------------- *
*        Change key type to data                                      *
* ------------------------------------------------------------------- *
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         XC    LIB_KEY_SEQ,LIB_KEY_SEQ
* ------------------------------------------------------------------- *
*                                                                     *
*        Read a block of data                                         *
*        Uncompress the block                                         *
*        Write the data to the internal reader                        *
*                                                                     *
* ------------------------------------------------------------------- *
JOB0010  DS    0H
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQ NBR
         LA    R1,1(,R1)                      PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQ NBR
         BAL   R6,READ0000                    READ A BLOCK
         L     R2,DXD_SOURCE_RECORDS          SOURCE RECORDS LEFT
         CH    R2,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?
         BNH   JOB0020                        NO
         LH    R2,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER
JOB0020  DS    0H
         LA    R3,BELOW_IO                    FIRST IN EXPANDED BUFFER
JOB0030  DS    0H
         PUT   BELOW_DCB,0(R3)                WRITE TO INTERNAL READER
         LA    R3,80(,R3)                     NEXT IN BUFFER
         BCT   R2,JOB0030                     LOOP
         L     R4,DXD_SOURCE_RECORDS          SOURCE RECORDS LEFT
         SH    R4,=Y($MAX_SOURCE_SIZE/80)     MINUS NBR JUST WRITTEN
         ST    R4,DXD_SOURCE_RECORDS          UPDATE NBR LEFT
         LTR   R4,R4                          ALL DONE?
         BH    JOB0010                        NO
* ------------------------------------------------------------------- *
*                                                                     *
*        All records written                                          *
*        CLOSE DCB                                                    *
*        De-allocate DD                                               *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=CLOSE
         CLOSE BELOW_DCB,                                              +
               MODE=31,                                                +
               MF=(E,BELOW_CLOSE)
         MVC   NET_MSG_1(MSG08_L),MSG08
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=READ,                                               +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         GET   RPL=DXD_RPL                    READ
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0050                        NO
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         BE    READ0020                       DON'T DE-COMPRESS INDEX
         SHOWCB RPL=DXD_RPL,                  SHOW DATA FROM RPL       +
               FIELDS=(RECLEN),               .. REQUEST RECORD LENGTH +
               AREA=DXD_RECLEN,               .. AREA FOR RETURNED DATA+
               LENGTH=4                       .. LENGTH OF 'RECLEN'
         ITRACE ID=SHOW_RC,                                            +
               RDATA1=R15
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0060                        NO
         L     R1,DXD_SOURCE_RECORDS          SOURCE RECORDS REMAINING
         CH    R1,=Y($MAX_SOURCE_SIZE/80)     MORE THAN 1 BUFFER?
         BNH   READ0010                       NO
         LH    R1,=Y($MAX_SOURCE_SIZE/80)     LIMIT TO 1 BUFFER
READ0010 DS    0H
         MH    R1,H80                         TIMES SIZE PER RECORD
         ST    R1,DXD_EXPANDED_LENGTH         SET EXPANDED LENGTH
         MVI   UX01_FUNCTION,$UX01_DECOMPRESS
         LA    R1,UX01_PARMS
         L     R15,DXD_UX01
         ITRACE ID=CALLUX01,                                           +
               RDATA1=R15,                                             +
               RDATA2=R1
         BALR  R14,R15                        DECOMPRESS THIS BUFFER
READ0020 DS    0H
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* -------------------------------------------------------------------
*        DYNAMIC ALLOCATION/DEALLOCATION
* -------------------------------------------------------------------
DAIR0000 DS    0H
         XC    DAIR_ECB,DAIR_ECB              CLEAR THE ECB
         LA    R1,DAIRREQ                     REQUEST BLOCK'S ADDRESS
         ITRACE ID=DAIRREQ,                                            +
               RDATA1=R1
DAIR0010 DS    0H
         L     R2,COMM_DSUB_REQ
         ST    R2,DAIR_NEXT
         CS    R2,R1,COMM_DSUB_REQ            ADD OUR REQUEST TO QUEUE
         BC    4,DAIR0010                     NO GO.. TRY AGAIN
         ITRACE ID=POSTDSUB
         POST  COMM_DSUB_WORK_ECB             WAKEUP THE DAIR SUBTASK
         ITRACE ID=WAIT
         WAIT  1,ECB=DAIR_ECB                 WAIT
         ITRACE ID=RUNNING
         OC    DAIR_R15,DAIR_R15              ALLOCATION SUCCESSFUL?
         BNZ   ERR0070                        NO
         BR    R6
* -------------------------------------------------------------------
*        PRINTING
* -------------------------------------------------------------------
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE
         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE
         ST    R14,PRTNEXT-PRTBLOK(R1)
         CS    R14,R1,COMM_PRINT_REQ
         BC    4,PRT0010
         BR    R6                             RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOLIBS
         MVC   NET_MSG_1(MSG01_L),MSG01
         B     EXIT0000
ERR0020  DS    0H
         ITRACE ID=BADLIB
         MVC   NET_MSG_1(MSG02_L),MSG02
         B     EXIT0000
ERR0030  DS    0H
         ITRACE ID=CLOSED
         MVC   NET_MSG_1(MSG03_L),MSG03
         B     EXIT0000
ERR0040  DS    0H
         ITRACE ID=NOTAUTH
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1,AUTH_MESSAGE_1
         MVC   NET_MSG_2,AUTH_MESSAGE_2
         MVC   NET_MSG_3,AUTH_MESSAGE_3
         MVC   NET_MSG_4,AUTH_MESSAGE_4
         MVC   NET_MSG_5,AUTH_MESSAGE_5
         B     EXIT0000
ERR0050  DS    0H
         ITRACE ID=READ_ERR,                                           +
               RDATA1=R15
         MVC   NET_MSG_1(MSG05_L),MSG05
         UNPK  DXD_UNPACK(3),DXD_VSAM_RC+3(2)
         TR    DXD_UNPACK(2),HEXCHAR
         MVC   NET_MSG_1+(MSG05_R15-MSG05)(2),DXD_UNPACK
         UNPK  DXD_UNPACK(7),DXD_RPL+(RPLFDBK-IFGRPL)(4)
         TR    DXD_UNPACK(6),HEXCHAR
         MVC   NET_MSG_1+(MSG05_RPLFDBK-MSG05)(6),DXD_UNPACK
         B     EXIT0000
ERR0060  DS    0H
         ITRACE ID=SHOW_ERR,                                           +
               RDATA1=R15
         MVC   NET_MSG_1(MSG06_L),MSG06
         UNPK  DXD_UNPACK(3),DXD_VSAM_RC+2(2)
         TR    DXD_UNPACK(2),HEXCHAR
         MVC   NET_MSG_1+(MSG06_R15-MSG06)(2),DXD_UNPACK
         B     EXIT0000
ERR0070  DS    0H
         ITRACE ID=DAIR_ERR,                                           +
               RDATA1=R15
         MVC   NET_MSG_1(MSG07_L),MSG07
         UNPK  DXD_UNPACK(3),DAIR_R15+1(2)
         TR    DXD_UNPACK(2),HEXCHAR
         MVC   NET_MSG_1+(MSG07_R15-MSG07)(2),DXD_UNPACK
         UNPK  DXD_UNPACK(5),DAIR_ERROR(3)
         TR    DXD_UNPACK(4),HEXCHAR
         MVC   NET_MSG_1+(MSG07_ERROR-MSG07)(4),DXD_UNPACK
         UNPK  DXD_UNPACK(5),DAIR_INFO(3)
         TR    DXD_UNPACK(4),HEXCHAR
         MVC   NET_MSG_1+(MSG07_INFO-MSG07)(4),DXD_UNPACK
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         DELETE EP=LIBUX01
         XC    DXD_UX01,DXD_UX01
         ITRACE ID=FREE_LOW,                                           +
               RDATA1=R9
         FREEMAIN RU,                                                  +
               A=(R9),                                                 +
               LV=BELOW_L
         ITRACE ID=EXIT                       EXITING
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS
         SR    R15,R15                        GIVE GOOD RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
DCB_I    DCB   DSORG=PS,                                               +
               DDNAME=S0000000,                                        +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               BLKSIZE=4000,                                           +
               MACRF=PM
DCB_L    EQU   *-DCB_I

OPEN_I   OPEN  (*,OUTPUT),                                             +
               MODE=31,                                                +
               MF=L
OPEN_L   EQU   *-OPEN_I

CLOSE_I  CLOSE *,                                                      +
               MODE=31,                                                +
               MF=L
CLOSE_L  EQU   *-CLOSE_I

HEXCHAR           EQU  *-C'0'
                  DC   C'0123456789ABCDEF'

VLIBAUTH          DC   V(LIBAUTH)
DXDSTART          DC   Q(DXDUJOB)
RPLI              RPL  AM=VTAM
RPLL              EQU  *-RPLI
F1                DC   F'1'
H1                DC   H'1'
H80               DC   H'80'
P1                DC   P'1'
PRTID             DC   CL8'PRTBLOK'
AUTHID            DC   CL8'AUTHBLOK'
DAIR_ID           DC   CL8'DAIRREQ '

MSG01             DS   0C
                  DC   C'USUBJOB01E  '
                  DC   C'No libraries are available'
MSG01_L           EQU  *-MSG01

MSG02             DS   0C
                  DC   C'USUBJOB02E  '
                  DC   C'Library not found'
MSG02_L           EQU  *-MSG02

MSG03             DS   0C
                  DC   C'USUBJOB03E  '
                  DC   C'Library is CLOSED'
MSG03_L           EQU  *-MSG03

MSG05             DS   0C
                  DC   C'USUBJOB05E  '
                  DC   C'VSAM READ error.  R15='
MSG05_R15         DC   CL2' '
                  DC   C', RPLFDBK='
MSG05_RPLFDBK     DC   CL6' '
MSG05_L           EQU  *-MSG05

MSG06             DS   0C
                  DC   C'USUBJOB06E  '
                  DC   C'SHOWCB error.  R15='
MSG06_R15         DC   CL2' '
MSG06_L           EQU  *-MSG06

MSG07             DS   0C
                  DC   C'USUBJOB07E  '
                  DC   C'DAIR error.  R15='
MSG07_R15         DC   CL2' '
                  DC   C', ERROR='
MSG07_ERROR       DC   CL4' '
                  DC   C', INFO='
MSG07_INFO        DC   CL4' '
MSG07_L           EQU  *-MSG07

MSG08             DS   0C
                  DC   C'USUBJOB08I  '
                  DC   C'Submitted'
MSG08_L           EQU  *-MSG08
* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUJOB             DSECT
                    LIBSAVE  DSECT=NO
DXD_UX01            DS       A
DXD_IO_SAVE         DS       16F
DXD_VSAM_RC         DS       F
DXD_RECLEN          DS       F
DXD_LIB             DS       F
DXD_RPL             DS       0F,(RPLL)X
DXD_SOURCE_RECORDS  DS       F
DXD_EXPANDED_LENGTH DS       F
DXD_LIB_NAME        DS       CL8
DXD_MEM_NAME        DS       CL8
DXD_MEM_VERSION     DS       XL2
DXD_UNPACK          DS       CL8

DXD_FLAGS           DS       X
$SPECIFIC_VERSION   EQU      X'80'

                    UX01PARM DSECT=NO
                    AUTHBLOK DSECT=NO
                    DAIRREQ  DSECT=NO
                    PRTBLOK  DSECT=NO

DXD_IO              DS       0F,($MAX_SOURCE_SIZE*2)X
                    ORG      DXD_IO
                    LIBRECD  DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
BELOW_DSECT         DSECT
BELOW_DCB           DS       0F,(DCB_L)X
BELOW_OPEN          DS       0F,(OPEN_L)X
BELOW_CLOSE         DS       0F,(CLOSE_L)X
BELOW_IO            DS       32768X
BELOW_L             EQU      *-BELOW_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    NETBLOK DSECT=YES
NET_LIB_NAME        DS      CL8
NET_MEM_NAME        DS      CL8
NET_MEM_VERSION     DS      XL2
$NET_VERSION_LENGTH EQU     *-NETBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         DCBD     DSORG=PS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
$MAX_SOURCE_SIZE EQU 8000
         COPY REGEQU
         END  USUBJOB
./ ADD NAME=USUBLIBS 0100-09250-09250-0919-00154-00154-00000-SOURCE
         TITLE 'USUBLIBS  Determine if user is authorized'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBLIBS                                              *
*                                                                     *
*   When a user starts a LIBRARIAN connection, the first order of     *
*   business is to determine which libraries the user may access.     *
*   This is done by calling RACF with a "third" party check for       *
*   each library that was defined at start-up.                        *
*                                                                     *
* ------------------------------------------------------------------- *
USUBLIBS CSECT
USUBLIBS AMODE 31
USUBLIBS RMODE ANY
         USING PSA,R0
         USING USUBLIBS,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBLIBS'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         L     R1,USER_DXD                    WORK AREA BASE ADDRESS
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDULIBS,R13                   DEFINE BASE
         CLC   DXDID,MODID                    INITIALIZED?
         BE    LIBS0010                       YES
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   DXDRACL(RACLL),RACLI           INITIALIZE RACLIST
         MVI   DXD_FLAGS,0                    RESET FLAGS
LIBS0010 DS    0H
         L     R9,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         MVI   NET_RETURN_CODE,$NET_OK
         LA    R2,NET_LIBRARIES               I/O AREA ADDRESS
         USING NET_LIBRARIES,R2
         LA    R3,NET_LIBRARIES-NETBLOK       INITIALIZE OUTPUT LENGTH
         L     R6,DXDLIB                      CURRENT LIBRARY
         LA    R5,MAX_PER_BUFFER              MAXIMUM PER BUFFER
         MVI   NET_RETURN_CODE,$NET_OK
         TM    DXD_FLAGS,$CONTINUE            CONTINUE'ING?
         BO    LIBS0020                       YES
         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         USING LIBBLOK,R6                     DEFINE BASE
         BZ    LIBS0050
LIBS0020 DS    0H
         NI    DXD_FLAGS,255-$CONTINUE
LIBS0030 DS    0H
         ITRACE ID=CHKLIB,                                             +
               DATA1=LIB_NAME
         RACROUTE REQUEST=AUTH,               CHECK FOR AUTHORIZATION  +
               ATTR=READ,                     .. AT READ LEVEL         +
               CLASS=COMMRACF,                .. CLASS                 +
               ENTITY=(LIB_NAME),             .. ENTITY                +
               USERID=USER_USER_ID,           .. THIRD PARTY CHECK     +
               WORKA=DXDSAF,                  .. SAF WORK AREA         +
               RELEASE=1.8.1,                 .. RACF RELEASE          +
               MF=(E,DXDRACL)
         ITRACE ID=RACFRC,                    TRACE RETURN CODE        +
               RDATA1=R15
         MVC   NET_LIBRARY_NAME,LIB_NAME      MOVE NAME TO I/O AREA
         MVC   NET_LIBRARY_DESC,LIB_DESCRIPTION
         MVC   NET_LIBRARY_STATUS,LIB_STATUS
         LA    R2,NET_LIBRARY_LENGTH(R2)
         LA    R3,NET_LIBRARY_LENGTH(R3)
         BCT   R5,LIBS0040                    CONTINUE WITH NEXT LIB
         OC    LIB_NEXT,LIB_NEXT              MORE LIBRARIES?
         BZ    LIBS0050                       NO
         MVC   DXDLIB,LIB_NEXT                SET NEXT LIBRARY BLOCK
         OI    DXD_FLAGS,$CONTINUE            SET 'CONTINUE' FLAG
         B     LIBS0060
LIBS0040 DS    0H
         ICM   R6,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   LIBS0030
LIBS0050 DS    0H
         MVI   NET_RETURN_CODE,$NET_EOF
LIBS0060 DS    0H
         STH   R3,NET_LENGTH
EXIT0000 DS    0H
         ITRACE ID=EXIT                       EXITING
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*                                                                    *
*                                                                    *
* ------------------------------------------------------------------ *
DXDSTART DC   Q(DXDULIBS)
RACLI    RACROUTE REQUEST=AUTH,      RACF AUTHORIZATION INQUIRY        +
               USERID=*,             .. WILL BE A THIRD PARTY CHECK    +
               RELEASE=1.8.1,        .. RACF 1.8.1 FORMAT              +
               LOG=NONE,             .. DON'T LOG FAILURES             +
               MF=L                  .. LIST FORM
RACLL    EQU   *-RACLI
         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
*                                                                    *
*                                                                    *
* ------------------------------------------------------------------ *
DXDULIBS  DSECT
          LIBSAVE DSECT=NO
DXDLIB    DS    A
DXDRACL   DS    (RACLL)X              RACLIST PARM LIST
DXDSAF    DS    (512)X                SAF WORK ARA
DXD_FLAGS DS    X
$CONTINUE EQU   X'80'
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         NETBLOK DSECT=YES
NET_LIBRARIES           DS   0C
NET_LIBRARY_NAME        DS   CL8
NET_LIBRARY_DESC        DS   CL80
NET_LIBRARY_STATUS      DS   X
NET_LIBRARY_LENGTH      EQU  *-NET_LIBRARY_NAME
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
MAX_PER_BUFFER   EQU (($MAX_SOURCE_SIZE-NETBLOKL)/NET_LIBRARY_LENGTH)
$MAX_SOURCE_SIZE EQU 8000
         COPY REGEQU
         END  USUBLIBS
./ ADD NAME=USUBMAIN 0100-09250-09250-0919-00870-00870-00000-SOURCE
         TITLE 'USUBMAIN  User subtask'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBMAIN                                              *
*                                                                     *
*                                                                     *
*                                                                     *
*  For a VTAM connection:                                             *
*                                                                     *
*  When a user connects, the attention exit will be 'driven' by VTAM. *
*  The attention exit will GETMAIN a USERBLOK, add it to the chain    *
*  anchored at COMM_USER_CHAIN, and POST an ECB the main task is      *
*  waiting on (COMM_ATTN_ECB).  When the main task 'wakes up', it     *
*  will find the new USERBLOK and ATTACH this module as a subtask.    *
*  Each user has a subtask that manages communication with that user. *
*  When the user disconnects, VTAM will 'drive' the attention exit    *
*  again.  The main task will find the USERBLOK with the termination  *
*  ECB POSTed.  The main task will DETACH that subtask and FREEMAIN   *
*  the USERBLOK.                                                      *
*                                                                     *
*                                                                     *
*                                                                     *
*  For a TCP/IP connection:                                           *
*                                                                     *
*  During server start-up if a PORT number is specified in the parms, *
*  the main task will attach the TCP/IP subtask (LIBSIP).  The TCP/IP *
*  subtask (LIBSIP) will have initialized the TCP/IP API, created a   *
*  socket, bound to the PORT and have issued a LISTEN and an ACCEPT.  *
*  When a user connects, TCP/IP POSTs the ECB the ACCEPT is WAITing   *
*  on.  LIBSIP will GETMAIN a USERBLOK, add it to the chain anchored  *
*  at COMM_USER_CHAIN and POST an ECB the main task is WAITing on     *
*  (this is the same ECB as the VTAM exit).                           *
*                                                                     *
*  For TCP/IP it gets a bit more complicated.  The reason is that     *
*  the TCP/IP subtask "owns" the connection to the user.  What        *
*  we want to do is ATTACH a subtask (LIBUSER) and have that subtask  *
*  manage the communication with the new user.  So, we need to        *
*  transfer ownership of the connection from one subtask to another.  *
*  This involves three operating system subtasks...  one is the       *
*  TCP/IP subtask, the second is the main task, and the third is      *
*  the user's subtask.                                                *
*                                                                     *
*  To summarize:                                                      *
*                                                                     *
*      The TCP/IP subtask's LISTEN/ACCEPT has completed               *
*      The TCP/IP subtask GETMAIN'd a new USERBLOK and added it to    *
*         the USERBLOK chain                                          *
*      The TCP/IP subtask POSTs an ECB the main task WAITs on         *
*      The TCP/IP subtask WAITs for the new user subtask to initialize*
*      The main task ATTACHs the new user subtask                     *
*      The main task WAITs for work again                             *
*      The new user subtask POSTs the ECB the TCP/IP subtask has      *
*         been waiting for in the new USERBLOK                        *
*      The TCP/IP subtask issues a GIVESOCKET                         *
*      The user subtask issues a TAKESOCKET                           *
*                                                                     *
*    At this point the user subtask 'owns' the socket.  The TCP/IP    *
*    subtask is 'out of the loop'.  Network data traffic is directly  *
*    between the end user on the remote end and the user subtask.     *
*                                                                     *
*      The TCP/IP subtask issues another ACCEPT and WAITs for another *
*         log-in                                                      *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
USUBMAIN CSECT
USUBMAIN AMODE 31
USUBMAIN RMODE ANY
         USING PSA,R0
         USING USUBMAIN,R12,R9                DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBMAIN'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LA    R9,2048(,R12)
         LA    R9,2048(R9)
         L     R10,0(R1)                      COPY OUR USERBLOK ADDRESS
         USING USERBLOK,R10
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         L     R3,DXDSIZE                     WORK AREA SIZE
         GETMAIN RU,LV=(R3),                  OBTAIN WORK AREA         +
               LOC=ANY
         ST    R1,USER_DXD                    SET WORK AREA BASE ADDR
         LR    R4,R1                          COPY STORAGE ADDRESS
         LR    R2,R1                          COPY WORK AREA ADDRESS
         SR    R0,R0                          CLEAR REGISTER
         SR    R1,R1                          CLEAR REGISTER
         MVCL  R2,R0                          CLEAR WORK AREA
         A     R4,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R4)
         ST    R4,8(R13)
         LR    R13,R4                         COPY WORKAREA ADDRESS
         USING DXDUMAIN,R13                   DEFINE BASE
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         ITRACE ID=INIT,RDATA1=R10
         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID
         BZ    INIT0010                       YES
         GETMAIN RU,LV=RPLL                   GETMAIN STORAGE FOR RPL
         LR    R8,R1                          COPY ADDRESS
         ITRACE ID=RPL,RDATA1=R8
         ST    R8,USER_RPL                    SAVE RPL ADDRESS
         USING IFGRPL,R8                      DEFINE BASE
         MVC   0(RPLL,R8),RPLI                INITIALIZE RPL
         MVC   RPLDACB,COMM_ACB               SET THE ACB ADDRESS
         GETMAIN RU,LV=RPLEXTL                GET STORAGE FOR RPLEXT
         LR    R7,R1                          COPY ADDRESS
         ST    R7,USER_RPLX                   SAVE RPL EXTENSION ADDR
         USING ISTRPL6X,R7                    DEFINE BASE
         MVC   0(RPLEXTL,R7),RPLEXTI          INITIALIZE RPL EXTENSION
         B     INIT0020
INIT0010 DS    0H
         XC    USER_RPL,USER_RPL
         XC    USER_RPLX,USER_RPLX
         ITRACE ID=INITAPI,                                            +
               DATA1=USER_CLIENT_TASK
         MVC   DXD_TCPIP_FUNCTION,=CL16'INITAPI'
         EZASMI TYPE=INITAPI,                                          +
               MAXSNO=DXD_MAX_SOCKET,                                  +
               SUBTASK=USER_CLIENT_TASK,                               +
               ASYNC='ECB',                                            +
               TASK=TCPTASK,                                           +
               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +
               RETCODE=DXD_TCPIP_RETURN_CODE
         TM    DXD_TCPIP_RETURN_CODE,X'80'
         BO    ERR0000
         ITRACE ID=POST_API
         XC    USER_TAKESOCKET_ECB,USER_TAKESOCKET_ECB
         POST  USER_API_ECB
         ITRACE ID=1STWAIT
         WAIT  ECB=USER_TAKESOCKET_ECB
         ITRACE ID=TAKESOCK,                                           +
               DATA1=COMM_MAIN_CLIENT_NAME,                            +
               DATA2=COMM_MAIN_CLIENT_TASK
         ITRACE ID=TAKE+,                                              +
               DATA1=USER_SOCKET
         MVC   DXD_TCPIP_FUNCTION,=CL16'TAKESOCKET'
         XC    USER_NETWORK_ECB,USER_NETWORK_ECB
         EZASMI TYPE=TAKESOCKET,                                       +
               SOCRECV=USER_SOCKET,                                    +
               CLIENT=COMM_MAIN_CLIENT,                                +
               ECB=USER_NETWORK_ECB,                                   +
               TASK=TCPTASK,                                           +
               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +
               RETCODE=DXD_TCPIP_RETURN_CODE
         WAIT  ECB=USER_NETWORK_ECB
         TM    DXD_TCPIP_RETURN_CODE,X'80'
         BO    ERR0000
         MVC   USER_SOCKET,DXD_TCPIP_RETURN_CODE+2
         ITRACE ID=NEWSOCK,                                            +
               DATA1=USER_SOCKET
INIT0020 DS    0H
         L     R0,IOSIZE                      I/O AREA SIZE (32768)
         GETMAIN RU,LV=(0)
         LR    R6,R1                          COPY I/O AREA ADDRESS
         ST    R6,USER_IO                     SAVE THE I/O AREA ADDRESS
         ITRACE ID=IOAREA,                                             +
               RDATA1=R6
         USING NETBLOK,R6                     DEFINE BASE
         XC    0(256,R6),0(R6)                INITIALIZE HEADER PORTION
         XC    USER_WORK_ECB,USER_WORK_ECB
         LA    R1,USER_WORK_ECB               ECB THE MAINTASK POSTS
         ST    R1,DXD_ECB1                    SET ADDRESS IN WAIT LIST
         LA    R1,USER_NETWORK_ECB            ECB VTAM WILL POST
         ST    R1,DXD_ECB2                    SET ADDRESS IN WAIT LIST
         OI    DXD_ECB2,X'80'                 SET 'END-OF-LIST'
         XC    DXD_BAD,DXD_BAD
         MVI   PRTCC,C' '                     SINGLE SPACING
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   PRTMSGID(MSG01L),MSG01
         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID
         BZ    USER0030
         MVC   PRTMSGID+(MSG01TYP-MSG01)(3),CID
         UNPK  PRTMSGID+(MSG01ADR-MSG01)(9),USER_CONVERSATION_ID(5)
         TR    PRTMSGID+(MSG01ADR-MSG01)(8),HEXCHAR
         MVI   PRTMSGID+(MSG01ADR-MSG01)+8,C' '
         B     USER0040
USER0030 DS    0H
         MVC   PRTMSGID+(MSG01TYP-MSG01)(3),IP
         MVC   PRTMSGID+(MSG01ADR-MSG01)(15),USER_IP_ADDRESS
USER0040 DS    0H
         BAL   R14,PRT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
USER0050 DS    0H
         BAL   R14,RECV0000                   ISSUE FIRST RECEIVE
         CLI   NET_FUNCTION,$NET_IDENTIFY_USER
         BE    USER0070                       YES
         TM    USER_STATUS,$USERID            HAS USER BEEN IDENTIFIED?
         BNO   ERR0050                        NO
* ------------------------------------------------------------------- *
*                                                                     *
*     Perform the requested service.                                  *
*                                                                     *
* ------------------------------------------------------------------- *
USER0060 DS    0H
         ITRACE ID=CHKFUNC,                                            +
               DATA1=NET_FUNCTION
         CLI   NET_FUNCTION,$NET_GET_LIBS
         BE    USER0140
         CLI   NET_FUNCTION,$NET_CHECK_IN_AUTH
         BE    USER0150
         CLI   NET_FUNCTION,$NET_CHECK_IN_SOURCE
         BE    USER0150
         CLI   NET_FUNCTION,$NET_CHECK_NEW_AUTH
         BE    USER0150
         CLI   NET_FUNCTION,$NET_CHECK_OUT_AUTH
         BE    USER0160
         CLI   NET_FUNCTION,$NET_CHECK_OUT_SOURCE
         BE    USER0160
         CLI   NET_FUNCTION,$NET_CONFIRM_CHECK_OUT
         BE    USER0160
         CLI   NET_FUNCTION,$NET_ABORT_CHECK_OUT
         BE    USER0160
         CLI   NET_FUNCTION,$NET_GET_MEMBERS
         BE    USER0170
         CLI   NET_FUNCTION,$NET_ENQUE_LIB
         BE    USER0180
         CLI   NET_FUNCTION,$NET_DEQ_LIB
         BE    USER0190
         CLI   NET_FUNCTION,$NET_CHECK_VIEW_AUTH
         BE    USER0200
         CLI   NET_FUNCTION,$NET_VIEW_SOURCE
         BE    USER0200
         CLI   NET_FUNCTION,$NET_CHECK_DESC_AUTH
         BE    USER0210
         CLI   NET_FUNCTION,$NET_GET_DESC
         BE    USER0210
         CLI   NET_FUNCTION,$NET_SEND_DESC
         BE    USER0220
         CLI   NET_FUNCTION,$NET_CHECK_DEL_AUTH
         BE    USER0230
         CLI   NET_FUNCTION,$NET_DELETE
         BE    USER0230
         CLI   NET_FUNCTION,$NET_SEND_RECORDS
         BE    USER0150
         CLI   NET_FUNCTION,$NET_GET_STATUS
         BE    USER0240
         CLI   NET_FUNCTION,$NET_NEW_VERSION
         BE    USER0250
         CLI   NET_FUNCTION,$NET_CLOSE
         BE    TERM0010
         CLI   NET_FUNCTION,$NET_CHECK_ADMIN_AUTH
         BE    USER0260
         CLI   NET_FUNCTION,$NET_SEND_ADMIN
         BE    USER0260
         CLI   NET_FUNCTION,$NET_UNDO
         BE    USER0270
         CLI   NET_FUNCTION,$NET_SUBMIT_JOB
         BE    USER0280
         ITRACE ID=BADCMD,                                             +
               DATA1=NET_FUNCTION
         L     R1,DXD_BAD                     NUMBER OF BAD COMMANDS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,DXD_BAD                     SAVE BAD COMMAND COUNT
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_DATA(MSG02L),MSG02
         LA    R1,NETBLOKL+MSG02L             LENGTH TO SEND BACK
         STH   R1,NET_LENGTH                  SET LENGTH
         B     USER0310
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
USER0070 DS    0H
         TM    USER_STATUS,$USERID            ALREADY BEEN IDENTIFIED?
         BO    ERR0040                        YES
         OI    USER_STATUS,$USERID            USER HAS BEEN IDENTIFIED
         ITRACE ID=IDENTIFY,                                           +
               DATA1=NET_SMF,                 .. SMF NAME              +
               DATA2=NET_USER                 .. USER ID
         MVC   USER_SYSTEM_SMF,NET_SMF        COPY SYSTEM SMF ID
         MVC   USER_USER_ID,NET_USER          COPY USER ID
         MVC   USER_JOB,NET_JOB               COPY USER'S SPACE NAME
         MVC   USER_NAME,NET_USER_NAME
         ICM   R15,15,COMMXUSR                FIRST EXTERNAL USER BLOCK
         BZ    USER0110                       NO EXTERNAL USER BLOCKS
         USING XUSRBLOK,R15                   DEFINE BASE
USER0080 DS    0H
         CLC   XUSRSMF,USER_SYSTEM_SMF        SAME SMF ID?
         BNE   USER0090                       NO
         CLC   XUSRID1,USER_SYSTEM_SMF        SAME USER ID?
         BE    USER0100                       YES
USER0090 DS    0H
         ICM   R15,15,XUSRNEXT                NEXT BLOCK
         BNZ   USER0080                       LOOP
         B     USER0110
USER0100 DS    0H
         MVC   USER_USER_ID,XUSRID2           CHANGE TO LOCAL USER ID
USER0110 DS    0H
         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID
         BZ    USER0120
         MVC   PRTMSGID(MSG03L),MSG03
         MVC   PRTMSGID+(MSG03USR-MSG03)(L'MSG03USR),USER_USER_ID
         MVC   PRTMSGID+(MSG03SMF-MSG03)(L'MSG03SMF),USER_SYSTEM_SMF
         MVC   PRTMSGID+(MSG03JOB-MSG03)(L'MSG03JOB),USER_JOB
         MVC   PRTMSGID+(MSG03LU-MSG03)(L'MSG03LU),USER_PARTNER_LU
         UNPK  PRTMSGID+(MSG03CID-MSG03)(9),USER_CONVERSATION_ID(5)
         TR    PRTMSGID+(MSG03CID-MSG03)(8),HEXCHAR
         MVI   PRTMSGID+(MSG03CID-MSG03)+8,C' '
         BAL   R14,PRT0000
         B     USER0130
USER0120 DS    0H
         MVC   PRTMSGID(MSG05L),MSG05
         MVC   PRTMSGID+(MSG05USR-MSG05)(L'MSG05USR),USER_USER_ID
         MVC   PRTMSGID+(MSG05SMF-MSG05)(L'MSG05SMF),USER_SYSTEM_SMF
         MVC   PRTMSGID+(MSG05JOB-MSG05)(L'MSG05JOB),USER_JOB
         MVC   PRTMSGID+(MSG05IP-MSG05)(L'MSG05IP),USER_IP_ADDRESS
         BAL   R14,PRT0000
USER0130 DS    0H
         LA    R1,$NET_IDENTIFY_LENGTH
         STCM  R1,3,NET_LENGTH
         MVI   NET_RETURN_CODE,$NET_OK
         MVC   NET_SYSTEM_NAME,COMM_SYSTEM_NAME
         B     USER0310
USER0140 DS    0H
         ITRACE ID=GETLIBS
         MVC   DXD_SUB_EP,V_USUBLIBS          USUBLIBS ENTRY POINT
         B     USER0300
USER0150 DS    0H
         ITRACE ID=CHECKIN
         MVC   DXD_SUB_EP,V_USUBCKIN          USUBCKIN ENTRY POINT
         B     USER0300
USER0160 DS    0H
         ITRACE ID=CHECKOUT
         MVC   DXD_SUB_EP,V_USUBCKOT          USUBCKOT ENTRY POINT
         B     USER0300
USER0170 DS    0H
         ITRACE ID=GETMEMS
         MVC   DXD_SUB_EP,V_USUBMEMS          USUBMEMS ENTRY POINT
         B     USER0300
USER0180 DS    0H
         ITRACE ID=ENQLIB
         MVC   DXD_SUB_EP,V_USUBNQL           USUBNQL ENTRY POINT
         B     USER0300
USER0190 DS    0H
         ITRACE ID=DEQLIB
         MVC   DXD_SUB_EP,V_USUBDQL           USUBDQL ENTRY POINT
         B     USER0300
USER0200 DS    0H
         ITRACE ID=VIEW
         MVC   DXD_SUB_EP,V_USUBVIEW          USUBVIEW ENTRY POINT
         B     USER0300
USER0210 DS    0H
         ITRACE ID=GETDESC
         MVC   DXD_SUB_EP,V_USUBGMD           GET MEMBER DOC
         B     USER0300
USER0220 DS    0H
         ITRACE ID=SENDDESC
         MVC   DXD_SUB_EP,V_USUBUMD           UPDATE DOC
         B     USER0300
USER0230 DS    0H
         ITRACE ID=DELETE
         MVC   DXD_SUB_EP,V_USUBDEL           DELETE MEMBER
         B     USER0300
USER0240 DS    0H
         ITRACE ID=STATUS
         MVC   DXD_SUB_EP,V_USUBSTAT          STC STATUS
         B     USER0300
USER0250 DS    0H
         ITRACE ID=VERSION
         MVC   DXD_SUB_EP,V_USUBVER           CREATE A NEW VERSION
         B     USER0300
USER0260 DS    0H
         ITRACE ID=ADMIN
         MVC   DXD_SUB_EP,V_USUBADMN          IN/OUT AND USER ADMIN
         B     USER0300
USER0270 DS    0H
         ITRACE ID=UNDO
         MVC   DXD_SUB_EP,V_USUBUNDO          UNDO CHECK-OUT STATUS
         B     USER0300
USER0280 DS    0H
         ITRACE ID=JOB
         MVC   DXD_SUB_EP,V_USUBJOB           SUBMIT AS BATCH JOB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
USER0300 DS    0H
         L     R15,DXD_SUB_EP                 SUBROUTINE ENTRY POINT
         ITRACE ID=CALLSUB,                                            +
               RDATA1=R15,                                             +
               DATA2=MODID-USUBMAIN(R15)
         BALR  R14,R15                        LINK TO SUBROUTINE
USER0310 DS    0H
         BAL   R14,SEND0000                   ISSUE SEND
         BAL   R14,RECV0000                   ISSUE RECEIVE
         TM    USER_STATUS,$USER_KILL
         BO    TERM0000
         B     USER0060                       CHECK NEXT FUNCTION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
RECV0000 DS    0H
         ST    R14,DXD_LINK
         ITRACE ID=RECV0000,                                           +
               RDATA1=R10,                                             +
               RDATA2=R14
         L     R1,USER_RECEIVES               NUMBER OF RECEIVES
         LA    R1,1(R1)                       PLUS 1
         ST    R1,USER_RECEIVES               SAVE TOTAL
         MVI   USER_FUNCTION,$USER_RECEIVE
         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID
         BZ    RECV0010
         ITRACE ID=VTAMRECV,                                           +
               DATA1=USER_CONVERSATION_ID,                             +
               RDATA2=R10
         MVC   DXD_VTAM_FUNCTION,=CL16'RECEIVE'
         XC    USER_NETWORK_ECB,USER_NETWORK_ECB
         APPCCMD CONTROL=RECEIVE,             ISSUE RECEIVE            +
               QUALIFY=SPEC,                                           +
               RPL=(R8),                                               +
               FILL=LL,                                                +
               AREA=(R6),                                              +
               AREALEN=32768,                                          +
               ECB=USER_NETWORK_ECB,                                   +
               CONMODE=CS,                                             +
               CONVID=USER_CONVERSATION_ID,                            +
               OPTCD=ASY
         ITRACE ID=WAIT,                                               +
               DATA1=USER_WORK_ECB,                                    +
               DATA2=USER_NETWORK_ECB
         WAIT  1,ECBLIST=DXD_WAIT
         TM    COMM_EOJ_PHASE,$EOJ1           EOJ SIGNALLED?
         BO    TERM0000                       YES
         ITRACE ID=WOKEUP1,                                            +
               DATA1=USER_WORK_ECB,                                    +
               DATA2=USER_NETWORK_ECB
         APPCCMD CONTROL=CHECK,RPL=(R8)
         MVI   USER_FUNCTION,$USER_RUN        THIS TASK IS RUNNING
         TM    USER_WORK_ECB,X'40'            MAIN TASK SIGNALLING?
         BO    TERM0020                       YES.. SHUTDOWN TIME
         TM    USER_STATUS,$USERLOS           SESSION LOST?
         BO    LOSS0000                       YES
         ITRACE ID=RECVDONE,                                           +
               DATA1=RPL6RC,                                           +
               DATA2=0(R6)                    .. PORTION OF I/O AREA
         OC    RPL6RC,RPL6RC                  RECEIVE SUCCESSFUL?
         BNZ   ERR0020                        NO
         L     R1,USER_BYTES_RECEIVED         NUMBER OF BYTES RECEIVED
         AH    R1,NET_LENGTH                  PLUS JUST RECEIVED
         ST    R1,USER_BYTES_RECEIVED         SAVE TOTAL
         MVI   USER_FUNCTION,$USER_RUN        STATUS IS 'RUNNING'
         L     R14,DXD_LINK
         BR    R14
RECV0010 DS    0H
         ITRACE ID=TCP_READ,                                           +
               RDATA1=R6,                                              +
               RDATA2=R10
         MVC   DXD_TCPIP_FUNCTION,=CL16'READ'
         XC    USER_NETWORK_ECB,USER_NETWORK_ECB
         EZASMI TYPE=READ,                                             +
               S=USER_SOCKET,                                          +
               TASK=TCPTASK,                                           +
               NBYTE=IOSIZE,                                           +
               BUF=NETBLOK,                                            +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +
               ECB=USER_NETWORK_ECB
         WAIT  1,ECBLIST=DXD_WAIT
         TM    COMM_EOJ_PHASE,$EOJ1           EOJ SIGNALLED?
         BO    TERM0000                       YES
         MVI   USER_FUNCTION,$USER_RUN        STATUS IS 'RUNNING'
         ICM   R1,15,DXD_TCPIP_RETURN_CODE
         BM    ERR0000                        IF NEGATIVE.. ERROR
         ITRACE ID=READDONE,                                           +
               RDATA1=R10,                                             +
               RDATA2=R1
         STH   R1,NET_LENGTH                  SET BYTES RECEIVED (READ)
         A     R1,USER_BYTES_RECEIVED         PLUS TOTAL SO FAR
         ST    R1,USER_BYTES_RECEIVED         SAVE TOTAL
         MVI   USER_FUNCTION,$USER_RUN        STATUS IS 'RUNNING'
         L     R14,DXD_LINK
         BR    R14
*-------------------------------------------------------------------- *
*                                                                     *
*        Send data to user                                            *
*                                                                     *
*        R2   data length                                             *
*        R6   data address                                            *
*                                                                     *
* ------------------------------------------------------------------- *
SEND0000 DS    0H
         ST    R14,DXD_LINK
         ITRACE ID=SEND
         L     R1,USER_SENDS                  NUMBER OF SENDS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,USER_SENDS                  SAVE TOTAL
         LH    R2,NET_LENGTH
         L     R1,USER_BYTES_SENT             NUMBER OF BYTES SENT
         AR    R1,R2                          PLUS BYTES SENDING NOW
         ST    R1,USER_BYTES_SENT             SAVE TOTAL
         OI    USER_STATUS,$USERSND           SENDING DATA
         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID
         BZ    SEND0010                       YES
*-------------------------------------------------------------------- *
*        Send data using VTAM                                         *
* ------------------------------------------------------------------- *
         ITRACE ID=VTAMSEND,                                           +
               DATA1=USER_CONVERSATION_ID,                             +
               DATA2=0(R6)
         MVC   DXD_VTAM_FUNCTION,=CL16'SEND'
         XC    USER_NETWORK_ECB,USER_NETWORK_ECB
         APPCCMD CONTROL=SEND,                ISSUE SEND               +
               QUALIFY=DATA,                                           +
               RPL=(R8),                                               +
               AREA=(R6),                                              +
               RECLEN=(R2),                                            +
               ECB=USER_NETWORK_ECB,                                   +
               CONMODE=CS,                                             +
               CONVID=USER_CONVERSATION_ID,                            +
               OPTCD=ASY
         ITRACE ID=WAIT
         WAIT  1,ECBLIST=DXD_WAIT
         ITRACE ID=WOKEUP2
         TM    COMM_EOJ_PHASE,$EOJ1           EOJ SIGNALLED?
         BO    TERM0000                       YES
         APPCCMD CONTROL=CHECK,RPL=(R8)
         L     R14,DXD_LINK
         NI    USER_STATUS,255-$USERSND       TURN OFF INDICATOR
         OI    USER_STATUS,$USERRUN           SET STATUS (RUNNING)
         OC    RPL6RC,RPL6RC                  SEND SUCCESSFUL?
         BNZ   ERR0020                        NO
         TM    USER_WORK_ECB,X'40'            MAIN TASK SIGNALLING?
         BO    TERM0020                       YES.. SHUTDOWN TIME
         TM    USER_STATUS,$USERLOS           SESSION LOST?
         BO    LOSS0000                       YES
         BR    R14
*-------------------------------------------------------------------- *
*        Send data using TCP/IP                                       *
* ------------------------------------------------------------------- *
SEND0010 DS    0H
         ITRACE ID=IP_WRITE,                                           +
               RDATA1=R6,                                              +
               RDATA2=R2
         ST    R2,DXD_WRITE_LENGTH
         MVC   DXD_TCPIP_FUNCTION,=CL16'WRITE'
         XC    USER_NETWORK_ECB,USER_NETWORK_ECB
         EZASMI TYPE=WRITE,                                            +
               S=USER_SOCKET,                                          +
               TASK=TCPTASK,                                           +
               NBYTE=DXD_WRITE_LENGTH,                                 +
               BUF=NETBLOK,                                            +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +
               ECB=USER_NETWORK_ECB
         WAIT  1,ECBLIST=DXD_WAIT
         TM    COMM_EOJ_PHASE,$EOJ1           EOJ SIGNALLED?
         BO    TERM0000                       YES
         NI    USER_STATUS,255-$USERSND       TURN OFF INDICATOR
         OI    USER_STATUS,$USERRUN           SET STATUS (RUNNING)
         L     R14,DXD_LINK
         TM    DXD_TCPIP_RETURN_CODE,X'80'
         BO    ERR0000
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LOSS0000 DS    0H
         ITRACE ID=SESSLOST,                                           +
               DATA1=USER_USER_ID
         ITRACE ID=RESET
         MVC   DXD_VTAM_FUNCTION,=CL16'RESETRCV'
         APPCCMD CONTROL=RESETRCV,                                     +
               RPL=(R8)
         APPCCMD CONTROL=CHECK,                                        +
               RPL=(R8)
         ITRACE ID=RESETRC,                                            +
               RDATA1=R15
         LTR   R15,R15
         BZ    LOSS0010
         B     ERR0020
LOSS0010 DS    0H
         MVC   PRTMSGID(MSG04L),MSG04
         MVC   PRTMSGID+(MSG04USR-MSG04)(L'MSG04USR),USER_USER_ID
         UNPK  PRTMSGID+(MSG04CID-MSG04)(9),USER_CONVERSATION_ID(5)
         TR    PRTMSGID+(MSG04CID-MSG04)(8),HEXCHAR
         MVI   PRTMSGID+(MSG04CID-MSG04)+8,C' '
         BAL   R14,PRT0000
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ST    R14,DXD_LINK
         ITRACE ID=PRINT
         GETMAIN RU,                                                   +
               LV=PRTBLOKL,                                            +
               LOC=ANY
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R2,COMM_PRINT_REQ              FIRST BLOCK ON QUEUE
         ST    R2,PRTNEXT-PRTBLOK(R1)
         CS    R2,R1,COMM_PRINT_REQ           ADD NEW BLOCK TO CHAIN
         BC    4,PRT0010                      TRY AGAIN
         POST  COMM_PRINT_WORK_ECB            WAKE UP PRINT SUBTASK
         L     R14,DXD_LINK
         BR    R14
* ------------------------------------------------------------------- *
*        Error routines                                               *
* ------------------------------------------------------------------- *
ERR0000  DS    0H
         ITRACE ID=TCP_FAIL,                                           +
               DATA1=DXD_TCPIP_FUNCTION,                               +
               DATA2=DXD_TCPIP_ERROR_NUMBER
         MVC   PRTMSGID(MSG07L),MSG07
         MVC   PRTMSGID+(MSG07FNC-MSG07)(L'MSG07FNC),DXD_TCPIP_FUNCTION
         L     R1,DXD_TCPIP_ERROR_NUMBER
         CVD   R1,COMMDWRD
         ED    PRTMSGID+(MSG07NBR-MSG07)(L'MSG07NBR),COMMDWRD+5
         BAL   R14,PRT0000
         B     EXIT0000
ERR0010  DS    0H
         ITRACE ID=UNKNWAKE                  WOKE UP FOR UNKNOWN REASON
         DC    H'0'
ERR0020  DS    0H
         ITRACE ID=VTAMFAIL,                                           +
               DATA1=DXD_VTAM_FUNCTION,                                +
               DATA2=RPL6RC
         MVC   PRTMSGID(MSG08L),MSG08
         MVC   PRTMSGID+(MSG08FNC-MSG08)(L'MSG08FNC),DXD_VTAM_FUNCTION
         UNPK  PRTMSGID+(MSG08CDE-MSG08)(9),RPL6RC(5)
         TR    PRTMSGID+(MSG08CDE-MSG08)(8),HEXCHAR
         MVI   PRTMSGID+(MSG08CDE-MSG08)+8,C' '
         BAL   R14,PRT0000
         B     EXIT0000
ERR0040  DS    0H
         ITRACE ID=DUPID                      ALREADY ISSUED 'ID'
         DC    H'0'
ERR0050  DS    0H
         ITRACE ID=NOTID                      USER HAS NOT ISSUED 'ID'
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
TERM0000 DS    0H
         ITRACE ID=KILLED
         MVC   PRTMSGID(MSG06L),MSG06
         MVC   PRTMSGID+(MSG06USR-MSG06)(L'MSG06USR),USER_USER_ID
         MVC   PRTMSGID+(MSG06SMF-MSG06)(L'MSG06SMF),USER_SYSTEM_SMF
         BAL   R14,PRT0000
         OC    USER_CONVERSATION_ID,USER_CONVERSATION_ID
         BNZ   EXIT0000
TERM0010 DS    0H
         ITRACE ID=CLOSE
         MVC   DXD_TCPIP_FUNCTION,=CL16'CLOSE'
         EZASMI TYPE=CLOSE,                                            +
               S=USER_SOCKET,                                          +
               TASK=TCPTASK,                                           +
               RETCODE=DXD_TCPIP_RETURN_CODE,                          +
               ERRNO=DXD_TCPIP_ERROR_NUMBER,                           +
               ECB=USER_NETWORK_ECB
         WAIT  ECB=USER_NETWORK_ECB
         MVC   DXD_TCPIP_FUNCTION,=CL16'TERMAPI'
         EZASMI TYPE=TERMAPI,                                          +
               TASK=TCPTASK
         B     EXIT0020
TERM0020 DS    0H
         ITRACE ID=SHUTDOWN
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ICM   R1,15,USER_RPL
         BZ    EXIT0010
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=RPLL
         XC    USER_RPL,USER_RPL
EXIT0010 DS    0H
         ICM   R1,15,USER_RPLX
         BZ    EXIT0020
         FREEMAIN RU,                                                  +
               A=(R1),                                                 +
               LV=RPLEXTL
         XC    USER_RPLX,USER_RPLX
EXIT0020 DS    0H
         ITRACE ID=EXIT
         ICM   R1,15,USER_IO                  I/O AREA ADDRESS
         BZ    EXIT0030
         L     R0,IOSIZE                      I/O AREA SIZE
         FREEMAIN RU,                         FREE THE I/O AREA        +
               A=(1),                                                  +
               LV=(0)
         XC    USER_IO,USER_IO
EXIT0030 DS    0H
         ICM   R1,15,USER_AUTH_LIBS           ANY LIBS?
         BZ    EXIT0050                       NO
EXIT0040 DS    0H
         L     R2,0(R1)
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=12
         LTR   R2,R2
         BNZ   EXIT0040
EXIT0050 DS    0H
         POST  COMM_ATTN_ECB                  WAKE UP MAIN TASK
         L     R1,USER_DXD                    WORK AREA ADDRESS
         L     R0,DXDSIZE
         L     R13,4(R13)                     CALLER'S SAVE AREA
         FREEMAIN RU,                         FREE THE I/O AREA        +
               A=(1),                                                  +
               LV=(0)
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        ALWAYS A GOOD RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
*-------------------------------------------------------------------- *
DXDSIZE  CXD
DXDSTART DC    Q(DXDUMAIN)

V_USUBADMN     DC V(USUBADMN)
V_USUBCKIN     DC V(USUBCKIN)
V_USUBCKOT     DC V(USUBCKOT)
V_USUBDEL      DC V(USUBDEL)
V_USUBDQL      DC V(USUBDQL)
V_USUBGMD      DC V(USUBGMD)
V_USUBJOB      DC V(USUBJOB)
V_USUBLIBS     DC V(USUBLIBS)
V_USUBMEMS     DC V(USUBMEMS)
V_USUBNQL      DC V(USUBNQL)
V_USUBSTAT     DC V(USUBSTAT)
V_USUBUMD      DC V(USUBUMD)
V_USUBUNDO     DC V(USUBUNDO)
V_USUBVER      DC V(USUBVER)
V_USUBVIEW     DC V(USUBVIEW)

IOSIZE   DC    A(COMMIOSZ)

HEXCHAR  EQU   *-C'0'
         DC    C'0123456789ABCDEF'

CID      DC    CL3'CID'
IP       DC    CL3'IP'
MSG01    DC    C'USUBMAIN01I USER subtask initialized for '
MSG01TYP DC    CL3' '
MSG01ADR DC    CL15' '
         DC    C' '
MSG01L   EQU   *-MSG01
MSG02    DC    C'USUBMAIN02I Internal error, invalid function received'
MSG02L   EQU   *-MSG02
MSG03    DC    C'USUBMAIN03I User '
MSG03USR DC    CL8' '
         DC    C' on system '
MSG03SMF DC    CL4' '
         DC    C' with JOB name '
MSG03JOB DC    CL8' '
         DC    C' using LU '
MSG03LU  DC    CL8' '
         DC    C'  CID '
MSG03CID DC    CL8' '
         DC    C' '
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    C'USUBMAIN04I Session lost with user '
MSG04USR DC    Cl8'  '
         DC    C', CID '
MSG04CID DC    CL8' '
         DC    C', subtask terminating'
MSG04L   EQU   *-MSG04
MSG05    DC    C'USUBMAIN05I User '
MSG05USR DC    CL8' '
         DC    C'on system '
MSG05SMF DC    CL4' '
         DC    C' with JOB name '
MSG05JOB DC    CL8' '
         DC    C' connected using IP addr '
MSG05IP  DC    CL15' '
         DC    C' '
MSG05L   EQU   *-MSG05
MSG06    DC    C'USUBMAIN06W User subtask for '
MSG06USR DC    CL8' '
         DC    C'on system '
MSG06SMF DC    CL4' '
         DC    C' killed by console command'
MSG06L   EQU   *-MSG06
MSG07    DS    0C
         DC    C'USUBMAIN07E TCP/IP function '
MSG07FNC DC    CL16' '
         DC    C' failed, error number='
MSG07NBR DC    X'402020202120'
MSG07L   EQU   *-MSG07
MSG08    DS    0C
         DC    C'USUBMAIN08E VTAM function '
MSG08FNC DC    CL16' '
         DC    C' failed, RPL FDBK='
MSG08CDE DC    CL8' '
         DC    C' '
MSG08L   EQU   *-MSG08

RPLI     RPL   AM=VTAM,AAREA=RPLEXTI
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDUMAIN                DSECT
                        LIBSAVE DSECT=NO

DXD_SUB_EP              DS     F

DXD_LINK                DS     A

DXD_WAIT                DS     0F
DXD_ECB1                DS     F
DXD_ECB2                DS     F
DXD_BAD                 DS     F

DXD_WRITE_LENGTH        DS     F

DXD_TCPIP_ERROR_NUMBER  DS     F
DXD_TCPIP_RETURN_CODE   DS     F

DXD_MAX_SOCKET          DS     H

DXD_TCPIP_FUNCTION      DS     CL16
DXD_VTAM_FUNCTION       DS     CL16

                        CLIENT  PREFIX=DXD

                        PRTBLOK DSECT=NO

TCPTASK                 EZASMI  TYPE=TASK,STORAGE=CSECT


* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 XUSRBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                 NETBLOK  DSECT=YES
NET_SMF          DS       CL4
NET_USER         DS       CL8
NET_JOB          DS       CL8
NET_SYSTEM_NAME  DS       CL20
NET_USER_NAME    DS       CL20
$NET_IDENTIFY_LENGTH      EQU *-NETBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGRPL AM=VTAM
         IFGACB AM=VTAM
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  USUBMAIN
./ ADD NAME=USUBMEMS 0100-09250-09250-0919-00254-00254-00000-SOURCE
         TITLE 'USUBMEMS  Return the members in a specified library'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBMEMS                                              *
*                                                                     *
*   Return the names of the members of a library.                     *
*                                                                     *
* ------------------------------------------------------------------- *
USUBMEMS CSECT
USUBMEMS AMODE 31
USUBMEMS RMODE ANY
         USING PSA,R0
         USING USUBMEMS,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBMEMS'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         L     R1,USER_DXD                    WORK AREA ADDRESS
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDUMEMS,R13                   DEFINE BASE
         CLC   DXDID,MODID                    AREA INITIALIZED?
         BE    MEMS0010                       YES
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   DXD_RPL(RPLL),RPLI
         XC    DXD_LIBBLOK_ADDR,DXD_LIBBLOK_ADDR
         MVI   DXD_FLAGS,0                    CLEAR ALL FLAGS
MEMS0010 DS    0H
         ITRACE ID=ENTRY
         L     R9,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         L     R8,USER_RPL                    RPL ADDRESS
         USING IFGRPL,R8
         L     R7,USER_RPLX                   RPL EXTENSION ADDRESS
         USING ISTRPL6X,R7
         MVI   NET_RETURN_CODE,$NET_OK
         MVC   DXD_LIBRARY_NAME,NET_LIBRARY_NAME
         LA    R1,NET_MSG_1                   FIRST MESSAGE
         LA    R2,5                           NUMBER OF MESSAGES
MEMS0020 DS    0H
         MVC   0(L'NET_MSG_1,R1),COMM_BLANKS
         LA    R1,L'NET_MSG_1(R1)
         BCT   R2,MEMS0020
         ITRACE ID=LIBRARY,                                            +
               DATA1=DXD_LIBRARY_NAME
         L     R6,DXD_LIBBLOK_ADDR            LIBRARY BLOCK ADDRESS
         TM    DXD_FLAGS,$CONTINUE            CONTINUE'ING?
         BO    MEMS0060                       YES
         ITRACE ID=NEW
         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         USING LIBBLOK,R6                     DEFINE BASE
         BZ    MEMS0040
MEMS0030 DS    0H
         ITRACE ID=FINDLIB,                                            +
               DATA1=LIB_NAME
         CLC   DXD_LIBRARY_NAME,LIB_NAME
         BE    MEMS0050
         ICM   R6,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   MEMS0030
MEMS0040 DS    0H
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(EMSG01L),EMSG01
         MVC   NET_MSG_1+(EMSG01_LIBRARY-EMSG01)(L'EMSG01_LIBRARY),DXD_+
               LIBRARY_NAME
         B     EXIT0000                       EXIT
MEMS0050 DS    0H
         ITRACE ID=LIBFOUND,                                           +
               RDATA1=R6
         ST    R6,DXD_LIBBLOK_ADDR            SAVE ADDRESS
* ------------------------------------------------------------------- *
*     Verify that the library is OPEN.                                *
* ------------------------------------------------------------------- *
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BNO   ERR0010                        NO
         LA    R2,DXD_RPL                     OUR RPL ADDRESS
         LA    R3,LIB_ACB                     ACB IN LIBBLOK
         LA    R4,DXD_IO                      OUR I/O AREA ADDRESS
         LA    R5,LIB_KEY                     RECORD KEY
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R5),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,NSP)
         XC    LIB_KEY,LIB_KEY
         MVI   LIB_KEY_SEQ+3,X'01'
         ITRACE ID=1STREAD
         BAL   R4,READ0000
         MODCB RPL=(R2),                                               +
               ARG=0,                                                  +
               KEYLEN=0,                                               +
               OPTCD=(SEQ,SYN,MVE)
MEMS0060 DS    0H
         ITRACE ID=BUILD
         NI    DXD_FLAGS,255-$CONTINUE        RESET FLAG
         LA    R5,MAX_PER_BUFFER              MAXIMUM MEMBERS/BUFFER
         LA    R2,NET_MEMBERS                 I/O AREA ADDRESS
         LA    R3,NETBLOKL                    PREFIX LENGTH
         STH   R3,NET_LENGTH                  SET LENGTH
MEMS0070 DS    0H
         ITRACE ID=READNEXT
         BAL   R4,READ0000                    READ A RECORD
         OC    DXD_VSAM_RC,DXD_VSAM_RC
         BNZ   MEMS0080
         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         BH    MEMS0080                       BEYOND INDEX RECORDS
         CLC   LIB_KEY_SEQ,F1                 BASE INDEX RECORD?
         BNE   MEMS0070                       NO
         ITRACE ID=BUILDMEM,                                           +
               DATA1=LIB_KEY_NAME
         MVC   0(LIB_INDEX_RECORD_LENGTH,R2),LIB_RECORD
         LA    R2,LIB_INDEX_RECORD_LENGTH(R2)
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,NET_LENGTH                LENGTH OF DATA
         LA    R1,LIB_INDEX_RECORD_LENGTH(R1)
         STCM  R1,3,NET_LENGTH                SET UPDATED LENGTH
         BCT   R5,MEMS0070
         MVI   NET_RETURN_CODE,$NET_OK
         OI    DXD_FLAGS,$CONTINUE            SET 'RETURN' FLAG
         B     EXIT0000
MEMS0080 DS    0H
         ITRACE ID=EOF
         MVI   NET_RETURN_CODE,$NET_EOF
         ITRACE ID=ENDREQ
         ENDREQ RPL=DXD_RPL
         ITRACE ID=ENDREQRC,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0000 DS    0H
         ITRACE ID=READ,                                               +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         GET   RPL=DXD_RPL                    READ NEXT RECORD
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         ITRACE ID=DATAREAD,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BR    R4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=CLOSED
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(EMSG02L),EMSG02
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT                      EXITING
         LR    R1,R13                        COPY WORK AREA ADDRESS
         L     R13,4(R13)                    RESTORE REGISTER 13        ASE01670
         LM    R14,R12,12(R13)               RESTORE OTHER REGISTERS    ASE01680
         SR    R15,R15                       GIVE GOOD RETURN CODE      ASE01690
         BR    R14                           RETURN TO CALLER           ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*                                                                    *
*                                                                    *
* ------------------------------------------------------------------ *
DXDSTART       DC    Q(DXDUMEMS)
F1             DC    F'1'

RPLI           RPL   AM=VTAM
RPLL           EQU   *-RPLI

EMSG01         DS    0C
               DC    C'USUBMEMS01E Library '
EMSG01_LIBRARY DC    CL40' '
               DC    C' not found'
EMSG01L        EQU   *-EMSG01
EMSG02         DS    0C
               DC    C'USUBMEMS02E Library is closed'
EMSG02L        EQU   *-EMSG02

         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
*                                                                    *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUMEMS          DSECT
                  LIBSAVE DSECT=NO
DXD_RPL           DS   0F,(RPLL)X
DXD_LIBBLOK_ADDR  DS   A
DXD_VSAM_RC       DS   F
DXD_LIBRARY_NAME  DS   CL8

DXD_FLAGS         DS   X
$CONTINUE         EQU  X'80'

DXD_IO            DS   0F,($MAX_SOURCE_SIZE*2)X
                  ORG  DXD_IO
                  LIBRECD DSECT=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         LIBUSER  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         NETBLOK  DSECT=YES
NET_LIBRARY_NAME  DS   CL8
                  ORG  NET_DATA
NET_MEMBERS       DS   0C
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
$MAX_SOURCE_SIZE EQU 8000
MAX_PER_BUFFER EQU ($MAX_SOURCE_SIZE-NETBLOKL)/LIB_INDEX_RECORD_LENGTH
         COPY REGEQU
         END  USUBMEMS
./ ADD NAME=USUBNQL  0100-09250-09250-0919-00117-00117-00000-SOURCE
         TITLE 'USUBNQL  Enqueue a library'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBNQL                                               *
*                                                                     *
*   We need to know who is using which library and we don't want      *
*   to close a library while it is in use.  When a user begins        *
*   accessing a library, the user interface will issue a "enqueue"    *
*   for the library.  When the user ends their session or chamges     *
*   libraries, the user interface will issue a "dequeue".             *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
USUBNQL  CSECT
USUBNQL  AMODE 31
USUBNQL  RMODE ANY
         USING PSA,R0
         USING USUBNQL,R12                    DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBNQL'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         L     R1,USER_DXD                    WORK AREA BASE ADDRESS
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDUNQL,R13                    DEFINE BASE
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         L     R9,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         L     R8,USER_RPL                    RPL ADDRESS
         USING IFGRPL,R8
         L     R7,USER_RPLX                   RPL EXTENSION ADDRESS
         USING ISTRPL6X,R7
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         MVI   LIB_FUNCTION,$LIB_FUNCTION_ADD_USER
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         MVC   LIB_FUNCTION_LIB_NAME,NET_LIBRARY_NAME
         ST    R10,LIB_FUNCTION_USER           OUR USERBLOK ADDRESS
         LA    R1,LIBFUNC                      PARM BLOCK ADDRESS
NQL0010  DS    0H
         L     R2,COMM_LSUB_REQ                FIRST REQUEST ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT            CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ             ADD OURS TO CHAIN
         BC    4,NQL0010                       TRY AGAIN
         POST  COMM_LSUB_WORK_ECB              WAKE UP LIBRARY SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB
         CLI   LIB_FUNCTION_STATUS,$LIB_FUNCTION_OK
         BE    NQL0020                         YES
         ITRACE ID=ENQFAIL
         MVC   NET_MSG_1,LIB_FUNCTION_MESSAGE
         MVI   NET_RETURN_CODE,$NET_ERROR
         B     EXIT0000                        EXIT
NQL0020  DS    0H
         ITRACE ID=ENQOK
         MVI   NET_RETURN_CODE,$NET_OK
         MVC   USER_LIBRARY,NET_LIBRARY_NAME
EXIT0000 DS    0H
         ITRACE ID=EXIT                        EXITING
         LR    R1,R13                          COPY WORK AREA ADDRESS
         L     R13,4(R13)                      RESTORE REGISTER 13      ASE01670
         LM    R14,R12,12(R13)                 RESTORE OTHER REGISTERS  ASE01680
         SR    R15,R15                         GIVE GOOD RETURN CODE    ASE01690
         BR    R14                             RETURN TO CALLER         ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*                                                                    *
*                                                                    *
* ------------------------------------------------------------------ *
DXDSTART DC   Q(DXDUNQL)
         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUNQL  DSECT
         LIBSAVE  DSECT=NO
         LIBFUNC  DSECT=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         NETBLOK  DSECT=YES
NET_LIBRARY_NAME        DS   CL8
NET_LIBRARY_LENGTH      EQU  *-NET_LIBRARY_NAME
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  USUBNQL
./ ADD NAME=USUBSTAT 0100-09250-09250-0919-00396-00396-00000-SOURCE
         TITLE 'USUBSTAT  Return the status of the LIBRARIAN STC'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBSTAT                                              *
*                                                                     *
*   Returns the users logged-in, status of the libraries, status      *
*   of the LIBRARIAN subtasks.                                        *
*                                                                     *
* ------------------------------------------------------------------- *
USUBSTAT CSECT
USUBSTAT AMODE 31
USUBSTAT RMODE ANY
         USING PSA,R0
         USING USUBSTAT,R12                   DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBSTAT'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         L     R1,USER_DXD                    WORK AREA BASE ADDRESS
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDUSTAT,R13                   DEFINE BASE
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         ITRACE ID=ENTRY
         MVI   DXD_FLAG,0                     RESET FLAGS
         L     R9,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         MVI   NET_RETURN_CODE,$NET_OK
         LA    R8,NET_DATA
         LA    R5,($MAX_SOURCE_SIZE-NETBLOKL)/80 MAX DETAIL LINES
         LA    R4,NETBLOKL                    INITIALIZE LENGTH
         MVI   NET_RETURN_CODE,$NET_OK
         MVC   DXD_ENQ(ENQL),ENQI
         ENQ   MF=(E,DXD_ENQ)
         OI    DXD_FLAG,$ENQ                  SET FLAG
         ICM   R3,15,COMM_USER_CHAIN          FIRST LOGGED-IN USER
         BZ    LIB0000                        EXIT
STAT     USING USERBLOK,R3                    DEFINE NAMED BASE
         USING USER_DETAIL,R8                 DEFINE BASE
         MVC   0(80,R8),COMM_BLANKS
         OC    STAT.USER_CONVERSATION_ID,STAT.USER_CONVERSATION_ID
         BZ    STAT0010
         MVC   0(USER_HEADING_V_L,R8),USER_HEADING_V
         B     STAT0020
STAT0010 DS    0H
         MVC   0(USER_HEADING_I_L,R8),USER_HEADING_I
STAT0020 DS    0H
         LA    R8,80(R8)
         LA    R4,80(R4)
         BCTR  R5,R0                          MINUS 1
STAT0030 DS    0H
         MVC   0(80,R8),COMM_BLANKS
         MVC   USER_DETAIL_USER,STAT.USER_USER_ID
         ZAP   DXD_DATE,STAT.USER_DATE
         AP    DXD_DATE,P1900000
         MVC   USER_DETAIL_DATE,=X'40202020214B202020'
         ED    USER_DETAIL_DATE,DXD_DATE
         UNPK  DXD_UNPACK(7),STAT.USER_TIME(4)
         TR    DXD_UNPACK,HEXCHAR
         MVC   USER_DETAIL_TIME+0(2),DXD_UNPACK+0
         MVC   USER_DETAIL_TIME+3(2),DXD_UNPACK+2
         MVC   USER_DETAIL_TIME+6(2),DXD_UNPACK+4
         MVI   USER_DETAIL_TIME+2,C':'
         MVI   USER_DETAIL_TIME+5,C':'
         UNPK  DXD_UNPACK(9),STAT.USER_TERMINATION_ECB(5)
         TR    DXD_UNPACK,HEXCHAR
         MVC   USER_DETAIL_ECB,DXD_UNPACK
         OC    STAT.USER_CONVERSATION_ID,STAT.USER_CONVERSATION_ID
         BZ    STAT0040
         MVC   USER_DETAIL_LU,STAT.USER_PARTNER_LU
         UNPK  DXD_UNPACK(9),STAT.USER_CONVERSATION_ID(5)
         TR    DXD_UNPACK,HEXCHAR
         MVC   USER_DETAIL_CID,DXD_UNPACK
         B     STAT0050
STAT0040 DS    0H
         MVC   USER_DETAIL_IP_ADDR,USER_IP_ADDRESS
STAT0050 DS    0H
         MVC   USER_DETAIL_LIB,STAT.USER_LIBRARY
         L     R1,STAT.USER_IO
         LA    R14,FUNCTION_TABLE
STAT0060 DS    0H
         CLI   0(R14),X'FF'                   END OF TABLE?
         BE    STAT0070                       YES
         CLC   0(1,R14),NET_FUNCTION-NETBLOK(R1)
         BE    STAT0070
         LA    R14,17(R14)
         B     STAT0060
STAT0070 DS    0H
         MVC   USER_DETAIL_FUNCTION,1(R14)
         LA    R4,80(R4)
         LA    R8,80(R8)
         BCT   R5,STAT0080
         B     EXIT0000
STAT0080 DS    0H
         ICM   R3,15,STAT.USER_NEXT
         BNZ   STAT0030
         DROP  STAT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
LIB0000  DS    0H
         ICM   R3,15,COMM_LIBRARY_CHAIN
         BZ    EXIT0000
LIB0010  DS    0H
         MVC   0(80,R8),COMM_BLANKS
         LA    R4,80(R4)
         LA    R8,80(R8)
         BCT   R5,LIB0020
LIB0020  DS    0H
LIB      USING LIBBLOK,R3
         MVC   0(80,R8),COMM_BLANKS
         MVC   0(LIB_1_LENGTH,R8),LIB_1
         MVC   LIB_1_LIB-LIB_1(L'LIB_1_LIB,R8),LIB.LIB_NAME
         MVC   LIB_1_DESC-LIB_1(L'LIB_1_DESC,R8),LIB.LIB_DESCRIPTION
         LA    R4,80(R4)
         LA    R8,80(R8)
         BCT   R5,LIB0030
         B     EXIT0000
LIB0030  DS    0H
         MVC   0(80,R8),COMM_BLANKS
         MVC   0(LIB_2_LENGTH,R8),LIB_2
         TM    LIB.LIB_STATUS,$LIB_OPEN
         BO    LIB0040
         MVC   LIB_2_STATUS-LIB_2(L'LIB_2_STATUS,R8),STATUS_CLOSED
         B     LIB0050
LIB0040  DS    0H
         MVC   LIB_2_STATUS-LIB_2(L'LIB_2_STATUS,R8),STATUS_OPEN
LIB0050  DS    0H
         MVC   LIB_2_DSN-LIB_2(L'LIB_2_DSN,R8),LIB.LIB_VSAM_DSN
         LA    R4,80(R4)
         LA    R8,80(R8)
         BCT   R5,LIB0060
         B     EXIT0000
LIB0060  DS    0H
         MVC   0(80,R8),COMM_BLANKS
         MVC   0(LIB_3_LENGTH,R8),LIB_3
         L     R1,LIB.LIB_READS
         CVD   R1,DXD_DWORD
         ED    LIB_3_READS-LIB_3(L'LIB_3_READS,R8),DXD_DWORD+4
         L     R1,LIB.LIB_WRITES
         CVD   R1,DXD_DWORD
         ED    LIB_3_WRITES-LIB_3(L'LIB_3_WRITES,R8),DXD_DWORD+4
         L     R1,LIB.LIB_erasES
         CVD   R1,DXD_DWORD
         ED    LIB_3_ERASES-LIB_3(L'LIB_3_ERASES,R8),DXD_DWORD+4
         LA    R4,80(R4)
         LA    R8,80(R8)
         BCT   R5,LIB0070
         B     EXIT0000
LIB0070  DS    0H
         MVC   0(80,R8),COMM_BLANKS
         MVC   0(LIB_4_LENGTH,R8),LIB_4
         L     R1,LIB.LIB_CHECK_IN
         CVD   R1,DXD_DWORD
         ED    LIB_4_CHECK_IN-LIB_4(L'LIB_4_CHECK_IN,R8),DXD_DWORD+4
         L     R1,LIB.LIB_CHECK_OUT
         CVD   R1,DXD_DWORD
         ED    LIB_4_CHECK_OUT-LIB_4(L'LIB_4_CHECK_OUT,R8),DXD_DWORD+4
         L     R1,LIB.LIB_NEW
         CVD   R1,DXD_DWORD
         ED    LIB_4_NEW-LIB_4(L'LIB_4_NEW,R8),DXD_DWORD+4
         LA    R4,80(R4)
         LA    R8,80(R8)
         BCT   R5,LIB0080
LIB0080  DS    0H
         MVC   0(80,R8),COMM_BLANKS
         MVC   0(LIB_5_LENGTH,R8),LIB_5
         L     R1,LIB.LIB_VIEW
         CVD   R1,DXD_DWORD
         ED    LIB_5_VIEW-LIB_5(L'LIB_5_VIEW,R8),DXD_DWORD+4
         L     R1,LIB.LIB_UPDATE
         CVD   R1,DXD_DWORD
         ED    LIB_5_UPDATE-LIB_5(L'LIB_5_UPDATE,R8),DXD_DWORD+4
         L     R1,LIB.LIB_DELETE
         CVD   R1,DXD_DWORD
         ED    LIB_5_DELETE-LIB_5(L'LIB_5_DELETE,R8),DXD_DWORD+4
         LA    R4,80(R4)
         LA    R8,80(R8)
         BCT   R5,LIB0090
         B     EXIT0000
LIB0090  DS    0H
         ICM   R3,15,LIB.LIB_NEXT
         BNZ   LIB0010
         DROP  LIB

EXIT0000 DS    0H
         STCM  R4,3,NET_LENGTH                SET LENGTH
         TM    DXD_FLAG,$ENQ                  ENQ SET?
         BNO   EXIT0010                       NO
         MVC   DXD_ENQ(ENQL),ENQI
         DEQ   MF=(E,DXD_ENQ)
         NI    DXD_FLAG,255-$ENQ
EXIT0010 DS    0H
         ITRACE ID=EXIT                       EXITING MODULE
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
DXDSTART       DC    Q(DXDUSTAT)
ENQI           ENQ   (QNAME,RNAME,E,,STEP),RET=NONE,MF=L
ENQL           EQU   *-ENQI
QNAME          DC    CL8'LIB'
RNAME          DC    CL8'COMMUSER'
P1900000       DC    P'1900000'

HEXCHAR        EQU   *-C'0'
               DC    C'0123456789ABCDEF'

STATUS_OPEN    DC    CL7'OPEN'
STATUS_CLOSED  DC    CL7'CLOSED'

USER_HEADING_V DS    0C
               DC    CL8'User'
               DC    C' '
               DC    CL17'Log in date  time'
               DC    C' '
               DC    CL8'Term ECB'
               DC    C' '
               DC    CL8'LU name'
               DC    C' '
               DC    CL8'  CID'
               DC    C' '
               DC    CL8'Library'
               DC    C' '
               DC    CL16'Last function'
USER_HEADING_V_L EQU   *-USER_HEADING_V
USER_HEADING_I DS    0C
               DC    CL8'User'
               DC    C' '
               DC    CL17'Log in date  time'
               DC    C' '
               DC    CL8'Term ECB'
               DC    C' '
               DC    CL17' IP Address'
               DC    C' '
               DC    CL8'Library'
               DC    C' '
               DC    CL16'Last function'
USER_HEADING_I_L EQU   *-USER_HEADING_I

LIB_1          DS    0C
               DC    C'Library: '
LIB_1_LIB      DC    CL8' '
               DC    C'  Desc: '
LIB_1_DESC     DC    CL50' '
LIB_1_LENGTH   EQU   *-LIB_1

LIB_2          DS    0C
               DC    C'Status: '
LIB_2_STATUS   DC    CL7' '
               DC    C'    DSN: '
LIB_2_DSN      DC    CL44' '
LIB_2_LENGTH   EQU   *-LIB_2

LIB_3          DS    0C
               DC    CL10'Reads:'
LIB_3_READS    DC    X'40206B2020206B202120'
               DC    CL5' '
               DC    CL10'Writes:'
LIB_3_WRITES   DC    X'40206B2020206B202120'
               DC    CL5' '
               DC    CL10'Erases:'
LIB_3_ERASES   DC    X'40206B2020206B202120'
LIB_3_LENGTH   EQU   *-LIB_3

LIB_4          DS    0C
               DC    CL10'Check in:'
LIB_4_CHECK_IN DC    X'40206B2020206B202120'
               DC    CL5' '
               DC    CL10'Check out:'
LIB_4_CHECK_OUT DC   X'40206B2020206B202120'
               DC    CL5' '
               DC    CL10'New:'
LIB_4_NEW      DC    X'40206B2020206B202120'
LIB_4_LENGTH   EQU   *-LIB_4

LIB_5          DS    0C
               DC    CL10'View:'
LIB_5_VIEW     DC    X'40206B2020206B202120'
               DC    CL5' '
               DC    CL10'Update:'
LIB_5_UPDATE   DC    X'40206B2020206B202120'
               DC    CL5' '
               DC    CL10'Delete:'
LIB_5_DELETE   DC    X'40206B2020206B202120'
LIB_5_LENGTH   EQU   *-LIB_5

FUNCTION_TABLE DS 0C
         DC   AL1($NET_IDENTIFY_USER),CL16'Identify user'
         DC   AL1($NET_GET_LIBS),CL16'Get libraries'
         DC   AL1($NET_GET_MEMBERS),CL16'Get members'
         DC   AL1($NET_CHECK_IN_AUTH),CL16'Check in auth'
         DC   AL1($NET_CHECK_IN_SOURCE),CL16'Check in source'
         DC   AL1($NET_CHECK_NEW_AUTH),CL16'Check new auth'
         DC   AL1($NET_CHECK_OUT_AUTH),CL16'Check out auth'
         DC   AL1($NET_CHECK_OUT_SOURCE),CL16'Check out source'
         DC   AL1($NET_CHECK_VIEW_AUTH),CL16'Check view auth'
         DC   AL1($NET_VIEW_SOURCE),CL16'View source'
         DC   AL1($NET_CHECK_DESC_AUTH),CL16'Check desc auth'
         DC   AL1($NET_SEND_DESC),CL16'Send description'
         DC   AL1($NET_GET_DESC),CL16'Get description'
         DC   AL1($NET_GET_RECORDS),CL16'Get records'
         DC   AL1($NET_SEND_RECORDS),CL16'Send records'
         DC   AL1($NET_ENQUE_LIB),CL16'Enqueue a lib'
         DC   AL1($NET_DEQ_LIB),CL16'Dequeue a lib'
         DC   AL1($NET_CHECK_DEL_AUTH),CL16'Delete a member'
         DC   AL1($NET_CONFIRM_CHECK_OUT),CL16'Confirm check out'
         DC   AL1($NET_ABORT_CHECK_OUT),CL16'Abort check out'
         DC   AL1($NET_GET_STATUS),CL16'Get STC status'
         DC   AL1($NET_CHECK_IN_AUTH),CL16'Check ADMIN auth'
         DC   AL1($NET_SEND_ADMIN),CL16'Send ADMIN'
         DC   AL1($NET_CLOSE),CL16'Close'
         DC   AL1($NET_UNDO),CL16'Undo'
         DC   X'FF',CL16'Unknown'
         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
*                                                                    *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUSTAT   DSECT
           LIBSAVE DSECT=NO
DXD_DWORD  DS      D
DXD_ENQ    DS      0F,(ENQL)X
DXD_DATE   DS      PL4
DXD_UNPACK DS      XL10
DXD_FLAG   DS      X
$ENQ       EQU     X'80'
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
USER_DETAIL          DSECT
USER_DETAIL_USER     DS  CL8
                     DS  X
USER_DETAIL_DATE     DS  CL8
                     DS  X
USER_DETAIL_TIME     DS  CL8
                     DS  X
USER_DETAIL_ECB      DS  CL8
                     DS  X
USER_DETAIL_LU       DS  CL8
                     DS  X
USER_DETAIL_CID      DS  CL8
                     ORG USER_DETAIL_LU
USER_DETAIL_IP_ADDR  DS  CL15
                     ORG
                     DS  X
USER_DETAIL_LIB      DS  CL8
                     DS  X
USER_DETAIL_FUNCTION DS  CL16
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         NETBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         COPY REGEQU
$MAX_SOURCE_SIZE EQU 8000
         END  USUBSTAT
./ ADD NAME=USUBUMD  0100-09250-09250-0919-00338-00338-00000-SOURCE
         TITLE 'USUBUMD  Update member documentation data'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBUMD                                               *
*                                                                     *
*   Update member documentation data                                  *
*                                                                     *
* ------------------------------------------------------------------- *
USUBUMD  CSECT
USUBUMD  AMODE 31
USUBUMD  RMODE ANY
         USING PSA,R0
         USING USUBUMD,R12                    DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBUMD'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         L     R1,USER_DXD                    WORK AREA ADDRESS
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDUUMD,R13                    DEFINE BASE
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         MVC   DXD_RPL(RPLL),RPLI
         XC    DXD_LIBBLOK_ADDR,DXD_LIBBLOK_ADDR
DOC0010  DS    0H
         ITRACE ID=ENTRY
         L     R9,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R9                     DEFINE BASE
         L     R8,USER_RPL                    RPL ADDRESS
         USING IFGRPL,R8
         L     R7,USER_RPLX                   RPL EXTENSION ADDRESS
         USING ISTRPL6X,R7
         MVI   NET_RETURN_CODE,$NET_OK
         MVC   DXD_LIBRARY_NAME,NET_LIBRARY_NAME
         MVC   DXD_MEM_NAME,NET_MEM_NAME
         MVC   DXD_MEM_VER,NET_MEM_VER
         LA    R1,NET_MSG_1                   FIRST MESSAGE
         LA    R2,5                           NUMBER OF MESSAGES
DOC0020  DS    0H
         MVC   0(L'NET_MSG_1,R1),COMM_BLANKS
         LA    R1,L'NET_MSG_1(R1)
         BCT   R2,DOC0020
         ITRACE ID=LIBRARY,                                            +
               DATA1=DXD_LIBRARY_NAME
         ICM   R6,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY
         USING LIBBLOK,R6                     DEFINE BASE
         BZ    DOC0040
DOC0030  DS    0H
         ITRACE ID=FINDLIB,                                            +
               DATA1=LIB_NAME
         CLC   DXD_LIBRARY_NAME,LIB_NAME
         BE    DOC0050
         ICM   R6,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   DOC0030
DOC0040  DS    0H
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(EMSG01L),EMSG01
         MVC   NET_MSG_1+(EMSG01_LIBRARY-EMSG01)(L'EMSG01_LIBRARY),DXD_+
               LIBRARY_NAME
         B     EXIT0000                       EXIT
DOC0050  DS    0H
         ITRACE ID=LIBFOUND,                                           +
               RDATA1=R6
         ST    R6,DXD_LIBBLOK_ADDR            SAVE LIBBLOK ADDRESS
* ------------------------------------------------------------------- *
*     Verify that the library is OPEN.                                *
* ------------------------------------------------------------------- *
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BNO   ERR0010                        NO
* ------------------------------------------------------------------- *
*     Delete the existing documentation/comments                      *
* ------------------------------------------------------------------- *
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,DXD_MEM_NAME
         MVC   LIB_KEY_VERSION,DXD_MEM_VER
         MVC   LIB_KEY_SEQ,F1                 INIT SEQUENCE NUMBER
         ITRACE ID=DELDOC                     DELETE THE EXISTING DOC
DOC0060  DS    0H
         BAL   R4,READ0000                    READ WITH UPDATE
         CLI   DXD_VSAM_RC+3,X'00'            FOUND?
         BNE   DOC0070                        NO
         BAL   R4,ERASE000                    DELETE THE RECORD
         B     DOC0060
DOC0070  DS    0H
         ITRACE ID=DELDONE
         BAL   R4,CLOSET00                    ISSUE CLOSET
* ------------------------------------------------------------------- *
*     Write the new documentation/comments                            *
* ------------------------------------------------------------------- *
         ITRACE ID=NEWDOC
         LA    R1,NET_MEM_DOC-NETBLOK
         LA    R2,NET_MEM_DOC
         LH    R3,NET_LENGTH                  LENGTH OF DATA
         SH    R3,=Y(NET_MEM_DOC-NETBLOK)
         ITRACE ID=DOC_LEN,                                            +
               RDATA1=R3
         LTR   R3,R3
         BZ    DOC0090                        NO DATA
         MVC   LIB_KEY_SEQ,F1
DOC0080  DS    0H
         MVC   LIB_DATA,0(R2)                 COPY DATA
         BAL   R4,PUT0000                     WRITE THE RECORD
         LA    R2,L'LIB_DATA(R2)              NEXT IN I/O BUFFER
         SH    R3,=Y(L'LIB_DATA)              MINUS LENGTH USED
         BNZ   DOC0080
DOC0090  DS    0H
         ITRACE ID=DONE
         BAL   R4,CLOSET00                    ISSUE A CLOSET
         LA    R1,NETBLOKL
         STCM  R1,3,NET_LENGTH                SET LENGTH
         MVI   NET_RETURN_CODE,$NET_OK        SET RETURN CODE
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ICM   R1,15,LIB_KEY_SEQ
         LA    R1,1(R1)                       PLUS 1
         STCM  R1,15,LIB_KEY_SEQ
         ITRACE ID=READUPDT,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,UPD)
         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PUT0000  DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ICM   R1,15,LIB_KEY_SEQ
         LA    R1,1(R1)                       PLUS 1
         STCM  R1,15,LIB_KEY_SEQ
         ITRACE ID=PUT,                                                +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_WRITES                  NUMBER OF WRITES
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_WRITES                  SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         LA    R5,LIB_INDEX_RECORD_LENGTH
         MVC   0(RPLL,R2),RPLI
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               RECLEN=(R5),                                            +
               OPTCD=(KEY,DIR,SYN,MVE)
         PUT   RPL=DXD_RPL
         ST    R15,DXD_VSAM_RC
         ITRACE ID=PUTRC,                                              +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERASE000 DS    0H
         ITRACE ID=ERASE
         STM   R0,R15,DXD_IO_SAVE
         ICM   R1,15,LIB_ERASES
         LA    R1,1(,R1)
         STCM  R1,15,LIB_ERASES
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,UPD)
         ERASE RPL=DXD_RPL                    ERASE (DELETE THE RECORD)
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=ERASERC,                                            +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK-IFGRPL(R2)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLOSET00 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=CLOSET,                                             +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         ITRACE ID=ENDREQ
         ENDREQ RPL=DXD_RPL
         ITRACE ID=ENDREQRC,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID
         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET
         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK
CLOSET10 DS    0H
         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN
         BC    4,CLOSET10                     TRY AGAIN
         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT FOR SUBTASK
         NI    DXD_FLAGS,255-$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R4
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=CLOSED
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(EMSG02L),EMSG02
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000  DS   0H
         TM    DXD_FLAGS,$NEED_CLOSET
         BNO   EXIT0010
         BAL   R4,CLOSET00
EXIT0010 DS    0H
         ITRACE ID=EXIT                       EXITING
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
DXDSTART       DC    Q(DXDUUMD)
F1             DC    F'1'
RPLI           RPL   AM=VTAM
RPLL           EQU   *-RPLI

EMSG01         DS    0C
               DC    C'USUBUMD01E Library '
EMSG01_LIBRARY DC    CL40' '
               DC    C' not found'
EMSG01L        EQU   *-EMSG01
EMSG02         DS    0C
               DC    C'USUBUMD02E Library is closed'
EMSG02L        EQU   *-EMSG02

LIBFUNC_ID     DC    CL8'LIBFUNC'
         LTORG
* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUUMD          DSECT
                 LIBSAVE DSECT=NO
DXD_IO_SAVE      DS      16F
                 LIBFUNC DSECT=NO
DXD_RPL          DS      0F,(RPLL)X
DXD_LIBBLOK_ADDR DS      A
DXD_LIBRARY_NAME DS      CL8
DXD_MEM_NAME     DS      CL8
DXD_MEM_VER      DS      XL2
DXD_FLAGS        DS      X
$NEED_CLOSET     EQU     X'80'
DXD_VSAM_RC      DS      F
DXD_IO           DS      0F,($MAX_SOURCE_SIZE*2)X
                 ORG     DXD_IO
                 LIBRECD DSECT=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         NETBLOK DSECT=YES
NET_LIBRARY_NAME          DS   CL8
NET_MEM_NAME              DS   CL8
NET_MEM_VER               DS   XL2
NET_MEM_DOC               DS   0C
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
$MAX_SOURCE_SIZE  EQU  8000
         COPY REGEQU
         END  USUBUMD
./ ADD NAME=USUBUNDO 0100-09250-09250-0919-00289-00289-00000-SOURCE
         TITLE 'USUBUNDO  UNDO check-out status'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBUNDO                                              *
*                                                                     *
* ------------------------------------------------------------------- *
USUBUNDO CSECT
USUBUNDO AMODE 31
USUBUNDO RMODE ANY
         USING PSA,R0
         USING USUBUNDO,R12,R9                DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBUNDO'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         LA    R9,2048(R12)
         LA    R9,2048(R9)
         L     R1,USER_DXD                    WORK AREA BASE
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDUUNDO,R13                   DEFINE BASE
         USING IFGRPL,DXD_RPL
         CLC   DXDID,MODID                    WORK AREA INITIALIZED?
         BE    INIT0010
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
INIT0010 DS    0H
         ITRACE ID=UNDO
         L     R7,USER_IO
         USING NETBLOK,R7
         MVI   NET_RETURN_CODE,$NET_OK        INITIALIZE RETURN CODE
         L     R8,COMM_LIBRARY_CHAIN
         USING LIBBLOK,R8
INIT0020 DS    0H
         CLC   LIB_NAME,NET_LIB_NAME          CORRECT LIBRARY?
         BE    INIT0030                       YES
         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   INIT0020                       LOOP
         B     ERR0010
INIT0030 DS    0H
         ITRACE ID=LIBFOUND,                                           +
               RDATA1=R8
         TM    LIB_STATUS,$LIB_OPEN           LIBRARY OPEN?
         BNO   ERR0020
         ST    R8,DXD_LIB                     SAVE LIBRARY BLOCK ADDR
* ------------------------------------------------------------------- *
*        Read index record                                            *
* ------------------------------------------------------------------- *
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,NET_MEM_NAME
         MVC   LIB_KEY_VERSION,NET_MEM_VER
         MVC   LIB_KEY_SEQ,F1                 SEQ OF INDEX RECORD
         ITRACE ID=READINDX,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         MVC   DXD_RPL(RPLL),RPLI
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,LIB_RECORD
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=LIB_INDEX_RECORD_LENGTH,                        +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,UPD)
         GET   RPL=DXD_RPL                    READ WITH UPDATE INTENT
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0030                        NO
* ------------------------------------------------------------------- *
*        Member does exist, check authorization                       *
* ------------------------------------------------------------------- *
         MVC   AUTH_EYE,AUTHID                EYE CATCHER
         MVC   AUTH_USER,USER_USER_ID         USER ID
         MVC   AUTH_LIB,NET_LIB_NAME          LIBRARY NAME
         MVC   AUTH_MEMBER,NET_MEM_NAME       MEMBER NAME
         MVC   AUTH_VERSION,NET_MEM_VER       VERSION
         MVI   AUTH_FUNCTION,$AUTH_CHECK_IN
         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS
         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER
         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER
         ITRACE ID=CALLAUTH
         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS
         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POIN
         BALR  R14,R15                        LINK TO AUTHORIZATION
         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?
         BNE   UNDO0020                       NO
         ITRACE ID=AUTHOK
* ------------------------------------------------------------------- *
*        Reset status                                                 *
* ------------------------------------------------------------------- *
         ICM   R1,15,LIB_CHECK_IN             NUMBER OF CHECK-INS
         LA    R1,1(R1)                       PLUS 1
         STCM  R1,15,LIB_CHECK_IN             SAVE TOTAL
         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN
* ------------------------------------------------------------------- *
*        Update index record                                          *
* ------------------------------------------------------------------- *
         ITRACE ID=RE_WRITE
         L     R1,LIB_WRITES                  NUMBER OF WRITES
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_WRITES                  SAVE TOTAL
         PUT   RPL=DXD_RPL
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0040                        NO
* ------------------------------------------------------------------- *
*        Log the activity                                             *
* ------------------------------------------------------------------- *
         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE
         USING PRTBLOK,R1                     COPY DATA
         XC    PRTBLOK(PRTBLOKL),PRTBLOK
         MVC   PRTEYE,PRTID                   IDENTIFY CONTROL BLOCK
         MVI   PRTCC,C' '                     INITIALIZE PRINT
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   PRTMSGID(MSG03L),MSG03
         MVC   PRTMSGID+(MSG03_USER-MSG03)(L'MSG03_USER),USER_USER_ID
         MVC   PRTMSGID+(MSG03_LIBRARY-MSG03)(L'MSG03_LIBRARY),LIB_NAME
         MVC   PRTMSGID+(MSG03_DSN-MSG03)(L'MSG03_DSN),LIB_VSAM_DSN
         MVC   PRTMSGID+(MSG03_MEMBER-MSG03)(L'MSG03_MEMBER),NET_MEM_NA+
               ME
         SR    R0,R0
         ICM   R0,3,NET_MEM_VER
         CVD   R0,COMMDWRD                    CONVERT TO DECIMAL
         ED    PRTMSGID+(MSG03_VERSION-MSG03)(L'MSG03_VERSION),COMMDWRD+
               +5
UNDO0010 DS    0H
         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE
         ST    R14,PRTNEXT-PRTBLOK(R1)
         CS    R14,R1,COMM_PRINT_REQ
         BC    4,UNDO0010
         POST  COMM_PRINT_WORK_ECB
         B     UNDO0030
* ------------------------------------------------------------------- *
*        NOT AUTHORIZED                                               *
* ------------------------------------------------------------------- *
UNDO0020 DS    0H
         ITRACE ID=NOTAUTH
         MVC   NET_MSG_1,AUTH_MESSAGE_1
         MVC   NET_MSG_2,AUTH_MESSAGE_2
         MVC   NET_MSG_3,AUTH_MESSAGE_3
         MVC   NET_MSG_4,AUTH_MESSAGE_4
         MVC   NET_MSG_5,AUTH_MESSAGE_5
         MVI   NET_RETURN_CODE,$NET_ERROR
* ------------------------------------------------------------------- *
*        Flush the buffer (CLOSET)                                    *
* ------------------------------------------------------------------- *
UNDO0030 DS    0H
         ITRACE ID=FLUSH
         ITRACE ID=ENDREQ
         ENDREQ RPL=DXD_RPL
         ITRACE ID=ENDREQRC,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID
         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET
         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK
UNDO0040 DS    0H
         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN
         BC    4,UNDO0040                     TRY AGAIN
         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT FOR CLOSET
         B     EXIT0000                       DONE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   NET_MSG_1(EMSG01L),EMSG01
         MVI   NET_RETURN_CODE,$NET_ERROR
         B     EXIT0000
ERR0020  DS    0H
         MVC   NET_MSG_1(EMSG02L),EMSG02
         MVI   NET_RETURN_CODE,$NET_ERROR
         B     EXIT0000
ERR0030  DS    0H
         ITRACE ID=READFAIL,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         DC    H'0'
ERR0040  DS    0H
         ITRACE ID=PUT_FAIL,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT                       EXITING PRINT MODULE
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
DXDSTART          DC       Q(DXDUUNDO)
VLIBAUTH          DC       V(LIBAUTH)
F1                DC       F'1'
AUTHID            DC       CL8'AUTHREQ'
LIBFUNC_ID        DC       CL8'LIBFUNC'
PRTID             DC       CL8'PRTBLOK'
RPLI              RPL      AM=VTAM
RPLL              EQU      *-RPLI

EMSG01            DC       C'USUBUNDO01E Library not found'
EMSG01L           EQU      *-EMSG01

EMSG02            DC       C'USUBUNDO02E Library is CLOSED'
EMSG02L           EQU      *-EMSG02

MSG03             DC       C'USUBUNDU03I ''UNDO'' by '
MSG03_USER        DC       CL8' '
                  DC       C' on '
MSG03_LIBRARY     DC       CL8' '
                  DC       CL2' '
MSG03_DSN         DC       CL44' '
                  DC       C' member '
MSG03_MEMBER      DC       CL8' '
MSG03_VERSION     DC       X'402020202120'
MSG03L            EQU      *-MSG03

                  LTORG

* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUUNDO          DSECT
                  LIBSAVE  DSECT=NO
DXD_RC            DS       H
DXD_VSAM_RC       DS       F
DXD_LIB           DS       F
DXD_RPL           DS       0F,(RPLL)X
                  AUTHBLOK DSECT=NO
                  LIBFUNC  DSECT=NO
                  LIBRECD  DSECT=NO
                  LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
                  PRTBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
                  USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
                   NETBLOK DSECT=YES
NET_LIB_NAME       DS      CL8
NET_MEM_NAME       DS      CL8
NET_MEM_VER        DS      XL2
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         COPY REGEQU
         END  USUBUNDO
./ ADD NAME=USUBVER  0100-09250-09250-0919-00568-00568-00000-SOURCE
         TITLE 'USUBVER  Create a new version of a member'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBVER                                               *
*                                                                     *
*                                                                     *
*  Create new version of an existing member.                          *
*                                                                     *
*  New versions are counted in the statistics the same as new         *
*  members.                                                           *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
USUBVER  CSECT
USUBVER  AMODE 31
USUBVER  RMODE ANY
         USING PSA,R0
         USING USUBVER,R12,R9                 DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBVER'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         LA    R9,2048(R12)
         LA    R9,2048(R9)
         L     R1,USER_DXD                    WORK AREA BASE
         A     R1,DXDSTART                    PLUS DISPLACEMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                        SAVE WORK AREA ADDRESS
         USING DXDUVER,R13                   DEFINE BASE
         USING IFGRPL,DXD_RPL
         CLC   DXDID,MODID                   WORK AREA INITIALIZED?
         BE    INIT0010
         MVC   DXDID,MODID                   IDENTIFY WORK AREA OWNER
         MVC   PRTEYE,PRTID                  IDENTIFY CONTROL BLOCK
         MVI   PRTCC,C' '                    INITIALIZE PRINT
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
         MVC   DXD_RPL(RPLL),RPLI
INIT0010 DS    0H
         L     R7,USER_IO                    I/O AREA ADDRESS
         USING NETBLOK,R7                    DEFINE BASE
         ITRACE ID=ENTRY,                                              +
               DATA1=NET_FUNCTION,                                     +
               DATA2=NET_DATA
         MVC   DXD_LIB_NAME,NET_LIB_NAME
         MVC   DXD_MEM_NAME,NET_MEM_NAME
         MVC   NET_MSG_1,AUTH_MESSAGE_1
         MVC   NET_MSG_2,AUTH_MESSAGE_2
         MVC   NET_MSG_3,AUTH_MESSAGE_3
         MVC   NET_MSG_4,AUTH_MESSAGE_4
         MVC   NET_MSG_5,AUTH_MESSAGE_5
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0020 DS    0H
         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK
         BZ    ERR0040                        NO LIBRARIES
         USING LIBBLOK,R8                     DEFINE BASE
INIT0030 DS    0H
         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?
         BE    INIT0040                       YES
         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   INIT0030
         B     ERR0050                        LIBRARY NOT FOUND
INIT0040 DS    0H
         ITRACE ID=LIBFOUND,                                           +
               RDATA1=R8
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BNO   ERR0060                        NO
         ST    R8,DXD_LIB                     SAVE ADDRESS
* ------------------------------------------------------------------- *
*                                                                     *
*     Verify that the user has proper authorization.                  *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER
         MVC   AUTH_USER,USER_USER_ID         COPY USER ID
         MVC   AUTH_LIB,NET_LIB_NAME          COPY LIBRARY NAME
         MVC   AUTH_MEMBER,NET_MEM_NAME
         MVI   AUTH_FUNCTION,$AUTH_CHECK_VERSION
         LA    R1,AUTHBLOK
         L     R15,VLIBAUTH
         BALR  R14,R15
         CLI   AUTH_RETURN_CODE,$AUTH_OK
         BNE   ERR0010
* ------------------------------------------------------------------- *
*                                                                     *
*     Determine the highest version of the member that currently      *
*     exists.                                                         *
*                                                                     *
* ------------------------------------------------------------------- *
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,NET_MEM_NAME
         MVC   LIB_KEY_VERSION,H1
         MVC   LIB_KEY_SEQ,F1
         ITRACE ID=READ
INIT0050 DS    0H
         BAL   R6,READ0000                    READ INDEX RECORD
         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?
         BNE   INIT0060                       NO
         MVC   DXD_HIGH_VERSION,LIB_KEY_VERSION
         ICM   R1,3,LIB_KEY_VERSION           SEQUENCE NUMBER
         LA    R1,1(R1)                       PLUS 1
         STCM  R1,3,LIB_KEY_VERSION           UPDATE THE NUMBER
         B     INIT0050                       READ THE NEXT VERSION
INIT0060 DS    0H
         ITRACE ID=HIGHVER,                                            +
               DATA1=DXD_HIGH_VERSION
         CLC   LIB_KEY_VERSION,H1             VERSION 1?
         BE    ERR0020                        .. MEMBER DOES NOT EXIST
* ------------------------------------------------------------------- *
*                                                                     *
*        The member does exist.                                       *
*                                                                     *
*        Copy the versions "down" one version, one at a time.         *
*                                                                     *
*    DXD_HIGH_VERSION will be the highest version number that already *
*    exists.                                                          *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   DXD_NEW_VERSION,LIB_KEY_VERSION
         MVC   NET_NEW_VERSION,LIB_KEY_VERSION
         MVC   DXD_CURRENT_VERSION,DXD_HIGH_VERSION
* ------------------------------------------------------------------- *
*                                                                     *
*    First delete the 'new' version if it exists                      *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0000 DS    0H
         ITRACE ID=DELETE,                                             +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_VERSION,DXD_NEW_VERSION
         MVC   LIB_KEY_SEQ,F1                 SET SEQUENCE NUMBER
PROC0010 DS    0H
         BAL   R6,READ1000                    READ
         CLI   DXD_VSAM_RC+3,X'00'            FOUND?
         BNE   PROC0020                       NO
         BAL   R6,ERASE000                    ERASE
         ICM   R1,15,LIB_KEY_SEQ
         LA    R1,1(R1)
         STCM  R1,15,LIB_KEY_SEQ
         B     PROC0010
PROC0020 DS    0H
         BAL   R6,CLOSET00                    ISSUE CLOSET
         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         BE    PROC0030
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         MVC   LIB_KEY_SEQ,F1                 RESET SEQUENCE NUMBER
         B     PROC0010
* ------------------------------------------------------------------- *
*     Old version deleted.                                            *
* ------------------------------------------------------------------- *
PROC0030 DS    0H
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_SEQ,F1                 RESET SEQUENCE NUMBER
* ------------------------------------------------------------------- *
*     Copy versions                                                   *
* ------------------------------------------------------------------- *
PROC0040 DS    0H
         ITRACE ID=COPY,                                               +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         MVC   LIB_KEY_VERSION,DXD_CURRENT_VERSION
         BAL   R6,READ0000                    READ A BLOCK FROM LIBRARY
         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?
         BNE   PROC0060                       NO
         SHOWCB RPL=DXD_RPL,                  SHOW DATA FROM RPL       +
               FIELDS=(RECLEN),               .. REQUEST RECORD LENGTH +
               AREA=DXD_RECLEN,               .. AREA FOR RETURNED DATA+
               LENGTH=4                       .. LENGTH OF 'RECLEN'
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0030                        NO
         BAL   R6,CLOSET00
         MVC   LIB_KEY_VERSION,DXD_NEW_VERSION
         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         BNE   PROC0050                       NO
         TM    DXD_FLAGS,$NEW_DATE            SET NEW DATE?
         BO    PROC0050                       YES
         OI    DXD_FLAGS,$NEW_DATE            SET FLAG
         TIME  DEC                            ASK SYSTEM FOR TIME/DATE
         ITRACE ID=NEW_TIME,                  TRACE IT                 +
               RDATA1=R0,                                              +
               RDATA2=R1
         STCM  R0,15,LIB_INDEX_CREATE_TIME    SET CREATE TIME
         STCM  R1,15,LIB_INDEX_CREATE_DATE    SET CREATE DATE
PROC0050 DS    0H
         BAL   R6,PUT0000
         ITRACE ID=NEXTSEQ,                                            +
               DATA1=LIB_KEY_SEQ
         ICM   R1,15,LIB_KEY_SEQ
         LA    R1,1(R1)
         STCM  R1,15,LIB_KEY_SEQ
         B     PROC0040
* ------------------------------------------------------------------- *
*     Copy for this version done..                                    *
* ------------------------------------------------------------------- *
PROC0060 DS    0H
         ITRACE ID=COPYDONE
         BAL   R6,CLOSET00                    ISSUE CLOSET
         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         BE    PROC0070
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         MVC   LIB_KEY_SEQ,F1                 RESET SEQUENCE NUMBER
         B     PROC0040
PROC0070 DS    0H
         ITRACE ID=NEXTVER
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,DXD_CURRENT_VERSION
         CH    R1,H1                          AT VERSION 1?
         BE    PROC0080                       YES
         BCTR  R1,R0                          MINUS 1
         STCM  R1,3,DXD_CURRENT_VERSION
         ICM   R1,3,DXD_NEW_VERSION
         BCTR  R1,R0                          MINUS 1
         STCM  R1,3,DXD_NEW_VERSION
         MVC   LIB_KEY_SEQ,F1
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         B     PROC0040
PROC0080 DS    0H
         ITRACE ID=ALLDONE
         ICM   R1,15,LIB_NEW
         LA    R1,1(,R1)
         STCM  R1,15,LIB_NEW
         MVI   NET_RETURN_CODE,$NET_OK
         LA    R1,$NET_VERSION_LENGTH
         STCM  R1,3,NET_LENGTH
         MVC   PRTMSGID(MSG04L),MSG04
         MVC   PRTMSGID+(MSG04_MEMBER_NAME-MSG04)(L'MSG04_MEMBER_NAME),+
               DXD_MEM_NAME
         MVC   PRTMSGID+(MSG04_LIB_DSN-MSG04)(L'MSG04_LIB_DSN),LIB_VSAM+
               _DSN
         SR    R1,R1
         ICM   R1,3,NET_NEW_VERSION
         CVD   R1,DXD_DWORD
         ED    PRTMSGID+(MSG04_VERSION-MSG04)(L'MSG04_VERSION),DXD_DWOR+
               D+5
         MVC   PRTMSGID+(MSG04_USER-MSG04)(L'MSG04_USER),USER_USER_ID
         BAL   R6,PRT0000
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=READ,                                               +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE)
         GET   RPL=DXD_RPL                    READ
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ1000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=READUPDT,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,UPD)
         GET   RPL=DXD_RPL                    READ
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PUT0000  DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=PUT,                                                +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_WRITES                  NUMBER OF WRITES
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_WRITES                  SAVE TOTAL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         L     R5,DXD_RECLEN
         MVC   0(RPLL,R2),RPLI
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               RECLEN=(R5),                                            +
               OPTCD=(KEY,DIR,SYN,MVE)
         PUT   RPL=DXD_RPL
         ST    R15,DXD_VSAM_RC
         ITRACE ID=PUTRC,                                              +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERASE000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=ERASE,                                              +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         ICM   R1,15,LIB_ERASES
         LA    R1,1(,R1)
         STCM  R1,15,LIB_ERASES
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE,UPD)
         ERASE RPL=DXD_RPL                    ERASE (DELETE THE RECORD)
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=ERASERC,                                            +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK-IFGRPL(R2)
         OI    DXD_FLAGS,$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CLOSET00 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=CLOSET,                                             +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         ITRACE ID=ENDREQ
         ENDREQ RPL=DXD_RPL
         ITRACE ID=ENDREQRC,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         MVC   LIB_FUNCTION_EYE,LIBFUNC_ID
         MVI   LIB_FUNCTION,$LIB_FUNCTION_CLOSET
         MVC   LIB_FUNCTION_LIB_NAME,LIB_NAME
         XC    LIB_FUNCTION_ECB,LIB_FUNCTION_ECB
         LA    R1,LIBFUNC                     OPEN/CLOSE PARM BLOCK
CLOSET10 DS    0H
         L     R2,COMM_LSUB_REQ               FIRST BLOCK ON CHAIN
         ST    R2,LIB_FUNCTION_NEXT           CHAIN TO OUR BLOCK
         CS    R2,R1,COMM_LSUB_REQ            ADD OURS TO CHAIN
         BC    4,CLOSET10                     TRY AGAIN
         POST  COMM_LSUB_WORK_ECB             WAKE UP SUBTASK
         WAIT  1,ECB=LIB_FUNCTION_ECB         WAIT ON SUBTASK
         NI    DXD_FLAGS,255-$NEED_CLOSET
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* -------------------------------------------------------------------
*        PRINTING
* -------------------------------------------------------------------
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,LV=PRTBLOKL               GETMAIN STORAGE
         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA
         MVI   PRTCC,C' '                     SINGLE SPACE
         MVC   PRTMSGID(L'PRTMSGID+L'PRTDATA),PRTCC
PRT0010  DS    0H
         L     R14,COMM_PRINT_REQ             FIRST BLOCK ON QUEUE
         ST    R14,PRTNEXT-PRTBLOK(R1)
         CS    R14,R1,COMM_PRINT_REQ
         BC    4,PRT0010
         BR    R6                             RETURN
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=NOTAUTH
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1,auth_message_1
         MVC   NET_MSG_2,AUTH_MESSAGE_2
         MVC   NET_MSG_3,AUTH_MESSAGE_3
         MVC   NET_MSG_4,AUTH_MESSAGE_4
         MVC   NET_MSG_5,AUTH_MESSAGE_5
         B     EXIT0000
ERR0020  DS    0H
         ITRACE ID=NOMEM
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(MSG01L),MSG01
         MVC   NET_MSG_1+(MSG01_MEM_NAME-MSG01)(L'MSG01_MEM_NAME),DXD_M+
               EM_NAME
         B     EXIT0000
ERR0030  DS    0H
         ITRACE ID=ERR0030,                                            +
               RDATA1=R15
         DC    H'0'
ERR0040  DS    0H
         ITRACE ID=NOLIBS
         DC    H'0'
ERR0050  DS    0H
         ITRACE ID=NOTFOUND
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(MSG02L),MSG02
         MVC   NET_MSG_1+(MSG02_LIB_NAME-MSG02)(L'MSG02_LIB_NAME),DXD_L+
               IB_NAME
         B     EXIT0000
ERR0060  DS    0H
         ITRACE ID=CLOSED
         MVI   NET_RETURN_CODE,$NET_ERROR
         MVC   NET_MSG_1(MSG03L),MSG03
         MVC   NET_MSG_1+(MSG03_LIB_NAME-MSG03)(L'MSG03_LIB_NAME),DXD_L+
               IB_NAME
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         TM    DXD_FLAGS,$NEED_CLOSET
         BNO   EXIT0010
         BAL   R6,CLOSET00
EXIT0010 DS    0H
         ITRACE ID=EXIT                       EXITING
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------ *
*                                                                    *
*        CONSTANTS                                                   *
*                                                                    *
* ------------------------------------------------------------------ *
VLIBAUTH          DC       V(LIBAUTH)
DXDSTART          DC       Q(DXDUVER)
RPLI              RPL      AM=VTAM
RPLL              EQU      *-RPLI
F1                DC       F'1'
H1                DC       H'1'
PRTID             DC       CL8'PRTBLOK'
AUTHID            DC       CL8'AUTHBLOK'
LIBFUNC_ID        DC       CL8'LIBFUNC'
MSG01             DS       0C
                  DC       CL11'USUBVER01E'
                  DC       C'No versions of member '
MSG01_MEM_NAME    DC       CL8' '
                  DC       C' exist'
MSG01L            EQU      *-MSG01
MSG02             DS       0C
                  DC       CL11'USUBVER02E'
                  DC       C'Library '
MSG02_LIB_NAME    DC       CL8' '
                  DC       C' not found'
MSG02L            EQU      *-MSG02
MSG03             DS       0C
                  DC       CL11'USUBVER03E'
                  DC       C'Library '
MSG03_LIB_NAME    DC       CL8' '
                  DC       C' is CLOSEd'
MSG03L            EQU      *-MSG03
MSG04             DS       0C
                  DC       CL11'USUBVER04E'
                  DC       C'Member '
MSG04_MEMBER_NAME DC       CL8' '
                  DC       C' in '
MSG04_LIB_DSN     DC       CL44' '
                  DC       C' now has '
MSG04_VERSION     DC       X'402020202120'
                  DC       C' versions.  User: '
MSG04_USER        DC       CL8' '
MSG04L            EQU      *-MSG04
* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUVER             DSECT
                    LIBSAVE  DSECT=NO
DXD_IO_SAVE         DS       16F
DXD_DWORD           DS       D
DXD_VSAM_RC         DS       F
DXD_RECLEN          DS       F
DXD_LIB             DS       F
DXD_RPL             DS       0F,(RPLL)X
DXD_LIB_NAME        DS       CL8
DXD_MEM_NAME        DS       CL8
DXD_HIGH_VERSION    DS       XL2
DXD_CURRENT_VERSION DS       XL2
DXD_NEW_VERSION     DS       XL2

DXD_FLAGS           DS       X
$NEED_CLOSET        EQU      X'10'
$NEW_DATE           EQU      X'01'

                    AUTHBLOK DSECT=NO
                    LIBFUNC  DSECT=NO
                    PRTBLOK  DSECT=NO
DXD_IO              DS       0F,($MAX_SOURCE_SIZE*2)X                   Y)X
                    ORG      DXD_IO
                    LIBRECD  DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    LIBBLOK  DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    USERBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    NETBLOK DSECT=YES
NET_LIB_NAME        DS      CL8
NET_MEM_NAME        DS      CL8
NET_NEW_VERSION     DS      XL2
$NET_VERSION_LENGTH EQU    *-NETBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
$MAX_SOURCE_SIZE EQU 8000
         COPY REGEQU
         END  USUBVER
./ ADD NAME=USUBVIEW 0100-09250-09250-0919-00343-00343-00000-SOURCE
         TITLE 'USUBVIEW  View (get a copy of) a member'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: USUBVIEW                                              *
*                                                                     *
* ------------------------------------------------------------------- *
USUBVIEW CSECT
USUBVIEW AMODE 31
USUBVIEW RMODE ANY
         USING PSA,R0
         USING USUBVIEW,R12,R9                DEFINE BASE
         USING LIBSCOMM,R11                   DEFINE BASE
         USING USERBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'USUBVIEW'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R11,USER_COMM                  COMMON AREA ADDRESS
         LA    R9,2048(R12)
         LA    R9,2048(R9)
         L     R1,USER_DXD                    WORK AREA BASE ADDRESS
         A     R1,DXDSTART                    PLUS DISPLACMENT
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING DXDUVIEW,R13                   DEFINE BASE
         USING IFGRPL,DXD_RPL
         CLC   DXDID,MODID                    ALREADY INITIALIZED?
         MVC   DXDID,MODID                    IDENTIFY WORK AREA OWNER
         L     R7,USER_IO                     I/O AREA ADDRESS
         USING NETBLOK,R7                     DEFINE BASE
         ITRACE ID=ENTRY,                                              +
               DATA1=NET_FUNCTION,                                     +
               DATA2=NET_DATA
         MVC   NET_MSG_1,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_2,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_3,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_4,COMM_BLANKS          CLEAR MESSAGE
         MVC   NET_MSG_5,COMM_BLANKS          CLEAR MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0010 DS    0H
         ITRACE ID=FIND_LIB,                                           +
               DATA1=NET_LIB_NAME
         ICM   R8,15,COMM_LIBRARY_CHAIN       FIRST LIBRARY BLOCK
         USING LIBBLOK,R8
         BZ    ERR0010                        NO LIBRARIES
INIT0020 DS    0H
         CLC   LIB_NAME,NET_LIB_NAME          IS THIS THE LIBRARY?
         BE    INIT0030                       YES
         ICM   R8,15,LIB_NEXT                 NEXT LIBRARY
         BNZ   INIT0020
         B     ERR0010                        LIBRARY NOT FOUND
INIT0030 DS    0H
         ITRACE ID=LIBFOUND,                                           +
               RDATA1=R8
         ST    R8,DXD_LIB                     SAVE LIBBLOK ADDRESS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLI   NET_FUNCTION,$NET_VIEW_SOURCE
         BE    VIEW0010
         TM    LIB_STATUS,$LIB_OPEN           IS THE LIBRARY OPEN?
         BNO   ERR0020                        NO
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,NET_MEM_NAME
         MVC   LIB_KEY_VERSION,NET_MEM_VERSION
         MVC   LIB_KEY_SEQ,F1
         ITRACE ID=READINDX,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         BAL   R6,READ0000
         CLI   DXD_VSAM_RC+3,0                DOES THE RECORD EXIST?
         BNE   ERR0040                        NO
         ITRACE ID=CALLAUTH
         MVC   AUTH_EYE,AUTHID                SET EYE CATCHER
         MVI   AUTH_FUNCTION,$AUTH_CHECK_VIEW
         MVC   AUTH_USER,USER_USER_ID
         MVC   AUTH_LIB,NET_LIB_NAME
         MVC   AUTH_MEMBER,NET_MEM_NAME
         MVC   AUTH_VERSION,NET_MEM_VERSION
         MVC   AUTH_CHECK_OWNER,LIB_INDEX_OWNER
         MVC   AUTH_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER
         MVC   AUTH_MEMBER_STATUS,LIB_INDEX_STATUS
         LA    R1,AUTHBLOK                    PARAMETER BLOCK ADDRESS
         L     R15,VLIBAUTH                   AUTHORIZATION ENTRY POINT
         BALR  R14,R15                        LINK TO AUTHORIZATION
         CLI   AUTH_RETURN_CODE,0             USER AUTHORIZED?
         BNE   ERR0030                        NO
         ITRACE ID=AUTHOK
         MVC   NET_SOURCE_RECORDS,LIB_INDEX_RECORDS
         LA    R1,NETBLOKL+L'NET_SOURCE_RECORDS
         STCM  R1,3,NET_LENGTH
         MVI   NET_RETURN_CODE,$NET_OK
         XC    LIB_KEY_SEQ,LIB_KEY_SEQ
         L     R1,LIB_VIEW                    NUMBER OF VIEWS
         A     R1,F1                          PLUS 1
         ST    R1,LIB_VIEW                    SAVE UPDATED NUMBER
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
VIEW0010 DS    0H
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         ICM   R1,15,LIB_KEY_SEQ              CURRENT SEQUENCE NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER
         BAL   R6,READ0000                    READ NEXT RECORD
         CLI   DXD_VSAM_RC+3,0                SUCCESSFUL?
         BNE   VIEW0020                       NO.. EOF
         MVI   NET_RETURN_CODE,$NET_OK
         LA    R3,DXD_RPL
         SHOWCB RPL=(R3),                     SHOW DATA FROM RPL       +
               FIELDS=(RECLEN),               .. REQUEST RECORD LENGTH +
               AREA=DXD_RECLEN,               .. AREA FOR RETURNED DATA+
               LENGTH=4                       .. LENGTH OF 'RECLEN'
         LTR   R15,R15                        SUCCESSFUL?
         BNZ   ERR0050                        NO
         L     R2,DXD_RECLEN                  RECORD SIZE
         SH    R2,=Y(LIB_DATA-LIB_RECORD)     MINUS PREFIX LENGTH
         LA    R0,LIB_DATA                    ADDRESS OF THE GOOD STUFF
         LR    R1,R2                          RECORD SIZE
         LA    R14,NET_DATA                   DATA AREA
         LR    R15,R1                         COPY RECORD SIZE
         MVCL  R14,R0                         COPY TO NETWORK I/O AREA
         LA    R2,NETBLOKL(R2)                PLUS HEADER LENGTH
         STCM  R2,3,NET_LENGTH
         B     EXIT0000                       SEND
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
VIEW0020 DS    0H
         ITRACE ID=EOF
         MVI   NET_RETURN_CODE,$NET_EOF
         LA    R1,NETBLOKL                    ONLY NEED TO SEND HEADER
         STCM  R1,3,NET_LENGTH                SET LENGTH
         B     EXIT0000                       EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
READ0000 DS    0H
         STM   R0,R15,DXD_IO_SAVE
         ITRACE ID=READ,                                               +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         L     R1,LIB_READS                   NUMBER OF READS
         LA    R1,1(R1)                       PLUS 1
         ST    R1,LIB_READS                   SAVE TOTAL
         MVC   DXD_RPL(RPLL),RPLI             INITIALIZE RPL
         LA    R2,DXD_RPL
         LA    R3,LIB_ACB
         LA    R4,DXD_IO
         ITRACE ID=MODCB,                                              +
               RDATA1=R8,                                              +
               RDATA2=R3
         MODCB RPL=(R2),                                               +
               ACB=(R3),                                               +
               AREA=(R4),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2,                             +
               ARG=(R4),                                               +
               KEYLEN=L'LIB_KEY,                                       +
               OPTCD=(KEY,DIR,SYN,MVE)
READ0010 DS    0H
         GET   RPL=DXD_RPL                    READ
         ST    R15,DXD_VSAM_RC                SAVE RETURN CODE
         ITRACE ID=RECDREAD,                                           +
               DATA1=LIB_KEY,                                          +
               DATA2=LIB_KEY+8
         ITRACE ID=READRC,                                             +
               RDATA1=R15,                                             +
               DATA2=DXD_RPL+(RPLFDBK-IFGRPL)
         LM    R0,R15,DXD_IO_SAVE
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS
         MVC   NET_MSG_1(MSG01L),MSG01
         MVC   NET_MSG_1+(MSG01LIB-MSG01)(L'MSG01LIB),LIB_KEY_NAME
         B     EXIT0000
ERR0020  DS    0H
         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS
         MVC   NET_MSG_1(MSG02L),MSG02
         UNPK  NET_MSG_1+(MSG02LIB-MSG02)(L'MSG02LIB),LIB_NAME
         B     EXIT0000
ERR0030  DS    0H
         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS
         MVC   NET_MSG_1,AUTH_MESSAGE_1
         MVC   NET_MSG_2,AUTH_MESSAGE_2
         MVC   NET_MSG_3,AUTH_MESSAGE_3
         MVC   NET_MSG_4,AUTH_MESSAGE_4
         MVC   NET_MSG_5,AUTH_MESSAGE_5
         B     EXIT0000
ERR0040  DS    0H
         BAL   R6,ERR1000                     SET RC, INITIALIZE MSGS
         MVC   NET_MSG_1(MSG04L),MSG04
         MVC   NET_MSG_1+(MSG04MEM-MSG04)(L'MSG04MEM),LIB_KEY_NAME
         SR    R1,R1
         ICM   R1,3,LIB_KEY_VERSION
         CVD   R1,DXD_DWORD
         ED    NET_MSG_1+(MSG04VER-MSG04)(L'MSG04VER),DXD_DWORD+5
         MVC   NET_MSG_1+(MSG04LIB-MSG04)(L'MSG04LIB),LIB_NAME
         B     EXIT0000
ERR0050  DS    0H
         DC    H'1'
ERR1000  DS    0H
         MVI   NET_RETURN_CODE,$NET_ERROR
         LA    R1,NET_MSG_1
         LA    R15,5
ERR1010  DS    0H
         MVC   0(L'NET_MSG_1,R1),BLANKS       CLEAR MESSAGE
         LA    R1,L'NET_MSG_1(R1)
         BCT   R15,ERR1010
         LA    R1,NETBLOKL
         STCM  R1,3,NET_LENGTH                SET LENGTH
         BR    R6
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT                       EXITING
         ITRACE ID=ENDREQ
         ENDREQ RPL=DXD_RPL
         ITRACE ID=ENDREQRC,                                           +
               RDATA1=R15,                                             +
               DATA2=RPLFDBK
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680
         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
VLIBAUTH DC    V(LIBAUTH)
DXDSTART DC    Q(DXDUVIEW)
RPLI     RPL   AM=VTAM
RPLL     EQU   *-RPLI
F1       DC    F'1'
AUTHID   DC    CL8'AUTHBLOK'
BLANKS   DC    CL80' '
MSG01    DS    0C
         DC    CL11'USUBVIEW001E'
         DC    C' '
         DC    C' Library '
MSG01LIB DC    CL8' '
         DC    C' not found'
MSG01L   EQU   *-MSG01
MSG02    DS    0C
         DC    CL11'USUBVIEW002E'
         DC    C' '
         DC    C' Library '
MSG02LIB DC    CL8' '
         DC    C' not open'
MSG02L   EQU   *-MSG02
MSG03    DS    0C
         DC    CL11'USUBVIEW003E'
         DC    C' '
         DC    C' Authorization failed. User:'
MSG03USR DC    CL8' '
         DC    C' Library: '
MSG03LIB DC    CL8' '
         DC    C' Member: '
MSG03MEM DC    CL8' '
         DC    C' Version:'
MSG03VER DC    XL6'4021202020'
MSG03L   EQU   *-MSG03
MSG04    DS    0C
         DC    CL11'USUBVIEW004E'
         DC    C' '
         DC    C' Member '
MSG04MEM DC    CL8' '
MSG04VER DC    XL6'402120202020'
         DC    C' not found in library '
MSG04LIB DC    Cl8' '
MSG04L   EQU   *-MSG04

         LTORG

* ------------------------------------------------------------------ *
*                                                                    *
*        WORK AREAS                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
DXDUVIEW      DSECT
              LIBSAVE  DSECT=NO
DXD_DWORD     DS       D
DXD_IO_SAVE   DS       16F
DXD_VSAM_RC   DS       F
DXD_RECLEN    DS       F
DXD_LIB       DS       F
DXD_RPL       DS       0F,(RPLL)X
              AUTHBLOK DSECT=NO
DXD_FLAGS     DS       X
$INITRPL      EQU      X'80'
DXD_IO        DS       0F,($MAX_SOURCE_SIZE*2)X
              ORG      DXD_IO
              LIBRECD  DSECT=NO
              ORG
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         LIBBLOK  DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         USERBLOK DSECT=YES
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         NETBLOK   DSECT=YES
NET_LIB_NAME       DS   CL8
NET_MEM_NAME       DS   CL8
NET_MEM_VERSION    DS   XL2
                   ORG  NET_DATA
NET_SOURCE_RECORDS DS   XL4
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         SCOMM    TYPE=DSECT
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IFGACB   AM=VTAM
ACBL     EQU      *-IFGACB
         IFGRPL   AM=VTAM
* ------------------------------------------------------------------ *
*                                                                    *
* ------------------------------------------------------------------ *
         IHAPSA   DSECT=YES,LIST=NO
* ------------------------------------------------------------------ *
*              EQUATES                                               *
* ------------------------------------------------------------------ *
               COPY REGEQU
$MAX_SOURCE_SIZE EQU 8000
         END  USUBVIEW
./ ADD NAME=UTIL0001 0100-09250-09250-0919-00390-00390-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: Load a source member directly to a library                   *
*                                                                     *
* ------------------------------------------------------------------- *
UTIL0001 CSECT
UTIL0001 AMODE 24
UTIL0001 RMODE 24
         USING UTIL0001,R12         DEFINE BASE
         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS
         LR    R12,R15              COPY BASE
         B     INIT0000             BRANCH AROUND EYECATCHER
         DC    CL8'UTIL0001'        MODULE NAME
         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         LA    R1,SAVEAREA
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                   COPY SAVE AREA ADDRESS
         USING SAVEAREA,R13
         OPEN  (SYSIN,INPUT)            OPEN SYSIN
         OPEN  (SYSPRINT,OUTPUT)        OPEN SYSPRINT
         OPEN  (LIB,UPDAT)              OPEN LIBRARY
         BAL   R10,HEAD0000             PRINT HEADING
         LOAD  EP=LIBUX01
         ST    R0,AUX01
PROC0000 DS    0H
         BAL   R9,CNTL0000
         CLC   MEMBER_STATEMENT,CONTROL_STATEMENT
         BE    MEM0000                  YES
         CLC   DESCRIPTION_STATEMENT,CONTROL_STATEMENT
         BE    DESC0000                 YES
         CLC   SOURCE_STATEMENT,CONTROL_STATEMENT
         BE    SOURCE00                 YES
         MVC   PRINT_CC(EMSG01L),EMSG01
         B     ERR0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MEM0000  DS    0H
         TM    FLAGS,$MEMBER            ALREADY HAVE MEMBER NAME?
         BO    ERR0010                  YES
         BAL   R9,CNTL0000              READ NEXT CONTROL STATEMENT
         MVC   LIB_KEY_NAME,CONTROL_STATEMENT
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_VERSION,H1       SET VERSION TO 1
         MVC   LIB_KEY_SEQ,F1           SET SEQUENCE NUMBER TO 1
         GET   RPL=READRPL              READ THE INDEX RECORD
         LTR   R15,R15                  RECORD FOUND?
         BZ    ERR0020                  YES.. MEMBER ALREADY EXISTS
         OI    FLAGS,$MEMBER            HAVE VALID MEMBER NAME
         USING PSA,R0                   DEFINE BASE
         L     R1,PSAAOLD               OUR ASCB'S ADDRESS
         USING ASCB,R1                  DEFINE BASE
         L     R14,ASCBASXB             ASXB ADDRESS
         USING ASXB,R14                 DEFINE ASCB BASE
         L     R15,ASXBSENV             ACEE'S ADDRESS
         USING ACEE,R15                 DEFINE ACEE BASE
         SR    R1,R1                    CLEAR REGISTER
         IC    R1,ACEEUSRL              USER ID LENGTH
         BCTR  R1,0                     MINUS 1
         MVC   LIB_INDEX_OWNER,BLANKS
         EX    R1,UIDMVC                COPY USER ID
         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN
         TIME  DEC
         STCM  R0,15,LIB_INDEX_CREATE_TIME
         STCM  R1,15,LIB_INDEX_CREATE_DATE
         XC    LIB_INDEX_CHECK_OUT_TIME,LIB_INDEX_CHECK_OUT_TIME
         ZAP   LIB_INDEX_CHECK_OUT_DATE,P0
         MVC   LIB_INDEX_CHECK_OUT_USER,BLANKS
         XC    LIB_INDEX_CHECK_OUTS,LIB_INDEX_CHECK_OUTS
         XC    LIB_INDEX_CHECK_IN_TIME,LIB_INDEX_CHECK_IN_TIME
         ZAP   LIB_INDEX_CHECK_IN_DATE,P0
         MVC   LIB_INDEX_CHECK_IN_USER,BLANKS
         XC    LIB_INDEX_RECORDS,LIB_INDEX_RECORDS
         MODCB RPL=WRITERPL,                                           +
               AREA=LIB_RECORD,                                        +
               RECLEN=LIB_INDEX_RECORD_LENGTH
         PUT   RPL=WRITERPL
         LTR   R15,R15                  SUCCESSFUL?
         BNZ   ERR0040                  NO
         B     PROC0000
UIDMVC   MVC   LIB_INDEX_OWNER(0),ACEEUSRI
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DESC0000 DS    0H
         TM    FLAGS,$MEMBER            HAVE MEMBER NAME?
         BNO   ERR0030                  NO
         BAL   R9,CNTL0000              READ A DESCRIPTION
         OI    FLAGS,$DESC
         MVC   LIB_INDEX_DESC,CONTROL_STATEMENT
         ICM   R1,15,LIB_KEY_SEQ        CURRENT SEQUENCE NUMBER
         A     R1,F1                    PLUS 1
         STCM  R1,15,LIB_KEY_SEQ
         MODCB RPL=WRITERPL,                                           +
               AREA=LIB_RECORD,                                        +
               RECLEN=LIB_INDEX_RECORD_LENGTH
         PUT   RPL=WRITERPL
         LTR   R15,R15                  SUCCESSFUL?
         BNZ   ERR0040                  NO
         B     PROC0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SOURCE00 DS    0H
         TM    FLAGS,$MEMBER+$DESC      HAVE MEMBER NAME AND DESC?
         BNO   ERR0050                  NO
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         XC    LIB_KEY_SEQ,LIB_KEY_SEQ  SET SEQUENCE NUMBER TO ZERO
         OI    FLAGS,$SOURCE            LOADING SOURCE
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=BELOW
         ST    R1,UX01_EXPANDED_BUFFER  SAVE BUFFER ADDRESS
         LA    R1,EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         MODCB RPL=WRITERPL,                                           +
               AREA=(R1)
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE*2,                                  +
               LOC=BELOW
         ST    R1,COMPRESSED_BUFFER     SAVE BUFFER ADDRESS
         LA    R1,(L'LIB_KEY)(R1)
         ST    R1,UX01_COMPRESSED_BUFFER
         LA    R1,COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
         L     R3,UX01_EXPANDED_BUFFER
         SR    R4,R4                    CLEAR LENGTH
SOURCE10 DS    0H
         BAL   R9,CNTL0000              READ A SOURCE STATEMENT
         CH    R4,=Y($MAX_SOURCE_SIZE)  BUFFER FULL?
         BL    SOURCE20                 NO
         ST    R4,EXPANDED_LENGTH
         BAL   R9,COMP0000              COMPRESS THE SOURCE
         L     R5,COMPRESSED_LENGTH
         LA    R5,L'LIB_KEY(R5)
         L     R6,COMPRESSED_BUFFER
         ICM   R1,15,LIB_KEY_SEQ        CURRENT RECORD NUMBER
         A     R1,F1                    PLUS 1
         STCM  R1,15,LIB_KEY_SEQ        UPDATE SEQUENCE NUMBER
         MVC   0(L'LIB_KEY,R6),LIB_KEY  COPY TO BUFFER
         MODCB RPL=WRITERPL,                                           +
               RECLEN=(R5),                                            +
               AREA=(R6)
         PUT   RPL=WRITERPL
         LTR   R15,R15                  SUCCESFUL?
         BNZ   ERR0040                  NO
         L     R3,UX01_EXPANDED_BUFFER
         SR    R4,R4                    CLEAR LENGTH
SOURCE20 DS    0H
         MVC   0(80,R3),CONTROL_STATEMENT
         LA    R3,80(R3)
         LA    R4,80(R4)
         L     R1,SOURCE_RECORDS        NUMBER OF SOURCE RECORDS
         A     R1,F1                    PLUS 1
         ST    R1,SOURCE_RECORDS        SAVE TOTAL
         B     SOURCE10
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
CNTL0000 DS    0H
         GET   SYSIN,CONTROL_STATEMENT
         MVC   PRINT_DATA(MSG01L),MSG01
         MVC   PRINT_DATA+MSG01L(80),CONTROL_STATEMENT
         BAL   R11,PRT0000              PRINT
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
COMP0000 DS    0H
         MVI   UX01_FUNCTION,$UX01_COMPRESS
         LA    R1,UX01_PARMS
         L     R15,AUX01
         BASSM R14,R15                  COMPRESS THE SOURCE
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   PRINT_CC(EMSG02L),EMSG02
         OI    FLAGS,$ERROR             SET ERROR INDICATOR
         BAL   R11,PRT0000              PRINT
         B     EXIT0000                 EXIT
ERR0020  DS    0H
         MVC   PRINT_CC(EMSG03L),EMSG03
         OI    FLAGS,$ERROR             SET ERROR INDICATOR
         BAL   R11,PRT0000              PRINT
         B     EXIT0000                 EXIT
ERR0030  DS    0H
         MVC   PRINT_CC(EMSG04L),EMSG04
         OI    FLAGS,$ERROR             SET ERROR INDICATOR
         BAL   R11,PRT0000              PRINT
         B     EXIT0000                 EXIT
ERR0040  DS    0H
         DC    H'0'
ERR0050  DS    0H
         MVC   PRINT_CC(EMSG05L),EMSG05
         OI    FLAGS,$ERROR             SET ERROR INDICATOR
         BAL   R11,PRT0000              PRINT
         B     EXIT0000                 EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         CP    LINE_COUNT,LINE_MAX      TIME FOR HEADING?
         BL    PRT0010                  NO
         BAL   R10,HEAD0000             PRINT HEADING
PRT0010  DS    0H
         PUT   SYSPRINT,PRINT_CC        PRINT
         AP    LINE_COUNT,P1            ADD 1 TO LINE COUNT
         MVC   PRINT_LINE,PRINT_LINE-1
         BR    R11                      EXIT
HEAD0000 DS    0H
         AP    PAGE_COUNT,P1            ADD 1 TO PAGE COUNTER
         MVC   PRINT_CC(HEAD1L),HEAD1   COPY HEADING
         ED    PRINT_CC+(HEAD1_PAGE-HEAD1)(L'HEAD1_PAGE),PAGE_COUNT
         PUT   SYSPRINT,PRINT_CC        PRINT HEADING
         MVC   PRINT_LINE,PRINT_LINE-1
         ZAP   LINE_COUNT,P1            SET LINE COUNT
         BR    R10                      DONE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EOF0000  DS    0H
         MVC   PRINT_CC(MSG02L),MSG02
         BAL   R11,PRT0000              PRINT
         TM    FLAGS,$SOURCE            WAS I LOADING SOURCE?
         BNO   EXIT0000                 NO
         LTR   R4,R4                    ANYTHING IN BUFFER?
         BZ    EOF0010                  NO
         ST    R4,EXPANDED_LENGTH
         BAL   R9,COMP0000              COMPRESS THE SOURCE
         L     R5,COMPRESSED_LENGTH
         LA    R5,L'LIB_KEY(R5)
         L     R6,COMPRESSED_BUFFER
         ICM   R1,15,LIB_KEY_SEQ        CURRENT RECORD NUMBER
         A     R1,F1                    PLUS 1
         STCM  R1,15,LIB_KEY_SEQ        UPDATE SEQUENCE NUMBER
         MVC   0(L'LIB_KEY,R6),LIB_KEY  COPY TO BUFFER
         MODCB RPL=WRITERPL,                                           +
               RECLEN=(R5),                                            +
               AREA=(R6)
         PUT   RPL=WRITERPL             WRITE LAST BUFFER
         LTR   R15,R15                  SUCCESFUL?
         BNZ   ERR0040                  NO
EOF0010  DS    0H
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_SEQ,F1
         GET   RPL=UPDATERPL            RE-READ INDEX RECORD 1
         LTR   R15,R15                  SUCCESSFUL?
         BZ    EOF0020                  YES
         DC    H'0'
EOF0020  DS    0H
         MVC   LIB_INDEX_RECORDS,SOURCE_RECORDS
         MODCB RPL=UPDATERPL,                                          +
               OPTCD=MVE
         PUT   RPL=UPDATERPL            UPDATE THE INDEX RECORD
         LTR   R15,R15                  SUCCESSFUL?
         BZ    EOF0030                  YES
         DC    H'0'
EOF0030  DS    0H
         ICM   R1,15,UX01_EXPANDED_BUFFER
         BZ    EXIT0000
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE
         ICM   R1,15,COMPRESSED_BUFFER
         BZ    EXIT0000
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE*2
EXIT0000 DS    0H
         CLOSE (SYSIN)
         CLOSE (SYSPRINT)
         CLOSE (LIB)
         DELETE EP=LIBUX01
         L     R13,4(R13)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SAVEAREA DS    18F
SYSIN    DCB   DDNAME=SYSIN,                                           +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               EODAD=EOF0000,                                          +
               MACRF=GM
SYSPRINT DCB   DDNAME=SYSPRINT,                                        +
               DSORG=PS,                                               +
               RECFM=FBA,                                              +
               LRECL=133,                                              +
               MACRF=PM
LIB      ACB   AM=VSAM,                                                +
               DDNAME=LIB,                                             +
               MACRF=(KEY,DIR,OUT)

READRPL  RPL   AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB,                 .. ACB                         +
               ARG=LIB_KEY,             .. KEY                         +
               KEYLEN=L'LIB_KEY,        .. KEY LENGTH                  +
               AREA=LIB_RECORD,         .. ADDRESS OF RETURNED RECORD  +
               AREALEN=LIB_INDEX_RECORD_LENGTH,  INDEX RECORD LENGTH   +
               OPTCD=(KEY,DIR,SYN,MVE)
UPDATERPL RPL  AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB,                 .. ACB                         +
               ARG=LIB_KEY,             .. KEY                         +
               KEYLEN=L'LIB_KEY,        .. KEY LENGTH                  +
               AREA=LIB_RECORD,         .. ADDRESS OF RETURNED RECORD  +
               OPTCD=(KEY,DIR,SYN,UPD,MVE),                            +
               AREALEN=LIB_INDEX_RECORD_LENGTH,                        +
               RECLEN=LIB_INDEX_RECORD_LENGTH
WRITERPL RPL   AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB,                 .. ACB                         +
               OPTCD=(KEY,DIR,SYN)      ..

FLAGS          DC      X'00'
$ERROR         EQU     X'80'
$MEMBER        EQU     X'40'
$DESC          EQU     X'20'
$SOURCE        EQU     X'10'

HEAD1                 DC   C'1'
                      DC   CL50' '
                      DC   C'LIBRARY UTILITY 1'
                      DC   CL50' '
                      DC   C'PAGE'
HEAD1_PAGE            DC   X'402020202120'
HEAD1L                EQU  *-HEAD1

MSG01                 DC   C' CONTROL STATEMENT: '
MSG01L                EQU  *-MSG01
MSG02                 DC   C' END OF CONTROL FILE'
MSG02L                EQU  *-MSG02

EMSG01                DC   C'0** INVALID CONTROL STATEMENT'
EMSG01L               EQU  *-EMSG01
EMSG02                DC   C'0** MEMBER NAME ALREADY GIVEN'
EMSG02L               EQU  *-EMSG02
EMSG03                DC   C'0** MEMBER ALREADY EXISTS'
EMSG03L               EQU  *-EMSG03
EMSG04                DC   C'0** MEMBER NAME NOT GIVEN'
EMSG04L               EQU  *-EMSG04
EMSG05                DC   C'0** MEMBER NAME OR DESCRIPTION NOT GIVEN'
EMSG05L               EQU  *-EMSG05

                      UX01PARM DSECT=NO

EXPANDED_LENGTH       DC   F'0'
COMPRESSED_BUFFER     DC   A(0)
COMPRESSED_LENGTH     DC   F'0'

SOURCE_RECORDS        DC   F'0'
AUX01                 DC   A(0)
F1                    DC   F'1'
H1                    DC   H'1'
LINE_COUNT            DC   PL3'0'
PAGE_COUNT            DC   PL3'0'
P0                    DC   P'0'
P1                    DC   P'1'
LINE_MAX              DC   P'65'

BLANKS                DC   CL80' '
CONTROL_STATEMENT     DS   CL80
MEMBER_STATEMENT      DC   C'MEMBER'
DESCRIPTION_STATEMENT DC   C'DESCRIPTION'
SOURCE_STATEMENT      DC   C'SOURCE'

                      DC   C' '
PRINT_LINE            DS   0CL133
PRINT_CC              DS   C
PRINT_DATA            DS   CL132
         LIBRECD DSECT=NO


         IHAPSA  DSECT=YES,LIST=NO
         IHAASCB DSECT=YES,LIST=NO
         IHAASXB DSECT=YES,LIST=NO
         IHAACEE
$MAX_SOURCE_SIZE EQU 8000

         COPY  REGEQU
         END   UTIL0001
./ ADD NAME=UTIL0002 0100-09250-09250-0919-00178-00178-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Print all members of a library                                     *
*                                                                     *
* ------------------------------------------------------------------- *
UTIL0002 CSECT
UTIL0002 AMODE 24
UTIL0002 RMODE 24
         USING UTIL0002,R12         DEFINE BASE
         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS
         LR    R12,R15              COPY BASE
         B     INIT0000             BRANCH AROUND EYECATCHER
         DC    CL8'UTIL0002'        MODULE NAME
         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         LA    R1,SAVEAREA
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                   COPY SAVE AREA ADDRESS
         USING SAVEAREA,R13
         OPEN  (SYSPRINT,OUTPUT)        OPEN SYSPRINT
         OPEN  (LIB,INPUT)              OPEN LIBRARY
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE*2,                                  +
               LOC=BELOW
         LR    R2,R1
         MODCB RPL=RPL2,                                               +
               AREA=(R2),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2
         LA    R2,LIB_DATA-LIB_RECORD(R2)
         ST    R2,UX01_COMPRESSED_BUFFER
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=BELOW
         ST    R1,UX01_EXPANDED_BUFFER
         LA    R1,EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
         MVC   PRINT_LINE,PRINT_LINE-1  INITIALIZE I/O AREA
         LOAD  EP=LIBUX01
         ST    R0,AUX01
PROC0000 DS    0H
         GET   RPL=RPL1
         LTR   R15,R15                  EOF?
         BNZ   EXIT0000                 YES
         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         BH    EXIT0000                 BEYOND INDEX RECORDS?
         CLC   LIB_KEY_SEQ,F1           BASE INDEX RECORD?
         BNE   PROC0000                 NO
         ICM   R3,15,LIB_INDEX_RECORDS  NUMBER OF SOURCE RECORDS
         MVI   SEARCH_KEY_TYPE,$LIB_KEY_TYPE_DATA
         MVC   SEARCH_KEY_NAME,LIB_KEY_NAME
         MVC   SEARCH_KEY_VERSION,LIB_KEY_VERSION
         MVC   SEARCH_KEY_SEQUENCE,F1   SET SEQUENCE NUMBER TO 1
READ0000 DS    0H
         GET   RPL=RPL2
         LTR   R15,R15                  RECORD FOUND?
         BNZ   PROC0000                 NO
         SHOWCB RPL=RPL2,               SHOW DATA FROM RPL             +
               FIELDS=(RECLEN),         .. REQUEST RECORD LENGTH       +
               AREA=RECORD_SIZE,        .. AREA FOR RETURNED DATA      +
               LENGTH=4                 .. LENGTH OF 'RECLEN'
         L     R1,RECORD_SIZE
         SH    R1,=Y(L'LIB_KEY)
         ST    R1,COMPRESSED_LENGTH
         PUT   SYSPRINT,PRINT_LINE
         PUT   SYSPRINT,PRINT_LINE
         MVC   MEMBER_NAME,LIB_KEY_NAME COPY MEMBER NAME
         SR    R1,R1                    CLEAR REGISTER
         ICM   R1,3,LIB_KEY_VERSION     GET VERSION NUMBER
         CVD   R1,DWORD                 CONVERT TO DECIMAL
         MVC   MEMBER_VERSION,=X'402020202120'
         ED    MEMBER_VERSION,DWORD+5   EDIT VERSION
         MVC   PRINT_DATA(MEMBER_HEADING_LENGTH),MEMBER_HEADING
         PUT   SYSPRINT,PRINT_LINE
         MVC   PRINT_LINE,PRINT_LINE-1  RE-INITIALIZE I/O AREA
         LR    R4,R3                    COPY NUMBER OF RECORDS
         CH    R4,H100                  MORE THAN 100 RECORDS LEFT
         BL    READ0010                 NO
         LH    R4,H100                  LIMIT TO 100 RECORDS
READ0010 DS    0H
         SR    R3,R4                    MINUS RECORDS IN THIS BUFFER
         LR    R5,R4                    COPY RECORDS IN THIS BUFFER
         MH    R4,H80                   SIZE OF EXPANDED SOURCE
         ST    R4,EXPANDED_LENGTH       SET EXPANDED SIZE
         LA    R1,UX01_PARMS
         MVI   UX01_FUNCTION,$UX01_DECOMPRESS
         L     R15,AUX01                USER EXIT 1 ENTRY POINT
         BASSM R14,R15                  DECOMPRESS THE DATA
         L     R2,UX01_EXPANDED_BUFFER
READ0020 DS    0H
         MVC   PRINT_DATA,0(R2)         COPY DATA
         PUT   SYSPRINT,PRINT_LINE      PRINT THE DATA
         MVC   PRINT_LINE,PRINT_LINE-1  RE-INITIALIZE I/O AREA
         LA    R2,80(R2)
         BCT   R5,READ0020
         LTR   R3,R3                    ALL RECORDS PROCESSED?
         BZ    PROC0000                 YES
         ICM   R1,15,SEARCH_KEY_SEQUENCE
         LA    R1,1(R1)
         STCM  R1,15,SEARCH_KEY_SEQUENCE
         B     READ0000
EXIT0000 DS    0H
         CLOSE (SYSPRINT)
         CLOSE (LIB)
         DELETE EP=LIBUX01
         L     R13,4(R13)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DWORD    DS    D
SAVEAREA DS    18F
AUX01    DC    A(0)
F1       DC    F'1'
H1       DC    H'1'
H80      DC    H'80'
H100     DC    H'100'

SYSPRINT DCB   DDNAME=SYSPRINT,                                        +
               DSORG=PS,                                               +
               RECFM=FBA,                                              +
               LRECL=81,                                               +
               MACRF=PM
LIB      ACB   AM=VSAM,                                                +
               DDNAME=LIB,                                             +
               MACRF=(KEY,DIR,SEQ)

RPL1     RPL   AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB,                 .. ACB                         +
               AREA=LIB_RECORD,         .. ADDRESS OF RETURNED RECORD  +
               AREALEN=LIB_INDEX_RECORD_LENGTH,  INDEX RECORD LENGTH   +
               OPTCD=(SEQ,SYN,MVE)

RPL2     RPL   AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB,                 .. ACB                         +
               ARG=SEARCH_KEY,          .. KEY                         +
               KEYLEN=L'SEARCH_KEY,     .. KEY LENGTH                  +
               OPTCD=(KEY,DIR,SYN,MVE)

                      UX01PARM DSECT=NO

EXPANDED_LENGTH       DS   F
COMPRESSED_LENGTH     DS   F

RECORD_SIZE           DS   F

SEARCH_KEY            DS   0XL15
SEARCH_KEY_TYPE       DS   X
SEARCH_KEY_NAME       DS   CL8
SEARCH_KEY_VERSION    DS   XL2
SEARCH_KEY_SEQUENCE   DS   XL4

                      DC   C' '
PRINT_LINE            DS   0CL81
PRINT_CC              DS   C
PRINT_DATA            DS   CL80

MEMBER_HEADING        DS   0C
                      DC   C'Member:'
MEMBER_NAME           DC   CL8' '
                      DC   C'   Version:'
MEMBER_VERSION        DC   CL6' '
MEMBER_HEADING_LENGTH EQU  *-MEMBER_HEADING

         LIBRECD DSECT=NO
         IFGRPL  AM=VTAM

$MAX_SOURCE_SIZE EQU 8000
         COPY  REGEQU
         END   UTIL0002
./ ADD NAME=UTIL0003 0100-09250-09250-0919-00123-00123-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: Convert source directly to compacted form                    *
*                                                                     *
*        SYSUT1 Source file                                           *
*        SYSUT2 compacted file                                        *
*                                                                     *
* ------------------------------------------------------------------- *
UTIL0003 CSECT
UTIL0003 AMODE 24
UTIL0003 RMODE 24
         USING UTIL0003,R12                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
         DC    CL8'UTIL0003'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         LA    R1,SAVEAREA
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         COPY SAVE AREA ADDRESS
         USING SAVEAREA,R13
         OPEN  (SYSUT1,INPUT)                 OPEN SYSUT1
         OPEN  (SYSUT2,OUTPUT)                OPEN SYSUT2
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE,                                    +
               LOC=BELOW
         ST    R1,UX01_EXPANDED_BUFFER
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE*2,                                  +
               LOC=BELOW
         ST    R1,SYSUT2_IO_ADDR
         LA    R1,4(R1)
         ST    R1,UX01_COMPRESSED_BUFFER
         LA    R1,EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
         LOAD  EP=LIBUX01
         ST    R0,AUX01
PROC0000 DS    0H
         L     R3,UX01_EXPANDED_BUFFER        RESET BUFFER ADDR
         SR    R4,R4                          RESET LENGTH
         LA    R5,100                         RESET LIMIT
PROC0010 DS    0H
         GET   SYSUT1,SYSUT1_IO_ADDR          READ A RECORD
         MVC   0(80,R3),SYSUT1_IO_ADDR        COPY TO INPUT BUFFER
         LA    R3,80(R3)                      UPDATE BUFFER ADDRESS
         LA    R4,80(R4)                      UPDATE LENGTH
         BCT   R5,PROC0010                    READ NEXT RECORD
         BAL   R10,WRITE000
         B     PROC0000
EOF0000  DS    0H
         BAL   R10,WRITE000
         B     EXIT0000
WRITE000 DS    0H
         LTR   R4,R4                          LENGTH ZERO?
         BZR   R10                            YES
         ST    R4,EXPANDED_LENGTH
         MVI   UX01_FUNCTION,$UX01_COMPRESS
         LA    R1,UX01_PARMS                  PARM LIST
         L     R15,AUX01                      COMPRESSION ENTRY POINT
         BASSM R14,R15                        COMPRESS THE DATA
         L     R1,COMPRESSED_LENGTH
         LA    R1,4(R1)
         L     R3,SYSUT2_IO_ADDR
         STCM  R1,3,0(R3)
         XC    2(2,R3),2(R3)
         PUT   SYSUT2,0(R3)                   WRITE TO SYSUT2
         BR    R10
EXIT0000 DS    0H
         CLOSE (SYSUT1)
         CLOSE (SYSUT2)
         DELETE EP=LIBUX01

         L     R1,UX01_EXPANDED_BUFFER
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE
         L     R1,SYSUT2_IO_ADDR
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE*2

         L     R13,4(R13)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
SAVEAREA DS    18F
SYSUT1   DCB   DDNAME=SYSUT1,                                          +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               EODAD=EOF0000,                                          +
               MACRF=GM
SYSUT2   DCB   DDNAME=SYSUT2,                                          +
               DSORG=PS,                                               +
               RECFM=VB,                                               +
               LRECL=$MAX_SOURCE_SIZE*2,                               +
               BLKSIZE=$MAX_SOURCE_SIZE*2+4,                           +
               MACRF=PM

AUX01                 DC   A(0)

                      UX01PARM  DSECT=NO
EXPANDED_LENGTH       DC   F'0'
COMPRESSED_LENGTH     DC   F'0'

SYSUT2_IO_ADDR        DC   A(0)

SYSUT1_IO_ADDR        DC   CL80' '

$MAX_SOURCE_SIZE EQU  8000
         COPY  REGEQU
         END   UTIL0003
./ ADD NAME=UTIL0004 0100-09250-09250-0919-00347-00347-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Detail library status report.                                      *
*                                                                     *
* ------------------------------------------------------------------- *
UTIL0004 CSECT
UTIL0004 AMODE 24
UTIL0004 RMODE 24
         USING UTIL0004,R12                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
         DC    CL8'UTIL0004'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         LA    R1,SAVEAREA
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         COPY SAVE AREA ADDRESS
         USING SAVEAREA,R13
         OPEN  (SYSPRINT,OUTPUT)              OPEN SYSPRINT
         OPEN  (LIB,INPUT)                    OPEN LIBRARY
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE*2,                                  +
               LOC=BELOW
         LR    R11,R1
         USING LIB_RECORD,R11
         MODCB RPL=RPL1,                                               +
               AREA=(R11),                                             +
               AREALEN=$MAX_SOURCE_SIZE*2
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0000 DS    0H
         GET   RPL=RPL1
         LTR   R15,R15                        EOF?
         BNZ   EXIT0000                       YES
         CLI   LIB_KEY_TYPE,$LIB_KEY_LIB_DESC
         BE    PROC1000                       YES
         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         BH    EXIT0000                       BEYOND INDEX RECORDS?
         CLC   LIB_KEY_SEQ,F1                 1ST INDEX RECORD?
         BNE   PROC0100                       NO
         NI    WORKFLAGS,255-$DESC_HEADING
         MVC   SAVE_NAME,LIB_KEY_NAME         SAVE THE MEMBER NAME
         AP    MEMBERS_FOUND,P1               ADD 1 TO MEMBERS FOUND
         MVC   PR_NAME,LIB_KEY_NAME           COPY MEMBER NAME
         SR    R1,R1                          CLEAR REGISTER
         ICM   R1,3,LIB_KEY_VERSION           VERSION NUMBER
         CVD   R1,DWORD                       CONVERT TO DECIMAL
         MVC   PR_VERSION,=X'F02020202020'
         ED    PR_VERSION,DWORD+5
         MVI   PR_VERSION,C' '                LEAVE ONLY 5 DIGITS
         MVC   PR_OWNER,LIB_INDEX_OWNER       COPY OWNER
         CLI   LIB_INDEX_STATUS,$LIB_STATUS_IN
         BE    PROC0010                       CHECKED IN
         AP    CHECKED_OUT,P1                 ADD 1 TO CHECKED OUT
         MVC   PR_STATUS,=C'OUT'              INDICATE CHECKED-OUT
         B     PROC0020
PROC0010 DS    0H
         AP    CHECKED_IN,P1                  ADD 1 TO CHECKED-IN
         MVC   PR_STATUS,=C'IN '              INDICATE CHECKED-IN
PROC0020 DS    0H
         AP    LIB_INDEX_CREATE_DATE,P1900000
         MVC   PR_CREATE_DATE,=X'F0202020204B202020'
         ED    PR_CREATE_DATE,LIB_INDEX_CREATE_DATE
         MVI   PR_CREATE_DATE,C' '
         UNPK  WORK_TIME(9),LIB_INDEX_CREATE_TIME(5)
         MVC   PR_CREATE_TIME+00(2),WORK_TIME+00
         MVI   PR_CREATE_TIME+02,C':'
         MVC   PR_CREATE_TIME+03(2),WORK_TIME+02
         MVI   PR_CREATE_TIME+05,C':'
         MVC   PR_CREATE_TIME+06(2),WORK_TIME+04
         MVI   PR_CREATE_TIME+08,C':'
         MVC   PR_CREATE_TIME+09(2),WORK_TIME+06
         ICM   R1,15,LIB_INDEX_CHECK_OUTS
         CVD   R1,DWORD
         MVC   PR_CHECK_OUTS,=X'40206B2020206B202120'
         ED    PR_CHECK_OUTS,DWORD+4
         MVC   PR_CHECK_OUT_USER,LIB_INDEX_CHECK_OUT_USER
         AP    LIB_INDEX_CHECK_OUT_DATE,P1900000
         MVC   PR_CHECK_OUT_DATE,=X'F0202020204B202020'
         ED    PR_CHECK_OUT_DATE,LIB_INDEX_CREATE_DATE
         MVI   PR_CHECK_OUT_DATE,C' '
         UNPK  WORK_TIME(9),LIB_INDEX_CHECK_OUT_TIME(5)
         MVC   PR_CHECK_OUT_TIME+00(2),WORK_TIME+00
         MVI   PR_CHECK_OUT_TIME+02,C':'
         MVC   PR_CHECK_OUT_TIME+03(2),WORK_TIME+02
         MVI   PR_CHECK_OUT_TIME+05,C':'
         MVC   PR_CHECK_OUT_TIME+06(2),WORK_TIME+04
         MVI   PR_CHECK_OUT_TIME+08,C':'
         MVC   PR_CHECK_OUT_TIME+09(2),WORK_TIME+06
         MVC   PR_CHECK_IN_USER,LIB_INDEX_CHECK_IN_USER
         AP    LIB_INDEX_CHECK_IN_DATE,P1900000
         MVC   PR_CHECK_IN_DATE,=X'F0202020204B202020'
         ED    PR_CHECK_IN_DATE,LIB_INDEX_CREATE_DATE
         MVI   PR_CHECK_IN_DATE,C' '
         UNPK  WORK_TIME(9),LIB_INDEX_CHECK_IN_TIME(5)
         MVC   PR_CHECK_IN_TIME+00(2),WORK_TIME+00
         MVI   PR_CHECK_IN_TIME+02,C':'
         MVC   PR_CHECK_IN_TIME+03(2),WORK_TIME+02
         MVI   PR_CHECK_IN_TIME+05,C':'
         MVC   PR_CHECK_IN_TIME+06(2),WORK_TIME+04
         MVI   PR_CHECK_IN_TIME+08,C':'
         MVC   PR_CHECK_IN_TIME+09(2),WORK_TIME+06
         ICM   R1,15,LIB_INDEX_RECORDS
         ICM   R2,15,TOTAL_RECORDS
         AR    R2,R1
         STCM  R2,15,TOTAL_RECORDS
         CVD   R1,DWORD
         MVC   PR_RECORDS,=X'40206B2020206B202120'
         ED    PR_RECORDS,DWORD+4
         MVC   PR_AREA(PR_1_LENGTH),PR_1
         BAL   R9,PRT0000
         B     PROC0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0100 DS    0H
         TM    WORKFLAGS,$DESC_HEADING      PRINTED DESCRIPTION HEADING
         BO    PROC0110                     YES
         OI    WORKFLAGS,$DESC_HEADING      SET INDICATOR
PROC0110 DS    0H
         CLC   SAVE_NAME,LIB_KEY_NAME       SAME MEMBER
         BNE   ERR0010                      NO
         MVC   PR_AREA+10(L'LIB_DATA),LIB_DATA
         BAL   R9,PRT0000
         B     PROC0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PROC1000 DS    0H
         CLI   LIB_KEY_SEQ+3,X'01'
         BNE   PROC1010
         MVC   HEAD_LIB_DESCRIPTION,LIB_DATA
         B     PROC0000
PROC1010 DS    0H
         MVC   DESC_1_DESC(L'LIB_DATA),LIB_DATA
         MVC   PR_CC(DESC_1L),DESC_1
         BAL   R9,PRT0000
         B     PROC0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         CP    LINE_COUNT,MAX_LINE            TIME FOR HEADING?
         BL    PRT0010
         AP    PAGE_COUNT,P1                  ADD 1 TO PAGE COUNT
         MVC   HEAD_PAGE,=X'40202020202020202120'
         ED    HEAD_PAGE,PAGE_COUNT
         PUT   SYSPRINT,HEADING_1             PRINT HEADING 1
         PUT   SYSPRINT,HEADING_2             PRINT HEADING 2
         PUT   SYSPRINT,HEADING_3             PRINT HEADING 3
         ZAP   LINE_COUNT,P0                  RESET LINE COUNT
PRT0010  DS    0H
         PUT   SYSPRINT,PR_CC
         MVC   PR_AREA,PR_AREA-1
         AP    LINE_COUNT,P1
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   MSG01_SAVE_NAME,SAVE_NAME
         MVC   MSG01_LIB_NAME,LIB_KEY_NAME
         MVC   PR_AREA(MSG01L),MSG01
         BAL   R9,PRT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ED    SUMMARY_MEMBERS,MEMBERS_FOUND
         ED    SUMMARY_IN,CHECKED_IN
         ED    SUMMARY_OUT,CHECKED_OUT
         ICM   R1,15,TOTAL_RECORDS
         CVD   R1,DWORD
         ED    SUMMARY_RECORDS,DWORD+3
         MVC   PR_AREA(SUMMARY1L),SUMMARY1
         BAL   R9,PRT0000
         MVC   PR_AREA(SUMMARY2L),SUMMARY2
         BAL   R9,PRT0000
         MVC   PR_AREA(SUMMARY3L),SUMMARY3
         BAL   R9,PRT0000
         MVC   PR_AREA(SUMMARY4L),SUMMARY4
         BAL   R9,PRT0000
         FREEMAIN RU,                                                  +
               A=(R11),                                                +
               LV=$MAX_SOURCE_SIZE*2
         CLOSE (SYSPRINT)
         CLOSE (LIB)
         L     R13,4(R13)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DWORD    DS    D
SAVEAREA DS    18F
SYSPRINT DCB   DDNAME=SYSPRINT,                                        +
               DSORG=PS,                                               +
               RECFM=FBA,                                              +
               LRECL=151,                                              +
               MACRF=PM
LIB      ACB   AM=VSAM,                                                +
               DDNAME=LIB,                                             +
               MACRF=(KEY,DIR,SEQ)

RPL1     RPL   AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB,                 .. ACB                         +
               OPTCD=(SEQ,SYN,MVE)

F1                    DC   F'1'
TOTAL_RECORDS         DS   F'0'

WORKFLAGS             DS   X'00'
$DESC_HEADING         EQU  X'80'

P0                    DC   P'0'
P1                    DC   P'1'
P1900000              DC   P'1900000'
MAX_LINE              DC   PL3'65'
LINE_COUNT            DC   PL3'99999'
PAGE_COUNT            DC   PL5'0'
MEMBERS_FOUND         DC   PL5'0'
CHECKED_IN            DC   PL5'0'
CHECKED_OUT           DC   PL5'0'

WORK_TIME             DS   CL9
SAVE_NAME             DC   CL8' '

HEADING_1             DS   0C
                      DC   C'1'
                      DC   CL59' '
                      DC   C'Library directory'
                      DC   CL60' '
                      DC   C'Page'
HEAD_PAGE             DC   CL10' '
HEADING_1_LENGTH      EQU  *-HEADING_1

HEADING_2             DS   0C
                      DC   C'0'
                      DC   C'Library description: '
HEAD_LIB_DESCRIPTION  DC   CL80' '
                      DC   CL50' '
HEADING_2_LENGTH      EQU  *-HEADING_2

HEADING_3             DC   C' '
                      DC   CL8'Member  '
                      DC   C' '
                      DC   CL6'  Ver '
                      DC   C' '
                      DC   CL8'Owner'
                      DC   C' '
                      DC   CL3'Sta'
                      DC   C'  '
                      DC   CL20'*---- Created -----*'
                      DC   C' '
                      DC   CL10'Check outs'
                      DC   CL2' '
                      DC   C'*-----Check out by/date------*'
                      DC   C' '
                      DC   C'*-----Check in by/date ------*'
                      DC   CL10'      Size'
                      DC   CL20' '
HEADING_3_LENGTH      EQU  *-HEADING_3

MSG01                 DS   0C
                      DC   C'-'
                      DC   C'Library index is in error.  Save name:'
MSG01_SAVE_NAME       DC   CL8' '
                      DC   C', Key name:'
MSG01_LIB_NAME        DC   CL8' '
MSG01L                equ  *-MSG01

DESC_1                DS   0C
                      DC   C' '
                      DC   C'Library description: '
DESC_1_DESC           DS   (L'LIB_DATA)C
DESC_1L               EQU  *-DESC_1

SUMMARY1              DS   0C
                      DC   C'-'
                      DC   CL45'Members in library:'
SUMMARY_MEMBERS       DC   X'402020206B2020206B202120'
SUMMARY1L             EQU  *-SUMMARY1
SUMMARY2              DS   0C
                      DC   C' '
                      DC   CL45'Number of members in CHECKED-IN state:'
SUMMARY_IN            DC   X'402020206B2020206B202120'
SUMMARY2L             EQU  *-SUMMARY2
SUMMARY3              DS   0C
                      DC   C' '
                     DC   CL45'Number of members in CHECKED-OUT state:'
SUMMARY_OUT           DC   X'402020206B2020206B202120'
SUMMARY3L             EQU  *-SUMMARY3
SUMMARY4              DS   0C
                      DC   C' '
                      DC   CL45'Total size of all source (in lines):'
SUMMARY_RECORDS       DC   X'402020206B2020206B202120'
SUMMARY4L             EQU  *-SUMMARY4

PR_1                  DC   C' '
PR_NAME               DC   CL8' '
                      DC   C' '
PR_VERSION            DC   CL6' '
                      DC   C' '
PR_OWNER              DC   CL8' '
                      DC   C' '
PR_STATUS             DC   CL3' '
                      DC   C' '
PR_CREATE_DATE        DC   CL9' '
                      DC   C' '
PR_CREATE_TIME        DC   CL11' '
                      DC   C' '
PR_CHECK_OUTS         DC   CL10' '
                      DC   CL2' '
PR_CHECK_OUT_USER     DC   CL8' '
                      DC   C' '
PR_CHECK_OUT_DATE     DC   CL9' '
                      DC   C' '
PR_CHECK_OUT_TIME     DC   CL11' '
                      DC   C' '
PR_CHECK_IN_USER      DC   CL8' '
                      DC   C' '
PR_CHECK_IN_DATE      DC   CL9' '
                      DC   C' '
PR_CHECK_IN_TIME      DC   CL11' '
PR_RECORDS            DC   CL10' '
PR_1_LENGTH           EQU  *-PR_1

                      DC   C' '
PR_AREA               DS   0CL151
PR_CC                 DC   C' '
                      DC   CL150' '

                      LIBRECD DSECT=YES

         IFGRPL  AM=VTAM
$MAX_SOURCE_SIZE EQU  8000

         COPY  REGEQU
         END   UTIL0004
./ ADD NAME=UTIL0005 0100-09250-09250-0919-00393-00393-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  This utility unloads source code into a sequential file in         *
*  "export" format.                                                   *
*                                                                     *
*  You may "export" all or specific members of a library.             *
*                                                                     *
*  Exports of all members of a library may be used as a backup        *
*  of the library.                                                    *
*                                                                     *
*  Exports also may be used to move the contents of one library       *
*  to another.                                                        *
*                                                                     *
*  The complement to this program is UTIL0006.                        *
*                                                                     *
* ------------------------------------------------------------------- *
UTIL0005 CSECT
UTIL0005 AMODE 24
UTIL0005 RMODE 24
         USING UTIL0005,R12         DEFINE BASE
         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS
         LR    R12,R15              COPY BASE
         B     INIT0000             BRANCH AROUND EYECATCHER
         DC    CL8'UTIL0005'        MODULE NAME
         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         LA    R1,SAVEAREA
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                   COPY SAVE AREA ADDRESS
         USING SAVEAREA,R13
         OPEN  (SYSIN,INPUT)            OPEN SYSIN
         OPEN  (SYSPRINT,OUTPUT)        OPEN SYSPRINT
         OPEN  (SYSUT2,OUTPUT)          OPEN SYSUT2
         OPEN  (LIB,INPUT)              OPEN LIBRARY
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE*2,                                  +
               LOC=BELOW
         LR    R11,R1
         USING LIB_RECORD,R11
         MODCB RPL=RPL1,                                               +
               AREA=(R11),                                             +
               AREALEN=$MAX_SOURCE_SIZE*2
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE*2,                                  +
               LOC=BELOW
         LR    R10,R1
         LA    R2,4(R10)
         MODCB RPL=RPL2,                                               +
               AREA=(R2),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2
INIT0010 DS    0H
         GET   SYSIN,CONTROL_STATEMENT
         MVC   PRINT_DATA(L'CONTROL_STATEMENT),CONTROL_STATEMENT
         MVC   WORK_MEMBER,BLANKS       CLEAR MEMBER NAME
         MVC   WORK_VERSION,H1          DEFAULT TO VERSION 1
         LA    R1,CONTROL_STATEMENT
         LA    R2,WORK_MEMBER
         LA    R3,L'WORK_MEMBER+1       LOOP LIMIT
INIT0020 DS    0H
         CLI   0(R1),C' '               A BLANK?
         BE    INIT0060                 YES
         CLI   0(R1),C','               A COMMA?
         BE    INIT0030                 YES
         MVC   0(1,R2),0(R1)            COPY THE CHARACTER
         LA    R1,1(R1)                 NEXT ON CONTROL STATEMENT
         LA    R2,1(R2)                 NEXT IN WORK AREA
         BCT   R3,INIT0020              LOOP
         MVC   PRINT_DATA+L'CONTROL_STATEMENT(EMSG01L),EMSG01
         BAL   R9,PRT0000               PRINT
         OI    FLAGS,$ERROR             SET ERROR INDICATOR
         MVI   WORK_RC,8                SET RETURN CODE
         B     INIT0010
INIT0030 DS    0H
         LA    R1,1(R1)                 SKIP COMMA
         LA    R3,6                     LOOP LIMIT
         MVC   WORK_NUMBER,ZEROS        INITIALIZE TO ALL ZERO
INIT0040 DS    0H
         CLI   0(R1),C' '               BLANK?
         BE    INIT0050                 YES
         MVC   WORK_NUMBER(4),WORK_NUMBER+1
         MVC   WORK_NUMBER+4(1),0(R1)
         LA    R1,1(R1)                 NEXT IN CONTROL STATEMENT
         BCT   R3,INIT0040              LOOP
         MVC   PRINT_DATA+L'CONTROL_STATEMENT(EMSG02L),EMSG02
         BAL   R9,PRT0000
         OI    FLAGS,$ERROR
         MVI   WORK_RC,8                SET RETURN CODE
         B     INIT0010
INIT0050 DS    0H
         PACK  DWORD,WORK_NUMBER        PACK VERSION
         CVB   R1,DWORD                 CONVERT TO BINARY
         STCM  R1,3,WORK_VERSION        SAVE VERSION
INIT0060 DS    0H
         NI    FLAGS,255-$EXPORT_ALL    TURN OFF 'ALL' FLAG
         GETMAIN RU,                                                   +
               LV=EXPORT_BLOCK_LENGTH,                                 +
               LOC=BELOW
         USING EXPORT_BLOCK,R1
         MVC   EXPORT_EYE,EXPORT_ID     SET EYE CATCHER
         MVC   EXPORT_NEXT,EXPORT_CHAIN SET 'NEXT' BLOCK ADDRESS
         MVC   EXPORT_MEMBER,WORK_MEMBER
         MVC   EXPORT_VERSION,WORK_VERSION
         MVI   EXPORT_FLAG,0            CLEAR FLAGS
         ST    R1,EXPORT_CHAIN          SAVE NEW BLOCK'S ADDRESS
         BAL   R9,PRT0000               PRINT THE CONTROL STATEMENT
         B     INIT0010                 READ NEXT CONTROL STATEMENT
         DROP  R1
* ------------------------------------------------------------------- *
*                                                                     *
*  All control statments have been read.                              *
*                                                                     *
*  Export the library member(s).                                      *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0000 DS    0H
         TM    FLAGS,$ERROR             SERIOUS ERROR?
         BO    EXIT0000                 YES
PROC0010 DS    0H
         GET   RPL=RPL1
         LTR   R15,R15                  EOF?
         BNZ   EXIT0000                 YES
         CLI   LIB_KEY_TYPE,$LIB_KEY_LIB_DESC
         BE    PROC0010                 BYPASS LIBRARY DESCRIPTOR(S)
         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         BH    EXIT0000                 BEYOND INDEX RECORDS?
         OC    SAVE_KEY,SAVE_KEY        FIRST PASS?
         BNZ   PROC0020                 NO
         MVC   SAVE_KEY,LIB_KEY         INITIALIZE SAVED KEY
         B     PROC0030
PROC0020 DS    0H
         CLC   SAVE_KEY,LIB_KEY         SAME MEMBER?
         BE    PROC0080                 YES
         TM    FLAGS,$EXPORT            EXPORTING PREVIOUS MEMBER?
         BNO   PROC0030                 NO
         BAL   R8,PROC1000
PROC0030 DS    0H
         MVC   SAVE_KEY,LIB_KEY         COPY NEW KEY
         NI    FLAGS,255-$EXPORT        RESET FLAG
         ICM   R2,15,EXPORT_CHAIN       FIRST EXPORT BLOCK
         BZ    PROC0070                 NONE.. EXPORTING ALL
         USING EXPORT_BLOCK,R2
PROC0040 DS    0H
         CLC   LIB_KEY_NAME,EXPORT_MEMBER
         BNE   PROC0050                 NO
         CLC   LIB_KEY_VERSION,EXPORT_VERSION
         BE    PROC0060                 YES
PROC0050 DS    0H
         ICM   R2,15,EXPORT_NEXT        NEXT EXPORT BLOCK
         BNZ   PROC0040
         B     PROC0010
PROC0060 DS    0H
         OI    EXPORT_FLAG,$EXPORT_FOUND
PROC0070 DS    0H
         OI    FLAGS,$EXPORT            SET EXPORT THIS MEMBER FLAG
         MVC   WORK_SOURCE_RECORDS,LIB_INDEX_RECORDS
         OC    EXPORT_CHAIN,EXPORT_CHAIN
         BNZ   PROC0080                 DOING SPECIFIC MEMBERS
         MVC   MSG01_NAME,LIB_KEY_NAME  COPY MEMBER NAME
         SR    R1,R1                    CLEAR REGISTER
         ICM   R1,3,LIB_KEY_VERSION     GET VERSION NUMBER
         CVD   R1,DWORD                 CONVERT TO DECIMAL
         MVC   MSG01_VERSION,=X'402020202120'
         ED    MSG01_VERSION,DWORD+5
         MVC   PRINT_CC(MSG01L),MSG01   COPY MESSAGE
         BAL   R9,PRT0000               PRINT
PROC0080 DS    0H
         TM    FLAGS,$EXPORT            EXPORTING THIS MEMBER?
         BNO   PROC0010                 NO
         MVC   0(2,R10),=Y(LIB_INDEX_RECORD_LENGTH+4)
         XC    2(2,R10),2(R10)
         MVC   4(LIB_INDEX_RECORD_LENGTH,R10),0(R11)
         PUT   SYSUT2,0(R10)            WRITE TO EXPORT FILE
         B     PROC0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PROC1000 DS    0H
         MVC   SEARCH_KEY,SAVE_KEY
         MVI   SEARCH_KEY_TYPE,$LIB_KEY_TYPE_DATA
         MVC   SEARCH_KEY_SEQUENCE,F1   SET SEQUENCE NUMBER TO 1
PROC1010 DS    0H
         GET   RPL=RPL2
         LTR   R15,R15                  RECORD FOUND?
         BNZR  R8                       NO
         SHOWCB RPL=RPL2,               SHOW DATA FROM RPL             +
               FIELDS=(RECLEN),         .. REQUEST RECORD LENGTH       +
               AREA=RECLEN,             .. AREA FOR RETURNED DATA      +
               LENGTH=4                 .. LENGTH OF 'RECLEN'
         ICM   R1,15,RECLEN             RECORD LENGTH
         LA    R1,4(R1)                 PLUS LENGTH OF LLBB
         STCM  R1,3,0(R10)              SET LENGTH
         XC    2(2,R10),2(R10)
         PUT   SYSUT2,0(R10)            WRITE TO EXPORT FILE
         ICM   R1,15,SEARCH_KEY_SEQUENCE
         LA    R1,1(R1)
         STCM  R1,15,SEARCH_KEY_SEQUENCE
         B     PROC1010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         CP    LINE_COUNT,MAX_LINE      TIME FOR HEADING?
         BL    PRT0010
         AP    PAGE_COUNT,P1            ADD 1 TO PAGE COUNT
         MVC   HEAD_PAGE,=X'40202020202020202120'
         ED    HEAD_PAGE,PAGE_COUNT
         PUT   SYSPRINT,HEADING         PRINT HEADING
         ZAP   LINE_COUNT,P0            RESET LINE COUNT
PRT0010  DS    0H
         PUT   SYSPRINT,PRINT_CC
         MVI   PRINT_CC,C' '
         MVC   PRINT_DATA(PRINT_LENGTH),PRINT_CC
         AP    LINE_COUNT,P1
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         TM    FLAGS,$ERROR             SERIOUS ERROR?
         BO    EXIT0050                 YES
         TM    FLAGS,$EXPORT            EXPORTING PREVIOUS MEMBER?
         BNO   EXIT0010                 NO
         BAL   R8,PROC1000
EXIT0010 DS    0H
         ICM   R2,15,EXPORT_CHAIN       FIRST EXPORT BLOCK
         BZ    EXIT0050                 NONE
         BAL   R9,PRT0000
         BAL   R9,PRT0000
EXIT0020 DS    0H
         MVC   SUMMARY_MEMBER,EXPORT_MEMBER
         SR    R1,R1                    CLEAR REGISTER
         ICM   R1,3,EXPORT_VERSION      GET VERSION
         CVD   R1,DWORD                 CONVERT TO DECIMAL
         MVC   SUMMARY_VERSION,=X'402020202120'
         ED    SUMMARY_VERSION,DWORD+5
         TM    EXPORT_FLAG,$EXPORT_FOUND
         BO    EXIT0030                 YES
         MVC   SUMMARY_STATUS,=CL10'NOT FOUND'
         MVI   WORK_RC,4                SET RETURN CODE
         B     EXIT0040
EXIT0030 DS    0H
         MVC   SUMMARY_STATUS,=CL10'EXPORTED'
EXIT0040 DS    0H
         MVC   PRINT_DATA(SUMMARY_LENGTH),SUMMARY
         BAL   R9,PRT0000               PRINT
         ICM   R2,15,EXPORT_NEXT        NEXT EXPORT BLOCK
         BNZ   EXIT0020
EXIT0050 DS    0H
         FREEMAIN RU,                                                  +
               A=(R10),                                                +
               LV=$MAX_SOURCE_SIZE*2
         FREEMAIN RU,                                                  +
               A=(R11),                                                +
               LV=$MAX_SOURCE_SIZE*2
         CLOSE (SYSIN)
         CLOSE (SYSPRINT)
         CLOSE (SYSUT2)
         CLOSE (LIB)
         SR    R15,R15
         IC    R15,WORK_RC
         L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DWORD    DS    D
SAVEAREA DS    18F
SYSIN    DCB   DDNAME=SYSIN,                                           +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               EODAD=PROC0000,                                         +
               MACRF=GM
SYSPRINT DCB   DDNAME=SYSPRINT,                                        +
               DSORG=PS,                                               +
               RECFM=FBA,                                              +
               LRECL=133,                                              +
               MACRF=PM
SYSUT2   DCB   DDNAME=SYSUT2,                                          +
               DSORG=PS,                                               +
               RECFM=VB,                                               +
               LRECL=$MAX_SOURCE_SIZE*2,                               +
               BLKSIZE=$MAX_SOURCE_SIZE*2+4,                           +
               MACRF=PM
LIB      ACB   AM=VSAM,                                                +
               DDNAME=LIB,                                             +
               MACRF=(KEY,DIR,SEQ)

RPL1     RPL   AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB,                 .. ACB                         +
               OPTCD=(SEQ,SYN,MVE)

RPL2     RPL   AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB,                 .. ACB                         +
               ARG=SEARCH_KEY,          .. KEY                         +
               KEYLEN=L'SEARCH_KEY,     .. KEY LENGTH                  +
               OPTCD=(KEY,DIR,SYN,MVE)

SEARCH_KEY            DS   0XL15
SEARCH_KEY_TYPE       DS   X
SEARCH_KEY_NAME       DS   CL8
SEARCH_KEY_VERSION    DS   XL2
SEARCH_KEY_SEQUENCE   DS   XL4

SAVE_KEY              DC   XL11'0000000000000000000000'

EXPORT_CHAIN          DC   A(0)
RECLEN                DS   F
F1                    DC   F'1'
H1                    DC   H'1'
H80                   DC   H'80'
H100                  DC   H'100'
P0                    DC   P'0'
P1                    DC   P'1'
MAX_LINE              DC   PL3'65'
LINE_COUNT            DC   PL3'99999'
PAGE_COUNT            DC   PL5'0'
FILES_READ            DC   PL5'0'
FILES_EXPORTED        DC   PL5'0'

WORK_RC               DC   X'00'
WORK_SOURCE_RECORDS   DS   XL4
WORK_MEMBER           DC   CL8' '
WORK_VERSION          DC   XL2'0000'
WORK_NUMBER           DC   CL5' '

FLAGS                 DC   X'80'
$EXPORT_ALL           EQU  X'80'
$ERROR                EQU  X'40'
$EXPORT               EQU  X'20'

ZEROS                 DC   CL5'00000'
EXPORT_ID             DC   CL8'EXPORT'
BLANKS                DC   CL80' '
CONTROL_STATEMENT     DC   CL80' '

HEADING               DS   0C
                      DC   C'1'
                      DC   CL47' '
                      DC   C'Librarian export utility'
                      DC   CL46' '
                      DC   C'Page'
HEAD_PAGE             DC   cl10' '
HEADING_LENGTH        EQU  *-HEADING

MSG01                 DS   0C
                      DC   C' '
                      DC   c'Exporting member '
MSG01_NAME            DC   CL8' '
                      DC   C'   Version '
MSG01_VERSION         DC   Cl6' '
MSG01L                equ  *-MSG01

SUMMARY               DS   0C
SUMMARY_MEMBER        DC   CL8' '
                      DC   CL3' '
SUMMARY_VERSION       DC   CL6' '
                      DC   CL3' '
SUMMARY_STATUS        DC   CL10' '
SUMMARY_LENGTH        EQU  *-SUMMARY

EMSG01                DC   C'Member name too long'
EMSG01L               EQU  *-EMSG01
EMSG02                DC   C'Version number too long'
EMSG02L               EQU  *-EMSG02

PRINT_CC              DC   C' '
PRINT_DATA            DC   CL132' '
PRINT_LENGTH          EQU  *-PRINT_CC

                      LIBRECD DSECT=YES

EXPORT_BLOCK          DSECT
EXPORT_EYE            DS   CL8
EXPORT_NEXT           DS   A
EXPORT_MEMBER         DS   CL8
EXPORT_VERSION        DS   XL2
EXPORT_FLAG           DS   X
$EXPORT_FOUND         EQU  X'80'
EXPORT_BLOCK_LENGTH   EQU  *-EXPORT_BLOCK
         IFGRPL  AM=VTAM

$MAX_SOURCE_SIZE EQU  8000

         COPY  REGEQU
         END   UTIL0005
./ ADD NAME=UTIL0006 0100-09250-09250-0919-00665-00665-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Import files previously exported by utility 5.                     *
*                                                                     *
* ------------------------------------------------------------------- *
UTIL0006 CSECT
UTIL0006 AMODE 24
UTIL0006 RMODE 24
         USING UTIL0006,R12         DEFINE BASE
         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS
         LR    R12,R15              COPY BASE
         B     INIT0000             BRANCH AROUND EYECATCHER
         DC    CL8'UTIL0006'        MODULE NAME
         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         LA    R1,SAVEAREA
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                   COPY SAVE AREA ADDRESS
         USING SAVEAREA,R13
         OPEN  (SYSPRINT,OUTPUT)        OPEN SYSPRINT
         OPEN  (LIB,UPDAT)              OPEN LIBRARY
         OPEN  (SYSUT1,INPUT)           OPEN EXPORT
         OPEN  (SYSIN,INPUT)            OPEN CONTROL STATEMENTS
         BAL   R10,HEAD0000             PRINT HEADING
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0000 DS    0H
         GET   SYSIN,CNTLSTMT           READ A CONTROL STATEMENT
         MVC   MSG00SMT,CNTLSTMT        COPY CONTROL STATEMENT
         MVC   PRINT_DATA(MSG00L),MSG00
         BAL   R11,PRT0000              PRINT CONTROL STATEMENT
         CLC   RESTORE_STATEMENT,CNTLSTMT
         BE    PROC0010                 YES
         CLC   REPLACE_STATEMENT,CNTLSTMT
         BE    PROC0110                 YES
         MVC   PRINT_LINE(MSG11L),MSG11
         OI    FLAGS,$ERROR
         BAL   R11,PRT0000              PRINT
         B     PROC0000
PROC0010 DS    0H
         LA    R1,CNTLSTMT+L'RESTORE_STATEMENT
         CLC   CNTLSTMT+L'RESTORE_STATEMENT(50),BLANKS
         BNE   PROC0020
         MVC   PRINT_LINE(MSG12L),MSG12
         OI    FLAGS,$ERROR
         BAL   R11,PRT0000              PRINT
         B     PROC0000
PROC0020 DS    0H
         CLI   0(R1),C' '               BLANK?
         BNE   PROC0030                 NO
         LA    R1,1(R1)                 NEXT
         B     PROC0020
PROC0030 DS    0H
         MVC   WORKMEM,BLANKS           INITIALIZE NAME
         MVC   WORKVER,H1               INITIALIZE VERSION
         MVI   WORKREPL,C'N'            INITIALIZE REPLACE INDICATOR
         LA    R2,WORKMEM
         SR    R3,R3                    FOR LENGTH
PROC0040 DS    0H
         CLI   0(R1),C' '               BLANK?
         BE    PROC0100                 YES
         CLI   0(R1),C','               COMMA?
         BE    PROC0060                 YES
PROC0050 DS    0H
         CH    R1,H8                    NAME TOO LONG?
         BE    ERR0010                  YES
         MVC   0(1,R2),0(R1)            COPY
         LA    R1,1(R1)
         LA    R2,1(R2)
         LA    R3,1(R3)
         B     PROC0040                 LOOP
PROC0060 DS    0H
         LA    R1,1(R1)                 SKIP COMMA
         MVC   WORKWORK,=C'00000'       INITIALIZE VERSION TO ZERO
         SR    R3,R3                    FOR LENGTH
PROC0070 DS    0H
         CLI   0(R1),C' '               BLANK?
         BE    PROC0080                 YES
         CLI   0(R1),C','               COMMA?
         BE    PROC0080                 YES
         CLI   0(R1),C'0'               AT LEAST A ZERO?
         BL    ERR0020                  NO
         CLI   0(R1),C'9'               MORE THAN EBCDIC 9?
         BH    ERR0020                  YES
         CH    R3,H5                    TOO MANY DIGITS IN VERSION?
         BE    ERR0030                  YES
         MVC   WORKWORK(4),WORKWORK+1
         MVC   WORKWORK+4(1),0(R1)
         LA    R1,1(R1)                 NEXT
         LA    R3,1(R3)
         B     PROC0070
PROC0080 DS    0H
         PACK  DWORD,WORKWORK           PACK THE VERSION NUMBER
         CVB   R2,DWORD                 CONVERT TO BINARY
         STCM  R2,3,WORKVER             SAVE VERSION
         CLI   0(R1),C' '               STOP ON A BLANK?
         BE    PROC0100                 YES
         CLC   REPLACE_STATEMENT,1(R1)  REPLACE OPTION?
         BE    PROC0090                 YES
         MVC   PRINT_LINE(MSG13L),MSG13
         OI    FLAGS,$ERROR
         BAL   R11,PRT0000              PRINT
         B     PROC0000
PROC0090 DS    0H
         MVI   WORKREPL,C'Y'            SET FLAG
PROC0100 DS    0H
         CLC   WORKMEM,BLANKS           NAME BLANK?
         BE    ERR0040                  YES
         GETMAIN RU,                                                   +
               LV=INCLUDEL,                                            +
               LOC=BELOW
         LR    R9,R1                    COPY ADDRESS
         USING INCLUDE,R9               DEFINE BASE
         MVC   INCLUDE_EYE,INCLUDE_ID   IDENTIFY THE CONTROL BLOCK
         MVC   INCLUDE_NEXT,INCLUDE_CHAIN
         MVC   INCLUDE_MEMBER,WORKMEM   COPY MEMBER NAME
         MVC   INCLUDE_VERSION,WORKVER  COPY VERSION NUMBER
         ST    R9,INCLUDE_CHAIN
         CLI   WORKREPL,C'Y'            REPLACE THIS MEMBER?
         BNE   PROC0000                 NO
         OI    INCLUDE_FLAG,$INCLUDE_REPLACE
         B     PROC0000
PROC0110 DS    0H
         OI    FLAGS,$GLOBAL_REPLACE    SET GLOBAL REPLACE FLAG
         B     PROC0000
* ------------------------------------------------------------------- *
*                                                                     *
*   All control statements have been processed.                       *
*                                                                     *
*   Start "restore" process.                                          *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0200 DS    0H
         TM    FLAGS,$ERROR             ERROR(S) FOUND?
         BNO   PROC0210                 NO
         MVC   PRINT_LINE(MSG05L),MSG05 COPY MESSAGE
         BAL   R11,PRT0000              PRINT
         B     EXIT0000                 AND EXIT
PROC0210 DS    0H
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE*2,                                  +
               LOC=BELOW
         LR    R8,R1                    COPY BUFFER ADDRESS
         USING EXPORT_RECORD,R8         DEFINE BASE
         ST    R8,BUFFER_ADDRESS_1
         LA    R2,4(R8)                 SKIP LLBB
         MODCB RPL=RPL1,                                               +
               AREA=(R2),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2
         LTR   R15,R15                  SUCCESSFUL?
         BNZ   ERR0050                  NO
         GETMAIN RU,                                                   +
               LV=$MAX_SOURCE_SIZE*2,                                  +
               LOC=BELOW
         LR    R7,R1
         ST    R7,BUFFER_ADDRESS_2
         MODCB RPL=RPL2,                                               +
               AREA=(R7),                                              +
               AREALEN=$MAX_SOURCE_SIZE*2
         LTR   R15,R15                  SUCCESSFUL?
         BNZ   ERR0050                  NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0220 DS    0H
         GET   SYSUT1,0(R8)             READ SYSUT1
         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         BE    PROC0230                 YES
         CLI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         BE    PROC0240                 YES
         B     PROC0220
PROC0230 DS    0H
         CLC   LIB_KEY_SEQ,F1           SEQUENCE NUMBER 1?
         BE    PROC0250                 YES
PROC0240 DS    0H
         TM    FLAGS,$RESTORE           RESTORING THIS MEMBER?
         BO    PROC0400                 YES
         B     PROC0220                 READ NEXT EXPORT RECORD
* ------------------------------------------------------------------- *
*                                                                     *
*     A new member has been found on the EXPORT file                  *
*                                                                     *
*     If there were no control statements, we are to "restore"        *
*     every member on the EXPORT file.                                *
*                                                                     *
*     If any RESTORE statements were given, only the members          *
*     explicitly named will be restored.                              *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0250 DS    0H
         NI    FLAGS,255-$RESTORE       RESET RESTORE INDICATOR
         ICM   R9,15,INCLUDE_CHAIN
         BZ    PROC0300                 NONE, RESTORE EVERYTHING
PROC0260 DS    0H
         CLC   INCLUDE_MEMBER,LIB_KEY_NAME
         BNE   PROC0270                 NO
         CLC   INCLUDE_VERSION,LIB_KEY_VERSION
         BE    PROC0290
PROC0270 DS    0H
         ICM   R9,15,INCLUDE_NEXT
         BNZ   PROC0260
* ------------------------------------------------------------------- *
*     THE CURRENT MEMBER WAS NOT SELECTED                             *
* ------------------------------------------------------------------- *
PROC0280 DS    0H
         MVC   MSG15MEM,LIB_KEY_NAME
         SR    R1,R1
         ICM   R1,3,LIB_KEY_VERSION     VERSION NUMBER
         CVD   R1,DWORD                 CONVERT TO DECIMAL
         MVC   MSG15VER,=X'402120202020'
         ED    MSG15VER,DWORD+5         EDIT VERSION
         MVC   PRINT_LINE(MSG15L),MSG15
         BAL   R11,PRT0000              PRINT THE MESSAGE
         B     PROC0220
* ------------------------------------------------------------------- *
*                                                                     *
*      We have a an possible member to restore.                       *
*      First find out if it already exists in the library.            *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0290 DS    0H
         OI    INCLUDE_FLAG,$INCLUDE_FOUND
PROC0300 DS    0H
         MVI   SEARCH_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   SEARCH_KEY_NAME,LIB_KEY_NAME
         MVC   SEARCH_KEY_VERSION,LIB_KEY_VERSION
         MVC   SEARCH_KEY_SEQUENCE,F1
         GET   RPL=RPL2                 READ INDEX RECORD
         LTR   R15,R15                  SUCCESSFUL?
         BNZ   PROC0380                 DOES NOT EXIST
* ------------------------------------------------------------------- *
*                                                                     *
*     The current member already exists in the master file.           *
*     determine of the member should be replaced.                     *
*                                                                     *
* ------------------------------------------------------------------- *
         TM    FLAGS,$GLOBAL_REPLACE    GLOBAL REPLACE ON?
         BO    PROC0340                 YES
* ------------------------------------------------------------------- *
*                                                                     *
*     Determine if there is a restore with "REPLACE".     .           *
*                                                                     *
* ------------------------------------------------------------------- *
         ICM   R9,15,INCLUDE_CHAIN      FIRST INCLUDE BLOCK
PROC0310 DS    0H
         CLC   INCLUDE_MEMBER,LIB_KEY_NAME
         BNE   PROC0320
         CLC   INCLUDE_VERSION,LIB_KEY_VERSION
         BE    PROC0330                 REPLACE
PROC0320 DS    0H
         ICM   R9,15,INCLUDE_NEXT
         BNZ   PROC0310                 LOOP
         B     PROC0280
PROC0330 DS    0H
         OI    INCLUDE_FLAG,$INCLUDE_FOUND
         TM    INCLUDE_FLAG,$INCLUDE_REPLACE
         BO    PROC0340
* ------------------------------------------------------------------- *
*                                                                     *
*    Member exists. Replace was NOT specified.                        *
*                                                                     *
* ------------------------------------------------------------------- *
         DS    0H
         MVC   MSG16MEM,LIB_KEY_NAME
         SR    R1,R1
         ICM   R1,3,LIB_KEY_VERSION     VERSION NUMBER
         CVD   R1,DWORD                 CONVERT TO DECIMAL
         MVC   MSG16VER,=X'402120202020'
         ED    MSG16VER,DWORD+5         EDIT VERSION
         MVC   PRINT_LINE(MSG16L),MSG16
         BAL   R11,PRT0000              PRINT THE MESSAGE
         B     PROC0220
* ------------------------------------------------------------------- *
*                                                                     *
*   This member exists and REPLACE is specified                       *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0340 DS    0H
         MVC   MSG17MEM,SEARCH_KEY_NAME COPY MEMBER NAME
         SR    R1,R1
         ICM   R1,3,SEARCH_KEY_VERSION  VERSION NUMBER
         CVD   R1,DWORD                 CONVERT TO DECIMAL
         MVC   MSG17VER,=X'402120202020'
         ED    MSG17VER,DWORD+5         EDIT VERSION
         MVC   PRINT_LINE(MSG17L),MSG17
         BAL   R11,PRT0000              PRINT THE MESSAGE
         OI    FLAGS,$RESTORE
* ------------------------------------------------------------------- *
*                                                                     *
*   DELETE ALL RECORDS THAT APPLY TO THE EXISTING MEMBER.             *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0350 DS    0H
         ERASE RPL=RPL2
         LTR   R15,R15                  SUCCESSFUL
         BNZ   PROC0370
         ICM   R1,15,SEARCH_KEY_SEQUENCE
         LA    R1,1(R1)                 PLUS 1
         STCM  R1,15,SEARCH_KEY_SEQUENCE
PROC0360 DS    0H
         GET   RPL=RPL2                 READ NEXT RECORD
         LTR   R15,R15
         BZ    PROC0350                 ERASE THIS RECORD
PROC0370 DS    0H
         CLI   SEARCH_KEY_TYPE,$LIB_KEY_TYPE_DATA
         BE    PROC0390                 YES, INDEX AND DATA DELETED
         MVI   SEARCH_KEY_TYPE,$LIB_KEY_TYPE_DATA
         MVC   SEARCH_KEY_SEQUENCE,F1
         B     PROC0360
* ------------------------------------------------------------------- *
*                                                                     *
*   This member did not exist. Add it to the library.                 *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0380 DS    0H
         MVC   MSG18MEM,SEARCH_KEY_NAME COPY MEMBER NAME
         SR    R1,R1
         ICM   R1,3,SEARCH_KEY_VERSION  VERSION NUMBER
         CVD   R1,DWORD                 CONVERT TO DECIMAL
         MVC   MSG18VER,=X'402120202020'
         ED    MSG18VER,DWORD+5         EDIT VERSION
         MVC   PRINT_LINE(MSG18L),MSG18
         BAL   R11,PRT0000              PRINT THE MESSAGE
* ------------------------------------------------------------------- *
*                                                                     *
*   Add the member.                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0390 DS    0H
         OI    FLAGS,$RESTORE           SET 'RESTORING' INDICATOR
PROC0400 DS    0H
         SR    R2,R2                    CLEAR REGISTER
         ICM   R2,3,0(R8)               RECORD LENGTH
         SH    R2,H4                    MINUS LLBB
         LA    R3,4(R8)
         MODCB RPL=RPL1,                                               +
               RECLEN=(R2),                                            +
               AREA=(R3)
         PUT   RPL=RPL1
         LTR   R15,R15
         BNZ   ERR0080
         B     PROC0220
* ------------------------------------------------------------------- *
*                                                                     *
*   EOF on SYSUT1 has been found.                                     *
*                                                                     *
*   If specific members were requested, make sure all were found.     *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0500 DS    0H
         ICM   R9,15,INCLUDE_CHAIN
         BZ    EXIT0000                 NOTHING ON THE CHAIN
         TM    INCLUDE_FLAG,$INCLUDE_FOUND
         BO    PROC0510                 YES
         MVC   MSG14MEM,INCLUDE_MEMBER  COPY MEMBER NAME
         SR    R1,R1
         ICM   R1,3,INCLUDE_VERSION     VERSION NUMBER
         CVD   R1,DWORD                 CONVERT TO DECIMAL
         MVC   MSG14VER,=X'402120202020'
         ED    MSG14VER,DWORD+5         EDIT VERSION
         MVC   PRINT_LINE(MSG14L),MSG14
         BAL   R11,PRT0000              PRINT THE MESSAGE
PROC0510 DS    0H
         ICM   R9,15,INCLUDE_NEXT
         B     EXIT0000                 EXIT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVC   PRINT_LINE(MSG01L),MSG01
         BAL   R11,PRT0000
         MVI   RC,8
         OI    FLAGS,$ERROR
         B     PROC0000
ERR0020  DS    0H
         MVC   PRINT_LINE(MSG02L),MSG02
         BAL   R11,PRT0000
         MVI   RC,8
         OI    FLAGS,$ERROR
         B     PROC0000
ERR0030  DS    0H
         MVC   PRINT_LINE(MSG03L),MSG03
         BAL   R11,PRT0000
         OI    FLAGS,$ERROR
         MVI   RC,8
         B     PROC0000
ERR0040  DS    0H
         MVC   PRINT_LINE(MSG04L),MSG04
         BAL   R11,PRT0000
         MVI   RC,8
         OI    FLAGS,$ERROR
         B     PROC0000
ERR0050  DS    0H
         ST    R15,DWORD
         UNPK  MSG08RC(3),DWORD+3(2)
         MVZ   MSG08RC(2),=X'0F0F'
         TR    MSG08RC,HEXCHAR
         MVI   MSG08RC+2,C' '
         MVC   PRINT_LINE(MSG08L),MSG08
         BAL   R11,PRT0000
         MVI   RC,8
         B     EXIT0000
ERR0060  DS    0H
         ST    R15,DWORD
         UNPK  MSG09RC(3),DWORD+3(2)
         MVZ   MSG09RC(2),=X'0F0F'
         TR    MSG09RC,HEXCHAR
         MVI   MSG09RC+2,C' '
         MVC   PRINT_LINE(MSG09L),MSG09
         MVI   RC,8
         BAL   R11,PRT0000
         B     EXIT0000
ERR0070  DS    0H
         ST    R15,DWORD
         UNPK  MSG10RC(3),DWORD+3(2)
         MVZ   MSG10RC(2),=X'0F0F'
         TR    MSG10RC,HEXCHAR
         MVI   MSG10RC+2,C' '
         MVC   PRINT_LINE(MSG10L),MSG10
         BAL   R11,PRT0000
         MVI   RC,8
         B     EXIT0000
ERR0080  DS    0H
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         CP    LINE_COUNT,LINE_MAX      TIME FOR HEADING?
         BL    PRT0010                  NO
         BAL   R10,HEAD0000             PRINT HEADING
PRT0010  DS    0H
         PUT   SYSPRINT,PRINT_CC        PRINT
         AP    LINE_COUNT,P1            ADD 1 TO LINE COUNT
         MVC   PRINT_LINE,PRINT_LINE-1
         BR    R11                      EXIT
HEAD0000 DS    0H
         AP    PAGE_COUNT,P1            ADD 1 TO PAGE COUNTER
         MVC   PRINT_CC(HEAD1L),HEAD1   COPY HEADING
         ED    PRINT_CC+(HEAD1_PAGE-HEAD1)(L'HEAD1_PAGE),PAGE_COUNT
         PUT   SYSPRINT,PRINT_CC        PRINT HEADING
         MVC   PRINT_LINE,PRINT_LINE-1
         ZAP   LINE_COUNT,P1            SET LINE COUNT
         BR    R10                      DONE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ICM   R1,15,BUFFER_ADDRESS_1   WAS BUFFER OBTAINED?
         BZ    EXIT0010                 NO
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE*2
EXIT0010 DS    0H
         ICM   R1,15,BUFFER_ADDRESS_2   WAS BUFFER OBTAINED?
         BZ    EXIT0020                 NO
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=$MAX_SOURCE_SIZE*2
EXIT0020 DS    0H
         CLOSE (SYSIN)
         CLOSE (SYSPRINT)
         CLOSE (SYSUT1)
         CLOSE (LIB)
         SR    R15,R15
         IC    R15,RC
         L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R14)
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DWORD    DS    D
SAVEAREA DS    18F
SYSUT1   DCB   DDNAME=SYSUT1,                                          +
               DSORG=PS,                                               +
               RECFM=VB,                                               +
               LRECL=$MAX_SOURCE_SIZE*2,                               +
               BLKSIZE=$MAX_SOURCE_SIZE*2+4,                           +
               EODAD=PROC0500,                                         +
               MACRF=GM

SYSIN    DCB   DDNAME=SYSIN,                                           +
               DSORG=PS,                                               +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               EODAD=PROC0200,                                         +
               MACRF=GM

SYSPRINT DCB   DDNAME=SYSPRINT,                                        +
               DSORG=PS,                                               +
               RECFM=FBA,                                              +
               LRECL=133,                                              +
               MACRF=PM

LIB      ACB   AM=VSAM,                                                +
               DDNAME=LIB,                                             +
               MACRF=(KEY,DIR,OUT)

RPL1     RPL   AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB,                 .. ACB                         +
               OPTCD=(KEY,DIR,SYN,MVE)

RPL2     RPL   AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB,                 .. ACB                         +
               ARG=SEARCH_KEY,                                         +
               KEYLEN=L'SEARCH_KEY,                                    +
               OPTCD=(KEY,DIR,SYN,MVE,UPD)

INCLUDE_CHAIN         DS   A

SEARCH_KEY            DS   0CL15
SEARCH_KEY_TYPE       DS   X
SEARCH_KEY_NAME       DS   CL8
SEARCH_KEY_VERSION    DS   XL2
SEARCH_KEY_SEQUENCE   DS   XL4

RC                    DS   X'00'

CNTLSTMT              DC   CL80' '
RESTORE_STATEMENT     DC   C'RESTORE '
REPLACE_STATEMENT     DC   C'REPLACE                      '

WORKMEM               DC   CL8' '
WORKVER               DC   XL2'0000'
WORKREPL              DC   C' '
WORKWORK              DC   CL5'00000'

FLAGS                 DC   X'00'
$ERROR                EQU  X'80'
$GLOBAL_REPLACE       EQU  X'40'
$RESTORE              EQU  X'20'

INCLUDE_ID            DC   CL8'INCLUDE'
HEXCHAR               DC   C'0123456789ABCDEF'

HEAD1                 DC   C'1'
                      DC   CL50' '
                      DC   C'LIBRARY UTILITY 6'
                      DC   CL50' '
                      DC   C'PAGE'
HEAD1_PAGE            DC   X'402020202120'
HEAD1L                EQU  *-HEAD1

MSG00                 DS   0C
                      DC   C'CONTROL STATEMENT: '
MSG00SMT              DC   CL80' '
MSG00L                EQU  *-MSG00

MSG01                 DS   0C
                      DC   C'** Name too long'
MSG01L                EQU  *-MSG01
MSG02                 DS   0C
                      DC   C'** Non-numeric digit in version'
MSG02L                EQU  *-MSG02
MSG03                 DS   0C
                      DC   C'** Too many digits in version number'
MSG03L                EQU  *-MSG03
MSG04                 DS   0C
                      DC   C'** Name omitted'
MSG04L                EQU  *-MSG04
MSG05                 DS   0C
                      DC   C'** Error(s) encountered, aborting'
MSG05L                EQU  *-MSG05
MSG08                 DS   0C
                      DC   C'MODCB (AREA) failed, R15='
MSG08RC               DC   CL2' '
                      DC   C' '
MSG08L                EQU  *-MSG08
MSG09                 DS   0C
                      DC   C'MODCB (RECLEN) failed, R15='
MSG09RC               DC   CL2' '
                      DC   C' '
MSG09L                EQU  *-MSG09
MSG10                 DS   0C
                      DC   C'PUT failed, R15='
MSG10RC               DC   CL2' '
                      DC   C' '
MSG10L                EQU  *-MSG10
MSG11                 DS   0C
                      DC   C'** Invalid control statement'
MSG11L                EQU  *-MSG11
MSG12                 DS   0C
                      DC   C'** Invalid RESTORE statement'
MSG12L                EQU  *-MSG12
MSG13                 DS   0C
                      DC   C'** Invalid option on RESTORE statement'
MSG13L                EQU  *-MSG13
MSG14                 DS   0C
                      DC   C'Member '
MSG14MEM              DC   CL8' '
MSG14VER              DC   CL6' '
                      DC   C' not found in export.'
MSG14L                EQU  *-MSG14
MSG15                 DS   0C
                      DC   C'Member '
MSG15MEM              DC   CL8' '
MSG15VER              DC   CL6' '
                      DC   C' not selected, not restored'
MSG15L                equ  *-MSG15
MSG16                 DS   0C
                      DC   C'Member '
MSG16MEM              DC   CL8' '
MSG16VER              DC   CL6' '
                      DC   C' exists, NOT replaced'
MSG16L                EQU  *-MSG16
MSG17                 DS   0C
                      DC   C'Member '
MSG17MEM              DC   CL8' '
MSG17VER              DC   CL6' '
                      DC   C' exists and will be replaced'
MSG17L                EQU  *-MSG17
MSG18                 DS   0C
                      DC   C'Member '
MSG18MEM              DC   CL8' '
MSG18VER              DC   CL6' '
                      DC   C' has been added to the library'
MSG18L                EQU  *-MSG18

BUFFER_ADDRESS_1      DC   A(0)
BUFFER_ADDRESS_2      DC   A(0)
BUFFER_SIZE           EQU  8004

F1                    DC   F'1'
H1                    DC   H'1'
H4                    DC   H'4'
H5                    DC   H'5'
H8                    DC   H'8'
LINE_COUNT            DC   PL3'0'
PAGE_COUNT            DC   PL3'0'
P1                    DC   P'1'
LINE_MAX              DC   P'65'

BLANKS                DC   CL80' '

                      DC   C' '
PRINT_LINE            DS   0CL133
PRINT_CC              DC   C' '
PRINT_DATA            DC   CL132' '
INCLUDE               DSECT
INCLUDE_EYE           DS   CL8
INCLUDE_NEXT          DS   XL4
INCLUDE_MEMBER        DS   CL8
INCLUDE_VERSION       DS   XL2
INCLUDE_FLAG          DS   X
$INCLUDE_FOUND        EQU  X'80'
$INCLUDE_REPLACE      EQU  X'40'
INCLUDEL              EQU  *-INCLUDE

EXPORT_RECORD         DSECT
EXPORT_LENGTH         DS   XL2
                      DS   XL2
                      LIBRECD DSECT=NO

$MAX_SOURCE_SIZE EQU 8000

         COPY  REGEQU
         END   UTIL0006
./ ADD NAME=UTIL0007 0100-09250-09250-0919-00415-00415-00000-SOURCE
* ------------------------------------------------------------------- *
*                                                                     *
*  Name: Load members of PDS directly to a library                    *
*                                                                     *
* ------------------------------------------------------------------- *
UTIL0007 CSECT
UTIL0007 AMODE 24
UTIL0007 RMODE 24
         USING UTIL0007,R12                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
         DC    CL8'UTIL0007'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INIT0000 DS    0H
         LA    R1,SAVEAREA
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         COPY SAVE AREA ADDRESS
         USING SAVEAREA,R13
         OPEN  (DIR,INPUT)                    PDS DIRECTORY
         OPEN  (MEMBER,INPUT)                 OPEN MEMBER DCB
         OPEN  (SYSPRINT,OUTPUT)              OPEN SYSPRINT
         OPEN  (LIB,UPDAT)                    OPEN LIBRARY
         BAL   R14,HEAD0000                   PRINT HEADING
         LOAD  EP=LIBUX01
         ST    R0,AUX01
         L     R1,=A(EXPANDED_BUFFER)
         ST    R1,UX01_EXPANDED_BUFFER
         L     R1,=A(COMPRESSED_BUFFER)
         ST    R1,UX01_COMPRESSED_BUFFER
         LA    R1,EXPANDED_LENGTH
         ST    R1,UX01_EXPANDED_LENGTH
         LA    R1,COMPRESSED_LENGTH
         ST    R1,UX01_COMPRESSED_LENGTH
         LA    R1,LIB_KEY
         L     R6,=A(EXPANDED_BUFFER)
         SR    R7,R7                          CLEAR LENGTH
* ------------------------------------------------------------------- *
*                                                                     *
*        R2  Length of data remaining in directory block              *
*        R3  address within directory data                            *
*        R4  address within source data buffer                        *
*        R5  data remaining in source buffer                          *
*        R6  address within de-compressed buffer                      *
*        R7  length of data in de-compressed buffer                   *
*                                                                     *
* ------------------------------------------------------------------- *
PROC0010 DS    0H
         GET   DIR,DIRAREA                    BLOCK OF DIRECTORY
         LH    R2,DIRAREA                     BYTES OF DATA IN RECORD
         SH    R2,H2                          MINUS 2 FOR LENGTH
         LA    R3,DIRAREA+2                   FIRST ENTRY IN BLOCK
         USING DIRDSECT,R3                    DEFINE BASE
PROC0020 DS    0H
         CLI   0(R3),X'FF'                    END OF DIRECTORY?
         BE    EXIT0000                       YES
         MVC   TTRZ(3),DIRTTR                 MOVE TO FULLWORD BOUNDARY
         MVI   TTRZ+3,X'00'                   SET 'Z' TO ZERO
         POINT MEMBER,TTRZ,TYPE=REL           ISSUE POINT
         LTR   R15,R15                        LOCATED SUCCESSFULLY??
         BNZ   ERR0010                        NO
         AP    TOTAL_MEMBERS,P1               ADD 1 TO MEMBERS
         MVC   LIB_KEY_NAME,0(R3)             SET MEMBER NAME
         XC    LIB_KEY_SEQ,LIB_KEY_SEQ        RESET SEQUENCE NUMBER
PROC0040 DS    0H
         XC    READECB,READECB                CLEAR READ ECB
         L     R4,=A(SOURCE_BUFFER)           MEMBER I/O AREA
         READ  READECB,                       READ BLOCK OF MEMBER     +
               SF,                            .. SEQUENTIALLY FORWARD  +
               MEMBER,                        .. DCB                   +
               (R4),                          .. I/O AREA ADDRESS      +
               ,                              .. NO SPECIFIED LENGTH   +
               S                              .. BLOCK SIZE FROM DCB
         CHECK READECB                        WAIT FOR I/O COMPLETION
         LA    R9,MEMBER                      MEMBER DCB
         USING IHADCB,R9                      DEFINE BASE
         LH    R5,DCBBLKSI                    BLOCK SIZE FROM DCB
         L     R1,DCBIOBA                     IOB ADDRESS
         SH    R1,H8                          DCB POINTS AT IOB+8
         USING IOB,R1                         DEFINE BASE
         SH    R5,IOBSTDRD+14                 LENGTH ACTUALLY READ
PROC0050 DS    0H
         AP    MEMBER_SOURCE_RECORDS,P1       add 1 to records
         MVC   0(80,R6),0(R4)                 COPY SOURCE TO BUFFER
         LA    R6,80(,R6)                     NEXT SOURCE RECORD
         AH    R7,H80                         PLUS 80
         CH    R7,=Y($MAX_SOURCE_SIZE)        BUFFER FULL?
         BL    PROC0060                       NO
         BAL   R11,PROC0200                   COMPRESS/WRITE BUFFER
PROC0060 DS    0H
         AH    R4,H80                         NEXT SOURCE RECORD
         SH    R5,H80                         MINUS A RECORD
         BH    PROC0050                       ADD NEXT RECORD TO BUFFER
         B     PROC0040                       READ NEXT BUFFER
* ------------------------------------------------------------------- *
*        EOF on current member                                        *
* ------------------------------------------------------------------- *
PROC0150 DS    0H
         LTR   R7,R7                          ANY DATA IN BUFFER?
         BZ    PROC0160                       NO
         BAL   R11,PROC0200                   COMPRESS/WRITE LAST BUFR
PROC0160 DS    0H
* ------------------------------------------------------------------- *
*        Build/write index record                                     *
* ------------------------------------------------------------------- *
         XC    LIB_RECORD(LIB_INDEX_RECORD_LENGTH),LIB_RECORD
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_INDEX
         MVC   LIB_KEY_NAME,0(R3)
         MVC   LIB_KEY_VERSION,H1
         MVC   LIB_KEY_SEQ,F1
         MVI   LIB_INDEX_STATUS,$LIB_STATUS_IN
         TIME  DEC
         STCM  R0,15,LIB_INDEX_CREATE_TIME
         STCM  R1,15,LIB_INDEX_CREATE_DATE
         XC    LIB_INDEX_CHECK_OUT_TIME,LIB_INDEX_CHECK_OUT_TIME
         ZAP   LIB_INDEX_CHECK_OUT_DATE,P0
         MVC   LIB_INDEX_CHECK_OUT_USER,BLANKS
         XC    LIB_INDEX_CHECK_OUTS,LIB_INDEX_CHECK_OUTS
         XC    LIB_INDEX_CHECK_IN_TIME,LIB_INDEX_CHECK_IN_TIME
         ZAP   LIB_INDEX_CHECK_IN_DATE,P0
         MVC   LIB_INDEX_OWNER,BLANKS
         MVC   LIB_INDEX_CHECK_IN_USER,BLANKS
         ZAP   DWORD,MEMBER_SOURCE_RECORDS
         CVB   R1,DWORD
         STCM  R1,15,LIB_INDEX_RECORDS
         LA    R14,LIB_INDEX_RECORD_LENGTH
         LA    R15,LIB_RECORD
         MODCB RPL=WRITERPL,                                           +
               RECLEN=(R14),                                           +
               AREA=(R15)
         PUT   RPL=WRITERPL                   WRITE INDEX RECORD
         LTR   R15,R15                        SUCCESFUL?
         BNZ   ERR0020                        NO
         MVC   PRINT_CC(MSG02L),MSG02
         MVC   PRINT_CC+(MSG02_NAME-MSG02)(L'MSG02_NAME),0(R3)
         ED    PRINT_CC+(MSG02_SOURCE_RECORDS-MSG02)(L'MSG02_SOURCE_REC+
               ORDS),MEMBER_SOURCE_RECORDS
         ED    PRINT_CC+(MSG02_DATA_RECORDS-MSG02)(L'MSG02_DATA_RECORDS+
               ),MEMBER_DATA_RECORDS
         L     R1,MEMBER_LENGTH               COMPRESSED SIZE
         CVD   R1,DWORD                       CONVERT TO DECIMAL
         ED    PRINT_CC+(MSG02_DATA_SIZE-MSG02)(L'MSG02_DATA_SIZE),DWOR+
               D+3
         BAL   R14,PRT0000
         AP    TOTAL_SOURCE_RECORDS,MEMBER_SOURCE_RECORDS
         ZAP   MEMBER_SOURCE_RECORDS,P0
         AP    TOTAL_DATA_RECORDS,MEMBER_DATA_RECORDS
         ZAP   MEMBER_DATA_RECORDS,P0
         L     R1,TOTAL_LENGTH
         A     R1,MEMBER_LENGTH
         ST    R1,TOTAL_LENGTH
         XC    MEMBER_LENGTH,MEMBER_LENGTH
* ------------------------------------------------------------------- *
*        Locate next directory entry                                  *
* ------------------------------------------------------------------- *
         NI    DIRC,X'1F'                     ONLY LENGTH BITS
         SR    R1,R1                          CLEAR REGISTER
         IC    R1,DIRC                        HALFWORDS OF USER DATA
         AR    R1,R1                          BYTES OF USER DATA
         LA    R1,DIRUSER-DIRDSECT(R1)        TOTAL LENGTH
         SR    R2,R1                          DIRECTORY DATA REMAINING
         BZ    PROC0010                       READ NEXT DIRECOTRY BLOCK
         AR    R3,R1                          NEXT MEMBER
         B     PROC0020                       PROCESS NEXT MEMBER
* ------------------------------------------------------------------- *
*        Compress buffer and write data record                        *
* ------------------------------------------------------------------- *
PROC0200 DS    0H
         MVI   LIB_KEY_TYPE,$LIB_KEY_TYPE_DATA
         MVC   LIB_KEY_VERSION,H1
         ICM   R1,15,LIB_KEY_SEQ              CURRENT RECORD NUMBER
         A     R1,F1                          PLUS 1
         STCM  R1,15,LIB_KEY_SEQ              UPDATE SEQUENCE NUMBER
         ST    R7,EXPANDED_LENGTH
         MVI   UX01_FUNCTION,$UX01_COMPRESS
         LA    R1,UX01_PARMS
         L     R15,AUX01
         BASSM R14,R15                        COMPRESS THE SOURCE
         MVC   0(L'LIB_KEY,R6),LIB_KEY        COPY TO BUFFER
         L     R14,MEMBER_LENGTH
         A     R14,COMPRESSED_LENGTH
         ST    R14,MEMBER_LENGTH
         L     R14,COMPRESSED_LENGTH
         LA    R14,L'LIB_KEY(R14)             PLUS LENGTH OF KEY
         LA    R15,LIB_RECORD
         MODCB RPL=WRITERPL,                                           +
               RECLEN=(R14),                                           +
               AREA=(R15)
         PUT   RPL=WRITERPL
         LTR   R15,R15                        SUCCESFUL?
         BNZ   ERR0020                        NO
         AP    MEMBER_DATA_RECORDS,P1
         L     R6,=A(EXPANDED_BUFFER)
         SR    R7,R7                          CLEAR LENGTH
         BR    R11
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         CVD   R15,DWORD                      CONVERT TO DECIMAL
         MVC   PRINT_CC(EMSG01L),EMSG01
         ED    PRINT_CC+(EMSG01_RC-EMSG01)(L'EMSG01_RC),DWORD+6
         BAL   R14,PRT0000                    PRINT
         B     EXIT0000
ERR0020  DS    0H
         CVD   R15,DWORD                      CONVERT TO DECIMAL
         MVC   PRINT_CC(EMSG02L),EMSG02
         ED    PRINT_CC+(EMSG02_RC-EMSG02)(L'EMSG02_RC),DWORD+6
         LA    R1,WRITERPL
         USING IFGRPL,R1
         UNPK  PRINT_CC+(EMSG02_FDBK-EMSG02)(9),RPLFDBK(5)
         TR    PRINT_CC+(EMSG02_FDBK-EMSG02)(8),HEXCHAR
         MVI   PRINT_CC+(EMSG02_FDBK-EMSG02)+8,C' '
         BAL   R14,PRT0000                    PRINT
         DC    H'0'
         B     EXIT0000
         DROP  R1
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ST    R14,PRINT_LINK
         CP    LINE_COUNT,LINE_MAX            TIME FOR HEADING?
         BL    PRT0010                        NO
         BAL   R14,HEAD0000                   PRINT HEADING
PRT0010  DS    0H
         PUT   SYSPRINT,PRINT_CC              PRINT
         AP    LINE_COUNT,P1                  ADD 1 TO LINE COUNT
         MVC   PRINT_LINE,PRINT_LINE-1
         L     R14,PRINT_LINK
         BR    R14                            EXIT
HEAD0000 DS    0H
         ST    R14,HEAD_LINK
         AP    PAGE_COUNT,P1                  ADD 1 TO PAGE COUNTER
         MVC   PRINT_CC(HEAD1L),HEAD1         COPY HEADING
         ED    PRINT_CC+(HEAD1_PAGE-HEAD1)(L'HEAD1_PAGE),PAGE_COUNT
         PUT   SYSPRINT,PRINT_CC              PRINT HEADING
         MVC   PRINT_LINE,PRINT_LINE-1
         ZAP   LINE_COUNT,P1                  SET LINE COUNT
         L     R14,HEAD_LINK
         BR    R14                            DONE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         MVC   PRINT_CC(MSG03L),MSG03
         ED    PRINT_CC+(MSG03_MEMBERS-MSG03)(L'MSG03_MEMBERS),TOTAL_ME+
               MBERS
         ED    PRINT_CC+(MSG03_SOURCE_RECORDS-MSG03)(L'MSG03_SOURCE_REC+
               ORDS),TOTAL_SOURCE_RECORDS
         ED    PRINT_CC+(MSG03_DATA_RECORDS-MSG03)(L'MSG03_DATA_RECORDS+
               ),TOTAL_DATA_RECORDS
         L     R1,TOTAL_LENGTH                COMPRESSED SIZE
         CVD   R1,DWORD                       CONVERT TO DECIMAL
         ED    PRINT_CC+(MSG03_DATA_SIZE-MSG03)(L'MSG03_DATA_SIZE),DWOR+
               D+3
         BAL   R14,PRT0000
         BAL   R14,PRT0000
         CLOSE (SYSPRINT)
         CLOSE (DIR)
         CLOSE (MEMBER)
         CLOSE (LIB)
         DELETE EP=LIBUX01
         L     R13,4(R13)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DWORD    DS    D
SAVEAREA DS    18F
DIR      DCB   DSORG=PS,                                               +
               DDNAME=SYSUT1,                                          +
               RECFM=U,                                                +
               LRECL=256,                                              +
               EODAD=EXIT0000,                                         +
               MACRF=GM
MEMBER   DCB   DSORG=PO,                                               +
               DDNAME=SYSUT1,                                          +
               RECFM=FB,                                               +
               EODAD=PROC0150,                                         +
               MACRF=R
SYSPRINT DCB   DDNAME=SYSPRINT,                                        +
               DSORG=PS,                                               +
               RECFM=FBA,                                              +
               LRECL=133,                                              +
               MACRF=PM
LIB      ACB   AM=VSAM,                                                +
               DDNAME=LIB,                                             +
               MACRF=(KEY,DIR,OUT)

WRITERPL RPL   AM=VSAM,                GENERATE VSAM RPL               +
               ACB=LIB,                 .. ACB                         +
               OPTCD=(KEY,DIR,SYN)      ..

                      UX01PARM DSECT=NO

EXPANDED_LENGTH       DC   F'0'
COMPRESSED_LENGTH     DC   F'0'

TTRZ                  DC   F'0'

PRINT_LINK            DS   A
HEAD_LINK             DS   A

AUX01                 DC   A(0)
F1                    DC   F'1'
H1                    DC   H'1'
H2                    DC   H'2'
H8                    DC   H'8'
H80                   DC   H'80'
LINE_COUNT            DC   PL3'0'
PAGE_COUNT            DC   PL3'0'
P0                    DC   P'0'
P1                    DC   P'1'
LINE_MAX              DC   P'65'
MEMBER_SOURCE_RECORDS DC   PL5'0'
MEMBER_DATA_RECORDS   DC   PL5'0'
MEMBER_LENGTH         DC   F'0'
TOTAL_MEMBERS         DC   PL5'0'
TOTAL_DATA_RECORDS    DC   PL5'0'
TOTAL_SOURCE_RECORDS  DC   PL6'0'
TOTAL_LENGTH          DC   F'0'

BLANKS                DC   CL80' '

HEXCHAR               EQU  *-C'0'
                      DC   C'0123456789ABCDEF'

HEAD1                 DC   C'1'
                      DC   CL50' '
                      DC   C'LIBRARY UTILITY 7'
                      DC   CL50' '
                      DC   C'PAGE'
HEAD1_PAGE            DC   X'402020202120'
HEAD1L                EQU  *-HEAD1

MSG02                 DS   0C
                      DC   C' '
                      DC   C'Member '
MSG02_NAME            DC   CL8' '
                      DC   C' source records:'
MSG02_SOURCE_RECORDS  DC   X'40202020202020202120'
                      DC   C'    data records:'
MSG02_DATA_RECORDS    DC   X'40202020202020202120'
                      DC   C'    data size:'
MSG02_DATA_SIZE       DC   X'40202020202020202120'
MSG02L                EQU  *-MSG02

MSG03                 DS   0C
                      DC   C'-'
                      DC   C'TOTAL  '
                      DC   CL4' '
MSG03_MEMBERS         DC   X'40202020202020202120'
                      DC   CL8' '
MSG03_SOURCE_RECORDS  DC   X'402020202020202020202120'
                      DC   C'                 '
MSG03_DATA_RECORDS    DC   X'40202020202020202120'
                      DC   C'              '
MSG03_DATA_SIZE       DC   X'40202020202020202120'
MSG03L                EQU  *-MSG03

EMSG01                DS   0C
                      DC   C'-'
                      DC   C'UTIL000701E '
                      DC   C'POINT failed, RC='
EMSG01_RC             DC   X'40202120'
EMSG01L               EQU  *-EMSG01

EMSG02                DS   0C
                      DC   C'-'
                      DC   C'UTIL000702E '
                      DC   C'VSAM PUT failed, R15='
EMSG02_RC             DC   X'40202120'
                      DC   C', RPLFDBK='
EMSG02_FDBK           DC   CL8' '
                      DC   C' '
EMSG02L               EQU  *-EMSG02

                      DC   C' '
PRINT_LINE            DS   0CL133
PRINT_CC              DC   C' '
PRINT_DATA            DC   CL132' '

DIRAREA               DS   0H,CL256

                      LTORG

                      LIBRECD DSECT=NO
                      ORG  LIB_DATA
COMPRESSED_BUFFER     DS   ($MAX_SOURCE_SIZE*2)x

EXPANDED_BUFFER       DS   ($MAX_SOURCE_SIZE)X

SOURCE_BUFFER         DS   ($MAX_SOURCE_SIZE)X

         SPACE 2
DIRDSECT DSECT
DIRNAME  DS    CL8
DIRTTR   DS    CL3
DIRC     DS    X
DIRUSER  DS    0C

         IFGRPL AM=VSAM
         IEZIOB
         DCBD   DSORG=PO
         COPY   REGEQU
$MAX_SOURCE_SIZE EQU 8000
         END    UTIL0007
./ ADD NAME=VTAMSUB  0100-09250-09250-0919-00394-00394-00000-SOURCE
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
VTAMSUB  CSECT
VTAMSUB  AMODE 31
VTAMSUB  RMODE ANY
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING VTAMSUB,R12                    DEFINE PROGRAM BASE
         B     INIT0000
MODID    DC    CL8'VTAMSUB'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         LR    R10,R1                         COPY PARM BLOCK ADDRESS
         USING VTAM_PARM_LIST,R10             DEFINE BASE
         L     R8,VTAM_PARM_ACB
         USING IFGACB,R8                      DEFINE BASE
         L     R7,VTAM_PARM_RPL
         USING IFGRPL,R7                      DEFINE BASE
         L     R6,VTAM_PARM_RPLX
         USING ISTRPL6X,R6                    DEFINE BASE
         L     R5,VTAM_PARM_IO
         USING NETBLOK,R5                     DEFINE BASE
         GETMAIN RU,                                                   +
               LV=WORK_AREA_LENGTH,                                    +
               LOC=ANY
         ST    R1,8(R13)                      CHAIN OUR SAVE AREA
         ST    R13,4(R1)                      CHAIN CALLER'S AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WORK_AREA,R13                  DEFINE WORK AREA BASE
         MVC   WORK_JOB_NAME,BLANKS           CLEAR JOB NAME
         CLI   VTAM_PARM_CMD,$VTAM_OPEN
         BE    OPEN0000                       YES
         CLI   VTAM_PARM_CMD,$VTAM_SEND
         BE    SEND0000                       YES
         CLI   VTAM_PARM_CMD,$VTAM_RECEIVE
         BE    RECV0000                       YES
         CLI   VTAM_PARM_CMD,$VTAM_CLOSE
         BE    CLOSE000                       YES
         MVI   VTAM_PARM_RC,10
         B     EXIT0000                       EXIT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
OPEN0000 DS    0H
         LA    R0,ACBL                        ACB'S SIZE
         GETMAIN RU,                          ACQUIRE STORAGE FOR ACB  +
               LV=(0),                        .. SIZE                  +
               LOC=ANY                        ..
         ST    R1,VTAM_PARM_ACB               SAVE ACB'S ADDRESS
         LR    R8,R1                          COPY ACB ADDRESS
         MVC   0(ACBL,R8),ACBI                INITIALIZE ACB
         MVI   WORK_APPL_LENGTH,8             SET LENGTH
         LA    R0,WORK_APPL_LENGTH            APPLID'S LENGTH ADDRESS
         ST    R0,ACBAPID                     SET APPLID ADDRESS IN ACB
         LA    R0,EXLSTL                      EXLST SIZE
         GETMAIN RU,                          ACQUIRE STORAGE FOR EXLST+
               LV=(0),                        .. SIZE                  +
               LOC=ANY                        .. FROM BELOW THE LINE
         MVC   0(EXLSTL,R1),EXLSTI            INITIALIZE EXIT LIST
         ST    R1,VTAM_PARM_XLST              SAVE EXIT LIST'S ADDRESS
         ST    R1,ACBEXLST                    SET EXLST'S ADDRESS
         USING IFGEXLST,R1                    DEFINE BASE
         XC    EXLATTNP,EXLATTNP              ATTN EXIT
         LA    R0,RPLL                        RPL'S SIZE
         GETMAIN RU,                          ACQUIRE STORAGE FOR RPL  +
               LV=(0),                        .. SIZE                  +
               LOC=ANY                        .. FROM BELOW THE LINE
         LR    R7,R1                          COPY ADDRESS
         ST    R7,VTAM_PARM_RPL               SAVE RPL'S ADDRESS
         MVC   0(RPLL,R7),RPLI                INITIALIZE RPL
         LA    R0,RPLEXTL                     RPL EXTENSION SIZE
         GETMAIN RU,                          GET STORAGE FOR RPLEXT   +
               LV=(0),                        .. SIZE                  +
               LOC=ANY                        .. FROM BELOW THE LINE
         LR    R6,R1                          COPY ADDRESS
         ST    R6,VTAM_PARM_RPLX              SAVE RPL'S ADDRESS
         MVC   0(RPLEXTL,R6),RPLEXTI          INITIALIZE RPL EXTENSION
         ST    R6,RPLAAREA                    SET RPL EXTENSION'S ADDR
         MVC   RPLDACB,VTAM_PARM_ACB          SET ACB'S ADDRESS
         GETMAIN RU,                          GET STORAGE FOR I/O AREA +
               LV=32768,                      .. SIZE                  +
               LOC=ANY                        ..
         LR    R5,R1                          COPY ADDRESS
         ST    R5,VTAM_PARM_IO                SAVE I/O AREA ADDRESS
         LA    R0,NIBL                        NIB'S SIZE
         GETMAIN RU,                          ACQUIRE STORAGE FOR NIB  +
               LV=(0),                        .. SIZE                  +
               LOC=ANY                        .. FROM BELOW THE LINE
         LR    R4,R1                          COPY NIB'S ADDRESS
         USING ISTDNIB,R4
         ST    R4,VTAM_PARM_NIB               SET NIB'S ADDRESS
         MVC   0(NIBL,R4),NIBI                INITIALIZE NIB
         MVC   NIBSYM,VTAM_PARM_APPL          SET STC'S APPLID
         INQUIRE RPL=(R7),                    ISSUE INQUIRE            +
               NIB=(R4),                      .. NIB'S ADDRESS         +
               OPTCD=APPSTAT                  .. WANT PARTNER'S STATUS
         CLI   RPLFDB3,0                      PARTNER READY?
         BNE   OPEN0060                       NO
         LOAD  EP=LIBOPT                      LOAD OPTIONS
         LR    R15,R0                         COPY ADDRESS
         USING OPTDSECT,R15                   DEFINE BASE
         LA    R3,OPTACB                      ADDRESS OF ACB NAMES
         SR    R2,R2                          CLEAR REGISTER
         ICM   R2,3,OPT#ACB                   NUMBER OF ACBS
OPEN0010 DS    0H
         MVC   WORK_APPL_NAME,0(R3)           COPY ACB NAME
         MVC   WORK_OCPL(OPENL),OPENI
         OPEN  ((R8)),                                                 +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)               OPEN ACB
         LTR   R15,R15                        OPEN SUCCESSFUL?
         BZ    OPEN0020                       YES
         LA    R3,8(R3)                       NEXT ACB NAME
         BCT   R2,OPEN0010                    LOOP
         DELETE EP=LIBOPT                     DELETE OPTIONS
         MVI   VTAM_PARM_RC,1                 SET RETURN CODE
         B     EXIT0000                       EXIT
OPEN0020 DS    0H
         DELETE EP=LIBOPT
         SETLOGON ACB=(R8),                   ISSUE SETLOGON           +
               RPL=(R7),                      .. RPL FOR REQUEST       +
               OPTCD=START                    .. ENABLE EXIT
         MVC   RPL6LU,VTAM_PARM_APPL          SET PARTNER'S LU NAME
         APPCCMD CONTROL=OPRCNTL,             ISSUE APPC COMMAND       +
               QUALIFY=CNOS,                  .. CNOS                  +
               RPL=(R7),                      .. RPL'S ADDRESS         +
               LOGMODE=LU62P                  .. LOGMODE
         CLC   RPL6RC,X000001                 CNOS ACCEPTED?
         BE    OPEN0030                       YES
         MVI   VTAM_PARM_RC,2                 SET RETURN CODE
         B     EXIT0000                       EXIT
OPEN0030 DS    0H
         MVC   0(FMH5L,R5),FMH5               COPY FMH5 TO I/O AREA
         XC    WORK_VTAM_ECB,WORK_VTAM_ECB    CLEAR THE ECB
         APPCCMD CONTROL=ALLOC,               ISSUE APPC COMMAND       +
               QUALIFY=ALLOCD,                .. ALLOCATE A SESSION    +
               RPL=(R7),                      .. RPL'S ADDRESS         +
               ECB=WORK_VTAM_ECB,             .. ECB                   +
               AREA=(R5),                     .. FMH'S ADDRESS         +
               RECLEN=FMH5L,                  .. FMH'S LENGTH          +
               LOGMODE=LU62P,                 .. LOGMODE               +
               OPTCD=ASY
         WAIT  1,ECB=WORK_VTAM_ECB
         APPCCMD CONTROL=CHECK,RPL=(R7)
         OC    RPL6RC,RPL6RC                  ALL ZEROS?
         BNZ   OPEN0060                       NO
         MVC   VTAM_PARM_CNVID,RPL6CNVD       SAVE CONVERSATION ID
* ------------------------------------------------------------------- *
*        Identify the user                                            *
* ------------------------------------------------------------------- *
         L     R1,CVTPTR                      CVT ADDRESS
         USING CVT,R1                         DEFINE BASE
         ICM   R15,15,CVTSMCA                 SMF AREA ADDRESS
         BZ    OPEN0070                       SMF NOT ACTIVE!
         USING SMCABASE,R15                   DEFINE BASE
         MVC   WORK_SMF,SMCASID               COPY SMF ID
         USING PSA,R0                         DEFINE BASE
         L     R1,PSAAOLD                     OUR ASCB'S ADDRESS
         USING ASCB,R1                        DEFINE BASE
         ICM   R14,15,ASCBJBNI                JOB NAME ADDRESS
         BNZ   OPEN0040
         ICM   R14,15,ASCBJBNS                STC NAME ADDRESS
         BZ    OPEN0050                       NO NAME.. STRANGE..
OPEN0040 DS    0H
         MVC   WORK_JOB_NAME,0(R14)           SAVE JOB OR STC NAME
OPEN0050 DS    0H
         L     R14,ASCBASXB                   ASXB ADDRESS
         USING ASXB,R14                       DEFINE ASCB BASE
         L     R15,ASXBSENV                   ACEE'S ADDRESS
         USING ACEE,R15                       DEFINE ACEE BASE
         SR    R1,R1                          CLEAR REGISTER
         IC    R1,ACEEUSRL                    USER ID LENGTH
         BCTR  R1,0                           MINUS 1
         MVC   WORK_USER,BLANKS               INITIALIZE USERID
         EX    R1,UIDMVC                      COPY USER ID
         MVI   NET_FUNCTION,$NET_IDENTIFY_USER
         MVC   NET_SMF,WORK_SMF
         MVC   NET_USER,WORK_USER
         MVC   NET_JOB_NAME,WORK_JOB_NAME
         LA    R0,NET_IDENTIFY_LENGTH
         STCM  R0,3,NET_LENGTH
         BAL   R9,SEND0010                    SEND
         BAL   R9,RECV0010                    RECEIVE
         CLI   NET_RETURN_CODE,$NET_OK
         BE    EXIT0000                       NO
         MVI   VTAM_PARM_RC,3                 SET RETURN CODE
         B     EXIT0000                       AND EXIT
OPEN0060 DS    0H
         MVI   VTAM_PARM_RC,4                 SET RETURN CODE
         B     EXIT0000                       AND EXIT
OPEN0070 DS    0H
         MVI   VTAM_PARM_RC,5                 SET RETURN CODE
         B     EXIT0000                       AND EXIT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
RECV0000 DS    0H
         BAL   R9,RECV0010
         B     EXIT0000
RECV0010 DS    0H
         XC    WORK_VTAM_ECB,WORK_VTAM_ECB    CLEAR THE ECB
         APPCCMD CONTROL=RECEIVE,             ISSUE RECEIVE            +
               QUALIFY=SPEC,                  .. FOR A SPECIFIC SESSION+
               RPL=(R7),                      .. RPL'S ADDRESS         +
               FILL=LL,                       .. ONLY 1 LOGICAL RECORD +
               AREA=(R5),                     .. I/O AREA ADDRESS      +
               AREALEN=32768,                 .. I/O AREA SIZE         +
               CONVID=VTAM_PARM_CNVID,        .. CONVERSATION ID       +
               OPTCD=ASY
         WAIT  ECB=WORK_VTAM_ECB              WAIT FOR THE SEND
         APPCCMD CONTROL=CHECK,RPL=(R7)
         OC    RPL6RC,RPL6RC                  RECEIVE OK?
         BZR   R9                             YES
         MVI   VTAM_PARM_RC,1                 SET RETURN CODE
         BR    R9
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
SEND0000 DS    0H
         BAL   R9,SEND0010
         B     EXIT0000
SEND0010 DS    0H
         XC    WORK_VTAM_ECB,WORK_VTAM_ECB    CLEAR THE ECB
         SR    R2,R2                          CLEAR REGISTER
         ICM   R2,3,NET_LENGTH                LENGTH
         XC    NET_FILL,NET_FILL
         APPCCMD CONTROL=SEND,                ISSUE SEND               +
               QUALIFY=DATA,                  .. SEND DATA             +
               RPL=(R7),                      .. RPL'S ADDRESS         +
               AREA=(R5),                     .. I/O AREA ADDRESS      +
               ECB=WORK_VTAM_ECB,             .. ECB ADDRESS           +
               RECLEN=(R2),                   .. I/O LENGTH            +
               CONMODE=CS,                    .. CONTINUE SPECIFIC     +
               CONVID=VTAM_PARM_CNVID,        .. CONVERSATION ID       +
               OPTCD=ASY
         WAIT  ECB=WORK_VTAM_ECB              WAIT FOR THE SEND
         APPCCMD CONTROL=CHECK,RPL=(R7)
         OC    RPL6RC,RPL6RC                  SEND OK?
         BZR   R9                             YES
         MVI   VTAM_PARM_RC,1                 SET RETURN CODE
         BR    R9
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
CLOSE000 DS    0H
         APPCCMD CONTROL=DEALLOC,             DE-ALLOCATE A SESSION    +
               QUALIFY=FLUSH,                 .. FLUSH BUFFERS         +
               RPL=(R7),                      .. RPL'S ADDRESS         +
               CONVID=VTAM_PARM_CNVID         .. CONVERSATION ID
         OC    RPL6RC,RPL6RC                  DE-ALLOCATE SUCCESSFUL?
         BNZ   CLOSE100                       NO
CLOSE010 DS    0H
         MVC   WORK_OCPL(CLOSEL),CLOSEI
         CLOSE ((R8)),                        CLOSE THE ACB            +
               MODE=31,                                                +
               MF=(E,WORK_OCPL)
CLOSE020 DS    0H
         ICM   R1,15,VTAM_PARM_ACB            ACB'S ADDRESS
         BZ    CLOSE030                       NOT ACQUIRED
         FREEMAIN RU,A=(1),LV=ACBL            FREEMAIN ACB
CLOSE030 DS    0H
         ICM   R1,15,VTAM_PARM_RPL            RPL'S ADDRESS
         BZ    CLOSE040                       NOT ACQUIRED
         FREEMAIN RU,A=(1),LV=RPLL            FREEMAIN RPL
CLOSE040 DS    0H
         ICM   R1,R15,VTAM_PARM_RPLX          RPL EXTENSION'S ADDRESS
         BZ    CLOSE050                       NOT ACQUIRED
         FREEMAIN RU,A=(1),LV=RPLEXTL         FREEMAIN RPL EXTENSION
CLOSE050 DS    0H
         ICM   R1,15,VTAM_PARM_NIB            NIB'S ADDRESS
         BZ    CLOSE060                       NOT ACQUIRED
         FREEMAIN RU,A=(1),LV=NIBL            FREEMAIN NIB
CLOSE060 DS    0H
         ICM   R1,15,VTAM_PARM_XLST           EXLST'S ADDRESS
         BZ    CLOSE070                       NOT ACQUIRED
         FREEMAIN RU,A=(1),LV=EXLSTL
CLOSE070 DS    0H
         ICM   R1,15,VTAM_PARM_IO             I/O AREA ADDRESS
         BZ    CLOSE080                       NOT ACQUIRED
         FREEMAIN RU,A=(1),LV=32768
CLOSE080 DS    0H
         B     EXIT0000                       AND EXIT
CLOSE100 DS    0H
         MVI   VTAM_PARM_RC,1                 SET RETURN CODE
         B     EXIT0000                       AND EXIT
* ------------------------------------------------------------------- *
*        ERROR ROUTINES                                               *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE SAVE AREA ADDRESS
         FREEMAIN RU,A=(1),LV=WORK_AREA_LENGTH
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        SET RC TO ZERO
         BR    R14                            RETURN
* ------------------------------------------------------------------- *
         USING ACEE,R15                       DEFINE ACEE BASE
UIDMVC   MVC   WORK_USER(0),ACEEUSRI          COPY USERID
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
OPENI    OPEN  (*,INPUT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
ACBI     ACB   AM=VTAM,              GENERATE VTAM ACB                 +
               MACRF=LOGON,                                            +
               EXLST=*,                                                +
               APPLID=*
EXLSTI   EXLST AM=VTAM,              GENERATE VTAM EXIT LIST           +
               ATTN=*,                                                 +
               LERAD=0
EXLSTL   EQU   *-EXLSTI
NIBI     NIB   MODE=RECORD,          GENERATE VTAM NIB                 +
               NAME=LIB
NIBL     EQU   *-NIBI
RPLI     RPL   AM=VTAM,              GENERATE VTAM RPL                 +
               AAREA=RPLEXTI
RPLL     EQU   *-RPLI
RPLEXTI  ISTRPL6
RPLEXTL  EQU   *-RPLEXTI
         FMH5  DSECT=NO,TRAN=XXXX
X000001  DC    X'00000001'
BLANKS   DC    CL80' '
         LTORG
* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
WORK_AREA         DSECT
                  DS  18F
WORK_OCPL         DS   0A,(OPENL)X
WORK_VTAM_ECB     DS    F

WORK_APPL         DS    0C
WORK_APPL_LENGTH  DS    X
WORK_APPL_NAME    DS    CL8

WORK_SMF          DS    CL4
WORK_USER         DS    CL8
WORK_JOB_NAME     DS    CL8

WORK_AREA_LENGTH  EQU   *-WORK_AREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         VTAMPARM   DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK    DSECT=YES
NET_SMF             DS    CL4
NET_USER            DS    CL8
NET_JOB_NAME        DS    CL8
NET_IDENTIFY_LENGTH EQU   *-NETBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IFGACB     AM=VTAM
ACBL     EQU        *-IFGACB
* ------------------------------------------------------------------- *
*              RPL                                                    *
* ------------------------------------------------------------------- *
         IFGRPL     AM=VTAM
* ------------------------------------------------------------------- *
*              EXLST                                                  *
* ------------------------------------------------------------------- *
         IFGEXLST   AM=VTAM
* ------------------------------------------------------------------- *
*              NIB                                                    *
* ------------------------------------------------------------------- *
         ISTDNIB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COPY  OPTDSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         IHAPSA  DSECT=YES,LIST=NO
         CVT     DSECT=YES,LIST=NO
         IHAASCB DSECT=YES,LIST=NO
         IHAASXB DSECT=YES,LIST=NO
         IHAACEE
         IEESMCA
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  VTAMSUB
