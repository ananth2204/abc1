{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011815000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE345.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE345.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x04'", "DS1TRBAL": "b'\\xd0\\x84'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\x89\\x00\\x0e\\x02\\x8a\\x00\\x02\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02\\x14O\\x01\\x02\\x14O\\x17G\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-24T00:00:00", "modifydate": "2002-05-24T17:47:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 447    FILE:  345\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT447.FILE345\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 13 MEMBERS COUNTED; CUMULATIVE SIZE IS 485 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   05/24/02    17:47:30    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$INDEX": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x98\\x02\\x7f\\x00\\x98\\x02\\x8f\\x11\\x16\\x00\\x08\\x00\\x05\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xd4\\xd5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1998-01-27T00:00:00", "modifydate": "1998-01-28T11:16:00", "lines": 8, "newlines": 5, "modlines": 3, "user": "TECHMN"}, "text": "$$INDEX   You're reading it now.\n$$README  You should read this next.\n$$INSTAL  Installs the program into an APF authorised, LNKLSTed library.\n$SW24     A macro to jump to 24 bit addressing mode.\n$SW31     A macro to jump to 31 bit addressing mode.\n$BSM      A macro used by the $SWxx macros to issue the BSM instruction.\nmsgno     Sample message handling members.  These should be used as\n          templates when building your own command library.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$INDEXS": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x98\\x02\\x7f\\x01\\x00$?\\x19\\x11\\x00\\x0f\\x00\\x05\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1998-01-27T00:00:00", "modifydate": "2000-08-30T19:11:00", "lines": 15, "newlines": 5, "modlines": 0, "user": "WSBG"}, "text": "$$INDEX   You're reading it now.\n$$README  You should read this next.\n$$INSTAL  Installs the program into an APF authorised, LNKLSTed library.\nmsgno     Sample message handling members.  These should be used as\n          templates when building your own command library.\n\n   If you have any questions about this package, I'll forward them\n   to Murray Nicholas at whatever his current email address will be.\n\n     Sam Golob\n     P.O. Box 906\n     Tallman, NY 10982-0906   USA\n     sbgolob@aol.com     or     sbgolob@attglobal.net\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$INSTAL": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00\\x00\\x00\\x98\\x02\\x7f\\x00\\x98\\x02\\x8f\\x11\\x14\\x01=\\x01'\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xd4\\xd5@@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1998-01-27T00:00:00", "modifydate": "1998-01-28T11:14:00", "lines": 317, "newlines": 295, "modlines": 0, "user": "TECHMN"}, "text": "//TECHMNAR JOB  ,'MURRAY NICHOLAS',CLASS=A,MSGCLASS=X,NOTIFY=TECHMN\n//*\n//*  SOURCE:    TECHMN.MPFEXIT.COMMANDS($$INSTAL)\n//*  PURPOSE:   ASSEMBLE AND LINKEDIT THE MPFXTALL PROGRAM\n//*  ASSEMBLY:  BEFORE ASSEMBLING THIS PROGRAM:\n//*             1)  CHANGE ALL OCCURRENCES OF THE HARDCODED DSNAME\n//*                 \"TECHMN.MPFEXIT.COMMANDS\" TO A NAME SUITABLE FOR\n//*                 STORING THE COMMANDS YOU WISH TO EXECUTE UNDER MPF\n//*                 CONTROL.  THE NAME OF THE FILE SHOULD FIT WITH YOUR\n//*                 SECURITY STANDARDS TO ALLOW UPDATE ACCESS TO THOSE\n//*                 WITH RESPONSIBLITY FOR OPERATIONS AUTOMATION.\n//*             2)  PLACE THE $SW24, $SW31 & $BSM MACROS IN A LIBRARY\n//*                 IN THE ASSEMBLY SYSLIB DD CONCATENATION.\n//*             3)  POINT THE SYSLMOD DD STATEMENT TO AN APPROPRIATE\n//*                 LINK LISTED AND APF AUTHORISED LIBRARY.\n//*  GUIDANCE:  THIS JOB BUILDS THE MPFXTALL PROGRAM AND STORES IT IN\n//*             AN APF AUTHORISED LIBRARY.  AFTER SUCCESSFUL LINKEDIT\n//*             THE OPERATOR MUST ISSUE THE \"F LLA,REFRESH\" COMMAND TO\n//*             REFRESH THE SYSTEM LIBRARY LOOKASIDE AREA TO OBTAIN A\n//*             FRESH COPY OF THIS PROGRAM.  WHEN THE REFRESH IS\n//*             COMPLETE, ISSUE THE \"T MPF=XX\" COMMAND TO ACTIVATE AN\n//*             MPFLST MEMBER OF PARMLIB WHICH USES THIS EXIT FOR SOME\n//*             MESSAGE NUMBERS.\n//*\n//*\n//*\n//AANDL    EXEC ASMHCL,REGION=5M,\n//             PARM.C='OBJECT,NODECK,TEST',\n//             PARM.L='XREF,TEST,RENT,REUS,REFR'\n//C.SYSLIB DD\n//         DD   DSN=SYS1.MACLIB,DISP=SHR\n//         DD   DSN=SYS1.MODGEN,DISP=SHR\n//         DD   DSN CONTAINING $SW24 AND $SW31 MACROS\n//C.SYSIN  DD   *\nMPFXTALL TITLE 'MPF EXIT TO ISSUE COMMAND LISTS BASED ON MESSAGE ID.'\n*\n*RECORD OF CHANGES:\n*\n*  001   MPN INITIAL RELEASE\n*\n*\n*IDENTIFICATION: CSECT NAME:     MPFXTALL\n*                SOURCE LIBRARY: TECHMN.MPFEXIT.COMMANDS($$INSTAL)\n*                LOAD LIBRARY:   SYS1.LOCAL.LINKLIB(MPFXTALL) - LNKLST\n*\n*REFERENCE:      GC28-1637: MVS/ESA INSTALLATION EXITS\n*\n*AUTHOR:         MURRAY NICHOLAS\n*                IT SYSTEMS CONSULTANT\n*                GALEFORCE INFORMATION SERVICES PTY LTD\n*                EMAIL:  MURRAY@GALEFORCE.BU.AUST.COM  (LOWER CASE!)\n*\n*DOCUMENTATION NOTE: IN COMMENTS, THE CHARACTER '@' SHOULD BE READ AS\n*                    'ADDRESS OF'.\n*\n*PURPOSE:        READS A FILE OF COMMANDS BASED ON THE MESSAGE NUMBER\n*                AND EXECUTES THEM IN SEQUENCE.\n*\n         EJECT\n*\n*REGISTER USAGE:\n*     R0      WORK.\n*     R1      STANDARD LINKAGE, WORK.\n*     R2      WORK.\n*     R3      WORK.\n*     R4      SPARE.\n*     R5      SPARE.\n*     R6      LOCAL WORK AREA ADDRESSABILITY\n*     R7      CTXT PARAMETER AREA ADDRESSABILITY\n*     R8      SPARE\n*     R9      CTXT PARAMETER AREA ADDRESSABILITY\n*     R10     CTXT PARAMETER AREA ADDRESSABILITY\n*     R11     SPARE.\n*     R12     PROGRAM ADDRESSABILITY\n*     R13     STANDARD LINKAGE\n*     R14     STANDARD LINKAGE\n*     R15     STANDARD LINKAGE, RETURN CODE.\n*\n*ROUTINES CALLED:   MGCR\n*                   DYNALLOC, OPEN, GET, CLOSE\n*\n*PARAMETERS PASSED: REFER TO REFERENCE DOCUMENTATION\n*\n*RETURN CODES:      NONE\n*\n         EJECT\n*\n*OVERVIEW: THIS EXIT IS RESTRICTED TO HANDLING MESSAGE IDS NO LONGER\n*          THAN EIGHT BYTES (THE LENGTH OF A PDS MEMBER NAME).\n*          COMMANDS ISSUED MUST BE CONTAINED WITHIN A SINGLE LINE.\n*          NO TEXT SUBSTITUTION IS SUPPORTED.\n*\n*LOGIC:  EXTRACT MESSAGE ID\n*        DYNALLOC DD=CMDS, DSN=TECHMN.MPFEXIT.COMMANDS(MESSAGEID), SHR\n*        OPEN CMDS\n*        DO UNTIL EOF\n*          GET COMMAND TEXT FROM CMDS\n*          MOVE TEXT TO MGCR BUFFER AND ISSUE IT\n*        END DO\n*        CLOSE CMDS\n*        FREE DD=CMDS\n*        EXIT\n*\n         EJECT\n         AMODE 31\n         RMODE 24\nMPFXTALL BAKR  R14,0               INITIALISATION\n         LR    R12,R15\n         USING MPFXTALL,R12\n         L     R10,0(R1)           POINT TO CTXT PARAMETER BLOCK\n         USING CTXT,R10            ESTABLISH ADDRESSABILITY\n         L     R9,CTXTTXPJ         POINT TO MESSAGE ATTRIBUTES\n         USING CTXTATTR,R9         ESTABLISH ADDRESSABILITY\n         LA    R0,WORKSIZE\n*\n*  INITIALISE WORKAREA\n*\n         GETMAIN RU,LV=(R0),LOC=BELOW     GET SOME WORKING STORAGE\n         LR    R2,R1               POINT TO REENTRANT WORK AREA\n         LA    R3,PSETSIZE         STORE LENGTH OF PRESET CONSTANTS\n         LR    R5,R3               COPY TO R4 FOR MVCL\n         LA    R4,PSETAREA         POINT TO PRESET DATA AREA\n         MVCL  R2,R4               PRIME WORK AREA WITH PRESET DATA\n         LR    R5,R1               SAVE ADDRESS OF GETMAINED STORAGE\n         USING WORKAREA,R5         ESTABLISH ADDRESSABILITY\n         EJECT\n*\n*  DETERMINE CASE TO PROCESS\n*\nMPFXT100 EQU   *\n         LA    R2,CTXTTMSG         CALCULATE LENGTH OF MSGID\n         LA    R3,CTXTTMSG+8\nMPFXT105 CLI   0(R2),C' '          MESSAGE ID IS DELIMITED BY BLANK\n         BE    MPFXT110\n         CR    R2,R3\n         BE    MPFXT110            REACHED THE MAX LENGTH\n         LA    R2,1(,R2)\n         B     MPFXT105\nMPFXT110 LA    R3,CTXTTMSG         @ START OF MSGID\n         SR    R2,R3               R2=L'(MSGID)-1\n         STH   R2,CMDSMBR-2        STORE THE LENGTH\n         BCTR  R2,0                DECREMENT FOR EXECUTED MOVE\n         EX    R2,MVMBR            MOVE MEMBER NAME TO DYNALLOC TU\n*\n*  DYNALLOC ROUTINE\n*\n         $SW24\n         LA    R6,DYNALCBS\n         USING S99RBP,R6           ADDRESSABILITY TO RBP DSECT\n         LA    R7,S99RBPTR+4       POINT PAST POINTER TO S99RB AREA.\n         USING S99RB,R7            ADDRESSABILITY TO RB DSECT\n         ST    R7,S99RBPTR         MAKE RBPTR POINT TO RB\n         OI    S99RBPTR,S99RBPND   SET HIGH ORDER BIT IN POINTER\n         XC    S99RB(RBLEN),S99RB  CLEAR REQUEST BLOCK\n         MVI   S99RBLN,RBLEN       PUT LENGTH IN THE LENGTH FIELD\n         MVI   S99VERB,S99VRBAL    SELECT ALLOCATION VERB\n         LA    R8,S99RB+RBLEN+RBXLEN POINT PAST RB AND RBX TO TUPL\n         USING S99TUPL,R8          ADDRESSABLITY TO TU POINTER LIST\n         ST    R8,S99TXTPP         STORE TUPL ADDRESS IN RB\n         LA    R9,DYNCDD           @ DDNAME TU\n         ST    R9,S99TUPTR         STORE IN TU POINTER LIST\n         LA    R8,4(R8)            POINT TO NEXT ENTRY IN TUPL\n         LA    R9,DYNCDSN          @ DSNAME TU\n         ST    R9,S99TUPTR         STORE IN CURRENT TUPL ENTRY\n         LA    R8,4(R8)            POINT TO NEXT ENTRY IN TUPL\n         LA    R9,DYNCMBR          @ MEMBER NAME TU\n         ST    R9,S99TUPTR         STORE IN CURRENT TUPL ENTRY\n         LA    R8,4(R8)            POINT TO NEXT ENTRY IN TUPL\n         LA    R9,DYNCSTS          @ DISP TU\n         ST    R9,S99TUPTR         STORE IN CURRENT TUPL ENTRY\n         OI    S99TUPTR,S99TUPLN   TURN ON HIGH ORDER BIT - END OF LIST\n         LR    R1,R6               PUT ADDRESS OF S99RB POINTER IN R1\n         DYNALLOC                  ALLOCATE REQUESTED\n         LTR   R15,R15             TEST RETURN CODE\n         BNZ   QUIT\n*\n*  OPEN COMMAND FILE\n*\n         LA    R3,CMDS\n         OPEN  ((R3),INPUT),MODE=24,MF=(E,RENTOPEN)\n         USING IHADCB,R3\n         TM    DCBOFLGS,X'10'\n         BZ    RETURN\n         DROP  R3\n*\n*  COMMAND ISSUE ROUTINE\n*\nMPFXT200 CNOP  0,4\n         GET   CMDS,CMDTEXT        DCB MOVES INPUT RECORD TO CMDTEXT\n         CLI   CMDTEXT,C'*'        SKIP COMMENTS\n         BE    MPFXT200\n         XR    R0,R0               CLEAR FOR MGCR/SVC 34\n         MGCR  CMDHDR              POINT TO COMMAND\n         B     MPFXT200\n*\n*     END OF COMMANDS - TIDY UP AND GO HOME\n*\nMPFXT300 LA    R3,CMDS\n         CLOSE ((R3)),MF=(E,RENTCLOS),MODE=24\nRETURN   LA    R6,DYNALCBS\n         USING S99RBP,R6           ADDRESSABILITY TO RBP DSECT\n         LA    R7,S99RBPTR+4       POINT PAST POINTER TO S99RB AREA.\n         USING S99RB,R7            ADDRESSABILITY TO RB DSECT\n         ST    R7,S99RBPTR         MAKE RBPTR POINT TO RB\n         OI    S99RBPTR,S99RBPND   SET HIGH ORDER BIT IN POINTER\n         XC    S99RB(RBLEN),S99RB  CLEAR REQUEST BLOCK\n         MVI   S99RBLN,RBLEN       PUT LENGTH IN THE LENGTH FIELD\n         MVI   S99VERB,S99VRBUN    SELECT DEALLOCATION VERB\n         LA    R8,S99RB+RBLEN+RBXLEN POINT PAST RB AND RBX TO TUPL\n         USING S99TUPL,R8          ADDRESSABLITY TO TU POINTER LIST\n         ST    R8,S99TXTPP         STORE TUPL ADDRESS IN RB\n         LA    R9,DYNCDD           @ DDNAME TU\n         ST    R9,S99TUPTR         STORE IN TU POINTER LIST\n         OI    S99TUPTR,S99TUPLN   TURN ON HIGH ORDER BIT - END OF LIST\n         LR    R1,R6               PUT ADDRESS OF S99RB POINTER IN R1\n         DYNALLOC                  ALLOCATE REQUESTED\nQUIT     CNOP  0,4\n         $SW31\n         LA    R2,WORKAREA\n         LA    R1,WORKSIZE\n         FREEMAIN R,LV=(R1),A=(R2)\n         EJECT\n*\n*     END OF PROCESSING.\n*\n         PR\nMVMBR    MVC  CMDSMBR(0),CTXTTMSG  MOVE MESSAGE ID TO MEMBER NAME\n         EJECT\n*\n*        CONSTANT DATA.\n*\n         SPACE 2\n         LTORG\n         EJECT\n*\n*     VARIABLE DATA. NOTE THAT THIS DATA IS COPIED TO A WORK AREA\n*     AND UPDATED THERE.\n*\n         SPACE 2\nPSETAREA DS    0D                  PRESET MGCR WORK AREA\nSSCMD    DC    AL2(SCMDLN)\n         DC    XL2'00'\n         DC    CL80' '\n         DC    C'  /* ISSUED BY MPFXTALL */ '\nSCMDLN   EQU   *-SSCMD\n         DS    0F                  PRESET DYNALLOC WORK AREA\n         DS    F                   SVC99 RB POINTER\n         DC    XL(RBLEN+RBXLEN)'00' SVC99 RB\n         DS    4F                  SVC99 TU POINTER LIST\n         DC    AL2(0001),AL2(0001),AL2(0008),CL8'CMDS    ' DDNAME\n         DC    AL2(0002),AL2(0001),XL2'002C' /*CL44' '*/   DSNAME\n         DC    CL44'TECHMN.MPFEXIT.COMMANDS ' COMMAND FILE DSNAME\n         DC    AL2(0003),AL2(0001),AL2(0008)               MEMBER\n         DC    CL8'########'                  COMMAND FILE MEMBER\n         DC    AL2(0004),AL2(0001),AL2(0001),XL1'08'       DISP=SHR\nCMDSDCB  DCB   DSORG=PS,DDNAME=CMDS,EODAD=MPFXT300,MACRF=(GM)\n         OPEN  (CMDSDCB,INPUT),MODE=24,MF=L\n         CLOSE (CMDSDCB),MODE=24,MF=L\nPSETSIZE EQU   *-PSETAREA          SIZE OF THE VARIABLE WORK AREA\n         EJECT\n*\n*     MAP PARAMETER LIST TO MPFXTALL.\n*\n         EJECT\n         DCBD  DSORG=(QS),DEVD=DA\nWORKAREA DSECT                     PRESET WORK AREA\n         DS    0D                  PRESET WORK AREA\nCMDHDR   DC    XL2'20'\n         DC    XL2'00'\nCMDTEXT  DC    CL80' '\n         DC    C'  /* ISSUED BY MPFXTALL */ '\n         DS    0F\nDYNALCBS EQU   *\nDYNRBPTR DS    F                   SVC99 RB POINTER\nDYNRB    DC    XL(RBLEN+RBXLEN)'00' SVC99 RB\nDYNTUPL  DS    4F                  SVC99 TU POINTER LIST\nDYNCDD   DC    AL2(0001),AL2(0001),AL2(0008),CL8'CMDS    ' DDNAME\nDYNCDSN  DC    AL2(0002),AL2(0001),XL2'002C' /*CL44' '*/   DSNAME\nCMDSDSN  DC    CL44'TECHMN.MPFEXIT.COMMANDS ' COMMAND FILE DSNAME\nDYNCMBR  DC    AL2(0003),AL2(0001),AL2(0008)               MEMBER\nCMDSMBR  DC    CL8'        '                  COMMAND FILE MEMBER\nDYNCSTS  DC    AL2(0004),AL2(0001),AL2(0001),XL1'08'       DISP=SHR\nDYNALCBL EQU   *-DYNALCBS\nCMDS     DCB   DSORG=PS,DDNAME=CMDS,EODAD=MPFXT300,MACRF=(GM)\nRENTOPEN OPEN  (CMDS,INPUT),MODE=24,MF=L\nRENTCLOS CLOSE (CMDS),MODE=24,MF=L\nWORKSIZE EQU   *-WORKAREA          SIZE OF THE VARIABLE WORK AREA\nRBLEN    EQU   (S99RBEND-S99RB)\nRBXLEN   EQU   (S99XEND-S99RBX)\n         IEFZB4D0                  SVC99 DSECTS\nS99XEND  EQU   *\n         IEFZB4D2                  SVC99 DSECTS\n         IEZVX100\n*\n*     REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n//L.SYSLMOD DD  DSN=SYS1.LOCAL.LINKLIB(MPFXTALL),DISP=SHR\n//L.SYSIN  DD   *\n  SETCODE AC(1)\n  NAME MPFXTALL(R)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$BSM": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98\\x02\\x8f\\x00\\x98\\x02\\x8f\\x11\\x12\\x00\\x0b\\x00\\x0b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xd4\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-01-28T00:00:00", "modifydate": "1998-01-28T11:12:00", "lines": 11, "newlines": 11, "modlines": 0, "user": "TECHMN"}, "text": "         MACRO\n&NAME    $BSM  &OFF,&BR1\n         GBLC  &ADRMODE\n         AIF   ('&ADRMODE' EQ '24').GO24\n&NAME    BSM   &OFF,&BR1\n         AGO   .BSMEXIT\n.GO24    ANOP\n&NAME    DS    0H\n.BSMEXIT ANOP\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$README": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00\\x95\\x19?\\x00\\x98\\x02\\x7f\\x14\\x14\\x00'\\x00\\x16\\x00\\x14\\xe3\\xc5\\xc3\\xc8\\xd4\\xd5@@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-07-12T00:00:00", "modifydate": "1998-01-27T14:14:00", "lines": 39, "newlines": 22, "modlines": 20, "user": "TECHMN"}, "text": "INTRODUCTION TO MPFXTALL PROCESSING\n\nMPFXTALL is a very simple MPF exit which can be invoked through MPFLST\nmembers of SYS1.PARMLIB in order to respond automatically to the\nappearance of any message on the operator's console.  MPFXTALL does not\nreply to WTORs at this stage, it simply issues operator commands as a\nmessage occurs.\n\n\nOPERATION\n\nFor any message to be automated, it must appear in\nSYS1.PARMLIB(MPFLSTxx) with an entry such as the following:\n\nIST123I,USEREXIT(MPFXTALL)\n\nWhen message IST123I occurs, standard MVS MPF processing will invoke the\nMPFXTALL exit.  MPFXTALL extracts the message id from the first 8 bytes\nof the message text and then searches for a member with that name in\nyourHLQ.MPFEXIT.COMMANDS.  Having found this member, MPFXTALL reads\neach line and, if it is not a comment (an asterisk in column 1), issues\nthe command as supplied.\n\nLIMITATIONS\n\nMessage numbers are restricted to a maximum of 8 bytes (length of a PDS\nmember name).  No code has been implemented to handle longer messages.\n\nPOSSIBLE FUTURE ENHANCEMENTS\n\n1:  Add code to handle replies to WTORS\n2:  Add code to handle \"CALL\" as a command.  This would call another\nuser written program (exit) to handle more complicated issues than\nsimply issuing a series of commands in response to a specific message.\n3:  Add code to handle long message numbers.  Messages longer than 8\nbytes would be identified in a member named to match just the first 8\nbytes and the appropriate commands could by listed under each long\nmessage number heading.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$SW24": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98\\x02\\x8f\\x00\\x98\\x02\\x8f\\x08Y\\x00\\r\\x00\\r\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xd4\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-01-28T00:00:00", "modifydate": "1998-01-28T08:59:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "TECHMN"}, "text": "         MACRO\n&NAME    $SW24\n         GBLC  &ADRMODE\n         AIF   ('&ADRMODE' EQ '24').GO24\n         LCLC  &IDX\n&IDX     SETC  '&SYSNDX'\n* MACRO TO SWITCH TO 24 BIT TEMPORARILY\n&NAME    LA    R15,LA&IDX           ------->\n         N     R15,=A(X'7FFFFFFF')  |SWITCH TO 24 BIT MODE\n         $BSM  0,R15                ------->\nLA&IDX   DS    0H\n.GO24    ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$SW31": {"ttr": 534, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98\\x02\\x8f\\x00\\x98\\x02\\x8f\\t\\x00\\x00\\r\\x00\\r\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xd4\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-01-28T00:00:00", "modifydate": "1998-01-28T09:00:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "TECHMN"}, "text": "         MACRO\n&NAME    $SW31\n         GBLC  &ADRMODE\n         AIF   ('&ADRMODE' EQ '24').GO24\n         LCLC  &IDX\n&IDX     SETC  '&SYSNDX'\n* MACRO TO SWITCH TO 31 BIT AGAIN\n&NAME    LA    R15,LA&IDX           ------->\n         O     R15,=A(X'80000000')  |SWITCH TO 31 BIT MODE\n         $BSM  0,R15                ------->\nLA&IDX   DS    0H\n.GO24    ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE345": {"ttr": 536, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00S\\x00\\x99\\x08?\\x01\\x02\\x14O\\x17F\\x00\\x14\\x00\\x14\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-03-24T00:00:00", "modifydate": "2002-05-24T17:46:53", "lines": 20, "newlines": 20, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 345 IS FROM MURRAY NICHOLAS OF GALEFORCE INFORMATION      *   FILE 345\n//*           SERVICES, PTY LTD IN MELBOURNE, AUSTRALIA, AND        *   FILE 345\n//*           CONTAINS A GENERALIZED MPF EXIT WHICH CAN TRIGGER     *   FILE 345\n//*           VARIED RESPONSES TO DIFFERENT CONSOLE MESSAGES.       *   FILE 345\n//*                                                                 *   FILE 345\n//*           THE MESSAGE NUMBERS AND RESPONSES ARE CONTAINED       *   FILE 345\n//*           AS MEMBERS OF A DESIGNATED PDS.  THEREFORE, THE       *   FILE 345\n//*           RESPONSES TO A GIVEN MESSAGE MAY BE EASILY            *   FILE 345\n//*           CHANGED, WITHOUT A PARMLIB ADJUSTMENT.                *   FILE 345\n//*                                                                 *   FILE 345\n//*           THIS PACKAGE WORKS FINE AS IS, BUT A FEW              *   FILE 345\n//*           IMPROVEMENTS COULD BE MADE, AS INDICATED BY SOME      *   FILE 345\n//*           OF THE DOCUMENTATION, WHICH COULD MAKE THIS           *   FILE 345\n//*           PACKAGE REALLY POWERFUL.                              *   FILE 345\n//*                                                                 *   FILE 345\n//*           THE AUTHOR MAY SPEND A CONSIDERABLE TIME IN THE U.S.  *   FILE 345\n//*           IN THE NEAR FUTURE (5/98).                            *   FILE 345\n//*                                                                 *   FILE 345\n//*       email:   murray@galeforce.bu.aust.com  (lower case)       *   FILE 345\n//*                                                                 *   FILE 345\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IEE043I": {"ttr": 538, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x19\\x8f\\x00\\x95\\x19\\x8f\\x11X\\x00\\x02\\x00\\x02\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xd4\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-07-17T00:00:00", "modifydate": "1995-07-17T11:58:00", "lines": 2, "newlines": 2, "modlines": 0, "user": "TECHMN"}, "text": "* Issued after a syslog has been written in response to a \"W L\"\nS LOGWTR.LWTR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IEF176I": {"ttr": 540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x19\\x8f\\x00\\x95\\x19\\x8f\\x11Y\\x00\\x02\\x00\\x02\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xd4\\xd5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-07-17T00:00:00", "modifydate": "1995-07-17T11:59:00", "lines": 2, "newlines": 2, "modlines": 0, "user": "TECHMN"}, "text": "* Issued when LOGWTR has finished copying a SYSLOG to BACKUP.SYSLOG\nP LWTR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IST020I": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x010\\x00\\x00\\x00\\x95\\x19O\\x00\\x98\\x02\\x7f\\x14\\x05\\x00\\x14\\x00\\x14\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xd4\\xd5@@@@'", "ispf": {"version": "01.48", "flags": 0, "createdate": "1995-07-13T00:00:00", "modifydate": "1998-01-27T14:05:00", "lines": 20, "newlines": 20, "modlines": 0, "user": "TECHMN"}, "text": "* IST020I VTAM INITIALISATION COMPLETE\n*\n* After VTAM initialisation, various subsystems need to be started.\n* This member performs the necessary start up functions.\n*\n*\n* Activate pre-requisite APPL major nodes.\nV NET,ACT,ID=APPLaaaa\nV NET,ACT,ID=APPLbbbb\nV NET,ACT,ID=APPLcccc\n* Start TSO.\nS TSO\n* Activate the NCP\nV NET,ACT,ID=NCPxxxx,LOAD=YES\n* Activate JES2 to VTAM printer support.\nS VPSxxxx\nS DRSVPIxx\n* start other vtam dependent stuff\nS HALFTFP\nS xxxxxxxx\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IST270I": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x950\\x0f\\x00\\x96\\x16o\\x08X\\x00\\r\\x00\\x06\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xd4\\xd5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1995-10-27T00:00:00", "modifydate": "1996-06-14T08:58:00", "lines": 13, "newlines": 6, "modlines": 0, "user": "TECHMN"}, "text": "*IST270I NCP loaded\n* Start HALNETs and HALKEYs.\nS HALKEYP\nS HALKEYM\nS HALKEYSR\nS HALKEYIX\nS HALKEYOP\n* Start VSE RJE links.\n$SLOGON1\n$SLNE(18-23)\n* Next two lines activate IBMLink\nV NET,ACT,ID=RSCG00D\nV NET,ACT,ID=QASA01\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT345/FILE345.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT345", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}