{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012417000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE586.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE586.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x08'", "DS1TRBAL": "b'gT'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04P\\x00\\x0c\\x04Q\\x00\\x00\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02$\\x8f\\x01\\x02$\\x8f\\x130\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-05T00:00:00", "modifydate": "2002-09-05T13:30:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 451    FILE:  586\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT451.FILE586\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 6 MEMBERS COUNTED; CUMULATIVE SIZE IS 846 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   09/05/02    13:30:30    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00G\\x01\\x02$/\\x01\\x02$/\\x176\\x00{\\x00{\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-08-30T00:00:00", "modifydate": "2002-08-30T17:36:47", "lines": 123, "newlines": 123, "modlines": 0, "user": "MA133"}, "text": "/*-------------------------------------------------------------------*/\n/*- this is an application startup exec that combines the function- -*/\n/*- ality of different shortcut techniques that are available in    -*/\n/*- ISPF. to install:                                               -*/\n/*-   > place the following entry into your site/user cmds table:   -*/\n/*-     \"SS       0 SELECT CMD(%STARTUP &ZPARM)\"                    -*/\n/*-   > place the STARTUP panel in ISPPLIB concatenation            -*/\n/*-   > STARTUP, SCREENS, and EVBCMD rexx execs in SYSEXEC/SYSPROC  -*/\n/*-                                                                 -*/\n/*- to use, simply enter 'SS appname' where appname is anything you -*/\n/*- can enter on the ISPF 'START' command service:                  -*/\n/*-   > an option off the main menu (1.3.4)                         -*/\n/*-   > a tso command (tso %tlms)                                   -*/\n/*-   > an ispf command from a command table                        -*/\n/*-   > an ispf dialog service (cmd(%sdsf))                         -*/\n/*-   > etc. etc.                                                   -*/\n/*-                                                                 -*/\n/*- the SS command will start the new service in a new session, and -*/\n/*- create a default screen name to match it (using the SCRNAME ISPF-*/\n/*- command). the screen name it creates depends on what command you-*/\n/*- pass to it. it must parse out of the parms a valid screen name  -*/\n/*- that it can pass to the SCRNAME command.                        -*/\n/*-   > for an option such as 1.3.4, the screen name will be Q134   -*/\n/*-   > for a tso command such as TSO %TLMS, it will be TLMS        -*/\n/*-   > for an command table command, it will be the command name   -*/\n/*-   > for a dialog service such as CMD(%SDSF), it will be SDSF    -*/\n/*-   > etc. etc.                                                   -*/\n/*- there is no attempt to make the screen name unique. if there    -*/\n/*- are duplicate names, you can override the name manually on the  -*/\n/*- newly created screen.                                           -*/\n/*-                                                                 -*/\n/*- you can switch to the session you created by issuing the same   -*/\n/*- command again, or issuing the SS command with the screen name:  -*/\n/*-   > SS 1.3.4 will take you back to the 1.3.4 screen             -*/\n/*-   > SS Q134 will also take you there                            -*/\n/*-   > SS TSO %TLMS will take you back to the tlms screen          -*/\n/*-   > SS TLMS will also take you there                            -*/\n/*-   > etc. etc.                                                   -*/\n/*- obviously, it's much easier to use the short screen name. the   -*/\n/*- command will substitute a \"SWAP xxx\" command if it finds an     -*/\n/*- active session with the same name.                              -*/\n/*-                                                                 -*/\n/*- entering 'SS' with no parameters is the same as entering the    -*/\n/*- ispf 'SWAP LIST' command. you can then see the screen names     -*/\n/*- that this command created (as well as any others you created).  -*/\n/*-                                                                 -*/\n/*- so this one 'SS' command will combine the functionality of the  -*/\n/*- ISPF START, SCRNAME, SWAP LIST, and SWAP XXX commands, all in   -*/\n/*- one easy to remember command.                                   -*/\n/*-                                                                 -*/\n/*- but that's not all. this command will also support it's own     -*/\n/*- variation of the ISPF commands table. entering 'SS /' will      -*/\n/*- bring up a table on which you can enter a screen name followed  -*/\n/*- by any valid START command parameters. the 'SS' command will    -*/\n/*- search this table for a match and if found, start the service   -*/\n/*- using the specified screen name. therefore, you could create    -*/\n/*- entries such as:                                                -*/\n/*-   > TLMS     TSO %TLMS                                          -*/\n/*-   > SDSF     CMD(%SDSF)                                         -*/\n/*-   > DSL      1.3.4                                              -*/\n/*-   > PARM1    CMD(%EVBCMD 'SYS1.PARMLIB' E) NEWAPPL(ISR)         -*/\n/*- then, entering 'SS TLMS' will start the tlms command, or        -*/\n/*- entering 'SS PARM1' will pop you into edit of sys1.parmlib with -*/\n/*- the correct applid, so that pfkeys will be properly set.        -*/\n/*- entering 'SS DSL' will bring you to option 1.3.4 of the main    -*/\n/*- menu (i'm assuming that this will be the dataset list panel).   -*/\n/*-                                                                 -*/\n/*- at install time, the sysprog can create a default set of        -*/\n/*- commands. the table is always saved in the ISPF profile dataset.-*/\n/*- he can then move this table to a common ISPTLIB dataset so that -*/\n/*- everyone will have access to the default. after that, if anyone -*/\n/*- enters 'SS /', the default table will be copied to that user's  -*/\n/*- ISPF profile dataset, and end up having their own personal copy -*/\n/*- of the table which they can customize to their heart's content. -*/\n/*-                                                                 -*/\n/*- tip: the EVBCMD exec is shipped with this to use as a way to    -*/\n/*- start the Edit/View/Browse ISPF service with a NEWAPPL(ISR) so  -*/\n/*- that pfkeys will be set properly. to use this in the cmd table, -*/\n/*- put \"CMD(%EVBCMD 'my.dataset.name' x) NEWAPPL(ISR)\" where x is  -*/\n/*- either E V or B for Edit View or Browse.                        -*/\n/*-                                                                 -*/\n/*- tip: it's better to put a dialog service in the table such as   -*/\n/*- CMD(), PGM() or PANEL() rather than an option or command off the-*/\n/*- main menu such as 1.3.4, TSO TLMS etc. since in the first case  -*/\n/*- when you exit from the application you end the entire session,  -*/\n/*- but in the second case you'll end up on the primary menu, so    -*/\n/*- you'll have to hit end again to exit the session.               -*/\n/*-                                                                 -*/\n/*- tip: by default, this exec will rename any temp screen names    -*/\n/*- it finds whenever it's run. this will rename the initial session-*/\n/*- and any session started with the SPLIT or manual START command. -*/\n/*- this behaviour can be turned off by setting InitPrefix to null  -*/\n/*- in the StartApp routine above.                                  -*/\n/*-                                                                 -*/\n/*- tip: go into ISPF general options and turn off \"Always show     -*/\n/*- split line\" in order to put each session in a full screen.      -*/\n/*-                                                                 -*/\n/*- tip: replace any pfkey settings to use 'SWAP NEXT' instead of   -*/\n/*- 'SWAP' so you can roll thru your sessions.                      -*/\n/*-                                                                 -*/\n/*- there's lots of room for performance improvments, one being to  -*/\n/*- open the table when ispf is started. that way the table won't   -*/\n/*- have to be reopened every time, the use count will just be      -*/\n/*- bounced. if the table isn't desired, you can comment out the    -*/\n/*- call to TableLookaside at around line 60 above.                 -*/\n/*-                                                                 -*/\n/*- for questions/comments contact Robin Murray at:                 -*/\n/*-   robin_murray@maritimelife.ca (semi-permanent contract pos) or -*/\n/*-   robinmurray@cyberdude.com (permanent email address)           -*/\n/*-   tel: 902-453-7300 x4177                                       -*/\n/*-                                                                 -*/\n/*- changes:                                                        -*/\n/*- 08/29/02:                                                       -*/\n/*- > removed code to allow screen number as people want to be able -*/\n/*-   to select an option from the main screen and there is no way  -*/\n/*-   to differentiate between the option and screen id.            -*/\n/*- > changed code to rename any screen that doesn't have the perm  -*/\n/*-   option on, regardless of the initial name                     -*/\n/*- > added the 'SCRNAME ON' command when a new session is created  -*/\n/*- 08/27/02:                                                       -*/\n/*- > added code to rename the blank and dslist screens to initx    -*/\n/*- > added code to enable using 'SS n' where n is a screen number  -*/\n/*-------------------------------------------------------------------*/\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$PDSLOAD": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00H\\x00\\x97\\x11\\x0f\\x01\\x02$o\\x12@\\x00\\x1d\\x00\\x08\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1997-04-20T00:00:00", "modifydate": "2002-09-03T12:40:48", "lines": 29, "newlines": 8, "modlines": 0, "user": "SBGOLOB"}, "text": "//PDSLOADL JOB (ACCT#),PDSLOAD,\n// NOTIFY=&SYSUID,\n// CLASS=A,MSGCLASS=X\n//*---------------------------------------------------------------*//\n//*    This job will load the REXXs in the EXEC member into a     *//\n//*    partitioned dataset, and it will load the panel in the     *//\n//*    PANEL member, into a partitioned dataset.                  *//\n//*                                                               *//\n//*    Source for the PDSLOAD program is on File 093 of the CBT   *//\n//*    Tape, and its load module is on File 035 of the CBT Tape.  *//\n//*                                                               *//\n//*    IEBUPDTE with PARM=NEW could be used instead of PDSLOAD,   *//\n//*    but you'll lose the ISPF statistics in the members loaded. *//\n//*---------------------------------------------------------------*//\n//LOA1 EXEC PGM=PDSLOAD\n//STEPLIB  DD DISP=SHR,DSN=userid.FILE035.PDS\n//SYSUT1   DD DISP=SHR,DSN=userid.FILE586.PDS(EXEC)\n//SYSPRINT DD SYSOUT=*\n//SYSUT2   DD DISP=(NEW,CATLG,DELETE),DSN=userid.SS.EXEC,\n//   DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920),\n//   SPACE=(TRK,(15,15,44),RLSE)\n//*\n//LOA2 EXEC PGM=PDSLOAD\n//STEPLIB  DD DISP=SHR,DSN=userid.FILE035.PDS\n//SYSUT1   DD DISP=SHR,DSN=userid.FILE586.PDS(PANEL)\n//SYSPRINT DD SYSOUT=*\n//SYSUT2   DD DISP=(NEW,CATLG,DELETE),DSN=userid.SS.PANELS,\n//   DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920),\n//   SPACE=(TRK,(15,15,44),RLSE)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE586": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00Q\\x01\\x01\\x02_\\x01\\x02$/\\x18\\x06\\x00\\x90\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2002-08-30T18:06:51", "lines": 144, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 586 is from Robin Murray, and contains several REXX execs *   FILE 586\n//*           and a panel, which allow invocation of any ISPF       *   FILE 586\n//*           application that you can invoke with a START command, *   FILE 586\n//*           The ISPF command which this service creates, is       *   FILE 586\n//*           called SS.                                            *   FILE 586\n//*                                                                 *   FILE 586\n//*     A fairly detailed description of the use of this service    *   FILE 586\n//*     follows here:                                               *   FILE 586\n//*                                                                 *   FILE 586\n//*     To use this service, simply enter 'SS appname' where        *   FILE 586\n//*     appname is anything you can enter on the ISPF 'START'       *   FILE 586\n//*     command service:                                            *   FILE 586\n//*                                                                 *   FILE 586\n//*       > an option off the main menu (1.3.4)                     *   FILE 586\n//*       > a TSO command (TSO %TLMS)                               *   FILE 586\n//*       > an ISPF command from a command table                    *   FILE 586\n//*       > an ISPF dialog service (CMD(%SDSF))                     *   FILE 586\n//*       > etc. etc.                                               *   FILE 586\n//*                                                                 *   FILE 586\n//*     The SS command will start the new service in a new          *   FILE 586\n//*     session, and create a default screen name to match it       *   FILE 586\n//*     (using the SCRNAME ISPF command). The screen name it        *   FILE 586\n//*     creates depends on what command you pass to it. It must     *   FILE 586\n//*     parse out of the parms a valid screen name that it can      *   FILE 586\n//*     pass to the SCRNAME command.                                *   FILE 586\n//*                                                                 *   FILE 586\n//*       > for an option such as 1.3.4, the screen name will       *   FILE 586\n//*         be Q134                                                 *   FILE 586\n//*       > for a tso command such as TSO %TLMS, it will be         *   FILE 586\n//*         TLMS                                                    *   FILE 586\n//*       > for an command table command, it will be the            *   FILE 586\n//*         command name                                            *   FILE 586\n//*       > for a dialog service such as CMD(%SDSF), it will be     *   FILE 586\n//*         SDSF                                                    *   FILE 586\n//*       > etc. etc.                                               *   FILE 586\n//*                                                                 *   FILE 586\n//*     There is no attempt to make the screen name unique. If      *   FILE 586\n//*     there are duplicate names, you can override the name        *   FILE 586\n//*     manually on the newly created screen.                       *   FILE 586\n//*                                                                 *   FILE 586\n//*     You can switch to the session you created by                *   FILE 586\n//*     issuing the same command again, or issuing the SS           *   FILE 586\n//*     command with the screen name:                               *   FILE 586\n//*                                                                 *   FILE 586\n//*       > SS 1.3.4 will take you back to the 1.3.4 screen         *   FILE 586\n//*       > SS Q134 will also take you there                        *   FILE 586\n//*       > SS TSO %TLMS will take you back to the tlms screen      *   FILE 586\n//*       > SS TLMS will also take you there                        *   FILE 586\n//*       > etc. etc.                                               *   FILE 586\n//*                                                                 *   FILE 586\n//*     Obviously, it's much easier to use the short screen         *   FILE 586\n//*     name. The command will substitute a \"SWAP xxx\"              *   FILE 586\n//*     command if it finds an active session with the same         *   FILE 586\n//*     name.                                                       *   FILE 586\n//*                                                                 *   FILE 586\n//*     Entering 'SS' with no parameters is the same as             *   FILE 586\n//*     entering the ISPF 'SWAP LIST' command. You can then         *   FILE 586\n//*     see the screen names that this command created (as          *   FILE 586\n//*     well as any others you created).                            *   FILE 586\n//*                                                                 *   FILE 586\n//*     So this one 'SS' command will combine the                   *   FILE 586\n//*     functionality of the ISPF START, SCRNAME, SWAP              *   FILE 586\n//*     LIST, and SWAP XXX commands, all in one easy to             *   FILE 586\n//*     remember command.                                           *   FILE 586\n//*                                                                 *   FILE 586\n//*     But that's not all. This command will also support          *   FILE 586\n//*     it's own variation of the ISPF commands table.              *   FILE 586\n//*     Entering 'SS /' will bring up a table on which you          *   FILE 586\n//*     can enter a screen name followed by any valid START         *   FILE 586\n//*     command parameters. The 'SS' command will search            *   FILE 586\n//*     this table for a match and if found, start the              *   FILE 586\n//*     service using the specified screen name. Therefore,         *   FILE 586\n//*     you could create entries such as:                           *   FILE 586\n//*                                                                 *   FILE 586\n//*       > TLMS     TSO %TLMS                                      *   FILE 586\n//*       > SDSF     CMD(%SDSF)                                     *   FILE 586\n//*       > DSL      1.3.4                                          *   FILE 586\n//*       > PARM1    CMD(%EVBCMD 'SYS1.PARMLIB' E) NEWAPPL(ISR)     *   FILE 586\n//*                                                                 *   FILE 586\n//*     Then, entering 'SS TLMS' will start the TLMS                *   FILE 586\n//*     command, or entering 'SS PARM1' will pop you into           *   FILE 586\n//*     edit of sys1.parmlib with the correct applid, so            *   FILE 586\n//*     that pfkeys will be properly set.  Entering 'SS             *   FILE 586\n//*     DSL' will bring you to option 1.3.4 of the main             *   FILE 586\n//*     menu (i'm assuming that this will be the dataset            *   FILE 586\n//*     list panel).                                                *   FILE 586\n//*                                                                 *   FILE 586\n//*     At install time, the sysprog can create a default           *   FILE 586\n//*     set of commands. the table is always saved in the           *   FILE 586\n//*     ISPF profile dataset.  He can then move this table          *   FILE 586\n//*     to a common ISPTLIB dataset so that everyone will           *   FILE 586\n//*     have access to the default. After that, if anyone           *   FILE 586\n//*     enters 'SS /', the default table will be copied to          *   FILE 586\n//*     that user's ISPF profile dataset, and end up having         *   FILE 586\n//*     their own personal copy of the table which they can         *   FILE 586\n//*     customize to their heart's content.                         *   FILE 586\n//*                                                                 *   FILE 586\n//*     tip: The EVBCMD exec is shipped with this to use as         *   FILE 586\n//*     a way to start the Edit/View/Browse ISPF service            *   FILE 586\n//*     with a NEWAPPL(ISR) so that pfkeys will be set              *   FILE 586\n//*     properly. To use this in the cmd table, put                 *   FILE 586\n//*     \"CMD(%EVBCMD 'my.dataset.name' x) NEWAPPL(ISR)\"             *   FILE 586\n//*     where x is either E V or B for Edit View or Browse.         *   FILE 586\n//*                                                                 *   FILE 586\n//*     tip: It's better to put a dialog service in the             *   FILE 586\n//*     table such as CMD(), PGM() or PANEL() rather than           *   FILE 586\n//*     an option or command off the main menu such as              *   FILE 586\n//*     1.3.4, TSO TLMS etc. Since in the first case when           *   FILE 586\n//*     you exit from the application you end the entire            *   FILE 586\n//*     session, but in the second case you'll end up on            *   FILE 586\n//*     the primary menu, so you'll have to hit end again           *   FILE 586\n//*     to exit the session.                                        *   FILE 586\n//*                                                                 *   FILE 586\n//*     tip: By default, this exec will rename any temp             *   FILE 586\n//*     screen names it finds whenever it's run. This will          *   FILE 586\n//*     rename the initial session and any session started          *   FILE 586\n//*     with the SPLIT or manual START command.  This               *   FILE 586\n//*     behaviour can be turned off by setting InitPrefix           *   FILE 586\n//*     to null in the StartApp routine above.                      *   FILE 586\n//*                                                                 *   FILE 586\n//*     tip: Go into ISPF general options and turn off              *   FILE 586\n//*     \"Always show split line\" in order to put each               *   FILE 586\n//*     session in a full screen.                                   *   FILE 586\n//*                                                                 *   FILE 586\n//*     tip: Replace any pfkey settings to use 'SWAP NEXT'          *   FILE 586\n//*     instead of 'SWAP' so you can roll thru your                 *   FILE 586\n//*     sessions.                                                   *   FILE 586\n//*                                                                 *   FILE 586\n//*     There's lots of room for performance improvments,           *   FILE 586\n//*     one being to open the table when ISPF is started.           *   FILE 586\n//*     That way the table won't have to be reopened every          *   FILE 586\n//*     time, the use count will just be bounced. If the            *   FILE 586\n//*     table isn't desired, you can comment out the call           *   FILE 586\n//*     to TableLookaside at around line 60 above.                  *   FILE 586\n//*                                                                 *   FILE 586\n//*     For questions/comments contact Robin Murray at:             *   FILE 586\n//*                                                                 *   FILE 586\n//*     robin_murray@maritimelife.ca                                *   FILE 586\n//*                 (semi-permanent contract pos) or                *   FILE 586\n//*                                                                 *   FILE 586\n//*     robinmurray@cyberdude.com (permanent email address)         *   FILE 586\n//*                                                                 *   FILE 586\n//*     tel: 902-453-7300 x4177                                     *   FILE 586\n//*                                                                 *   FILE 586\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EXEC": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02$\\x8f\\x01\\x02$\\x8f\\x13(\\x01\\xfe\\x01\\xfe\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-05T00:00:00", "modifydate": "2002-09-05T13:28:00", "lines": 510, "newlines": 510, "modlines": 0, "user": "MA133"}, "text": "./ ADD NAME=EVBCMD   0103-02232-02233-0956-00026-00005-00000-MA133EX\n/* rexx */\n/*********************************************************************/\n/* a quick and dirty clist to edit/browse/view a dataset. can be used*/\n/* with newappl to ensure pfkeys are set properly. for example:      */\n/* select cmd(evbcmd 'xxx.yyy' e) newappl(isr)                       */\n/* to edit a dataset. pass 'b' to browse. defaults to view.          */\n/*********************************************************************/\nArg Dsn What\n\nAddress ISPEXEC\n\"VGET ZAPPLID\"                      /*   Get current application ID */\nIf ZAPPLID \\= 'ISR' Then Do         /*   If ZAPPLID\\=ISR, re-invoke */\n  \"SELECT CMD(%EVBCMD\" Dsn What\") NEWAPPL(ISR)\"\n  Exit RC                           /*   with NEWAPPL(ISR) so that  */\nEnd                                 /*   pfkeys will be predictable */\n\nIf Length(Dsn) < 2 Then Exit(12)\n\nWhat = Left(What,1)\nSelect\n  When What = 'E' Then \"EDIT DATASET(\"Dsn\")\"\n  When What = 'B' Then \"BROWSE DATASET(\"Dsn\")\"\n  Otherwise \"VIEW DATASET(\"Dsn\")\"\nEnd\n\nReturn\n./ ADD NAME=SCREENS  0100-02241-02241-1410-00033-00033-00000-MA133EX\n/* REXX - exec to list all active ISPF screens by name            */\n/* scammed and altered from a bunch of examples from:             */\n/* http://listserv.nd.edu/archives/ispf-l.html                    */\nAddress ISPEXEC\n\"VGET ZSCREEN SHARED\"\n\nTcb = Ptr(132+Ptr(540))       /* current ISPTASK TCB              */\nTcb = Ptr(Tcb+132)            /* ISPMAIN  tcb via tcbotc          */\nTcb = Ptr(Tcb+136)            /* ISPTASK  tcb via tcbltc          */\nDo While Tcb \\= 0\n  Parse Value Tldname(Tcb) With ScrNum ScrName\n  If ScrNum = ZSCREEN Then Active = '*'\n  Else Active = ''\n  Say 'TCB='d2x(Tcb) 'Screen number='ScrNum 'Screen name='ScrName Active\n  Tcb = Ptr(128+Tcb)          /* chain thru tcbntc                */\nEnd\nReturn\n\nTldname: Procedure\nSaveArea = Ptr(112+Arg(1))    /* get save area off tcb            */\nIf Storage(d2x(SaveArea+40),4) = 'ISPF' Then Do\n  R1 = Ptr(SaveArea+24)       /* reg1 is 24 into the save area    */\n  Tld = Ptr(R1)               /* reg1 is the pointer to the tld   */\n  Num = Tld+3                 /* the screen num is +3 into tld    */\n  Perm = Tld+841              /* the perm option is +841 into tld */\n  Name = Tld+852              /* the screen name is +852 into tld */\n  Return Translate(Storage(d2x(Num),1),' ','00'x) ,\n    Translate(Storage(d2x(Name),8),' ','00'x) ,\n    Translate(Bitand(Storage(d2x(Perm),1),'80'x),'PT','8000'x)\nEnd\nReturn ' '\n\nPtr: Return c2d(Bitand(Storage(d2x(Arg(1)),4),'7FFFFFFF'x))\n./ ADD NAME=STARTUP  0134-02235-02248-1230-00448-00378-00000-MA133\n/* rexx */\nArg Command\n\nSignal On Failure\nSignal On Syntax\nSignal On Novalue\n\nCall StartApp\n\nReturn\n/*-------------------------------------------------------------------*/\n/*- handle any problems encountered                                 -*/\n/*-------------------------------------------------------------------*/\nFailure: Say \"Failure occured on line\" Sigl; Call Cleanup; Exit(-1);\nSyntax:  Say \"Syntax error on line\"    Sigl; Call Cleanup; Exit(-1);\nNovalue: Say \"Novalue used on line\"    Sigl; Call Cleanup; Exit(-1);\nCleanup:\n  Address ISPEXEC\n  RC = 0\n  Do While RC = 0\n    \"CONTROL ERRORS RETURN\"\n    \"TBEND STARTUP\"\n  End\n  \"CONTROL ERRORS RETURN\"\n  \"LIBDEF ISPTLIB\"\n  \"CONTROL ERRORS RETURN\"\n  \"LIBDEF ISPTABL\"\nReturn\n/*-------------------------------------------------------------------*/\n/*- see the bottom of this exec for documentation                   -*/\n/*-------------------------------------------------------------------*/\nStartApp:\nAddress ISPEXEC\n\n/* to rename temp screens, put a <6 char valid scrname prefix here */\nInitPrefix = 'INIT'\nInitPrefix = Strip(Left(InitPrefix,5))  /* in case user changes */\n\n/* if user wants to edit table, make it so */\nIf Command = '/' Then Do     /* edit the table if / passed */\n  Call EditTable\n  Return\nEnd\n\n/* get a couple of vars for later use */\n\"VGET (ZSCRCUR ZSCRMAX ZDEL)\"\n\n/* get the current list of screens for later use */\nCall LoadScreens\n\n/* no parms passed, do swap list */\nIf Command = '' Then Do\n  Swap = \"SWAP LIST\"\n  \"DISPLAY PANEL(ISPBLANK) COMMAND(SWAP)\"\n  Return\nEnd\n\n/* convert the command to app name */\nCall GetAppName\nIf AppName = 'LIST' | AppName = 'PREV' | AppName = 'NEXT' Then ,\n  AppName = AppName'1'\n\n/* go thru the screens to see if there an active match */\nDo iScn = 1 To Scn.0              /* from the LoadScreens rtn      */\n  If Scn.iScn /= AppName Then Iterate\n  Swap = \"SWAP\" AppName\n  \"DISPLAY PANEL(ISPBLANK) COMMAND(SWAP)\"  /* yup, swap to it.     */\n  Return\nEnd\n\nIf ZSCRCUR = ZSCRMAX Then Do\n  Say 'You have reached the maximum of sessions ('Strip(ZSCRMAX)').'\n  Say 'Quit one of your other sessions before starting this one.'\n  Say 'A session list will now be displayed...'\n  Swap = \"SWAP LIST\"\n  \"DISPLAY PANEL(ISPBLANK) COMMAND(SWAP)\"\n  Return\nEnd\n\nCall TableLookaside               /* convert app name to command   */\n\n\"SELECT PGM(ISPSTRT)\" ,\n  \"PARM(\"Command || ZDEL\"SCRNAME\" AppName \"PERM\"ZDEL\"SCRNAME ON)\" ,\n  \"SUSPEND MODE(FSCR)\"\n\nReturn\n/*-------------------------------------------------------------------*/\n/*- convert the passed parm to the command on the lookaside table   -*/\n/*-------------------------------------------------------------------*/\nTableLookaside:\n\nCall LibdefProfile             /* libdef the ispprof */\n\"CONTROL ERRORS RETURN\"\n\"TBOPEN STARTUP NOWRITE\"       /* see if there's a table */\nIf RC = 0 Then Do\n  \"TBVCLEAR STARTUP\"\n  TabName = AppName\n  \"TBGET STARTUP\"              /* find a match, load the command */\n  If RC = 0 Then Command = TabCmd\n  \"TBEND STARTUP\"\nEnd\n\"LIBDEF ISPTLIB\"               /* done */\n\nReturn\n/*-------------------------------------------------------------------*/\n/*- convert the command to an acceptable screen name.               -*/\n/*-------------------------------------------------------------------*/\nGetAppName:\n\nParse Var Command \"PGM(\" AppName \")\"   /* use the pgm   name */\nIf AppName /= '' Then Return\n\nParse Var Command \"PANEL(\" AppName \")\" /* use the panel name */\nIf AppName /= '' Then Return\n\nParse Var Command \"CMD(\" AppName \")\"   /* use the cmd name   */\nAppName = Word(AppName,1)              /* remove the cmd parms */\nAppName = Translate(AppName,' ','%')   /* remove invalid scn chars */\nIf AppName /= '' Then Return\n\nAppName = Command                      /* have to scam a screen name*/\nIf Left(AppName,4) = 'TSO ' Then ,     /* strip off tso prefix */\n  AppName = Strip(Substr(AppName,4))\n\nAppName = Translate(AppName,' ',ZDEL)  /* get rid of semicolon */\nAppName = Word(AppName,1)              /* just get the command */\n\nAppName = Translate(AppName,'  ','%.') /* these aren't cool */\nDo While Words(AppName) > 1            /* slam it into one word */\n  Parse Var AppName Prefix Suffix\n  AppName = Prefix || Suffix\nEnd\n                                       /* numbers aren't cool */\nIf Datatype(Left(AppName,1)) = 'NUM' Then AppName = 'Q'AppName\nAppName = Strip(Left(AppName,8))       /* make it 8 chars long */\nIf Length(AppName) = 1 Then AppName = 'Q'AppName  /* at least 2 chars*/\n\nReturn\n/*-------------------------------------------------------------------*/\n/*- if there are any blank screen names, these are the initial sess -*/\n/*-------------------------------------------------------------------*/\nLoadScreens:\n\nx = Outtrap('Scn.')\nCall Screens                    /* get list of active app names */\nx = Outtrap('OFF')\n\nActive = 0\niTemp = 0                      /* make a list of temp screen names */\nDo iScn = 1 To Scn.0\n  Parse Var Scn.iScn 'Screen number=' ScnNum ,\n    ' Screen name=' ScnName 49 ScnPerm 50 51 ScnAct\n  ScnName = Strip(ScnName)\n  Scn.iScn = ScnName                    /* save only screen name     */\n  If ScnAct = '*' Then Active = ScnNum  /* save active screen number */\n  If ScnPerm = 'T' Then Do\n    iTemp = iTemp + 1\n    Temp.iTemp = ScnNum iScn\n  End\n\n  If InitPrefix = '' Then Iterate\n\n  Parse Var ScnName (InitPrefix) iScnInit .\n  If iScnInit /= '' & Datatype(iScnInit) = 'NUM' Then ,\n    ScnInit.iScnInit = ''\nEnd\nTemp.0 = iTemp\n\nIf InitPrefix = '' Then Return\n\nDo iTemp = 1 To Temp.0          /* rename the temp screens to the   */\n  Do iScnInit = 1 To ZSCRMAX    /* init names. find next avail.     */\n    If Symbol('ScnInit.'iScnInit) = 'VAR' Then Iterate\n    Parse Var Temp.iTemp ScnNum iScn .\n    Scn.iScn = InitPrefix || iScnInit   /* save new value in scn list*/\n    ScnInit.iScnInit = ''               /* mark this number unavail  */\n    Swap = \"SWAP\" ScnNum || ZDEL\"SCRNAME\" Scn.iScn \"PERM\" ,\n      ZDEL\"SWAP\" Active\n    \"DISPLAY PANEL(ISPBLANK) COMMAND(SWAP)\"\n    Leave\n  End\nEnd\n\nReturn\n/*-------------------------------------------------------------------*/\n/*- libdef the ispf profile dataset ahead of everything else        -*/\n/*-------------------------------------------------------------------*/\nLibdefProfile:\nArg Output\n\nMsg = Msg('OFF')\nLdsi = Listdsi('ISPPROF' 'FILE' 'NODIRECTORY')  /* find prof name */\nMsg = Msg(Msg)\nIf Ldsi > 4 Then Signal Failure\nProfDsn = SYSDSNAME\n\"LIBDEF ISPTLIB DATASET ID('\"ProfDsn\"') STACK\"  /* libdef isptlib */\n\nIf Output = 'Y' Then \"LIBDEF ISPTABL DATASET ID('\"ProfDsn\"') STACK\"\n\nReturn\n/*-------------------------------------------------------------------*/\n/*- edit the startup command table.                                 -*/\n/*-------------------------------------------------------------------*/\nEditTable:\n\nCall LibdefProfile 'Y'\n\"TBSTATS STARTUP STATUS1(STATUS1) STATUS3(STATUS3)\"\nIf Status3 = 2 Then Do                /* can't access table      */\n  Say 'Startup table is currently unavailable.'\n  Say 'Are you updating it in another screen?'\n  \"LIBDEF ISPTLIB\"\n  \"LIBDEF ISPTABL\"\n  Return\nEnd\n\nProfTab = ProfDsn\"(STARTUP)\"            /* see if private copy */\nSdsn = Sysdsn(\"'\"ProfTab\"'\")\nIf Sdsn /= 'OK' Then Do                 /* no private copy yet */\n  If Status1 = 1 Then Call CopyTable    /* but it exists elsewhere */\n  Else Call CreateTable                 /* brand spanking new table*/\nEnd\n\n\"TBOPEN STARTUP WRITE\"                  /* now that we have one */\nCall DisplayTable                       /* let user play        */\n\"TBCLOSE STARTUP\"                       /* then save it         */\n\"LIBDEF ISPTLIB\"\n\"LIBDEF ISPTABL\"\n\nReturn\n/*-------------------------------------------------------------------*/\n/*- display the table so user can play                              -*/\n/*-------------------------------------------------------------------*/\nDisplayTable:\n\nInserting = 0\nCsrrow = 0\nZTDTOP = 0\nDo Forever\n  \"TBTOP STARTUP\"\n  \"TBSKIP STARTUP NUMBER(\"ZTDTOP\") NOREAD\"\n  \"TBDISPL STARTUP PANEL(STARTUP) POSITION(CRP) ROWID(ROW)\" ,\n    \"AUTOSEL(NO) CURSOR(TABNAME) CSRROW(\"Csrrow\")\"\n  If RC > 4 Then Leave\n\n  If ZCMD /= '' Then Do        /* primary commands go here */\n    Upper ZCMD\n    Select\n      When 1 = 0 Then Nop\n      Otherwise Nop\n    End\n  End\n\n  Do While ZTDSELS > 0       /* line commands go here */\n    Upper LC TabName TabCmd  /* this loop allows multiple selections */\n    Select\n      When LC = 'I' Then Do  /* user inserted a new command */\n        Inserting = 1\n        \"TBVCLEAR STARTUP\"\n        \"TBADD STARTUP\"\n      End\n      When LC = 'R' Then Do  /* user repeated a command */\n        Inserting = 1\n        TabName = ''\n        \"TBADD STARTUP\"\n      End\n      When LC = 'D' Then \"TBDELETE STARTUP\"  /* user deleted */\n      Otherwise Do                           /* just hit enter */\n        If TabName = '' Then \"TBDELETE STARTUP\"\n        Else \"TBMOD STARTUP\"\n      End\n    End\n    If ZTDSELS > 1 Then \"TBDISPL STARTUP POSITION(CRP) ROWID(ROW)\"\n    Else ZTDSELS = 0\n  End\n  LC = ' '\n  TabName = ''\n  \"TBGET STARTUP POSITION(CSRROW)\"         /* place cursor properly */\n  If Inserting = 0 & RC = 0 Then \"TBDELETE STARTUP\"\n  Inserting = 0\nEnd\nTabName = ''\n\"TBGET STARTUP\"\nIf RC = 0 Then \"TBDELETE STARTUP\"\n\nReturn\n/*-------------------------------------------------------------------*/\n/*- copy the table from isptlib concat to ispprof for private copy. -*/\n/*-------------------------------------------------------------------*/\nCopyTable:\n\n\"TBOPEN STARTUP NOWRITE\"\n\"TBCREATE STARTUP2 KEYS(TABNAME) NAMES(TABCMD) WRITE\"\n\"TBTOP STARTUP\"\n\"TBSKIP STARTUP NUMBER(1)\"\nDo While RC = 0\n  \"TBADD STARTUP2\"\n  \"TBSKIP STARTUP NUMBER(1)\"\nEnd\n\"TBEND STARTUP\"\n\"TBCLOSE STARTUP2 NAME(STARTUP)\"\n\nSay 'Copied default table to your own private library in' ProfDsn\n\nReturn\n/*-------------------------------------------------------------------*/\n/*- create a new table from scratch.                                -*/\n/*-------------------------------------------------------------------*/\nCreateTable:\n\n\"TBCREATE STARTUP KEYS(TABNAME) NAMES(TABCMD) WRITE\"\nTabName = 'TLMS';  TabCmd = 'TSO %TLMS'\n\"TBADD STARTUP\"\nTabName = 'DSL'; TabCmd = '1.3.4'\n\"TBADD STARTUP\"\nTabName = 'SF'; TabCmd = 'U314'\n\"TBADD STARTUP\"\nTabName = 'PARM1';\nTabCmd = \"CMD(%EVBCMD 'SYS1.PARMLIB' E) NEWAPPL(ISR)\"\n\"TBADD STARTUP\"\n\"TBCLOSE STARTUP\"\n\nSay 'Created a new startup table in' ProfDsn\nSay 'Move this table to a common ISPTLIB library to share it with others.'\n\nReturn\n/*-------------------------------------------------------------------*/\n/*- this is an application startup exec that combines the function- -*/\n/*- ality of different shortcut techniques that are available in    -*/\n/*- ISPF. to install:                                               -*/\n/*-   > place the following entry into your site/user cmds table:   -*/\n/*-     \"SS       0 SELECT CMD(%STARTUP &ZPARM)\"                    -*/\n/*-   > place the STARTUP panel in ISPPLIB concatenation            -*/\n/*-   > STARTUP, SCREENS, and EVBCMD rexx execs in SYSEXEC/SYSPROC  -*/\n/*-                                                                 -*/\n/*- to use, simply enter 'SS appname' where appname is anything you -*/\n/*- can enter on the ISPF 'START' command service:                  -*/\n/*-   > an option off the main menu (1.3.4)                         -*/\n/*-   > a tso command (tso %tlms)                                   -*/\n/*-   > an ispf command from a command table                        -*/\n/*-   > an ispf dialog service (cmd(%sdsf))                         -*/\n/*-   > etc. etc.                                                   -*/\n/*-                                                                 -*/\n/*- the SS command will start the new service in a new session, and -*/\n/*- create a default screen name to match it (using the SCRNAME ISPF-*/\n/*- command). the screen name it creates depends on what command you-*/\n/*- pass to it. it must parse out of the parms a valid screen name  -*/\n/*- that it can pass to the SCRNAME command.                        -*/\n/*-   > for an option such as 1.3.4, the screen name will be Q134   -*/\n/*-   > for a tso command such as TSO %TLMS, it will be TLMS        -*/\n/*-   > for an command table command, it will be the command name   -*/\n/*-   > for a dialog service such as CMD(%SDSF), it will be SDSF    -*/\n/*-   > etc. etc.                                                   -*/\n/*- there is no attempt to make the screen name unique. if there    -*/\n/*- are duplicate names, you can override the name manually on the  -*/\n/*- newly created screen.                                           -*/\n/*-                                                                 -*/\n/*- you can switch to the session you created by issuing the same   -*/\n/*- command again, or issuing the SS command with the screen name:  -*/\n/*-   > SS 1.3.4 will take you back to the 1.3.4 screen             -*/\n/*-   > SS Q134 will also take you there                            -*/\n/*-   > SS TSO %TLMS will take you back to the tlms screen          -*/\n/*-   > SS TLMS will also take you there                            -*/\n/*-   > etc. etc.                                                   -*/\n/*- obviously, it's much easier to use the short screen name. the   -*/\n/*- command will substitute a \"SWAP xxx\" command if it finds an     -*/\n/*- active session with the same name.                              -*/\n/*-                                                                 -*/\n/*- entering 'SS' with no parameters is the same as entering the    -*/\n/*- ispf 'SWAP LIST' command. you can then see the screen names     -*/\n/*- that this command created (as well as any others you created).  -*/\n/*-                                                                 -*/\n/*- so this one 'SS' command will combine the functionality of the  -*/\n/*- ISPF START, SCRNAME, SWAP LIST, and SWAP XXX commands, all in   -*/\n/*- one easy to remember command.                                   -*/\n/*-                                                                 -*/\n/*- but that's not all. this command will also support it's own     -*/\n/*- variation of the ISPF commands table. entering 'SS /' will      -*/\n/*- bring up a table on which you can enter a screen name followed  -*/\n/*- by any valid START command parameters. the 'SS' command will    -*/\n/*- search this table for a match and if found, start the service   -*/\n/*- using the specified screen name. therefore, you could create    -*/\n/*- entries such as:                                                -*/\n/*-   > TLMS     TSO %TLMS                                          -*/\n/*-   > SDSF     CMD(%SDSF)                                         -*/\n/*-   > DSL      1.3.4                                              -*/\n/*-   > PARM1    CMD(%EVBCMD 'SYS1.PARMLIB' E) NEWAPPL(ISR)         -*/\n/*- then, entering 'SS TLMS' will start the tlms command, or        -*/\n/*- entering 'SS PARM1' will pop you into edit of sys1.parmlib with -*/\n/*- the correct applid, so that pfkeys will be properly set.        -*/\n/*- entering 'SS DSL' will bring you to option 1.3.4 of the main    -*/\n/*- menu (i'm assuming that this will be the dataset list panel).   -*/\n/*-                                                                 -*/\n/*- at install time, the sysprog can create a default set of        -*/\n/*- commands. the table is always saved in the ISPF profile dataset.-*/\n/*- he can then move this table to a common ISPTLIB dataset so that -*/\n/*- everyone will have access to the default. after that, if anyone -*/\n/*- enters 'SS /', the default table will be copied to that user's  -*/\n/*- ISPF profile dataset, and end up having thier own personal copy -*/\n/*- of the table which they can customize to thier heart's content. -*/\n/*-                                                                 -*/\n/*- tip: the EVBCMD exec is shipped with this to use as a way to    -*/\n/*- start the Edit/View/Browse ISPF service with a NEWAPPL(ISR) so  -*/\n/*- that pfkeys will be set properly. to use this in the cmd table, -*/\n/*- put \"CMD(%EVBCMD 'my.dataset.name' x) NEWAPPL(ISR)\" where x is  -*/\n/*- either E V or B for Edit View or Browse.                        -*/\n/*-                                                                 -*/\n/*- tip: it's better to put a dialog service in the table such as   -*/\n/*- CMD(), PGM() or PANEL() rather than an option or command off the-*/\n/*- main menu such as 1.3.4, TSO TLMS etc. since in the first case  -*/\n/*- when you exit from the application you end the entire session,  -*/\n/*- but in the second case you'll end up on the primary menu, so    -*/\n/*- you'll have to hit end again to exit the session.               -*/\n/*-                                                                 -*/\n/*- tip: by default, this exec will rename any temp screen names    -*/\n/*- it finds whenever it's run. this will rename the initial session-*/\n/*- and any session started with the SPLIT or manual START command. -*/\n/*- this behaviour can be turned off by setting InitPrefix to null  -*/\n/*- in the StartApp routine above.                                  -*/\n/*-                                                                 -*/\n/*- tip: go into ISPF general options and turn off \"Always show     -*/\n/*- split line\" in order to put each session in a full screen.      -*/\n/*-                                                                 -*/\n/*- tip: replace any pfkey settings to use 'SWAP NEXT' instead of   -*/\n/*- 'SWAP' so you can roll thru your sessions.                      -*/\n/*-                                                                 -*/\n/*- there's lots of room for performance improvments, one being to  -*/\n/*- open the table when ispf is started. that way the table won't   -*/\n/*- have to be reopened every time, the use count will just be      -*/\n/*- bounced. if the table isn't desired, you can comment out the    -*/\n/*- call to TableLookaside at around line 60 above.                 -*/\n/*-                                                                 -*/\n/*- for questions/comments contact Robin Murray at:                 -*/\n/*-   robin_murray@maritimelife.ca (semi-permanent contract pos) or -*/\n/*-   robinmurray@cyberdude.com (permanent email address)           -*/\n/*-   tel: 902-453-7300 x4177                                       -*/\n/*-                                                                 -*/\n/*- changes:                                                        -*/\n/*- 08/29/02:                                                       -*/\n/*- > removed code to allow screen number as people want to be able -*/\n/*-   to select an option from the main screen and there is no way  -*/\n/*-   to differentiate between the option and screen id.            -*/\n/*- > changed code to rename any screen that doesn't have the perm  -*/\n/*-   option on, regardless of the initial name                     -*/\n/*- > added the 'SCRNAME ON' command when a new session is created  -*/\n/*- 08/27/02:                                                       -*/\n/*- > added code to rename the blank and dslist screens to initx    -*/\n/*- > added code to enable using 'SS n' where n is a screen number  -*/\n/*-------------------------------------------------------------------*/\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PANEL": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02$/\\x01\\x02$/\\x15&\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-08-30T00:00:00", "modifydate": "2002-08-30T15:26:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "MA133"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT586/FILE586.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT586", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}