{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012625000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE701.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE701.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x0b'", "DS1TRBAL": "b'eV'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xd8\\x00\\x0c\\x04\\xd9\\x00\\x01\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04C\\x00\\x00\\x01\\x041O\\x01\\x041O\"\"\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf7@@@'", "ispf": {"version": "04.67", "flags": 0, "createdate": "2004-11-09T00:00:00", "modifydate": "2004-11-09T22:22:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-467"}, "text": "REGULAR CBT TAPE - VERSION 467    FILE:  701\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT467.FILE701\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 17 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,332 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   11/09/04    22:22:22    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x008\\x01\\x041?\\x01\\x041O\\x179\\x00\\x1d\\x00\\x1d\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2004-11-08T00:00:00", "modifydate": "2004-11-09T17:39:38", "lines": 29, "newlines": 29, "modlines": 0, "user": "DB2MADR"}, "text": "Dear Sam,\n\nThe attachment contains an xmi file with my contribution PDS.\n\nTHE DATASET CONTRIBUTED CONTAINS 3 APPLICATIONS WHICH COULD BE USEFUL\nFOR A DB2/SYSTEM ADMIN.  THE CONCEPT IS THE SAME FOR ALL OF THEM.\nA BATCH JOB CALLS SOME REXX EXECS IN ORDER TO FULFILL A TASK DESIRED.\nTHE JOBS AND EXECS ARE COMMENTED INSIDE THE CODE. THERE\nIS ALSO README MEMBER INCLUDED.\n\nThere are:\n1. - DROP/CREATE FOREIGN KEYS DDL STATEMENTS CREATION\n2. - USING BATCH JOB FOR A SYSTEM COMMANDS EXECUTION\n3. - USING BATCH JOB FOR DB2 DRDA THREADS TERMINATION\n\nI forgot to put my e-mail in readme member, it's:\nmarino.drazeta@fina.hr .\n\nI also tried to recive the file, successfully.  DA('xxxxx')\ndataset asked by receive command should be PDS.\n\nThank You\n\nMarino Drazeta\nFINA Company\nPut Republike 24A\nDubrovnik, 20000\nCROATIA\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE701": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04C\\x00\\x00\\x01\\x041O\\x01\\x041O\"\"\\x00\\x1a\\x00\\x1a\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf7@@@'", "ispf": {"version": "04.67", "flags": 0, "createdate": "2004-11-09T00:00:00", "modifydate": "2004-11-09T22:22:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "CBT-467"}, "text": "//***FILE 701 is from Marino Drazeta and contains materials which   *   FILE 701\n//*           are useful for a DB2 system administrator.            *   FILE 701\n//*                                                                 *   FILE 701\n//*           Marino Drazeta                                        *   FILE 701\n//*           FINA Company                                          *   FILE 701\n//*           Put Republike 24A                                     *   FILE 701\n//*           Dubrovnik, 20000                                      *   FILE 701\n//*           CROATIA                                               *   FILE 701\n//*                                                                 *   FILE 701\n//*           email:  marino.drazeta@fina.hr                        *   FILE 701\n//*                                                                 *   FILE 701\n//*     The dataset contributed contains 3 applications which       *   FILE 701\n//*     could be useful for a DB2/system admin.  The concept is     *   FILE 701\n//*     the same for all of them.  A batch job calls some REXX      *   FILE 701\n//*     execs in order to fulfill a task desired.  The jobs and     *   FILE 701\n//*     execs are commented inside the code.  There is also a       *   FILE 701\n//*     README member included.                                     *   FILE 701\n//*                                                                 *   FILE 701\n//*     Applications:                                               *   FILE 701\n//*                                                                 *   FILE 701\n//*     1.  - DROP/CREATE FOREIGN KEYS DDL STATEMENTS CREATION      *   FILE 701\n//*                                                                 *   FILE 701\n//*     2.  - USING BATCH JOB FOR A SYSTEM COMMANDS EXECUTION       *   FILE 701\n//*                                                                 *   FILE 701\n//*     3.  - USING BATCH JOB FOR DB2 DRDA THREADS TERMINATION      *   FILE 701\n//*                                                                 *   FILE 701\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CONSBATC": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x00\\x01\\x02\\x06O\\x01\\x040\\x7f\\x102\\x00\\x1f\\x00\\xc4\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xd9@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2002-03-05T00:00:00", "modifydate": "2004-11-02T10:32:00", "lines": 31, "newlines": 196, "modlines": 0, "user": "DB2MADR"}, "text": "//CONSBATC JOB (SISTEM),'SYSADM',NOTIFY=&SYSUID,\n//         TIME=1440,REGION=2M,CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)\n//JOBLIB    DD  DSN=SYS1.P61.DSN610.SDSNEXIT,DISP=SHR\n//          DD  DSN=P61.DSN610.SDSNLOAD,DISP=SHR\n//**********************************************************************\n//* THIS JOB EXECUTES MVS SYSTEM COMMANDS AND PLACE SYSTEM SOL. MESSAGES\n//* TO THE JES OUTPUT.\n//* STEP S02CON INVOKES REXX PROGRAM: CONSOLV\n//**********************************************************************\n//S01CON EXEC PGM=IRXJCL,PARM='CONSCOMM',REGION=0M\n//OUTDD1   DD DSN=&&COMMAND,DISP=(MOD,PASS),SPACE=(CYL,1)\n//SYSEXEC  DD DSN=DB2MADR.CBT.CONTRIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//**********************************************************************\n//*      ENTER THE MVS SYSTEM COMMANDS YOU WANT TO EXECUTE\n//**********************************************************************\n//SYSTSIN  DD *\nRO OST1,VARY NET,ACT,ID=CANXE\nRO OST2,VARY NET,ACT,ID=CANXE\nRO OST3,VARY NET,ACT,ID=CANXE\nRO OSP1,VARY NET,ACT,ID=CANXE\nRO OSP2,VARY NET,ACT,ID=CANXE\nRO OSP3,VARY NET,ACT,ID=CANXE\n/*\n//S02CON EXEC PGM=IKJEFT01\n//SYSEXEC  DD DSN=DB2MADR.CBT.CONTRIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//INPDD1   DD DSN=&&COMMAND,DISP=(OLD,DELETE)\n//SYSTSIN  DD *\n%CONSOLV\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CONSBAT1": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01c\\x00\\x18\\x01\\x02\\x06O\\x01\\x040\\x8f\\x14'\\x00\\x1a\\x00\\xc4\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xd9@@@\"", "ispf": {"version": "01.99", "flags": 0, "createdate": "2002-03-05T00:00:00", "modifydate": "2004-11-03T14:27:18", "lines": 26, "newlines": 196, "modlines": 0, "user": "DB2MADR"}, "text": "//CONSBATC JOB (SISTEM),'SYSADM',NOTIFY=&SYSUID,\n//         TIME=1440,REGION=2M,CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)\n//JOBLIB    DD  DSN=SYS1.P61.DSN610.SDSNEXIT,DISP=SHR\n//          DD  DSN=P61.DSN610.SDSNLOAD,DISP=SHR\n//**********************************************************************\n//* THIS JOB EXECUTES MVS SYSTEM COMMANDS AND PLACE SYSTEM SOL. MESSAGES\n//* TO THE JES OUTPUT.\n//* STEP S02CON INVOKES REXX PROGRAM: CONSOLV\n//**********************************************************************\n//S01CON EXEC PGM=IRXJCL,PARM='CONSCOMM',REGION=0M\n//OUTDD1   DD DSN=&&COMMAND,DISP=(MOD,PASS),SPACE=(CYL,1)\n//SYSEXEC  DD DSN=DB2MADR.CBT.CONTRIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//**********************************************************************\n//*      ENTER THE MVS SYSTEM COMMANDS YOU WANT TO EXECUTE\n//**********************************************************************\n//SYSTSIN  DD *\nRO OSP3,D XCF,STR,STRNAM=(PB0SCA)\n/*\n//S02CON EXEC PGM=IKJEFT01\n//SYSEXEC  DD DSN=DB2MADR.CBT.CONTRIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//INPDD1   DD DSN=&&COMMAND,DISP=(OLD,DELETE)\n//SYSTSIN  DD *\n%CONSOLV\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CONSCOMM": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00P\\x01\\x02\\x06O\\x01\\x04)O\\x12\\x12\\x00\\x12\\x00\\xc4\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xf1@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2002-03-05T00:00:00", "modifydate": "2004-10-20T12:12:50", "lines": 18, "newlines": 196, "modlines": 0, "user": "DB2MAD1"}, "text": "/* REXX  */\nPARSE ARG INPUT\nSAY 'INPUT=' INPUT\nDATA='START'\nI=0\nDO UNTIL DATA = ''\n   I=I+1\n   PARSE PULL DATA\n   SAY DATA\n   COMMAND.I = STRIP(DATA)\nEND\nSTEM_L = I - 1\n /* GENERIRANE KOMANDE ZA UPRAVLJANJE PREPI\u00e6I U OUTDD1 */\n \"EXECIO\" STEM_L \"DISKW OUTDD1 (STEM COMMAND.\"\n /* ZATVORI OUTDD1 */\n \"EXECIO 0 DISKR OUTDD1 (FINIS\"\n /* IZA\u00f0I IZ PROGRAMA SA NAZNA\u00e5ENIM RC */\n EXIT 0\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CONSOLV": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00Q\\x01\\x02\\x06O\\x01\\x040/\\x08@\\x008\\x00\\xc4\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xf1@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2002-03-05T00:00:00", "modifydate": "2004-10-28T08:40:51", "lines": 56, "newlines": 196, "modlines": 0, "user": "DB2MAD1"}, "text": "/* REXX  */\nRET_CODE = 0\nI = 0\n/* READ THE DATASET PREPARED BY IRXJCL */\nDO WHILE RET_CODE <> 2\n   \"EXECIO 1 DISKR INPDD1\"\n   IF RC = 2 THEN LEAVE\n   RET_CODE = RC\n   I = I + 1\n   PARSE PULL COMMANDS.I\n   COMMANDS.I = STRIP(COMMANDS.I)\n   SAY COMMANDS.I\nEND\nADDRESS TSO\n/* SET THE CONSOLE PROFILE */\n\"CONSPROF SOLDISPLAY(NO) SOLNUM(400)\"\n\"CONSPROF UNSOLDISPLAY(NO) SOLNUM(400)\"\n\"CONSOLE ACTIVATE NAME(SYSCONEX)\"\n\n/* FOR EVERY STATEMENT ENTERED IN THE SYSTSIN SEQUENCE */\nDO C = 1 TO I\n\n CART_VAR = '000'C\n IF C > 9 THEN\n    CART_VAR = '00'C\n CART = 'APPL'CART_VAR\n SAY 'CART='CART\n /* EXECUTE THE MESSAGES FROM THE SYSTSIN SEQUENCE */\n INTERPRET \"'CONSOLE SYSCMD('COMMANDS.C') CART('\"CART\"')'\"\n MESSAGE = 'F'\n\n /* UNTIL MSG_STEM VAR GET SATISFIED (MSG = 0 OR 4) */\n DO WHILE MESSAGE = 'F'\n    /* GET THE SYSTEM'S SOL. MESSAGES               */\n    INTERPRET 'MSG =' \"GETMSG(''MSG_STEM.'',''SOL'','\"CART\"',,1)\"\n    IF MSG_STEM.0 = 'MSG_STEM.0' THEN\n       ITERATE\n    ELSE\n       LEAVE\n END\n\n /* PUT THE COMMAND AND THE SYSTEM'S SOL. MESSAGE TO THE JES OUTPUT */\n SAY 'IZVEDENA KOMANDA:' COMMANDS.C\n /* MEANS: 'COMMAND EXECUTED' (CROATIAN) */\n SAY '-----------------------------------------------------'\n DO I = 1 TO MSG_STEM.0\n    SAY MSG_STEM.I\n END\n SAY ' '\nEND\n\nSAY MSG\n/* DEACTIVATE SYSCONEX AND SET THE CONSOLE PROFILE AS IT WAS */\n\"CONSOLE DEACTIVATE\"\n\"CONSPROF SOLDISPLAY(YES)\"\n\"CONSPROF UNSOLDISPLAY(YES)\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CONSOLV3": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00B\\x01\\x02\\x06O\\x01\\x040?\\x16\\x05\\x00;\\x00\\xc4\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xd9@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2002-03-05T00:00:00", "modifydate": "2004-10-29T16:05:42", "lines": 59, "newlines": 196, "modlines": 0, "user": "DB2MADR"}, "text": "/* REXX  */\n/* THIS PROGRAM IS NOT FULLY COMMENTED */\n/* A COMMENTS SHOULD BE VERY LIKELY AS IN CONSOLV PROGRAM   */\n\n/* READ THE SSID FROM INPDD1 - JUST 1 ROW */\n\"EXECIO 1 DISKR INPDD1\"\nPARSE PULL COMMAND\n\"EXECIO 0 DISKR INPDD1 (FINIS\"\nSAY '******' COMMAND\n\"EXECIO 1 DISKR INPDD2\"\nPARSE PULL AUTHID\n\"EXECIO 0 DISKR INPDD2 (FINIS\"\n\n/* FORM THE DB2 COMMAND */\nIF AUTHID = 'NONE' THEN\n   COMMAND = \"-\"STRIP(COMMAND) \"DIS THD(DISC*)\"\nELSE\n   COMMAND = \"-\"STRIP(COMMAND) \"DIS THD(SERV*)\"\n\nIF AUTHID = 'SVI' THEN\n   COMMAND = \"-\"STRIP(COMMAND) \"DIS THD(*)\"\n\nSAY COMMAND\n\nADDRESS TSO\n \"CONSOLE ACTIVATE NAME(SYSCONEX)\"\n \"CONSPROF SOLDISPLAY(NO) SOLNUM(800)\"\n \"CONSPROF UNSOLDISPLAY(NO) SOLNUM(400)\"\n \"CONSPROF\"\n CART = 'APPL0001'\n INTERPRET \"'CONSOLE SYSCMD('COMMAND') CART('\"CART\"')'\"\n MESSAGE = 'F'\n MSG_STEM.0 = 0\n DO WHILE MESSAGE = 'F'\n    INTERPRET 'MSG =' \"GETMSG(''MSG_STEM.'',''SOL'','\"CART\"',,1)\"\n    INTERPRET 'MSG =' \"GETMSG(''MSG_STEM.'',''SOL'','\"CART\"',,1)\"\n    SAY 'MSG' MSG\n    IF MSG = 0  THEN\n       LEAVE\n    ELSE\n    DO\n       IF MSG = 4 THEN\n          LEAVE\n       ELSE\n          ITERATE\n    END\n END\n\n SAY 'IZVEDENA KOMANDA:' COMMAND\n SAY '-----------------------------------------------------'\n DO I = 1 TO MSG_STEM.0\n    SAY MSG_STEM.I\n END\n SAY ' '\n \"CONSOLE DEACTIVATE\"\n \"CONSPROF SOLDISPLAY(YES)\"\n \"CONSPROF UNSOLDISPLAY(YES)\"\n\nSAY MSG\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CONSOLV4": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x001\\x01\\x02\\x06O\\x01\\x040?\\x16\\x07\\x00F\\x00\\xc4\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xd9@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2002-03-05T00:00:00", "modifydate": "2004-10-29T16:07:31", "lines": 70, "newlines": 196, "modlines": 0, "user": "DB2MADR"}, "text": "/* REXX  */\n/* THIS PROGRAM IS NOT FULLY COMMENTED                      */\n/* A COMMENTS SHOULD BE VERY LIKELY AS IN CONSOLV PROGRAM   */\n\n\"EXECIO 1 DISKR INPDD1\"\nPARSE PULL COMMAND\n\"EXECIO 0 DISKR INPDD1 (FINIS\"\n\n\"EXECIO 1 DISKR INPDD2\"\nPARSE PULL AUTHID\n\"EXECIO 0 DISKR INPDD2 (FINIS\"\n\nRET_CODE = 0\nI = 0\nDO WHILE RET_CODE <> 2\n   /* READ ALL THREADS FROM INPDD3 CAPTURED BY CONSOLV3      */\n   \"EXECIO 1 DISKR INPDD3\"\n   IF RC = 2 THEN LEAVE\n   RET_CODE = RC\n   I = I + 1\n   PARSE PULL CMDOUT.I\n   /* AUTH = THE THREAD ORIGINAL AUTHORIZATION IDENTIFIER */\n   /* DIST = THE THREAD PLANNAME                          */\n   /* THD  = THE THREAD TOKEN IDENTIFIER                  */\n   PARSE VAR CMDOUT.I W1 W2 W3 W4 W5 AUTH DIST W8 THD\n   /* IF IT IS A DRDA CONNECTION */\n   IF STRIP(DIST) = 'DISTSERV' THEN\n      /* IF THREAD'S AUTHID REQUIRED OR IF KEYWORD SVI  */\n      IF (STRIP(AUTH) = STRIP(AUTHID)) | (STRIP(AUTHID) = 'SVI') THEN\n      DO\n         /* FORM THE DB2 COMMAND */\n         COMMANDI = \"-\"STRIP(COMMAND) \"CANCEL THD(\"STRIP(THD)\")\"\n         \"CONSPROF SOLDISPLAY(NO) SOLNUM(400)\"\n         \"CONSPROF UNSOLDISPLAY(NO) SOLNUM(400)\"\n         \"CONSOLE ACTIVATE NAME(SYSCONEX)\"\n         CART_VAR = '000'C\n         IF C > 9 THEN\n            CART_VAR = '00'C\n         CART = 'APPL'CART_VAR\n         SAY 'CART='CART\n         INTERPRET \"'CONSOLE SYSCMD('COMMANDI') CART('\"CART\"')'\"\n         MESSAGE = 'F'\n         MSG_STEM.0 = 0\n         DO WHILE MESSAGE = 'F'\n            INTERPRET 'MSG =' \"GETMSG(''MSG_STEM.'',''SOL'','\"CART\"',,1)\"\n     /* INTERPRET 'MSG =' \"GETMSG(''MSG_STEM.'',''SOL'','\"CART\"',,1)\"*/\n            SAY 'MSG' MSG\n            IF MSG = 0  THEN\n               LEAVE\n            ELSE\n            DO\n               IF MSG = 4 THEN\n                  LEAVE\n               ELSE\n                  ITERATE\n            END\n         END\n         SAY 'IZVEDENA KOMANDA:' COMMANDI 'AUTHID = ' AUTH\n         SAY '-----------------------------------------------------'\n         DO I = 1 TO MSG_STEM.0\n            SAY MSG_STEM.I\n         END\n         SAY ' '\n         \"CONSOLE DEACTIVATE\"\n         \"CONSPROF SOLDISPLAY(YES)\"\n         \"CONSPROF UNSOLDISPLAY(YES)\"\n         MSG_STEM.0 = 0\n        END\nEND\nEXIT 0\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CREFK": {"ttr": 534, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "ALTER TABLE DKONC.KONC_STAVKA_IZVODA\nFOREIGN KEY R_19    (\nKLJUC_JRIR\n)\nREFERENCES RAZV.J_RIR(\nKLJUC_JRIR\n)\nON DELETE RESTRICT ;\nALTER TABLE DKONC.KONTROLOR\nFOREIGN KEY R_32    (\nSIF_MAT_JED ,\nSIF_OPER_JED\n)\nREFERENCES RAZV.POSL_JED(\nSIF_MAT_JED ,\nSIF_OPER_JED\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.GRESKA_EVID\nFOREIGN KEY R_43    (\nSIF_GRESKE\n)\nREFERENCES RAZV.GRESKA(\nSIF_GRESKE\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.GRESKA_EVID\nFOREIGN KEY R_54    (\nID_DOKUMENTA\n)\nREFERENCES RAZV.UGOVOR_NEPOTPUNI(\nID_DOKUMENTA\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.KONC_PAKET\nFOREIGN KEY R_35    (\nID_KONTROLORA\n)\nREFERENCES RAZV.KONTROLOR(\nID_KONTROLORA\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.KONC_STAVKA_IZVODA\nFOREIGN KEY R_19    (\nKLJUC_JRIR\n)\nREFERENCES RAZV.J_RIR(\nKLJUC_JRIR\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.KONC_UGOVOR\nFOREIGN KEY R_10    (\nID_KONTROLORA\n)\nREFERENCES RAZV.KONTROLOR(\nID_KONTROLORA\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.KONC_UGOVOR\nFOREIGN KEY R_20    (\nID_UGOVORA\n)\nREFERENCES RAZV.KONC_UGOVOR(\nID_DOKUMENTA\n)\nON DELETE NO ACTION;\nALTER TABLE RAZV.KONC_UGOVOR\nFOREIGN KEY R_29    (\nRANG_ADM_JED ,\nSIF_ADM_JED\n)\nREFERENCES RAZV.ADM_JED(\nRANG_ADM_JED ,\nSIF_ADM_JED\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.KONC_UGOVOR\nFOREIGN KEY R_33    (\nSIF_DJEL_KORIS\n)\nREFERENCES RAZV.DJELATNOST(\nSIF_DJEL\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.KONC_UGOVOR\nFOREIGN KEY R_36    (\nID_PAKETA\n)\nREFERENCES RAZV.KONC_PAKET(\nID_PAKETA\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.KONC_UGOVOR\nFOREIGN KEY R_39    (\nID_KONTR_UK\n)\nREFERENCES RAZV.KONTROLOR(\nID_KONTROLORA\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.KONC_UGOVOR\nFOREIGN KEY R_63    (\nSIF_VR_KONC\n)\nREFERENCES RAZV.VR_KONCESIJE(\nSIF_VR_KONC\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.KONC_UGOVOR\nFOREIGN KEY R_64    (\nSIF_VR_PRIH\n)\nREFERENCES RAZV.VR_PRIHODA(\nSIF_VR_PRIH\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.KONTROLOR\nFOREIGN KEY R_32    (\nSIF_MAT_JED ,\nSIF_OPER_JED\n)\nREFERENCES RAZV.POSL_JED(\nSIF_MAT_JED ,\nSIF_OPER_JED\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.NACIN_PLACANJA\nFOREIGN KEY R_23    (\nID_KONTROLORA\n)\nREFERENCES RAZV.KONTROLOR(\nID_KONTROLORA\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.NACIN_PLACANJA\nFOREIGN KEY R_38    (\nID_DOKUMENTA\n)\nREFERENCES RAZV.KONC_UGOVOR(\nID_DOKUMENTA\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.NACIN_PLACANJA\nFOREIGN KEY R_59    (\nSIF_VR_OSNOVICE\n)\nREFERENCES RAZV.VR_OSNOVICE(\nSIF_VR_OSNOVICE\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.OCEKIVANI_NALOG\nFOREIGN KEY R_24    (\nID_KONTROLORA\n)\nREFERENCES RAZV.KONTROLOR(\nID_KONTROLORA\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.OCEKIVANI_NALOG\nFOREIGN KEY R_37    (\nID_DOKUMENTA\n)\nREFERENCES RAZV.KONC_UGOVOR(\nID_DOKUMENTA\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.UGOVOR_NEPOTPUNI\nFOREIGN KEY R_52    (\nID_KONTROLORA\n)\nREFERENCES RAZV.KONTROLOR(\nID_KONTROLORA\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.UGOVOR_NEPOTPUNI\nFOREIGN KEY R_53    (\nID_KONTR_UK\n)\nREFERENCES RAZV.KONTROLOR(\nID_KONTROLORA\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.UGOVOR_NEPOTPUNI\nFOREIGN KEY R_65    (\nID_UGOVORA\n)\nREFERENCES RAZV.UGOVOR_NEPOTPUNI(\nID_DOKUMENTA\n)\nON DELETE NO ACTION;\nALTER TABLE RAZV.UPLATA\nFOREIGN KEY R_40    (\nID_DOKUMENTA ,\nRBR_OCEK_NAL\n)\nREFERENCES RAZV.OCEKIVANI_NALOG(\nID_DOKUMENTA ,\nRBR_OCEK_NAL\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.UPLATA\nFOREIGN KEY R_41    (\nID_STVK_IZV\n)\nREFERENCES RAZV.KONC_STAVKA_IZVODA(\nID_STVK_IZV\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.VEZA_PRIH_KONC\nFOREIGN KEY R_61    (\nSIF_VR_PRIH\n)\nREFERENCES RAZV.VR_PRIHODA(\nSIF_VR_PRIH\n)\nON DELETE RESTRICT ;\nALTER TABLE RAZV.VEZA_PRIH_KONC\nFOREIGN KEY R_62    (\nSIF_VR_KONC\n)\nREFERENCES RAZV.VR_KONCESIJE(\nSIF_VR_KONC\n)\nON DELETE RESTRICT ;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DB2FKDC": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x08\\x00\\x99\\x15O\\x01\\x040\\x7f\\x15\\x16\\x00;\\x06\\xdd\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xd9@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1999-06-03T00:00:00", "modifydate": "2004-11-02T15:16:08", "lines": 59, "newlines": 1757, "modlines": 0, "user": "DB2MADR"}, "text": "//DB2FKDC  JOB (SISTEM),'SYSADM',NOTIFY=&SYSUID,\n//          TIME=1440,REGION=2M,CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)\n//JOBLIB   DD  DSN=SYS1.P61.DSN610.SDSNEXIT,DISP=SHR\n//         DD  DSN=P61.DSN610.SDSNLOAD,DISP=SHR\n//*********************************************************************\n//* PREPARE DDL FOR DROP/CREATE FOREIGN KEYS.\n//*\n//* OUTDD1, OUTDD2 ARBITRARY SET THE DDL MEMBER LOCATION\n//* LOGON TO THE APPROPRIATE SYSTEM IE. OST1 FOR SCHEMA: TEST\n//*                                 IE. OSP1 FOR SCHEMA: PROD\n//* MANDATORY PARMS:\n//*    - WHEN NEEDED FOR THE PRODUCTION FOR SYSTSIN ENTER: PB0\n//*    - WHEN NEEDED FOR THE TEST       FOR SYSTSIN ENTER: TB0\n//*    - THEN ENTER THE SCHEMA IE. RAZV3\n//*\n//* OPTIONALY PARMS:\n//*    - OPTIONALY ENTER THE TABLE NAME(S)\n//*********************************************************************\n//S01     EXEC PGM=IDCAMS\n//SYSPRINT DD   SYSOUT=*\n//SYSIN    DD   *\n  DELETE   PPT.DROPFKEY.RKONC  PURGE\n  DELETE   PPT.CREFKEY.RKONC  PURGE\n  SET MAXCC=0\n/*\n//*\n//S02 EXEC PGM=IRXJCL,PARM='DRCRFKY1',REGION=0M\n//*OUTDD1   DD DSN=DB2MADR.CBT.CONTRIB.DROPFK,VOLUME=(,,,15),\n//*            DISP=(NEW,KEEP),UNIT=SYSDA,\n//*            SPACE=(24576,(1000,1000),RLSE)\n//*OUTDD2   DD DSN=DB2MADR.CBT.CONTRIB.CREFK,VOLUME=(,,,15),\n//*            DISP=(NEW,KEEP),UNIT=SYSDA,\n//*            SPACE=(24576,(1000,1000),RLSE)\n//OUTDD1   DD DSN=DB2MADR.CBT.CONTRIB(DROPFK),DISP=SHR\n//OUTDD2   DD DSN=DB2MADR.CBT.CONTRIB(CREFK),DISP=SHR\n//SYSEXEC  DD DSN=DB2MADR.CBT.CONTRIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD *\nTB0\nRAZV\nGRESKA\nVR_PRIHODA\nVR_KONCESIJE\nVR_OSNOVICE\nVEZA_PRIH_KONC\nKONC_PARAM_OBR\nGRESKA_EVID\nOBAVIJEST\nUGOVOR_NEPOTPUNI\nKONTROLOR\nKONC_PAKET\nKONC_STAVKA_IZVODA\nKONC_VALUTA\nNACIN_PLACANJA\nKONC_UGOVOR\nUPLATA\nOCEKIVANI_NALOG\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DRCRFKY1": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00X\\x01\\x02\\x06O\\x01\\x040\\x1f\\x107\\x01;\\x00\\xc4\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xd9@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2002-03-05T00:00:00", "modifydate": "2004-10-27T10:37:58", "lines": 315, "newlines": 196, "modlines": 0, "user": "DB2MADR"}, "text": "/* REXX *************************************************************/\n/********************************************************************/\n/*   EXEC : DRCRFK                                                  */\n/*                                                                  */\n/*   EXEC for tailoring DDL for DROP/CREATE FOREIGN KEYS            */\n/********************************************************************/\n\n/* PARSE ARGUMENTS FROM JCL SYSTSIN SEQUENCE                        */\n/* if the sequence contains just SSID nad schema then -             */\n/* drop/create ddl for all the schema tables will be created        */\n/* if the sequence contains SSID,schema and some table names then - */\n/* drop/create ddl for that tables  will be created                 */\nPARSE ARG input\ndata = 'START'\nargm=0\nDO UNTIL data = ''\n   argm=argm+1\n   PARSE PULL data\n   stem_arg.argm=data\nEND\n\n/* argm = no. of arguments from jcl systsin seq */\nargm=argm-1\n\n/* gl.ssid means db2 subsystem identifier -mandatory parm.- */\ngl.ssid=stem_arg.1\n\n/* schema means Authorization ID of the owner -mandatory parm- */\nschema=stem_arg.2\n\n/* constants */\ntables=''\nzarez=','     /* zarez means comma */\nzagrada=')'   /* zagrada means bracket */\nin_tables='and (r.tbname in ('\n\n/* HOW TO FORM SQL STATEMENT */\n/* if no. of arg. < 3 the loop isn't to be executed */\nDO i= 3 TO argm\n IF i=argm THEN zarez=''\n tables=STRIP(tables)' 'STRIP(\"'\"STRIP(stem_arg.i)\"'\"zarez)\nEND\n/* if no. of arg. < 3 the structure isn't to be executed */\nIF argm>2 THEN\n   in_tables=STRIP(in_tables)' 'STRIP(tables)' )' ,\n   'or r.reftbname in ('STRIP(tables) ') )'\nELSE\n   in_tables=''\n\nsay argm in_tables\n\n/* SQL statement */\n statement=\"select r.creator,r.tbname,r.relname,c.keyseq,f.colname, \" ,\n \"r.reftbcreator, r.reftbname,  c.name, r.deleterule, r.colcount \" ,\n \"from SYSIBM.SYSRELS r,sysibm.syscolumns c,sysibm.sysforeignkeys f \" ,\n \"where (r.creator='\"schema\"' or r.reftbcreator='\"schema\"') \" ,\n STRIP(in_tables) ,\n \" and c.keyseq  <> 0 \" ,\n \"and r.reftbcreator=c.tbcreator \" ,\n \"and r.reftbname=c.tbname \" ,\n \"and r.creator=f.creator \" ,\n \"and r.TBNAME  = f.TBNAME \" ,\n \"and r.RELNAME = f.RELNAME \" ,\n \"and c.KEYSEQ=f.COLSEQ\" ,\n \"ORDER BY r.creator, r.tbname, r.relname, c.keyseq \"\n\n say statement\n\n\n/* INIT. lenght of the stem vars needed for the DROP/CREATE statement */\n\n/* stem1_1 needs for the CREATE statement              */\n/* it contains 3 lines 1. ALTER TABLE schema.tbname    */\n/*                     2. FOREIGN KEY fk_name(         */\n/*                     3. first column in FK           */\n/* the value is set by app_stem1_1 procedure           */\nstem1_1_l=3 /* means stem1_1 length */\n\n/* stem1_2 needs for the CREATE statement                   */\n/* it contains 0 lines if is the only one column in the FK  */\n/* otherwise it contains (no. of cols in FK - 1) lines      */\n/* the value is set by app_stem1_2 procedure                */\nstem1_2_l=0 /* means stem1_2 initial length */\n\n/* stem2_1 needs for the CREATE statement                 */\n/* it contains 2 lines 1. REFERENCES refschema.reftbname( */\n/*                     2. first column in reftbname       */\n/* the value is set by app_stem2_1 procedure              */\nstem2_1_l=2 /* means stem1_1 length */\n\n/* stem2_2 needs for the CREATE statement                   */\n/* it contains 0 lines if is the only one column in the FK  */\n/* otherwise it contains (no. of cols in FK - 1) lines      */\n/* the value is set by app_stem1_2 procedure                */\nstem2_2_l=0 /* means stem2_2 initial length */\n\n/* stem_ddl needs for the CREATE statement                   */\n/* it is concatination of all the stem vars above            */\n/* the value is set by app_stem_ddl procedure                */\nstem_ddl_l=0 /* means stem_ddl initial length */\n\n/* stem_ddl needs for the DROP statement                           */\n/* it contains 1 line ALTER TABLE schema.tbname DROP FOREIGN KEY fk*/\n/* the value is set by app_stem_drop procedure                     */\nstem_drop_l=0 /* means stem_drop initial length */\n\n/* Connect, declare, prepare, open */\nCALL CDPO_SQL statement\nDO WHILE sqlcode = 0\n   /* fetch */\n   CALL FETC_SQL\n   IF sqlcode=100 then LEAVE\n   /* take the values from the fetched row */\n   CALL ASSIGN_STEM_VALUE_1\n\n   /* select a combination for the drop/create FK statement creation */\n   /* d_keyseq = The column's numeric position within the table's PK */\n   /* colcount = Number of columns in the foreign key. */\n   SELECT\n      WHEN (d_keyseq=1 & colcount=1) THEN\n      DO\n        CALL app_stem_drop ';'\n        CALL app_stem1_1 ''\n        CALL app_stem2_1 ''\n        CALL app_stem_ddl stem1_1, stem1_1_l\n        CALL app_stem_ddl zagrada, 1\n        CALL app_stem_ddl stem2_1, stem2_1_l\n        CALL app_stem_ddl zagrada, 1\n        CALL set_on_del deleterule\n        CALL app_stem_ddl on_del, 1\n        stem1_2_l=0\n        stem2_2_l=0\n      END\n      WHEN (d_keyseq=1 & colcount>1) THEN\n      DO\n        CALL app_stem_drop ';'\n        CALL app_stem1_1 ','\n        CALL app_stem2_1 ','\n      END\n      WHEN (d_keyseq>1 & colcount>1) THEN\n      DO\n        IF d_keyseq=colcount THEN\n         DO\n          CALL app_stem1_2 ''\n          CALL app_stem2_2 ''\n          CALL app_stem_ddl stem1_1, stem1_1_l\n          CALL app_stem_ddl stem1_2, stem1_2_l\n          CALL app_stem_ddl zagrada, 1\n          CALL app_stem_ddl stem2_1, stem2_1_l\n          CALL app_stem_ddl stem2_2, stem2_2_l\n          CALL app_stem_ddl zagrada, 1\n          CALL set_on_del deleterule\n          CALL app_stem_ddl on_del, 1\n          stem1_2_l=0\n          stem2_2_l=0\n         END\n        ELSE\n         DO\n          CALL app_stem1_2 ','\n          CALL app_stem2_2 ','\n         END\n      END\n      OTHERWISE\n      END\nEND\n\n/*Append DDL for CREATE FK*/\n\"EXECIO\" stem_ddl_l \"DISKW OUTDD2 (STEM stem_ddl.\"\n\"EXECIO 0 DISKW OUTDD2 (FINIS\"\n\n/*Append DDL for DROP FK*/\n\"EXECIO\" stem_drop_l \"DISKW OUTDD1 (STEM stem_drop.\"\n\"EXECIO 0 DISKW OUTDD1 (FINIS\"\n\nSAY '*************************************************************'\nSAY '* PROCEDURE SUCCESSFULLY ENDED                              *'\nSAY '*************************************************************'\nEXIT 0\n\n/*****************************************************************/\n/*                 PROCEDURE SECTION                             */\n/*****************************************************************/\n\nAPP_STEM1_1 :\nARG zarez\nstem1_1.1='ALTER TABLE' STRIP(d_creator)'.'d_tbname\nstem1_1.2='FOREIGN KEY' d_relname'('\nstem1_1.3=d_colname zarez\nRETURN\n\nAPP_STEM1_2 :\nARG zarez\nstem1_2_l=stem1_2_l+1\nstem1_2.stem1_2_l=d_colname zarez\nRETURN\n\nAPP_STEM2_1 :\nARG zarez\nstem2_1.1='REFERENCES' STRIP(p_creator)'.'p_tbname'('\nstem2_1.2=p_colname zarez\nRETURN\n\nAPP_STEM2_2 :\nPARSE ARG zarez\nstem2_2_l=stem2_2_l+1\nstem2_2.stem2_2_l=p_colname zarez\nRETURN\n\nSET_ON_DEL :\nARG deletrule\nIF DELETERULE = 'C' THEN AKCIJA='CASCADE  ;';\nIF DELETERULE = 'N' THEN AKCIJA='SET NULL ;';\nIF DELETERULE = 'R' THEN AKCIJA='RESTRICT ;';\nIF DELETERULE = 'A' THEN AKCIJA='NO ACTION;';\non_del = 'ON DELETE 'AKCIJA\nRETURN\n\nAPP_STEM_DDL :\nARG v_stem, lines\nSELECT\nWHEN v_stem=zagrada THEN\nDO\n   stem_ddl_l=stem_ddl_l+1\n   stem_ddl.stem_ddl_l=zagrada\nEND\nWHEN v_stem=on_del THEN\nDO\n   stem_ddl_l=stem_ddl_l+1\n   stem_ddl.stem_ddl_l=on_del\nEND\nOTHERWISE\nDO i=1 TO lines\n   INTERPRET 'v_stem.i='v_stem'.i'\n   stem_ddl_l=stem_ddl_l+1\n   stem_ddl.stem_ddl_l=v_stem.i\nEND\nEND\nRETURN\n\nAPP_STEM_DROP :\nARG zarez\n   stem_drop_l=stem_drop_l+1\n   stem_drop.stem_drop_l=LEFT('ALTER TABLE' ,\n   STRIP(d_creator)'.'d_tbname,40) ,\n   'DROP FOREIGN KEY' STRIP(d_relname)zarez\nRETURN\n\nCDPO_SQL :\nPARSE ARG statement\nSQLDA. = ''\n/* Set up REXX/SQL environment */\n\"SUBCOM DSNREXX\"\nIF rc THEN\n  S_RC = RXSUBCOM('ADD','DSNREXX','DSNREXX')    /* ADD HOST CMD ENV */\n\nADDRESS DSNREXX 'CONNECT' gl.ssid\nIF SQLCODE \u00ac= 0 THEN\n     CALL errsqlca \"CONNECT\"\n\n/* Execut REXX/SQL statement */\nADDRESS DSNREXX \"EXECSQL DECLARE C1 CURSOR FOR S1\"\nIF SQLCODE \u00ac= 0 THEN\n     CALL errsqlca \"DECLARE C1 CURSOR FOR S1\"\n\nADDRESS DSNREXX \"EXECSQL PREPARE S1 INTO :SQLDA FROM :statement\"\nIF SQLCODE \u00ac= 0 THEN\n     CALL errsqlca \"PREPARE S1 FROM :statement\"\n\nADDRESS DSNREXX \"EXECSQL OPEN C1\"\nIF sqlcode \u00ac= 0 THEN\n  CALL errsqlca \"OPEN C1\"\nRETURN sqlcode\n\nFETC_SQL :\nADDRESS DSNREXX \"EXECSQL FETCH C1 USING DESCRIPTOR :SQLDA\"\nRETURN sqlcode\n\nASSIGN_STEM_VALUE_1 :\nd_creator     = SQLDA.1.SQLDATA\nd_tbname      = SQLDA.2.SQLDATA\nd_relname     = SQLDA.3.SQLDATA\nd_keyseq      = SQLDA.4.SQLDATA\nd_colname     = SQLDA.5.SQLDATA\np_creator     = SQLDA.6.SQLDATA\np_tbname      = SQLDA.7.SQLDATA\np_colname     = SQLDA.8.SQLDATA\ndeleterule    = SQLDA.9.SQLDATA\ncolcount      = SQLDA.10.SQLDATA\nRETURN\n\n\nerrsqlca:\n TRACE O\n SAY '** Error SQL statement - ' arg(1)\n SAY 'SQLCODE ='SQLCODE\n SAY 'SQLERRMC ='SQLERRMC\n SAY 'SQLERRP ='SQLERRP\n SAY 'SQLERRD ='SQLERRD.1',',\n                     || SQLERRD.2',',\n                     || SQLERRD.3',',\n                     || SQLERRD.4',',\n                     || SQLERRD.5',',\n                     || SQLERRD.6 ;\n SAY 'SQLWARN ='SQLWARN.0',',\n                     || SQLWARN.1',',\n                     || SQLWARN.2',',\n                     || SQLWARN.3',',\n                     || SQLWARN.4',',\n                     || SQLWARN.5',',\n                     || SQLWARN.6',',\n                     || SQLWARN.7',',\n                     || SQLWARN.8',',\n                     || SQLWARN.9',',\n                     || SQLWARN.10 ;\n    SAY 'SQLSTATE='SQLSTATE\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DROPFK": {"ttr": 780, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "ALTER TABLE DKONC.KONC_STAVKA_IZVODA     DROP FOREIGN KEY R_19;\nALTER TABLE DKONC.KONTROLOR              DROP FOREIGN KEY R_32;\nALTER TABLE RAZV.GRESKA_EVID             DROP FOREIGN KEY R_43;\nALTER TABLE RAZV.GRESKA_EVID             DROP FOREIGN KEY R_54;\nALTER TABLE RAZV.KONC_PAKET              DROP FOREIGN KEY R_35;\nALTER TABLE RAZV.KONC_STAVKA_IZVODA      DROP FOREIGN KEY R_19;\nALTER TABLE RAZV.KONC_UGOVOR             DROP FOREIGN KEY R_10;\nALTER TABLE RAZV.KONC_UGOVOR             DROP FOREIGN KEY R_20;\nALTER TABLE RAZV.KONC_UGOVOR             DROP FOREIGN KEY R_29;\nALTER TABLE RAZV.KONC_UGOVOR             DROP FOREIGN KEY R_33;\nALTER TABLE RAZV.KONC_UGOVOR             DROP FOREIGN KEY R_36;\nALTER TABLE RAZV.KONC_UGOVOR             DROP FOREIGN KEY R_39;\nALTER TABLE RAZV.KONC_UGOVOR             DROP FOREIGN KEY R_63;\nALTER TABLE RAZV.KONC_UGOVOR             DROP FOREIGN KEY R_64;\nALTER TABLE RAZV.KONTROLOR               DROP FOREIGN KEY R_32;\nALTER TABLE RAZV.NACIN_PLACANJA          DROP FOREIGN KEY R_23;\nALTER TABLE RAZV.NACIN_PLACANJA          DROP FOREIGN KEY R_38;\nALTER TABLE RAZV.NACIN_PLACANJA          DROP FOREIGN KEY R_59;\nALTER TABLE RAZV.OCEKIVANI_NALOG         DROP FOREIGN KEY R_24;\nALTER TABLE RAZV.OCEKIVANI_NALOG         DROP FOREIGN KEY R_37;\nALTER TABLE RAZV.UGOVOR_NEPOTPUNI        DROP FOREIGN KEY R_52;\nALTER TABLE RAZV.UGOVOR_NEPOTPUNI        DROP FOREIGN KEY R_53;\nALTER TABLE RAZV.UGOVOR_NEPOTPUNI        DROP FOREIGN KEY R_65;\nALTER TABLE RAZV.UPLATA                  DROP FOREIGN KEY R_40;\nALTER TABLE RAZV.UPLATA                  DROP FOREIGN KEY R_41;\nALTER TABLE RAZV.VEZA_PRIH_KONC          DROP FOREIGN KEY R_61;\nALTER TABLE RAZV.VEZA_PRIH_KONC          DROP FOREIGN KEY R_62;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "README": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x007\\x01\\x02\\x06O\\x01\\x040\\x9f\\x146\\x00\\xa3\\x00\\xc4\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xf1@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2002-03-05T00:00:00", "modifydate": "2004-11-04T14:36:37", "lines": 163, "newlines": 196, "modlines": 0, "user": "DB2MAD1"}, "text": "DOC FOR REXX EXECS CALLED BY BATCH JOBS\n\n\n       AUTHOR:   MARINO DRAZETA\n\n       CALL:     MARINO DRAZETA\n                 FINA COMPANY\n                 PUT REPUBLIKE 24A\n                 DUBROVNIK 20000\n                 CROATIA\n                 (+385 20 431311)\n\n\nTHE DATASET CONTRIBUTED CONTAINS 3 ARTICLES WHICH COULD BE USEFULL\nFOR A DB2/SYSTEM ADMIN. THE CONCEPT IS THE SAME FOR ALL 3. BATCH JOB\nCALLS SOME REXX EXECS IN ORDER TO FULLFILL WANTED TASKS. THE JOBS AND\nEXECS ARE COMMENTED INSIDE THE CODE.\n\n\n1. ARTICLE - DROP/CREATE FOREIGN KEYS DDL STATEMENTS CREATION\n-------------------------------------------------------------\n\n   THIS ARTICLE ENABLES TO CREATE DATASETS WITH DROP/CREATION DDL\n   STATEMENTS FOR THE SSID AND SCHEMA SPECIFIED.\n   THE STATEMENTS CREATED COULD BE EXECUTED THROUGH USUAL ENVIRONMENTS\n   (IE. SPUFI)\n\nMEMBERS REQUIRED:\n\n   # DB2FKDC  - JCL\n\n      YOU HAVE TO ADJUST JOBLIB DD DSN ACCORDING YOUR INSTALATION\n      //JOBLIB   DD  DSN=SYS1.P61.DSN610.SDSNEXIT,DISP=SHR\n      //         DD  DSN=P61.DSN610.SDSNLOAD,DISP=SHR\n\n   # DRCRFKY1 - REXX PRG. CALLED BY THE JCL ABOVE\n\nSTEP S01\n\n   JUST TO AVIOD DUPLICATE DATASET NAME CREATION\n\nSTEP S02\n\n   SPECIFY AN ARBITRARY DSN WHERE YOU WANT TO KEEP DROP/CREAT STATEMENTS\n   IE. //OUTDD1   DD DSN=DB2MADR.CBT.CONTRIB(DROPFK),DISP=SHR\n   IE. //OUTDD2   DD DSN=DB2MADR.CBT.CONTRIB(CREFK),DISP=SHR\n   DB2MADR.CBT.CONTRIB(DROPFK)   WILL CONTAIN DROP DDL STATEMENTS\n   DB2MADR.CBT.CONTRIB(CREFK)    WILL CONTAIN CREATE DDL STATEMENTS\n   ABOVE MEMBERS ARE INCLUDED IN THE CONTRIBUTION DATASET.\n\n   SPECIFY AN SSID, SCHEMA, (OPTIONALY TABLES) FOR SYSTSIN\n   IE .//SYSTSIN  DD *\n       TB0          -> SSID\n       RAZV         -> SCHEMA\n       GRESKA       -> TABLENAME (OPTIONALY)\n       VR_PRIHODA   -> TABLENAME (OPTIONALY)\n       ETC.\n\n   IF TABLE NAMES ARE SPECIFIED (AS IN THE EXAMPLE ABOVE) THE OUTPUT\n   WILL INCLUDE DROP/CREAT STATEMENTS FOR JUST THAT TABLES.\n   OTHERWISE, THE OUTPUT WILL INCLUDE DROP/CREAT STATEMENTS FOR\n   ALL TABLES IN THE SPECIFIED SCHEMA, INCLUDING RELATIONS TOWARD\n   A TABLES IN SOME OTHER SCHEMA (PARENT TABLES OUTSIDE SCH. SPECIFIED).\n\n\n2. ARTICLE - USING BATCH JOB FOR A SYSTEM COMMANDS EXECUTION\n-------------------------------------------------------------\n\n   THIS ARTICLE ENABLES TO EXECUTE A SYSTEM COMMANDS USING BATCH JOB.\n   THE JOB OUTPUT CONTAINS THE STATEMENTS AND A SYSTEM RESPONSE.\n\nMEMBERS REQUIRED:\n\n   # CONSBATC - JCL\n\n      YOU HAVE TO ADJUST JOBLIB DD DSN ACCORDING YOUR INSTALATION\n      //JOBLIB   DD  DSN=SYS1.P61.DSN610.SDSNEXIT,DISP=SHR\n      //         DD  DSN=P61.DSN610.SDSNLOAD,DISP=SHR\n\n   # CONSCOMM - REXX PRG. CALLED BY THE JCL ABOVE\n\n   # CONSOLV  - REXX PRG. CALLED BY THE JCL ABOVE\n\n\nPREPARATION REQUIRED:\n\n   IN ORDER TO EXECUTE THIS JOB EMCS CONSOLE NAMED SYSCONEX SHOULD BE\n   GRANTED BY MSTR AUTHORITY (CONSOLE NAME(SYSCONEX) AUTH(MASTER)).\n\n\nSTEP S01\n\n   BELOW SYSTSIN SPECIFY SYSTEM COMMANDS YOU WANT TO EXECUTE.\n   EXAMPLES ARE SHOWN IN CONSBATC AND CONSBAT1 MEMBERS.\n\nSTEP S02\n\n   THIS STEP EXECUTES IKJEFT01 WHICH CALLS CONSOLV REXX PROGRAM.\n   PURPOSE OF THE PROGRAM IS TO ESTABLISH EMCS CONSOLE SESSION. THEN\n   USING GETMSG FUNCTION TO PROVIDE  A SYSTEM RESPONSE.\n\n\n3. ARTICLE - USING BATCH JOB FOR DB2 DRDA THREADS TERMINATION\n-------------------------------------------------------------\n\n   THIS ARTICLE PROVIDES, ACCORDING THE AUTHID KEYWORD SELECTIVELY\n   OR ALL, DB2 DRDA THREADS TERMINATION. IT HASN'T IMPACT TO THE\n   CICS, IMS OR BATCH THREADS. MAY BE USEFULL IN THE QUICK DB OR DDF\n   SHUTDOWN SITUATION. PROGRAM EXECUTION IS PERFORMED THROUGH MVS\n   CONSOLE ENVIRONMENT, SO THE MAX_LINES RESTRICTION REMAINS. WHEN A\n   HUGE NUMBER OF DRDA CONNECTION IS PRESENTED ITERATIVE JOB EXECUTION\n   COULD BE REQUIRED.\n\nMEMBERS REQUIRED:\n\n   # SYCANTHD - JCL\n\n      YOU HAVE TO ADJUST JOBLIB DD DSN ACCORDING YOUR INSTALATION\n      //JOBLIB   DD  DSN=SYS1.P61.DSN610.SDSNEXIT,DISP=SHR\n      //         DD  DSN=P61.DSN610.SDSNLOAD,DISP=SHR\n\n   # SYCANCOM - REXX PRG. CALLED BY THE JCL ABOVE\n\n   # CONSOLV3 - REXX PRG. CALLED BY THE JCL ABOVE\n\n   # CONSOLV4 - REXX PRG. CALLED BY THE JCL ABOVE\n\nPREPARATION REQUIRED:\n\n   IN ORDER TO EXECUTE THIS JOB EMCS CONSOLE NAMED SYSCONEX SHOULD BE\n   GRANTED BY MSTR AUTHORITY.\n\nSTEP S01\n\nHERE YOU HAVE TO PUT SSID (SUBSYSTEM IDENTIFIER) AND AUTHID (AUTHORIZ.\nIDENTIFIER). IN THE EXAMPLE BELOW ALL DB2 DRDA THREADS FOR SSID: PB3 AND\nWITH AUTHID: GOTDB SHOULD BE CANCELED.\n\n     //SYSTSIN  DD *\n       PB3\n       GOTDB\n\nIF YOU FOR AUTHID PUT THE KEYWORD \"SVI\" ALL DB2 DRDA THREADS FOR\nSSID: PB3 SHOULD BE CANCELED.\n\n     //SYSTSIN  DD *\n       PB3\n       SVI\n\nSTEP S02\n\n   THIS STEP EXECUTES IKJEFT01 WHICH CALLS CONSOL3 REXX PROGRAM.\n   PURPOSE OF THE PROGRAM IS TO ESTABLISH EMCS CONSOLE SESSION. THEN\n   USING GETMSG FUNCTION TO PROVIDE A SYSTEM RESPONSE ON COMMAND:\n   -SSID DIS THD(*)\n\nSTEP S03\n\n   THIS STEP EXECUTES IKJEFT01 WHICH CALLS CONSOL4 REXX PROGRAM.\n   PURPOSE OF THE PROGRAM IS TO ESTABLISH EMCS CONSOLE SESSION. THEN,\n   AFTER SELECTION ACCORDING THE AUTHID WHICH WAS PUT IN STEP 01,\n   USING SYSCMD FUNCTION TO EXECUTE COMMAND: -SSID CANCEL THD(TOKEN) ,\n   AND USING GETMSG FUNCTION PROVIDE A SYSTEM RESPONSE ON THE COMMAND.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "README1": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00(\\x01\\x02\\x06O\\x01\\x041O\\x17X\\x00\\xa3\\x00\\xc4\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xd9@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2002-03-05T00:00:00", "modifydate": "2004-11-09T17:58:28", "lines": 163, "newlines": 196, "modlines": 0, "user": "DB2MADR"}, "text": "DOC FOR REXX EXECS CALLED BY BATCH JOBS\n\n\n       AUTHOR:   MARINO DRAZETA\n\n       CALL:     MARINO DRAZETA\n                 FINA COMPANY\n                 PUT REPUBLIKE 24A\n                 DUBROVNIK 20000\n                 CROATIA\n                 (+385 20 431311)\n                 marino.drazeta@fina.hr\n\nTHE DATASET CONTRIBUTED CONTAINS 3 APPLICATIONS WHICH COULD BE USEFULL\nFOR A DB2/SYSTEM ADMIN. CONCEPT IS THE SAME, BATCH JOB CALLS SOME REXX\nEXECS. THE JOBS AND EXECS ARE COMMENTED INSIDE THE CODE.\n\n1. APPL - DROP/CREATE FOREIGN KEYS DDL STATEMENTS CREATION\n-------------------------------------------------------------\n\n   THIS APPL ENABLES TO CREATE DATASETS WITH DROP/CREATION DDL\n   STATEMENTS FOR THE SSID AND SCHEMA SPECIFIED.\n   THE STATEMENTS CREATED COULD BE EXECUTED THROUGH USUAL ENVIRONMENTS\n   (IE. SPUFI)\n\nMEMBERS REQUIRED: DB2FKDC, DRCRFKY1\nEXAMPLE MEMBERS:  DROPFK, CREFK\n\n   # DB2FKDC  - JCL\n\n      YOU HAVE TO ADJUST JOBLIB DD DSN ACCORDING YOUR INSTALATION\n      //JOBLIB   DD  DSN=SYS1.P61.DSN610.SDSNEXIT,DISP=SHR\n      //         DD  DSN=P61.DSN610.SDSNLOAD,DISP=SHR\n\n   # DRCRFKY1 - REXX PRG. CALLED BY THE JCL\n\nSTEP S01\n\n   JUST TO AVIOD DUPLICATE DATASET NAME CREATION\n\nSTEP S02\n\n   SPECIFY AN ARBITRARY DSN WHERE YOU WANT TO KEEP DROP/CREAT STATEMENTS\n   IE. //OUTDD1   DD DSN=DB2MADR.CBT.CONTRIB(DROPFK),DISP=SHR\n   IE. //OUTDD2   DD DSN=DB2MADR.CBT.CONTRIB(CREFK),DISP=SHR\n   DB2MADR.CBT.CONTRIB(DROPFK)   WILL CONTAIN DROP DDL STATEMENTS\n   DB2MADR.CBT.CONTRIB(CREFK)    WILL CONTAIN CREATE DDL STATEMENTS\n   ABOVE MEMBERS ARE INCLUDED IN THE CONTRIBUTION DATASET.\n\n   SPECIFY AN SSID, SCHEMA, (OPTIONALY TABLES) FOR SYSTSIN\n   IE .//SYSTSIN  DD *\n       TB0          -> SSID\n       RAZV         -> SCHEMA\n       GRESKA       -> TABLENAME (OPTIONALY)\n       VR_PRIHODA   -> TABLENAME (OPTIONALY)\n       ETC.\n\n   IF TABLE NAMES ARE SPECIFIED (AS IN THE EXAMPLE ABOVE) THE OUTPUT\n   WILL INCLUDE DROP/CREAT STATEMENTS FOR JUST THAT TABLES.\n   OTHERWISE, THE OUTPUT WILL INCLUDE DROP/CREAT STATEMENTS FOR\n   ALL TABLES IN THE SPECIFIED SCHEMA, INCLUDING RELATIONS TOWARD\n   A TABLES IN SOME OTHER SCHEMA (PARENT TABLES OUTSIDE SCH. SPECIFIED).\n\n\n2. APPL - USING BATCH JOB FOR A SYSTEM COMMANDS EXECUTION\n-------------------------------------------------------------\n\n   THIS APPL ENABLES TO EXECUTE A SYSTEM COMMANDS USING BATCH JOB.\n   THE JOB OUTPUT CONTAINS THE STATEMENTS AND A SYSTEM RESPONSE.\n\nMEMBERS REQUIRED: CONSBATC, CONSCOMM, CONSOLV\nEXAMPLE MEMBERS : CONSBATC, CONSBAT1\n\n   # CONSBATC - JCL\n\n      YOU HAVE TO ADJUST JOBLIB DD DSN ACCORDING YOUR INSTALATION\n      //JOBLIB   DD  DSN=SYS1.P61.DSN610.SDSNEXIT,DISP=SHR\n      //         DD  DSN=P61.DSN610.SDSNLOAD,DISP=SHR\n\n   # CONSCOMM - REXX PRG. CALLED BY THE JCL\n\n   # CONSOLV  - REXX PRG. CALLED BY THE JCL\n\n\nPREPARATION REQUIRED:\n\n   IN ORDER TO EXECUTE THIS JOB EMCS CONSOLE NAMED SYSCONEX SHOULD BE\n   GRANTED BY MSTR AUTHORITY (CONSOLE NAME(SYSCONEX) AUTH(MASTER)).\n\n\nSTEP S01\n\n   BELOW SYSTSIN SPECIFY SYSTEM COMMANDS YOU WANT TO EXECUTE.\n   EXAMPLES ARE SHOWN IN CONSBATC AND CONSBAT1 MEMBERS.\n\nSTEP S02\n\n   THIS STEP EXECUTES IKJEFT01 WHICH CALLS CONSOLV REXX PROGRAM.\n   PURPOSE OF THE PROGRAM IS TO ESTABLISH EMCS CONSOLE SESSION. THEN\n   USING GETMSG FUNCTION TO PROVIDE  A SYSTEM RESPONSE.\n\n\n3. JOB  - USING BATCH JOB FOR DB2 DRDA THREADS TERMINATION\n-------------------------------------------------------------\n\n   THIS JOB PROVIDES, ACCORDING THE AUTHID KEYWORD SELECTIVELY\n   OR ALL, DB2 DRDA THREADS TERMINATION. IT HASN'T IMPACT TO THE\n   CICS, IMS OR BATCH THREADS. MAY BE USEFULL IN THE QUICK DB OR DDF\n   SHUTDOWN SITUATION. PROGRAM EXECUTION IS PERFORMED THROUGH MVS\n   CONSOLE ENVIRONMENT, SO THE MAX_LINES RESTRICTION REMAINS. WHEN A\n   HUGE NUMBER OF DRDA CONNECTION IS PRESENTED ITERATIVE JOB EXECUTION\n   COULD BE REQUIRED.\n\nMEMBERS REQUIRED: SYCANTHD, SYCANCOM, CONSOLV3, CONSOLV4\n\n   # SYCANTHD - JCL\n\n      YOU HAVE TO ADJUST JOBLIB DD DSN ACCORDING YOUR INSTALATION\n      //JOBLIB   DD  DSN=SYS1.P61.DSN610.SDSNEXIT,DISP=SHR\n      //         DD  DSN=P61.DSN610.SDSNLOAD,DISP=SHR\n\n   # SYCANCOM - REXX PRG. CALLED BY THE JCL\n\n   # CONSOLV3 - REXX PRG. CALLED BY THE JCL\n\n   # CONSOLV4 - REXX PRG. CALLED BY THE JCL\n\nPREPARATION REQUIRED:\n\n   IN ORDER TO EXECUTE THIS JOB EMCS CONSOLE NAMED SYSCONEX SHOULD BE\n   GRANTED BY MSTR AUTHORITY.\n\nSTEP S01\n\nHERE YOU HAVE TO PUT SSID (SUBSYSTEM IDENTIFIER) AND AUTHID (AUTHORIZ.\nIDENTIFIER). IN THE EXAMPLE BELOW ALL DB2 DRDA THREADS FOR SSID: PB3 AND\nWITH AUTHID: GOTDB SHOULD BE CANCELED.\n\n     //SYSTSIN  DD *\n       PB3\n       GOTDB\n\nIF YOU FOR AUTHID PUT THE KEYWORD \"SVI\" ALL DB2 DRDA THREADS FOR\nSSID: PB3 SHOULD BE CANCELED.\n\n     //SYSTSIN  DD *\n       PB3\n       SVI\n\nSTEP S02\n\n   THIS STEP EXECUTES IKJEFT01 WHICH CALLS CONSOL3 REXX PROGRAM.\n   PURPOSE OF THE PROGRAM IS TO ESTABLISH EMCS CONSOLE SESSION. THEN\n   USING GETMSG FUNCTION TO PROVIDE A SYSTEM RESPONSE AFTER:\n   -SSID DIS THD(*)\n\nSTEP S03\n\n   THIS STEP EXECUTES IKJEFT01 WHICH CALLS CONSOL4 REXX PROGRAM.\n   PURPOSE OF THE PROGRAM IS TO ESTABLISH EMCS CONSOLE SESSION. THEN\n   (AFTER SELECTION ACCORDING THE AUTHID WHICH WAS PUT IN STEP 01)\n   USING SYSCMD FUNCTION TO EXECUTE COMMAND: -SSID CANCEL THD(TOKEN)\n   AND USING GETMSG FUNCTION TO PROVIDE A SYSTEM RESPONSE.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYCANCOM": {"ttr": 1032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x14\\x01\\x02\\x06O\\x01\\x040\\x1f\\x14!\\x00\\x0e\\x00\\xc4\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xd9@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2002-03-05T00:00:00", "modifydate": "2004-10-27T14:21:14", "lines": 14, "newlines": 196, "modlines": 0, "user": "DB2MADR"}, "text": "/* REXX  */\n/* JUST READ THE PARM. FROM SYSTSIN AND PUT IT TO OUTDD1, OUTDD2*/\n/* SSID WILL BE PLACED TO OUTDD1, AND AUTHID TO OUTDD2 DATASET  */\nPARSE ARG INPUT\nPARSE PULL DATA\nMEMBER.1 = STRIP(DATA)\nPARSE PULL DATA\nAUTHID.1 = STRIP(DATA)\n\"EXECIO\" 1 \"DISKW OUTDD1 (STEM MEMBER.\"\n\"EXECIO 0 DISKR OUTDD1 (FINIS\"\n\n\"EXECIO\" 1 \"DISKW OUTDD2 (STEM AUTHID.\"\n\"EXECIO 0 DISKR OUTDD2 (FINIS\"\nEXIT 0\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYCANTHD": {"ttr": 1034, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01?\\x00B\\x01\\x04\\x16/\\x01\\x040\\x7f\\x10R\\x00(\\x00!\\x00\\x00\\xc4\\xc2\\xf2\\xd4\\xc1\\xc4\\xd9@@@'", "ispf": {"version": "01.63", "flags": 0, "createdate": "2004-06-10T00:00:00", "modifydate": "2004-11-02T10:52:42", "lines": 40, "newlines": 33, "modlines": 0, "user": "DB2MADR"}, "text": "//SYCANTHD JOB (SISTEM),'SYSADM',NOTIFY=&SYSUID,\n//         TIME=1440,REGION=2M,CLASS=A,MSGCLASS=X,MSGLEVEL=(1,1)\n//****************************************************************\n//*-SYCANTHD-  THIS JOB IS GOING TO TERMINATE ALL DRDA CONNECTIONS\n//*            ACCORDING THE AUTHID KEYWORD ENTERED IN SYSTSIN\n//****************************************************************\n//JOBLIB    DD  DSN=SYS1.P61.DSN610.SDSNEXIT,DISP=SHR\n//          DD  DSN=P61.DSN610.SDSNLOAD,DISP=SHR\n//S01CON EXEC PGM=IRXJCL,PARM='SYCANCOM',REGION=0M\n//OUTDD1   DD DSN=&&COMMAND,DISP=(MOD,PASS),SPACE=(CYL,1)\n//OUTDD2   DD DSN=&&AUTHID,DISP=(MOD,PASS),SPACE=(CYL,1)\n//SYSEXEC  DD DSN=DB2MADR.CBT.CONTRIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//****************************************************************\n//*-SYSTSIN-   ENTER   SSID   IE. PB3    (SUBSYS IDENTIFICATION)\n//*                    AUTHID IE. JAVADB (ENTER JUST 1 AUTHID)\n//* IF ALL CONN. TERMINATION IS REQUESTED THEN ENTER KEYWORD: SVI\n//****************************************************************\n//SYSTSIN  DD *\n  PB3\n  GOTDB\n/*\n//S02CON EXEC PGM=IKJEFT01\n//SYSEXEC  DD DSN=DB2MADR.CBT.CONTRIB,DISP=SHR\n//SYSTSPRT DD DSN=&&CMDOUT,DISP=(MOD,PASS),SPACE=(CYL,1)\n//*SYSTSPRT DD SYSOUT=*\n//INPDD1   DD DSN=&&COMMAND,DISP=(OLD,PASS)\n//INPDD2   DD DSN=&&AUTHID,DISP=(OLD,PASS)\n//SYSTSIN  DD *\n%CONSOLV3\n/*\n//S03CON EXEC PGM=IKJEFT01\n//SYSEXEC  DD DSN=DB2MADR.CBT.CONTRIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//INPDD1   DD DSN=&&COMMAND,DISP=(OLD,DELETE)\n//INPDD2   DD DSN=&&AUTHID,DISP=(OLD,DELETE)\n//INPDD3   DD DSN=&&CMDOUT,DISP=(OLD,DELETE)\n//SYSTSIN  DD *\n%CONSOLV4\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT701/FILE701.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT701", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}