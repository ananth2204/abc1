{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011505000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE203.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE203.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x02'", "DS1TRBAL": "b'\\xcdv'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x8a\\x00\\x0e\\x01\\x8b\\x00\\x03\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x94\\x01\\x9f\\x00\\x94\\x01\\x9f\\x16\\x05\\x00\\x1f\\x00 \\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-01-19T00:00:00", "modifydate": "1994-01-19T16:05:00", "lines": 31, "newlines": 32, "modlines": 0, "user": "SBGCSC"}, "text": "//*                                                                 *   FILE 203\n//*                  STK CARTRIDGE EJECT PACKAGE                    *   FILE 203\n//*                                                                 *   FILE 203\n//*           The purpose of this package is to start with a        *   FILE 203\n//*      TMSGRW report (a list of tapes) from the CA-1 Tape         *   FILE 203\n//*      Management System, and produce a bunch of STK control      *   FILE 203\n//*      cards to eject these tapes from the STK Silo, 21 tapes     *   FILE 203\n//*      at a time.                                                 *   FILE 203\n//*                                                                 *   FILE 203\n//*           That's all, folks.                                    *   FILE 203\n//*                                                                 *   FILE 203\n//*           This system can be rewritten for the equivalent       *   FILE 203\n//*      TLMS report to TMSGRW.                                     *   FILE 203\n//*                                                                 *   FILE 203\n//*           See the JCL stream called TMSEJECT in this file,      *   FILE 203\n//*      to see how this stuff is strung together.  There are       *   FILE 203\n//*      4 assembler programs.  This code has been                  *   FILE 203\n//*      'modularized' to make its maintenance simpler.             *   FILE 203\n//*                                                                 *   FILE 203\n//*           If you have more than 5 silos, you have to            *   FILE 203\n//*      accordingly modify program STKESTK.                        *   FILE 203\n//*                                                                 *   FILE 203\n//*           Good Luck !  If you need help, call                   *   FILE 203\n//*                                                                 *   FILE 203\n//*                Jim Marshall, US Treasury                        *   FILE 203\n//*                Financial Management Service                     *   FILE 203\n//*                Prince Georges Plaza II - Room 400B              *   FILE 203\n//*                3700 East-West Highway                           *   FILE 203\n//*                Hyattsville, MD  20782                           *   FILE 203\n//*                202-874-8353                                     *   FILE 203\n//*                                                                 *   FILE 203\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "STKEDTE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x01\\x9f\\x00\\x94\\x01\\x9f\\x12\"\\x00\\xa3\\x00\\xa3\\x00\\x00\\xe2\\xf2\\xf1\\xf8@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-19T00:00:00", "modifydate": "1994-01-19T12:22:00", "lines": 163, "newlines": 163, "modlines": 0, "user": "S218"}, "text": "*---------------------------------------------------------------------*\n*                      S T K E D T E                                  *\n*                                                                     *\n*                                                                     *\n*        THIS PROGRAM DETERMINES THE JULIAN DATES FOR EJECTION OF THE *\n*        DISASTER DUMPS AND OUTPUTS A CA-1 TMSGRW PROGRAM TO BE       *\n*        RUN LATER.                                                   *\n*                                                                     *\n*        JIM MARSHALL, DEPT OF TREASURY/FMS                           *\n*                                                                     *\n*        //EDATES   EXEC PGM=STKEDTE                                  *\n*        //STEPLIB  DD - PRIVATE LOADLIB -                            *\n*        //SYSUT2   DD - FILE CONTAINING TMSGRW PROGRAM -             *\n*                                                                     *\n* CHNGE LOG: 04APR92 - JDM1 - ADD YEAR ROLLOVER SUPPORT               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE\nSTKEDTE AMODE 24\nSTKEDTE RMODE 24\nSTKEDTE CSECT\n         SAVE (14,12),,STKEDTE_&SYSDATE._&SYSTIME\n         LR   R12,R15\n         USING STKEDTE,R12\n         LA    R9,SAVE\n         ST    R13,SAVE+4\n         ST    R9,8(R13)\n         LR    R13,R9\n         SPACE\n*---------------------------------------------------------------------*\n*        ISSUE THE TIME MACRO TO GET THE DATE.                        *\n*---------------------------------------------------------------------*\n         SPACE\n         TIME\n         ST    R1,PWORK            R1 = 0CYYDDDF\n         MVC   PACKDATE(3),PWORK+1\n         SPACE 1                                                 JDM1\n*----------------------------------------------------------------JDM1-*\n*        NEED TO SEE IF YEAR ROLLOVER HAS OCCURRED. IF SO, THEN  JDM1 *\n*        ADJUST THE DATES                                        JDM1 *\n*----------------------------------------------------------------JDM1-*\n         SPACE 1                                                 JDM1\n         SP    PWORK,=P'7'         DECREASE BY SEVEN             JDM1\n         CLC   PACKDATE(1),PWORK+1  YEARS THE SAME ?             JDM1\n         BE    COMPUTE                                           JDM1\n*----------------------------------------------------------------JDM1-*\n*        ROLLOVER HAS HAPPENED, THEREFORE DO ALGORITHM OF        JDM1 *\n*        MAXDATE = TODAY OR PACKDATE                             JDM1 *\n*        MINDATE = MAXDATE - 1000 + (365) - 6                    JDM1 *\n*----------------------------------------------------------------JDM1-*\n         SPACE 1                                                 JDM1\n         UNPK  MAXDATE,PACKDATE                                  JDM1\n         OI    MAXDATE+4,X'F0'     MAKE A CHARACTER              JDM1\n         ZAP   PWORK,PACKDATE      GET A COPY                    JDM1\n         SP    PWORK,=P'1000'                                    JDM1\n         AP    PWORK,=P'365'                                     JDM1\n         SP    PWORK,=P'6'                                       JDM1\n         UNPK  MINDATE,PWORK                                     JDM1\n         OI    MINDATE+4,X'F0'     MAKE A CHARACTER              JDM1\n         B     BUILD                                             JDM1\n         SPACE\n*---------------------------------------------------------------------*\n*        NOW WE NEED TO TAKE OUR DATE DO A COMPUTATION. BUT REMEMBER  *\n*        THE DATE IS IN CHARACTER FORMAT.                             *\n*                                                                     *\n*        MAXDATE  =  PACKDATE                                         *\n*        MINDATE  =  MAXDATE  - 6                                     *\n*---------------------------------------------------------------------*\n         SPACE\nCOMPUTE  EQU   *\n         UNPK  MAXDATE,PACKDATE\n         OI    MAXDATE+4,X'F0'     MAKE A CHARACTER\n         SPACE\n         SP    PACKDATE,=P'6'      BACKUP TO COVER THE RANGE\n         UNPK  MINDATE,PACKDATE\n         OI    MINDATE+4,X'F0'     MAKE A CHARACTER\n         SPACE\n*---------------------------------------------------------------------*\n*        NEED TO BUILD THE TMSGRW PROGRAM.                            *\n*---------------------------------------------------------------------*\n         SPACE\nBUILD    EQU   *                                                 JDM1\n         MVC   TMSHIGH+24(5),MAXDATE\n         MVC   TMSLOW+24(5),MINDATE\n         OPEN  (SYSUT2,(OUTPUT))\n         LA    R11,TMSGRWP         GET ADDR OF PGM\nLOOP1    EQU   *\n         CLC   0(2,R11),=C'/*'     ARE WE DONE ?\n         BE    EOJ1\n         PUT   SYSUT2,(R11)\n         LA    R11,80(,R11)        MOVE IT ALONG\n         B     LOOP1\nEOJ1     EQU   *\n         CLOSE (SYSUT2)\n         SPACE\n         L     R13,SAVE+4\n         RETURN (14,12),RC=0\n         SPACE\nSYSUT2   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT2,RECFM=FB,LRECL=80,      X\n               BLKSIZE=6160\n         SPACE\n*---------------------------------------------------------------------*\n*        DATA AREA FOLLOWS.                                           *\n*---------------------------------------------------------------------*\n         SPACE\n         LTORG\nSAVE     DC    18F'0'\nPWORK    DC    F'0'                WORK AREA\nPACKDATE DC    PL3'0'\nMAXDATE  DC    CL5'YYDDD'\nMINDATE  DC    CL5'YYDDD'\nTMSGRWP  DS    0CL80\n         DC    CL80'CONTROL-SECTION                       '\n         DC    CL80'   SORT VOLSER                        '\n*                   0         1         2\n*                   01234567890123456789012 345678 9\nTMSHIGH  DC    CL80'   DEFINE MAXDATE   PD ''NNNNN''      '\nTMSLOW   DC    CL80'   DEFINE MINDATE   PD ''NNNNN''      '\n         DC    CL80'   DEFINE VAULT0    CH ''OFF ''       '\n         DC    CL80'   DEFINE VAULT1    CH ''OFF1''       '\n         DC    CL80'   DEFINE SCRT      HX ''04''         '\n         DC    CL80'   DEFINE DELT      HX ''02''         '\n         DC    CL80'PROCESS-SECTION                       '\n         DC    CL80'  WHEN CRTDT   GT MAXDATE             '\n         DC    CL80'       REJECT                         '\n         DC    CL80'  WHEN CRTDT   LT MINDATE             '\n         DC    CL80'       REJECT                         '\n         DC    CL80'  WHEN FLAG1   ON SCRT                '\n         DC    CL80'       REJECT                         '\n         DC    CL80'  WHEN FLAG1   ON DELT                '\n         DC    CL80'       REJECT                         '\n         DC    CL80'  WHEN OUTCODE EQ VAULT0              '\n         DC    CL80'       LIST                           '\n         DC    CL80'  WHEN OUTCODE EQ VAULT1              '\n         DC    CL80'       LIST                           '\n         DC    CL80'REPORT-SECTION                        '\n         DC    CL80'  PRINT VOLSER                        '\n         DC    CL80'  PRINT CRTDT                         '\n         DC    CL80'  PRINT EXPDT                         '\n         DC    CL80'  PRINT CJOB                          '\n         DC    CL80'  PRINT OUTCODE                       '\n         DC    CL80'  PRINT DEN                           '\n         DC    CL80'  PRINT DSN                           '\n         DC    CL80'/*   '\n         SPACE\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STKEDTE@": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x01\\x9f\\x00\\x94\\x01\\x9f\\x12\"\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe2\\xf2\\xf1\\xf8@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-19T00:00:00", "modifydate": "1994-01-19T12:22:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "S218"}, "text": "//S218JDM$ JOB (S4405),'BIN014/MARSHALL',CLASS=A,\n//         MSGCLASS=S,MSGLEVEL=(1,1)\n/*NOTIFY   S218\n/*XEQ      N1\n//* -----------------------------------------------------------------*\n//*        INSTALL \"STKEDTE\"\n//* -----------------------------------------------------------------*\n//STKEDTE  EXEC ASMHCL,COND=(0,NE),\n//         PARM.C='NOLIST,OBJECT,NODECK,BATCH,TERM'\n//SYSTERM  DD SYSOUT=*\n//SYSIN    DD DISP=SHR,DSN=S218.UTIL.STK(STKEDTE)\n//L.SYSLMOD DD DISP=SHR,DSN=USER.LINKLIB,UNIT=,SPACE=,DCB=\n//SYSIN    DD *\n NAME STKEDTE(R)\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STKEJCT": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x01\\x9f\\x00\\x94\\x01\\x9f\\x12\"\\x01h\\x01h\\x00\\x00\\xe2\\xf2\\xf1\\xf8@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-19T00:00:00", "modifydate": "1994-01-19T12:22:00", "lines": 360, "newlines": 360, "modlines": 0, "user": "S218"}, "text": "*---------------------------------------------------------------------*\n*                      S T K E J C T                                  *\n*                                                                     *\n*        THIS PROGRAM READS AN EDITTED TMS LIST OF ALL TAPES TO       *\n*        GO OFFSITE AND AN EDITTED LIST OF STK CARTRIDGE LOCATIONS.   *\n*        WHAT GETS CREATED IS A SERIES OF EJECT CARDS FOR A           *\n*        PARTICULAR STK CAP.                                          *\n*                                                                     *\n*        JIM MARSHALL, DEPT OF TREASURY/FMS                           *\n*                                                                     *\n*                                                                     *\n*        //GENERATE EXEC PGM=STKEJCT,PARM=PRINT                       *\n*        //STEPLIB  DD - PRIVATE LOADLIB -                            *\n*        //SYSUT1T  DD - TMS INPUT GENERATED BY STKETMS -             *\n*        //SYSUT20  DD - STK INPUT GENERATED BY STKESTK ACS0          *\n*        //SYSUT21  DD - STK INPUT GENERATED BY STKESTK ACS1          *\n*        //SYSUT22  DD - STK INPUT GENERATED BY STKESTK ACS2     JDM1 *\n*        //SYSUT23  DD - STK INPUT GENERATED BY STKESTK ACS3     JDM1 *\n*        //SYSUT24  DD - STK INPUT GENERATED BY STKESTK ACS4     JDM1 *\n*        //SYSUT3E  DD - FORMATTED STK EJECT CARDS -                  *\n*        //SYSUT4R  DD SYSOUT=*                                       *\n*                                                                     *\n*        NOTE:  PASSING ANY PARM TO STKEJECT WILL CAUSE THE 'EJECT'   *\n*               CARDS TO BE PRINTED TO SYSUT4R.                       *\n*                                                                     *\n*  CHNGE LOG: 13APR92 - JDM1 - ADDED ACS2 - ACS4 SUPPORT              *\n*             13APR92 - JDM2 - LOGIC FOR EMPTY ACS FILE               *\n*                                                                     *\n*---------------------------------------------------------------------*\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE\n         MACRO\n&NAME    MODE   &AMODE=31\n.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n.*  SET ADDRESSING MODE.  EITHER 'MODE AMODE=31' OR 'MODE AMODE=24'  *\n.*                                                                   *\n.* NOTES: EXAMPLE - '    MODE AMODE=31  SET ADDREESSING MODE TO 31   *\n.*                  ' -MORE CODE -                                   *\n.*                  '    MODE AMODE=24  SET ADDREESSING MODE TO 24   *\n.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n         SPACE\n         LCLC   &I\n         GBLA   &B\n&I       SETC   '&SYSNDX'\n         AIF    (&AMODE EQ 31).MOD31\n&NAME    LA     15,RMOD&I\n         BSM    0,15\nRMOD&I   DS     0H\n         AGO    .MEND\n.MOD31   ANOP\n&NAME    L      15,AMOD&I\n         BSM    0,15\nAMOD&I   DC     A(CON&I+X'80000000')\nCON&I    DS     0H\n.MEND    MEND\n         SPACE\nSTKEJCT  AMODE 31\nSTKEJCT  RMODE 24\nSTKEJCT  CSECT\n         SAVE (14,12),,STKEJCT_&SYSDATE._&SYSTIME\n         LR   R12,R15\n         USING STKEJCT,R12\n         LA    R9,SAVE\n         ST    R13,SAVE+4\n         ST    R9,8(R13)\n         LR    R13,R9\n         MVI   PRTSW,C'N'          DEFAULT TO NO\n         L     R2,0(,R1)\n         LH    R1,0(,R2)           GET LENGTH\n         LTR   R1,R1               DO WE HAVE A PARM\n         BZ    TALLYHO\n         MVI   PRTSW,C'Y'          MIRROR THE EJECT CARDS TO SYSUT4\n         SPACE\nTALLYHO  EQU   *\n         OPEN  (SYSUT1T,INPUT,SYSUT20,INPUT,SYSUT21,INPUT,             X\n               SYSUT22,INPUT,SYSUT23,INPUT,SYSUT24,INPUT,        JDM1  X\n               SYSUT3E,(OUTPUT),SYSUT4R,(OUTPUT))\n         SPACE\n*---------------------------------------------------------------------*\n*        HAVE TMS REPORT NOW, SO READ IN LISTING AND GET VOLUME       *\n*        SERIAL NUMBERS TO BUILD THE EJECT CARDS FOR CAP(000).        *\n*---------------------------------------------------------------------*\n         SPACE\n         LA     R9,SYSUT20         GET ADDR OF INPUT DCB\n         BAL    R10,PROCESS        DO FIRST PASS FOR ACS0\n         CLOSE (SYSUT1T)           CLOSE AFTER 1ST PASS\n         SPACE\n*---------------------------------------------------------------------*\n*        HAVE TMS REPORT NOW, SO READ IN LISTING AND GET VOLUME       *\n*        SERIAL NUMBERS TO BUILD THE EJECT CARDS FOR CAP(001).        *\n*---------------------------------------------------------------------*\n         SPACE\n         OPEN  (SYSUT1T)           OPEN FILE FOR SECOND PASS\n         LA    R9,SYSUT21         GET ADDR OF INPUT DCB\n         BAL   R10,PROCESS         DO SECOND PASS FOR ACS1\n         CLOSE (SYSUT1T)           CLOSE AFTER 2ND PASS          JDM1\n         SPACE 1                                                 JDM1\n*----------------------------------------------------------------JDM1-*\n*        HAVE TMS REPORT NOW, SO READ IN LISTING AND GET VOLUME  JDM1 *\n*        SERIAL NUMBERS TO BUILD THE EJECT CARDS FOR CAP(002).   JDM1 *\n*----------------------------------------------------------------JDM1-*\n         SPACE 1                                                 JDM1\n         OPEN  (SYSUT1T)           OPEN FILE FOR THIRD  PASS     JDM1\n         LA    R9,SYSUT22          GET ADDR OF INPUT DCB         JDM1\n         BAL   R10,PROCESS         DO THIRD  PASS FOR ACS2       JDM1\n         CLOSE (SYSUT1T)           CLOSE AFTER 3RD PASS          JDM1\n         SPACE 1                                                 JDM1\n*----------------------------------------------------------------JDM1-*\n*        HAVE TMS REPORT NOW, SO READ IN LISTING AND GET VOLUME  JDM1 *\n*        SERIAL NUMBERS TO BUILD THE EJECT CARDS FOR CAP(003).   JDM1 *\n*----------------------------------------------------------------JDM1-*\n         SPACE 1                                                 JDM1\n         OPEN  (SYSUT1T)           OPEN FILE FOR FOURTH PASS     JDM1\n         LA    R9,SYSUT23          GET ADDR OF INPUT DCB         JDM1\n         BAL   R10,PROCESS         DO FOURTH PASS FOR ACS3       JDM1\n         CLOSE (SYSUT1T)           CLOSE AFTER 4TH PASS          JDM1\n         SPACE 1                                                 JDM1\n*----------------------------------------------------------------JDM1-*\n*        HAVE TMS REPORT NOW, SO READ IN LISTING AND GET VOLUME  JDM1 *\n*        SERIAL NUMBERS TO BUILD THE EJECT CARDS FOR CAP(004).   JDM1 *\n*----------------------------------------------------------------JDM1-*\n         SPACE 1                                                 JDM1\n         OPEN  (SYSUT1T)           OPEN FILE FOR FOURTH PASS     JDM1\n         LA    R9,SYSUT24          GET ADDR OF INPUT DCB         JDM1\n         BAL   R10,PROCESS         DO FIFTH  PASS FOR ACS4       JDM1\n         CLOSE (SYSUT1T)           CLOSE AFTER 5TH PASS          JDM1\n         SPACE 1                                                 JDM1\n         CLOSE (SYSUT20,,SYSUT21,,SYSUT22,,SYSUT23,,             JDM1  X\n               SYSUT3E,,SYSUT4R)                                 JDM1\nENDIT    EQU   *\n         L     R13,SAVE+4\n         RETURN (14,12),RC=0\n         SPACE\n*---------------------------------------------------------------------*\n*        PROCESS SUBROUTINE.                                          *\n*---------------------------------------------------------------------*\n         SPACE\nPROCESS  EQU   *\n         LA    R11,21              NUMBER OF ENTRIES PER TRANSACTION\nLOOP0    EQU   *\n         MODE  AMODE=24\n         GET   SYSUT1T,TMSOREC\n         SPACE\n         GET   (R9),STKREC\n         MODE  AMODE=31\n         SPACE\nLOOP01   EQU   *\n         CLC   TMSVOL(6),STKVOL    COMPARE VOLSERS\n         BE    LOOPWR\n         CLC   TMSVOL(6),STKVOL    COMPARE VOLSERS\n         BL    RDTMS\nRDSTK    EQU   *\n         MODE  AMODE=24\n         GET   (R9),STKREC\n         MODE  AMODE=31\n         B     LOOP01\n         SPACE\nRDTMS    EQU   *\n         MODE  AMODE=24\n         GET   SYSUT1T,TMSOREC\n         MODE  AMODE=31\n         B     LOOP01\n         SPACE\n*---------------------------------------------------------------------*\n*        THIS IS WHERE WE WRITE THE EJECT CARD.                       *\n*---------------------------------------------------------------------*\n         SPACE\nLOOPWR   EQU   *\n         C     R11,=F'21'          IS IT FIRST\n         BE    WR1ST               WRITE THE FIRST\n         C     R11,=F'1'           TIME TO CLOSE OUT ?\n         BE    WRLAST\n         SPACE\n*---------------------------------------------------------------------*\n*        THE WRITES THE MIDDLE SEGEMENT OF THE EJECT CARD.            *\n*---------------------------------------------------------------------*\n         SPACE\n         MVC   STKVOLC(6),TMSVOL   MOVE IN VOLSER\n         MODE  AMODE=24\n         PUT   SYSUT3E,STKERECC    WRITE THE MIDDLE EJECT RECORD\n         MODE  AMODE=31\n         S     R11,=F'1'           SUB ONE FOR WRITE\n         SPACE\n         CLI   PRTSW,C'N'          DO WE PRINT THE RECORD ?\n         BE    LOOP0\n         MODE  AMODE=24\n         PUT   SYSUT4R,STKERECC    MIRROR THE EJECT RECORD\n         MODE  AMODE=31\n         B     LOOP0\n         SPACE\n*---------------------------------------------------------------------*\n*        THE WRITES THE FIRST  SEGEMENT OF THE EJECT CARD.            *\n*---------------------------------------------------------------------*\n         SPACE\nWR1ST    EQU   *\n         MVC   STKVOLF(6),TMSVOL   MOVE IN VOLSER\n         MODE  AMODE=24\n         PUT   SYSUT3E,STKERECF    MIRROR THE EJECT RECORD\n         MODE  AMODE=31\n         S     R11,=F'1'           SUB ONE FOR WRITE\n         SPACE\n         CLI   PRTSW,C'N'          DO WE PRINT THE RECORD ?\n         BE    LOOP0\n         MODE  AMODE=24\n         PUT   SYSUT4R,STKERECF    MIRROR THE EJECT RECORD\n         MODE  AMODE=31\n         B     LOOP0\nWRLAST   EQU   *\n         MVC   STKVOLL(6),TMSVOL   MOVE IN VOLSER\n         MVC   STKCAPL(3),STKADDR  SET TO PROCESS THIS CAP\n         MODE  AMODE=24\n         PUT   SYSUT3E,STKERECL    MIRROR THE EJECT RECORD\n         MODE  AMODE=31\n         LA    R11,21              SETUP FOR NEXT TIME\n         SPACE\n         CLI   PRTSW,C'N'          DO WE PRINT THE RECORD ?\n         BE    LOOP0\n         MODE  AMODE=24\n         PUT   SYSUT4R,STKERECL    MIRROR THE EJECT RECORD\n         MODE  AMODE=31\n         B     LOOP0\n         SPACE\nEOJ0     EQU   *\n         C     R11,=F'21'          DID WE DO ALL ?\n         BE    LOOPEND\n         MVC   STKVOLL(6),=C'IGNORE'  SET A BOGUS VOLSER\n         MVC   STKCAPL(3),STKADDR  SET TO PROCESS THIS CAP\n         MODE  AMODE=24\n         PUT   SYSUT3E,STKERECL    MIRROR THE EJECT RECORD\n         MODE  AMODE=31\n         SPACE\n         CLI   PRTSW,C'N'          DO WE PRINT THE RECORD ?\n         BE    LOOPEND\n         MODE  AMODE=24\n         PUT   SYSUT4R,STKERECL    MIRROR THE EJECT RECORD\n         MODE  AMODE=31\n         SPACE\nLOOPEND  EQU   *\n         BR    R10                 RETURN\n         SPACE\nSYSUT1T  DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT1T,EODAD=EOJ0\n         SPACE\nSYSUT20  DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT20,EODAD=EOJ0\n         SPACE\nSYSUT21  DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT21,EODAD=EOJ0\n         SPACE\nSYSUT22  DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT22,EODAD=EOJ0       JDM1\n         SPACE 1                                                 JDM1\nSYSUT23  DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT23,EODAD=EOJ0       JDM1\n         SPACE 1                                                 JDM1\nSYSUT24  DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT24,EODAD=EOJ0       JDM1\n         SPACE 1                                                 JDM1\nSYSUT3E  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT3E,RECFM=FB,LRECL=80,     X\n               BLKSIZE=80\n         SPACE\nSYSUT4R  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT4R,RECFM=FB,LRECL=80,     X\n               BLKSIZE=80\n         SPACE\n*---------------------------------------------------------------------*\n*        DATA AREA FOLLOWS.                                           *\n*---------------------------------------------------------------------*\n         SPACE\n         LTORG\nSAVE     DC    18F'0'\nBLANKS   DC    CL6' '\nPRTSW    DC    C' '                DO WE MIRROR EJECT CARDS?\n         SPACE\n* --------------------------------------------------------- *\n*        FORMAT OF TMS EDITTED RECORD                       *\n* --------------------------------------------------------- *\n         SPACE\nTMSOREC  DS    0CL133\n         DC    CL03' '\nTMSVOL   DC    CL06'XXXXXX'        04 - VOLSER\n         DC    CL03' '\nCDATE    DC    CL05'XXXXX'         13 - JULIAN CREATION DATE\n         DC    CL03' '\nEXPDT    DC    CL05'XXXXX'         20 - JULIAN EXPDT\n         DC    CL03' '\nCJOBN    DC    CL08'XXXXX'         29 - CREATING JOBNAME\n         DC    CL03' '\nVAULT    DC    CL04'XXXXX'         40 - VAULT NAME\n         DC    CL06' '\nDEN      DC    CL02'XX'            50 - DENSITY CREATED\n         DC    CL04' '\nDSN      DC    CL44'     '         56 - DSN\n         DC    CL55' '             FILL OUT RECORD\n         SPACE\n* --------------------------------------------------------- *\n*        FORMAT OF STK EDITTED RECORD                       *\n* --------------------------------------------------------- *\n         SPACE\nSTKREC   DS    0CL121\n         DC    CL02' '\nSTKVOL   DC    CL06'XXXXXX'        03 - VOLSER\n         DC    CL08' '\nSTKADDR  DC    CL12'NNN:NN:NN:NN'       ADDRESS\nSTKREST  DC    CL93' '\n         SPACE\nSTKOREC  DS    0CL121\n         DC    CL02' '\nSTKSER   DC    CL06'XXXXXX'        03 - VOLSER\n         DC    CL08' '\nADDR     DC    CL12'NNN:NN:NN:NN'       ADDRESS\nREST     DC    CL93' '\n         SPACE\n* --------------------------------------------------------- *\n*        FORMAT OF 1ST EJECT CARD                           *\n* --------------------------------------------------------- *\n         SPACE\nSTKERECF DS    0CL80\n         DC    CL14' EJECT VOLSER('\nSTKVOLF  DC    CL06'XXXXXX'\n         DC    CL01','\n         DC    CL59'       +'\n         SPACE\n* --------------------------------------------------------- *\n*        FORMAT OF INTERMEDIATE EJECT CARD                  *\n* --------------------------------------------------------- *\n         SPACE\nSTKERECC DS    0CL80\n         DC    CL14'              '\nSTKVOLC  DC    CL06'XXXXXX'\n         DC    CL01','\n         DC    CL59'       +'\n         SPACE\n* --------------------------------------------------------- *\n*        FORMAT OF LAST EJECT CARD                          *\n* --------------------------------------------------------- *\n         SPACE\nSTKERECL DS    0CL80\n         DC    CL14'              '\nSTKVOLL  DC    CL06'XXXXXX'\n         DC    CL01')'\n         DC    CL05' CAP('\nSTKCAPL  DC    CL03'NNN'\n         DC    CL01')'\n         DC    CL50' '\n         SPACE\n         LTORG\n         SPACE\n         DCBD  DSORG=(QS)\n         SPACE\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STKEJCT@": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x01\\x9f\\x00\\x94\\x01\\x9f\\x12\"\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe2\\xf2\\xf1\\xf8@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-19T00:00:00", "modifydate": "1994-01-19T12:22:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "S218"}, "text": "//S218JDM$ JOB (S4405),'BIN014/MARSHALL',CLASS=A,\n//         MSGCLASS=S,MSGLEVEL=(1,1)\n/*NOTIFY   S218\n/*XEQ      N1\n//* -----------------------------------------------------------------*\n//*        INSTALL \"STKEJCT\"\n//* -----------------------------------------------------------------*\n//STKEJCT  EXEC ASMHCL,COND=(0,NE),\n//         PARM.C='LIST,OBJECT,NODECK,BATCH,TERM'\n//SYSTERM  DD SYSOUT=*\n//SYSIN    DD DISP=SHR,DSN=S218.UTIL.STK(STKEJCT)\n//L.SYSLMOD DD DISP=SHR,DSN=USER.LINKLIB,UNIT=,SPACE=,DCB=\n//SYSIN    DD *\n NAME STKEJCT(R)\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STKESTK": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x01\\x9f\\x00\\x94\\x01\\x9f\\x12\"\\x00\\xe2\\x00\\xe2\\x00\\x00\\xe2\\xf2\\xf1\\xf8@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-19T00:00:00", "modifydate": "1994-01-19T12:22:00", "lines": 226, "newlines": 226, "modlines": 0, "user": "S218"}, "text": "*---------------------------------------------------------------------*\n*                      S T K E S T K                                  *\n*                                                                     *\n*        THIS PROGRAM EDITS THE OUTPUT LISTING FROM STK AND PRODUCES  *\n*        A FLAT FILE OF THE INFORMATION.  PLEASE NOTE WE ARE NOT      *\n*        ALTERING THE RECORD COLUMNS OF THE VALUES.                   *\n*                                                                     *\n*        JIM MARSHALL, DEPT OF TREASURY/FMS                           *\n*                                                                     *\n*        //FORMSTK  EXEC PGM=STKESTK,PARM=PRINT                       *\n*        //STEPLIB  DD - PRIVATE LOADLIB -                            *\n*        //STKRPT   DD - INPUT STK VOLRPT REPORT -                    *\n*        //SYSUT20  DD - FLAT FILE OF ALL ACS0 TAPES -                *\n*        //SYSUT21  DD - FLAT FILE OF ALL ACS1 TAPES -                *\n*        //SYSUT22  DD - FLAT FILE OF ALL ACS2 TAPES -           JDM1 *\n*        //SYSUT23  DD - FLAT FILE OF ALL ACS3 TAPES -           JDM1 *\n*        //SYSUT24  DD - FLAT FILE OF ALL ACS4 TAPES -           JDM1 *\n*        //SYSUT3R  DD - OPTIONAL PRINTED REPORT OF FLAT FILES -      *\n*                                                                     *\n*        NOTES: ANY PARM WILL CAUSE BOTH FLAT FILES TO BE ALSO        *\n*               PRINTED.                                              *\n*               INPUT FILE COMES IN SORTED BY VOLSER.                 *\n*                                                                     *\n* CHNGE LOG: 13APR92 - JDM1 - ADDED SUPPORT FOR ACS2-4                *\n*                                                                     *\n*---------------------------------------------------------------------*\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE\n         MACRO\n&NAME    MODE   &AMODE=31\n.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n.*  SET ADDRESSING MODE.  EITHER 'MODE AMODE=31' OR 'MODE AMODE=24'  *\n.*                                                                   *\n.* NOTES: EXAMPLE - '    MODE AMODE=31  SET ADDREESSING MODE TO 31   *\n.*                  ' -MORE CODE -                                   *\n.*                  '    MODE AMODE=24  SET ADDREESSING MODE TO 24   *\n.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n         SPACE\n         LCLC   &I\n         GBLA   &B\n&I       SETC   '&SYSNDX'\n         AIF    (&AMODE EQ 31).MOD31\n&NAME    LA     15,RMOD&I\n         BSM    0,15\nRMOD&I   DS     0H\n         AGO    .MEND\n.MOD31   ANOP\n&NAME    L      15,AMOD&I\n         BSM    0,15\nAMOD&I   DC     A(CON&I+X'80000000')\nCON&I    DS     0H\n.MEND    MEND\n         SPACE\nSTKESTK  AMODE 31\nSTKESTK  RMODE 24\nSTKESTK  CSECT\n         SAVE (14,12),,STKESTK_&SYSDATE._&SYSTIME\n         LR   R12,R15\n         USING STKESTK,R12\n         LA    R9,SAVE\n         ST    R13,SAVE+4\n         ST    R9,8(R13)\n         LR    R13,R9\n         SPACE\n         MVI   PRTSW,C'N'          INIT TO NO\n         L     R2,0(,R1)\n         LH    R1,0(,R2)           DID WE PASS A PARM\n         LTR   R1,R1\n         BZ    TALLYHO\n         MVI   PRTSW,C'Y'          MIRROR THE IMAGE\n         SPACE\n*---------------------------------------------------------------------*\n*        HAVE TMS REPORT NOW, SO READ IN LISTING EDIT OUT HEADINGS,   *\n*        ETC, ETC\n*---------------------------------------------------------------------*\n         SPACE\nTALLYHO  EQU   *\n         OPEN  (STKRPT,INPUT,SYSUT20,(OUTPUT),SYSUT21,(OUTPUT),        X\n               SYSUT22,(OUTPUT),SYSUT23,(OUTPUT),                JDM1  X\n               SYSUT24,(OUTPUT),                                 JDM1  X\n               SYSUT3R,(OUTPUT))\n         LA    R9,0                KEEP A TALLY OF STK RECORDS\nLOOP2    EQU   *\n         MODE  AMODE=24\n         GET   STKRPT,STKREC\n         MODE  AMODE=31\n         CLC   STKVOL(1),=C'1'     ARE WE IN BALL PARK ?\n         BNE   LOOP2\n         LA    R5,6                CHECK 6 NUMBERS (TAPES=5)\n         LA    R6,STKVOL           GET VOLSER\nLOOP3    EQU   *\n         TM    0(R6),X'F0'         IS IT NUMBERIC\n         BNO   LOOP2\n         LA    R6,1(,R6)           BUMP POINTER\n         BCT   R5,LOOP3            CONTINUE CHECKING\n         SPACE\n         MVC   VOLSER(6),STKVOL    MOVE IN VOLUME SERIAL\n         MVC   ADDR(12),STKADDR    MOVE IN ADDR OF RECORD\n         MVC   REST(93),STKREST    MOVE IN REST OF RECORD\n         CLC   STKADDR(3),CAP0     DO WE USE 1ST CAP    ?\n         BE    PUT20\n         CLC   STKADDR(3),CAP1     DO WE USE 2ND CAP    ?\n         BE    PUT21\n         CLC   STKADDR(3),CAP2     DO WE USE 3RD CAP    ?        JDM1\n         BE    PUT22                                             JDM1\n         CLC   STKADDR(3),CAP3     DO WE USE 4TH CAP    ?        JDM1\n         BE    PUT23                                             JDM1\n         CLC   STKADDR(3),CAP4     DO WE USE 5TH CAP    ?        JDM1\n         BE    PUT24                                             JDM1\n         B     ABORT103\n         SPACE\nPUT20    EQU   *\n         MODE  AMODE=24\n         PUT   SYSUT20,STKOREC     WRITE THE EJECT RECORD\n         MODE  AMODE=31\n         B     CONT3\nPUT21    EQU   *\n         MODE  AMODE=24\n         PUT   SYSUT21,STKOREC     WRITE THE EJECT RECORD\n         MODE  AMODE=31\n         B     CONT3\nPUT22    EQU   *                                                 JDM1\n         MODE  AMODE=24                                          JDM1\n         PUT   SYSUT22,STKOREC     WRITE THE EJECT RECORD        JDM1\n         MODE  AMODE=31                                          JDM1\n         B     CONT3                                             JDM1\nPUT23    EQU   *                                                 JDM1\n         MODE  AMODE=24                                          JDM1\n         PUT   SYSUT23,STKOREC     WRITE THE EJECT RECORD        JDM1\n         MODE  AMODE=31                                          JDM1\n         B     CONT3                                             JDM1\nPUT24    EQU   *                                                 JDM1\n         MODE  AMODE=24                                          JDM1\n         PUT   SYSUT24,STKOREC     WRITE THE EJECT RECORD        JDM1\n         MODE  AMODE=31                                          JDM1\n         B     CONT3                                             JDM1\nCONT3    EQU   *\n         LA    R9,1(,R9)           KEEP TALLY\n         CLI   PRTSW,C'N'          DO WE ALSO PRINT IT\n         BE    LOOP2\n         MODE  AMODE=24\n         PUT   SYSUT3R,STKOREC     MIRROR THE RECORD\n         MODE  AMODE=31\n         B     LOOP2\nEOJ2     CLOSE (STKRPT,,SYSUT20,,SYSUT21,,SYSUT3R,,              JDM1  X\n               SYSUT22,,SYSUT23,,SYSUT24)\n         LTR   R9,R9               DID WE GET ANY RECORDS ??\n         BNZ   ENDIT\n         LA    R15,12              BAD RETURN CODE\n         ST    R15,RETCODE         SAVE IT\nENDIT    EQU   *\n         L     R15,RETCODE         LOAD IT\n         L     R13,SAVE+4\n         ST    R15,16(,R13)        SET THE RET CODE\n         LM    R14,R12,12(R13)\n         BR    R14                 RETURN TO WHENCE WE CAME\n         SPACE\nSTKRPT   DCB   DSORG=PS,MACRF=GM,DDNAME=STKRPT,EODAD=EOJ2\n         SPACE\nSYSUT20  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT20,RECFM=FBA,LRECL=133,   X\n               BLKSIZE=3990\n         SPACE\nSYSUT21  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT21,RECFM=FBA,LRECL=133,   X\n               BLKSIZE=3990\n         SPACE\nSYSUT22  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT22,RECFM=FBA,       JDM1  X\n               LRECL=133,BLKSIZE=3990                            JDM1\n         SPACE 1                                                 JDM1\nSYSUT23  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT23,RECFM=FBA,       JDM1  X\n               LRECL=133,BLKSIZE=3990                            JDM1\n         SPACE 1                                                 JDM1\nSYSUT24  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT24,RECFM=FBA,       JDM1  X\n               LRECL=133,BLKSIZE=3990                            JDM1\n         SPACE 1                                                 JDM1\nSYSUT3R  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT3R,RECFM=FBA,LRECL=133,   X\n               BLKSIZE=133\n         SPACE\nABORT103 ABEND 103\nABORT104 ABEND 104\n         SPACE\n*---------------------------------------------------------------------*\n*        DATA AREA FOLLOWS.                                           *\n*---------------------------------------------------------------------*\n         SPACE\n         LTORG\nSAVE     DC    18F'0'\nRETCODE  DC    F'0'                RETURN CODE\nPRTSW    DC    C'N'\nCAP0     DC    CL3'000'\nCAP1     DC    CL3'001'\nCAP2     DC    CL3'002'                                          JDM1\nCAP3     DC    CL3'003'                                          JDM1\nCAP4     DC    CL3'004'                                          JDM1\nBLANKS   DC    CL6' '\n         SPACE\nSTKREC   DS    0CL121\n         DC    CL02' '\nSTKVOL   DC    CL06'XXXXXX'        03 - VOLSER\n         DC    CL08' '\nSTKADDR  DC    CL12'NNN:NN:NN:NN'       ADDRESS\nSTKREST  DC    CL93' '\n         SPACE\nSTKOREC  DS    0CL121\n         DC    CL02' '\nVOLSER   DC    CL06'XXXXXX'        03 - VOLSER\n         DC    CL08' '\nADDR     DC    CL12'NNN:NN:NN:NN'       ADDRESS\nREST     DC    CL93' '\n         SPACE\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STKESTK@": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x01\\x9f\\x00\\x94\\x01\\x9f\\x12\"\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe2\\xf2\\xf1\\xf8@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-19T00:00:00", "modifydate": "1994-01-19T12:22:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "S218"}, "text": "//S218JDM$ JOB (S4405),'BIN014/MARSHALL',CLASS=A,\n//         MSGCLASS=S,MSGLEVEL=(1,1)\n/*NOTIFY   S218\n/*XEQ      N2\n//* -----------------------------------------------------------------*\n//*        INSTALL \"STKESTK\"\n//* -----------------------------------------------------------------*\n//STKESTK  EXEC ASMHCL,COND=(0,NE),\n//         PARM.C='NOLIST,OBJECT,NODECK,BATCH,TERM'\n//SYSTERM  DD SYSOUT=*\n//SYSIN    DD DISP=SHR,DSN=S218.UTIL.STK(STKESTK)\n//L.SYSLMOD DD DISP=SHR,DSN=USER.LINKLIB,UNIT=,SPACE=,DCB=\n//SYSIN    DD *\n NAME STKESTK(R)\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STKETMS": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x01\\x9f\\x00\\x94\\x01\\x9f\\x12\"\\x00\\xc4\\x00\\xc4\\x00\\x00\\xe2\\xf2\\xf1\\xf8@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-19T00:00:00", "modifydate": "1994-01-19T12:22:00", "lines": 196, "newlines": 196, "modlines": 0, "user": "S218"}, "text": "*---------------------------------------------------------------------*\n*                      S T K E T M S                                  *\n*                                                                     *\n*                                                                     *\n*        THIS PROGRAM EDITS THE OUTPUT LISTING FROM TMS AND PRODUCES  *\n*        A FLAT FILE OF THE INFORMATION.  PLEASE NOTE WE ARE NOT      *\n*        ALTERING THE RECORD COLUMNS OF THE VALUES.                   *\n*                                                                     *\n*                                                                     *\n*        JIM MARSHALL, DEPT OF TREASURY/FMS                           *\n*                                                                     *\n*        //FORMTMS  EXEC PGM=STKETMS,PARM=PRINT                       *\n*        //STEPLIB  DD - PRIVATE LOADLIB -                            *\n*        //TMSRPT   DD - INPUT TMS VOLSER REPORT -                    *\n*        //SYSUT2   DD - FLAT FILE OF SELECTED TMS TAPES -            *\n*        //SYSUT3   DD - OPTIONAL PRINTED REPORT OF FLAT FILE -       *\n*                                                                     *\n*        NOTES: ANY PARM WILL CAUSE BOTH FLAT FILES TO BE ALSO        *\n*               PRINTED.                                              *\n*               INPUT FILE COMES IN SORTED BY VOLSER.                 *\n*               IF OUTPUT FILE IS EMPTY, RETURN WITH RC=12            *\n*                                                                     *\n*---------------------------------------------------------------------*\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE\n         MACRO\n&NAME    MODE   &AMODE=31\n.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n.*  SET ADDRESSING MODE.  EITHER 'MODE AMODE=31' OR 'MODE AMODE=24'  *\n.*                                                                   *\n.* NOTES: EXAMPLE - '    MODE AMODE=31  SET ADDREESSING MODE TO 31   *\n.*                  ' -MORE CODE -                                   *\n.*                  '    MODE AMODE=24  SET ADDREESSING MODE TO 24   *\n.*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n         SPACE\n         LCLC   &I\n         GBLA   &B\n&I       SETC   '&SYSNDX'\n         AIF    (&AMODE EQ 31).MOD31\n&NAME    LA     15,RMOD&I\n         BSM    0,15\nRMOD&I   DS     0H\n         AGO    .MEND\n.MOD31   ANOP\n&NAME    L      15,AMOD&I\n         BSM    0,15\nAMOD&I   DC     A(CON&I+X'80000000')\nCON&I    DS     0H\n.MEND    MEND\n         SPACE\nSTKETMS  AMODE 31\nSTKETMS  RMODE 24\nSTKETMS  CSECT\n         SAVE (14,12),,STKETMS_&SYSDATE._&SYSTIME\n         LR   R12,R15\n         USING STKETMS,R12\n         LA    R9,SAVE\n         ST    R13,SAVE+4\n         ST    R9,8(R13)\n         LR    R13,R9\n         SPACE\n         MVI   PRTSW,C'N'          INIT TO NO\n         L     R2,0(,R1)\n         LH    R1,0(,R2)\n         LTR   R1,R1               DID WE PASS A PARM\n         BZ    TALLYHO\n         MVI   PRTSW,C'Y'          MIRROR THE IMAGE\n         SPACE\n*---------------------------------------------------------------------*\n*        HAVE TMS REPORT NOW, SO READ IN LISTING EDIT OUT HEADINGS,   *\n*        ETC, ETC\n*---------------------------------------------------------------------*\n         SPACE\nTALLYHO  EQU   *\n         OPEN  (TMSRPT,INPUT,SYSUT2,(OUTPUT),SYSUT3,(OUTPUT))\n         LA    R9,0                KEEP A TALLY OF STK RECORDS\nLOOP2    EQU   *\n         MODE  AMODE=24\n         GET   TMSRPT,TMSREC\n         MODE  AMODE=31\n         LA    R5,6                CHECK 5 NUMBERS (CARTS=6)\n         LA    R6,TMSVOL           GET VOLSER\nLOOP3    EQU   *\n         TM    0(R6),X'F0'         IS IT NUMBERIC\n         BNO   LOOP2\n         LA    R6,1(,R6)           BUMP POINTER\n         BCT   R5,LOOP3            CONTINUE CHECKING\n         SPACE\n         CLC   TMSDEN(2),CARTDEN   DO FURTHER CHECK\n         BE    CONT3A\n         CLC   TMSDEN(2),CARTDEND  DO FURTHER CHECK\n         BE    CONT3A\n         B     LOOP2\n         SPACE\nCONT3A   EQU   *\n         MVC   VOLSER(6),TMSVOL    MOVE IN VOLUME SERIAL\n         MVC   CDATE(5),TMSCDATE   MOVE IN CDATE\n         MVC   EXPDT(5),TMSEXPDT   MOVE IN EXPDT\n         MVC   CJOBN(8),TMSCJOBN   MOVE IN CREATING JOBNAME\n         MVC   VAULT(4),TMSVAULT   MOVE IN VAULT NAME\n         MVC   DEN(2),TMSDEN       MOVE IN DENSITY\n         MVC   DSN(44),TMSDSN      MOVE IN DSNAME\n         MODE  AMODE=24\n         PUT   SYSUT2,TMSOREC      WRITE THE EJECT RECORD\n         CLI   PRTSW,C'N'          DO WE ALSO PRINT IT\n         BE    CONT3\n         PUT   SYSUT3,TMSOREC      MIRROR THE RECORD\nCONT3    EQU   *\n         MODE  AMODE=31\n         LA    R9,1(,R9)           KEEP TALLY\n         B     LOOP2\nEOJ2     CLOSE (TMSRPT,,SYSUT2,,SYSUT3)\n         LTR   R9,R9               DID WE GET ANY RECORDS ??\n         BNZ   ENDIT\n         LA    R15,12              GET A 12\n         ST    R15,RETCODE         STORE IT IN RETURN CODE VARIABLE\nENDIT    EQU   *\n         L     R15,RETCODE\n         L     R13,SAVE+4\n         ST    R15,16(,R13)        PUT IN RETURN CODE\n         LM    R14,R12,12(R13)     RESTORE THE REGS\n         BR    R14\n         SPACE\nTMSRPT   DCB   DSORG=PS,MACRF=GM,DDNAME=TMSRPT,EODAD=EOJ2\n         SPACE\nSYSUT2   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT2,RECFM=FBA,LRECL=133,    X\n               BLKSIZE=3990\n         SPACE\nSYSUT3   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT3,RECFM=FBA,LRECL=133,    X\n               BLKSIZE=133\n         SPACE\n*---------------------------------------------------------------------*\n*        DATA AREA FOLLOWS.                                           *\n*---------------------------------------------------------------------*\n         SPACE\n         LTORG\n         SPACE\nSAVE     DC    18F'0'\nRETCODE  DC    F'0'                RETURN CODE\nPRTSW    DC    C'N'\nCARTDEN  DC    CL02'E3'            DENSITY OF 3480S\nCARTDEND DC    CL02'E7'            DENSITY OF 3480 WITH COMP\nTAPEDEN  DC    CL02'D3'            DENSITY OF 3420S TESTING !!!\nBLANKS   DC    CL6' '\n         SPACE\nTMSREC   DS    0CL133\n         DC    CL03' '\nTMSVOL   DC    CL06'XXXXXX'        04 - VOLSER\n         DC    CL03' '\nTMSCDATE DC    CL05'XXXXX'         13 - JULIAN CREATION DATE\n         DC    CL03' '\nTMSEXPDT DC    CL05'XXXXX'         20 - JULIAN EXPDT\n         DC    CL03' '\nTMSCJOBN DC    CL08'XXXXX'         29 - CREATING JOBNAME\n         DC    CL03' '\nTMSVAULT DC    CL04'XXXXX'         40 - VAULT NAME\n         DC    CL06' '\nTMSDEN   DC    CL02'XX'            50 - DENSITY CREATED\n         DC    CL04' '\nTMSDSN   DC    CL44'     '         56 - JULIAN CREATION DATE\n         DC    CL55' '             FILL OUT RECORD\n         SPACE\nTMSOREC  DS    0CL133\n         DC    CL03' '\nVOLSER   DC    CL06'XXXXXX'        04 - VOLSER\n         DC    CL03' '\nCDATE    DC    CL05'XXXXX'         13 - JULIAN CREATION DATE\n         DC    CL03' '\nEXPDT    DC    CL05'XXXXX'         20 - JULIAN EXPDT\n         DC    CL03' '\nCJOBN    DC    CL08'XXXXX'         29 - CREATING JOBNAME\n         DC    CL03' '\nVAULT    DC    CL04'XXXXX'         40 - VAULT NAME\n         DC    CL06' '\nDEN      DC    CL02'XX'            50 - DENSITY CREATED\n         DC    CL04' '\nDSN      DC    CL44'     '         56 - DSN\n         DC    CL55' '             FILL OUT RECORD\n         SPACE\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STKETMS@": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x01\\x9f\\x00\\x94\\x01\\x9f\\x12\"\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe2\\xf2\\xf1\\xf8@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-19T00:00:00", "modifydate": "1994-01-19T12:22:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "S218"}, "text": "//S218JDM$ JOB (S4405),'BIN014/MARSHALL',CLASS=A,\n//         MSGCLASS=S,MSGLEVEL=(1,1)\n/*NOTIFY   S218\n/*XEQ      N1\n//* -----------------------------------------------------------------*\n//*        INSTALL \"STKETMS\"\n//* -----------------------------------------------------------------*\n//STKETMS  EXEC ASMHCL,COND=(0,NE),\n//         PARM.C='NOLIST,OBJECT,NODECK,BATCH,TERM'\n//SYSTERM  DD SYSOUT=*\n//SYSIN    DD DISP=SHR,DSN=S218.UTIL.STK(STKETMS)\n//L.SYSLMOD DD DISP=SHR,DSN=USER.LINKLIB,UNIT=,SPACE=,DCB=\n//SYSIN    DD *\n NAME STKETMS(R)\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TMSEJECT": {"ttr": 786, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94\\x01\\x9f\\x00\\x94\\x01\\x9f\\x129\\x00\\x81\\x00\\x81\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-01-19T00:00:00", "modifydate": "1994-01-19T12:39:00", "lines": 129, "newlines": 129, "modlines": 0, "user": "SBGCSC"}, "text": "//SSMWACSE JOB (S4405TAP,SYST,10,99),'TAPE LIBRARY',\n//         TIME=5,\n//         MSGCLASS=E,MSGLEVEL=(1,1)\n/*ROUTE    PRINT N2\n/*JOBPARM  L=10,BYTES=99999,TIME=480\n//* **************************************************************** *\n//*        LOCATION: USER.PROCLIB(TMSEJECT)\n//*\n//*        THIS JOB IS USED TO EJECT CARTRIDGES DESTINED FOR OFFSITE\n//*        STORAGE.\n//*\n//* **************************************************************** *\n//*\n//* ---------------------------------------------------------------- *\n//*        ASK THE OPERATOR IF THIS IS THE TIME TO START THE         *\n//*        PROCESS.  IF NOT, THEN PGM WILL RETURN RC=8               *\n//*                                   JIM MARSHALL                   *\n//* ---------------------------------------------------------------- *\n//*\n//S0ASK    EXEC PGM=ASKOPER,            <=== SEE FILE 316 OF CBT TAPE\n//   PARM=',,TSB010A VAULT EJECT BEGINNING - DO WE PROCEED; YES OR NO'\n//STEPLIB  DD DSN=USER.LINKLIB,DISP=SHR\n//*\n//* ---------------------------------------------------------------- *\n//*        THIS PROGRAM GETS THE SYSTEM DATE AND GENERATES           *\n//*        TMS GRW CODE TO GET A LIST OF THE 'OFF1' TAPES.           *\n//*        NOTE: SOURCE IS IN 'S218.UTIL.STK(STKEDTE)'               *\n//* ---------------------------------------------------------------- *\n//*\n//S1PGM    EXEC PGM=STKEDTE,REGION=4M,TIME=2,COND=(0,NE)\n//STEPLIB  DD DSN=USER.LINKLIB,DISP=SHR\n//SYSUT2   DD DSN=&&TMSGRW,UNIT=VIO,DISP=(NEW,PASS),\n//            SPACE=(CYL,(2,2),RLSE)\n//*\n//* ---------------------------------------------------------------- *\n//*        RUN THE PROGRAM                                           *\n//* ---------------------------------------------------------------- *\n//*\n//S2LISTT  EXEC PGM=TMSGRW,REGION=2M,TIME=5,COND=(0,NE)\n//TMC      DD DISP=SHR,DSN=UCC1.TMC\n//TMSRPT   DD DISP=(NEW,PASS,DELETE),SPACE=(CYL,(5,5),RLSE),\n//            UNIT=VIO,DSN=&&TMSRPT\n//OUTPUT   DD DUMMY\n//SYSOUT   DD DUMMY\n//SORTLIB  DD DSN=SYS1.SORTLIB,DISP=SHR\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(2))\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(2))\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(2))\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(2))\n//SORTWK05 DD UNIT=SYSDA,SPACE=(CYL,(2))\n//SORTWK06 DD UNIT=SYSDA,SPACE=(CYL,(2))\n//SYSIN    DD DSN=&&TMSGRW,DISP=(OLD,DELETE)\n//*\n//* ---------------------------------------------------------------- *\n//*        PRODUCE A REPORT ON ALL ACS CARTRIDGES                    *\n//*        EXPECT A RC=4 FROM THIS STEP                              *\n//* ---------------------------------------------------------------- *\n//*\n//S3LISTS  EXEC PGM=SLUADMIN,REGION=4M,TIME=10,PARM='NOHDR,MIXED'\n//SLSPRINT DD DSN=&&ACSIN,UNIT=VIO,DCB=BLKSIZE=12100,\n//            DISP=(NEW,PASS,DELETE),SPACE=(TRK,(50,50),RLSE)\n//SLSOUT   DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,10)\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,10)\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,10)\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,10)\n//SLSIN    DD *\n           VOLRPT\n/*\n//*\n//* ---------------------------------------------------------------- *\n//*        FORMAT ONLY THE ACS RECORDS OF INTEREST.                  *\n//*        NOTE: SOURCE IS IN 'S218.UTIL.STK(STKESTK)'               *\n//* ---------------------------------------------------------------- *\n//*\n//S4FACS   EXEC PGM=STKESTK,REGION=4M,TIME=2,COND=(4,LT)\n//STEPLIB  DD DSN=USER.LINKLIB,DISP=SHR\n//STKRPT   DD DSN=&&ACSIN,DISP=(OLD,DELETE)\n//SYSUT20  DD DSN=&&ACS00,UNIT=VIO,DISP=(NEW,PASS),\n//            SPACE=(CYL,(10,10),RLSE)\n//SYSUT21  DD DSN=&&ACS01,UNIT=VIO,DISP=(NEW,PASS),\n//            SPACE=(CYL,(10,10),RLSE)\n//SYSUT22  DD DSN=&&ACS02,UNIT=VIO,DISP=(NEW,PASS),\n//            SPACE=(CYL,(10,10),RLSE)\n//SYSUT23  DD DSN=&&ACS03,UNIT=VIO,DISP=(NEW,PASS),\n//            SPACE=(CYL,(10,10),RLSE)\n//SYSUT24  DD DSN=&&ACS04,UNIT=VIO,DISP=(NEW,PASS),\n//            SPACE=(CYL,(10,10),RLSE)\n//SYSUT3R  DD SYSOUT=*\n//*\n//* ---------------------------------------------------------------- *\n//*        FORMAT ONLY THE TMS RECORDS OF INTEREST                   *\n//*        NOTE: SOURCE IS IN 'S218.UTIL.STK(STKETMS)'               *\n//* ---------------------------------------------------------------- *\n//*\n//S5FTMS   EXEC PGM=STKETMS,REGION=4M,TIME=2,COND=(4,LT)\n//STEPLIB  DD DSN=USER.LINKLIB,DISP=SHR\n//TMSRPT   DD DSN=&&TMSRPT,DISP=(OLD,DELETE)\n//SYSUT2   DD DSN=&&TMSEDIT,UNIT=VIO,DISP=(NEW,PASS,DELETE),\n//            SPACE=(CYL,(20,5),RLSE)\n//SYSUT3   DD SYSOUT=*\n//*\n//* ---------------------------------------------------------------- *\n//*        COMPARE THE TWO FILES AND BUILD THE EJECT CARDS, THEY     *\n//*        ARE BUILT BY ACS WITH 21 CARTRIDGES PER REQUEST.          *\n//*        NOTE: SOURCE IS IN 'S218.UTIL.STK(STKEJCT)'               *\n//* ---------------------------------------------------------------- *\n//*\n//S6BUILD  EXEC PGM=STKEJCT,REGION=4M,TIME=2,COND=(4,LT)\n//STEPLIB  DD DSN=USER.LINKLIB,DISP=SHR\n//SYSUT1T  DD DISP=(OLD,DELETE),DSN=&&TMSEDIT\n//SYSUT20  DD DISP=(OLD,DELETE),DSN=&&ACS00\n//SYSUT21  DD DISP=(OLD,DELETE),DSN=&&ACS01\n//SYSUT22  DD DISP=(OLD,DELETE),DSN=&&ACS02\n//SYSUT23  DD DISP=(OLD,DELETE),DSN=&&ACS03\n//SYSUT24  DD DISP=(OLD,DELETE),DSN=&&ACS04\n//SYSUT3E  DD DSN=&&EJECT,UNIT=VIO,SPACE=(CYL,(10,5),RLSE),\n//            DISP=(NEW,PASS)\n//SYSUT4R  DD SYSOUT=*\n//*\n//*-----------------------------------------------------------------*\n//*        STK UTILITY USED TO EJECT CARTRIDGES\n//*-----------------------------------------------------------------*\n//*\n//S7EJECT  EXEC PGM=SLUADMIN,REGION=1M,TIME=3,PARM='MIXED',\n//         COND=(4,LT)\n//SLSPRINT DD SYSOUT=*\n//SLSIN    DD DSN=&&EJECT,DISP=(OLD,DELETE)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT203/FILE203.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT203", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}