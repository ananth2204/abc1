{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012241000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE516.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE516.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x02'", "DS1TRBAL": "b'\\xde\\x10'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xdb\\x00\\x0e\\x03\\xdc\\x00\\x03\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x16/\\x01\\x01\\x16/\\x13R\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-06-11T00:00:00", "modifydate": "2001-06-11T13:52:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 436    FILE:  516\n\n    ORIGINAL DSNAME:  WCBT.CBT436.FILE516\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    27920   PO\n\n   PDS117I 10 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,134 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   06/11/01    13:52:57    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE516": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x01\\x01\\x02_\\x01\\x01\\x15\\x1f\\x16Y\\x00F\\x00\\x02\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2001-05-31T16:59:00", "lines": 70, "newlines": 2, "modlines": 0, "user": "WSBG"}, "text": "//***FILE 516 is from Sam Golob and contains a program that is      *   FILE 516\n//*           useful if you have CA-1 Tape Management System (TMS). *   FILE 516\n//*           This program will call the CA-1 inquiry program       *   FILE 516\n//*           called CTSQSTS for a given VOLSER and will return     *   FILE 516\n//*           a code as follows (the way CTSQSTS is coded now):     *   FILE 516\n//*                                                                 *   FILE 516\n//*           Return Code      Interpretation                       *   FILE 516\n//*                                                                 *   FILE 516\n//*            0               Scratch Tape                         *   FILE 516\n//*            4               Tape is not full - can be mod'ed to  *   FILE 516\n//*            8               Tape is full - you can't mod to it   *   FILE 516\n//*           12               Tape is Out of Service, bad or DEL   *   FILE 516\n//*           16               Foreign Tape                         *   FILE 516\n//*           20               CA-1 is not active                   *   FILE 516\n//*                                                                 *   FILE 516\n//*           You run this program (called CBRTST) against a list   *   FILE 516\n//*           of VOLSERs in SYSIN, and the report tells you each    *   FILE 516\n//*           volume's status, as reported by CA's program CTSQSTS. *   FILE 516\n//*                                                                 *   FILE 516\n//*    >>>    This program provides a quick way of testing the      *   FILE 516\n//*    >>>    TMC status of a list of tape volumes.  Admittedly     *   FILE 516\n//*    >>>    TMSBINQ is more thorough, but this program provides   *   FILE 516\n//*    >>>    a really quick summary.  Under some circumstances,    *   FILE 516\n//*    >>>    it's more useful than TMSBINQ.                        *   FILE 516\n//*                                                                 *   FILE 516\n//*           You can even run this program against every volume    *   FILE 516\n//*           defined in your TMC.  Just copy the TMC to an FB-340  *   FILE 516\n//*           dataset, copy it again to an FB-80 dataset,           *   FILE 516\n//*           truncating the tails, and edit out the DSNB records   *   FILE 516\n//*           at the end.  The resulting file will contain volsers  *   FILE 516\n//*           in columns 1-6, and is suitable input for the CBRTST  *   FILE 516\n//*           program.                                              *   FILE 516\n//*                                                                 *   FILE 516\n//*    The following is sample program output (squeezed together):  *   FILE 516\n//*                                                                 *   FILE 516\n//*    CTSQSTS - RETURN CODE TEST PROGRAM          PAGE      1      *   FILE 516\n//*                                                                 *   FILE 516\n//*     INPUT VOLSER = M00000   RETCODE WAS  =  12  OUT OF SERVICE  *   FILE 516\n//*     INPUT VOLSER = M10000   RETCODE WAS  =   4  TAPE NOT FULL   *   FILE 516\n//*     INPUT VOLSER = M10001   RETCODE WAS  =   4  TAPE NOT FULL   *   FILE 516\n//*     INPUT VOLSER = M10002   RETCODE WAS  =   4  TAPE NOT FULL   *   FILE 516\n//*     INPUT VOLSER = M10003   RETCODE WAS  =   8  FULL TAPE       *   FILE 516\n//*     INPUT VOLSER = M10004   RETCODE WAS  =   4  TAPE NOT FULL   *   FILE 516\n//*     INPUT VOLSER = M10005   RETCODE WAS  =   4  TAPE NOT FULL   *   FILE 516\n//*     INPUT VOLSER = M10006   RETCODE WAS  =   0  SCRATCH TAPE    *   FILE 516\n//*     INPUT VOLSER = M10007   RETCODE WAS  =   8  FULL TAPE       *   FILE 516\n//*     INPUT VOLSER = M10008   RETCODE WAS  =   4  TAPE NOT FULL   *   FILE 516\n//*     INPUT VOLSER = M10009   RETCODE WAS  =   4  TAPE NOT FULL   *   FILE 516\n//*     INPUT VOLSER = M10010   RETCODE WAS  =   4  TAPE NOT FULL   *   FILE 516\n//*     INPUT VOLSER = M10011   RETCODE WAS  =   8  FULL TAPE       *   FILE 516\n//*     INPUT VOLSER = M10012   RETCODE WAS  =   8  FULL TAPE       *   FILE 516\n//*     INPUT VOLSER = M10013   RETCODE WAS  =   4  TAPE NOT FULL   *   FILE 516\n//*     INPUT VOLSER = M10014   RETCODE WAS  =   8  FULL TAPE       *   FILE 516\n//*     INPUT VOLSER = M10015   RETCODE WAS  =   8  FULL TAPE       *   FILE 516\n//*     INPUT VOLSER = CBT434   RETCODE WAS  =  16  FOREIGN TAPE    *   FILE 516\n//*     INPUT VOLSER = V00000   RETCODE WAS  =  16  FOREIGN TAPE    *   FILE 516\n//*     INPUT VOLSER = V00011   RETCODE WAS  =  16  FOREIGN TAPE    *   FILE 516\n//*     INPUT VOLSER = V00033   RETCODE WAS  =  16  FOREIGN TAPE    *   FILE 516\n//*                                                                 *   FILE 516\n//* --------------------------------------------------------------- *   FILE 516\n//*                                                                 *   FILE 516\n//*   The TMCVLIST program will read your TMC and produce a         *   FILE 516\n//*   volume list of all volumes defined in it.  The output of      *   FILE 516\n//*   this TMCVLIST program is suitable input to the CBRTST         *   FILE 516\n//*   program.  Member TMCVL001 is sample JCL to run TMCVLIST.      *   FILE 516\n//*                                                                 *   FILE 516\n//* --------------------------------------------------------------- *   FILE 516\n//*                                                                 *   FILE 516\n//*   Questions, contact Sam Golob:     sbgolob@attglobal.net       *   FILE 516\n//*                                                                 *   FILE 516\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASMLK": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x00\\x01\\x01\\x02\\x9f\\x01\\x01\\x13\\x7f\\x17\\x16\\x00\\x1c\\x00\\x1e\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2001-01-29T00:00:00", "modifydate": "2001-05-17T17:16:00", "lines": 28, "newlines": 30, "modlines": 0, "user": "WSBG"}, "text": "//WSBGM JOB (CCMVS),'HI FOLKS',\n// NOTIFY=&SYSUID,\n// CLASS=S,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//STEPLIB  DD DISP=SHR,DSN=WSBG.HLASMR3.LOAD\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=WSBG.CBT435.FILE516(CBRTST)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWLKED,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=WSBG.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=WSBG.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETSSI CB435516\n NAME    CBRTST(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBRTST": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x01\\x13\\x7f\\x01\\x01\\x15\\x0f\\x11\\x15\\x01\\x10\\x01\\x0c\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-05-17T00:00:00", "modifydate": "2001-05-30T11:15:00", "lines": 272, "newlines": 268, "modlines": 0, "user": "WSBG"}, "text": "*********************************************************************\n*                                                                   *\n*       CBRTEST    -   TEST CTSQSTS RETURN CODES FOR A VOLSER       *\n*       -------        --------------------------------------       *\n*                                                                   *\n*    AUTHOR:   SAM GOLOB                DATE:  MAY 25, 01           *\n*                                                                   *\n*    SAMPLE EXECUTION JCL:                                          *\n*                                                                   *\n*       //WSBGCBRT JOB ,'SAM GOLOB',CLASS=S,                        *\n*       //    MSGCLASS=X,NOTIFY=&SYSUID                             *\n*       //*                                                         *\n*       //TESTCALL EXEC PGM=CBRTST                                  *\n*       //STEPLIB  DD   DISP=SHR,DSN=WSBG.LOAD                      *\n*       //SYSPRINT DD   SYSOUT=*,DCB=RECFM=FBA                      *\n*       //SYSIN    DD   DISP=SHR,DSN=WSBG.EDIT.SPLIT.STATEMTS       *\n*                                                                   *\n*     OR SYSIN MIGHT LOOK LIKE THIS:                                *\n*                                                                   *\n*       //SYSIN    DD   *                                           *\n*       M10000                                                      *\n*       M10001                                                      *\n*       M10002                                                      *\n*       M10003                                                      *\n*       M10004                                                      *\n*       M10005                                                      *\n*       M10006                                                      *\n*       M10007                                                      *\n*       M10008                                                      *\n*       M10009                                                      *\n*       M10010                                                      *\n*       /*                                                          *\n*                                                                   *\n*                                                                   *\n*         THE SYSIN DATASET HAS TO BE FB-80 AND CONTAIN A           *\n*         VOLUME SERIAL IN COLUMNS 1-6.  ASTERISK '*' OR BLANK      *\n*         IN COLUMN1 IS REGARDED AS A COMMENT.                      *\n*                                                                   *\n*         YOU CAN MODIFY THE CODE AT LABEL \"COMMENT\" TO FILTER      *\n*         THE SYSIN INPUT THE WAY YOU WANT IT.                      *\n*                                                                   *\n*         I RAN THIS PROGRAM AGAINST ALL THE VOLUMES IN MY TMC.     *\n*         I COPIED THE TMC RECORDS INTO AN FB-80 DATASET,           *\n*         TRUNCATING THE ENDS.  THEN I EDITED OUT THE DSNB          *\n*         RECORDS, LEAVING RECORDS CONTAINING ONLY VOLUME           *\n*         SERIAL NUMBERS IN COLUMNS 1-6.  THAT FILE IS INPUT        *\n*         TO THE CBRTST PROGRAM.                                    *\n*                                                                   *\n*         IT IS ALSO EASY TO MODIFY THE RETURN CODE INTERPRETATION  *\n*         MESSAGES AT LABEL CODE0, ETC.                             *\n*                                                                   *\n*         AND LAST BUT NOT LEAST, YOU CAN CALL A DIFFERENT          *\n*         PROGRAM, IF YOU HAVE NEED TO.  JUST LOOK AT THE           *\n*         PROGRAM NAME LITERAL BEFORE THE LOAD MACRO.  AND          *\n*         YOU ALSO HAVE TO DO THE SAME THING AT THE DELLOAD LABEL.  *\n*         THE \"DELETE\" MACRO WILL ALSO PROBABLY HAVE TO BE REMOVED  *\n*         OR MODIFIED, IN THE DELLOAD SUBROUTINE.                   *\n*                                                                   *\n*         OF COURSE, THE INPUT FILE MAY HAVE TO BE HANDLED          *\n*         DIFFERENTLY TOO.  CURRENTLY IT IS A LIST OF VOLSERS.      *\n*         AND THE OTHER PROGRAM MAY HAVE A LONGER PARM LIST.        *\n*         BUT THIS PROGRAM IS STILL QUITE GENERAL.                  *\n*                                                                   *\n*********************************************************************\n*                                                                   *\n*  CHANGE LOG:                                                      *\n*                                                                   *\n*    05/25/01 - RUNNING THIS PROGRAM AGAINST THE OLDER VERSION OF   *\n*    (S.GOLOB)  CTSQSTS, WHICH DID A LOAD OF TMSSVC WITHOUT A       *\n*               DELETE, CAUSED A S906-08 ABEND AFTER 32767 INPUT    *\n*               VOLUME RECORDS WERE READ.  TMSSVC USE COUNT WAS     *\n*               RAISED TO 32767, AND COULD BE INCREASED NO MORE.    *\n*                                                                   *\n*               THIS PROGRAM NOW DOES A DELETE OF TMSSVC, EACH TIME *\n*               CTSQSTS IS CALLED, BECAUSE IT RUNS IN THE SAME TCB  *\n*               AS CTSQSTS, WHEN THE LATTER PROGRAM LOADS TMSSVC.   *\n*               THEREFORE OUR DELETE OF THE TMSSVC PROGRAM IS       *\n*               EFFECTIVE.  RUSSELL WITT (THE AUTHOR OF CTSQSTS)    *\n*               HAS TOLD ME THAT CTSQSTS (AT A LATER LEVEL) DOES    *\n*               THE DELETE OF TMSSVC, ITSELF.                       *\n*                                                                   *\n*               WE DISCOVERED THIS PROBLEM BY RUNNING CBRTST        *\n*               AGAINST ALL VOLUMES IN THE TMC.  WHEN WE ENLARGED   *\n*               OUR TMC (TO GREATER THAN 32767 VOLUMES), THIS       *\n*               PROBLEM \"REARED ITS UGLY HEAD\", AND HAD TO BE       *\n*               FIXED.                                              *\n*                                                                   *\n*********************************************************************\n         EJECT\nCBRTEST  CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'CBRTEST - TEST CTSQSTS RETURN CODES - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----                       SET UP ONE BASE REGISTER\n         USING CBRTEST,R12\n         LR    R12,R15\n         LR    R1,R5          RESTORE PARM POINTER\n         L     R1,0(R1)       GET PARM FROM JCL\n         OPEN  (SYSIN,INPUT)\n         OPEN  (SYSPRINT,OUTPUT)\n         ZAP   PAGECT,=P'0'\n         ZAP   ITEMCT,=P'0'\n         ZAP   LOADCT,=P'0'\n         BAL   R4,HEADING\n         LA    R0,=CL8'CTSQSTS '\n         LOAD  EPLOC=(0)\n         ST    R0,ENTRYPT\nGETLOOP  DS    0H\n         CP    LINECT,=P'60'\n         BL    NOPAGE\n         BAL   R4,HEADING\nNOPAGE   DS    0H\n         MVC   INAREA,INAREA-1    CLEAR INPUT AREA TO BLANKS\n         GET   SYSIN,INAREA       GET A VOLSER RECORD\nCOMMENT  CLI   SYSIN,C'*'\n         BE    GETLOOP\n         CLI   SYSIN,C' '\n         BE    GETLOOP\n         MVC   VOLSR(6),INAREA    MOVE VOLSER TO INPUT AREA\n         PRINT GEN\n* --------  PRINT HEADER AND INITIAL VOLUME NAME MESSAGE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   MSG01+20(6),VOLSR\n* --------  CODE TO CALL CTSQSTS AND GET THE RETURN CODE\n* -*-*-\n         CP    LOADCT,=P'30000'   USE COUNT GETTING TOO HIGH?\n         BNH   NOLOADIT           NO. BYPASS DELETE.\n         BAL   R4,DELLOAD         DELETE AND RELOAD\nNOLOADIT DS    0H\n* -*-*-\n         XC    LQUERY(16),LQUERY  CLEAR PARM AREA\n         LA    R0,VOLSR           POINT TO VOLSER NAME\n         ST    R0,LQUERY          PUT VOLSER INTO PARM LIST\n         OI    LQUERY,X'80'       INDICATE END OF PARM LIST\n         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM\n         LA    R1,LQUERY               POINT TO PARM LIST\n         BALR  R14,R15                 DO CALL\n         CVD   R15,DOUBLE         CONVERT TO PACKED\n         ST    R15,SAVER15        SAVE RETURN CODE\n         DELETE EP=TMSSVC\n         AP    LOADCT,=P'1'\n         OI    DOUBLE+7,X'0F'     SIGN NIBBLE\n         MVC   MSG02+20(10),EDPAT\n         ED    MSG02+20,DOUBLE+3\n         L     R15,SAVER15        RESTORE RETURN CODE\n         BAL   R4,CODETEXT        PUT INTERPRETATION INTO MESSAGE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSG01\n         PUT   SYSPRINT,OUTLINE\n         AP    LINECT,=P'1'\n         B     GETLOOP\n* --------\nGETEND   DS    0H\n         CLOSE SYSIN\n         CLOSE SYSPRINT\nTHEEND   DS    0H\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n* --------         SUBROUTINE - PRINT HEADING\nHEADING  DS    0H\n         ZAP   LINECT,=P'4'\n         AP    PAGECT,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   HEADPAT,EDPAT\n         ED    HEADPAT,PAGECT+2\n         MVC   OUTLINE(133),HEADER\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRINT,OUTLINE\n         BR    R4\n* --------         SUBROUTINE - CODE TEXT INTERPRETATION\nCODETEXT MVC   CODETXT,BLANKS\nTRYC0    C     R15,=F'0'\n         BNE   TRYC4\n         MVC   CODETXT,CODE0\n         B     TRYCEND\nTRYC4    C     R15,=F'4'\n         BNE   TRYC8\n         MVC   CODETXT,CODE4\n         B     TRYCEND\nTRYC8    C     R15,=F'8'\n         BNE   TRYC12\n         MVC   CODETXT,CODE8\n         B     TRYCEND\nTRYC12   C     R15,=F'12'\n         BNE   TRYC16\n         MVC   CODETXT,CODE12\n         B     TRYCEND\nTRYC16   C     R15,=F'16'\n         BNE   TRYC20\n         MVC   CODETXT,CODE16\n         B     TRYCEND\nTRYC20   C     R15,=F'20'\n         BNE   TRYCERR\n         MVC   CODETXT,CODE20\n         B     TRYCEND\nTRYCERR  MVC   CODETXT,CODEERR\nTRYCEND  BR    R4\n* --------         SUBROUTINE - DELETE AND RELOAD OF CALLED PROGRAM\nDELLOAD  DS    0H\n         STM   R0,R1,SAVER0R1      SAVE R0 AND R1\n         ZAP   LOADCT,=P'0'        RESET COUNTER TO ZERO\n         L     R0,ENTRYPT          GET ENTRY POINT\n*                                  DELETE AND RELOAD\n         DELETE EPLOC=(0)\n         LA    R0,=CL8'CTSQSTS '\n         LOAD  EPLOC=(0)\n         ST    R0,ENTRYPT\n         LM    R0,R1,SAVER0R1      RESTORE R0 AND R1\nDELLEND  BR    R4\n* ----- CONSTANTS ------ *\nDOUBLE   DC    D'0'\nSAVER0R1 DC    D'0'\nSAVER15  DC    F'0'\nENTRYPT  DC    F'0'\nPAGECT   DC    PL7'0'\nLINECT   DC    PL7'0'\nITEMCT   DC    PL7'0'\nLOADCT   DC    PL7'0'\nEDPAT    DC    X'40202020202020202120'\n         DC    C' '\nBLANKS   DC    CL133' '\nOUTLINE  DS    CL133\nHEADER   DS    0CL133\n         DC    CL103'1  CTSQSTS - RETURN CODE TEST PROGRAM     '\n         DC    CL5'PAGE '\nHEADPAT  DC    CL10' '\n         DC    CL15' '\n         DC    CL15' '\nMSG01    DS    0CL133\n         DC    CL31'     INPUT VOLSER =            '\nMSG02    DC    CL43'     RETCODE WAS  =                       '\nCODETXT  DC    CL14' '\n         DC    CL45' '\n         DC    CL8' '\nVOLSR    DC    CL6' '\nRETCDE   DC    PL7'0'\nLQUERY   DS    A                       ADR OF VOLSER\n         DS    A                       ADR OF ATL-TYPE, ATL-NUM\n         DS    A                       ADR OF CONTAINER VOLSER\n         DS    A                       ADR OF DSN FOR CONTAINER VOLUME\nLQUERYE  EQU   *                       END-OF-LIST\nCODETABL DS    0H\nCODE0    DC    C'SCRATCH TAPE  '\nCODE4    DC    C'TAPE NOT FULL '\nCODE8    DC    C'FULL TAPE     '\nCODE12   DC    C'OUT OF SERVICE'\nCODE16   DC    C'FOREIGN TAPE  '\nCODE20   DC    C'CA1 NOT ACTIVE'\nCODEERR  DC    C'INVALID CODE  '\nLINKPARM DS    0A                 <--- R15 AT LINK TIME\n         DC    A(0)                    ADR OF PGM NAME\n         DC    A(0)                    NO ADR FOR DCB\n         DC    C' '\nINAREA   DC    CL80' '\n         LTORG\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133\nSYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,LRECL=80,EODAD=GETEND\n         END   CBRTEST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CBRTST01": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x01\\x01\\x13O\\x01\\x01\\x13O\\x16 \\x00\\x17\\x00\\x06\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-05-14T00:00:00", "modifydate": "2001-05-14T16:20:00", "lines": 23, "newlines": 6, "modlines": 0, "user": "WSBG"}, "text": "//WSBGCBRT JOB ,'SAM GOLOB',CLASS=S,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//TESTCALL EXEC PGM=CBRTST\n//STEPLIB  DD   DISP=SHR,DSN=WSBG.LOAD\n//SYSPRINT DD   SYSOUT=*,DCB=RECFM=FBA\n//SYSIN    DD   *\nM10000\nM10001\nM10002\nM10003\nM10004\nM10005\nM10006\nM10007\nM10008\nM10009\nM10010\nM10011\nM10012\nM10013\nM10014\nM10015\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBRTST02": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x01\\x01\\x13O\\x01\\x01\\x13O\\x16!\\x00\\x07\\x00\\x06\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2001-05-14T00:00:00", "modifydate": "2001-05-14T16:21:00", "lines": 7, "newlines": 6, "modlines": 0, "user": "WSBG"}, "text": "//WSBGCBRT JOB ,'SAM GOLOB',CLASS=S,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//TESTCALL EXEC PGM=CBRTST\n//STEPLIB  DD   DISP=SHR,DSN=WSBG.LOAD\n//SYSPRINT DD   SYSOUT=*,DCB=RECFM=FBA\n//SYSIN    DD   DISP=SHR,DSN=WSBG.EDIT.SPLIT.STATEMTS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBRTST03": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x01\\x01\\x13O\\x01\\x01\\x13O\\x16\"\\x00\\x1c\\x00\\x06\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2001-05-14T00:00:00", "modifydate": "2001-05-14T16:22:00", "lines": 28, "newlines": 6, "modlines": 0, "user": "WSBG"}, "text": "//WSBGCBRS JOB ,'SAM GOLOB',CLASS=S,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//TESTCALL EXEC PGM=CBRTST\n//STEPLIB  DD   DISP=SHR,DSN=WSBG.LOAD\n//SYSPRINT DD   SYSOUT=*,DCB=RECFM=FBA\n//SYSIN    DD   *\nM00000\nM10000\nM10001\nM10002\nM10003\nM10004\nM10005\nM10006\nM10007\nM10008\nM10009\nM10010\nM10011\nM10012\nM10013\nM10014\nM10015\nCBT434\nV00000\nV00011\nV00033\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMCVLIST": {"ttr": 533, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x01\\x01\\x15\\x0f\\x01\\x01\\x15\\x1f\\x16\\x18\\x00o\\x00Y\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-05-31T16:18:00", "lines": 111, "newlines": 89, "modlines": 0, "user": "WSBG"}, "text": "*********************************************************************\n*                                                                   *\n*  TMCVLIST - PROGRAM TO CREATE A LIST OF VOLUMES IN COLUMNS 1-6    *\n*             WHICH IS MANUFACTURED FROM THE TMS TMC.               *\n*                                                                   *\n*     AUTHOR:   SAM GOLOB            DATE:  05/31/01                *\n*                                                                   *\n*     INPUTS:   TMCIN    -  THE TMS TMC DATASET                     *\n*                                                                   *\n*     OUTPUTS:  VOLLIST  -  OUTPUT FB-80 LIST OF VOLUMES            *\n*               SYSPRINT -  PRINTS RUN STATISTICS                   *\n*                                                                   *\n*     CHANGE LOG:                                                   *\n*                                                                   *\n*                                                                   *\n*                                                                   *\n*********************************************************************\nTMCVLIST CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'TMCVLIST - CREATE VOL LIST FROM TMC - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL 001 '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----                       SET UP TWO BASE REGISTERS\n         USING TMCVLIST,R12,R11\n         LR    R12,R15\n         LR    R11,R12\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LR    R1,R5          RESTORE PARM POINTER\n         PRINT GEN\n         OPEN  (TMCIN,(INPUT))\n         OPEN  (VOLLIST,(OUTPUT))\n         ZAP   INRCDS,=P'0'\n         ZAP   OUTRCDS,=P'0'\nLEER     GET   TMCIN,AREAIN\n         AP    INRCDS,=P'1'\n         CLC   AREAIVOL,=C'TMSCTL'        TMS HEADER?\n         BE    LEER                       IGNORE IT\n         CLI   AREAIVOL,X'FF'             DSNB RECORD?\n         BE    LEER                       IGNORE IT\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),AREAIVOL       MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(TMCINDL),TMCIND    INDICATE VOL IS FROM TMC\n         PUT   VOLLIST,AREAOUT\n         AP    OUTRCDS,=P'1'\n         B     LEER\nFIN      DS    0H\n         OPEN  (SYSPRINT,OUTPUT)\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSG01\n         MVC   OUTLINE+19(12),EDPAT\n         ED    OUTLINE+19(12),INRCDS+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSG02\n         MVC   OUTLINE+19(12),EDPAT\n         ED    OUTLINE+19(12),OUTRCDS+2\n         PUT   SYSPRINT,OUTLINE\n         CLOSE TMCIN\n         CLOSE VOLLIST\n         CLOSE SYSPRINT\nTHEEND   DS    0H\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n* ----- CONSTANTS ------ *\nONE      DC    F'1'\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\n         DC    C' '\nBLANKS   DC    CL133' '\nOUTLINE  DS    CL133\nHEADER   DC    CL133'1  TMCVLIST - TMC VOLUME NAME EXTRACT PROGRAM'\n         DC    CL133' '\nMSG01    DC    CL133'-    RECORDS  IN ='\n         DC    CL133' '\nMSG02    DC    CL133'     RECORDS OUT ='\n         DC    CL133' '\nTMCIND   DC    C'FROM THE TMC'\nTMCINDL  EQU   *-TMCIND\nINRCDS   DC    PL7'0'\nOUTRCDS  DC    PL7'0'\n         LTORG\nTMCIN    DCB   DDNAME=TMCIN,MACRF=GM,EODAD=FIN,DSORG=PS,LRECL=340\nVOLLIST  DCB   DDNAME=VOLLIST,MACRF=PM,DSORG=PS,LRECL=80\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133\n         DC    CL8' '\nAREAIN   DS    0CL340\nAREAIVOL DS    CL6\nAREAIRST DS    CL334\n         DC    CL8' '\nAREAOUT  DS    0CL80\nAREAOVOL DS    CL6\n         DC    CL74' '\n         DC    CL8' '\n         END   TMCVLIST\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMCVL001": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x01\\x15\\x0f\\x01\\x01\\x15\\x1f\\x16@\\x00\\x10\\x00\\t\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-05-31T16:40:00", "lines": 16, "newlines": 9, "modlines": 0, "user": "WSBG"}, "text": "//WSBGTMCV JOB ,'SAM GOLOB',CLASS=S,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//****************************************************************//\n//*                                                              *//\n//* JOBSTREAM TO CREATE A VOLUME LIST OF ALL VOLUMES DEFINED IN  *//\n//*  THE TMS TMC.                                                *//\n//*                                                              *//\n//****************************************************************//\n//*\n//TMCEXVOL EXEC PGM=TMCVLIST\n//STEPLIB   DD  DISP=SHR,DSN=WSBG.LOAD\n//SYSPRINT  DD  SYSOUT=*\n//TMCIN     DD  DISP=SHR,DSN=P$.MON$.TMS.TMC   <== PROD TMC DATASET\n//VOLLIST   DD  DISP=(NEW,CATLG,DELETE),DSN=WSBG.TMC.VOLLIST,\n//    DCB=(DSORG=PS,LRECL=80,BLKSIZE=27920,RECFM=FB),\n//    VOL=SER=WORKB1,SPACE=(CYL,(5,5),RLSE),UNIT=SYSDA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMLIBAUD": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01>\\x00\\x00\\x01\\x01\\x15\\x0f\\x01\\x01\\x15o\\x17\\x05\\x027\\x00Y\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.62", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-06-05T17:05:00", "lines": 567, "newlines": 89, "modlines": 0, "user": "WSBG"}, "text": "*********************************************************************\n*                                                                   *\n*  TMLIBAUD - PROGRAM TO MATCH-MERGE VOLUME-BASED DATA FROM THE     *\n*             TMC WITH CORRESPONDING DATA FROM THE TAPE LIBRARY.    *\n*                                                                   *\n*             A  TOTAL  EXCEPTION REPORT IS PRODUCED, PLUS          *\n*             FOUR REPORTS SHOWING THE SEPARATE EXCEPTION TYPES     *\n*                                                                   *\n*                                                                   *\n*   AUTHOR:   SAM GOLOB            DATE:  06/01/01                  *\n*                                                                   *\n*   INPUTS:   TMSIN    -  VOLUME LIST CREATED FROM THE TMC          *\n*             LIBIN    -  VOLUME LIST CREATED FROM THE TCDB         *\n*                                                                   *\n*   OUTPUTS:  SYSPRINT -  PRINTS TOTAL EXCEPTION REPORT             *\n*             SYSPRNT1 -                                            *\n*             SYSPRNT2 -                                            *\n*             SYSPRNT3 -                                            *\n*             SYSPRNT4 -                                            *\n*                                                                   *\n*                                                                   *\n*   CHANGE LOG:                                                     *\n*                                                                   *\n*                                                                   *\n*                                                                   *\n*                                                                   *\n*                                                                   *\n*********************************************************************\nTMLIBAUD CSECT\n         YREGS\n         USING *,R15\n         B     EYECATCH\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\n         DC    C'TMLIBAUD - EXCEPTION REPORT - TMS VERSUS TAPE LIB - '\n         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '\n         DC    C'LEVEL 001 '\n         DC    C'--- '            MAKE EYECATCHER VISIBLE\nSAVEAREA DC    18F'0'\nEYECATCH DS    0H             ENSURE ALIGNMENT\n         SAVE  (14,12)\n         LR    R5,R1          SAVE PARM POINTER\n         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR\n         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR\n         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR\n         LR    R13,R1               NEW SAVE AREA ADDRESS\n         DROP  R15\n* -----                       SET UP TWO BASE REGISTERS\n         USING TMLIBAUD,R12,R11\n         LR    R12,R15\n         LR    R11,R12\n         LA    R11,4095(,R12)\n         LA    R11,1(,R11)\n         LR    R1,R5          RESTORE PARM POINTER\n         PRINT GEN\n***********************************************************************\nINITPAGE DS    0H                   FORCE INITIAL PRINT OF HEADERS\n         ZAP   LINECNT,=P'61'\n         ZAP   LINECNT1,=P'61'\n         ZAP   LINECNT2,=P'61'\n         ZAP   LINECNT3,=P'61'\n         ZAP   LINECNT4,=P'61'\n         ZAP   PAGECNT,=P'0'\n         ZAP   PAGECNT1,=P'0'\n         ZAP   PAGECNT2,=P'0'\n         ZAP   PAGECNT3,=P'0'\n         ZAP   PAGECNT4,=P'0'\n***********************************************************************\n* GET SYSTEM DATE AND TIME                                            *\n***********************************************************************\n         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         OI    DATE+4,X'0F'\n         UNPK  DATED,DATE\n         OI    TIME+3,X'0F'\n         UNPK  TIMED,TIME\n         MVC   HEADDATE(2),DATED\n         MVI   HEADDATE+2,C'/'\n         MVC   HEADDATE+3(2),DATED+2\n         MVI   HEADDATE+5,C'/'\n         MVC   HEADDATE+6(4),DATED+4\n         MVC   HEADDATE+15(2),TIMED\n         MVI   HEADDATE+17,C':'\n         MVC   HEADDATE+18(2),TIMED+2\n         MVI   HEADDATE+20,C':'\n         MVC   HEADDATE+21(2),TIMED+4\n         MVC   HEADER+97(23),HEADDATE\n         MVC   HEADER1+95(23),HEADDATE\n         MVC   HEADER2+95(23),HEADDATE\n         MVC   HEADER3+95(23),HEADDATE\n         MVC   HEADER4+95(23),HEADDATE\n***********************************************************************\nPROCESS  DS    0H                        BEGIN MATCH-MERGE\n*                                        OPEN INPUTS AND PRINT\n         OPEN  (TMSIN,(INPUT))\n         OPEN  (LIBIN,(INPUT))\n         OPEN  (SYSPRINT,OUTPUT)\n         OPEN  (SYSPRNT1,OUTPUT)\n         OPEN  (SYSPRNT2,OUTPUT)\n         OPEN  (SYSPRNT3,OUTPUT)\n         OPEN  (SYSPRNT4,OUTPUT)\n*                                        START ALL THE HEADERS\n         BAL   R9,DOHEADR\n*\n         BAL   R9,DOHEADR1\n*\n         BAL   R9,DOHEADR2\n*\n         BAL   R9,DOHEADR3\n*\n         BAL   R9,DOHEADR4\n*\n*                                        ZERO THE COUNTERS\n         ZAP   INTMCC,=P'0'\n         ZAP   INLIBC,=P'0'\n         ZAP   EXCEPNO,=P'0'\n         MVI   FLAG,X'00'                AND THE FLAG\n         MVI   FLAGPS,X'00'                AND THE OTHER FLAG\n         MVC   TMCLVOL,BLANKS            AND THE 'LAST VOLUME READ'\n         MVC   LIBLVOL,BLANKS             STORAGE AREAS\n         MVC   AREAIN,AREAIN-1           AND BLANK THE\n         MVC   AREAJN(256),AREAJN-1            INPUT AREAS\n         MVC   AREAJN+256(AREAJNL-256),AREAJN+255\n*\nINITREAD DS    0H                        INITIALIZATION OF FILES\n         GET   TMSIN,AREAIN\n*                                        IF EOF IT'LL GO TO FTN\n         CLI   AREAITAP,C'L'             SIGNIFICANT RECORD?\n         BNE   INITREAD                  NO - IGNORE IT\n         OI    FLAG,X'01'                INDICATE TMC RECD GOTTEN\n         AP    INTMCC,=P'1'              INCREMENT INPUT COUNTER\n         GET   LIBIN,AREAJN\n*                                        IF EOF IT'LL GO TO FVN\n         OI    FLAG,X'02'                INDICATE LIB RECD GOTTEN\n         AP    INLIBC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   TMCLVOL,AREAIVOL          MOVE VOLSER NAMES --\n         MVC   LIBLVOL,AREAJVOL           - BLANK IF NO INPUT\n*\nMATMERGE DS    0H                        MATCH MERGE PROCESS\n         MVI   FLAGPS,X'00'              CLEAR VOLUME STATUS FLAG\n         TM    FLAG,X'30'                EOF ON BOTH FILES?\n         BO    EOFS                      YES. FINISH UP.\n         TM    FLAG,X'10'                EOF ON TMC VOL FILE?\n         BO    LOWLIB                    YES. JUST READ FROM VOL FILE\n         TM    FLAG,X'20'                EOF ON LIB VOL FILE?\n         BO    LOWTMC                    YES. JUST READ FROM TMC FILE\n         CLC   TMCLVOL,LIBLVOL           COMPARE WHICH VOL IS LOWER\n         BH    LOWLIB                    PROCESS LIBRARY VOL LOWER\n         BL    LOWTMC                    PROCESS TMC VOL LOWER\n         B     INEQUAL                   PROCESS EQUAL\n*\n*------------------------------------------------------------------*\nINEQUAL  DS    0H                      BOTH ARE EQUAL - PRODUCE AUDIT\n*\n* -----     TEST IF EACH INPUT SHOWS PRIVATE OR SCRATCH\n*\n         CLC   AREAIPOS,=C'PRIVATE'\n         BNE   INETISCR\n         OI    FLAGPS,X'01'              FLAG TMS STATUS AS PRIVATE\nINETISCR DS    0H\n         CLC   AREAIPOS,=C'SCRATCH'\n         BNE   INETIGO\n         OI    FLAGPS,X'02'              FLAG TMS STATUS AS SCRATCH\nINETIGO  DS    0H\n         CLI   AREAJPOS,C'P'\n         BNE   INETJSCR\n         OI    FLAGPS,X'10'              FLAG LIB STATUS AS PRIVATE\n         NI    FLAGPS,X'FF'-X'20'\n         B     INETJGO\nINETJSCR DS    0H\n         CLI   AREAJPOS,C'S'\n         BNE   INETJGO\n         OI    FLAGPS,X'20'              FLAG LIB STATUS AS SCRATCH\n         NI    FLAGPS,X'FF'-X'10'\n         B     INETJGO\n*\n* -----     PRODUCE OUTPUT ONLY IF EXCEPTIONAL CASE\n*\nINETJGO  DS    0H\n         CLI   FLAGPS,X'00'              NOT MARKED P OR S?\n         BE    INEQGANO                  CAN'T PROCESS\n         TM    FLAGPS,X'11'              BOTH MARKED PRIVATE?\n         BO    INEQGANO                  YES - GET 2 MORE RECORDS\n         CLI   AREAJVOL,C'D'             IS IT A \"DEV\" TAPE?\n         BE    ITSADEV                   YES. SPECIAL TREATMENT.\n         TM    FLAGPS,X'22'              BOTH MARKED SCRATCH?\n         BO    INEQGANO                  YES - GET 2 MORE RECORDS\n         B     INETNODV                  NO - TEST FOR EXCEPTIONS.\nITSADEV  DS    0H\n         TM    FLAGPS,X'10'              YES - PRIVATE IN LIBRARY?\n         BO    INEQGANO                  YES - AS IT SHOULD BE\n         TM    FLAGPS,X'20'              YES - SCRATCH IN LIBRARY?\n         BZ    INEQGANO                  NO  - COUNT AS OK\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),LIBLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(DEVNOTPL),DEVNOTP    MOVE ERROR MESSAGE IN\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    LINECNT3,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR3\n         L     R9,SAVER9\n         PUT   SYSPRNT3,AREAOUT\n         AP    EXCEPNO,=P'1'             MARK AS EXCEPTION\n         AP    DEVNPTMS,=P'1'       DEV NOT PRIVATE IN TMS - COUNTER\n         B     INEQGANO                  AFTER ERRORMSG, GO ON\n*\n* -----     TEST WHICH EXCEPTION WE HAVE\n*\nINETNODV DS    0H               NOW TEST THE EXCEPTIONS, AND REPORT\n         TM    FLAGPS,X'21'     TMS IS PRIVATE, LIB IS SCRATCH?\n         BNO   INETTSLP         NO. TEST FOR OPPOSITE.\n         BAL   R9,TSLP          YES. HANDLE EXCEPTION.\n         B     INETNOPR\nINETTSLP DS    0H\n         TM    FLAGPS,X'12'     TMS IS SCRATCH, LIB IS PRIVATE?\n         BNO   INETNOPR         NO. GO ON PROCESSING.\n         BAL   R9,TPLS          YES. HANDLE EXCEPTION.\n         B     INETNOPR\nINETNOPR DS    0H\n         B     INEQGANO         GET 2 NEW RECORDS\n* - - - - -        IF RECORDS EQUAL GET TWO NEW RECORDS      - - - *\nINEQGANO DS    0H\n         GET   TMSIN,AREAIN\n*                                        IF EOF, GO TO FTN\n         OI    FLAG,X'01'                INDICATE TMC RECD GOTTEN\n         CLI   AREAITAP,C'L'             SIGNIFICANT RECORD?\n         BNE   INEQGANO                  NO - IGNORE IT\n         AP    INTMCC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   TMCLVOL,AREAIVOL          MOVE TMC VOLSER TO AREA\n* - - - - -\n         GET   LIBIN,AREAJN\n*                                        IF EOF, GO TO FVN\n         OI    FLAG,X'02'                INDICATE LIB RECD GOTTEN\n         AP    INLIBC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   LIBLVOL,AREAJVOL          MOVE LIB VOLSER TO AREA\n* - - - - -\n         B     MATMERGE                  GO LOOP\n*------------------------------------------------------------------*\n         SPACE 3\n*\nLOWTMC   DS    0H\n         NI    FLAG,X'FF'-X'02'          TURN OFF LIB RECD AS LAST IN\n* - - - - -        GET ANOTHER TMC VOLUME RECORD             - - - *\nLOWTGANO DS    0H\n         GET   TMSIN,AREAIN\n*                                        IF EOF, GO TO FTN\n         CLI   AREAITAP,C'L'             SIGNIFICANT RECORD?\n         BNE   LOWTGANO                  NO - IGNORE IT\n         OI    FLAG,X'01'                INDICATE TMC RECD GOTTEN\n         AP    INTMCC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   TMCLVOL,AREAIVOL          MOVE TMC VOLSER TO AREA\n* - - - - -\n         B     MATMERGE                  GO LOOP\n*------------------------------------------------------------------*\n         SPACE 3\nLOWLIB   DS    0H\n         TM    FLAG,X'03'                BOTH RECORDS READ TOGETHER?\n         BO    LOWNOERR                  NO ERROR - NO MESSAGE\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),LIBLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(VNOTTDL),VNOTTD    INDICATOR IN OUTPUT\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    LINECNT4,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR4\n         L     R9,SAVER9\n         PUT   SYSPRNT4,AREAOUT\n         AP    EXCEPNO,=P'1'             MARK AS EXCEPTION\n         AP    VNTTDCNT,=P'1'\nLOWNOERR DS    0H\n         NI    FLAG,X'FF'-X'01'          TURN OFF TMC RECD AS LAST IN\n* - - - - -        GET ANOTHER LIB VOLUME RECORD\n         GET   LIBIN,AREAJN\n*                                        IF EOF, GO TO FVN\n         OI    FLAG,X'02'                INDICATE LIB RECD GOTTEN\n         AP    INLIBC,=P'1'              INCREMENT INPUT COUNTER\n         MVC   LIBLVOL,AREAJVOL          MOVE LIB VOLSER TO AREA\n* - - - - -\n         B     MATMERGE                  GO LOOP\n*------------------------------------------------------------------*\n         SPACE 3\nFTN      DS    0H\n         OI    FLAG,X'10'                 INDICATE EOF ON TMC VOL LIST\n         MVC   TMCLVOL,=X'FFFFFFFFFFFF'    HIGH VALUES TO LAST NUMBER\n         B     MATMERGE                   GO CHECK MAIN LOOP\nFVN      DS    0H\n         OI    FLAG,X'20'                 INDICATE EOF ON LIB VOL LIST\n         MVC   LIBLVOL,=X'FFFFFFFFFFFF'    HIGH VALUES TO LAST NUMBER\n         B     MATMERGE                   GO CHECK MAIN LOOP\n*------------------------------------------------------------------*\nEOFS     DS    0H\n         CLOSE TMSIN\n         CLOSE LIBIN\nOUTPRT   DS    0H\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGIT\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),INTMCC+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGIV\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),INLIBC+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGEXCEP\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),EXCEPNO+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGPRNSC\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),PRNSCCNT+2\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRINT,OUTLINE\n         PUT   SYSPRNT1,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),MSGSCNPR\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),SCNPRCNT+2\n         PUT   SYSPRINT,OUTLINE\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT2,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),DEVNPRVT\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),DEVNPTMS+2\n         PUT   SYSPRINT,OUTLINE\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT3,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),VNTTPCTR\n         MVC   OUTLINE+35(12),EDPAT\n         ED    OUTLINE+35(12),VNTTDCNT+2\n         PUT   SYSPRINT,OUTLINE\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT4,OUTLINE\n         CLOSE SYSPRINT\n         CLOSE SYSPRNT1\n         CLOSE SYSPRNT2\n         CLOSE SYSPRNT3\n         CLOSE SYSPRNT4\nTHEEND   DS    0H\n         L     R13,4(,R13)\n         RETURN (14,12),RC=0\n* ----- SUBROUTINES ------ *\nTPLS     DS    0H\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),TMCLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(PRNOTSCL),PRNOTSC   INDICATOR IN OUTPUT\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    LINECNT1,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR1\n         L     R9,SAVER9\n         PUT   SYSPRNT1,AREAOUT\n         AP    EXCEPNO,=P'1'             MARK AS EXCEPTION\n         AP    PRNSCCNT,=P'1'         COUNT PRV IN LIB, SCR IN TMS\n         BR    R9\n* ------------------------ *\nTSLP     DS    0H\n         MVC   AREAOUT,AREAOUT-1         CLEAR OUTPUT AREA\n         MVC   AREAOVOL(6),LIBLVOL        MOVE VOLUME SERIAL\n         MVC   AREAOUT+30(SCNOTPRL),SCNOTPR   INDICATOR IN OUTPUT\n         AP    LINECNT,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR\n         L     R9,SAVER9\n         PUT   SYSPRINT,AREAOUT\n         AP    LINECNT2,=P'1'\n         ST    R9,SAVER9\n         BAL   R9,DOHEADR2\n         L     R9,SAVER9\n         PUT   SYSPRNT2,AREAOUT\n         AP    EXCEPNO,=P'1'             MARK AS EXCEPTION\n         AP    SCNPRCNT,=P'1'         COUNT SCR IN LIB, PRV IN TMS\n         BR    R9\n* ------------------------ *         MAIN HEADER\nDOHEADR  DS    0H\n         CP    LINECNT,=P'60'\n         BNH   DOHEADE\n         AP    PAGECNT,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER\n         MVC   OUTLINE+119(12),EDPAT\n         ED    OUTLINE+119(12),PAGECNT+2\n         PUT   SYSPRINT,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRINT,OUTLINE\n         ZAP   LINECNT,=P'4'\nDOHEADE  BR    R9\n* ------------------------ *          HEADER  1\nDOHEADR1 DS    0H\n         CP    LINECNT1,=P'60'\n         BNH   DOHEADE1\n         AP    PAGECNT1,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER1\n         MVC   OUTLINE+119(12),EDPAT\n         ED    OUTLINE+119(12),PAGECNT1+2\n         PUT   SYSPRNT1,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT1,OUTLINE\n         ZAP   LINECNT1,=P'4'\nDOHEADE1 BR    R9\n* ------------------------ *          HEADER  2\nDOHEADR2 DS    0H\n         CP    LINECNT2,=P'60'\n         BNH   DOHEADE2\n         AP    PAGECNT2,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER2\n         MVC   OUTLINE+119(12),EDPAT\n         ED    OUTLINE+119(12),PAGECNT2+2\n         PUT   SYSPRNT2,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT2,OUTLINE\n         ZAP   LINECNT2,=P'4'\nDOHEADE2 BR    R9\n* ------------------------ *          HEADER  3\nDOHEADR3 DS    0H\n         CP    LINECNT3,=P'60'\n         BNH   DOHEADE3\n         AP    PAGECNT3,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER3\n         MVC   OUTLINE+119(12),EDPAT\n         ED    OUTLINE+119(12),PAGECNT3+2\n         PUT   SYSPRNT3,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT3,OUTLINE\n         ZAP   LINECNT3,=P'4'\nDOHEADE3 BR    R9\n* ------------------------ *          HEADER  4\nDOHEADR4 DS    0H\n         CP    LINECNT4,=P'60'\n         BNH   DOHEADE4\n         AP    PAGECNT4,=P'1'\n         MVC   OUTLINE,OUTLINE-1\n         MVC   OUTLINE(133),HEADER4\n         MVC   OUTLINE+119(12),EDPAT\n         ED    OUTLINE+119(12),PAGECNT4+2\n         PUT   SYSPRNT4,OUTLINE\n         MVC   OUTLINE,OUTLINE-1\n         MVI   OUTLINE,C'-'\n         PUT   SYSPRNT4,OUTLINE\n         ZAP   LINECNT4,=P'4'\nDOHEADE4 BR    R9\n* ----- CONSTANTS ------ *\nONE      DC    F'1'\nFLAG     DC    X'00'\n*              X'01'        INPUT IS FROM TMC VOLUME LIST\n*              X'02'        INPUT IS FROM LIB VOLUME LIST\n*              X'10'        END OF INPUT ON TMC LIST\n*              X'20'        END OF INPUT ON LIB LIST\nFLAGPS   DC    X'00'\n*              X'01'        TMC SAYS THIS VOLUME IS PRIVATE\n*              X'02'        TMC SAYS THIS VOLUME IS SCRATCH\n*              X'10'        LIB SAYS THIS VOLUME IS PRIVATE\n*              X'20'        LIB SAYS THIS VOLUME IS SCRATCH\nTMCLVOL  DC    CL6' '       LAST VOLUME NAME READ FROM TMC LIST\nLIBLVOL  DC    CL6' '       LAST VOLUME NAME READ FROM VOL LIST\nDECVALUE DS    CL8\nEDPAT    DC    X'402020206B2020206B202120'\n         DC    C' '\nBLANKS   DC    CL133' '\nOUTLINE  DS    CL133\nHEADER   DC    CL133'1  TMLIBAUD - AUDIT REPORT - TMS AND LIBRARY EXCEP-\n               TIONS AND INCONSISTENCIES - ALL EXCEPTIONS'\nHEADER1  DC    CL133'1  TMLIBAUD - AUDIT REPORT - TAPES THAT ARE PRIVAT-\n               E IN THE VTS AND SCRATCH TO TMS'\nHEADER2  DC    CL133'1  TMLIBAUD - AUDIT REPORT - TAPES THAT ARE SCRATC-\n               H IN THE VTS AND PRIVATE TO TMS'\nHEADER3  DC    CL133'1  TMLIBAUD - AUDIT REPORT - DEVELOPMENT TAPES THA-\n               T ARE NOT PRIVATE IN THE VTS'\nHEADER4  DC    CL133'1  TMLIBAUD - AUDIT REPORT - VTS TAPES THAT ARE NO-\n               T IN TMS'\nMSGIT    DC    CL133'-         TMC VOLUME RECORDS  IN ='\nMSGIV    DC    CL133'          LIB VOLUME RECORDS  IN ='\nMSGEXCEP DC    CL133'      TOTAL NUMBER OF EXCEPTIONS ='\nMSGPRNSC DC    CL133'  PRIVATE IN LIB, SCRATCH TO TMS ='\nMSGSCNPR DC    CL133'  SCRATCH IN LIB, PRIVATE TO TMS ='\nDEVNPRVT DC    CL133'    DEV TAPES NOT PRIVATE IN VTS ='\nVNTTPCTR DC    CL133'   VTS TAPES THAT ARE NOT IN TMS ='\n         DC    CL133' '\nVNOTTD   DC    C'IN LIBRARY AND NOT IN TMS'\nVNOTTDL  EQU   *-VNOTTD\nPRNOTSC  DC    C'PRIVATE IN LIBRARY AND SCRATCH TO TMS'\nPRNOTSCL EQU   *-PRNOTSC\nSCNOTPR  DC    C'SCRATCH IN LIBRARY AND PRIVATE TO TMS'\nSCNOTPRL EQU   *-SCNOTPR\nDEVNOTP  DC    C'DEVELOPMENT TAPE IS NOT PRIVATE IN THE VTS LIBRARY'\nDEVNOTPL EQU   *-DEVNOTP\nLINECNT  DC    PL7'0'\nLINECNT1 DC    PL7'0'\nLINECNT2 DC    PL7'0'\nLINECNT3 DC    PL7'0'\nLINECNT4 DC    PL7'0'\nPAGECNT  DC    PL7'0'\nPAGECNT1 DC    PL7'0'\nPAGECNT2 DC    PL7'0'\nPAGECNT3 DC    PL7'0'\nPAGECNT4 DC    PL7'0'\nINTMCC   DC    PL7'0'\nINLIBC   DC    PL7'0'\nEXCEPNO  DC    PL7'0'\nPRNSCCNT DC    PL7'0'\nSCNPRCNT DC    PL7'0'\nDEVNPTMS DC    PL7'0'\nVNTTDCNT DC    PL7'0'\nSAVER9   DC    F'0'\n         LTORG\nTMSIN    DCB   DDNAME=TMSIN,MACRF=GM,EODAD=FTN,DSORG=PS,LRECL=133\nLIBIN    DCB   DDNAME=LIBIN,MACRF=GM,EODAD=FVN,DSORG=PS,LRECL=385\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\nSYSPRNT1 DCB   DDNAME=SYSPRNT1,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\nSYSPRNT2 DCB   DDNAME=SYSPRNT2,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\nSYSPRNT3 DCB   DDNAME=SYSPRNT3,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\nSYSPRNT4 DCB   DDNAME=SYSPRNT4,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA\n         DC    CL8' '\nAREAIN   DS    0CL133            TMS   INPUT AREA\n         DS    CL1\nAREAIVOL DS    CL6               VOLSER\n         DS    CL106\nAREAITAP DS    CL1               \"L\" IF TAPE VOLUME RECORD\n         DS    CL4\nAREAIPOS DS    CL7               PRIVATE OR SCRATCH\n         DS    CL8\n         DC    CL8' '            SEPARATOR\nAREAJN   DS    0CL385            LIB   INPUT AREA\n         DS    CL26\nAREAJLIB DS    CL8\n         DS    CL24\nAREAJVOL DS    CL6               VOLSER\nAREAJPOS DC    CL1' '            P - PRIVATE,   S - SCRATCH\n         DS    CL320\nAREAJNL  EQU   *-AREAJN\n         DC    C'    '\nAREAOUT  DS    0CL133            SYSPRINT AREA\nAREAOCC  DS    CL1\nAREAOVOL DS    CL6\n         DC    CL126' '\n         DC    CL8' '\nTIMED    DS    CL7\nDATED    DS    CL9\nDATETIME DS    4F\n         ORG   DATETIME\nTIME     DS    CL4\n         DS    CL4\nDATE     DS    CL5\n         DS    CL3\nHEADDATE DS    CL23\n         END   TMLIBAUD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT516/FILE516.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT516", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}