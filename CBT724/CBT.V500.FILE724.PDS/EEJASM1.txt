//EEJASM1  JOB 1,JAFFE,CLASS=A,MSGCLASS=T,NOTIFY=&SYSUID
//*MAIN CLASS=QUIKPROD,SYSTEM=MVS60
//APP1    EXEC PGM=GIMSMP,REGION=64M
//SMPCSI   DD  DSN=MVS.GLOBAL.CSI,DISP=SHR
//SMPCNTL  DD  *
  SET BOUNDARY(GLOBAL) .
    RECEIVE SYSMODS LIST .
  SET BOUNDARY(MVST) .
    APPLY S(EEJASM1) REDO /* CHECK */ .
/*
//SMPPTFIN DD *
++USERMOD(EEJASM1) /*
 *START OF SPECIFICATIONS**************************************
 *                                                            *
 * USERMOD NAME = EEJASM1                                     *
 *                                                            *
 * DESCRIPTIVE NAME = Mods to Structured Programming Macros.  *
 *                    for HLASM 1.4 Toolkit Release.          *
 *                                                            *
 * FUNCTION =                                                 *
 *                                                            *
 *    These modifications were dramatically simplified after  *
 *    APAR PK01283, since IBM adopted most of my suggestions. *
 *                                                            *
 *    The only modification remaining is the NEXTWHEN macro.  *
 *    This macro allows you to pass control from one WHEN     *
 *    clause to the next WHEN clause or the OTHRWISE clause.  *
 *                                                            *
 * AUTHOR =                                                   *
 *                                                            *
 *    Edward E. Jaffe                                         *
 *    Phoenix Software International                          *
 *    5200 W. Century Blvd., Suite 800                        *
 *    Los Angeles, CA 90045 U.S.A.                            *
 *    edjaffe@phoenixsoftware.com                             *
 *                                                            *
 *END OF SPECIFICATIONS****************************************
 */ .
++VER(Z038) FMID(JMQ414A)
            PRE(UK06145)
            .
++MACUPD(ASMMSP) .
./ CHANGE NAME=ASMMSP
.EXIT    ANOP  ,                                               *EEJASM1
         POP     PRINT,NOPRINT                                 *EEJASM1
         MEND  ,                                               *EEJASM1
        MACRO  ,                                               *EEJASM1
.***************************************************************EEJASM1
.*   Macro:   NEXTWHEN                                        **EEJASM1
.*   Author:  Edward E. Jaffe                                 **EEJASM1
.*   Company: Phoenix Software International, Inc.            **EEJASM1
.*   License: This macro is "freeware".                       **EEJASM1
.***************************************************************EEJASM1
         NEXTWHEN ,                                            *EEJASM1
         PUSH  PRINT,NOPRINT                                   *EEJASM1
         PRINT NOMCALL,NOPRINT                                 *EEJASM1
         COPY  ASMMGBLV                                        *EEJASM1
         LCLA  &LBLIND,&IDX                                    *EEJASM1
&IDX     SETA  &ASMA_NI                                        *EEJASM1
.CHKNEST ANOP  ,                                               *EEJASM1
         AIF   ('&ASMA_NEST(&IDX)'(5,*) EQ 'SELECT').IDXOK     *EEJASM1
&IDX     SETA  &IDX-1                                          *EEJASM1
         AIF   (&IDX GE 1).CHKNEST                             *EEJASM1
         AGO   .BADLOC                                         *EEJASM1
.IDXOK   ANOP  ,                                               *EEJASM1
         AIF   ('&ASMA_NEST(&IDX)'(3,1) EQ ' ').BADLOC         *EEJASM1
         AIF   ('&ASMA_NEST(&IDX)'(4,1) EQ 'O').BADLOC         *EEJASM1
&LBLIND  SETA  &ASMA_ST(&IDX) GET INDEX FOR PREV LEVEL         *EEJASM1
         B&ASMA_REL.C 15,&ASMA_LIND(&LBLIND) GOTO NEXT WHEN    *EEJASM1
         AGO   .EXIT                                           *EEJASM1
.BADLOC  ANOP  ,                                               *EEJASM1
         MNOTE 8,'Improperly placed NEXTWHEN. Must appear inside WHEN c+
               lause'                                          *EEJASM1
./ ENDUP
//
