{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011613000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1058148, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE260.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1058148, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1058148, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE260.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x12\\x04'", "DS1TRBAL": "b'\\xad\\xda'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xd0\\x00\\x07\\x01\\xd1\\x00\\n\\x00\\x13'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04E\\x00\\x00\\x01\\x05\\x05?\\x01\\x05\\x05?#I\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf9@@@'", "ispf": {"version": "04.69", "flags": 0, "createdate": "2005-02-22T00:00:00", "modifydate": "2005-02-22T23:49:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-469"}, "text": "REGULAR CBT TAPE - VERSION 469    FILE:  260\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT469.FILE260\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 7 MEMBERS COUNTED; CUMULATIVE SIZE IS 10,015 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   02/22/05    23:49:04    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x022_\\x01\\x022_\\x18H\\x00\\x0e\\x00\\x0e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-11-21T00:00:00", "modifydate": "2002-11-21T18:48:01", "lines": 14, "newlines": 14, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:    Re: CBT FILE260 - DISKMAP\n   Date:    Thu, 21 Nov 2002 14:22:08 -0600\n   From:    Alan.Buschmann@kohls.com\n     To:    Sam Golob <sbgolob@attglobal.net>\n\nSam, attached is the revised source that fixed the problem with\nthe CVSTAT=x'1F' when volume map has 128 free extents (or a\nmultiple) on either 3390 mod3 or 9s.  Perhaps there's a more\nelegant way of fixing this, but this worked.\n      (See attached file: DISKMAP.txt)\n\nRegards,\nAl Buschmann\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE2": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x05\\x05?\\x01\\x05\\x05?#H\\x00\\r\\x00\\r\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2005-02-22T00:00:00", "modifydate": "2005-02-22T23:48:37", "lines": 13, "newlines": 13, "modlines": 0, "user": "SBGOLOB"}, "text": "Sam,\n\nFYI.  minor corrections to the heading line for the UCB device\naddress.\n\nKen, attached is the modified DISKMAP with the code I mentioned.\nI tested this under z/OS 1.6 which we have up on our test LPAR\nand it worked fine.  Maybe Sam can update the CBTMODs tape.  Good\nluck.\n\nRegards,\nAl Buschmann\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE260": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04E\\x00\\x00\\x01\\x05\\x05?\\x01\\x05\\x05?#H\\x008\\x008\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf9@@@'", "ispf": {"version": "04.69", "flags": 0, "createdate": "2005-02-22T00:00:00", "modifydate": "2005-02-22T23:48:00", "lines": 56, "newlines": 56, "modlines": 0, "user": "CBT-469"}, "text": "//***FILE 260 IS A VERY QUICK MAPPING PROGRAM.  IT WILL PRODUCE     *   FILE 260\n//*      A LISTING OF EVERY DATA SET ON A VOLUME PLUS CALCULATE     *   FILE 260\n//*      THE FREE SPACE, FREE DSCBS, ETC.  OPTIONALLY VIA PARM      *   FILE 260\n//*      INFORMATION IT WILL PRODUCE THE FOLLOWING:                 *   FILE 260\n//*                                                                 *   FILE 260\n//*      Updated July 2000 by Charles Wells of the Georgia Dept.    *   FILE 260\n//*      of Labor, to add support for 3390-9 disk drives.           *   FILE 260\n//*                                                                 *   FILE 260\n//*      Updated November 2002 by Alan Buschmann of Kohl's          *   FILE 260\n//*      Department Stores, to fix a bug.                           *   FILE 260\n//*                                                                 *   FILE 260\n//*      Updated again February 2005 by Alan Buschmann of Kohl's    *   FILE 260\n//*      Department Stores, to correct the UCB display.             *   FILE 260\n//*                                                                 *   FILE 260\n//*         Al Buschmann                                            *   FILE 260\n//*         Kohl's Department Stores                                *   FILE 260\n//*         (262) 703-6103                                          *   FILE 260\n//*         email:  Alan.Buschmann@kohls.com                        *   FILE 260\n//*                                                                 *   FILE 260\n//*         Charles Wells                                           *   FILE 260\n//*         Georgia Dept. of Labor                                  *   FILE 260\n//*         Suite 352                                               *   FILE 260\n//*         148 International Blvd                                  *   FILE 260\n//*         Atlanta, GA 30303-1751                                  *   FILE 260\n//*                                                                 *   FILE 260\n//*         Voice: 404-656-5944                                     *   FILE 260\n//*         Email: Charles.Wells@dol.state.ga.us                    *   FILE 260\n//*                                                                 *   FILE 260\n//*         PARM=MAP     PRODUCES A TRACK MAP OF THE VOLUME         *   FILE 260\n//*         PARM=PDS     LIST ALL PDS DIRECTORIES ON THE VOLUME     *   FILE 260\n//*         PARM=ISAM    LIST ISAM REORG INFORMATION FOR DATASETS   *   FILE 260\n//*         PARM=EXT     LIST THE EXTENTS OF THE DATASETS           *   FILE 260\n//*         PARM=DUMP    LIST IN HEX ALL DSCBS ON THE VOLUME        *   FILE 260\n//*         PARM=EMPTY   LIST ONLY DATASETS THAT ARE EMPTY          *   FILE 260\n//*         PARM=MODEL   LIST ONLY MODEL DSCBS                      *   FILE 260\n//*         PARM=SDUMP   LIST IN HEX FORMAT 4 AND 5 DSCBS           *   FILE 260\n//*         PARM=VOLS    ONLY USE DDNAMES OF VOLUMEXX               *   FILE 260\n//*         PARM=JDATE   LIST CREATION/EXPIRATION DATES IN JULIAN   *   FILE 260\n//*                                                                 *   FILE 260\n//*      THIS CODE WILL SUPPORT 3380'S                              *   FILE 260\n//*      THIS CODE WILL SUPPORT INDEXED VTOCS                       *   FILE 260\n//*                                                                 *   FILE 260\n//*      ADDITIONAL COMMENTS ARE DOCUMENTED IN THE SOURCE           *   FILE 260\n//*      THIS PROGRAM MUST BE LINKED AS AC=1.                       *   FILE 260\n//*                                                                 *   FILE 260\n//*******************************************************************   FILE 260\n//*** CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT ***   FILE 260\n//***                                                             ***   FILE 260\n//***  A USER OF THIS CODE DECIDED TO USE A PARM OF RESET, WHICH  ***   FILE 260\n//***  WILL RESET THE HIGH WATER MARK IN THE VTOC.  IT DID IT,    ***   FILE 260\n//***  ALL RIGHT, BUT IT SET IT TO 512 (ON A 3350) AND THE ARM    ***   FILE 260\n//***  BOUNCED ALL OVER THE PLACE. BE CAREFUL !!!!!!!             ***   FILE 260\n//***                                                             ***   FILE 260\n//*** CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT CBT ***   FILE 260\n//*******************************************************************   FILE 260\n//*                                                                 *   FILE 260\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISKMAP": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Q\\x01\\x05\\x05?\\x01\\x05\\x05?#C\\r\\t\\r\\t\\x00\\x00\\xd2\\xd6\\xc8\\xd3\\xe2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2005-02-22T00:00:00", "modifydate": "2005-02-22T23:43:51", "lines": 3337, "newlines": 3337, "modlines": 0, "user": "KOHLS"}, "text": "*******************************************************************\n*                                                                 *\n*  DISKMAP WAS MODIFIED SOMEWHERE ALONG THE WAY TO :              *\n*                                                                 *\n*    1. ALWAYS GIVE A TRACK MAP. PARMOPT1 WAS CHANGED FROM 00 TO  *\n*       08 WHICH SPECIFIES THE MAP OPTION                         *\n*                                                                 *\n*    2. MAXLINES WAS INCREASED FROM 58 TO 88 LINES PER PAGE       *\n*                                                                 *\n*    3. IF YOU WANT THE PARMS PRINTED OUT ON THE SYSPRINT LISTING *\n*       REMOVE THE * IS COLUMN 1 OF ALL THE BAL R14,PRINT         *\n*       STATEMENTS IN THE INIT SECTION                            *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT RACF.  IF THE RACF BIT IS ON   *\n*    FOR A DATASET THE WORD \"RAC\" WILL APPEAR IN THE \"R/W\" FIELD. *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT INDEXED VTOCS AND 3380 DEVICES *\n*    IN 3/82 BY DRU KOWNACKI.  TO CONTACT HER IN CASE OF PROBLEMS *\n*    GO THROUGH ARNOLD CASINGHINO OF CONN. BANK & TRUST (CBT) AT  *\n*    (203) 244-5495 WHO WILL THEN CONTACT DRU.                    *\n*                                                                 *\n********************** C B T **************************************\n*  A USER OF THIS CODE DECIDED TO USE A PARM OF RESET, WHICH WILL *\n*  RESET THE HIGH WATER MARK IN THE VTOC. IT DID ALRIGHT BUT IT   *\n*  SET IT TO 512 (ON A 3350) AND THE ARM BOUNCED ALL OVER THE     *\n*  PLACE. BE CAREFUL !!!!!!!!                                     *\n********************** C B T ***************************************\n*\n*******************************************************************\n* MAINTENANCE:                                                    *\n*                                                                 *\n* 11/03/87 - UPDATED CODE TO SUPPORT 3380 K'S          LMN-CBT    *\n*                                                                 *\n*******************************************************************\n* 05/??/88                                                        *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT OVER 16 EXTENTS FOR VSAM FILES *\n*    CHANGED OR ADDED CODE IS COMMENTED BY \"SMA 3/88\"             *\n*                                                                 *\n*  NOTE: WHEN THERE ARE OVER 99 EXTENTS THE 'EX' COLUMN ON THE    *\n*  VTOC LISTING WILL OCCUPY 3 POSITIONS THEREBY ELIMINATING THE   *\n*  SINGLE SPACE BETWEEN THE 'TRKAL' COLUMN AND THE 'EX' COLUMN.   *\n*  VISUALLY, THIS MAY NOT BE DESIRABLE, BUT FOR THE NUMBER OF     *\n*  TIMES THAT THIS MAY OCCUR, IT DIDN'T SEEM WORTH REFORMATTING   *\n*  THE REPORT, ESPECIALLY IF THE REPORT IS USED AS INPUT TO OTHER *\n*  DASD MANAGEMENT PROGRAMS.                                      *\n*                                                                 *\n*******************************************************************\n* 09/06/91                                                        *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT 3390            GDL            *\n*******************************************************************\n* 09/20/94                                    GDL-94              *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT 3390 MOD 9'S.                  *\n*  FIELD SIZES INCREACED AND PROCESSING OF FORMAT 5 RECORDS       *\n*  REPLACED WITH CVAFDSM USING RTA4BYTE=YES. THIS REQUIRES        *\n*  RUNNING ON A SYSTEM THAT SUPPORTS INDEX VTOCS. FORMAT 6        *\n*  RECORDS DROPPED AS NO LONGER SUPPORTED.                        *\n*  ALL CHANGED LINES OUTSIDE THIS BOX MARKED      GDL-94          *\n*******************************************************************\n* 07/17/2000                                                      *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SKIP FMT 7 DSCB        GDL-2000        *\n*******************************************************************\n* 11/21/2002                                  KOHLS-02            *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO CORRECT CVSTAT=X'1F' FOR VOLUME=MAP    *\n*  WHEN NUMBER OF FREE EXTENTS=128 OR MULTIPLE ON END OF VOLUME.  *\n*******************************************************************\n* 02/14/2005                                  KOHLS-03            *\n*                                                                 *\n*  USE UCBCHAN INSTEAD OF UCBNAME FOR 31-BIT DEVICE ADDRESSES     *\n*******************************************************************\n*\n*DESCRIPTION        -         DISKMAP FOR ALL DASD DEVICES.\n*\n*\n*\n*CONTACT            -         GARY D. FROEMEL\n*                             JOHNS-MANVILLE\n*                             KEN-CARYL RANCH\n*                             P.O. BOX 5108\n*                             DENVER,COLO.  80217\n*TELEPHONE          -         303-979-1000\n*FUNCTION -DIRECT ACCESS VOLUME LISTING UTILITY.\n*          IT WILL PRODUCE A LISTING OF EVERY DATASET ON A VOLUME\n*          PLUS CALCULATE THE FREE SPACE, FREE DSCBS ETC. OPTIONALLY\n*          VIA PARM INFORMATION IT WILL PRODUCE THE FOLLOWING:\n*         PARM='MAP - PRODUCE A TRACK MAP OF VOLUME.\n*         PARM='PDS - LIST ALL PDS DIRECTORIES ON VOLUME.\n*         PARM='ISAM - LIST ISAM REORG ONFORMATION FOR DATASETS.\n*         PARM='EXT- LIST THE EXTENTS OF THE DATASETS.\n*         PARM='DUMP - LIST IN HEX ALL DSCBS ON VOLUME.\n*         PARM='EMPTY - LIST ONLY DATASETS THAT ARE EMPTY.\n*         PARM='MODEL - WILL ONLY LIST MODEL DSCBS.\n*         PARM='SDUMP - LIST IN HEX FORMAT 4 AND 5 DSCBS.\n*         PARM='VOLS - ONLY USE DDNAMES OF VOLUMEXX    .\n*         PARM='JDATE - LIST CREATION/EXPIRATION DATES IN JULIAN.\n******     OTHER COMMENT ARE DOCUMENTED IN BEGINING OF SOURCE.\n******     NOTE - SYS1.AMODGEN MUST BE CONCATENATED TO MACLIB FOR ASMB\n*\nDISKMAP  TITLE '... MACROS NOT FOUND IN SYS1.AMODGEN....'\n         MACRO\n         IEZCOM\nCOMECBPT DS    F    ADDRESS OF THE ECB FOR STARTED TASK\nCOMCIBPT DS    F    ADDRESS OF THE START OF THE CIB CHAIN FOR THIS TASK\n         MEND\n         SPACE 3\n         MACRO\n         IEZCIB\n         DS    0D\nCIBNEXT  DS    A    NEXT CIB\nCIBVERB  DS    C\n*\nCIBSTART EQU   X'04'\nCIBMODFY EQU   X'44'\nCIBSTOP  EQU   X'40'\nCIBMOUNT EQU   X'0C'\n*\nCIBLEN   DS    FL1\n         DS    XL4  RESERVED\nCIBASID  DS    0H  ADDRESS SPACE ID..VS2\nCIBTJID  DS    CL2  TSO JID\nCIBCONID DS    C  CONSOLE ID ISSUING COMM\n         DS    X  RESERVED\nCIBDATLN DS    H\nCIBDATA  DS    CL8\n         MEND\n         TITLE  '... DIRECT ACCESS VOLUME LISTER ...'\nDISKMAP  CSECT\n         SPACE 1\n*\n* WHEN ASSEMBLING DISKMAP SYS1.AMODGEN MUST BE CONCATENATED TO\n* SYS1.MACLIB.\n*\n* WHEN LINKEDITING DISKMAP IT MUST BE AUTHORIZED (SETCODE AC=1) AND BE\n* PLACED IN AN AUTHORIZED LIBRARY.  I.E. LNKLST00 LIBRARY\n* USE FOLLOWING JCL TO EXECUTE DISKMAP\n* //STEP EXEC PGM=DISKMAP,REGION=1024K (1024K FOR LARGE VTOCS)\n* //SYSPRINT DD SYSOUT=A\n* //ANYNAME DD UNIT=WHATEVER,VOL=SER=WHATEVER,DISP=OLD (DISKMAP WILL\n* LIST ANY DDCARD IN STEP EXCEPT FOR RESERVED DDNAMES SUCH AS STEPLIB,\n* STEPCAT ETC. AS MANY DDCARDS CAN BE INCLUDED AS NEEDED\n*\n* REFER TO THE SYSPRINT OUTPUT LISTINGS FOR PARM INFORMATION.\n* PARM INFORMATION DOESNOT HAVE TO BE SPECIFIED.\n*\n* DISKMAP WILL WORK ON MVS,SVS,VS1,MVT,MFT,PCP OPERATING SYSTEMS\n* IT ALSO SUPPORTS 3350S AS OF 01/77\n*\nR0       EQU   0                   WORK\nR1       EQU   1                   WORK\nR2       EQU   2                   WORK\nR3       EQU   3                   WORK\nR4       EQU   4                   WORK\nR5       EQU   5                   WORK\nR6       EQU   6                   -> FM1, FM4 DSCB, PDS ENTRY\nR7       EQU   7                   -> FM2 DSCB, IF ANY\nR8       EQU   8                   -> FM3, FM5 DSCB, IF ANY\nR9       EQU   9                   BASE REG 1\nR10      EQU   10                  BASE REG 2\nR11      EQU   11                  BASE REG 3\nR12      EQU   12                  BASE REG 4\nR13      EQU   13                  -> SAVE AREA\nR14      EQU   14                  LINK, WORK\nR15      EQU   15                  WORK\n         SPACE 1\nSPACE0AP EQU   X'01'\nSPACE1AP EQU   X'09'\nSPACE2AP EQU   X'11'\nSPACE3AP EQU   X'19'\nEJECTAP  EQU   X'89'\nSPACE0IM EQU   X'03'\nSPACE1IM EQU   X'0B'\nSPACE2IM EQU   X'13'\nSPACE3IM EQU   X'1B'\nEJECTIM  EQU   X'8B'\n         SPACE 1\nDEBUCBAD EQU   32\nCAMLSTLN EQU   148\nPDSBLKLN EQU   264\nNCPDFLT  EQU   10\nUTILPRIV EQU   5\nOPERPRIV EQU   9\n*FMT5EXT EQU   26                                     GDL-94\n         SPACE 1\nEMPTYOPT EQU   X'80'\nLSTDTOPT EQU   X'40'\nDUMPOPT  EQU   X'20'\nSDUMPOPT EQU   X'10'\nMAPOPT   EQU   X'08'\nPDSOPT   EQU   X'04'\nEXTNTOPT EQU   X'02'\nDIRFLAG  EQU   X'01'\n         SPACE 1\nVOLSOPT  EQU   X'80'\nLNCNTOPT EQU   X'40'\nDEBUGOPT EQU   X'20'\nRESETOPT EQU   X'10'\nNCPOPT   EQU   X'08'\nISAMOPT  EQU   X'04'\nJDATEOPT EQU   X'02'\nMODELOPT EQU   X'01'\n         EJECT\n         SPACE 5\n         SAVE  (14,12),,*\n         LR    R9,R15\n         USING DISKMAP,R9\n         LM    R10,R12,BASEVALS\n         USING DISKMAP,R9,R10,R11,R12\n         SPACE 1\n         LR    R2,R13\n         LA    R13,SAVEAREA\n         ST    R2,SAVEAREA+4\n         ST    R13,8(,R2)\n         SR    R2,R2\n         SPM   R2\n         B     INIT\n         SPACE 1\nBASEVALS DC    A(DISKMAP+X'1000',DISKMAP+X'2000',DISKMAP+X'3000')\n         EJECT ,\n         SPACE 3\nNEXTVOL  BAL   R14,FREECORE\n         XC    START0(LENGTH0),START0 WHOLESALE ZEROING OF CORE\n         SR    R0,R0\n         ST    R0,BUFPTR\n         MVC   CURLINES,=H'999'\n         MVI   HEADER,C' '\n         MVC   HEADER+1(L'HEADER-1),HEADER\n         LA    R1,LASTDS1\n         ST    R1,FIRSTDS1\n         LA    R1,HOOKSTRT\n         ST    R1,HOOKSTRT\n         MVC   HWMDS1,EFFS\n         NI    PARMOPT1,255-DIRFLAG\n         SPACE 1\nNEXTDD   TM    PARMOPT2,VOLSOPT\n         BO    NEXTDDCV\n         L     R1,DDLSTPTR\n         LTR   R1,R1\n         BZ    TIOTADV\n         LH    R0,DDNAMLEN\n         SH    R0,=H'8'\n         BM    RETURN\n         STH   R0,DDNAMLEN\n         MVC   VOLDDNAM,0(R1)\n         LA    R1,8(R1)\n         ST    R1,DDLSTPTR\n         B     NMAPSTRT\n         SPACE 1\nTIOTADV  L     R1,TIOTADDD\n         USING TIOENTRY,R1\n         SR    R0,R0\n         IC    R0,TIOELNGH\n         LTR   R0,R0\n         BZ    RETURN\n         MVC   VOLDDNAM,TIOEDDNM\n         AR    R1,R0\n         ST    R1,TIOTADDD\n         DROP  R1\n         SPACE 1\nNMAPSTRT LA    R0,8\n         LA    R1,NOMAPDDS\n         CLC   VOLDDNAM(4),=C'SYS0'     CHECK FOR DAIR DDNAME    P.A.S\n*        **** THIS IS CAUSED BY DAIR FOR THE CVOL CATALOG ***P.A.S.\n         BE    NEXTDD      IF FOUND, DO NOT MAP THIS VOL\nNMAPSRCH CLC   VOLDDNAM,0(R1)\n         BE    NOMAPFND\n         BXH   R1,R0,NMAPSRCH\n         SPACE 1\nNOMAPFND LA    R0,VOLDDNAM\n         CR    R0,R1\n         BNE   NEXTDD\n         B     TYPEDEV\n         SPACE 1\nNEXTDDCV LH    R0,CURVOL\n         CH    R0,NUMVOLS\n         BNL   RETURN\n         AH    R0,=H'1'\n         STH   R0,CURVOL\n         BAL   R14,CONVERT\n         MVC   CURVOLNM,CONVUNPK+10\n         SPACE 1\nTYPEDEV  DEVTYPE VOLDDNAM,DEVTYPE,DEVTAB,RPS\n         BXH   R15,R15,ERRNODD\n         CLI   DEVTYPE+2,UCB3DACC\n         BNE   ERRNOTDA\n         SPACE 1\n         MVC   DEVTABND,DEVTYPE+3\n         LA    R0,DEVENTLN\n         LA    R1,DEVTABLE\nDEVLOOP  CLC   DEVTABND(1),0(R1)\n         BE    DEVNTFND\n         BXH   R1,R0,DEVLOOP\n         SPACE 1\nDEVNTFND CLC   1(7,R1),DEVTABND+1\n         BE    ERRUNKDV\n         ST    R1,DEVTABPT\n         SPACE 1\n***** THIS SECTION WILL TELL THE DIFFERENCE BETWEEN THE 2 3340 MODELS.\n***** THE 3340 HAS 1 UCBTYPE FOR BOTH 35M/70M.\n***** THIS SECTION WILL LOOK FOR THE X'015D' NUMBER OF CYLS....35M\n*****   ELSE THE NUMBER OF CYLS (70M) WILL BE X'02BA'...\n         SPACE 1\n         CLI   DEVTYPE+3,X'0A'   TEST FOR A 3340-?\n         BNE   RVDISK    IF NOT 3340...BYPASS\n         CLC   DEVTYPE+8(2),=X'015D'    TEST FOR A 35M 3340 TYPE\n         BE    RVDISK   IF IT IS A 35MEG...NO NEED TO CHANGE DESC\n         MVC   6(2,R1),=C'70'   MOVE A \"70M\" ON DESC OF UNIT\n         SPACE 1\n*** THIS SECTION WILL DETERMINE IF THE DISK IS REAL, OR MASS STORAGE\n         SPACE 1\nRVDISK   TM    DEVTYPE+2,X'08'   TEST IF REAL/VIRT DASD\n         BZ    DEVCON   BIT=0, REAL     BIT=1, VIRTUAL\n         MVC   6(9,R1),=C'VIRT VOL.' MOVE \"VIRT\" DESC OF UNIT\n         SPACE 1\n******** THIS SECTION WILL LOAD THE CONSTANTS FROM THE \"DEVTYPE\" TO\n********   BE USED BY THE HOMEMADE CCHHR CONVERT ROUTINES.....\n*\nDEVCON   MVC   DEVCONV2(2),DEVTYPE+10    LOW ORDER  CC\n         MVC   DEVCONV1(1),DEVTYPE+11     HIGH ORDER CC\n         MVI   DEVCONV1+1,X'00'      FINISH HIGH ORDER CC\n         MVC   DEVCONV3(2),=X'0000'   ZERO HIGH ORDER HH\n         MVC   DEVCONV4(2),=X'0001'   LOW ORDER  HH\n         MVC   TRKSPCYL(2),DEVTYPE+10    TRKS/CYL\n         SR    R1,R1\n         LH    R1,DEVTYPE+8    LOAD  CYL PER VOLUME\n         MH    R1,DEVTYPE+10   MULT \"CYL/VOL\" BY \"TRKS/CYL\"\n         ST    R1,TRKSPVOL    RESULT IS  \"TRACKS/VOLUME\"     GDL-94\n*\n         MVC   DCBDDNAM+(PDSDCB-IHADCB),VOLDDNAM\n         MVC   DCBDDNAM+(VTOCDCB-IHADCB),VOLDDNAM\n         SPACE 1\n         RDJFCB MF=(E,OPENLIST)\n         TM    JFCBTSDM,X'20'\n         BO    ERRNOTDA\n         MVI   JFCBDSNM,X'04'\n         MVC   JFCBDSNM+1(43),JFCBDSNM\n         OI    JFCBTSDM,X'08'\n         SPACE 1\n         LH    R1,NCPPARM\n         SR    R0,R0\n         IC    R0,JFCNCP\n         MVI   JFCNCP,0\n         LTR   R0,R0\n         BZ    SAVENCP\n         LR    R1,R0\nSAVENCP  ST    R1,RENCP\n         OI    DCBOPTCD+(VTOCDCB-IHADCB),DCBOPTC\n         CH    R1,=H'1'\n         BNE   SETNCP\n         SR    R1,R1\n         NI    DCBOPTCD+(VTOCDCB-IHADCB),255-DCBOPTC\nSETNCP   STC   R1,DCBNCP+(VTOCDCB-IHADCB)\n         SPACE 1\n         OPEN  TYPE=J,MF=(E,OPENLIST)\n         TM    DCBOFLGS+(VTOCDCB-IHADCB),DCBOFOPN\n         BZ    ERRNOPEN\n         L     R2,DCBDEBAD+(VTOCDCB-IHADCB)\n         L     R2,DEBUCBAD(,R2)\n         SPACE 1\n********  THIS SECTION DELETED    4/1/75    P.A.S.\n********  IT WAS USED FOR DATA CELLS...NO LONGER SUPPORTED\n         SPACE 1\n         USING UCBOB,R2\nMAINUCB  MVC   VTOCTTR,UCBVTOC\n         MVC   VOLSERNO,UCBVOLI\n         MVC   VOLSTAT,UCBSTAT\n*        MVC   HEAD1UCB,UCBNAME     MOVE EBCIDIC UCB     KOHLS-03\n*                                                        KOHLS-03\n*       CONVERT BINARY UCB TO DISLAYABLE - UCBCHAN       KOHLS-03\n*                                                        KOHLS-03\n         MVI   TEMPFLD,X'00'                             KOHLS-03\n         MVZ   TEMPFLD,4(R2)                             KOHLS-03\n         TR    TEMPFLD,TRANTAB                           KOHLS-03\n         MVC   HEAD1UCB(1),TEMPFLD                       KOHLS-03\n         MVI   TEMPFLD,X'00'                             KOHLS-03\n         MVN   TEMPFLD,4(R2)                             KOHLS-03\n         TR    TEMPFLD,TRANTAB                           KOHLS-03\n         MVC   HEAD1UCB+1(1),TEMPFLD                     KOHLS-03\n*                                                        KOHLS-03\n         MVI   TEMPFLD,X'00'                             KOHLS-03\n         MVZ   TEMPFLD,5(R2)                             KOHLS-03\n         TR    TEMPFLD,TRANTAB                           KOHLS-03\n         MVC   HEAD1UCB+2(1),TEMPFLD                     KOHLS-03\n         MVI   TEMPFLD,X'00'                             KOHLS-03\n         MVN   TEMPFLD,5(R2)                             KOHLS-03\n         TR    TEMPFLD,TRANTAB                           KOHLS-03\n         MVC   HEAD1UCB+3(1),TEMPFLD                     KOHLS-03\n*                                                        KOHLS-03\n         TM    UCBSTAB,UCBBPUB    TEST FOR PUBLIC MOUNT\n         BNO   *+10\n         MVC   HEAD1MT,=C'PUBLIC  '\n         TM    UCBSTAB,UCBBPRV    TEST FOR PRIVATE\n         BNO   *+10\n         MVC   HEAD1MT,=C'PRIVATE '\n         TM    UCBSTAB,UCBBSTR   TEST FOR STORAGE\n         BNO   *+10\n         MVC   HEAD1MT,=C'STORAGE '\n         TM    UCBSTAB,UCBPGFL    TEST IF PAGING DEVIC\n         BNO   *+10\n         MVC   HEAD1MT,=C'*PAGING*'\n         TM    UCBSTAT,UCBSYSR    TEST FOR SYS-RES\n         BNO   *+10\n         MVC   HEAD1MT,=C'*SYSRES*'\n         SPACE 1\n         MVC   HEAD1MTR,=C'REMOV'\n         TM    UCBSTAT,UCBRESV\n         BNO   *+10\n         MVC   HEAD1MTR,=C'RSERV'\n         TM    UCBSTAT,UCBPRES\n         BNO   *+10\n         MVC   HEAD1MTR,=C'RSDNT'\n         SPACE 1\nCOMONUCB ST    R2,UCBADDR\n         DROP  R2\n         MVC   HEAD1VOL,VOLSERNO\n         MVC   HEADMID(81),HEAD1\n         SPACE 1\n         ENQ   MF=(E,ENQVTOC)\n         NI    DEQGATE,X'0F'\n         SPACE 1\n         LH    R1,VTOCTT\n         BAL   R14,TTCONVRT\n         MVC   VTOCCCHH,CCHH\n         MVI   VTDSCBTR+1,255\n         SPACE 1\n         SR    R4,R4\n         IC    R4,DCBKEYLE+(VTOCDCB-IHADCB)\n         AH    R4,DCBBLKSI+(VTOCDCB-IHADCB)\n         AH    R4,=H'20'\n         ST    R4,REBLKSIZ\n         L     R5,RENCP\n         ST    R5,RECOUNT\n         LR    R1,R4\n         MR    R0,R5\n         LR    R0,R1\n         ST    R0,REGETSIZ\n         GETMAIN EC,LV=(0),A=REBLOCK@\n         BXH   R15,R15,ERRNOCOR\n         L     R2,REBLOCK@\n         ST    R2,RENEXT@\n         LA    R3,VTOCDCB\n         SPACE 1\nREADINIT XC    0(20,R2),0(R2)\n         LA    R4,20(R2)\n         READ  (2),SF,(3),(4),MF=E\n         A     R2,REBLKSIZ\n         BCT   R5,READINIT\n         SPACE 1\n         LA    R4,DS4LEN\n         BAL   R14,GETCORE\n         ST    R3,FMT4AD\n         LR    R6,R3\n         USING DS4,R6\n         BAL   R14,VTOCREAD\n         BAL   R14,ABDUMP\n         CLI   DS4IDFMT,C'4'\n         MVI   BADDSTYP,C'4'\n         LR    R8,R6\n         BNE   ERRNOTFX\n         MVI   FM4COUNT+1,1\n         TM    DS4VTOCI,X'04'\n         BZ    *+8\n         OI    PARMOPT1,DIRFLAG\n         MVC   HOOKLCCH(28),HOOKINIT                 GDL-94\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         SR    R0,R0\n         IC    R0,DS4DEVDT\n         STH   R0,VTDSCBTR\n         TM    PARMOPT2,RESETOPT+DEBUGOPT\n         BNZ   *+10\n         MVC   HWMDS1,DS4HPCHR\n         MVC   HOOKLCCH(8),DS4VTOCE+2\n         LA    R2,DS4VTOCE\n         BAL   R14,F1EXTCNV\n         ST    R0,HOOKNTRK                           GDL-94\n         STH   R0,VTOCSIZE\n         MVC   HOOKLOTT,LOWTT                        GDL-94\n         MVC   HOOKHITT,HIGHTT                       GDL-94\n         MVI   HOOKTYPE,C'4'\n         MVC   HOOKSEQN,DS4VTOCE+1\n         MVC   HOOKIDPT,=A(VTOCMSG)\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         SPACE 1\n         LA    R4,DS5LEN\n         BAL   R14,GETCORE\n         ST    R3,FMT5AD\n         LR    R8,R3\n         USING DS5,R8\n         BAL   R14,VTOCREAD\n         BAL   R14,ABDUMP\n         CLI   DS5FMTID,C'5'\n         MVI   BADDSTYP,C'5'\n         BNE   ERRNOTFX\n*        MVI   FM5COUNT+1,1                             GDL-94\n         BAL   R14,INDEXCHK                         DAK 03/82\n         BAL   R14,F56HOOK\n*        SR    R0,R0                                    GDL-94\n*        ST    R0,DS5F5PTR                              GDL-94\n         DROP  R6,R8\n         EJECT\n         SPACE 3\nNEXTFM1  LA    R4,DS1LEN\n         BAL   R14,GETCORE\n         LR    R6,R3\n         USING DS1,R6\nREADFM1  BAL   R14,VTOCREAD\n         B     READFM5\n         SR    R1,R1\n         IC    R1,DS1FMTID\n         N     R1,=F'15'\n         CH    R1,=H'6'\n         BH    READFM1          SKIP INVALID FORMATS     GDL-2000\n*        BAL   R14,ABDUMP                                GDL-2000\n         SLL   R1,1                *2\n         LH    R2,FMXCOUNT(R1)\n         LA    R2,1(R2)\n         STH   R2,FMXCOUNT(R1)\n         LTR   R1,R1\n         BNZ   CHECKDS1\n         CLI   HWMINDIC,1\n         BE    READFM1\n         MVC   HWMNEW,DS1FDAD+3\n         MVI   HWMINDIC,1\n         B     READFM1\n         SPACE 1\nCHECKDS1 CLI   DS1FMTID,C'1'\n         BNE   READFM1\n         MVC   HWMNEW,DS1FDAD+3\n         MVI   HWMINDIC,1\n         L     R2,FIRSTDS1\n         L     R3,=A(FIRSTDS1-(DS1F1PTR-DS1))\nCOMPFM1  CLC   DS1DSNAM,DS1DSNAM-DS1(R2)\n         BL    INSRTFM1\n         LR    R3,R2\n         L     R2,DS1F1PTR-DS1(R2)\n         B     COMPFM1\nINSRTFM1 ST    R2,DS1F1PTR\n         ST    R6,DS1F1PTR-DS1(R3)\n         SR    R0,R0\n         ST    R0,DS1F3PTR\n         B     NEXTFM1\n         SPACE 1\n         DROP  R6\n         EJECT\n         SPACE 3\nREADFM5  BAL   R14,CLOSVTOC\n*        L     R6,FMT4AD                                  GDL-94\n*        USING DS4,R6                                     GDL-94\n*        L     R8,FMT5AD                                  GDL-94\n*        USING DS5,R8                                     GDL-94\n*        B     CHECKFM5                                   GDL-94\n         SPACE 1\n* DELETED NEXTFM5 THRU END OF READFM6                     GDL-94\n         EJECT ,\n         SPACE 3\nREADFM23 L     R6,=A(FIRSTDS1-(DS1F1PTR-DS1))\n         USING DS1,R6\nNEXTFM23 L     R6,DS1F1PTR\n         CLC   DS1DSNAM,LASTDS1\n         BE    VTOCUPDT\n         CLC   DS1PTRDS,ZEROES\n         BE    NEXTFM23\n         SPACE 2\n         LA    R4,DS3LEN\n         BAL   R14,GETCORE\n         LR    R8,R3\n         USING DS3,R8\n         LA    R2,DS1PTRDS\n         BAL   R14,OBTAIN\n         ST    R8,DS1F3PTR\n         SR    R0,R0\n         ST    R0,DS3F2PTR\n         TM    DS1DSORG,DCBDSGIS\n         BNO   CHECKFM3\n         USING DS2,R8\n         CLI   DS2FMTID,C'2'\n         BNE   CHECKFM3\n         CLC   DS2PTRDS,ZEROES\n         BE    NEXTFM23\n         LA    R4,DS3LEN\n         BAL   R14,GETCORE\n         ST    R3,DS2F3PTR\n         LA    R2,DS2PTRDS\n         BAL   R14,OBTAIN\n         ST    R8,DS3F2PTR-DS3(,R3)\n         LR    R8,R3\n         USING DS3,R8\n         SPACE 1\nCHECKFM3 CLI   DS3FMTID,C'3'\n         BE    NEXTFM23\n         MVI   BADDSTYP,C'3'\n         B     ERRNOTFX\n         SPACE 1\n         DROP  R6,R8\n         EJECT ,\n         SPACE 1\nVTOCUPDT TM    PARMOPT2,RESETOPT+DEBUGOPT\n         BZ    VTOCPRT\n         TM    PARMOPT1,DIRFLAG\n         BO    VTOCPRT\n         OI    OPENFLAG,OPENUPDT\n         OPEN  TYPE=J,MF=(E,OPENLIST)\n         TM    DCBOFLGS+(VTOCDCB-IHADCB),DCBOFOPN\n         BO    *+8\n         BAL   R14,ABEND\n         NI    OPENFLAG,255-OPENUPDT\n         SPACE 1\nVTOCUPRD READ  VTOCDECB,SF,MF=E\n         CHECK VTOCDECB\n         LA    R1,=CL11'VTOC READ.'\n         BAL   R14,SYNADCHK\n         MVC   DS4FDAD+(CAMLIST-DS4),DCBFDAD+(VTOCDCB-IHADCB)\n         SPACE 1\n         CLI   DS4IDFMT+(CAMLIST-DS4),C'4'\n         MVI   BADDSTYP,C'4'\n         LA    R8,CAMLIST\n         BNE   ERRNOTFX\n         MVC   HWMOLD,DS4HPCHR+(CAMLIST-DS4)\n         MVC   DS4HPCHR+(CAMLIST-DS4),HWMNEW\n         TM    PARMOPT2,DEBUGOPT\n         BO    VTOCUPCL\n         SPACE 1\n         WRITE VTOCDECB,SF,MF=E\n         CHECK VTOCDECB\n         LA    R1,=CL11'VTOC WRITE.'\n         BAL   R14,SYNADCHK\n         L     R1,FMT4AD\n         MVC   0(DS4LEN,R1),CAMLIST\n         SPACE 1\nVTOCUPCL CLOSE (VTOCDCB)\n         BAL   R14,DEQVTOC\n         SPACE 1\n         MVC   BUF+1(31),=C'VTOC RESET INFO:  OLD FMT1 HWM='\n         TM    PARMOPT2,DEBUGOPT\n         BZ    *+10\n         MVC   BUF+6(5),=C'DEBUG'\n         MVI   BUF+36,C'.'\n         MVI   BUF+41,C'.'\n         UNPK  TRAREA,HWMOLD(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+32(4),TRAREA\n         MVC   BUF+37(4),TRAREA+4\n         MVC   BUF+42(2),TRAREA+8\n         SPACE 1\n         MVC   BUF+47(13),=C'NEW FMT1 HWM='\n         MVI   BUF+64,C'.'\n         MVI   BUF+69,C'.'\n         UNPK  TRAREA,HWMNEW(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+60(4),TRAREA\n         MVC   BUF+65(4),TRAREA+4\n         MVC   BUF+70(2),TRAREA+8\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         EJECT\n         SPACE 1\nVTOCPRT  BAL   R14,DEQVTOC\n         L     R6,FMT4AD\n         USING DS4,R6\n         SPACE 1\n         MVI   BUF+1,C' '\n         MVC   BUF+2(131),BUF+1    CLEAR OUTPUT PRINT LINE\n         SPACE 1\n         MVC   BUF+1(19),=C'DEVICE DESCRIPTION:'\n         MVC   BUF+22(5),=C'TYPE='\n         L     R2,DEVTABPT\n         MVC   BUF+27(15),1(R2)\n         SPACE 1\n         MVC   BUF+44(7),=C'NOCYLS='\n         LA    R2,DS4DEVSZ\n         BAL   R14,CONVERT2\n         MVC   BUF+51(5),CONVERTD\n         SPACE 1\n         MVC   BUF+58(9),=C'TRKS/CYL='\n         LA    R2,DS4DEVSZ+2\n         BAL   R14,CONVERT2\n         MVC   BUF+67(5),CONVERTD\n         SPACE 1\n         MVC   BUF+74(8),=C'TRKSIZE='\n         LA    R2,DS4DEVTK\n         BAL   R14,CONVERT2\n         MVC   BUF+82(5),CONVERTD\n         SPACE 1\n         MVC   BUF+89(12),=C'MAX BLKSIZE='\n         LA    R2,DEVTYPE+6\n         BAL   R14,CONVERT2\n         MVC   BUF+101(5),CONVERTD\n         SPACE 1\n         MVC   BUF+108(9),=C'DSCB/TRK='\n         LA    R2,DS4DEVDT\n         BAL   R14,CONVERT1\n         MVC   BUF+117(3),CONVERTD\n         SPACE 1\n         MVC   BUF+122(8),=C'PDS/TRK='\n         LA    R2,DS4DEVDB\n         BAL   R14,CONVERT1\n         MVC   BUF+130(3),CONVERTD\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+1(11),=C'VTOC DESCR:'\n         MVC   BUF+13(7),=C'R/W=0/0'\n         CLI   DS4SECLV,0\n         BE    VTPRDSCB\n         UNPK  TRAREA,DS4SECLV(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+17(1),TRAREA\n         MVC   BUF+19(1),TRAREA+1\n         SPACE 1\nVTPRDSCB MVC   BUF+23(6),=C'DSCBS='\n         SR    R0,R0\n         IC    R0,DS4DEVDT\n         MH    R0,VTOCSIZE\n         BAL   R14,CONVERT\n         MVC   BUF+29(5),CONVERTD\n         SPACE 1\n         MVC   BUF+35(6),=C'AVAIL='\n         LA    R2,DS4DSREC\n         BAL   R14,CONVERT2\n         MVC   BUF+41(5),CONVERTD\n         SPACE 1\n         MVC   BUF+47(9),=C'VTOC EXT='\n         MVI   BUF+60,C'.'\n         MVI   BUF+65,C'-'\n         MVI   BUF+70,C'.'\n         UNPK  TRAREA,DS4VTOCE+2(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+56(4),TRAREA\n         MVC   BUF+61(4),TRAREA+4\n         UNPK  TRAREA,DS4VTOCE+6(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+66(4),TRAREA\n         MVC   BUF+71(4),TRAREA+4\n         SPACE 1\n         MVC   BUF+78(9),=C'FMT1 HWM='\n         MVI   BUF+91,C'.'\n         MVI   BUF+96,C'.'\n         UNPK  TRAREA,DS4HPCHR(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+87(4),TRAREA\n         MVC   BUF+92(4),TRAREA+4\n         MVC   BUF+97(2),TRAREA+8\n         SPACE 1\n         MVC   BUF+101(7),=C'NUMALT='\n         LA    R2,DS4NOATK\n         BAL   R14,CONVERT2\n         MVC   BUF+108(5),CONVERTD\n         SPACE 1\n         L     R2,TRKSPVOL     LOAD TRKS PER VOL TOTAL       GDL-94\n         SH    R2,DS4NOATK     SUBTRACT OFF ALTERNATES LEFT\n         ST    R2,TRKSPVOL     TOTAL PER VOL = OLD TOT - ALTS GDL-94\n         SPACE 1\n         MVC   BUF+114(8),=C'NEXTALT='\n         UNPK  TRAREA,DS4HCCHH(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+122(4),TRAREA\n         MVI   BUF+126,C'.'\n         MVC   BUF+127(4),TRAREA+4\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+1(16),=C'AVAILABLE SPACE:'\n         L     R0,AVAILSPC                               GDL-94\n         BAL   R14,CONVERT\n         MVC   BUF+18(6),CONVEDIT+6                      GDL-94\n         SPACE 1\n         MVC   BUF+25(9),=C'TRACKS IN'                   GDL-94\n         LH    R0,AVAILEXT\n         BAL   R14,CONVERT\n         MVC   BUF+35(4),CONVEDIT+8                      GDL-94\n         SPACE 1\n         MVC   BUF+40(18),=C'EXTENTS, INCLUDING'         GDL-94\n         LH    R0,AVAILCYL\n         BAL   R14,CONVERT\n         MVC   BUF+59(5),CONVEDIT+7                      GDL-94\n         SPACE 1\n         MVC   BUF+65(34),=C'FULL CYLINDERS.  LARGEST EXTENT IS' GDL-94\n         LH    R0,F5LARGST                                GDL-94\n         BAL   R14,CONVERT                                GDL-94\n         MVC   BUF+100(5),CONVEDIT+7                      GDL-94\n         SPACE 1\n         MVC   BUF+106(14),=C'CYLINDERS PLUS'             GDL-94\n         LH    R2,F5LARGST      LARGEST NUM CYL           GDL-94\n         MH    R2,TRKSPCYL      TIMES NUM TRKS PER CYL    GDL-94\n         L     R0,F5LARGTT      LARGEST NUM TRACKS        GDL-94\n         SR    R0,R2            RESULT IS ADDITIONAL TRKS GDL-94\n         BAL   R14,CONVERT                                GDL-94\n         MVC   BUF+121(3),CONVEDIT+9                      GDL-94\n         SPACE 1\n         MVC   BUF+125(7),=C'TRACKS.'                     GDL-94\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         TM    DS4VSAM,X'80'     TEST FOR VSAM OWNERSHIP BIT TURNED ON\n         BZ    NOVSAM            IF NOT ON....NOT OWNED BY VSAM\n         MVC   BUF+2(41),=C'*** THIS PACK IS OWNED BY A VSAM CATALOG '\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         CLC   DS4VTOCE+24(2),ZEROES      CHECK FOR A \"CRA\" POINTER\n         BE    NOVSAM      IF ZERO, NO POINTER....NO \"CRA\"\n         MVC   CRATRACK(2),DS4VTOCE+24  MOVE CRA ADDRESS FOR ALIGNMENT\n         MVC   BUF+2(41),=C'*** THIS PACK CONTAINS A C.R.A. AT TRACK:'\n         LH    R0,CRATRACK     LOAD UP 2 BYTE CRA ADDRESS\n         BAL   R14,CONVERT    GO CONVERT TO EBCIDIC\n         MVC   BUF+43(5),CONVEDIT+7     MOVE TO PRINT LINE\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\nNOVSAM   EQU   *\n         TM    PARMOPT1,DIRFLAG\n         BZ    VTOCTYPE                                   DAK 03/82\n         MVC   BUF+1(59),=C'*** WARNING - POSSIBLE VTOC ERRORS EXIST ONX\n                THIS VOLUME ***'\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 3\nVTOCTYPE EQU   *           ADDED 12/81 KOWNACKI\n         TM    DS4VTOCI,DS4IVTOC             IS INDEXED VTOC BIT ON?\n         BZ    NODIRFLG\n         MVC   BUF+2(39),=C'*** THIS PACK CONTAINS AN INDEXED VTOC '\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 3\nNODIRFLG TM    PARMOPT1,DUMPOPT+SDUMPOPT+DIRFLAG\n         BZ    FM1PRINT\n         SPACE 1\n         LR    R2,R6\n         LA    R3,DS4FDAD\n         BAL   R14,DUMPDSCB\n         SPACE 1\n*                             DELETE FROM HERE THRU DMPF6TST   GDL-94\n         SPACE 1\nENDUMPF6 MVI   BUF,SPACE2IM\n         BAL   R14,PRINT\n         SPACE 1\n*        DROP  R6,R8                                           GDL-94\n         EJECT\nFM1PRINT L     R6,=A(FIRSTDS1-(DS1F1PTR-DS1))\n         USING DS1,R6\n         LA    R1,HEAD1A\n         ST    R1,BUFPTR\n         PUT   PRINTDCB,HEADER1\n         PUT   PRINTDCB,HEADER2\n         LH    R0,CURLINES\n         AH    R0,=H'2'\n         STH   R0,CURLINES\n         SPACE 2\nFM1PRLOP L     R6,DS1F1PTR\n         CLC   DS1DSNAM,LASTDS1\n         BE    FM1PREND\n         SR    R7,R7\n         L     R8,DS1F3PTR\n         USING DS3,R8\n         LTR   R8,R8\n         BZ    FM1GOHK\n         CLI   DS3FMTID,C'3'\n         BE    FM1GOHK\n         LR    R7,R8\n         USING DS2,R7\n         L     R8,DS2F3PTR\nFM1GOHK  BAL   R14,F13HOOK\n         LA    R2,1\n         TM    PARMOPT1,EXTNTOPT\n         BZ    FM1TSTIS\n         LH    R1,NUMEXT\n         LA    R2,2(R1,R2)\nFM1TSTIS LTR   R7,R7\n         BZ    FM1TSTDP\n         TM    PARMOPT2,ISAMOPT\n         BZ    *+8\n         AH    R2,=H'4'\nFM1TSTDP TM    PARMOPT1,DUMPOPT\n         BZ    FM1LKAHD\n         AH    R2,=H'4'\n         LTR   R7,R7\n         BZ    *+8\n         AH    R2,=H'4'\n         LTR   R8,R8\n         BZ    FM1LKAHD\n         AH    R2,=H'4'\nFM1LKAHD BAL   R14,PRLKAHED\n         SPACE 1\n         MVC   L1DSNAME,DS1DSNAM\n         SPACE 1\nFM1VOLSR MVC   L1SERIAL,DS1DSSN\n         SPACE 1\nFM1SECUR MVC   L1SECUR,=C'-/-'\n         TM    DS1DSIND,X'40'  TEST FOR RACF PROTECTED?    HNB*DED\n         BZ    FM1PSWD      IF NO ....TRY PASSWORD         HNB*DED\n         MVC   L1SECUR,=C'RAC' RACF PROTECTED              HNB*DED\n         B     FM1CREDT        AND FORMAT CREATE DATE      HNB*DED\nFM1PSWD  TM    DS1DSIND,X'10'  TEST FOR PASSWORD FOR R & W\n         BZ    FM1CREDT     IF NO BITS....NO PASSWORD\n         MVI   L1SECUR+2,C'W'      AT LEAST \"WRITE\" IF ANY\n         TM    DS1DSIND,X'04'      TEST FOR ONLY \"WRITE\"..READ OK\n         BO    FM1CREDT       IF ON,  \"READ\" NOT PROTECTED\n         MVI   L1SECUR,C'R'      INDICATE \"READ\" PROTECT\n         SPACE 1\nFM1CREDT LA    R2,DS1CREDT\n         LA    R3,L1CREDT\n         BAL   R14,DATEDIT\n         SPACE 1\n         LA    R2,DS1EXPDT\n         LA    R3,L1EXPDT\n         BAL   R14,DATEDIT\n         SPACE 1\n         LA    R2,DS1REFD\n         LA    R3,L1REFDT\n         BAL   R14,DATEDIT\n         SPACE 1\nFM1DSORG LA    R2,L1DSORG\n         TM    DS1DSORG,DCBDSGIS\n         BZ    FM1DSO1\n         MVC   0(2,R2),=C'IS'\n         LA    R2,2(R2)\nFM1DSO1  TM    DS1DSORG,DCBDSGPS\n         BZ    FM1DSO2\n         MVC   0(2,R2),=C'PS'\n         LA    R2,2(R2)\nFM1DSO2  TM    DS1DSORG,DCBDSGDA\n         BZ    FM1DSO3\n         MVC   0(2,R2),=C'DA'\n         LA    R2,2(R2)\nFM1DSO3  TM    DS1DSORG,DCBDSGCX\n         BZ    FM1DSO6              AXC\n         MVC   0(2,R2),=C'CX'\n         LA    R2,2(R2)\n*FM1DSO4 TM    DS1DSORG,=X'08'      AXC\n*        BZ    FM1DSO5              AXC\n*        MVC   0(2,R2),=C'CQ'       AXC\n*        LA    R2,2(R2)             AXC\n*FM1DSO5 TM    DS1DSORG,=X'04'      AXC\n*        BZ    FM1DSO6              AXC\n*        MVC   0(2,R2),=C'MQ'       AXC\n*        LA    R2,2(R2)             AXC\nFM1DSO6  TM    DS1DSORG,DCBDSGPO\n         BZ    FM1DSO7\n         MVC   0(2,R2),=C'PO'\n         LA    R2,2(R2)\nFM1DSO7  TM    DS1DSORG+1,DCBDSGGS\n         BZ    FM1DSO8\n         MVC   0(2,R2),=C'GS'\n         LA    R2,2(R2)\nFM1DSO8  TM    DS1DSORG+1,DCBDSGTX\n         BZ    FM1DSO9\n         MVC   0(2,R2),=C'TX'\n         LA    R2,2(R2)\nFM1DSO9  TM    DS1DSORG+1,DCBDSGTQ\n         BZ    FM1DSO10\n         MVC   0(2,R2),=C'TQ'\n         LA    R2,2(R2)\nFM1DSO10 TM    DS1DSORG+1,DCBACBM\n         BZ    FM1DSO11\n         MVC   0(2,R2),=C'AM'\n         LA    R2,2(R2)\nFM1DSO11 TM    DS1DSORG+1,DCBDSGTR\n         BZ    FM1DSO12\n         MVC   0(2,R2),=C'TR'\n         LA    R2,2(R2)\nFM1DSO12 TM    DS1DSORG,DCBDSGU\n         BZ    *+8\n         MVI   0(R2),C'U'\n         SPACE 1\n         LA    R2,L1RECFM\n         TM    DS1RECFM,DCBRECU\n         BZ    FM1RECF1\n         MVI   0(R2),C'U'\n         BO    FM1RECF1\n         TM    DS1RECFM,DCBRECF\n         MVI   0(R2),C'F'\n         BO    FM1RECF1\n         MVI   0(R2),C'V'\nFM1RECF1 LA    R2,1(R2)\n         TM    DS1RECFM,DCBRECTO\n         BZ    FM1RECF2\n         MVI   0(R2),C'T'\n         LA    R2,1(R2)\nFM1RECF2 TM    DS1RECFM,DCBRECBR\n         BZ    FM1RECF3\n         MVI   0(R2),C'B'\n         LA    R2,1(R2)\nFM1RECF3 TM    DS1RECFM,DCBRECSB\n         BZ    FM1RECF4\n         MVI   0(R2),C'S'\n         LA    R2,1(R2)\nFM1RECF4 TM    DS1RECFM,DCBRECCC\n         BNM   FM1BLKSZ\n         TM    DS1RECFM,DCBRECCA\n         MVI   0(R2),C'A'\n         BO    FM1BLKSZ\n         MVI   0(R2),C'M'\n         SPACE 1\nFM1BLKSZ LA    R2,DS1BLKL\n         BAL   R14,CONVERT2\n         MVC   L1BLKSIZ,CONVEDIT+7\n         SPACE 1\n         LA    R2,DS1LRECL\n         BAL   R14,CONVERT2\n         MVC   L1LRECL,CONVEDIT+7\n         SPACE 1\n         LA    R2,DS1KEYL\n         BAL   R14,CONVERT1\n         MVC   L1KEYLEN,CONVEDIT+9\n         SPACE 1\n         UNPK  TRAREA,DS1OPTCD(8)\n         TR    TRAREA,TRTABLE\n         MVC   L1OPTCD,TRAREA\n         SPACE 1\n         L     R0,F1TRKAL\n         BAL   R14,CONVERT\n         MVC   L1TRKAL,CONVEDIT+7\n         SPACE 1\n         CLC   DS1LSTAR(5),ZEROES\n         BE    FM1NOEPV\n         LH    R0,DS1LSTAR\n         N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTE   LMN-CBT\n         CLI   DS1LSTAR+2,0\n         BE    *+8\n         AH    R0,=H'1'\n         BAL   R14,CONVERT\n         MVC   L1TRKUS,CONVEDIT+7\n         SPACE 1\nFM1NOEPV LA    R2,DS1NOEPV\n         BAL   R14,CONVERT1\n********************************** START *********** SMA 3/88  CHANGED\n         MVC   L1NOEPV,CONVEDIT+9\n**********************************  END  *********** SMA 3/88  CHANGED\n         SPACE 1\n         LA    R2,DS1SCALO+1\n         BAL   R14,CONVERT3\n         MVC   L1SECQU,CONVEDIT+7\n         C     R0,=F'99999'\n         BNH   FM1SCALO\n         MVC   L1SECQU,STARS\n         SPACE 1\nFM1SCALO TM    DS1SCALO,X'C0'\n         BNO   FM1SCAL1\n         MVI   L1TYP,C'C'\n         B     FM1SCAL4\nFM1SCAL1 BNZ   FM1SCAL2\n         MVI   L1TYP,C'A'\n         B     FM1SCAL4\nFM1SCAL2 TM    DS1SCALO,X'80'\n         BO    FM1SCAL3\n         MVI   L1TYP,C'B'\n         B     FM1SCAL4\nFM1SCAL3 MVI   L1TYP,C'T'\nFM1SCAL4 LA    R2,L1TYP+1\n         TM    DS1SCALO,X'08'\n         BZ    FM1SCAL5\n         MVI   0(R2),C'C'\n         LA    R2,1(,R2)\nFM1SCAL5 TM    DS1SCALO,X'04'\n         BZ    FM1SCAL6\n         MVI   0(R2),C'M'\n         LA    R2,1(,R2)\nFM1SCAL6 TM    DS1SCALO,X'02'\n         BZ    FM1SCAL7\n         MVI   0(R2),C'A'\n         LA    R2,1(,R2)\nFM1SCAL7 TM    DS1SCALO,X'01'\n         BZ    FM1OPTS\n         MVI   0(R2),C'R'\n         SPACE 1\nFM1OPTS  MVI   BUF,SPACE1AP\n         TM    PARMOPT1,EMPTYOPT     TEST FOR \"EMPTY\" OPTION\n         BO    FM1EM1         IF REQUEST GO TO PROCESS IT\n         TM    PARMOPT2,MODELOPT   TEST FOR \"MODEL\" OPTION\n         BZ    FM1SKTS0   IF NOT MODEL BYPASS..\n*\nFM1EM1   CLC   DS1LSTAR(5),ZEROES   TEST FOR TTR ZEROED...NOT VALID\n         BE    FM1DONXT              IF ALL ZERO...BYPASS\n         CLI   DS1LSTAR+2,0         TEST FOR A TTR OF RECORD ZERO\n         BNE   FM1DONXT             IF NOT ZERO, NON-EMPTY DSN\n         CLC   NUMEXT,ZEROES        TEST FOR ANY VALID EXTENTS\n         BNE   FM1EM2              IF NOT ZERO...EMPTY DATASET.\n         TM    PARMOPT2,MODELOPT    CHECK FOR \"MODEL\" OPTION SELECTED\n         BO    FM1SKTS0      IF SELECTED...PRINT THIS ENTRY\n         B     FM1DONXT    IF NOT MODEL...DON'T INCLUDE IT AS \"EMPTY\"\nFM1EM2   TM    PARMOPT1,EMPTYOPT     CHECK FOR OPTION OF \"EMPTY\"\n         BZ    FM1DONXT  IF NOT SELECTED...DON'T PRINT\n*\nFM1SKTS0 EQU  *\n         TM    PARMOPT1,DUMPOPT\n         BO    FM1XTRAL\n         TM    PARMOPT1,EXTNTOPT\n         BZ    FM1SKTS1\n         CLC   NUMEXT,ZEROES\n         BNE   FM1XTRAL\nFM1SKTS1 TM    PARMOPT2,ISAMOPT\n         BZ    FM1SKTS2\n         LTR   R7,R7\n         BNZ   FM1XTRAL\nFM1SKTS2 TM    PARMOPT1,PDSOPT\n         BZ    FM1GOPRT\n         TM    DS1DSORG,DCBDSGPO\n         BZ    FM1GOPRT\nFM1XTRAL MVI   BUF,SPACE2AP\nFM1GOPRT BAL   R14,PRINT\n         SPACE 1\nFM1SKTS3 EQU   *\n         TM    PARMOPT1,DUMPOPT\n         BZ    FM1EXDMP\n         LA    R2,DS1\n         LA    R3,DS1FDAD\n         BAL   R14,DUMPDSCB\n         LTR   R7,R7\n         BZ    FM1DMP3\n         LA    R2,DS2\n         LA    R3,DS2FDAD\n         BAL   R14,DUMPDSCB\nFM1DMP3  LTR   R8,R8\n         BZ    FM1EXDMP\n         LA    R2,DS3\n         LA    R3,DS3FDAD\n         BAL   R14,DUMPDSCB\n         SPACE 1\nFM1EXDMP TM    PARMOPT1,EXTNTOPT\n         BZ    FM1PDSDP\n         CLC   NUMEXT,ZEROES\n         BE    FM1PDSDP\n         MVC   BUF+10(L'HEAD2DAT),HEAD2DAT\n         MVI   BUF,SPACE0AP\n         BAL   R14,PRINT\n         MVC   BUF+10(L'HEAD2UND),HEAD2UND\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         L     R2,LISTEXT\n         LA    R3,BUF+9\n         SR    R4,R4\n         MVI   EXPFLAG,X'FF'\n         SPACE 1\nFM1EXLP  BAL   R14,EXFORMAT\n         LA    R4,4(,R4)\n         L     R2,LISTEXT(R4)\n         LTR   R2,R2\n         BZ    FM1EXLST\n         BAL   R14,PRINT\n         B     FM1EXLP\nFM1EXLST MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\nFM1PDSDP TM    PARMOPT1,PDSOPT\n         BZ    FM1ISDMP\n         TM    DS1DSORG,DCBDSGPO\n         BZ    FM1ISDMP\n         LA    R2,DS1\n         BAL   R14,PDSLIST\n         SPACE 1\nFM1ISDMP TM    PARMOPT2,ISAMOPT\n         BZ    FM1DONXT\n         BAL   R14,ISAMLIST\nFM1DONXT B     FM1PRLOP\n*\n* G.D.F. ROUTINE TO CONVERT INPUT & OUTPUT DATES TO\n* SAME FORMAT AS CREDAT & EXPDAT FOR DATEDIT ROUTINE\n*\nBINARY   UNPK  DASAVE(3),0(2,R2)  G.D.F.\n         PACK  DATEWORD,DASAVE(2)  G.D.F.\n         CVB   R1,DATEWORD    G.D.F.\n         STC   R1,0(R2)       G.D.F.\n         ZAP   DATEWORD,1(2,R2)  G.D.F.\n         CVB   R1,DATEWORD    G.D.F.\n         STH   R1,DATEWORD    G.D.F.\n         MVC   1(2,R2),DATEWORD  G.D.F.\n         BR    R14            G.D.F.\n*\n* END OF BINARY CONVERT ROUTINE\n*\n         SPACE 2\nFM1PREND MVI   BUF,SPACE1IM\n         BAL   R14,PRINT\n         MVI   BUF+1,C' '          MOVE TO BLANK OUT LINE\n         MVC   BUF+2(131),BUF+1    BLANK OUT PRINT LINE\n         MVC   BUF+49(14),=C'<<<<< END VTOC'\n         LH    R0,FM1COUNT\n         BAL   R14,CONVERT\n         MVC   BUF+64(4),CONVEDIT+8\n         MVC   BUF+69(15),=C'DATA SETS >>>>>'\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         SPACE 1\n         TM    PARMOPT1,MAPOPT+DIRFLAG\n         BZ    MAPEND\n         SPACE 1\n         DROP  R6,R7,R8\n         EJECT\nMAPPRINT MVC   CURLINES,=H'999'\n         LA    R0,HEAD2A\n         ST    R0,BUFPTR\n         MVI   HEADMID,C' '\n         MVC   HEADMID+1(81),HEADMID\n         MVC   HEAD2VOL,VOLSERNO\n         MVC   HEADMID(40),HEAD2\n         L     R6,HOOKSTRT\n         USING EXTENT,R6\n         L     R4,=F'-1'\n         SR    R5,R5\n         MVI   EXPFLAG,0\n         SPACE 1\nMAPPRLOP CLC   EXTLCCHH,HOOKEND\n         BE    MAPPREND\n         CLC   EXTHITT,TRKSPVOL\n         BNL   MAPINVAL\n         CLC   EXTLOTT,EXTHITT\n         BH    MAPINVAL\n         CLI   EXTTYPE,X'80'\n         BE    MAPGETEX\n*                         R4 CONTAINS PREVIOUS HIGH TRACK  GDL-94\n         L     R0,EXTLOTT                                  GDL-94\n*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94\n         SR    R0,R4\n         S     R0,=F'1'\n         BZ    MAPTRGET\n         BP    MAPTRMIS\n         BAL   R14,CONVERT\n         MVC   BUF+1(5),CONVEDIT+7\n         MVC   BUF+7(14),=C'TRACKS OVERLAP'\n         C     R4,EXTHITT                                  GDL-94\n         BNL   *+8\nMAPTRGET L     R4,EXTHITT                                  GDL-94\n*        N     R4,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94\n         A     R5,EXTNOTRK                                 GDL-94\n*        N     R5,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94\n         B     MAPGETEX\n         SPACE 1\nMAPINVAL MVC   BUF+7(14),=C'INVALID EXTENT'\n         B     MAPGETEX\n         SPACE 1\nMAPTRMIS BAL   R14,CONVERT\n         MVC   BUF+1(5),CONVEDIT+7\n         MVC   BUF+7(14),=C'TRACKS MISSING'\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         B     MAPTRGET\n         SPACE 1\nMAPGETEX LA    R2,EXTENT\n         LA    R3,BUF+22\n         BAL   R14,EXFORMAT\n         BAL   R14,PRINT\n         L     R6,EXTPTR\n         B     MAPPRLOP\n         SPACE 3\n*                 R4 IS HIGEST TRACK FOUND                 GDL-94\n*                 R5 IS TOTAL NUMBER OF TRACKS PROCESSED   GDL-94\nMAPPREND L     R0,TRKSPVOL                                 GDL-94\n         SR    R0,R5                                       GDL-94\n         S     R0,=F'1'\n         BNP   MAPNOMIS\n         BAL   R14,CONVERT\n         MVC   BUF+1(5),CONVEDIT+7\n          MVC  BUF+7(40),=C'TRACKS MISSING OR ASSIGNED AS ALTERNATES'\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\nMAPNOMIS MVI   BUF,SPACE1IM\n         BAL   R14,PRINT\n*        N     R5,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94\n         LR    R0,R5\n         BAL   R14,CONVERT\n         MVC   BUF+59(6),CONVEDIT+6                         GDL-94\n         MVC   BUF+67(20),=C'TRACKS ACCOUNTED FOR'          GDL-94\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         MVC   BUF+59(28),=C'<<<<< END OF TRACK MAP >>>>>'\n         MVI   BUF,SPACE0AP\n         BAL   R14,PRINT\nMAPEND   B     NEXTVOL\n         SPACE 1\n         DROP  R6\n         EJECT\nERRNODD  TM    PARMOPT2,VOLSOPT\n         BNO   NEXTDD\n         MVC   BUF+41(19),=C'CANNOT FIND DD CARD'\n         B     ERRCON1\n         SPACE 1\nERRNOTDA TM    PARMOPT2,VOLSOPT\n         BNO   NEXTDD\n         MVC   BUF+41(27),=C'DEVICE IS NOT DIRECT ACCESS'\n         B     ERRCON1\n         SPACE 1\nERRUNKDV MVC   BUF+41(19),=C'UNKNOWN DEVICE TYPE'\n         B     ERRCON1\n         SPACE 1\nERRNOPEN MVC   BUF+41(27),=C'ATTEMPT TO OPEN VTOC FAILED'\n         B     ERRCON1\n         SPACE 1\nERRCON1  MVC   BUF+10(28),=C'ERROR CONCERNING \"VOLUME01\":'\n         MVC   BUF+28(8),VOLDDNAM\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         LA    R0,4\n         B     ERRCODST\n         SPACE 1\nERRNOTFX MVC   BUF+41(33),=C'BAD DSCB - SHOULD HAVE BEEN TYPE'\n         MVC   BUF+75(1),BADDSTYP\n         LR    R2,R8\n         B     ERRCON2\n         SPACE 1\nERRNOCOR MVC   BUF+41(41),=C'INSUFFICIENT MEMORY TO COMPLETE VTOC LIST'\n         SR    R2,R2\n         B     ERRCON2\n         SPACE 1\nERRCON2  BAL   R14,CLOSVTOC\n         BAL   R14,DEQVTOC\n         MVC   BUF+10(28),=C'ERROR CONCERNING \"VOLUME01\":'\n         MVC   BUF+28(8),VOLDDNAM\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         LTR   R2,R2\n         BZ    ERRNODMP\n         LA    R3,DS4FDAD-DS4(R2)\n         BAL   R14,DUMPDSCB\nERRNODMP LA    R0,8\nERRCODST C     R0,RETCODE\n         BL    *+8\n         ST    R0,RETCODE\n         B     NEXTVOL\n         EJECT\n*\n*        SUBROUTINES START HERE\n*\nPDSLIST  ST    R14,PDSAVE\n         STM   R2,R6,PDSAVE+4\n         USING DS1,R2\n         MVC   JFCBDSNM,DS1DSNAM\n         SR    R0,R0\n         IC    R0,DS1NOBDB\n         BAL   R14,CONVERT\n         DROP  R2\n         MVC   PDSVAL4,CONVEDIT+9\n         SPACE 1\n         OPEN  (PDSDCB),TYPE=J\n         L     R3,PDSBLKAD+4\n         READ  PDSDECB,SF,,(3),MF=E\n         SPACE 1\n         SR    R0,R0\n         STH   R0,PDSBYTCT\n         STH   R0,PDSBLKAL\n         STH   R0,PDSBLKUS\n         STH   R0,PDSMEMCT\nPDSNEXT  LH    R0,PDSBYTCT\n         LTR   R0,R0\n         BP    PDSPRINT\n         CHECK PDSDECB\n         SPACE 1\n         CLI   SYNADFLG,0\n         BE    PDSREDOK\n         MVC   BUF+28(11),=CL11'DIRECTORY.'\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         CLI   SYNADFLG,X'FF'\n         BE    PDSEOD\n         BAL   R14,ABDUMP\n         SPACE 1\nPDSREDOK LM    R2,R3,PDSBLKAD\n         XR    R2,R3\n         XR    R3,R2\n         XR    R2,R3\n         STM   R2,R3,PDSBLKAD\n         READ  PDSDECB,SF,,(3),MF=E\n         SPACE 1\n         USING PDS,R2\n         LH    R1,PDSBLKAL\n         LA    R1,1(R1)\n         STH   R1,PDSBLKAL\n         LH    R0,PDSCOUNT\n         SH    R0,=H'2'\n         STH   R0,PDSBYTCT\n         LA    R1,PDSENTRY\n         ST    R1,PDSENTAD\n         B     PDSNEXT\n         SPACE 1\n         DROP  R2\n         SPACE 3\nPDSPRINT L     R6,PDSENTAD\n         USING PDSENTRY,R6\n         IC    R2,PDSINDIC\n         N     R2,=A(PDSUSERH)\n         SLL   R2,1\n         LR    R1,R6\n         AR    R1,R2\n         LA    R1,12(R1)\n         ST    R1,PDSENTAD\n         LH    R1,PDSBYTCT\n         SR    R1,R2\n         SH    R1,=Y(PDSUSERD-PDSENTRY)\n         STH   R1,PDSBYTCT\n         CLC   PDSNAME,EFFS\n         BNE   PDSMEMOK\n         MVC   PDSBLKUS,PDSBLKAL\n         B     PDSNEXT\nPDSMEMOK LH    R1,PDSMEMCT\n         LA    R1,1(R1)\n         STH   R1,PDSMEMCT\n         MVC   BUF+12(8),PDSNAME\n         TM    PDSINDIC,PDSALIAS\n         BZ    *+8\n         MVI   BUF+21,C'A'\n         UNPK  TRAREA,PDSTTRP(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+23(4),TRAREA\n         MVI   BUF+27,C'.'\n         MVC   BUF+28(2),TRAREA+4\n         IC    R0,PDSINDIC\n         N     R0,=A(PDS#TTRS)\n         SRL   R0,5\n         STC   R0,BUF+32\n         OI    BUF+32,X'F0'\n         LR    R5,R2\n         CH    R2,=H'44'\n         BNH   PDSPRLIN\n         LA    R2,2\n         BAL   R14,PRLKAHED\n         LR    R2,R5\n         LA    R5,44\nPDSPRLIN LA    R3,PDSUSERD\n         LA    R4,BUF+35\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         CH    R2,=H'44'\n         BNH   PDSNEXT\n         LR    R5,R2\n         SH    R5,=H'44'\n         LA    R3,PDSUSERD+44\n         LA    R4,BUF+35\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         B     PDSNEXT\n         SPACE 1\n         DROP  R6\n         SPACE 2\nPDSEOD   CLOSE (PDSDCB)\n         CLI   SYNADFLG,0\n         MVI   SYNADFLG,0\n         BNE   PDSRETRN\n         LH    R0,PDSMEMCT\n         BAL   R14,CONVERT\n         MVC   PDSVAL1,CONVEDIT+8\n         LH    R0,PDSBLKUS\n         BAL   R14,CONVERT\n         MVC   PDSVAL2,CONVEDIT+8\n         LH    R0,PDSBLKAL\n         BAL   R14,CONVERT\n         MVC   PDSVAL3,CONVEDIT+8\n         MVC   BUF+10(PDSMSGLN),PDSMSG\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\nPDSRETRN LM    R2,R6,PDSAVE+4\n         L     R14,PDSAVE\n         BR    R14\n         EJECT ,\n         SPACE 1\n         USING DS2,R7\nISAMLIST LTR   R7,R7\n         BZR   R14\n         ST    R14,ISAVE\n         STM   R2,R5,ISAVE+4\n         SPACE 1\n         MVC   BUF+12(19),=C'NO OF INDEX LEVELS='\n         LA    R2,DS2NOLEV\n         BAL   R14,CONVERT1\n         MVC   BUF+31(3),CONVERTD\n         SPACE 1\n         MVC   BUF+42(19),=C'FLAGGED FOR DELETE='\n         LA    R2,DS2TAGDT\n         BAL   R14,CONVERT2\n         MVC   BUF+61(5),CONVERTD\n         SPACE 1\n         MVC   BUF+72(19),=C'TRKS FOR HIGH INDX='\n         LA    R2,DS2NOTRK\n         BAL   R14,CONVERT1\n         MVC   BUF+91(3),CONVERTD\n         SPACE 1\n         MVC   BUF+102(19),=C'IND OVFL TRKS LEFT='\n         LA    R2,DS2RORG2\n         BAL   R14,CONVERT2\n         MVC   BUF+121(5),CONVERTD\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+12(19),=C'TRKS FOR MAST INDX='\n         LA    R2,DS2DVIND\n         BAL   R14,CONVERT1\n         MVC   BUF+31(3),CONVERTD\n         SPACE 1\n         MVC   BUF+42(19),=C'OVERFLOW  ACCESSES='\n         LA    R2,DS2RORG3\n         BAL   R14,CONVERT3\n         MVC   BUF+61(8),CONVERTD\n         SPACE 1\n         MVC   BUF+72(19),=C'PRIME DATA RECORDS='\n         LA    R2,DS2PRCTR\n         BAL   R14,CONVERT4\n         MVC   BUF+91(10),CONVERTD\n         SPACE 1\n         MVC   BUF+102(19),=C'NO OF OVFL RECORDS='\n         LA    R2,DS2OVRCT\n         BAL   R14,CONVERT2\n         MVC   BUF+121(5),CONVERTD\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+12(19),=C'CYL OVFL  TRKS/CYL='\n         LA    R2,DS2CYLOV\n         BAL   R14,CONVERT1\n         MVC   BUF+31(3),CONVERTD\n         SPACE 1\n         MVC   BUF+42(19),=C'CORE FOR HIGH INDX='\n         LA    R2,DS2NOBYT\n         BAL   R14,CONVERT2\n         MVC   BUF+61(5),CONVERTD\n         SPACE 1\n         MVC   BUF+72(19),=C'IND OFL BYTES LEFT='\n         LA    R2,DS2BYOVL\n         BAL   R14,CONVERT2\n         MVC   BUF+91(5),CONVERTD\n         SPACE 1\n         MVC   BUF+102(19),=C'FULL CYLOVFL AREAS='\n         LA    R2,DS2RORG1\n         BAL   R14,CONVERT2\n         MVC   BUF+121(5),CONVERTD\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         LM    R2,R5,ISAVE+4\n         L     R14,ISAVE\n         BR    R14\n         DROP  R7\n         EJECT\n         SPACE 1\n         USING EXTENT,R2\n         USING EXLINE,R3\n         SPACE 1\nEXFORMAT LTR   R2,R2               ANY EXTENT.Q\n         BZR   R14                 RETURN IMM IF NOT\n         ST    R14,EXSAVE\n         STM   R2,R3,EXSAVE+4\n         SPACE 1\n         UNPK  TRAREA,EXTLCCHH(8)\n         TR    TRAREA,TRTABLE\n         MVC   EXLFCC,TRAREA\n         MVI   EXLFPRD,C'.'\n         MVC   EXLFHH,TRAREA+4\n         SPACE 1\n         UNPK  TRAREA,EXTHCCHH(8)\n         TR    TRAREA,TRTABLE\n         MVC   EXLLCC,TRAREA\n         MVI   EXLLPRD,C'.'\n         MVC   EXLLHH,TRAREA+4\n         SPACE 1\n         L     R0,EXTLOTT                                   GDL-94\n*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94\n         BAL   R14,CONVERT\n         MVC   EXLFTT,CONVEDIT+6                            GDL-94\n         SPACE 1\n         L     R0,EXTHITT                                   GDL-94\n*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94\n         BAL   R14,CONVERT\n         MVC   EXLLTT,CONVEDIT+6                            GDL-94\n         SPACE 1\n         L     R0,EXTNOTRK                                  GDL-94\n         BAL   R14,CONVERT\n         MVC   EXLNOTRK,CONVEDIT+6                          GDL-94\n         SPACE 1\n         CLI   EXPFLAG,0\n         BNE   EXPTYPE\n         L     R1,EXTIDPTR\n         MVC   EXLDSNAM,0(R1)\n         SPACE 1\nEXPTYPE  CLI   EXTTYPE,X'01'       IS THIS A DATA EXTENT.Q\n         BNE   EXPNDATA            NO, GO CHECK OTHERS\n         CLI   EXPFLAG,0           ARE WE MAPPING.Q\n         BE    EXPEXTPR            YES, DON'T CLUTTER UP\n         MVC   EXLTYPE,=C'PRIM'    ELSE MOVE IN EXTENT TYPE\n         B     EXPEXTPR\n         SPACE 1\nEXPNDATA TM    EXTTYPE,X'F0'       VOL LABEL, OR TYPE 4, 5, OR 6\n         BO    EXPCKFMX            BR IF YES\n         CLI   EXTTYPE,X'02'       ISAM OVERFLOW.Q\n         MVC   EXLTYPE,=C'OVFL'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'04'       ISAM INDEX.Q\n         MVC   EXLTYPE,=C'INDX'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'40'       USER LABEL TRACK.Q\n         MVC   EXLTYPE,=C'ULBL'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'81'       CYLS OF DATA ON CYL BDRY.Q\n         MVC   EXLTYPE,=C'CYLB'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'80'       SHARING AN EXTENT.Q\n         MVC   EXLTYPE,=C'SHRD'\n         BNE   EXPCKFMX\n         CLI   EXPFLAG,0           ARE WE MAPPING.Q\n         BNE   EXPEXTPR            NO, DON'T ENCLOSE IN PARENS\n         MVI   EXLLPARN,C'('\n         MVI   EXLRPARN,C')'\n         B     EXPEXTPR\n         SPACE 1\nEXPCKFMX CLI   EXTTYPE,C'5'        FREE EXTENT.Q\n         BE    EXPPRLIN\n         SPACE 1\n         CLI   EXTTYPE,C'4'        VTOC EXTENT.Q\n         MVC   EXLTYPE,=C'VTOC'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'FF'       VOLUME LABEL.Q\n         MVC   EXLTYPE,=C'VLBL'\n         BE    EXPPRLIN\n         SPACE 1\n         CLI   EXTTYPE,C'6'        SHARED EXTENT.Q\n         MVC   EXLTYPE,=C'*UN*'\n         BNE   EXPEXTPR\n         SPACE 1\n         MVC   EXLTYPE,=C'SPLT'\n         SR    R0,R0\n         IC    R0,EXTSEQNO\n         BAL   R14,CONVERT\n         MVC   EXLSPLIT(3),CONVEDIT+9\n         B     EXPPRLIN\n         SPACE 1\nEXPEXTPR SR    R0,R0\n         IC    R0,EXTSEQNO\n         AH    R0,=H'1'\n         BAL   R14,CONVERT\n********************************** START *********** SMA 3/88  CHANGED\n         MVC   EXLSEQNO,CONVEDIT+9\n**********************************  END  *********** SMA 3/88  CHANGED\n         SPACE 1\nEXPPRLIN MVI   BUF,SPACE1AP\n         LM    R2,R3,EXSAVE+4\n         L     R14,EXSAVE\n         BR    R14\n         DROP  R2,R3\n         EJECT\n         SPACE 3\nVTOCREAD ST    R14,VTSAVE\n         STM   R2,R4,VTSAVE+4\n         L     R2,RENEXT@\n         CHECK (2)\n         LA    R1,=CL11'VTOC READ.'\n         BAL   R14,SYNADCHK\n         SPACE 1\n         USING DS1,R3\nVTOCREOK XC    0(20,R2),0(R2)\n         LA    R4,20(R2)\n         MVC   DS1(DS1END-DS1),0(R4)\n         MVC   DS1FDAD(3),VTOCMBB\n         MVC   DS1FDAD+3(4),VTOCCCHH\n         MVC   DS1FDAD+7(1),VTOCR\n         CLC   HWMDS1,DS1FDAD+3\n         BNL   VTOCRD01                         ADDED 12/11/81 KOWNACKI\n         CLC   HWMDS1,=X'0000000000'            ALLOW INITIAL X'00' AS\n         BNE   VTOCEOD                          DS4HPCHR FOR DSF\n         SPACE 1\nVTOCRD01 READ  (2),SF,VTOCDCB,(4),MF=E\n         A     R2,REBLKSIZ\n         ST    R2,RENEXT@\n         L     R1,RECOUNT\n         BCT   R1,VTSAVECT\n         L     R2,REBLOCK@\n         ST    R2,RENEXT@\n         L     R1,RENCP\nVTSAVECT ST    R1,RECOUNT\n         SPACE 1\n         LA    R0,1\n         SR    R1,R1\n         IC    R1,VTOCR\n         AR    R1,R0\n         STC   R1,VTOCR\n         CH    R1,VTDSCBTR\n         BNH   VTOCREND\n         MVI   VTOCR,1\n         AH    R0,VTOCTT\n         STH   R0,VTOCTT\n         LR    R1,R0\n         BAL   R14,TTCONVRT\n         MVC   VTOCCCHH,CCHH\n         SPACE 1\nVTOCREND L     R14,VTSAVE\n         LM    R2,R4,VTSAVE+4\n         LA    R14,4(R14)\n         BR    R14\n         SPACE 1\nVTOCEOD  L     R14,VTSAVE\n         LM    R2,R4,VTSAVE+4\n         BR    R14\n         SPACE 1\n         DROP  R3\n         EJECT\n         SPACE 3\nOBTAIN   MVC   OBCCHHR,0(R2)\n         OBTAIN OBCAMLST\n         BXLE  R15,R15,*+8\n         BAL   R14,ABDUMP\n         USING DS1,R3\n         MVC   DS1(DS1END-DS1),CAMLIST\n         MVC   DS1FDAD(3),VTOCMBB\n         MVC   DS1FDAD+3(5),0(R2)\n         BR    R14\n         SPACE 2\nOBCAMLST CAMLST SEEK,OBCCHHR,VOLSERNO,CAMLIST\n         SPACE 1\n         DROP  R3\n         EJECT\n         SPACE 3\nSYNADXIT SYNADAF ACSMETH=BSAM\n         MVC   BUF+7(47),=C'I/O ERROR PROCESSING XXXXXXXXXX. SYNADAF INX\n               FO=\"'\n         MVC   BUF+54(78),50(R1)\n         MVI   BUF+132,C'\"'\n         SYNADRLS\n         MVI   SYNADFLG,X'FF'\n         LTR   R0,R0\n         BZR   R14\n         MVI   SYNADFLG,1\n         BR    R14\n         SPACE 3\nSYNADCHK CLI   SYNADFLG,0\n         BER   R14\n         MVC   BUF+28(11),0(R1)\n         BAL   R14,CLOSVTOC\n         BAL   R14,DEQVTOC\n         MVI   BUF,SPACE3IM\n         BAL   R14,PRINT\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         CLI   SYNADFLG,X'FF'\n         BE    ERRNODMP\n         BAL   R14,ABDUMP\n         EJECT\n         SPACE 3\nDEQGATE  EQU   *+1\nDEQVTOC  BCR   *-*+15,R14\n         OI    DEQGATE,X'F0'\n         SPACE 1\n         DEQ   MF=(E,ENQVTOC)\n         SPACE 1\n         BR    R14\n         SPACE 4\n         SPACE 1\nCLOSVTOC CLOSE MF=(E,CLOSLIST)\n         SPACE 1\n         L     R1,REBLOCK@\n         LTR   R1,R1\n         BZR   R14\n         L     R0,REGETSIZ\n         FREEMAIN R,LV=(0),A=(1)\n         SR    R0,R0\n         ST    R0,REBLOCK@\n         BR    R14\n         EJECT\n         SPACE 3\n         USING DS1,R6\n         USING DS3,R8\n         SPACE 1\nF13HOOK  ST    R14,F1SAVE\n         SR    R5,R5\n         ST    R5,F1TRKAL\n         STH   R5,NUMEXT\n********************************** START *********** SMA 3/88  CHANGED\n         XC    LISTEXT(64*4),LISTEXT\n         XC    LISTEXT+256(64*4),LISTEXT+256\n**********************************  END  *********** SMA 3/88  CHANGED\n         IC    R5,DS1NOEPV\n         CLI   DS1EXT1,X'40'\n         BNE   *+8\n         AH    R5,=H'1'\n         LTR   R5,R5\n         BZR   R14\n         STH   R5,NUMEXT\n********************************** START *********** SMA 3/88  ADDED\n         STH   R5,WRKEXT           SAVE NUMBER OF EXTENTS\n         CH    R5,=H'16'           NUMBER EXTENTS > 16 ?\n         BNH   GOODEXT             NO, USE AS IS\n         LH    R5,=H'16'           YES, FORCE AS 16\nGOODEXT  EQU   *\n**********************************  END  *********** SMA 3/88  ADDED\n         SPACE 1\n         SR    R3,R3\n         SR    R4,R4\nF1NXTEXT EX    0,F1EXTPIK(R3)\n         BAL   R14,F1EXTCNV\n         AR    R4,R0\n         MVC   HOOKLCCH(8),2(R2)\n         ST    R0,HOOKNTRK                  GDL-94\n         MVC   HOOKTYPE(2),0(R2)\n         MVC   HOOKLOTT,LOWTT                          GDL-94\n         MVC   HOOKHITT,HIGHTT                         GDL-94\n         LA    R0,DS1DSNAM\n         ST    R0,HOOKIDPT\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         ST    R15,LISTEXT(R3)\n         LA    R3,4(R3)\n         BCT   R5,F1NXTEXT\n         ST    R4,F1TRKAL\n********************************** START *********** SMA 3/88  ADDED\n         ST    R3,R3EXT            SAVE EXTENT TABLE POINTER\nF3NXTF3  EQU   *\n         USING DS3,R8\n         LTR   R8,R8               IS POINTER ZEROES ?\n         BZ    F3DONE              YES, DONE FORMAT 3 DSCB\n         CLC   DS3PTRDS,ZEROES     NO, DOUBLE CHECK POINTER\n         BE    F3DONE              DONE FORMAT 3 DSCB\n         LH    R5,WRKEXT           LOAD NUMBER OF EXTENTS\n         SH    R5,LSTEXT           SUBTRACT LAST NUMBER OF EXTENTS\n         MVC   LSTEXT,=H'13'       SET LAST NUMBER OF EXTENTS TO 13\n         STH   R5,WRKEXT           SAVE NUMBER OF EXTENTS LEFT\n         CH    R5,=H'13'           ARE THERE MORE THAN 13 EXTENTS LEFT\n         BNH   GOODEXT2            NO, USE IT\n         LH    R5,=H'13'           YES, FORCE AT 13\nGOODEXT2 EQU   *\n         CH    R5,=H'0'            ARE THERE MORE THAN ZERO EXTENTS\n         BNH   F3DONE              NO, WE'RE DONE WITH FORMAT 3 DSCB'S\n         LA    R4,DS3LEN           YES, OBTAIN EXTENT INFORMATION\n         BAL   R14,GETCORE         -\n         ST    R3,DS3F2PTR         -\n         LA    R2,DS3PTRDS         -\n         LR    R8,R3               -\n         BAL   R14,OBTAIN          -\n         SPACE 1                   -\n         SR    R3,R3               CLEAR REGISTER 3\n         SR    R4,R4               CLEAR REGISTER 4\nF3NXTEXT EX    0,F3EXTPIK(R3)      EXECUTE FORMAT 3 DSCB EXTENT LOADS\n         BAL   R14,F1EXTCNV        CONVERT EXTENT INFORMATION\n         AR    R4,R0               ADD TO NUMBER OF TRACKS ALLOCATED\n         MVC   HOOKLCCH(8),2(R2)   PERORM HOOK EXTENT PROCESSING\n         ST    R0,HOOKNTRK         -              GDL-94\n         MVC   HOOKTYPE(2),0(R2)   -\n         MVC   HOOKLOTT,LOWTT      -                    GDL-94\n         MVC   HOOKHITT,HIGHTT     -                    GDL-94\n         LA    R0,DS1DSNAM         -\n         ST    R0,HOOKIDPT         -\n         LA    R2,HOOKPTR          -\n         BAL   R14,HOOKUP          -\n         ST    R3,R3EXTHLD         SAVE REGISTER 3\n         L     R3,R3EXT            LOAD EXTENT TABLE POINTER\n         ST    R15,LISTEXT(R3)     STORE EXTENT INFORMATION INTO TABLE\n         LA    R3,4(R3)            INCREMENT POINTER TO NEXT ELEMENT\n         ST    R3,R3EXT            SAVE EXTENT TABLE POINTER\n         L     R3,R3EXTHLD         RELOAD REGISTER 3\n         LA    R3,4(R3)\n         BCT   R5,F3NXTEXT         LOOP FOR AS MANY EXTS IN THIS DSCB\n         A     R4,F1TRKAL          ADD PREVIOUS TRACKS ALLOC TO COUNTER\n         ST    R4,F1TRKAL          STORE CUMMULATIVE TRACKS TO COUNTER\n         B     F3NXTF3             GO GET NEXT FORMAT 3 DSCB\nF3DONE   EQU   *\n         MVC   LSTEXT,=H'16'       RESTORE LAST EXTENT TO 16\n**********************************  END  *********** SMA 3/88  ADDED\n         L     R14,F1SAVE\n         BR    R14\n         EJECT ,\n         SPACE 3\nF1EXTCNV CLI   0(R2),0\n         BER   R14\n         LA    R2,2(R2)\n         BAL   R15,CCHHCONV\n         ST    R0,LOWTT                               GDL-94\n         LA    R2,4(R2)\n         BAL   R15,CCHHCONV\n         ST    R0,HIGHTT                              GDL-94\n         L     R1,LOWTT                               GDL-94\n*        N     R1,=X'0000FFFF' ZERO OUT HIGH ORDER BYTES    GDL-94\n         SR    R0,R1\n         AH    R0,=H'1'\n         S     R2,=F'6'\n         BR    R14\n         SPACE 2\nF1EXTPIK LA    R2,DS1EXT1\n         LA    R2,DS1EXT2\n         LA    R2,DS1EXT3\n         LA    R2,DS3EXTNT\n         LA    R2,DS3EXTNT+10\n         LA    R2,DS3EXTNT+20\n         LA    R2,DS3EXTNT+30\n         LA    R2,DS3ADEXT\n         LA    R2,DS3ADEXT+10\n         LA    R2,DS3ADEXT+20\n         LA    R2,DS3ADEXT+30\n         LA    R2,DS3ADEXT+40\n         LA    R2,DS3ADEXT+50\n         LA    R2,DS3ADEXT+60\n         LA    R2,DS3ADEXT+70\n         LA    R2,DS3ADEXT+80\n         SPACE 2\n********************************** START *********** SMA 3/88  ADDED\n* THE FORMAT 3 DSCB CONTAINS ONLY 13 EXTENTS AS OPPOSED TO 16\n* EXTENTS IN THE COMBINED FORMAT 1 / FORMAT 3 DSCB TABLE AS\n* DEFINED ABOVE.\n*********************************************************************\nF3EXTPIK LA    R2,DS3EXTNT\n         LA    R2,DS3EXTNT+10\n         LA    R2,DS3EXTNT+20\n         LA    R2,DS3EXTNT+30\n         LA    R2,DS3ADEXT\n         LA    R2,DS3ADEXT+10\n         LA    R2,DS3ADEXT+20\n         LA    R2,DS3ADEXT+30\n         LA    R2,DS3ADEXT+40\n         LA    R2,DS3ADEXT+50\n         LA    R2,DS3ADEXT+60\n         LA    R2,DS3ADEXT+70\n         LA    R2,DS3ADEXT+80\n         SPACE 2\n********************************** START *********** SMA 3/88  ADDED\n         DROP  R6,R8\n         EJECT\n         SPACE 3\n         USING DT2ARENT,R2                               GDL-94\n*                                                        GDL-94\nF56HOOK  ST    R14,F5SAVE\n         LA    R2,DT2ENTRY        POINT TO FIRST ENTRY   GDL-94\n         L     R3,DT2ENTNM        LOAD NUMBER OF ENTRIES GDL-94\nF5LOOP   CLC   DT2EXT,ZEROES      ZERO ENTRY             GDL-94\n         BE    F5EXIT                 END OF EXTENTS     GDL-94\n         CLC   DT2ENTRY(4),=X'0000C3A5'  LAST CYL 3390-3 KOHLS-02\n         BE    F5EXIT                                    KOHLS-02\n         CLC   DT2ENTRY(4),=X'00024AEF'  LAST CYL 3390-9 KOHLS-02\n         BE    F5EXIT                                    KOHLS-02\n         BAL   R14,F5EXTCNV\n         LA    R2,8(R2)           POINT TO NEXT ENTRY    GDL-94\n         BCT   R3,F5LOOP\n*        LA    R2,DS5MAVET                               GDL-94\n*        LA    R3,18                                     GDL-94\n*        BAL   R14,F5EXTCNV                              GDL-94\n*        LA    R2,5(R2)                                  GDL-94\n*        BCT   R3,*-8                                    GDL-94\nF5EXIT   L     R14,F5SAVE                                GDL-94\n         BR    R14\n         SPACE 1\nF5EXTCNV ST    R14,F5SAVE+4\n         STM   R2,R5,F5SAVE+8                            GDL-94\n         L     R1,DT2RTAST           GET BEGINING TRACK  GDL-94\n         ST    R1,HOOKLOTT           STORE IN TABLE      GDL-94\n         LR    R3,R1                 SAVE IN R3          GDL-94\n         BAL   R14,TTCONVRT          CONVERT TO CCHH     GDL-94\n         MVC   HOOKLCCH,CCHH         SAVE IN TABLE       GDL-94\n         L     R1,DT2RTAED           GET ENDING TRACK    GDL-94\n         LR    R4,R1                 SAVE IN R4          GDL-94\n         BCTR  R1,0                  ADJUST END OF EXT   GDL-94\n         ST    R1,HOOKHITT           STORE IN TABLE      GDL-94\n         BAL   R14,TTCONVRT          CONVERT TO CCHH     GDL-94\n         MVC   HOOKHCCH,CCHH         SAVE IN TABLE       GDL-94\n         SR    R4,R3                 GET NUMBER OF TRKS  GDL-94\n         ST    R4,HOOKNTRK           SAVE IN TABLE       GDL-94\n         LH    R5,HOOKHCCH           LOAD END CYLENDER   GDL-94\n         SH    R5,HOOKLCCH           SUBTRACT START CYL  GDL-94\n         LA    R5,1(R5)              ADJUST COUNT        GDL-94\n         CLI   HOOKLCCH+3,X'00'      START ON CYL BOUNDRY GDL-94\n         BE    STRTBDY                 YES               GDL-94\n         BCTR  R5,0                    NO SUBTRACT 1     GDL-94\nSTRTBDY  EQU   *\n         LH    R0,TRKSPCYL           GET TRACKS PER CYL  GDL-94\n         BCTR  R0,0                  BACK UP TO LAST TRK GDL-94\n         CH    R0,HOOKHCCH+2         END ON CYL BOUNDRY  GDL-94\n         BE    ENDBDY                  YES               GDL-94\n         BCTR  R5,0                    NO SUBTRACT 1     GDL-94\nENDBDY   C     R4,F5LARGTT           IS IT THE LARGEST   GDL-94\n         BNH   F5AVAIL                 NO, CONTINUE      GDL-94\n         ST    R4,F5LARGTT           SAVE NEW LARGEST TR GDL-94\n         STH   R5,F5LARGST           NUM CYL IN LARGEST  GDL-94\nF5AVAIL  A     R4,AVAILSPC           ADD AVAILABLE TRKS  GDL-94\n         ST    R4,AVAILSPC           SAVE NEW AVAIL TRKS GDL-94\n         LH    R1,AVAILEXT           INCREMENT           GDL-94\n         LA    R1,1(R1)                  COUNT OF AVAIL  GDL-94\n         STH   R1,AVAILEXT                  EXTENTS      GDL-94\n         AH    R5,AVAILCYL           ADD FULL CYLENDERS  GDL-94\n         STH   R5,AVAILCYL           SAVE NEW AVAIL CYL  GDL-94\n         LA    R0,=CL44'  **** AVAILABLE ****'           GDL-94\n         ST    R0,HOOKIDPT                               GDL-94\n         MVI   HOOKSEQN,0            FAKE SEQUENCE NUM   GDL-94\n         MVI   HOOKTYPE,C'5'         PUT TYPE IN TABLE   GDL-94\n         DROP  R2\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         LM    R2,R5,F5SAVE+8                            GDL-94\n         L     R14,F5SAVE+4\n         BR    R14\n         SPACE 1\n*F6HOOK  STC   R5,HOOKSEQN                               GDL-94\n*        MVC   HOOKIDPT,=A(FMT6MSG)                      GDL-94\n*        LR    R0,R4                                     GDL-94\n*        MH    R0,TRKSPCYL                               GDL-94\n*        STH   R0,HOOKNTRK                               GDL-94\n*        B     F6RETURN                                  GDL-94\n         SPACE 1\n*        DROP  R8                                        GDL-94\n         EJECT\n         SPACE 3\n*      THIS ROUTINE ADDED 03/82 BY D. KOWNACKI FOR INDEXED VTOCS\n*\n*       IF INDEXED VTOC THIS ROUTINE WILL BUILD A FORMAT 5 DSCB.\n*        FMT5AD CONTAINS THE ADDRES OF THE FORMAT 5 DSCB BUFFER.\n*        IT CONTAINS THE LAST FORMAT 5 DSCB READ OR BUILT. THE\n*        FMT 5 BUFFER IS ZERO IF THIS IS THE 1ST CALL.\n*        THE BUILT FMT5 WILL THEN BE PROCESSED AS BEFORE.\n*        IF THE FMT 5 DSCB BUFFER RETURNED INDICATES MORE EXTENTS\n*         THIS ROUTINE WILL BE CALLED AGAIN TO OBTAIN THE\n*         NEXT FMT 5 DSCB AND SO ON.\n*\n*        USING DS5,R8                                         GDL-94\n         USING DS4,R6\n*\nINDEXCHK ST    R14,INDXSAVE\n         L     R5,UCBADDR               PUT UCBADDR IN REG 5\n         CVAFTST UCB=(R5)               TEST VTOC\n         LTR   R15,R15                  TEST RETURN CODE\n         BNZ   INDXED                    GO PROCESS           GDL-94\n         BAL   R14,ABDUMP        INDEX VTOC SUPPORT REQUIRED  GDL-94\n*        BE    INDXEND                   GO PROCESS THE FMT5  GDL-94\n         SPACE 1\n*        ASSUME INDEXED VTOC AND GET THE NO OF AVAILABLE FORMAT 1'S\n         SPACE 1\nINDXED   ST    R5,CVPL2+12           STORE UCBADDR FOR MACRO\n         CVAFDSM  MF=(E,CVPL2),BRANCH=NO\n         SPACE 1\n         MVC   DS4DSREC(2),FMT0ADDR+2   STORE AVAIL FMT0 IN FMT4 FIELD\n         SPACE 1\n*        ASSUME INDEXED VTOC ---     NOT APPLICABLE        GDL-94\n         MVC   DT2X7HDR,ZEROES       ZERO OUT HEADER       GDL-94\n         MVC   DT2X7EYE,=C'ICVEDT02' INIT EYE CATCHER      GDL-94\n         MVC   DT2X7LEN,DT2LEN       TOTAL AREA LENGTH\n         MVC   DT2X7LEV,DT2LEV       CONTROL BLOCK LEVEL\n         MVC   DT2ENTRY(4),ZEROES    ZERO RTA START ADDR   GDL-94\n         MVC   DT2ENTNM,NUMENT    INIT NUMBER OF ENTRIES   GDL-94\n         SPACE 1\n         ST    R5,CVUCB              STORE UCBADDR FOR MACRO\n*                                                          GDL-94\n*                                                          GDL-94\nMOREINDX DS    0H\n         CVAFDSM MF=(E,CVPL),BRANCH=NO   GET EXTENTS FROM CVPL GDL-94\n         SPACE 1\n*        TM    CVFL1,CV1IVT                          GDL-94\n*        BZ    INDXEND                               GDL-94\n         LTR   R15,R15                     IS THERE AN ERROR?\n         BZ    BUILDF5                      NO       GDL-94\n         C     R15,=F'4'                   TEST THE RETURN CODE\n         BE    TSTSTAT\n         BAL   R14,ABDUMP                  UNEXPECTED ERROR (ABEND)\nTSTSTAT  CLI   CVSTAT,STAT032              END OF DATA\n         BE    INDXEND                               GDL-94\n         BAL   R14,ABDUMP                  UNEXPECTED ERROR (ABEND)\n         SPACE 3\n*        BUILD THE FORMAT 5 ***NO LONGER DONE***     GDL-94\n*    BUT NEED TO PROCESS CURRENT GROUP OF EXTENTS AND GET MORE  GDL-94\n         SPACE 2\nBUILDF5  DS    0H\n*        MVC   DS5KEYID,FM5ID                        GDL-94\n*        MVC   DS5AVEXT(L'DS5AVEXT+L'DS5EXTAV),EXTS  GDL-94\n*                                                    GDL-94\n*        MVI   DS5FMTID,C'5'                         GDL-94\n*        MVC   DS5MAVET,EXTS+L'DS5AVEXT+L'DS5EXTAV   GDL-94\n*        NC    EXTS+L'EXTS-L'DS5AVEXT(5),EXTS+L'EXTS-L'DS5AVEXT GDL-94\n*                                                    GDL-94\n*        BZ    INDXEND          BRANCH IF YES        GDL-94\n         BAL   R14,F56HOOK\n         MVC   DT2ENTRY(4),DT2END-4 SETUP FOR NEXT TIME THRU   GDL-94\n*                           PER APAR OY66889                   GDL-94\n         CLC   DT2ENTRY(4),=X'0000C3A5'  LAST CYL 3390-3 KOHLS-02\n         BE    INDXEND                                   KOHLS-02\n         CLC   DT2ENTRY(4),=X'00024AEF'  LAST CYL 3390-9 KOHLS-02\n         BE    INDXEND                                   KOHLS-02\n         B     MOREINDX\n*                         ALL EXTENTS PROCESSED EXIT.\nINDXEND  DS    0H\n         L     R14,INDXSAVE\n         BR    R14\n         EJECT\n         SPACE 3\nHOOKUP   TM    PARMOPT1,MAPOPT+EXTNTOPT+DIRFLAG\n         BZR   R14\n         ST    R14,HOSAVE\n         STM   R3,R5,HOSAVE+4\n         LA    R4,EXTNTLEN\n         BAL   R14,GETCORE\n         USING EXTENT,R3\n         MVC   EXTENT(EXTNTLEN),0(R2)\n         L     R2,HOOKSTRT\n         LA    R4,HOOKSTRT\nHOOKLOOK CLC   EXTLCCHH,EXTLCCHH-EXTENT(R2)\n         BL    HOOKDONE\n         LR    R4,R2\n         L     R2,0(R2)\n         B     HOOKLOOK\n         SPACE 1\nHOOKDONE ST    R2,EXTPTR\n         ST    R3,EXTPTR-EXTENT(R4)\n         LR    R15,R3\n         LM    R3,R5,HOSAVE+4\n         L     R14,HOSAVE\n         BR    R14\n         SPACE 1\n         DROP  R3\n         EJECT ,\n         SPACE 3\nCCHHCONV SR    R0,R0\n         IC    R0,0(R2)\n         MH    R0,DEVCONV1\n         SR    R1,R1\n         IC    R1,1(R2)\n         MH    R1,DEVCONV2\n         AR    R0,R1\n         SR    R1,R1\n         IC    R1,2(R2)\n         MH    R1,DEVCONV3\n         AR    R0,R1\n         SR    R1,R1\n         IC    R1,3(R2)\n         MH    R1,DEVCONV4\n         AR    R0,R1\n         BR    R15\n         SPACE 4\nTTCONVRT SR    R0,R0\n         ST    R0,CCHH\n         LH    R15,DEVCONV1\n         LTR   R15,R15\n         BZ    TTCONVR2\n         DR    R0,R15\n         STC   R1,CCHH\n         LR    R1,R0\n         SR    R0,R0\nTTCONVR2 LH    R15,DEVCONV2\n         LTR   R15,R15\n         BZ    TTCONVR3\n         DR    R0,R15\n         STC   R1,CCHH+1\n         LR    R1,R0\n         SR    R0,R0\nTTCONVR3 LH    R15,DEVCONV3\n         LTR   R15,R15\n         BZ    TTCONVR4\n         DR    R0,R15\n         STC   R1,CCHH+2\n         STC   R0,CCHH+3\n         BR    R14\n         SPACE 1\nTTCONVR4 STC   R1,CCHH+3\n         BR    R14\n         EJECT\n         SPACE 3\nCONVERT1 LA    R3,1\n         B     CONVCOM\n         SPACE 1\nCONVERT2 LA    R3,2\n         B     CONVCOM\n         SPACE 1\nCONVERT3 LA    R3,3\n         B     CONVCOM\n         SPACE 1\nCONVERT4 LA    R3,4\n         SPACE 1\nCONVCOM  SR    R0,R0\nCONV1MOR SLL   R0,8\n         IC    R0,0(R2)\n         LA    R2,1(R2)\n         BCT   R3,CONV1MOR\n         SPACE 1\nCONVERT  LPR   R0,R0\n         CVD   R0,CONVDEC\n         UNPK  CONVUNPK,CONVDEC\n         OI    CONVUNPK+11,X'F0'\n         MVC   CONVEDIT,=X'402020202020202020202120'\n         ED    CONVEDIT,CONVDEC+2\n         MVC   CONVERTD,CONVEDIT+1\nCONVCLI  CLI   CONVERTD,C' '\n         BNER  R14\n         MVC   CONVERTD,CONVERTD+1\n         B     CONVCLI\n         SPACE 1\n         EJECT\n         SPACE 3\nDATEDIT  ST    R14,DASAVE\n         STM   R2,R5,DASAVE+4\n         XC    DATEWORD,DATEWORD\n         LTR   R2,R2\n         BZ    DATGET\n         SR    R1,R1\n         IC    R1,0(R2)\n         MH    R1,=H'1000'\n         MVC   DATEWORD,1(R2)\n         AH    R1,DATEWORD\n         CVD   R1,DATEWORD\nDATGETRT OI    DATEWORD+7,X'0F'\n         L     R2,DATEWORD+4\n         SR    R0,R0\n         D     R0,=F'1000'\n         LA    R15,DATNORMY\n         LTR   R14,R1\n         BZ    DATCOMP\n         N     R14,=F'3'\n         BM    DATCOMP\n         LA    R15,DATLEAPY\n         SPACE 1\nDATCOMP  LTR   R0,R0\n         BZ    DAJULIAN\n         CH    R0,0(R15)\n         BH    DAJULIAN\n         TM    PARMOPT2,JDATEOPT\n         BO    DAJULIAN\n         LA    R3,1\n         SR    R14,R14\n         SPACE 1\nDATICMON IC    R14,1(R3,R15)\n         CR    R0,R14\n         BNH   DATMONOK\n         SR    R0,R14\n         LA    R3,1(R3)\n         B     DATICMON\n         SPACE 1\nDATMONOK MH    R3,=H'1000'\n         AR    R3,R0\n         MH    R3,=H'1000'\n         AR    R3,R1\n         CVD   R3,DATEWORD\n         MVC   DATEWORD(5),DATEWORD+3\n         UNPK  DATEWORD(8),DATEWORD(5)\n         OI    DATEWORD+7,X'F0'\n         MVI   DATEWORD+2,C'/'\n         MVI   DATEWORD+5,C'/'\n         SPACE 3\nDATRETRN LM    R2,R5,DASAVE+4\n         MVC   0(8,R3),DATEWORD\n         L     R14,DASAVE\n         BR    R14\n         SPACE 2\nDAJULIAN ST    R2,DATEWORD\n         UNPK  DATEWORD+2(5),DATEWORD+1(3)\n         MVC   DATEWORD+1(2),DATEWORD+2\n         MVI   DATEWORD,C' '\n         MVI   DATEWORD+3,C'.'\n         MVI   DATEWORD+7,C' '\n         B     DATRETRN\n         SPACE 2\nDATGET   ST    R1,DATEWORD+4\n         LTR   R1,R1\n         BNZ   DATGOT\n         TIME  DEC\n         ST    R1,DATEWORD+4\nDATGOT   CVB   R1,DATEWORD\n         B     DATGETRT\n         SPACE 2\n         EJECT\n         SPACE 3\nDUMPDSCB ST    R14,DUSAVE\n         LR    R4,R2\n         LA    R2,3\n         BAL   R14,PRLKAHED\n         LR    R2,R4\n         MVC   BUF+8(17),=C'BLK 1234.5678.90:'\n         UNPK  TRAREA,3(8,R3)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+12(4),TRAREA\n         MVC   BUF+17(4),TRAREA+4\n         MVC   BUF+22(2),TRAREA+8\n         LA    R3,0(R2)\n         LA    R4,BUF+35\n         LA    R5,44\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         MVC   BUF+8(13),=C'FORMAT N DSCB'\n         MVC   BUF+15(1),44(R2)\n         OI    BUF+15,X'F0'\n         LA    R3,44(R2)\n         LA    R4,BUF+26\n         LA    R5,48\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         LA    R3,92(R2)\n         LA    R4,BUF+26\n         LA    R5,48\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         L     R14,DUSAVE\n         BR    R14\n         EJECT ,\n         SPACE 3\nDUMPLINE LTR   R5,R5\n         BNPR  R14\n         B     DUMPNEXT\nDUMPWORD BCT   R1,DUMPBYTE\n         MVI   0(R4),C' '\n         LA    R4,1(R4)\nDUMPNEXT LA    R1,4\nDUMPBYTE UNPK  TRAREA(3),0(2,R3)\n         TR    TRAREA(2),TRTABLE\n         MVC   0(2,R4),TRAREA\n         LA    R3,1(R3)\n         LA    R4,2(R4)\n         BCT   R5,DUMPWORD\n         BR    R14\n         EJECT\n         SPACE 3\nGETCORE  A     R4,=F'3'\n         N     R4,=F'-4'\nGETAGAIN L     R0,CORLEFT\n         SR    R0,R4\n         BM    GETMAIN\n         ST    R0,CORLEFT\n         L     R3,CORNEXT@\n         LR    R0,R3\n         AR    R0,R4\n         ST    R0,CORNEXT@\n         BR    R14\n         SPACE 3\nGETMAIN  L     R3,CURBLK@\n         GETMAIN EC,LV=2048,A=CURBLK@\n         BXH   R15,R15,ERRNOCOR\n         SPACE 1\n         L     R1,CURBLK@\n         ST    R1,0(R3)\n         SR    R0,R0\n         ST    R0,0(R1)\n         LA    R1,4(R1)\n         ST    R1,CORNEXT@\n         MVC   CORLEFT,=A(2044)\n         B     GETAGAIN\n         EJECT ,\n         SPACE 3\nFREECORE L     R2,CORFRST@\nFREELOOP LTR   R1,R2\n         BZ    FREEDONE\n         L     R2,0(R2)\n         LA    R0,2048\n         FREEMAIN R,LV=(0),A=(1)\n         B     FREELOOP\n         SPACE 1\nFREEDONE SR    R0,R0\n         ST    R0,CORLEFT\n         ST    R0,CORFRST@\n         LA    R0,CORFRST@\n         ST    R0,CURBLK@\n         BR    R14\n         EJECT\n         SPACE 3\nPRINT    ST    R14,PRSAVE\n         STM   R2,R5,PRSAVE+4\n         LH    R0,CURLINES\n         CH    R0,MAXLINES\n         BL    PRNOPAGE\n         PUT   PRINTDCB,NEWPAGE\n         SR    R0,R0\n         STH   R0,CURLINES\nPRNOPAGE LTR   R0,R0\n         BNZ   PRINTBUF\n         LH    R0,CURPAGES\n         AH    R0,=H'1'\n         STH   R0,CURPAGES\n         CH    R0,MAXPAGES\n         BNH   PRTPGCNV\n         SR    R0,R0\n         STH   R0,CURPAGES\nPRTPGCNV BAL   R14,CONVERT\n         MVC   PAGENO,CONVERTD\n         PUT   PRINTDCB,HEADERCC\n         MVC   CURLINES,=H'3'\n         L     R2,BUFPTR\nPRNXTBUF LH    R0,CURLINES\n         LTR   R2,R2\n         BZ    PRINTBUF\n         AH    R0,4(R2)\n         STH   R0,CURLINES\n         LA    R3,6(R2)\n         PUT   PRINTDCB,(3)\n         L     R2,0(R2)\n         B     PRNXTBUF\n         EJECT\n         SPACE 3\nPRINTBUF TM    BUF,X'80'\n         BZ    PRUPLINE\n         SR    R0,R0\n         B     PRDOPUT\nPRUPLINE SR    R14,R14\n         IC    R14,BUF\n         SRL   R14,3\n         AR    R0,R14\nPRDOPUT  STH   R0,CURLINES\n         PUT   PRINTDCB,BUF\n         TM    BUF,X'02'\n         BO    PRETURN\n         MVI   BUF+1,C' '\n         MVC   BUF+2(131),BUF+1\n         SPACE 1\nPRETURN  LM    R2,R5,PRSAVE+4\n         L     R14,PRSAVE\n         BR    R14\n         SPACE 4\nPRLKAHED AH    R2,CURLINES\n         CH    R2,MAXLINES\n         BNHR  R14\n         MVC   CURLINES,=H'999'\n         BR    R14\n         EJECT\n         SPACE 1\nRETURN   CLOSE (PRINTDCB)\n         SPACE 1\n         TM    DCBBUFCB+3+(PRINTDCB-IHADCB),X'01'\n         BO    RETQUIT\n         FREEPOOL PRINTDCB\n         SPACE 1\nRETQUIT  CLI   HDNGLIST,X'FF'\n         BNE   RETSAVER\n         L     R1,HDNGLIST\n         LH    R2,0(R1)\n         LH    R0,CURPAGES\n         AH    R0,=H'1'\n         BAL   R14,CONVERT\n         LA    R3,CONVEDIT+12\n         SR    R3,R2\n         BCTR  R2,0\n         STC   R2,*+5\n         MVC   2(*-*,R1),0(R3)\n         SPACE 1\nRETSAVER DS    0H\n         L     R13,SAVEAREA+4\n         L     R15,RETCODE\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         MVI   12(R13),X'FF'\n         SPM   R14\n         BR    R14\n         SPACE 3\nABDUMP   OI    ABCODE,X'80'        SET DUMP FLAG\n         SPACE 1\nABEND    L     R1,ABCODE           PICK UP ABEND CODE\n         ABEND (1)\n         EJECT ,\nNEWPAGE  DC    AL1(EJECTIM)\nHEADERCC DC    AL1(SPACE3AP)\nVOLSERNO DS    CL6                 CURRENT VOLUME SERIAL\n         ORG   VOLSERNO\nHEADER DS 0CL95\n       DC C'DIRECT-ACCESS VOLUME LISTING UTILITY....            '\n       DC C'   PAS. VERSION--'\n       DC C'&SYSDATE'   8 CHARS\n       DC CL31' '\nHEADMID  EQU   HEADER+19\nPRDATE   DC    CL8'03/15/84'\n         DC    CL6'  DAY='\nPRDAY    DC    CL3'999'\nPRTIME   DC    CL7'  23:59',CL4' '\n         DC    CL5'PAGE '\nPAGENO   DC    CL4'9999'\n         SPACE 3\nHEAD1    DC    C'TABLE OF CONTENTS FOR VOLUME \"'\nHEAD1VOL DC    CL6'XXXXXX',C'\" ON DEVICE \"'\nHEAD1UCB DC    CL4'XXXX',C'\" MOUNTED AS \"'\nHEAD1MT  DC    CL8'XXXXXXXX',C'/'\nHEAD1MTR DC    CL5'XXXXX',C'\"'\nHEAD1A   DC    A(HEAD1B)\n         DC    H'0'\nHEADER1  DC    AL1(SPACE0AP),CL19' ',CL26'DSNAME'\nHEADAT1A DC    C'SERIAL R/W  REFDT    CREDT    EXPDT   DSO RFM BLKSZ LRX\n               ECL KEY OP TRKAL TRKUS EX SECQU T'\nHEAD1B   DC    A(0)\n         DC    H'2'\nHEADER2  DC    AL1(SPACE2AP),44C'_',C' '\nHEADAT1B DC    C'______ ___ ________ ________ ________ ___ ___ _____ __X\n               ___ ___ __ _____ _____ __ _____ _'\n         SPACE 2\nHEAD2    DC    C'TRACK ALLOCATION MAP FOR VOLUME \"'\nHEAD2VOL DC    C'XXXXXX',C'\"'\nHEAD2A   DC    A(HEAD2B)\n         DC    H'0'\n         DC    AL1(SPACE0AP),CL22' '\n********************************** START *********** GDL-94\nHEAD2DAT DC    C'FIRST TRK   LAST TRK   FIRST    LAST   #TRKS  EX# '\n         DC    C'TYPE  '\n**********************************  END  *********** GDL-94\n         DC    CL44'DSNAME OR USAGE'\n         DC    CL13' '\nHEAD2B   DC    A(0)\n         DC    H'2'\n         DC    AL1(SPACE2AP),CL22' '\n********************************** START *********** GDL-94\nHEAD2UND DC    C'_________  _________  ______  ______  ______  ___ '\n         DC    C'____  '\n**********************************  END  *********** GDL-94\n         DC    44C'_'\n         DC    CL13' '\nPDSMSG   DC    CL19'DIRECTORY CONTAINS'\nPDSVAL1  DC    CL4'0000'\n         DC    CL18' MEMBERS AND USES '\nPDSVAL2  DC    CL4'0000'\n         DC    CL8' OF THE '\nPDSVAL3  DC    CL4'0000'\n         DC    CL39' DIRECTORY BLOCKS ALLOCATED, INCLUDING '\nPDSVAL4  DC    CL3'000'\n         DC    CL24' BYTES OF THE LAST BLOCK'\nPDSMSGLN EQU   *-PDSMSG\n         EJECT                                           KOHLS-03\n*                                                        KOHLS-03\nTRANTAB  DS    0CL256\n         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\n         DC    XL16'F1404040404040404040404040404040'  10 -> F1\n         DC    XL16'F2404040404040404040404040404040'  20 -> F2\n         DC    XL16'F3404040404040404040404040404040'  30 -> F3\n         DC    XL16'F4404040404040404040404040404040'  40 -> F4\n         DC    XL16'F5404040404040404040404040404040'  50 -> F5\n         DC    XL16'F6404040404040404040404040404040'  60 -> F6\n         DC    XL16'F7404040404040404040404040404040'  70 -> F7\n         DC    XL16'F8404040404040404040404040404040'  80 -> F8\n         DC    XL16'F9404040404040404040404040404040'  90 -> F9\n         DC    XL16'C1404040404040404040404040404040'  A0 -> C1\n         DC    XL16'C2404040404040404040404040404040'  B0 -> C2\n         DC    XL16'C3404040404040404040404040404040'  C0 -> C3\n         DC    XL16'C4404040404040404040404040404040'  D0 -> C4\n         DC    XL16'C5404040404040404040404040404040'  E0 -> C5\n         DC    XL16'C6404040404040404040404040404040'  F0 -> C6\nTEMPFLD  DC    CL1' '                                    KOHLS-03\n         EJECT                                           KOHLS-03\nVTOCDCB  DCB   DDNAME=VOLUME01,                                        X\n               DSORG=PS,                                               X\n               MACRF=(R),                                              X\n               RECFM=FS,                                               X\n               KEYLEN=44,                                              X\n               BLKSIZE=96,                                             X\n               OPTCD=C,                                                X\n               NCP=NCPDFLT,                                            X\n               EXLST=JFCBAD,                                           X\n               EODAD=VTOCEOD,                                          X\n               SYNAD=SYNADXIT\n         SPACE 8\nPDSDCB   DCB   DDNAME=VOLUME01,                                        X\n               DSORG=PS,                                               X\n               MACRF=(R),                                              X\n               RECFM=F,                                                X\n               KEYLEN=8,                                               X\n               BLKSIZE=256,                                            X\n               EXLST=JFCBAD,                                           X\n               EODAD=PDSEOD,                                           X\n               SYNAD=SYNADXIT\n         SPACE 8\nPRINTDCB DCB   DDNAME=SYSPRINT,                                        X\n               DSORG=PS,                                               X\n               EROPT=ACC,                                              X\n               MACRF=(PM),                                             X\n               RECFM=FBM,                                              X\n               LRECL=133,                                              X\n               BLKSIZE=133\n         EJECT\nOPENLIST OPEN  (VTOCDCB,(INPUT)),MF=L\nOPENFLAG EQU   OPENLIST\nOPENUPDT EQU   X'04'\n         SPACE 2\nCLOSLIST CLOSE (VTOCDCB),MF=L\nCLOSFLAG EQU   CLOSLIST\nCLOSRERD EQU   X'10'\n         SPACE 2\n         READ  VTOCDECB,SF,VTOCDCB,CAMLIST,MF=L\n         SPACE 2\n         READ  PDSDECB,SF,PDSDCB,MF=L\n         SPACE 2\nENQVTOC  RESERVE (SYSVTOC,VOLSERNO,S,6,SYSTEMS),UCB=UCBADDR,MF=L\nENQFLAGS EQU   ENQVTOC+2\nENQSHAR  EQU   X'80'\n         SPACE 1\nSYSVTOC  DC    CL8'SYSVTOC'\n         EJECT\nDATEWORD DC    D'0'\nCONVDEC  DC    D'0'\nCONVEDIT DC    CL12' '\nCONVERTD DC    CL11' ',C' '\nCONVUNPK DC    CL12' '\nNOMAPDDS DC    C'JOBLIB  '\n         DC    C'STEPCAT '                P.A.S.\n         DC    C'JOBCAT  '                P.A.S.\n         DC    C'STEPLIB '\n         DC    C'SYSCHK  '\n         DC    C'PGM=*.DD'\n         DC    C'SYSIN   '\n         DC    C'SYSPRINT'\n         DC    C'SYSABEND'\n         DC    C'SYSUDUMP'\n         DC    C'SYSMDUMP'\n         DC    C'        '\nVOLDDNAM DC    C'VOLUME00'\n         ORG   *-2\nCURVOLNM DC    C'00'\nTIME     DC    F'0'\nPARMLIST DC    A(0)\nDDNMLIST DC    A(0)\nHDNGLIST DC    A(0)\nDDLSTPTR DC    A(0)\n         SPACE 1\nEXTRACT  EQU   *\nTIOTAD   DC    A(0)\nCOMPTR   DC    A(0)\n         SPACE 1\nTIOTADDD DC    A(0)\nPDSBLKAD DC    A(PDSBLOCK,PDSBLOCK+PDSBLKLN)\nCCHH     DC    F'0'\nBUFPTR   DC    A(0)\nHOOKSTRT DC    A(*)\nHOOKEND  DC    F'-1'\nDATNORMY DC    H'365',AL1(31,28,31,30,31,30,31,31,30,31,30,31)\nDATLEAPY DC    H'366',AL1(31,29,31,30,31,30,31,31,30,31,30,31)\nCORLEFT  DC    F'0'\nCORNEXT@ DC    A(0)\nCURBLK@  DC    A(*+4)\nCORFRST@ DC    A(0)\nCURLINES DC    H'999'\nMAXPAGES DC    H'9999'\nMAXLINES DC    H'60'               DEFAULT LINES PER PAGE\nCURPAGES DC    H'0'\nJFCBAD   DC    X'87',AL3(JFCB)\nRETCODE  DC    F'0'\nABCODE   DC    F'100'              ABEND CODE 100\nSAVEAREA DC    18F'0'\nCURVOL   DC    H'0'\nDDNAMLEN DC    H'0'\nNUMVOLS  DC    H'-1'\nNCPPARM  DC    AL2(NCPDFLT)\nTRAREA   DC    CL15' ',C' '\nEFFS     DC    44X'FF'\nLASTDS1  EQU   EFFS\nZEROES   DC    44X'00'\nPARMOPT1 DC    AL1(08)    SET DEFAULT TO NO OPTIONS\nPARMOPT2 DC    AL1(0)\nTRTABLE  EQU   *-240\n         DC    C'0123456789ABCDEF'\nSTARS    DC    C'*********'\nVOLSTAT  DC    X'00'\nNUMENT   DC    A(DT2MEN)\n         DC    0F'0'\nHOOKINIT DC    2XL4'00'      MUST MATCH EXTENT DSECT     GDL-94\n         DC    F'1'\n         DC    X'FF00'\n         DC    H'0'\n         DC    A(VOLABMSG)\n         DC    F'0'\n         DC    F'0'\n         EJECT\n         SPACE 3\nDEVTABLE DC    X'06',CL15'2305-1 DISK'\n*\n         DC    X'07',CL15'2305-2 DISK'\n*\n         DC    X'0F',CL15'3390 DISK PACK'    ADDED 9/6/91 GDL.\n*\n         DC    X'09',CL15'3330 DISK PACK'\n*\n         DC    X'0D',CL15'3330-II DISK'     ADDED 4/1/75  P.A.S.\n*\n         DC    X'0A',CL15'3340-35M DISK'   ADDED 5/4/75  P.A.S.\n*\n         DC    X'0B',CL15'3350 DISK PACK'  ADDED 01/10/77 G.D.F.\n*\n         DC    X'0E',CL15'3380 DISK PACK'  ADDED 03/23/82 D.A.K.\n*\nDEVTABND DC    X'00',CL7'UNKNOWN'\n         SPACE 1\nDEVENTLN EQU   16\n         EJECT\n         LTORG\n         SPACE 1\nVOLABMSG DC    CL44'  **** VOLUME LABEL ****'\nVTOCMSG  DC    CL44'  **** VOLUME TABLE OF CONTENTS ****'\n*FMT6MSG DC    CL44'SPLIT CYLINDER(S) ...'  NO LONGER VALID    GDL-94\n         EJECT\n*        CONSTANTS ADDED FOR INDEXED VTOCS     12/81\n         SPACE 1\nCVPL     CVAFDSM ACCESS=MAPDATA,                                       X\n               COUNT=NO,               DO NOT COUNT EXTENTS            X\n               MAP=VOLUME,             ACCESS VOLUME SPACE MAP         X\n               RTA4BYTE=YES,           RETURN IN RTA FORMAT   GDL-94   X\n               EXTENTS=DT2EDT02,       EXTENT TABLE ADDRESS   GDL-94   X\n               MF=L,                   LIST FORM OF MACRO              X\n               BRANCH=NO\n        SPACE  3\n        ORG  CVPL\nCVPLMAP ICVAFPL DSECT=NO\n         EJECT\nCVPL2    CVAFDSM ACCESS=MAPDATA,MAP=VTOC,COUNT=YES,CTAREA=FMT0ADDR,    X\n               MF=L\n         EJECT\nSTORAGES DS    0D\n         SPACE 3\nBUF      DC    CL133' '            OUTPUT PRINT LINE\n         SPACE 2\n         ORG   BUF+1\nL1       DS    0CL132\nL1DSNAME DS    CL44\n         DS    C\nL1SERIAL DS    CL6\n         DS    C\nL1SECUR  DS    CL3\n         DS    C\nL1REFDT  DS    CL8\n         DS    C\nL1CREDT  DS    CL8\n         DS    C\nL1EXPDT  DS    CL8\n         DS    C\nL1DSORG  DS    CL3\n         DS    C\nL1RECFM  DS    CL3\n         DS    C\nL1BLKSIZ DS    CL5\n         DS    C\nL1LRECL  DS    CL5\n         DS    C\nL1KEYLEN DS    CL3\n         DS    C\nL1OPTCD  DS    CL2\n         DS    C\nL1TRKAL  DS    CL5\n         DS    C\nL1TRKUS  DS    CL5\n********************************** START *********** SMA 3/88  CHANGED\nL1NOEPV  DS    CL3\n**********************************  END  *********** SMA 3/88  CHANGED\n         DS    C\nL1SECQU  DS    CL5\n         DS    C\nL1TYP    DS    CL1\n         SPACE 1\n         ORG   L1SERIAL\nL1LSTDT  DS    CL8\n         DS    C\nL1USCNT  DS    CL5\n         ORG   ,\n         EJECT\nPRSAVE   DS    5A\nDASAVE   DS    5A\n         DS    0D\nPDSBLOCK DS    2XL(PDSBLKLN)\nCAMLIST  DS    XL(CAMLSTLN)\n         SPACE 1\nSTART0   DS    0H                  START OF CORE ZEROED FOR EACH VOL\n         SPACE 1\nDEVTYPE  DS    6F\nUCBADDR  DS    A\nFIRSTDS1 DS    A\nFMT4AD   DS    A\nFMT5AD   DS    A\n*FMT6AD   DS    A                                    GDL-94\nFMT0ADDR DS    A                     DAK 3/82\n*FMT5TT   DS    H                                    GDL-94\n*FMT5CYLS DS    H                                    GDL-94\n         SPACE 1\nREBLOCK@ DS    F\nRENEXT@  DS    F\nREBLKSIZ DS    F\nRECOUNT  DS    F\nRENCP    DS    F\nREGETSIZ DS    F\n         SPACE 1\nFMXCOUNT DS    0H                  COUNT FIELDS MUST BE TOGETHER\n*                    INDEXED ACCESS KEEP ALL COUNTS IN ORDER  GDL-94\nFM0COUNT DS    H                NOT USED       GDL-94\nFM1COUNT DS    H\nFM2COUNT DS    H                NOT USED       GDL-94\nFM3COUNT DS    H                NOT USED       GDL-94\nFM4COUNT DS    H\nFM5COUNT DS    H                NOT USED       GDL-94\nFM6COUNT DS    H                NOT USED       GDL-94\n         SPACE 1\nAVAILCYL DS    H\nAVAILSPC DS    F                                    GDL-94\nAVAILEXT DS    H\nVTOCSIZE DS    H\nLOWTT    DS    F                                     GDL-94\nHIGHTT   DS    F                                     GDL-94\n         SPACE 1\nHOOKPTR  DS    F     THIS AREA MAPED BY EXTENT DSECT GDL-94\nHOOKLCCH DS    XL4         BEGINING CCHH OF EXTENT   GDL-94\nHOOKHCCH DS    XL4         ENDING CCHH OF EXTENT     GDL-94\nHOOKNTRK DS    F           NUMBER OF TRACKS IN EXT   GDL-94\nHOOKTYPE DS    X           TYPE RECORD               GDL-94\nHOOKSEQN DS    X     EXTENT SEQ NUMBER WITHIN FILE   GDL-94\n         DS    H        FOR ALIGNMENT NOT USED       GDL-94\nHOOKIDPT DS    A           ADDRESS OF DESCRIPTION    GDL-94\nHOOKLOTT DS    F           BEGINING TRACK OF EXTENT  GDL-94\nHOOKHITT DS    F           ENDING TRACK OF EXTENT    GDL-94\n         SPACE 1\nF1TRKAL  DS    F\nDEVTABPT DS    A                   POINTER TO CURRENT DEVTABLE ENTRY\nDEVCONV1 DS    H              NUM TRKS PER 256 CYL   GDL-94\nDEVCONV2 DS    H              NUM TRKS PER CYL       GDL-94\nDEVCONV3 DS    H              H'0'                   GDL-94\nDEVCONV4 DS    H              H'1'                   GDL-94\nTRKSPVOL DS    F              NUMBER OF TRKS PER VOL GDL-94\nTRKSPCYL DS    H              NUMBER TRKS PER CYL    GDL-94\nCRATRACK DS    H              REL TRACK ADDRESS OF VSAM CRA\nHWMOLD   DS    XL5\nHWMDS1   DS    XL5\nHWMNEW   DS    XL5\nHWMINDIC DS    X\nF5LARGST DS    H              LARGEST EXTENT IN CYL  GDL-94\nSYNADFLG DS    X\nOBCCHHR  DS    XL5\nBADDSTYP DS    C\nF5LARGTT DS    F            LARGEST FREE EXTENT IN TRACKS   GDL-94\n         SPACE 1\n         DS    0H\nVTOCTTR  DS    0XL3\nVTOCTT   DS    H\nVTOCR    DS    X\nVTOCMBB  DS    0XL3\nVTOCM    DS    X\nVTOCBIN  DS    H\nVTOCCCHH DS    XL4\nVTDSCBTR DS    H\n         SPACE 1\nEND0     DS    0H                  END OF CORE ZEROED FOR EACH VOL\nLENGTH0  EQU   END0-START0         AMOUNT TO BE ZEROED\n         SPACE 1\nNUMEXT   DS    H\n********************************** START *********** SMA 3/88\nWRKEXT   DS    H                   NUMBER OF EXTENTS LEFT      ADDED\nLSTEXT   DC    H'16'               LAST NUMBER OF EXTENTS      ADDED\nLISTEXT  DS    128A                EXTENT TABLE                CHANGED\n         DC    A(0)                END OF EXTENT TABLE         ADDED\n**********************************  END  *********** SMA 3/88\nPDSAVE   DS    6A\nPDSENTAD DS    A\nPDSBYTCT DS    H\nPDSBLKAL DS    H\nPDSBLKUS DS    H\nPDSMEMCT DS    H\nISAVE    DS    5A\nEXPFLAG  DS    X\nEXSAVE   DS    3A\nVTSAVE   DS    4A\nF1SAVE   DS    A\nF5SAVE   DS    6A\nHOSAVE   DS    4A\nDUSAVE   DS    A\n********************************** START *********** SMA 3/88  ADDED\nR3EXT    DS    A                   EXTENT TABLE POINTER SAVE AREA\nR3EXTHLD DS    A                   REGISTER 3 SAVE AREA\n**********************************  END  *********** SMA 3/88  ADDED\nINDXSAVE DS    A                                DAK 03/82\n         EJECT ,\n         IEFJFCBN\n         SPACE 1\nJFCB     EQU   INFMJFCB\n         SPACE 3\n         ORG   STORAGES\n         EJECT\n         SPACE 1\nINIT     DS    0H\n         L     R2,0(R1)\n         ST    R2,PARMLIST\n         LTR   R2,R2\n         BM    GETTIME\n         L     R2,4(R1)\n         ST    R2,DDNMLIST\n         LTR   R2,R2\n         BM    CHEKDDNM\n         L     R2,8(R1)\n         ST    R2,HDNGLIST\n         SPACE 1\n         LA    R2,0(R2)\n         LTR   R2,R2\n         BZ    CHEKDDNM\n         LH    R3,0(R2)\n         LA    R2,2(R2)\n         BAL   R14,PARMPARS\n         LTR   R0,R0\n         BNP   CHEKDDNM\n         CH    R0,=H'9999'\n         BH    CHEKDDNM\n         BCTR  R0,0\n         STH   R0,CURPAGES\n         MVI   HDNGLIST,X'FF'\n         SPACE 1\nCHEKDDNM TM    PARMLIST,X'80'\n         BO    GETTIME\n         L     R1,DDNMLIST\n         LH    R0,0(R1)\n         SH    R0,=H'8'\n         BM    GETTIME\n         OI    DDNMLIST,X'F0'\n         STH   R0,DDNAMLEN\n         MVC   DCBDDNAM+(PRINTDCB-IHADCB),2(R1)\n         SH    R0,=H'8'\n         BM    GETTIME\n         LA    R1,10(R1)\n         ST    R1,DDLSTPTR\n         OI    DDNMLIST,X'0F'\n         SPACE 1\nGETTIME  TIME  DEC\n         SRL   R0,4\n         ST    R0,TIME\n         MVC   PRTIME,=X'402120207A2020'\n         ED    PRTIME,TIME\n         ST    R1,DATEWORD+4\n         UNPK  TRAREA,DATEWORD+6(8)\n         TR    TRAREA,TRTABLE\n         MVC   PRDAY,TRAREA\n         SR    R2,R2\n         LA    R3,PRDATE\n         BAL   R14,DATEDIT\n         SPACE 1\n         OPEN  (PRINTDCB,(OUTPUT))\n         TM    DCBOFLGS+(PRINTDCB-IHADCB),DCBOFOPN\n         BNZ   *+8\n         BAL   R14,ABEND\n         MVI   BUF,C' '\n         MVC   BUF+1(L'BUF-1),BUF\n         SPACE 1\n         EXTRACT EXTRACT,FIELDS=(TIOT,COMM)\n         L     R1,TIOTAD\n         LA    R1,TIOENTRY-TIOT(,R1)\n         ST    R1,TIOTADDD\n         SPACE 1\n         MVC   BUF+10(21),=C'EXEC PARAMETER FIELD:'\n         L     R1,COMPTR\n         L     R1,COMCIBPT-COM(,R1)\nTESTCIB  LA    R1,0(,R1)\n         LTR   R1,R1\n         B     PARMEX                AXC   NEVER CHECK CIB\n         BZ    PARMEX                AXC   NEVER CHECK CIB\n         USING CIB,R1\n         CLI   CIBVERB,CIBSTART\n         BE    PARMCIB\n         L     R1,CIBNEXT\n         B     TESTCIB\n         SPACE 1\nPARMCIB  LA    R1,CIBDATLN\n         ST    R1,PARMLIST\n         DROP  R1\n         MVC   BUF+9(5),=C'START'\n         SPACE 1\nPARMEX   L     R2,PARMLIST\n         LH    R3,0(R2)\n         LA    R2,2(R2)\n         CH    R3,=H'99'\n         BL    PARMLNOK\n         MVC   BUF+30(28),=C' IS TOO LONG AND WAS IGNORED'\n         SR    R3,R3\n         B     PARMPRNT\n         SPACE 1\nPARMLNOK LTR   R1,R3\n         BZ    PARMPRNT\n         BCTR  R1,0\n         STC   R1,*+5\n         MVC   BUF+33(*-*),0(R2)\nPARMPRNT MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 1\nPARMLOOP BAL   R14,PARMPARS\n         TM    PARMOPT2,VOLSOPT\n         BO    PARMVOL2\n         TM    PARMOPT2,LNCNTOPT\n         BO    PARMLCT2\n         TM    PARMOPT2,NCPOPT\n         BO    PARMNCP2\n         CLI   PARMBUF,C' '\n         BE    PARMDONE\n         SPACE 1\n         LA    R0,12\n         LA    R1,PARMS\nPARMCOMP CLC   PARMBUF,0(R1)\n         BE    GOTPARM\n         BXH   R1,R0,PARMCOMP\n         SPACE 1\nGOTPARM  MVC   PARMVALS,8(R1)\n         MVC   *+8(2),10(R1)\n         B     *-*\n         SPACE 1\nPARMSET  SR    R15,R15\n         IC    R15,PARMVALS+1\n         LA    R15,PARMOPT1(R15)\n         SR    R0,R0\n         IC    R0,PARMVALS\n         CLI   PARMVALS,128\n         BH    PARMOFF\n         STC   R0,*+5\n         OI    0(R15),*-*\n         B     PARMLOOP\n         SPACE 1\nPARMOFF  STC   R0,*+5\n         NI    0(R15),*-*\n         B     PARMLOOP\n         SPACE 1\nDEBUGON  OI    CLOSLIST,CLOSRERD\n         B     PARMSET\n         SPACE 1\nDEBUGOFF NI    CLOSLIST,255-CLOSRERD\n         B     PARMSET\n         SPACE 1\nPDSON    L     R15,TIOTAD\n*        CLI   TIOCNJOB+3-TIOT(R15),C'$'    DELETED  4/1/75  P.A.S.\n*        BNE   PARMERR      DELETED  4/1/75   P.A.S.\n         B     PARMSET\n         SPACE 1\nRESETON  NI    ENQFLAGS,255-ENQSHAR\n         OI    CLOSLIST,CLOSRERD\n         B     PARMSET\n         SPACE 1\nRESETOFF OI    ENQFLAGS,ENQSHAR\n         NI    CLOSLIST,255-CLOSRERD\n         B     PARMSET\n         SPACE 1\nPARMVOL2 NI    PARMOPT2,255-VOLSOPT\n         LTR   R0,R0\n         BNP   PARMERR\n         CH    R0,=H'99'\n         BH    PARMERR\n         STH   R0,NUMVOLS\n         B     PARMLOOP\n         SPACE 1\nPARMLCT2 NI    PARMOPT2,255-LNCNTOPT\n         LTR   R0,R0\n         BNP   PARMERR\n         CH    R0,=H'999'\n         BNL   PARMERR\n         STH   R0,MAXLINES\n         B     PARMLOOP\n         SPACE 1\nPARMNCP2 NI    PARMOPT2,255-NCPOPT\n         LTR   R0,R0\n         BNP   PARMERR\n         CH    R0,=H'99'\n         BH    PARMERR\n         STH   R0,NCPPARM\n         B     PARMLOOP\n         SPACE 1\nPARMERR  MVI   BUF+10,C'\"'\n         MVC   BUF+11(8),PARMBUF\n         MVC   BUF+19(41),=C'\" IS AN ILLEGAL PARAMETER AND WAS IGNORED'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         B     PARMLOOP\n         SPACE 1\nPARMDONE OI    PARMOPT2,VOLSOPT\n         LH    R0,NUMVOLS\n         CH    R0,=H'-1'\n         BNE   PARMVOL#\n         NI    PARMOPT2,255-VOLSOPT\n         MVC   NUMVOLS,=H'99'\n         MVC   BUF+10(3),=C'ALL'\n         B     PARMVLPR\n         SPACE 1\nPARMVOL# BAL   R14,CONVERT\n         MVC   BUF+10(3),CONVEDIT+9\nPARMVLPR MVC   BUF+14(24),=C'VOLUME(S) WILL BE LISTED'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 1\n         CLC   NCPPARM,=H'1'\n         BNE   *+8\n         OI    PARMOPT2,NCPOPT\n         TM    PARMOPT1,LSTDTOPT\n         BZ    PARMDDCK\n         MVC   HEADAT1A(14),=C' LSTDT   USCNT'\n         MVC   HEADAT1B(14),=C'________ _____'\n         SPACE 1\nPARMDDCK TM    DDNMLIST,X'F0'\n         BNO   PARMHDCK\n         MVC   BUF+10(36),=C'AN INTERNAL DDNAME LIST WILL BE USED'\n         TM    DDNMLIST,X'0F'\n         BO    *+10\n         MVC   BUF+47(14),=C'FOR PRINT ONLY'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 1\nPARMHDCK CLI   HDNGLIST,X'FF'\n         BNE   PRTINFO      ADDED 4/1/75  P.A.S.  FOR 'HELP'\n         MVC   BUF+10(35),=C'AN INTERNAL PAGE COUNT WILL BE USED'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 3\nPRTINFO  EQU   *\n         LA    R3,PRTINFOL  POINT TO INFO LISTING\n         LA    R2,16    NUMBER OF LINES TO PRINT\nPRTINFOA MVC   BUF+9(47),0(R3)  MOVE LINE TO BUFFER\n         MVI   BUF,SPACE1AP   INSERT CARRIAGE CONTROL\n         LA    R3,47(R3)  INCREMENT TO NEXT LINE\n*        BAL   R14,PRINT\n         BCT   R2,PRTINFOA GO AGAIN\n         MVI   BUF,SPACE3IM\n*        BAL   R14,PRINT\n         MVC   BUF+9(33),=C'*** OPERATING SYSTEM RUN ON .... '\n         MVI   BUF,SPACE3AP\n         L     R3,16  POINT TO CVT\n         LA    R3,116(R3)   POINT TO OPERATING SYS\n         TM    0(R3),X'40'  PCP\n         BNO   *+10\n         MVC   BUF+42(4),=C'PCP '\n         TM    0(R3),X'20'  MFT\n         BNO   *+10\n         MVC   BUF+42(4),=C'MFT '\n         TM    0(R3),X'10'  MVT\n         BNO   *+10\n         MVC   BUF+42(4),=C'MP65'\n         TM    0(R3),X'22'  VS1\n         BNO   *+10\n         MVC   BUF+42(4),=C'VS1 '\n         TM    0(R3),X'12'  VS2 REL 1 (SVS)\n         BNO   *+10\n         MVC   BUF+42(4),=C'SVS '\n         TM    0(R3),X'11'  VS2 REL 2+  (MVS)\n         BNO   *+10\n         MVC   BUF+42(4),=C'MVS '\n*        BAL   R14,PRINT\n         B     NEXTVOL\nPRTINFOL DC    C'**********  EXECUTION  PARM  VALUES  **********'\n         DC    C'*  MAP.....PRODUCE A TRACK MAP OF VOLUME      *'\n         DC    C'*  PDS.....LIST ALL PDS DIRECTORIES ON VOLUME *'\n         DC    C'*  ISAM....LIST ISAM REORG INFO FOR DATASETS  *'\n         DC    C'*  EXT.....LIST THE EXTENTS OF THE DATASETS   *'\n         DC    C'*  DUMP....LIST (HEX) ALL DSCB''S ON VOLUME    *'\n         DC    C'*  EMPTY...LIST ONLY DATASETS THAT ARE EMPTY  *'\n         DC    C'*  MODEL...WILL ONLY LIST \"MODEL DSCB''S\"      *'\n         DC    C'*  SDUMP...LIST (HEX) FORMAT 4 AND 5 DSCB''S   *'\n         DC    C'*  VOLS....ONLY USE DDNAMES OF \"VOLUME--\",    *'\n         DC    C'*      FORMAT--\"VOLS=X\", WHERE \"X\" IS MAX #   *'\n         DC    C'*  JDATE...LIST CREATE/EXPIRE DATE IN JULIAN  *'\n         DC    C'*                                             *'\n         DC    C'** ALL DASD ALLOCATED TO STEP WILL BE LISTED  *'\n         DC    C'**  EXCEPT SYSTEM DD''S...SYS--, STEP--, ETC.  *'\n         DC    C'*****  DO NOT USE A DDNAME OF \"SYS000\"  *******'\n         EJECT\n         SPACE 3\nPARMPARS SR    R0,R0\n         MVC   PARMBUF,=CL8' '\n         LA    R4,PARMBUF\n         SPACE 1\nPRMLOOK  CH    R3,=H'0'\n         BNHR  R14\n         CLI   0(R2),C' '\n         BE    PRMIGNOR\n         CLI   0(R2),C','\n         BE    PRMRETRN\n         CLI   0(R2),C'='\n         BE    PRMRETRN\n         LTR   R0,R0\n         BM    PRMNOT#\n         TM    0(R2),X'F0'\n         BNO   PRMNOT#\n         IC    R15,0(R2)\n         N     R15,=F'15'\n         CH    R15,=H'10'\n         BNL   PRMNOT#\n         MH    R0,=H'10'\n         AR    R0,R15\n         B     PRMSHIFT\n         SPACE 1\nPRMNOT#  LH    R0,=H'-1'\nPRMSHIFT C     R4,=A(PARMBUF+L'PARMBUF)\n         BNL   PRMIGNOR\n         MVC   0(1,R4),0(R2)\n         LA    R4,1(R4)\nPRMIGNOR LA    R2,1(R2)\n         BCTR  R3,0\n         B     PRMLOOK\n         SPACE 1\nPRMRETRN LA    R2,1(R2)\n         BCTR  R3,0\n         BR    R14\n         EJECT ,\n         SPACE 3\nPARMS    DS    0H\n         DC    C'LINECNT ',AL1(LNCNTOPT),AL1(1),S(PARMSET)\n         DC    C'NCP     ',AL1(NCPOPT),AL1(1),S(PARMSET)\n         DC    C'MODEL   ',AL1(MODELOPT),AL1(1),S(PARMSET)\n         DC    C'VOLS    ',AL1(VOLSOPT),AL1(1),S(PARMSET)\n         DC    C'EMPTY   ',AL1(EMPTYOPT),AL1(0),S(PARMSET)\n         DC    C'NOEMPTY ',AL1(255-EMPTYOPT),AL1(0),S(PARMSET)\n         DC    C'DEBUG   ',AL1(DEBUGOPT),AL1(1),S(DEBUGON)\n         DC    C'NODEBUG ',AL1(255-DEBUGOPT),AL1(1),S(DEBUGOFF)\n         DC    C'DUMP    ',AL1(DUMPOPT),AL1(0),S(PARMSET)\n         DC    C'NODUMP  ',AL1(255-DUMPOPT),AL1(0),S(PARMSET)\n         DC    C'EXT     ',AL1(EXTNTOPT),AL1(0),S(PARMSET)\n         DC    C'NOEXT   ',AL1(255-EXTNTOPT),AL1(0),S(PARMSET)\n         DC    C'ISAM    ',AL1(ISAMOPT),AL1(1),S(PARMSET)\n         DC    C'NOISAM  ',AL1(255-ISAMOPT),AL1(1),S(PARMSET)\n         DC    C'JDATE   ',AL1(JDATEOPT),AL1(1),S(PARMSET)\n         DC    C'NOJDATE ',AL1(255-JDATEOPT),AL1(1),S(PARMSET)\n         DC    C'LSTDT   ',AL1(LSTDTOPT),AL1(0),S(PARMSET)\n         DC    C'NOLSTDT ',AL1(255-LSTDTOPT),AL1(0),S(PARMSET)\n         DC    C'MAP     ',AL1(MAPOPT),AL1(0),S(PARMSET)\n         DC    C'NOMAP   ',AL1(255-MAPOPT),AL1(0),S(PARMSET)\n         DC    C'PDS     ',AL1(PDSOPT),AL1(0),S(PDSON)\n         DC    C'NOPDS   ',AL1(255-PDSOPT),AL1(0),S(PARMSET)\n         DC    C'RESET   ',AL1(RESETOPT),AL1(1),S(RESETON)\n         DC    C'NORESET ',AL1(255-RESETOPT),AL1(1),S(RESETOFF)\n         DC    C'SDUMP   ',AL1(SDUMPOPT),AL1(0),S(PARMSET)\n         DC    C'NOSDUMP ',AL1(255-SDUMPOPT),AL1(0),S(PARMSET)\nPARMBUF  DC    C'        ',AL1(0),AL1(0),S(PARMERR)\n         SPACE 1\nPARMVALS DS    XL2\n         EJECT ,\n         LTORG\n         SPACE 1\n         ORG   ,\n         EJECT\nUCB      DSECT\n         IEFUCBOB\n         EJECT\nTIOT     DSECT\n         IEFTIOT1\n         EJECT\n         SPACE 3\n         DCBD  DSORG=BS,DEVD=DA\n         EJECT\n         SPACE 3\nDS1      DSECT\n         IECSDSL1 (1)\nDS1FDAD  DS    XL8                 FULL DA ADDRESS OF F1 DSCB\nDS1F3PTR DS    A                   @ OF F3 DSCB, IF ANY\nDS1F1PTR DS    A                   @ OF NEXT F1 DSCB\nDS1LEN   EQU   *-DS1\n         SPACE 1\n         ORG   DS1SYSCD-1\nDS1SECLV DS    XL1\n         ORG   DS1SYSCD+13\nDS1LSTDT DS    XL3\nDS1USCNT DS    XL2\n         EJECT ,\n         SPACE 3\nDS2      DSECT\n         IECSDSL1 (2)\nDS2FDAD  DS    XL8                 FULL DA ADDRESS OF F2 DSCB\nDS2F3PTR DS    A                   POINTER TO FMT3 DSCB, IF ANY\nDS2LEN   EQU   *-DS2\n         EJECT\n         SPACE 3\nDS3      DSECT\n         IECSDSL1 (3)\nDS3FDAD  DS    XL8                 FULL DA ADDRESS OF F3 DSCB\nDS3F2PTR DS    A                   POINTER TO FMT2 DSCB, IF ANY\nDS3LEN   EQU   *-DS3\n         EJECT\n         SPACE 3\nDS4      DSECT\nDS4KEYID DS    XL44\n         IECSDSL1 (4)\nDS4FDAD  DS    XL8\nDS4LEN   EQU   *-DS4\n*\n         ORG   DS4NOEXT+2\nDS4SECLV DS    XL1                 PRIV LEVEL REQ. FOR VTOC ACCESS\n         ORG   DS4DEVDB+9          VSAM OWNERSHIP BIT  X'80'\nDS4VSAM  DS    XL1                 USED TO PREVENT MULTIPLE OWNERS\n         EJECT\n         SPACE 3\nDS5      DSECT\n         IECSDSL1 (5)\n*DS5FDAD  DS    XL8                               GDL-94\n*DS5F5PTR DS    A                                 GDL-94\nDS5LEN   EQU   *-DS5\n         SPACE 3\n*DS6      DSECT             NO LONGER SUPPORTED   GDL-94\n*        IECSDSL1 (6)                             GDL-94\n*DS6FDAD  DS    XL8                               GDL-94\n*DS6F6PTR DS    A                                 GDL-94\n*DS6LEN   EQU   *-DS6                             GDL-94\n         EJECT\n         SPACE 3\nCOM      DSECT\n         IEZCOM\n         EJECT ,\n         SPACE 3\nCIB      DSECT\n         IEZCIB\n         EJECT\n         SPACE 1\nEXTENT   DSECT ,          MAPS HOOK AREA        GDL-94\nEXTPTR   DS    A\nEXTLCCHH DS    XL4\nEXTHCCHH DS    XL4\nEXTNOTRK DS    F                                GDL-94\nEXTTYPE  DS    X\nEXTSEQNO DS    X\n         DS    H         ADDED FOR ALIGNMENT    GDL-94\nEXTIDPTR DS    A\nEXTLOTT  DS    XL4                              GDL-94\nEXTHITT  DS    XL4                              GDL-94\nEXTNTLEN EQU   *-EXTENT\n         SPACE 1\nEXLINE   DSECT\nEXLLPARN DS    C\nEXLFCC   DS    CL4\nEXLFPRD  DS    C\nEXLFHH   DS    CL4\n         DS    2C\nEXLLCC   DS    CL4\nEXLLPRD  DS    C\nEXLLHH   DS    CL4\n         DS    2C\nEXLFTT   DS    CL6                                  GDL-94\n         DS    2C\nEXLLTT   DS    CL6                                  GDL-94\n         DS    2C\nEXLNOTRK DS    CL6                                  GDL-94\nEXLRPARN DS    C\n********************************** START *********** SMA 3/88  CHANGED\n         DS    C\nEXLSEQNO DS    CL3                 EXPANDED TO ALLOW FOR OVER 99 EXTS\n         DS    C\n********************************** END T *********** SMA 3/88  CHANGED\nEXLTYPE  DS    CL4\n         DS    2C\nEXLDSNAM DS    CL44\nEXLSPLIT EQU   EXLDSNAM+33\n         SPACE 1\nPDS      DSECT\nPDSHKEY  DS    CL8\nPDSCOUNT DS    H\n         SPACE 1\nPDSENTRY EQU   *\nPDSNAME  DS    CL8\nPDSTTRP  DS    XL3\nPDSINDIC DS    B\nPDSALIAS EQU   X'80'\nPDS#TTRS EQU   X'60'\nPDSUSERH EQU   X'1F'\nPDSUSERD DS    0X\n         SPACE 3\nDISKMAP  CSECT\n         SPACE 1\n*FM5ID    DC    XL4'0505050505'         FMT 5 FIELD    GDL-94\n         ICVEDT02 DSECT=NO,ENTRY=128                   GDL-94\n         END   DISKMAP            BROTHER, YOU ASKED FOR IT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISKMAPA": {"ttr": 1800, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x022_\\x01\\x022_\\x185\\x0c\\xdc\\x0c\\xdc\\x00\\x00\\xf1\\xe2\\xe3\\xd7\\xd9\\xc5\\xe5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-11-21T00:00:00", "modifydate": "2002-11-21T18:35:15", "lines": 3292, "newlines": 3292, "modlines": 0, "user": "1STPREV"}, "text": "*******************************************************************\n*                                                                 *\n*  DISKMAP WAS MODIFIED SOMEWHERE ALONG THE WAY TO :              *\n*                                                                 *\n*    1. ALWAYS GIVE A TRACK MAP. PARMOPT1 WAS CHANGED FROM 00 TO  *\n*       08 WHICH SPECIFIES THE MAP OPTION                         *\n*                                                                 *\n*    2. MAXLINES WAS INCREASED FROM 58 TO 88 LINES PER PAGE       *\n*                                                                 *\n*    3. IF YOU WANT THE PARMS PRINTED OUT ON THE SYSPRINT LISTING *\n*       REMOVE THE * IS COLUMN 1 OF ALL THE BAL R14,PRINT         *\n*       STATEMENTS IN THE INIT SECTION                            *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT RACF.  IF THE RACF BIT IS ON   *\n*    FOR A DATASET THE WORD \"RAC\" WILL APPEAR IN THE \"R/W\" FIELD. *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT INDEXED VTOCS AND 3380 DEVICES *\n*    IN 3/82 BY DRU KOWNACKI.  TO CONTACT HER IN CASE OF PROBLEMS *\n*    GO THROUGH ARNOLD CASINGHINO OF CONN. BANK & TRUST (CBT) AT  *\n*    (203) 244-5495 WHO WILL THEN CONTACT DRU.                    *\n*                                                                 *\n********************** C B T **************************************\n*  A USER OF THIS CODE DECIDED TO USE A PARM OF RESET, WHICH WILL *\n*  RESET THE HIGH WATER MARK IN THE VTOC. IT DID ALRIGHT BUT IT   *\n*  SET IT TO 512 (ON A 3350) AND THE ARM BOUNCED ALL OVER THE     *\n*  PLACE. BE CAREFUL !!!!!!!!                                     *\n********************** C B T ***************************************\n*\n*******************************************************************\n* MAINTENANCE:                                                    *\n*                                                                 *\n* 11/03/87 - UPDATED CODE TO SUPPORT 3380 K'S          LMN-CBT    *\n*                                                                 *\n*******************************************************************\n* 05/??/88                                                        *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT OVER 16 EXTENTS FOR VSAM FILES *\n*    CHANGED OR ADDED CODE IS COMMENTED BY \"SMA 3/88\"             *\n*                                                                 *\n*  NOTE: WHEN THERE ARE OVER 99 EXTENTS THE 'EX' COLUMN ON THE    *\n*  VTOC LISTING WILL OCCUPY 3 POSITIONS THEREBY ELIMINATING THE   *\n*  SINGLE SPACE BETWEEN THE 'TRKAL' COLUMN AND THE 'EX' COLUMN.   *\n*  VISUALLY, THIS MAY NOT BE DESIRABLE, BUT FOR THE NUMBER OF     *\n*  TIMES THAT THIS MAY OCCUR, IT DIDN'T SEEM WORTH REFORMATTING   *\n*  THE REPORT, ESPECIALLY IF THE REPORT IS USED AS INPUT TO OTHER *\n*  DASD MANAGEMENT PROGRAMS.                                      *\n*                                                                 *\n*******************************************************************\n* 09/06/91                                                        *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT 3390            GDL            *\n*******************************************************************\n* 09/20/94                                    GDL-94              *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT 3390 MOD 9'S.                  *\n*  FIELD SIZES INCREACED AND PROCESSING OF FORMAT 5 RECORDS       *\n*  REPLACED WITH CVAFDSM USING RTA4BYTE=YES. THIS REQUIRES        *\n*  RUNNING ON A SYSTEM THAT SUPPORTS INDEX VTOCS. FORMAT 6        *\n*  RECORDS DROPPED AS NO LONGER SUPPORTED.                        *\n*  ALL CHANGED LINES OUTSIDE THIS BOX MARKED      GDL-94          *\n*******************************************************************\n* 07/17/2000                                                      *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SKIP FMT 7 DSCB        GDL-2000        *\n*******************************************************************\n* 11/21/2002                                  KOHLS-02            *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO CORRECT CVSTAT=X'1F' FOR VOLUME=MAP    *\n*  WHEN NUMBER OF FREE EXTENTS=128 OR MULTIPLE ON END OF VOLUME.  *\n*******************************************************************\n*\n*DESCRIPTION        -         DISKMAP FOR ALL DASD DEVICES.\n*\n*\n*\n*CONTACT            -         GARY D. FROEMEL\n*                             JOHNS-MANVILLE\n*                             KEN-CARYL RANCH\n*                             P.O. BOX 5108\n*                             DENVER,COLO.  80217\n*TELEPHONE          -         303-979-1000\n*FUNCTION -DIRECT ACCESS VOLUME LISTING UTILITY.\n*          IT WILL PRODUCE A LISTING OF EVERY DATASET ON A VOLUME\n*          PLUS CALCULATE THE FREE SPACE, FREE DSCBS ETC. OPTIONALLY\n*          VIA PARM INFORMATION IT WILL PRODUCE THE FOLLOWING:\n*         PARM='MAP - PRODUCE A TRACK MAP OF VOLUME.\n*         PARM='PDS - LIST ALL PDS DIRECTORIES ON VOLUME.\n*         PARM='ISAM - LIST ISAM REORG ONFORMATION FOR DATASETS.\n*         PARM='EXT- LIST THE EXTENTS OF THE DATASETS.\n*         PARM='DUMP - LIST IN HEX ALL DSCBS ON VOLUME.\n*         PARM='EMPTY - LIST ONLY DATASETS THAT ARE EMPTY.\n*         PARM='MODEL - WILL ONLY LIST MODEL DSCBS.\n*         PARM='SDUMP - LIST IN HEX FORMAT 4 AND 5 DSCBS.\n*         PARM='VOLS - ONLY USE DDNAMES OF VOLUMEXX    .\n*         PARM='JDATE - LIST CREATION/EXPIRATION DATES IN JULIAN.\n******     OTHER COMMENT ARE DOCUMENTED IN BEGINING OF SOURCE.\n******     NOTE - SYS1.AMODGEN MUST BE CONCATENATED TO MACLIB FOR ASMB\n*\nDISKMAP  TITLE '... MACROS NOT FOUND IN SYS1.AMODGEN....'\n         MACRO\n         IEZCOM\nCOMECBPT DS    F    ADDRESS OF THE ECB FOR STARTED TASK\nCOMCIBPT DS    F    ADDRESS OF THE START OF THE CIB CHAIN FOR THIS TASK\n         MEND\n         SPACE 3\n         MACRO\n         IEZCIB\n         DS    0D\nCIBNEXT  DS    A    NEXT CIB\nCIBVERB  DS    C\n*\nCIBSTART EQU   X'04'\nCIBMODFY EQU   X'44'\nCIBSTOP  EQU   X'40'\nCIBMOUNT EQU   X'0C'\n*\nCIBLEN   DS    FL1\n         DS    XL4  RESERVED\nCIBASID  DS    0H  ADDRESS SPACE ID..VS2\nCIBTJID  DS    CL2  TSO JID\nCIBCONID DS    C  CONSOLE ID ISSUING COMM\n         DS    X  RESERVED\nCIBDATLN DS    H\nCIBDATA  DS    CL8\n         MEND\n         TITLE  '... DIRECT ACCESS VOLUME LISTER ...'\nDISKMAP  CSECT\n         SPACE 1\n*\n* WHEN ASSEMBLING DISKMAP SYS1.AMODGEN MUST BE CONCATENATED TO\n* SYS1.MACLIB.\n*\n* WHEN LINKEDITING DISKMAP IT MUST BE AUTHORIZED (SETCODE AC=1) AND BE\n* PLACED IN AN AUTHORIZED LIBRARY.  I.E. LNKLST00 LIBRARY\n* USE FOLLOWING JCL TO EXECUTE DISKMAP\n* //STEP EXEC PGM=DISKMAP,REGION=1024K (1024K FOR LARGE VTOCS)\n* //SYSPRINT DD SYSOUT=A\n* //ANYNAME DD UNIT=WHATEVER,VOL=SER=WHATEVER,DISP=OLD (DISKMAP WILL\n* LIST ANY DDCARD IN STEP EXCEPT FOR RESERVED DDNAMES SUCH AS STEPLIB,\n* STEPCAT ETC. AS MANY DDCARDS CAN BE INCLUDED AS NEEDED\n*\n* REFER TO THE SYSPRINT OUTPUT LISTINGS FOR PARM INFORMATION.\n* PARM INFORMATION DOESNOT HAVE TO BE SPECIFIED.\n*\n* DISKMAP WILL WORK ON MVS,SVS,VS1,MVT,MFT,PCP OPERATING SYSTEMS\n* IT ALSO SUPPORTS 3350S AS OF 01/77\n*\nR0       EQU   0                   WORK\nR1       EQU   1                   WORK\nR2       EQU   2                   WORK\nR3       EQU   3                   WORK\nR4       EQU   4                   WORK\nR5       EQU   5                   WORK\nR6       EQU   6                   -> FM1, FM4 DSCB, PDS ENTRY\nR7       EQU   7                   -> FM2 DSCB, IF ANY\nR8       EQU   8                   -> FM3, FM5 DSCB, IF ANY\nR9       EQU   9                   BASE REG 1\nR10      EQU   10                  BASE REG 2\nR11      EQU   11                  BASE REG 3\nR12      EQU   12                  BASE REG 4\nR13      EQU   13                  -> SAVE AREA\nR14      EQU   14                  LINK, WORK\nR15      EQU   15                  WORK\n         SPACE 1\nSPACE0AP EQU   X'01'\nSPACE1AP EQU   X'09'\nSPACE2AP EQU   X'11'\nSPACE3AP EQU   X'19'\nEJECTAP  EQU   X'89'\nSPACE0IM EQU   X'03'\nSPACE1IM EQU   X'0B'\nSPACE2IM EQU   X'13'\nSPACE3IM EQU   X'1B'\nEJECTIM  EQU   X'8B'\n         SPACE 1\nDEBUCBAD EQU   32\nCAMLSTLN EQU   148\nPDSBLKLN EQU   264\nNCPDFLT  EQU   10\nUTILPRIV EQU   5\nOPERPRIV EQU   9\n*FMT5EXT EQU   26                                     GDL-94\n         SPACE 1\nEMPTYOPT EQU   X'80'\nLSTDTOPT EQU   X'40'\nDUMPOPT  EQU   X'20'\nSDUMPOPT EQU   X'10'\nMAPOPT   EQU   X'08'\nPDSOPT   EQU   X'04'\nEXTNTOPT EQU   X'02'\nDIRFLAG  EQU   X'01'\n         SPACE 1\nVOLSOPT  EQU   X'80'\nLNCNTOPT EQU   X'40'\nDEBUGOPT EQU   X'20'\nRESETOPT EQU   X'10'\nNCPOPT   EQU   X'08'\nISAMOPT  EQU   X'04'\nJDATEOPT EQU   X'02'\nMODELOPT EQU   X'01'\n         EJECT\n         SPACE 5\n         SAVE  (14,12),,*\n         LR    R9,R15\n         USING DISKMAP,R9\n         LM    R10,R12,BASEVALS\n         USING DISKMAP,R9,R10,R11,R12\n         SPACE 1\n         LR    R2,R13\n         LA    R13,SAVEAREA\n         ST    R2,SAVEAREA+4\n         ST    R13,8(,R2)\n         SR    R2,R2\n         SPM   R2\n         B     INIT\n         SPACE 1\nBASEVALS DC    A(DISKMAP+X'1000',DISKMAP+X'2000',DISKMAP+X'3000')\n         EJECT ,\n         SPACE 3\nNEXTVOL  BAL   R14,FREECORE\n         XC    START0(LENGTH0),START0 WHOLESALE ZEROING OF CORE\n         SR    R0,R0\n         ST    R0,BUFPTR\n         MVC   CURLINES,=H'999'\n         MVI   HEADER,C' '\n         MVC   HEADER+1(L'HEADER-1),HEADER\n         LA    R1,LASTDS1\n         ST    R1,FIRSTDS1\n         LA    R1,HOOKSTRT\n         ST    R1,HOOKSTRT\n         MVC   HWMDS1,EFFS\n         NI    PARMOPT1,255-DIRFLAG\n         SPACE 1\nNEXTDD   TM    PARMOPT2,VOLSOPT\n         BO    NEXTDDCV\n         L     R1,DDLSTPTR\n         LTR   R1,R1\n         BZ    TIOTADV\n         LH    R0,DDNAMLEN\n         SH    R0,=H'8'\n         BM    RETURN\n         STH   R0,DDNAMLEN\n         MVC   VOLDDNAM,0(R1)\n         LA    R1,8(R1)\n         ST    R1,DDLSTPTR\n         B     NMAPSTRT\n         SPACE 1\nTIOTADV  L     R1,TIOTADDD\n         USING TIOENTRY,R1\n         SR    R0,R0\n         IC    R0,TIOELNGH\n         LTR   R0,R0\n         BZ    RETURN\n         MVC   VOLDDNAM,TIOEDDNM\n         AR    R1,R0\n         ST    R1,TIOTADDD\n         DROP  R1\n         SPACE 1\nNMAPSTRT LA    R0,8\n         LA    R1,NOMAPDDS\n         CLC   VOLDDNAM(4),=C'SYS0'     CHECK FOR DAIR DDNAME    P.A.S\n*        **** THIS IS CAUSED BY DAIR FOR THE CVOL CATALOG ***P.A.S.\n         BE    NEXTDD      IF FOUND, DO NOT MAP THIS VOL\nNMAPSRCH CLC   VOLDDNAM,0(R1)\n         BE    NOMAPFND\n         BXH   R1,R0,NMAPSRCH\n         SPACE 1\nNOMAPFND LA    R0,VOLDDNAM\n         CR    R0,R1\n         BNE   NEXTDD\n         B     TYPEDEV\n         SPACE 1\nNEXTDDCV LH    R0,CURVOL\n         CH    R0,NUMVOLS\n         BNL   RETURN\n         AH    R0,=H'1'\n         STH   R0,CURVOL\n         BAL   R14,CONVERT\n         MVC   CURVOLNM,CONVUNPK+10\n         SPACE 1\nTYPEDEV  DEVTYPE VOLDDNAM,DEVTYPE,DEVTAB,RPS\n         BXH   R15,R15,ERRNODD\n         CLI   DEVTYPE+2,UCB3DACC\n         BNE   ERRNOTDA\n         SPACE 1\n         MVC   DEVTABND,DEVTYPE+3\n         LA    R0,DEVENTLN\n         LA    R1,DEVTABLE\nDEVLOOP  CLC   DEVTABND(1),0(R1)\n         BE    DEVNTFND\n         BXH   R1,R0,DEVLOOP\n         SPACE 1\nDEVNTFND CLC   1(7,R1),DEVTABND+1\n         BE    ERRUNKDV\n         ST    R1,DEVTABPT\n         SPACE 1\n***** THIS SECTION WILL TELL THE DIFFERENCE BETWEEN THE 2 3340 MODELS.\n***** THE 3340 HAS 1 UCBTYPE FOR BOTH 35M/70M.\n***** THIS SECTION WILL LOOK FOR THE X'015D' NUMBER OF CYLS....35M\n*****   ELSE THE NUMBER OF CYLS (70M) WILL BE X'02BA'...\n         SPACE 1\n         CLI   DEVTYPE+3,X'0A'   TEST FOR A 3340-?\n         BNE   RVDISK    IF NOT 3340...BYPASS\n         CLC   DEVTYPE+8(2),=X'015D'    TEST FOR A 35M 3340 TYPE\n         BE    RVDISK   IF IT IS A 35MEG...NO NEED TO CHANGE DESC\n         MVC   6(2,R1),=C'70'   MOVE A \"70M\" ON DESC OF UNIT\n         SPACE 1\n*** THIS SECTION WILL DETERMINE IF THE DISK IS REAL, OR MASS STORAGE\n         SPACE 1\nRVDISK   TM    DEVTYPE+2,X'08'   TEST IF REAL/VIRT DASD\n         BZ    DEVCON   BIT=0, REAL     BIT=1, VIRTUAL\n         MVC   6(9,R1),=C'VIRT VOL.' MOVE \"VIRT\" DESC OF UNIT\n         SPACE 1\n******** THIS SECTION WILL LOAD THE CONSTANTS FROM THE \"DEVTYPE\" TO\n********   BE USED BY THE HOMEMADE CCHHR CONVERT ROUTINES.....\n*\nDEVCON   MVC   DEVCONV2(2),DEVTYPE+10    LOW ORDER  CC\n         MVC   DEVCONV1(1),DEVTYPE+11     HIGH ORDER CC\n         MVI   DEVCONV1+1,X'00'      FINISH HIGH ORDER CC\n         MVC   DEVCONV3(2),=X'0000'   ZERO HIGH ORDER HH\n         MVC   DEVCONV4(2),=X'0001'   LOW ORDER  HH\n         MVC   TRKSPCYL(2),DEVTYPE+10    TRKS/CYL\n         SR    R1,R1\n         LH    R1,DEVTYPE+8    LOAD  CYL PER VOLUME\n         MH    R1,DEVTYPE+10   MULT \"CYL/VOL\" BY \"TRKS/CYL\"\n         ST    R1,TRKSPVOL    RESULT IS  \"TRACKS/VOLUME\"     GDL-94\n*\n         MVC   DCBDDNAM+(PDSDCB-IHADCB),VOLDDNAM\n         MVC   DCBDDNAM+(VTOCDCB-IHADCB),VOLDDNAM\n         SPACE 1\n         RDJFCB MF=(E,OPENLIST)\n         TM    JFCBTSDM,X'20'\n         BO    ERRNOTDA\n         MVI   JFCBDSNM,X'04'\n         MVC   JFCBDSNM+1(43),JFCBDSNM\n         OI    JFCBTSDM,X'08'\n         SPACE 1\n         LH    R1,NCPPARM\n         SR    R0,R0\n         IC    R0,JFCNCP\n         MVI   JFCNCP,0\n         LTR   R0,R0\n         BZ    SAVENCP\n         LR    R1,R0\nSAVENCP  ST    R1,RENCP\n         OI    DCBOPTCD+(VTOCDCB-IHADCB),DCBOPTC\n         CH    R1,=H'1'\n         BNE   SETNCP\n         SR    R1,R1\n         NI    DCBOPTCD+(VTOCDCB-IHADCB),255-DCBOPTC\nSETNCP   STC   R1,DCBNCP+(VTOCDCB-IHADCB)\n         SPACE 1\n         OPEN  TYPE=J,MF=(E,OPENLIST)\n         TM    DCBOFLGS+(VTOCDCB-IHADCB),DCBOFOPN\n         BZ    ERRNOPEN\n         L     R2,DCBDEBAD+(VTOCDCB-IHADCB)\n         L     R2,DEBUCBAD(,R2)\n         SPACE 1\n********  THIS SECTION DELETED    4/1/75    P.A.S.\n********  IT WAS USED FOR DATA CELLS...NO LONGER SUPPORTED\n         SPACE 1\n         USING UCBOB,R2\nMAINUCB  MVC   VTOCTTR,UCBVTOC\n         MVC   VOLSERNO,UCBVOLI\n         MVC   VOLSTAT,UCBSTAT\n         MVC   HEAD1UCB,UCBNAME     MOVE EBCIDIC UCB ADDR FOR HEADN\n         TM    UCBSTAB,UCBBPUB    TEST FOR PUBLIC MOUNT\n         BNO   *+10\n         MVC   HEAD1MT,=C'PUBLIC  '\n         TM    UCBSTAB,UCBBPRV    TEST FOR PRIVATE\n         BNO   *+10\n         MVC   HEAD1MT,=C'PRIVATE '\n         TM    UCBSTAB,UCBBSTR   TEST FOR STORAGE\n         BNO   *+10\n         MVC   HEAD1MT,=C'STORAGE '\n         TM    UCBSTAB,UCBPGFL    TEST IF PAGING DEVIC\n         BNO   *+10\n         MVC   HEAD1MT,=C'*PAGING*'\n         TM    UCBSTAT,UCBSYSR    TEST FOR SYS-RES\n         BNO   *+10\n         MVC   HEAD1MT,=C'*SYSRES*'\n         SPACE 1\n         MVC   HEAD1MTR,=C'REMOV'\n         TM    UCBSTAT,UCBRESV\n         BNO   *+10\n         MVC   HEAD1MTR,=C'RSERV'\n         TM    UCBSTAT,UCBPRES\n         BNO   *+10\n         MVC   HEAD1MTR,=C'RSDNT'\n         SPACE 1\nCOMONUCB ST    R2,UCBADDR\n         DROP  R2\n         MVC   HEAD1VOL,VOLSERNO\n         MVC   HEADMID(81),HEAD1\n         SPACE 1\n         ENQ   MF=(E,ENQVTOC)\n         NI    DEQGATE,X'0F'\n         SPACE 1\n         LH    R1,VTOCTT\n         BAL   R14,TTCONVRT\n         MVC   VTOCCCHH,CCHH\n         MVI   VTDSCBTR+1,255\n         SPACE 1\n         SR    R4,R4\n         IC    R4,DCBKEYLE+(VTOCDCB-IHADCB)\n         AH    R4,DCBBLKSI+(VTOCDCB-IHADCB)\n         AH    R4,=H'20'\n         ST    R4,REBLKSIZ\n         L     R5,RENCP\n         ST    R5,RECOUNT\n         LR    R1,R4\n         MR    R0,R5\n         LR    R0,R1\n         ST    R0,REGETSIZ\n         GETMAIN EC,LV=(0),A=REBLOCK@\n         BXH   R15,R15,ERRNOCOR\n         L     R2,REBLOCK@\n         ST    R2,RENEXT@\n         LA    R3,VTOCDCB\n         SPACE 1\nREADINIT XC    0(20,R2),0(R2)\n         LA    R4,20(R2)\n         READ  (2),SF,(3),(4),MF=E\n         A     R2,REBLKSIZ\n         BCT   R5,READINIT\n         SPACE 1\n         LA    R4,DS4LEN\n         BAL   R14,GETCORE\n         ST    R3,FMT4AD\n         LR    R6,R3\n         USING DS4,R6\n         BAL   R14,VTOCREAD\n         BAL   R14,ABDUMP\n         CLI   DS4IDFMT,C'4'\n         MVI   BADDSTYP,C'4'\n         LR    R8,R6\n         BNE   ERRNOTFX\n         MVI   FM4COUNT+1,1\n         TM    DS4VTOCI,X'04'\n         BZ    *+8\n         OI    PARMOPT1,DIRFLAG\n         MVC   HOOKLCCH(28),HOOKINIT                 GDL-94\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         SR    R0,R0\n         IC    R0,DS4DEVDT\n         STH   R0,VTDSCBTR\n         TM    PARMOPT2,RESETOPT+DEBUGOPT\n         BNZ   *+10\n         MVC   HWMDS1,DS4HPCHR\n         MVC   HOOKLCCH(8),DS4VTOCE+2\n         LA    R2,DS4VTOCE\n         BAL   R14,F1EXTCNV\n         ST    R0,HOOKNTRK                           GDL-94\n         STH   R0,VTOCSIZE\n         MVC   HOOKLOTT,LOWTT                        GDL-94\n         MVC   HOOKHITT,HIGHTT                       GDL-94\n         MVI   HOOKTYPE,C'4'\n         MVC   HOOKSEQN,DS4VTOCE+1\n         MVC   HOOKIDPT,=A(VTOCMSG)\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         SPACE 1\n         LA    R4,DS5LEN\n         BAL   R14,GETCORE\n         ST    R3,FMT5AD\n         LR    R8,R3\n         USING DS5,R8\n         BAL   R14,VTOCREAD\n         BAL   R14,ABDUMP\n         CLI   DS5FMTID,C'5'\n         MVI   BADDSTYP,C'5'\n         BNE   ERRNOTFX\n*        MVI   FM5COUNT+1,1                             GDL-94\n         BAL   R14,INDEXCHK                         DAK 03/82\n         BAL   R14,F56HOOK\n*        SR    R0,R0                                    GDL-94\n*        ST    R0,DS5F5PTR                              GDL-94\n         DROP  R6,R8\n         EJECT\n         SPACE 3\nNEXTFM1  LA    R4,DS1LEN\n         BAL   R14,GETCORE\n         LR    R6,R3\n         USING DS1,R6\nREADFM1  BAL   R14,VTOCREAD\n         B     READFM5\n         SR    R1,R1\n         IC    R1,DS1FMTID\n         N     R1,=F'15'\n         CH    R1,=H'6'\n         BH    READFM1          SKIP INVALID FORMATS     GDL-2000\n*        BAL   R14,ABDUMP                                GDL-2000\n         SLL   R1,1                *2\n         LH    R2,FMXCOUNT(R1)\n         LA    R2,1(R2)\n         STH   R2,FMXCOUNT(R1)\n         LTR   R1,R1\n         BNZ   CHECKDS1\n         CLI   HWMINDIC,1\n         BE    READFM1\n         MVC   HWMNEW,DS1FDAD+3\n         MVI   HWMINDIC,1\n         B     READFM1\n         SPACE 1\nCHECKDS1 CLI   DS1FMTID,C'1'\n         BNE   READFM1\n         MVC   HWMNEW,DS1FDAD+3\n         MVI   HWMINDIC,1\n         L     R2,FIRSTDS1\n         L     R3,=A(FIRSTDS1-(DS1F1PTR-DS1))\nCOMPFM1  CLC   DS1DSNAM,DS1DSNAM-DS1(R2)\n         BL    INSRTFM1\n         LR    R3,R2\n         L     R2,DS1F1PTR-DS1(R2)\n         B     COMPFM1\nINSRTFM1 ST    R2,DS1F1PTR\n         ST    R6,DS1F1PTR-DS1(R3)\n         SR    R0,R0\n         ST    R0,DS1F3PTR\n         B     NEXTFM1\n         SPACE 1\n         DROP  R6\n         EJECT\n         SPACE 3\nREADFM5  BAL   R14,CLOSVTOC\n*        L     R6,FMT4AD                                  GDL-94\n*        USING DS4,R6                                     GDL-94\n*        L     R8,FMT5AD                                  GDL-94\n*        USING DS5,R8                                     GDL-94\n*        B     CHECKFM5                                   GDL-94\n         SPACE 1\n* DELETED NEXTFM5 THRU END OF READFM6                     GDL-94\n         EJECT ,\n         SPACE 3\nREADFM23 L     R6,=A(FIRSTDS1-(DS1F1PTR-DS1))\n         USING DS1,R6\nNEXTFM23 L     R6,DS1F1PTR\n         CLC   DS1DSNAM,LASTDS1\n         BE    VTOCUPDT\n         CLC   DS1PTRDS,ZEROES\n         BE    NEXTFM23\n         SPACE 2\n         LA    R4,DS3LEN\n         BAL   R14,GETCORE\n         LR    R8,R3\n         USING DS3,R8\n         LA    R2,DS1PTRDS\n         BAL   R14,OBTAIN\n         ST    R8,DS1F3PTR\n         SR    R0,R0\n         ST    R0,DS3F2PTR\n         TM    DS1DSORG,DCBDSGIS\n         BNO   CHECKFM3\n         USING DS2,R8\n         CLI   DS2FMTID,C'2'\n         BNE   CHECKFM3\n         CLC   DS2PTRDS,ZEROES\n         BE    NEXTFM23\n         LA    R4,DS3LEN\n         BAL   R14,GETCORE\n         ST    R3,DS2F3PTR\n         LA    R2,DS2PTRDS\n         BAL   R14,OBTAIN\n         ST    R8,DS3F2PTR-DS3(,R3)\n         LR    R8,R3\n         USING DS3,R8\n         SPACE 1\nCHECKFM3 CLI   DS3FMTID,C'3'\n         BE    NEXTFM23\n         MVI   BADDSTYP,C'3'\n         B     ERRNOTFX\n         SPACE 1\n         DROP  R6,R8\n         EJECT ,\n         SPACE 1\nVTOCUPDT TM    PARMOPT2,RESETOPT+DEBUGOPT\n         BZ    VTOCPRT\n         TM    PARMOPT1,DIRFLAG\n         BO    VTOCPRT\n         OI    OPENFLAG,OPENUPDT\n         OPEN  TYPE=J,MF=(E,OPENLIST)\n         TM    DCBOFLGS+(VTOCDCB-IHADCB),DCBOFOPN\n         BO    *+8\n         BAL   R14,ABEND\n         NI    OPENFLAG,255-OPENUPDT\n         SPACE 1\nVTOCUPRD READ  VTOCDECB,SF,MF=E\n         CHECK VTOCDECB\n         LA    R1,=CL11'VTOC READ.'\n         BAL   R14,SYNADCHK\n         MVC   DS4FDAD+(CAMLIST-DS4),DCBFDAD+(VTOCDCB-IHADCB)\n         SPACE 1\n         CLI   DS4IDFMT+(CAMLIST-DS4),C'4'\n         MVI   BADDSTYP,C'4'\n         LA    R8,CAMLIST\n         BNE   ERRNOTFX\n         MVC   HWMOLD,DS4HPCHR+(CAMLIST-DS4)\n         MVC   DS4HPCHR+(CAMLIST-DS4),HWMNEW\n         TM    PARMOPT2,DEBUGOPT\n         BO    VTOCUPCL\n         SPACE 1\n         WRITE VTOCDECB,SF,MF=E\n         CHECK VTOCDECB\n         LA    R1,=CL11'VTOC WRITE.'\n         BAL   R14,SYNADCHK\n         L     R1,FMT4AD\n         MVC   0(DS4LEN,R1),CAMLIST\n         SPACE 1\nVTOCUPCL CLOSE (VTOCDCB)\n         BAL   R14,DEQVTOC\n         SPACE 1\n         MVC   BUF+1(31),=C'VTOC RESET INFO:  OLD FMT1 HWM='\n         TM    PARMOPT2,DEBUGOPT\n         BZ    *+10\n         MVC   BUF+6(5),=C'DEBUG'\n         MVI   BUF+36,C'.'\n         MVI   BUF+41,C'.'\n         UNPK  TRAREA,HWMOLD(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+32(4),TRAREA\n         MVC   BUF+37(4),TRAREA+4\n         MVC   BUF+42(2),TRAREA+8\n         SPACE 1\n         MVC   BUF+47(13),=C'NEW FMT1 HWM='\n         MVI   BUF+64,C'.'\n         MVI   BUF+69,C'.'\n         UNPK  TRAREA,HWMNEW(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+60(4),TRAREA\n         MVC   BUF+65(4),TRAREA+4\n         MVC   BUF+70(2),TRAREA+8\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         EJECT\n         SPACE 1\nVTOCPRT  BAL   R14,DEQVTOC\n         L     R6,FMT4AD\n         USING DS4,R6\n         SPACE 1\n         MVI   BUF+1,C' '\n         MVC   BUF+2(131),BUF+1    CLEAR OUTPUT PRINT LINE\n         SPACE 1\n         MVC   BUF+1(19),=C'DEVICE DESCRIPTION:'\n         MVC   BUF+22(5),=C'TYPE='\n         L     R2,DEVTABPT\n         MVC   BUF+27(15),1(R2)\n         SPACE 1\n         MVC   BUF+44(7),=C'NOCYLS='\n         LA    R2,DS4DEVSZ\n         BAL   R14,CONVERT2\n         MVC   BUF+51(5),CONVERTD\n         SPACE 1\n         MVC   BUF+58(9),=C'TRKS/CYL='\n         LA    R2,DS4DEVSZ+2\n         BAL   R14,CONVERT2\n         MVC   BUF+67(5),CONVERTD\n         SPACE 1\n         MVC   BUF+74(8),=C'TRKSIZE='\n         LA    R2,DS4DEVTK\n         BAL   R14,CONVERT2\n         MVC   BUF+82(5),CONVERTD\n         SPACE 1\n         MVC   BUF+89(12),=C'MAX BLKSIZE='\n         LA    R2,DEVTYPE+6\n         BAL   R14,CONVERT2\n         MVC   BUF+101(5),CONVERTD\n         SPACE 1\n         MVC   BUF+108(9),=C'DSCB/TRK='\n         LA    R2,DS4DEVDT\n         BAL   R14,CONVERT1\n         MVC   BUF+117(3),CONVERTD\n         SPACE 1\n         MVC   BUF+122(8),=C'PDS/TRK='\n         LA    R2,DS4DEVDB\n         BAL   R14,CONVERT1\n         MVC   BUF+130(3),CONVERTD\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+1(11),=C'VTOC DESCR:'\n         MVC   BUF+13(7),=C'R/W=0/0'\n         CLI   DS4SECLV,0\n         BE    VTPRDSCB\n         UNPK  TRAREA,DS4SECLV(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+17(1),TRAREA\n         MVC   BUF+19(1),TRAREA+1\n         SPACE 1\nVTPRDSCB MVC   BUF+23(6),=C'DSCBS='\n         SR    R0,R0\n         IC    R0,DS4DEVDT\n         MH    R0,VTOCSIZE\n         BAL   R14,CONVERT\n         MVC   BUF+29(5),CONVERTD\n         SPACE 1\n         MVC   BUF+35(6),=C'AVAIL='\n         LA    R2,DS4DSREC\n         BAL   R14,CONVERT2\n         MVC   BUF+41(5),CONVERTD\n         SPACE 1\n         MVC   BUF+47(9),=C'VTOC EXT='\n         MVI   BUF+60,C'.'\n         MVI   BUF+65,C'-'\n         MVI   BUF+70,C'.'\n         UNPK  TRAREA,DS4VTOCE+2(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+56(4),TRAREA\n         MVC   BUF+61(4),TRAREA+4\n         UNPK  TRAREA,DS4VTOCE+6(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+66(4),TRAREA\n         MVC   BUF+71(4),TRAREA+4\n         SPACE 1\n         MVC   BUF+78(9),=C'FMT1 HWM='\n         MVI   BUF+91,C'.'\n         MVI   BUF+96,C'.'\n         UNPK  TRAREA,DS4HPCHR(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+87(4),TRAREA\n         MVC   BUF+92(4),TRAREA+4\n         MVC   BUF+97(2),TRAREA+8\n         SPACE 1\n         MVC   BUF+101(7),=C'NUMALT='\n         LA    R2,DS4NOATK\n         BAL   R14,CONVERT2\n         MVC   BUF+108(5),CONVERTD\n         SPACE 1\n         L     R2,TRKSPVOL     LOAD TRKS PER VOL TOTAL       GDL-94\n         SH    R2,DS4NOATK     SUBTRACT OFF ALTERNATES LEFT\n         ST    R2,TRKSPVOL     TOTAL PER VOL = OLD TOT - ALTS GDL-94\n         SPACE 1\n         MVC   BUF+114(8),=C'NEXTALT='\n         UNPK  TRAREA,DS4HCCHH(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+122(4),TRAREA\n         MVI   BUF+126,C'.'\n         MVC   BUF+127(4),TRAREA+4\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+1(16),=C'AVAILABLE SPACE:'\n         L     R0,AVAILSPC                               GDL-94\n         BAL   R14,CONVERT\n         MVC   BUF+18(6),CONVEDIT+6                      GDL-94\n         SPACE 1\n         MVC   BUF+25(9),=C'TRACKS IN'                   GDL-94\n         LH    R0,AVAILEXT\n         BAL   R14,CONVERT\n         MVC   BUF+35(4),CONVEDIT+8                      GDL-94\n         SPACE 1\n         MVC   BUF+40(18),=C'EXTENTS, INCLUDING'         GDL-94\n         LH    R0,AVAILCYL\n         BAL   R14,CONVERT\n         MVC   BUF+59(5),CONVEDIT+7                      GDL-94\n         SPACE 1\n         MVC   BUF+65(34),=C'FULL CYLINDERS.  LARGEST EXTENT IS' GDL-94\n         LH    R0,F5LARGST                                GDL-94\n         BAL   R14,CONVERT                                GDL-94\n         MVC   BUF+100(5),CONVEDIT+7                      GDL-94\n         SPACE 1\n         MVC   BUF+106(14),=C'CYLINDERS PLUS'             GDL-94\n         LH    R2,F5LARGST      LARGEST NUM CYL           GDL-94\n         MH    R2,TRKSPCYL      TIMES NUM TRKS PER CYL    GDL-94\n         L     R0,F5LARGTT      LARGEST NUM TRACKS        GDL-94\n         SR    R0,R2            RESULT IS ADDITIONAL TRKS GDL-94\n         BAL   R14,CONVERT                                GDL-94\n         MVC   BUF+121(3),CONVEDIT+9                      GDL-94\n         SPACE 1\n         MVC   BUF+125(7),=C'TRACKS.'                     GDL-94\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         TM    DS4VSAM,X'80'     TEST FOR VSAM OWNERSHIP BIT TURNED ON\n         BZ    NOVSAM            IF NOT ON....NOT OWNED BY VSAM\n         MVC   BUF+2(41),=C'*** THIS PACK IS OWNED BY A VSAM CATALOG '\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         CLC   DS4VTOCE+24(2),ZEROES      CHECK FOR A \"CRA\" POINTER\n         BE    NOVSAM      IF ZERO, NO POINTER....NO \"CRA\"\n         MVC   CRATRACK(2),DS4VTOCE+24  MOVE CRA ADDRESS FOR ALIGNMENT\n         MVC   BUF+2(41),=C'*** THIS PACK CONTAINS A C.R.A. AT TRACK:'\n         LH    R0,CRATRACK     LOAD UP 2 BYTE CRA ADDRESS\n         BAL   R14,CONVERT    GO CONVERT TO EBCIDIC\n         MVC   BUF+43(5),CONVEDIT+7     MOVE TO PRINT LINE\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\nNOVSAM   EQU   *\n         TM    PARMOPT1,DIRFLAG\n         BZ    VTOCTYPE                                   DAK 03/82\n         MVC   BUF+1(59),=C'*** WARNING - POSSIBLE VTOC ERRORS EXIST ONX\n                THIS VOLUME ***'\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 3\nVTOCTYPE EQU   *           ADDED 12/81 KOWNACKI\n         TM    DS4VTOCI,DS4IVTOC             IS INDEXED VTOC BIT ON?\n         BZ    NODIRFLG\n         MVC   BUF+2(39),=C'*** THIS PACK CONTAINS AN INDEXED VTOC '\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 3\nNODIRFLG TM    PARMOPT1,DUMPOPT+SDUMPOPT+DIRFLAG\n         BZ    FM1PRINT\n         SPACE 1\n         LR    R2,R6\n         LA    R3,DS4FDAD\n         BAL   R14,DUMPDSCB\n         SPACE 1\n*                             DELETE FROM HERE THRU DMPF6TST   GDL-94\n         SPACE 1\nENDUMPF6 MVI   BUF,SPACE2IM\n         BAL   R14,PRINT\n         SPACE 1\n*        DROP  R6,R8                                           GDL-94\n         EJECT\nFM1PRINT L     R6,=A(FIRSTDS1-(DS1F1PTR-DS1))\n         USING DS1,R6\n         LA    R1,HEAD1A\n         ST    R1,BUFPTR\n         PUT   PRINTDCB,HEADER1\n         PUT   PRINTDCB,HEADER2\n         LH    R0,CURLINES\n         AH    R0,=H'2'\n         STH   R0,CURLINES\n         SPACE 2\nFM1PRLOP L     R6,DS1F1PTR\n         CLC   DS1DSNAM,LASTDS1\n         BE    FM1PREND\n         SR    R7,R7\n         L     R8,DS1F3PTR\n         USING DS3,R8\n         LTR   R8,R8\n         BZ    FM1GOHK\n         CLI   DS3FMTID,C'3'\n         BE    FM1GOHK\n         LR    R7,R8\n         USING DS2,R7\n         L     R8,DS2F3PTR\nFM1GOHK  BAL   R14,F13HOOK\n         LA    R2,1\n         TM    PARMOPT1,EXTNTOPT\n         BZ    FM1TSTIS\n         LH    R1,NUMEXT\n         LA    R2,2(R1,R2)\nFM1TSTIS LTR   R7,R7\n         BZ    FM1TSTDP\n         TM    PARMOPT2,ISAMOPT\n         BZ    *+8\n         AH    R2,=H'4'\nFM1TSTDP TM    PARMOPT1,DUMPOPT\n         BZ    FM1LKAHD\n         AH    R2,=H'4'\n         LTR   R7,R7\n         BZ    *+8\n         AH    R2,=H'4'\n         LTR   R8,R8\n         BZ    FM1LKAHD\n         AH    R2,=H'4'\nFM1LKAHD BAL   R14,PRLKAHED\n         SPACE 1\n         MVC   L1DSNAME,DS1DSNAM\n         SPACE 1\nFM1VOLSR MVC   L1SERIAL,DS1DSSN\n         SPACE 1\nFM1SECUR MVC   L1SECUR,=C'-/-'\n         TM    DS1DSIND,X'40'  TEST FOR RACF PROTECTED?    HNB*DED\n         BZ    FM1PSWD      IF NO ....TRY PASSWORD         HNB*DED\n         MVC   L1SECUR,=C'RAC' RACF PROTECTED              HNB*DED\n         B     FM1CREDT        AND FORMAT CREATE DATE      HNB*DED\nFM1PSWD  TM    DS1DSIND,X'10'  TEST FOR PASSWORD FOR R & W\n         BZ    FM1CREDT     IF NO BITS....NO PASSWORD\n         MVI   L1SECUR+2,C'W'      AT LEAST \"WRITE\" IF ANY\n         TM    DS1DSIND,X'04'      TEST FOR ONLY \"WRITE\"..READ OK\n         BO    FM1CREDT       IF ON,  \"READ\" NOT PROTECTED\n         MVI   L1SECUR,C'R'      INDICATE \"READ\" PROTECT\n         SPACE 1\nFM1CREDT LA    R2,DS1CREDT\n         LA    R3,L1CREDT\n         BAL   R14,DATEDIT\n         SPACE 1\n         LA    R2,DS1EXPDT\n         LA    R3,L1EXPDT\n         BAL   R14,DATEDIT\n         SPACE 1\n         LA    R2,DS1REFD\n         LA    R3,L1REFDT\n         BAL   R14,DATEDIT\n         SPACE 1\nFM1DSORG LA    R2,L1DSORG\n         TM    DS1DSORG,DCBDSGIS\n         BZ    FM1DSO1\n         MVC   0(2,R2),=C'IS'\n         LA    R2,2(R2)\nFM1DSO1  TM    DS1DSORG,DCBDSGPS\n         BZ    FM1DSO2\n         MVC   0(2,R2),=C'PS'\n         LA    R2,2(R2)\nFM1DSO2  TM    DS1DSORG,DCBDSGDA\n         BZ    FM1DSO3\n         MVC   0(2,R2),=C'DA'\n         LA    R2,2(R2)\nFM1DSO3  TM    DS1DSORG,DCBDSGCX\n         BZ    FM1DSO6              AXC\n         MVC   0(2,R2),=C'CX'\n         LA    R2,2(R2)\n*FM1DSO4 TM    DS1DSORG,=X'08'      AXC\n*        BZ    FM1DSO5              AXC\n*        MVC   0(2,R2),=C'CQ'       AXC\n*        LA    R2,2(R2)             AXC\n*FM1DSO5 TM    DS1DSORG,=X'04'      AXC\n*        BZ    FM1DSO6              AXC\n*        MVC   0(2,R2),=C'MQ'       AXC\n*        LA    R2,2(R2)             AXC\nFM1DSO6  TM    DS1DSORG,DCBDSGPO\n         BZ    FM1DSO7\n         MVC   0(2,R2),=C'PO'\n         LA    R2,2(R2)\nFM1DSO7  TM    DS1DSORG+1,DCBDSGGS\n         BZ    FM1DSO8\n         MVC   0(2,R2),=C'GS'\n         LA    R2,2(R2)\nFM1DSO8  TM    DS1DSORG+1,DCBDSGTX\n         BZ    FM1DSO9\n         MVC   0(2,R2),=C'TX'\n         LA    R2,2(R2)\nFM1DSO9  TM    DS1DSORG+1,DCBDSGTQ\n         BZ    FM1DSO10\n         MVC   0(2,R2),=C'TQ'\n         LA    R2,2(R2)\nFM1DSO10 TM    DS1DSORG+1,DCBACBM\n         BZ    FM1DSO11\n         MVC   0(2,R2),=C'AM'\n         LA    R2,2(R2)\nFM1DSO11 TM    DS1DSORG+1,DCBDSGTR\n         BZ    FM1DSO12\n         MVC   0(2,R2),=C'TR'\n         LA    R2,2(R2)\nFM1DSO12 TM    DS1DSORG,DCBDSGU\n         BZ    *+8\n         MVI   0(R2),C'U'\n         SPACE 1\n         LA    R2,L1RECFM\n         TM    DS1RECFM,DCBRECU\n         BZ    FM1RECF1\n         MVI   0(R2),C'U'\n         BO    FM1RECF1\n         TM    DS1RECFM,DCBRECF\n         MVI   0(R2),C'F'\n         BO    FM1RECF1\n         MVI   0(R2),C'V'\nFM1RECF1 LA    R2,1(R2)\n         TM    DS1RECFM,DCBRECTO\n         BZ    FM1RECF2\n         MVI   0(R2),C'T'\n         LA    R2,1(R2)\nFM1RECF2 TM    DS1RECFM,DCBRECBR\n         BZ    FM1RECF3\n         MVI   0(R2),C'B'\n         LA    R2,1(R2)\nFM1RECF3 TM    DS1RECFM,DCBRECSB\n         BZ    FM1RECF4\n         MVI   0(R2),C'S'\n         LA    R2,1(R2)\nFM1RECF4 TM    DS1RECFM,DCBRECCC\n         BNM   FM1BLKSZ\n         TM    DS1RECFM,DCBRECCA\n         MVI   0(R2),C'A'\n         BO    FM1BLKSZ\n         MVI   0(R2),C'M'\n         SPACE 1\nFM1BLKSZ LA    R2,DS1BLKL\n         BAL   R14,CONVERT2\n         MVC   L1BLKSIZ,CONVEDIT+7\n         SPACE 1\n         LA    R2,DS1LRECL\n         BAL   R14,CONVERT2\n         MVC   L1LRECL,CONVEDIT+7\n         SPACE 1\n         LA    R2,DS1KEYL\n         BAL   R14,CONVERT1\n         MVC   L1KEYLEN,CONVEDIT+9\n         SPACE 1\n         UNPK  TRAREA,DS1OPTCD(8)\n         TR    TRAREA,TRTABLE\n         MVC   L1OPTCD,TRAREA\n         SPACE 1\n         L     R0,F1TRKAL\n         BAL   R14,CONVERT\n         MVC   L1TRKAL,CONVEDIT+7\n         SPACE 1\n         CLC   DS1LSTAR(5),ZEROES\n         BE    FM1NOEPV\n         LH    R0,DS1LSTAR\n         N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTE   LMN-CBT\n         CLI   DS1LSTAR+2,0\n         BE    *+8\n         AH    R0,=H'1'\n         BAL   R14,CONVERT\n         MVC   L1TRKUS,CONVEDIT+7\n         SPACE 1\nFM1NOEPV LA    R2,DS1NOEPV\n         BAL   R14,CONVERT1\n********************************** START *********** SMA 3/88  CHANGED\n         MVC   L1NOEPV,CONVEDIT+9\n**********************************  END  *********** SMA 3/88  CHANGED\n         SPACE 1\n         LA    R2,DS1SCALO+1\n         BAL   R14,CONVERT3\n         MVC   L1SECQU,CONVEDIT+7\n         C     R0,=F'99999'\n         BNH   FM1SCALO\n         MVC   L1SECQU,STARS\n         SPACE 1\nFM1SCALO TM    DS1SCALO,X'C0'\n         BNO   FM1SCAL1\n         MVI   L1TYP,C'C'\n         B     FM1SCAL4\nFM1SCAL1 BNZ   FM1SCAL2\n         MVI   L1TYP,C'A'\n         B     FM1SCAL4\nFM1SCAL2 TM    DS1SCALO,X'80'\n         BO    FM1SCAL3\n         MVI   L1TYP,C'B'\n         B     FM1SCAL4\nFM1SCAL3 MVI   L1TYP,C'T'\nFM1SCAL4 LA    R2,L1TYP+1\n         TM    DS1SCALO,X'08'\n         BZ    FM1SCAL5\n         MVI   0(R2),C'C'\n         LA    R2,1(,R2)\nFM1SCAL5 TM    DS1SCALO,X'04'\n         BZ    FM1SCAL6\n         MVI   0(R2),C'M'\n         LA    R2,1(,R2)\nFM1SCAL6 TM    DS1SCALO,X'02'\n         BZ    FM1SCAL7\n         MVI   0(R2),C'A'\n         LA    R2,1(,R2)\nFM1SCAL7 TM    DS1SCALO,X'01'\n         BZ    FM1OPTS\n         MVI   0(R2),C'R'\n         SPACE 1\nFM1OPTS  MVI   BUF,SPACE1AP\n         TM    PARMOPT1,EMPTYOPT     TEST FOR \"EMPTY\" OPTION\n         BO    FM1EM1         IF REQUEST GO TO PROCESS IT\n         TM    PARMOPT2,MODELOPT   TEST FOR \"MODEL\" OPTION\n         BZ    FM1SKTS0   IF NOT MODEL BYPASS..\n*\nFM1EM1   CLC   DS1LSTAR(5),ZEROES   TEST FOR TTR ZEROED...NOT VALID\n         BE    FM1DONXT              IF ALL ZERO...BYPASS\n         CLI   DS1LSTAR+2,0         TEST FOR A TTR OF RECORD ZERO\n         BNE   FM1DONXT             IF NOT ZERO, NON-EMPTY DSN\n         CLC   NUMEXT,ZEROES        TEST FOR ANY VALID EXTENTS\n         BNE   FM1EM2              IF NOT ZERO...EMPTY DATASET.\n         TM    PARMOPT2,MODELOPT    CHECK FOR \"MODEL\" OPTION SELECTED\n         BO    FM1SKTS0      IF SELECTED...PRINT THIS ENTRY\n         B     FM1DONXT    IF NOT MODEL...DON'T INCLUDE IT AS \"EMPTY\"\nFM1EM2   TM    PARMOPT1,EMPTYOPT     CHECK FOR OPTION OF \"EMPTY\"\n         BZ    FM1DONXT  IF NOT SELECTED...DON'T PRINT\n*\nFM1SKTS0 EQU  *\n         TM    PARMOPT1,DUMPOPT\n         BO    FM1XTRAL\n         TM    PARMOPT1,EXTNTOPT\n         BZ    FM1SKTS1\n         CLC   NUMEXT,ZEROES\n         BNE   FM1XTRAL\nFM1SKTS1 TM    PARMOPT2,ISAMOPT\n         BZ    FM1SKTS2\n         LTR   R7,R7\n         BNZ   FM1XTRAL\nFM1SKTS2 TM    PARMOPT1,PDSOPT\n         BZ    FM1GOPRT\n         TM    DS1DSORG,DCBDSGPO\n         BZ    FM1GOPRT\nFM1XTRAL MVI   BUF,SPACE2AP\nFM1GOPRT BAL   R14,PRINT\n         SPACE 1\nFM1SKTS3 EQU   *\n         TM    PARMOPT1,DUMPOPT\n         BZ    FM1EXDMP\n         LA    R2,DS1\n         LA    R3,DS1FDAD\n         BAL   R14,DUMPDSCB\n         LTR   R7,R7\n         BZ    FM1DMP3\n         LA    R2,DS2\n         LA    R3,DS2FDAD\n         BAL   R14,DUMPDSCB\nFM1DMP3  LTR   R8,R8\n         BZ    FM1EXDMP\n         LA    R2,DS3\n         LA    R3,DS3FDAD\n         BAL   R14,DUMPDSCB\n         SPACE 1\nFM1EXDMP TM    PARMOPT1,EXTNTOPT\n         BZ    FM1PDSDP\n         CLC   NUMEXT,ZEROES\n         BE    FM1PDSDP\n         MVC   BUF+10(L'HEAD2DAT),HEAD2DAT\n         MVI   BUF,SPACE0AP\n         BAL   R14,PRINT\n         MVC   BUF+10(L'HEAD2UND),HEAD2UND\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         L     R2,LISTEXT\n         LA    R3,BUF+9\n         SR    R4,R4\n         MVI   EXPFLAG,X'FF'\n         SPACE 1\nFM1EXLP  BAL   R14,EXFORMAT\n         LA    R4,4(,R4)\n         L     R2,LISTEXT(R4)\n         LTR   R2,R2\n         BZ    FM1EXLST\n         BAL   R14,PRINT\n         B     FM1EXLP\nFM1EXLST MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\nFM1PDSDP TM    PARMOPT1,PDSOPT\n         BZ    FM1ISDMP\n         TM    DS1DSORG,DCBDSGPO\n         BZ    FM1ISDMP\n         LA    R2,DS1\n         BAL   R14,PDSLIST\n         SPACE 1\nFM1ISDMP TM    PARMOPT2,ISAMOPT\n         BZ    FM1DONXT\n         BAL   R14,ISAMLIST\nFM1DONXT B     FM1PRLOP\n*\n* G.D.F. ROUTINE TO CONVERT INPUT & OUTPUT DATES TO\n* SAME FORMAT AS CREDAT & EXPDAT FOR DATEDIT ROUTINE\n*\nBINARY   UNPK  DASAVE(3),0(2,R2)  G.D.F.\n         PACK  DATEWORD,DASAVE(2)  G.D.F.\n         CVB   R1,DATEWORD    G.D.F.\n         STC   R1,0(R2)       G.D.F.\n         ZAP   DATEWORD,1(2,R2)  G.D.F.\n         CVB   R1,DATEWORD    G.D.F.\n         STH   R1,DATEWORD    G.D.F.\n         MVC   1(2,R2),DATEWORD  G.D.F.\n         BR    R14            G.D.F.\n*\n* END OF BINARY CONVERT ROUTINE\n*\n         SPACE 2\nFM1PREND MVI   BUF,SPACE1IM\n         BAL   R14,PRINT\n         MVI   BUF+1,C' '          MOVE TO BLANK OUT LINE\n         MVC   BUF+2(131),BUF+1    BLANK OUT PRINT LINE\n         MVC   BUF+49(14),=C'<<<<< END VTOC'\n         LH    R0,FM1COUNT\n         BAL   R14,CONVERT\n         MVC   BUF+64(4),CONVEDIT+8\n         MVC   BUF+69(15),=C'DATA SETS >>>>>'\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         SPACE 1\n         TM    PARMOPT1,MAPOPT+DIRFLAG\n         BZ    MAPEND\n         SPACE 1\n         DROP  R6,R7,R8\n         EJECT\nMAPPRINT MVC   CURLINES,=H'999'\n         LA    R0,HEAD2A\n         ST    R0,BUFPTR\n         MVI   HEADMID,C' '\n         MVC   HEADMID+1(81),HEADMID\n         MVC   HEAD2VOL,VOLSERNO\n         MVC   HEADMID(40),HEAD2\n         L     R6,HOOKSTRT\n         USING EXTENT,R6\n         L     R4,=F'-1'\n         SR    R5,R5\n         MVI   EXPFLAG,0\n         SPACE 1\nMAPPRLOP CLC   EXTLCCHH,HOOKEND\n         BE    MAPPREND\n         CLC   EXTHITT,TRKSPVOL\n         BNL   MAPINVAL\n         CLC   EXTLOTT,EXTHITT\n         BH    MAPINVAL\n         CLI   EXTTYPE,X'80'\n         BE    MAPGETEX\n*                         R4 CONTAINS PREVIOUS HIGH TRACK  GDL-94\n         L     R0,EXTLOTT                                  GDL-94\n*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94\n         SR    R0,R4\n         S     R0,=F'1'\n         BZ    MAPTRGET\n         BP    MAPTRMIS\n         BAL   R14,CONVERT\n         MVC   BUF+1(5),CONVEDIT+7\n         MVC   BUF+7(14),=C'TRACKS OVERLAP'\n         C     R4,EXTHITT                                  GDL-94\n         BNL   *+8\nMAPTRGET L     R4,EXTHITT                                  GDL-94\n*        N     R4,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94\n         A     R5,EXTNOTRK                                 GDL-94\n*        N     R5,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94\n         B     MAPGETEX\n         SPACE 1\nMAPINVAL MVC   BUF+7(14),=C'INVALID EXTENT'\n         B     MAPGETEX\n         SPACE 1\nMAPTRMIS BAL   R14,CONVERT\n         MVC   BUF+1(5),CONVEDIT+7\n         MVC   BUF+7(14),=C'TRACKS MISSING'\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         B     MAPTRGET\n         SPACE 1\nMAPGETEX LA    R2,EXTENT\n         LA    R3,BUF+22\n         BAL   R14,EXFORMAT\n         BAL   R14,PRINT\n         L     R6,EXTPTR\n         B     MAPPRLOP\n         SPACE 3\n*                 R4 IS HIGEST TRACK FOUND                 GDL-94\n*                 R5 IS TOTAL NUMBER OF TRACKS PROCESSED   GDL-94\nMAPPREND L     R0,TRKSPVOL                                 GDL-94\n         SR    R0,R5                                       GDL-94\n         S     R0,=F'1'\n         BNP   MAPNOMIS\n         BAL   R14,CONVERT\n         MVC   BUF+1(5),CONVEDIT+7\n          MVC  BUF+7(40),=C'TRACKS MISSING OR ASSIGNED AS ALTERNATES'\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\nMAPNOMIS MVI   BUF,SPACE1IM\n         BAL   R14,PRINT\n*        N     R5,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94\n         LR    R0,R5\n         BAL   R14,CONVERT\n         MVC   BUF+59(6),CONVEDIT+6                         GDL-94\n         MVC   BUF+67(20),=C'TRACKS ACCOUNTED FOR'          GDL-94\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         MVC   BUF+59(28),=C'<<<<< END OF TRACK MAP >>>>>'\n         MVI   BUF,SPACE0AP\n         BAL   R14,PRINT\nMAPEND   B     NEXTVOL\n         SPACE 1\n         DROP  R6\n         EJECT\nERRNODD  TM    PARMOPT2,VOLSOPT\n         BNO   NEXTDD\n         MVC   BUF+41(19),=C'CANNOT FIND DD CARD'\n         B     ERRCON1\n         SPACE 1\nERRNOTDA TM    PARMOPT2,VOLSOPT\n         BNO   NEXTDD\n         MVC   BUF+41(27),=C'DEVICE IS NOT DIRECT ACCESS'\n         B     ERRCON1\n         SPACE 1\nERRUNKDV MVC   BUF+41(19),=C'UNKNOWN DEVICE TYPE'\n         B     ERRCON1\n         SPACE 1\nERRNOPEN MVC   BUF+41(27),=C'ATTEMPT TO OPEN VTOC FAILED'\n         B     ERRCON1\n         SPACE 1\nERRCON1  MVC   BUF+10(28),=C'ERROR CONCERNING \"VOLUME01\":'\n         MVC   BUF+28(8),VOLDDNAM\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         LA    R0,4\n         B     ERRCODST\n         SPACE 1\nERRNOTFX MVC   BUF+41(33),=C'BAD DSCB - SHOULD HAVE BEEN TYPE'\n         MVC   BUF+75(1),BADDSTYP\n         LR    R2,R8\n         B     ERRCON2\n         SPACE 1\nERRNOCOR MVC   BUF+41(41),=C'INSUFFICIENT MEMORY TO COMPLETE VTOC LIST'\n         SR    R2,R2\n         B     ERRCON2\n         SPACE 1\nERRCON2  BAL   R14,CLOSVTOC\n         BAL   R14,DEQVTOC\n         MVC   BUF+10(28),=C'ERROR CONCERNING \"VOLUME01\":'\n         MVC   BUF+28(8),VOLDDNAM\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         LTR   R2,R2\n         BZ    ERRNODMP\n         LA    R3,DS4FDAD-DS4(R2)\n         BAL   R14,DUMPDSCB\nERRNODMP LA    R0,8\nERRCODST C     R0,RETCODE\n         BL    *+8\n         ST    R0,RETCODE\n         B     NEXTVOL\n         EJECT\n*\n*        SUBROUTINES START HERE\n*\nPDSLIST  ST    R14,PDSAVE\n         STM   R2,R6,PDSAVE+4\n         USING DS1,R2\n         MVC   JFCBDSNM,DS1DSNAM\n         SR    R0,R0\n         IC    R0,DS1NOBDB\n         BAL   R14,CONVERT\n         DROP  R2\n         MVC   PDSVAL4,CONVEDIT+9\n         SPACE 1\n         OPEN  (PDSDCB),TYPE=J\n         L     R3,PDSBLKAD+4\n         READ  PDSDECB,SF,,(3),MF=E\n         SPACE 1\n         SR    R0,R0\n         STH   R0,PDSBYTCT\n         STH   R0,PDSBLKAL\n         STH   R0,PDSBLKUS\n         STH   R0,PDSMEMCT\nPDSNEXT  LH    R0,PDSBYTCT\n         LTR   R0,R0\n         BP    PDSPRINT\n         CHECK PDSDECB\n         SPACE 1\n         CLI   SYNADFLG,0\n         BE    PDSREDOK\n         MVC   BUF+28(11),=CL11'DIRECTORY.'\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         CLI   SYNADFLG,X'FF'\n         BE    PDSEOD\n         BAL   R14,ABDUMP\n         SPACE 1\nPDSREDOK LM    R2,R3,PDSBLKAD\n         XR    R2,R3\n         XR    R3,R2\n         XR    R2,R3\n         STM   R2,R3,PDSBLKAD\n         READ  PDSDECB,SF,,(3),MF=E\n         SPACE 1\n         USING PDS,R2\n         LH    R1,PDSBLKAL\n         LA    R1,1(R1)\n         STH   R1,PDSBLKAL\n         LH    R0,PDSCOUNT\n         SH    R0,=H'2'\n         STH   R0,PDSBYTCT\n         LA    R1,PDSENTRY\n         ST    R1,PDSENTAD\n         B     PDSNEXT\n         SPACE 1\n         DROP  R2\n         SPACE 3\nPDSPRINT L     R6,PDSENTAD\n         USING PDSENTRY,R6\n         IC    R2,PDSINDIC\n         N     R2,=A(PDSUSERH)\n         SLL   R2,1\n         LR    R1,R6\n         AR    R1,R2\n         LA    R1,12(R1)\n         ST    R1,PDSENTAD\n         LH    R1,PDSBYTCT\n         SR    R1,R2\n         SH    R1,=Y(PDSUSERD-PDSENTRY)\n         STH   R1,PDSBYTCT\n         CLC   PDSNAME,EFFS\n         BNE   PDSMEMOK\n         MVC   PDSBLKUS,PDSBLKAL\n         B     PDSNEXT\nPDSMEMOK LH    R1,PDSMEMCT\n         LA    R1,1(R1)\n         STH   R1,PDSMEMCT\n         MVC   BUF+12(8),PDSNAME\n         TM    PDSINDIC,PDSALIAS\n         BZ    *+8\n         MVI   BUF+21,C'A'\n         UNPK  TRAREA,PDSTTRP(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+23(4),TRAREA\n         MVI   BUF+27,C'.'\n         MVC   BUF+28(2),TRAREA+4\n         IC    R0,PDSINDIC\n         N     R0,=A(PDS#TTRS)\n         SRL   R0,5\n         STC   R0,BUF+32\n         OI    BUF+32,X'F0'\n         LR    R5,R2\n         CH    R2,=H'44'\n         BNH   PDSPRLIN\n         LA    R2,2\n         BAL   R14,PRLKAHED\n         LR    R2,R5\n         LA    R5,44\nPDSPRLIN LA    R3,PDSUSERD\n         LA    R4,BUF+35\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         CH    R2,=H'44'\n         BNH   PDSNEXT\n         LR    R5,R2\n         SH    R5,=H'44'\n         LA    R3,PDSUSERD+44\n         LA    R4,BUF+35\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         B     PDSNEXT\n         SPACE 1\n         DROP  R6\n         SPACE 2\nPDSEOD   CLOSE (PDSDCB)\n         CLI   SYNADFLG,0\n         MVI   SYNADFLG,0\n         BNE   PDSRETRN\n         LH    R0,PDSMEMCT\n         BAL   R14,CONVERT\n         MVC   PDSVAL1,CONVEDIT+8\n         LH    R0,PDSBLKUS\n         BAL   R14,CONVERT\n         MVC   PDSVAL2,CONVEDIT+8\n         LH    R0,PDSBLKAL\n         BAL   R14,CONVERT\n         MVC   PDSVAL3,CONVEDIT+8\n         MVC   BUF+10(PDSMSGLN),PDSMSG\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\nPDSRETRN LM    R2,R6,PDSAVE+4\n         L     R14,PDSAVE\n         BR    R14\n         EJECT ,\n         SPACE 1\n         USING DS2,R7\nISAMLIST LTR   R7,R7\n         BZR   R14\n         ST    R14,ISAVE\n         STM   R2,R5,ISAVE+4\n         SPACE 1\n         MVC   BUF+12(19),=C'NO OF INDEX LEVELS='\n         LA    R2,DS2NOLEV\n         BAL   R14,CONVERT1\n         MVC   BUF+31(3),CONVERTD\n         SPACE 1\n         MVC   BUF+42(19),=C'FLAGGED FOR DELETE='\n         LA    R2,DS2TAGDT\n         BAL   R14,CONVERT2\n         MVC   BUF+61(5),CONVERTD\n         SPACE 1\n         MVC   BUF+72(19),=C'TRKS FOR HIGH INDX='\n         LA    R2,DS2NOTRK\n         BAL   R14,CONVERT1\n         MVC   BUF+91(3),CONVERTD\n         SPACE 1\n         MVC   BUF+102(19),=C'IND OVFL TRKS LEFT='\n         LA    R2,DS2RORG2\n         BAL   R14,CONVERT2\n         MVC   BUF+121(5),CONVERTD\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+12(19),=C'TRKS FOR MAST INDX='\n         LA    R2,DS2DVIND\n         BAL   R14,CONVERT1\n         MVC   BUF+31(3),CONVERTD\n         SPACE 1\n         MVC   BUF+42(19),=C'OVERFLOW  ACCESSES='\n         LA    R2,DS2RORG3\n         BAL   R14,CONVERT3\n         MVC   BUF+61(8),CONVERTD\n         SPACE 1\n         MVC   BUF+72(19),=C'PRIME DATA RECORDS='\n         LA    R2,DS2PRCTR\n         BAL   R14,CONVERT4\n         MVC   BUF+91(10),CONVERTD\n         SPACE 1\n         MVC   BUF+102(19),=C'NO OF OVFL RECORDS='\n         LA    R2,DS2OVRCT\n         BAL   R14,CONVERT2\n         MVC   BUF+121(5),CONVERTD\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+12(19),=C'CYL OVFL  TRKS/CYL='\n         LA    R2,DS2CYLOV\n         BAL   R14,CONVERT1\n         MVC   BUF+31(3),CONVERTD\n         SPACE 1\n         MVC   BUF+42(19),=C'CORE FOR HIGH INDX='\n         LA    R2,DS2NOBYT\n         BAL   R14,CONVERT2\n         MVC   BUF+61(5),CONVERTD\n         SPACE 1\n         MVC   BUF+72(19),=C'IND OFL BYTES LEFT='\n         LA    R2,DS2BYOVL\n         BAL   R14,CONVERT2\n         MVC   BUF+91(5),CONVERTD\n         SPACE 1\n         MVC   BUF+102(19),=C'FULL CYLOVFL AREAS='\n         LA    R2,DS2RORG1\n         BAL   R14,CONVERT2\n         MVC   BUF+121(5),CONVERTD\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         LM    R2,R5,ISAVE+4\n         L     R14,ISAVE\n         BR    R14\n         DROP  R7\n         EJECT\n         SPACE 1\n         USING EXTENT,R2\n         USING EXLINE,R3\n         SPACE 1\nEXFORMAT LTR   R2,R2               ANY EXTENT.Q\n         BZR   R14                 RETURN IMM IF NOT\n         ST    R14,EXSAVE\n         STM   R2,R3,EXSAVE+4\n         SPACE 1\n         UNPK  TRAREA,EXTLCCHH(8)\n         TR    TRAREA,TRTABLE\n         MVC   EXLFCC,TRAREA\n         MVI   EXLFPRD,C'.'\n         MVC   EXLFHH,TRAREA+4\n         SPACE 1\n         UNPK  TRAREA,EXTHCCHH(8)\n         TR    TRAREA,TRTABLE\n         MVC   EXLLCC,TRAREA\n         MVI   EXLLPRD,C'.'\n         MVC   EXLLHH,TRAREA+4\n         SPACE 1\n         L     R0,EXTLOTT                                   GDL-94\n*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94\n         BAL   R14,CONVERT\n         MVC   EXLFTT,CONVEDIT+6                            GDL-94\n         SPACE 1\n         L     R0,EXTHITT                                   GDL-94\n*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94\n         BAL   R14,CONVERT\n         MVC   EXLLTT,CONVEDIT+6                            GDL-94\n         SPACE 1\n         L     R0,EXTNOTRK                                  GDL-94\n         BAL   R14,CONVERT\n         MVC   EXLNOTRK,CONVEDIT+6                          GDL-94\n         SPACE 1\n         CLI   EXPFLAG,0\n         BNE   EXPTYPE\n         L     R1,EXTIDPTR\n         MVC   EXLDSNAM,0(R1)\n         SPACE 1\nEXPTYPE  CLI   EXTTYPE,X'01'       IS THIS A DATA EXTENT.Q\n         BNE   EXPNDATA            NO, GO CHECK OTHERS\n         CLI   EXPFLAG,0           ARE WE MAPPING.Q\n         BE    EXPEXTPR            YES, DON'T CLUTTER UP\n         MVC   EXLTYPE,=C'PRIM'    ELSE MOVE IN EXTENT TYPE\n         B     EXPEXTPR\n         SPACE 1\nEXPNDATA TM    EXTTYPE,X'F0'       VOL LABEL, OR TYPE 4, 5, OR 6\n         BO    EXPCKFMX            BR IF YES\n         CLI   EXTTYPE,X'02'       ISAM OVERFLOW.Q\n         MVC   EXLTYPE,=C'OVFL'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'04'       ISAM INDEX.Q\n         MVC   EXLTYPE,=C'INDX'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'40'       USER LABEL TRACK.Q\n         MVC   EXLTYPE,=C'ULBL'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'81'       CYLS OF DATA ON CYL BDRY.Q\n         MVC   EXLTYPE,=C'CYLB'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'80'       SHARING AN EXTENT.Q\n         MVC   EXLTYPE,=C'SHRD'\n         BNE   EXPCKFMX\n         CLI   EXPFLAG,0           ARE WE MAPPING.Q\n         BNE   EXPEXTPR            NO, DON'T ENCLOSE IN PARENS\n         MVI   EXLLPARN,C'('\n         MVI   EXLRPARN,C')'\n         B     EXPEXTPR\n         SPACE 1\nEXPCKFMX CLI   EXTTYPE,C'5'        FREE EXTENT.Q\n         BE    EXPPRLIN\n         SPACE 1\n         CLI   EXTTYPE,C'4'        VTOC EXTENT.Q\n         MVC   EXLTYPE,=C'VTOC'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'FF'       VOLUME LABEL.Q\n         MVC   EXLTYPE,=C'VLBL'\n         BE    EXPPRLIN\n         SPACE 1\n         CLI   EXTTYPE,C'6'        SHARED EXTENT.Q\n         MVC   EXLTYPE,=C'*UN*'\n         BNE   EXPEXTPR\n         SPACE 1\n         MVC   EXLTYPE,=C'SPLT'\n         SR    R0,R0\n         IC    R0,EXTSEQNO\n         BAL   R14,CONVERT\n         MVC   EXLSPLIT(3),CONVEDIT+9\n         B     EXPPRLIN\n         SPACE 1\nEXPEXTPR SR    R0,R0\n         IC    R0,EXTSEQNO\n         AH    R0,=H'1'\n         BAL   R14,CONVERT\n********************************** START *********** SMA 3/88  CHANGED\n         MVC   EXLSEQNO,CONVEDIT+9\n**********************************  END  *********** SMA 3/88  CHANGED\n         SPACE 1\nEXPPRLIN MVI   BUF,SPACE1AP\n         LM    R2,R3,EXSAVE+4\n         L     R14,EXSAVE\n         BR    R14\n         DROP  R2,R3\n         EJECT\n         SPACE 3\nVTOCREAD ST    R14,VTSAVE\n         STM   R2,R4,VTSAVE+4\n         L     R2,RENEXT@\n         CHECK (2)\n         LA    R1,=CL11'VTOC READ.'\n         BAL   R14,SYNADCHK\n         SPACE 1\n         USING DS1,R3\nVTOCREOK XC    0(20,R2),0(R2)\n         LA    R4,20(R2)\n         MVC   DS1(DS1END-DS1),0(R4)\n         MVC   DS1FDAD(3),VTOCMBB\n         MVC   DS1FDAD+3(4),VTOCCCHH\n         MVC   DS1FDAD+7(1),VTOCR\n         CLC   HWMDS1,DS1FDAD+3\n         BNL   VTOCRD01                         ADDED 12/11/81 KOWNACKI\n         CLC   HWMDS1,=X'0000000000'            ALLOW INITIAL X'00' AS\n         BNE   VTOCEOD                          DS4HPCHR FOR DSF\n         SPACE 1\nVTOCRD01 READ  (2),SF,VTOCDCB,(4),MF=E\n         A     R2,REBLKSIZ\n         ST    R2,RENEXT@\n         L     R1,RECOUNT\n         BCT   R1,VTSAVECT\n         L     R2,REBLOCK@\n         ST    R2,RENEXT@\n         L     R1,RENCP\nVTSAVECT ST    R1,RECOUNT\n         SPACE 1\n         LA    R0,1\n         SR    R1,R1\n         IC    R1,VTOCR\n         AR    R1,R0\n         STC   R1,VTOCR\n         CH    R1,VTDSCBTR\n         BNH   VTOCREND\n         MVI   VTOCR,1\n         AH    R0,VTOCTT\n         STH   R0,VTOCTT\n         LR    R1,R0\n         BAL   R14,TTCONVRT\n         MVC   VTOCCCHH,CCHH\n         SPACE 1\nVTOCREND L     R14,VTSAVE\n         LM    R2,R4,VTSAVE+4\n         LA    R14,4(R14)\n         BR    R14\n         SPACE 1\nVTOCEOD  L     R14,VTSAVE\n         LM    R2,R4,VTSAVE+4\n         BR    R14\n         SPACE 1\n         DROP  R3\n         EJECT\n         SPACE 3\nOBTAIN   MVC   OBCCHHR,0(R2)\n         OBTAIN OBCAMLST\n         BXLE  R15,R15,*+8\n         BAL   R14,ABDUMP\n         USING DS1,R3\n         MVC   DS1(DS1END-DS1),CAMLIST\n         MVC   DS1FDAD(3),VTOCMBB\n         MVC   DS1FDAD+3(5),0(R2)\n         BR    R14\n         SPACE 2\nOBCAMLST CAMLST SEEK,OBCCHHR,VOLSERNO,CAMLIST\n         SPACE 1\n         DROP  R3\n         EJECT\n         SPACE 3\nSYNADXIT SYNADAF ACSMETH=BSAM\n         MVC   BUF+7(47),=C'I/O ERROR PROCESSING XXXXXXXXXX. SYNADAF INX\n               FO=\"'\n         MVC   BUF+54(78),50(R1)\n         MVI   BUF+132,C'\"'\n         SYNADRLS\n         MVI   SYNADFLG,X'FF'\n         LTR   R0,R0\n         BZR   R14\n         MVI   SYNADFLG,1\n         BR    R14\n         SPACE 3\nSYNADCHK CLI   SYNADFLG,0\n         BER   R14\n         MVC   BUF+28(11),0(R1)\n         BAL   R14,CLOSVTOC\n         BAL   R14,DEQVTOC\n         MVI   BUF,SPACE3IM\n         BAL   R14,PRINT\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         CLI   SYNADFLG,X'FF'\n         BE    ERRNODMP\n         BAL   R14,ABDUMP\n         EJECT\n         SPACE 3\nDEQGATE  EQU   *+1\nDEQVTOC  BCR   *-*+15,R14\n         OI    DEQGATE,X'F0'\n         SPACE 1\n         DEQ   MF=(E,ENQVTOC)\n         SPACE 1\n         BR    R14\n         SPACE 4\n         SPACE 1\nCLOSVTOC CLOSE MF=(E,CLOSLIST)\n         SPACE 1\n         L     R1,REBLOCK@\n         LTR   R1,R1\n         BZR   R14\n         L     R0,REGETSIZ\n         FREEMAIN R,LV=(0),A=(1)\n         SR    R0,R0\n         ST    R0,REBLOCK@\n         BR    R14\n         EJECT\n         SPACE 3\n         USING DS1,R6\n         USING DS3,R8\n         SPACE 1\nF13HOOK  ST    R14,F1SAVE\n         SR    R5,R5\n         ST    R5,F1TRKAL\n         STH   R5,NUMEXT\n********************************** START *********** SMA 3/88  CHANGED\n         XC    LISTEXT(64*4),LISTEXT\n         XC    LISTEXT+256(64*4),LISTEXT+256\n**********************************  END  *********** SMA 3/88  CHANGED\n         IC    R5,DS1NOEPV\n         CLI   DS1EXT1,X'40'\n         BNE   *+8\n         AH    R5,=H'1'\n         LTR   R5,R5\n         BZR   R14\n         STH   R5,NUMEXT\n********************************** START *********** SMA 3/88  ADDED\n         STH   R5,WRKEXT           SAVE NUMBER OF EXTENTS\n         CH    R5,=H'16'           NUMBER EXTENTS > 16 ?\n         BNH   GOODEXT             NO, USE AS IS\n         LH    R5,=H'16'           YES, FORCE AS 16\nGOODEXT  EQU   *\n**********************************  END  *********** SMA 3/88  ADDED\n         SPACE 1\n         SR    R3,R3\n         SR    R4,R4\nF1NXTEXT EX    0,F1EXTPIK(R3)\n         BAL   R14,F1EXTCNV\n         AR    R4,R0\n         MVC   HOOKLCCH(8),2(R2)\n         ST    R0,HOOKNTRK                  GDL-94\n         MVC   HOOKTYPE(2),0(R2)\n         MVC   HOOKLOTT,LOWTT                          GDL-94\n         MVC   HOOKHITT,HIGHTT                         GDL-94\n         LA    R0,DS1DSNAM\n         ST    R0,HOOKIDPT\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         ST    R15,LISTEXT(R3)\n         LA    R3,4(R3)\n         BCT   R5,F1NXTEXT\n         ST    R4,F1TRKAL\n********************************** START *********** SMA 3/88  ADDED\n         ST    R3,R3EXT            SAVE EXTENT TABLE POINTER\nF3NXTF3  EQU   *\n         USING DS3,R8\n         LTR   R8,R8               IS POINTER ZEROES ?\n         BZ    F3DONE              YES, DONE FORMAT 3 DSCB\n         CLC   DS3PTRDS,ZEROES     NO, DOUBLE CHECK POINTER\n         BE    F3DONE              DONE FORMAT 3 DSCB\n         LH    R5,WRKEXT           LOAD NUMBER OF EXTENTS\n         SH    R5,LSTEXT           SUBTRACT LAST NUMBER OF EXTENTS\n         MVC   LSTEXT,=H'13'       SET LAST NUMBER OF EXTENTS TO 13\n         STH   R5,WRKEXT           SAVE NUMBER OF EXTENTS LEFT\n         CH    R5,=H'13'           ARE THERE MORE THAN 13 EXTENTS LEFT\n         BNH   GOODEXT2            NO, USE IT\n         LH    R5,=H'13'           YES, FORCE AT 13\nGOODEXT2 EQU   *\n         CH    R5,=H'0'            ARE THERE MORE THAN ZERO EXTENTS\n         BNH   F3DONE              NO, WE'RE DONE WITH FORMAT 3 DSCB'S\n         LA    R4,DS3LEN           YES, OBTAIN EXTENT INFORMATION\n         BAL   R14,GETCORE         -\n         ST    R3,DS3F2PTR         -\n         LA    R2,DS3PTRDS         -\n         LR    R8,R3               -\n         BAL   R14,OBTAIN          -\n         SPACE 1                   -\n         SR    R3,R3               CLEAR REGISTER 3\n         SR    R4,R4               CLEAR REGISTER 4\nF3NXTEXT EX    0,F3EXTPIK(R3)      EXECUTE FORMAT 3 DSCB EXTENT LOADS\n         BAL   R14,F1EXTCNV        CONVERT EXTENT INFORMATION\n         AR    R4,R0               ADD TO NUMBER OF TRACKS ALLOCATED\n         MVC   HOOKLCCH(8),2(R2)   PERORM HOOK EXTENT PROCESSING\n         ST    R0,HOOKNTRK         -              GDL-94\n         MVC   HOOKTYPE(2),0(R2)   -\n         MVC   HOOKLOTT,LOWTT      -                    GDL-94\n         MVC   HOOKHITT,HIGHTT     -                    GDL-94\n         LA    R0,DS1DSNAM         -\n         ST    R0,HOOKIDPT         -\n         LA    R2,HOOKPTR          -\n         BAL   R14,HOOKUP          -\n         ST    R3,R3EXTHLD         SAVE REGISTER 3\n         L     R3,R3EXT            LOAD EXTENT TABLE POINTER\n         ST    R15,LISTEXT(R3)     STORE EXTENT INFORMATION INTO TABLE\n         LA    R3,4(R3)            INCREMENT POINTER TO NEXT ELEMENT\n         ST    R3,R3EXT            SAVE EXTENT TABLE POINTER\n         L     R3,R3EXTHLD         RELOAD REGISTER 3\n         LA    R3,4(R3)\n         BCT   R5,F3NXTEXT         LOOP FOR AS MANY EXTS IN THIS DSCB\n         A     R4,F1TRKAL          ADD PREVIOUS TRACKS ALLOC TO COUNTER\n         ST    R4,F1TRKAL          STORE CUMMULATIVE TRACKS TO COUNTER\n         B     F3NXTF3             GO GET NEXT FORMAT 3 DSCB\nF3DONE   EQU   *\n         MVC   LSTEXT,=H'16'       RESTORE LAST EXTENT TO 16\n**********************************  END  *********** SMA 3/88  ADDED\n         L     R14,F1SAVE\n         BR    R14\n         EJECT ,\n         SPACE 3\nF1EXTCNV CLI   0(R2),0\n         BER   R14\n         LA    R2,2(R2)\n         BAL   R15,CCHHCONV\n         ST    R0,LOWTT                               GDL-94\n         LA    R2,4(R2)\n         BAL   R15,CCHHCONV\n         ST    R0,HIGHTT                              GDL-94\n         L     R1,LOWTT                               GDL-94\n*        N     R1,=X'0000FFFF' ZERO OUT HIGH ORDER BYTES    GDL-94\n         SR    R0,R1\n         AH    R0,=H'1'\n         S     R2,=F'6'\n         BR    R14\n         SPACE 2\nF1EXTPIK LA    R2,DS1EXT1\n         LA    R2,DS1EXT2\n         LA    R2,DS1EXT3\n         LA    R2,DS3EXTNT\n         LA    R2,DS3EXTNT+10\n         LA    R2,DS3EXTNT+20\n         LA    R2,DS3EXTNT+30\n         LA    R2,DS3ADEXT\n         LA    R2,DS3ADEXT+10\n         LA    R2,DS3ADEXT+20\n         LA    R2,DS3ADEXT+30\n         LA    R2,DS3ADEXT+40\n         LA    R2,DS3ADEXT+50\n         LA    R2,DS3ADEXT+60\n         LA    R2,DS3ADEXT+70\n         LA    R2,DS3ADEXT+80\n         SPACE 2\n********************************** START *********** SMA 3/88  ADDED\n* THE FORMAT 3 DSCB CONTAINS ONLY 13 EXTENTS AS OPPOSED TO 16\n* EXTENTS IN THE COMBINED FORMAT 1 / FORMAT 3 DSCB TABLE AS\n* DEFINED ABOVE.\n*********************************************************************\nF3EXTPIK LA    R2,DS3EXTNT\n         LA    R2,DS3EXTNT+10\n         LA    R2,DS3EXTNT+20\n         LA    R2,DS3EXTNT+30\n         LA    R2,DS3ADEXT\n         LA    R2,DS3ADEXT+10\n         LA    R2,DS3ADEXT+20\n         LA    R2,DS3ADEXT+30\n         LA    R2,DS3ADEXT+40\n         LA    R2,DS3ADEXT+50\n         LA    R2,DS3ADEXT+60\n         LA    R2,DS3ADEXT+70\n         LA    R2,DS3ADEXT+80\n         SPACE 2\n********************************** START *********** SMA 3/88  ADDED\n         DROP  R6,R8\n         EJECT\n         SPACE 3\n         USING DT2ARENT,R2                               GDL-94\n*                                                        GDL-94\nF56HOOK  ST    R14,F5SAVE\n         LA    R2,DT2ENTRY        POINT TO FIRST ENTRY   GDL-94\n         L     R3,DT2ENTNM        LOAD NUMBER OF ENTRIES GDL-94\nF5LOOP   CLC   DT2EXT,ZEROES      ZERO ENTRY             GDL-94\n         BE    F5EXIT                 END OF EXTENTS     GDL-94\n         CLC   DT2ENTRY(4),=X'0000C3A5'  LAST CYL 3390-3 KOHLS-02\n         BE    F5EXIT                                    KOHLS-02\n         CLC   DT2ENTRY(4),=X'00024AEF'  LAST CYL 3390-9 KOHLS-02\n         BE    F5EXIT                                    KOHLS-02\n         BAL   R14,F5EXTCNV\n         LA    R2,8(R2)           POINT TO NEXT ENTRY    GDL-94\n         BCT   R3,F5LOOP\n*        LA    R2,DS5MAVET                               GDL-94\n*        LA    R3,18                                     GDL-94\n*        BAL   R14,F5EXTCNV                              GDL-94\n*        LA    R2,5(R2)                                  GDL-94\n*        BCT   R3,*-8                                    GDL-94\nF5EXIT   L     R14,F5SAVE                                GDL-94\n         BR    R14\n         SPACE 1\nF5EXTCNV ST    R14,F5SAVE+4\n         STM   R2,R5,F5SAVE+8                            GDL-94\n         L     R1,DT2RTAST           GET BEGINING TRACK  GDL-94\n         ST    R1,HOOKLOTT           STORE IN TABLE      GDL-94\n         LR    R3,R1                 SAVE IN R3          GDL-94\n         BAL   R14,TTCONVRT          CONVERT TO CCHH     GDL-94\n         MVC   HOOKLCCH,CCHH         SAVE IN TABLE       GDL-94\n         L     R1,DT2RTAED           GET ENDING TRACK    GDL-94\n         LR    R4,R1                 SAVE IN R4          GDL-94\n         BCTR  R1,0                  ADJUST END OF EXT   GDL-94\n         ST    R1,HOOKHITT           STORE IN TABLE      GDL-94\n         BAL   R14,TTCONVRT          CONVERT TO CCHH     GDL-94\n         MVC   HOOKHCCH,CCHH         SAVE IN TABLE       GDL-94\n         SR    R4,R3                 GET NUMBER OF TRKS  GDL-94\n         ST    R4,HOOKNTRK           SAVE IN TABLE       GDL-94\n         LH    R5,HOOKHCCH           LOAD END CYLENDER   GDL-94\n         SH    R5,HOOKLCCH           SUBTRACT START CYL  GDL-94\n         LA    R5,1(R5)              ADJUST COUNT        GDL-94\n         CLI   HOOKLCCH+3,X'00'      START ON CYL BOUNDRY GDL-94\n         BE    STRTBDY                 YES               GDL-94\n         BCTR  R5,0                    NO SUBTRACT 1     GDL-94\nSTRTBDY  EQU   *\n         LH    R0,TRKSPCYL           GET TRACKS PER CYL  GDL-94\n         BCTR  R0,0                  BACK UP TO LAST TRK GDL-94\n         CH    R0,HOOKHCCH+2         END ON CYL BOUNDRY  GDL-94\n         BE    ENDBDY                  YES               GDL-94\n         BCTR  R5,0                    NO SUBTRACT 1     GDL-94\nENDBDY   C     R4,F5LARGTT           IS IT THE LARGEST   GDL-94\n         BNH   F5AVAIL                 NO, CONTINUE      GDL-94\n         ST    R4,F5LARGTT           SAVE NEW LARGEST TR GDL-94\n         STH   R5,F5LARGST           NUM CYL IN LARGEST  GDL-94\nF5AVAIL  A     R4,AVAILSPC           ADD AVAILABLE TRKS  GDL-94\n         ST    R4,AVAILSPC           SAVE NEW AVAIL TRKS GDL-94\n         LH    R1,AVAILEXT           INCREMENT           GDL-94\n         LA    R1,1(R1)                  COUNT OF AVAIL  GDL-94\n         STH   R1,AVAILEXT                  EXTENTS      GDL-94\n         AH    R5,AVAILCYL           ADD FULL CYLENDERS  GDL-94\n         STH   R5,AVAILCYL           SAVE NEW AVAIL CYL  GDL-94\n         LA    R0,=CL44'  **** AVAILABLE ****'           GDL-94\n         ST    R0,HOOKIDPT                               GDL-94\n         MVI   HOOKSEQN,0            FAKE SEQUENCE NUM   GDL-94\n         MVI   HOOKTYPE,C'5'         PUT TYPE IN TABLE   GDL-94\n         DROP  R2\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         LM    R2,R5,F5SAVE+8                            GDL-94\n         L     R14,F5SAVE+4\n         BR    R14\n         SPACE 1\n*F6HOOK  STC   R5,HOOKSEQN                               GDL-94\n*        MVC   HOOKIDPT,=A(FMT6MSG)                      GDL-94\n*        LR    R0,R4                                     GDL-94\n*        MH    R0,TRKSPCYL                               GDL-94\n*        STH   R0,HOOKNTRK                               GDL-94\n*        B     F6RETURN                                  GDL-94\n         SPACE 1\n*        DROP  R8                                        GDL-94\n         EJECT\n         SPACE 3\n*      THIS ROUTINE ADDED 03/82 BY D. KOWNACKI FOR INDEXED VTOCS\n*\n*       IF INDEXED VTOC THIS ROUTINE WILL BUILD A FORMAT 5 DSCB.\n*        FMT5AD CONTAINS THE ADDRES OF THE FORMAT 5 DSCB BUFFER.\n*        IT CONTAINS THE LAST FORMAT 5 DSCB READ OR BUILT. THE\n*        FMT 5 BUFFER IS ZERO IF THIS IS THE 1ST CALL.\n*        THE BUILT FMT5 WILL THEN BE PROCESSED AS BEFORE.\n*        IF THE FMT 5 DSCB BUFFER RETURNED INDICATES MORE EXTENTS\n*         THIS ROUTINE WILL BE CALLED AGAIN TO OBTAIN THE\n*         NEXT FMT 5 DSCB AND SO ON.\n*\n*        USING DS5,R8                                         GDL-94\n         USING DS4,R6\n*\nINDEXCHK ST    R14,INDXSAVE\n         L     R5,UCBADDR               PUT UCBADDR IN REG 5\n         CVAFTST UCB=(R5)               TEST VTOC\n         LTR   R15,R15                  TEST RETURN CODE\n         BNZ   INDXED                    GO PROCESS           GDL-94\n         BAL   R14,ABDUMP        INDEX VTOC SUPPORT REQUIRED  GDL-94\n*        BE    INDXEND                   GO PROCESS THE FMT5  GDL-94\n         SPACE 1\n*        ASSUME INDEXED VTOC AND GET THE NO OF AVAILABLE FORMAT 1'S\n         SPACE 1\nINDXED   ST    R5,CVPL2+12           STORE UCBADDR FOR MACRO\n         CVAFDSM  MF=(E,CVPL2),BRANCH=NO\n         SPACE 1\n         MVC   DS4DSREC(2),FMT0ADDR+2   STORE AVAIL FMT0 IN FMT4 FIELD\n         SPACE 1\n*        ASSUME INDEXED VTOC ---     NOT APPLICABLE        GDL-94\n         MVC   DT2X7HDR,ZEROES       ZERO OUT HEADER       GDL-94\n         MVC   DT2X7EYE,=C'ICVEDT02' INIT EYE CATCHER      GDL-94\n         MVC   DT2X7LEN,DT2LEN       TOTAL AREA LENGTH\n         MVC   DT2X7LEV,DT2LEV       CONTROL BLOCK LEVEL\n         MVC   DT2ENTRY(4),ZEROES    ZERO RTA START ADDR   GDL-94\n         MVC   DT2ENTNM,NUMENT    INIT NUMBER OF ENTRIES   GDL-94\n         SPACE 1\n         ST    R5,CVUCB              STORE UCBADDR FOR MACRO\n*                                                          GDL-94\n*                                                          GDL-94\nMOREINDX DS    0H\n         CVAFDSM MF=(E,CVPL),BRANCH=NO   GET EXTENTS FROM CVPL GDL-94\n         SPACE 1\n*        TM    CVFL1,CV1IVT                          GDL-94\n*        BZ    INDXEND                               GDL-94\n         LTR   R15,R15                     IS THERE AN ERROR?\n         BZ    BUILDF5                      NO       GDL-94\n         C     R15,=F'4'                   TEST THE RETURN CODE\n         BE    TSTSTAT\n         BAL   R14,ABDUMP                  UNEXPECTED ERROR (ABEND)\nTSTSTAT  CLI   CVSTAT,STAT032              END OF DATA\n         BE    INDXEND                               GDL-94\n         BAL   R14,ABDUMP                  UNEXPECTED ERROR (ABEND)\n         SPACE 3\n*        BUILD THE FORMAT 5 ***NO LONGER DONE***     GDL-94\n*    BUT NEED TO PROCESS CURRENT GROUP OF EXTENTS AND GET MORE  GDL-94\n         SPACE 2\nBUILDF5  DS    0H\n*        MVC   DS5KEYID,FM5ID                        GDL-94\n*        MVC   DS5AVEXT(L'DS5AVEXT+L'DS5EXTAV),EXTS  GDL-94\n*                                                    GDL-94\n*        MVI   DS5FMTID,C'5'                         GDL-94\n*        MVC   DS5MAVET,EXTS+L'DS5AVEXT+L'DS5EXTAV   GDL-94\n*        NC    EXTS+L'EXTS-L'DS5AVEXT(5),EXTS+L'EXTS-L'DS5AVEXT GDL-94\n*                                                    GDL-94\n*        BZ    INDXEND          BRANCH IF YES        GDL-94\n         BAL   R14,F56HOOK\n         MVC   DT2ENTRY(4),DT2END-4 SETUP FOR NEXT TIME THRU   GDL-94\n*                           PER APAR OY66889                   GDL-94\n         CLC   DT2ENTRY(4),=X'0000C3A5'  LAST CYL 3390-3 KOHLS-02\n         BE    INDXEND                                   KOHLS-02\n         CLC   DT2ENTRY(4),=X'00024AEF'  LAST CYL 3390-9 KOHLS-02\n         BE    INDXEND                                   KOHLS-02\n         B     MOREINDX\n*                         ALL EXTENTS PROCESSED EXIT.\nINDXEND  DS    0H\n         L     R14,INDXSAVE\n         BR    R14\n         EJECT\n         SPACE 3\nHOOKUP   TM    PARMOPT1,MAPOPT+EXTNTOPT+DIRFLAG\n         BZR   R14\n         ST    R14,HOSAVE\n         STM   R3,R5,HOSAVE+4\n         LA    R4,EXTNTLEN\n         BAL   R14,GETCORE\n         USING EXTENT,R3\n         MVC   EXTENT(EXTNTLEN),0(R2)\n         L     R2,HOOKSTRT\n         LA    R4,HOOKSTRT\nHOOKLOOK CLC   EXTLCCHH,EXTLCCHH-EXTENT(R2)\n         BL    HOOKDONE\n         LR    R4,R2\n         L     R2,0(R2)\n         B     HOOKLOOK\n         SPACE 1\nHOOKDONE ST    R2,EXTPTR\n         ST    R3,EXTPTR-EXTENT(R4)\n         LR    R15,R3\n         LM    R3,R5,HOSAVE+4\n         L     R14,HOSAVE\n         BR    R14\n         SPACE 1\n         DROP  R3\n         EJECT ,\n         SPACE 3\nCCHHCONV SR    R0,R0\n         IC    R0,0(R2)\n         MH    R0,DEVCONV1\n         SR    R1,R1\n         IC    R1,1(R2)\n         MH    R1,DEVCONV2\n         AR    R0,R1\n         SR    R1,R1\n         IC    R1,2(R2)\n         MH    R1,DEVCONV3\n         AR    R0,R1\n         SR    R1,R1\n         IC    R1,3(R2)\n         MH    R1,DEVCONV4\n         AR    R0,R1\n         BR    R15\n         SPACE 4\nTTCONVRT SR    R0,R0\n         ST    R0,CCHH\n         LH    R15,DEVCONV1\n         LTR   R15,R15\n         BZ    TTCONVR2\n         DR    R0,R15\n         STC   R1,CCHH\n         LR    R1,R0\n         SR    R0,R0\nTTCONVR2 LH    R15,DEVCONV2\n         LTR   R15,R15\n         BZ    TTCONVR3\n         DR    R0,R15\n         STC   R1,CCHH+1\n         LR    R1,R0\n         SR    R0,R0\nTTCONVR3 LH    R15,DEVCONV3\n         LTR   R15,R15\n         BZ    TTCONVR4\n         DR    R0,R15\n         STC   R1,CCHH+2\n         STC   R0,CCHH+3\n         BR    R14\n         SPACE 1\nTTCONVR4 STC   R1,CCHH+3\n         BR    R14\n         EJECT\n         SPACE 3\nCONVERT1 LA    R3,1\n         B     CONVCOM\n         SPACE 1\nCONVERT2 LA    R3,2\n         B     CONVCOM\n         SPACE 1\nCONVERT3 LA    R3,3\n         B     CONVCOM\n         SPACE 1\nCONVERT4 LA    R3,4\n         SPACE 1\nCONVCOM  SR    R0,R0\nCONV1MOR SLL   R0,8\n         IC    R0,0(R2)\n         LA    R2,1(R2)\n         BCT   R3,CONV1MOR\n         SPACE 1\nCONVERT  LPR   R0,R0\n         CVD   R0,CONVDEC\n         UNPK  CONVUNPK,CONVDEC\n         OI    CONVUNPK+11,X'F0'\n         MVC   CONVEDIT,=X'402020202020202020202120'\n         ED    CONVEDIT,CONVDEC+2\n         MVC   CONVERTD,CONVEDIT+1\nCONVCLI  CLI   CONVERTD,C' '\n         BNER  R14\n         MVC   CONVERTD,CONVERTD+1\n         B     CONVCLI\n         SPACE 1\n         EJECT\n         SPACE 3\nDATEDIT  ST    R14,DASAVE\n         STM   R2,R5,DASAVE+4\n         XC    DATEWORD,DATEWORD\n         LTR   R2,R2\n         BZ    DATGET\n         SR    R1,R1\n         IC    R1,0(R2)\n         MH    R1,=H'1000'\n         MVC   DATEWORD,1(R2)\n         AH    R1,DATEWORD\n         CVD   R1,DATEWORD\nDATGETRT OI    DATEWORD+7,X'0F'\n         L     R2,DATEWORD+4\n         SR    R0,R0\n         D     R0,=F'1000'\n         LA    R15,DATNORMY\n         LTR   R14,R1\n         BZ    DATCOMP\n         N     R14,=F'3'\n         BM    DATCOMP\n         LA    R15,DATLEAPY\n         SPACE 1\nDATCOMP  LTR   R0,R0\n         BZ    DAJULIAN\n         CH    R0,0(R15)\n         BH    DAJULIAN\n         TM    PARMOPT2,JDATEOPT\n         BO    DAJULIAN\n         LA    R3,1\n         SR    R14,R14\n         SPACE 1\nDATICMON IC    R14,1(R3,R15)\n         CR    R0,R14\n         BNH   DATMONOK\n         SR    R0,R14\n         LA    R3,1(R3)\n         B     DATICMON\n         SPACE 1\nDATMONOK MH    R3,=H'1000'\n         AR    R3,R0\n         MH    R3,=H'1000'\n         AR    R3,R1\n         CVD   R3,DATEWORD\n         MVC   DATEWORD(5),DATEWORD+3\n         UNPK  DATEWORD(8),DATEWORD(5)\n         OI    DATEWORD+7,X'F0'\n         MVI   DATEWORD+2,C'/'\n         MVI   DATEWORD+5,C'/'\n         SPACE 3\nDATRETRN LM    R2,R5,DASAVE+4\n         MVC   0(8,R3),DATEWORD\n         L     R14,DASAVE\n         BR    R14\n         SPACE 2\nDAJULIAN ST    R2,DATEWORD\n         UNPK  DATEWORD+2(5),DATEWORD+1(3)\n         MVC   DATEWORD+1(2),DATEWORD+2\n         MVI   DATEWORD,C' '\n         MVI   DATEWORD+3,C'.'\n         MVI   DATEWORD+7,C' '\n         B     DATRETRN\n         SPACE 2\nDATGET   ST    R1,DATEWORD+4\n         LTR   R1,R1\n         BNZ   DATGOT\n         TIME  DEC\n         ST    R1,DATEWORD+4\nDATGOT   CVB   R1,DATEWORD\n         B     DATGETRT\n         SPACE 2\n         EJECT\n         SPACE 3\nDUMPDSCB ST    R14,DUSAVE\n         LR    R4,R2\n         LA    R2,3\n         BAL   R14,PRLKAHED\n         LR    R2,R4\n         MVC   BUF+8(17),=C'BLK 1234.5678.90:'\n         UNPK  TRAREA,3(8,R3)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+12(4),TRAREA\n         MVC   BUF+17(4),TRAREA+4\n         MVC   BUF+22(2),TRAREA+8\n         LA    R3,0(R2)\n         LA    R4,BUF+35\n         LA    R5,44\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         MVC   BUF+8(13),=C'FORMAT N DSCB'\n         MVC   BUF+15(1),44(R2)\n         OI    BUF+15,X'F0'\n         LA    R3,44(R2)\n         LA    R4,BUF+26\n         LA    R5,48\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         LA    R3,92(R2)\n         LA    R4,BUF+26\n         LA    R5,48\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         L     R14,DUSAVE\n         BR    R14\n         EJECT ,\n         SPACE 3\nDUMPLINE LTR   R5,R5\n         BNPR  R14\n         B     DUMPNEXT\nDUMPWORD BCT   R1,DUMPBYTE\n         MVI   0(R4),C' '\n         LA    R4,1(R4)\nDUMPNEXT LA    R1,4\nDUMPBYTE UNPK  TRAREA(3),0(2,R3)\n         TR    TRAREA(2),TRTABLE\n         MVC   0(2,R4),TRAREA\n         LA    R3,1(R3)\n         LA    R4,2(R4)\n         BCT   R5,DUMPWORD\n         BR    R14\n         EJECT\n         SPACE 3\nGETCORE  A     R4,=F'3'\n         N     R4,=F'-4'\nGETAGAIN L     R0,CORLEFT\n         SR    R0,R4\n         BM    GETMAIN\n         ST    R0,CORLEFT\n         L     R3,CORNEXT@\n         LR    R0,R3\n         AR    R0,R4\n         ST    R0,CORNEXT@\n         BR    R14\n         SPACE 3\nGETMAIN  L     R3,CURBLK@\n         GETMAIN EC,LV=2048,A=CURBLK@\n         BXH   R15,R15,ERRNOCOR\n         SPACE 1\n         L     R1,CURBLK@\n         ST    R1,0(R3)\n         SR    R0,R0\n         ST    R0,0(R1)\n         LA    R1,4(R1)\n         ST    R1,CORNEXT@\n         MVC   CORLEFT,=A(2044)\n         B     GETAGAIN\n         EJECT ,\n         SPACE 3\nFREECORE L     R2,CORFRST@\nFREELOOP LTR   R1,R2\n         BZ    FREEDONE\n         L     R2,0(R2)\n         LA    R0,2048\n         FREEMAIN R,LV=(0),A=(1)\n         B     FREELOOP\n         SPACE 1\nFREEDONE SR    R0,R0\n         ST    R0,CORLEFT\n         ST    R0,CORFRST@\n         LA    R0,CORFRST@\n         ST    R0,CURBLK@\n         BR    R14\n         EJECT\n         SPACE 3\nPRINT    ST    R14,PRSAVE\n         STM   R2,R5,PRSAVE+4\n         LH    R0,CURLINES\n         CH    R0,MAXLINES\n         BL    PRNOPAGE\n         PUT   PRINTDCB,NEWPAGE\n         SR    R0,R0\n         STH   R0,CURLINES\nPRNOPAGE LTR   R0,R0\n         BNZ   PRINTBUF\n         LH    R0,CURPAGES\n         AH    R0,=H'1'\n         STH   R0,CURPAGES\n         CH    R0,MAXPAGES\n         BNH   PRTPGCNV\n         SR    R0,R0\n         STH   R0,CURPAGES\nPRTPGCNV BAL   R14,CONVERT\n         MVC   PAGENO,CONVERTD\n         PUT   PRINTDCB,HEADERCC\n         MVC   CURLINES,=H'3'\n         L     R2,BUFPTR\nPRNXTBUF LH    R0,CURLINES\n         LTR   R2,R2\n         BZ    PRINTBUF\n         AH    R0,4(R2)\n         STH   R0,CURLINES\n         LA    R3,6(R2)\n         PUT   PRINTDCB,(3)\n         L     R2,0(R2)\n         B     PRNXTBUF\n         EJECT\n         SPACE 3\nPRINTBUF TM    BUF,X'80'\n         BZ    PRUPLINE\n         SR    R0,R0\n         B     PRDOPUT\nPRUPLINE SR    R14,R14\n         IC    R14,BUF\n         SRL   R14,3\n         AR    R0,R14\nPRDOPUT  STH   R0,CURLINES\n         PUT   PRINTDCB,BUF\n         TM    BUF,X'02'\n         BO    PRETURN\n         MVI   BUF+1,C' '\n         MVC   BUF+2(131),BUF+1\n         SPACE 1\nPRETURN  LM    R2,R5,PRSAVE+4\n         L     R14,PRSAVE\n         BR    R14\n         SPACE 4\nPRLKAHED AH    R2,CURLINES\n         CH    R2,MAXLINES\n         BNHR  R14\n         MVC   CURLINES,=H'999'\n         BR    R14\n         EJECT\n         SPACE 1\nRETURN   CLOSE (PRINTDCB)\n         SPACE 1\n         TM    DCBBUFCB+3+(PRINTDCB-IHADCB),X'01'\n         BO    RETQUIT\n         FREEPOOL PRINTDCB\n         SPACE 1\nRETQUIT  CLI   HDNGLIST,X'FF'\n         BNE   RETSAVER\n         L     R1,HDNGLIST\n         LH    R2,0(R1)\n         LH    R0,CURPAGES\n         AH    R0,=H'1'\n         BAL   R14,CONVERT\n         LA    R3,CONVEDIT+12\n         SR    R3,R2\n         BCTR  R2,0\n         STC   R2,*+5\n         MVC   2(*-*,R1),0(R3)\n         SPACE 1\nRETSAVER DS    0H\n         L     R13,SAVEAREA+4\n         L     R15,RETCODE\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         MVI   12(R13),X'FF'\n         SPM   R14\n         BR    R14\n         SPACE 3\nABDUMP   OI    ABCODE,X'80'        SET DUMP FLAG\n         SPACE 1\nABEND    L     R1,ABCODE           PICK UP ABEND CODE\n         ABEND (1)\n         EJECT ,\nNEWPAGE  DC    AL1(EJECTIM)\nHEADERCC DC    AL1(SPACE3AP)\nVOLSERNO DS    CL6                 CURRENT VOLUME SERIAL\n         ORG   VOLSERNO\nHEADER DS 0CL95\n       DC C'DIRECT-ACCESS VOLUME LISTING UTILITY....            '\n       DC C'   PAS. VERSION--'\n       DC C'&SYSDATE'   8 CHARS\n       DC CL31' '\nHEADMID  EQU   HEADER+19\nPRDATE   DC    CL8'03/15/84'\n         DC    CL6'  DAY='\nPRDAY    DC    CL3'999'\nPRTIME   DC    CL7'  23:59',CL4' '\n         DC    CL5'PAGE '\nPAGENO   DC    CL4'9999'\n         SPACE 3\nHEAD1    DC    C'TABLE OF CONTENTS FOR VOLUME \"'\nHEAD1VOL DC    CL6'XXXXXX',C'\" ON DEVICE \"'\nHEAD1UCB DC    CL3'XXX',C'\" MOUNTED AS \"'\nHEAD1MT  DC    CL8'XXXXXXXX',C'/'\nHEAD1MTR DC    CL5'XXXXX',C'\"'\nHEAD1A   DC    A(HEAD1B)\n         DC    H'0'\nHEADER1  DC    AL1(SPACE0AP),CL19' ',CL26'DSNAME'\nHEADAT1A DC    C'SERIAL R/W  REFDT    CREDT    EXPDT   DSO RFM BLKSZ LRX\n               ECL KEY OP TRKAL TRKUS EX SECQU T'\nHEAD1B   DC    A(0)\n         DC    H'2'\nHEADER2  DC    AL1(SPACE2AP),44C'_',C' '\nHEADAT1B DC    C'______ ___ ________ ________ ________ ___ ___ _____ __X\n               ___ ___ __ _____ _____ __ _____ _'\n         SPACE 2\nHEAD2    DC    C'TRACK ALLOCATION MAP FOR VOLUME \"'\nHEAD2VOL DC    C'XXXXXX',C'\"'\nHEAD2A   DC    A(HEAD2B)\n         DC    H'0'\n         DC    AL1(SPACE0AP),CL22' '\n********************************** START *********** GDL-94\nHEAD2DAT DC    C'FIRST TRK   LAST TRK   FIRST    LAST   #TRKS  EX# '\n         DC    C'TYPE  '\n**********************************  END  *********** GDL-94\n         DC    CL44'DSNAME OR USAGE'\n         DC    CL13' '\nHEAD2B   DC    A(0)\n         DC    H'2'\n         DC    AL1(SPACE2AP),CL22' '\n********************************** START *********** GDL-94\nHEAD2UND DC    C'_________  _________  ______  ______  ______  ___ '\n         DC    C'____  '\n**********************************  END  *********** GDL-94\n         DC    44C'_'\n         DC    CL13' '\nPDSMSG   DC    CL19'DIRECTORY CONTAINS'\nPDSVAL1  DC    CL4'0000'\n         DC    CL18' MEMBERS AND USES '\nPDSVAL2  DC    CL4'0000'\n         DC    CL8' OF THE '\nPDSVAL3  DC    CL4'0000'\n         DC    CL39' DIRECTORY BLOCKS ALLOCATED, INCLUDING '\nPDSVAL4  DC    CL3'000'\n         DC    CL24' BYTES OF THE LAST BLOCK'\nPDSMSGLN EQU   *-PDSMSG\n         EJECT\nVTOCDCB  DCB   DDNAME=VOLUME01,                                        X\n               DSORG=PS,                                               X\n               MACRF=(R),                                              X\n               RECFM=FS,                                               X\n               KEYLEN=44,                                              X\n               BLKSIZE=96,                                             X\n               OPTCD=C,                                                X\n               NCP=NCPDFLT,                                            X\n               EXLST=JFCBAD,                                           X\n               EODAD=VTOCEOD,                                          X\n               SYNAD=SYNADXIT\n         SPACE 8\nPDSDCB   DCB   DDNAME=VOLUME01,                                        X\n               DSORG=PS,                                               X\n               MACRF=(R),                                              X\n               RECFM=F,                                                X\n               KEYLEN=8,                                               X\n               BLKSIZE=256,                                            X\n               EXLST=JFCBAD,                                           X\n               EODAD=PDSEOD,                                           X\n               SYNAD=SYNADXIT\n         SPACE 8\nPRINTDCB DCB   DDNAME=SYSPRINT,                                        X\n               DSORG=PS,                                               X\n               EROPT=ACC,                                              X\n               MACRF=(PM),                                             X\n               RECFM=FBM,                                              X\n               LRECL=133,                                              X\n               BLKSIZE=133\n         EJECT\nOPENLIST OPEN  (VTOCDCB,(INPUT)),MF=L\nOPENFLAG EQU   OPENLIST\nOPENUPDT EQU   X'04'\n         SPACE 2\nCLOSLIST CLOSE (VTOCDCB),MF=L\nCLOSFLAG EQU   CLOSLIST\nCLOSRERD EQU   X'10'\n         SPACE 2\n         READ  VTOCDECB,SF,VTOCDCB,CAMLIST,MF=L\n         SPACE 2\n         READ  PDSDECB,SF,PDSDCB,MF=L\n         SPACE 2\nENQVTOC  RESERVE (SYSVTOC,VOLSERNO,S,6,SYSTEMS),UCB=UCBADDR,MF=L\nENQFLAGS EQU   ENQVTOC+2\nENQSHAR  EQU   X'80'\n         SPACE 1\nSYSVTOC  DC    CL8'SYSVTOC'\n         EJECT\nDATEWORD DC    D'0'\nCONVDEC  DC    D'0'\nCONVEDIT DC    CL12' '\nCONVERTD DC    CL11' ',C' '\nCONVUNPK DC    CL12' '\nNOMAPDDS DC    C'JOBLIB  '\n         DC    C'STEPCAT '                P.A.S.\n         DC    C'JOBCAT  '                P.A.S.\n         DC    C'STEPLIB '\n         DC    C'SYSCHK  '\n         DC    C'PGM=*.DD'\n         DC    C'SYSIN   '\n         DC    C'SYSPRINT'\n         DC    C'SYSABEND'\n         DC    C'SYSUDUMP'\n         DC    C'SYSMDUMP'\n         DC    C'        '\nVOLDDNAM DC    C'VOLUME00'\n         ORG   *-2\nCURVOLNM DC    C'00'\nTIME     DC    F'0'\nPARMLIST DC    A(0)\nDDNMLIST DC    A(0)\nHDNGLIST DC    A(0)\nDDLSTPTR DC    A(0)\n         SPACE 1\nEXTRACT  EQU   *\nTIOTAD   DC    A(0)\nCOMPTR   DC    A(0)\n         SPACE 1\nTIOTADDD DC    A(0)\nPDSBLKAD DC    A(PDSBLOCK,PDSBLOCK+PDSBLKLN)\nCCHH     DC    F'0'\nBUFPTR   DC    A(0)\nHOOKSTRT DC    A(*)\nHOOKEND  DC    F'-1'\nDATNORMY DC    H'365',AL1(31,28,31,30,31,30,31,31,30,31,30,31)\nDATLEAPY DC    H'366',AL1(31,29,31,30,31,30,31,31,30,31,30,31)\nCORLEFT  DC    F'0'\nCORNEXT@ DC    A(0)\nCURBLK@  DC    A(*+4)\nCORFRST@ DC    A(0)\nCURLINES DC    H'999'\nMAXPAGES DC    H'9999'\nMAXLINES DC    H'60'               DEFAULT LINES PER PAGE\nCURPAGES DC    H'0'\nJFCBAD   DC    X'87',AL3(JFCB)\nRETCODE  DC    F'0'\nABCODE   DC    F'100'              ABEND CODE 100\nSAVEAREA DC    18F'0'\nCURVOL   DC    H'0'\nDDNAMLEN DC    H'0'\nNUMVOLS  DC    H'-1'\nNCPPARM  DC    AL2(NCPDFLT)\nTRAREA   DC    CL15' ',C' '\nEFFS     DC    44X'FF'\nLASTDS1  EQU   EFFS\nZEROES   DC    44X'00'\nPARMOPT1 DC    AL1(08)    SET DEFAULT TO NO OPTIONS\nPARMOPT2 DC    AL1(0)\nTRTABLE  EQU   *-240\n         DC    C'0123456789ABCDEF'\nSTARS    DC    C'*********'\nVOLSTAT  DC    X'00'\nNUMENT   DC    A(DT2MEN)\n         DC    0F'0'\nHOOKINIT DC    2XL4'00'      MUST MATCH EXTENT DSECT     GDL-94\n         DC    F'1'\n         DC    X'FF00'\n         DC    H'0'\n         DC    A(VOLABMSG)\n         DC    F'0'\n         DC    F'0'\n         EJECT\n         SPACE 3\nDEVTABLE DC    X'06',CL15'2305-1 DISK'\n*\n         DC    X'07',CL15'2305-2 DISK'\n*\n         DC    X'0F',CL15'3390 DISK PACK'    ADDED 9/6/91 GDL.\n*\n         DC    X'09',CL15'3330 DISK PACK'\n*\n         DC    X'0D',CL15'3330-II DISK'     ADDED 4/1/75  P.A.S.\n*\n         DC    X'0A',CL15'3340-35M DISK'   ADDED 5/4/75  P.A.S.\n*\n         DC    X'0B',CL15'3350 DISK PACK'  ADDED 01/10/77 G.D.F.\n*\n         DC    X'0E',CL15'3380 DISK PACK'  ADDED 03/23/82 D.A.K.\n*\nDEVTABND DC    X'00',CL7'UNKNOWN'\n         SPACE 1\nDEVENTLN EQU   16\n         EJECT\n         LTORG\n         SPACE 1\nVOLABMSG DC    CL44'  **** VOLUME LABEL ****'\nVTOCMSG  DC    CL44'  **** VOLUME TABLE OF CONTENTS ****'\n*FMT6MSG DC    CL44'SPLIT CYLINDER(S) ...'  NO LONGER VALID    GDL-94\n         EJECT\n*        CONSTANTS ADDED FOR INDEXED VTOCS     12/81\n         SPACE 1\nCVPL     CVAFDSM ACCESS=MAPDATA,                                       X\n               COUNT=NO,               DO NOT COUNT EXTENTS            X\n               MAP=VOLUME,             ACCESS VOLUME SPACE MAP         X\n               RTA4BYTE=YES,           RETURN IN RTA FORMAT   GDL-94   X\n               EXTENTS=DT2EDT02,       EXTENT TABLE ADDRESS   GDL-94   X\n               MF=L,                   LIST FORM OF MACRO              X\n               BRANCH=NO\n        SPACE  3\n        ORG  CVPL\nCVPLMAP ICVAFPL DSECT=NO\n         EJECT\nCVPL2    CVAFDSM ACCESS=MAPDATA,MAP=VTOC,COUNT=YES,CTAREA=FMT0ADDR,    X\n               MF=L\n         EJECT\nSTORAGES DS    0D\n         SPACE 3\nBUF      DC    CL133' '            OUTPUT PRINT LINE\n         SPACE 2\n         ORG   BUF+1\nL1       DS    0CL132\nL1DSNAME DS    CL44\n         DS    C\nL1SERIAL DS    CL6\n         DS    C\nL1SECUR  DS    CL3\n         DS    C\nL1REFDT  DS    CL8\n         DS    C\nL1CREDT  DS    CL8\n         DS    C\nL1EXPDT  DS    CL8\n         DS    C\nL1DSORG  DS    CL3\n         DS    C\nL1RECFM  DS    CL3\n         DS    C\nL1BLKSIZ DS    CL5\n         DS    C\nL1LRECL  DS    CL5\n         DS    C\nL1KEYLEN DS    CL3\n         DS    C\nL1OPTCD  DS    CL2\n         DS    C\nL1TRKAL  DS    CL5\n         DS    C\nL1TRKUS  DS    CL5\n********************************** START *********** SMA 3/88  CHANGED\nL1NOEPV  DS    CL3\n**********************************  END  *********** SMA 3/88  CHANGED\n         DS    C\nL1SECQU  DS    CL5\n         DS    C\nL1TYP    DS    CL1\n         SPACE 1\n         ORG   L1SERIAL\nL1LSTDT  DS    CL8\n         DS    C\nL1USCNT  DS    CL5\n         ORG   ,\n         EJECT\nPRSAVE   DS    5A\nDASAVE   DS    5A\n         DS    0D\nPDSBLOCK DS    2XL(PDSBLKLN)\nCAMLIST  DS    XL(CAMLSTLN)\n         SPACE 1\nSTART0   DS    0H                  START OF CORE ZEROED FOR EACH VOL\n         SPACE 1\nDEVTYPE  DS    6F\nUCBADDR  DS    A\nFIRSTDS1 DS    A\nFMT4AD   DS    A\nFMT5AD   DS    A\n*FMT6AD   DS    A                                    GDL-94\nFMT0ADDR DS    A                     DAK 3/82\n*FMT5TT   DS    H                                    GDL-94\n*FMT5CYLS DS    H                                    GDL-94\n         SPACE 1\nREBLOCK@ DS    F\nRENEXT@  DS    F\nREBLKSIZ DS    F\nRECOUNT  DS    F\nRENCP    DS    F\nREGETSIZ DS    F\n         SPACE 1\nFMXCOUNT DS    0H                  COUNT FIELDS MUST BE TOGETHER\n*                    INDEXED ACCESS KEEP ALL COUNTS IN ORDER  GDL-94\nFM0COUNT DS    H                NOT USED       GDL-94\nFM1COUNT DS    H\nFM2COUNT DS    H                NOT USED       GDL-94\nFM3COUNT DS    H                NOT USED       GDL-94\nFM4COUNT DS    H\nFM5COUNT DS    H                NOT USED       GDL-94\nFM6COUNT DS    H                NOT USED       GDL-94\n         SPACE 1\nAVAILCYL DS    H\nAVAILSPC DS    F                                    GDL-94\nAVAILEXT DS    H\nVTOCSIZE DS    H\nLOWTT    DS    F                                     GDL-94\nHIGHTT   DS    F                                     GDL-94\n         SPACE 1\nHOOKPTR  DS    F     THIS AREA MAPED BY EXTENT DSECT GDL-94\nHOOKLCCH DS    XL4         BEGINING CCHH OF EXTENT   GDL-94\nHOOKHCCH DS    XL4         ENDING CCHH OF EXTENT     GDL-94\nHOOKNTRK DS    F           NUMBER OF TRACKS IN EXT   GDL-94\nHOOKTYPE DS    X           TYPE RECORD               GDL-94\nHOOKSEQN DS    X     EXTENT SEQ NUMBER WITHIN FILE   GDL-94\n         DS    H        FOR ALIGNMENT NOT USED       GDL-94\nHOOKIDPT DS    A           ADDRESS OF DESCRIPTION    GDL-94\nHOOKLOTT DS    F           BEGINING TRACK OF EXTENT  GDL-94\nHOOKHITT DS    F           ENDING TRACK OF EXTENT    GDL-94\n         SPACE 1\nF1TRKAL  DS    F\nDEVTABPT DS    A                   POINTER TO CURRENT DEVTABLE ENTRY\nDEVCONV1 DS    H              NUM TRKS PER 256 CYL   GDL-94\nDEVCONV2 DS    H              NUM TRKS PER CYL       GDL-94\nDEVCONV3 DS    H              H'0'                   GDL-94\nDEVCONV4 DS    H              H'1'                   GDL-94\nTRKSPVOL DS    F              NUMBER OF TRKS PER VOL GDL-94\nTRKSPCYL DS    H              NUMBER TRKS PER CYL    GDL-94\nCRATRACK DS    H              REL TRACK ADDRESS OF VSAM CRA\nHWMOLD   DS    XL5\nHWMDS1   DS    XL5\nHWMNEW   DS    XL5\nHWMINDIC DS    X\nF5LARGST DS    H              LARGEST EXTENT IN CYL  GDL-94\nSYNADFLG DS    X\nOBCCHHR  DS    XL5\nBADDSTYP DS    C\nF5LARGTT DS    F            LARGEST FREE EXTENT IN TRACKS   GDL-94\n         SPACE 1\n         DS    0H\nVTOCTTR  DS    0XL3\nVTOCTT   DS    H\nVTOCR    DS    X\nVTOCMBB  DS    0XL3\nVTOCM    DS    X\nVTOCBIN  DS    H\nVTOCCCHH DS    XL4\nVTDSCBTR DS    H\n         SPACE 1\nEND0     DS    0H                  END OF CORE ZEROED FOR EACH VOL\nLENGTH0  EQU   END0-START0         AMOUNT TO BE ZEROED\n         SPACE 1\nNUMEXT   DS    H\n********************************** START *********** SMA 3/88\nWRKEXT   DS    H                   NUMBER OF EXTENTS LEFT      ADDED\nLSTEXT   DC    H'16'               LAST NUMBER OF EXTENTS      ADDED\nLISTEXT  DS    128A                EXTENT TABLE                CHANGED\n         DC    A(0)                END OF EXTENT TABLE         ADDED\n**********************************  END  *********** SMA 3/88\nPDSAVE   DS    6A\nPDSENTAD DS    A\nPDSBYTCT DS    H\nPDSBLKAL DS    H\nPDSBLKUS DS    H\nPDSMEMCT DS    H\nISAVE    DS    5A\nEXPFLAG  DS    X\nEXSAVE   DS    3A\nVTSAVE   DS    4A\nF1SAVE   DS    A\nF5SAVE   DS    6A\nHOSAVE   DS    4A\nDUSAVE   DS    A\n********************************** START *********** SMA 3/88  ADDED\nR3EXT    DS    A                   EXTENT TABLE POINTER SAVE AREA\nR3EXTHLD DS    A                   REGISTER 3 SAVE AREA\n**********************************  END  *********** SMA 3/88  ADDED\nINDXSAVE DS    A                                DAK 03/82\n         EJECT ,\n         IEFJFCBN\n         SPACE 1\nJFCB     EQU   INFMJFCB\n         SPACE 3\n         ORG   STORAGES\n         EJECT\n         SPACE 1\nINIT     DS    0H\n         L     R2,0(R1)\n         ST    R2,PARMLIST\n         LTR   R2,R2\n         BM    GETTIME\n         L     R2,4(R1)\n         ST    R2,DDNMLIST\n         LTR   R2,R2\n         BM    CHEKDDNM\n         L     R2,8(R1)\n         ST    R2,HDNGLIST\n         SPACE 1\n         LA    R2,0(R2)\n         LTR   R2,R2\n         BZ    CHEKDDNM\n         LH    R3,0(R2)\n         LA    R2,2(R2)\n         BAL   R14,PARMPARS\n         LTR   R0,R0\n         BNP   CHEKDDNM\n         CH    R0,=H'9999'\n         BH    CHEKDDNM\n         BCTR  R0,0\n         STH   R0,CURPAGES\n         MVI   HDNGLIST,X'FF'\n         SPACE 1\nCHEKDDNM TM    PARMLIST,X'80'\n         BO    GETTIME\n         L     R1,DDNMLIST\n         LH    R0,0(R1)\n         SH    R0,=H'8'\n         BM    GETTIME\n         OI    DDNMLIST,X'F0'\n         STH   R0,DDNAMLEN\n         MVC   DCBDDNAM+(PRINTDCB-IHADCB),2(R1)\n         SH    R0,=H'8'\n         BM    GETTIME\n         LA    R1,10(R1)\n         ST    R1,DDLSTPTR\n         OI    DDNMLIST,X'0F'\n         SPACE 1\nGETTIME  TIME  DEC\n         SRL   R0,4\n         ST    R0,TIME\n         MVC   PRTIME,=X'402120207A2020'\n         ED    PRTIME,TIME\n         ST    R1,DATEWORD+4\n         UNPK  TRAREA,DATEWORD+6(8)\n         TR    TRAREA,TRTABLE\n         MVC   PRDAY,TRAREA\n         SR    R2,R2\n         LA    R3,PRDATE\n         BAL   R14,DATEDIT\n         SPACE 1\n         OPEN  (PRINTDCB,(OUTPUT))\n         TM    DCBOFLGS+(PRINTDCB-IHADCB),DCBOFOPN\n         BNZ   *+8\n         BAL   R14,ABEND\n         MVI   BUF,C' '\n         MVC   BUF+1(L'BUF-1),BUF\n         SPACE 1\n         EXTRACT EXTRACT,FIELDS=(TIOT,COMM)\n         L     R1,TIOTAD\n         LA    R1,TIOENTRY-TIOT(,R1)\n         ST    R1,TIOTADDD\n         SPACE 1\n         MVC   BUF+10(21),=C'EXEC PARAMETER FIELD:'\n         L     R1,COMPTR\n         L     R1,COMCIBPT-COM(,R1)\nTESTCIB  LA    R1,0(,R1)\n         LTR   R1,R1\n         B     PARMEX                AXC   NEVER CHECK CIB\n         BZ    PARMEX                AXC   NEVER CHECK CIB\n         USING CIB,R1\n         CLI   CIBVERB,CIBSTART\n         BE    PARMCIB\n         L     R1,CIBNEXT\n         B     TESTCIB\n         SPACE 1\nPARMCIB  LA    R1,CIBDATLN\n         ST    R1,PARMLIST\n         DROP  R1\n         MVC   BUF+9(5),=C'START'\n         SPACE 1\nPARMEX   L     R2,PARMLIST\n         LH    R3,0(R2)\n         LA    R2,2(R2)\n         CH    R3,=H'99'\n         BL    PARMLNOK\n         MVC   BUF+30(28),=C' IS TOO LONG AND WAS IGNORED'\n         SR    R3,R3\n         B     PARMPRNT\n         SPACE 1\nPARMLNOK LTR   R1,R3\n         BZ    PARMPRNT\n         BCTR  R1,0\n         STC   R1,*+5\n         MVC   BUF+33(*-*),0(R2)\nPARMPRNT MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 1\nPARMLOOP BAL   R14,PARMPARS\n         TM    PARMOPT2,VOLSOPT\n         BO    PARMVOL2\n         TM    PARMOPT2,LNCNTOPT\n         BO    PARMLCT2\n         TM    PARMOPT2,NCPOPT\n         BO    PARMNCP2\n         CLI   PARMBUF,C' '\n         BE    PARMDONE\n         SPACE 1\n         LA    R0,12\n         LA    R1,PARMS\nPARMCOMP CLC   PARMBUF,0(R1)\n         BE    GOTPARM\n         BXH   R1,R0,PARMCOMP\n         SPACE 1\nGOTPARM  MVC   PARMVALS,8(R1)\n         MVC   *+8(2),10(R1)\n         B     *-*\n         SPACE 1\nPARMSET  SR    R15,R15\n         IC    R15,PARMVALS+1\n         LA    R15,PARMOPT1(R15)\n         SR    R0,R0\n         IC    R0,PARMVALS\n         CLI   PARMVALS,128\n         BH    PARMOFF\n         STC   R0,*+5\n         OI    0(R15),*-*\n         B     PARMLOOP\n         SPACE 1\nPARMOFF  STC   R0,*+5\n         NI    0(R15),*-*\n         B     PARMLOOP\n         SPACE 1\nDEBUGON  OI    CLOSLIST,CLOSRERD\n         B     PARMSET\n         SPACE 1\nDEBUGOFF NI    CLOSLIST,255-CLOSRERD\n         B     PARMSET\n         SPACE 1\nPDSON    L     R15,TIOTAD\n*        CLI   TIOCNJOB+3-TIOT(R15),C'$'    DELETED  4/1/75  P.A.S.\n*        BNE   PARMERR      DELETED  4/1/75   P.A.S.\n         B     PARMSET\n         SPACE 1\nRESETON  NI    ENQFLAGS,255-ENQSHAR\n         OI    CLOSLIST,CLOSRERD\n         B     PARMSET\n         SPACE 1\nRESETOFF OI    ENQFLAGS,ENQSHAR\n         NI    CLOSLIST,255-CLOSRERD\n         B     PARMSET\n         SPACE 1\nPARMVOL2 NI    PARMOPT2,255-VOLSOPT\n         LTR   R0,R0\n         BNP   PARMERR\n         CH    R0,=H'99'\n         BH    PARMERR\n         STH   R0,NUMVOLS\n         B     PARMLOOP\n         SPACE 1\nPARMLCT2 NI    PARMOPT2,255-LNCNTOPT\n         LTR   R0,R0\n         BNP   PARMERR\n         CH    R0,=H'999'\n         BNL   PARMERR\n         STH   R0,MAXLINES\n         B     PARMLOOP\n         SPACE 1\nPARMNCP2 NI    PARMOPT2,255-NCPOPT\n         LTR   R0,R0\n         BNP   PARMERR\n         CH    R0,=H'99'\n         BH    PARMERR\n         STH   R0,NCPPARM\n         B     PARMLOOP\n         SPACE 1\nPARMERR  MVI   BUF+10,C'\"'\n         MVC   BUF+11(8),PARMBUF\n         MVC   BUF+19(41),=C'\" IS AN ILLEGAL PARAMETER AND WAS IGNORED'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         B     PARMLOOP\n         SPACE 1\nPARMDONE OI    PARMOPT2,VOLSOPT\n         LH    R0,NUMVOLS\n         CH    R0,=H'-1'\n         BNE   PARMVOL#\n         NI    PARMOPT2,255-VOLSOPT\n         MVC   NUMVOLS,=H'99'\n         MVC   BUF+10(3),=C'ALL'\n         B     PARMVLPR\n         SPACE 1\nPARMVOL# BAL   R14,CONVERT\n         MVC   BUF+10(3),CONVEDIT+9\nPARMVLPR MVC   BUF+14(24),=C'VOLUME(S) WILL BE LISTED'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 1\n         CLC   NCPPARM,=H'1'\n         BNE   *+8\n         OI    PARMOPT2,NCPOPT\n         TM    PARMOPT1,LSTDTOPT\n         BZ    PARMDDCK\n         MVC   HEADAT1A(14),=C' LSTDT   USCNT'\n         MVC   HEADAT1B(14),=C'________ _____'\n         SPACE 1\nPARMDDCK TM    DDNMLIST,X'F0'\n         BNO   PARMHDCK\n         MVC   BUF+10(36),=C'AN INTERNAL DDNAME LIST WILL BE USED'\n         TM    DDNMLIST,X'0F'\n         BO    *+10\n         MVC   BUF+47(14),=C'FOR PRINT ONLY'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 1\nPARMHDCK CLI   HDNGLIST,X'FF'\n         BNE   PRTINFO      ADDED 4/1/75  P.A.S.  FOR 'HELP'\n         MVC   BUF+10(35),=C'AN INTERNAL PAGE COUNT WILL BE USED'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 3\nPRTINFO  EQU   *\n         LA    R3,PRTINFOL  POINT TO INFO LISTING\n         LA    R2,16    NUMBER OF LINES TO PRINT\nPRTINFOA MVC   BUF+9(47),0(R3)  MOVE LINE TO BUFFER\n         MVI   BUF,SPACE1AP   INSERT CARRIAGE CONTROL\n         LA    R3,47(R3)  INCREMENT TO NEXT LINE\n*        BAL   R14,PRINT\n         BCT   R2,PRTINFOA GO AGAIN\n         MVI   BUF,SPACE3IM\n*        BAL   R14,PRINT\n         MVC   BUF+9(33),=C'*** OPERATING SYSTEM RUN ON .... '\n         MVI   BUF,SPACE3AP\n         L     R3,16  POINT TO CVT\n         LA    R3,116(R3)   POINT TO OPERATING SYS\n         TM    0(R3),X'40'  PCP\n         BNO   *+10\n         MVC   BUF+42(4),=C'PCP '\n         TM    0(R3),X'20'  MFT\n         BNO   *+10\n         MVC   BUF+42(4),=C'MFT '\n         TM    0(R3),X'10'  MVT\n         BNO   *+10\n         MVC   BUF+42(4),=C'MP65'\n         TM    0(R3),X'22'  VS1\n         BNO   *+10\n         MVC   BUF+42(4),=C'VS1 '\n         TM    0(R3),X'12'  VS2 REL 1 (SVS)\n         BNO   *+10\n         MVC   BUF+42(4),=C'SVS '\n         TM    0(R3),X'11'  VS2 REL 2+  (MVS)\n         BNO   *+10\n         MVC   BUF+42(4),=C'MVS '\n*        BAL   R14,PRINT\n         B     NEXTVOL\nPRTINFOL DC    C'**********  EXECUTION  PARM  VALUES  **********'\n         DC    C'*  MAP.....PRODUCE A TRACK MAP OF VOLUME      *'\n         DC    C'*  PDS.....LIST ALL PDS DIRECTORIES ON VOLUME *'\n         DC    C'*  ISAM....LIST ISAM REORG INFO FOR DATASETS  *'\n         DC    C'*  EXT.....LIST THE EXTENTS OF THE DATASETS   *'\n         DC    C'*  DUMP....LIST (HEX) ALL DSCB''S ON VOLUME    *'\n         DC    C'*  EMPTY...LIST ONLY DATASETS THAT ARE EMPTY  *'\n         DC    C'*  MODEL...WILL ONLY LIST \"MODEL DSCB''S\"      *'\n         DC    C'*  SDUMP...LIST (HEX) FORMAT 4 AND 5 DSCB''S   *'\n         DC    C'*  VOLS....ONLY USE DDNAMES OF \"VOLUME--\",    *'\n         DC    C'*      FORMAT--\"VOLS=X\", WHERE \"X\" IS MAX #   *'\n         DC    C'*  JDATE...LIST CREATE/EXPIRE DATE IN JULIAN  *'\n         DC    C'*                                             *'\n         DC    C'** ALL DASD ALLOCATED TO STEP WILL BE LISTED  *'\n         DC    C'**  EXCEPT SYSTEM DD''S...SYS--, STEP--, ETC.  *'\n         DC    C'*****  DO NOT USE A DDNAME OF \"SYS000\"  *******'\n         EJECT\n         SPACE 3\nPARMPARS SR    R0,R0\n         MVC   PARMBUF,=CL8' '\n         LA    R4,PARMBUF\n         SPACE 1\nPRMLOOK  CH    R3,=H'0'\n         BNHR  R14\n         CLI   0(R2),C' '\n         BE    PRMIGNOR\n         CLI   0(R2),C','\n         BE    PRMRETRN\n         CLI   0(R2),C'='\n         BE    PRMRETRN\n         LTR   R0,R0\n         BM    PRMNOT#\n         TM    0(R2),X'F0'\n         BNO   PRMNOT#\n         IC    R15,0(R2)\n         N     R15,=F'15'\n         CH    R15,=H'10'\n         BNL   PRMNOT#\n         MH    R0,=H'10'\n         AR    R0,R15\n         B     PRMSHIFT\n         SPACE 1\nPRMNOT#  LH    R0,=H'-1'\nPRMSHIFT C     R4,=A(PARMBUF+L'PARMBUF)\n         BNL   PRMIGNOR\n         MVC   0(1,R4),0(R2)\n         LA    R4,1(R4)\nPRMIGNOR LA    R2,1(R2)\n         BCTR  R3,0\n         B     PRMLOOK\n         SPACE 1\nPRMRETRN LA    R2,1(R2)\n         BCTR  R3,0\n         BR    R14\n         EJECT ,\n         SPACE 3\nPARMS    DS    0H\n         DC    C'LINECNT ',AL1(LNCNTOPT),AL1(1),S(PARMSET)\n         DC    C'NCP     ',AL1(NCPOPT),AL1(1),S(PARMSET)\n         DC    C'MODEL   ',AL1(MODELOPT),AL1(1),S(PARMSET)\n         DC    C'VOLS    ',AL1(VOLSOPT),AL1(1),S(PARMSET)\n         DC    C'EMPTY   ',AL1(EMPTYOPT),AL1(0),S(PARMSET)\n         DC    C'NOEMPTY ',AL1(255-EMPTYOPT),AL1(0),S(PARMSET)\n         DC    C'DEBUG   ',AL1(DEBUGOPT),AL1(1),S(DEBUGON)\n         DC    C'NODEBUG ',AL1(255-DEBUGOPT),AL1(1),S(DEBUGOFF)\n         DC    C'DUMP    ',AL1(DUMPOPT),AL1(0),S(PARMSET)\n         DC    C'NODUMP  ',AL1(255-DUMPOPT),AL1(0),S(PARMSET)\n         DC    C'EXT     ',AL1(EXTNTOPT),AL1(0),S(PARMSET)\n         DC    C'NOEXT   ',AL1(255-EXTNTOPT),AL1(0),S(PARMSET)\n         DC    C'ISAM    ',AL1(ISAMOPT),AL1(1),S(PARMSET)\n         DC    C'NOISAM  ',AL1(255-ISAMOPT),AL1(1),S(PARMSET)\n         DC    C'JDATE   ',AL1(JDATEOPT),AL1(1),S(PARMSET)\n         DC    C'NOJDATE ',AL1(255-JDATEOPT),AL1(1),S(PARMSET)\n         DC    C'LSTDT   ',AL1(LSTDTOPT),AL1(0),S(PARMSET)\n         DC    C'NOLSTDT ',AL1(255-LSTDTOPT),AL1(0),S(PARMSET)\n         DC    C'MAP     ',AL1(MAPOPT),AL1(0),S(PARMSET)\n         DC    C'NOMAP   ',AL1(255-MAPOPT),AL1(0),S(PARMSET)\n         DC    C'PDS     ',AL1(PDSOPT),AL1(0),S(PDSON)\n         DC    C'NOPDS   ',AL1(255-PDSOPT),AL1(0),S(PARMSET)\n         DC    C'RESET   ',AL1(RESETOPT),AL1(1),S(RESETON)\n         DC    C'NORESET ',AL1(255-RESETOPT),AL1(1),S(RESETOFF)\n         DC    C'SDUMP   ',AL1(SDUMPOPT),AL1(0),S(PARMSET)\n         DC    C'NOSDUMP ',AL1(255-SDUMPOPT),AL1(0),S(PARMSET)\nPARMBUF  DC    C'        ',AL1(0),AL1(0),S(PARMERR)\n         SPACE 1\nPARMVALS DS    XL2\n         EJECT ,\n         LTORG\n         SPACE 1\n         ORG   ,\n         EJECT\nUCB      DSECT\n         IEFUCBOB\n         EJECT\nTIOT     DSECT\n         IEFTIOT1\n         EJECT\n         SPACE 3\n         DCBD  DSORG=BS,DEVD=DA\n         EJECT\n         SPACE 3\nDS1      DSECT\n         IECSDSL1 (1)\nDS1FDAD  DS    XL8                 FULL DA ADDRESS OF F1 DSCB\nDS1F3PTR DS    A                   @ OF F3 DSCB, IF ANY\nDS1F1PTR DS    A                   @ OF NEXT F1 DSCB\nDS1LEN   EQU   *-DS1\n         SPACE 1\n         ORG   DS1SYSCD-1\nDS1SECLV DS    XL1\n         ORG   DS1SYSCD+13\nDS1LSTDT DS    XL3\nDS1USCNT DS    XL2\n         EJECT ,\n         SPACE 3\nDS2      DSECT\n         IECSDSL1 (2)\nDS2FDAD  DS    XL8                 FULL DA ADDRESS OF F2 DSCB\nDS2F3PTR DS    A                   POINTER TO FMT3 DSCB, IF ANY\nDS2LEN   EQU   *-DS2\n         EJECT\n         SPACE 3\nDS3      DSECT\n         IECSDSL1 (3)\nDS3FDAD  DS    XL8                 FULL DA ADDRESS OF F3 DSCB\nDS3F2PTR DS    A                   POINTER TO FMT2 DSCB, IF ANY\nDS3LEN   EQU   *-DS3\n         EJECT\n         SPACE 3\nDS4      DSECT\nDS4KEYID DS    XL44\n         IECSDSL1 (4)\nDS4FDAD  DS    XL8\nDS4LEN   EQU   *-DS4\n*\n         ORG   DS4NOEXT+2\nDS4SECLV DS    XL1                 PRIV LEVEL REQ. FOR VTOC ACCESS\n         ORG   DS4DEVDB+9          VSAM OWNERSHIP BIT  X'80'\nDS4VSAM  DS    XL1                 USED TO PREVENT MULTIPLE OWNERS\n         EJECT\n         SPACE 3\nDS5      DSECT\n         IECSDSL1 (5)\n*DS5FDAD  DS    XL8                               GDL-94\n*DS5F5PTR DS    A                                 GDL-94\nDS5LEN   EQU   *-DS5\n         SPACE 3\n*DS6      DSECT             NO LONGER SUPPORTED   GDL-94\n*        IECSDSL1 (6)                             GDL-94\n*DS6FDAD  DS    XL8                               GDL-94\n*DS6F6PTR DS    A                                 GDL-94\n*DS6LEN   EQU   *-DS6                             GDL-94\n         EJECT\n         SPACE 3\nCOM      DSECT\n         IEZCOM\n         EJECT ,\n         SPACE 3\nCIB      DSECT\n         IEZCIB\n         EJECT\n         SPACE 1\nEXTENT   DSECT ,          MAPS HOOK AREA        GDL-94\nEXTPTR   DS    A\nEXTLCCHH DS    XL4\nEXTHCCHH DS    XL4\nEXTNOTRK DS    F                                GDL-94\nEXTTYPE  DS    X\nEXTSEQNO DS    X\n         DS    H         ADDED FOR ALIGNMENT    GDL-94\nEXTIDPTR DS    A\nEXTLOTT  DS    XL4                              GDL-94\nEXTHITT  DS    XL4                              GDL-94\nEXTNTLEN EQU   *-EXTENT\n         SPACE 1\nEXLINE   DSECT\nEXLLPARN DS    C\nEXLFCC   DS    CL4\nEXLFPRD  DS    C\nEXLFHH   DS    CL4\n         DS    2C\nEXLLCC   DS    CL4\nEXLLPRD  DS    C\nEXLLHH   DS    CL4\n         DS    2C\nEXLFTT   DS    CL6                                  GDL-94\n         DS    2C\nEXLLTT   DS    CL6                                  GDL-94\n         DS    2C\nEXLNOTRK DS    CL6                                  GDL-94\nEXLRPARN DS    C\n********************************** START *********** SMA 3/88  CHANGED\n         DS    C\nEXLSEQNO DS    CL3                 EXPANDED TO ALLOW FOR OVER 99 EXTS\n         DS    C\n********************************** END T *********** SMA 3/88  CHANGED\nEXLTYPE  DS    CL4\n         DS    2C\nEXLDSNAM DS    CL44\nEXLSPLIT EQU   EXLDSNAM+33\n         SPACE 1\nPDS      DSECT\nPDSHKEY  DS    CL8\nPDSCOUNT DS    H\n         SPACE 1\nPDSENTRY EQU   *\nPDSNAME  DS    CL8\nPDSTTRP  DS    XL3\nPDSINDIC DS    B\nPDSALIAS EQU   X'80'\nPDS#TTRS EQU   X'60'\nPDSUSERH EQU   X'1F'\nPDSUSERD DS    0X\n         SPACE 3\nDISKMAP  CSECT\n         SPACE 1\n*FM5ID    DC    XL4'0505050505'         FMT 5 FIELD    GDL-94\n         ICVEDT02 DSECT=NO,ENTRY=128                   GDL-94\n         END   DISKMAP            BROTHER, YOU ASKED FOR IT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISKMAPB": {"ttr": 3329, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x00 ?\\x01\\x00 ?\\x13P\\x0c\\xdb\\x0c\\xdb\\x00\\x00\\xf2\\xd5\\xc4\\xd7\\xd9\\xc5\\xe5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-07-21T00:00:00", "modifydate": "2000-07-21T13:50:00", "lines": 3291, "newlines": 3291, "modlines": 0, "user": "2NDPREV"}, "text": "//SS51A    JOB (150),WELLS,CLASS=Q,NOTIFY=SS51,COND=(0,NE),        $\n//          MSGCLASS=X,MSGLEVEL=(1,1)\n//JOBLIB    DD DSN=SSU.LINKLIB,DISP=SHR\n//ASM       EXEC ASMHCL,MAC='SYS1.MACLIB',MAC1='SYS1.MODGEN',\n//          PARM.C='NODECK,OBJECT,XREF(FULL),TEST',\n//          PARM.L=(XREF,LET,LIST,MAP,TEST,'AC=1')\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSPRINT DD SYSOUT=*\n//C.SYSIN DD *\n*******************************************************************\n*                                                                 *\n*  DISKMAP WAS MODIFIED SOMEWHERE ALONG THE WAY TO :              *\n*                                                                 *\n*    1. ALWAYS GIVE A TRACK MAP. PARMOPT1 WAS CHANGED FROM 00 TO  *\n*       08 WHICH SPECIFIES THE MAP OPTION                         *\n*                                                                 *\n*    2. MAXLINES WAS INCREASED FROM 58 TO 88 LINES PER PAGE       *\n*                                                                 *\n*    3. IF YOU WANT THE PARMS PRINTED OUT ON THE SYSPRINT LISTING *\n*       REMOVE THE * IS COLUMN 1 OF ALL THE BAL R14,PRINT         *\n*       STATEMENTS IN THE INIT SECTION                            *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT RACF.  IF THE RACF BIT IS ON   *\n*    FOR A DATASET THE WORD \"RAC\" WILL APPEAR IN THE \"R/W\" FIELD. *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT INDEXED VTOCS AND 3380 DEVICES *\n*    IN 3/82 BY DRU KOWNACKI.  TO CONTACT HER IN CASE OF PROBLEMS *\n*    GO THROUGH ARNOLD CASINGHINO OF CONN. BANK & TRUST (CBT) AT  *\n*    (203) 244-5495 WHO WILL THEN CONTACT DRU.                    *\n*                                                                 *\n********************** C B T **************************************\n*  A USER OF THIS CODE DECIDED TO USE A PARM OF RESET, WHICH WILL *\n*  RESET THE HIGH WATER MARK IN THE VTOC. IT DID ALRIGHT BUT IT   *\n*  SET IT TO 512 (ON A 3350) AND THE ARM BOUNCED ALL OVER THE     *\n*  PLACE. BE CAREFUL !!!!!!!!                                     *\n********************** C B T ***************************************\n*\n*******************************************************************\n* MAINTENANCE:                                                    *\n*                                                                 *\n* 11/03/87 - UPDATED CODE TO SUPPORT 3380 K'S          LMN-CBT    *\n*                                                                 *\n*******************************************************************\n* 05/??/88                                                        *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT OVER 16 EXTENTS FOR VSAM FILES *\n*    CHANGED OR ADDED CODE IS COMMENTED BY \"SMA 3/88\"             *\n*                                                                 *\n*  NOTE: WHEN THERE ARE OVER 99 EXTENTS THE 'EX' COLUMN ON THE    *\n*  VTOC LISTING WILL OCCUPY 3 POSITIONS THEREBY ELIMINATING THE   *\n*  SINGLE SPACE BETWEEN THE 'TRKAL' COLUMN AND THE 'EX' COLUMN.   *\n*  VISUALLY, THIS MAY NOT BE DESIRABLE, BUT FOR THE NUMBER OF     *\n*  TIMES THAT THIS MAY OCCUR, IT DIDN'T SEEM WORTH REFORMATTING   *\n*  THE REPORT, ESPECIALLY IF THE REPORT IS USED AS INPUT TO OTHER *\n*  DASD MANAGEMENT PROGRAMS.                                      *\n*                                                                 *\n*******************************************************************\n* 09/06/91                                                        *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT 3390            GDL            *\n*******************************************************************\n* 09/20/94                                    GDL-94              *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SUPPORT 3390 MOD 9'S.                  *\n*  FIELD SIZES INCREACED AND PROCESSING OF FORMAT 5 RECORDS       *\n*  REPLACED WITH CVAFDSM USING RTA4BYTE=YES. THIS REQUIRES        *\n*  RUNNING ON A SYSTEM THAT SUPPORTS INDEX VTOCS. FORMAT 6        *\n*  RECORDS DROPPED AS NO LONGER SUPPORTED.                        *\n*  ALL CHANGED LINES OUTSIDE THIS BOX MARKED      GDL-94          *\n*******************************************************************\n* 07/17/2000                                                      *\n*                                                                 *\n*  DISKMAP WAS MODIFIED TO SKIP FMT 7 DSCB        GDL-2000        *\n*******************************************************************\n*\n*DESCRIPTION        -         DISKMAP FOR ALL DASD DEVICES.\n*\n*\n*\n*CONTACT            -         GARY D. FROEMEL\n*                             JOHNS-MANVILLE\n*                             KEN-CARYL RANCH\n*                             P.O. BOX 5108\n*                             DENVER,COLO.  80217\n*TELEPHONE          -         303-979-1000\n*FUNCTION -DIRECT ACCESS VOLUME LISTING UTILITY.\n*          IT WILL PRODUCE A LISTING OF EVERY DATASET ON A VOLUME\n*          PLUS CALCULATE THE FREE SPACE, FREE DSCBS ETC. OPTIONALLY\n*          VIA PARM INFORMATION IT WILL PRODUCE THE FOLLOWING:\n*         PARM='MAP - PRODUCE A TRACK MAP OF VOLUME.\n*         PARM='PDS - LIST ALL PDS DIRECTORIES ON VOLUME.\n*         PARM='ISAM - LIST ISAM REORG ONFORMATION FOR DATASETS.\n*         PARM='EXT- LIST THE EXTENTS OF THE DATASETS.\n*         PARM='DUMP - LIST IN HEX ALL DSCBS ON VOLUME.\n*         PARM='EMPTY - LIST ONLY DATASETS THAT ARE EMPTY.\n*         PARM='MODEL - WILL ONLY LIST MODEL DSCBS.\n*         PARM='SDUMP - LIST IN HEX FORMAT 4 AND 5 DSCBS.\n*         PARM='VOLS - ONLY USE DDNAMES OF VOLUMEXX    .\n*         PARM='JDATE - LIST CREATION/EXPIRATION DATES IN JULIAN.\n******     OTHER COMMENT ARE DOCUMENTED IN BEGINING OF SOURCE.\n******     NOTE - SYS1.AMODGEN MUST BE CONCATENATED TO MACLIB FOR ASMB\n*\nDISKMAP  TITLE '... MACROS NOT FOUND IN SYS1.AMODGEN....'\n         MACRO\n         IEZCOM\nCOMECBPT DS    F    ADDRESS OF THE ECB FOR STARTED TASK\nCOMCIBPT DS    F    ADDRESS OF THE START OF THE CIB CHAIN FOR THIS TASK\n         MEND\n         SPACE 3\n         MACRO\n         IEZCIB\n         DS    0D\nCIBNEXT  DS    A    NEXT CIB\nCIBVERB  DS    C\n*\nCIBSTART EQU   X'04'\nCIBMODFY EQU   X'44'\nCIBSTOP  EQU   X'40'\nCIBMOUNT EQU   X'0C'\n*\nCIBLEN   DS    FL1\n         DS    XL4  RESERVED\nCIBASID  DS    0H  ADDRESS SPACE ID..VS2\nCIBTJID  DS    CL2  TSO JID\nCIBCONID DS    C  CONSOLE ID ISSUING COMM\n         DS    X  RESERVED\nCIBDATLN DS    H\nCIBDATA  DS    CL8\n         MEND\n         TITLE  '... DIRECT ACCESS VOLUME LISTER ...'\nDISKMAP  CSECT\n         SPACE 1\n*\n* WHEN ASSEMBLING DISKMAP SYS1.AMODGEN MUST BE CONCATENATED TO\n* SYS1.MACLIB.\n*\n* WHEN LINKEDITING DISKMAP IT MUST BE AUTHORIZED (SETCODE AC=1) AND BE\n* PLACED IN AN AUTHORIZED LIBRARY.  I.E. LNKLST00 LIBRARY\n* USE FOLLOWING JCL TO EXECUTE DISKMAP\n* //STEP EXEC PGM=DISKMAP,REGION=1024K (1024K FOR LARGE VTOCS)\n* //SYSPRINT DD SYSOUT=A\n* //ANYNAME DD UNIT=WHATEVER,VOL=SER=WHATEVER,DISP=OLD (DISKMAP WILL\n* LIST ANY DDCARD IN STEP EXCEPT FOR RESERVED DDNAMES SUCH AS STEPLIB,\n* STEPCAT ETC. AS MANY DDCARDS CAN BE INCLUDED AS NEEDED\n*\n* REFER TO THE SYSPRINT OUTPUT LISTINGS FOR PARM INFORMATION.\n* PARM INFORMATION DOESNOT HAVE TO BE SPECIFIED.\n*\n* DISKMAP WILL WORK ON MVS,SVS,VS1,MVT,MFT,PCP OPERATING SYSTEMS\n* IT ALSO SUPPORTS 3350S AS OF 01/77\n*\nR0       EQU   0                   WORK\nR1       EQU   1                   WORK\nR2       EQU   2                   WORK\nR3       EQU   3                   WORK\nR4       EQU   4                   WORK\nR5       EQU   5                   WORK\nR6       EQU   6                   -> FM1, FM4 DSCB, PDS ENTRY\nR7       EQU   7                   -> FM2 DSCB, IF ANY\nR8       EQU   8                   -> FM3, FM5 DSCB, IF ANY\nR9       EQU   9                   BASE REG 1\nR10      EQU   10                  BASE REG 2\nR11      EQU   11                  BASE REG 3\nR12      EQU   12                  BASE REG 4\nR13      EQU   13                  -> SAVE AREA\nR14      EQU   14                  LINK, WORK\nR15      EQU   15                  WORK\n         SPACE 1\nSPACE0AP EQU   X'01'\nSPACE1AP EQU   X'09'\nSPACE2AP EQU   X'11'\nSPACE3AP EQU   X'19'\nEJECTAP  EQU   X'89'\nSPACE0IM EQU   X'03'\nSPACE1IM EQU   X'0B'\nSPACE2IM EQU   X'13'\nSPACE3IM EQU   X'1B'\nEJECTIM  EQU   X'8B'\n         SPACE 1\nDEBUCBAD EQU   32\nCAMLSTLN EQU   148\nPDSBLKLN EQU   264\nNCPDFLT  EQU   10\nUTILPRIV EQU   5\nOPERPRIV EQU   9\n*FMT5EXT EQU   26                                     GDL-94\n         SPACE 1\nEMPTYOPT EQU   X'80'\nLSTDTOPT EQU   X'40'\nDUMPOPT  EQU   X'20'\nSDUMPOPT EQU   X'10'\nMAPOPT   EQU   X'08'\nPDSOPT   EQU   X'04'\nEXTNTOPT EQU   X'02'\nDIRFLAG  EQU   X'01'\n         SPACE 1\nVOLSOPT  EQU   X'80'\nLNCNTOPT EQU   X'40'\nDEBUGOPT EQU   X'20'\nRESETOPT EQU   X'10'\nNCPOPT   EQU   X'08'\nISAMOPT  EQU   X'04'\nJDATEOPT EQU   X'02'\nMODELOPT EQU   X'01'\n         EJECT\n         SPACE 5\n         SAVE  (14,12),,*\n         LR    R9,R15\n         USING DISKMAP,R9\n         LM    R10,R12,BASEVALS\n         USING DISKMAP,R9,R10,R11,R12\n         SPACE 1\n         LR    R2,R13\n         LA    R13,SAVEAREA\n         ST    R2,SAVEAREA+4\n         ST    R13,8(,R2)\n         SR    R2,R2\n         SPM   R2\n         B     INIT\n         SPACE 1\nBASEVALS DC    A(DISKMAP+X'1000',DISKMAP+X'2000',DISKMAP+X'3000')\n         EJECT ,\n         SPACE 3\nNEXTVOL  BAL   R14,FREECORE\n         XC    START0(LENGTH0),START0 WHOLESALE ZEROING OF CORE\n         SR    R0,R0\n         ST    R0,BUFPTR\n         MVC   CURLINES,=H'999'\n         MVI   HEADER,C' '\n         MVC   HEADER+1(L'HEADER-1),HEADER\n         LA    R1,LASTDS1\n         ST    R1,FIRSTDS1\n         LA    R1,HOOKSTRT\n         ST    R1,HOOKSTRT\n         MVC   HWMDS1,EFFS\n         NI    PARMOPT1,255-DIRFLAG\n         SPACE 1\nNEXTDD   TM    PARMOPT2,VOLSOPT\n         BO    NEXTDDCV\n         L     R1,DDLSTPTR\n         LTR   R1,R1\n         BZ    TIOTADV\n         LH    R0,DDNAMLEN\n         SH    R0,=H'8'\n         BM    RETURN\n         STH   R0,DDNAMLEN\n         MVC   VOLDDNAM,0(R1)\n         LA    R1,8(R1)\n         ST    R1,DDLSTPTR\n         B     NMAPSTRT\n         SPACE 1\nTIOTADV  L     R1,TIOTADDD\n         USING TIOENTRY,R1\n         SR    R0,R0\n         IC    R0,TIOELNGH\n         LTR   R0,R0\n         BZ    RETURN\n         MVC   VOLDDNAM,TIOEDDNM\n         AR    R1,R0\n         ST    R1,TIOTADDD\n         DROP  R1\n         SPACE 1\nNMAPSTRT LA    R0,8\n         LA    R1,NOMAPDDS\n         CLC   VOLDDNAM(4),=C'SYS0'     CHECK FOR DAIR DDNAME    P.A.S\n*        **** THIS IS CAUSED BY DAIR FOR THE CVOL CATALOG ***P.A.S.\n         BE    NEXTDD      IF FOUND, DO NOT MAP THIS VOL\nNMAPSRCH CLC   VOLDDNAM,0(R1)\n         BE    NOMAPFND\n         BXH   R1,R0,NMAPSRCH\n         SPACE 1\nNOMAPFND LA    R0,VOLDDNAM\n         CR    R0,R1\n         BNE   NEXTDD\n         B     TYPEDEV\n         SPACE 1\nNEXTDDCV LH    R0,CURVOL\n         CH    R0,NUMVOLS\n         BNL   RETURN\n         AH    R0,=H'1'\n         STH   R0,CURVOL\n         BAL   R14,CONVERT\n         MVC   CURVOLNM,CONVUNPK+10\n         SPACE 1\nTYPEDEV  DEVTYPE VOLDDNAM,DEVTYPE,DEVTAB,RPS\n         BXH   R15,R15,ERRNODD\n         CLI   DEVTYPE+2,UCB3DACC\n         BNE   ERRNOTDA\n         SPACE 1\n         MVC   DEVTABND,DEVTYPE+3\n         LA    R0,DEVENTLN\n         LA    R1,DEVTABLE\nDEVLOOP  CLC   DEVTABND(1),0(R1)\n         BE    DEVNTFND\n         BXH   R1,R0,DEVLOOP\n         SPACE 1\nDEVNTFND CLC   1(7,R1),DEVTABND+1\n         BE    ERRUNKDV\n         ST    R1,DEVTABPT\n         SPACE 1\n***** THIS SECTION WILL TELL THE DIFFERENCE BETWEEN THE 2 3340 MODELS.\n***** THE 3340 HAS 1 UCBTYPE FOR BOTH 35M/70M.\n***** THIS SECTION WILL LOOK FOR THE X'015D' NUMBER OF CYLS....35M\n*****   ELSE THE NUMBER OF CYLS (70M) WILL BE X'02BA'...\n         SPACE 1\n         CLI   DEVTYPE+3,X'0A'   TEST FOR A 3340-?\n         BNE   RVDISK    IF NOT 3340...BYPASS\n         CLC   DEVTYPE+8(2),=X'015D'    TEST FOR A 35M 3340 TYPE\n         BE    RVDISK   IF IT IS A 35MEG...NO NEED TO CHANGE DESC\n         MVC   6(2,R1),=C'70'   MOVE A \"70M\" ON DESC OF UNIT\n         SPACE 1\n*** THIS SECTION WILL DETERMINE IF THE DISK IS REAL, OR MASS STORAGE\n         SPACE 1\nRVDISK   TM    DEVTYPE+2,X'08'   TEST IF REAL/VIRT DASD\n         BZ    DEVCON   BIT=0, REAL     BIT=1, VIRTUAL\n         MVC   6(9,R1),=C'VIRT VOL.' MOVE \"VIRT\" DESC OF UNIT\n         SPACE 1\n******** THIS SECTION WILL LOAD THE CONSTANTS FROM THE \"DEVTYPE\" TO\n********   BE USED BY THE HOMEMADE CCHHR CONVERT ROUTINES.....\n*\nDEVCON   MVC   DEVCONV2(2),DEVTYPE+10    LOW ORDER  CC\n         MVC   DEVCONV1(1),DEVTYPE+11     HIGH ORDER CC\n         MVI   DEVCONV1+1,X'00'      FINISH HIGH ORDER CC\n         MVC   DEVCONV3(2),=X'0000'   ZERO HIGH ORDER HH\n         MVC   DEVCONV4(2),=X'0001'   LOW ORDER  HH\n         MVC   TRKSPCYL(2),DEVTYPE+10    TRKS/CYL\n         SR    R1,R1\n         LH    R1,DEVTYPE+8    LOAD  CYL PER VOLUME\n         MH    R1,DEVTYPE+10   MULT \"CYL/VOL\" BY \"TRKS/CYL\"\n         ST    R1,TRKSPVOL    RESULT IS  \"TRACKS/VOLUME\"     GDL-94\n*\n         MVC   DCBDDNAM+(PDSDCB-IHADCB),VOLDDNAM\n         MVC   DCBDDNAM+(VTOCDCB-IHADCB),VOLDDNAM\n         SPACE 1\n         RDJFCB MF=(E,OPENLIST)\n         TM    JFCBTSDM,X'20'\n         BO    ERRNOTDA\n         MVI   JFCBDSNM,X'04'\n         MVC   JFCBDSNM+1(43),JFCBDSNM\n         OI    JFCBTSDM,X'08'\n         SPACE 1\n         LH    R1,NCPPARM\n         SR    R0,R0\n         IC    R0,JFCNCP\n         MVI   JFCNCP,0\n         LTR   R0,R0\n         BZ    SAVENCP\n         LR    R1,R0\nSAVENCP  ST    R1,RENCP\n         OI    DCBOPTCD+(VTOCDCB-IHADCB),DCBOPTC\n         CH    R1,=H'1'\n         BNE   SETNCP\n         SR    R1,R1\n         NI    DCBOPTCD+(VTOCDCB-IHADCB),255-DCBOPTC\nSETNCP   STC   R1,DCBNCP+(VTOCDCB-IHADCB)\n         SPACE 1\n         OPEN  TYPE=J,MF=(E,OPENLIST)\n         TM    DCBOFLGS+(VTOCDCB-IHADCB),DCBOFOPN\n         BZ    ERRNOPEN\n         L     R2,DCBDEBAD+(VTOCDCB-IHADCB)\n         L     R2,DEBUCBAD(,R2)\n         SPACE 1\n********  THIS SECTION DELETED    4/1/75    P.A.S.\n********  IT WAS USED FOR DATA CELLS...NO LONGER SUPPORTED\n         SPACE 1\n         USING UCBOB,R2\nMAINUCB  MVC   VTOCTTR,UCBVTOC\n         MVC   VOLSERNO,UCBVOLI\n         MVC   VOLSTAT,UCBSTAT\n         MVC   HEAD1UCB,UCBNAME     MOVE EBCIDIC UCB ADDR FOR HEADN\n         TM    UCBSTAB,UCBBPUB    TEST FOR PUBLIC MOUNT\n         BNO   *+10\n         MVC   HEAD1MT,=C'PUBLIC  '\n         TM    UCBSTAB,UCBBPRV    TEST FOR PRIVATE\n         BNO   *+10\n         MVC   HEAD1MT,=C'PRIVATE '\n         TM    UCBSTAB,UCBBSTR   TEST FOR STORAGE\n         BNO   *+10\n         MVC   HEAD1MT,=C'STORAGE '\n         TM    UCBSTAB,UCBPGFL    TEST IF PAGING DEVIC\n         BNO   *+10\n         MVC   HEAD1MT,=C'*PAGING*'\n         TM    UCBSTAT,UCBSYSR    TEST FOR SYS-RES\n         BNO   *+10\n         MVC   HEAD1MT,=C'*SYSRES*'\n         SPACE 1\n         MVC   HEAD1MTR,=C'REMOV'\n         TM    UCBSTAT,UCBRESV\n         BNO   *+10\n         MVC   HEAD1MTR,=C'RSERV'\n         TM    UCBSTAT,UCBPRES\n         BNO   *+10\n         MVC   HEAD1MTR,=C'RSDNT'\n         SPACE 1\nCOMONUCB ST    R2,UCBADDR\n         DROP  R2\n         MVC   HEAD1VOL,VOLSERNO\n         MVC   HEADMID(81),HEAD1\n         SPACE 1\n         ENQ   MF=(E,ENQVTOC)\n         NI    DEQGATE,X'0F'\n         SPACE 1\n         LH    R1,VTOCTT\n         BAL   R14,TTCONVRT\n         MVC   VTOCCCHH,CCHH\n         MVI   VTDSCBTR+1,255\n         SPACE 1\n         SR    R4,R4\n         IC    R4,DCBKEYLE+(VTOCDCB-IHADCB)\n         AH    R4,DCBBLKSI+(VTOCDCB-IHADCB)\n         AH    R4,=H'20'\n         ST    R4,REBLKSIZ\n         L     R5,RENCP\n         ST    R5,RECOUNT\n         LR    R1,R4\n         MR    R0,R5\n         LR    R0,R1\n         ST    R0,REGETSIZ\n         GETMAIN EC,LV=(0),A=REBLOCK@\n         BXH   R15,R15,ERRNOCOR\n         L     R2,REBLOCK@\n         ST    R2,RENEXT@\n         LA    R3,VTOCDCB\n         SPACE 1\nREADINIT XC    0(20,R2),0(R2)\n         LA    R4,20(R2)\n         READ  (2),SF,(3),(4),MF=E\n         A     R2,REBLKSIZ\n         BCT   R5,READINIT\n         SPACE 1\n         LA    R4,DS4LEN\n         BAL   R14,GETCORE\n         ST    R3,FMT4AD\n         LR    R6,R3\n         USING DS4,R6\n         BAL   R14,VTOCREAD\n         BAL   R14,ABDUMP\n         CLI   DS4IDFMT,C'4'\n         MVI   BADDSTYP,C'4'\n         LR    R8,R6\n         BNE   ERRNOTFX\n         MVI   FM4COUNT+1,1\n         TM    DS4VTOCI,X'04'\n         BZ    *+8\n         OI    PARMOPT1,DIRFLAG\n         MVC   HOOKLCCH(28),HOOKINIT                 GDL-94\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         SR    R0,R0\n         IC    R0,DS4DEVDT\n         STH   R0,VTDSCBTR\n         TM    PARMOPT2,RESETOPT+DEBUGOPT\n         BNZ   *+10\n         MVC   HWMDS1,DS4HPCHR\n         MVC   HOOKLCCH(8),DS4VTOCE+2\n         LA    R2,DS4VTOCE\n         BAL   R14,F1EXTCNV\n         ST    R0,HOOKNTRK                           GDL-94\n         STH   R0,VTOCSIZE\n         MVC   HOOKLOTT,LOWTT                        GDL-94\n         MVC   HOOKHITT,HIGHTT                       GDL-94\n         MVI   HOOKTYPE,C'4'\n         MVC   HOOKSEQN,DS4VTOCE+1\n         MVC   HOOKIDPT,=A(VTOCMSG)\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         SPACE 1\n         LA    R4,DS5LEN\n         BAL   R14,GETCORE\n         ST    R3,FMT5AD\n         LR    R8,R3\n         USING DS5,R8\n         BAL   R14,VTOCREAD\n         BAL   R14,ABDUMP\n         CLI   DS5FMTID,C'5'\n         MVI   BADDSTYP,C'5'\n         BNE   ERRNOTFX\n*        MVI   FM5COUNT+1,1                             GDL-94\n         BAL   R14,INDEXCHK                         DAK 03/82\n         BAL   R14,F56HOOK\n*        SR    R0,R0                                    GDL-94\n*        ST    R0,DS5F5PTR                              GDL-94\n         DROP  R6,R8\n         EJECT\n         SPACE 3\nNEXTFM1  LA    R4,DS1LEN\n         BAL   R14,GETCORE\n         LR    R6,R3\n         USING DS1,R6\nREADFM1  BAL   R14,VTOCREAD\n         B     READFM5\n         SR    R1,R1\n         IC    R1,DS1FMTID\n         N     R1,=F'15'\n         CH    R1,=H'6'\n         BH    READFM1          SKIP INVALID FORMATS     GDL-2000\n*        BAL   R14,ABDUMP                                GDL-2000\n         SLL   R1,1                *2\n         LH    R2,FMXCOUNT(R1)\n         LA    R2,1(R2)\n         STH   R2,FMXCOUNT(R1)\n         LTR   R1,R1\n         BNZ   CHECKDS1\n         CLI   HWMINDIC,1\n         BE    READFM1\n         MVC   HWMNEW,DS1FDAD+3\n         MVI   HWMINDIC,1\n         B     READFM1\n         SPACE 1\nCHECKDS1 CLI   DS1FMTID,C'1'\n         BNE   READFM1\n         MVC   HWMNEW,DS1FDAD+3\n         MVI   HWMINDIC,1\n         L     R2,FIRSTDS1\n         L     R3,=A(FIRSTDS1-(DS1F1PTR-DS1))\nCOMPFM1  CLC   DS1DSNAM,DS1DSNAM-DS1(R2)\n         BL    INSRTFM1\n         LR    R3,R2\n         L     R2,DS1F1PTR-DS1(R2)\n         B     COMPFM1\nINSRTFM1 ST    R2,DS1F1PTR\n         ST    R6,DS1F1PTR-DS1(R3)\n         SR    R0,R0\n         ST    R0,DS1F3PTR\n         B     NEXTFM1\n         SPACE 1\n         DROP  R6\n         EJECT\n         SPACE 3\nREADFM5  BAL   R14,CLOSVTOC\n*        L     R6,FMT4AD                                  GDL-94\n*        USING DS4,R6                                     GDL-94\n*        L     R8,FMT5AD                                  GDL-94\n*        USING DS5,R8                                     GDL-94\n*        B     CHECKFM5                                   GDL-94\n         SPACE 1\n* DELETED NEXTFM5 THRU END OF READFM6                     GDL-94\n         EJECT ,\n         SPACE 3\nREADFM23 L     R6,=A(FIRSTDS1-(DS1F1PTR-DS1))\n         USING DS1,R6\nNEXTFM23 L     R6,DS1F1PTR\n         CLC   DS1DSNAM,LASTDS1\n         BE    VTOCUPDT\n         CLC   DS1PTRDS,ZEROES\n         BE    NEXTFM23\n         SPACE 2\n         LA    R4,DS3LEN\n         BAL   R14,GETCORE\n         LR    R8,R3\n         USING DS3,R8\n         LA    R2,DS1PTRDS\n         BAL   R14,OBTAIN\n         ST    R8,DS1F3PTR\n         SR    R0,R0\n         ST    R0,DS3F2PTR\n         TM    DS1DSORG,DCBDSGIS\n         BNO   CHECKFM3\n         USING DS2,R8\n         CLI   DS2FMTID,C'2'\n         BNE   CHECKFM3\n         CLC   DS2PTRDS,ZEROES\n         BE    NEXTFM23\n         LA    R4,DS3LEN\n         BAL   R14,GETCORE\n         ST    R3,DS2F3PTR\n         LA    R2,DS2PTRDS\n         BAL   R14,OBTAIN\n         ST    R8,DS3F2PTR-DS3(,R3)\n         LR    R8,R3\n         USING DS3,R8\n         SPACE 1\nCHECKFM3 CLI   DS3FMTID,C'3'\n         BE    NEXTFM23\n         MVI   BADDSTYP,C'3'\n         B     ERRNOTFX\n         SPACE 1\n         DROP  R6,R8\n         EJECT ,\n         SPACE 1\nVTOCUPDT TM    PARMOPT2,RESETOPT+DEBUGOPT\n         BZ    VTOCPRT\n         TM    PARMOPT1,DIRFLAG\n         BO    VTOCPRT\n         OI    OPENFLAG,OPENUPDT\n         OPEN  TYPE=J,MF=(E,OPENLIST)\n         TM    DCBOFLGS+(VTOCDCB-IHADCB),DCBOFOPN\n         BO    *+8\n         BAL   R14,ABEND\n         NI    OPENFLAG,255-OPENUPDT\n         SPACE 1\nVTOCUPRD READ  VTOCDECB,SF,MF=E\n         CHECK VTOCDECB\n         LA    R1,=CL11'VTOC READ.'\n         BAL   R14,SYNADCHK\n         MVC   DS4FDAD+(CAMLIST-DS4),DCBFDAD+(VTOCDCB-IHADCB)\n         SPACE 1\n         CLI   DS4IDFMT+(CAMLIST-DS4),C'4'\n         MVI   BADDSTYP,C'4'\n         LA    R8,CAMLIST\n         BNE   ERRNOTFX\n         MVC   HWMOLD,DS4HPCHR+(CAMLIST-DS4)\n         MVC   DS4HPCHR+(CAMLIST-DS4),HWMNEW\n         TM    PARMOPT2,DEBUGOPT\n         BO    VTOCUPCL\n         SPACE 1\n         WRITE VTOCDECB,SF,MF=E\n         CHECK VTOCDECB\n         LA    R1,=CL11'VTOC WRITE.'\n         BAL   R14,SYNADCHK\n         L     R1,FMT4AD\n         MVC   0(DS4LEN,R1),CAMLIST\n         SPACE 1\nVTOCUPCL CLOSE (VTOCDCB)\n         BAL   R14,DEQVTOC\n         SPACE 1\n         MVC   BUF+1(31),=C'VTOC RESET INFO:  OLD FMT1 HWM='\n         TM    PARMOPT2,DEBUGOPT\n         BZ    *+10\n         MVC   BUF+6(5),=C'DEBUG'\n         MVI   BUF+36,C'.'\n         MVI   BUF+41,C'.'\n         UNPK  TRAREA,HWMOLD(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+32(4),TRAREA\n         MVC   BUF+37(4),TRAREA+4\n         MVC   BUF+42(2),TRAREA+8\n         SPACE 1\n         MVC   BUF+47(13),=C'NEW FMT1 HWM='\n         MVI   BUF+64,C'.'\n         MVI   BUF+69,C'.'\n         UNPK  TRAREA,HWMNEW(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+60(4),TRAREA\n         MVC   BUF+65(4),TRAREA+4\n         MVC   BUF+70(2),TRAREA+8\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         EJECT\n         SPACE 1\nVTOCPRT  BAL   R14,DEQVTOC\n         L     R6,FMT4AD\n         USING DS4,R6\n         SPACE 1\n         MVI   BUF+1,C' '\n         MVC   BUF+2(131),BUF+1    CLEAR OUTPUT PRINT LINE\n         SPACE 1\n         MVC   BUF+1(19),=C'DEVICE DESCRIPTION:'\n         MVC   BUF+22(5),=C'TYPE='\n         L     R2,DEVTABPT\n         MVC   BUF+27(15),1(R2)\n         SPACE 1\n         MVC   BUF+44(7),=C'NOCYLS='\n         LA    R2,DS4DEVSZ\n         BAL   R14,CONVERT2\n         MVC   BUF+51(5),CONVERTD\n         SPACE 1\n         MVC   BUF+58(9),=C'TRKS/CYL='\n         LA    R2,DS4DEVSZ+2\n         BAL   R14,CONVERT2\n         MVC   BUF+67(5),CONVERTD\n         SPACE 1\n         MVC   BUF+74(8),=C'TRKSIZE='\n         LA    R2,DS4DEVTK\n         BAL   R14,CONVERT2\n         MVC   BUF+82(5),CONVERTD\n         SPACE 1\n         MVC   BUF+89(12),=C'MAX BLKSIZE='\n         LA    R2,DEVTYPE+6\n         BAL   R14,CONVERT2\n         MVC   BUF+101(5),CONVERTD\n         SPACE 1\n         MVC   BUF+108(9),=C'DSCB/TRK='\n         LA    R2,DS4DEVDT\n         BAL   R14,CONVERT1\n         MVC   BUF+117(3),CONVERTD\n         SPACE 1\n         MVC   BUF+122(8),=C'PDS/TRK='\n         LA    R2,DS4DEVDB\n         BAL   R14,CONVERT1\n         MVC   BUF+130(3),CONVERTD\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+1(11),=C'VTOC DESCR:'\n         MVC   BUF+13(7),=C'R/W=0/0'\n         CLI   DS4SECLV,0\n         BE    VTPRDSCB\n         UNPK  TRAREA,DS4SECLV(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+17(1),TRAREA\n         MVC   BUF+19(1),TRAREA+1\n         SPACE 1\nVTPRDSCB MVC   BUF+23(6),=C'DSCBS='\n         SR    R0,R0\n         IC    R0,DS4DEVDT\n         MH    R0,VTOCSIZE\n         BAL   R14,CONVERT\n         MVC   BUF+29(5),CONVERTD\n         SPACE 1\n         MVC   BUF+35(6),=C'AVAIL='\n         LA    R2,DS4DSREC\n         BAL   R14,CONVERT2\n         MVC   BUF+41(5),CONVERTD\n         SPACE 1\n         MVC   BUF+47(9),=C'VTOC EXT='\n         MVI   BUF+60,C'.'\n         MVI   BUF+65,C'-'\n         MVI   BUF+70,C'.'\n         UNPK  TRAREA,DS4VTOCE+2(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+56(4),TRAREA\n         MVC   BUF+61(4),TRAREA+4\n         UNPK  TRAREA,DS4VTOCE+6(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+66(4),TRAREA\n         MVC   BUF+71(4),TRAREA+4\n         SPACE 1\n         MVC   BUF+78(9),=C'FMT1 HWM='\n         MVI   BUF+91,C'.'\n         MVI   BUF+96,C'.'\n         UNPK  TRAREA,DS4HPCHR(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+87(4),TRAREA\n         MVC   BUF+92(4),TRAREA+4\n         MVC   BUF+97(2),TRAREA+8\n         SPACE 1\n         MVC   BUF+101(7),=C'NUMALT='\n         LA    R2,DS4NOATK\n         BAL   R14,CONVERT2\n         MVC   BUF+108(5),CONVERTD\n         SPACE 1\n         L     R2,TRKSPVOL     LOAD TRKS PER VOL TOTAL       GDL-94\n         SH    R2,DS4NOATK     SUBTRACT OFF ALTERNATES LEFT\n         ST    R2,TRKSPVOL     TOTAL PER VOL = OLD TOT - ALTS GDL-94\n         SPACE 1\n         MVC   BUF+114(8),=C'NEXTALT='\n         UNPK  TRAREA,DS4HCCHH(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+122(4),TRAREA\n         MVI   BUF+126,C'.'\n         MVC   BUF+127(4),TRAREA+4\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+1(16),=C'AVAILABLE SPACE:'\n         L     R0,AVAILSPC                               GDL-94\n         BAL   R14,CONVERT\n         MVC   BUF+18(6),CONVEDIT+6                      GDL-94\n         SPACE 1\n         MVC   BUF+25(9),=C'TRACKS IN'                   GDL-94\n         LH    R0,AVAILEXT\n         BAL   R14,CONVERT\n         MVC   BUF+35(4),CONVEDIT+8                      GDL-94\n         SPACE 1\n         MVC   BUF+40(18),=C'EXTENTS, INCLUDING'         GDL-94\n         LH    R0,AVAILCYL\n         BAL   R14,CONVERT\n         MVC   BUF+59(5),CONVEDIT+7                      GDL-94\n         SPACE 1\n         MVC   BUF+65(34),=C'FULL CYLINDERS.  LARGEST EXTENT IS' GDL-94\n         LH    R0,F5LARGST                                GDL-94\n         BAL   R14,CONVERT                                GDL-94\n         MVC   BUF+100(5),CONVEDIT+7                      GDL-94\n         SPACE 1\n         MVC   BUF+106(14),=C'CYLINDERS PLUS'             GDL-94\n         LH    R2,F5LARGST      LARGEST NUM CYL           GDL-94\n         MH    R2,TRKSPCYL      TIMES NUM TRKS PER CYL    GDL-94\n         L     R0,F5LARGTT      LARGEST NUM TRACKS        GDL-94\n         SR    R0,R2            RESULT IS ADDITIONAL TRKS GDL-94\n         BAL   R14,CONVERT                                GDL-94\n         MVC   BUF+121(3),CONVEDIT+9                      GDL-94\n         SPACE 1\n         MVC   BUF+125(7),=C'TRACKS.'                     GDL-94\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         TM    DS4VSAM,X'80'     TEST FOR VSAM OWNERSHIP BIT TURNED ON\n         BZ    NOVSAM            IF NOT ON....NOT OWNED BY VSAM\n         MVC   BUF+2(41),=C'*** THIS PACK IS OWNED BY A VSAM CATALOG '\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         CLC   DS4VTOCE+24(2),ZEROES      CHECK FOR A \"CRA\" POINTER\n         BE    NOVSAM      IF ZERO, NO POINTER....NO \"CRA\"\n         MVC   CRATRACK(2),DS4VTOCE+24  MOVE CRA ADDRESS FOR ALIGNMENT\n         MVC   BUF+2(41),=C'*** THIS PACK CONTAINS A C.R.A. AT TRACK:'\n         LH    R0,CRATRACK     LOAD UP 2 BYTE CRA ADDRESS\n         BAL   R14,CONVERT    GO CONVERT TO EBCIDIC\n         MVC   BUF+43(5),CONVEDIT+7     MOVE TO PRINT LINE\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\nNOVSAM   EQU   *\n         TM    PARMOPT1,DIRFLAG\n         BZ    VTOCTYPE                                   DAK 03/82\n         MVC   BUF+1(59),=C'*** WARNING - POSSIBLE VTOC ERRORS EXIST ONX\n                THIS VOLUME ***'\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 3\nVTOCTYPE EQU   *           ADDED 12/81 KOWNACKI\n         TM    DS4VTOCI,DS4IVTOC             IS INDEXED VTOC BIT ON?\n         BZ    NODIRFLG\n         MVC   BUF+2(39),=C'*** THIS PACK CONTAINS AN INDEXED VTOC '\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 3\nNODIRFLG TM    PARMOPT1,DUMPOPT+SDUMPOPT+DIRFLAG\n         BZ    FM1PRINT\n         SPACE 1\n         LR    R2,R6\n         LA    R3,DS4FDAD\n         BAL   R14,DUMPDSCB\n         SPACE 1\n*                             DELETE FROM HERE THRU DMPF6TST   GDL-94\n         SPACE 1\nENDUMPF6 MVI   BUF,SPACE2IM\n         BAL   R14,PRINT\n         SPACE 1\n*        DROP  R6,R8                                           GDL-94\n         EJECT\nFM1PRINT L     R6,=A(FIRSTDS1-(DS1F1PTR-DS1))\n         USING DS1,R6\n         LA    R1,HEAD1A\n         ST    R1,BUFPTR\n         PUT   PRINTDCB,HEADER1\n         PUT   PRINTDCB,HEADER2\n         LH    R0,CURLINES\n         AH    R0,=H'2'\n         STH   R0,CURLINES\n         SPACE 2\nFM1PRLOP L     R6,DS1F1PTR\n         CLC   DS1DSNAM,LASTDS1\n         BE    FM1PREND\n         SR    R7,R7\n         L     R8,DS1F3PTR\n         USING DS3,R8\n         LTR   R8,R8\n         BZ    FM1GOHK\n         CLI   DS3FMTID,C'3'\n         BE    FM1GOHK\n         LR    R7,R8\n         USING DS2,R7\n         L     R8,DS2F3PTR\nFM1GOHK  BAL   R14,F13HOOK\n         LA    R2,1\n         TM    PARMOPT1,EXTNTOPT\n         BZ    FM1TSTIS\n         LH    R1,NUMEXT\n         LA    R2,2(R1,R2)\nFM1TSTIS LTR   R7,R7\n         BZ    FM1TSTDP\n         TM    PARMOPT2,ISAMOPT\n         BZ    *+8\n         AH    R2,=H'4'\nFM1TSTDP TM    PARMOPT1,DUMPOPT\n         BZ    FM1LKAHD\n         AH    R2,=H'4'\n         LTR   R7,R7\n         BZ    *+8\n         AH    R2,=H'4'\n         LTR   R8,R8\n         BZ    FM1LKAHD\n         AH    R2,=H'4'\nFM1LKAHD BAL   R14,PRLKAHED\n         SPACE 1\n         MVC   L1DSNAME,DS1DSNAM\n         SPACE 1\nFM1VOLSR MVC   L1SERIAL,DS1DSSN\n         SPACE 1\nFM1SECUR MVC   L1SECUR,=C'-/-'\n         TM    DS1DSIND,X'40'  TEST FOR RACF PROTECTED?    HNB*DED\n         BZ    FM1PSWD      IF NO ....TRY PASSWORD         HNB*DED\n         MVC   L1SECUR,=C'RAC' RACF PROTECTED              HNB*DED\n         B     FM1CREDT        AND FORMAT CREATE DATE      HNB*DED\nFM1PSWD  TM    DS1DSIND,X'10'  TEST FOR PASSWORD FOR R & W\n         BZ    FM1CREDT     IF NO BITS....NO PASSWORD\n         MVI   L1SECUR+2,C'W'      AT LEAST \"WRITE\" IF ANY\n         TM    DS1DSIND,X'04'      TEST FOR ONLY \"WRITE\"..READ OK\n         BO    FM1CREDT       IF ON,  \"READ\" NOT PROTECTED\n         MVI   L1SECUR,C'R'      INDICATE \"READ\" PROTECT\n         SPACE 1\nFM1CREDT LA    R2,DS1CREDT\n         LA    R3,L1CREDT\n         BAL   R14,DATEDIT\n         SPACE 1\n         LA    R2,DS1EXPDT\n         LA    R3,L1EXPDT\n         BAL   R14,DATEDIT\n         SPACE 1\n         LA    R2,DS1REFD\n         LA    R3,L1REFDT\n         BAL   R14,DATEDIT\n         SPACE 1\nFM1DSORG LA    R2,L1DSORG\n         TM    DS1DSORG,DCBDSGIS\n         BZ    FM1DSO1\n         MVC   0(2,R2),=C'IS'\n         LA    R2,2(R2)\nFM1DSO1  TM    DS1DSORG,DCBDSGPS\n         BZ    FM1DSO2\n         MVC   0(2,R2),=C'PS'\n         LA    R2,2(R2)\nFM1DSO2  TM    DS1DSORG,DCBDSGDA\n         BZ    FM1DSO3\n         MVC   0(2,R2),=C'DA'\n         LA    R2,2(R2)\nFM1DSO3  TM    DS1DSORG,DCBDSGCX\n         BZ    FM1DSO6              AXC\n         MVC   0(2,R2),=C'CX'\n         LA    R2,2(R2)\n*FM1DSO4 TM    DS1DSORG,=X'08'      AXC\n*        BZ    FM1DSO5              AXC\n*        MVC   0(2,R2),=C'CQ'       AXC\n*        LA    R2,2(R2)             AXC\n*FM1DSO5 TM    DS1DSORG,=X'04'      AXC\n*        BZ    FM1DSO6              AXC\n*        MVC   0(2,R2),=C'MQ'       AXC\n*        LA    R2,2(R2)             AXC\nFM1DSO6  TM    DS1DSORG,DCBDSGPO\n         BZ    FM1DSO7\n         MVC   0(2,R2),=C'PO'\n         LA    R2,2(R2)\nFM1DSO7  TM    DS1DSORG+1,DCBDSGGS\n         BZ    FM1DSO8\n         MVC   0(2,R2),=C'GS'\n         LA    R2,2(R2)\nFM1DSO8  TM    DS1DSORG+1,DCBDSGTX\n         BZ    FM1DSO9\n         MVC   0(2,R2),=C'TX'\n         LA    R2,2(R2)\nFM1DSO9  TM    DS1DSORG+1,DCBDSGTQ\n         BZ    FM1DSO10\n         MVC   0(2,R2),=C'TQ'\n         LA    R2,2(R2)\nFM1DSO10 TM    DS1DSORG+1,DCBACBM\n         BZ    FM1DSO11\n         MVC   0(2,R2),=C'AM'\n         LA    R2,2(R2)\nFM1DSO11 TM    DS1DSORG+1,DCBDSGTR\n         BZ    FM1DSO12\n         MVC   0(2,R2),=C'TR'\n         LA    R2,2(R2)\nFM1DSO12 TM    DS1DSORG,DCBDSGU\n         BZ    *+8\n         MVI   0(R2),C'U'\n         SPACE 1\n         LA    R2,L1RECFM\n         TM    DS1RECFM,DCBRECU\n         BZ    FM1RECF1\n         MVI   0(R2),C'U'\n         BO    FM1RECF1\n         TM    DS1RECFM,DCBRECF\n         MVI   0(R2),C'F'\n         BO    FM1RECF1\n         MVI   0(R2),C'V'\nFM1RECF1 LA    R2,1(R2)\n         TM    DS1RECFM,DCBRECTO\n         BZ    FM1RECF2\n         MVI   0(R2),C'T'\n         LA    R2,1(R2)\nFM1RECF2 TM    DS1RECFM,DCBRECBR\n         BZ    FM1RECF3\n         MVI   0(R2),C'B'\n         LA    R2,1(R2)\nFM1RECF3 TM    DS1RECFM,DCBRECSB\n         BZ    FM1RECF4\n         MVI   0(R2),C'S'\n         LA    R2,1(R2)\nFM1RECF4 TM    DS1RECFM,DCBRECCC\n         BNM   FM1BLKSZ\n         TM    DS1RECFM,DCBRECCA\n         MVI   0(R2),C'A'\n         BO    FM1BLKSZ\n         MVI   0(R2),C'M'\n         SPACE 1\nFM1BLKSZ LA    R2,DS1BLKL\n         BAL   R14,CONVERT2\n         MVC   L1BLKSIZ,CONVEDIT+7\n         SPACE 1\n         LA    R2,DS1LRECL\n         BAL   R14,CONVERT2\n         MVC   L1LRECL,CONVEDIT+7\n         SPACE 1\n         LA    R2,DS1KEYL\n         BAL   R14,CONVERT1\n         MVC   L1KEYLEN,CONVEDIT+9\n         SPACE 1\n         UNPK  TRAREA,DS1OPTCD(8)\n         TR    TRAREA,TRTABLE\n         MVC   L1OPTCD,TRAREA\n         SPACE 1\n         L     R0,F1TRKAL\n         BAL   R14,CONVERT\n         MVC   L1TRKAL,CONVEDIT+7\n         SPACE 1\n         CLC   DS1LSTAR(5),ZEROES\n         BE    FM1NOEPV\n         LH    R0,DS1LSTAR\n         N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTE   LMN-CBT\n         CLI   DS1LSTAR+2,0\n         BE    *+8\n         AH    R0,=H'1'\n         BAL   R14,CONVERT\n         MVC   L1TRKUS,CONVEDIT+7\n         SPACE 1\nFM1NOEPV LA    R2,DS1NOEPV\n         BAL   R14,CONVERT1\n********************************** START *********** SMA 3/88  CHANGED\n         MVC   L1NOEPV,CONVEDIT+9\n**********************************  END  *********** SMA 3/88  CHANGED\n         SPACE 1\n         LA    R2,DS1SCALO+1\n         BAL   R14,CONVERT3\n         MVC   L1SECQU,CONVEDIT+7\n         C     R0,=F'99999'\n         BNH   FM1SCALO\n         MVC   L1SECQU,STARS\n         SPACE 1\nFM1SCALO TM    DS1SCALO,X'C0'\n         BNO   FM1SCAL1\n         MVI   L1TYP,C'C'\n         B     FM1SCAL4\nFM1SCAL1 BNZ   FM1SCAL2\n         MVI   L1TYP,C'A'\n         B     FM1SCAL4\nFM1SCAL2 TM    DS1SCALO,X'80'\n         BO    FM1SCAL3\n         MVI   L1TYP,C'B'\n         B     FM1SCAL4\nFM1SCAL3 MVI   L1TYP,C'T'\nFM1SCAL4 LA    R2,L1TYP+1\n         TM    DS1SCALO,X'08'\n         BZ    FM1SCAL5\n         MVI   0(R2),C'C'\n         LA    R2,1(,R2)\nFM1SCAL5 TM    DS1SCALO,X'04'\n         BZ    FM1SCAL6\n         MVI   0(R2),C'M'\n         LA    R2,1(,R2)\nFM1SCAL6 TM    DS1SCALO,X'02'\n         BZ    FM1SCAL7\n         MVI   0(R2),C'A'\n         LA    R2,1(,R2)\nFM1SCAL7 TM    DS1SCALO,X'01'\n         BZ    FM1OPTS\n         MVI   0(R2),C'R'\n         SPACE 1\nFM1OPTS  MVI   BUF,SPACE1AP\n         TM    PARMOPT1,EMPTYOPT     TEST FOR \"EMPTY\" OPTION\n         BO    FM1EM1         IF REQUEST GO TO PROCESS IT\n         TM    PARMOPT2,MODELOPT   TEST FOR \"MODEL\" OPTION\n         BZ    FM1SKTS0   IF NOT MODEL BYPASS..\n*\nFM1EM1   CLC   DS1LSTAR(5),ZEROES   TEST FOR TTR ZEROED...NOT VALID\n         BE    FM1DONXT              IF ALL ZERO...BYPASS\n         CLI   DS1LSTAR+2,0         TEST FOR A TTR OF RECORD ZERO\n         BNE   FM1DONXT             IF NOT ZERO, NON-EMPTY DSN\n         CLC   NUMEXT,ZEROES        TEST FOR ANY VALID EXTENTS\n         BNE   FM1EM2              IF NOT ZERO...EMPTY DATASET.\n         TM    PARMOPT2,MODELOPT    CHECK FOR \"MODEL\" OPTION SELECTED\n         BO    FM1SKTS0      IF SELECTED...PRINT THIS ENTRY\n         B     FM1DONXT    IF NOT MODEL...DON'T INCLUDE IT AS \"EMPTY\"\nFM1EM2   TM    PARMOPT1,EMPTYOPT     CHECK FOR OPTION OF \"EMPTY\"\n         BZ    FM1DONXT  IF NOT SELECTED...DON'T PRINT\n*\nFM1SKTS0 EQU  *\n         TM    PARMOPT1,DUMPOPT\n         BO    FM1XTRAL\n         TM    PARMOPT1,EXTNTOPT\n         BZ    FM1SKTS1\n         CLC   NUMEXT,ZEROES\n         BNE   FM1XTRAL\nFM1SKTS1 TM    PARMOPT2,ISAMOPT\n         BZ    FM1SKTS2\n         LTR   R7,R7\n         BNZ   FM1XTRAL\nFM1SKTS2 TM    PARMOPT1,PDSOPT\n         BZ    FM1GOPRT\n         TM    DS1DSORG,DCBDSGPO\n         BZ    FM1GOPRT\nFM1XTRAL MVI   BUF,SPACE2AP\nFM1GOPRT BAL   R14,PRINT\n         SPACE 1\nFM1SKTS3 EQU   *\n         TM    PARMOPT1,DUMPOPT\n         BZ    FM1EXDMP\n         LA    R2,DS1\n         LA    R3,DS1FDAD\n         BAL   R14,DUMPDSCB\n         LTR   R7,R7\n         BZ    FM1DMP3\n         LA    R2,DS2\n         LA    R3,DS2FDAD\n         BAL   R14,DUMPDSCB\nFM1DMP3  LTR   R8,R8\n         BZ    FM1EXDMP\n         LA    R2,DS3\n         LA    R3,DS3FDAD\n         BAL   R14,DUMPDSCB\n         SPACE 1\nFM1EXDMP TM    PARMOPT1,EXTNTOPT\n         BZ    FM1PDSDP\n         CLC   NUMEXT,ZEROES\n         BE    FM1PDSDP\n         MVC   BUF+10(L'HEAD2DAT),HEAD2DAT\n         MVI   BUF,SPACE0AP\n         BAL   R14,PRINT\n         MVC   BUF+10(L'HEAD2UND),HEAD2UND\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         L     R2,LISTEXT\n         LA    R3,BUF+9\n         SR    R4,R4\n         MVI   EXPFLAG,X'FF'\n         SPACE 1\nFM1EXLP  BAL   R14,EXFORMAT\n         LA    R4,4(,R4)\n         L     R2,LISTEXT(R4)\n         LTR   R2,R2\n         BZ    FM1EXLST\n         BAL   R14,PRINT\n         B     FM1EXLP\nFM1EXLST MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\nFM1PDSDP TM    PARMOPT1,PDSOPT\n         BZ    FM1ISDMP\n         TM    DS1DSORG,DCBDSGPO\n         BZ    FM1ISDMP\n         LA    R2,DS1\n         BAL   R14,PDSLIST\n         SPACE 1\nFM1ISDMP TM    PARMOPT2,ISAMOPT\n         BZ    FM1DONXT\n         BAL   R14,ISAMLIST\nFM1DONXT B     FM1PRLOP\n*\n* G.D.F. ROUTINE TO CONVERT INPUT & OUTPUT DATES TO\n* SAME FORMAT AS CREDAT & EXPDAT FOR DATEDIT ROUTINE\n*\nBINARY   UNPK  DASAVE(3),0(2,R2)  G.D.F.\n         PACK  DATEWORD,DASAVE(2)  G.D.F.\n         CVB   R1,DATEWORD    G.D.F.\n         STC   R1,0(R2)       G.D.F.\n         ZAP   DATEWORD,1(2,R2)  G.D.F.\n         CVB   R1,DATEWORD    G.D.F.\n         STH   R1,DATEWORD    G.D.F.\n         MVC   1(2,R2),DATEWORD  G.D.F.\n         BR    R14            G.D.F.\n*\n* END OF BINARY CONVERT ROUTINE\n*\n         SPACE 2\nFM1PREND MVI   BUF,SPACE1IM\n         BAL   R14,PRINT\n         MVI   BUF+1,C' '          MOVE TO BLANK OUT LINE\n         MVC   BUF+2(131),BUF+1    BLANK OUT PRINT LINE\n         MVC   BUF+49(14),=C'<<<<< END VTOC'\n         LH    R0,FM1COUNT\n         BAL   R14,CONVERT\n         MVC   BUF+64(4),CONVEDIT+8\n         MVC   BUF+69(15),=C'DATA SETS >>>>>'\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         SPACE 1\n         TM    PARMOPT1,MAPOPT+DIRFLAG\n         BZ    MAPEND\n         SPACE 1\n         DROP  R6,R7,R8\n         EJECT\nMAPPRINT MVC   CURLINES,=H'999'\n         LA    R0,HEAD2A\n         ST    R0,BUFPTR\n         MVI   HEADMID,C' '\n         MVC   HEADMID+1(81),HEADMID\n         MVC   HEAD2VOL,VOLSERNO\n         MVC   HEADMID(40),HEAD2\n         L     R6,HOOKSTRT\n         USING EXTENT,R6\n         L     R4,=F'-1'\n         SR    R5,R5\n         MVI   EXPFLAG,0\n         SPACE 1\nMAPPRLOP CLC   EXTLCCHH,HOOKEND\n         BE    MAPPREND\n         CLC   EXTHITT,TRKSPVOL\n         BNL   MAPINVAL\n         CLC   EXTLOTT,EXTHITT\n         BH    MAPINVAL\n         CLI   EXTTYPE,X'80'\n         BE    MAPGETEX\n*                         R4 CONTAINS PREVIOUS HIGH TRACK  GDL-94\n         L     R0,EXTLOTT                                  GDL-94\n*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94\n         SR    R0,R4\n         S     R0,=F'1'\n         BZ    MAPTRGET\n         BP    MAPTRMIS\n         BAL   R14,CONVERT\n         MVC   BUF+1(5),CONVEDIT+7\n         MVC   BUF+7(14),=C'TRACKS OVERLAP'\n         C     R4,EXTHITT                                  GDL-94\n         BNL   *+8\nMAPTRGET L     R4,EXTHITT                                  GDL-94\n*        N     R4,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94\n         A     R5,EXTNOTRK                                 GDL-94\n*        N     R5,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES  GDL-94\n         B     MAPGETEX\n         SPACE 1\nMAPINVAL MVC   BUF+7(14),=C'INVALID EXTENT'\n         B     MAPGETEX\n         SPACE 1\nMAPTRMIS BAL   R14,CONVERT\n         MVC   BUF+1(5),CONVEDIT+7\n         MVC   BUF+7(14),=C'TRACKS MISSING'\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         B     MAPTRGET\n         SPACE 1\nMAPGETEX LA    R2,EXTENT\n         LA    R3,BUF+22\n         BAL   R14,EXFORMAT\n         BAL   R14,PRINT\n         L     R6,EXTPTR\n         B     MAPPRLOP\n         SPACE 3\n*                 R4 IS HIGEST TRACK FOUND                 GDL-94\n*                 R5 IS TOTAL NUMBER OF TRACKS PROCESSED   GDL-94\nMAPPREND L     R0,TRKSPVOL                                 GDL-94\n         SR    R0,R5                                       GDL-94\n         S     R0,=F'1'\n         BNP   MAPNOMIS\n         BAL   R14,CONVERT\n         MVC   BUF+1(5),CONVEDIT+7\n          MVC  BUF+7(40),=C'TRACKS MISSING OR ASSIGNED AS ALTERNATES'\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\nMAPNOMIS MVI   BUF,SPACE1IM\n         BAL   R14,PRINT\n*        N     R5,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94\n         LR    R0,R5\n         BAL   R14,CONVERT\n         MVC   BUF+59(6),CONVEDIT+6                         GDL-94\n         MVC   BUF+67(20),=C'TRACKS ACCOUNTED FOR'          GDL-94\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         MVC   BUF+59(28),=C'<<<<< END OF TRACK MAP >>>>>'\n         MVI   BUF,SPACE0AP\n         BAL   R14,PRINT\nMAPEND   B     NEXTVOL\n         SPACE 1\n         DROP  R6\n         EJECT\nERRNODD  TM    PARMOPT2,VOLSOPT\n         BNO   NEXTDD\n         MVC   BUF+41(19),=C'CANNOT FIND DD CARD'\n         B     ERRCON1\n         SPACE 1\nERRNOTDA TM    PARMOPT2,VOLSOPT\n         BNO   NEXTDD\n         MVC   BUF+41(27),=C'DEVICE IS NOT DIRECT ACCESS'\n         B     ERRCON1\n         SPACE 1\nERRUNKDV MVC   BUF+41(19),=C'UNKNOWN DEVICE TYPE'\n         B     ERRCON1\n         SPACE 1\nERRNOPEN MVC   BUF+41(27),=C'ATTEMPT TO OPEN VTOC FAILED'\n         B     ERRCON1\n         SPACE 1\nERRCON1  MVC   BUF+10(28),=C'ERROR CONCERNING \"VOLUME01\":'\n         MVC   BUF+28(8),VOLDDNAM\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         LA    R0,4\n         B     ERRCODST\n         SPACE 1\nERRNOTFX MVC   BUF+41(33),=C'BAD DSCB - SHOULD HAVE BEEN TYPE'\n         MVC   BUF+75(1),BADDSTYP\n         LR    R2,R8\n         B     ERRCON2\n         SPACE 1\nERRNOCOR MVC   BUF+41(41),=C'INSUFFICIENT MEMORY TO COMPLETE VTOC LIST'\n         SR    R2,R2\n         B     ERRCON2\n         SPACE 1\nERRCON2  BAL   R14,CLOSVTOC\n         BAL   R14,DEQVTOC\n         MVC   BUF+10(28),=C'ERROR CONCERNING \"VOLUME01\":'\n         MVC   BUF+28(8),VOLDDNAM\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         LTR   R2,R2\n         BZ    ERRNODMP\n         LA    R3,DS4FDAD-DS4(R2)\n         BAL   R14,DUMPDSCB\nERRNODMP LA    R0,8\nERRCODST C     R0,RETCODE\n         BL    *+8\n         ST    R0,RETCODE\n         B     NEXTVOL\n         EJECT\n*\n*        SUBROUTINES START HERE\n*\nPDSLIST  ST    R14,PDSAVE\n         STM   R2,R6,PDSAVE+4\n         USING DS1,R2\n         MVC   JFCBDSNM,DS1DSNAM\n         SR    R0,R0\n         IC    R0,DS1NOBDB\n         BAL   R14,CONVERT\n         DROP  R2\n         MVC   PDSVAL4,CONVEDIT+9\n         SPACE 1\n         OPEN  (PDSDCB),TYPE=J\n         L     R3,PDSBLKAD+4\n         READ  PDSDECB,SF,,(3),MF=E\n         SPACE 1\n         SR    R0,R0\n         STH   R0,PDSBYTCT\n         STH   R0,PDSBLKAL\n         STH   R0,PDSBLKUS\n         STH   R0,PDSMEMCT\nPDSNEXT  LH    R0,PDSBYTCT\n         LTR   R0,R0\n         BP    PDSPRINT\n         CHECK PDSDECB\n         SPACE 1\n         CLI   SYNADFLG,0\n         BE    PDSREDOK\n         MVC   BUF+28(11),=CL11'DIRECTORY.'\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         CLI   SYNADFLG,X'FF'\n         BE    PDSEOD\n         BAL   R14,ABDUMP\n         SPACE 1\nPDSREDOK LM    R2,R3,PDSBLKAD\n         XR    R2,R3\n         XR    R3,R2\n         XR    R2,R3\n         STM   R2,R3,PDSBLKAD\n         READ  PDSDECB,SF,,(3),MF=E\n         SPACE 1\n         USING PDS,R2\n         LH    R1,PDSBLKAL\n         LA    R1,1(R1)\n         STH   R1,PDSBLKAL\n         LH    R0,PDSCOUNT\n         SH    R0,=H'2'\n         STH   R0,PDSBYTCT\n         LA    R1,PDSENTRY\n         ST    R1,PDSENTAD\n         B     PDSNEXT\n         SPACE 1\n         DROP  R2\n         SPACE 3\nPDSPRINT L     R6,PDSENTAD\n         USING PDSENTRY,R6\n         IC    R2,PDSINDIC\n         N     R2,=A(PDSUSERH)\n         SLL   R2,1\n         LR    R1,R6\n         AR    R1,R2\n         LA    R1,12(R1)\n         ST    R1,PDSENTAD\n         LH    R1,PDSBYTCT\n         SR    R1,R2\n         SH    R1,=Y(PDSUSERD-PDSENTRY)\n         STH   R1,PDSBYTCT\n         CLC   PDSNAME,EFFS\n         BNE   PDSMEMOK\n         MVC   PDSBLKUS,PDSBLKAL\n         B     PDSNEXT\nPDSMEMOK LH    R1,PDSMEMCT\n         LA    R1,1(R1)\n         STH   R1,PDSMEMCT\n         MVC   BUF+12(8),PDSNAME\n         TM    PDSINDIC,PDSALIAS\n         BZ    *+8\n         MVI   BUF+21,C'A'\n         UNPK  TRAREA,PDSTTRP(8)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+23(4),TRAREA\n         MVI   BUF+27,C'.'\n         MVC   BUF+28(2),TRAREA+4\n         IC    R0,PDSINDIC\n         N     R0,=A(PDS#TTRS)\n         SRL   R0,5\n         STC   R0,BUF+32\n         OI    BUF+32,X'F0'\n         LR    R5,R2\n         CH    R2,=H'44'\n         BNH   PDSPRLIN\n         LA    R2,2\n         BAL   R14,PRLKAHED\n         LR    R2,R5\n         LA    R5,44\nPDSPRLIN LA    R3,PDSUSERD\n         LA    R4,BUF+35\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         CH    R2,=H'44'\n         BNH   PDSNEXT\n         LR    R5,R2\n         SH    R5,=H'44'\n         LA    R3,PDSUSERD+44\n         LA    R4,BUF+35\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         B     PDSNEXT\n         SPACE 1\n         DROP  R6\n         SPACE 2\nPDSEOD   CLOSE (PDSDCB)\n         CLI   SYNADFLG,0\n         MVI   SYNADFLG,0\n         BNE   PDSRETRN\n         LH    R0,PDSMEMCT\n         BAL   R14,CONVERT\n         MVC   PDSVAL1,CONVEDIT+8\n         LH    R0,PDSBLKUS\n         BAL   R14,CONVERT\n         MVC   PDSVAL2,CONVEDIT+8\n         LH    R0,PDSBLKAL\n         BAL   R14,CONVERT\n         MVC   PDSVAL3,CONVEDIT+8\n         MVC   BUF+10(PDSMSGLN),PDSMSG\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\nPDSRETRN LM    R2,R6,PDSAVE+4\n         L     R14,PDSAVE\n         BR    R14\n         EJECT ,\n         SPACE 1\n         USING DS2,R7\nISAMLIST LTR   R7,R7\n         BZR   R14\n         ST    R14,ISAVE\n         STM   R2,R5,ISAVE+4\n         SPACE 1\n         MVC   BUF+12(19),=C'NO OF INDEX LEVELS='\n         LA    R2,DS2NOLEV\n         BAL   R14,CONVERT1\n         MVC   BUF+31(3),CONVERTD\n         SPACE 1\n         MVC   BUF+42(19),=C'FLAGGED FOR DELETE='\n         LA    R2,DS2TAGDT\n         BAL   R14,CONVERT2\n         MVC   BUF+61(5),CONVERTD\n         SPACE 1\n         MVC   BUF+72(19),=C'TRKS FOR HIGH INDX='\n         LA    R2,DS2NOTRK\n         BAL   R14,CONVERT1\n         MVC   BUF+91(3),CONVERTD\n         SPACE 1\n         MVC   BUF+102(19),=C'IND OVFL TRKS LEFT='\n         LA    R2,DS2RORG2\n         BAL   R14,CONVERT2\n         MVC   BUF+121(5),CONVERTD\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+12(19),=C'TRKS FOR MAST INDX='\n         LA    R2,DS2DVIND\n         BAL   R14,CONVERT1\n         MVC   BUF+31(3),CONVERTD\n         SPACE 1\n         MVC   BUF+42(19),=C'OVERFLOW  ACCESSES='\n         LA    R2,DS2RORG3\n         BAL   R14,CONVERT3\n         MVC   BUF+61(8),CONVERTD\n         SPACE 1\n         MVC   BUF+72(19),=C'PRIME DATA RECORDS='\n         LA    R2,DS2PRCTR\n         BAL   R14,CONVERT4\n         MVC   BUF+91(10),CONVERTD\n         SPACE 1\n         MVC   BUF+102(19),=C'NO OF OVFL RECORDS='\n         LA    R2,DS2OVRCT\n         BAL   R14,CONVERT2\n         MVC   BUF+121(5),CONVERTD\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         SPACE 1\n         MVC   BUF+12(19),=C'CYL OVFL  TRKS/CYL='\n         LA    R2,DS2CYLOV\n         BAL   R14,CONVERT1\n         MVC   BUF+31(3),CONVERTD\n         SPACE 1\n         MVC   BUF+42(19),=C'CORE FOR HIGH INDX='\n         LA    R2,DS2NOBYT\n         BAL   R14,CONVERT2\n         MVC   BUF+61(5),CONVERTD\n         SPACE 1\n         MVC   BUF+72(19),=C'IND OFL BYTES LEFT='\n         LA    R2,DS2BYOVL\n         BAL   R14,CONVERT2\n         MVC   BUF+91(5),CONVERTD\n         SPACE 1\n         MVC   BUF+102(19),=C'FULL CYLOVFL AREAS='\n         LA    R2,DS2RORG1\n         BAL   R14,CONVERT2\n         MVC   BUF+121(5),CONVERTD\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         SPACE 1\n         LM    R2,R5,ISAVE+4\n         L     R14,ISAVE\n         BR    R14\n         DROP  R7\n         EJECT\n         SPACE 1\n         USING EXTENT,R2\n         USING EXLINE,R3\n         SPACE 1\nEXFORMAT LTR   R2,R2               ANY EXTENT.Q\n         BZR   R14                 RETURN IMM IF NOT\n         ST    R14,EXSAVE\n         STM   R2,R3,EXSAVE+4\n         SPACE 1\n         UNPK  TRAREA,EXTLCCHH(8)\n         TR    TRAREA,TRTABLE\n         MVC   EXLFCC,TRAREA\n         MVI   EXLFPRD,C'.'\n         MVC   EXLFHH,TRAREA+4\n         SPACE 1\n         UNPK  TRAREA,EXTHCCHH(8)\n         TR    TRAREA,TRTABLE\n         MVC   EXLLCC,TRAREA\n         MVI   EXLLPRD,C'.'\n         MVC   EXLLHH,TRAREA+4\n         SPACE 1\n         L     R0,EXTLOTT                                   GDL-94\n*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94\n         BAL   R14,CONVERT\n         MVC   EXLFTT,CONVEDIT+6                            GDL-94\n         SPACE 1\n         L     R0,EXTHITT                                   GDL-94\n*        N     R0,=X'0000FFFF'  ZERO OUT HIGH ORDER BYTES   GDL-94\n         BAL   R14,CONVERT\n         MVC   EXLLTT,CONVEDIT+6                            GDL-94\n         SPACE 1\n         L     R0,EXTNOTRK                                  GDL-94\n         BAL   R14,CONVERT\n         MVC   EXLNOTRK,CONVEDIT+6                          GDL-94\n         SPACE 1\n         CLI   EXPFLAG,0\n         BNE   EXPTYPE\n         L     R1,EXTIDPTR\n         MVC   EXLDSNAM,0(R1)\n         SPACE 1\nEXPTYPE  CLI   EXTTYPE,X'01'       IS THIS A DATA EXTENT.Q\n         BNE   EXPNDATA            NO, GO CHECK OTHERS\n         CLI   EXPFLAG,0           ARE WE MAPPING.Q\n         BE    EXPEXTPR            YES, DON'T CLUTTER UP\n         MVC   EXLTYPE,=C'PRIM'    ELSE MOVE IN EXTENT TYPE\n         B     EXPEXTPR\n         SPACE 1\nEXPNDATA TM    EXTTYPE,X'F0'       VOL LABEL, OR TYPE 4, 5, OR 6\n         BO    EXPCKFMX            BR IF YES\n         CLI   EXTTYPE,X'02'       ISAM OVERFLOW.Q\n         MVC   EXLTYPE,=C'OVFL'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'04'       ISAM INDEX.Q\n         MVC   EXLTYPE,=C'INDX'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'40'       USER LABEL TRACK.Q\n         MVC   EXLTYPE,=C'ULBL'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'81'       CYLS OF DATA ON CYL BDRY.Q\n         MVC   EXLTYPE,=C'CYLB'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'80'       SHARING AN EXTENT.Q\n         MVC   EXLTYPE,=C'SHRD'\n         BNE   EXPCKFMX\n         CLI   EXPFLAG,0           ARE WE MAPPING.Q\n         BNE   EXPEXTPR            NO, DON'T ENCLOSE IN PARENS\n         MVI   EXLLPARN,C'('\n         MVI   EXLRPARN,C')'\n         B     EXPEXTPR\n         SPACE 1\nEXPCKFMX CLI   EXTTYPE,C'5'        FREE EXTENT.Q\n         BE    EXPPRLIN\n         SPACE 1\n         CLI   EXTTYPE,C'4'        VTOC EXTENT.Q\n         MVC   EXLTYPE,=C'VTOC'\n         BE    EXPEXTPR\n         SPACE 1\n         CLI   EXTTYPE,X'FF'       VOLUME LABEL.Q\n         MVC   EXLTYPE,=C'VLBL'\n         BE    EXPPRLIN\n         SPACE 1\n         CLI   EXTTYPE,C'6'        SHARED EXTENT.Q\n         MVC   EXLTYPE,=C'*UN*'\n         BNE   EXPEXTPR\n         SPACE 1\n         MVC   EXLTYPE,=C'SPLT'\n         SR    R0,R0\n         IC    R0,EXTSEQNO\n         BAL   R14,CONVERT\n         MVC   EXLSPLIT(3),CONVEDIT+9\n         B     EXPPRLIN\n         SPACE 1\nEXPEXTPR SR    R0,R0\n         IC    R0,EXTSEQNO\n         AH    R0,=H'1'\n         BAL   R14,CONVERT\n********************************** START *********** SMA 3/88  CHANGED\n         MVC   EXLSEQNO,CONVEDIT+9\n**********************************  END  *********** SMA 3/88  CHANGED\n         SPACE 1\nEXPPRLIN MVI   BUF,SPACE1AP\n         LM    R2,R3,EXSAVE+4\n         L     R14,EXSAVE\n         BR    R14\n         DROP  R2,R3\n         EJECT\n         SPACE 3\nVTOCREAD ST    R14,VTSAVE\n         STM   R2,R4,VTSAVE+4\n         L     R2,RENEXT@\n         CHECK (2)\n         LA    R1,=CL11'VTOC READ.'\n         BAL   R14,SYNADCHK\n         SPACE 1\n         USING DS1,R3\nVTOCREOK XC    0(20,R2),0(R2)\n         LA    R4,20(R2)\n         MVC   DS1(DS1END-DS1),0(R4)\n         MVC   DS1FDAD(3),VTOCMBB\n         MVC   DS1FDAD+3(4),VTOCCCHH\n         MVC   DS1FDAD+7(1),VTOCR\n         CLC   HWMDS1,DS1FDAD+3\n         BNL   VTOCRD01                         ADDED 12/11/81 KOWNACKI\n         CLC   HWMDS1,=X'0000000000'            ALLOW INITIAL X'00' AS\n         BNE   VTOCEOD                          DS4HPCHR FOR DSF\n         SPACE 1\nVTOCRD01 READ  (2),SF,VTOCDCB,(4),MF=E\n         A     R2,REBLKSIZ\n         ST    R2,RENEXT@\n         L     R1,RECOUNT\n         BCT   R1,VTSAVECT\n         L     R2,REBLOCK@\n         ST    R2,RENEXT@\n         L     R1,RENCP\nVTSAVECT ST    R1,RECOUNT\n         SPACE 1\n         LA    R0,1\n         SR    R1,R1\n         IC    R1,VTOCR\n         AR    R1,R0\n         STC   R1,VTOCR\n         CH    R1,VTDSCBTR\n         BNH   VTOCREND\n         MVI   VTOCR,1\n         AH    R0,VTOCTT\n         STH   R0,VTOCTT\n         LR    R1,R0\n         BAL   R14,TTCONVRT\n         MVC   VTOCCCHH,CCHH\n         SPACE 1\nVTOCREND L     R14,VTSAVE\n         LM    R2,R4,VTSAVE+4\n         LA    R14,4(R14)\n         BR    R14\n         SPACE 1\nVTOCEOD  L     R14,VTSAVE\n         LM    R2,R4,VTSAVE+4\n         BR    R14\n         SPACE 1\n         DROP  R3\n         EJECT\n         SPACE 3\nOBTAIN   MVC   OBCCHHR,0(R2)\n         OBTAIN OBCAMLST\n         BXLE  R15,R15,*+8\n         BAL   R14,ABDUMP\n         USING DS1,R3\n         MVC   DS1(DS1END-DS1),CAMLIST\n         MVC   DS1FDAD(3),VTOCMBB\n         MVC   DS1FDAD+3(5),0(R2)\n         BR    R14\n         SPACE 2\nOBCAMLST CAMLST SEEK,OBCCHHR,VOLSERNO,CAMLIST\n         SPACE 1\n         DROP  R3\n         EJECT\n         SPACE 3\nSYNADXIT SYNADAF ACSMETH=BSAM\n         MVC   BUF+7(47),=C'I/O ERROR PROCESSING XXXXXXXXXX. SYNADAF INX\n               FO=\"'\n         MVC   BUF+54(78),50(R1)\n         MVI   BUF+132,C'\"'\n         SYNADRLS\n         MVI   SYNADFLG,X'FF'\n         LTR   R0,R0\n         BZR   R14\n         MVI   SYNADFLG,1\n         BR    R14\n         SPACE 3\nSYNADCHK CLI   SYNADFLG,0\n         BER   R14\n         MVC   BUF+28(11),0(R1)\n         BAL   R14,CLOSVTOC\n         BAL   R14,DEQVTOC\n         MVI   BUF,SPACE3IM\n         BAL   R14,PRINT\n         MVI   BUF,SPACE3AP\n         BAL   R14,PRINT\n         CLI   SYNADFLG,X'FF'\n         BE    ERRNODMP\n         BAL   R14,ABDUMP\n         EJECT\n         SPACE 3\nDEQGATE  EQU   *+1\nDEQVTOC  BCR   *-*+15,R14\n         OI    DEQGATE,X'F0'\n         SPACE 1\n         DEQ   MF=(E,ENQVTOC)\n         SPACE 1\n         BR    R14\n         SPACE 4\n         SPACE 1\nCLOSVTOC CLOSE MF=(E,CLOSLIST)\n         SPACE 1\n         L     R1,REBLOCK@\n         LTR   R1,R1\n         BZR   R14\n         L     R0,REGETSIZ\n         FREEMAIN R,LV=(0),A=(1)\n         SR    R0,R0\n         ST    R0,REBLOCK@\n         BR    R14\n         EJECT\n         SPACE 3\n         USING DS1,R6\n         USING DS3,R8\n         SPACE 1\nF13HOOK  ST    R14,F1SAVE\n         SR    R5,R5\n         ST    R5,F1TRKAL\n         STH   R5,NUMEXT\n********************************** START *********** SMA 3/88  CHANGED\n         XC    LISTEXT(64*4),LISTEXT\n         XC    LISTEXT+256(64*4),LISTEXT+256\n**********************************  END  *********** SMA 3/88  CHANGED\n         IC    R5,DS1NOEPV\n         CLI   DS1EXT1,X'40'\n         BNE   *+8\n         AH    R5,=H'1'\n         LTR   R5,R5\n         BZR   R14\n         STH   R5,NUMEXT\n********************************** START *********** SMA 3/88  ADDED\n         STH   R5,WRKEXT           SAVE NUMBER OF EXTENTS\n         CH    R5,=H'16'           NUMBER EXTENTS > 16 ?\n         BNH   GOODEXT             NO, USE AS IS\n         LH    R5,=H'16'           YES, FORCE AS 16\nGOODEXT  EQU   *\n**********************************  END  *********** SMA 3/88  ADDED\n         SPACE 1\n         SR    R3,R3\n         SR    R4,R4\nF1NXTEXT EX    0,F1EXTPIK(R3)\n         BAL   R14,F1EXTCNV\n         AR    R4,R0\n         MVC   HOOKLCCH(8),2(R2)\n         ST    R0,HOOKNTRK                  GDL-94\n         MVC   HOOKTYPE(2),0(R2)\n         MVC   HOOKLOTT,LOWTT                          GDL-94\n         MVC   HOOKHITT,HIGHTT                         GDL-94\n         LA    R0,DS1DSNAM\n         ST    R0,HOOKIDPT\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         ST    R15,LISTEXT(R3)\n         LA    R3,4(R3)\n         BCT   R5,F1NXTEXT\n         ST    R4,F1TRKAL\n********************************** START *********** SMA 3/88  ADDED\n         ST    R3,R3EXT            SAVE EXTENT TABLE POINTER\nF3NXTF3  EQU   *\n         USING DS3,R8\n         LTR   R8,R8               IS POINTER ZEROES ?\n         BZ    F3DONE              YES, DONE FORMAT 3 DSCB\n         CLC   DS3PTRDS,ZEROES     NO, DOUBLE CHECK POINTER\n         BE    F3DONE              DONE FORMAT 3 DSCB\n         LH    R5,WRKEXT           LOAD NUMBER OF EXTENTS\n         SH    R5,LSTEXT           SUBTRACT LAST NUMBER OF EXTENTS\n         MVC   LSTEXT,=H'13'       SET LAST NUMBER OF EXTENTS TO 13\n         STH   R5,WRKEXT           SAVE NUMBER OF EXTENTS LEFT\n         CH    R5,=H'13'           ARE THERE MORE THAN 13 EXTENTS LEFT\n         BNH   GOODEXT2            NO, USE IT\n         LH    R5,=H'13'           YES, FORCE AT 13\nGOODEXT2 EQU   *\n         CH    R5,=H'0'            ARE THERE MORE THAN ZERO EXTENTS\n         BNH   F3DONE              NO, WE'RE DONE WITH FORMAT 3 DSCB'S\n         LA    R4,DS3LEN           YES, OBTAIN EXTENT INFORMATION\n         BAL   R14,GETCORE         -\n         ST    R3,DS3F2PTR         -\n         LA    R2,DS3PTRDS         -\n         LR    R8,R3               -\n         BAL   R14,OBTAIN          -\n         SPACE 1                   -\n         SR    R3,R3               CLEAR REGISTER 3\n         SR    R4,R4               CLEAR REGISTER 4\nF3NXTEXT EX    0,F3EXTPIK(R3)      EXECUTE FORMAT 3 DSCB EXTENT LOADS\n         BAL   R14,F1EXTCNV        CONVERT EXTENT INFORMATION\n         AR    R4,R0               ADD TO NUMBER OF TRACKS ALLOCATED\n         MVC   HOOKLCCH(8),2(R2)   PERORM HOOK EXTENT PROCESSING\n         ST    R0,HOOKNTRK         -              GDL-94\n         MVC   HOOKTYPE(2),0(R2)   -\n         MVC   HOOKLOTT,LOWTT      -                    GDL-94\n         MVC   HOOKHITT,HIGHTT     -                    GDL-94\n         LA    R0,DS1DSNAM         -\n         ST    R0,HOOKIDPT         -\n         LA    R2,HOOKPTR          -\n         BAL   R14,HOOKUP          -\n         ST    R3,R3EXTHLD         SAVE REGISTER 3\n         L     R3,R3EXT            LOAD EXTENT TABLE POINTER\n         ST    R15,LISTEXT(R3)     STORE EXTENT INFORMATION INTO TABLE\n         LA    R3,4(R3)            INCREMENT POINTER TO NEXT ELEMENT\n         ST    R3,R3EXT            SAVE EXTENT TABLE POINTER\n         L     R3,R3EXTHLD         RELOAD REGISTER 3\n         LA    R3,4(R3)\n         BCT   R5,F3NXTEXT         LOOP FOR AS MANY EXTS IN THIS DSCB\n         A     R4,F1TRKAL          ADD PREVIOUS TRACKS ALLOC TO COUNTER\n         ST    R4,F1TRKAL          STORE CUMMULATIVE TRACKS TO COUNTER\n         B     F3NXTF3             GO GET NEXT FORMAT 3 DSCB\nF3DONE   EQU   *\n         MVC   LSTEXT,=H'16'       RESTORE LAST EXTENT TO 16\n**********************************  END  *********** SMA 3/88  ADDED\n         L     R14,F1SAVE\n         BR    R14\n         EJECT ,\n         SPACE 3\nF1EXTCNV CLI   0(R2),0\n         BER   R14\n         LA    R2,2(R2)\n         BAL   R15,CCHHCONV\n         ST    R0,LOWTT                               GDL-94\n         LA    R2,4(R2)\n         BAL   R15,CCHHCONV\n         ST    R0,HIGHTT                              GDL-94\n         L     R1,LOWTT                               GDL-94\n*        N     R1,=X'0000FFFF' ZERO OUT HIGH ORDER BYTES    GDL-94\n         SR    R0,R1\n         AH    R0,=H'1'\n         S     R2,=F'6'\n         BR    R14\n         SPACE 2\nF1EXTPIK LA    R2,DS1EXT1\n         LA    R2,DS1EXT2\n         LA    R2,DS1EXT3\n         LA    R2,DS3EXTNT\n         LA    R2,DS3EXTNT+10\n         LA    R2,DS3EXTNT+20\n         LA    R2,DS3EXTNT+30\n         LA    R2,DS3ADEXT\n         LA    R2,DS3ADEXT+10\n         LA    R2,DS3ADEXT+20\n         LA    R2,DS3ADEXT+30\n         LA    R2,DS3ADEXT+40\n         LA    R2,DS3ADEXT+50\n         LA    R2,DS3ADEXT+60\n         LA    R2,DS3ADEXT+70\n         LA    R2,DS3ADEXT+80\n         SPACE 2\n********************************** START *********** SMA 3/88  ADDED\n* THE FORMAT 3 DSCB CONTAINS ONLY 13 EXTENTS AS OPPOSED TO 16\n* EXTENTS IN THE COMBINED FORMAT 1 / FORMAT 3 DSCB TABLE AS\n* DEFINED ABOVE.\n*********************************************************************\nF3EXTPIK LA    R2,DS3EXTNT\n         LA    R2,DS3EXTNT+10\n         LA    R2,DS3EXTNT+20\n         LA    R2,DS3EXTNT+30\n         LA    R2,DS3ADEXT\n         LA    R2,DS3ADEXT+10\n         LA    R2,DS3ADEXT+20\n         LA    R2,DS3ADEXT+30\n         LA    R2,DS3ADEXT+40\n         LA    R2,DS3ADEXT+50\n         LA    R2,DS3ADEXT+60\n         LA    R2,DS3ADEXT+70\n         LA    R2,DS3ADEXT+80\n         SPACE 2\n********************************** START *********** SMA 3/88  ADDED\n         DROP  R6,R8\n         EJECT\n         SPACE 3\n         USING DT2ARENT,R2                               GDL-94\n*                                                        GDL-94\nF56HOOK  ST    R14,F5SAVE\n         LA    R2,DT2ENTRY        POINT TO FIRST ENTRY   GDL-94\n         L     R3,DT2ENTNM        LOAD NUMBER OF ENTRIES GDL-94\nF5LOOP   CLC   DT2EXT,ZEROES      ZERO ENTRY             GDL-94\n         BE    F5EXIT                 END OF EXTENTS     GDL-94\n         BAL   R14,F5EXTCNV\n         LA    R2,8(R2)           POINT TO NEXT ENTRY    GDL-94\n         BCT   R3,F5LOOP\n*        LA    R2,DS5MAVET                               GDL-94\n*        LA    R3,18                                     GDL-94\n*        BAL   R14,F5EXTCNV                              GDL-94\n*        LA    R2,5(R2)                                  GDL-94\n*        BCT   R3,*-8                                    GDL-94\nF5EXIT   L     R14,F5SAVE                                GDL-94\n         BR    R14\n         SPACE 1\nF5EXTCNV ST    R14,F5SAVE+4\n         STM   R2,R5,F5SAVE+8                            GDL-94\n         L     R1,DT2RTAST           GET BEGINING TRACK  GDL-94\n         ST    R1,HOOKLOTT           STORE IN TABLE      GDL-94\n         LR    R3,R1                 SAVE IN R3          GDL-94\n         BAL   R14,TTCONVRT          CONVERT TO CCHH     GDL-94\n         MVC   HOOKLCCH,CCHH         SAVE IN TABLE       GDL-94\n         L     R1,DT2RTAED           GET ENDING TRACK    GDL-94\n         LR    R4,R1                 SAVE IN R4          GDL-94\n         BCTR  R1,0                  ADJUST END OF EXT   GDL-94\n         ST    R1,HOOKHITT           STORE IN TABLE      GDL-94\n         BAL   R14,TTCONVRT          CONVERT TO CCHH     GDL-94\n         MVC   HOOKHCCH,CCHH         SAVE IN TABLE       GDL-94\n         SR    R4,R3                 GET NUMBER OF TRKS  GDL-94\n         ST    R4,HOOKNTRK           SAVE IN TABLE       GDL-94\n         LH    R5,HOOKHCCH           LOAD END CYLENDER   GDL-94\n         SH    R5,HOOKLCCH           SUBTRACT START CYL  GDL-94\n         LA    R5,1(R5)              ADJUST COUNT        GDL-94\n         CLI   HOOKLCCH+3,X'00'      START ON CYL BOUNDRY GDL-94\n         BE    STRTBDY                 YES               GDL-94\n         BCTR  R5,0                    NO SUBTRACT 1     GDL-94\nSTRTBDY  EQU   *\n         LH    R0,TRKSPCYL           GET TRACKS PER CYL  GDL-94\n         BCTR  R0,0                  BACK UP TO LAST TRK GDL-94\n         CH    R0,HOOKHCCH+2         END ON CYL BOUNDRY  GDL-94\n         BE    ENDBDY                  YES               GDL-94\n         BCTR  R5,0                    NO SUBTRACT 1     GDL-94\nENDBDY   C     R4,F5LARGTT           IS IT THE LARGEST   GDL-94\n         BNH   F5AVAIL                 NO, CONTINUE      GDL-94\n         ST    R4,F5LARGTT           SAVE NEW LARGEST TR GDL-94\n         STH   R5,F5LARGST           NUM CYL IN LARGEST  GDL-94\nF5AVAIL  A     R4,AVAILSPC           ADD AVAILABLE TRKS  GDL-94\n         ST    R4,AVAILSPC           SAVE NEW AVAIL TRKS GDL-94\n         LH    R1,AVAILEXT           INCREMENT           GDL-94\n         LA    R1,1(R1)                  COUNT OF AVAIL  GDL-94\n         STH   R1,AVAILEXT                  EXTENTS      GDL-94\n         AH    R5,AVAILCYL           ADD FULL CYLENDERS  GDL-94\n         STH   R5,AVAILCYL           SAVE NEW AVAIL CYL  GDL-94\n         LA    R0,=CL44'  **** AVAILABLE ****'           GDL-94\n         ST    R0,HOOKIDPT                               GDL-94\n         MVI   HOOKSEQN,0            FAKE SEQUENCE NUM   GDL-94\n         MVI   HOOKTYPE,C'5'         PUT TYPE IN TABLE   GDL-94\n         DROP  R2\n         LA    R2,HOOKPTR\n         BAL   R14,HOOKUP\n         LM    R2,R5,F5SAVE+8                            GDL-94\n         L     R14,F5SAVE+4\n         BR    R14\n         SPACE 1\n*F6HOOK  STC   R5,HOOKSEQN                               GDL-94\n*        MVC   HOOKIDPT,=A(FMT6MSG)                      GDL-94\n*        LR    R0,R4                                     GDL-94\n*        MH    R0,TRKSPCYL                               GDL-94\n*        STH   R0,HOOKNTRK                               GDL-94\n*        B     F6RETURN                                  GDL-94\n         SPACE 1\n*        DROP  R8                                        GDL-94\n         EJECT\n         SPACE 3\n*      THIS ROUTINE ADDED 03/82 BY D. KOWNACKI FOR INDEXED VTOCS\n*\n*       IF INDEXED VTOC THIS ROUTINE WILL BUILD A FORMAT 5 DSCB.\n*        FMT5AD CONTAINS THE ADDRES OF THE FORMAT 5 DSCB BUFFER.\n*        IT CONTAINS THE LAST FORMAT 5 DSCB READ OR BUILT. THE\n*        FMT 5 BUFFER IS ZERO IF THIS IS THE 1ST CALL.\n*        THE BUILT FMT5 WILL THEN BE PROCESSED AS BEFORE.\n*        IF THE FMT 5 DSCB BUFFER RETURNED INDICATES MORE EXTENTS\n*         THIS ROUTINE WILL BE CALLED AGAIN TO OBTAIN THE\n*         NEXT FMT 5 DSCB AND SO ON.\n*\n*        USING DS5,R8                                         GDL-94\n         USING DS4,R6\n*\nINDEXCHK ST    R14,INDXSAVE\n         L     R5,UCBADDR               PUT UCBADDR IN REG 5\n         CVAFTST UCB=(R5)               TEST VTOC\n         LTR   R15,R15                  TEST RETURN CODE\n         BNZ   INDXED                    GO PROCESS           GDL-94\n         BAL   R14,ABDUMP        INDEX VTOC SUPPORT REQUIRED  GDL-94\n*        BE    INDXEND                   GO PROCESS THE FMT5  GDL-94\n         SPACE 1\n*        ASSUME INDEXED VTOC AND GET THE NO OF AVAILABLE FORMAT 1'S\n         SPACE 1\nINDXED   ST    R5,CVPL2+12           STORE UCBADDR FOR MACRO\n         CVAFDSM  MF=(E,CVPL2),BRANCH=NO\n         SPACE 1\n         MVC   DS4DSREC(2),FMT0ADDR+2   STORE AVAIL FMT0 IN FMT4 FIELD\n         SPACE 1\n*        ASSUME INDEXED VTOC ---     NOT APPLICABLE        GDL-94\n         MVC   DT2X7HDR,ZEROES       ZERO OUT HEADER       GDL-94\n         MVC   DT2X7EYE,=C'ICVEDT02' INIT EYE CATCHER      GDL-94\n         MVC   DT2ENTRY(4),ZEROES    ZERO OUT START        GDL-94\n         SPACE 1\n         ST    R5,CVUCB              STORE UCBADDR FOR MACRO\nMOREINDX MVC   DT2ENTNM,NUMENT    INIT NUMBER OF ENTRIES   GDL-94\n*                                                          GDL-94\n*                                                          GDL-94\n         CVAFDSM MF=(E,CVPL),BRANCH=NO   GET EXTENTS FROM CVPL GDL-94\n         SPACE 1\n*        TM    CVFL1,CV1IVT                          GDL-94\n*        BZ    INDXEND                               GDL-94\n         LTR   R15,R15                     IS THERE AN ERROR?\n         BZ    BUILDF5                      NO       GDL-94\n         C     R15,=F'4'                   TEST THE RETURN CODE\n         BE    TSTSTAT\n         BAL   R14,ABDUMP                  UNEXPECTED ERROR (ABEND)\nTSTSTAT  CLI   CVSTAT,STAT032              END OF DATA\n         BE    INDXEND                               GDL-94\n         BAL   R14,ABDUMP                  UNEXPECTED ERROR (ABEND)\n         SPACE 3\n*        BUILD THE FORMAT 5 ***NO LONGER DONE***     GDL-94\n*    BUT NEED TO PROCESS CURRENT GROUP OF EXTENTS AND GET MORE  GDL-94\n         SPACE 2\nBUILDF5  DS    0H\n*        MVC   DS5KEYID,FM5ID                        GDL-94\n*        MVC   DS5AVEXT(L'DS5AVEXT+L'DS5EXTAV),EXTS  GDL-94\n*                                                    GDL-94\n*        MVI   DS5FMTID,C'5'                         GDL-94\n*        MVC   DS5MAVET,EXTS+L'DS5AVEXT+L'DS5EXTAV   GDL-94\n*        NC    EXTS+L'EXTS-L'DS5AVEXT(5),EXTS+L'EXTS-L'DS5AVEXT GDL-94\n*                                                    GDL-94\n*        BZ    INDXEND          BRANCH IF YES        GDL-94\n         BAL   R14,F56HOOK\n         MVC   DT2ENTRY(4),DT2END-4 SETUP FOR NEXT TIME THRU   GDL-94\n*                           PER APAR OY66889                   GDL-94\n         B     MOREINDX\n*                         ALL EXTENTS PROCESSED EXIT.\nINDXEND  DS    0H\n         L     R14,INDXSAVE\n         BR    R14\n         EJECT\n         SPACE 3\nHOOKUP   TM    PARMOPT1,MAPOPT+EXTNTOPT+DIRFLAG\n         BZR   R14\n         ST    R14,HOSAVE\n         STM   R3,R5,HOSAVE+4\n         LA    R4,EXTNTLEN\n         BAL   R14,GETCORE\n         USING EXTENT,R3\n         MVC   EXTENT(EXTNTLEN),0(R2)\n         L     R2,HOOKSTRT\n         LA    R4,HOOKSTRT\nHOOKLOOK CLC   EXTLCCHH,EXTLCCHH-EXTENT(R2)\n         BL    HOOKDONE\n         LR    R4,R2\n         L     R2,0(R2)\n         B     HOOKLOOK\n         SPACE 1\nHOOKDONE ST    R2,EXTPTR\n         ST    R3,EXTPTR-EXTENT(R4)\n         LR    R15,R3\n         LM    R3,R5,HOSAVE+4\n         L     R14,HOSAVE\n         BR    R14\n         SPACE 1\n         DROP  R3\n         EJECT ,\n         SPACE 3\nCCHHCONV SR    R0,R0\n         IC    R0,0(R2)\n         MH    R0,DEVCONV1\n         SR    R1,R1\n         IC    R1,1(R2)\n         MH    R1,DEVCONV2\n         AR    R0,R1\n         SR    R1,R1\n         IC    R1,2(R2)\n         MH    R1,DEVCONV3\n         AR    R0,R1\n         SR    R1,R1\n         IC    R1,3(R2)\n         MH    R1,DEVCONV4\n         AR    R0,R1\n         BR    R15\n         SPACE 4\nTTCONVRT SR    R0,R0\n         ST    R0,CCHH\n         LH    R15,DEVCONV1\n         LTR   R15,R15\n         BZ    TTCONVR2\n         DR    R0,R15\n         STC   R1,CCHH\n         LR    R1,R0\n         SR    R0,R0\nTTCONVR2 LH    R15,DEVCONV2\n         LTR   R15,R15\n         BZ    TTCONVR3\n         DR    R0,R15\n         STC   R1,CCHH+1\n         LR    R1,R0\n         SR    R0,R0\nTTCONVR3 LH    R15,DEVCONV3\n         LTR   R15,R15\n         BZ    TTCONVR4\n         DR    R0,R15\n         STC   R1,CCHH+2\n         STC   R0,CCHH+3\n         BR    R14\n         SPACE 1\nTTCONVR4 STC   R1,CCHH+3\n         BR    R14\n         EJECT\n         SPACE 3\nCONVERT1 LA    R3,1\n         B     CONVCOM\n         SPACE 1\nCONVERT2 LA    R3,2\n         B     CONVCOM\n         SPACE 1\nCONVERT3 LA    R3,3\n         B     CONVCOM\n         SPACE 1\nCONVERT4 LA    R3,4\n         SPACE 1\nCONVCOM  SR    R0,R0\nCONV1MOR SLL   R0,8\n         IC    R0,0(R2)\n         LA    R2,1(R2)\n         BCT   R3,CONV1MOR\n         SPACE 1\nCONVERT  LPR   R0,R0\n         CVD   R0,CONVDEC\n         UNPK  CONVUNPK,CONVDEC\n         OI    CONVUNPK+11,X'F0'\n         MVC   CONVEDIT,=X'402020202020202020202120'\n         ED    CONVEDIT,CONVDEC+2\n         MVC   CONVERTD,CONVEDIT+1\nCONVCLI  CLI   CONVERTD,C' '\n         BNER  R14\n         MVC   CONVERTD,CONVERTD+1\n         B     CONVCLI\n         SPACE 1\n         EJECT\n         SPACE 3\nDATEDIT  ST    R14,DASAVE\n         STM   R2,R5,DASAVE+4\n         XC    DATEWORD,DATEWORD\n         LTR   R2,R2\n         BZ    DATGET\n         SR    R1,R1\n         IC    R1,0(R2)\n         MH    R1,=H'1000'\n         MVC   DATEWORD,1(R2)\n         AH    R1,DATEWORD\n         CVD   R1,DATEWORD\nDATGETRT OI    DATEWORD+7,X'0F'\n         L     R2,DATEWORD+4\n         SR    R0,R0\n         D     R0,=F'1000'\n         LA    R15,DATNORMY\n         LTR   R14,R1\n         BZ    DATCOMP\n         N     R14,=F'3'\n         BM    DATCOMP\n         LA    R15,DATLEAPY\n         SPACE 1\nDATCOMP  LTR   R0,R0\n         BZ    DAJULIAN\n         CH    R0,0(R15)\n         BH    DAJULIAN\n         TM    PARMOPT2,JDATEOPT\n         BO    DAJULIAN\n         LA    R3,1\n         SR    R14,R14\n         SPACE 1\nDATICMON IC    R14,1(R3,R15)\n         CR    R0,R14\n         BNH   DATMONOK\n         SR    R0,R14\n         LA    R3,1(R3)\n         B     DATICMON\n         SPACE 1\nDATMONOK MH    R3,=H'1000'\n         AR    R3,R0\n         MH    R3,=H'1000'\n         AR    R3,R1\n         CVD   R3,DATEWORD\n         MVC   DATEWORD(5),DATEWORD+3\n         UNPK  DATEWORD(8),DATEWORD(5)\n         OI    DATEWORD+7,X'F0'\n         MVI   DATEWORD+2,C'/'\n         MVI   DATEWORD+5,C'/'\n         SPACE 3\nDATRETRN LM    R2,R5,DASAVE+4\n         MVC   0(8,R3),DATEWORD\n         L     R14,DASAVE\n         BR    R14\n         SPACE 2\nDAJULIAN ST    R2,DATEWORD\n         UNPK  DATEWORD+2(5),DATEWORD+1(3)\n         MVC   DATEWORD+1(2),DATEWORD+2\n         MVI   DATEWORD,C' '\n         MVI   DATEWORD+3,C'.'\n         MVI   DATEWORD+7,C' '\n         B     DATRETRN\n         SPACE 2\nDATGET   ST    R1,DATEWORD+4\n         LTR   R1,R1\n         BNZ   DATGOT\n         TIME  DEC\n         ST    R1,DATEWORD+4\nDATGOT   CVB   R1,DATEWORD\n         B     DATGETRT\n         SPACE 2\n         EJECT\n         SPACE 3\nDUMPDSCB ST    R14,DUSAVE\n         LR    R4,R2\n         LA    R2,3\n         BAL   R14,PRLKAHED\n         LR    R2,R4\n         MVC   BUF+8(17),=C'BLK 1234.5678.90:'\n         UNPK  TRAREA,3(8,R3)\n         TR    TRAREA,TRTABLE\n         MVC   BUF+12(4),TRAREA\n         MVC   BUF+17(4),TRAREA+4\n         MVC   BUF+22(2),TRAREA+8\n         LA    R3,0(R2)\n         LA    R4,BUF+35\n         LA    R5,44\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         MVC   BUF+8(13),=C'FORMAT N DSCB'\n         MVC   BUF+15(1),44(R2)\n         OI    BUF+15,X'F0'\n         LA    R3,44(R2)\n         LA    R4,BUF+26\n         LA    R5,48\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE1AP\n         BAL   R14,PRINT\n         LA    R3,92(R2)\n         LA    R4,BUF+26\n         LA    R5,48\n         BAL   R14,DUMPLINE\n         MVI   BUF,SPACE2AP\n         BAL   R14,PRINT\n         L     R14,DUSAVE\n         BR    R14\n         EJECT ,\n         SPACE 3\nDUMPLINE LTR   R5,R5\n         BNPR  R14\n         B     DUMPNEXT\nDUMPWORD BCT   R1,DUMPBYTE\n         MVI   0(R4),C' '\n         LA    R4,1(R4)\nDUMPNEXT LA    R1,4\nDUMPBYTE UNPK  TRAREA(3),0(2,R3)\n         TR    TRAREA(2),TRTABLE\n         MVC   0(2,R4),TRAREA\n         LA    R3,1(R3)\n         LA    R4,2(R4)\n         BCT   R5,DUMPWORD\n         BR    R14\n         EJECT\n         SPACE 3\nGETCORE  A     R4,=F'3'\n         N     R4,=F'-4'\nGETAGAIN L     R0,CORLEFT\n         SR    R0,R4\n         BM    GETMAIN\n         ST    R0,CORLEFT\n         L     R3,CORNEXT@\n         LR    R0,R3\n         AR    R0,R4\n         ST    R0,CORNEXT@\n         BR    R14\n         SPACE 3\nGETMAIN  L     R3,CURBLK@\n         GETMAIN EC,LV=2048,A=CURBLK@\n         BXH   R15,R15,ERRNOCOR\n         SPACE 1\n         L     R1,CURBLK@\n         ST    R1,0(R3)\n         SR    R0,R0\n         ST    R0,0(R1)\n         LA    R1,4(R1)\n         ST    R1,CORNEXT@\n         MVC   CORLEFT,=A(2044)\n         B     GETAGAIN\n         EJECT ,\n         SPACE 3\nFREECORE L     R2,CORFRST@\nFREELOOP LTR   R1,R2\n         BZ    FREEDONE\n         L     R2,0(R2)\n         LA    R0,2048\n         FREEMAIN R,LV=(0),A=(1)\n         B     FREELOOP\n         SPACE 1\nFREEDONE SR    R0,R0\n         ST    R0,CORLEFT\n         ST    R0,CORFRST@\n         LA    R0,CORFRST@\n         ST    R0,CURBLK@\n         BR    R14\n         EJECT\n         SPACE 3\nPRINT    ST    R14,PRSAVE\n         STM   R2,R5,PRSAVE+4\n         LH    R0,CURLINES\n         CH    R0,MAXLINES\n         BL    PRNOPAGE\n         PUT   PRINTDCB,NEWPAGE\n         SR    R0,R0\n         STH   R0,CURLINES\nPRNOPAGE LTR   R0,R0\n         BNZ   PRINTBUF\n         LH    R0,CURPAGES\n         AH    R0,=H'1'\n         STH   R0,CURPAGES\n         CH    R0,MAXPAGES\n         BNH   PRTPGCNV\n         SR    R0,R0\n         STH   R0,CURPAGES\nPRTPGCNV BAL   R14,CONVERT\n         MVC   PAGENO,CONVERTD\n         PUT   PRINTDCB,HEADERCC\n         MVC   CURLINES,=H'3'\n         L     R2,BUFPTR\nPRNXTBUF LH    R0,CURLINES\n         LTR   R2,R2\n         BZ    PRINTBUF\n         AH    R0,4(R2)\n         STH   R0,CURLINES\n         LA    R3,6(R2)\n         PUT   PRINTDCB,(3)\n         L     R2,0(R2)\n         B     PRNXTBUF\n         EJECT\n         SPACE 3\nPRINTBUF TM    BUF,X'80'\n         BZ    PRUPLINE\n         SR    R0,R0\n         B     PRDOPUT\nPRUPLINE SR    R14,R14\n         IC    R14,BUF\n         SRL   R14,3\n         AR    R0,R14\nPRDOPUT  STH   R0,CURLINES\n         PUT   PRINTDCB,BUF\n         TM    BUF,X'02'\n         BO    PRETURN\n         MVI   BUF+1,C' '\n         MVC   BUF+2(131),BUF+1\n         SPACE 1\nPRETURN  LM    R2,R5,PRSAVE+4\n         L     R14,PRSAVE\n         BR    R14\n         SPACE 4\nPRLKAHED AH    R2,CURLINES\n         CH    R2,MAXLINES\n         BNHR  R14\n         MVC   CURLINES,=H'999'\n         BR    R14\n         EJECT\n         SPACE 1\nRETURN   CLOSE (PRINTDCB)\n         SPACE 1\n         TM    DCBBUFCB+3+(PRINTDCB-IHADCB),X'01'\n         BO    RETQUIT\n         FREEPOOL PRINTDCB\n         SPACE 1\nRETQUIT  CLI   HDNGLIST,X'FF'\n         BNE   RETSAVER\n         L     R1,HDNGLIST\n         LH    R2,0(R1)\n         LH    R0,CURPAGES\n         AH    R0,=H'1'\n         BAL   R14,CONVERT\n         LA    R3,CONVEDIT+12\n         SR    R3,R2\n         BCTR  R2,0\n         STC   R2,*+5\n         MVC   2(*-*,R1),0(R3)\n         SPACE 1\nRETSAVER DS    0H\n         L     R13,SAVEAREA+4\n         L     R15,RETCODE\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         MVI   12(R13),X'FF'\n         SPM   R14\n         BR    R14\n         SPACE 3\nABDUMP   OI    ABCODE,X'80'        SET DUMP FLAG\n         SPACE 1\nABEND    L     R1,ABCODE           PICK UP ABEND CODE\n         ABEND (1)\n         EJECT ,\nNEWPAGE  DC    AL1(EJECTIM)\nHEADERCC DC    AL1(SPACE3AP)\nVOLSERNO DS    CL6                 CURRENT VOLUME SERIAL\n         ORG   VOLSERNO\nHEADER DS 0CL95\n       DC C'DIRECT-ACCESS VOLUME LISTING UTILITY....            '\n       DC C'   PAS. VERSION--'\n       DC C'&SYSDATE'   8 CHARS\n       DC CL31' '\nHEADMID  EQU   HEADER+19\nPRDATE   DC    CL8'03/15/84'\n         DC    CL6'  DAY='\nPRDAY    DC    CL3'999'\nPRTIME   DC    CL7'  23:59',CL4' '\n         DC    CL5'PAGE '\nPAGENO   DC    CL4'9999'\n         SPACE 3\nHEAD1    DC    C'TABLE OF CONTENTS FOR VOLUME \"'\nHEAD1VOL DC    CL6'XXXXXX',C'\" ON DEVICE \"'\nHEAD1UCB DC    CL3'XXX',C'\" MOUNTED AS \"'\nHEAD1MT  DC    CL8'XXXXXXXX',C'/'\nHEAD1MTR DC    CL5'XXXXX',C'\"'\nHEAD1A   DC    A(HEAD1B)\n         DC    H'0'\nHEADER1  DC    AL1(SPACE0AP),CL19' ',CL26'DSNAME'\nHEADAT1A DC    C'SERIAL R/W  REFDT    CREDT    EXPDT   DSO RFM BLKSZ LRX\n               ECL KEY OP TRKAL TRKUS EX SECQU T'\nHEAD1B   DC    A(0)\n         DC    H'2'\nHEADER2  DC    AL1(SPACE2AP),44C'_',C' '\nHEADAT1B DC    C'______ ___ ________ ________ ________ ___ ___ _____ __X\n               ___ ___ __ _____ _____ __ _____ _'\n         SPACE 2\nHEAD2    DC    C'TRACK ALLOCATION MAP FOR VOLUME \"'\nHEAD2VOL DC    C'XXXXXX',C'\"'\nHEAD2A   DC    A(HEAD2B)\n         DC    H'0'\n         DC    AL1(SPACE0AP),CL22' '\n********************************** START *********** GDL-94\nHEAD2DAT DC    C'FIRST TRK   LAST TRK   FIRST    LAST   #TRKS  EX# '\n         DC    C'TYPE  '\n**********************************  END  *********** GDL-94\n         DC    CL44'DSNAME OR USAGE'\n         DC    CL13' '\nHEAD2B   DC    A(0)\n         DC    H'2'\n         DC    AL1(SPACE2AP),CL22' '\n********************************** START *********** GDL-94\nHEAD2UND DC    C'_________  _________  ______  ______  ______  ___ '\n         DC    C'____  '\n**********************************  END  *********** GDL-94\n         DC    44C'_'\n         DC    CL13' '\nPDSMSG   DC    CL19'DIRECTORY CONTAINS'\nPDSVAL1  DC    CL4'0000'\n         DC    CL18' MEMBERS AND USES '\nPDSVAL2  DC    CL4'0000'\n         DC    CL8' OF THE '\nPDSVAL3  DC    CL4'0000'\n         DC    CL39' DIRECTORY BLOCKS ALLOCATED, INCLUDING '\nPDSVAL4  DC    CL3'000'\n         DC    CL24' BYTES OF THE LAST BLOCK'\nPDSMSGLN EQU   *-PDSMSG\n         EJECT\nVTOCDCB  DCB   DDNAME=VOLUME01,                                        X\n               DSORG=PS,                                               X\n               MACRF=(R),                                              X\n               RECFM=FS,                                               X\n               KEYLEN=44,                                              X\n               BLKSIZE=96,                                             X\n               OPTCD=C,                                                X\n               NCP=NCPDFLT,                                            X\n               EXLST=JFCBAD,                                           X\n               EODAD=VTOCEOD,                                          X\n               SYNAD=SYNADXIT\n         SPACE 8\nPDSDCB   DCB   DDNAME=VOLUME01,                                        X\n               DSORG=PS,                                               X\n               MACRF=(R),                                              X\n               RECFM=F,                                                X\n               KEYLEN=8,                                               X\n               BLKSIZE=256,                                            X\n               EXLST=JFCBAD,                                           X\n               EODAD=PDSEOD,                                           X\n               SYNAD=SYNADXIT\n         SPACE 8\nPRINTDCB DCB   DDNAME=SYSPRINT,                                        X\n               DSORG=PS,                                               X\n               EROPT=ACC,                                              X\n               MACRF=(PM),                                             X\n               RECFM=FBM,                                              X\n               LRECL=133,                                              X\n               BLKSIZE=133\n         EJECT\nOPENLIST OPEN  (VTOCDCB,(INPUT)),MF=L\nOPENFLAG EQU   OPENLIST\nOPENUPDT EQU   X'04'\n         SPACE 2\nCLOSLIST CLOSE (VTOCDCB),MF=L\nCLOSFLAG EQU   CLOSLIST\nCLOSRERD EQU   X'10'\n         SPACE 2\n         READ  VTOCDECB,SF,VTOCDCB,CAMLIST,MF=L\n         SPACE 2\n         READ  PDSDECB,SF,PDSDCB,MF=L\n         SPACE 2\nENQVTOC  RESERVE (SYSVTOC,VOLSERNO,S,6,SYSTEMS),UCB=UCBADDR,MF=L\nENQFLAGS EQU   ENQVTOC+2\nENQSHAR  EQU   X'80'\n         SPACE 1\nSYSVTOC  DC    CL8'SYSVTOC'\n         EJECT\nDATEWORD DC    D'0'\nCONVDEC  DC    D'0'\nCONVEDIT DC    CL12' '\nCONVERTD DC    CL11' ',C' '\nCONVUNPK DC    CL12' '\nNOMAPDDS DC    C'JOBLIB  '\n         DC    C'STEPCAT '                P.A.S.\n         DC    C'JOBCAT  '                P.A.S.\n         DC    C'STEPLIB '\n         DC    C'SYSCHK  '\n         DC    C'PGM=*.DD'\n         DC    C'SYSIN   '\n         DC    C'SYSPRINT'\n         DC    C'SYSABEND'\n         DC    C'SYSUDUMP'\n         DC    C'SYSMDUMP'\n         DC    C'        '\nVOLDDNAM DC    C'VOLUME00'\n         ORG   *-2\nCURVOLNM DC    C'00'\nTIME     DC    F'0'\nPARMLIST DC    A(0)\nDDNMLIST DC    A(0)\nHDNGLIST DC    A(0)\nDDLSTPTR DC    A(0)\n         SPACE 1\nEXTRACT  EQU   *\nTIOTAD   DC    A(0)\nCOMPTR   DC    A(0)\n         SPACE 1\nTIOTADDD DC    A(0)\nPDSBLKAD DC    A(PDSBLOCK,PDSBLOCK+PDSBLKLN)\nCCHH     DC    F'0'\nBUFPTR   DC    A(0)\nHOOKSTRT DC    A(*)\nHOOKEND  DC    F'-1'\nDATNORMY DC    H'365',AL1(31,28,31,30,31,30,31,31,30,31,30,31)\nDATLEAPY DC    H'366',AL1(31,29,31,30,31,30,31,31,30,31,30,31)\nCORLEFT  DC    F'0'\nCORNEXT@ DC    A(0)\nCURBLK@  DC    A(*+4)\nCORFRST@ DC    A(0)\nCURLINES DC    H'999'\nMAXPAGES DC    H'9999'\nMAXLINES DC    H'60'               DEFAULT LINES PER PAGE\nCURPAGES DC    H'0'\nJFCBAD   DC    X'87',AL3(JFCB)\nRETCODE  DC    F'0'\nABCODE   DC    F'100'              ABEND CODE 100\nSAVEAREA DC    18F'0'\nCURVOL   DC    H'0'\nDDNAMLEN DC    H'0'\nNUMVOLS  DC    H'-1'\nNCPPARM  DC    AL2(NCPDFLT)\nTRAREA   DC    CL15' ',C' '\nEFFS     DC    44X'FF'\nLASTDS1  EQU   EFFS\nZEROES   DC    44X'00'\nPARMOPT1 DC    AL1(08)    SET DEFAULT TO NO OPTIONS\nPARMOPT2 DC    AL1(0)\nTRTABLE  EQU   *-240\n         DC    C'0123456789ABCDEF'\nSTARS    DC    C'*********'\nVOLSTAT  DC    X'00'\nNUMENT   DC    A(DT2MEN)\n         DC    0F'0'\nHOOKINIT DC    2XL4'00'      MUST MATCH EXTENT DSECT     GDL-94\n         DC    F'1'\n         DC    X'FF00'\n         DC    H'0'\n         DC    A(VOLABMSG)\n         DC    F'0'\n         DC    F'0'\n         EJECT\n         SPACE 3\nDEVTABLE DC    X'06',CL15'2305-1 DISK'\n*\n         DC    X'07',CL15'2305-2 DISK'\n*\n         DC    X'0F',CL15'3390 DISK PACK'    ADDED 9/6/91 GDL.\n*\n         DC    X'09',CL15'3330 DISK PACK'\n*\n         DC    X'0D',CL15'3330-II DISK'     ADDED 4/1/75  P.A.S.\n*\n         DC    X'0A',CL15'3340-35M DISK'   ADDED 5/4/75  P.A.S.\n*\n         DC    X'0B',CL15'3350 DISK PACK'  ADDED 01/10/77 G.D.F.\n*\n         DC    X'0E',CL15'3380 DISK PACK'  ADDED 03/23/82 D.A.K.\n*\nDEVTABND DC    X'00',CL7'UNKNOWN'\n         SPACE 1\nDEVENTLN EQU   16\n         EJECT\n         LTORG\n         SPACE 1\nVOLABMSG DC    CL44'  **** VOLUME LABEL ****'\nVTOCMSG  DC    CL44'  **** VOLUME TABLE OF CONTENTS ****'\n*FMT6MSG DC    CL44'SPLIT CYLINDER(S) ...'  NO LONGER VALID    GDL-94\n         EJECT\n*        CONSTANTS ADDED FOR INDEXED VTOCS     12/81\n         SPACE 1\nCVPL     CVAFDSM ACCESS=MAPDATA,                                       X\n               COUNT=NO,               DO NOT COUNT EXTENTS            X\n               MAP=VOLUME,             ACCESS VOLUME SPACE MAP         X\n               RTA4BYTE=YES,           RETURN IN RTA FORMAT   GDL-94   X\n               EXTENTS=DT2EDT02,       EXTENT TABLE ADDRESS   GDL-94   X\n               MF=L,                   LIST FORM OF MACRO              X\n               BRANCH=NO\n        SPACE  3\n        ORG  CVPL\nCVPLMAP ICVAFPL DSECT=NO\n         EJECT\nCVPL2    CVAFDSM ACCESS=MAPDATA,MAP=VTOC,COUNT=YES,CTAREA=FMT0ADDR,    X\n               MF=L\n         EJECT\nSTORAGES DS    0D\n         SPACE 3\nBUF      DC    CL133' '            OUTPUT PRINT LINE\n         SPACE 2\n         ORG   BUF+1\nL1       DS    0CL132\nL1DSNAME DS    CL44\n         DS    C\nL1SERIAL DS    CL6\n         DS    C\nL1SECUR  DS    CL3\n         DS    C\nL1REFDT  DS    CL8\n         DS    C\nL1CREDT  DS    CL8\n         DS    C\nL1EXPDT  DS    CL8\n         DS    C\nL1DSORG  DS    CL3\n         DS    C\nL1RECFM  DS    CL3\n         DS    C\nL1BLKSIZ DS    CL5\n         DS    C\nL1LRECL  DS    CL5\n         DS    C\nL1KEYLEN DS    CL3\n         DS    C\nL1OPTCD  DS    CL2\n         DS    C\nL1TRKAL  DS    CL5\n         DS    C\nL1TRKUS  DS    CL5\n********************************** START *********** SMA 3/88  CHANGED\nL1NOEPV  DS    CL3\n**********************************  END  *********** SMA 3/88  CHANGED\n         DS    C\nL1SECQU  DS    CL5\n         DS    C\nL1TYP    DS    CL1\n         SPACE 1\n         ORG   L1SERIAL\nL1LSTDT  DS    CL8\n         DS    C\nL1USCNT  DS    CL5\n         ORG   ,\n         EJECT\nPRSAVE   DS    5A\nDASAVE   DS    5A\n         DS    0D\nPDSBLOCK DS    2XL(PDSBLKLN)\nCAMLIST  DS    XL(CAMLSTLN)\n         SPACE 1\nSTART0   DS    0H                  START OF CORE ZEROED FOR EACH VOL\n         SPACE 1\nDEVTYPE  DS    6F\nUCBADDR  DS    A\nFIRSTDS1 DS    A\nFMT4AD   DS    A\nFMT5AD   DS    A\n*FMT6AD   DS    A                                    GDL-94\nFMT0ADDR DS    A                     DAK 3/82\n*FMT5TT   DS    H                                    GDL-94\n*FMT5CYLS DS    H                                    GDL-94\n         SPACE 1\nREBLOCK@ DS    F\nRENEXT@  DS    F\nREBLKSIZ DS    F\nRECOUNT  DS    F\nRENCP    DS    F\nREGETSIZ DS    F\n         SPACE 1\nFMXCOUNT DS    0H                  COUNT FIELDS MUST BE TOGETHER\n*                    INDEXED ACCESS KEEP ALL COUNTS IN ORDER  GDL-94\nFM0COUNT DS    H                NOT USED       GDL-94\nFM1COUNT DS    H\nFM2COUNT DS    H                NOT USED       GDL-94\nFM3COUNT DS    H                NOT USED       GDL-94\nFM4COUNT DS    H\nFM5COUNT DS    H                NOT USED       GDL-94\nFM6COUNT DS    H                NOT USED       GDL-94\n         SPACE 1\nAVAILCYL DS    H\nAVAILSPC DS    F                                    GDL-94\nAVAILEXT DS    H\nVTOCSIZE DS    H\nLOWTT    DS    F                                     GDL-94\nHIGHTT   DS    F                                     GDL-94\n         SPACE 1\nHOOKPTR  DS    F     THIS AREA MAPED BY EXTENT DSECT GDL-94\nHOOKLCCH DS    XL4         BEGINING CCHH OF EXTENT   GDL-94\nHOOKHCCH DS    XL4         ENDING CCHH OF EXTENT     GDL-94\nHOOKNTRK DS    F           NUMBER OF TRACKS IN EXT   GDL-94\nHOOKTYPE DS    X           TYPE RECORD               GDL-94\nHOOKSEQN DS    X     EXTENT SEQ NUMBER WITHIN FILE   GDL-94\n         DS    H        FOR ALIGNMENT NOT USED       GDL-94\nHOOKIDPT DS    A           ADDRESS OF DESCRIPTION    GDL-94\nHOOKLOTT DS    F           BEGINING TRACK OF EXTENT  GDL-94\nHOOKHITT DS    F           ENDING TRACK OF EXTENT    GDL-94\n         SPACE 1\nF1TRKAL  DS    F\nDEVTABPT DS    A                   POINTER TO CURRENT DEVTABLE ENTRY\nDEVCONV1 DS    H              NUM TRKS PER 256 CYL   GDL-94\nDEVCONV2 DS    H              NUM TRKS PER CYL       GDL-94\nDEVCONV3 DS    H              H'0'                   GDL-94\nDEVCONV4 DS    H              H'1'                   GDL-94\nTRKSPVOL DS    F              NUMBER OF TRKS PER VOL GDL-94\nTRKSPCYL DS    H              NUMBER TRKS PER CYL    GDL-94\nCRATRACK DS    H              REL TRACK ADDRESS OF VSAM CRA\nHWMOLD   DS    XL5\nHWMDS1   DS    XL5\nHWMNEW   DS    XL5\nHWMINDIC DS    X\nF5LARGST DS    H              LARGEST EXTENT IN CYL  GDL-94\nSYNADFLG DS    X\nOBCCHHR  DS    XL5\nBADDSTYP DS    C\nF5LARGTT DS    F            LARGEST FREE EXTENT IN TRACKS   GDL-94\n         SPACE 1\n         DS    0H\nVTOCTTR  DS    0XL3\nVTOCTT   DS    H\nVTOCR    DS    X\nVTOCMBB  DS    0XL3\nVTOCM    DS    X\nVTOCBIN  DS    H\nVTOCCCHH DS    XL4\nVTDSCBTR DS    H\n         SPACE 1\nEND0     DS    0H                  END OF CORE ZEROED FOR EACH VOL\nLENGTH0  EQU   END0-START0         AMOUNT TO BE ZEROED\n         SPACE 1\nNUMEXT   DS    H\n********************************** START *********** SMA 3/88\nWRKEXT   DS    H                   NUMBER OF EXTENTS LEFT      ADDED\nLSTEXT   DC    H'16'               LAST NUMBER OF EXTENTS      ADDED\nLISTEXT  DS    128A                EXTENT TABLE                CHANGED\n         DC    A(0)                END OF EXTENT TABLE         ADDED\n**********************************  END  *********** SMA 3/88\nPDSAVE   DS    6A\nPDSENTAD DS    A\nPDSBYTCT DS    H\nPDSBLKAL DS    H\nPDSBLKUS DS    H\nPDSMEMCT DS    H\nISAVE    DS    5A\nEXPFLAG  DS    X\nEXSAVE   DS    3A\nVTSAVE   DS    4A\nF1SAVE   DS    A\nF5SAVE   DS    6A\nHOSAVE   DS    4A\nDUSAVE   DS    A\n********************************** START *********** SMA 3/88  ADDED\nR3EXT    DS    A                   EXTENT TABLE POINTER SAVE AREA\nR3EXTHLD DS    A                   REGISTER 3 SAVE AREA\n**********************************  END  *********** SMA 3/88  ADDED\nINDXSAVE DS    A                                DAK 03/82\n         EJECT ,\n         IEFJFCBN\n         SPACE 1\nJFCB     EQU   INFMJFCB\n         SPACE 3\n         ORG   STORAGES\n         EJECT\n         SPACE 1\nINIT     DS    0H\n         L     R2,0(R1)\n         ST    R2,PARMLIST\n         LTR   R2,R2\n         BM    GETTIME\n         L     R2,4(R1)\n         ST    R2,DDNMLIST\n         LTR   R2,R2\n         BM    CHEKDDNM\n         L     R2,8(R1)\n         ST    R2,HDNGLIST\n         SPACE 1\n         LA    R2,0(R2)\n         LTR   R2,R2\n         BZ    CHEKDDNM\n         LH    R3,0(R2)\n         LA    R2,2(R2)\n         BAL   R14,PARMPARS\n         LTR   R0,R0\n         BNP   CHEKDDNM\n         CH    R0,=H'9999'\n         BH    CHEKDDNM\n         BCTR  R0,0\n         STH   R0,CURPAGES\n         MVI   HDNGLIST,X'FF'\n         SPACE 1\nCHEKDDNM TM    PARMLIST,X'80'\n         BO    GETTIME\n         L     R1,DDNMLIST\n         LH    R0,0(R1)\n         SH    R0,=H'8'\n         BM    GETTIME\n         OI    DDNMLIST,X'F0'\n         STH   R0,DDNAMLEN\n         MVC   DCBDDNAM+(PRINTDCB-IHADCB),2(R1)\n         SH    R0,=H'8'\n         BM    GETTIME\n         LA    R1,10(R1)\n         ST    R1,DDLSTPTR\n         OI    DDNMLIST,X'0F'\n         SPACE 1\nGETTIME  TIME  DEC\n         SRL   R0,4\n         ST    R0,TIME\n         MVC   PRTIME,=X'402120207A2020'\n         ED    PRTIME,TIME\n         ST    R1,DATEWORD+4\n         UNPK  TRAREA,DATEWORD+6(8)\n         TR    TRAREA,TRTABLE\n         MVC   PRDAY,TRAREA\n         SR    R2,R2\n         LA    R3,PRDATE\n         BAL   R14,DATEDIT\n         SPACE 1\n         OPEN  (PRINTDCB,(OUTPUT))\n         TM    DCBOFLGS+(PRINTDCB-IHADCB),DCBOFOPN\n         BNZ   *+8\n         BAL   R14,ABEND\n         MVI   BUF,C' '\n         MVC   BUF+1(L'BUF-1),BUF\n         SPACE 1\n         EXTRACT EXTRACT,FIELDS=(TIOT,COMM)\n         L     R1,TIOTAD\n         LA    R1,TIOENTRY-TIOT(,R1)\n         ST    R1,TIOTADDD\n         SPACE 1\n         MVC   BUF+10(21),=C'EXEC PARAMETER FIELD:'\n         L     R1,COMPTR\n         L     R1,COMCIBPT-COM(,R1)\nTESTCIB  LA    R1,0(,R1)\n         LTR   R1,R1\n         B     PARMEX                AXC   NEVER CHECK CIB\n         BZ    PARMEX                AXC   NEVER CHECK CIB\n         USING CIB,R1\n         CLI   CIBVERB,CIBSTART\n         BE    PARMCIB\n         L     R1,CIBNEXT\n         B     TESTCIB\n         SPACE 1\nPARMCIB  LA    R1,CIBDATLN\n         ST    R1,PARMLIST\n         DROP  R1\n         MVC   BUF+9(5),=C'START'\n         SPACE 1\nPARMEX   L     R2,PARMLIST\n         LH    R3,0(R2)\n         LA    R2,2(R2)\n         CH    R3,=H'99'\n         BL    PARMLNOK\n         MVC   BUF+30(28),=C' IS TOO LONG AND WAS IGNORED'\n         SR    R3,R3\n         B     PARMPRNT\n         SPACE 1\nPARMLNOK LTR   R1,R3\n         BZ    PARMPRNT\n         BCTR  R1,0\n         STC   R1,*+5\n         MVC   BUF+33(*-*),0(R2)\nPARMPRNT MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 1\nPARMLOOP BAL   R14,PARMPARS\n         TM    PARMOPT2,VOLSOPT\n         BO    PARMVOL2\n         TM    PARMOPT2,LNCNTOPT\n         BO    PARMLCT2\n         TM    PARMOPT2,NCPOPT\n         BO    PARMNCP2\n         CLI   PARMBUF,C' '\n         BE    PARMDONE\n         SPACE 1\n         LA    R0,12\n         LA    R1,PARMS\nPARMCOMP CLC   PARMBUF,0(R1)\n         BE    GOTPARM\n         BXH   R1,R0,PARMCOMP\n         SPACE 1\nGOTPARM  MVC   PARMVALS,8(R1)\n         MVC   *+8(2),10(R1)\n         B     *-*\n         SPACE 1\nPARMSET  SR    R15,R15\n         IC    R15,PARMVALS+1\n         LA    R15,PARMOPT1(R15)\n         SR    R0,R0\n         IC    R0,PARMVALS\n         CLI   PARMVALS,128\n         BH    PARMOFF\n         STC   R0,*+5\n         OI    0(R15),*-*\n         B     PARMLOOP\n         SPACE 1\nPARMOFF  STC   R0,*+5\n         NI    0(R15),*-*\n         B     PARMLOOP\n         SPACE 1\nDEBUGON  OI    CLOSLIST,CLOSRERD\n         B     PARMSET\n         SPACE 1\nDEBUGOFF NI    CLOSLIST,255-CLOSRERD\n         B     PARMSET\n         SPACE 1\nPDSON    L     R15,TIOTAD\n*        CLI   TIOCNJOB+3-TIOT(R15),C'$'    DELETED  4/1/75  P.A.S.\n*        BNE   PARMERR      DELETED  4/1/75   P.A.S.\n         B     PARMSET\n         SPACE 1\nRESETON  NI    ENQFLAGS,255-ENQSHAR\n         OI    CLOSLIST,CLOSRERD\n         B     PARMSET\n         SPACE 1\nRESETOFF OI    ENQFLAGS,ENQSHAR\n         NI    CLOSLIST,255-CLOSRERD\n         B     PARMSET\n         SPACE 1\nPARMVOL2 NI    PARMOPT2,255-VOLSOPT\n         LTR   R0,R0\n         BNP   PARMERR\n         CH    R0,=H'99'\n         BH    PARMERR\n         STH   R0,NUMVOLS\n         B     PARMLOOP\n         SPACE 1\nPARMLCT2 NI    PARMOPT2,255-LNCNTOPT\n         LTR   R0,R0\n         BNP   PARMERR\n         CH    R0,=H'999'\n         BNL   PARMERR\n         STH   R0,MAXLINES\n         B     PARMLOOP\n         SPACE 1\nPARMNCP2 NI    PARMOPT2,255-NCPOPT\n         LTR   R0,R0\n         BNP   PARMERR\n         CH    R0,=H'99'\n         BH    PARMERR\n         STH   R0,NCPPARM\n         B     PARMLOOP\n         SPACE 1\nPARMERR  MVI   BUF+10,C'\"'\n         MVC   BUF+11(8),PARMBUF\n         MVC   BUF+19(41),=C'\" IS AN ILLEGAL PARAMETER AND WAS IGNORED'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         B     PARMLOOP\n         SPACE 1\nPARMDONE OI    PARMOPT2,VOLSOPT\n         LH    R0,NUMVOLS\n         CH    R0,=H'-1'\n         BNE   PARMVOL#\n         NI    PARMOPT2,255-VOLSOPT\n         MVC   NUMVOLS,=H'99'\n         MVC   BUF+10(3),=C'ALL'\n         B     PARMVLPR\n         SPACE 1\nPARMVOL# BAL   R14,CONVERT\n         MVC   BUF+10(3),CONVEDIT+9\nPARMVLPR MVC   BUF+14(24),=C'VOLUME(S) WILL BE LISTED'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 1\n         CLC   NCPPARM,=H'1'\n         BNE   *+8\n         OI    PARMOPT2,NCPOPT\n         TM    PARMOPT1,LSTDTOPT\n         BZ    PARMDDCK\n         MVC   HEADAT1A(14),=C' LSTDT   USCNT'\n         MVC   HEADAT1B(14),=C'________ _____'\n         SPACE 1\nPARMDDCK TM    DDNMLIST,X'F0'\n         BNO   PARMHDCK\n         MVC   BUF+10(36),=C'AN INTERNAL DDNAME LIST WILL BE USED'\n         TM    DDNMLIST,X'0F'\n         BO    *+10\n         MVC   BUF+47(14),=C'FOR PRINT ONLY'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 1\nPARMHDCK CLI   HDNGLIST,X'FF'\n         BNE   PRTINFO      ADDED 4/1/75  P.A.S.  FOR 'HELP'\n         MVC   BUF+10(35),=C'AN INTERNAL PAGE COUNT WILL BE USED'\n         MVI   BUF,SPACE3AP\n*        BAL   R14,PRINT\n         SPACE 3\nPRTINFO  EQU   *\n         LA    R3,PRTINFOL  POINT TO INFO LISTING\n         LA    R2,16    NUMBER OF LINES TO PRINT\nPRTINFOA MVC   BUF+9(47),0(R3)  MOVE LINE TO BUFFER\n         MVI   BUF,SPACE1AP   INSERT CARRIAGE CONTROL\n         LA    R3,47(R3)  INCREMENT TO NEXT LINE\n*        BAL   R14,PRINT\n         BCT   R2,PRTINFOA GO AGAIN\n         MVI   BUF,SPACE3IM\n*        BAL   R14,PRINT\n         MVC   BUF+9(33),=C'*** OPERATING SYSTEM RUN ON .... '\n         MVI   BUF,SPACE3AP\n         L     R3,16  POINT TO CVT\n         LA    R3,116(R3)   POINT TO OPERATING SYS\n         TM    0(R3),X'40'  PCP\n         BNO   *+10\n         MVC   BUF+42(4),=C'PCP '\n         TM    0(R3),X'20'  MFT\n         BNO   *+10\n         MVC   BUF+42(4),=C'MFT '\n         TM    0(R3),X'10'  MVT\n         BNO   *+10\n         MVC   BUF+42(4),=C'MP65'\n         TM    0(R3),X'22'  VS1\n         BNO   *+10\n         MVC   BUF+42(4),=C'VS1 '\n         TM    0(R3),X'12'  VS2 REL 1 (SVS)\n         BNO   *+10\n         MVC   BUF+42(4),=C'SVS '\n         TM    0(R3),X'11'  VS2 REL 2+  (MVS)\n         BNO   *+10\n         MVC   BUF+42(4),=C'MVS '\n*        BAL   R14,PRINT\n         B     NEXTVOL\nPRTINFOL DC    C'**********  EXECUTION  PARM  VALUES  **********'\n         DC    C'*  MAP.....PRODUCE A TRACK MAP OF VOLUME      *'\n         DC    C'*  PDS.....LIST ALL PDS DIRECTORIES ON VOLUME *'\n         DC    C'*  ISAM....LIST ISAM REORG INFO FOR DATASETS  *'\n         DC    C'*  EXT.....LIST THE EXTENTS OF THE DATASETS   *'\n         DC    C'*  DUMP....LIST (HEX) ALL DSCB''S ON VOLUME    *'\n         DC    C'*  EMPTY...LIST ONLY DATASETS THAT ARE EMPTY  *'\n         DC    C'*  MODEL...WILL ONLY LIST \"MODEL DSCB''S\"      *'\n         DC    C'*  SDUMP...LIST (HEX) FORMAT 4 AND 5 DSCB''S   *'\n         DC    C'*  VOLS....ONLY USE DDNAMES OF \"VOLUME--\",    *'\n         DC    C'*      FORMAT--\"VOLS=X\", WHERE \"X\" IS MAX #   *'\n         DC    C'*  JDATE...LIST CREATE/EXPIRE DATE IN JULIAN  *'\n         DC    C'*                                             *'\n         DC    C'** ALL DASD ALLOCATED TO STEP WILL BE LISTED  *'\n         DC    C'**  EXCEPT SYSTEM DD''S...SYS--, STEP--, ETC.  *'\n         DC    C'*****  DO NOT USE A DDNAME OF \"SYS000\"  *******'\n         EJECT\n         SPACE 3\nPARMPARS SR    R0,R0\n         MVC   PARMBUF,=CL8' '\n         LA    R4,PARMBUF\n         SPACE 1\nPRMLOOK  CH    R3,=H'0'\n         BNHR  R14\n         CLI   0(R2),C' '\n         BE    PRMIGNOR\n         CLI   0(R2),C','\n         BE    PRMRETRN\n         CLI   0(R2),C'='\n         BE    PRMRETRN\n         LTR   R0,R0\n         BM    PRMNOT#\n         TM    0(R2),X'F0'\n         BNO   PRMNOT#\n         IC    R15,0(R2)\n         N     R15,=F'15'\n         CH    R15,=H'10'\n         BNL   PRMNOT#\n         MH    R0,=H'10'\n         AR    R0,R15\n         B     PRMSHIFT\n         SPACE 1\nPRMNOT#  LH    R0,=H'-1'\nPRMSHIFT C     R4,=A(PARMBUF+L'PARMBUF)\n         BNL   PRMIGNOR\n         MVC   0(1,R4),0(R2)\n         LA    R4,1(R4)\nPRMIGNOR LA    R2,1(R2)\n         BCTR  R3,0\n         B     PRMLOOK\n         SPACE 1\nPRMRETRN LA    R2,1(R2)\n         BCTR  R3,0\n         BR    R14\n         EJECT ,\n         SPACE 3\nPARMS    DS    0H\n         DC    C'LINECNT ',AL1(LNCNTOPT),AL1(1),S(PARMSET)\n         DC    C'NCP     ',AL1(NCPOPT),AL1(1),S(PARMSET)\n         DC    C'MODEL   ',AL1(MODELOPT),AL1(1),S(PARMSET)\n         DC    C'VOLS    ',AL1(VOLSOPT),AL1(1),S(PARMSET)\n         DC    C'EMPTY   ',AL1(EMPTYOPT),AL1(0),S(PARMSET)\n         DC    C'NOEMPTY ',AL1(255-EMPTYOPT),AL1(0),S(PARMSET)\n         DC    C'DEBUG   ',AL1(DEBUGOPT),AL1(1),S(DEBUGON)\n         DC    C'NODEBUG ',AL1(255-DEBUGOPT),AL1(1),S(DEBUGOFF)\n         DC    C'DUMP    ',AL1(DUMPOPT),AL1(0),S(PARMSET)\n         DC    C'NODUMP  ',AL1(255-DUMPOPT),AL1(0),S(PARMSET)\n         DC    C'EXT     ',AL1(EXTNTOPT),AL1(0),S(PARMSET)\n         DC    C'NOEXT   ',AL1(255-EXTNTOPT),AL1(0),S(PARMSET)\n         DC    C'ISAM    ',AL1(ISAMOPT),AL1(1),S(PARMSET)\n         DC    C'NOISAM  ',AL1(255-ISAMOPT),AL1(1),S(PARMSET)\n         DC    C'JDATE   ',AL1(JDATEOPT),AL1(1),S(PARMSET)\n         DC    C'NOJDATE ',AL1(255-JDATEOPT),AL1(1),S(PARMSET)\n         DC    C'LSTDT   ',AL1(LSTDTOPT),AL1(0),S(PARMSET)\n         DC    C'NOLSTDT ',AL1(255-LSTDTOPT),AL1(0),S(PARMSET)\n         DC    C'MAP     ',AL1(MAPOPT),AL1(0),S(PARMSET)\n         DC    C'NOMAP   ',AL1(255-MAPOPT),AL1(0),S(PARMSET)\n         DC    C'PDS     ',AL1(PDSOPT),AL1(0),S(PDSON)\n         DC    C'NOPDS   ',AL1(255-PDSOPT),AL1(0),S(PARMSET)\n         DC    C'RESET   ',AL1(RESETOPT),AL1(1),S(RESETON)\n         DC    C'NORESET ',AL1(255-RESETOPT),AL1(1),S(RESETOFF)\n         DC    C'SDUMP   ',AL1(SDUMPOPT),AL1(0),S(PARMSET)\n         DC    C'NOSDUMP ',AL1(255-SDUMPOPT),AL1(0),S(PARMSET)\nPARMBUF  DC    C'        ',AL1(0),AL1(0),S(PARMERR)\n         SPACE 1\nPARMVALS DS    XL2\n         EJECT ,\n         LTORG\n         SPACE 1\n         ORG   ,\n         EJECT\nUCB      DSECT\n         IEFUCBOB\n         EJECT\nTIOT     DSECT\n         IEFTIOT1\n         EJECT\n         SPACE 3\n         DCBD  DSORG=BS,DEVD=DA\n         EJECT\n         SPACE 3\nDS1      DSECT\n         IECSDSL1 (1)\nDS1FDAD  DS    XL8                 FULL DA ADDRESS OF F1 DSCB\nDS1F3PTR DS    A                   @ OF F3 DSCB, IF ANY\nDS1F1PTR DS    A                   @ OF NEXT F1 DSCB\nDS1LEN   EQU   *-DS1\n         SPACE 1\n         ORG   DS1SYSCD-1\nDS1SECLV DS    XL1\n         ORG   DS1SYSCD+13\nDS1LSTDT DS    XL3\nDS1USCNT DS    XL2\n         EJECT ,\n         SPACE 3\nDS2      DSECT\n         IECSDSL1 (2)\nDS2FDAD  DS    XL8                 FULL DA ADDRESS OF F2 DSCB\nDS2F3PTR DS    A                   POINTER TO FMT3 DSCB, IF ANY\nDS2LEN   EQU   *-DS2\n         EJECT\n         SPACE 3\nDS3      DSECT\n         IECSDSL1 (3)\nDS3FDAD  DS    XL8                 FULL DA ADDRESS OF F3 DSCB\nDS3F2PTR DS    A                   POINTER TO FMT2 DSCB, IF ANY\nDS3LEN   EQU   *-DS3\n         EJECT\n         SPACE 3\nDS4      DSECT\nDS4KEYID DS    XL44\n         IECSDSL1 (4)\nDS4FDAD  DS    XL8\nDS4LEN   EQU   *-DS4\n*\n         ORG   DS4NOEXT+2\nDS4SECLV DS    XL1                 PRIV LEVEL REQ. FOR VTOC ACCESS\n         ORG   DS4DEVDB+9          VSAM OWNERSHIP BIT  X'80'\nDS4VSAM  DS    XL1                 USED TO PREVENT MULTIPLE OWNERS\n         EJECT\n         SPACE 3\nDS5      DSECT\n         IECSDSL1 (5)\n*DS5FDAD  DS    XL8                               GDL-94\n*DS5F5PTR DS    A                                 GDL-94\nDS5LEN   EQU   *-DS5\n         SPACE 3\n*DS6      DSECT             NO LONGER SUPPORTED   GDL-94\n*        IECSDSL1 (6)                             GDL-94\n*DS6FDAD  DS    XL8                               GDL-94\n*DS6F6PTR DS    A                                 GDL-94\n*DS6LEN   EQU   *-DS6                             GDL-94\n         EJECT\n         SPACE 3\nCOM      DSECT\n         IEZCOM\n         EJECT ,\n         SPACE 3\nCIB      DSECT\n         IEZCIB\n         EJECT\n         SPACE 1\nEXTENT   DSECT ,          MAPS HOOK AREA        GDL-94\nEXTPTR   DS    A\nEXTLCCHH DS    XL4\nEXTHCCHH DS    XL4\nEXTNOTRK DS    F                                GDL-94\nEXTTYPE  DS    X\nEXTSEQNO DS    X\n         DS    H         ADDED FOR ALIGNMENT    GDL-94\nEXTIDPTR DS    A\nEXTLOTT  DS    XL4                              GDL-94\nEXTHITT  DS    XL4                              GDL-94\nEXTNTLEN EQU   *-EXTENT\n         SPACE 1\nEXLINE   DSECT\nEXLLPARN DS    C\nEXLFCC   DS    CL4\nEXLFPRD  DS    C\nEXLFHH   DS    CL4\n         DS    2C\nEXLLCC   DS    CL4\nEXLLPRD  DS    C\nEXLLHH   DS    CL4\n         DS    2C\nEXLFTT   DS    CL6                                  GDL-94\n         DS    2C\nEXLLTT   DS    CL6                                  GDL-94\n         DS    2C\nEXLNOTRK DS    CL6                                  GDL-94\nEXLRPARN DS    C\n********************************** START *********** SMA 3/88  CHANGED\n         DS    C\nEXLSEQNO DS    CL3                 EXPANDED TO ALLOW FOR OVER 99 EXTS\n         DS    C\n********************************** END T *********** SMA 3/88  CHANGED\nEXLTYPE  DS    CL4\n         DS    2C\nEXLDSNAM DS    CL44\nEXLSPLIT EQU   EXLDSNAM+33\n         SPACE 1\nPDS      DSECT\nPDSHKEY  DS    CL8\nPDSCOUNT DS    H\n         SPACE 1\nPDSENTRY EQU   *\nPDSNAME  DS    CL8\nPDSTTRP  DS    XL3\nPDSINDIC DS    B\nPDSALIAS EQU   X'80'\nPDS#TTRS EQU   X'60'\nPDSUSERH EQU   X'1F'\nPDSUSERD DS    0X\n         SPACE 3\nDISKMAP  CSECT\n         SPACE 1\n*FM5ID    DC    XL4'0505050505'         FMT 5 FIELD    GDL-94\n         ICVEDT02 DSECT=NO,ENTRY=128                   GDL-94\n         END   DISKMAP            BROTHER, YOU ASKED FOR IT\n//L.SYSLMOD  DD DSN=SSU.LINKLIB,DISP=SHR\n//L.SYSPRINT DD SYSOUT=X\n//SYSIN    DD *\n    NAME SSVTOC(R)\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT260/FILE260.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT260", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}