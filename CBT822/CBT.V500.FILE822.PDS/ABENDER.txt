* ------------------------------------------------------------------- *
*                                                                     *
*  THIS SUBROUTINE INPUTS A PARM TO BE USED TO ISSUE A USER ABEND.    *
*  THE USER ABEND CODE IS PASSED TO THIS PROGRAM IN THE EXECUTION     *
*  PARAMETER.   IF THE EXECUTION PARAMETER IS INVALID, THE PROGRAM    *
*  WILL USE '1116' AS THE USER ABEND CODE.                            *
*                                                                     *
*  THE SUBROUTINE MAY BE INVOKED IN EITHER 24-BIT OR 31-BIT MODE,     *
*  EITHER ABOVE OR BELOW THE 16-MEG LINE.                             *
*                                                                     *
*  THE SUBROUTINE IS RE-ENTRANT.                                      *
*                                                                     *
*  THIS SUBROUTINE IS DESIGNED TO BE CALLED FROM JCL OR FROM ANOTHER  *
*  PROGRAM (THE LINKAGE WORKS EITHER WAY):                            *
*                                                                     *
*  PARAMETER LIST ON ENTRY TO "ABENDER":                              *
*     R1    => ADDRESS OF PARAMETER LIST                              *
*            1 ... A 2-BYTE LENGTH VALUE (LENGTH OF PARM) S/B=4       *
*            2 ... A 4-BYTE USER ABEND CODE IN EBCDIC (0000-4095)     *
*                                                                     *
*  EXAMPLE CALL FROM ASSEMBLER (DYNAMIC CALL):                        *
*                                                                     *
*     LOAD  EP=ABENDER           Load program "ABENDER"               *
*     LR    R15,R0               Load  the entry addr                 *
*     LA    R1,PARMLENG          Get Parm List Address                *
*     ST    R1,PARMADDR                                               *
*     LA    R1,PARMADDR          Point to parameter list              *
*     BASSM R14,R15                                                   *
*     DELETE EP=ABENDER          Delete program "ABENDER"             *
*                                                                     *
*     PARMADDR    DS    F                                             *
*     PARMLENG    DC    H'4'                                          *
*     ABENDCOD    DC    ZL4'1024'    (Must be between 0000 and 4095)  *
*                                                                     *
*  EXAMPLE CALL FROM COBOL (DYNAMIC CALL):                            *
*                                                                     *
*     CALL ABENDER-PROGAM   USING  AP-PARMS.                          *
*                                                                     *
*     01  ABENDER-PROGRAM     PIC X(8)  VALUE 'ABENDER '.             *
*     01  AP-PARMS.                                                   *
*         03  AP-PARM-LENGTH  PIC S9(4) COMP  VALUE +4.               *
*         03  AP-ABEND-CODE   PIC 9(4)        VALUE 1024.             *
*                                                                     *
*  PROGRAM RESTRICTIONS:                                              *
*                                                                     *
*     THE ABEND CODE PASSED TO THIS PROGRAM MUST HAVE VALUES BETWEEN  *
*     0000 AND 4095.                                                  *
*                                                                     *
*  PROGRAM DEFAULTS:                                                  *
*                                                                     *
*     IF THE ABEND CODE PASSED TO THIS PROGRAM IS INVALID FOR ANY     *
*     REASON, THE PROGRAM WIlL USE CODE '1116' AS THE USER ABEND CODE.*
*                                                                     *
*  REGISTER USAGE:                                                    *
*            R2   WORK REGISTER                                       *
*            R3   WORK REGISTER                                       *
*            R4   WORK REGISTER                                       *
*            R5   UNUSED                                              *
*            R6   SAVE AREA BACKWARD LINK                             *
*            R7   PARAMETER LIST ADDRESS                              *
*         R8-R10  UNUSED                                              *
*            R11  UNUSED                                              *
*            R12  BASE REGISTER                                       *
*            R13  SAVE AREA                                           *
*                                                                     *
* ------------------------------------------------------------------- *
ABENDER  CSECT
ABENDER  AMODE ANY
ABENDER  RMODE ANY
         SAVE  (14,12),,ABENDER_ASSEMBLED_ON_&SYSDATE._&SYSTIME
         LR    R12,R15              Load entry address
         USING ABENDER,R12          Declare entry base
         LR    R7,R1                Preserve passed parmlist address
         LR    R6,R13               Store SAVEAREA Backward link
         L     R3,=A(STORSIZE)      Size of storage to get and clear
         STORAGE OBTAIN,LENGTH=(R3),LOC=(RES)
         ST    R1,8(,R13)           Set SAVEAREA Forward link
         LR    R13,R1               Address of obtained area
         USING STORAREA,R13         Addressability to obtained area
         ST    R6,4(,R13)           Set SAVEAREA Backward link
INITOBTN DS    0H                  Initialize the obtained storage area
         LR    R0,R13               Address of target of move (obtnd)
         L     R3,=A(STORSIZE)      Length of the target of move
         XR    R14,R14             From address (irrelevant with len=0)
         XR    R15,R15              Pad/Length to propagate in odd reg
         MVCL  R0,R14          Propagate binary zeroes in obtained area
**********************************************************************
*   Pick up the passed Abend Code - 4 bytes EBCDIC Zoned Decimal
*   This program can be called from a Rexx exec (or via jcl
*   directly) or from another program as a subroutine call.
*   Determine the caller's method of calling ABENDER.
*   Macro HOWCALLD will determine how this program was called.
**********************************************************************
         L     R4,0(,R7)
         LR    R1,R7               Restore R1
         HOWCALLD PARMCALL=PARMCALL , How was I called? Subr or Exec?
         B     PACKCODE             I was called as a subroutine
PARMCALL DS    0H
         CLC   0(2,R4),=H'4'       Abend Code must be 4 bytes EBCDIC
         BNE   INVLPARM            Invalid abend code passed
         CLC   2(4,R4),=CL4'0000'  Abend Code must be between 0000-4095
         BL    INVLPARM            Invalid abend code passed
         CLC   2(4,R4),=CL4'4095'  Abend Code must be between 0000-4095
         BNH   SKIPLL              Valid abend code passed
INVLPARM DS    0H
         L     R4,F1116            Load Default User Abend Code
         B     ABENDIT
SKIPLL   DS    0H
         LA    R4,2(,R4)           Point to the Abend Code (past ll)
PACKCODE DS    0H
         PACK  DOUBLE,0(4,R4)      Pack the Abend Code
         CVB   R4,DOUBLE           Convert Abend Code to binary
ABENDIT  DS    0H
         O     R4,X80              Initialize User Abend Code
         LR    R2,R13              Pointer to storage area
         LA    R3,STORSIZE         Work area size
*
         ABEND (R4)                ABEND with UXXX (passed as parm)
*
* If you think you will get to this point, you are sadly mistaken ...
*
RETURN   DS    0H
         L     R13,4(,R13)          Restore Caller's SAVEAREA address
         STORAGE RELEASE,LENGTH=(R3),ADDR=(R2)
         L     R14,12(,R13)         Restore Return Address with Amode
         LM    R0,R12,20(R13)       Restore caller's registers
         BSM   0,R14                Return to caller in caller's Amode
*
**********************************************************************
*    STATIC STORAGE FOLLOWS
**********************************************************************
            DS    0F
F1116       DC    F'1116'           Default user abend code
X80         DC    X'80000000'       Indicate User Abend
            LTORG
**********************************************************************
*    DYNAMIC STORAGE FOLLOWS  (GETMAINED AREA)
**********************************************************************
STORAREA    DSECT ,                  Reentrant storage
SAVEAREA    DS    20F
DOUBLE      DS    D                  CVD/CVB Work Area
STORSIZE    EQU   *-STORAREA
            YREGS ,
            END
