         TITLE 'JUL2GREG - CONVERT JULIAN DATE TO GREGORIAN DATE'
***********************************************************************
*                                                                     *
*  This program inputs a seven (7) digit Julian Date (YYYYDDD) and    *
*  converts it to a Gregorian Date (YYYYMMDD) returned as a parm.     *
*                                                                     *
*  INPUT  PARM => JULIAN DATE    (YYYYDDD)  7 CHARACTERS              *
*  OUTPUT PARM => GREGORIAN DATE (YYYYMMDD) 8 CHARACTERS              *
*                                                                     *
*  Leap Year Calculation Algorithm:                                   *
*                                                                     *
*  Rules:                                                             *
*                                                                     *
*    1) A year that is evenly divisible by 400 IS a Leap Year.        *
*    2) A year that is evenly divisible by 100 IS NOT a Leap Year.    *
*    3) A year that is evenly divisible by   4 IS a Leap Year.        *
*                                                                     *
*    (The rules are processed in this sequence.)                      *
*                                                                     *
*  Registers Used:                                                    *
*                                                                     *
*  R2     => Work Register                                            *
*  R3     => Number of Days                                           *
*  R4     => Work Register                                            *
*  R5     => Branching Register                                       *
*  R7     => Address of Julian Date Passed as Input                   *
*  R8     => Address of Gregorian Date Returned as Output             *
*  R13    => Save Area Pointer                                        *
*                                                                     *
*  Return Codes from JUL2GREG:                                        *
*                                                                     *
*  0      => Successful call to JUL2GREG                              *
* 12      => Invalid Julian Date Passed as a parameter                *
*                                                                     *
*    Attributes:  REENTRANT, REUSEABLE, AMODE 31, RMODE ANY           *
*                                                                     *
***********************************************************************
*        HOUSEKEEPING                                                 *
***********************************************************************
JUL2GREG CSECT
JUL2GREG AMODE 31
JUL2GREG RMODE ANY
         SAVE  (14,12),,JUL2GREG_ASSEMBLED_ON_&SYSDATC._&SYSTIME
         LR    R12,R15              Load entry address
         USING JUL2GREG,R12         Declare entry base registers
         LM    R7,R8,0(R1)          Preserve passed parmlist addresses
         LR    R6,R13               Store SAVEAREA Backward link
         LA    R3,STORSIZE          Size of storage to get and clear
         STORAGE OBTAIN,LENGTH=(R3),LOC=(RES)
         ST    R1,8(,R13)           Set SAVEAREA Forward link
         LR    R13,R1               Address of obtained area
         USING STORAREA,R13         Addressability to obtained area
         LR    R2,R13               Address of target of move (obtnd)
         LA    R3,STORSIZE          Length of the target of move
         XR    R14,R14             From address (irrelevant with len=0)
         XR    R15,R15              Pad/Length to propagate in odd reg
         MVCL  R2,R14          Propagate binary zeroes in obtained area
         ST    R6,4(,R13)           Set SAVEAREA Backward link
**********************************************************************
*        This routine edits the julian date passed
**********************************************************************
         MVC   0(8,R8),BLANK8       Initialize Gregorian Date Returned
         MVC   FEBDAYS,F28          Indicate Not a Leap Year (Default)
         SR    R0,R0
         ST    R0,RETCODE           Load Default Return Code = 0
         MVC   YEAR,0(R7)           Load the Gregorian Year
         LA    R2,7                 Initialize Counter
         LR    R4,R7                Point to Julian Date Parameter
         BAS   R5,EDITJULN          Edit the Passed Julian Date
         SR    R0,R0
         PACK  DOUBLE,0(4,R7)       Pack the Julian Year
         CVB   R1,DOUBLE            Convert Julian Year to binary
         D     R0,F400              Divide Year by 400 (yr/400)
         LTR   R0,R0                Check Remainder for Zero
         BNZ   CKCENTRY             Check For Even Century Year
         MVC   FEBDAYS,F29          Indicate Leap Year
         B     GETMTHDY
CKCENTRY DS    0H
         CLC   2(2,R7),CENT00       Check Even Century Year (yr/100)
         BE    GETMTHDY             Yes - Then not a Leap Year
         PACK  DOUBLE,0(4,R7)       Pack the Julian Year
         SR    R0,R0
         CVB   R1,DOUBLE            Convert Julian Year to binary
         D     R0,F4                Divide Year by 4 (yr/4)
         LTR   R0,R0                Check Remainder for Zero
         BNZ   GETMTHDY             Not a Leap Year
         MVC   FEBDAYS,F29          Indicate Leap Year
GETMTHDY DS    0H
         PACK  DOUBLE,4(3,R7)       Pack the Julian Days
         CVB   R3,DOUBLE            Convert Julian Days to binary
CHKJAN   DS    0H
         C     R3,F31               Does the Date Fall in January ?
         BH    CHKFEB               No
         MVC   MONTH,JAN            Load Gregorian Month January
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
CHKFEB   DS    0H
         S     R3,F31               Subtract Previous Month's Days
         C     R3,FEBDAYS           Does the Date Fall in February ?
         BH    CHKMAR               No
         MVC   MONTH,FEB            Load Gregorian Month February
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
CHKMAR   DS    0H
         S     R3,FEBDAYS           Subtract Previous Month's Days
         C     R3,F31               Does the Date Fall in March ?
         BH    CHKAPR               No
         MVC   MONTH,MAR            Load Gregorian Month March
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
CHKAPR   DS    0H
         S     R3,F31               Subtract Previous Month's Days
         C     R3,F30               Does the Date Fall in April ?
         BH    CHKMAY               No
         MVC   MONTH,APR            Load Gregorian Month April
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
CHKMAY   DS    0H
         S     R3,F30               Subtract Previous Month's Days
         C     R3,F31               Does the Date Fall in May ?
         BH    CHKJUNE              No
         MVC   MONTH,MAY            Load Gregorian Month May
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
CHKJUNE  DS    0H
         S     R3,F31               Subtract Previous Month's Days
         C     R3,F30               Does the Date Fall in June ?
         BH    CHKJULY              No
         MVC   MONTH,JUNE           Load Gregorian Month June
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
CHKJULY  DS    0H
         S     R3,F30               Subtract Previous Month's Days
         C     R3,F31               Does the Date Fall in July ?
         BH    CHKAUG               No
         MVC   MONTH,JULY           Load Gregorian Month July
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
CHKAUG   DS    0H
         S     R3,F31               Subtract Previous Month's Days
         C     R3,F31               Does the Date Fall in August ?
         BH    CHKSEPT              No
         MVC   MONTH,AUG            Load Gregorian Month August
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
CHKSEPT  DS    0H
         S     R3,F31               Subtract Previous Month's Days
         C     R3,F30               Does the Date Fall in September ?
         BH    CHKOCT               No
         MVC   MONTH,SEP            Load Gregorian Month September
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
CHKOCT   DS    0H
         S     R3,F30               Subtract Previous Month's Days
         C     R3,F31               Does the Date Fall in October ?
         BH    CHKNOV               No
         MVC   MONTH,OCT            Load Gregorian Month October
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
CHKNOV   DS    0H
         S     R3,F31               Subtract Previous Month's Days
         C     R3,F30               Does the Date Fall in November ?
         BH    CHKDEC               No
         MVC   MONTH,NOV            Load Gregorian Month November
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
CHKDEC   DS    0H
         S     R3,F30               Subtract Previous Month's Days
         C     R3,F31               Does the Date Fall in December ?
         BH    BADJULDT             No - Bad Julian Date Passed
         MVC   MONTH,DEC            Load Gregorian Month December
         BAS   R5,GETGDAYS          Obtain Gregorian Days
         B     LOADGREG
EDITJULN DS    0H                   Edit Julian Date
         CLI   0(R4),C'0'
         BL    BADJULDT             Non-Numeric Julian Date Digit
         CLI   0(R4),C'9'
         BH    BADJULDT             Non-Numeric Julian Date Digit
         LA    R4,1(R4)
         BCT   R2,EDITJULN
         CLC   4(3,R7),C366
         BH    BADJULDT             Invalid Julian Date (Days > 366)
         CLC   4(3,R7),C000
         BNER  R5                   Have Valid Julian Date Passed
BADJULDT DS    0H                   Invalid Julian Date Passed
         LA    R1,12
         ST    R1,RETCODE           Return with RC=12
         B     RETURN
GETGDAYS DS    0H
         CVD   R3,DOUBLE
         UNPK  DAYSWORK,DOUBLE+6(3)
         MVC   DAY,DAYSWORK+1       Load Gregorian Days
         BR    R5
LOADGREG DS    0H
         MVC   0(GREGL,R8),GREG_DATE  Load the Gregorian Date
RETURN   DS    0H
         L     R4,RETCODE           Pick up return code
         LR    R2,R13               Pointer to storage area
         LA    R3,STORSIZE          Size of storage to free
         L     R13,4(,R13)          Restore Caller's SAVEAREA address
         STORAGE RELEASE,LENGTH=(R3),ADDR=(R2)
         L     R14,12(,R13)         Restore R14
         LR    R15,R4               Load return code
         LM    R0,R12,20(R13)       Restore caller's registers
         BSM   0,R14                Return to caller in caller's Amode
**********************************************************************
*    STATIC STORAGE FOLLOWS
**********************************************************************
BLANK8      DC    CL8'        '
CENT00      DC    CL2'00'           Check Year for Even Century Year
F4          DC    F'4'
F28         DC    F'28'
F29         DC    F'29'
F30         DC    F'30'
F31         DC    F'31'
F400        DC    F'400'
C366        DC    CL3'366'
C000        DC    CL3'000'
JAN         DC    CL2'01'
FEB         DC    CL2'02'
MAR         DC    CL2'03'
APR         DC    CL2'04'
MAY         DC    CL2'05'
JUNE        DC    CL2'06'
JULY        DC    CL2'07'
AUG         DC    CL2'08'
SEP         DC    CL2'09'
OCT         DC    CL2'10'
NOV         DC    CL2'11'
DEC         DC    CL2'12'
            LTORG
**********************************************************************
*    DYNAMIC STORAGE FOLLOWS  (GETMAINED AREA)
**********************************************************************
STORAREA    DSECT ,                Reentrant Storage
SAVEAREA    DS    20F
FULL        DS    F                General workarea
DOUBLE      DS    D                General workarea
RETCODE     DS    F                Return code
FEBDAYS     DS    F                Number of days in Feb for this year
GREG_DATE   DS    0F               Gregorian Date to be Returned
YEAR        DS    CL4              (YYYYMMDD)
MONTH       DS    CL2
DAY         DS    CL2
GREGL       EQU   *-GREG_DATE      Length of Gregorian Date Returned
DAYSWORK    DS    CL5
*
STORSIZE    EQU   *-STORAREA
*
            YREGS ,                Register Equates
            END
