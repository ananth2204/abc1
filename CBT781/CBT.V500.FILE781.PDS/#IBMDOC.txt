Note:  This is a transcription of the IBM documentation PDF for
----   the RACSEQ command, as distributed by IBM, under the general
       category of "sample programs".  Please see the disclaimer
       at the end of this documentation, to note that it is permitted
       to reproduce this documentation here.


                              RACSEQ Command

Author: Bruce R. Wells
z/OS Security Server RACF
brwells@us.ibm.com


        Change Date       Change Description
        -----------       ------------------
        05/18/2006        Introduction of RACSEQ
        07/19/2006        Add the source file to the package
                          in TSO TRANSMIT format


Overview

RACSEQ is a sample TSO command which demonstrates, in a hopefully
useful manner, the profile extract functions of the R_admin RACF
callable service (IRRSEQ00).  The command accepts a class name and a
profile name and displays the contents of every field in the profile.
It differs from LISTUSER and LISTGRP in that the output is displayed
in a simplified and somewhat architected manner which lends itself
more easily to consumption by programs; for example, by a REXX exec
using the OUTTRAP function.

You should read the R_admin documentation in the RACF Callable
Services publication for an overview of the extract functions.  The
field names displayed by RACSEQ are defined in Appendix A of this
publication.  The extract functions were introduced in z/OS Version 1
Release 7.  For an online z/OS R7 version, go to

http://publibz.boulder.ibm.com/cgi-bin/bookmgr_OS390/BOOKS/ICHZD160/
     CCONTENTS?SHELF=ICHZBK60&DN=SA22-7691-08&DT=20050626220222

The assembler source code of RACSEQ may also be useful as a general
guide to calling IRRSEQ00, since many of the parameters are used for
other functions of the interface.

Syntax

RACSEQ ÝCLASS(class-name)¨ PROFILE(profile-name)
CLASS - Specifies the class in which the desired profile exists.
        The supported values are USER,
        GROUP, and CONNECT. If omitted, the default is USER.
PROFILE - Specifies the profile name to be displayed.  For the
        CONNECT class, the profile name consists of a user ID and a
        group name separated by a period (for example,
        "IBMUSER.SYS1").  The good news is that profile-name is
        case-sensitive, and so lower-case profiles like the irrcerta
        USER profile can be displayed.  The bad news is that
        profile-name is case-sensitive, so you must remember to enter
        it in upper case for the vast majority of cases (no pun
        intended).  If you forget to upper-case the profile name, you
        will receive a message indicating that the IRRSEQ00 return
        combination was 4/4/4.

Authorization Required

The code runs under the authority of the user issuing the command.
It does not need to be APF authorized, or in the list of authorized
TSO commands.  Depending on how your installation is protecting the
R_admin callable service, you may need READ access to the
IRR.RADMIN.LISTUSER or IRR.RADMIN.LISTGRP resources in the FACILITY
class.

Example

RACSEQ CLASS(GROUP) PROFILE(RAPTORS)
Displaying profile RAPTORS in class GROUP. Segments:02
Segment: BASE Fields:08
SUPGROUP:SYS1
CREATDAT:04/18/06
OWNER :IBMUSER
TERMUACC:FALSE
DATA :BIRDS OF PREY KNOW THEY'RE COOL
Repeat field:SUBGRPCT Subfields:01 Occurrences:0004
SUBGROUP:HAWKS
---------------------------------------------
SUBGROUP:FALCONS
---------------------------------------------
SUBGROUP:EAGLES
---------------------------------------------
SUBGROUP:OWLS
---------------------------------------------
Repeat field:CONNECTS Subfields:02 Occurrences:0007
GUSERID :BRUCE
GAUTH :CONNECT
---------------------------------------------
GUSERID :KESTREL
GAUTH :USE
---------------------------------------------
GUSERID :OSPREY
GAUTH :USE
---------------------------------------------
GUSERID :REDTAIL
GAUTH :JOIN
---------------------------------------------
GUSERID :SAWWHET
GAUTH :CREATE
---------------------------------------------
GUSERID :HARRIER
GAUTH :USE
---------------------------------------------
GUSERID :SNOWY
GAUTH :USE
---------------------------------------------
UNIVERSL:FALSE
Segment: OMVS Fields:01
GID :4

* The first line echoes the class name and profile name, and
  indicates how many segments to expect.

* Each segment is identified in a message which also indicates
  how many fields to expect within the segment.  The fields within
  that segment are displayed, and then the next segment appears.

* Each field name is identified with its value.

* The value for boolean fields is either TRUE or FALSE.

* If the field is a repeat field, special processing occurs.  First,
  the repeat field name is displayed, along with an indication of the
  number of occurrences, and the number of subfields within each
  occurrence.  Each subfield for an occurrence is displayed, followed
  by a separator line.  The entire repeat field construct counts as a
  single field within the number of fields displayed for a segment.
  See Callable Services for more detail on repeating fields.

Package Contents

This package contains
* This README file

* racseq.asm.txt - the source code for the command (for casual
  browsing on the web site.  Use the following file to actually
  install the code.)

* racseq.asm.xmit - the source code in TSO XMIT format

Installation Instructions

* Download the assembler source code (racseq.asm.xmit) to your
  workstation using a browser.  Then transfer it to your z/OS system
  using FTP in binary mode.  You must transfer it into a fixed-block
  80 data set.  For example, on Windows, this can be accomplished by
  specifying the following FTP client command before initiating the
  transfer quote site lrecl=80 recfm=fb blksize=0

* From a TSO session on z/OS, issue the RECEIVE command to
  unpackage the file.  The syntax of the RECEIVE command is:

RECEIVE INDATASET(dsname)

RECEIVE prompts you for a target data set name.

Note: If you receive a message from the RECEIVE command that
      indicates the input data set is in an incorrect format,
      verify that:
- The files were FTP'd in binary format
- The input files are in fixed block format

* Assemble the source.

* Link-edit the object code.  Note that you have to include the
  IBM-supplied IRRSEQ00 stub module into your program.  This stub
  is located in SYS1.CSSLIB.  For example:

//SEQLINK EXEC PGM=IEWL,PARM='NCAL,LIST,LET,XREF,SIZE=(300K,30K)'
//SYSPRINT DD SYSOUT=*
//SYSUT1 DD DSN=&SYSUT1,UNIT=SYSDA,SPACE=(1024,(50,20))
//SYSLMOD DD DISP=SHR,DSN=PROD.LINKLIB
//AOSBN DD DSN=MY.RACSEQ.OBJ,DISP=SHR
//CSSLIB DD DSN=SYS1.CSSLIB,DISP=SHR
//SYSLIN DD *
INCLUDE AOSBN(RACSEQ)
INCLUDE CSSLIB(IRRSEQ00)
ENTRY RACSEQ
NAME RACSEQ(R)
/*

Messages

Apart from normal command output, RACSEQ may issue a number of
error messages.

R_admin Error! SAFrc x - RACFrc y - RACFreason z

Explanation: The return code combinations are all documented in
   Callable Services.  A couple of the more likely combinations you
   may encounter are

* 4/4/4 - Profile does not exist.  Perhaps you forgot to enter
   the profile name in upper case.

* 8/8/24 - You are not authorized to display the profile

Error! Unsupported class!
Explanation: Self-explanatory.

Syntax: RACSEQ CLASS(class) PROFILE(profile)

Explanation: This is the command syntax displayed when you enter
   a syntactically incorrect command, such as by omitting the
   PROFILE keyword.

IKJPARS error! Return Code n
Explanation: An unexpected error occurred from the TSO parse service.

Disclaimers, etc.

This program contains code made available by IBM Corporation on an AS
IS basis.  Any one receiving this program is considered to be licensed
under IBM copyrights to use the IBM-provided source code in any way he
or she deems fit, including copying it, compiling it, modifying it,
and redistributing it, with or without modifications, except that it
may be neither sold nor incorporated within a product that is sold.
No license under any IBM patents or patent applications is to be
implied from this copyright license.  The software is provided
"as-is", and IBM disclaims all warranties, express or implied,
including but not limited to implied warranties of merchantibility or
fitness for a particular purpose.  IBM shall not be liable for any
direct, indirect, incidental, special or consequential damages arising
out of this agreement or the use or operation of the software.

A user of this program should understand that IBM cannot provide
technical support for the program and will not be responsible for any
consequences of use of the program.

