{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011358000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 470288, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE164.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 470288, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE164.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x08\\x07'", "DS1TRBAL": "b'vx'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x1f\\x00\\x08\\x01 \\x00\\x01\\x00\\t'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$INDEX": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "        INDEX TO MEMBERS OF THIS FILE\n\n DOCNOTES   -   DOCUMENTATION (GENERAL)\n COOKBOOK   -   IN-HOUSE DOC AND HOW TO CREATE THE VOLUME\n RESCUE     -   THE MACRO\n RESQASM    -   ASM JCL TO POP THE MACRO\n RESQJCL    -   AN EXAMPLE OF THE JOBS CREATED\n RESQSUB    -   SUBMIT JOBS THROUGH INTRDR\n\n                                      RICK STECKER\n                                      (301) 965-5627\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COOKBOOK": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "  RESCUE                                     3/26/90    R. Stecker\n\n   The RESCUE system is our Contingency operating system. This operating\n  system is a subset of the Program Products on the Production system,\n  created by copying the Production system's libraries. The major\n  advantage to the RESCUE system is that the entire system resides on\n  a single volume. This enables us to IPL the RESCUE system if a problem\n  develops with the Production system that disables it. This could be\n  caused by any number of hardware and/or software problems.\n   The RESCUE system is not designed as an alternative Production system.\n  Many of the normal Program Products are not supported in the facility\n  that creates the RESCUE system (CA-1, Top Secret, M204, COBOL, SAS,\n  etc.). In addition, system performance under a normal load would be\n  poor, at best. The RESCUE system is designed as a vehicle to fix the\n  problem(s) with the Production system and get it back on the air.\n\n\n  -Creating the RESCUE system\n\n   The RESCUE system is created by assembling a macro (RESCUE) that\n  creates the JCL for 5 jobs. These jobs are subsequently run to create\n  the complete RESCUE system including Master Catalog, Page datasets,\n  JES2 datasets, other system datasets and the libraries. The process\n  includes the initialization of the volume, so any changes made to a\n  prior version of RESCUE will be lost unless they are incorporated in\n  the creation process. The process to (re)create the RESCUE system is\n  as follows:\n\n   1). Review the JCL to assemble the macro, along with member DOCNOTES\n      in the macro library to see if any changes are required.  The JCL\n      to assemble the macro is member RESQASM in this library (COMB.XA.\n      GENLIB).  The macro and other documentation reside in\n      'COMB.RESCUE.CNTL'.  Hopefully, the macro variables provide enough\n      flexibility to prevent changes to the macro. The RESCUE members in\n      PARMLIB, PROCLIB, etc. (those ending in RQ, RSQ, & RESQ) should\n      also be reviewed to make sure that they will still work,\n      considering the changes that have occurred since the last time the\n      RESCUE system was created.  It may be a good idea to compress\n      'COMB.RESCUE.CNTL' at this time to prevent a D37 when you assemble\n      the macro, as it punches RESQJCL (approx. 1300 lines) into the\n      macro library.\n\n   2). Submit the JCL to assemble the macro (RESQASM).  This runs fairly\n      quickly.  It creates (or overlays) member RESQJCL in the macro\n      library, and prints the member just created. Both steps of this\n      job should end with cond code 0000.\n\n   3). Edit RESQJCL and remove the quotes in the job accounting info of\n      the 5 RESCUEx jobs. So far, I don't know an easy way to get the\n      macro to punch multiple fields into the job accounting without\n      using quotes, and the JCL interpreter doesn't like them one bit,\n      so they have to be removed prior to submitting the jobs.\n\n   4). Submit member RESQSUB in the macro library. This submits RESQJCL\n      via the internal reader. This is required due to STEPCATs in some\n      of the jobs (that are commented out by our TSO SUBMIT exit).  This\n      will put RESCUE0-4 on the input queue in HOLD (provided you coded\n      &TYPRUN that way when you popped the macro).\n\n   5). Release each job, one at a time. They must run in order, and the\n      prior job must be done before the next job is released. Sometimes\n      they appear out of order while on the input queue, so make sure\n      to release them 0,1,2,3,4. Some notes on the RESCUEx jobs:\n      -All steps of all jobs should end with 0000. Investigate any other\n       return code.\n      -If you have any problems with the RESCUEx jobs (unusual return\n       codes, etc), it is usually easier to start over by submitting\n       RESQSUB (and then running RESCUE0,1,etc.).  Some of the RESCUEx\n       jobs do things that prevent them (or a previous RESCUEx job) from\n       being rerun.\n      -RESCUE0 inits the volume and requires a response from ICKDSF. If\n       COMMAND=Y is used (and I recommend it for us), you will not need\n       to dismount or mount the volume.\n      -RESCUE2 does all of the IEBCOPYs and some other setup. This job\n       usually takes about 8-10 min.\n      -RESCUE4 is a verification and backup job. If you back up the\n       volume, the job takes about 10-15 min. RESCUE4 also produces\n       output that should be checked VERY carefully (or you may not be\n       able to IPL RESCUE).  PLEASE NOTE that you can, if necessary,\n       make changes to the PROCs, PARMs, etc.  on RESCUE, but by this\n       time the backup tape has been created, and the changes will\n       disappear anyway the next time RESCUE0-4 are run, so if there are\n       any changes, I recommend that you change them in the Production\n       system's libraries and start over with RESQSUB.  Check the\n       following:\n       +IEASYS00 is printed. Check each parameter, especially those that\n        call in another member of PARMLIB at IPL time. A member list of\n        RESCUE's PARMLIB is included in RESCUE4, so you can verify that\n        the members exist. You may want to browse them to make sure that\n        they are OK.\n       +IEACMD00 is printed. Verify that it issues the appropriate\n        commands.\n       +The JES2 proc is printed. Make sure that you have brought all of\n        the datasets in the proc with you, and check the INIT deck\n        (//HASPPARM DD) to be sure all is well with it.\n       +The VTAM proc is printed. Verify all datasets, as above. COMTEN\n        loads are intentionally excluded.\n       +VTAM0 is slightly different than the one used in production,\n        since we did not include 'OCSE.XA.PARMLIB'. Verify that the\n        appropriate commands are issued.\n       +The logon proc, $RESCUE is printed. The proc was kept short to\n        help insure that we can at least log on. It executes the CLIST\n        'RESQISPF', which has most of the 'ALLOCs' for ISPF in it. This\n        CLIST is in 'IPO88D.CMDPROC'. Make sure that all datasets in it\n        are included. I may try to enhance RESCUE in the future to build\n        this based on the products included. For now, though, you must\n        check it (especially if DSN's and/or products change).\n       +The VTAM start parms, ATCSTR00, are printed from VTAMLST. This\n        allows us to start VTAM with the same command we use in\n        production. Verify that the CONFIG (ATCCONxx) exists (a member\n        list of VTAMLST is included), and that other parms look OK.\n       +Check the VTOC listing(s). The short one is nice to verify that\n        all the datasets you think you included are on the volume, and\n        to make sure that they are all in 1 extent. The longer one can\n        be used if more detailed info is needed.\n       +Verify that the backup was successful.\n\n   6). You're now ready to IPL.\n\n\n  -IPLing the RESCUE system\n\n   The RESCUE system IPL's very much like the production system with the\n  exception that fewer things are started, and some things must be\n  started manually, since we don't have TSSAUTO. To IPL:\n\n  1) At the 'SYSTEM' console:\n    PRESS:    ATTN\n\n  2) The command line of the console will display: 'ATTN FLAG SET'\n              If a System Activity Display was active, the above will\n              be followed by 'SYSTEM ACTIVITY DISPLAY ENDED BY OPERATOR\n              REQUEST'\n     KEY: F OPRCTL\n    PRESS: ENTER\n\n  3) When the 'OPERATOR CONTROL' menu is displayed:\n     KEY: O6\n    PRESS: ENTER\n\n  4) When the area in the lower right corner of the System Console\n    displays 'PSW2= 00000000 00000000':\n     KEY: L1\n    PRESS: ENTER\n\n  5) When the cursor is positioned under the field following\n    '1-UNIT ADR/T':\n     KEY: the address of the RESCUE volume, preceded by a '0' (4 chars)\n    PRESS: ENTER\n\n  6) When the command line displays 'CURSOR INPUT ACCEPTED. OPERATION\n    COMPLETED':\n     KEY: O7\n    PRESS: ENTER - This starts the IPL.\n\n  7) At the Operator Console:\n    The console will display: 'IEA101A SPECIFY SYSTEM PARAMETERS ....'\n\n    A) If this is the first IPL of this iteration of the RESCUE system:\n      KEY: R 00,CLPA\n      PRESS: ENTER\n\n    B) If the RESCUE system has been IPL'ed before (and you're not\n      adding anything to it that would require a CLPA):\n      KEY: R 00\n      PRESS: ENTER\n\n  8) The console will display: 'IEA347A SPECIFY MASTER CATALOG PARAMETER'\n     KEY: R 00\n    PRESS: ENTER\n\n  9) The console will display: '$HASP426 SPECIFY OPTIONS - JES2 SP ....'\n\n    A) If this is the first IPL of this iteration of the RESCUE system:\n      KEY: R 00,COLD,FORMAT\n      PRESS: ENTER\n      The console will display: 'xx,$HASP441 REPLY 'Y' TO CONTINUE\n          INITIALIZATION OR 'N' TO TERMINATE'\n      KEY: R xx,Y   -where xx is the reply number associated with\n          the $HASP441 message\n      PRESS: ENTER\n      The console will display: '$HASP400 ENTER REQUESTS'\n      KEY: $S\n      PRESS: ENTER\n\n    B) If this iteration of the RESCUE system has been IPL'ed before:\n      KEY: R 00,WARM,NOREQ\n      PRESS: ENTER\n\n 10)  The console will display: '$HASP099 ALL AVAILABLE FUNCTIONS\n          COMPLETE'\n     KEY: S VTAM\n    PRESS: ENTER\n    KEY: S VTAM0\n    PRESS: ENTER\n\n 11) The console will display 2 messages:\n      A)'xx, IST051A ENTER VTAM START PARAMETERS' and\n      B)'xx, REPLY U WHEN VTAM IS ACTIVE OR Z TO CANCEL THIS JOB'\n     KEY: R xx    -where xx is the reply number associated with the\n                   IST051A message\n    PRESS: ENTER\n\n 12) The console will display 'IST020I VTAM INITIALIZATION COMPLETE'\n     KEY: R xx,U  -where xx is the reply number associated with the\n                   message regarding VTAM being active\n    PRESS: ENTER\n\n 13) The console will display: '$HASP395 VTAM0 ended'\n     KEY: D A,L\n    PRESS: ENTER   - Verify that the proper tasks are active\n    JES2, VTAM, LLA, RMF, TSO\n\n 14) KEY: D NET,ID=S0LOC2\n    PRESS: ENTER   - Verify that S0LOC2 is active\n\n 15) You should now be able to logon to TSO\n\n\n  -Logging on to the RESCUE system\n\n   The local controller is the only one made active. Other VTAM access\n  must be handled individually and only if necessary. Therefore, unless\n  you go through such an exercise, our terminals and those in the\n  Computer room will be the only ones available. To Logon, use your\n  normal logon sequence with the following changes on the LOGON screen:\n  1) Your password will be RESCUE\n  2) You must change PROCEDURE to $RESCUE\n  3) If you have a COMMAND, blank it out.\n\n   This will bring up the 'CBIPO MASTER APPLICATION MENU'. Some of the\n  products listed may not have been brought over to RESCUE, so don't be\n  surprised if you attempt to go to SMP/E (or something else) and get an\n  ISPF error or ABEND.  The important things (PDF, SDSF, etc.) should\n  work if you have included them.\n   From here, you shouldn't need me anymore.\n\n\n  -Additional notes\n\n   Each iteration of the RESCUE system must be test IPL'ed to be sure\n  that it works.\n   Even if RESCUE will not IPL when you need it (due to problems on\n  itself), the backup tape enables you to do a single Stand-Alone\n  Restore to have a system that will IPL.\n   Even though many of our other products are not included, if there is\n  a need for them, you have several ways of getting them. Since most of\n  the rest of the DASD farm will probably be okay, you can either copy\n  what you need over to RESCUE or just catalog the required datasets\n  (NONVSAM only) in RESCUE's catalog (with 3.2, 3.4, ISMF, etc.).\n   The same applies to PROCS in 'OCSE.PROCLIB'. Copy them into one of\n  the PROCLIBs that RESCUE knows about. This won't affect the production\n  system.\n   If necessary, the various user catalogs can be IMPORTed to RESCUE's\n  Master Catalog. However, ALIASes must be defined individually, and you\n  must be careful since some datasets that are in user catalogs on the\n  Production system are in the Master Catalog under RESCUE (like the\n  ISPF profiles). This is not insurmountable, but be aware of it. It may\n  be easier to locate the desired datasets and catalog them in RESCUE's\n  Master Catalog (NONVSAM only).\n   If ISMF is included, this is a better way to find datasets than 3.4,\n  since you can specify things like 'STOR*' for a volume name, and it\n  will search all STORxx volumes. If you're not already friendly with\n  ISMF, get to know it better. As time goes on, IBM will be providing\n  much of their Storage Management support via ISMF.\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DOCNOTES": {"ttr": 523, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "                           RESCUE\n                A ONE-PACK OPERATING SYSTEM\n\n                                          RICK STECKER\n                                          SYNECTICS FOR MGMT DECISIONS\n                                          (301) 965-5627 (INSTALLATION)\n                                          (703) 528-2772 (MAIN OFFICE)\n\n   THIS FACILITY WAS OBTAINED FROM FILE 22 OF THE CBT TAPE. THIS IS A\n  MODIFIED VERSION OF THAT MACRO.\n   THE ORIGINAL MACRO HAS BEEN MODIFIED EXTENSIVELY TO YIELD THE\n  FOLLOWING RESULTS:\n  - SUPPORT FOR MVS/XA 2.2.0.\n  - ABILITY TO INCLUDE/EXCLUDE CBIPO LIBRARIES, MVS/DITTO, ISMF,\n    SDSF, A PROGRAM PRODUCT LINKLIB,AND A COMTEN FRONTEND.\n  - SUPPORT FOR 5 TSO USERS FROM THE SOURCE SYSTEM.\n  - ABILITY TO SELECT/CHANGE DSN PREFIXES FOR CBIPO, SDSF, ISPF, PDF,\n    AND THE PROGRAM PRODUCT LIBRARIES.\n  - USE OF IDCAMS WHENEVER POSSIBLE TO SIMPLIFY THE CONTINUATION OF\n    CONTROL STATEMENTS WHEN USING MACRO VARIABLES (NO 'X' REQUIRED\n    IN COL. 72 OR CONTINUATION IN COL. 16)\n  - A FIFTH JOB HAS BEEN ADDED THAT PRODUCES INFORMATION TO HELP YOU\n    VERIFY THAT THE PROCS, PARMS, ETC. ARE IN ORDER, AND ALLOWS BACKUP\n    OF THE RESCUE VOLUME WITH EITHER DF/DSS OR FDR (OR NOT AT ALL).\n\n  FUNCTION\n\n   THE FUNCTION OF THIS FACILITY IS TO PROVIDE AN OPERATING SYSTEM THAT\n  CAN BE USED TO RECOVER FROM CATASTROPHIC PROBLEMS WITH YOUR NORMAL\n  SYSTEM. SINCE ALL OF THE RESOURCES REQUIRED TO IPL ARE ON 1 VOLUME,\n  THE EXPOSURE TO HARDWARE PROBLEMS IS MINIMIZED. ADDITIONALLY, A BACKUP\n  TAPE OF THE VOLUME PUTS YOU NO MORE THAN A SINGLE RESTORE (STAND-ALONE\n  IF NECESSARY) AWAY FROM AN IPL.\n   BEING A 1 VOLUME SYSTEM, PERFORMANCE WILL BE ATROCIOUS. IF YOU USE\n  THIS SYSTEM ONLY TO FIX THE PROBLEM(S) WITH YOUR NORMAL SYSTEM AND\n  LIMIT IT'S AVAILABILITY TO THOSE FIXING THE PROBLEM, IT MAY NOT BE\n  NOTICEABLE.\n\n  OPERATION\n\n   THE RESCUE MACRO PUNCHES JCL TO CREATE THE OPERATING SYSTEM. THE JOBS\n  CREATED BY THE MACRO ARE THEN RUN TO INIT THE VOLUME, DEFINE A MASTER\n  CATALOG, DEFINE THE VSAM DATASETS, BUILD THE CATALOG, COPY THE\n  LIBRARIES FROM THE SOURCE SYSTEM, SETUP THE PARMLIB, SETUP THE\n  PROCLIB, SETUP VTAMLST, COPY AND SETUP TSO USERS IN UADS, CREATE THE\n  SYSCATLG POINTER IN THE NUCLEUS, FORMAT THE DUMP DATASETS, FORMAT THE\n  SMF MAN FILES, FORMAT LOGREC, LIST CRITICAL PDS MEMBERS THAT CAN\n  AFFECT THE ABILITY TO IPL, RENAME ALL THE TARGET DATASETS TO THE SAME\n  NAME AS ON THE TARGET SYSTEM, PRINT A VTOC OF THE PACK, AND BACK THE\n  RESCUE VOLUME UP TO TAPE (WHEW|).\n\n   THE MACRO CAN BE ASSEMBLED AS-IS, IF DESIRED. HOWEVER, BEFORE THE\n  JOBS WILL RUN SUCCESSFULLY, SEVERAL MEMBERS OF LIBRARIES ON THE SOURCE\n  SYSTEM MUST BE IN PLACE AND SEVERAL MACRO VARIABLES SHOULD BE\n  VERIFIED. SEE USAGE NOTES, BELOW.\n\n   ONCE YOU GET EVERYTHING YOU NEED (YOU MAY NEED TO MODIFY THE MACRO\n  FOR ONE REASON OR ANOTHER), SAVE THE JCL THAT POPS THE MACRO SO THAT\n  YOU CAN RECREATE THE RESCUE SYSTEM WHEN NECESSARY (AFTER MAINTENANCE,\n  A NEW VERSION OF A PRODUCT, ETC.).\n\n  VERIFICATION\n\n   THE LAST JOB OF THE PROCESS PRINTS SOME OF THE MORE CRITICAL ITEMS\n  THAT CAN AFFECT YOUR ABILITY TO IPL (IEASYS00, JES2 PROC, VTAM PROC,\n  ETC.). THIS GIVES YOU THE ABILITY TO REVIEW YOUR RESCUE SYSTEM PRIOR\n  TO THE FIRST IPL. THIS JOB ALSO PROVIDES THE ABILITY TO BACK THE\n  RESCUE PACK UP TO TAPE.\n\n   EACH TIME YOU (RE)CREATE THE RESCUE SYSTEM, IT SHOULD BE IPL'ED TO\n  MAKE SURE THAT YOU'VE GOT WHAT YOU THINK YOU'VE GOT. THE IPL WILL\n  REQUIRE:\n   - CLPA\n   - JES2 COLD-START\n\n  USAGE NOTES\n\n   1. BEFORE THE JOBS WILL RUN SUCCESSFULLY, SEVERAL THINGS MUST BE IN\n     PLACE ON THE SOURCE SYSTEM.  SOME THOUGHT WAS GIVEN TO CREATING\n     THESE THINGS IN THE RESCUE MACRO, BUT THERE ARE TOO MANY VARIABLES\n     (AT LEAST FOR NOW).\n    A). THE FOLLOWING MEMBERS MUST RESIDE IN SYS1.PROCLIB.\n      -JES2RESQ- THIS MEMBER WILL BE RENAMED TO 'JES2'. MODIFY AS\n                NECESSARY TO INCLUDE ONLY THE DATASETS YOU ARE COPYING\n                TO THE RESCUE VOLUME. POINT IT TO A INIT DECK THAT YOU\n                HAVE MODIFIED FOR THE SAME PURPOSE (NO DUPLEXING, ETC.)\n      -VTAMRESQ- THIS MEMBER WILL BE RENAMED TO 'VTAM'. AS ABOVE,\n                MODIFY IT TO MEET YOUR RESCUE ENVIRONMENT.\n      -VTAM0RSQ- THIS MEMBER WILL BE RENAMED TO 'VTAM0'. THIS PROC IS\n                USED TO START VTAM APPLICATIONS AFTER VTAM IS UP.\n    B). THE FOLLOWING MEMBERS MUST RESIDE IN SYS1.PARMLIB.\n      -IEASYSRQ- THIS MEMBER WILL BE RENAMED TO 'IEASYS00'. IT SHOULD\n                POINT TO OTHER 'RESCUE' MEMBERS THAT ARE DIFFERENT FROM\n                THE SOURCE SYSTEM (APF LIST, LINK LIST, PAGE DATASETS,\n                SMF PARM, COMMNDXX, ETC.). CREATE THESE OTHER MEMBERS AS\n                NECESSARY.\n      -IEACMDRQ- THIS MEMBER WILL BE RENAMED TO 'IEACMD00'. MODIFY IT IF\n                NECESSARY. IF NOT, IT CAN BE A DUPLICATE OF IEACMD00\n    C). THE FOLLOWING MEMBERS MUST RESIDE IN SYS1.VTAMLST.\n      -ATCSTRRQ- THIS MEMBER WILL BE RENAMED TO 'ATCSTR00'. MODIFY IT IF\n                NECESSARY/DESIRED TO BRING VTAM UP THE WAY YOU WANT IT\n                IN THE RESCUE ENVIRONMENT. IT SHOULD POINT TO THE\n                MEMBERS (ATCCONXX, ETC.) THAT YOU WANT.\n\n   2. DASD SPACE - THIS VERSION (UNMODIFIED) REQUIRES ABOUT 550 CYLS OF\n     3380 SPACE, SO IT WILL FIT ON A 3380-A. FOR THE MOST PART, THE\n     LIBRARIES ARE ALLOCATED BASED ON THE SIZE AT MY INSTALLATION. I\n     RECOMMEND THAT YOU REVIEW THESE SPACE REQUIREMENTS FOR YOUR SITE.\n     ONE WAY TO DO THIS IS TO SORT OUT ALL THE MEMBERS, MACRO VARIABLES,\n     ETC. AND RUN THE JOBS. IF YOU'RE CLOSE, THE JOBS WILL RUN, AND YOU\n     CAN REVIEW THE SHORT VTOC LISTING PRODUCED BY RESCUE4 FOR DSN'S\n     IN MULTIPLE EXTENTS. IF NOT, ONE OF THE LOAD#99 STEPS WILL ABEND.\n     THE LIBRARIES ARE ALLOCATED IN STEP 'ALLOC' OF RESCUE2.\n\n   3. MAKE SURE THAT YOU HAVE A TSO LOGON PROC THAT WILL WORK IN THE\n     RESCUE ENVIRONMENT. THE PROC IS ADDED TO UADS DURING THE RESCUE\n     PROCESS, AND IS PRINTED IN THE VERIFICATION JOB.\n\n   4. REVIEW THE MACRO VARIABLES TO SELECT THE PRODUCTS AND/OR DATASETS\n     THAT YOU WANT COPIED FROM THE SOURCE SYSTEM. THE DEFAULTS AND THE\n     FUNCTION OF EACH VARIABLE IS LISTED BELOW.\n\n    - JOBNAME=RESCUE - THE JOBS GENERATED BY THE MACRO WILL BEGIN WITH\n                THIS VALUE, AND HAVE 0,1,2,3, OR 4 APPENDED TO IT. DON'T\n                DEFINE IT LONGER THAN 7 CHARS.\n    - JOBCLASS=A - THE CLASS OF THE 5 RESCUE JOBS.\n    - JOBACCT='ACCTING,INFO' - THE JOB ACCOUNTING INFO FOR THE RESCUE\n                JOBS. SEE MISC. NOTES, BELOW.\n    - JOBPROGM=PROGRAMMER - THE PROGRAMMER NAME FIELD OF THE JOB CARD.\n                DON'T USE QUOTES OR SPACES - TRY DASHES (-).\n    - JOBMSGCL=X - MSGCLASS FOR THE RESCUE JOBS.\n    - NOTIFY=SYS1 - NOTIFY FOR THE RESCUE JOBS. CAN BE NULLIFIED.\n    - TYPRUN=, - FOR THE RESCUE JOBS. 'HOLD' IS A GOOD IDEA IF YOU\n                SUBMIT THE ENTIRE MEMBER.\n    - CATALOG=CATALOG.RESCUE - THE MASTER CATALOG NAME FOR THE RESCUE\n                SYSTEM. SEE MISC. NOTES, BELOW.\n    - COMMAND=Y - IF YOU HAVE PGM=COMMAND. THE RESCUE VOLUME WILL BE\n                VARIED OFF, ON, & MOUNTED WHEN NECESSARY. ELSE 'N'.\n    - CMDPROC='SYS1.CMDPROC' - THE TSO CLIST LIBRARY THAT YOU NEED.\n    - MASTRCAT=CATALOG.MVSICFM.VMVSCAT - THE SOURCE SYSTEM'S MASTER\n                CATALOG.\n    - MASTRPW=MASTER - THE SOURCE SYSTEM'S MASTER CATALOG PASSWORD. ALSO\n                BECOMES RESCUE'S MASTER PASSWORD.\n    - MCATVOL=MVSCAT - SOURCE SYSTEM'S MASTER CATALOG VOLUME.\n    - NCP=N - 'Y' INCLUDES NCP DATASETS. SEE MISC. NOTES, BELOW.\n    - COMTEN=Y - INCLUDES THE COMTEN LOADLIB.\n    - C10LIB=OCSE.COMLOAD - THE DSN OF THE COMTEN LOADLIB.\n    - IPLTXT1=SYS1.SAMPLIB(IPLRECS) - BOOTSTRAP RECORDS.\n    - IPLTXT2=SYS1.SAMPLIB(IEAIPL00) - IPL TEXT.\n    - VOLUME=RESCUE - VOLSER OF THE RESCUE VOLUME.\n    - DEVT=3380 - MUST BE A REAL DEVICE TYPE. USED FOR BOTH SOURCE &\n                TARGET VOLUMES, AND FOR SYSCATLG POINTER FLAGS.\n    - OWNER=RESCUE - OWNERID IN THE VARIOUS DEFINES & ICKDSF.\n    - ICF=Y - TYPE OF MASTER CATALOG TO DEFINE. SEE MISC. NOTES, BELOW.\n    - CBIPO=Y - INCLUDES CBIPO LIBRARIES. SEE MISC. NOTES, BELOW.\n    - IPOPRE=IPO1 - THE DSN PREFIX FOR THE CBIPO LIBRARIES.\n    - RACF=Y - INCLUDES THE RACF DATASET. SEE MISC. NOTES, BELOW\n    - DITTO=Y - INCLUDES MVS/DITTO LIBRARIES.\n    - ISMF=Y - INCLUDES ISMF LIBRARIES.\n    - SDSF=Y - INCLUDES SDSF LIBRARIES.\n    - ISFPRE=ISF.V1R1M0 - DSN PREFIX FOR SDSF LIBRARIES.\n    - ISPPRE=ISP.V2R3M0 - DSN PREFIX FOR ISPF LIBRARIES\n    - ISRPRE=ISR.V2R3M0 - DSN PREFIX FOR PDF LIBRARIES\n    - OEMPP=Y - INCLUDES A PROGRAM PRODUCT LIBRARY.\n    - OEMPRE=SYS2 - DSN PREFIX FOR P/P LIBRARY (OEMPRE.LINKLIB)\n    - RENAME=Y - 'Y' RENAMES ALL RESCUE DSNS TO THE SAME NAME AS THE\n                SOURCE SYSTEM.\n    - USR1=AMK - 1ST TSO USER.\n    - USR2=AXS - 2ND TSO USER.\n    - USR3=LLA - 3RD TSO USER.\n    - USR4=RGS - 4TH TSO USER.\n    - USR5=RXR - 5TH TSO USER.\n    - TSOPROC=$RESCUE - MEMBER NAME OF A LOGON PROC CUSTOMIZED FOR THE\n                RESCUE SYSTEM.\n    - TSOPASS=RESCUE - TSO PASSWORD (SO YOU DON'T HAVE TO REMEMBER WHAT\n                IT WAS WHEN THE RESCUE SYSTEM WAS CREATED).\n    - BACKUP=DSS - 'DSS' CAUSES DF/DSS JCL TO BE CREATED, 'FDR' CAUSES\n                FDR JCL TO BE CREATED, 'NONE' CREATES NO BACKUP JCL.\n    - BKUPDSN=BKUP.RESCUE - THE DSN OF THE BACKUP TAPE.\n    - BKUPUNT=TAPE - UNIT NAME FOR THE BACKUP TAPE.\n    - SYSID=IPO1 - THIS WAS HERE WHEN I GOT IT. DON'T KNOW WHY IT'S HERE\n    - SYS1=SYS1 - DSN PREFIX. USED FOR BOTH SOURCE & TARGET.\n    - SYSX=SYSX - DSN PREFIX USED TO AVOID ENQUEUE CONFLICTS WITH THE\n                SOURCE SYSTEM.\n    - SYSRES=MVSRES - SOURCE SYSTEM'S SYSRES.\n    - TAPEUNIT=TAPE - HERE WHEN I GOT IT. DON'T KNOW WHY IT'S HERE.\n    - TPDSN=SADPGM - HERE WHEN I GOT IT. DON'T KNOW WHY IT'S HERE.\n    - TPVOL=RESCUT - HERE WHEN I GOT IT. DON'T KNOW WHY IT'S HERE.\n    - TMS=Y - HERE WHEN I GOT IT. DON'T KNOW WHY IT'S HERE.\n    - UNITADR=1C3 - DEVICE NUMBER OF RESCUE VOLUME.\n    - VTAMLIB=VTAMLIB - DSN SUFFIX FOR THE VTAM LOADLIB.\n    - VTAMLST=VTAMLST - DSN SUFFIX FOR THE VTAM START PARAMETERS.\n    - TBLDSN=OCSE.XA.VTAMLIB - IF YOU USE A SEPARATE LIBRARY FOR VTAM\n                TABLES, ETC. IF YOU DON'T HERE'S A PLACE FOR AN EXTRA PDS\n    - ICKSADSF=SYS1.SAMPLIB - HERE WHEN I GOT IT. DON'T KNOW WHY IT'S HERE.\n    - ADRDMPRS=SYS1.SAMPLIB - HERE WHEN I GOT IT. DON'T KNOW WHY IT'S HERE.\n    - LIST=Y - PRINT OR PRINT OFF\n\n\n   5. MISCELLANEOUS NOTES\n    - THE RENAMES FOR PROCLIB, PARMLIB, & VTAMLST RENAME THE PRODUCTION\n     MEMBERS SO THAT YOU CAN SEE THEM WHILE UP UNDER RESCUE. MAKE SURE\n     THESE NAMES AREN'T USED IN YOUR SHOP OR CHANGE WHAT YOU RENAME\n     THEM TO.\n    - IF YOUR SHOP REQUIRES MULTI-FIELD ACCOUNTING INFO, YOU MUST\n     SURROUND IT IN QUOTES WHEN YOU POP THE MACRO. YOU MUST THEN EDIT\n     THEM OUT AFTER THE JCL IS GENERATED.\n    - IF YOU CHANGE THE 'LENGTH' OF THE NAME OF THE MASTER CATALOG OF\n     THE RESCUE SYSTEM, YOU WILL HAVE TO STRUGGLE WITH IEBDG CONTROL\n     STATEMENTS (THE LENGTH OF THE PUNCHED PICTURE STRING VARIES WITH\n     THE LENGTH OF THE EXPANDED VARIABLE).\n    - GIVE YOURSELF ENOUGH PRIMARY SPACE ON THE LIBRARIES TO KEEP EACH\n     ONE IN THE PRIMARY EXTENT. I HAVE USED A SMALL SECONDARY QUANTITY\n     SO THAT YOU DON'T D37 BECAUSE YOU CAN'T EDIT (OR COPY) WHILE UP\n     UNDER RESCUE.\n    - THE CBIPO LIBRARIES INCLUDE THE INSTLIB AND JCLLIB SO THAT YOU'RE\n     ASSURED OF HAVING ACCESS TO SOME UTILITY JCL.\n    - I DIDN'T SPEND MUCH TIME ON VSAM CATALOGS, RACF, OR NCP, SINCE WE\n     DON'T USE THEM. THESE WERE LEFT IN THE SAME STATE AS WHEN I GOT THE\n     MACRO.\n    - HAVE FUN AND LET ME KNOW HOW IT GOES|\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RESCUE": {"ttr": 769, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "          MACRO\n          RESCUE  &JOBNAME=RESCUE,                                     X\n               &JOBCLASS=A,                                            X\n               &JOBACCT='ACCTING,INFO',                                X\n               &JOBPROGM=PROGRAMMER,                                   X\n               &JOBMSGCL=X,                                            X\n               &NOTIFY=SYS1,                                           X\n               &TYPRUN=,                                               X\n               &CATALOG=CATALOG.RESCUE,                                X\n               &COMMAND=Y,                                             X\n               &CMDPROC='SYS1.CMDPROC',                                X\n               &MASTRCAT=CATALOG.MVSICFM.VMVSCAT,                      X\n               &MASTRPW=MASTER,                                        X\n               &MCATVOL=MVSCAT,                                        X\n               &NCP=N,                                                 X\n               &COMTEN=Y,                                              X\n               &C10LIB=OCSE.COMLOAD,                                   X\n               &IPLTXT1=SYS1.SAMPLIB(IPLRECS),                         X\n               &IPLTXT2=SYS1.SAMPLIB(IEAIPL00),                        X\n               &VOLUME=RESCUE,                                         X\n               &DEVT=3380,                                             X\n               &OWNER=RESCUE,                                          X\n               &ICF=Y,                                                 X\n               &CBIPO=Y,                                               X\n               &IPOPRE=IPO1,                                           X\n               &RACF=Y,                                                X\n               &DITTO=Y,                                               X\n               &ISMF=Y,                                                X\n               &SDSF=Y,                                                X\n               &ISFPRE=ISF.V1R1M0,                                     X\n               &ISPPRE=ISP.V2R3M0,                                     X\n               &ISRPRE=ISR.V2R3M0,                                     X\n               &OEMPP=Y,                                               X\n               &OEMPRE=SYS2,                                           X\n               &RENAME=Y,                                              X\n               &USR1=AMK,                                              X\n               &USR2=AXS,                                              X\n               &USR3=LLA,                                              X\n               &USR4=RGS,                                              X\n               &USR5=RXR,                                              X\n               &TSOPROC=$RESCUE,                                       X\n               &TSOPASS=RESCUE,                                        X\n               &BACKUP=DSS,                                            X\n               &BKUPDSN=BKUP.RESCUE,                                   X\n               &BKUPUNT=TAPE,                                          X\n               &SYSID=IPO1,                                            X\n               &SYS1=SYS1,                                             X\n               &SYSX=SYSX,                                             X\n               &SYSRES=MVSRES,                                         X\n               &TAPEUNIT=TAPE,                                         X\n               &TPDSN=SADPGM,                                          X\n               &TPVOL=RESCUT,                                          X\n               &TMS=Y,                                                 X\n               &UNITADR=1C3,                                           X\n               &VTAMLIB=VTAMLIB,                                       X\n               &VTAMLST=VTAMLST,                                       X\n               &TBLDSN=OCSE.XA.VTAMLIB,                                X\n               &ICKSADSF=SYS1.SAMPLIB,                                 X\n               &ADRDMPRS=SYS1.SAMPLIB,                                 X\n               &LIST=Y\n.**********************************************************************\n.*                                                                    *\n.*     MACRO: RESCUE                                                  *\n.*                                                                    *\n.*  FUNCTION: CREATE 5 JOB STREAMS THAT WILL CREATE A ONE PACK        *\n.*            IPL'ABLE SYSTEM, INCLUDING A MASTER CATALOG,            *\n.*            PAGE, SYS1.MANX, STGINDEX, AND ALL IPL RELATED          *\n.*            DATASETS FROM YOUR CURRENT SYSTEM.                      *\n.*            THE USER CAN OPTIONALLY CREATE ISPF-USER'S BY COPYING   *\n.*            THEIR CURRENT PROFILES TO NEW ONES.                     *\n.*                                                                    *\n.*  OPERANDS: DEFAULTS ARE LISTED ...                                 *\n.*                                                                    *\n.*   JOBNAME='RESCUE'                   ** JOB NAME PREFIX            *\n.*   JOBCLASS='A'                       ** JOB EXEC CLASS             *\n.*   JOBACCT='ACCTING,INFO'             ** ACCOUNTING INFORMATION     *\n.*                                      ** SEE DOC FOR INFO ON        *\n.*                                      ** MULTI-FIELD ACCTG INFO     *\n.*   JOBPROGM='PROGRAMMER NAME'         ** PROGRAMMER NAME FIELD      *\n.*   JOBMSGCL='X'                       ** MSGCLASS                   *\n.*   NOTIFY='SYS1'                      ** NOTIFY=                    *\n.*   CATALOG='CATALOG.RESCUE'           ** RESCUES MASTER CATALOG     *\n.*   COMMAND=N                          ** IF PGM=COMMAND INSTALLED   *\n.*                                         ISSUES SVC 34'S            *\n.*   CMDPROC='SYS1.CMDPROC'             ** CLIST LIBRARY              *\n.*   MASTRCAT='CATALOG.MVSICFM.VMVSCAT' ** CURRENT MASTER CATALOG     *\n.*   MASTRPSW='MASTER',                 ** MASTER CATALOG PASSWORD    *\n.*   MCATVOL='MVSCAT',                  ** MASTER CATALOG VOLUME      *\n.*   NCP=Y                              ** IF NCP AND SSCPLIBS EXIST  *\n.*   COMTEN=Y                           ** IF YOU USE COMTEN FR/END   *\n.*   IPLTXT1='SYS1.SAMPLIB(IPLRECS)'    ** IPL TEXT DATASET           *\n.*   IPLTXT2='SYS1.SAMPLIB(IEAIPL00)'   **     \"                      *\n.*   VOLUME='RESCUE'                    ** VOLSER OF RESCUE PACK      *\n.*   DEVT='3380'                        ** DEVICE TYPE OF RESCUE PACK *\n.*   OWNER='RESCUE PACK'                ** OWNER NAME                 *\n.*   ICF='Y'                            ** IS NEW MASTER CATALOG ICF? *\n.*   CBIPO='Y'                          ** ARE IPO DSNS DESIRED       *\n.*   IPOPRE='IPO1'                      ** DSN PREFIX FOR IPO  LIBS   *\n.*   RACF='Y'                           ** IS RACF ACTIVE             *\n.*   DITTO='Y'                          ** IS DITTO DESIRED           *\n.*   ISMF='Y'                           ** IS ISMF  DESIRED           *\n.*   SDSF='Y'                           ** IS SDSF  DESIRED           *\n.*   ISFPRE='ISF.V1R1M0'                ** DSN PREFIX FOR SDSF LIBS   *\n.*   ISPPRE='ISP.V2R3M0'                ** DSN PREFIX FOR ISP LIBS    *\n.*   ISRPRE='ISR.V2R3M0'                ** DSN PREFIX FOR ISR LIBS    *\n.*   OEMPP='Y'                          ** OTHER VENDOR PROGPRODS     *\n.*   OEMPRE='SYS2'                      ** DSN PREFIX FOR OEM  LIBS   *\n.*   RENAME=N                           ** WHETHER SYSX TO SYS1 ??    *\n.*   USR1='AMK'                         ** ISPFUSER 1                 *\n.*   USR2='AXS'                         ** ISPFUSER 2                 *\n.*   USR3='LLA'                         ** ISPFUSER 3                 *\n.*   USR4='RGS'                         ** ISPFUSER 4                 *\n.*   USR5='RXR'                         ** ISPFUSER 5                 *\n.*   TSOPROC=$RESCUE                    ** RESCUE SYSTEM TSO PROC     *\n.*   TSOPASS=RESCUE                     ** PASSWORD FOR RESCUE SYSTEM *\n.*   BACKUP=DSS                         ** BACKUP THE VOLUME TO TAPE  *\n.*                                      ** DSS=DF/DSS PHYSICAL DUMP   *\n.*                                      ** FDR=FDR FULL VOLUME DUMP   *\n.*                                      ** NONE=NO BACKUP             *\n.*   BKUPDSN=BKUP.RESCUE                ** DSN FOR BACKUP TAPE        *\n.*   BKUPUNT=TAPE                       ** UNIT TYPE FOR BACKUP       *\n.*   SYSID=IPO1                         ** SYSTEM ID                  *\n.*   SYS1='SYS1'                        ** NEW HIGH-LEVEL QUALIFIER   *\n.*   SYSX='SYSX'                        ** TEMP HIGH-LEVEL QUALIFIER  *\n.*   SYSRES='MVSRES'                    ** CURRENT SYSTEM RESIDENCE   *\n.*   TAPEUNIT='TAPE'                    ** SA/DUMP UNITTYPE           *\n.*   TPDSN='SADPGM'                     ** SA/DUMP DSN                *\n.*   TPVOL='RESCUT'                     ** SA/DUMP VOLSER             *\n.*   TMS='Y'                            ** IF TMS IS ACTIVE           *\n.*   UNITADR=1C3                        ** UNIT ADDRESS OF RESCUE VOL *\n.*   VTAMLIB='VTAMLIB'                  ** SUFFIX FOR VTAM-LIB        *\n.*   VTAMLST='VTAMLST'                  ** SUFFIX FOR VTAM-LST        *\n.*   TBLDSN=OCSE.XA.VTAMLIB             ** IF YOU KEEP VTAM TABLES    *\n.*                                      ** IN A SEPARATE LIBRARY      *\n.*   ICKSADSF='SYS1.SAMPLIB'            ** WHERE SA/ICKDSF IS         *\n.*   ADRDMPRS='SYS1.SAMPLIB'            ** WHERE SA/DUMP TEXT IS      *\n.*   LIST=YES                           ** USUAL LIST OPTION          *\n.*                                                                    *\n.*  CHANGE SECTION:   08/86  - CREATED                                *\n.*                    05/87  - UPDATED FOR LINE ADJUSTMENTS           *\n.*                    01/90  - CHANGES AT FSA FOR XA2.2.0 - R. STECKER*\n.*                             ADD '.VDATA' FOR SMF COMPONENT NAMES   *\n.*                             REMOVE DCMLIB & TELCMLIB               *\n.*                             ADD COMTEN SUPPORT                     *\n.*                             ADD ABILITY TO INCLUDE/EXCLUDE PRODUCTS*\n.*                             ADD VERIFICATION/BACKUP JOB (RESCUE4)  *\n.*                             USE IDCAMS AS PRIMARY UTILITY          *\n.*                             CREATE DOCNOTES MEMBER                 *\n.*                             LOTS OF OTHER MISCELLANEOUS GOODIES    *\n.*                    10/90  - ADD &BKUPUNT TO ALLOW 3400/3480 BACKUP *\n.*                             INCLUDE SEC QUAN FOR LIBS              *\n.*                             UPDATE DOCNOTES SO ITS EASIER TO PICKUP*\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.*                                                                    *\n.*  EXECUTION RECOMMENDATIONS:  TRY EXEC W/O ANY OPERANDS             *\n.*                                                                    *\n.*                                                                    *\n.**********************************************************************\n.*                                                                    *\n.*--------------------------------------------------------------------*\n.*                                                                    *\n.*                 VARIABLE DEFINITION SECTION                        *\n.*                                                                    *\n.*--------------------------------------------------------------------*\n.*                                                                    *\n         LCLC   &I,&P,&MN,&TYPRN\n         LCLA   &A,&LCAT\n         LCLB   &B,&RACFLG,&ICFLG,&TMSFLG,&DUTFLG,&DGTFLG,&ISFFLG\n         LCLB   &IPOFLG,&OEMFLG,&C10FLG\n         LCLB   &ADRFLG,&FDRFLG\n         GBLB   &ISSUE\n         AIF    (&ISSUE).ERR1\n&ISSUE   SETB   1\n&I       SETC   '&SYSNDX'\n&MN      SETC   ' MNOTE'\n         AIF    (K'&TYPRUN  EQ 0).SKIPTYP\n&TYPRN   SETC   ',TYPRUN=&TYPRUN'\n.SKIPTYP ANOP\n.*                                                                    *\n.*--------------------------------------------------------------------*\n.*                                                                    *\n.*                     VERIFICATION SECTION                           *\n.*                                                                    *\n.*--------------------------------------------------------------------*\n.*                                                                    *\n         AIF    (K'&JOBNAME  GT 7).ERR2         JOBNAME > 7 CHARS\n         AIF    (K'&JOBCLASS NE 1).ERR3         JOBCLASS\u00ac=1 CHARS\n         AIF    (K'&JOBACCT  GT 30).ERR4        ACCOUNT > 16 CHARS\n         AIF    (K'&JOBPROGM GT 20).ERR5        PROG NAME>20 CHARS\n         AIF    (K'&JOBMSGCL NE 1).ERR6         MSGCLASS\u00ac=1 CHARS\n.*                                              NOTIFY>7 CHARS\n         AIF    (K'&NOTIFY GT 7 AND K'&NOTIFY NE 0).ERR7\n         AIF    (K'&CATALOG  GT 44).ERR8         LENGTH(CATALOG) > 44\n         AIF    (K'&MASTRCAT GT 44).ERR9         LENGTH(MCAT)    > 44\n.*                                               PASWWORD(MCAT) >8\n         AIF    (K'&MASTRPW  GT 8 AND K'&MASTRPW NE 0).ERR10\n         AIF    (K'&IPLTXT1 EQ  0).ERR11         NO IPL TEXT ||\n         AIF    (K'&VOLUME  NE  6).ERR12         LENGTH VOLSER \u00ac= 8\n         AIF    (K'&DEVT    EQ  0).ERR13         DEVT NOT THERE\n         AIF    ('&BACKUP'  EQ 'DSS').ADRSET\n         AIF    ('&BACKUP'  EQ 'FDR').FDRSET\n         AGO    .BKUPXIT\n.ADRSET  ANOP\n&ADRFLG  SETB   1\n         AGO    .BKUPXIT\n.FDRSET  ANOP\n&FDRFLG  SETB   1\n         AGO    .BKUPXIT\n.BKUPXIT ANOP\n         AIF    ('&ICF'     NE 'Y').ICFOFF       DO YOU WANT ICF CAT\n&ICFLG   SETB   1                               Y - SET FLAG\n.ICFOFF  ANOP\n         AIF    ('&RACF'    NE 'Y').RACOFF       DO YOU WANT RACF\n&RACFLG  SETB   1                               Y - SET FLAG\n.RACOFF  ANOP\n          AIF   ('&DITTO'   NE 'Y').DUTOFF       DO YOU WANT DITTO\n&DUTFLG  SETB   1                               Y - SET FLAG\n.DUTOFF  ANOP\n          AIF   ('&ISMF'    NE 'Y').DGTOFF       DO YOU WANT ISMF\n&DGTFLG  SETB   1                               Y - SET FLAG\n.DGTOFF  ANOP\n          AIF   ('&SDSF'    NE 'Y').ISFOFF       DO YOU WANT SDSF\n&ISFFLG  SETB   1                               Y - SET FLAG\n.ISFOFF  ANOP\n          AIF   ('&CBIPO'   NE 'Y').IPOOFF       DO YOU WANT CBIPO LIBS\n&IPOFLG  SETB   1                               Y - SET FLAG\n.IPOOFF  ANOP\n          AIF   ('&OEMPP'   NE 'Y').OEMOFF       OTHER PROGPROD LIB\n&OEMFLG  SETB   1                               Y - SET FLAG\n.OEMOFF  ANOP\n          AIF   ('&COMTEN'  NE 'Y').C10OFF       DO YOU WANT COMTEN\n&C10FLG  SETB   1                               Y - SET FLAG\n.C10OFF  ANOP\n.LENCHECK ANOP\n         AIF    (K'&SYS1   EQ  0).ERR14         NO HIGH-LEVEL QUALIFIER\n         AIF    (K'&SYSX  EQ  0).ERR15         NO HIGH-LEVEL QUALIFIER\n         AIF    (K'&SYSRES NE  6).ERR16         SYSRES NOT RIGHT\n         AIF    (K'&ICKSADSF EQ  0).ERR17         NO SA/ICKDSF\n         AIF    (K'&ADRDMPRS EQ  0).ERR18         NO SA/DUMP TEXT\n         AIF    (K'&TPDSN    EQ  0).ERR19         NO TAPE DSN\n         AIF    (K'&SYSID    NE  4).ERR21         SYSTEM ID NOT 4\n         AIF    (K'&TPVOL    EQ  0).ERR20         NO TAPE VOLSER\n         AIF    (K'&UNITADR  EQ  0).ERR22         NO UNITADDRESS\n         AIF    ('&TMS'      NE  'Y').NOTSM       SET 'TMS' FLAG\n&TMSFLG  SETB   1\n.NOTSM   ANOP\n         PUSH   PRINT\n         AIF    ('&LIST'     EQ  'Y').LISTM\n         PRINT  OFF\n.LISTM   ANOP\n         AGO    .PROCESS\n.*--------------------------------------------------------------------*\n.*                                                                    *\n.*                       ERROR   SECTION                              *\n.*                                                                    *\n.*--------------------------------------------------------------------*\n.*                                                                    *\n.ERR1    MNOTE  8,'MACRO HAS BEEN ISSUED BEFORE, WHY ISSUE IT AGAIN?'\n         AGO    .MEND\n.ERR2    MNOTE  8,'JOB NAME > 7 CHARS: JOBNAME=&JOBNAME'\n         AGO    .MEND\n.ERR3    MNOTE  8,'JOB CLASS >1: JOBCALSS=&JOBCALSS'\n         AGO    .MEND\n.ERR4    MNOTE  8,'JOB ACCOUNTING INFO > 30'\n         AGO    .MEND\n.ERR5    MNOTE  8,'PROGRAMMER NAME FIELD>20'\n         AGO    .MEND\n.ERR6    MNOTE  8,'JOB MSGCLASS INVALID: JOBMSGCL=&JOBMSGCL'\n         AGO    .MEND\n.ERR7    MNOTE  8,'JOB NOTIFY INVALID: NOTIFY=&NOTIFY'\n         AGO    .MEND\n.ERR8    MNOTE  8,'TARGET CATALOG INVALID: CATALOG=&CATALOG'\n         AGO    .MEND\n.ERR9  MNOTE  8,'LENGTH OF MASTER CATALOG IN VALID: MASTRCAT=&MASTRCAT'\n         AGO    .MEND\n.ERR10   MNOTE  8,'MASTER CATALOG PASSWORD INVALID: MASTRPW=&MASTERPW'\n         AGO    .MEND\n.ERR11   MNOTE  8,'MISSING IPL TEXT: IPLTXT1'\n         AGO    .MEND\n.ERR12   MNOTE  8,'MISSING TARGET VOLUME: VOLUME'\n         AGO    .MEND\n.ERR13   MNOTE  8,'MISSING DEVICE TYPE SPECIFICATION: DEVT'\n         AGO    .MEND\n.ERR14   MNOTE  8,'INVALID OR MISSING HIGH-LEVEL QUALIFIER FOR'\n         MNOTE  8,'NEW ALLOCATION OF DATASETS: SYS1=&SYS1'\n         AGO    .MEND\n.ERR15   MNOTE  8,'INVALID OR MISSING HIGH-LEVEL QUALIFIER FOR'\n         MNOTE  8,'INITIAL ALLOCATION OF DATASETS: SYSX=&SYSX'\n         AGO    .MEND\n.ERR16   MNOTE  8,'NO OR INVALID SYSRES PROVIDED: SYSRES=&SYSRES'\n         AGO    .MEND\n.ERR17   MNOTE  8,'NO STANDALONE ICKDSF TEXT PROVIDED BY: ICKSADSF='\n         AGO    .MEND\n.ERR18   MNOTE  8,'NO STANDALONE DUMP TEXT PROVIDED BY: ADRDMPRS='\n         AGO    .MEND\n.ERR19   MNOTE  8,'NO TAPE DATASET NAME SPECIFIED BY: TPDSN='\n         AGO    .MEND\n.ERR20   MNOTE  8,'NO TAPE VOLSER WAS ENTERED BY: TPVOL='\n         AGO    .MEND\n.ERR21   MNOTE  8,'SYSTEM ID INCORRECT: SYSID = &SYSID'\n         AGO    .MEND\n.ERR22   MNOTE  8,'UNIT ADDRESS NOT SPECIFIED: UNITADR = &UNITADR '\n         AGO    .MEND\n.*\n.* PROCESS SECTION\n.*\n.PROCESS ANOP\n.*--------------------------------------------------------------------*\n.*    START OF JCL                                                    *\n.*--------------------------------------------------------------------*\n PUNCH '//*   AUTHOR = MARK V. HEDGES -                               '\n PUNCH '//*            ADRIA LABORATORIES                             '\n PUNCH '//*  MODIFIED BY = RICHARD G. STECKER                         '\n PUNCH '//*                SYNECTICS FOR MANAGEMENT DECISIONS INC.    '\n PUNCH '//*                3030 CLARENDON BLVD                        '\n PUNCH '//*                ARLINGTON, VA 22201                        '\n PUNCH '//*                (703) 528-2772 (OFFICE)                    '\n PUNCH '//*                (301) 965-5627 (INSTALLATION)              '\n PUNCH '//&JOBNAME.0 JOB ('&JOBACCT'),''&JOBPROGM'',          '\n         AIF    (K'&NOTIFY EQ 0).SKIPNO0\n PUNCH '//           NOTIFY=&NOTIFY, '\n.SKIPNO0  ANOP\n PUNCH '//           REGION=1M,                            '\n PUNCH '//           CLASS=&JOBCLASS,MSGCLASS=&JOBMSGCL.&TYPRN'\n PUNCH '//*---------------------------------------------------------* '\n PUNCH '//* JOB: &JOBNAME.0                                           '\n PUNCH '//* USE: TO INITALIZE THE VOLUME=&VOLUME ON UNIT=&UNITADR     '\n PUNCH '//*                                                           '\n PUNCH '//*     _STEPS_   __________ FUNCTION _____________________   '\n PUNCH '//*     EXPDISC   EXPORT-DISCONNECT OLD USERCATALOG           '\n         AIF   ('&COMMAND' EQ 'N').NCMD0\n PUNCH '//*     VARYOFF   VARY DEVICE OFFLINE                         '\n PUNCH '//*     DEALLOC   BURP (EXCUSE ME)                            '\n.NCMD0   ANOP\n PUNCH '//*     INITVOL   INITIALIZE DISK VOLUME USING ICKDSF         '\n PUNCH '//*---------------------------------------------------------* '\n PUNCH '//EXPDISC  EXEC  PGM=IDCAMS,REGION=1M                         '\n PUNCH '//SYSPRINT  DD   SYSOUT=*                                     '\n PUNCH '//SYSIN     DD   *                                            '\n PUNCH '   EXPORT                                              -      '\n PUNCH '         &CATALOG  -'\n PUNCH '          DCON                                                '\n PUNCH '                                                              '\n PUNCH '   SET MAXCC=0                                                '\n PUNCH '/*                                                            '\n PUNCH '//*                                                           '\n         AIF   ('&COMMAND' EQ 'N').NCMD1\n PUNCH '//VARYOFF EXEC PGM=COMMAND,                                   '\n PUNCH '//   PARM=''V &UNITADR,OFFLINE''                              '\n PUNCH '//*                                                           '\n PUNCH '//* VARIES THE VOLUME OFFLINE                                 '\n PUNCH '//*                                                           '\n PUNCH '//DEALLOC EXEC PGM=COMMAND,                                   '\n PUNCH '//   PARM=''S DEALLOC''                                       '\n PUNCH '//*                                                           '\n PUNCH '//* BURPS THE SYSTEM (GENERATES AN INTERRUPT)                 '\n PUNCH '//*                                                           '\n         AGO  .IVOL1\n.NCMD1   ANOP\n PUNCH '//*---------------------------------------------------------- '\n PUNCH '//*    DEMOUNT THE VOLUME &VOLUME ON UNIT ADDRESS &UNITADR    '\n PUNCH '//*    BEFORE RELEASING THIS TASK                             '\n PUNCH '//*---------------------------------------------------------- '\n PUNCH '//*  V &UNITADR,OFFLINE                                       '\n PUNCH '//*  S DEALLOC                                                '\n.IVOL1   ANOP\n PUNCH '//INITVOL  EXEC PGM=ICKDSF                                    '\n PUNCH '//*                                                           '\n PUNCH '//* NOTE THE FOLLOWING CONCATENATION                          '\n PUNCH '//*                                                           '\n PUNCH '//IPLTEXT  DD  DISP=SHR,VOL=SER=&SYSRES,UNIT=SYSDA,           '\n PUNCH '//             DSN=&IPLTXT1 '\n         AIF (K'&IPLTXT2  EQ 0).SKIPL2\n PUNCH '//         DD  DISP=SHR,VOL=SER=&SYSRES,UNIT=SYSDA,           '\n PUNCH '//             DSN=&IPLTXT2 '\n.SKIPL2  ANOP\n PUNCH '//SYSPRINT DD   SYSOUT=*                                      '\n PUNCH '//SYSIN    DD   *                                             '\n PUNCH ' INIT   UNIT(&UNITADR) -                           '\n PUNCH '        VOLID(&VOLUME) -                           '\n PUNCH '        OWNERID(&OWNER) -                          '\n PUNCH '        VTOC(0,1,14) -                             '\n PUNCH '        PURGE -                                    '\n PUNCH '        MAP -                                      '\n PUNCH '      VERIFY(&VOLUME) /* VOLUME MUST BE LABLED */ -'\n PUNCH '        NOVALIDATE -                               '\n PUNCH '        NOCHECK -                                  '\n PUNCH '      IPLDD(IPLTEXT) -                             '\n PUNCH '      NOBOOTSTRAP /* ICKDSF WILL SUPPLY IT */      '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n         AIF   ('&COMMAND' EQ 'N').NCMD2\n PUNCH '//VARYON   EXEC PGM=COMMAND,COND=(0,LT),           '\n PUNCH '//       PARM=''V &UNITADR,ONLINE''                          '\n PUNCH '//* VARY &UNITADR ONLINE                                      '\n PUNCH '//MOUNT    EXEC PGM=COMMAND,COND=(0,LT),           '\n PUNCH '//       PARM=''M &UNITADR,VOL=(SL,&VOLUME),USE=PRIVATE''    '\n PUNCH '//* MOUNT &VOLUME ON &UNITADR                                 '\n         AGO  .NEXT0\n.NCMD2   ANOP\n PUNCH '//*---------------------------------------------------------- '\n PUNCH '//*    A MOUNT FOR UNIT=&UNITADR FOR VOLUME=&VOLUME MUST      '\n PUNCH '//*    BE ISSUED BEFORE OTHER JOBS SUBMITTED                  '\n PUNCH '//*---------------------------------------------------------- '\n PUNCH '//*  M &UNITADR,VOL=(SL,&VOLUME),USE=PRIVATE                  '\n.NEXT0   ANOP\n PUNCH '//                                                            '\n PUNCH '//&JOBNAME.1 JOB ('&JOBACCT'),''&JOBPROGM'',          '\n         AIF    (K'&NOTIFY EQ 0).SKIPNO1\n PUNCH '//           NOTIFY=&NOTIFY, '\n.SKIPNO1  ANOP\n PUNCH '//           REGION=2M,                            '\n PUNCH '//           CLASS=&JOBCLASS,MSGCLASS=&JOBMSGCL.&TYPRN'\n PUNCH '//*---------------------------------------------------------* '\n PUNCH '//* JOB: &JOBNAME.1                                           '\n PUNCH '//* USE: CREATE A VOLUME VOLSER(&VOLUME) THAT WILL CONTAIN    '\n PUNCH '//*      ALL THE NECESSARY DATASETS FOR AN IPL                '\n PUNCH '//*                                                           '\n PUNCH '//*     _STEPS_   __________ FUNCTION _____________________   '\n PUNCH '//*     DEFMCAT   DEFINE A MASTER CATALOG                     '\n PUNCH '//*     DEFVSAM   DEFINE ALL NECESSARY VSAM FILES             '\n PUNCH '//*     DEFNVSAM  DEFINE ALL NECESSARY NON-VSAM FILES         '\n PUNCH '//*               AND IMPORT THE CATALOG AS A UCAT TO THE MCAT'\n PUNCH '//*----------------------------------------------------------*'\n PUNCH '//*                                                           '\n PUNCH '//*                                                           '\n PUNCH '//DEFMCAT  EXEC PGM=IDCAMS,REGION=2M,COND=(0,LT)              '\n PUNCH '//SYSPRINT  DD   SYSOUT=*                                     '\n PUNCH '//TARGET    DD   DISP=SHR,UNIT=&DEVT,VOL=SER=&VOLUME          '\n PUNCH '//SYSIN     DD   *                                            '\n          AIF   (&ICFLG EQ 0).SKIPICF\n PUNCH ' DELETE -                                          '\n PUNCH '         &SYS1..VVDS.V&VOLUME -                    '\n PUNCH '           FILE(TARGET) -                          '\n PUNCH '           CLUSTER -                               '\n PUNCH '           PURGE -                                 '\n PUNCH '       CATALOG(&MASTRCAT./&MASTRPW); '\n PUNCH '                                                              '\n PUNCH ' SET MAXCC=0                                                  '\n PUNCH '                                                              '\n PUNCH ' DEFINE -                                          '\n PUNCH '  CLUSTER ( -                                      '\n PUNCH '           NAME( &SYS1..VVDS.V&VOLUME ) -          '\n PUNCH '           CYL(1,1) -                              '\n PUNCH '           VOL(&VOLUME) -                          '\n PUNCH '           FILE(TARGET) -                          '\n PUNCH '           NONINDEXED -                            '\n PUNCH '           OWNER(&OWNER) -                         '\n PUNCH '         ) -                                       '\n PUNCH '       CATALOG(&MASTRCAT./&MASTRPW); '\n.SKIPICF  ANOP\n PUNCH ' DEFINE -                                          '\n PUNCH '       MASTERCATALOG ( -                           '\n PUNCH '                       NAME( &CATALOG ) -'\n PUNCH '                       CYL(10 2) -                 '\n PUNCH '                       VOL(&VOLUME) -              '\n PUNCH '                       ATTEMPTS(2) -               '\n PUNCH '                       BUFFERSPACE(8192) -         '\n PUNCH '                       BUFND(10) -                 '\n PUNCH '                       BUFNI(10) -                 '\n PUNCH '                       FILE(TARGET) -              '\n          AIF   (&ICFLG EQ 0).SKIPICF2\n PUNCH '                       ICFCATALOG -                '\n.SKIPICF2 ANOP\n PUNCH '                       OWNER(&OWNER) -             '\n PUNCH '                       STRNO(9) -                  '\n PUNCH '                      ) -                          '\n PUNCH '       CATALOG(&MASTRCAT./&MASTRPW);  '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n PUNCH '//DEFVSAM  EXEC PGM=IDCAMS,REGION=2M,COND=(0,LT)   '\n PUNCH '//STEPCAT DD  DSN=&CATALOG,DISP=SHR                '\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//TARGET DD   DISP=SHR,UNIT=&DEVT,VOL=SER=&VOLUME  '\n PUNCH '//SYSIN  DD   *                                    '\n PUNCH ' DEFINE -                                          '\n PUNCH '       CLUSTER ( -                                 '\n PUNCH '                 NAME( &SYS1..STGINDEX ) -         '\n PUNCH '                 CYL(5) -                          '\n PUNCH '                 VOL(&VOLUME) -                    '\n PUNCH '                 BUFFERSPACE(20480) -              '\n PUNCH '                 FILE(TARGET) -                    '\n PUNCH '                 KEYS(12 8) -                      '\n PUNCH '                 OWNER(&OWNER) -                   '\n PUNCH '                 RECORDSIZE(2041,2041) -           '\n PUNCH '                 REUSE -                           '\n PUNCH '               ) -                                 '\n PUNCH '       DATA ( -                                    '\n PUNCH '                 NAME( &SYS1..STGINDEX.DATA ) -    '\n PUNCH '                      CISZ(2048) -                 '\n PUNCH '            ) -                                    '\n PUNCH '       INDEX ( -                                   '\n PUNCH '                 NAME( &SYS1..STGINDEX.INDEX ) -   '\n PUNCH '                      CISZ(1024) -                 '\n PUNCH '             ) -                                   '\n PUNCH '  CATALOG(&CATALOG);  '\n PUNCH '                                                              '\n PUNCH ' DEFINE -                                          '\n PUNCH '        PAGESPACE ( -                              '\n PUNCH '                     NAME( &SYS1..&VOLUME..PLPA) - '\n PUNCH '                           CYL(16) -               '\n PUNCH '                           VOL(&VOLUME) -          '\n PUNCH '                           FILE(TARGET) -          '\n PUNCH '                           OWNER(&OWNER) -         '\n PUNCH '                           NOSWAP -                '\n PUNCH '                           UNIQUE -                '\n PUNCH '                   ) -                             '\n PUNCH '  CATALOG(&CATALOG); '\n PUNCH '                                                              '\n PUNCH ' DEFINE -                                          '\n PUNCH '        PAGESPACE ( -                              '\n PUNCH '                     NAME( &SYS1..&VOLUME..COMMON ) -'\n PUNCH '                           CYL(16) -               '\n PUNCH '                           VOL(&VOLUME) -          '\n PUNCH '                           FILE(TARGET) -          '\n PUNCH '                           OWNER(&OWNER) -         '\n PUNCH '                           NOSWAP -                '\n PUNCH '                           UNIQUE -                '\n PUNCH '                   ) -                             '\n PUNCH '  CATALOG(&CATALOG);  '\n PUNCH '                                                              '\n PUNCH ' DEFINE -                                          '\n PUNCH '        PAGESPACE ( -                              '\n PUNCH '                   NAME( &SYS1..&VOLUME..LOCAL1 ) -'\n PUNCH '                          CYL(30) -                '\n PUNCH '                           VOL(&VOLUME) -          '\n PUNCH '                           FILE(TARGET) -          '\n PUNCH '                           OWNER(&OWNER) -         '\n PUNCH '                           NOSWAP -                '\n PUNCH '                           UNIQUE -                '\n PUNCH '                  ) -                              '\n PUNCH '  CATALOG(&CATALOG); '\n PUNCH '                                                              '\n PUNCH ' DEFINE -                                          '\n PUNCH '        CLUSTER ( -                                '\n PUNCH '                  NAME( &SYS1..MAN1 ) -            '\n PUNCH '                       CYL(10) -                   '\n PUNCH '                       VOL(&VOLUME) -              '\n PUNCH '                       CISZ(4096) -                '\n PUNCH '                       FILE(TARGET) -              '\n PUNCH '                       NONINDEXED -                '\n PUNCH '                       OWNER(&OWNER) -             '\n PUNCH '                       RECORDSIZE(4086 32767) -    '\n PUNCH '                       REUSE   SHR(2 3) -          '\n PUNCH '                       SPANNED  SPEED -            '\n PUNCH '                 ) -                               '\n PUNCH '         DATA ( -                                  '\n PUNCH '                 NAME( &SYS1..MAN1.VDATA) -        '\n PUNCH '              ) -                                  '\n PUNCH '  CATALOG(&CATALOG); '\n PUNCH '                                                              '\n PUNCH ' DEFINE -                                          '\n PUNCH '        CLUSTER ( -                                '\n PUNCH '                  NAME( &SYS1..MAN2 ) -            '\n PUNCH '                       CYL(10) -                   '\n PUNCH '                       VOL(&VOLUME) -              '\n PUNCH '                       CISZ(4096) -                '\n PUNCH '                       FILE(TARGET) -              '\n PUNCH '                       NONINDEXED -                '\n PUNCH '                       OWNER(&OWNER) -             '\n PUNCH '                       RECORDSIZE(4086 32767) -    '\n PUNCH '                       REUSE   SHR(2 3) -          '\n PUNCH '                       SPANNED  SPEED -            '\n PUNCH '                 ) -                               '\n PUNCH '         DATA ( -                                  '\n PUNCH '                 NAME( &SYS1..MAN2.VDATA) -        '\n PUNCH '              ) -                                  '\n PUNCH '  CATALOG(&CATALOG); '\n PUNCH '                                                              '\n PUNCH '  LISTCAT  CAT(&CATALOG) ALL  '\n PUNCH '                                                              '\n PUNCH '/*                                                            '\n PUNCH '//*                                                           '\n PUNCH '//DEFNVSAM EXEC PGM=IDCAMS,REGION=3M,COND=(0,LT)              '\n PUNCH '//STEPCAT   DD  DSN=&CATALOG,DISP=SHR '\n PUNCH '//SYSPRINT  DD  SYSOUT=*                                      '\n PUNCH '//SYSIN     DD  *                                             '\n PUNCH ' DEF NVSAM (NAME(PASSWORD                    ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..BRODCAST            ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..CMDPROC)        OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISPLOAD           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISPMLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISPPLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISPSLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISPTLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISRCLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISRJLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISRLOAD           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISRMLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISRPLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISRSLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISRTLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..CMDLIB              ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..DAE                 ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..DUMP00              ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..DUMP01              ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..HASPACE             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..JESCKPT             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG);  '\n PUNCH ' DEF NVSAM (NAME(&SYSX..HELP                ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..IMAGELIB            ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..LINKLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n           AIF    (&RACFLG EQ 0).SKIPRACF\n PUNCH ' DEF NVSAM (NAME(&SYSX..RACF                ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n.SKIPRACF  ANOP\n           AIF    (&DUTFLG EQ 0).SKDUTCAT\n PUNCH ' DEF NVSAM (NAME(&SYSX..DUTLOAD             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..DUTPLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n.SKDUTCAT  ANOP\n           AIF    (&DGTFLG EQ 0).SKDGTCAT\n PUNCH ' DEF NVSAM (NAME(&SYSX..DGTCLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..DGTLLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..DGTMLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..DGTPLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..DGTSLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..DGTTLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n.SKDGTCAT  ANOP\n           AIF    (&ISFFLG EQ 0).SKISFCAT\n PUNCH ' DEF NVSAM (NAME(&SYSX..HASPINDX            ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISFLOAD           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISFLPA            ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISFPLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISFTLIB           ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n.SKISFCAT  ANOP\n           AIF    (&IPOFLG EQ 0).SKIPOCAT\n PUNCH ' DEF NVSAM (NAME(&SYSX..IPO.HELP          ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..IPO.INSTLIB       ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..IPO.ISPPLIB       ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..IPO.JCLLIB        ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..IPO.LINKLIB       ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..IPO.PROCLIB       ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n.SKIPOCAT  ANOP\n PUNCH ' DEF NVSAM (NAME(&SYSX..LOGREC              ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..LPALIB              ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG);  '\n PUNCH ' DEF NVSAM (NAME(&SYSX..MACLIB              ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..NUCLEUS             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG);  '\n           AIF    (&OEMFLG EQ 0).SKOEMCAT\n PUNCH ' DEF NVSAM (NAME(&SYSX..OEM.LINKLIB       ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n.SKOEMCAT  ANOP\n PUNCH ' DEF NVSAM (NAME(&SYSX..PAGEDUMP            ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..PARMLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..PROCLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..SAMPLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..SVCLIB              ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..UADS                ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..VTAMLIB             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..VTAMLST             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..VTAMTBL             ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n           AIF    (&C10FLG EQ 0).SKC10CAT\n PUNCH ' DEF NVSAM (NAME(&SYSX..COMTEN.LINKLIB      ) OWNER(&OWNER) -'\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n.SKC10CAT  ANOP\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISPF1.ISPPROF   ) OWNER(&OWNER) - '\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISPF2.ISPPROF   ) OWNER(&OWNER) - '\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISPF3.ISPPROF   ) OWNER(&OWNER) - '\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISPF4.ISPPROF   ) OWNER(&OWNER) - '\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH ' DEF NVSAM (NAME(&SYSX..ISPF5.ISPPROF   ) OWNER(&OWNER) - '\n PUNCH ' DEVT(&DEVT) VOL(&VOLUME))   CAT(&CATALOG); '\n PUNCH '                                                            '\n PUNCH ' IMPORT  CONNECT -                                 '\n PUNCH '         OBJECTS( -                                '\n PUNCH '         (&MASTRCAT.   -'\n PUNCH '         VOLUME (&MCATVOL) -                       '\n PUNCH '         DEVICETYPE(&DEVT))) -                     '\n PUNCH '         CATALOG(&CATALOG) '\n PUNCH '                                                              '\n PUNCH '  LISTC CATALOG(&CATALOG) NONVSAM  ALL     '\n PUNCH '                                                              '\n PUNCH '/*                                                            '\n PUNCH '//                                                            '\n PUNCH '//&JOBNAME.2 JOB ('&JOBACCT'),''&JOBPROGM'',          '\n         AIF    (K'&NOTIFY EQ 0).SKIPNO2\n PUNCH '//           NOTIFY=&NOTIFY, '\n.SKIPNO2  ANOP\n PUNCH '//           REGION=6M,                            '\n PUNCH '//           CLASS=&JOBCLASS,MSGCLASS=&JOBMSGCL.&TYPRN'\n PUNCH '//*---------------------------------------------------------*'\n PUNCH '//* JOB: &JOBNAME.2                                         *'\n PUNCH '//* USE: CREATE A VOLUME VOLSER(&VOLUME) THAT WILL CONTAIN  *'\n PUNCH '//*      ALL THE NECESSARY DATASETS FOR AN IPL              *'\n PUNCH '//*                                                         *'\n PUNCH '//*  _STEPS_   __________ FUNCTION _____________________    *'\n PUNCH '//*   ALLOC     ALLOCATES ALL NEEDED DATASETS ON VOLUME     *'\n PUNCH '//*  LOAD#01    COPIES CURRENT LIBRARIES TO NEW             *'\n PUNCH '//*  LOAD#02    COPIES USER LIBRARIES TO NEW                *'\n PUNCH '//*  LOAD#03    COPIES VTAM LIBRARIES TO NEW                *'\n PUNCH '//*  RNPROCS    RENAMES PROCLIB MEMBERS                     *'\n PUNCH '//*  RNPARMS    RENAMES PARMLIB MEMBERS                     *'\n PUNCH '//*  RNVTAML    RENAMES VTAMLST MEMBERS                     *'\n PUNCH '//*---------------------------------------------------------*'\n PUNCH '//ALLOC   EXEC PGM=IEFBR14,REGION=3M                         '\n PUNCH '//LINKLIB  DD DISP=(,KEEP),DSN=&SYSX..LINKLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(55,00,551)),             '\n PUNCH '//            DCB=(&SYS1..LINKLIB)                 '\n           AIF    (&OEMFLG EQ 0).SKOEMALC\n PUNCH '//OEMLINK  DD DISP=(,KEEP),DSN=&SYSX..OEM.LINKLIB, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(35,01,138)),             '\n PUNCH '//            DCB=(&OEMPRE..LINKLIB)               '\n.SKOEMALC  ANOP\n PUNCH '//LOGREC   DD DISP=(,KEEP),DSN=&SYSX..LOGREC,      '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(4)),                     '\n PUNCH '//            DCB=(&SYS1..LOGREC)                  '\n PUNCH '//CMDLIB   DD DISP=(,KEEP),DSN=&SYSX..CMDLIB,      '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(03,01,091)),             '\n PUNCH '//            DCB=(&SYS1..CMDLIB)                  '\n PUNCH '//CMDPROC  DD DISP=(,KEEP),DSN=&SYSX..CMDPROC,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(03,01,091)),             '\n PUNCH '//            DCB=(&CMDPROC)                       '\n PUNCH '//DUMP00   DD DISP=(,KEEP),DSN=&SYSX..DUMP00,      '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,10),                      '\n PUNCH '//            DCB=(&SYS1..DUMP00)                  '\n PUNCH '//DUMP01   DD DISP=(,KEEP),DSN=&SYSX..DUMP01,      '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,10),                      '\n PUNCH '//            DCB=(&SYS1..DUMP01)                  '\n         AIF ('&NCP' EQ 'N').NCP0\n PUNCH '//NCPDUMP  DD DISP=(,KEEP),DSN=&SYSX..NCPDUMP,              '\n PUNCH '//         UNIT=&DEVT,VOL=SER=&VOLUME,SPACE=(CYL,(20,1)),    '\n PUNCH '//         DCB=(RECFM=F,LRECL=512,BLKSIZE=512)               '\n PUNCH '//NCPLIB   DD DISP=(,KEEP),DSN=&SYSX..NCPLIB,              '\n PUNCH '//         UNIT=&DEVT,VOL=SER=&VOLUME,SPACE=(CYL,(04,01,091)),'\n PUNCH '//         DCB=(RECFM=U,LRECL=0,BLKSIZE=23200)               '\n PUNCH '//SSPLIB   DD DISP=(,KEEP),DSN=&SYSX..SSPLIB,              '\n PUNCH '//         UNIT=&DEVT,VOL=SER=&VOLUME,SPACE=(CYL,(04,01,091)),'\n PUNCH '//         DCB=(RECFM=U,LRECL=0,BLKSIZE=23200)               '\n.NCP0   ANOP\n PUNCH '//VTAMLIB  DD DISP=(,KEEP),DSN=&SYSX..VTAMLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(05,01,092)),             '\n PUNCH '//            DCB=(&SYS1..&VTAMLIB)                '\n PUNCH '//DAE      DD DISP=(,KEEP),DSN=&SYSX..DAE,         '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01)),                 '\n PUNCH '//            DCB=(&SYS1..DAE)                     '\n PUNCH '//HELP     DD DISP=(,KEEP),DSN=&SYSX..HELP,        '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(04,01,091)),             '\n PUNCH '//            DCB=(&SYS1..HELP)                    '\n PUNCH '//MACLIB   DD DISP=(,KEEP),DSN=&SYSX..MACLIB,      '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(40,01,091)),             '\n PUNCH '//            DCB=(&SYS1..MACLIB)                  '\n PUNCH '//PASSWORD DD DISP=(,KEEP),DSN=PASSWORD,           '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01)),                    '\n PUNCH '//            DCB=(RECFM=F,LRECL=80,BLKSIZE=80)    '\n           AIF    (&RACFLG EQ 0).SKPRACF1\n PUNCH '//RACF     DD  DISP=(,KEEP),DSN=&SYSX..RACF,                 '\n PUNCH '//         UNIT=&DEVT,VOL=SER=&VOLUME,                       '\n PUNCH '//         SPACE=(CYL,(02),,CONTIG),                         '\n PUNCH '//         DCB=&SYS1..RACF                                   '\n.SKPRACF1  ANOP\n           AIF    (&DUTFLG EQ 0).SKDUTALC\n PUNCH '//DUTLOAD  DD DISP=(,KEEP),DSN=&SYSX..DUTLOAD,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(02,01,046)),             '\n PUNCH '//            DCB=(&SYS1..DUTLOAD)                 '\n PUNCH '//DUTPLIB  DD DISP=(,KEEP),DSN=&SYSX..DUTPLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(02,01,046)),             '\n PUNCH '//            DCB=(&SYS1..DUTPLIB)                 '\n.SKDUTALC  ANOP\n           AIF    (&DGTFLG EQ 0).SKDGTALC\n PUNCH '//DGTCLIB  DD DISP=(,KEEP),DSN=&SYSX..DGTCLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,046)),             '\n PUNCH '//            DCB=(&SYS1..DGTCLIB)                 '\n PUNCH '//DGTLLIB  DD DISP=(,KEEP),DSN=&SYSX..DGTLLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(05,01,092)),             '\n PUNCH '//            DCB=(&SYS1..DGTLLIB)                 '\n PUNCH '//DGTMLIB  DD DISP=(,KEEP),DSN=&SYSX..DGTMLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(02,01,046)),             '\n PUNCH '//            DCB=(&SYS1..DGTMLIB)                 '\n PUNCH '//DGTPLIB  DD DISP=(,KEEP),DSN=&SYSX..DGTPLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(12,01,092)),             '\n PUNCH '//            DCB=(&SYS1..DGTPLIB)                 '\n PUNCH '//DGTSLIB  DD DISP=(,KEEP),DSN=&SYSX..DGTSLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(02,01,046)),             '\n PUNCH '//            DCB=(&SYS1..DGTSLIB)                 '\n PUNCH '//DGTTLIB  DD DISP=(,KEEP),DSN=&SYSX..DGTTLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,046)),             '\n PUNCH '//            DCB=(&SYS1..DGTTLIB)                 '\n.SKDGTALC  ANOP\n           AIF    (&ISFFLG EQ 0).SKISFALC\n PUNCH '//HASPINDX DD DISP=(,KEEP),DSN=&SYSX..HASPINDX,    '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,1),                       '\n PUNCH '//            DCB=(ISF.HASPINDX)                   '\n PUNCH '//ISFLOAD  DD DISP=(,KEEP),DSN=&SYSX..ISFLOAD,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(10,01,046)),             '\n PUNCH '//            DCB=(&ISFPRE..ISFLOAD)               '\n PUNCH '//ISFLPA   DD DISP=(,KEEP),DSN=&SYSX..ISFLPA,      '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,046)),             '\n PUNCH '//            DCB=(&ISFPRE..ISFLPA)                '\n PUNCH '//ISFPLIB  DD DISP=(,KEEP),DSN=&SYSX..ISFPLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(02,01,046)),             '\n PUNCH '//            DCB=(&ISFPRE..ISFPLIB)               '\n PUNCH '//ISFTLIB  DD DISP=(,KEEP),DSN=&SYSX..ISFTLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,046)),             '\n PUNCH '//            DCB=(&ISFPRE..ISFTLIB)               '\n.SKISFALC  ANOP\n           AIF    (&IPOFLG EQ 0).SKIPOALC\n PUNCH '//IPOHELP  DD DISP=(,KEEP),DSN=&SYSX..IPO.HELP,    '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,046)),             '\n PUNCH '//            DCB=(&IPOPRE..HELP)                  '\n PUNCH '//IPOINST  DD DISP=(,KEEP),DSN=&SYSX..IPO.INSTLIB, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(09,01,046)),             '\n PUNCH '//            DCB=(&IPOPRE..INSTLIB)               '\n PUNCH '//IPOPLIB  DD DISP=(,KEEP),DSN=&SYSX..IPO.ISPPLIB, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,046)),             '\n PUNCH '//            DCB=(&IPOPRE..ISPPLIB)               '\n PUNCH '//IPOJCL   DD DISP=(,KEEP),DSN=&SYSX..IPO.JCLLIB,  '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(03,01,046)),             '\n PUNCH '//            DCB=(&IPOPRE..JCLLIB)                '\n PUNCH '//IPOLINK  DD DISP=(,KEEP),DSN=&SYSX..IPO.LINKLIB, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(04,01,046)),             '\n PUNCH '//            DCB=(&IPOPRE..LINKLIB)               '\n PUNCH '//IPOPROC  DD DISP=(,KEEP),DSN=&SYSX..IPO.PROCLIB, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(02,01,046)),             '\n PUNCH '//            DCB=(&IPOPRE..PROCLIB)               '\n.SKIPOALC  ANOP\n PUNCH '//SVCLIB   DD DISP=(,KEEP),DSN=&SYSX..SVCLIB,      '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(02,01,091)),             '\n PUNCH '//            DCB=(&SYS1..SVCLIB)                  '\n PUNCH '//LPALIB   DD DISP=(,KEEP),DSN=&SYSX..LPALIB,      '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(20,01,413)),             '\n PUNCH '//            DCB=(&SYS1..LPALIB)                  '\n PUNCH '//NUCLEUS  DD DISP=(,KEEP),DSN=&SYSX..NUCLEUS,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(13,01,091)),             '\n PUNCH '//            DCB=(&SYS1..NUCLEUS)                 '\n PUNCH '//SAMPLIB  DD DISP=(,KEEP),DSN=&SYSX..SAMPLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(11,01,092)),             '\n PUNCH '//            DCB=(&SYS1..SAMPLIB)                 '\n PUNCH '//BRODCAST DD DISP=(,KEEP),DSN=&SYSX..BRODCAST,    '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01)),                    '\n PUNCH '//            DCB=(&SYS1..BRODCAST)                '\n PUNCH '//IMAGELIB DD DISP=(,KEEP),DSN=&SYSX..IMAGELIB,    '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(02,01,092)),             '\n PUNCH '//            DCB=(&SYS1..IMAGELIB)                '\n PUNCH '//PARMLIB  DD DISP=(,KEEP),DSN=&SYSX..PARMLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(03,01,091)),             '\n PUNCH '//            DCB=(&SYS1..PARMLIB)                 '\n PUNCH '//PROCLIB  DD DISP=(,KEEP),DSN=&SYSX..PROCLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,091)),             '\n PUNCH '//            DCB=(&SYS1..PROCLIB)                 '\n PUNCH '//UADS     DD DISP=(,KEEP),DSN=&SYSX..UADS,        '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(10,01,091)),             '\n PUNCH '//            DCB=(&SYS1..UADS)                    '\n PUNCH '//ISPLOAD  DD DISP=(,KEEP),DSN=&SYSX..ISPLOAD,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(03,01,046)),             '\n PUNCH '//            DCB=(&ISPPRE..ISPLOAD)               '\n PUNCH '//ISPMLIB  DD DISP=(,KEEP),DSN=&SYSX..ISPMLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,046)),             '\n PUNCH '//            DCB=(&ISPPRE..ISPMLIB)               '\n PUNCH '//ISPPLIB  DD DISP=(,KEEP),DSN=&SYSX..ISPPLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(02,01,046)),             '\n PUNCH '//            DCB=(&ISPPRE..ISPPLIB)               '\n PUNCH '//ISPSLIB  DD DISP=(,KEEP),DSN=&SYSX..ISPSLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,046)),             '\n PUNCH '//            DCB=(&ISPPRE..ISPSLIB)               '\n PUNCH '//ISPTLIB  DD DISP=(,KEEP),DSN=&SYSX..ISPTLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,046)),             '\n PUNCH '//            DCB=(&ISPPRE..ISPTLIB)               '\n PUNCH '//ISRCLIB  DD DISP=(,KEEP),DSN=&SYSX..ISRCLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(02,01,46)),              '\n PUNCH '//            DCB=(&ISRPRE..ISRCLIB)               '\n PUNCH '//ISRJLIB  DD DISP=(,KEEP),DSN=&SYSX..ISRJLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,46)),              '\n PUNCH '//            DCB=(&ISRPRE..ISRJLIB)               '\n PUNCH '//ISRLOAD  DD DISP=(,KEEP),DSN=&SYSX..ISRLOAD,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(06,01,046)),             '\n PUNCH '//            DCB=(&ISRPRE..ISRLOAD)               '\n PUNCH '//ISRMLIB  DD DISP=(,KEEP),DSN=&SYSX..ISRMLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(02,01,046)),             '\n PUNCH '//            DCB=(&ISRPRE..ISRMLIB)               '\n PUNCH '//ISRPLIB  DD DISP=(,KEEP),DSN=&SYSX..ISRPLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(10,01,138)),             '\n PUNCH '//            DCB=(&ISRPRE..ISRPLIB)               '\n PUNCH '//ISRSLIB  DD DISP=(,KEEP),DSN=&SYSX..ISRSLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(05,01,046)),             '\n PUNCH '//            DCB=(&ISRPRE..ISRSLIB)               '\n PUNCH '//ISRTLIB  DD DISP=(,KEEP),DSN=&SYSX..ISRTLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(01,01,046)),             '\n PUNCH '//            DCB=(&ISRPRE..ISRTLIB)               '\n PUNCH '//HASPCKPT DD DISP=(,KEEP),DSN=&SYSX..JESCKPT,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,SPACE=(CYL,4)'\n PUNCH '//HASPACE  DD DISP=(,KEEP),DSN=&SYSX..HASPACE,        '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,SPACE=(CYL,60)'\n PUNCH '//VTAMLST  DD DISP=(,KEEP),DSN=&SYSX..VTAMLST,    '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,             '\n PUNCH '//            SPACE=(CYL,(10,01,91)),                 '\n PUNCH '//            DCB=(&SYS1..&VTAMLST)                   '\n           AIF    (&C10FLG EQ 0).SKC10ALC\n PUNCH '//C10LINK  DD DISP=(,KEEP),DSN=&SYSX..COMTEN.LINKLIB, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(15,01,46)),              '\n PUNCH '//            DCB=(&C10LIB)           '\n.SKC10ALC  ANOP\n PUNCH '//VTAMTBL  DD DISP=(,KEEP),DSN=&SYSX..VTAMTBL,    '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,             '\n PUNCH '//            SPACE=(CYL,(01,01,46)),                 '\n PUNCH '//            DCB=(&TBLDSN)                           '\n PUNCH '//PROF01   DD DISP=(,KEEP),DSN=&SYSX..ISPF1.ISPPROF, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(1,1,45)),                '\n PUNCH '//            DCB=(&USR1..ISPF.ISPPROF)            '\n PUNCH '//PROF02   DD DISP=(,KEEP),DSN=&SYSX..ISPF2.ISPPROF, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(1,1,45)),                '\n PUNCH '//            DCB=(&USR2..ISPF.ISPPROF)            '\n PUNCH '//PROF03   DD DISP=(,KEEP),DSN=&SYSX..ISPF3.ISPPROF, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(1,1,45)),                '\n PUNCH '//            DCB=(&USR3..ISPF.ISPPROF)            '\n PUNCH '//PROF04   DD DISP=(,KEEP),DSN=&SYSX..ISPF4.ISPPROF, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(1,1,45)),                '\n PUNCH '//            DCB=(&USR4..ISPF.ISPPROF)            '\n PUNCH '//PROF05   DD DISP=(,KEEP),DSN=&SYSX..ISPF5.ISPPROF, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,          '\n PUNCH '//            SPACE=(CYL,(1,1,45)),                '\n PUNCH '//            DCB=(&USR5..ISPF.ISPPROF)            '\n PUNCH '//*                                                     '\n PUNCH '//LOAD#01  EXEC PGM=IEBCOPY,REGION=6M                   '\n PUNCH '//SYSPRINT DD   SYSOUT=*                                '\n PUNCH '//SYSUT3  DD   UNIT=SYSDA,SPACE=(CYL,(100,1))           '\n PUNCH '//SYSUT4  DD   UNIT=SYSDA,SPACE=(CYL,(50,1))            '\n PUNCH '//FCMDLIB DD   DISP=SHR,DSN=&SYS1..CMDLIB               '\n PUNCH '//FCMDPROC DD  DISP=SHR,DSN=&CMDPROC                    '\n PUNCH '//FHELP   DD   DISP=SHR,DSN=&SYS1..HELP                 '\n PUNCH '//FIMAGLIB DD  DISP=SHR,DSN=&SYS1..IMAGELIB             '\n PUNCH '//FLINKLIB DD  DISP=SHR,DSN=&SYS1..LINKLIB              '\n           AIF    (&OEMFLG EQ 0).SKOEMIDD\n PUNCH '//FOEMLINK DD  DISP=SHR,DSN=&OEMPRE..LINKLIB            '\n.SKOEMIDD ANOP\n PUNCH '//FLPALIB DD   DISP=SHR,DSN=&SYS1..LPALIB               '\n PUNCH '//FMACLIB DD   DISP=SHR,DSN=&SYS1..MACLIB               '\n PUNCH '//FNUCLEUS DD  DISP=SHR,DSN=&SYS1..NUCLEUS              '\n         AIF ('&NCP' EQ 'N').NCP2\n PUNCH '//FNCPLIB DD   DISP=SHR,DSN=&SYS1..NCPLIB               '\n PUNCH '//FSSPLIB DD   DISP=SHR,DSN=&SYS1..SSPLIB               '\n.NCP2   ANOP\n PUNCH '//FPARMLIB DD  DISP=SHR,DSN=&SYS1..PARMLIB              '\n PUNCH '//FPROCLIB DD  DISP=SHR,DSN=&SYS1..PROCLIB              '\n PUNCH '//FSAMPLIB DD  DISP=SHR,DSN=&SYS1..SAMPLIB              '\n PUNCH '//FSVCLIB DD   DISP=SHR,DSN=&SYS1..SVCLIB               '\n PUNCH '//*                                                     '\n PUNCH '//TCMDLIB DD   DISP=SHR,DSN=&SYSX..CMDLIB,              '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TCMDPROC DD  DISP=SHR,DSN=&SYSX..CMDPROC,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//THELP   DD   DISP=SHR,DSN=&SYSX..HELP,                '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TIMAGLIB DD  DISP=SHR,DSN=&SYSX..IMAGELIB,            '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TLINKLIB DD  DISP=SHR,DSN=&SYSX..LINKLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n           AIF    (&OEMFLG EQ 0).SKOEMODD\n PUNCH '//TOEMLINK DD  DISP=SHR,DSN=&SYSX..OEM.LINKLIB,         '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n.SKOEMODD ANOP\n PUNCH '//TLPALIB DD   DISP=SHR,DSN=&SYSX..LPALIB,              '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TMACLIB DD   DISP=SHR,DSN=&SYSX..MACLIB,              '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n         AIF ('&NCP' EQ 'N').NCP3\n PUNCH '//TNCPLIB DD   DISP=SHR,DSN=&SYSX..NCPLIB,              '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TSSPLIB DD   DISP=SHR,DSN=&SYSX..SSPLIB,              '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n.NCP3   ANOP\n PUNCH '//TNUCLEUS DD  DISP=SHR,DSN=&SYSX..NUCLEUS,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TPARMLIB DD  DISP=SHR,DSN=&SYSX..PARMLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TPROCLIB DD  DISP=SHR,DSN=&SYSX..PROCLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TSAMPLIB DD  DISP=SHR,DSN=&SYSX..SAMPLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TSVCLIB DD   DISP=SHR,DSN=&SYSX..SVCLIB,              '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//SYSIN   DD   *                                        '\n PUNCH 'LOAD#01 COPY INDD=FCMDLIB,OUTDD=TCMDLIB,LIST=NO         '\n PUNCH 'LOAD#01 COPY INDD=FCMDPROC,OUTDD=TCMDPROC,LIST=NO       '\n PUNCH 'LOAD#01 COPY INDD=FHELP,OUTDD=THELP,LIST=NO             '\n PUNCH 'LOAD#01 COPY INDD=FIMAGLIB,OUTDD=TIMAGLIB,LIST=NO       '\n PUNCH 'LOAD#01 COPY INDD=FLINKLIB,OUTDD=TLINKLIB,LIST=NO       '\n           AIF    (&OEMFLG EQ 0).SKOEMSIN\n PUNCH 'LOAD#01 COPY INDD=FOEMLINK,OUTDD=TOEMLINK,LIST=NO       '\n.SKOEMSIN ANOP\n PUNCH 'LOAD#01 COPY INDD=FLPALIB,OUTDD=TLPALIB,LIST=NO         '\n PUNCH 'LOAD#01 COPY INDD=FMACLIB,OUTDD=TMACLIB,LIST=NO         '\n         AIF ('&NCP' EQ 'N').NCP4\n PUNCH 'LOAD#01 COPY INDD=FNCPLIB,OUTDD=TNCPLIB,LIST=NO         '\n PUNCH 'LOAD#01 COPY INDD=FSSPLIB,OUTDD=TSSPLIB,LIST=NO         '\n.NCP4   ANOP\n PUNCH 'LOAD#01 COPY INDD=FNUCLEUS,OUTDD=TNUCLEUS,LIST=NO       '\n PUNCH 'LOAD#01 COPY INDD=FPARMLIB,OUTDD=TPARMLIB,LIST=NO       '\n PUNCH 'LOAD#01 COPY INDD=FPROCLIB,OUTDD=TPROCLIB,LIST=NO       '\n PUNCH 'LOAD#01 COPY INDD=FSAMPLIB,OUTDD=TSAMPLIB,LIST=NO       '\n PUNCH 'LOAD#01 COPY INDD=FSVCLIB,OUTDD=TSVCLIB,LIST=NO         '\n PUNCH '/*                                                      '\n PUNCH '//*                                                     '\n PUNCH '//LOAD#02 EXEC PGM=IEBCOPY,REGION=6M                    '\n PUNCH '//SYSPRINT DD  SYSOUT=*                                 '\n PUNCH '//SYSUT3  DD   UNIT=SYSDA,SPACE=(CYL,(48,8))            '\n PUNCH '//SYSUT4  DD   UNIT=SYSDA,SPACE=(CYL,(48,8))            '\n PUNCH '//FISPLOAD DD  DISP=SHR,DSN=&ISPPRE..ISPLOAD            '\n PUNCH '//FISPMLIB DD  DISP=SHR,DSN=&ISPPRE..ISPMLIB            '\n PUNCH '//FISPPLIB DD  DISP=SHR,DSN=&ISPPRE..ISPPLIB            '\n PUNCH '//FISPSLIB DD  DISP=SHR,DSN=&ISPPRE..ISPSLIB            '\n PUNCH '//FISPTLIB DD  DISP=SHR,DSN=&ISPPRE..ISPTLIB            '\n PUNCH '//FISRCLIB DD  DISP=SHR,DSN=&ISRPRE..ISRCLIB            '\n PUNCH '//FISRJLIB DD  DISP=SHR,DSN=&ISRPRE..ISRJLIB            '\n PUNCH '//FISRLOAD DD  DISP=SHR,DSN=&ISRPRE..ISRLOAD            '\n PUNCH '//FISRMLIB DD  DISP=SHR,DSN=&ISRPRE..ISRMLIB            '\n PUNCH '//FISRPLIB DD  DISP=SHR,DSN=&ISRPRE..ISRPLIB            '\n PUNCH '//FISRSLIB DD  DISP=SHR,DSN=&ISRPRE..ISRSLIB            '\n PUNCH '//FISRTLIB DD  DISP=SHR,DSN=&ISRPRE..ISRTLIB            '\n           AIF    (&DUTFLG EQ 0).SKDUTIDD\n PUNCH '//FDUTLOAD DD  DISP=SHR,DSN=&SYS1..DUTLOAD              '\n PUNCH '//FDUTPLIB DD  DISP=SHR,DSN=&SYS1..DUTPLIB              '\n.SKDUTIDD ANOP\n           AIF    (&DGTFLG EQ 0).SKDGTIDD\n PUNCH '//FDGTCLIB DD  DISP=SHR,DSN=&SYS1..DGTCLIB              '\n PUNCH '//FDGTLLIB DD  DISP=SHR,DSN=&SYS1..DGTLLIB              '\n PUNCH '//FDGTMLIB DD  DISP=SHR,DSN=&SYS1..DGTMLIB              '\n PUNCH '//FDGTPLIB DD  DISP=SHR,DSN=&SYS1..DGTPLIB              '\n PUNCH '//FDGTSLIB DD  DISP=SHR,DSN=&SYS1..DGTSLIB              '\n PUNCH '//FDGTTLIB DD  DISP=SHR,DSN=&SYS1..DGTTLIB              '\n.SKDGTIDD ANOP\n           AIF    (&ISFFLG EQ 0).SKISFIDD\n PUNCH '//FISFLOAD DD  DISP=SHR,DSN=&ISFPRE..ISFLOAD            '\n PUNCH '//FISFLPA  DD  DISP=SHR,DSN=&ISFPRE..ISFLPA             '\n PUNCH '//FISFPLIB DD  DISP=SHR,DSN=&ISFPRE..ISFPLIB            '\n PUNCH '//FISFTLIB DD  DISP=SHR,DSN=&ISFPRE..ISFTLIB            '\n.SKISFIDD ANOP\n           AIF    (&IPOFLG EQ 0).SKIPOIDD\n PUNCH '//FIPOHELP DD  DISP=SHR,DSN=&IPOPRE..HELP          '\n PUNCH '//FIPOINST DD  DISP=SHR,DSN=&IPOPRE..INSTLIB       '\n PUNCH '//FIPOPLIB DD  DISP=SHR,DSN=&IPOPRE..ISPPLIB       '\n PUNCH '//FIPOJCL  DD  DISP=SHR,DSN=&IPOPRE..JCLLIB        '\n PUNCH '//FIPOLINK DD  DISP=SHR,DSN=&IPOPRE..LINKLIB       '\n PUNCH '//FIPOPROC DD  DISP=SHR,DSN=&IPOPRE..PROCLIB       '\n.SKIPOIDD ANOP\n PUNCH '//FPROFPR1 DD  DSN=&USR1..ISPF.ISPPROF,DISP=SHR     '\n PUNCH '//FPROFPR2 DD  DSN=&USR2..ISPF.ISPPROF,DISP=SHR     '\n PUNCH '//FPROFPR3 DD  DSN=&USR3..ISPF.ISPPROF,DISP=SHR     '\n PUNCH '//FPROFPR4 DD  DSN=&USR4..ISPF.ISPPROF,DISP=SHR     '\n PUNCH '//FPROFPR5 DD  DSN=&USR5..ISPF.ISPPROF,DISP=SHR     '\n PUNCH '//*                                                     '\n PUNCH '//TISPLOAD DD  DISP=SHR,DSN=&SYSX..ISPLOAD,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISPMLIB DD  DISP=SHR,DSN=&SYSX..ISPMLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISPPLIB DD  DISP=SHR,DSN=&SYSX..ISPPLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISPSLIB DD  DISP=SHR,DSN=&SYSX..ISPSLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISPTLIB DD  DISP=SHR,DSN=&SYSX..ISPTLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISRCLIB DD  DISP=SHR,DSN=&SYSX..ISRCLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISRJLIB DD  DISP=SHR,DSN=&SYSX..ISRJLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISRLOAD DD  DISP=SHR,DSN=&SYSX..ISRLOAD,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISRMLIB DD  DISP=SHR,DSN=&SYSX..ISRMLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISRPLIB DD  DISP=SHR,DSN=&SYSX..ISRPLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISRSLIB DD  DISP=SHR,DSN=&SYSX..ISRSLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISRTLIB DD  DISP=SHR,DSN=&SYSX..ISRTLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n           AIF    (&DUTFLG EQ 0).SKDUTODD\n PUNCH '//TDUTLOAD DD  DISP=SHR,DSN=&SYSX..DUTLOAD,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TDUTPLIB DD  DISP=SHR,DSN=&SYSX..DUTPLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n.SKDUTODD ANOP\n           AIF    (&DGTFLG EQ 0).SKDGTODD\n PUNCH '//TDGTCLIB DD  DISP=SHR,DSN=&SYSX..DGTCLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TDGTLLIB DD  DISP=SHR,DSN=&SYSX..DGTLLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TDGTMLIB DD  DISP=SHR,DSN=&SYSX..DGTMLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TDGTPLIB DD  DISP=SHR,DSN=&SYSX..DGTPLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TDGTSLIB DD  DISP=SHR,DSN=&SYSX..DGTSLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TDGTTLIB DD  DISP=SHR,DSN=&SYSX..DGTTLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n.SKDGTODD ANOP\n           AIF    (&ISFFLG EQ 0).SKISFODD\n PUNCH '//TISFLOAD DD  DISP=SHR,DSN=&SYSX..ISFLOAD,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISFLPA  DD  DISP=SHR,DSN=&SYSX..ISFLPA,              '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISFPLIB DD  DISP=SHR,DSN=&SYSX..ISFPLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n PUNCH '//TISFTLIB DD  DISP=SHR,DSN=&SYSX..ISFTLIB,             '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n.SKISFODD ANOP\n           AIF    (&IPOFLG EQ 0).SKIPOODD\n PUNCH '//TIPOHELP DD  DISP=SHR,DSN=&SYSX..IPO.HELP,       '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME               '\n PUNCH '//TIPOINST DD  DISP=SHR,DSN=&SYSX..IPO.INSTLIB,    '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME               '\n PUNCH '//TIPOPLIB DD  DISP=SHR,DSN=&SYSX..IPO.ISPPLIB,    '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME               '\n PUNCH '//TIPOJCL  DD  DISP=SHR,DSN=&SYSX..IPO.JCLLIB,     '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME               '\n PUNCH '//TIPOLINK DD  DISP=SHR,DSN=&SYSX..IPO.LINKLIB,    '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME               '\n PUNCH '//TIPOPROC DD  DISP=SHR,DSN=&SYSX..IPO.PROCLIB,    '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME               '\n.SKIPOODD ANOP\n PUNCH '//TLINKLIB DD  DSN=&SYSX..LINKLIB,DISP=SHR,             '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME                '\n PUNCH '//TPROFPR1 DD  DSN=&SYSX..ISPF1.ISPPROF,DISP=SHR,       '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,FREE=CLOSE     '\n PUNCH '//TPROFPR2 DD  DSN=&SYSX..ISPF2.ISPPROF,DISP=SHR,       '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,FREE=CLOSE     '\n PUNCH '//TPROFPR3 DD  DSN=&SYSX..ISPF3.ISPPROF,DISP=SHR,       '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,FREE=CLOSE     '\n PUNCH '//TPROFPR4 DD  DSN=&SYSX..ISPF4.ISPPROF,DISP=SHR,       '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,FREE=CLOSE     '\n PUNCH '//TPROFPR5 DD  DSN=&SYSX..ISPF5.ISPPROF,DISP=SHR,       '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME,FREE=CLOSE     '\n PUNCH '//SYSIN   DD   *                                        '\n PUNCH 'LOAD#02 COPY INDD=FISPLOAD,OUTDD=TISPLOAD,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISPMLIB,OUTDD=TISPMLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISPPLIB,OUTDD=TISPPLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISPSLIB,OUTDD=TISPSLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISPTLIB,OUTDD=TISPTLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISRCLIB,OUTDD=TISRCLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISRJLIB,OUTDD=TISRJLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISRLOAD,OUTDD=TISRLOAD,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISRMLIB,OUTDD=TISRMLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISRPLIB,OUTDD=TISRPLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISRSLIB,OUTDD=TISRSLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISRTLIB,OUTDD=TISRTLIB,LIST=NO       '\n           AIF    (&DUTFLG EQ 0).SKDUTSIN\n PUNCH 'LOAD#02 COPY INDD=FDUTLOAD,OUTDD=TDUTLOAD,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FDUTPLIB,OUTDD=TDUTPLIB,LIST=NO       '\n.SKDUTSIN ANOP\n           AIF    (&DGTFLG EQ 0).SKDGTSIN\n PUNCH 'LOAD#02 COPY INDD=FDGTCLIB,OUTDD=TDGTCLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FDGTLLIB,OUTDD=TDGTLLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FDGTMLIB,OUTDD=TDGTMLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FDGTPLIB,OUTDD=TDGTPLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FDGTSLIB,OUTDD=TDGTSLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FDGTTLIB,OUTDD=TDGTTLIB,LIST=NO       '\n.SKDGTSIN ANOP\n           AIF    (&ISFFLG EQ 0).SKISFSIN\n PUNCH 'LOAD#02 COPY INDD=FISFLOAD,OUTDD=TISFLOAD,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISFLPA,OUTDD=TISFLPA,LIST=NO         '\n PUNCH 'LOAD#02 COPY INDD=FISFPLIB,OUTDD=TISFPLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FISFTLIB,OUTDD=TISFTLIB,LIST=NO       '\n.SKISFSIN ANOP\n           AIF    (&IPOFLG EQ 0).SKIPOSIN\n PUNCH 'LOAD#02 COPY INDD=FIPOHELP,OUTDD=TIPOHELP,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FIPOINST,OUTDD=TIPOINST,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FIPOPLIB,OUTDD=TIPOPLIB,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FIPOJCL,OUTDD=TIPOJCL,LIST=NO         '\n PUNCH 'LOAD#02 COPY INDD=FIPOLINK,OUTDD=TIPOLINK,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FIPOPROC,OUTDD=TIPOPROC,LIST=NO       '\n.SKIPOSIN ANOP\n PUNCH 'LOAD#02 COPY INDD=FPROFPR1,OUTDD=TPROFPR1,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FPROFPR2,OUTDD=TPROFPR2,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FPROFPR3,OUTDD=TPROFPR3,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FPROFPR4,OUTDD=TPROFPR4,LIST=NO       '\n PUNCH 'LOAD#02 COPY INDD=FPROFPR5,OUTDD=TPROFPR5,LIST=NO       '\n PUNCH '/*                                                      '\n PUNCH '//*                                                     '\n PUNCH '//LOAD#03 EXEC PGM=IEBCOPY,REGION=4M                    '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//* COPY VTAM LIBRARIES                                 '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//SYSPRINT DD  SYSOUT=*                                 '\n PUNCH '//SYSUT3  DD   UNIT=SYSDA,SPACE=(CYL,(48,8))            '\n PUNCH '//SYSUT4  DD   UNIT=SYSDA,SPACE=(CYL,(48,8))            '\n PUNCH '//FVTAMLIB DD  DSN=&SYS1..&VTAMLIB,DISP=SHR             '\n PUNCH '//FVTAMLST DD  DSN=&SYS1..&VTAMLST,DISP=SHR             '\n PUNCH '//FVTAMTBL DD  DISP=SHR,DSN=&TBLDSN     '\n           AIF    (&C10FLG EQ 0).SKC10IDD\n PUNCH '//FC10LINK DD  DISP=SHR,DSN=&C10LIB '\n.SKC10IDD ANOP\n PUNCH '//TVTAMLIB DD  DSN=&SYSX..VTAMLIB,DISP=SHR,             '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME                '\n PUNCH '//TVTAMLST DD  DSN=&SYSX..VTAMLST,DISP=SHR,             '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME                '\n PUNCH '//TVTAMTBL DD  DSN=&SYSX..VTAMTBL,DISP=SHR,             '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME                '\n           AIF    (&C10FLG EQ 0).SKC10ODD\n PUNCH '//TC10LINK DD  DISP=SHR,DSN=&SYSX..COMTEN.LINKLIB, '\n PUNCH '//        UNIT=&DEVT,VOL=SER=&VOLUME                    '\n.SKC10ODD ANOP\n PUNCH '//SYSIN   DD   *                                        '\n PUNCH 'LOAD#03 COPY INDD=FVTAMLIB,OUTDD=TVTAMLIB,LIST=NO       '\n PUNCH 'LOAD#03 COPY INDD=FVTAMLST,OUTDD=TVTAMLST,LIST=NO       '\n PUNCH 'LOAD#03 COPY INDD=FVTAMTBL,OUTDD=TVTAMTBL,LIST=NO       '\n           AIF    (&C10FLG EQ 0).SKC10SIN\n PUNCH 'LOAD#03 COPY INDD=FC10LINK,OUTDD=TC10LINK,LIST=NO       '\n.SKC10SIN ANOP\n PUNCH '/*                                                      '\n PUNCH '//*                                                     '\n PUNCH '//RNPROCS  EXEC PGM=IDCAMS,REGION=2M               '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//*      RENAME PROCS IN &SYSX..PROCLIB                 '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//SYSPRINT DD  SYSOUT=*                            '\n PUNCH '//PROCLIB  DD DSN=&SYSX..PROCLIB,                  '\n PUNCH '//            DISP=SHR,UNIT=&DEVT,VOL=SER=&VOLUME  '\n PUNCH '//SYSIN   DD   *                                   '\n PUNCH ' ALTER &SYSX..PROCLIB(JES2) -                      '\n PUNCH '       FILE(PROCLIB) -                             '\n PUNCH '       NEWNAME(&SYSX..PROCLIB(JES2PROD))           '\n PUNCH ' ALTER &SYSX..PROCLIB(JES2RESQ) -                  '\n PUNCH '       FILE(PROCLIB) -                             '\n PUNCH '       NEWNAME(&SYSX..PROCLIB(JES2))               '\n PUNCH ' ALTER &SYSX..PROCLIB(VTAM) -                      '\n PUNCH '       FILE(PROCLIB) -                             '\n PUNCH '       NEWNAME(&SYSX..PROCLIB(VTAMPROD))           '\n PUNCH ' ALTER &SYSX..PROCLIB(VTAMRESQ) -                  '\n PUNCH '       FILE(PROCLIB) -                             '\n PUNCH '       NEWNAME(&SYSX..PROCLIB(VTAM))               '\n PUNCH ' ALTER &SYSX..PROCLIB(VTAM0) -                     '\n PUNCH '       FILE(PROCLIB) -                             '\n PUNCH '       NEWNAME(&SYSX..PROCLIB(VTAM0PRD))           '\n PUNCH ' ALTER &SYSX..PROCLIB(VTAM0RSQ) -                  '\n PUNCH '       FILE(PROCLIB) -                             '\n PUNCH '       NEWNAME(&SYSX..PROCLIB(VTAM0))              '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n PUNCH '//RNPARMS  EXEC PGM=IDCAMS,REGION=2M               '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//*        RENAME  PARMLIB MEMBERS                      '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//SYSPRINT DD  SYSOUT=*                            '\n PUNCH '//PARMLIB  DD DSN=&SYSX..PARMLIB,                  '\n PUNCH '//            DISP=SHR,UNIT=&DEVT,VOL=SER=&VOLUME  '\n PUNCH '//SYSIN   DD   *                                   '\n PUNCH ' ALTER &SYSX..PARMLIB(IEASYS00) -                  '\n PUNCH '       FILE(PARMLIB) -                             '\n PUNCH '       NEWNAME(&SYSX..PARMLIB(IEASYSPR))           '\n PUNCH ' ALTER &SYSX..PARMLIB(IEASYSRQ) -                  '\n PUNCH '       FILE(PARMLIB) -                             '\n PUNCH '       NEWNAME(&SYSX..PARMLIB(IEASYS00))           '\n PUNCH ' ALTER &SYSX..PARMLIB(IEACMD00) -                  '\n PUNCH '       FILE(PARMLIB) -                             '\n PUNCH '       NEWNAME(&SYSX..PARMLIB(IEACMDPR))           '\n PUNCH ' ALTER &SYSX..PARMLIB(IEACMDRQ) -                  '\n PUNCH '       FILE(PARMLIB) -                             '\n PUNCH '       NEWNAME(&SYSX..PARMLIB(IEACMD00))           '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n PUNCH '//RNVTAML  EXEC PGM=IDCAMS,REGION=2M               '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//*        RENAME  VTAMLST MEMBERS                      '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//SYSPRINT DD  SYSOUT=*                            '\n PUNCH '//VTAMLST  DD DSN=&SYSX..VTAMLST,                  '\n PUNCH '//            DISP=SHR,UNIT=&DEVT,VOL=SER=&VOLUME  '\n PUNCH '//SYSIN   DD   *                                   '\n PUNCH ' ALTER &SYSX..VTAMLST(ATCSTR00) -                  '\n PUNCH '       FILE(VTAMLST) -                             '\n PUNCH '       NEWNAME(&SYSX..VTAMLST(ATCSTRPR))           '\n PUNCH ' ALTER &SYSX..VTAMLST(ATCSTRRQ) -                  '\n PUNCH '       FILE(VTAMLST) -                             '\n PUNCH '       NEWNAME(&SYSX..VTAMLST(ATCSTR00))           '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n PUNCH '//                                                 '\n PUNCH '//&JOBNAME.3 JOB ('&JOBACCT'),''&JOBPROGM'',          '\n         AIF    (K'&NOTIFY EQ 0).SKIPNO3\n PUNCH '//           NOTIFY=&NOTIFY, '\n.SKIPNO3  ANOP\n PUNCH '//           REGION=3M,                            '\n PUNCH '//           CLASS=&JOBCLASS,MSGCLASS=&JOBMSGCL.&TYPRN'\n PUNCH '//*------------------------------------------------------*'\n PUNCH '//*                                                      *'\n PUNCH '//*  _STEPS_   __________ FUNCTION _____________________ *'\n PUNCH '//*  IFCDIP00   INITS THE LOGREC DATASET                 *'\n PUNCH '//*  COPYUADS   COPIES CURRENT UADS FOR SELECTED USERS   *'\n PUNCH '//*  RNUSRS@    RENAMES UADS MEMBERS FOR RESQTSO STEP    *'\n PUNCH '//*  RESQTSO    SYNC UADS, ADD PROC, CHANGE PSWDS        *'\n PUNCH '//*  RNUSRS     RENAMES UADS MEMBERS BACK TO NORMAL      *'\n PUNCH '//*  IDUMP00    INITS DUMP DATASETS                      *'\n            AIF    (&RACFLG EQ 0).SKPRACFX\n PUNCH '//*  INITALZE   INITS THE RACF DATASET                   *'\n.SKPRACFX   ANOP\n PUNCH '//*  FORMAT     FORMATS SMF DATASETS                     *'\n PUNCH '//*  PROTECT    PROTECTS MASTER CATALOG                  *'\n PUNCH '//*  SYSCATLG   BUILD, RELPACE, SYSCATLG MEMBER IN NUC   *'\n PUNCH '//*  PRINTPTR   PRINT NEW SYSCATLG POINTER               *'\n PUNCH '//*------------------------------------------------------*'\n PUNCH '//*                                                       '\n PUNCH '//IFCDIP00 EXEC PGM=IFCDIP00                              '\n PUNCH '//SERERDS DD DISP=SHR,DSN=&SYSX..LOGREC,                  '\n PUNCH '// UNIT=&DEVT,VOL=SER=&VOLUME                             '\n PUNCH '//*                                                       '\n PUNCH '//COPYUADS EXEC PGM=IEBCOPY                               '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//* COPY UADS ENTRIES FOR SELECTED TSO USERS            '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//SYSUT2   DD UNIT=SYSDA,SPACE=(20,10)             '\n PUNCH '//SYSUT3   DD UNIT=SYSDA,SPACE=(20,10)             '\n PUNCH '//FUADS    DD DSN=SYS1.UADS,DISP=SHR               '\n PUNCH '//TUADS    DD DSN=&SYSX..UADS,DISP=SHR,            '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME           '\n PUNCH '//SYSIN    DD *                                    '\n PUNCH ' COPY I=((FUADS,R)),O=TUADS                        '\n PUNCH ' SELECT MEMBER=(&USR1.0,&USR2.0,&USR3.0,&USR4.0,&USR5.0)  '\n PUNCH '/*                                                        '\n PUNCH '//*                                                       '\n PUNCH '//RNUSRS@  EXEC PGM=IDCAMS,REGION=2M               '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//* RENAME USERS - THIS ALLOWS THE ACCOUNT COMMAND TO   '\n PUNCH '//* DO ITS THING EVEN IF A USER IS LOGGED ON WHEN       '\n PUNCH '//* THIS JOB IS RUN                                     '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//SYSPRINT DD  SYSOUT=*                            '\n PUNCH '//UADS     DD DSN=&SYSX..UADS,                     '\n PUNCH '//            DISP=SHR,UNIT=&DEVT,VOL=SER=&VOLUME  '\n PUNCH '//SYSIN   DD   *                                   '\n PUNCH ' ALTER &SYSX..UADS(&USR1.0) -                      '\n PUNCH '       FILE(UADS) -                                '\n PUNCH '       NEWNAME(&SYSX..UADS(@&USR1.0))              '\n PUNCH ' ALTER &SYSX..UADS(&USR2.0) -                      '\n PUNCH '       FILE(UADS) -                                '\n PUNCH '       NEWNAME(&SYSX..UADS(@&USR2.0))              '\n PUNCH ' ALTER &SYSX..UADS(&USR3.0) -                      '\n PUNCH '       FILE(UADS) -                                '\n PUNCH '       NEWNAME(&SYSX..UADS(@&USR3.0))              '\n PUNCH ' ALTER &SYSX..UADS(&USR4.0) -                      '\n PUNCH '       FILE(UADS) -                                '\n PUNCH '       NEWNAME(&SYSX..UADS(@&USR4.0))              '\n PUNCH ' ALTER &SYSX..UADS(&USR5.0) -                      '\n PUNCH '       FILE(UADS) -                                '\n PUNCH '       NEWNAME(&SYSX..UADS(@&USR5.0))              '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n PUNCH '//RESQTSO  EXEC PGM=IKJEFT01,                           '\n PUNCH '//        DYNAMNBR=15,                                  '\n PUNCH '//        REGION=2M                                     '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//* SYNC UADS, ADD LOGON PROC, CHANGE PASSWORD          '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//SYSUADS  DD DSN=&SYSX..UADS,DISP=SHR,            '\n PUNCH '//            VOL=SER=&VOLUME,UNIT=&DEVT           '\n PUNCH '//SYSLBC   DD DSN=&SYSX..BRODCAST,DISP=SHR,        '\n PUNCH '//            VOL=SER=&VOLUME,UNIT=&DEVT           '\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//SYSTSPRT DD SYSOUT=*                             '\n PUNCH '//SYSTERM  DD SYSOUT=*                             '\n PUNCH '//SYSIN    DD DUMMY                                '\n PUNCH '//SYSTSIN  DD *                                    '\n PUNCH ' ACCOUNT                                           '\n PUNCH ' SYNC                                              '\n PUNCH ' A (@&USR1 * *) DATA(&TSOPROC)                     '\n PUNCH ' C (@&USR1 *) DATA(&TSOPASS)                       '\n PUNCH ' A (@&USR2 * *) DATA(&TSOPROC)                     '\n PUNCH ' C (@&USR2 *) DATA(&TSOPASS)                       '\n PUNCH ' A (@&USR3 * *) DATA(&TSOPROC)                     '\n PUNCH ' C (@&USR3 *) DATA(&TSOPASS)                       '\n PUNCH ' A (@&USR4 * *) DATA(&TSOPROC)                     '\n PUNCH ' C (@&USR4 *) DATA(&TSOPASS)                       '\n PUNCH ' A (@&USR5 * *) DATA(&TSOPROC)                     '\n PUNCH ' C (@&USR5 *) DATA(&TSOPASS)                       '\n PUNCH ' END                                               '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n PUNCH '//RNUSRS   EXEC PGM=IDCAMS,REGION=2M               '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//* RENAME USERS BACK TO ORIGINAL NAME                  '\n PUNCH '//*-----------------------------------------------------'\n PUNCH '//SYSPRINT DD  SYSOUT=*                            '\n PUNCH '//UADS     DD DSN=&SYSX..UADS,                     '\n PUNCH '//            DISP=SHR,UNIT=&DEVT,VOL=SER=&VOLUME  '\n PUNCH '//SYSIN   DD   *                                   '\n PUNCH ' ALTER &SYSX..UADS(@&USR1.0) -                     '\n PUNCH '       FILE(UADS) -                                '\n PUNCH '       NEWNAME(&SYSX..UADS(&USR1.0))               '\n PUNCH ' ALTER &SYSX..UADS(@&USR2.0) -                     '\n PUNCH '       FILE(UADS) -                                '\n PUNCH '       NEWNAME(&SYSX..UADS(&USR2.0))               '\n PUNCH ' ALTER &SYSX..UADS(@&USR3.0) -                     '\n PUNCH '       FILE(UADS) -                                '\n PUNCH '       NEWNAME(&SYSX..UADS(&USR3.0))               '\n PUNCH ' ALTER &SYSX..UADS(@&USR4.0) -                     '\n PUNCH '       FILE(UADS) -                                '\n PUNCH '       NEWNAME(&SYSX..UADS(&USR4.0))               '\n PUNCH ' ALTER &SYSX..UADS(@&USR5.0) -                     '\n PUNCH '       FILE(UADS) -                                '\n PUNCH '       NEWNAME(&SYSX..UADS(&USR5.0))               '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n PUNCH '//IDUMP00 EXEC PGM=IEBGENER                        '\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//SYSIN    DD DUMMY                                '\n PUNCH '//SYSUT1   DD DUMMY,DCB=&SYS1..DUMP00              '\n PUNCH '//SYSUT2   DD DSN=&SYSX..DUMP00,DISP=SHR,          '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME           '\n PUNCH '//*                                                '\n PUNCH '//IDUMP01 EXEC PGM=IEBGENER                               '\n PUNCH '//SYSPRINT DD SYSOUT=*                                    '\n PUNCH '//SYSIN    DD DUMMY                                       '\n PUNCH '//SYSUT1   DD DUMMY,DCB=&SYS1..DUMP00                     '\n PUNCH '//SYSUT2   DD DSN=&SYSX..DUMP01,DISP=SHR,                 '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME                  '\n            AIF    (&RACFLG EQ 0).SKPRACF3\n PUNCH '//*                                                       '\n PUNCH '//INITALZE EXEC PGM=ICHMIN00,PARM=NEW                     '\n PUNCH '//SYSPRINT DD SYSOUT=*                                    '\n PUNCH '//SYSTEMP DD DSN=&SYSX..MACLIB(ICHTEMP0),DISP=SHR         '\n PUNCH '//SYSRACF DD DSN=&SYSX..RACF,DISP=OLD,                    '\n PUNCH '// UNIT=&DEVT,VOL=SER=&VOLUME                             '\n.SKPRACF3  ANOP\n PUNCH '//*                                                       '\n PUNCH '//FORMAT EXEC PGM=IFASMFDP,REGION=2M               '\n PUNCH '//STEPCAT  DD DSN=&CATALOG,DISP=SHR                '\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//NEWMAN1  DD DSN=&SYS1..MAN1,DISP=SHR,            '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME           '\n PUNCH '//NEWMAN2  DD DSN=&SYS1..MAN2,DISP=SHR,            '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME           '\n PUNCH '//SYSIN    DD *                                    '\n PUNCH ' INDD(NEWMAN1,OPTIONS(CLEAR))                      '\n PUNCH ' INDD(NEWMAN2,OPTIONS(CLEAR))                      '\n PUNCH '/*                                                        '\n PUNCH '//*                                                       '\n PUNCH '//PROTECT  EXEC PGM=IDCAMS                                '\n PUNCH '//STEPCAT  DD DSN=&CATALOG,DISP=SHR                       '\n PUNCH '//SYSPRINT DD SYSOUT=*                                    '\n PUNCH '//SYSIN    DD *                                           '\n PUNCH ' ALTER &CATALOG MRPW(&MASTRPW) UPDPW(&MASTRPW) -'\n PUNCH ' ATT(3) CODE(MASTCAT) -                                   '\n PUNCH ' CAT(&CATALOG/&MASTRPW) '\n PUNCH ' LISTC CAT(&CATALOG/&MASTRPW) ALL '\n PUNCH '/*                                                        '\n PUNCH '//*                                                       '\n PUNCH '//SYSCATLG EXEC PGM=IEBDG,REGION=512K                        '\n PUNCH '//*-----------------------------------------------------------'\n PUNCH '//* DOC: THE PURPOSE OF THIS STEP  TO REPLACE MEMBER SYSCATLG'\n PUNCH '//*     IN DATA SET \"SYS1.NUCLEUS\" TO FACILITATE THE USE OF AN'\n PUNCH '//*    EXISTING ICF OR VSAM MASTER CATALOG WITH A NEWLY CREATE' D\n PUNCH '//*     IPL VOLUME.                                           '\n PUNCH '//*                                                           '\n PUNCH '//* NOTES: ACCEPTABLE CATALOG TYPE VALUES FOR \"FILL=\" ON THE  '\n PUNCH '//*        \"CATTYPE\" FD STATEMENT ARE:                        '\n PUNCH '//*          X''00'' AND X''40''  -  VSAM MASTER CATALOG      '\n PUNCH '//*          X''F1''            -  ICF MASTER CATALOG         '\n PUNCH '//*                                                           '\n PUNCH '//*        ACCEPTABLE IPO SUPPORTED DEVICE TYPES FOR \"FILL=\"  '\n PUNCH '//*        ON THE \"DEV\" FD STATEMENT ARE:                     '\n PUNCH '//*          X''0B'' 3350          X''0E'' 3380               '\n PUNCH '//*          X''0C'' 3375                                     '\n PUNCH '//*        THE IPO SUPPLIED DEFAULT IS X''0E'' FOR A 3380     '\n PUNCH '//*                                                           '\n PUNCH '//*        EXAMPLES OF OTHER DEVICE TYPE VALUES FOR \"FILL=\"   '\n PUNCH '//*        ON THE \"DEV\" FD STATEMENT ARE:                     '\n PUNCH '//*          X''0D'' 3330-1        X''06'' 2305-1             '\n PUNCH '//*          X''09'' 3330          X''07'' 2305-2             '\n PUNCH '//*          X''0A'' 3340          X''08'' 2314               '\n PUNCH '//*    THESE DEVICES ARE NOT SUPPORTED BY IPO FOR IPO VOLUMES;'\n PUNCH '//*    THESE EXAMPLES ARE INCLUDED FOR COMPLETENESS ONLY.     '\n PUNCH '//*                                                           '\n PUNCH '//*-----------------------------------------------------------'\n PUNCH '//SYSPRINT DD  SYSOUT=*                                       '\n PUNCH '//NUCLEUS  DD  DSN=&SYSX..NUCLEUS(SYSCATLG),                  '\n PUNCH '//             UNIT=&DEVT,VOL=SER=&VOLUME,                    '\n PUNCH '//             DISP=OLD                                       '\n PUNCH '//SYSIN    DD  *                                              '\n        LCLC   &SYSVOL\n        AIF   ('&DEVT' EQ '3350').D3350\n        AIF   ('&DEVT' EQ '3375').D3375\n&SYSVOL SETC  '0E'\n        AGO   .FDS\n.D3350  ANOP\n&SYSVOL SETC  '0B'\n        AGO   .FDS\n.D3375  ANOP\n&SYSVOL SETC  '0C'\n.FDS    ANOP\n PUNCH '  DSD OUTPUT=(NUCLEUS)                                     '\n PUNCH '  FD NAME=VOL,                                             '\n PUNCH '     LENGTH=06,                                            '\n PUNCH '     STARTLOC=01,                                          '\n PUNCH '     FILL=X''40'',                                         '\n PUNCH '     PICTURE=6,''&VOLUME''  <-VERIFY/CHANGE VOL OF CAT     '\n PUNCH '  FD NAME=CATTYPE,                                         '\n PUNCH '     LENGTH=01,                                            '\n PUNCH '     STARTLOC=07,                                          '\n       AIF    (&ICFLG EQ 0).VSAM\n PUNCH '     FILL=X''F1''                                          '\n       AGO   .NEXTFD\n.VSAM  ANOP\n PUNCH '    FILL=X''40'' <-----VERIFY TYPE OF CATALOG            '\n.NEXTFD ANOP\n PUNCH '  FD NAME=DEV,                                             '\n PUNCH '     LENGTH=01,                                            '\n PUNCH '     STARTLOC=08,                                          '\n PUNCH '     FILL=X''&SYSVOL''   <--VERIFY D/T                     '\n PUNCH '  FD NAME=CAT,                                             '\n PUNCH '     LENGTH=44,                                            '\n PUNCH '     STARTLOC=11,                                          '\n PUNCH '     FILL=X''40'',                                         '\n PUNCH '     PICTURE=44,''&CATALOG                              '''\n PUNCH '  FD NAME=FIL,                                             '\n PUNCH '     LENGTH=26,                                            '\n PUNCH '     STARTLOC=55,                                          '\n PUNCH '     FILL=X''40''                                          '\n PUNCH ' CREATE QUANTITY=1,FILL=X''00'',NAME=(VOL,CATTYPE,DEV,CAT,FIL)'\n PUNCH '/*                                                   '\n PUNCH '//*                                                  '\n PUNCH '//PRINTPTR  EXEC PGM=IDCAMS                          '\n PUNCH '//*  PRINT THE CATALOG POINTER                       '\n PUNCH '//SYSPRINT DD SYSOUT=*                               '\n PUNCH '//CATPTR   DD DSN=&SYSX..NUCLEUS(SYSCATLG),DISP=SHR, '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME             '\n PUNCH '//SYSIN    DD *                                      '\n PUNCH '  PRINT INFILE(CATPTR) DUMP                          '\n PUNCH '/*                                                   '\n PUNCH '//                                                   '\n PUNCH '//&JOBNAME.4 JOB ('&JOBACCT'),''&JOBPROGM'',          '\n         AIF    (K'&NOTIFY EQ 0).SKIPNO4\n PUNCH '//           NOTIFY=&NOTIFY, '\n.SKIPNO4  ANOP\n PUNCH '//           REGION=3M,                            '\n PUNCH '//           CLASS=&JOBCLASS,MSGCLASS=&JOBMSGCL.&TYPRN'\n PUNCH '//*------------------------------------------------------*'\n PUNCH '//*                                                      *'\n PUNCH '//*  _STEPS_   __________ FUNCTION _____________________ *'\n PUNCH '//*  PRTPARMS   PRINTS PARMLIB MEMBERS FOR REVIEW        *'\n PUNCH '//*  PRTPROCS   PRINTS PROCLIB MEMBERS FOR REVIEW        *'\n PUNCH '//*  PRTVTAML   PRINTS VTAMLST MEMBERS FOR REVIEW        *'\n PUNCH '//*  MEMBLIST   MEMBER LISTS OF CRITICAL LIBS            *'\n        AIF  ('&RENAME' EQ 'N').NREN0\n PUNCH '//*  RENAME -   RENAME &SYSX TO SAME NAMES AS SOURCE SYS '\n.NREN0  ANOP\n PUNCH '//*  VTOC       PRINTS VTOC LISTINGS   FOR REVIEW        *'\n           AIF    (&ADRFLG EQ 0).SKADRCOM\n PUNCH '//*  DSSDUMP    DUMP &VOLUME TO TAPE (DF/DSS)            *'\n.SKADRCOM  ANOP\n           AIF    (&FDRFLG EQ 0).SKFDRCOM\n PUNCH '//*  FDRDUMP    DUMP &VOLUME TO TAPE (FDR)               *'\n.SKFDRCOM  ANOP\n PUNCH '//*------------------------------------------------------*'\n PUNCH '//PRTPARMS EXEC PGM=IEBPTPCH,REGION=2M             '\n PUNCH '//*             PRINTS PARMLIB MEMBERS FOR REVIEW  '\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//SYSUT1   DD DISP=SHR,DSN=&SYSX..PARMLIB,         '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME           '\n PUNCH '//SYSUT2   DD SYSOUT=*                             '\n PUNCH '//SYSIN    DD *                                    '\n PUNCH '  PRINT TYPORG=PO,MAXFLDS=10,MAXNAME=10            '\n PUNCH '  TITLE ITEM=(''&VOLUME SYSTEM IPL PARMS'',25)     '\n PUNCH '  TITLE ITEM=('' '')                               '\n PUNCH '  MEMBER NAME=IEASYS00                             '\n PUNCH '  RECORD FIELD=(80)                                '\n PUNCH '  MEMBER NAME=IEACMD00                             '\n PUNCH '  RECORD FIELD=(80)                                '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n PUNCH '//PRTPROCS EXEC PGM=IEBPTPCH,REGION=2M             '\n PUNCH '//*             PRINTS PROCLIB MEMBERS FOR REVIEW  '\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//SYSUT1   DD DISP=SHR,DSN=&SYSX..PROCLIB,         '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME           '\n           AIF    (&IPOFLG EQ 0).SKIPOPRC\n PUNCH '//         DD DISP=SHR,DSN=&SYSX..IPO.PROCLIB,     '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME           '\n.SKIPOPRC  ANOP\n PUNCH '//SYSUT2   DD SYSOUT=*                             '\n PUNCH '//SYSIN    DD *                                    '\n PUNCH '  PRINT TYPORG=PO,MAXFLDS=10,MAXNAME=10            '\n PUNCH '  TITLE ITEM=(''&VOLUME SYSTEM PROCS'',25)         '\n PUNCH '  TITLE ITEM=('' '')                               '\n PUNCH '  MEMBER NAME=JES2                                 '\n PUNCH '  RECORD FIELD=(80)                                '\n PUNCH '  MEMBER NAME=VTAM                                 '\n PUNCH '  RECORD FIELD=(80)                                '\n PUNCH '  MEMBER NAME=VTAM0                                '\n PUNCH '  RECORD FIELD=(80)                                '\n PUNCH '  MEMBER NAME=&TSOPROC                             '\n PUNCH '  RECORD FIELD=(80)                                '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n PUNCH '//PRTVTAML EXEC PGM=IEBPTPCH,REGION=2M             '\n PUNCH '//*             PRINTS VTAMLST MEMBERS FOR REVIEW  '\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//SYSUT1   DD DISP=SHR,DSN=&SYSX..&VTAMLST,        '\n PUNCH '//            UNIT=&DEVT,VOL=SER=&VOLUME           '\n PUNCH '//SYSUT2   DD SYSOUT=*                             '\n PUNCH '//SYSIN    DD *                                    '\n PUNCH '  PRINT TYPORG=PO,MAXFLDS=10,MAXNAME=10            '\n PUNCH '  TITLE ITEM=(''&VOLUME SYSTEM VTAM START PARMS'',25) '\n PUNCH '  TITLE ITEM=('' '')                               '\n PUNCH '  MEMBER NAME=ATCSTR00                             '\n PUNCH '  RECORD FIELD=(80)                                '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n PUNCH '//MEMBLIST EXEC PGM=IEHLIST,REGION=2M              '\n PUNCH '//*             MEMBER LISTS OF CRITICAL LIBS      '\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//DD1      DD UNIT=&DEVT,VOL=SER=&VOLUME,DISP=OLD  '\n PUNCH '//SYSIN    DD *                                    '\n PUNCH '  LISTPDS DSNAME=&SYSX..PARMLIB,VOL=&DEVT=&VOLUME  '\n PUNCH '  LISTPDS DSNAME=&SYSX..PROCLIB,VOL=&DEVT=&VOLUME  '\n           AIF    (&IPOFLG EQ 0).SKIPOLST\n PUNCH '  LISTPDS DSNAME=&SYSX..IPO.PROCLIB,VOL=&DEVT=&VOLUME '\n.SKIPOLST  ANOP\n PUNCH '  LISTPDS DSNAME=&SYSX..CMDPROC,VOL=&DEVT=&VOLUME  '\n PUNCH '  LISTPDS DSNAME=&SYSX..&VTAMLST,VOL=&DEVT=&VOLUME '\n PUNCH '/*                                                 '\n        AIF  ('&RENAME' EQ 'N').NREN1\n PUNCH '//*                                                          '\n PUNCH '//RENAME  EXEC PGM=IDCAMS,REGION=2M      '\n PUNCH '//*         RENAME &SYSX DATASETS TO SAME NAME AS SOURCE SYS '\n PUNCH '//STEPCAT  DD  DISP=SHR,DSN=&CATALOG     '\n PUNCH '//SYSPRINT DD  SYSOUT=*                  '\n PUNCH '//SYSIN   DD   *                         '\n PUNCH ' ALTER &SYSX..LINKLIB -                  '\n PUNCH '       NEWNAME(&SYS1..LINKLIB)           '\n           AIF    (&OEMFLG EQ 0).SKOEMREN\n PUNCH ' ALTER &SYSX..OEM.LINKLIB -              '\n PUNCH '       NEWNAME(&OEMPRE..LINKLIB)         '\n.SKOEMREN  ANOP\n PUNCH ' ALTER &SYSX..LOGREC -                   '\n PUNCH '       NEWNAME(&SYS1..LOGREC)            '\n PUNCH ' ALTER &SYSX..CMDLIB -                   '\n PUNCH '       NEWNAME(&SYS1..CMDLIB)            '\n PUNCH ' ALTER &SYSX..CMDPROC -                  '\n PUNCH '       NEWNAME(&CMDPROC)     '\n PUNCH ' ALTER &SYSX..VTAMLIB -                  '\n PUNCH '       NEWNAME(&SYS1..&VTAMLIB)          '\n PUNCH ' ALTER &SYSX..VTAMLST -                  '\n PUNCH '       NEWNAME(&SYS1..&VTAMLST)          '\n PUNCH ' ALTER &SYSX..VTAMTBL -                  '\n PUNCH '       NEWNAME(&TBLDSN)     '\n PUNCH ' ALTER &SYSX..DAE -                      '\n PUNCH '       NEWNAME(&SYS1..DAE)               '\n PUNCH ' ALTER &SYSX..DUMP00 -                   '\n PUNCH '       NEWNAME(&SYS1..DUMP00)            '\n PUNCH ' ALTER &SYSX..DUMP01 -                   '\n PUNCH '       NEWNAME(&SYS1..DUMP01)            '\n PUNCH ' ALTER &SYSX..HELP -                     '\n PUNCH '       NEWNAME(&SYS1..HELP)              '\n PUNCH ' ALTER &SYSX..MACLIB -                   '\n PUNCH '       NEWNAME(&SYS1..MACLIB)            '\n PUNCH ' ALTER &SYSX..SVCLIB -                   '\n PUNCH '       NEWNAME(&SYS1..SVCLIB)            '\n           AIF    (&RACFLG EQ 0).SKPRACF2\n PUNCH ' ALTER &SYSX..RACF -                     '\n PUNCH '       NEWNAME(&SYS1..RACF)              '\n.SKPRACF2  ANOP\n           AIF    (&DUTFLG EQ 0).SKDUTREN\n PUNCH ' ALTER &SYSX..DUTLOAD -                  '\n PUNCH '       NEWNAME(&SYS1..DUTLOAD)           '\n PUNCH ' ALTER &SYSX..DUTPLIB -                  '\n PUNCH '       NEWNAME(&SYS1..DUTPLIB)           '\n.SKDUTREN  ANOP\n           AIF    (&DGTFLG EQ 0).SKDGTREN\n PUNCH ' ALTER &SYSX..DGTCLIB -                  '\n PUNCH '       NEWNAME(&SYS1..DGTCLIB)           '\n PUNCH ' ALTER &SYSX..DGTLLIB -                  '\n PUNCH '       NEWNAME(&SYS1..DGTLLIB)           '\n PUNCH ' ALTER &SYSX..DGTMLIB -                  '\n PUNCH '       NEWNAME(&SYS1..DGTMLIB)           '\n PUNCH ' ALTER &SYSX..DGTPLIB -                  '\n PUNCH '       NEWNAME(&SYS1..DGTPLIB)           '\n PUNCH ' ALTER &SYSX..DGTSLIB -                  '\n PUNCH '       NEWNAME(&SYS1..DGTSLIB)           '\n PUNCH ' ALTER &SYSX..DGTTLIB -                  '\n PUNCH '       NEWNAME(&SYS1..DGTTLIB)           '\n.SKDGTREN  ANOP\n           AIF    (&ISFFLG EQ 0).SKISFREN\n PUNCH ' ALTER &SYSX..HASPINDX -                 '\n PUNCH '       NEWNAME(ISF.HASPINDX)             '\n PUNCH ' ALTER &SYSX..ISFLOAD -                  '\n PUNCH '       NEWNAME(&ISFPRE..ISFLOAD)         '\n PUNCH ' ALTER &SYSX..ISFLPA -                   '\n PUNCH '       NEWNAME(&ISFPRE..ISFLPA)          '\n PUNCH ' ALTER &SYSX..ISFPLIB -                  '\n PUNCH '       NEWNAME(&ISFPRE..ISFPLIB)         '\n PUNCH ' ALTER &SYSX..ISFTLIB -                  '\n PUNCH '       NEWNAME(&ISFPRE..ISFTLIB)         '\n.SKISFREN  ANOP\n           AIF    (&IPOFLG EQ 0).SKIPOREN\n PUNCH ' ALTER &SYSX..IPO.HELP -                 '\n PUNCH '       NEWNAME(&IPOPRE..HELP)            '\n PUNCH ' ALTER &SYSX..IPO.INSTLIB -              '\n PUNCH '       NEWNAME(&IPOPRE..INSTLIB)         '\n PUNCH ' ALTER &SYSX..IPO.ISPPLIB -              '\n PUNCH '       NEWNAME(&IPOPRE..ISPPLIB)         '\n PUNCH ' ALTER &SYSX..IPO.JCLLIB -               '\n PUNCH '       NEWNAME(&IPOPRE..JCLLIB)          '\n PUNCH ' ALTER &SYSX..IPO.LINKLIB -              '\n PUNCH '       NEWNAME(&IPOPRE..LINKLIB)         '\n PUNCH ' ALTER &SYSX..IPO.PROCLIB -              '\n PUNCH '       NEWNAME(&IPOPRE..PROCLIB)         '\n.SKIPOREN  ANOP\n PUNCH ' ALTER &SYSX..LPALIB -                   '\n PUNCH '       NEWNAME(&SYS1..LPALIB)            '\n PUNCH ' ALTER &SYSX..NUCLEUS -                  '\n PUNCH '       NEWNAME(&SYS1..NUCLEUS)           '\n PUNCH ' ALTER &SYSX..SAMPLIB -                  '\n PUNCH '       NEWNAME(&SYS1..SAMPLIB)           '\n           AIF    (&C10FLG EQ 0).SKC10REN\n PUNCH ' ALTER &SYSX..COMTEN.LINKLIB -           '\n PUNCH '       NEWNAME(&C10LIB)     '\n.SKC10REN  ANOP\n         AIF ('&NCP' EQ 'N').NCP1\n PUNCH ' ALTER &SYSX..NCPDUMP -                  '\n PUNCH '       NEWNAME(&SYS1..NCPDUMP)           '\n PUNCH ' ALTER &SYSX..NCPLIB -                   '\n PUNCH '       NEWNAME(&SYS1..NCPLIB)            '\n PUNCH ' ALTER &SYSX..SSPLIB -                   '\n PUNCH '       NEWNAME(&SYS1..SSPLIB)            '\n.NCP1  ANOP\n PUNCH ' ALTER &SYSX..JESCKPT -                  '\n PUNCH '       NEWNAME(&SYS1..JESCKPT)           '\n PUNCH ' ALTER &SYSX..HASPACE -                  '\n PUNCH '       NEWNAME(&SYS1..HASPACE)           '\n PUNCH ' ALTER &SYSX..BRODCAST -                 '\n PUNCH '       NEWNAME(&SYS1..BRODCAST)          '\n PUNCH ' ALTER &SYSX..IMAGELIB -                 '\n PUNCH '       NEWNAME(&SYS1..IMAGELIB)          '\n PUNCH ' ALTER &SYSX..PARMLIB -                  '\n PUNCH '       NEWNAME(&SYS1..PARMLIB)           '\n PUNCH ' ALTER &SYSX..PROCLIB -                  '\n PUNCH '       NEWNAME(&SYS1..PROCLIB)           '\n PUNCH ' ALTER &SYSX..UADS -                     '\n PUNCH '       NEWNAME(&SYS1..UADS)              '\n PUNCH ' ALTER &SYSX..ISPLOAD -                  '\n PUNCH '       NEWNAME(&ISPPRE..ISPLOAD)         '\n PUNCH ' ALTER &SYSX..ISPMLIB -                  '\n PUNCH '       NEWNAME(&ISPPRE..ISPMLIB)         '\n PUNCH ' ALTER &SYSX..ISPPLIB -                  '\n PUNCH '       NEWNAME(&ISPPRE..ISPPLIB)         '\n PUNCH ' ALTER &SYSX..ISPSLIB -                  '\n PUNCH '       NEWNAME(&ISPPRE..ISPSLIB)         '\n PUNCH ' ALTER &SYSX..ISPTLIB -                  '\n PUNCH '       NEWNAME(&ISPPRE..ISPTLIB)         '\n PUNCH ' ALTER &SYSX..ISRCLIB -                  '\n PUNCH '       NEWNAME(&ISRPRE..ISRCLIB)         '\n PUNCH ' ALTER &SYSX..ISRJLIB -                  '\n PUNCH '       NEWNAME(&ISRPRE..ISRJLIB)         '\n PUNCH ' ALTER &SYSX..ISRLOAD -                  '\n PUNCH '       NEWNAME(&ISRPRE..ISRLOAD)         '\n PUNCH ' ALTER &SYSX..ISRMLIB -                  '\n PUNCH '       NEWNAME(&ISRPRE..ISRMLIB)         '\n PUNCH ' ALTER &SYSX..ISRPLIB -                  '\n PUNCH '       NEWNAME(&ISRPRE..ISRPLIB)         '\n PUNCH ' ALTER &SYSX..ISRSLIB -                  '\n PUNCH '       NEWNAME(&ISRPRE..ISRSLIB)         '\n PUNCH ' ALTER &SYSX..ISRTLIB -                  '\n PUNCH '       NEWNAME(&ISRPRE..ISRTLIB)         '\n PUNCH ' ALTER &SYSX..ISPF1.ISPPROF -            '\n PUNCH '       NEWNAME(&USR1..ISPF.ISPPROF)      '\n PUNCH ' ALTER &SYSX..ISPF2.ISPPROF -            '\n PUNCH '       NEWNAME(&USR2..ISPF.ISPPROF)      '\n PUNCH ' ALTER &SYSX..ISPF3.ISPPROF -            '\n PUNCH '       NEWNAME(&USR3..ISPF.ISPPROF)      '\n PUNCH ' ALTER &SYSX..ISPF4.ISPPROF -            '\n PUNCH '       NEWNAME(&USR4..ISPF.ISPPROF)      '\n PUNCH ' ALTER &SYSX..ISPF5.ISPPROF -            '\n PUNCH '       NEWNAME(&USR5..ISPF.ISPPROF)      '\n PUNCH ' LISTC CAT(&CATALOG/&MASTRPW) ALL     '\n PUNCH '/*                                       '\n PUNCH '//*                                      '\n.NREN1   ANOP\n PUNCH '//VTOC     EXEC PGM=IEHLIST,REGION=2M              '\n PUNCH '//*             PRINTS VTOC LISTINGS FOR REVIEW    '\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//DD1      DD UNIT=&DEVT,VOL=SER=&VOLUME,DISP=OLD  '\n PUNCH '//SYSIN    DD *                                    '\n PUNCH '  LISTVTOC VOL=&DEVT=&VOLUME                       '\n PUNCH '  LISTVTOC VOL=&DEVT=&VOLUME,FORMAT                '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n           AIF    (&ADRFLG EQ 0).SKADRJCL\n PUNCH '//DSSDUMP  EXEC PGM=ADRDSSU,REGION=2M              '\n PUNCH '//*             DUMP &VOLUME TO TAPE (DF/DSS)      '\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//TAPE     DD DSN=&BKUPDSN, '\n PUNCH '//            UNIT=&BKUPUNT,DISP=(NEW,KEEP,KEEP)   '\n PUNCH '//SYSIN    DD *                                    '\n PUNCH '  DUMP INDY(&VOLUME,&DEVT) -                       '\n PUNCH '  OPT(4) OUTDD(TAPE) -                             '\n PUNCH '  ALLDATA(*) ALLEXCP                               '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n.SKADRJCL  ANOP\n           AIF    (&FDRFLG EQ 0).SKFDRJCL\n PUNCH '//FDRDUMP  EXEC PGM=FDR,REGION=2M                  '\n PUNCH '//*             DUMP &VOLUME TO TAPE (FDR)         '\n PUNCH '//SYSPRINT DD SYSOUT=*                             '\n PUNCH '//SYSUDUMP DD SYSOUT=*                             '\n PUNCH '//DISK1    DD DISP=OLD,UNIT=&DEVT,VOL=SER=&VOLUME  '\n PUNCH '//TAPE1    DD DSN=&BKUPDSN, '\n PUNCH '//            UNIT=&BKUPUNT,DISP=(NEW,KEEP,KEEP)   '\n PUNCH '//SYSIN    DD *                                    '\n PUNCH '  DUMP TYPE=FDR,BUFNO=MAX                          '\n PUNCH '/*                                                 '\n PUNCH '//*                                                '\n.SKFDRJCL  ANOP\n PUNCH '//                                                 '\n         POP  PRINT\n.MEND    MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RESQASM": {"ttr": 1539, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//RGSRESQ  JOB (COMB,NCC,2,100),'RICK STECKER',\n//        MSGCLASS=T,CLASS=S,NOTIFY=RGS,REGION=3M\n//*\n//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n//*                                                                   *\n//* THIS IS THE JCL TO ASSEMBLE AND PRINT THE RESCUE MACRO            *\n//*                                                                   *\n//* NOTE: USE THE JCL IN COMB.XA.GENLIB(RESQASM)                      *\n//*                                                                   *\n//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n//*\n//ASM     EXEC PGM=IEV90,PARM='NOOBJECT,XREF(SHORT),DECK',REGION=3M\n//SYSLIB   DD  DISP=SHR,DSN=COMB.RESCUE.CNTL\n//SYSUT1   DD  DSN=&&SYSUT1,SPACE=(CYL,(6,1)),UNIT=SYSDA\n//SYSPRINT DD  SYSOUT=*,DCB=BLKSIZE=1089\n//SYSPUNCH DD  DISP=SHR,DSN=COMB.RESCUE.CNTL(RESQJCL)\n//SYSIN    DD  *\n  RESCUE       TYPRUN=HOLD,                                            X\n               JOBCLASS=S,                                             X\n               JOBACCT='COMB,NCC,2,100',                               X\n               JOBPROGM=RICK-STECKER,                                  X\n               JOBMSGCL=T,                                             X\n               NOTIFY=RGS,                                             X\n               RACF=N,                                                 X\n               IPOPRE=IPO88D,                                          X\n               OEMPRE=SYS2.PPXA,                                       X\n               SYSID=SY01,                                             X\n               BACKUP=FDR,                                             X\n               BKUPUNT=TAPE,                                           X\n               CMDPROC=IPO88D.CMDPROC,                                 X\n               MASTRCAT=CATALOG.MASTER01,                              X\n               MASTRPW=XXXX,                                           X\n               MCATVOL=XA8CAT,                                         X\n               SYSRES=XA8RES,                                          X\n               UNITADR=17A\n END\n/*\n//PRINT    EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSUT1 DD DISP=SHR,DSN=*.ASM.SYSPUNCH\n//SYSUT2 DD SYSOUT=T,CHARS=TN\n//SYSIN DD DUMMY\n//*\n//\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RESQJCL": {"ttr": 1541, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*   AUTHOR = MARK V. HEDGES -\n//*            ADRIA LABORATORIES\n//*  MODIFIED BY = RICHARD G. STECKER\n//*                SYNECTICS FOR MANAGEMENT DECISIONS INC.\n//*                3030 CLARENDON BLVD\n//*                ARLINGTON, VA 22201\n//*                (703) 528-2772 (OFFICE)\n//*                (301) 965-5627 (INSTALLATION)\n//RESCUE0 JOB ('COMB,NCC,2,100'),'RICK-STECKER',\n//           NOTIFY=RGS,\n//           REGION=1M,\n//           CLASS=S,MSGCLASS=T,TYPRUN=HOLD\n//*---------------------------------------------------------*\n//* JOB: RESCUE0\n//* USE: TO INITALIZE THE VOLUME=RESCUE ON UNIT=17A\n//*\n//*     _STEPS_   __________ FUNCTION _____________________\n//*     EXPDISC   EXPORT-DISCONNECT OLD USERCATALOG\n//*     VARYOFF   VARY DEVICE OFFLINE\n//*     DEALLOC   BURP (EXCUSE ME)\n//*     INITVOL   INITIALIZE DISK VOLUME USING ICKDSF\n//*---------------------------------------------------------*\n//EXPDISC  EXEC  PGM=IDCAMS,REGION=1M\n//SYSPRINT  DD   SYSOUT=*\n//SYSIN     DD   *\n   EXPORT                                              -\n         CATALOG.RESCUE  -\n          DCON\n\n   SET MAXCC=0\n/*\n//*\n//VARYOFF EXEC PGM=COMMAND,\n//   PARM='V 17A,OFFLINE'\n//*\n//* VARIES THE VOLUME OFFLINE\n//*\n//DEALLOC EXEC PGM=COMMAND,\n//   PARM='S DEALLOC'\n//*\n//* BURPS THE SYSTEM (GENERATES AN INTERRUPT)\n//*\n//INITVOL  EXEC PGM=ICKDSF\n//*\n//* NOTE THE FOLLOWING CONCATENATION\n//*\n//IPLTEXT  DD  DISP=SHR,VOL=SER=XA8RES,UNIT=SYSDA,\n//             DSN=SYS1.SAMPLIB(IPLRECS)\n//         DD  DISP=SHR,VOL=SER=XA8RES,UNIT=SYSDA,\n//             DSN=SYS1.SAMPLIB(IEAIPL00)\n//SYSPRINT DD   SYSOUT=*\n//SYSIN    DD   *\n INIT   UNIT(17A) -\n        VOLID(RESCUE) -\n        OWNERID(RESCUE) -\n        VTOC(0,1,14) -\n        PURGE -\n        MAP -\n      VERIFY(RESCUE) /* VOLUME MUST BE LABLED */ -\n        NOVALIDATE -\n        NOCHECK -\n      IPLDD(IPLTEXT) -\n      NOBOOTSTRAP /* ICKDSF WILL SUPPLY IT */\n/*\n//*\n//VARYON   EXEC PGM=COMMAND,COND=(0,LT),\n//       PARM='V 17A,ONLINE'\n//* VARY 17A ONLINE\n//MOUNT    EXEC PGM=COMMAND,COND=(0,LT),\n//       PARM='M 17A,VOL=(SL,RESCUE),USE=PRIVATE'\n//* MOUNT RESCUE ON 17A\n//\n//RESCUE1 JOB ('COMB,NCC,2,100'),'RICK-STECKER',\n//           NOTIFY=RGS,\n//           REGION=2M,\n//           CLASS=S,MSGCLASS=T,TYPRUN=HOLD\n//*---------------------------------------------------------*\n//* JOB: RESCUE1\n//* USE: CREATE A VOLUME VOLSER(RESCUE) THAT WILL CONTAIN\n//*      ALL THE NECESSARY DATASETS FOR AN IPL\n//*\n//*     _STEPS_   __________ FUNCTION _____________________\n//*     DEFMCAT   DEFINE A MASTER CATALOG\n//*     DEFVSAM   DEFINE ALL NECESSARY VSAM FILES\n//*     DEFNVSAM  DEFINE ALL NECESSARY NON-VSAM FILES\n//*               AND IMPORT THE CATALOG AS A UCAT TO THE MCAT\n//*----------------------------------------------------------*\n//*\n//*\n//DEFMCAT  EXEC PGM=IDCAMS,REGION=2M,COND=(0,LT)\n//SYSPRINT  DD   SYSOUT=*\n//TARGET    DD   DISP=SHR,UNIT=3380,VOL=SER=RESCUE\n//SYSIN     DD   *\n DELETE -\n         SYS1.VVDS.VRESCUE -\n           FILE(TARGET) -\n           CLUSTER -\n           PURGE -\n       CATALOG(CATALOG.MASTER01/XXXX);\n\n SET MAXCC=0\n\n DEFINE -\n  CLUSTER ( -\n           NAME( SYS1.VVDS.VRESCUE ) -\n           CYL(1,1) -\n           VOL(RESCUE) -\n           FILE(TARGET) -\n           NONINDEXED -\n           OWNER(RESCUE) -\n         ) -\n       CATALOG(CATALOG.MASTER01/XXXX);\n DEFINE -\n       MASTERCATALOG ( -\n                       NAME( CATALOG.RESCUE ) -\n                       CYL(10 2) -\n                       VOL(RESCUE) -\n                       ATTEMPTS(2) -\n                       BUFFERSPACE(8192) -\n                       BUFND(10) -\n                       BUFNI(10) -\n                       FILE(TARGET) -\n                       ICFCATALOG -\n                       OWNER(RESCUE) -\n                       STRNO(9) -\n                      ) -\n       CATALOG(CATALOG.MASTER01/XXXX);\n/*\n//*\n//DEFVSAM  EXEC PGM=IDCAMS,REGION=2M,COND=(0,LT)\n//STEPCAT DD  DSN=CATALOG.RESCUE,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//TARGET DD   DISP=SHR,UNIT=3380,VOL=SER=RESCUE\n//SYSIN  DD   *\n DEFINE -\n       CLUSTER ( -\n                 NAME( SYS1.STGINDEX ) -\n                 CYL(5) -\n                 VOL(RESCUE) -\n                 BUFFERSPACE(20480) -\n                 FILE(TARGET) -\n                 KEYS(12 8) -\n                 OWNER(RESCUE) -\n                 RECORDSIZE(2041,2041) -\n                 REUSE -\n               ) -\n       DATA ( -\n                 NAME( SYS1.STGINDEX.DATA ) -\n                      CISZ(2048) -\n            ) -\n       INDEX ( -\n                 NAME( SYS1.STGINDEX.INDEX ) -\n                      CISZ(1024) -\n             ) -\n  CATALOG(CATALOG.RESCUE);\n\n DEFINE -\n        PAGESPACE ( -\n                     NAME( SYS1.RESCUE.PLPA) -\n                           CYL(16) -\n                           VOL(RESCUE) -\n                           FILE(TARGET) -\n                           OWNER(RESCUE) -\n                           NOSWAP -\n                           UNIQUE -\n                   ) -\n  CATALOG(CATALOG.RESCUE);\n\n DEFINE -\n        PAGESPACE ( -\n                     NAME( SYS1.RESCUE.COMMON ) -\n                           CYL(16) -\n                           VOL(RESCUE) -\n                           FILE(TARGET) -\n                           OWNER(RESCUE) -\n                           NOSWAP -\n                           UNIQUE -\n                   ) -\n  CATALOG(CATALOG.RESCUE);\n\n DEFINE -\n        PAGESPACE ( -\n                   NAME( SYS1.RESCUE.LOCAL1 ) -\n                          CYL(30) -\n                           VOL(RESCUE) -\n                           FILE(TARGET) -\n                           OWNER(RESCUE) -\n                           NOSWAP -\n                           UNIQUE -\n                  ) -\n  CATALOG(CATALOG.RESCUE);\n\n DEFINE -\n        CLUSTER ( -\n                  NAME( SYS1.MAN1 ) -\n                       CYL(10) -\n                       VOL(RESCUE) -\n                       CISZ(4096) -\n                       FILE(TARGET) -\n                       NONINDEXED -\n                       OWNER(RESCUE) -\n                       RECORDSIZE(4086 32767) -\n                       REUSE   SHR(2 3) -\n                       SPANNED  SPEED -\n                 ) -\n         DATA ( -\n                 NAME( SYS1.MAN1.VDATA) -\n              ) -\n  CATALOG(CATALOG.RESCUE);\n\n DEFINE -\n        CLUSTER ( -\n                  NAME( SYS1.MAN2 ) -\n                       CYL(10) -\n                       VOL(RESCUE) -\n                       CISZ(4096) -\n                       FILE(TARGET) -\n                       NONINDEXED -\n                       OWNER(RESCUE) -\n                       RECORDSIZE(4086 32767) -\n                       REUSE   SHR(2 3) -\n                       SPANNED  SPEED -\n                 ) -\n         DATA ( -\n                 NAME( SYS1.MAN2.VDATA) -\n              ) -\n  CATALOG(CATALOG.RESCUE);\n\n  LISTCAT  CAT(CATALOG.RESCUE) ALL\n\n/*\n//*\n//DEFNVSAM EXEC PGM=IDCAMS,REGION=3M,COND=(0,LT)\n//STEPCAT   DD  DSN=CATALOG.RESCUE,DISP=SHR\n//SYSPRINT  DD  SYSOUT=*\n//SYSIN     DD  *\n DEF NVSAM (NAME(PASSWORD                    ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.BRODCAST            ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.CMDPROC)        OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISPLOAD           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISPMLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISPPLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISPSLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISPTLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISRCLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISRJLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISRLOAD           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISRMLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISRPLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISRSLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISRTLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.CMDLIB              ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.DAE                 ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.DUMP00              ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.DUMP01              ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.HASPACE             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.JESCKPT             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.HELP                ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.IMAGELIB            ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.LINKLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.DUTLOAD             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.DUTPLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.DGTCLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.DGTLLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.DGTMLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.DGTPLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.DGTSLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.DGTTLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.HASPINDX            ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISFLOAD           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISFLPA            ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISFPLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISFTLIB           ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.IPO.HELP          ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.IPO.INSTLIB       ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.IPO.ISPPLIB       ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.IPO.JCLLIB        ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.IPO.LINKLIB       ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.IPO.PROCLIB       ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.LOGREC              ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.LPALIB              ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.MACLIB              ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.NUCLEUS             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.OEM.LINKLIB       ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.PAGEDUMP            ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.PARMLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.PROCLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.SAMPLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.SVCLIB              ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.UADS                ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.VTAMLIB             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.VTAMLST             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.VTAMTBL             ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.COMTEN.LINKLIB      ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISPF1.ISPPROF   ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISPF2.ISPPROF   ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISPF3.ISPPROF   ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISPF4.ISPPROF   ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n DEF NVSAM (NAME(SYSX.ISPF5.ISPPROF   ) OWNER(RESCUE) -\n DEVT(3380) VOL(RESCUE))   CAT(CATALOG.RESCUE);\n\n IMPORT  CONNECT -\n         OBJECTS( -\n         (CATALOG.MASTER01   -\n         VOLUME (XA8CAT) -\n         DEVICETYPE(3380))) -\n         CATALOG(CATALOG.RESCUE)\n\n  LISTC CATALOG(CATALOG.RESCUE) NONVSAM  ALL\n\n/*\n//\n//RESCUE2 JOB ('COMB,NCC,2,100'),'RICK-STECKER',\n//           NOTIFY=RGS,\n//           REGION=6M,\n//           CLASS=S,MSGCLASS=T,TYPRUN=HOLD\n//*---------------------------------------------------------*\n//* JOB: RESCUE2                                         *\n//* USE: CREATE A VOLUME VOLSER(RESCUE) THAT WILL CONTAIN  *\n//*      ALL THE NECESSARY DATASETS FOR AN IPL              *\n//*                                                         *\n//*  _STEPS_   __________ FUNCTION _____________________    *\n//*   ALLOC     ALLOCATES ALL NEEDED DATASETS ON VOLUME     *\n//*  LOAD#01    COPIES CURRENT LIBRARIES TO NEW             *\n//*  LOAD#02    COPIES USER LIBRARIES TO NEW                *\n//*  LOAD#03    COPIES VTAM LIBRARIES TO NEW                *\n//*  RNPROCS    RENAMES PROCLIB MEMBERS                     *\n//*  RNPARMS    RENAMES PARMLIB MEMBERS                     *\n//*  RNVTAML    RENAMES VTAMLST MEMBERS                     *\n//*---------------------------------------------------------*\n//ALLOC   EXEC PGM=IEFBR14,REGION=3M\n//LINKLIB  DD DISP=(,KEEP),DSN=SYSX.LINKLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(55,00,551)),\n//            DCB=(SYS1.LINKLIB)\n//OEMLINK  DD DISP=(,KEEP),DSN=SYSX.OEM.LINKLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(35,01,138)),\n//            DCB=(SYS2.PPXA.LINKLIB)\n//LOGREC   DD DISP=(,KEEP),DSN=SYSX.LOGREC,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(4)),\n//            DCB=(SYS1.LOGREC)\n//CMDLIB   DD DISP=(,KEEP),DSN=SYSX.CMDLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(03,01,091)),\n//            DCB=(SYS1.CMDLIB)\n//CMDPROC  DD DISP=(,KEEP),DSN=SYSX.CMDPROC,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(03,01,091)),\n//            DCB=(IPO88D.CMDPROC)\n//DUMP00   DD DISP=(,KEEP),DSN=SYSX.DUMP00,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,10),\n//            DCB=(SYS1.DUMP00)\n//DUMP01   DD DISP=(,KEEP),DSN=SYSX.DUMP01,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,10),\n//            DCB=(SYS1.DUMP01)\n//VTAMLIB  DD DISP=(,KEEP),DSN=SYSX.VTAMLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(05,01,092)),\n//            DCB=(SYS1.VTAMLIB)\n//DAE      DD DISP=(,KEEP),DSN=SYSX.DAE,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01)),\n//            DCB=(SYS1.DAE)\n//HELP     DD DISP=(,KEEP),DSN=SYSX.HELP,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(04,01,091)),\n//            DCB=(SYS1.HELP)\n//MACLIB   DD DISP=(,KEEP),DSN=SYSX.MACLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(40,01,091)),\n//            DCB=(SYS1.MACLIB)\n//PASSWORD DD DISP=(,KEEP),DSN=PASSWORD,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01)),\n//            DCB=(RECFM=F,LRECL=80,BLKSIZE=80)\n//DUTLOAD  DD DISP=(,KEEP),DSN=SYSX.DUTLOAD,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(02,01,046)),\n//            DCB=(SYS1.DUTLOAD)\n//DUTPLIB  DD DISP=(,KEEP),DSN=SYSX.DUTPLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(02,01,046)),\n//            DCB=(SYS1.DUTPLIB)\n//DGTCLIB  DD DISP=(,KEEP),DSN=SYSX.DGTCLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,046)),\n//            DCB=(SYS1.DGTCLIB)\n//DGTLLIB  DD DISP=(,KEEP),DSN=SYSX.DGTLLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(05,01,092)),\n//            DCB=(SYS1.DGTLLIB)\n//DGTMLIB  DD DISP=(,KEEP),DSN=SYSX.DGTMLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(02,01,046)),\n//            DCB=(SYS1.DGTMLIB)\n//DGTPLIB  DD DISP=(,KEEP),DSN=SYSX.DGTPLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(12,01,092)),\n//            DCB=(SYS1.DGTPLIB)\n//DGTSLIB  DD DISP=(,KEEP),DSN=SYSX.DGTSLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(02,01,046)),\n//            DCB=(SYS1.DGTSLIB)\n//DGTTLIB  DD DISP=(,KEEP),DSN=SYSX.DGTTLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,046)),\n//            DCB=(SYS1.DGTTLIB)\n//HASPINDX DD DISP=(,KEEP),DSN=SYSX.HASPINDX,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,1),\n//            DCB=(ISF.HASPINDX)\n//ISFLOAD  DD DISP=(,KEEP),DSN=SYSX.ISFLOAD,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(10,01,046)),\n//            DCB=(ISF.V1R1M0.ISFLOAD)\n//ISFLPA   DD DISP=(,KEEP),DSN=SYSX.ISFLPA,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,046)),\n//            DCB=(ISF.V1R1M0.ISFLPA)\n//ISFPLIB  DD DISP=(,KEEP),DSN=SYSX.ISFPLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(02,01,046)),\n//            DCB=(ISF.V1R1M0.ISFPLIB)\n//ISFTLIB  DD DISP=(,KEEP),DSN=SYSX.ISFTLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,046)),\n//            DCB=(ISF.V1R1M0.ISFTLIB)\n//IPOHELP  DD DISP=(,KEEP),DSN=SYSX.IPO.HELP,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,046)),\n//            DCB=(IPO88D.HELP)\n//IPOINST  DD DISP=(,KEEP),DSN=SYSX.IPO.INSTLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(09,01,046)),\n//            DCB=(IPO88D.INSTLIB)\n//IPOPLIB  DD DISP=(,KEEP),DSN=SYSX.IPO.ISPPLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,046)),\n//            DCB=(IPO88D.ISPPLIB)\n//IPOJCL   DD DISP=(,KEEP),DSN=SYSX.IPO.JCLLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(03,01,046)),\n//            DCB=(IPO88D.JCLLIB)\n//IPOLINK  DD DISP=(,KEEP),DSN=SYSX.IPO.LINKLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(04,01,046)),\n//            DCB=(IPO88D.LINKLIB)\n//IPOPROC  DD DISP=(,KEEP),DSN=SYSX.IPO.PROCLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(02,01,046)),\n//            DCB=(IPO88D.PROCLIB)\n//SVCLIB   DD DISP=(,KEEP),DSN=SYSX.SVCLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(02,01,091)),\n//            DCB=(SYS1.SVCLIB)\n//LPALIB   DD DISP=(,KEEP),DSN=SYSX.LPALIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(20,01,413)),\n//            DCB=(SYS1.LPALIB)\n//NUCLEUS  DD DISP=(,KEEP),DSN=SYSX.NUCLEUS,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(13,01,091)),\n//            DCB=(SYS1.NUCLEUS)\n//SAMPLIB  DD DISP=(,KEEP),DSN=SYSX.SAMPLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(11,01,092)),\n//            DCB=(SYS1.SAMPLIB)\n//BRODCAST DD DISP=(,KEEP),DSN=SYSX.BRODCAST,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01)),\n//            DCB=(SYS1.BRODCAST)\n//IMAGELIB DD DISP=(,KEEP),DSN=SYSX.IMAGELIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(02,01,092)),\n//            DCB=(SYS1.IMAGELIB)\n//PARMLIB  DD DISP=(,KEEP),DSN=SYSX.PARMLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(03,01,091)),\n//            DCB=(SYS1.PARMLIB)\n//PROCLIB  DD DISP=(,KEEP),DSN=SYSX.PROCLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,091)),\n//            DCB=(SYS1.PROCLIB)\n//UADS     DD DISP=(,KEEP),DSN=SYSX.UADS,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(10,01,091)),\n//            DCB=(SYS1.UADS)\n//ISPLOAD  DD DISP=(,KEEP),DSN=SYSX.ISPLOAD,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(03,01,046)),\n//            DCB=(ISP.V2R3M0.ISPLOAD)\n//ISPMLIB  DD DISP=(,KEEP),DSN=SYSX.ISPMLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,046)),\n//            DCB=(ISP.V2R3M0.ISPMLIB)\n//ISPPLIB  DD DISP=(,KEEP),DSN=SYSX.ISPPLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(02,01,046)),\n//            DCB=(ISP.V2R3M0.ISPPLIB)\n//ISPSLIB  DD DISP=(,KEEP),DSN=SYSX.ISPSLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,046)),\n//            DCB=(ISP.V2R3M0.ISPSLIB)\n//ISPTLIB  DD DISP=(,KEEP),DSN=SYSX.ISPTLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,046)),\n//            DCB=(ISP.V2R3M0.ISPTLIB)\n//ISRCLIB  DD DISP=(,KEEP),DSN=SYSX.ISRCLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(02,01,46)),\n//            DCB=(ISR.V2R3M0.ISRCLIB)\n//ISRJLIB  DD DISP=(,KEEP),DSN=SYSX.ISRJLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,46)),\n//            DCB=(ISR.V2R3M0.ISRJLIB)\n//ISRLOAD  DD DISP=(,KEEP),DSN=SYSX.ISRLOAD,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(06,01,046)),\n//            DCB=(ISR.V2R3M0.ISRLOAD)\n//ISRMLIB  DD DISP=(,KEEP),DSN=SYSX.ISRMLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(02,01,046)),\n//            DCB=(ISR.V2R3M0.ISRMLIB)\n//ISRPLIB  DD DISP=(,KEEP),DSN=SYSX.ISRPLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(10,01,138)),\n//            DCB=(ISR.V2R3M0.ISRPLIB)\n//ISRSLIB  DD DISP=(,KEEP),DSN=SYSX.ISRSLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(05,01,046)),\n//            DCB=(ISR.V2R3M0.ISRSLIB)\n//ISRTLIB  DD DISP=(,KEEP),DSN=SYSX.ISRTLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,046)),\n//            DCB=(ISR.V2R3M0.ISRTLIB)\n//HASPCKPT DD DISP=(,KEEP),DSN=SYSX.JESCKPT,\n//            UNIT=3380,VOL=SER=RESCUE,SPACE=(CYL,4)\n//HASPACE  DD DISP=(,KEEP),DSN=SYSX.HASPACE,\n//            UNIT=3380,VOL=SER=RESCUE,SPACE=(CYL,60)\n//VTAMLST  DD DISP=(,KEEP),DSN=SYSX.VTAMLST,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(10,01,91)),\n//            DCB=(SYS1.VTAMLST)\n//C10LINK  DD DISP=(,KEEP),DSN=SYSX.COMTEN.LINKLIB,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(15,01,46)),\n//            DCB=(OCSE.COMLOAD)\n//VTAMTBL  DD DISP=(,KEEP),DSN=SYSX.VTAMTBL,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(01,01,46)),\n//            DCB=(OCSE.XA.VTAMLIB)\n//PROF01   DD DISP=(,KEEP),DSN=SYSX.ISPF1.ISPPROF,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(1,1,45)),\n//            DCB=(AMK.ISPF.ISPPROF)\n//PROF02   DD DISP=(,KEEP),DSN=SYSX.ISPF2.ISPPROF,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(1,1,45)),\n//            DCB=(AXS.ISPF.ISPPROF)\n//PROF03   DD DISP=(,KEEP),DSN=SYSX.ISPF3.ISPPROF,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(1,1,45)),\n//            DCB=(LLA.ISPF.ISPPROF)\n//PROF04   DD DISP=(,KEEP),DSN=SYSX.ISPF4.ISPPROF,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(1,1,45)),\n//            DCB=(RGS.ISPF.ISPPROF)\n//PROF05   DD DISP=(,KEEP),DSN=SYSX.ISPF5.ISPPROF,\n//            UNIT=3380,VOL=SER=RESCUE,\n//            SPACE=(CYL,(1,1,45)),\n//            DCB=(RXR.ISPF.ISPPROF)\n//*\n//LOAD#01  EXEC PGM=IEBCOPY,REGION=6M\n//SYSPRINT DD   SYSOUT=*\n//SYSUT3  DD   UNIT=SYSDA,SPACE=(CYL,(100,1))\n//SYSUT4  DD   UNIT=SYSDA,SPACE=(CYL,(50,1))\n//FCMDLIB DD   DISP=SHR,DSN=SYS1.CMDLIB\n//FCMDPROC DD  DISP=SHR,DSN=IPO88D.CMDPROC\n//FHELP   DD   DISP=SHR,DSN=SYS1.HELP\n//FIMAGLIB DD  DISP=SHR,DSN=SYS1.IMAGELIB\n//FLINKLIB DD  DISP=SHR,DSN=SYS1.LINKLIB\n//FOEMLINK DD  DISP=SHR,DSN=SYS2.PPXA.LINKLIB\n//FLPALIB DD   DISP=SHR,DSN=SYS1.LPALIB\n//FMACLIB DD   DISP=SHR,DSN=SYS1.MACLIB\n//FNUCLEUS DD  DISP=SHR,DSN=SYS1.NUCLEUS\n//FPARMLIB DD  DISP=SHR,DSN=SYS1.PARMLIB\n//FPROCLIB DD  DISP=SHR,DSN=SYS1.PROCLIB\n//FSAMPLIB DD  DISP=SHR,DSN=SYS1.SAMPLIB\n//FSVCLIB DD   DISP=SHR,DSN=SYS1.SVCLIB\n//*\n//TCMDLIB DD   DISP=SHR,DSN=SYSX.CMDLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TCMDPROC DD  DISP=SHR,DSN=SYSX.CMDPROC,\n//        UNIT=3380,VOL=SER=RESCUE\n//THELP   DD   DISP=SHR,DSN=SYSX.HELP,\n//        UNIT=3380,VOL=SER=RESCUE\n//TIMAGLIB DD  DISP=SHR,DSN=SYSX.IMAGELIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TLINKLIB DD  DISP=SHR,DSN=SYSX.LINKLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TOEMLINK DD  DISP=SHR,DSN=SYSX.OEM.LINKLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TLPALIB DD   DISP=SHR,DSN=SYSX.LPALIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TMACLIB DD   DISP=SHR,DSN=SYSX.MACLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TNUCLEUS DD  DISP=SHR,DSN=SYSX.NUCLEUS,\n//        UNIT=3380,VOL=SER=RESCUE\n//TPARMLIB DD  DISP=SHR,DSN=SYSX.PARMLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TPROCLIB DD  DISP=SHR,DSN=SYSX.PROCLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TSAMPLIB DD  DISP=SHR,DSN=SYSX.SAMPLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TSVCLIB DD   DISP=SHR,DSN=SYSX.SVCLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//SYSIN   DD   *\nLOAD#01 COPY INDD=FCMDLIB,OUTDD=TCMDLIB,LIST=NO\nLOAD#01 COPY INDD=FCMDPROC,OUTDD=TCMDPROC,LIST=NO\nLOAD#01 COPY INDD=FHELP,OUTDD=THELP,LIST=NO\nLOAD#01 COPY INDD=FIMAGLIB,OUTDD=TIMAGLIB,LIST=NO\nLOAD#01 COPY INDD=FLINKLIB,OUTDD=TLINKLIB,LIST=NO\nLOAD#01 COPY INDD=FOEMLINK,OUTDD=TOEMLINK,LIST=NO\nLOAD#01 COPY INDD=FLPALIB,OUTDD=TLPALIB,LIST=NO\nLOAD#01 COPY INDD=FMACLIB,OUTDD=TMACLIB,LIST=NO\nLOAD#01 COPY INDD=FNUCLEUS,OUTDD=TNUCLEUS,LIST=NO\nLOAD#01 COPY INDD=FPARMLIB,OUTDD=TPARMLIB,LIST=NO\nLOAD#01 COPY INDD=FPROCLIB,OUTDD=TPROCLIB,LIST=NO\nLOAD#01 COPY INDD=FSAMPLIB,OUTDD=TSAMPLIB,LIST=NO\nLOAD#01 COPY INDD=FSVCLIB,OUTDD=TSVCLIB,LIST=NO\n/*\n//*\n//LOAD#02 EXEC PGM=IEBCOPY,REGION=6M\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3  DD   UNIT=SYSDA,SPACE=(CYL,(48,8))\n//SYSUT4  DD   UNIT=SYSDA,SPACE=(CYL,(48,8))\n//FISPLOAD DD  DISP=SHR,DSN=ISP.V2R3M0.ISPLOAD\n//FISPMLIB DD  DISP=SHR,DSN=ISP.V2R3M0.ISPMLIB\n//FISPPLIB DD  DISP=SHR,DSN=ISP.V2R3M0.ISPPLIB\n//FISPSLIB DD  DISP=SHR,DSN=ISP.V2R3M0.ISPSLIB\n//FISPTLIB DD  DISP=SHR,DSN=ISP.V2R3M0.ISPTLIB\n//FISRCLIB DD  DISP=SHR,DSN=ISR.V2R3M0.ISRCLIB\n//FISRJLIB DD  DISP=SHR,DSN=ISR.V2R3M0.ISRJLIB\n//FISRLOAD DD  DISP=SHR,DSN=ISR.V2R3M0.ISRLOAD\n//FISRMLIB DD  DISP=SHR,DSN=ISR.V2R3M0.ISRMLIB\n//FISRPLIB DD  DISP=SHR,DSN=ISR.V2R3M0.ISRPLIB\n//FISRSLIB DD  DISP=SHR,DSN=ISR.V2R3M0.ISRSLIB\n//FISRTLIB DD  DISP=SHR,DSN=ISR.V2R3M0.ISRTLIB\n//FDUTLOAD DD  DISP=SHR,DSN=SYS1.DUTLOAD\n//FDUTPLIB DD  DISP=SHR,DSN=SYS1.DUTPLIB\n//FDGTCLIB DD  DISP=SHR,DSN=SYS1.DGTCLIB\n//FDGTLLIB DD  DISP=SHR,DSN=SYS1.DGTLLIB\n//FDGTMLIB DD  DISP=SHR,DSN=SYS1.DGTMLIB\n//FDGTPLIB DD  DISP=SHR,DSN=SYS1.DGTPLIB\n//FDGTSLIB DD  DISP=SHR,DSN=SYS1.DGTSLIB\n//FDGTTLIB DD  DISP=SHR,DSN=SYS1.DGTTLIB\n//FISFLOAD DD  DISP=SHR,DSN=ISF.V1R1M0.ISFLOAD\n//FISFLPA  DD  DISP=SHR,DSN=ISF.V1R1M0.ISFLPA\n//FISFPLIB DD  DISP=SHR,DSN=ISF.V1R1M0.ISFPLIB\n//FISFTLIB DD  DISP=SHR,DSN=ISF.V1R1M0.ISFTLIB\n//FIPOHELP DD  DISP=SHR,DSN=IPO88D.HELP\n//FIPOINST DD  DISP=SHR,DSN=IPO88D.INSTLIB\n//FIPOPLIB DD  DISP=SHR,DSN=IPO88D.ISPPLIB\n//FIPOJCL  DD  DISP=SHR,DSN=IPO88D.JCLLIB\n//FIPOLINK DD  DISP=SHR,DSN=IPO88D.LINKLIB\n//FIPOPROC DD  DISP=SHR,DSN=IPO88D.PROCLIB\n//FPROFPR1 DD  DSN=AMK.ISPF.ISPPROF,DISP=SHR\n//FPROFPR2 DD  DSN=AXS.ISPF.ISPPROF,DISP=SHR\n//FPROFPR3 DD  DSN=LLA.ISPF.ISPPROF,DISP=SHR\n//FPROFPR4 DD  DSN=RGS.ISPF.ISPPROF,DISP=SHR\n//FPROFPR5 DD  DSN=RXR.ISPF.ISPPROF,DISP=SHR\n//*\n//TISPLOAD DD  DISP=SHR,DSN=SYSX.ISPLOAD,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISPMLIB DD  DISP=SHR,DSN=SYSX.ISPMLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISPPLIB DD  DISP=SHR,DSN=SYSX.ISPPLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISPSLIB DD  DISP=SHR,DSN=SYSX.ISPSLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISPTLIB DD  DISP=SHR,DSN=SYSX.ISPTLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISRCLIB DD  DISP=SHR,DSN=SYSX.ISRCLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISRJLIB DD  DISP=SHR,DSN=SYSX.ISRJLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISRLOAD DD  DISP=SHR,DSN=SYSX.ISRLOAD,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISRMLIB DD  DISP=SHR,DSN=SYSX.ISRMLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISRPLIB DD  DISP=SHR,DSN=SYSX.ISRPLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISRSLIB DD  DISP=SHR,DSN=SYSX.ISRSLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISRTLIB DD  DISP=SHR,DSN=SYSX.ISRTLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TDUTLOAD DD  DISP=SHR,DSN=SYSX.DUTLOAD,\n//        UNIT=3380,VOL=SER=RESCUE\n//TDUTPLIB DD  DISP=SHR,DSN=SYSX.DUTPLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TDGTCLIB DD  DISP=SHR,DSN=SYSX.DGTCLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TDGTLLIB DD  DISP=SHR,DSN=SYSX.DGTLLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TDGTMLIB DD  DISP=SHR,DSN=SYSX.DGTMLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TDGTPLIB DD  DISP=SHR,DSN=SYSX.DGTPLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TDGTSLIB DD  DISP=SHR,DSN=SYSX.DGTSLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TDGTTLIB DD  DISP=SHR,DSN=SYSX.DGTTLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISFLOAD DD  DISP=SHR,DSN=SYSX.ISFLOAD,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISFLPA  DD  DISP=SHR,DSN=SYSX.ISFLPA,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISFPLIB DD  DISP=SHR,DSN=SYSX.ISFPLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TISFTLIB DD  DISP=SHR,DSN=SYSX.ISFTLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TIPOHELP DD  DISP=SHR,DSN=SYSX.IPO.HELP,\n//        UNIT=3380,VOL=SER=RESCUE\n//TIPOINST DD  DISP=SHR,DSN=SYSX.IPO.INSTLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TIPOPLIB DD  DISP=SHR,DSN=SYSX.IPO.ISPPLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TIPOJCL  DD  DISP=SHR,DSN=SYSX.IPO.JCLLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TIPOLINK DD  DISP=SHR,DSN=SYSX.IPO.LINKLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TIPOPROC DD  DISP=SHR,DSN=SYSX.IPO.PROCLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//TLINKLIB DD  DSN=SYSX.LINKLIB,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE\n//TPROFPR1 DD  DSN=SYSX.ISPF1.ISPPROF,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE,FREE=CLOSE\n//TPROFPR2 DD  DSN=SYSX.ISPF2.ISPPROF,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE,FREE=CLOSE\n//TPROFPR3 DD  DSN=SYSX.ISPF3.ISPPROF,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE,FREE=CLOSE\n//TPROFPR4 DD  DSN=SYSX.ISPF4.ISPPROF,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE,FREE=CLOSE\n//TPROFPR5 DD  DSN=SYSX.ISPF5.ISPPROF,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE,FREE=CLOSE\n//SYSIN   DD   *\nLOAD#02 COPY INDD=FISPLOAD,OUTDD=TISPLOAD,LIST=NO\nLOAD#02 COPY INDD=FISPMLIB,OUTDD=TISPMLIB,LIST=NO\nLOAD#02 COPY INDD=FISPPLIB,OUTDD=TISPPLIB,LIST=NO\nLOAD#02 COPY INDD=FISPSLIB,OUTDD=TISPSLIB,LIST=NO\nLOAD#02 COPY INDD=FISPTLIB,OUTDD=TISPTLIB,LIST=NO\nLOAD#02 COPY INDD=FISRCLIB,OUTDD=TISRCLIB,LIST=NO\nLOAD#02 COPY INDD=FISRJLIB,OUTDD=TISRJLIB,LIST=NO\nLOAD#02 COPY INDD=FISRLOAD,OUTDD=TISRLOAD,LIST=NO\nLOAD#02 COPY INDD=FISRMLIB,OUTDD=TISRMLIB,LIST=NO\nLOAD#02 COPY INDD=FISRPLIB,OUTDD=TISRPLIB,LIST=NO\nLOAD#02 COPY INDD=FISRSLIB,OUTDD=TISRSLIB,LIST=NO\nLOAD#02 COPY INDD=FISRTLIB,OUTDD=TISRTLIB,LIST=NO\nLOAD#02 COPY INDD=FDUTLOAD,OUTDD=TDUTLOAD,LIST=NO\nLOAD#02 COPY INDD=FDUTPLIB,OUTDD=TDUTPLIB,LIST=NO\nLOAD#02 COPY INDD=FDGTCLIB,OUTDD=TDGTCLIB,LIST=NO\nLOAD#02 COPY INDD=FDGTLLIB,OUTDD=TDGTLLIB,LIST=NO\nLOAD#02 COPY INDD=FDGTMLIB,OUTDD=TDGTMLIB,LIST=NO\nLOAD#02 COPY INDD=FDGTPLIB,OUTDD=TDGTPLIB,LIST=NO\nLOAD#02 COPY INDD=FDGTSLIB,OUTDD=TDGTSLIB,LIST=NO\nLOAD#02 COPY INDD=FDGTTLIB,OUTDD=TDGTTLIB,LIST=NO\nLOAD#02 COPY INDD=FISFLOAD,OUTDD=TISFLOAD,LIST=NO\nLOAD#02 COPY INDD=FISFLPA,OUTDD=TISFLPA,LIST=NO\nLOAD#02 COPY INDD=FISFPLIB,OUTDD=TISFPLIB,LIST=NO\nLOAD#02 COPY INDD=FISFTLIB,OUTDD=TISFTLIB,LIST=NO\nLOAD#02 COPY INDD=FIPOHELP,OUTDD=TIPOHELP,LIST=NO\nLOAD#02 COPY INDD=FIPOINST,OUTDD=TIPOINST,LIST=NO\nLOAD#02 COPY INDD=FIPOPLIB,OUTDD=TIPOPLIB,LIST=NO\nLOAD#02 COPY INDD=FIPOJCL,OUTDD=TIPOJCL,LIST=NO\nLOAD#02 COPY INDD=FIPOLINK,OUTDD=TIPOLINK,LIST=NO\nLOAD#02 COPY INDD=FIPOPROC,OUTDD=TIPOPROC,LIST=NO\nLOAD#02 COPY INDD=FPROFPR1,OUTDD=TPROFPR1,LIST=NO\nLOAD#02 COPY INDD=FPROFPR2,OUTDD=TPROFPR2,LIST=NO\nLOAD#02 COPY INDD=FPROFPR3,OUTDD=TPROFPR3,LIST=NO\nLOAD#02 COPY INDD=FPROFPR4,OUTDD=TPROFPR4,LIST=NO\nLOAD#02 COPY INDD=FPROFPR5,OUTDD=TPROFPR5,LIST=NO\n/*\n//*\n//LOAD#03 EXEC PGM=IEBCOPY,REGION=4M\n//*-----------------------------------------------------\n//* COPY VTAM LIBRARIES\n//*-----------------------------------------------------\n//SYSPRINT DD  SYSOUT=*\n//SYSUT3  DD   UNIT=SYSDA,SPACE=(CYL,(48,8))\n//SYSUT4  DD   UNIT=SYSDA,SPACE=(CYL,(48,8))\n//FVTAMLIB DD  DSN=SYS1.VTAMLIB,DISP=SHR\n//FVTAMLST DD  DSN=SYS1.VTAMLST,DISP=SHR\n//FVTAMTBL DD  DISP=SHR,DSN=OCSE.XA.VTAMLIB\n//FC10LINK DD  DISP=SHR,DSN=OCSE.COMLOAD\n//TVTAMLIB DD  DSN=SYSX.VTAMLIB,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE\n//TVTAMLST DD  DSN=SYSX.VTAMLST,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE\n//TVTAMTBL DD  DSN=SYSX.VTAMTBL,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE\n//TC10LINK DD  DISP=SHR,DSN=SYSX.COMTEN.LINKLIB,\n//        UNIT=3380,VOL=SER=RESCUE\n//SYSIN   DD   *\nLOAD#03 COPY INDD=FVTAMLIB,OUTDD=TVTAMLIB,LIST=NO\nLOAD#03 COPY INDD=FVTAMLST,OUTDD=TVTAMLST,LIST=NO\nLOAD#03 COPY INDD=FVTAMTBL,OUTDD=TVTAMTBL,LIST=NO\nLOAD#03 COPY INDD=FC10LINK,OUTDD=TC10LINK,LIST=NO\n/*\n//*\n//RNPROCS  EXEC PGM=IDCAMS,REGION=2M\n//*-----------------------------------------------------\n//*      RENAME PROCS IN SYSX.PROCLIB\n//*-----------------------------------------------------\n//SYSPRINT DD  SYSOUT=*\n//PROCLIB  DD DSN=SYSX.PROCLIB,\n//            DISP=SHR,UNIT=3380,VOL=SER=RESCUE\n//SYSIN   DD   *\n ALTER SYSX.PROCLIB(JES2) -\n       FILE(PROCLIB) -\n       NEWNAME(SYSX.PROCLIB(JES2PROD))\n ALTER SYSX.PROCLIB(JES2RESQ) -\n       FILE(PROCLIB) -\n       NEWNAME(SYSX.PROCLIB(JES2))\n ALTER SYSX.PROCLIB(VTAM) -\n       FILE(PROCLIB) -\n       NEWNAME(SYSX.PROCLIB(VTAMPROD))\n ALTER SYSX.PROCLIB(VTAMRESQ) -\n       FILE(PROCLIB) -\n       NEWNAME(SYSX.PROCLIB(VTAM))\n ALTER SYSX.PROCLIB(VTAM0) -\n       FILE(PROCLIB) -\n       NEWNAME(SYSX.PROCLIB(VTAM0PRD))\n ALTER SYSX.PROCLIB(VTAM0RSQ) -\n       FILE(PROCLIB) -\n       NEWNAME(SYSX.PROCLIB(VTAM0))\n/*\n//*\n//RNPARMS  EXEC PGM=IDCAMS,REGION=2M\n//*-----------------------------------------------------\n//*        RENAME  PARMLIB MEMBERS\n//*-----------------------------------------------------\n//SYSPRINT DD  SYSOUT=*\n//PARMLIB  DD DSN=SYSX.PARMLIB,\n//            DISP=SHR,UNIT=3380,VOL=SER=RESCUE\n//SYSIN   DD   *\n ALTER SYSX.PARMLIB(IEASYS00) -\n       FILE(PARMLIB) -\n       NEWNAME(SYSX.PARMLIB(IEASYSPR))\n ALTER SYSX.PARMLIB(IEASYSRQ) -\n       FILE(PARMLIB) -\n       NEWNAME(SYSX.PARMLIB(IEASYS00))\n ALTER SYSX.PARMLIB(IEACMD00) -\n       FILE(PARMLIB) -\n       NEWNAME(SYSX.PARMLIB(IEACMDPR))\n ALTER SYSX.PARMLIB(IEACMDRQ) -\n       FILE(PARMLIB) -\n       NEWNAME(SYSX.PARMLIB(IEACMD00))\n/*\n//*\n//RNVTAML  EXEC PGM=IDCAMS,REGION=2M\n//*-----------------------------------------------------\n//*        RENAME  VTAMLST MEMBERS\n//*-----------------------------------------------------\n//SYSPRINT DD  SYSOUT=*\n//VTAMLST  DD DSN=SYSX.VTAMLST,\n//            DISP=SHR,UNIT=3380,VOL=SER=RESCUE\n//SYSIN   DD   *\n ALTER SYSX.VTAMLST(ATCSTR00) -\n       FILE(VTAMLST) -\n       NEWNAME(SYSX.VTAMLST(ATCSTRPR))\n ALTER SYSX.VTAMLST(ATCSTRRQ) -\n       FILE(VTAMLST) -\n       NEWNAME(SYSX.VTAMLST(ATCSTR00))\n/*\n//*\n//\n//RESCUE3 JOB ('COMB,NCC,2,100'),'RICK-STECKER',\n//           NOTIFY=RGS,\n//           REGION=3M,\n//           CLASS=S,MSGCLASS=T,TYPRUN=HOLD\n//*------------------------------------------------------*\n//*                                                      *\n//*  _STEPS_   __________ FUNCTION _____________________ *\n//*  IFCDIP00   INITS THE LOGREC DATASET                 *\n//*  COPYUADS   COPIES CURRENT UADS FOR SELECTED USERS   *\n//*  RNUSRS@    RENAMES UADS MEMBERS FOR RESQTSO STEP    *\n//*  RESQTSO    SYNC UADS, ADD PROC, CHANGE PSWDS        *\n//*  RNUSRS     RENAMES UADS MEMBERS BACK TO NORMAL      *\n//*  IDUMP00    INITS DUMP DATASETS                      *\n//*  FORMAT     FORMATS SMF DATASETS                     *\n//*  PROTECT    PROTECTS MASTER CATALOG                  *\n//*  SYSCATLG   BUILD, RELPACE, SYSCATLG MEMBER IN NUC   *\n//*  PRINTPTR   PRINT NEW SYSCATLG POINTER               *\n//*------------------------------------------------------*\n//*\n//IFCDIP00 EXEC PGM=IFCDIP00\n//SERERDS DD DISP=SHR,DSN=SYSX.LOGREC,\n// UNIT=3380,VOL=SER=RESCUE\n//*\n//COPYUADS EXEC PGM=IEBCOPY\n//*-----------------------------------------------------\n//* COPY UADS ENTRIES FOR SELECTED TSO USERS\n//*-----------------------------------------------------\n//SYSPRINT DD SYSOUT=*\n//SYSUT2   DD UNIT=SYSDA,SPACE=(20,10)\n//SYSUT3   DD UNIT=SYSDA,SPACE=(20,10)\n//FUADS    DD DSN=SYS1.UADS,DISP=SHR\n//TUADS    DD DSN=SYSX.UADS,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE\n//SYSIN    DD *\n COPY I=((FUADS,R)),O=TUADS\n SELECT MEMBER=(AMK0,AXS0,LLA0,RGS0,RXR0)\n/*\n//*\n//RNUSRS@  EXEC PGM=IDCAMS,REGION=2M\n//*-----------------------------------------------------\n//* RENAME USERS - THIS ALLOWS THE ACCOUNT COMMAND TO\n//* DO ITS THING EVEN IF A USER IS LOGGED ON WHEN\n//* THIS JOB IS RUN\n//*-----------------------------------------------------\n//SYSPRINT DD  SYSOUT=*\n//UADS     DD DSN=SYSX.UADS,\n//            DISP=SHR,UNIT=3380,VOL=SER=RESCUE\n//SYSIN   DD   *\n ALTER SYSX.UADS(AMK0) -\n       FILE(UADS) -\n       NEWNAME(SYSX.UADS(@AMK0))\n ALTER SYSX.UADS(AXS0) -\n       FILE(UADS) -\n       NEWNAME(SYSX.UADS(@AXS0))\n ALTER SYSX.UADS(LLA0) -\n       FILE(UADS) -\n       NEWNAME(SYSX.UADS(@LLA0))\n ALTER SYSX.UADS(RGS0) -\n       FILE(UADS) -\n       NEWNAME(SYSX.UADS(@RGS0))\n ALTER SYSX.UADS(RXR0) -\n       FILE(UADS) -\n       NEWNAME(SYSX.UADS(@RXR0))\n/*\n//*\n//RESQTSO  EXEC PGM=IKJEFT01,\n//        DYNAMNBR=15,\n//        REGION=2M\n//*-----------------------------------------------------\n//* SYNC UADS, ADD LOGON PROC, CHANGE PASSWORD\n//*-----------------------------------------------------\n//SYSUADS  DD DSN=SYSX.UADS,DISP=SHR,\n//            VOL=SER=RESCUE,UNIT=3380\n//SYSLBC   DD DSN=SYSX.BRODCAST,DISP=SHR,\n//            VOL=SER=RESCUE,UNIT=3380\n//SYSPRINT DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTERM  DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSTSIN  DD *\n ACCOUNT\n SYNC\n A (@AMK * *) DATA($RESCUE)\n C (@AMK *) DATA(RESCUE)\n A (@AXS * *) DATA($RESCUE)\n C (@AXS *) DATA(RESCUE)\n A (@LLA * *) DATA($RESCUE)\n C (@LLA *) DATA(RESCUE)\n A (@RGS * *) DATA($RESCUE)\n C (@RGS *) DATA(RESCUE)\n A (@RXR * *) DATA($RESCUE)\n C (@RXR *) DATA(RESCUE)\n END\n/*\n//*\n//RNUSRS   EXEC PGM=IDCAMS,REGION=2M\n//*-----------------------------------------------------\n//* RENAME USERS BACK TO ORIGINAL NAME\n//*-----------------------------------------------------\n//SYSPRINT DD  SYSOUT=*\n//UADS     DD DSN=SYSX.UADS,\n//            DISP=SHR,UNIT=3380,VOL=SER=RESCUE\n//SYSIN   DD   *\n ALTER SYSX.UADS(@AMK0) -\n       FILE(UADS) -\n       NEWNAME(SYSX.UADS(AMK0))\n ALTER SYSX.UADS(@AXS0) -\n       FILE(UADS) -\n       NEWNAME(SYSX.UADS(AXS0))\n ALTER SYSX.UADS(@LLA0) -\n       FILE(UADS) -\n       NEWNAME(SYSX.UADS(LLA0))\n ALTER SYSX.UADS(@RGS0) -\n       FILE(UADS) -\n       NEWNAME(SYSX.UADS(RGS0))\n ALTER SYSX.UADS(@RXR0) -\n       FILE(UADS) -\n       NEWNAME(SYSX.UADS(RXR0))\n/*\n//*\n//IDUMP00 EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT1   DD DUMMY,DCB=SYS1.DUMP00\n//SYSUT2   DD DSN=SYSX.DUMP00,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE\n//*\n//IDUMP01 EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT1   DD DUMMY,DCB=SYS1.DUMP00\n//SYSUT2   DD DSN=SYSX.DUMP01,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE\n//*\n//FORMAT EXEC PGM=IFASMFDP,REGION=2M\n//STEPCAT  DD DSN=CATALOG.RESCUE,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//NEWMAN1  DD DSN=SYS1.MAN1,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE\n//NEWMAN2  DD DSN=SYS1.MAN2,DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE\n//SYSIN    DD *\n INDD(NEWMAN1,OPTIONS(CLEAR))\n INDD(NEWMAN2,OPTIONS(CLEAR))\n/*\n//*\n//PROTECT  EXEC PGM=IDCAMS\n//STEPCAT  DD DSN=CATALOG.RESCUE,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n ALTER CATALOG.RESCUE MRPW(XXXX) UPDPW(XXXX) -\n ATT(3) CODE(MASTCAT) -\n CAT(CATALOG.RESCUE/XXXX)\n LISTC CAT(CATALOG.RESCUE/XXXX) ALL\n/*\n//*\n//SYSCATLG EXEC PGM=IEBDG,REGION=512K\n//*-----------------------------------------------------------\n//* DOC: THE PURPOSE OF THIS STEP  TO REPLACE MEMBER SYSCATLG\n//*     IN DATA SET \"SYS1.NUCLEUS\" TO FACILITATE THE USE OF AN\n//*    EXISTING ICF OR VSAM MASTER CATALOG WITH A NEWLY CREATE\n//*     IPL VOLUME.\n//*\n//* NOTES: ACCEPTABLE CATALOG TYPE VALUES FOR \"FILL=\" ON THE\n//*        \"CATTYPE\" FD STATEMENT ARE:\n//*          X'00' AND X'40'  -  VSAM MASTER CATALOG\n//*          X'F1'            -  ICF MASTER CATALOG\n//*\n//*        ACCEPTABLE IPO SUPPORTED DEVICE TYPES FOR \"FILL=\"\n//*        ON THE \"DEV\" FD STATEMENT ARE:\n//*          X'0B' 3350          X'0E' 3380\n//*          X'0C' 3375\n//*        THE IPO SUPPLIED DEFAULT IS X'0E' FOR A 3380\n//*\n//*        EXAMPLES OF OTHER DEVICE TYPE VALUES FOR \"FILL=\"\n//*        ON THE \"DEV\" FD STATEMENT ARE:\n//*          X'0D' 3330-1        X'06' 2305-1\n//*          X'09' 3330          X'07' 2305-2\n//*          X'0A' 3340          X'08' 2314\n//*    THESE DEVICES ARE NOT SUPPORTED BY IPO FOR IPO VOLUMES;\n//*    THESE EXAMPLES ARE INCLUDED FOR COMPLETENESS ONLY.\n//*\n//*-----------------------------------------------------------\n//SYSPRINT DD  SYSOUT=*\n//NUCLEUS  DD  DSN=SYSX.NUCLEUS(SYSCATLG),\n//             UNIT=3380,VOL=SER=RESCUE,\n//             DISP=OLD\n//SYSIN    DD  *\n  DSD OUTPUT=(NUCLEUS)\n  FD NAME=VOL,\n     LENGTH=06,\n     STARTLOC=01,\n     FILL=X'40',\n     PICTURE=6,'RESCUE'  <-VERIFY/CHANGE VOL OF CAT\n  FD NAME=CATTYPE,\n     LENGTH=01,\n     STARTLOC=07,\n     FILL=X'F1'\n  FD NAME=DEV,\n     LENGTH=01,\n     STARTLOC=08,\n     FILL=X'0E'   <--VERIFY D/T\n  FD NAME=CAT,\n     LENGTH=44,\n     STARTLOC=11,\n     FILL=X'40',\n     PICTURE=44,'CATALOG.RESCUE                              '\n  FD NAME=FIL,\n     LENGTH=26,\n     STARTLOC=55,\n     FILL=X'40'\n CREATE QUANTITY=1,FILL=X'00',NAME=(VOL,CATTYPE,DEV,CAT,FIL)\n/*\n//*\n//PRINTPTR  EXEC PGM=IDCAMS\n//*  PRINT THE CATALOG POINTER\n//SYSPRINT DD SYSOUT=*\n//CATPTR   DD DSN=SYSX.NUCLEUS(SYSCATLG),DISP=SHR,\n//            UNIT=3380,VOL=SER=RESCUE\n//SYSIN    DD *\n  PRINT INFILE(CATPTR) DUMP\n/*\n//\n//RESCUE4 JOB ('COMB,NCC,2,100'),'RICK-STECKER',\n//           NOTIFY=RGS,\n//           REGION=3M,\n//           CLASS=S,MSGCLASS=T,TYPRUN=HOLD\n//*------------------------------------------------------*\n//*                                                      *\n//*  _STEPS_   __________ FUNCTION _____________________ *\n//*  PRTPARMS   PRINTS PARMLIB MEMBERS FOR REVIEW        *\n//*  PRTPROCS   PRINTS PROCLIB MEMBERS FOR REVIEW        *\n//*  PRTVTAML   PRINTS VTAMLST MEMBERS FOR REVIEW        *\n//*  MEMBLIST   MEMBER LISTS OF CRITICAL LIBS            *\n//*  RENAME -   RENAME SYSX TO SAME NAMES AS SOURCE SYS\n//*  VTOC       PRINTS VTOC LISTINGS   FOR REVIEW        *\n//*  FDRDUMP    DUMP RESCUE TO TAPE (FDR)               *\n//*------------------------------------------------------*\n//PRTPARMS EXEC PGM=IEBPTPCH,REGION=2M\n//*             PRINTS PARMLIB MEMBERS FOR REVIEW\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DISP=SHR,DSN=SYSX.PARMLIB,\n//            UNIT=3380,VOL=SER=RESCUE\n//SYSUT2   DD SYSOUT=*\n//SYSIN    DD *\n  PRINT TYPORG=PO,MAXFLDS=10,MAXNAME=10\n  TITLE ITEM=('RESCUE SYSTEM IPL PARMS',25)\n  TITLE ITEM=(' ')\n  MEMBER NAME=IEASYS00\n  RECORD FIELD=(80)\n  MEMBER NAME=IEACMD00\n  RECORD FIELD=(80)\n/*\n//*\n//PRTPROCS EXEC PGM=IEBPTPCH,REGION=2M\n//*             PRINTS PROCLIB MEMBERS FOR REVIEW\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DISP=SHR,DSN=SYSX.PROCLIB,\n//            UNIT=3380,VOL=SER=RESCUE\n//         DD DISP=SHR,DSN=SYSX.IPO.PROCLIB,\n//            UNIT=3380,VOL=SER=RESCUE\n//SYSUT2   DD SYSOUT=*\n//SYSIN    DD *\n  PRINT TYPORG=PO,MAXFLDS=10,MAXNAME=10\n  TITLE ITEM=('RESCUE SYSTEM PROCS',25)\n  TITLE ITEM=(' ')\n  MEMBER NAME=JES2\n  RECORD FIELD=(80)\n  MEMBER NAME=VTAM\n  RECORD FIELD=(80)\n  MEMBER NAME=VTAM0\n  RECORD FIELD=(80)\n  MEMBER NAME=$RESCUE\n  RECORD FIELD=(80)\n/*\n//*\n//PRTVTAML EXEC PGM=IEBPTPCH,REGION=2M\n//*             PRINTS VTAMLST MEMBERS FOR REVIEW\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DISP=SHR,DSN=SYSX.VTAMLST,\n//            UNIT=3380,VOL=SER=RESCUE\n//SYSUT2   DD SYSOUT=*\n//SYSIN    DD *\n  PRINT TYPORG=PO,MAXFLDS=10,MAXNAME=10\n  TITLE ITEM=('RESCUE SYSTEM VTAM START PARMS',25)\n  TITLE ITEM=(' ')\n  MEMBER NAME=ATCSTR00\n  RECORD FIELD=(80)\n/*\n//*\n//MEMBLIST EXEC PGM=IEHLIST,REGION=2M\n//*             MEMBER LISTS OF CRITICAL LIBS\n//SYSPRINT DD SYSOUT=*\n//DD1      DD UNIT=3380,VOL=SER=RESCUE,DISP=OLD\n//SYSIN    DD *\n  LISTPDS DSNAME=SYSX.PARMLIB,VOL=3380=RESCUE\n  LISTPDS DSNAME=SYSX.PROCLIB,VOL=3380=RESCUE\n  LISTPDS DSNAME=SYSX.IPO.PROCLIB,VOL=3380=RESCUE\n  LISTPDS DSNAME=SYSX.CMDPROC,VOL=3380=RESCUE\n  LISTPDS DSNAME=SYSX.VTAMLST,VOL=3380=RESCUE\n/*\n//*\n//RENAME  EXEC PGM=IDCAMS,REGION=2M\n//*         RENAME SYSX DATASETS TO SAME NAME AS SOURCE SYS\n//STEPCAT  DD  DISP=SHR,DSN=CATALOG.RESCUE\n//SYSPRINT DD  SYSOUT=*\n//SYSIN   DD   *\n ALTER SYSX.LINKLIB -\n       NEWNAME(SYS1.LINKLIB)\n ALTER SYSX.OEM.LINKLIB -\n       NEWNAME(SYS2.PPXA.LINKLIB)\n ALTER SYSX.LOGREC -\n       NEWNAME(SYS1.LOGREC)\n ALTER SYSX.CMDLIB -\n       NEWNAME(SYS1.CMDLIB)\n ALTER SYSX.CMDPROC -\n       NEWNAME(IPO88D.CMDPROC)\n ALTER SYSX.VTAMLIB -\n       NEWNAME(SYS1.VTAMLIB)\n ALTER SYSX.VTAMLST -\n       NEWNAME(SYS1.VTAMLST)\n ALTER SYSX.VTAMTBL -\n       NEWNAME(OCSE.XA.VTAMLIB)\n ALTER SYSX.DAE -\n       NEWNAME(SYS1.DAE)\n ALTER SYSX.DUMP00 -\n       NEWNAME(SYS1.DUMP00)\n ALTER SYSX.DUMP01 -\n       NEWNAME(SYS1.DUMP01)\n ALTER SYSX.HELP -\n       NEWNAME(SYS1.HELP)\n ALTER SYSX.MACLIB -\n       NEWNAME(SYS1.MACLIB)\n ALTER SYSX.SVCLIB -\n       NEWNAME(SYS1.SVCLIB)\n ALTER SYSX.DUTLOAD -\n       NEWNAME(SYS1.DUTLOAD)\n ALTER SYSX.DUTPLIB -\n       NEWNAME(SYS1.DUTPLIB)\n ALTER SYSX.DGTCLIB -\n       NEWNAME(SYS1.DGTCLIB)\n ALTER SYSX.DGTLLIB -\n       NEWNAME(SYS1.DGTLLIB)\n ALTER SYSX.DGTMLIB -\n       NEWNAME(SYS1.DGTMLIB)\n ALTER SYSX.DGTPLIB -\n       NEWNAME(SYS1.DGTPLIB)\n ALTER SYSX.DGTSLIB -\n       NEWNAME(SYS1.DGTSLIB)\n ALTER SYSX.DGTTLIB -\n       NEWNAME(SYS1.DGTTLIB)\n ALTER SYSX.HASPINDX -\n       NEWNAME(ISF.HASPINDX)\n ALTER SYSX.ISFLOAD -\n       NEWNAME(ISF.V1R1M0.ISFLOAD)\n ALTER SYSX.ISFLPA -\n       NEWNAME(ISF.V1R1M0.ISFLPA)\n ALTER SYSX.ISFPLIB -\n       NEWNAME(ISF.V1R1M0.ISFPLIB)\n ALTER SYSX.ISFTLIB -\n       NEWNAME(ISF.V1R1M0.ISFTLIB)\n ALTER SYSX.IPO.HELP -\n       NEWNAME(IPO88D.HELP)\n ALTER SYSX.IPO.INSTLIB -\n       NEWNAME(IPO88D.INSTLIB)\n ALTER SYSX.IPO.ISPPLIB -\n       NEWNAME(IPO88D.ISPPLIB)\n ALTER SYSX.IPO.JCLLIB -\n       NEWNAME(IPO88D.JCLLIB)\n ALTER SYSX.IPO.LINKLIB -\n       NEWNAME(IPO88D.LINKLIB)\n ALTER SYSX.IPO.PROCLIB -\n       NEWNAME(IPO88D.PROCLIB)\n ALTER SYSX.LPALIB -\n       NEWNAME(SYS1.LPALIB)\n ALTER SYSX.NUCLEUS -\n       NEWNAME(SYS1.NUCLEUS)\n ALTER SYSX.SAMPLIB -\n       NEWNAME(SYS1.SAMPLIB)\n ALTER SYSX.COMTEN.LINKLIB -\n       NEWNAME(OCSE.COMLOAD)\n ALTER SYSX.JESCKPT -\n       NEWNAME(SYS1.JESCKPT)\n ALTER SYSX.HASPACE -\n       NEWNAME(SYS1.HASPACE)\n ALTER SYSX.BRODCAST -\n       NEWNAME(SYS1.BRODCAST)\n ALTER SYSX.IMAGELIB -\n       NEWNAME(SYS1.IMAGELIB)\n ALTER SYSX.PARMLIB -\n       NEWNAME(SYS1.PARMLIB)\n ALTER SYSX.PROCLIB -\n       NEWNAME(SYS1.PROCLIB)\n ALTER SYSX.UADS -\n       NEWNAME(SYS1.UADS)\n ALTER SYSX.ISPLOAD -\n       NEWNAME(ISP.V2R3M0.ISPLOAD)\n ALTER SYSX.ISPMLIB -\n       NEWNAME(ISP.V2R3M0.ISPMLIB)\n ALTER SYSX.ISPPLIB -\n       NEWNAME(ISP.V2R3M0.ISPPLIB)\n ALTER SYSX.ISPSLIB -\n       NEWNAME(ISP.V2R3M0.ISPSLIB)\n ALTER SYSX.ISPTLIB -\n       NEWNAME(ISP.V2R3M0.ISPTLIB)\n ALTER SYSX.ISRCLIB -\n       NEWNAME(ISR.V2R3M0.ISRCLIB)\n ALTER SYSX.ISRJLIB -\n       NEWNAME(ISR.V2R3M0.ISRJLIB)\n ALTER SYSX.ISRLOAD -\n       NEWNAME(ISR.V2R3M0.ISRLOAD)\n ALTER SYSX.ISRMLIB -\n       NEWNAME(ISR.V2R3M0.ISRMLIB)\n ALTER SYSX.ISRPLIB -\n       NEWNAME(ISR.V2R3M0.ISRPLIB)\n ALTER SYSX.ISRSLIB -\n       NEWNAME(ISR.V2R3M0.ISRSLIB)\n ALTER SYSX.ISRTLIB -\n       NEWNAME(ISR.V2R3M0.ISRTLIB)\n ALTER SYSX.ISPF1.ISPPROF -\n       NEWNAME(AMK.ISPF.ISPPROF)\n ALTER SYSX.ISPF2.ISPPROF -\n       NEWNAME(AXS.ISPF.ISPPROF)\n ALTER SYSX.ISPF3.ISPPROF -\n       NEWNAME(LLA.ISPF.ISPPROF)\n ALTER SYSX.ISPF4.ISPPROF -\n       NEWNAME(RGS.ISPF.ISPPROF)\n ALTER SYSX.ISPF5.ISPPROF -\n       NEWNAME(RXR.ISPF.ISPPROF)\n LISTC CAT(CATALOG.RESCUE/XXXX) ALL\n/*\n//*\n//VTOC     EXEC PGM=IEHLIST,REGION=2M\n//*             PRINTS VTOC LISTINGS FOR REVIEW\n//SYSPRINT DD SYSOUT=*\n//DD1      DD UNIT=3380,VOL=SER=RESCUE,DISP=OLD\n//SYSIN    DD *\n  LISTVTOC VOL=3380=RESCUE\n  LISTVTOC VOL=3380=RESCUE,FORMAT\n/*\n//*\n//FDRDUMP  EXEC PGM=FDR,REGION=2M\n//*             DUMP RESCUE TO TAPE (FDR)\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//DISK1    DD DISP=OLD,UNIT=3380,VOL=SER=RESCUE\n//TAPE1    DD DSN=BKUP.RESCUE,\n//            UNIT=TAPE,DISP=(NEW,KEEP,KEEP)\n//SYSIN    DD *\n  DUMP TYPE=FDR,BUFNO=MAX\n/*\n//*\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RESQSUB": {"ttr": 2054, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//RESQSUB  JOB (COMB,NCC,2,100),'RICK STECKER',\n//        MSGCLASS=T,CLASS=S,NOTIFY=LLA,REGION=2M\n//*\n//*      THIS JOB SUBMITS THE RESCUE JCL THROUGH THE\n//*      INTERNAL READER. DON'T FORGET TO EDIT OUT\n//*      THE QUOTES IN THE JOB ACCOUNTING |\n//*                                               RICK STECKER 3/12/90\n//*\n//STEP1    EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DUMMY\n//SYSUT1   DD DISP=SHR,DSN=COMB.RESCUE.CNTL(RESQJCL)\n//SYSUT2   DD SYSOUT=(S,INTRDR),DCB=BLKSIZE=80\n//\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT164/FILE164.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT164", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}