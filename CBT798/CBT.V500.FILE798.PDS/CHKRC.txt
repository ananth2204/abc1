/**** REXX ***********************************************************/
/* Rexx                                                              */
/* Created   By :Kang Dengsong                                       */
/* Created Date :SEP 13, 2008                                        */
/* REMARK       :Job scheduler system                                */
/* ***************************************************************** */
/*================================================================*  */
/* KKKKKKKKKKKKK   DDDDDDDD    SSSSSSSS                           *  */
/* KKKKKKKKKKKKK  DDDDDDDDD   SSSSSSSSS                           *  */
/*      KKKK      DDDD        SSSS                                *  */
/*      KKKK      DDDD        SSSS                                *  */
/*      KKKK      DDDD        SSSS          1111          0000000 *  */
/*      KKKK      DDDDDDDD    SSSSSSSS      1111        0000000000*  */
/*      KKKK        DDDDDDD    SSSSSSSS     1111        0000  0000*  */
/*      KKKK           DDDD        SSSS    1111         0000  0000*  */
/*      KKKK           DDDD        SSSS    1111        0000  0000 *  */
/*      KKKK           DDDD        SSSS    1111        0000  0000 *  */
/* KKK  KKKK           DDDD        SSSS   1111   0000  0000  0000 *  */
/* KKKKKKKK      DDDDDDDDDD   SSSSSSSSS   1111  0000  0000000000  *  */
/* KKKKKKKK      DDDDDDDDD    SSSSSSSS    1111 0000    000000000  *  */
/*================================================================*  */
ARG JOBNAME
Address TSO
Numeric digits 64
@tcb = Get_dec_addr(540)
@jscb = Get_dec_addr(@tcb+180)
step# = Get_stor_contents(@jscb+X2d(E4) 1)
step# = X2d(C2x(step#))
@jct = Get_dec_addr(@jscb+260)
@sct = Get_dec_addr(@jct+48 3)

last_step = 'NO'
j = 1
If step# = 1 Then
  Do
    Say 'this is the first step; no rc so far --- '
    Exit
  End
Else
  Do While last_step = 'NO'
    sct_abnd = Get_Stor_Contents(@sct+176 1)
    sct_cond = Get_Stor_Contents(@sct+188 1)
    sct_rc = Get_Stor_Contents(@sct+24 2)
    If j < step# Then
      Do
        dec_Rc = Right(X2d(C2x(sct_rc)),4,'0')
        hex_Rc = C2x(sct_rc)
        prf = '8'
        ltrl = ' Rc(hex):    'hex_Rc ' Rc(dec): 'dec_Rc
      End
    Else If j = step# Then
      Do
        dec_Rc = '***'
        hex_Rc = '***'
        prf = '>'
        ltrl = ' *currently executing step* 0000'
      End
    Else
      Do
        dec_Rc = 'n/a'
        hex_Rc = 'n/a'
        prf = '1'
        ltrl = ' ***waiting for execution** WAIT'
      End
    stpnam = Get_stor_contents(@sct+68 8)
    pgmnam = Get_stor_contents(@sct+124 8)
    stpnum = Right(j,3,'0')
    lprf = prf'Schtepp 'stpnum' Stepname: 'stpnam ' Pgmname: 'pgmnam
    If Bitand(sct_cond,'10'X) = '10'X Then     /* COND-Bypass */
      ltrl = ' ***bypassed due to cond*** NOTR'
    If Bitand(sct_abnd,'04'X) = '04'X Then     /* Step Abended */
      ltrl = ' **** Jobstep abended ***** 9999'
    line = lprf''ltrl
    Say line
    @sct = Get_dec_addr(@sct+36 3)        /* sct next step */
    If @sct = 0 Then
      last_step = 'YES'
    j = j + 1
  End
RETURN
Exit
Get_dec_addr:
Parse arg value len
If len = '' Then
  len = 4
hex_value = D2x(value)
stor = Storage(hex_value,len)
hex_stor = C2x(stor)
value = X2d(hex_stor)
Return value
/* */
Get_stor_contents:
arg value length
hex_value = D2x(value)
value = Storage(hex_value,length)
Return value
