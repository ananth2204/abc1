.*
.*
.*                    +----------+
.*    MACRO NAME   -  | @EDITHEX |
.*                    +----------+
.*
.*
.*    Function -
.*          Convert input to printable hexadecimal characters
.*
.*    Syntax -
.*
.*
.*    Operation -
.*
.*
.*
.*    Author -
.*         Name     :  Deru Sudibyo
.*                     Software architect
.*         Copyright:  (C)1998 Deru Sudibyo
.*
.*    Disclaimer -
.*        This macro is developed as a personal support, and is
.*        not a part of CA support matterials.  The purpose is as
.*        a temporary solution or even just a sample.  Therefor,
.*        further modifications and maintenance are client's
.*        responsibilities.
.*
.*    Modification Log -
.*    +--------+------------+--------+---------------------------+
.*    | Date   | Engineer   | V.R.L. | Description               |
.*    +--------+------------+--------+---------------------------+
.*    |04/10/16| Deru S.    | 1.0.0. | First development         |
.*    |        |            |        |                           |
.*    |        |            |        |                           |
.*    |        |            |        |                           |
.*    |        |            |        |                           |
.*    |        |            |        |                           |
.*    |        |            |        |                           |
.*    +--------+------------+--------+---------------------------+
.*
         MACRO
&NAME    @EDITHEX &INPUT=,&LENGTH=,&TYPE=BIN,&OUTPUT=
         COPY  CBTGBLVR
         lclc  &lbl,&len,&q,&in
&q       setc  ''''
&lbl     setc  'DER&sysndx'
         aif   (t'&INPUT eq 'O').errin
         aif   ('&INPUT'(1,1) eq '&q').errin
&NAME    stm   r0,r4,&derwtobuf+232   save reg 0-4
         copy  CBTTRTAB
         aif   ('&INPUT'(1,1) ne '(').in1
         aif   (t'&LENGTH eq 'O').errlen
         aif  ((t'&LENGTH ne 'U') or (t'&LENGTH ne 'N')).errlen
&len     setc  '&length'
&in      setc  '0(&len,&INPUT)'
         ago   .proc
.in1     anop
&len     setc  'l&q&input'
&in      setc  '&INPUT.(&len)'
.proc    anop
         mvi   &DERWORK+&len,x'0F'    put sign in last byte
         mvo   &DERWORK.(&len+1),&in      take input w/ care of offset
         unpk  &DERWORK+&len+2(2*&len),&DERWORK.(&len+1) unpack it
         l     r1,=a(&DERTRTB_null80)     80-blank address
         mvz   &DERWORK+&len+2(2*&len),0(r1)  zap all zones
         l     r1,=a(&DERTRTB_hex2chr)    translation table
         tr    &DERWORK+&len+2(2*&len),0(r1)  translate
         aif   (t'&OUTPUT eq 'O').nooutv
         aif   ('&OUTPUT'(1,1) eq '''').errout
         aif   ('&OUTPUT'(1,1) eq '(').outreg
         mvc   &OUTPUT.(2*&len),&DERWORK+&len+2
         lm    r1,r4,&derwtobuf+232+4  restore reg 1-4
         ago   .exit
.outreg  anop
&oreg    setc  '&OUTPUT(1)'
         lm    r2,r4,&derwtobuf+232+8  restore reg 2-4
         mvc   0(2*&len,&oreg),&DERWORK+&len+2
         ago   .exit
.nooutv  la    r1,&DERWORK+&len+2      address of result
         lr    r0,r1                   also in reg 0
         lm    r2,r4,&derwtobuf+232+8  restore reg 2-4
         ago   .exit
.exit    anop
         mexit
.errin   MNOTE 8,'DER001E Invalid input argument.'
         mexit
.errlen  MNOTE 8,'DER002E LENGTH must be specified if input in (REG).'
         mexit
.errout  MNOTE 8,'DER003E Invalid output argument.'
         MEND
