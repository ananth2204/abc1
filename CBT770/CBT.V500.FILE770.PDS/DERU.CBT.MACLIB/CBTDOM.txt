.*
.*
.*                    +----------+
.*    Macro Name   -  | CBTDOM   |
.*                    +----------+
.*
.*
.*    Function -
.*                  Build and/or clear DOMid stack
.*
.*    Syntax -
.*
.*
.*    Operation -
.*
.*
.*    Author -
.*         Name     :  Deru Sudibyo
.*                     S/W Architect
.*         Copyright:  (C)1998 Deru Sudibyo
.*
.*
.*    Modification Log -
.*    +--------+------------+--------+---------------------------+
.*    | Date   | Engineer   | V.R.L. | Description               |
.*    +--------+------------+--------+---------------------------+
.*    |98/03/12| Deru S.    | 1.0.0. | First development         |
.*    |06/10/18| Deru S.    | 1.0.1  | Added checking and saving |
.*    |        |            |        | DOM id                    |
.*    |        |            |        |                           |
.*    |        |            |        |                           |
.*    |        |            |        |                           |
.*    |        |            |        |                           |
.*    +--------+------------+--------+---------------------------+
.*
         MACRO
&NAME    CBTDOM &func,&loc=SVA,&workregs=(r0,r1)
         COPY  CBTGBLVR
         LCLC  &LMSG,&LBL,&dsc,&pfx,&rx,ry
&pfx     setc  'SVA'
         aif   ('&LOC' ne 'WSA').pfxdone
&pfx     setc  'WS'
.pfxdone anop
&LBL     SETC  'DER&SYSNDX'
         aif   (n'&workregs ne 2).errwreg
&rx      setc  '&workregs(1)'
&ry      setc  '&workregs(2)'
         aif   (t'&func eq 'O').errfunc
         aif   ('&func' eq 'CLEAR').clear
         aif   ('&func' eq 'BUILD').build
         aif   ('&func' eq 'PURGE').purge
.errfunc mnote 8,'DER001E Wrong function.  Specify BUILD or CLEAR or PU+
               RGE.'
         mexit
.errwreg mnote 8,'DER002E WORKREGS must contain 2 registers.'
         mexit
         space ,
* +---------------------------------------------+
* | Build DOMid stack                           |
* +---------------------------------------------+
         space ,
.build   anop
&NAME    ds    0h
         la    &Rx,1                 init R2
         sll   &Rx,12                with num of 4096
         STORAGE OBTAIN,COND=NO,LENGTH=(&Rx),LOC=ANY
         st    r1,&pfx.DOMlist       save the start address
         st    &rx,0(r1)             save length
         st    r1,&pfx.DOMcurr       make it as current DOMid ptr
         alr   r1,&Rx                past end ptr
         sh    r1,=h'4'              bwd 4 byte
         st    r1,&pfx.DOMlist+4     save as the last DOM id list ptr
         l     r0,&pfx.DOMlist       start address
         l     r1,&pfx.DOMlist       start address
         l     r1,0(r1)              length
&lbl.a   equ   *
         xr    r14,r14               clear reg 14
         xr    r15,r15               clear reg 15
         mvcl  r0,r14                clear all buffer
         ltr   r1,r1                 were all done?
         bnz   &lbl.a                no, iterate
         mexit
         space ,
* +---------------------------------------------+
* | Clear DOMid stack                           |
* +---------------------------------------------+
         space ,
.clear   aif   ('&loc' eq 'COM').clrcom
&NAME    ds    0h
         l     &Ry,&pfx.DOMcurr      current DOM id list ptr
         cl    &Ry,&pfx.DOMlist      any stored DOM id?
         bnh   &lbl.a                no, skip DOM
         sh    &Ry,=h'4'             bwd 4 bytes
         oi    0(&Ry),x'80'          mark as the last stored DOM id
         l     &Ry,&pfx.DOMlist      start of DOM id list ptr
         DOM   msglist=(&Ry)         delete messages
         mvc   &pfx.DOMcurr,&pfx.DOMlist reset stack
&lbl.a   equ   *
         mexit
.clrcom  anop
         l     r0,COMdomid           get msg id
         ltr   r0,r0                 exist?
         bz    &lbl.a                ignore if none
         DOM   msg=COMdomid          delete if exist
         xc    COMdomid,COMdomid     clear location
&lbl.a   equ   *
         mexit
         space ,
* +---------------------------------------------+
* | Purge DOMid stack                           |
* +---------------------------------------------+
         space ,
.purge   anop
&NAME    ds    0h
         la    &Rx,1               init R2
         sll   &Rx,12              with num of 4096
         l     &Ry,&pfx.DOMlist    get the start address
         ltr   &Ry,&Ry             check it
         bz    &lbl.b              skip if none
         STORAGE RELEASE,LENGTH=(&Rx),ADDR=(&Ry)
&lbl.b   equ   *
         xc    &pfx.DOMlist,&pfx.DOMlist zap start address
         xc    &pfx.DOMcurr,&pfx.DOMcurr zap current DOMid ptr
         MEND
