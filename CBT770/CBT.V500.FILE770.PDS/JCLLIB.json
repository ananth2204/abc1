{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20081125221423000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 6160, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "SBGOLOB.DERU.ZCBT.JCLLIB", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"SBGOLOB.DERU.ZCBT.JCLLIB": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 6160, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 1113, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "080330", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\x05'", "DS1LSTAR": "b'\\x00\\x01\\x07'", "DS1TRBAL": "b'\\xa8\\xce'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f=P\\x00\\x04\\x88\\xd0P'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f=P\\x00\\x04\\x88\\xd0P'", "b'X\\xf5#\\x90\\x00\\x00\\x00$\\x00\\x00\\x00$\\x00\\x04\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"JCBTEST1": {"ttr": 257, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00U\\x01\\x07)?\\x01\\x07)?\\x13E\\x00\\x19\\x00\\x1b\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2007-10-20T00:00:00", "modifydate": "2007-10-20T13:45:55", "lines": 25, "newlines": 27, "modlines": 0, "user": "DERU"}, "text": "//*************************************************************\n//**                                                         **\n//**  JCBTEST1                                               **\n//**                                                         **\n//**  Once zCBT is completely installed and initialized,     **\n//**  run this job as system task (STC) to perform some      **\n//**  verification.  It can be brought up either under       **\n//**  primary subsystem:                                     **\n//**                                                         **\n//**     START JCBTEST1                                      **\n//**                                                         **\n//**  or master subsystem:                                   **\n//**                                                         **\n//**     START JCBTEST1,SUB=MSTR                             **\n//**                                                         **\n//*************************************************************\n//JCBTEST1 PROC\n//*\n//REXX   EXEC PGM=IRXJCL,TIME=1440,REGION=0M,PARM='CBTIVP'\n//SYSTSPRT DD DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20)),\n//         DCB=(RECFM=FB,LRECL=121,BLKSIZE=1210)\n//STEPLIB  DD DISP=SHR,DSN=your.CBT.LOADLIB\n//SYSEXEC  DD DISP=SHR,DSN=your.CBT.REXXLIB\n//SYSTSIN  DD DUMMY\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JCBTEST2": {"ttr": 259, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00(\\x01\\x07)?\\x01\\x07)?\\x13D\\x00\\x17\\x00\\x17\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2007-10-20T00:00:00", "modifydate": "2007-10-20T13:44:28", "lines": 23, "newlines": 23, "modlines": 0, "user": "DERU"}, "text": "//*******************************************************\n//**                                                   **\n//**   JCBTEST2                                        **\n//**                                                   **\n//**   JOB TO CREATE EVENTS NEEDED BY STC JCBTEST1.    **\n//**   SUBMIT THIS JOB WHILE JCBTEST1 IS RUNNING.      **\n//**                                                   **\n//*******************************************************\n//JCBTEST2 JOB (1,NIT),'CREATES EVENTS',CLASS=A,\n//   MSGCLASS=X,NOTIFY=&SYSUID\n//JCBSTEP1 EXEC PGM=IKJEFT01,DYNAMNBR=20\n//SYSTSPRT DD SYSOUT=(P,TSOTEST),DEST=PEMALANG\n//STEPLIB  DD DISP=SHR,DSN=YOUR.CBT.LOADLIB\n//SYSEXEC  DD DISP=SHR,DSN=YOUR.CBT.REXXLIB\n//SYSTSIN  DD *\n%CBTIVP1\n/*\n//JCBSTEP2 EXEC PGM=IRXJCL,REGION=0M,PARM='CBTIVP2'\n//SYSTSPRT DD SYSOUT=(P,REXTEST),DEST=PEMALANG\n//STEPLIB  DD DISP=SHR,DSN=YOUR.CBT.LOADLIB\n//SYSEXEC  DD DISP=SHR,DSN=YOUR.CBT.REXXLIB\n//SYSTSIN  DD DUMMY\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZCBT": {"ttr": 261, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00T\\x01\\x07)?\\x01\\x07)?\\x13B\\x00T\\x00T\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-10-20T00:00:00", "modifydate": "2007-10-20T13:42:54", "lines": 84, "newlines": 84, "modlines": 0, "user": "DERU"}, "text": "//*========================================================*\n//*                                                        *\n//*                +---------+                             *\n//*                | zCBT    |                             *\n//*                +---------+                             *\n//*              zCBT address space                        *\n//*                                                        *\n//*                                                        *\n//*  DESCRIPTION -                                         *\n//*                                                        *\n//*      zCBT address space is a system task (STC)         *\n//*      to prepare zCBT subsystem initialization.         *\n//*      zCBT subsystem is an event management system      *\n//*      (EMS) which lets users to automate their          *\n//*      system using rexx program.  zCBT supports         *\n//*      some rexx functions to interact with 4 types      *\n//*      of events: MSG, CMD, EOJ and EOS.                 *\n//*                                                        *\n//*                                                        *\n//*  OPERATION -                                           *\n//*                                                        *\n//*      This STC can either to bring up zCBT subsystem    *\n//*      or be brought up by zCBT subsystem.  When it      *\n//*      brings up zCBT subsystem, it prepares data area   *\n//*      and LPA modules prior to setup the subsystem.     *\n//*                                                        *\n//*      When it is brought up by zCBT subsystem (for      *\n//*      example: when subsystem is brought up during      *\n//*      NIP in respond to IEFSSNxx parameter or by        *\n//*      issueing SETSSI command), it checks dataarea      *\n//*      and LPA modules.  If data area does not exist     *\n//*      then allocate it.  If LPA modules not ready in    *\n//*      LPA, then load them.  Upon completion, send       *\n//*      acknowledgement signal to zCBT initialization     *\n//*      task.                                             *\n//*                                                        *\n//*      Once checking or preparation successfully done,   *\n//*      this task then terminated.  You don't need to     *\n//*      start it again until next IPL.                    *\n//*                                                        *\n//*      If all CBTEMSxx modules are already in LPA,       *\n//*      for example if you make them preloaded with       *\n//*      either LPALSTxx or IEALPAxx or IEAFIXxx           *\n//*      PARMLIB definition, then you don't need to        *\n//*      run this address space.                           *\n//*                                                        *\n//*                                                        *\n//*  START COMMAND SYNTAX -                                *\n//*                                                        *\n//*      To get this task up, issue the following          *\n//*      command:                                          *\n//*                                                        *\n//*         START ZCBT,SUB=MSTR,SSN=subsystemname          *\n//*                                                        *\n//*                                                        *\n//*  SECURITY REQUIREMENTS -                               *\n//*                                                        *\n//*  A.  zCBD needs UPDATE level access to the following   *\n//*      resources:                                        *\n//*                                                        *\n//*     (1) JESSPOOL RESOURCE CLASSES                      *\n//*     (2) MVS.** OPERCMDS CLASS                          *\n//*     (3) JES2.** OPERCMDS CLASS                         *\n//*                                                        *\n//*  b.  This must runs in privileged mode.  zCBT loadlib  *\n//*      must be registerred as APF library.  otherwise,   *\n//*      it will abend s047.                               *\n//*                                                        *\n//*========================================================*\n//ZCBT PROC SSN=CBT,HLQ=DERU\n//ZCBTEXEC EXEC PGM=CBTEMS,REGION=0M,TIME=1440,\n//  PARM='SSN=&SSN'\n//*--------------------------------------------------------*\n//*  zCBT load module library (loadlib)                    *\n//*     - Can be avoided if it is installed in LINKLST     *\n//*       or link pack area (LPA)                          *\n//*     - Must be registerred in authorized program        *\n//*       function (APF) to avoid s047 abend               *\n//*     - you must change it to accommodate your local     *\n//*       environment.  if your naming structure is        *\n//*       different, its corresponding parameters in       *\n//*       proc card must also be modified.                 *\n//*--------------------------------------------------------*\n//STEPLIB DD DISP=SHR,DSN=&HLQ..CBT.LOADLIB\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT770/CBT.V500.FILE770.PDS/JCLLIB.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT770/CBT.V500.FILE770.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}