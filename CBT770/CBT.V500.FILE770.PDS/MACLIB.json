{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "DERU", "INMTNODE": "MFOC", "INMTUID": "DERU", "INMFTIME": "20071025065145000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 411502, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 3200, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "DERU.CBT.MACLIB", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"DERU.CBT.MACLIB": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 3200, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 1113, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "070298", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\xc0\\x00\\x00\\x05'", "DS1LSTAR": "b'\\x00\\x08\\x0b'", "DS1TRBAL": "b'hB'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0e \\x00\\x04\\x8a4\\x80'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0e \\x00\\x04\\x8a4\\x80'", "b'P\\xf3\\xe5\\xa8\\x00\\x00\\x02\\x06\\x00\\x00\\x02\\x0f\\x00\\x0e\\x00\\x96'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"@CALL": {"ttr": 1034, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01\\x07)\\x0f\\x01\\x07)\\x0f\\x10 \\x001\\x001\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-10-17T00:00:00", "modifydate": "2007-10-17T10:20:21", "lines": 49, "newlines": 49, "modlines": 0, "user": "DERU"}, "text": "*\n*                     +--------+\n*     Macro Name   -  | @CALL  |\n*                     +--------+\n*\n*     Function -\n*              Issue BAS or BASR to internal subroutine\n*\n*     Syntax -\n*              @CALL subrtn,ADDRTYPE=<A|V>\n*\n*     Operation -\n*\n*     Author -\n*          Name     :  Deru Sudibyo\n*                      S/W Architect\n*          Copyright:  (C)1998 Deru Sudibyo\n*\n*\n*     Modification Log -\n*     +--------+------------+--------+---------------------------+\n*     | Date   | Engineer   | V.R.L. | Description               |\n*     +--------+------------+--------+---------------------------+\n*     |98/02/12| Deru S.    | 1.0.0. | First development         |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     +--------+------------+--------+---------------------------+\n*\n         MACRO\n&LABEL   @CALL &subrtn,&addrtype=A\n         copy  CBTGBLVR\n         lclc  &rtn,&atype\n&atype   setc  '&addrtype'\n         AIF   (t'&subrtn eq 'O').errsub\n         AIF   ('&subrtn'(1,1) eq '(').reg\n&LABEL   l     r15,=&atype.(&subrtn)\n         basr  r14,r15\n         MEXIT\n.reg     anop\n&rtn     setc  '&subrtn(1)'\n&LABEL   lr    r15,&rtn\n         basr  r14,r15\n         MEXIT\n.errsub  MNOTE 8,'DERAMD001E Subroutine address/name not supplied.'\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@EDITHEX": {"ttr": 1298, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x005\\x01\\x07)\\x0f\\x01\\x07)?\\x13G\\x00\\\\\\x00`\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2007-10-17T00:00:00", "modifydate": "2007-10-20T13:47:35", "lines": 92, "newlines": 96, "modlines": 0, "user": "DERU"}, "text": ".*\n.*\n.*                    +----------+\n.*    MACRO NAME   -  | @EDITHEX |\n.*                    +----------+\n.*\n.*\n.*    Function -\n.*          Convert input to printable hexadecimal characters\n.*\n.*    Syntax -\n.*\n.*\n.*    Operation -\n.*\n.*\n.*\n.*    Author -\n.*         Name     :  Deru Sudibyo\n.*                     Software architect\n.*         Copyright:  (C)1998 Deru Sudibyo\n.*\n.*    Disclaimer -\n.*        This macro is developed as a personal support, and is\n.*        not a part of CA support matterials.  The purpose is as\n.*        a temporary solution or even just a sample.  Therefor,\n.*        further modifications and maintenance are client's\n.*        responsibilities.\n.*\n.*    Modification Log -\n.*    +--------+------------+--------+---------------------------+\n.*    | Date   | Engineer   | V.R.L. | Description               |\n.*    +--------+------------+--------+---------------------------+\n.*    |04/10/16| Deru S.    | 1.0.0. | First development         |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    +--------+------------+--------+---------------------------+\n.*\n         MACRO\n&NAME    @EDITHEX &INPUT=,&LENGTH=,&TYPE=BIN,&OUTPUT=\n         COPY  CBTGBLVR\n         lclc  &lbl,&len,&q,&in\n&q       setc  ''''\n&lbl     setc  'DER&sysndx'\n         aif   (t'&INPUT eq 'O').errin\n         aif   ('&INPUT'(1,1) eq '&q').errin\n&NAME    stm   r0,r4,&derwtobuf+232   save reg 0-4\n         copy  CBTTRTAB\n         aif   ('&INPUT'(1,1) ne '(').in1\n         aif   (t'&LENGTH eq 'O').errlen\n         aif  ((t'&LENGTH ne 'U') or (t'&LENGTH ne 'N')).errlen\n&len     setc  '&length'\n&in      setc  '0(&len,&INPUT)'\n         ago   .proc\n.in1     anop\n&len     setc  'l&q&input'\n&in      setc  '&INPUT.(&len)'\n.proc    anop\n         mvi   &DERWORK+&len,x'0F'    put sign in last byte\n         mvo   &DERWORK.(&len+1),&in      take input w/ care of offset\n         unpk  &DERWORK+&len+2(2*&len),&DERWORK.(&len+1) unpack it\n         l     r1,=a(&DERTRTB_null80)     80-blank address\n         mvz   &DERWORK+&len+2(2*&len),0(r1)  zap all zones\n         l     r1,=a(&DERTRTB_hex2chr)    translation table\n         tr    &DERWORK+&len+2(2*&len),0(r1)  translate\n         aif   (t'&OUTPUT eq 'O').nooutv\n         aif   ('&OUTPUT'(1,1) eq '''').errout\n         aif   ('&OUTPUT'(1,1) eq '(').outreg\n         mvc   &OUTPUT.(2*&len),&DERWORK+&len+2\n         lm    r1,r4,&derwtobuf+232+4  restore reg 1-4\n         ago   .exit\n.outreg  anop\n&oreg    setc  '&OUTPUT(1)'\n         lm    r2,r4,&derwtobuf+232+8  restore reg 2-4\n         mvc   0(2*&len,&oreg),&DERWORK+&len+2\n         ago   .exit\n.nooutv  la    r1,&DERWORK+&len+2      address of result\n         lr    r0,r1                   also in reg 0\n         lm    r2,r4,&derwtobuf+232+8  restore reg 2-4\n         ago   .exit\n.exit    anop\n         mexit\n.errin   MNOTE 8,'DER001E Invalid input argument.'\n         mexit\n.errlen  MNOTE 8,'DER002E LENGTH must be specified if input in (REG).'\n         mexit\n.errout  MNOTE 8,'DER003E Invalid output argument.'\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@ENTRY": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01*\\x00\\x11\\x01\\x06%?\\x01\\x07)\\x1f\\x02G\\x01(\\x00\\xc1\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.42", "flags": 0, "createdate": "2006-09-10T00:00:00", "modifydate": "2007-10-18T02:47:11", "lines": 296, "newlines": 193, "modlines": 0, "user": "DERU"}, "text": ".*\n.*\n.*                    +----------+\n.*    Macro Name   -  | @ENTRY   |\n.*                    +----------+\n.*\n.*\n.*    Function -\n.*\n.*\n.*    Syntax -\n.*\n.*\n.*    Operation -\n.*\n.*\n.*    Author -\n.*         Name     :  Deru Sudibyo\n.*                     S/W Architect\n.*         Copyright:  (C)1998 Deru Sudibyo\n.*\n.*\n.*    Modification Log -\n.*    +--------+------------+--------+---------------------------+\n.*    | Date   | Engineer   | V.R.L. | Description               |\n.*    +--------+------------+--------+---------------------------+\n.*    |98/02/23| Deru S.    | 1.0.0. | First development         |\n.*    |06/10/18| Deru S.    | 1.0.1  | Added CBTDOM macro to     |\n.*    |        |            |        | build DOMid stack         |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    +--------+------------+--------+---------------------------+\n.*\n         MACRO\n&NAME    @ENTRY &EP=,                                                  ++\n               &ESA=,                                                  ++\n               &ARMODE=NO,                                             ++\n               &ARCTRL=NO,                                             ++\n               &DOMSAVE=YES,                                           ++\n               &DOMEXCH=NO,                                            ++\n               &EXECUTE=YES,                                           ++\n               &SVA=,                                                  ++\n               &SVASIZE=,                                              ++\n               &SVALOC=,                                               ++\n               &KEY=ASIS,                                              ++\n               &SVAINIT=YES,                                           ++\n               &RUNTYPE=MAINTASK,                                      ++\n               &CSECT=NO,                                              ++\n               &BREG=R12\n         COPY  CBTGBLVR\n         gblb  &DIB390,&DIBESA\n         LCLA  &NBR,&I\n         lclb  &csectf,&dom\n         LCLC  &BR1,&BR2,&BR3,&ENTRY,&BRLINK,&BRLINKS,&IX,&OS,&CID,&lbl\n.*\n         aif   (t'&SVA eq 'O').ckesame\n&DERSVA  setb  0\n         aif   ('&SVA' ne 'YES').ckesame\n&DERSVA  setb  1\n.ckesame aif   (t'&ESA ne 'O').ckesa\n&DIB390  setb  (&DER390)\n&DIBESA  setb  (&DERESA)\n         ago   .okesa\n.ckesa   AIF   ('&ESA' NE '390').dib370\n&DIB390  SETB  1\n&DIBESA  SETB  1\n         ago   .okesa\n.dib370  AIF   ('&ESA' NE '370').s370\n&DIB390  SETB  0\n&DIBESA  SETB  1\n         ago   .okesa\n.s370    anop\n&DIB390  SETB  0\n&DIBESA  SETB  0\n.okesa   anop\n.*\n&DERACCR setb  0\n&DERACTL setb  0\n&DERSUBT setb  0\n         aif   ('&ARMODE' ne 'YES').go\n&DERACCR setb  1\n.go      aif   ('&ARCTRL' ne 'YES').go1\n&DERACTL setb  1\n.go1     aif   ('&RUNTYPE' ne 'SUBTASK').go2\n&DERSUBT setb  1\n.go2     aif   ('&DOMEXCH' ne 'YES').go3\n         aif   (NOT &DERSVA).go3\n&DERXDOM setb  1\n.go3     anop\n&BRLINK  setc  'BASR'\n&IX      setc  '&SYSNDX'\n&lbl     setc  'DER&IX'\n         aif   (t'&SVASIZE eq 'O').go5\n         aif   (&DERXDOM).go4\n&DERSVSZ setc  '&SVASIZE'\n         ago   .go5\n.go4     anop\n&DERSVSZ setc  '&SVASIZE+512'\n.go5     aif   (t'&SVALOC eq 'O').go6\n&DERSVLC setc  '&SVALOC'\n.go6     aif   ('&SVAINIT' ne 'YES').go7\n         aif   (NOT &DERSVA).go7\n&DERSVINIT setb 1\n.go7     anop\n&NBR     seta  N'&BREG\n&BR1     setc  '&BREG(1)'\n         aif   (NOT &DERRENT).BEGIN\n         aif   (NOT &DERSVA).begin\n&DERSVSZ setc 'SVASIZE+512'\n         aif   (&DERXDOM).BEGIN\n&DERSVSZ setc 'SVASIZE'\n.BEGIN   aif   (T'&NAME NE 'O').A\n         MNOTE 8,'DER041E Label missing. Unable to define module name.'\n         MEXIT\n.A       aif   (K'&NAME LE 8).B\n         MNOTE 8,'DER042E Module name exceeded (max 8 bytes).'\n         MEXIT\n.B       aif   (&NBR LE 3).C\n         MNOTE 8,'DER043E Number of base registers exceeded (max 3).'\n         MEXIT\n.C       aif   (&DEREQU).D\n         MNOTE 8,'DER044E This macro must not be used as module prolog'\n         MEXIT\n.D       anop\n&DERMEP  setc  '&NAME'\n         aif   (K'&NAME LE 6).D1\n&DERMID  setc  '&NAME'(1,6)\n&DERCID  setc  '&NAME'(1,5)\n&cid     setc  '&NAME'(7,1)\n&DERCID  setc  '&DERCID&CID'\n&cid     setc  '&NAME'(4,5)\n         ago   .D2\n.D1      anop\n&DERMID  setc  '&NAME'\n&DERCID  setc  '&NAME'\n&cid     setc  '&NAME'(4,3)\n.D2      anop\n&ENTRY   setc  '&NAME'\n         aif   (T'&EP EQ 'O').d2ep\n&ENTRY   setc  '&EP'\n.d2ep    aif   (not &DERprolg).D3\n         entry &ENTRY\n.D3      aif   ('&CSECT' eq 'YES').csect\n&NAME    ds    0d\n         ago   .okname\n.csect   aif   (&DERRSECT).rsect\n&NAME    CSECT\n         ago   .oksect\n.rsect   anop\n&NAME    RSECT\n.oksect  anop\n&csectf  setb   1\n.okname  aif   ('&entry' eq '&name').start\n&ENTRY   EQU   *\n.start   aif   (&DERSVA).normal\n         aif   (&NBR EQ 1).goin\n         mnote 8,'DER001E SVA=NO specified with multi base registers.'\n         mexit\n.goin    using &name,&breg\n         B     DER&IX\n         dc    a(*-*)\n         ago   .enter\n.normal  aif   (not &DIB390).ESA370\n         BAKR  R14,0          Stack states\n.E       USING &NAME,R15\n         B     DER&IX\n.enter   anop\n&name._id_offset equ *-&name\n         DC    Cl8'&NAME',c'&SYSDATE &SYSTIME'\n         aif   (&DERprolg).e00\n         DC    C'(C)2006 Ir. DERU SUDIBYO -'\n&DERprolg setb  1\n.e00     anop\nDER&IX   DS   0D\n         aif   (not &DERSVA).quit\n         DROP  R15\n         aif   (not (&deraccr and &deractl)).e1   .e0x\n.*       aif   (&deraccr and &deractl).e0a\n.*       aif   (not (&DIB390 and &DIBESA)).e0x\n.e0a     SAC   512                    SWITCH INTO AR MODE\n         SYSSTATE ASCENV=AR           ENSURE PROPER CODE GENERATION\n         ago   .e1\n.e0x     anop\n         aif   (T'&EP EQ 'O').E1\n         aif   (not (&DIB390 and &DIBESA)).e0y\n         lae   &BR1,0\n.e0y     anop\n         &BRLINK &BR1,0\n         ago   .E2\n.E1      aif   (&DIB390 or &DIBESA).e1x\n         LR    &BR1,R15       Copy base address\n         ago   .e2\n.e1x     lae   &BR1,0(R15,0)       Copy base address\n.E2      anop\n         aif   (&NBR EQ 1).E4\n&BR2     setc  '&BREG(2)'\n         aif   (&NBR EQ 2).E3\n&BR3     setc  '&BREG(3)'\n         USING &ENTRY,&BR1,&BR2,&BR3\n         LA    R15,4095\n         LA    &BR2,1(R15,&BR1)\n         LA    &BR3,1(R15,&BR2)\n         ago   .F\n.E3      USING &ENTRY,&BR1,&BR2\n         LA    R15,4095\n         LA    &BR2,1(R15,&BR1)\n         ago   .F\n.E4      USING &ENTRY,&BR1\n.F       ago   .SVA\n.ESA370  aif   (not &DIBESA).NONESA\n&BRLINK  setc  'BASR'\n&BRLINKS setc  'BAS'\n         ago   .SAVING\n.NONESA  anop\n&BRLINK  setc  'BALR'\n&BRLINK  setc  'BAL'\n.SAVING  STM   R14,R12,12(R13)\n         ago   .E\n.SVA     aif   (&DERRENT).STORAGE\n         aif   (&DIB390).FINAL\n         &BRLINKS R1,DER&IX.B\n         DS    0D\nDER&IX.A ds    XL&DERSVSZ\nDER&IX.B EQU   *\n         ago   .HSKEEP\n.STORAGE anop\n         xr    r2,r2                clear reg 2\n         aif   (not (('&key' eq 'ZERO') or ('&key' eq '0'))).getvs\n         IPK   0(0)                 SAVE CURRENT PSW KEY\n         SPKA  0(0)                 SET PSW KEY\n         o     r2,=x'80000000'      indicates key was save and set\n.getvs   aif   (&DIBESA).ESA\n         GETMAIN R,LV=&DERSVSZ,LOC=&DERSVLC\n         ago   .HSKEEP\n.ESA     STORAGE OBTAIN,COND=NO,LENGTH=&DERSVSZ,LOC=&DERSVLC\n.HSKEEP  anop\n&DERSTOR setb  1\n         aif   (&DIB390).hsk390\n         st    r2,0(,R1)            save key in reg 2\n         l     r2,20+4*2(r13)       restore reg 2\n         ST    R13,4(,R1)           Old in new\n         lm    R14,r15,20(R13)      keep reg 0-1 to reg 14-15\n         ST    R1,8(,R13)           New in old\n         aif   (&deraccr).ar370\n         LR    R13,R1               Chain\n         LR    R0,R14               restore content of reg 0\n         LR    R1,R15               restore content of reg 1\n         ago   .final\n.ar370   lae   r13,0(0,r1)          SVA address\n         mvc   4(4,r13),=c'F1SA'    put indicator\n         LR    R0,R14               restore content of reg 0\n         LR    R1,R15               restore content of reg 1\n         ago   .final\n.hsk390  aif   (&deraccr).hsk390ar\n         lr    r13,r1               R13 as SVA base address\n         ereg  r0,r1                restore reg 0-1 (parameter list)\n         ago   .final\n.hsk390ar anop\n         lae   r13,0(0,r1)          SVA address\n         mvc   4(4,r13),=c'F1SA'    put indicator\n         ereg  r0,r1                restore reg 0-1 (parameter list)\n.FINAL   anop\n         using CBTSVA,r13\n         mvc   &DERPSWSV,0(r13)     save PSW key in the correct place\n         xr    r15,r15              clear reg 15\n         iac   r15                  get ASC code\n         st    r15,&DERSACSV        save it in SVA\n         aif   (&deraccr).done\n         SAC   0                    swtich into PRIMARY mode\n         SYSSTATE ASCENV=P          ensure proper code generation\n*.done    aif   (not &DERSVA).dom\n.done    anop\n         aif   (not &DERSVINIT).dom\n         l     r15,=a(&DERSVLOC)    SVA initialization routine\n         basr  r14,r15              initialize SVA\n.dom     anop\n&CBTDOMSV setb  0\n         aif   ('&DOMSAVE' eq 'NO').domx\n*        aif   (NOT &DERSVA).domx\n&CBTDOMSV setb  1\n         stm   r14,r1,&DERSVGR      save reg 0-1 and 14-15\n         CBTDOM BUILD,loc=SVA\n         lm    r14,r1,&DERSVGR      restore reg 0-1 and 14-15\n.domx    anop\n         xc    SVAdomid,SVAdomid    clear this word\n         aif   (not &DERXDOM).end\n         la    r15,SVAdomtb         DOMid table location\n.*       st    r15,SVAdomid         hold it in this word\n         xc    0(256,r15),0(r15)    clear 1st half\n         xc    256(256,r15),256(r15) clear 2nd half\n.end     anop\n         mvc   SVAmid,=cl5'&cid'    get module id\n.quit    anop\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@ESTAE": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x07)\\x0f\\x01\\x07)\\x0f\\x11U\\x00\\x15\\x00\\x15\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-10-17T00:00:00", "modifydate": "2007-10-17T11:55:04", "lines": 21, "newlines": 21, "modlines": 0, "user": "DERU"}, "text": "         macro\n&NAME    @ESTAE &EXIT,&TYPE,&PARAM=I,&XCTL=NO,&MF=I,&PURGE=,&ASYNCH=,  +\n               &TCB=,&ESTAR=,&TERM=,&RECORD=,&BRANCH=,&SVEAREA=,       +\n               &CANCEL=,&RELATED=,&KEY=,&TOKEN=,&TKNPASS=NO,           +\n               &SDWALOC31=YES\n         copy  CBTGBLVR\n         aif   (&derzos).zos\n&NAME    ESTAE &EXIT,&TYPE,PARAM=&PARAM,key=&KEY,                      +\n               xctl=&XCTL,mf=&MF,purge=&PURGE,asynch=&ASYNCH,          +\n               tcb=&TCB,estar=&ESTAR,term=&TERM,record=&RECORD,        +\n               branch=&BRANCH,svearea=&SVEAREA,cancel=&CANCEL,         +\n               related=&RELATED,token=&TOKEN,tknpass=&TKNPASS\n         mexit\n.zos     anop\n&NAME    ESTAE &EXIT,&TYPE,PARAM=&PARAM,key=&KEY,                      +\n               xctl=&XCTL,mf=&MF,purge=&PURGE,asynch=&ASYNCH,          +\n               tcb=&TCB,estar=&ESTAR,term=&TERM,record=&RECORD,        +\n               branch=&BRANCH,svearea=&SVEAREA,cancel=&CANCEL,         +\n               related=&RELATED,token=&TOKEN,tknpass=&TKNPASS,         +\n               sdwaloc31=&SDWALOC31\n         mend\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@EXIT": {"ttr": 544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00E\\x01\\x04\\x07/\\x01\\x07)\\x0f\\x02Y\\x00}\\x00X\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2004-03-12T00:00:00", "modifydate": "2007-10-17T02:59:45", "lines": 125, "newlines": 88, "modlines": 0, "user": "DERU"}, "text": ".*\n.*\n.*                    +----------+\n.*    Macro Name   -  | @EXIT    |\n.*                    +----------+\n.*\n.*\n.*    Function -\n.*\n.*\n.*    Syntax -\n.*\n.*\n.*    Operation -\n.*\n.*\n.*    Author -\n.*         Name     :  Deru Sudibyo\n.*                     Technical Consultant\n.*                     Computer Associates\n.*                     Indonesia Office\n.*                     Wisma BNI-46 34th floor, BNI-46 City\n.*                     Jl. Jend. Sudirman, Kav 1, Jakarta Pusat\n.*         Copyright:  (C)1998 Deru Sudibyo\n.*\n.*    Disclaimer -\n.*        This macro is developed as a personal support, and is\n.*        not a part of CA support matterials.  The purpose is as\n.*        a temporary solution or even just a sample.  Therefor,\n.*        further modifications and maintenance are client's\n.*        responsibilities.\n.*\n.*    Modification Log -\n.*    +--------+------------+--------+---------------------------+\n.*    | Date   | Engineer   | V.R.L. | Description               |\n.*    +--------+------------+--------+---------------------------+\n.*    |98/02/23| Deru S.    | 1.0.0. | First development         |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    +--------+------------+--------+---------------------------+\n.*\n         MACRO\n&NAME    @EXIT &KEEPRC=YES,&SVAINLOC=NO,&SVAINBASE=\n         COPY  CBTGBLVR\n         gblb  &DIB390,&DIBESA\n         LCLB  &KRC\n&NAME    DS    0H\n         aif   (not &CBTDOMSV).ckkrc\n         stm   r14,r1,&DERSVGR     save reg 0-1 and 14-15\n         CBTDOM PURGE,loc=SVA\n         lm    r14,r1,&DERSVGR     restore reg 0-1 and 14-15\n&CBTDOMSV setb 0\n.ckkrc   AIF   ('&KEEPRC' NE 'YES').SKIP\n&KRC     SETB  1\n.*       ST    R15,&DERWORD        Save RC\n.SKIP    ANOP\n         AIF   (NOT &DIB390).ESA\n         AIF   (NOT &DERSTOR).S390X\n         icm   r2,b'1111',&DERSACSV get saved ASC code\n         sac   0(r2)               restore ASC code\n         l     r2,&DERPSWSV        get saved PSW key\n         LR    R1,R13\n         AIF   (not &KRC).S390rel\n         AIF   (not &DERSVA).S390rel\n         lr    r3,r15              keep RC here\n.S390rel anop\n         STORAGE RELEASE,ADDR=(R1),LENGTH=&DERSVSZ\n         ltr   r2,r2               was key set?\n         bz    *+8                 no, skip below\n         spka  0(r2)               yes, restore it\n.S390X   AIF   (&KRC).S390RC\n         LA    R15,0               Set RC=0\n         PR                        Unstack states and return to MVS\n         ago   .epilog\n.S390RC  AIF   (&DERSVA).S390rc1\n         L     R15,&DERWORD        restore RC\n         PR                        Unstack states and return to MVS\n         ago   .epilog\n.S390rc1 anop\n         Lr    R15,r3              restore RC\n         PR                        Unstack states and return to MVS\n         ago   .epilog\n.ESA     AIF   (NOT &DIBESA).S370\n         icm   r2,b'1111',&DERSACSV get saved ASC code\n         sac   0(r2)               restore ASC code\n         l     r2,&DERPSWSV        get saved PSW key\n         LR    R1,R13\n         L     R13,4(R13)          OLD SA PTR\n         AIF   (NOT &DERSTOR).ESAX\n         AIF   (not &KRC).ESArel\n         AIF   (not &DERSVA).ESArel\n         lr    r3,r15              keep RC here\n.ESArel  STORAGE RELEASE,ADDR=(R1),LENGTH=&DERSVSZ\n         ltr   r2,r2               was key set?\n         bz    *+8                 no, skip below\n         spka  0(r2)               yes, restore it\n.ESAX    AIF   (&KRC).ESArc\n         xr    R15,R15             set RC = 0\n         ago   .ESAZ\n.ESArc   Lr    R15,r3              restore RC\n.ESAZ    LM    R0,R12,20(R13)      Restore REGs\n         L     R14,12(R13)\n         BSM   0,R14\n         ago   .epilog\n.S370    ANOP\n         LR    R2,R13\n         L     R13,4(R13)          OLD SA PTR\n         AIF   (NOT &DERSTOR).S370X\n         AIF   (not &KRC).S370rel\n         lr    r3,r15              keep RC here\n.S370rel FREEMAIN R,A=(R2),LV=&DERSVSZ\n.S370X   AIF   (&KRC).S370RC\n         RETURN (14,12),RC=0       BACK TO MVS\n         ago   .epilog\n.S370RC  ANOP\n         Lr    R15,r3\n         RETURN (14,12),RC=(15)   BACK TO MVS\n.epilog  aif   (t'&SVAINLOC ne 'YES').quit\n         CBTINSVA base=&SVAINBASE\n.quit    anop\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@INIT": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x04\\x01\\x063\\x8f\\x01\\x07)\\x0f\\x03A\\x00\\x85\\x00|\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2006-12-04T00:00:00", "modifydate": "2007-10-17T03:41:04", "lines": 133, "newlines": 124, "modlines": 0, "user": "DERU"}, "text": ".*\n.*\n.*                    +----------+\n.*    Macro Name   -  | @INIT    |\n.*                    +----------+\n.*\n.*\n.*    Function -\n.*\n.*\n.*    Syntax -\n.*\n.*\n.*    Operation -\n.*\n.*\n.*    Author -\n.*         Name     :  Deru Sudibyo\n.*                     S/W Architect\n.*         Copyright:  (C)1998 Deru Sudibyo\n.*\n.*\n.*    Modification Log -\n.*    +--------+------------+--------+---------------------------+\n.*    | Date   | Engineer   | V.R.L. | Description               |\n.*    +--------+------------+--------+---------------------------+\n.*    |98/02/23| Deru S.    | 1.0.0. | First development         |\n.*    |06/10/18| Deru S.    | 1.0.1  | Added DERDOM macro to     |\n.*    |        |            |        | build DOMid stack         |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    +--------+------------+--------+---------------------------+\n.*\n         MACRO\n&NAME    @INIT &EP=,                                                   ++\n               &ARMODE=NO,                                             ++\n               &ARCTRL=NO,                                             ++\n               &DOMSAVE=YES,                                           ++\n               &DOMEXCH=NO,                                            ++\n               &EXECUTE=YES,                                           ++\n               &SVASIZE=,                                              ++\n               &SVALOC=,                                               ++\n               &SVAINIT=YES,                                           ++\n               &RUNTYPE=MAINTASK,                                      ++\n               &CSECT=NO,                                              ++\n               &remark=YES,                                            ++\n               &KEY=ASIS,                                              +\n               &BREG=R12\n         COPY  CBTGBLVR\n         LCLA  &NBR,&I\n         lclb  &csectf,&dom\n         LCLC  &BR1,&BR2,&BR3,&ENTRY,&BRLINK,&BRLINKS,&IX,&OS,&CID,&lbl\n&DERACCR setb  0\n&DERACTL setb  0\n&DERSUBT setb  0\n         aif   ('&ARMODE' ne 'YES').go\n&DERACCR setb  1\n.go      aif   ('&ARCTRL' ne 'YES').go1\n&DERACTL setb  1\n.go1     aif   ('&RUNTYPE' ne 'SUBTASK').go2\n&DERSUBT setb  1\n.go2     aif   ('&DOMEXCH' ne 'YES').go3\n         aif   (NOT &DERSVA).go3\n&DERXDOM setb  1\n.go3     anop\n&BRLINK  setc  'BASR'\n&IX      setc  '&SYSNDX'\n&lbl     setc  'DER&IX'\n         aif   (t'&SVASIZE eq 'O').go5\n         aif   (&DERXDOM).go4\n&DERSVSZ setc  '&SVASIZE'\n         ago   .go5\n.go4     anop\n&DERSVSZ setc  '&SVASIZE+512'\n.go5     aif   (t'&SVALOC eq 'O').go6\n&DERSVLC setc  '&SVALOC'\n.go6     aif   ('&SVAINIT' ne 'YES').go7\n         aif   (NOT &DERSVA).go7\n&DERSVINIT setb 1\n.go7     anop\n&NBR     seta  N'&BREG\n&BR1     setc  '&BREG(1)'\n         aif   (NOT &DERRENT).BEGIN\n         aif   (NOT &DERSVA).begin\n&DERSVSZ setc 'SVASIZE+512'\n         aif   (&DERXDOM).BEGIN\n&DERSVSZ setc 'SVASIZE'\n.BEGIN   aif   (T'&NAME NE 'O').A\n         MNOTE 8,'DER041E Label missing. Unable to define module name.'\n         MEXIT\n.A       aif   (K'&NAME LE 8).B\n         MNOTE 8,'DER042E Module name exceeded (max 8 bytes).'\n         MEXIT\n.B       aif   (&NBR LE 3).C\n         MNOTE 8,'DER043E Number of base registers exceeded (max 3).'\n         MEXIT\n.C       aif   (&DEREQU).D\n         MNOTE 8,'DER044E This macro must not be used as module prolog'\n         MEXIT\n.D       anop\n&DERMEP  setc  '&NAME'\n         aif   (K'&NAME LE 6).D1\n&DERMID  setc  '&NAME'(1,6)\n&DERCID  setc  '&NAME'(1,5)\n&cid     setc  '&NAME'(7,1)\n&DERCID  setc  '&DERCID&CID'\n&cid     setc  '&NAME'(4,5)\n         ago   .D2\n.D1      anop\n&DERMID  setc  '&NAME'\n&DERCID  setc  '&NAME'\n&cid     setc  '&NAME'(4,3)\n.D2      anop\n&ENTRY   setc  '&NAME'\n         aif   (not &DERprolg).D3\n         entry &NAME\n.D3      aif   ('&CSECT' eq 'YES').csect\n&NAME    ds    0d\n         ago   .okname\n.csect   anop\n&NAME    CSECT\n&csectf  setb   1\n.okname  aif   ('&remark' eq 'NO').done\n          dc    d'0'\n          DC    Cl8'&NAME',c'&SYSDATE &SYSTIME'\n          aif   (&DERprolg).done\n          DC    C'(C)1998 Ir. DERU SUDIBYO -'\n          ds    0d\n&DERprolg setb  1\n.done     anop\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@PROLOG": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01)\\x00E\\x01\\x06)\\x1f\\x01\\x07)\\x0f\\x05'\\x00\\xde\\x00\\x8c\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@\"", "ispf": {"version": "01.41", "flags": 0, "createdate": "2006-10-18T00:00:00", "modifydate": "2007-10-17T05:27:45", "lines": 222, "newlines": 140, "modlines": 0, "user": "DERU"}, "text": ".*\n.*\n.*                    +----------+\n.*    Macro Name   -  | @PROLOG  |\n.*                    +----------+\n.*\n.*\n.*    Function -\n.*\n.*\n.*    Syntax -\n.*\n.*\n.*    Operation -\n.*\n.*\n.*    Author -\n.*         Name     :  Deru Sudibyo\n.*                     Technical Consultant\n.*                     Computer Associates\n.*                     Indonesia Office\n.*                     Wisma BNI-46 34th floor, BNI-46 City\n.*                     Jl. Jend. Sudirman, Kav 1, Jakarta Pusat\n.*         Copyright:  (C)1998 Deru Sudibyo\n.*\n.*    Disclaimer -\n.*        This macro is developed as a personal support, and is\n.*        not a part of CA support matterials.  The purpose is as\n.*        a temporary solution or even just a sample.  Therefor,\n.*        further modifications and maintenance are client's\n.*        responsibilities.\n.*\n.*    Modification Log -\n.*    +--------+------------+--------+---------------------------+\n.*    | Date   | Engineer   | V.R.L. | Description               |\n.*    +--------+------------+--------+---------------------------+\n.*    |98/02/23| Deru S.    | 1.0.0. | First development         |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    +--------+------------+--------+---------------------------+\n.*\n         MACRO\n&NAME    @PROLOG &ESA=370,         390, 370 or NO (means S/370)        ++\n               &AMODE=ANY,                                             ++\n               &RMODE=ANY,                                             ++\n               &RENT=YES,                                              ++\n               &RSECT=NO,                                              ++\n               &SPLEVEL=6,                                             ++\n               &ARMODE=NO,                                             ++\n               &ARCTRL=NO,                                             ++\n               &EXECUTE=YES,                                           ++\n               &DOMSAVE=YES,                                           ++\n               &DOMEXCH=NO,                                            ++\n               &EP=,                                                   ++\n               &KEY=ASIS,                                              ++\n               &REGEQU=YES,                                            ++\n               &SVA=YES,                                               ++\n               &SVALOC=ANY,                                            ++\n               &SVAINIT=YES,                                           ++\n               &RUNTYPE=MAINTASK,                                      ++\n               &JES2MAP=NO,                                            ++\n               &version=0,                                             ++\n               &entry=YES,                                             ++\n               &dsid=ZCBTDSPC,                                         ++\n               &dsshrid=SCHEDRPT,                                      ++\n               &divid=zCBT-DIV,                                        ++\n               &maxjob=10000,        max for 10,000 jobs               ++\n               &maxtrig=100000,      max for 100,000 triggers          ++\n               &maxstep=500000,      max for 500,000 jobsteps          ++\n               &shareid=DERU@CBT,                                      ++\n               &svrcomm=ZCBTCOMM,    GEN or a name e.g COMMAREA        ++\n               &agtcomm=ZCBTACOM,    GEN or a name e.g ZCOMAREA        ++\n               &BREG=R12\n         COPY  CBTGBLVR\n         LCLA  &NBR,&I,&SVASIZE,&j,&N\n         LCLC  &BR1,&BR2,&BR3,&BRLINK,&IX,&OS,&CID,&macname,&jescb\n&DERMFLOC setc 'DER&sysndx.MF'\n&DERSVLOC setc 'DER&sysndx.SVA'\n&DERSVMFI setc 'DER&sysndx.SVMFINIT'\n&DERDSID  setc '&dsid'\n&DERDSSID setc '&dsshrid'\n&DERDIVID setc '&divid'\n&DERSHRID setc '&shareid'\n&DERMAXJB setc '&maxjob'\n&DERMAXTR setc '&maxtrig'\n&DERMAXST setc '&maxstep'\n         aif   ('&svrcomm' eq 'GEN').gencomx\n&DERCOMMX setc '&svrcomm'\n         ago   .ckcomz\n.gencomx anop\n&DERCOMMX setc 'CX'.'&SYSDATC'(3,6)\n.ckcomz  aif   ('&agtcomm' eq 'GEN').gencomz\n&DERCOMMZ setc '&agtcomm'\n         ago   .okcomm\n.gencomz anop\n&DERCOMMZ setc 'CZ'.'&SYSDATC'(3,6)\n.okcomm  anop\n         print NOGEN\n&derzos  setb  1\n         mnote 0,'Generated on &SYSTEM_ID'\n         aif   ('&SYSTEM_ID'(1,4) eq 'z/OS').zos\n         aif   ('&SYSTEM_ID'(1,6) eq 'OS/390').os390\n&derosver setc '00.00.00'\n         ago   .prodver\n.zos     anop\n&derzos  setb  1\n&derosvrm setc '&SYSTEM_ID'(6,8)\n         ago   .prodver\n.os390   anop\n&derzos  setb  0\n&derosvrm setc '&SYSTEM_ID'(8,8)\n.prodver anop\n&derosver setc '&derosvrm'(1,2)\n&derosrel setc '&derosvrm'(4,2)\n&derosmod setc '&derosvrm'(7,2)\n&prodver seta  &version\n&DERSVLC setc  '&SVALOC'\n         aif   ('&JES2MAP' eq 'NO').start\n         mnote 0,'DERPRO001I Generating JES2 data areas of &jes2map'\n&DERJES2 setb  1\n&N       seta  n'&jes2map\n&j       seta  1\n&jescb   setc  '&jes2map(1)'\n.jesloop anop\n&j       seta  &j+1\n&jescb   setc  '&jescb,&jes2map(&j)'\n         aif   (&j lt &N).jesloop\n         mnote 0,'DERPRO002I Generated JES2 &N data areas: &jescb'\n.*       copy  $HASPGBL\n        $module &jes2map\n.start   anop\n&IX      SETC  '&SYSNDX'\n&DERDSN   SETC  'DER&IX._DSN'\n&DERDSNC  SETC  'DER&IX._DSN_COUNTER'\n&DERDATE  SETC  'DER&IX._DATE'\n&DERTIME  SETC  'DER&IX._TIME'\n&DERYDAT  SETC  'DER&IX._YDATE'\n&DERYTIM  SETC  'DER&IX._YTIME'\n&DERSVGR  SETC  'DER&IX._SVGR'\n&DERSVAR  SETC  'DER&IX._SVAR'\n&DERWTOL  SETC  'DER&IX._WTO'\n&DEROPNL  SETC  'DER&IX._OPEN'\n&DERCLSL  SETC  'DER&IX._CLOSE'\n&DERMSGL  SETC  'DER&IX._MSG'\n&DERTMEL  SETC  'DER&IX._TIMEL'\n&DEREDTL  SETC  'DER&IX._EDIT'\n&DERWORD  SETC  'DER&IX._WORD'\n&DERDBWD  SETC  'DER&IX._DWORD'\n&DERWORK  SETC  'DER&IX._WORK'\n&DERPSWSV SETC  'DER&IX._pswsave'\n&DERSACSV SETC  'DER&IX._sacsave'\n&DERWGRSV SETC  'DER&IX._wgrsave'\n&DERWARSV SETC  'DER&IX._warsave'\n&DERWTOBUF SETC  'DER&IX._wtobuf'\n         AIF   ('&regequ' eq 'NO').okrgequ\n#maxSCT  equ   &DERMAXJB\n#maxTRG  equ   &DERMAXTR\n#maxEOT  equ   &DERMAXST\n&I       SETA  0\n.LOOPEQU ANOP\nA&I      EQU   &I\nC&I      EQU   &I\n         aif   ((&DERJES2) or ('&regequ' eq 'JES2')).nextequ\nR&I      EQU   &I\n.nextEQU ANOP\n&I       SETA  &I+1\n         AIF   (&I LE 15).LOOPEQU\nF0       EQU   0\nF2       EQU   2\nF4       EQU   4\nF6       EQU   6\n.okrgequ anop\n#cc0     equ   8      cc = 0\n#cc1     equ   4      cc = 1\n#cc2     equ   2      cc = 2\n#cc3     equ   1      cc = 3\n#ccnot0  equ   7      cc not 0  (b'0111')\n#ccnot1  equ   11     cc not 1  (b'1011')\n#ccnot2  equ   13     cc not 2  (b'1101')\n#ccnot3  equ   14     cc not 3  (b'1110')\n&DEREQU  setb  1\n         AIF   (('&RENT' NE 'Y') AND ('&RENT' NE 'YES')).ckesa\n&DERRENT SETB  1\n         aif   ('&rsect' ne 'YES').okrent\n&DERRSECT SETB  1\n.okrent  anop\n&SVASIZE seta  90\n         aif   ('&SVA' ne 'YES').ckesa\n&DERSVA  setb  1\n&SVASIZE seta  0\n.ckesa    AIF   ('&ESA' NE '390').ESA370\n&DER390   SETB  1\n&DERESA   SETB  1\n.ESA370   AIF   ('&ESA' NE '370').splvl\n&DERESA   SETB  1\n.splvl   splevel set=&SPLEVEL\n&macname setc  '@ENTRY'\n         aif   ('&entry' eq 'YES').entry\n&macname setc  '@INIT'\n.entry   anop\n         print GEN\n&NAME    AMODE &AMODE\n&NAME    RMODE &RMODE\n&NAME    &macname EP=&EP,                                              +\n               ARMODE=&ARMODE,                                         +\n               ARCTRL=&ARCTRL,                                         +\n               EXECUTE=&EXECUTE,                                       +\n               SVASIZE=&SVASIZE,                                       +\n               SVALOC=&SVALOC,                                         +\n               SVAINIT=&SVAINIT,                                       +\n               RUNTYPE=&RUNTYPE,                                       +\n               DOMSAVE=&DOMSAVE,                                       +\n               DOMEXCH=&DOMEXCH,                                       +\n               KEY=&KEY,                                               +\n               CSECT=YES,                                              +\n               BREG=&BREG\n.done     anop\n          MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@RXFDIR": {"ttr": 2056, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x004\\x01\\x04\\x04\\x0f\\x01\\x04\\x06_\\x04\\x02\\x00T\\x00\\x19\\x00T\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2004-02-09T00:00:00", "modifydate": "2004-03-05T04:02:34", "lines": 84, "newlines": 25, "modlines": 84, "user": "DERU"}, "text": ".*================================================================*\n.*                                                                *\n.*   Module name -                                                *\n.*                 @RXFDIR                                        *\n.*                 Creates rexx package directory entry           *\n.*                                                                *\n.*   Description -                                                *\n.*                 Creates rexx function package directory        *\n.*                 entry on IRXFLOC or IRXFUSER component         *\n.*                                                                *\n.*   Type -                                                       *\n.*                 Assembly macro instruction                     *\n.*                                                                *\n.*   Syntax -                                                     *\n.*                 (1)  Header                                    *\n.*                                                                *\n.*                   @RXFDIR                                      *\n.*                    ,start                                      *\n.*                    ,rows=nn                 number of entry    *\n.*                                                                *\n.*                                                                *\n.*                 (2)  Entry                                     *\n.*                                                                *\n.*                   @RXFDIR                                      *\n.*                    ,function                                   *\n.*                    ,name=<function name>                       *\n.*                    ,ep=<EP name>                               *\n.*                    ,dd=<DD name from which EP is loaded>       *\n.*                    ,addrtype=<A|V>                             *\n.*                                                                *\n.*                 (3)  Trailer                                   *\n.*                                                                *\n.*                   @RXFDIR                                      *\n.*                    ,<finish|end>  whether END mark is written  *\n.*                                                                *\n.*   Author -                                                     *\n.*                 Deru Sudibyo                                   *\n.*                 Freelance consultant                           *\n.*                 Nusantara IT ProClub                           *\n.*                 Indonesia                                      *\n.*                                                                *\n.*                                                                *\n.*   Modification log -                                           *\n.*                                                                *\n.*  +----------+-------+---------+----------------------------+   *\n.*  |Date      | VRM   | Eng/Supp| Description                |   *\n.*  +----------+-------+---------+----------------------------+   *\n.*  |2004/03/05| 1.1.0 | Deru S. | First developed            |   *\n.*  |          |       |         |                            |   *\n.*  +----------+-------+---------+----------------------------+   *\n.*                                                                *\n.*                                                                *\n.*================================================================*\n         macro\n&label   @rxfdir &cmd,&name=,&addrtype=A,&ep=,&dd=,&rows=\n         gbla &count\n         gblb &started\n         aif (t'&cmd eq 'O').nocmd\n         aif (('&cmd' eq 'start') or ('&cmd' eq 'begin')).start\n         aif ('&cmd' eq 'end').end\n         aif ('&cmd' eq 'finish').finish\n         aif (('&cmd' eq 'function') or ('&cmd' eq 'func')).func\n         MNOTE 8,'DRX0003 Illegal command ''&cmd'''\n         mexit\n.func    anop\n         DRXFUNC name=&name,addrtype=&addrtype,                        +\n               ep=&ep,dd=&dd\n         mexit\n.nocmd   aif  (&started).end\n.start   anop\n         aif   (t'row ne 'O').start1\n         MNOTE 8,'DRX0004 Invalid number directory rows'\n         mexit\n.start1  anop\n&started setb  1\n         DC    CL8'IRXFPACK'       String identifying directory\n         DC    FL4'24'             Length of header\n         DC    FL4'&rows'          Number of rows in directory\n         DC    FL4'0'              Word of zeros\n         DC    FL4'32'             Length of directory entry\n.finish  mexit\n.end     anop\n         end\n         mend\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@SSIPARM": {"ttr": 1540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00Q\\x01\\x06&\\x7f\\x01\\x07)?\\x13H\\x00F\\x00T\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "2006-09-24T00:00:00", "modifydate": "2007-10-20T13:48:51", "lines": 70, "newlines": 84, "modlines": 0, "user": "DERU"}, "text": "*\n*\n*                     +----------+\n*     Module Name  -  | @SSIPARM |\n*                     +----------+\n*\n*\n*     Function -\n*               SSI parameter list form collections\n*\n*     Syntax -\n*\n*\n*     Operation -\n*\n*\n*     Author -\n*          Name     :  Deru Sudibyo\n*                      Software Architect\n*          Copyright:  (C)2006 Deru Sudibyo\n*\n*\n*     Modification Log -\n*     +--------+------------+--------+---------------------------+\n*     | Date   | Engineer   | V.R.L. | Description               |\n*     +--------+------------+--------+---------------------------+\n*     |06/09/24| Deru S.    | 1.0.0. | First development         |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     +--------+------------+--------+---------------------------+\n*\n         MACRO\n&LABEL   @SSIPARM &TYPE=DATA,&prefix=SSI\n         COPY  CBTGBLVR\n         lclc  &pfx\n         AIF   ('&TYPE' eq 'DATA').data\n         AIF   (t'&label eq 'O').data\n&label   &TYPE\n         ago   .sect\n.data    anop\n&label   ds    0f\n.sect    AIF   ('&TYPE' NE 'CSECT').BEGIN\n&label   AMODE &AMODE\n&label   RMODE &RMODE\n.BEGIN   ANOP\n&pfx     setc  '&prefix'\n*\n&pfx._lform ds 0f\n*\n&pfx._LPAmod   ds 0f\n&pfx._lpaINI   dc a(*-*),cl8'CBTEMSSS' EMSSS - SSI initiallizer\n&pfx._lpaMSG   dc a(*-*),cl8'CBTEMSMS' EMSMS - MSG listener\n&pfx._lpaCMD   dc a(*-*),cl8'CBTEMSCM' EMSCM - CMD listener\n&pfx._lpaRMG   dc a(*-*),cl8'CBTEMSRM' EMSRM - EOJ/EOS listener\n&pfx._lpaESR   dc a(*-*),cl8'IGX00212' EMSES - IGX00212 (ESR SVC)\n*\n&pfx._LPAmodlst equ *\n&pfx._lpaCBT   dc a(*-*),cl8'CBTEMS'   EMS   - base module\n&pfx._LPAmodwdt equ *-&pfx._LPAmodlst\n&pfx._LPAmodlen equ *-&pfx._LPAmod\n&pfx._LPAmodnum equ &pfx._LPAmodlen/&pfx._LPAmodwdt\n&pfx._LPAmodctr dc  a(&pfx._LPAmodnum)\n*\n&pfx._lformlen equ *-&pfx._lform\n*\n         mend\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@VGLOBAL": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00U\\x01\\x07)\\x0f\\x01\\x07)\\x0f\\tE\\x00s\\x00s\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-10-17T00:00:00", "modifydate": "2007-10-17T09:45:55", "lines": 115, "newlines": 115, "modlines": 0, "user": "DERU"}, "text": ".*\n.*\n.*                    +----------+\n.*    MACRO NAME   -  | @VGLOBAL |\n.*                    +----------+\n.*\n.*    Function -\n.*\n.*\n.*    Syntax -\n.*\n.*\n.*    Operation -\n.*\n.*\n.*    Author -\n.*         Name     :  Deru Sudibyo\n.*                     Technical Consultant\n.*                     Computer Associates\n.*                     Indonesia Office\n.*                     Wisma BNI-46 34th floor, BNI-46 City\n.*                     Jl. Jend. Sudirman, Kav 1, Jakarta Pusat\n.*         Copyright:  (C)1998 Deru Sudibyo\n.*\n.*    Disclaimer -\n.*        This macro is developed as a personal support, and is\n.*        not a part of CA support matterials.  The purpose is as\n.*        a temporary solution or even just a sample.  Therefor,\n.*        further modifications and maintenance are client's\n.*        responsibilities.\n.*\n.*    Modification Log -\n.*    +--------+------------+--------+---------------------------+\n.*    | Date   | Engineer   | V.R.L. | Description               |\n.*    +--------+------------+--------+---------------------------+\n.*    |98/02/12| Deru S.    | 1.0.0. | First development         |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    +--------+------------+--------+---------------------------+\n.*\n         MACRO\n&NAME    @VGLOBAL &place=SVA\n         COPY  CBTGBLVR\n         lclb  &uselbl\n         lclc  &gv(21),&lbl,&lblsz\n         aif   ('&place' eq 'SVA').sva\n         aif   (&DERSVA).build\n         ago   .name\n.sva     aif   (&DERSVA).name\n         ago   .build\n.name    anop\n&gv(1)   setc  '&DERSVGR'\n&gv(2)   setc  '&DERSVAR'\n&gv(3)   setc  '&DERWGRSV'\n&gv(4)   setc  '&DERWARSV'\n&gv(5)   setc  '&DERDBWD'\n&gv(6)   setc  '&DERWORD'\n&gv(7)   setc  '&DERPSWSV'\n&gv(8)   setc  '&DERSACSV'\n&gv(9)   setc  '&DERTMEL'\n&gv(10)  setc  '&DERWTOL'\n&gv(11)  setc  '&DEROPNL'\n&gv(12)  setc  '&DERCLSL'\n*\n&gv(13)  setc  '&DERMSGL'\n&gv(14)  setc  '&DEREDTL'\n*\n&gv(15)  setc  '&DERDSN '\n&gv(16)  setc  '&DERDSNC'\n&gv(17)  setc  '&DERDATE'\n&gv(18)  setc  '&DERTIME'\n&gv(19)  setc  '&DERYDAT'\n&gv(20)  setc  '&DERYTIM'\n&gv(21)  setc  '&DERWORK'\n&gv(22)  setc  '&DERWTOBUF'\n         ago   .struc\n.build   anop\n&lblsz   setc  '&place.GLBSZ'\n&uselbl  setb  1\n.struc   anop\n&lbl     setc  '&place.GLBV'\n&lbl     DS    0D\n&gv(1)   DC    xL64'00'\n&gv(2)   DC    xL64'00'\n&gv(3)   DC    xL64'00'\n&gv(4)   DC    xL64'00'\n&gv(5)   DC    D'0'\n&gv(6)   DC    F'0'\n&gv(7)   DC    xL8'00'\n&gv(8)   DC    xL4'00'\n&gv(9)   TIME  LINKAGE=SYSTEM,MF=L\n&gv(10)  WTO   TEXT=&DERWORK,MF=L\n&gv(11)  OPEN  (,),MF=L\n&gv(12)  CLOSE (,),MF=L\n         DS    0D\n&gv(13)  DC    XL160'00'\n&gv(14)  DC    XL80'00'\n*\n&gv(15)  DC    CL44' '\n&gv(16)  DC    F'0'\n&gv(17)  DC    CL8'YY/MM/DD'\n&gv(18)  DC    CL8'HH:MM:SS'\n&gv(19)  DC    CL8' YYYYDDD'\n&gv(20)  DC    CL8' HHMMSS'\n&gv(21)  DC    CL80' '\n         ds    0f\n&gv(22)  DC    xL128'00'\n         aif   (not &uselbl).end\n&lblsz   equ   *-&lbl\n.end     anop\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CBTCOM": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x07\\x01\\x07\\x14\\x9f\\x01\\x07)\\x1f\\x13W\\x00\\x8e\\x01~\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "2007-05-29T00:00:00", "modifydate": "2007-10-18T13:57:07", "lines": 142, "newlines": 382, "modlines": 0, "user": "DERU"}, "text": "*\n*\n*                     +----------+\n*     Module Name  -  | CBTCOM   |\n*                     +----------+\n*\n*\n*     Function -\n*               Map of communication area used by\n*               all zCBT components\n*\n*     Operating Environment -\n*\n*\n*     Syntax -\n*\n*\n*     Operation -\n*\n*\n*     Author -\n*          Name     :  Deru Sudibyo\n*                      Freelance Consultant\n*          Copyright:  (C)2006 Deru Sudibyo\n*\n*\n*     Modification Log -\n*     +--------+------------+--------+---------------------------+\n*     | Date   | Engineer   | V.R.L. | Description               |\n*     +--------+------------+--------+---------------------------+\n*     |06/03/13| Deru S.    | 1.0.0. | First development         |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     +--------+------------+--------+---------------------------+\n*\n         MACRO\n&LABEL   CBTCOM &TYPE=DSECT,&AMODE=31,&RMODE=ANY,&PRINT=NOGEN,         +\n               &map=NO,&tcb=NO,&ascb=NO\n         COPY  CBTGBLVR\n         print &print\nCBTCOM   &TYPE\n         AIF   ('&TYPE' NE 'CSECT').BEGIN\nCBTCOM   AMODE &AMODE\nCBTCOM   RMODE &RMODE\n.BEGIN   ANOP\nCOM      EQU   *\nCOMname      dc  CL8'CBTCOM'     Eyecatcher\nCOMvdate     dc  f'&sysdatc'     version date\nCOMver       dc  h'0'            version\nCOMvsize     dc  h'0'            size of this version\nCOMssitoken  dc  f'0'            SSI token produced when create SSCVT\nCOMssiname   dc  f'0'            Name produced by NIP SSN or SETSSI\nCOMsysname   dc  cl8'CBTMVS'     system name\nCOMdomid     dc  f'0'            MSG id for DOM\n         space ,\nCOMstatus    dc  x'00'           Status indicators\nCOMst_init   equ x'80'           - COM area was init'd\nCOMst_scsr   equ x'40'           - SCSR was initialized\nCOMst_LPA    equ x'20'           - LPA modules were loaded\nCOMst_SSI    equ x'10'           - SSI was initialized\nCOMst_up     equ x'08'           - Subsystem is up/active\nCOMst_RMG    equ x'04'           - RMG is ready/active\nCOMst_error  equ x'02'           - SSI is in error state\nCOMst_trace  equ x'01'           - SSI is being traced\nCOMst_SSIup  equ COMst_SSI+COMst_up\n             space ,\nCOMxstatus   dc  x'00'           extended status indicators\nCOMxst_as    equ x'80'           - initialized by address space\nCOMxst_svc   equ x'40'           - ESR SVC was installed\n             ds  xl2             reserved\n             space ,\n* +-----------------------------------+\n* | SSI LPA modules directory         |\n* +-----------------------------------+\n             space ,\nSSI_plist    ds  0f\n             @SSIPARM prefix=SSI\nSSI_plistlen equ *-SSI_plist\n*\n             space ,\n* +-----------------------------------+\n* | CBT's common area                 |\n* +-----------------------------------+\n             space ,\nCOMcbt_ascb  dc  a(*-*)          CBT's ASCB address\nCOMcbt_ecb   dc  a(*-*)          CBT's ECB\nCOMcbt_jesct dc  a(*-*)          MVS's JESCT PIT address\nCOMcbt_ODA   dc  xl24'00'        ODA of ASCRE service\nCOMcbt_asid  dc  h'0'            CBT asid\n             dc  h'0'            reserved\n             space ,\n* +-----------------------------------+\n* | RMG's common area                 |\n* +-----------------------------------+\n             space ,\nCOMrmg_teoj  dc  a(*-*)          RMG's EOJ token\nCOMrmg_teot  dc  a(*-*)          RMG's EOT token\n             space ,\n* +-----------------------------------+\n* | JES2 subsystem data area pointers |\n* +-----------------------------------+\n             space ,\nCOMjes_area  ds  0a              JES's SSI data area\nCOMjes_name  dc  cl4' '          primary subsystem name\nCOMjes_ascb  dc  a(*-*)          JES's ASCB address\nCOMjes_ssct  dc  a(*-*)          JES's SSCVT address\nCOMjes_ssvt  dc  a(*-*)          JES's SSVT address\nCOMjes_hcct  dc  a(*-*)          JES's HCCT address\nCOMjes_ssob  dc  a(*-*,*-*)      SSOB address & length for JES\nCOMjes_ssib  dc  a(*-*,*-*)      SSIB address & length for JES\nCOMjes_ssrr  dc  a(*-*,*-*)      SSRR address & length for JES\nCOMjes_parm  dc  a(*-*)          parm address for JES calling\nCOMjes_areasz equ *-COMjes_area  length of JES SSI data area\n             space ,\n* +------------------------------------+\n* | User's Rexx/rule defined EVB chain |\n* +------------------------------------+\n             space ,\nCOMrex_area  ds  0f\nCOMrex_msg   ds  a(*-*)          User's MSG trapping EVB\nCOMrex_cmd   ds  a(*-*)          User's CMD trapping EVB\nCOMrex_eos   ds  a(*-*)          User's EOS trapping EVB\nCOMrex_eoj   ds  a(*-*)          User's EOJ trapping EVB\nCOMrex_areasz equ *-COMrex_area\n             space ,\n* +-----------------------------------+\n* | Reserverd area                    |\n* +-----------------------------------+\n             space ,\n             ds  7a(*-*)         reserved for future\n             ds  0d\nCOMsize  EQU   *-COM\n         EJECT ,\n         AIF   ('&TYPE' eq 'DSECT').exit\n         AIF   ('&TYPE' NE 'CSECT').exit\n         END   CBTCOM\n.EXIT    ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CBTDOM": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00Y\\x01\\x07)\\x0f\\x01\\x07)\\x0f\\x10\\x01\\x00|\\x00|\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2007-10-17T00:00:00", "modifydate": "2007-10-17T10:01:59", "lines": 124, "newlines": 124, "modlines": 0, "user": "DERU"}, "text": ".*\n.*\n.*                    +----------+\n.*    Macro Name   -  | CBTDOM   |\n.*                    +----------+\n.*\n.*\n.*    Function -\n.*                  Build and/or clear DOMid stack\n.*\n.*    Syntax -\n.*\n.*\n.*    Operation -\n.*\n.*\n.*    Author -\n.*         Name     :  Deru Sudibyo\n.*                     S/W Architect\n.*         Copyright:  (C)1998 Deru Sudibyo\n.*\n.*\n.*    Modification Log -\n.*    +--------+------------+--------+---------------------------+\n.*    | Date   | Engineer   | V.R.L. | Description               |\n.*    +--------+------------+--------+---------------------------+\n.*    |98/03/12| Deru S.    | 1.0.0. | First development         |\n.*    |06/10/18| Deru S.    | 1.0.1  | Added checking and saving |\n.*    |        |            |        | DOM id                    |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    +--------+------------+--------+---------------------------+\n.*\n         MACRO\n&NAME    CBTDOM &func,&loc=SVA,&workregs=(r0,r1)\n         COPY  CBTGBLVR\n         LCLC  &LMSG,&LBL,&dsc,&pfx,&rx,ry\n&pfx     setc  'SVA'\n         aif   ('&LOC' ne 'WSA').pfxdone\n&pfx     setc  'WS'\n.pfxdone anop\n&LBL     SETC  'DER&SYSNDX'\n         aif   (n'&workregs ne 2).errwreg\n&rx      setc  '&workregs(1)'\n&ry      setc  '&workregs(2)'\n         aif   (t'&func eq 'O').errfunc\n         aif   ('&func' eq 'CLEAR').clear\n         aif   ('&func' eq 'BUILD').build\n         aif   ('&func' eq 'PURGE').purge\n.errfunc mnote 8,'DER001E Wrong function.  Specify BUILD or CLEAR or PU+\n               RGE.'\n         mexit\n.errwreg mnote 8,'DER002E WORKREGS must contain 2 registers.'\n         mexit\n         space ,\n* +---------------------------------------------+\n* | Build DOMid stack                           |\n* +---------------------------------------------+\n         space ,\n.build   anop\n&NAME    ds    0h\n         la    &Rx,1                 init R2\n         sll   &Rx,12                with num of 4096\n         STORAGE OBTAIN,COND=NO,LENGTH=(&Rx),LOC=ANY\n         st    r1,&pfx.DOMlist       save the start address\n         st    &rx,0(r1)             save length\n         st    r1,&pfx.DOMcurr       make it as current DOMid ptr\n         alr   r1,&Rx                past end ptr\n         sh    r1,=h'4'              bwd 4 byte\n         st    r1,&pfx.DOMlist+4     save as the last DOM id list ptr\n         l     r0,&pfx.DOMlist       start address\n         l     r1,&pfx.DOMlist       start address\n         l     r1,0(r1)              length\n&lbl.a   equ   *\n         xr    r14,r14               clear reg 14\n         xr    r15,r15               clear reg 15\n         mvcl  r0,r14                clear all buffer\n         ltr   r1,r1                 were all done?\n         bnz   &lbl.a                no, iterate\n         mexit\n         space ,\n* +---------------------------------------------+\n* | Clear DOMid stack                           |\n* +---------------------------------------------+\n         space ,\n.clear   aif   ('&loc' eq 'COM').clrcom\n&NAME    ds    0h\n         l     &Ry,&pfx.DOMcurr      current DOM id list ptr\n         cl    &Ry,&pfx.DOMlist      any stored DOM id?\n         bnh   &lbl.a                no, skip DOM\n         sh    &Ry,=h'4'             bwd 4 bytes\n         oi    0(&Ry),x'80'          mark as the last stored DOM id\n         l     &Ry,&pfx.DOMlist      start of DOM id list ptr\n         DOM   msglist=(&Ry)         delete messages\n         mvc   &pfx.DOMcurr,&pfx.DOMlist reset stack\n&lbl.a   equ   *\n         mexit\n.clrcom  anop\n         l     r0,COMdomid           get msg id\n         ltr   r0,r0                 exist?\n         bz    &lbl.a                ignore if none\n         DOM   msg=COMdomid          delete if exist\n         xc    COMdomid,COMdomid     clear location\n&lbl.a   equ   *\n         mexit\n         space ,\n* +---------------------------------------------+\n* | Purge DOMid stack                           |\n* +---------------------------------------------+\n         space ,\n.purge   anop\n&NAME    ds    0h\n         la    &Rx,1               init R2\n         sll   &Rx,12              with num of 4096\n         l     &Ry,&pfx.DOMlist    get the start address\n         ltr   &Ry,&Ry             check it\n         bz    &lbl.b              skip if none\n         STORAGE RELEASE,LENGTH=(&Rx),ADDR=(&Ry)\n&lbl.b   equ   *\n         xc    &pfx.DOMlist,&pfx.DOMlist zap start address\n         xc    &pfx.DOMcurr,&pfx.DOMcurr zap current DOMid ptr\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CBTEOT": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00$\\x01\\x07)\\x0f\\x01\\x07)?\\x13I\\x00\\x96\\x00\\x96\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2007-10-17T00:00:00", "modifydate": "2007-10-20T13:49:24", "lines": 150, "newlines": 150, "modlines": 0, "user": "DERU"}, "text": "*\n*\n*                     +----------+\n*     Module Name  -  | CBTEOT   |\n*                     +----------+\n*\n*\n*     Function -\n*               Map of end-of-task (EOT) event information\n*\n*     Operating Environment -\n*\n*\n*     Syntax -\n*\n*\n*     Operation -\n*\n*\n*     Author -\n*          Name     :  Deru Sudibyo\n*                      Freelance Consultant\n*          Copyright:  (C)2006 Deru Sudibyo\n*\n*\n*     Modification Log -\n*     +--------+------------+--------+---------------------------+\n*     | Date   | Engineer   | V.R.L. | Description               |\n*     +--------+------------+--------+---------------------------+\n*     |06/03/13| Deru S.    | 1.0.0. | First development         |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     +--------+------------+--------+---------------------------+\n*\n         MACRO\n&LABEL   CBTEOT &TYPE=DSECT,&AMODE=31,&RMODE=ANY,&PRINT=NOGEN\n         COPY  CBTGBLVR\n         print &print\nCBTEOT   &TYPE\n         AIF   ('&TYPE' NE 'CSECT').BEGIN\nCBTEOT   AMODE &AMODE\nCBTEOT   RMODE &RMODE\n.BEGIN   ANOP\n             space ,\nEOTinfo      ds  0d\nEOTid        ds  cl8             Eyecatcher s\nEOTsize      ds  A               Total EOTinfo size\nEOTheader    ds  0f              start of header\nEOTnetccb    ds  0a              address of NETCCB\nEOTecb       ds  A               ECB (redifinition)\nEOTnext      ds  A               fwd chain pointer\nEOTprev      ds  A               bwd chain pointer\nEOTmember    ds  0xl8            member name (for agent only)\nEOTsctlink   ds  0xl8            SCT link pointers\nEOTsctfwd    ds  A               fwd chain pointer from SCT\nEOTsctbwd    ds  A               bwd chain pointer to SCT\nEOTwtx       ds  A               pointer to WTX copy\nEOTcom       ds  A               COM address\nEOThdrlen    equ *-EOTheader     length of header\n             space ,\nEOTdata      ds  0f\nEOTtrace     ds  0f              trace word\nEOTtr_byte0  ds  x               trace byte-0\nEOTtr_byte1  ds  x               trace byte-1\nEOTtr_byte2  ds  x               trace byte-2\nEOTtr_byte3  ds  x               trace byte-3\nEOTflags     ds  x               byte 0 indicators\nEOTf_use     equ x'80'            - in use\nEOTf_break   equ x'40'            - break signal\nEOTf_eoj     equ x'20'            - missing EOJ\nEOTf_dup     equ x'10'            - info is duplicated\nEOTf_done    equ x'08'            - request was done\nEOTf_hold    equ x'04'            - info is held by scheduler\nEOTf_wait    equ x'02'            - in wait state\nEOTf_div     equ x'01'            - copied to DIV\nEOTflag2     ds  xl1             byte 2 indicator\nEOTf2_jobnm  equ x'80'            - jobname taken\nEOTf2_jobid  equ x'40'            - jobid taken\nEOTf2_jstep  equ x'20'            - job step name taken\nEOTf2_pstep  equ x'10'            - proc step name taken\nEOTf2_vjsab  equ x'08'            - JSAB is valid\nEOTf2_short  equ x'04'            - handled via shortcut way\nEOTf2_cksct  equ x'02'            - was tried to be chained to SCT\nEOTf2_sched  equ x'01'            - this info assoc'd with SCT\nEOTcount     ds  h               down-counter\nEOTsct       ds  A               assoc'd SCT address\nEOTtrg       ds  A               assoc'd TRG address (1st matched)\nEOTascb      ds  A               ASCB address\nEOTtcb       ds  A               TCB address\nEOTjct       ds  A               JCT address\nEOTsjb       ds  A               SJB address\nEOTjsab      ds  A               JSAB address\n*----------------new---------------------------------\nEOTdate      ds  f               capturing date (p'yyyymmdd')\nEOTjdate     ds  f               capturing date (p'yyyyddd0')\nEOTtime      ds  f               capturing time (p'hhmmsstt')\nEOTbtime     ds  f               capturing time (#centisecs)\n*----------------new---------------------------------\nEOTasid      ds  h               ASID\nEOTjobattr   ds  0cl40           job attribute\nEOTjobid     ds  cl8             JES jobid\nEOTtrigid    ds  0cl32           trigger id\nEOTsysjob    ds  0cl16           system+job name\nEOTsysname   ds  cl8             system name\nEOTjoblocid  ds  0cl24           local job identifier\nEOTjobname   ds  cl8             jobname\nEOTstepid    ds  0cl18           stepid (jobstep, procstep n stepnum)\nEOTstep      ds  0cl16           job and proc step names\nEOTjstep     ds  cl8             job step name\nEOTpstep     ds  cl8             proc step name\nEOTstnum     ds  h               step number\nEOTccinfo    ds  0xl6            info CC\nEOTscc       ds  h               system comp code\nEOTucc       ds  h               user comp code\nEOTmaxcc     ds  h               max. comp code\nEOTnotes     ds  0cl4\nEOTttype     ds  c          -    task type\nEOTttup      equ c'U'            - up (means job is up)\nEOTttjob     equ c'J'            - job (means EOJ)\nEOTttstep    equ c'S'            - step (means EOS)\nEOTttterm    equ c'T'            - EOS followed by EOJ\nEOTjtype     ds  c          -    job type\nEOTjtinit    equ c'I'            - initiated\nEOTjtstart   equ c'S'            - start/logon/mount\nEOTstatus    ds  c          -    job/step-end status\nEOTstnorm    equ c'N'            - normal\nEOTstabend   equ c'A'            - abend\nEOTsteoj     equ c'0'            - EOJ\nEOTstscd     equ c'S'            - belong to scheduler\nEOTstjclerr  equ c'C'            - JCL error\nEOTmachine   ds  c          -    machine on which EOT was happened\nEOTmlocal    equ c'L'            - local host\nEOTmremote   equ c'R'            - remote peer\nEOTdatasize  equ *-EOTdata       data length\nEOTrcode     ds  0f              return code\nEOTmsgaddr   ds  0a(*-*)         address to msg\nEOTidnum     ds  h               id num\nEOTage       ds  h               age in search cycle\nEOTfreebuf   equ *               start of free buffer\nEOTdatalen   equ *-EOTdata       data length\nEOTinfolen   equ ((*-EOTinfo+7)/8)*8  info length\n         AIF   ('&TYPE' eq 'DSECT').exit\n         AIF   ('&TYPE' NE 'CSECT').EXIT\n         END   CBTEOT\n.EXIT    ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CBTEVB": {"ttr": 1548, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x004\\x01\\x07(\\x7f\\x01\\x07)?\\x13I\\x00t\\x00m\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2007-10-14T00:00:00", "modifydate": "2007-10-20T13:49:34", "lines": 116, "newlines": 109, "modlines": 0, "user": "DERU"}, "text": "*\n*\n*                     +--------+\n*     Module Name  -  | CBTEVB |\n*                     +--------+\n*\n*\n*     Function -\n*            -  Map of Event trapping control block\n*            -  Map of Action entry\n*            -  Map of TOD block\n*\n*\n*     Syntax -\n*\n*\n*     Operation -\n*\n*\n*     Author -\n*          Name     :  Deru Sudibyo\n*                      Freelance Consultant\n*          Copyright:  (C)2006 Deru Sudibyo\n*\n*     Disclaimer -\n*\n*     Modification Log -\n*     +--------+------------+--------+---------------------------+\n*     | Date   | Engineer   | V.R.L. | Description               |\n*     +--------+------------+--------+---------------------------+\n*     |06/04/02| Deru S.    | 1.0.0. | First development         |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     +--------+------------+--------+---------------------------+\n*\n         MACRO\n&LABEL   CBTEVB &PRINT=NOGEN\n         COPY  CBTGBLVR\n         print &print\n         EJECT ,\n* +-----------------------------------------+\n* |  Event Block Entry                      |\n* |                                         |\n* |   - entry of event table                |\n* |                                         |\n* +-----------------------------------------+\n         space ,\nEVBlok   DSECT\nEVB_evnext   ds  A(*-*)        fwd chain to next similar event\nEVB_evprev   ds  A(*-*)        bwd chain from prev similar event\nEVB_text     ds  0cl132        Event text\nEVB_id       ds  0cl28         Event id\nEVB_sysname  ds  cl8           system name\nEVB_string   ds  0cl128        Event string\nEVB_key      ds  cl20          Event key\nEVB_data     ds  cl108         Event data\nEVB_idlen    ds  h             Event id length\nEVB_keylen   ds  h             Event key length\nEVB_verblen  ds  h             event verb length\nEVB_flags    ds  x             Flags (indicators)\nEVB_f_exp    equ x'80'         - entry is expired\nEVB_f_adt    equ x'40'         - entry is for any date\nEVB_f_atm    equ x'20'         - entry is for any time\nEVB_f_ady    equ x'10'         - entry is for any day\nEVB_f_perm   equ EVB_f_atm     - entry is set permanently\nEVB_f_wld    equ x'08'         - event id is wildcard\nEVB_f_hold   equ x'04'         - EVB need to be held\nEVB_f_down   equ x'02'         - switch to shutdown state\nEVB_f_error  equ x'01'         - event entry is error\nEVB_supp     ds  c             Suppression code\nEVB_supp_msg equ c'Y'          - Y = suppress message\nEVB_supp_log equ c'L'          - L = suppress log\nEVB_supp_all equ c'D'          - D = suppress message and log\nEVB_supp_cmd equ c'C'          - C = suppress command execution\nEVB_evtype   ds  x             event type\nEVB_ev_msg   equ c'1'          - MSG\nEVB_ev_cmd   equ c'2'          - CMD\nEVB_ev_tod   equ c'3'          - TOD\nEVB_ev_eot   equ c'4'          - EOT\nEVB_ev_eos   equ c'5'          - EOS\nEVB_ev_eoj   equ c'6'          - EOJ\nEVB_status   dc  x'00'         status indicator\nEVB_st_busy  equ x'80'         - EVB is being executed\nEVB_st_queue equ x'40'         - subsequent requests are in queue\nEVB_st_done  equ x'01'         - user trapper was finished (disabled)\nEVB_action   ds  x             action type\nEVB_ac_cmd   equ c'C'          - command\nEVB_ac_msg   equ c'M'          - message\nEVB_ac_rpy   equ c'R'          - reply\n             ds  xl3           reserved\nEVB_usrinfo  ds  0cl32\nEVB_usrrplen ds  h             length of reply id (for WTOR msg only)\nEVB_usrrplid ds  cl8           reply id text (for WTOR msg only)\nEVB_usrjname ds  cl8           user jobname\nEVB_usrascb  ds  a(*-*)        user ASCB address\nEVB_usrtcb   ds  a(*-*)        user TCB address\nEVB_usrecb   ds  a(*-*)        user ECB\nEVB_usrinfo2 ds  0cl20\nEVB_usrevsrc ds  a(*-*)        event source address\nEVB_usreot   ds  a(*-*)        address of EOT info\nEVB_consid   ds  a(*-*)        console id in which event was occurred\nEVB_cc       ds  h             current returned cc\nEVB_maxcc    ds  h             maximum CC since 1st step\nEVB_syscc    ds  h             system CC ever returned\n             org EVB_key       redefine for EOJ/EOS\nEVB_eosid    ds  0cl16         EOS checking id\nEVB_jobname  ds  cl8           job name\nEVB_jobstep  ds  cl8           job step name\n             org ,\n             ds  0d\nEVB_len      equ  *-EVBlok     Lrecl\n         mend\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CBTGBLVR": {"ttr": 549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x03\\x01\\x07)\\x0f\\x01\\x07)\\x0f\\x03\\x00\\x00\\x87\\x00\\x87\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2007-10-17T00:00:00", "modifydate": "2007-10-17T03:00:03", "lines": 135, "newlines": 135, "modlines": 0, "user": "DERU"}, "text": ".*\n.*\n.*                    +----------+\n.*    MODULE NAME  -  | CBTGBLVR |\n.*                    +----------+\n.*\n.*    Function -\n.*            SOURCE COPY MODULE CONTAIN LIST OF GLOBAL VARIABLES\n.*\n.*    Syntax -\n.*\n.*\n.*    Operation -\n.*\n.*\n.*    Author -\n.*         Name     :  Deru Sudibyo\n.*                     Technical Consultant\n.*                     Computer Associates\n.*                     Indonesia Office\n.*                     Wisma BNI-46 34th floor, BNI-46 City\n.*                     Jl. Jend. Sudirman, Kav 1, Jakarta Pusat\n.*         Copyright:  (C)1998 Deru Sudibyo\n.*\n.*    Disclaimer -\n.*        This macro is developed as a personal support, and is\n.*        not a part of CA support matterials.  The purpose is as\n.*        a temporary solution or even just a sample.  Therefor,\n.*        further modifications and maintenance are client's\n.*        responsibilities.\n.*\n.*    Modification Log -\n.*    +--------+------------+--------+---------------------------+\n.*    | Date   | Engineer   | V.R.L. | Description               |\n.*    +--------+------------+--------+---------------------------+\n.*    |98/02/20| DERU S.    | 1.0.0. | FIRST DEVELOPMENT         |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    +--------+------------+--------+---------------------------+\n.*\n         print NOGEN\n         GBLA  &DERCTR     Counter\n         GBLA  &DERTCTR    Trace counter\n.*       GBLA  &DERLHLQ    HLQ length\n         GBLA  &prodver    product version\n         GBLB  &CBTDOMSV   DOMid stacking control\n         GBLB  &DERACCR    Access-register mode indicator\n         GBLB  &DERACTL    Access-register control indicator\n         GBLB  &DEREQU     EQUATES INDICATOR\n         GBLB  &DERESA     ESA INDICATOR\n         GBLB  &DERRENT    REENTRANT INDICATOR\n         GBLB  &DERRSECT   RSECT (read only section)\n         GBLB  &DER390     S/390 INDICATOR\n         GBLB  &DERCCTB    CC table INDICATOR\n         GBLB  &DERSTOR    Storage indicator\n         GBLB  &DERSVA     SVA indicator\n         GBLB  &DERSUBT    subtask\n         GBLB  &DERJES2    include JES2 mapping\n         GBLB  &DERXDOM    exchange DOMid indicator\n         gblb  &DERASCSV\n         gblb  &DERASCRS\n         gblb  &DERzOS     z/OS indicator\n         gblb  &DERprolg   z/OS indicator\n         gblb  &DERmfinit  macro list initialization indicator\n         gblb  &DERsvinit  SVA initialization indicator\n         gblb  &DERmform   macro list form indicator\n         gblc  &DERmfloc   location of macro list form\n         gblc  &DERsvloc   location of SVA initialization routine\n         gblc  &DERsvmfi   location of SVA macro form init routine\n         GBLC  &DEROSVRM   OS version-release-modlevel\n         GBLC  &DEROSVER   OS version\n         GBLC  &DEROSREL   OS release\n         GBLC  &DEROSMOD   OS modlevel\n         GBLC  &DERLHLQ    HLQ length\n         GBLB  &DERTRTB    Tranlate table indicator\n         GBLC  &DERTRTB_leap\n         GBLC  &DERTRTB_nonleap\n         GBLC  &DERTRTB_dec2bin\n         GBLC  &DERTRTB_hex2chr\n         GBLC  &DERTRTB_hex2bin\n         GBLC  &DERTRTB_hex2binz\n         GBLC  &DERTRTB_dec2chr\n         GBLC  &DERTRTB_over\n         GBLC  &DERTRTB_null80\n         GBLC  &DERTRTB_blank80\n         GBLC  &DERTRTB_zebra\n         GBLC  &DERCLSL    CLOSE LIST FORM\n         GBLC  &DERDATE\n         GBLC  &DERDBWD\n         GBLC  &DERDSN\n         GBLC  &DERDSNC\n         GBLC  &DEREDTL\n         GBLC  &DERMSGL\n         GBLC  &DERMID\n         GBLC  &DERCID\n         GBLC  &DERMEP\n         GBLC  &DEROPNL\n         GBLC  &DERRDL\n         GBLC  &DERSVAR\n         GBLC  &DERSVGR\n         GBLC  &DERTIME\n         GBLC  &DERTMEL\n         GBLC  &DERWORD\n         GBLC  &DERWORK\n         GBLC  &DERWRL\n         GBLC  &DERWTOL\n         GBLC  &DERYDAT\n         GBLC  &DERYTIM\n         GBLC  &DERPSWSV\n         GBLC  &DERSACSV\n         GBLC  &DERWGRSV\n         GBLC  &DERWARSV\n         GBLC  &DERVLBL(100)               Label\n         GBLC  &DERVOPC(100)               OPcode\n         GBLC  &DERVDAT(100)               Data / Operands\n         gblc  &DERASCSA\n         gblc  &DERASCRX\n         gblc  &DERWTOBUF\n         GBLC  &DERSVSZ    Size of savearea\n         GBLC  &DERSVLC    Loc of savearea\n         GBLC  &DERSHRID   shared-token id\n         GBLC  &DERCOMMX   COMM area name for zJOS server\n         GBLC  &DERCOMMZ   COMM area name for zJOS agent\n         GBLC  &DERDSID    Dataspace id\n         GBLC  &DERDSSID   Dataspace share id\n         GBLC  &DERDIVID   DIV id\n         gblc  &DERMAXJB   #max of jobs\n         gblc  &DERMAXTR   #max of trigger\n         gblc  &DERMAXST   #max of steps\n         gblc  &SYSSPLV\n         print GEN\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CBTINSVA": {"ttr": 1552, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00H\\x01\\x07)\\x0f\\x01\\x07)?\\x13I\\x00J\\x00J\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2007-10-17T00:00:00", "modifydate": "2007-10-20T13:49:48", "lines": 74, "newlines": 74, "modlines": 0, "user": "DERU"}, "text": "*\n*\n*                     +----------+\n*     Module Name  -  | CBTINSVA |\n*                     +----------+\n*\n*\n*     Function -\n*               Initialize SVA\n*\n*     Syntax -\n*\n*\n*     Operation -\n*\n*\n*     Author -\n*          Name     :  Deru Sudibyo\n*                      Software Architect\n*          Copyright:  (C)2006 Deru Sudibyo\n*\n*\n*     Modification Log -\n*     +--------+------------+--------+---------------------------+\n*     | Date   | Engineer   | V.R.L. | Description               |\n*     +--------+------------+--------+---------------------------+\n*     |06/09/24| Deru S.    | 1.0.0. | First development         |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     +--------+------------+--------+---------------------------+\n*\n         MACRO\n&LABEL   CBTINSVA &base=\n         COPY  CBTGBLVR\n         lclc  &lbl,&baselbl\n         aif   (&DERMFINIT).done\n&lbl     setc  'DER&sysndx'\n         aif   (t'&base eq 'O').defbase\n&baselbl setc  '&base'\n         ago   .begin\n.defbase anop\n&baselbl setc  '&DERMEP'\n.begin   anop\n         ds    0h\n&DERSVLOC equ  *\n         stm   r0,r15,SVAregs       save reg 0-15\n         la    r12,&DERSVLOC-&baselbl offset from the module base\n         slr   r15,r12              base address\n         lr    r12,r15              establish base addressability\n         la    r0,SVAuserarea       locate start of user area\n         la    r1,SVAuserareasize   length of user area\n&lbl.a   xr    r2,r2                clear reg 2\n         xr    r3,r3                clear reg 3\n         mvcl  r0,r2                zap MF area\n         ltr   r1,r1                was it complete?\n         bnz   &lbl.a               no, continue if interrupted\n*        bc    #cc3,&lbl.a          continue if interrupted\n         la    r0,&DERMFLOC         locate MF area\n         la    r1,&DERMFLOC._len    length of MF area\n         la    r2,SVA_macforms      target MF area in SVA\n         la    r3,SVA_macforms_len  length of target (should the same)\n&lbl.b   mvcl  r2,r0                initialize MF area\n         bc    #cc3,&lbl.b          continue if interrupted\n         lm    r0,r15,SVAregs       restore reg 0-15\n         br    r14                  return\n&lbl.c   dc    a(&DERSVLOC-&baselbl)\n&DERMFLOC CBTMFORM prefix=&DERCID\n&DERMFINIT setb 1\n.done    anop\n         mend\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CBTMFORM": {"ttr": 1555, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01#\\x00W\\x01\\x06)\\x8f\\x01\\x07)?\\x13I\\x00d\\x00O\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.35", "flags": 0, "createdate": "2006-10-25T00:00:00", "modifydate": "2007-10-20T13:49:57", "lines": 100, "newlines": 79, "modlines": 0, "user": "DERU"}, "text": "*\n*\n*                     +----------+\n*     Module Name  -  | CBTMFORM |\n*                     +----------+\n*\n*\n*     Function -\n*               Generate most frequently used macro list forms\n*\n*     Syntax -\n*\n*\n*     Operation -\n*\n*\n*     Author -\n*          Name     :  Deru Sudibyo\n*                      Software Architect\n*          Copyright:  (C)2006 Deru Sudibyo\n*\n*\n*     Modification Log -\n*     +--------+------------+--------+---------------------------+\n*     | Date   | Engineer   | V.R.L. | Description               |\n*     +--------+------------+--------+---------------------------+\n*     |06/09/24| Deru S.    | 1.0.0. | First development         |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     +--------+------------+--------+---------------------------+\n*\n         MACRO\n&LABEL   CBTMFORM &prefix=SVA\n         COPY  CBTGBLVR\n         lclb  &lab\n         lclc  &px,&lbl\n         aif   (t'&label eq 'O').go\n&lab     setb  1\n.go      anop\n&px      setc  '&prefix'\n&label   ds    0d\n         aif   (&lab).list\n&px._macforms equ *\n.list    anop\n&px._estae   ESTAE PARAM=&px._estae,MF=L\n&px._estaex  ESTAEX PARAM=&px._estaex,MF=L\n&px._calllist CALL ,(,,,,,,,,,,),VL,MF=L\n&px._lmgcre  mgcre mf=L              list form of mgcre\n&px._lascre  ascre asname='XDILGR',init='IEFBR14',                     +\n               attr=(NOSWAP),oda=&px._lascre,mf=L\n&px._lpost   post ecbkey=YES,mf=L\n&px._ltime   time linkage=SYSTEM,mf=L list form of time\n&px._lmsup   modeset mode=SUP,mf=L   list form of modeset\n&px._lmsupz  modeset mode=SUP,key=ZERO,mf=L list form of modeset\n&px._lmkzero modeset key=ZERO,mf=L   list form of modeset\n&px._lmprob  modeset mode=PROB,mf=L  list form of modeset\n&px._lmprobz modeset mode=PROB,key=ZERO,mf=L list form of modeset\n&px._lmprobnz modeset mode=PROB,key=NZERO,mf=L list form of modeset\n&px._swareq SWAREQ MF=L              list form of SWAREQ\n         aif   (&derzos).zos\n&px._enq enq   (*-*,*-*,E,8,STEP),                                     +\n               ret=NONE,mf=L\n&px._deq deq   (*-*,*-*,8,STEP),                                       +\n               ret=NONE,mf=L\n         ago   .eddone\n.zos     anop\n&px._enq enq   (*-*,*-*,E,8,STEP),                                     +\n               ret=NONE,mf=L,linkage=SYSTEM\n&px._deq deq   (*-*,*-*,8,STEP),                                       +\n               ret=NONE,mf=L,linkage=SYSTEM\n.eddone  anop\n             ds  0f\n&px.resid    ds  0cl16\n&px.major    dc  cl8'ABCDEF00'\n&px.minor    dc  cl8'01234567'\n&px._rmgadd  resmgr ADD,mf=L\n&px._rmgdel  resmgr DELETE,mf=L\n&px._attach  ATTACH SZERO=YES,SF=L,KEY=ZERO,sm=SUPV\n&px._attach_size equ *-&px._attach\n&px._attachX ATTACHX ep=DERXXX,KEY=ZERO, schedule subtask              +\n               SZERO=YES,SF=L,sm=SUPV\n&px._attachx_size equ *-&px._attachx\n&px._stmrset STIMERM SET,MF=L\n&px._stmroff STIMERM CANCEL,MF=L\n&px._wto  wto  text=,mf=L,routcde=(1,2,8,9,10),desc=(9,11,12)\n&px._wtor wtor text=&px._wto,mf=L\n&px._svcupdt svcupdte 109,REPLACE,type=3,esr=212,epname=IGX00212,mf=L\n         aif  (&lab).lbl\n         ds   0f\n&px._macforms_len equ *-&px._macforms\n         mexit\n.lbl     anop\n&lbl     setc  '&label'.'_len'\n         ds   0f\n&lbl     equ   *-&label\n         mend\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CBTMSG": {"ttr": 1795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\t\\x01\\x06$\\x9f\\x01\\x07)?\\x13P\\x01\\xc7\\x00D\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2006-09-06T00:00:00", "modifydate": "2007-10-20T13:50:09", "lines": 455, "newlines": 68, "modlines": 0, "user": "DERU"}, "text": ".*\n.*\n.*                    +----------+\n.*    Macro Name   -  | CBTMSG   |\n.*                    +----------+\n.*\n.*\n.*    Function -\n.*             Provide MSG skeleton of CBT subsystem\n.*\n.*    Syntax -\n.*\n.*\n.*    Operation -\n.*\n.*\n.*    Author -\n.*         Name     :  Deru Sudibyo\n.*                     Software Architect\n.*         Copyright:  (C)2006 Deru Sudibyo\n.*\n.*\n.*    Modification Log -\n.*    +--------+------------+--------+---------------------------+\n.*    | Date   | Engineer   | V.R.L. | Description               |\n.*    +--------+------------+--------+---------------------------+\n.*    |06/08/06| Deru S.    | 2.1.2. | First development         |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    +--------+------------+--------+---------------------------+\n.*\n         MACRO\n&LABEL   CBTMSG &TYPE=DATA,&prefix=MSG,&PRINT=NOGEN\n         lclc  &msid,&PX,&cid\n         COPY  CBTGBLVR\n         print &print\n&msid    setc  '&DERMID'\n&cid     setc  '&DERMID'(4,3)\n&PX      setc  '&prefix'\n         AIF   ('&TYPE' eq 'DATA').data\n         AIF   ('&TYPE' eq 'CONSTANT').data\n         AIF   ('&TYPE' eq 'DSECT').map\n         AIF   ('&TYPE' eq 'MAP').map\n         AIF   ('&TYPE' eq 'TEMPLATE').map\n         mnote 8,'DER001E Wrong TYPE. Use DATA or MAP instead.'\n         mexit\n         space ,\n*\n*  +------------------------------------------+\n*  |  SIPSS Message Data/Constant             |\n*  +------------------------------------------+\n*\n         space ,\n.data    aif   (t'&label eq 'O').nolbl\n&label   ds    0d\n         ago   .data1\n.nolbl   anop\n         space ,\n&PX.000  DS    0d\n.data1   anop\n&PX.001  WTO  '&msid.001I zCBT subsystem initialization in progress..',+\n               mf=L,routcde=(1,2,8,9,10)\n&PX.001l equ   *-&PX.001\n         ds    0f\n&PX.002  WTO  '&msid.002I zCBT recovery routine setup complete.',      +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.002l equ   *-&PX.002\n         ds    0f\n&PX.003  WTO  '&msid.003W zCBT recovery routine setup was failed!',    +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.003l equ   *-&PX.003\n         ds    0f\n&PX.004  WTO  '&msid.004I zCBT data areas is being evaluated.',        +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.004l equ   *-&PX.004\n         ds    0f\n&PX.005  WTO  '&msid.005I zCBT SSI is running under Master Scheduler.',+\n               mf=L,routcde=(1,2,8,9,10)\n&PX.005l equ   *-&PX.005\n         ds    0f\n&PX.006  WTO  '&msid.006I zCBT SSI is running on zCBT address space.', +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.006l equ   *-&PX.006\n         ds    0f\n&PX.007  WTO  '&msid.007I Waiting for zCBT preparing LPA modules.',    +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.007l equ   *-&PX.007\n         ds    0f\n&PX.008  WTO  '&msid.008I SSI initializer is notified that LPA is OK.',+\n               mf=L,routcde=(1,2,8,9,10)\n&PX.008l equ   *-&PX.008\n         ds    0f\n&PX.009  WTO  '&msid.009I SSI vector table was built and initialized.',+\n               mf=L,routcde=(1,2,8,9,10)\n&PX.009l equ   *-&PX.009\n         ds    0f\n&PX.010  WTO  '&msid.010E SSI vector table was failed.  Subsystem was a+\n               borted.',mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.010l equ   *-&PX.010\n         ds    0f\n&PX.011  WTO  '&msid.011I COM area was anchored to SSI vector table.', +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.011l equ   *-&PX.011\n         ds    0f\n&PX.012  WTO  '&msid.012I Unable to anchor COM to SSI vector table',   +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.012l equ   *-&PX.012\n         ds    0f\n&PX.013  WTO  '&msid.013I zCBT will respond to the SETSSI command.',   +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.013l equ   *-&PX.013\n         ds    0f\n&PX.014  WTO  '&msid.014W Unable to enable SETSSI command.',           +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.014l equ   *-&PX.014\n         ds    0f\n&PX.015  WTO  '&msid.015I zCBT subsystem initialization complete.',    +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.015l equ   *-&PX.015\n         ds    0f\n&PX.016  WTO  '&msid.016E zCBT subsystem activation was failed.',      +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.016l equ   *-&PX.016\n         ds    0f\n&PX.017  WTO  '&msid.017I zCBT subsystem activation successful.',      +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.017l equ   *-&PX.017\n         ds    0f\n&PX.018  WTO  '&msid.018E Unable to define zCBT subsystem.',           +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.018l equ   *-&PX.018\n         ds    0f\n&PX.019  WTO  '&msid.019I Subsystem common area (COM) was allocated.', +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.019l equ   *-&PX.019\n         ds    0f\n&PX.020  WTO  '&msid.020I Shared token-pair already exist and reused', +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.020l equ   *-&PX.020\n         ds    0f\n&PX.021  WTO  '&msid.021I New shared token-pair was created.',         +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.021l equ   *-&PX.021\n         ds    0f\n&PX.022  WTO  '&msid.022E Unable to obtain common data area.',         +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.022l equ   *-&PX.022\n         ds    0f\n&PX.023  WTO  '&msid.023I zCBT subsystem has already been defined.',   +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.023l equ   *-&PX.023\n         ds    0f\n&PX.024  WTO  '&msid.024E zCBT subsystem was failed!  zCBT is working o+\n               n address space only.',                                 +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.024l equ   *-&PX.024\n         ds    0f\n&PX.025  WTO  '&msid.025W zCBT subsystem is waiting for manual activati+\n               on.',mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.025l equ   *-&PX.025\n         ds    0f\n&PX.026  WTO  '&msid.026I Subsystem name .... is set from .............+\n               .. ',mf=L,routcde=(1,2,8,9,10)\n&PX.026l equ   *-&PX.026\n         ds    0f\n&PX.027  WTO  '&msid.027I Data area: COM=......... ',                  +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.027l equ   *-&PX.027\n         ds    0f\n&PX.028  WTO  '&msid.028W ..... abended S...-U... RS=........, is being+\n                recovered.',mf=L,routcde=(1,2,8,9,10),MCSFLAG=(HRDCPY)\n&PX.028l equ   *-&PX.028\n         ds    0f\n&PX.029  WTO  '&msid.029W SCSR service could be unavailable.',         +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.029l equ   *-&PX.029\n         ds    0f\n&PX.030  WTO  '&msid.030E zCBT data area could not be established.',   +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.030l equ   *-&PX.030\n         ds    0f\n&PX.031  WTO  '&msid.031E zCBT job event listener could not be establis+\n               hed.',mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.031l equ   *-&PX.031\n         ds    0f\n&PX.032  WTO  '&msid.032E zCBT LPA modules could not be loaded.',      +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.032l equ   *-&PX.032\n         ds    0f\n&PX.033  WTO  '&msid.033E zCBT subsystem could not be established.',   +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.033l equ   *-&PX.033\n         ds    0f\n&PX.034  WTO  '&msid.034I zCBT (EMS) subsystem is active.',            +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.034l equ   *-&PX.034\n         ds    0f\n&PX.035  WTO  '&msid.035I zCBT (EMS) subsystem is now active.  ',      +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.035l equ   *-&PX.035\n         ds    0f\n&PX.036  WTO  '&msid.036W Data area not ready.  Subsystem can not be ac+\n               tivated.',mf=L,routcde=(1,2,8,9,10)\n&PX.036l equ   *-&PX.036\n         ds    0f\n&PX.037  WTO  '&msid.037W SSI not initialized.  EMS can not be activate+\n               d on subsystem',mf=L,routcde=(1,2,8,9,10)\n&PX.037l equ   *-&PX.037\n         ds    0f\n&PX.038  WTO  '&msid.038I zCBT subsystem deactivation successful.',    +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.038l equ   *-&PX.038\n         ds    0f\n&PX.039  WTO  '&msid.039I zCBT (EMS) subsystem is inactive.',          +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.039l equ   *-&PX.039\n         ds    0f\n&PX.040  WTO  '&msid.040I zCBT (EMS) subsystem is now inactive.',      +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.040l equ   *-&PX.040\n         ds    0f\n&PX.041  WTO  '&msid.041E zCBT subsystem deactivation was failed.',    +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.041l equ   *-&PX.041\n         ds    0f\n&PX.042  WTO  '&msid.042W SSI is not active, so can not be enabled.',  +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.042l equ   *-&PX.042\n         ds    0f\n&PX.043  WTO  '&msid.043W SSI is active, so can not be disabled.',     +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.043l equ   *-&PX.043\n         ds    0f\n&PX.044  WTO  '&msid.044I ESTAE routine was reset.',                   +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.044l equ   *-&PX.044\n         ds    0f\n&PX.045  WTO  '&msid.045I SSI initialization routine finished.',       +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.045l equ   *-&PX.045\n         ds    0f\n&PX.046  WTO  '&msid.046I SSCVT will be created from dynamic table base+\n               d on EPA in LPA.',mf=L,routcde=(1,2,8,9,10)\n&PX.046l equ   *-&PX.046\n         ds    0f\n&PX.047  WTO  '&msid.047E ........ ........ service returned RC=.., Rsn+\n               =.....',mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n&PX.047l equ   *-&PX.047\n         ds    0f\n&PX.048  WTO  '&msid.048I ..... in ............ EPA=........, ID=......+\n               .. ',mf=L,routcde=(1,2,8,9,10),MCSFLAG=(HRDCPY)\n&PX.048l equ   *-&PX.048\n         ds    0f\n&PX.049  WTO  '&msid.049W .. common modules not ready in ............',+\n               mf=L,routcde=(1,2,8,9,10),MCSFLAG=(HRDCPY)\n&PX.049l equ   *-&PX.049\n         ds    0f\n&PX.050  WTO  '&msid.050I Common module ..... loaded into CSA, EPA=....+\n               .....',mf=L,routcde=(1,2,8,9,10),MCSFLAG=(HRDCPY)\n&PX.050l equ   *-&PX.050\n         ds    0f\n&PX.051  WTO  '&msid.051W Subsystem name .... is not .... which is defa+\n               ult.',mf=L,routcde=(1,2,8,9,10)\n&PX.051l equ   *-&PX.051\n         ds    0f\n&PX.052  WTO  '&msid.052I ..... going to be deleted from dynamic LPA.',+\n               mf=L,routcde=(1,2,8,9,10),MCSFLAG=(HRDCPY)\n&PX.052l equ   *-&PX.052\n         ds    0f\n&PX.053  WTO  '&msid.053W COM name ........ is inconsistant.',         +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.053l equ   *-&PX.053\n         ds    0f\n&PX.054  WTO  '&msid.054W zCBT subsystem name .... does not exist.',   +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.054l equ   *-&PX.054\n         ds    0f\n&PX.055  WTO  '&msid.055I List of outstanding zCBT users:',            +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.055l equ   *-&PX.055\n         ds    0f\n&PX.056  WTO  'Job=........ Ev=... \"........................\", L=... Co+\n               nd=.../......',mf=L,routcde=(1,2,8,9,10)\n&PX.056l equ   *-&PX.056\n         ds    0f\n&PX.057  WTO  '&msid.057I No outstanding zCBT users.',                 +\n               mf=L,routcde=(1,2,8,9,10)\n&PX.057l equ   *-&PX.057\n         mexit\n*\n*  +------------------------------------------+\n*  |  SIPSS Message template                  |\n*  +------------------------------------------+\n*\n.map     aif   (t'&label eq 'O').dsect\n&label   DSECT\n         ago   .map1\n.dsect   anop\n         space ,\n&Px.MSG  DSECT\n.map1    anop\n         space ,\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.002  WTO  '&msid.002I zCBT recovery routine setup complete.',      +\n               mf=L,routcde=(1,2,8,9,10)\n         org   &PX.002+20\n&PX.002esr dc  cl16'ESR SVC code 222'\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.003  WTO  '&msid.003W zCBT recovery routine setup was failed!',    +\n               mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n         org   &PX.003+20\n&PX.003esr dc  cl16'ESR SVC code 222'\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.026  WTO  '&msid.026I Subsystem name .... is set from .............+\n               .. ',mf=L,routcde=(1,2,8,9,10)\n         org   &PX.026+30\n&PX.026ssn dc  cl4' '\n         org   &PX.026+47\n&PX.026rmk dc  cl15' '     either default SS-name or input parameter\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.027  WTO  '&msid.027I Data area: COM=......... ',                  +\n               mf=L,routcde=(1,2,8,9,10)\n         org   &PX.027+30\n&PX.027com dc  cl8' '\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.028  WTO  '&msid.028W ..... abended S...-U... RS=........, is being+\n                recovered.',mf=L,routcde=(1,2,8,9,10),MCSFLAG=(HRDCPY)\n         org   &PX.028+15\n&PX.028tsk dc  cl5' '\n         org   &PX.028+30\n&PX.028scc dc  cl3' '\n           dc  c'-U'\n&PX.028ucc dc  cl3' '\n         org   &PX.028+42\n&PX.028rsn dc  cl8' '\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.047  WTO  '&msid.047E ........ ........ service returned RC=.., Rsn+\n               =.....',mf=L,routcde=(1,2,8,9,10),DESC=(2,7,11)\n         org   &PX.047+15\n&PX.047srv dc  cl8' '\n           dc  c' '\n&PX.047req dc  cl8' '\n         org   &PX.047+53\n&PX.047rc  dc  cl2' '\n         org   &PX.047+61\n&PX.047rsn dc  cl4' '\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.048  WTO  '&msid.048I ..... in ............ EPA=........, ID=......+\n               .. ',mf=L,routcde=(1,2,8,9,10),MCSFLAG=(HRDCPY)\n         org   &PX.048+15\n&PX.048mod dc  cl5' '\n         org   &PX.048+24\n&PX.048lpa dc  cl12' '\n         org   &PX.048+41\n&PX.048epa dc  cl8' '\n         org   &PX.048+54\n&PX.048mid dc  cl8' '\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.049  WTO  '&msid.049W .. common modules not ready in ............',+\n               mf=L,routcde=(1,2,8,9,10),MCSFLAG=(HRDCPY)\n         org   &PX.049+15\n&PX.049num dc  cl2' '\n         org   &PX.049+46\n&PX.049lpa dc  cl12' '\n*                         ESR SVC module is not ready in ...\n         org   &PX.049+15\n&PX.049esr dc  cl17'ESR SVC module is'\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.050  WTO  '&msid.050I Common module ..... loaded into CSA, EPA=....+\n               .....',mf=L,routcde=(1,2,8,9,10),MCSFLAG=(HRDCPY)\n         org   &PX.050+29\n&PX.050mod dc  cl5' '\n         org   &PX.050+56\n&PX.050epa dc  cl8' '\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.051  WTO  '&msid.051W Subsystem name .... is not .... which is defa+\n               ult.',mf=L,routcde=(1,2,8,9,10)\n         org   &PX.051+30\n&PX.051nam1 dc  cl4' '\n         org   &PX.051+42\n&PX.051nam2 dc  cl4' '\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.052  WTO  '&msid.052I ..... going to be deleted from dynamic LPA.',+\n               mf=L,routcde=(1,2,8,9,10),MCSFLAG=(HRDCPY)\n         org   &PX.052+15\n&PX.052mod dc  cl5' '\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.053  WTO  '&msid.053W COM name ........ is inconsistant.',         +\n               mf=L,routcde=(1,2,8,9,10)\n         org   &PX.053+24\n&PX.053com dc  cl8' '\n         org   ,\n         space ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n&PX.054  WTO  '&msid.054W zCBT subsystem name .... does not exist.',   +\n               mf=L,routcde=(1,2,8,9,10)\n         org   &PX.054+35\n&PX.054ssn dc  cl4' '\n         org   ,\n         org   &Px.MSG\n*              +----1----+----2----+----3----+----4----+----5----+----6\n*              ----+----7\n&PX.056  WTO  'Job=........ Ev=... \"........................\", L=... Co+\n               nd=.../......',mf=L,routcde=(1,2,8,9,10)\n         org   &PX.056+8\n&PX.056job dc  cl8' '\n         org   &PX.056+20\n&PX.056typ dc  cl3' '\n         org   &PX.056+25\n&PX.056txt dc  cl24' '\n         org   &PX.056+54\n&PX.056len dc  cl3' '\n         org   &PX.056+63\n&PX.056st1 dc  cl3' '\n         org   &PX.056+67\n&PX.056st2 dc  cl5' '\n         org   ,\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CBTSVA": {"ttr": 1808, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x13\\x01\\x06)\\x8f\\x01\\x07)\\x8f\\x11T\\x01*\\x03S\\x00\\x00\\xc4\\xe8\\xc1\\xc8@@@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2006-10-25T00:00:00", "modifydate": "2007-10-25T11:54:13", "lines": 298, "newlines": 851, "modlines": 0, "user": "DYAH"}, "text": "*\n*\n*                     +----------+\n*     Module Name  -  | CBTSVA   |\n*                     +----------+\n*\n*\n*     Function -\n*               Map of large save area for working space\n*\n*     Operating Environment -\n*        Type              Macro\n*        Location          local/private area\n*        Created by        Each module during invocation\n*        Pointed by        Reg 13\n*\n*\n*\n*\n*     Syntax -\n*\n*\n*     Operation -\n*\n*\n*     Author -\n*          Name     :  Deru Sudibyo\n*                      Software Architect\n*          Copyright:  (C)1998 Deru Sudibyo\n*\n*     Disclaimer -\n*         This module is developed as a personal support, and is\n*         not a part of CA support matterials.  The purpose is as\n*         a temporary solution or even just a sample.  Therefor,\n*         further modifications and maintenance are client's\n*         responsibilities.\n*\n*     Modification Log -\n*     +--------+------------+--------+---------------------------+\n*     | Date   | Engineer   | V.R.L. | Description               |\n*     +--------+------------+--------+---------------------------+\n*     |98/02/23| Deru S.    | 1.0.0. | First development         |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     |        |            |        |                           |\n*     +--------+------------+--------+---------------------------+\n*\n         MACRO\n&LABEL   CBTSVA &TYPE=DSECT,&AMODE=31,&RMODE=ANY,&PRINT=NOGEN\n         COPY  CBTGBLVR\n         lclb  &ssi\n         lclc  &pfx,&S\nCBTSVA   &TYPE\n         AIF   ('&TYPE' NE 'CSECT').BEGIN\nCBTSVA   AMODE &AMODE\nCBTSVA   RMODE &RMODE\n.BEGIN   ANOP\n         print &PRINT\nSVA      EQU   *\n           DC  9D'0'           for standard save area\n           org SVA+4\nSVAold     dc  f'0'            slot for old reg 13\n           org ,\nSVAregs    DC  16F'0'          temporary save area\nSVAmsgregs DC  16F'0'          temporary save area\nSVAreg14   DC  F'0'            R14 save area\n         @vglobal place=SVA\nSVAuserarea equ *\nSVAbase1   DC  A(*-*)          Base 1 address save area\nSVAbase2   DC  A(*-*)          Base 2 address save area\nSVAexit1   DC  A(*-*)          Exit 1 address save area\nSVAexit2   DC  A(*-*)          Exit 2 address save area\nSVAcom     DC  A(*-*)          COM address\nSVAeot     DC  A(*-*)          EOT address\nSVAdomid   DC  A(*-*)          MSG DOM id\nSVADOMlist dc  A(*-*,*-*)      DOM id list start and end ptr\nSVADOMcurr dc  A(*-*)          Current DOM id ptr\nSVAmid     dc  cl5' '          module id\nSVAflags   dc  xl1'00'         general purpose flags\n           dc  xl2'00'         reserved\nSVArcode   dc  A(*-*)          return code\nSVArsn     dc  A(*-*)          reason code\nSVAcorr    dc  A(*-*)          address correction\nSVAkey     dc  A(*-*)          PSW key\nSVAaccode  dc  A(*-*)          ASC code\n         space ,\nSVAECB   ds    f               Own local ECB\nSVAECBcopy ds  0f              copy of own local ECB\n           ds  x               reserved for wait/post bits\nSVAECBarg  ds  x               argument\nSVAECBcomp ds  x               component targeted\nSVAECBreq  ds  x               request\n         space ,\nSVArecov1  dc  a(*-*)          address of recovery routine 1\nSVArecov2  dc  a(*-*)          address of recovery routine 2\nSVAecpsw   dc  xl8'00'         extended control psw (SDWA:SDWAEC1)\nSVAnxtinst dc  a(*-*)          address of next instruction\nSVArscode  dc  f'0'            reason code\nSVAabcode  dc  f'0'            abend code\nSVAabtrace dc  xl8'00'         abend trace information\nSVAabregs  dc  0xl64'00'       copy saved regs (SDWA:SDWASRSV)\nSVAabreg00 dc  f'0'            - copy saved reg 00\nSVAabreg01 dc  f'0'            - copy saved reg 01\nSVAabreg02 dc  f'0'            - copy saved reg 02\nSVAabreg03 dc  f'0'            - copy saved reg 03\nSVAabreg04 dc  f'0'            - copy saved reg 04\nSVAabreg05 dc  f'0'            - copy saved reg 05\nSVAabreg06 dc  f'0'            - copy saved reg 06\nSVAabreg07 dc  f'0'            - copy saved reg 07\nSVAabreg08 dc  f'0'            - copy saved reg 08\nSVAabreg09 dc  f'0'            - copy saved reg 09\nSVAabreg10 dc  f'0'            - copy saved reg 10\nSVAabreg11 dc  f'0'            - copy saved reg 11\nSVAabreg12 dc  f'0'            - copy saved reg 12\nSVAabreg13 dc  f'0'            - copy saved reg 13\nSVAabreg14 dc  f'0'            - copy saved reg 14\nSVAabreg15 dc  f'0'            - copy saved reg 15\nSVAabflags dc  x'00'           recovery indicators\nSVAabf_per equ x'80'           - request to percolate\nSVAabf_ini equ x'40'           - task is in initialization phase\nSVAabf_set equ x'20'           - ESTAE is active\n           dc  xl3'00'         reserved\nSVArecsv1  dc  xl64'00'        recovery save area 1\nSVArecsv2  dc  xl64'00'        recovery save area 2\n         space ,\nSVAword    dc  f'0'            fullword buffer\nSVAdword   dc  d'0'            doubleword buffer\nSVAinword  dc  f'0'            fullword input buffer\nSVAoutword dc  f'0'            fullword output buffer\nSVAindbwd  dc  d'0'            doubleword input buffer\nSVAoutdbwd dc  d'0'            doubleword output buffer\n         space ,\n           org SVAREG14\nSVALINK    DC  F'0'            Other name\n           org ,\n           ds  0d\nSVAtod     ds  0xl16           TOD buffer\nSVAdtime   ds  0d              time (dec: hhmmsstt)\nSVAtime    ds  f               time (bin)\n           ds  f\nSVAdate    ds  f               time (dec)\n           ds  f\n.* +--------------------------------------------------------+\n.* |  Macro List Forms                                      |\n.* |  - very frequently used macro list forms               |\n.* +--------------------------------------------------------+\nSVA_macforms cbtmform prefix=SVA\n           ds  0d\nSVACARD1   DC  XL80'00'        buffer 80-byte card\nSVACARD2   DC  XL80'00'        buffer 80-byte card\nSVAlist    DC  XL80'00'        buffer 80-byte for any list form\nSVABUF80   DC  XL80'00'        buffer 80\nSVABUFFF   DC  XL256'00'       buffer 256\nSVAwtobuf  dc  xl256'00'       buffer 256 for WTO\nSVAlibdsn  dc  cl44'CBT.EMS.LOADLIB'\n           ds  0f\n           space ,\n.* +--------------------------------------------------------+\n.* |  SSI information area                                  |\n.* +--------------------------------------------------------+\n           space ,\nSSI_savearea ds  xl80                  save area\nSSI_info     ds  0d\nSSI_tokpair  dc  0cl32' '              Token-pair for share\nSSI_shrname  dc  0cl16' '              Shared name\nSSI_shrname1 dc  cl8' '                -  match WSdsp_name\nSSI_shrname2 dc  cl8' '                -  match WSDIV_name\nSSI_shrtoken dc  0xl16'00'             shared token\nSSI_comcb    dc  a(*-*)                COM control block address\nSSI_ascb     dc  a(*-*)                ASCB of main address space\nSSI_token    dc  f'0'                  Vector table token\nSSI_sscvt    dc  a(*-*)                SSCVT address\nSSI_ssob     dc  a(*-*)                SSOB address\nSSI_mgcrpl   dc  0f                    MGCRPL address\nSSI_wqe      dc  a(*-*)                WQE address (alias)\nSSI_initrtn  dc  cl8' '                SSI init routine name\nSSI_name     dc  cl4' '                SSI name\nSSI_varinfo  dc  0xl16                 list of SSI variables info\nSSI_qryinfo  dc  a(*-*)                address of QUERYed info\nSSI_rcode    dc  f'0'                  Return code\nSSI_rcmsg    dc  f'0'                  Return/SSI_reason code in msg\nSSI_reason   dc  f'0'                  SSI_reason code\nSSI_status   dc  x'00'                 SSI status indicators\nSSI_flags    dc  x'00'                 SSI setup indicator\nSSI_f_wtor   equ x'80'                 - trapped msg was WTOR\nSSI_f_eoj    equ x'40'                 - EOJ msg was trapped\nSSI_f_jclerr equ x'20'                 - JCL error msg was trapped\nSSI_f_jabend equ x'10'                 - job abend msg was trapped\nSSI_f_job    equ SSI_f_eoj+SSI_f_jclerr+SSI_f_jabend msg was about job\nSSI_f_cmd    equ x'08'                 - command was trapped\nSSI_evtype   ds  x                     event type\n             ds  x                     reserved\nSSI_rpllen   ds  h                     length WTOR reply id text\nSSI_rplid    ds  cl8                   WTOR reply id text\nSSI_consid   ds  f                     console id\nSSI_consname ds  cl8                   console name\nSSI_msgptr   ds  a(*-*)                msg buffer address\nSSI_scc      ds  h                     system CC (EOS only)\nSSI_ucc      ds  h                     user CC (EOS only)\n         IEFSSI MF=(L,SSI_parmlist),PLISTVER=MAX\n*\n         IEFSSVT MF=(L,SSI_ssvtparm),PLISTVER=MAX\n*\n         CSVDYLPA MF=(L,SSI_dynLPA)\nSSI_infolen equ *-SSI_info\n*\n         aif  ('&DERMID' ne 'CBTEMS').rexx\nSSI_dyntab ds 0f\n         iefssvti type=RESERVE,                                        +\n               ssvtdata=SS_table_dyn,                                  +\n               tablen=SS_table_len\nSSI_dyntablen equ *-SSI_dyntab\n         ago   .tracefld\n.rexx    aif  ('&DERMID' ne 'CBTREX').tracefld\n         space ,\n* +-------------------------------------------+\n* | Function internal area                    |\n* +-------------------------------------------+\n         space ,\nRX_evbptr    ds  a(*-*)              pointer to own EVB\nRX_evblen    ds  h                   length of own EVB\nRX_evbtype   ds  x                   EVB type indicator\nRX_evbt_old  equ c'O'                - old EVB\nRX_evbt_new  equ c'N'                - newly obtained EVB\nRX_jobtype   ds  x                   job/user type\nRX_job_stc   equ c'S'                - STC/TSU/mount\nRX_job_tsu   equ c'T'                - TSU user\nRX_job_job   equ c'J'                - batch job (initiated)\nRX_jobname   ds  cl8                 job/user name\nRX_jobid     ds  cl8                 JES job id\nRX_address   ds  0xl12               flow switch addresses\nRX_address0  ds  a(*-*)              flow switch address 0\nRX_address1  ds  a(*-*)              flow switch address 1\nRX_address2  ds  a(*-*)              flow switch address 2\nRX_evbcom    ds  a(*-*)              EVB chain pointer in COM\nRX_evidptr   ds  a(*-*)              address of event id/string\nRX_evidlen   ds  h                   length of event id/string\nRX_evtype    ds  x                   event type\nRX_option    ds  x                   suppression option\nRX_suppress  equ c'S'                 - suppress msg/cmd\nRX_action    ds  x                   immediate action type\nRX_ac_cmd    equ c'C'                 - action = cmd\nRX_ac_msg    equ c'M'                 - action = msg\nRX_ac_rpy    equ c'R'                 - action = reply\n             ds  x                   reserved\nRX_aclen     ds  h                   action text length\nRX_acptr     ds  a(*-*)              action text address\nRX_waitnum   ds  h                   num of awaiting ECBs\nRX_postnum   ds  h                   num of posted ECBs\n.tracefld anop\n          space ,\n* +--------------------------------+\n* | Abend trace info fields        |\n* +--------------------------------+\n          space ,\n          org   SVAabtrace          redefine abend trace info\nSVA_trace      dc   x'00'           trace byte 0\nSVA_tr_base    equ  c'0'             - base module\nSVA_tr_ssi     equ  c'1'             - SSI initializer\nSVA_tr_cmd     equ  c'2'             - commands listener\nSVA_tr_msg     equ  c'3'             - messages listener\nSVA_tr_rmg     equ  c'4'             - RMG routine\nSVA_tr_wait    equ  c'5'             - function wait\nSVA_tr_set     equ  c'6'             - function set\nSVA_tr_any     equ  c'7'             - function wait any event\nSVA_trace1     dc   x'00'           trace byte 1\nSVA_tr1_evuser equ  c'a'             - user trapping event\nSVA_tr1_inrmg  equ  c'b'             - init RMG routine\nSVA_tr1_actssi equ  c'c'             - activating SSI\nSVA_tr1_offssi equ  c'd'             - inactivating SSI\nSVA_tr1_qryssi equ  c'e'             - querying SSI\nSVA_tr1_dynlpa equ  c'f'             - installing dynamic LPA\nSVA_tr1_srdlpa equ  c'g'             - searching dynamic LPA\nSVA_tr1_srnlpa equ  c'h'             - searching NIP LPA\nSVA_tr1_dellpa equ  c'i'             - deleting dynamic LPA\nSVA_tr1_abort  equ  c'j'             - abofrting user's EVB\nSVA_tr1_comssi equ  c'k'             - accessing COM area\nSVA_tr1_scsr   equ  c'l'             - accessing COM area\nSVA_tr1_insvc  equ  c'm'             - installing ESR SVC\nSVA_tr1_ulist  equ  c'n'             - listing out users\nSVA_trace2     dc   x'00'           trace byte 2\nSVA_tr2_evusrq equ  c'A'             - enqueue in user event trapping\nSVA_tr2_enqlpa equ  c'B'             - enqueue for dyhnamic LPA\nSVA_tr2_insvcq equ  c'C'             - enqueue for SVC installation\n          org   ,\n*VAtrinfo ds    cl26                trace info text\n*         ds    cl2\nSVAdomtb  ds    0d\nSVAuserareasize equ *-SVAuserarea\nSVASIZE   EQU   *-SVA\n          EJECT ,\n          AIF   ('&TYPE' NE 'CSECT').EXIT\n          END   CBTSVA\n.EXIT     ANOP\n          MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CBTTRTAB": {"ttr": 785, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x07)\\x0f\\x01\\x07)\\x0f\\x054\\x00d\\x00d\\x00\\x00\\xc4\\xc5\\xd9\\xe4@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-10-17T00:00:00", "modifydate": "2007-10-17T05:34:30", "lines": 100, "newlines": 100, "modlines": 0, "user": "DERU"}, "text": ".*\n.*\n.*                    +----------+\n.*    MODULE NAME  -  | CBTTRTAB |\n.*                    +----------+\n.*\n.*    Function -\n.*            Source copy module contains TRanslate tables\n.*\n.*    Syntax -\n.*\n.*\n.*    Operation -\n.*\n.*\n.*    Author -\n.*         Name     :  Deru Sudibyo\n.*                     Technical Consultant\n.*                     Computer Associates\n.*                     Indonesia Office\n.*                     Wisma BNI-46 34th floor, BNI-46 City\n.*                     Jl. Jend. Sudirman, Kav 1, Jakarta Pusat\n.*         Copyright:  (C)1998 Deru Sudibyo\n.*\n.*    Disclaimer -\n.*        This macro is developed as a personal support, and is\n.*        not a part of CA support matterials.  The purpose is as\n.*        a temporary solution or even just a sample.  Therefor,\n.*        further modifications and maintenance are client's\n.*        responsibilities.\n.*\n.*    Modification Log -\n.*    +--------+------------+--------+---------------------------+\n.*    | Date   | Engineer   | V.R.L. | Description               |\n.*    +--------+------------+--------+---------------------------+\n.*    |98/02/20| DERU S.    | 1.0.0. | FIRST DEVELOPMENT         |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    |        |            |        |                           |\n.*    +--------+------------+--------+---------------------------+\n.*\n         aif   (&DERTRTB).trtdone\n&DERTRTB_leap     setc 'DERtrt&SYSNDX._leap'\n&DERTRTB_nonleap  setc 'DERtrt&SYSNDX._nonleap'\n&DERTRTB_dec2bin  setc 'DERtrt&SYSNDX._dec2bin'\n&DERTRTB_hex2chr  setc 'DERtrt&SYSNDX._hex2chr'\n&DERTRTB_hex2bin  setc 'DERtrt&SYSNDX._hex2bin'\n&DERTRTB_hex2binz setc 'DERtrt&SYSNDX._hex2binz'\n&DERTRTB_dec2chr  setc 'DERtrt&SYSNDX._dec2chr'\n&DERTRTB_over     setc 'DERtrt&SYSNDX._over'\n&DERTRTB_null80   setc 'DERtrt&SYSNDX._null80'\n&DERTRTB_blank80  setc 'DERtrt&SYSNDX._blank80'\n&DERTRTB_zebra    setc 'DERtrt&SYSNDX._zebra'\n         b     &DERTRTB_over\n*                         3 1 3 2  3  2  3  3  2  3  2  3\n&DERTRTB_leap    dc al1(0,3,4,7,9,12,14,17,20,22,25,27,30)\n*                         3 0 3 2  3  2  3  3  2  3  2  3\n&DERTRTB_nonleap dc al1(0,3,3,6,8,11,13,16,19,21,24,26,29)\n*                         1 2 3 4  5  6  7  8  9 10 11 12\n*\n&DERTRTB_dec2bin dc al1(0,01,02,03,04,05,06,07,08,09,00,00,00,00,00,00)\n         dc     al1(10,11,12,13,14,15,16,17,18,19,00,00,00,00,00,00)\n         dc     al1(20,21,22,23,24,25,26,27,28,29,00,00,00,00,00,00)\n         dc     al1(30,31,32,33,34,35,36,37,38,39,00,00,00,00,00,00)\n         dc     al1(40,41,42,43,44,45,46,47,48,49,00,00,00,00,00,00)\n         dc     al1(50,51,52,53,54,55,56,57,58,59,00,00,00,00,00,00)\n         dc     al1(60,61,62,63,64,65,66,67,68,69,00,00,00,00,00,00)\n         dc     al1(70,71,72,73,74,75,76,77,78,79,00,00,00,00,00,00)\n         dc     al1(80,81,82,83,84,85,86,87,88,89,00,00,00,00,00,00)\n         dc     al1(90,91,92,93,94,95,96,97,98,99,00,00,00,00,00,00)\n&DERTRTB_hex2chr dc C'0123456789ABCDEF'\n*\n&DERTRTB_hex2bin dc 256x'00'\n         org    &DERTRTB_hex2bin+c'a'\n         dc     al1(10,11,12,13,14,15)\n         org    &DERTRTB_hex2bin+c'A'\n         dc     al1(10,11,12,13,14,15)\n         org    &DERTRTB_hex2bin+c'0'\n         dc     al1(00,01,02,03,04,05,06,07,08,09)\n         org    ,\n&DERTRTB_hex2binz dc 256x'00'\n         org    &DERTRTB_hex2binz+c'a'\n         dc     al1(160,176,192,208,224,240)\n         org    &DERTRTB_hex2binz+c'A'\n         dc     al1(160,176,192,208,224,240)\n         org    &DERTRTB_hex2binz+c'0'\n         dc     al1(00,16,32,48,64,80,96,112,128,144)\n         org    ,\n&DERTRTB_null80  ds 0xl80'00'\n         dc     80x'00'\n&DERTRTB_blank80 ds 0xl80'40'\n         dc     80x'40'\n&DERTRTB_zebra   ds 0xl80'00'\n         dc     40x'FF00'\n&DERTRTB setb   1\n&DERTRTB_over equ *\n.trtdone anop\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT770/CBT.V500.FILE770.PDS/MACLIB.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT770/CBT.V500.FILE770.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}