{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011605000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 2880514, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 78, "INMDSNAM": "CBT.V500.FILE254.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 2880514, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 2880514, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE254.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x002\\x1a'", "DS1TRBAL": "b'2\\xbc'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xc5\\x00\\x03\\x01\\xc8\\x00\\x08\\x003'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x96\\x00O\\x00\\x96\\x00O\\x17\\x12\\x00\"\\x00\"\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1996-01-04T00:00:00", "modifydate": "1996-01-04T17:12:00", "lines": 34, "newlines": 34, "modlines": 0, "user": "SBGCSC"}, "text": "This is the CNTL library for Jeff Kaplan's collection of software.\n\nThis collection is currently in the condition of 'hodge-podge',\nhowever, there is much useful material here.\n\n    File 252 contains Jeff Kaplan's   SOURCE   library\n    File 253 contains Jeff Kaplan's   EXEC     library\n    File 254 contains Jeff Kaplan's   CNTL     library\n    File 255 contains Jeff Kaplan's   ISPPLIB  library\n    File 256 contains Jeff Kaplan's   ISPTLIB  library\n\nNothing is GUARANTEED to work anywhere else.  The user will have to\n-------\n              \"look and try\".......    However, there is much good\n              code in this collection, including numerous direct\n              calls to SVC 26.\n\n   I am (sort of) an intermediary between Jeff Kaplan and the public.\nHowever, his direct work phone is:  215-633-4614.\n\n   If you can't reach Jeff at work, please try:\n\n          Sam Golob\n          P.O. Box 423\n          Howell, New Jersey  07731-0423\n          908-901-0943\n          718-403-8666   daytime\n\nNote:  Jeff's CNTL library also contains Assembler Source and REXX\n       execs.  Please explore ALL files in this collection.  As of\n       this cut of the tape, I have not sifted through all of Jeff's\n       stuff and straightened it out.  There may also be some\n       duplication of source code or REXX execs.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$#DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x952_\\x00\\x96\\x00O\\x18%\\x00P\\x00%\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1995-11-21T00:00:00", "modifydate": "1996-01-04T18:25:00", "lines": 80, "newlines": 37, "modlines": 0, "user": "SBGCSC"}, "text": " This is a partial list of some of the things in this collection.\n\n\n     ABENDWTO  -  Somewhat shop-dependent code which shows how\n                  to scan for abends and return codes from\n                  previous steps in the same job.  Then, if\n                  there is a bad return code or abend, save all\n                  the temporary files.\n\n     ABINDEX   -  Shop-dependent.  Shows how to create hiperspace\n                  etc.\n\n     B2C       -  REXX binary-to-character conversion function.\n\n     CATEDIT   -  Update an ICF Catalog in-place using QSAM\n                  PUTX.  Purpose is to convert all files\n                  cataloged to 3480's or 3490's into 3490e's.\n                  (Interesting code.  Has to be authorized nowadays.)\n\n     DYNADSN   -  Dynamically alters dsnames in succeeding\n                  steps of a job.\n\n     DYNATEST  -  JCL to test DYNADSN.\n\n     FINDEXEC  -  EXEC to find where an EXEC is.\n\n     FINDLLIB  -  EXEC to find an ISPLLIB member.\n\n     FINDLOAD  -  EXEC to find a load module in the link list.\n\n     FINDMLIB  -  EXEC to find an ISPF message member.\n\n     FINDPLIB  -  Exec to find an ISPF panel.\n\n     FINDSLIB  -  Exec to find an ISPF skeleton.\n\n     FINDTLIB  -  Exec to find an ISPF table.\n\n     FREEALL   -  TSO Free All command\n\n     GRSUSER   -  TSO Command that can be used from an ISPF\n                  3.4 list to determine who has the file.\n\n     IGDACSMC  -  SMS ACS management class exit that can\n                  dynamically change ACS variables.\n\n     LINKLIST  -  Lists libraries in the link list.\n\n     LPAR      -  (Modify to work in another shop)\n                  Tells CPUID, etc.\n\n     RACFUSER  -  TSO Command to display some RACF user data.\n\n     RACFUSR1  -  Similar to RACFUSER.\n\n     SLEEPSRC  -  SLEEP command from REXX.\n\n     TIMEOUT   -  TSO/E Command to dynamically set TIME=1440\n                  for your id.\n\n     VMFCLEAR  -  TSO/E Clear Screen - like VM.\n\n     XDSL      -\n\n     XDSLSRC   -  External 3.4.  But shop dependent.  See\n                  catalog access code in this member.  Direct\n                  SVC 26 calls.\n\n     XLIBALLD  -  TSO doesn't support SUBSYS= accesses that JCL\n                  supports.  This allows these allocations in TSO.\n                  Used for allocation LIBRARIAN datasets on TSO.\n\n     XLIBALLS  -\n\n     XLIBMEML  -  \"Member Exists\" REXX function.\n\n     XLIBMEMX  -  \"Member Exists\" REXX function.\n\n     XLISTA    -  LISTALC with a better format.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ABENDSAM": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00\\x00\\x00\\x93'\\x1f\\x00\\x95%_\\x11'\\x00\\x1e\\x00\\x14\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf0\\xf2@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "1993-09-28T00:00:00", "modifydate": "1995-09-12T11:27:00", "lines": 30, "newlines": 20, "modlines": 0, "user": "TECH102"}, "text": "// JOB\n//STEP010 EXEC PGM=\n//...   DD DSN=&&T1,DISP=(NEW,PASS),...\n//...   DD DSN=&&T2,DISP=(NEW,PASS),...\n//*\n//IFCHK020 IF (STEP010.RUN | STEP010.ABEND) THEN\n//STEP020 EXEC PGM=ABENDWTO,PARM='FAILRC08'\n// ENDIF\n//*\n//STEP030 EXEC PGM=\n//...   DD DSN=&&T1,DISP=(OLD,PASS),...\n//...   DD DSN=&&T3,DISP=(NEW,PASS),...\n//*\n//IFCHK040 IF (STEP030.RUN | STEP030.ABEND) THEN\n//STEP040 EXEC PGM=ABENDWTO,PARM='FAILRC01'\n//SAVE1 DD DSN=&&T1,DISP=(OLD,DELETE,KEEP)\n//SAVE2 DD DSN=&&T2,DISP=(OLD,PASS)\n// ENDIF\n//*\n//* RC4 FROM STEP050 IS CONSIDERED A NORMAL FLUSH OF REMAINDER OF JOB\n//STEP050 EXEC PGM=\n//...   DD DSN=&&T2,DISP=(OLD,PASS),...\n//...   DD DSN=&&T3,DISP=(OLD,PASS),...\n//*\n//IFCHK060 IF ((STEP050.RUN & STEP050.RC \u00ac=4) | STEP050.ABEND) THEN\n//STEP060 EXEC PGM=ABENDWTO,PARM='FAILRC01'\n//SAVE1 DD DSN=&&T2,DISP=(OLD,DELETE,KEEP)\n//SAVE2 DD DSN=&&T3,DISP=(OLD,DELETE,KEEP)\n// ENDIF\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABENDTST": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0f\\x00\\x00\\x00\\x93'?\\x00\\x93'O\\x16\\x05\\x00\\x14\\x01c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.15", "flags": 0, "createdate": "1993-09-30T00:00:00", "modifydate": "1993-10-01T16:05:00", "lines": 20, "newlines": 355, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n/*JOBPARM S=SYSB\n//STEP2 EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD DUMMY\n//SYSUT1 DD *\nTEST1\nTEST2\n//SYSUT2 DD DSN=&&TEST,DISP=(NEW,PASS),VOL=(,,,3),\n//  SPACE=(CYL,(1,1)),STORCLAS=PREALLOC,DCB=BUFNO=32\n//STEP3 EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//IFSTEP3 IF (STEP3.RUN | STEP3.ABEND) THEN\n//STEP4 EXEC PGM=ABENDWTO,PARM='FAILRC12'\n//STEPLIB DD DSN=TECH110.USER.LOADLIB,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//SAVE2 DD DSN=&&TEST,DISP=(OLD,DELETE)\n// ENDIF\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRINCR": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x92\\x19\\x9f\\x00\\x92 /\\x11\\x13\\x00%\\x00w\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-07-17T00:00:00", "modifydate": "1992-07-20T11:13:00", "lines": 37, "newlines": 119, "modlines": 0, "user": "TECH110"}, "text": "//ABRINCR  JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//STEP01 EXEC PGM=FDRABR,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSPRIN1 DD SYSOUT=*\n//SYSPRIN2 DD SYSOUT=*\n//SYSPRIN3 DD SYSOUT=*\n//SYSPRIN4 DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//TAPE1    DD DSN=ABRINCR1,UNIT=CART,DISP=(,KEEP),VOL=(,,,255)\n//TAPE2    DD DSN=ABRINCR2,UNIT=CART,DISP=(,KEEP),VOL=(,,,255)\n//TAPE3    DD DSN=ABRINCR3,UNIT=CART,DISP=(,KEEP),VOL=(,,,255)\n//TAPE4    DD DSN=ABRINCR4,UNIT=CART,DISP=(,KEEP),VOL=(,,,255)\n//SYSIN   DD *\n  DUMP TYPE=ABR,ONLINE,AUTOUPD=YES,BUFNO=MAX,COMPRESS=ALL,\n       DATA=USED,DSNENQ=USE,ENQ=RESERVE,ENQERR=NO,ENQERR=PROCESS,\n       FORMAT=NEW,LBPZERO=INVALID,SMSCONSTRUCT=YES,\n       SMSMANAGE=YES,MAXCARDS=9999\n  SELECT  CATDSN=**\n  EXCLUDE DSN=HSM.HMIG.T**\n  EXCLUDE DSN=SYS%.*.AUXTRACE\n  EXCLUDE DSN=SYS%.*.DFHDUMP**\n  EXCLUDE DSN=SYS%.BRODCAST\n  EXCLUDE DSN=SYS%.CSA**\n  EXCLUDE DSN=SYS%.DAE\n  EXCLUDE DSN=SYS%.DUMP**\n  EXCLUDE DSN=SYS%.HASP**\n  EXCLUDE DSN=SYS%.LOCAL**\n  EXCLUDE DSN=SYS%.LOGREC\n  EXCLUDE DSN=SYS%.MAN**\n  EXCLUDE DSN=SYS%.NPM.SYSMDUMP\n  EXCLUDE DSN=SYS%.PLPA**\n  EXCLUDE DSN=SYS%.SDSF.HASP**\n  EXCLUDE DSN=SYS%.STGINDEX\n  EXCLUDE DSN=SYS%.XCF**\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ABRUCAT": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x92!o\\x00\\x93\\x12o\\x113\\x00\\x15\\x00%\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1992-08-03T00:00:00", "modifydate": "1993-05-06T11:33:00", "lines": 21, "newlines": 37, "modlines": 0, "user": "TECH110"}, "text": "//TECH110K JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//* BACKUP FDR/ABR USERCAT FOR DISASTER RECOVERY\n//* THIS ICF CATALOG MUST BE RESTORED TO A 3390 DASD DEVICETYPE\n//* FDRDSF WILL AUTOMATICALLY ADJUST THE VOLSER FOR CATALOG\n//* SELF-DEFINING RECORDS UPON RESTORE\n//* THE CATALOG WILL BE AUTOMATICALLY CONNECTED ON THE TARGET SYSTEM\n//* THE ALIAS OF FDRABR MUST BE MANUALLY CREATED\n//* THE ALIAS OF #      MUST BE MANUALLY CREATED\n//STEP01 EXEC PGM=FDRDSF,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSPRIN1 DD SYSOUT=*\n//DISK1    DD DSN=SYS1.UCATABR.CLUSTER,DISP=OLD\n//TAPE1    DD DSN=SYSS.COMDISCO.ABRUCAT,DISP=OLD\n//SYSIN   DD *\n  DUMP TYPE=DSF,BUFNO=MAX,COMPRESS=ALL,DATA=ALL,\n       DSNENQ=USE,ENQ=OFF,ENQERR=NO,ENQERR=PROCESS,\n       FORMAT=NEW,LBPZERO=INVALID,MAXERR=1\n  SELECT DD=DISK1\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ADDDSD": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x00\\x00\\x912\\x1f\\x00\\x92\\x02\\x7f\\x11V\\x00}\\x00v\\x00}\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "1991-11-17T00:00:00", "modifydate": "1992-01-27T11:56:00", "lines": 125, "newlines": 118, "modlines": 125, "user": "TECH110"}, "text": "/* REXX EXEC to build ADDDSD RACF profiles */\ntrue=1; false=0;\nuaccflag=false;\nuaccflag2=false;\naccflag=false;\naccflag2=false;\nolinectr=1;\ngroups=\"TECHSUPT STORSYS POLLING\";\n\"ALLOC F(INP) DA('SRTY001.ESA.ACCESS') SHR UNIT(3390) VOL(MCS001)\";\n\"ALLOC F(IN2) DA('SRTY001.ESARACF.CONVERT') SHR\" ,\n         \"UNIT(3390) VOL(MCS001)\";\n\"ALLOC F(OUT) DA('TECH110.USER.CNTLLIB(RACFDSD)') SHR\";\n\"EXECIO * DISKR INP (FINIS STEM ILINE.\";\n\"EXECIO * DISKR IN2 (FINIS STEM ILINE2.\";\n\"FREE F(INP)\";\n\"FREE F(IN2)\";\ncnvlist=\"\";\ndo index=1 to iline2.0; /* build conversion list */\n    parse var iline2.index p1 p2;\n    p1=strip(p1);p2=strip(p2);\n    if p2=\"\" then p2=p1;\n    cnvlist=cnvlist p1 p2;\nend;\ndo index=1 to iline.0;\n     iline.index=substr(iline.index,2); /* skip column 1 */\n     if \u00acuaccflag & \u00acaccflag then do;\n          if wordpos(\"INFORMATION FOR DATASET\",iline.index)\u00ac=0 then do;\n                parse var iline.index . \"DATASET\" profname . ;\n                parse var profname hlq \".\" dsnrem ;\n                dsnrem=strip(dsnrem);\n                if substr(hlq,1,3)=\"SYS\" | hlq=\"BUILDING\" then ,\n                     iterate index;\n                x= wordpos(hlq,cnvlist);\n                if x\u00ac=0 then do;\n                     y=word(cnvlist,x+1);\n                     if y=\"DELETE\" then iterate index; /* skipdsd*/\n                     if y=\"TECHSUPT\" then iterate index;\n                     if hlq\u00ac=y & wordpos(y,groups)=0 then ,\n                            profname=y\".\"dsnrem;\n                     end;\n                  else iterate index; /* not found */\n                uaccflag=true; /* looking for uacc */\n                if substr(profname,length(profname)-1,2)=\".*\" then ,\n                     profname=profname\"*\";\n                 else if substr(profname,length(profname),1)=\"*\" then ,\n                     profname=profname\".**\";\n                iterate index;\n                end;\n          else iterate index;\n          end;\n     else if uaccflag then do;\n          if \u00acuaccflag2 then do;\n                if wordpos(\"UNIVERSAL ACCESS\",iline.index)\u00ac=0 then do;\n                     uaccflag2=true;\n                     iterate index;\n                     end;\n             iterate index;\n             end;\n          else do;\n             if word(iline.index,1)=\"-----\" then iterate index;\n             uacc = word(iline.index,3);\n             uaccflag=false;uaccflag2=false;accflag=true;\n             pelist=\"\";\n             oline.olinectr=\"AD '\"profname\"' GENERIC -\";\n             olinectr = olinectr+1;\n             oline.olinectr=\"   OWNER(SECURITY) UACC(\"uacc\")\";\n             olinectr = olinectr+1;\n             iterate index;\n             end;\n       end;\n     else if accflag then do;\n          if \u00acaccflag2 then do;\n                if word(iline.index,1)=\"ID\" & ,\n                   word(iline.index,2)=\"ACCESS\" then do;\n                     accflag2=true;\n                     iterate index;\n                     end;\n             iterate index;\n             end;\n          else do;\n             if word(iline.index,1)=\"--------\" then iterate index;\n             if iline.index=\" \" then iterate index;\n             if word(iline.index,1)=\"PROGRAM\" then do;\n                 accflag=false;accflag2=false;\n                 if wordpos(\"TESTSYS\",pelist)\u00ac=0 then do;\n                      tstr=wordpos(\"TESTSYS\",pelist);\n                      tacc=tstr+1;\n                      tacc=word(pelist,tacc);\n                      pelist=delword(pelist,tstr,2);\n                      pelist=pelist \"FASHNBUG\" tacc ,\n                           \"CORPSVC1\" tacc,\n                           \"CORPSVC2\" tacc,\n                           \"STORSYS\" tacc,\n                           \"DEVCNTR\" tacc,\n                           \"INFOCNTR\" tacc;\n                      end;\n                 pelist = pelist \"TEMPUSER NONE\";\n                 pectr=words(pelist);\n                 do peptr = 1 to pectr by 2;\n                   peid=word(pelist,peptr);\n                   peac=word(pelist,peptr+1);\n                   oline.olinectr=\"      PE '\"profname\"' GENERIC -\";\n                   olinectr = olinectr+1;\n                   oline.olinectr=\"         ID(\"peid\") ACCESS(\"peac\")\";\n                   olinectr = olinectr+1;\n                 end;\n                 iterate index;\n                 end;\n             peid=word(iline.index,1);\n             if peid=\"SUPTEST\" then peid=\"TESTSYS\"; /* sub */\n             else do;\n                x=wordpos(peid,cnvlist); /* convert */\n                if x=0 then iterate index;\n                y=word(cnvlist,x+1);\n                if y=\"DELETE\" then iterate index;\n                peid=y; /* reset */\n                end;\n             peac=word(iline.index,2);\n             if wordpos(peid,pelist)\u00ac=0 then iterate index;\n             pelist=pelist peid peac; /* add to permit list */\n             end;\n       end;\nend;\n\"EXECIO * DISKW OUT (FINIS STEM OLINE.\";\n\"FREE F(OUT)\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ALLOC": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x91\\x02\\x9f\\x00\\x915\\x1f\\x138\\x00 \\x00\\x1e\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1991-01-29T00:00:00", "modifydate": "1991-12-17T13:38:00", "lines": 32, "newlines": 30, "modlines": 0, "user": "TECH110"}, "text": "PROC 0 DEBUG\n\n           ALLOCATE DSNAME('TECH110.N.CTN.TRACK.FILE') +\n                    DDNAME(DD1) +\n                    SPACE(2,2) CYLINDERS +\n                    UNIT(SYSDA) +\n                    DSORG(PS) +\n                    LRECL(80) +\n                    BLKSIZE(23680) +\n                    RECFM(F,B) +\n                    MOD\n\n           IF &LASTCC NE 0 THEN +\n           GOTO ERROR\n\n           OPENFILE DD1 OUTPUT\n           CLOSFILE DD1\n\n           FREE DD(DD1)\n           GOTO EXIT\n\nERROR:     WRITE\n           WRITE ALLOCATE \"ERROR\" !!!!\n           WRITE\n           WRITE CHECK ERROR MESSAGES\n           GOTO END\n\nEXIT:      WRITE\n           WRITE ALLOCATE \"SUCCESSFUL\" !!!!\n           WRITE\n\nEND:     EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ALTERM": {"ttr": 534, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00\\x92'_\\x00\\x92'_\\x14@\\x00\\x13\\x00\\x13\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-10-01T00:00:00", "modifydate": "1992-10-01T14:40:00", "lines": 19, "newlines": 19, "modlines": 4, "user": "TECH110"}, "text": "/* REXX EXEC to find dsns to alter                           */\n\"ALLOCATE F(OUTPUT) DA('TECH110.USER.CNTLLIB(ALTLISTM)') SHR\";\ndummy = outtrap(\"altrlist.\");\n\"LISTC LEVEL('SYST') NAMES CAT('SYS1.UCATSM.CLUSTER')\";\ndummy = outtrap(\"OFF\");\nj=1;\ndo i =1 to altrlist.0;\n   parse upper var altrlist.i . . dsname;\n   dsname = strip(dsname);\n   parse var dsname hlq \".\" remainder;\n   newdsname=\"SYSM.\"remainder;\n   outline.j=\" ALTER\" dsname \"-\";\n   j=j+1;\n   outline.j=\" NEWNAME(\"newdsname\") -\";\n   j=j+1;\n   outline.j=\" CAT(SYS1.UCATSM.CLUSTER)\";\n   j=j+1;\nend;\n\"EXECIO * DISKW OUTPUT (STEM OUTLINE. FINIS\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ALTERS": {"ttr": 536, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x911\\x8f\\x00\\x911\\x8f!S\\x00\\x13\\x00[\\x00\\x12\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-11-14T00:00:00", "modifydate": "1991-11-14T21:53:00", "lines": 19, "newlines": 91, "modlines": 18, "user": "TECH110"}, "text": "/* REXX EXEC to find dsns to alter                           */\n\"ALLOCATE F(OUTPUT) DA('TECH110.USER.CNTLLIB(ALTLIST)') SHR\";\ndummy = outtrap(\"altrlist.\");\n\"LISTC LEVEL('SYSA') NAMES CAT('SYS1.MCATSYSA.CLUSTER')\";\ndummy = outtrap(\"OFF\");\nj=1;\ndo i =1 to altrlist.0;\n   parse upper var altrlist.i . . dsname;\n   dsname = strip(dsname);\n   parse var dsname hlq \".\" remainder;\n   newdsname=\"SYS1.\"remainder;\n   outline.j=\" ALTER\" dsname \"-\";\n   j=j+1;\n   outline.j=\" NEWNAME(\"newdsname\") -\";\n   j=j+1;\n   outline.j=\" CAT(SYS1.MCATSYSA.CLUSTER)\";\n   j=j+1;\nend;\n\"EXECIO * DISKW OUTPUT (STEM OUTLINE. FINIS\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "AMASPZAP": {"ttr": 538, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x00\\x00\\x94\\x06o\\x00\\x951\\x8f\\x150\\x00\\t\\x00\\t\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "1994-03-07T00:00:00", "modifydate": "1995-11-14T15:30:00", "lines": 9, "newlines": 9, "modlines": 4, "user": "TECH110"}, "text": "//TECH110K JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=AMASPZAP,REGION=8M\n//SYSLIB DD DSN=SYS1.DB2.V3R1M0.SDSNLINK,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  NAME  DSN3INI\n  DUMPT DSN3INI\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AMAZAP2": {"ttr": 540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x95\\x10O\\x00\\x95)\\x7f\\x13H\\x00\\x0f\\x00\\x0e\\x00\\x08\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1995-04-14T00:00:00", "modifydate": "1995-10-24T13:48:00", "lines": 15, "newlines": 14, "modlines": 8, "user": "TECH110"}, "text": "//TECH110K JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=AMASPZAP,REGION=8M\n//SYSLIB DD DSN=SYS1.UPSTREAM.V2R4M4.LOADLIB,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  NAME UST020U UST020U\n  VER 00E4 C2F3C809,B7A1C2A6\n  VER 01C2 C3E8D209\n  VER 043C C335D559\n  REP 00E4 C2F3C809,B7A1C2A6\n  REP 01C2 C3E8D209\n  REP 043C C33535B9\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AMBLIST": {"ttr": 542, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x00\\x00\\x911\\x7f\\x00\\x951\\x8f\\x152\\x00\\n\\x00\\x14\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1991-11-13T00:00:00", "modifydate": "1995-11-14T15:32:00", "lines": 10, "newlines": 20, "modlines": 6, "user": "TECH110"}, "text": "//TECH110K JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=AMBLIST,REGION=8M\n//SYSLIB DD DSN=SYS1.DB2.V3R1M0.SDSNLINK,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n LISTLOAD OUTPUT=XREF,MEMBER=DSN3INI\n LISTIDR MEMBER=DSN3INI\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AMSGQ": {"ttr": 770, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x95\\x10\\x1f\\x00\\x95\\x10/\\x15\\x04\\x00\\x86\\x00T\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1995-04-11T00:00:00", "modifydate": "1995-04-12T15:04:00", "lines": 134, "newlines": 84, "modlines": 0, "user": "TECH110"}, "text": "//TECH110L JOB (5304010530000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//ASM EXEC ASMHCL,PARM.L='AC=1,LIST,XREF'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN DD *\nMSGQ     TITLE 'MESSAGE QUEUEING SUBSYSTEM'\nMSGQ     CSECT ,\n         SYSSTATE ASCENV=P PRIMARY ASC MODE\nMSGQ     AMODE 31\nMSGQ     RMODE 24\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nAR0      EQU   0\nAR1      EQU   1\nAR2      EQU   2\nAR3      EQU   3\nAR4      EQU   4\nAR5      EQU   5\nAR6      EQU   6\nAR7      EQU   7\nAR8      EQU   8\nAR9      EQU   9\nARA      EQU   10\nARB      EQU   11\nARC      EQU   12\nARD      EQU   13\nARE      EQU   14\nARF      EQU   15\n         BAKR  RE,0 SAVE CALLERS STATUS ON LINKAGE STACK RETRG IS R14\n         LAE   RA,0(,RF) SETUP ADDRESSING REGS GR/AR PRMY SPACE MODE\n         USING MSGQ,RA,RB\n         LAE   RB,4095(,RA) ...\n         LAE   RB,1(,RB) ...\n         SAC   0   SWITCH TO PRIMARY MODE\n         LA    RD,SAVEAREA PTR TO MY SAVEAREA\n         MVC   SAVEAREA+4(4),=C'F1SA' INDICATE REGS SAVED ON STACK\n         USING PSA,R0\n         L     R2,FLCCVT MAP CVT\n         DROP  R0\n         USING CVT,R2\n         L     R2,CVTJESCT MAP JES SSCVT\n         DROP  R2\n         USING JESCT,R2\n         L     R2,JESSSCT MAP SSCT CHAIN\n         DROP  R2\n         USING SSCT,R2\nSCANSSCT CLC   =C'MSGQ',SSCTSNAM OUR SUBSYSTEM ?\n         BE    MSGQSSYS FOUND\n         ICM   R2,15,SSCTSCTA NEXT SSCVT\n         BNZ   SCANSSCT LOOP THRU ALL SSCVTS\n         B     NOSSCVT  NOT FOUND AT ALL\nMSGQSSYS EQU   * * R2 PTR TO MSGQ SSCVT\n         LA    R3,VTSPARML FORMAT SSVT CREATE PARM LIST\n         USING VTSPL,R3\n         XC    VTSPL(VTSSIZE),VTSPL CLEAR\n         MVC   VTSID,=C'VTSP' ID\n         MVC   VTSLEN,=AL2(VTSSIZE) CB SIZE\n         MVI   VTSVER,VTSCVER VERSION CONTROL\n         OI    VTSFLGS,VTSGLOAD LOAD SSSM TO GLOBAL\n         OI    VTSREQ,VTSCREAT SSVT CREATE FUNCTION\n         MVC   VTSNME,SSCTSNAM SUBSYS NAME\n         MVC   VTSSVTD,=A(SSVTDATA) PTR SSVT DATA\n         ST    R2,VTSSSCVT SSCVT PTR\n         LA    R4,SSVTDATA FORMAT SSVT DATA PASSED TO CREATE SERV\n         USING JSBVT,R4\n         XC    JSBHDR(JSBVTLT),JSBHDR CLEAR\n         MVC   JSBID,=C'JSBV' ID\n         MVC   JSBLEN,=AL2(JSBVTLT) CB SIZE\n         MVI   JSBVERS,JSBCVERS VERSION CONTROL\n         MVC   JSBFUN,=AL2(1) SSSM FUNCTION ROUTINE COUNT\n         MVI   JSBSPL,241 SUBPOOL FOR SSVT CREATE\n         MVC   JSBMAXFR,JSBFUN SSSM FUNCTION ROUTINE COUNT MAX\n         LA    R4,JSBVTLT(,R4) SKIP PAST FIXED HEADER\n         DROP  R4\n         USING JSBTBL,R4\n         MVC   JSBLGTH,=AL2(JSBTBLGT+5*(JSBCDLGT)) LEN FUNC DATA/CODE\n         MVC   JSBNME,=CL8'MSGQSSSM' SUBSYSTEM ROUTINES\n         MVC   JSBNUM,=AL2(5) FUNCTION CODE COUNT\n         LA    R4,JSBTBLGT(,R4) SKIP PAST FUNC ROUTINE DATA AREA\n         DROP  R4\n         USING JSBFCODG,R4\n         MVC   JSBFCOD(10),=AL2(SSOBCONV,SSOBAGRP,SSOBOPEN,SSOBCLOS,SSOX\n               BUNAL) C/I,GROUP ALLOC,OPEN,CLOSE,UNALLOC\n         DROP  R4\n         MODESET MODE=SUP,KEY=ZERO ENTER PROPER STATE\n         XC    SSCTSSVT,SSCTSSVT COLD START SUBSYSTEM\n         LA    R1,VTSPTR CALL SSVT CREATE\n         LINK  EP=IEFJSVEC\n         LTR   RF,RF OKAY ?\n         BNZ   SSCVTF SSCVT CREATE FAILURE\n         MVC   SSCTSSVT,VTSSVTAD ENABLE SUBSYS; CHAIN SSVT TO SSCVT\n         WTO   'MSGQ SUBSYSTEM IS ENABLED'\nEXITNORM SAC   0 SWITCH TO PRIMARY MODE\n         SLR   RF,RF RC=0\n         PR    , RESTORE CALLERS STATUS\nNOSSCVT  SAC   0 SWITCH TO PRIMARY MODE\n         LA    RF,24 TERM WITH SEVERE RC\n         PR    , RESTORE CALLERS STATUS\nSSCVTF   SAC   0 SWITCH TO PRIMARY MODE\n         LA    RF,28 TERM WITH SEVERE RC\n         PR    , RESTORE CALLERS STATUS\nSAVEAREA DC    9D'0' LINKAGE\nVTSPTR   DC    A(VTSPARML) PTR TO SSVT SERV ROUTINE PARM LIST\nVTSPARML DC    (VTSSIZE)X'00' PARM LIST\nSSVTDATA DC    0F'0',(JSBVTLT+JSBTBLGT+5*(JSBCDLGT))X'00'\n         LTORG\n         IHAPSA\n         CVT   DSECT=YES\nJESCT    IEFJESCT\n         IEFJSCVT\n         IEFVTSPL\n         IEFJSBVT\n         IEFJSSOB (CI,AL,DA,AG),CONTIG=NO\n         IKJTCB\n         IHARB\n         END\n/*\n//L.SYSLMOD DD DSN=TECH110.MAINT.LOADLIB(MSGQ),DISP=SHR,UNIT=\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AMSGQSSM": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x95\\x10/\\x00\\x95\\x10/\\x157\\x00b\\x00\\x80\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1995-04-12T00:00:00", "modifydate": "1995-04-12T15:37:00", "lines": 98, "newlines": 128, "modlines": 0, "user": "TECH110"}, "text": "//TECH110L JOB (5304010530000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//ASM EXEC ASMHCL,PARM.L='AC=1,LIST,XREF,RENT'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN DD *\nMSGQSSSM TITLE 'MESSAGE QUEUEING SUBSYSTEM'\nMSGQSSSM CSECT ,\nMSGQSSSM AMODE ANY\nMSGQSSSM RMODE ANY\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nAR0      EQU   0\nAR1      EQU   1\nAR2      EQU   2\nAR3      EQU   3\nAR4      EQU   4\nAR5      EQU   5\nAR6      EQU   6\nAR7      EQU   7\nAR8      EQU   8\nAR9      EQU   9\nARA      EQU   10\nARB      EQU   11\nARC      EQU   12\nARD      EQU   13\nARE      EQU   14\nARF      EQU   15\n         SAVE  (14,12),,MSGQSSSM*&SYSDATE*&SYSTIME\n         USING MSGQSSSM,RB,RC\n         LR    RB,RF ADDRESS\n         LA    RC,4095(,RB)\n         LA    RC,1(,RC)\n         LR    R9,R0 MAP SSCVT\n         USING SSCT,R9\n         LR    RA,R1 MAP SSOB\n         USING SSOB,RA MAP SSOB INPUT\n         CLC   SSOBFUNC,=AL2(SSOBCONV)\n         BE    MSGQCONV CONVERTER/INTERP PROCESSING\n         CLC   SSOBFUNC,=AL2(SSOBAGRP)\n         BE    MSGQAGRP GROUP ALLOCATION PROCESSING\n         CLC   SSOBFUNC,=AL2(SSOBOPEN)\n         BE    MSGQOPEN OPEN PROCESSING\n         CLC   SSOBFUNC,=AL2(SSOBCLOS)\n         BE    MSGQCLOS CLOSE PROCESSING\n         CLC   SSOBFUNC,=AL2(SSOBUNAL)\n         BE    MSGQUNAL UNALLOCATION PROCESSING\n         MVC   SSOBRETN,=AL2(0)\n         B     NORMEXIT ????\nMSGQCONV EQU   * *\n         MVC   SSOBRETN,=AL2(SSCIRTOK)\n         B     NORMEXIT\nMSGQAGRP EQU   * *\n         MVC   SSOBRETN,=AL2(SSAGRQOK)\n         B     NORMEXIT\nMSGQOPEN EQU   * *\n         MVC   SSOBRETN,=AL2(SSDMOK)\n         B     NORMEXIT\nMSGQCLOS EQU   * *\n         MVC   SSOBRETN,=AL2(SSDMOK)\n         B     NORMEXIT\nMSGQUNAL EQU   * *\n         MVC   SSOBRETN,=AL2(SSALRTOK)\n         B     NORMEXIT\nMSGQAM   EQU   * *\nNORMEXIT EQU   * *\n         LM    RE,RC,12(RD) RESTORE\n         SLR   RF,RF\n         BSM   R0,RE SSI RETURN\n         LTORG\n         IHAPSA\n         CVT   DSECT=YES\nJESCT    IEFJESCT\n         IEFJSCVT\n         IEFVTSPL\n         IEFJSBVT\n         IEFJSSOB (CI,AL,DA,AG),CONTIG=NO\n         IKJTCB\n         IHARB\n         IEFSSARB\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(MSGQSSSM),DISP=SHR,UNIT=\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ANALDASD": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x94'?\\x00\\x94'?\\x12\\t\\x00H\\x00H\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-09-30T00:00:00", "modifydate": "1994-09-30T12:09:00", "lines": 72, "newlines": 72, "modlines": 0, "user": "TECH110"}, "text": "/* REXX */\nTOTDSCNT09=\"0 0 0\";\nTOTDSCNT1019=\"0 0 0\";\nTOTDSCNT2029=\"0 0 0\";\nTOTDSCNT3039=\"0 0 0\";\nTOTDSCNT4049=\"0 0 0\";\nTOTDSCNT5059=\"0 0 0\";\nTOTDSCNT6069=\"0 0 0\";\nTOTDSCNT7079=\"0 0 0\";\nTOTDSCNT8089=\"0 0 0\";\nTOTDSCNT9099=\"0 0 0\";\n\"ALLOC F(INPUT) DA('TECH110.DASD.USED.REPORT') SHR\";\n\"EXECIO * DISKR INPUT (STEM IN. FINIS\";\nDO I = 1 TO IN.0;\n   PARSE VAR IN.I USEDP KBALLOC KBUSED . ;\n   IF KBUSED=\"\" THEN ITERATE I;\n   IF \u00acDATATYPE(USEDP,\"W\") THEN ITERATE I;\n   IF USEDP=100 & KBALLOC=0 & KBUSED=0 THEN ITERATE I;\n   IF USEDP=0 & KBALLOC=0 & KBUSED=0 THEN ITERATE I;\n   SELECT;\n     WHEN (USEDP<10) THEN UVAR=\"09\";\n     WHEN (USEDP<20) THEN UVAR=\"1019\";\n     WHEN (USEDP<30) THEN UVAR=\"2029\";\n     WHEN (USEDP<40) THEN UVAR=\"3039\";\n     WHEN (USEDP<50) THEN UVAR=\"4049\";\n     WHEN (USEDP<60) THEN UVAR=\"5059\";\n     WHEN (USEDP<70) THEN UVAR=\"6069\";\n     WHEN (USEDP<80) THEN UVAR=\"7079\";\n     WHEN (USEDP<90) THEN UVAR=\"8089\";\n     OTHERWISE UVAR=\"9099\";\n   END;\n   PARSE VALUE VALUE(\"TOTDSCNT\"||UVAR) WITH TOTCNT TOTALL TOTUSED;\n   TOTCNT=TOTCNT+1;\n   TOTALL=TOTALL+KBALLOC;\n   TOTUSED=TOTUSED+KBUSED;\n   INTERPRET  \"TOTDSCNT\"UVAR\"=\"TOTCNT TOTALL TOTUSED;\nEND;\n\"VMFCLEAR\";\nPARSE VALUE VALUE(\"TOTDSCNT\"||\"09\") WITH C0009 A0009 U0009;\nPARSE VALUE VALUE(\"TOTDSCNT\"||\"1019\") WITH C1019 A1019 U1019;\nPARSE VALUE VALUE(\"TOTDSCNT\"||\"2029\") WITH C2029 A2029 U2029;\nPARSE VALUE VALUE(\"TOTDSCNT\"||\"3039\") WITH C3039 A3039 U3039;\nPARSE VALUE VALUE(\"TOTDSCNT\"||\"4049\") WITH C4049 A4049 U4049;\nPARSE VALUE VALUE(\"TOTDSCNT\"||\"5059\") WITH C5059 A5059 U5059;\nPARSE VALUE VALUE(\"TOTDSCNT\"||\"6069\") WITH C6069 A6069 U6069;\nPARSE VALUE VALUE(\"TOTDSCNT\"||\"7079\") WITH C7079 A7079 U7079;\nPARSE VALUE VALUE(\"TOTDSCNT\"||\"8089\") WITH C8089 A8089 U8089;\nPARSE VALUE VALUE(\"TOTDSCNT\"||\"9099\") WITH C9099 A9099 U9099;\nZ=1000000.0;\nSAY \"% USED/ALLOCT:\"LEFT(\"  FILES  \",9)RIGHT(\" GB ALLC \",9)|| ,\n     RIGHT(\" GB USED \",9);\nSAY \"TOTAL 00%-09%:\"LEFT(C0009,9)RIGHT(TRUNC(A0009/Z,2),9)|| ,\n     RIGHT(TRUNC(U0009/Z,2),9);\nSAY \"TOTAL 10%-19%:\"LEFT(C1019,9)RIGHT(TRUNC(A1019/Z,2),9)|| ,\n     RIGHT(TRUNC(U1019/Z,2),9);\nSAY \"TOTAL 20%-29%:\"LEFT(C2029,9)RIGHT(TRUNC(A2029/Z,2),9)|| ,\n     RIGHT(TRUNC(U2029/Z,2),9);\nSAY \"TOTAL 30%-39%:\"LEFT(C3039,9)RIGHT(TRUNC(A3039/Z,2),9)|| ,\n     RIGHT(TRUNC(U3039/Z,2),9);\nSAY \"TOTAL 40%-49%:\"LEFT(C4049,9)RIGHT(TRUNC(A4049/Z,2),9)|| ,\n     RIGHT(TRUNC(U4049/Z,2),9);\nSAY \"TOTAL 50%-59%:\"LEFT(C5059,9)RIGHT(TRUNC(A5059/Z,2),9)|| ,\n     RIGHT(TRUNC(U5059/Z,2),9);\nSAY \"TOTAL 60%-69%:\"LEFT(C6069,9)RIGHT(TRUNC(A6069/Z,2),9)|| ,\n     RIGHT(TRUNC(U6069/Z,2),9);\nSAY \"TOTAL 70%-79%:\"LEFT(C7079,9)RIGHT(TRUNC(A7079/Z,2),9)|| ,\n     RIGHT(TRUNC(U7079/Z,2),9);\nSAY \"TOTAL 80%-89%:\"LEFT(C8089,9)RIGHT(TRUNC(A8089/Z,2),9)|| ,\n     RIGHT(TRUNC(U8089/Z,2),9);\nSAY \"TOTAL 90%-99%:\"LEFT(C9099,9)RIGHT(TRUNC(A9099/Z,2),9)|| ,\n     RIGHT(TRUNC(U9099/Z,2),9);\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ANALYZE": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92$O\\x00\\x92$O\\x11@\\x00\\x08\\x00*\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-08-31T00:00:00", "modifydate": "1992-08-31T11:40:00", "lines": 8, "newlines": 42, "modlines": 0, "user": "TECH110"}, "text": "//ANALYZE  JOB (5304010530000000),'TECH110 TECH SUPPT',CLASS=S,\n//         MSGCLASS=G,NOTIFY=TECH110\n//STEP1    EXEC PGM=ICKDSF,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n   REVAL   UNIT(7D6) -\n        NOVFY\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "APAFREPS": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x935O\\x00\\x936/\\x12\\x10\\x00\"\\x00\\x18\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-12-20T00:00:00", "modifydate": "1993-12-28T12:10:00", "lines": 34, "newlines": 24, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//APAFREPS  EXEC  PGM=APAFREPS,REGION=8M,PARM='REPORTS(DOM)'\n//STEPLIB   DD    DISP=SHR,DSN=SYS1.APAF.LOADLIB          <<<<<\n//SYSUDUMP  DD    SYSOUT=*\n//USERIN    DD    DISP=SHR,DSN=NULLFILE                   <<<<<\n//DATAIN  DD  DISP=SHR,DSN=PD.SMFDUMP.WEEKLY.BACKUP(-4),DCB=BUFNO=63,\n// LRECL=32760,RECFM=VBS,BLKSIZE=32760\n//        DD  DISP=SHR,DSN=PD.SMFDUMP.WEEKLY.BACKUP(-3),DCB=BUFNO=63,\n// LRECL=32760,RECFM=VBS,BLKSIZE=32760\n//        DD  DISP=SHR,DSN=PD.SMFDUMP.WEEKLY.BACKUP(-2),DCB=BUFNO=63,\n// LRECL=32760,RECFM=VBS,BLKSIZE=32760\n//        DD  DISP=SHR,DSN=PD.SMFDUMP.WEEKLY.BACKUP(-1),DCB=BUFNO=63,\n// LRECL=32760,RECFM=VBS,BLKSIZE=32760\n//        DD  DISP=SHR,DSN=PD.SMFDUMP.WEEKLY.BACKUP(0),DCB=BUFNO=63,\n// LRECL=32760,RECFM=VBS,BLKSIZE=32760\n//*DATAIN    DD    DISP=SHR,DSN=SYSS.SMFDUMP.WKLY.ACCUM,DCB=BUFNO=63\n//*DATAIN    DD    DISP=SHR,DSN=SYSS.SMFDUMP.DLY.FILE,DCB=BUFNO=63\n//USEROUT   DD    SYSOUT=*\n//RCFG      DD    SYSOUT=*\n//RCPU      DD    SYSOUT=*\n//RDMD      DD    SYSOUT=*\n//RDOM      DD    DSN=TECH110.APAF.ACCUM.OUTPUT,DISP=(NEW,CATLG),\n//  LRECL=133,RECFM=VB,SPACE=(CYL,(100,10))\n//RLP       DD    SYSOUT=*\n//RPP       DD    SYSOUT=*\n//RCAR1     DD    SYSOUT=*\n//RCAR2     DD    SYSOUT=*\n//RCAR3     DD    SYSOUT=*\n//RPAR1     DD    SYSOUT=*\n//RPAR2     DD    SYSOUT=*\n//RDOMAIN   DD    SYSOUT=*\n//RGLOBAL   DD    SYSOUT=*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ARCHIVE": {"ttr": 783, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x91(\\x9f\\x00\\x91)\\x1f\\tY\\x00\\r\\x00\\t\\x00\\n\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1991-10-16T00:00:00", "modifydate": "1991-10-18T09:59:00", "lines": 13, "newlines": 9, "modlines": 10, "user": "TECH110"}, "text": "//TECH110Q JOB 530401053000,'TECH KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),REGION=4M\n//ARCHIVE  EXEC PGM=FDRABR\n//TAPE1    DD DSN=FDRABR.POOLDISK.ARCHPOOL,DISP=OLD\n//SYSPRINT DD SYSOUT=*\n//SYSPRIN1 DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSIN    DD *\n  MOUNT STORGRP=SYSMSCNY\n  DUMP TYPE=ARC,DYNARC\n  SELECT DSN=TECH107.USERB.CNTLLIB\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ARCSIM": {"ttr": 785, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93%o\\x00\\x93%o\\x136\\x00\\x11\\x00\\x10\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-09-13T00:00:00", "modifydate": "1993-09-13T13:36:00", "lines": 17, "newlines": 16, "modlines": 2, "user": "TECH110"}, "text": "//TECH110Q JOB 530401053000,'TECH KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),REGION=8M\n//ARCHIVE  EXEC PGM=FDRABR\n//TAPE1    DD DUMMY\n//SYSPRINT DD SYSOUT=*\n//SYSPRIN1 DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSIN    DD *\n  SIM  TYPE=ARC,ADAYS=30\n  MOUNT STORGRP=SYSPOOL\n  MOUNT STORGRP=USRPOOL\n  X DSN=SYS1.**\n  X DSN=SYSA.**\n  X DSN=SYSB.**\n  X DSN=SYSS.**\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ARCTEST": {"ttr": 787, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93\"?\\x00\\x93\"? \\x07\\x00#\\x00#\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-08-11T00:00:00", "modifydate": "1993-08-11T20:07:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "TECH110"}, "text": "//TECH110K JOB 530401053000,'SYSTEM.BACKUP',\n// NOTIFY=TECH110,\n// CLASS=S,MSGCLASS=G\n//ARCHIVE EXEC PGM=FDRARCH\n//SYSPRINT DD SYSOUT=*\n//ARCHIVE  DD DSN=FDR.ARCHIVE.TEST(+1),UNIT=SYSDA,\n// SPACE=(TRK,(5,2),RLSE),DISP=(NEW,CATLG)\n//SYSIN    DD *\n FORMAT RECS=999,USERINDEX=YES\n/*\n//DUMPIT EXEC PGM=FDRABR,REGION=9M\n//SYSPRIN1 DD SYSOUT=*\n//ARCHIVE  DD DSN=FDR.ARCHIVE.TEST(+1),DISP=OLD\n//TAPE1 DD DSN=I1ONLV,DISP=(,KEEP),UNIT=TA80,VOL=(,,,255)\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=X\n//SYSIN DD *\n DUMP TYPE=ARC,ONLVOL,\n  SCRATCH=NO,\n  COMPRESS=ALL,\n  ARCBACKUP=DSF,\n  DSNENQ=TEST,\n  RETPD=9999,\n  DATA=USED,\n  ENQ=OFF,\n  ENQERR=NO,\n  ENQERR=PROCESS,\n  FORMAT=NEW,\n  LBPZERO=INVALID,\n  MAXDD=512,MAXERR=1,\n  BUFNO=MAX,\n  SMSCONSTRUCT=NO,\n  SMSMANAGE=NO\n S CATDSN=TECH110.**\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ARTALI": {"ttr": 789, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x914o\\x00\\x914o\\x17\\x13\\x00\\x11\\x00\\x11\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-12-12T00:00:00", "modifydate": "1991-12-12T17:13:00", "lines": 17, "newlines": 17, "modlines": 0, "user": "TECH110"}, "text": "/* REXX EXEC TO MOVE ARTHUR SYSW FILES */\n\"ALLOC F(INPUT) DA('TECH110.USER.CNTLLIB(ARTOUT)') SHR\";\n\"ALLOC F(OTPUT) DA('TECH110.USER.CNTLLIB(ARTALISO)') SHR\";\n\"EXECIO * DISKR INPUT (FINIS STEM IN.\";\nOUTCTR = 1;\nDO INDEX = 1 TO IN.0;\n     DSN=STRIP(WORD(IN.INDEX,1));\n     OUT.OUTCTR=\" DEF ALIAS (NAME(\"DSN\") -\";\n     OUTCTR=OUTCTR+1;\n     PARSE VAR DSN Q1 \".\" Q2 \".\" Q3 \".\" QL;\n     IF Q2=\"ARTHUR\" THEN NDSN=\"SYS1.ARTH.V2R6M0.\"QL;\n            ELSE NDSN=\"SYS1.SYSW.V2R11M7.\"QL;\n     OUT.OUTCTR=\"   REL(\"NDSN\"))\";\n     OUTCTR=OUTCTR+1;\nEND;\n\"EXECIO * DISKW OTPUT (FINIS STEM OUT.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ARTMOVE": {"ttr": 791, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x914o\\x00\\x914o\\x15 \\x00\\x0f\\x00\\x08\\x00\\t\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-12-12T00:00:00", "modifydate": "1991-12-12T15:20:00", "lines": 15, "newlines": 8, "modlines": 9, "user": "JEFFK"}, "text": "/* REXX EXEC TO MOVE ARTHUR SYSW FILES */\n\"ALLOC F(OUTPUT) DA('JEFFK.USER.CNTLLIB(ARTOUT)') SHR\";\nDUMMY = OUTTRAP(\"DSNLIST.\");\n\"LISTC LVL('SYS3.ARTHUR.V260') NAMES\";\n\"LISTC LVL('SYS3.SYSTW.V2117') NAMES\";\nDUMMY = OUTTRAP(\"OFF\");\nOUTCTR=1;\nDO INDEX = 1 TO DSNLIST.0;\n   PARSE VAR DSNLIST.INDEX W1 W2 W3 . ;\n   IF W1\u00ac=\"NONVSAM\" THEN ITERATE;\n   OUT.OUTCTR=\" SELECT DSN=\"W3;\n   OUTCTR=OUTCTR+1;\nEND;\n\"EXECIO * DISKW OUTPUT (FINIS STEM OUT.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ARTREST": {"ttr": 793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x914o\\x00\\x914o\\x166\\x00\\x13\\x00\\x13\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-12-12T00:00:00", "modifydate": "1991-12-12T16:36:00", "lines": 19, "newlines": 19, "modlines": 1, "user": "TECH110"}, "text": "/* REXX EXEC TO MOVE ARTHUR SYSW FILES */\n\"ALLOC F(INPUT) DA('TECH110.USER.CNTLLIB(ARTOUT)') SHR\";\n\"ALLOC F(OTPUT) DA('TECH110.USER.CNTLLIB(ARTRESTO)') SHR\";\n\"EXECIO * DISKR INPUT (FINIS STEM IN.\";\nOUTCTR = 1;\nDO INDEX = 1 TO IN.0;\n     DSN=STRIP(WORD(IN.INDEX,1));\n     OUT.OUTCTR=\" S DSN=\"DSN\",\";\n     OUTCTR=OUTCTR+1;\n     PARSE VAR DSN Q1 \".\" Q2 \".\" Q3 \".\" QL;\n     IF Q2=\"ARTHUR\" THEN NDSN=\"SYS1.ARTH.V2R6M0.\"QL;\n            ELSE NDSN=\"SYS1.SYSW.V2R11M7.\"QL;\n     OUT.OUTCTR=\"   NEWNAME=\"NDSN\",NVOL=SMSU03,\";\n     OUTCTR=OUTCTR+1;\n     OUT.OUTCTR=\"   MGMTCLAS=NOMIG,STORCLAS=SCSTNRD,DATACLAS=DATAPS\";\n     OUTCTR=OUTCTR+1;\nEND;\n\"EXECIO * DISKW OTPUT (FINIS STEM OUT.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASMUT1": {"ttr": 795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x910/\\x00\\x914\\x7f\\x12\\t\\x00\\x08\\x03\\x0f\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1991-10-29T00:00:00", "modifydate": "1991-12-13T12:09:00", "lines": 8, "newlines": 783, "modlines": 5, "user": "TECH110"}, "text": "//ASMUT1   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYSM.AMODGEN,DISP=SHR\n//C.SYSIN  DD DSN=TECH110.USER.CNTLLIB(SDD81NEW),DISP=SHR\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(SDD81A),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASYSQLS": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01>\\x00\\x00\\x00\\x93\\x11\\x7f\\x00\\x93\\x12o\\x103\\x01M\\x00'\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.62", "flags": 0, "createdate": "1993-04-27T00:00:00", "modifydate": "1993-05-06T10:33:00", "lines": 333, "newlines": 39, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n/*JOBPARM S=SYSB\n//DSNHASMH PROC WSPC=500,MEM=TEMPNAME\n//PC      EXEC PGM=DSNHPC,PARM='HOST(ASM)'\n//DBRMLIB DD DSN=TECH110.USER.DBRMLIB(&MEM),\n//         DISP=SHR\n//STEPLIB  DD  DISP=SHR,DSN=SYS1.DB2.V2R3M0.DSNEXIT\n//         DD  DISP=SHR,DSN=SYS1.DB2.V2R3M0.DSNLOAD\n//SYSCIN   DD  DSN=&&DSNHOUT,DISP=(MOD,PASS),UNIT=VIO,\n//             SPACE=(800,(&WSPC,&WSPC))\n//SYSPRINT DD  SYSOUT=*\n//SYSTERM  DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  SPACE=(800,(&WSPC,&WSPC),,,ROUND),UNIT=VIO\n//ASM     EXEC PGM=ASMA90,PARM='OBJECT,NODECK',COND=(4,LT,PC)\n//STEPLIB  DD  DSN=SYS1.HLASM.V1R1M0.SASMMOD1,DISP=SHR\n//SYSIN    DD  DSN=&&DSNHOUT,DISP=(OLD,DELETE)\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYSS.DB2.V2R3M0.DSNMACS,DISP=SHR\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=VIO,\n//             SPACE=(800,(&WSPC,&WSPC)),DCB=(BLKSIZE=800)\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  SPACE=(800,(&WSPC,&WSPC),,,ROUND),UNIT=VIO\n//LKED    EXEC PGM=IEWL,PARM='XREF',\n//             COND=((4,LT,ASM),(4,LT,PC))\n//SYSLIB   DD  DISP=SHR,\n//             DSN=SYS1.DB2.V2R3M0.DSNLOAD\n//         DD  DISP=SHR,DSN=SYS1.CICS.V2R1M2.LOADLIB\n//         DD  DISP=SHR,DSN=SYS1.ISPF.V3R3M0.ISPLOAD\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD DD DSN=TECH110.USER.LOADLIB(&MEM),\n//        DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSUT1   DD  SPACE=(1024,(50,50)),UNIT=VIO\n//DSNHASMH PEND\n//S EXEC DSNHASMH,MEM=ASYSQL\n//PC.SYSIN DD *\nASYSQL   TITLE 'ASYNCHRONOUS SQL SELECT SERVER'\nASYSQL   CSECT ,\n         SYSSTATE ASCENV=P PRIMARY ASC MODE\n         ENTRY DSNHLI\nASYSQL   AMODE ANY\nASYSQL   RMODE ANY\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         BAKR  RE,0 SAVE CALLERS STATUS ON LINKAGE STACK RETRG IS R14\n         LA    RA,0(,RF) SETUP ADDRESSING REGS\n         USING ASYSQL,RA\n         L     R0,=A(WORKLEN+SQLDLEN)\n         LR    R1,R0 MAXREQ SIZE\n         STORAGE OBTAIN,LENGTH=((0),(1)),LOC=(ANY,ANY) SAVE WORKAREA\n         LA    RD,0(,R1) PTR TO MY SAVEAREA\n         USING WORKAREA,RD\n         ST    R1,WORKA1P SAVE AREA PTR\n         ST    R0,WORKA1L SAVE LEN ACQ\n         MVC   SAVEAREA+4(4),=C'F1SA' INDICATE REGS SAVED ON STACK\n         USING SQLDSECT,RC\n         USING SQLDA,RB\n         LA    RC,SQLPARM ADDRESS\n         LA    RB,SQLVDA ADDRESS\n         LOAD  EP=DSNALI DYNAMIC LOAD OF EXPLICIT CONNECT SERVICE\n         ST    R0,EPDSNALI SAVE ADDRESS\n         LOAD  EP=DSNHLI2 DYNAMIC LOAD OF CAF SQL CALL SERVICE\n         ST    R0,EPDSNHL2 SAVE ADDRESS\n         MVC   CAFCALL(CAFCALLL),CAFCALLM LIST BUILD\n         MVC   DSPSRVD(XSPSRVLL),DSPSRVL FOR DSPSERV\n         MVC   HSPSRVD(YSPSRVLL),HSPSRVL FOR HSPSERV\n         MVC   ALESRVD(ALESRVLL),ALESRVL FOR ALESERV\n         DSPSERV CREATE,STOKEN=HSTOKEN,TYPE=HIPERSPACE,NAME=HSTRNAME,  X\n               GENNAME=YES,OUTNAME=HGENNAME,BLOCKS=(16384,2048),       X\n               ORIGIN=HORIGIN,HSTYPE=SCROLL,SHARE=NO,                  X\n               MF=(E,DSPSRVD,COMPLETE)\n         LTR   R2,RF CREATED?\n         BNZ   ABEND\n         MVC   HRPTR,HORIGIN START ADDR FOR HIPERSPACE READS\n         MVC   HWPTR,HORIGIN START ADDR FOR HIPERSPACE WRITES\n         LA    R0,HRANGE1 PTR HSPSERV PARAM LIST\n         ST    R0,HRANGE ...\n         MVC   HRANGE2,HORIGIN START ADDR FOR HIPERSPACE WRITES\n         MVC   HRANGE3,=F'8'   HIPERBLOCK COUNT\n         L     R0,=A(4096*8) 32K VIRT STOR BUFFER FOR HIPERSPACE\n         LR    R1,R0 MAX SIZE REQ\n         STORAGE OBTAIN,LENGTH=((0),(1)),LOC=(ANY,ANY),BNDRY=PAGE\n         ST    R1,WORKA3P SAVE AREA PTR\n         ST    R1,HRANGE1 PTR TO VIRTSTOR FOR HSPSERV\n         ST    R0,WORKA3L SAVE LEN ACQ\n         ALESERV ADD,STOKEN=HSTOKEN,ALET=HALET,AL=WORKUNIT,            X\n               MF=(E,ALESRVD)\n         LTR   R2,RF CREATED?\n         BNZ   ABEND\n         MVC   DB2SSID(4),=CL4'DSNB'\n         XC    DB2INIT,DB2INIT INIT ECB\n         XC    DB2TERM,DB2TERM TERM ECB\n         L     RF,EPDSNALI CONNECT SERVICE\n         CALL  (15),(CONNECT,DB2SSID,DB2TERM,DB2INIT,RIBPTR),VL,       X\n               MF=(E,CAFCALL)\n         LTR   R2,RF\n         BNZ   ABEND\n         MVC   DB2PLAN,=CL8'ASYSQL' PLAN NAME FOR DB2\n         L     RF,EPDSNALI CONNECT SERVICE\n         CALL  (15),(OPEN,DB2SSID,DB2PLAN),VL,MF=(E,CAFCALL)\n         LTR   R2,RF\n         BNZ   ABEND\n         LA    R3,TESTQRYP PARM LIST PTR\n         L     R4,0(,R3) QUERY PTR\n         LA    R4,0(,R4) STRIP LAST PARM BIT\n         LH    R5,0(,R4) QUERY LEN\n         LA    R4,2(,R4) QUERY PTR\n         LA    R2,SQLSTRNG+2 BUILD QUERY TARGET PTR\nSQGENL3  MVC   0(1,R2),0(R4) MOVE 1 BYTE\n         CLI   0(R2),C'?' REPLACEABLE PARAMETER\n         BNE   SQGENL9 GO LOOP\n         TM    0(R3),X'80' WAS PREV PARM SUPPOSED TO BE LAST?\n         BO    ABEND YES\n         LA    R3,4(,R3) NEXT PASSED VALUE\n         L     R6,0(,R3) PTR VALUE\n         LA    R6,0(,R6) STRIP POSSIBLE LAST PARM BIT\n         LH    R7,0(,R6) LEN OF NEW VALUE\n         LA    R6,2(,R6) PTR TO SOURCE VALUE\n         CLC   =C'?CHAR?',0(R4) DATATYPE\n         BNE   SQGENL6 NO\n         MVI   0(R2),C'''' START QUOTE\n         LA    R2,1(,R2) NEXT SINK\n         BCTR  R7,0 FOR EX MOVE SOURCE TO SINK\n         EX    R7,MOVECHAR\n         LA    R2,1(R7,R2) NEXT SINK POSITION - 1 (WILL+1 LATER)\n         MVI   0(R2),C'''' START QUOTE\n         LA    R4,5(,R4) NEXT SRC  POSITION - 1 (WILL+1 LATER)\n         SH    R5,=H'5' DECREMENT CHAR COUNTER\n         B     SQGENL9 CONTINUE\nMOVECHAR MVC   0(*-*,R2),0(R6) MOVE SQL PARM SOURCE TO SINK\nMOVEMSG1 MVC   SQLSWTO+8(*-*),SQLSTRNG+2\nSQGENL6  EQU   * *\nSQGENL9  LA    R2,1(,R2) NEXT SINK\n         LA    R4,1(,R4) NEXT SOURCE\n         BCT   R5,SQGENL3 ALL QUERY CHARS\n         LA    R1,SQLSTRNG+2 CALC LEN OF FINISHED QUERY\n         SLR   R2,R1 LEN\n         STH   R2,SQLSTRNG TELL DB2\n         BCTR  R2,0 FOR WTO MOVE\n         EX    R2,MOVEMSG1 TEMP TO TELL WORLD SQL STATEMENT\nSQLSWTO  WTO   '                                                       X\n                                                                      '\n         XC    SQLCAID(136),SQLCAID CLEAR\n         MVC   SQLCAID,=CL8'SQLCA' EYECATCHER\n         MVC   SQLCABC,=F'136' BYTE CTR\n         MVC   SQLDAID,=CL8'SQLDA' EYECATCHER\n         MVC   SQLDABC,=F'33016' MAX BYTE CTR\n         MVC   SQLN,=H'750' SUPPORTED COL COUNT\n         MVC   SQLD,=H'0' RESULT COL CTR\n         EXEC SQL DECLARE C1 CURSOR FOR STMT\n         ICM   R2,15,SQLCODE\n         BNZ   ABEND\n         EXEC SQL PREPARE STMT INTO :SQLVDA FROM :SQLSTRNG\n         ICM   R2,15,SQLCODE\n         BNZ   ABEND\n         LH    R4,SQLD DECRIBED COL COUNT\n         LA    R5,SQLVAR COL DESCRIPTION\n         SLR   R6,R6 SIZE REQ FOR FETCH\n         USING SQLVARN,R5\nDSCLOOP1 AH    R6,SQLLEN ADD ON SIZE\n         LA    R6,2(,R6) +2 FOR IND VARIABLES FOR NULL VALUES\n         LA    R5,44(,R5) NEXT COL DESCRIPT\n         BCT   R4,DSCLOOP1 ...\n         DROP  R5\n         LR    R0,R6 REQUESTED SIZE\n         ST    R6,ROWSIZE SAVE SINGLE ROW SIZE\n         LR    R1,R6 MAX SIZE REQ\n         STORAGE OBTAIN,LENGTH=((0),(1)),LOC=(ANY,ANY) FETCH WORKAREA\n         LR    R9,R1 SAVE AREA PTR\n         ST    R1,WORKA2P SAVE AREA PTR\n         ST    R0,WORKA2L SAVE LEN ACQ\n         LH    R4,SQLD DECRIBED COL COUNT\n         LA    R5,SQLVAR COL DESCRIPTION\n         USING SQLVARN,R5\nDSCLOOP2 ST    R9,SQLDATA VAR COL DATA\n         AH    R9,SQLLEN ADVANCE TO IND VAR\n         ST    R9,SQLIND\n         LA    R9,2(,R9) +2 FOR IND VARIABLES FOR NULL VALUES\n         LA    R5,44(,R5) NEXT COL DESCRIPT\n         BCT   R4,DSCLOOP2 ...\n         DROP  R5\n         SLR   R7,R7 ROW CTR\n         EXEC SQL OPEN C1\n         ICM   R2,15,SQLCODE\n         BNZ   ABEND\nFETCHC1  EXEC SQL FETCH C1 USING DESCRIPTOR :SQLVDA\n         CLC   =F'100',SQLCODE EOF\n         BE    CLOSCRSR\n         ICM   R2,15,SQLCODE\n         BNZ   ABEND\n         LA    R7,1(,R7)\n         B     FETCHC1\nCLOSCRSR EXEC SQL CLOSE C1\n         ICM   R2,15,SQLCODE\n         BNZ   ABEND\n         CVD   R7,DWORK1\n         UNPK  DWORK2(7),DWORK1+4(4)\n         OI    DWORK2+6,C'0' PRINTABLE\n         MVC   WTOROW+8(7),DWORK2\nWTOROW   WTO   'XXXXXXX ROWS PROCESSED'\n         EAR   R0,13 EXTRACT AR13 TO GPR0\n         ST    R0,SAVEAR13 SAVE AR13 PRIOR TO HSPSERV CALL\n         SLR   R0,R0 SET GPR0 TO 0 SO CAN MOVE TO AR13\n         SAR   13,R0 SET AR13 TO 0 AS PER HSPSERV\n         LR    R9,RD TEMP STORE OF R13\n         LA    R2,HSPSRVD MF=L PTR\n         LA    R3,HSTOKEN HIPERSPACE STOKEN PTR\n         LA    R4,HALET   HIPERSPACE ALET PTR\n         LA    R5,HRANGE  HIPERSPACE PARM LST PTR\n         LA    RD,WHSPSERV HSPSERV 144 BYTE SAVEAREA\n         HSPSERV SWRITE,STOKEN=(R3),HSPALET=(R4),                      X\n               NUMRANGE=1,RANGLIST=(R5),MF=(E,(R2),COMPLETE)\n         LR    RD,R9 RESTORE OF R13\n         L     R0,SAVEAR13 RESTORE AR13\n         SAR   13,R0 ...\n         LTR   R2,RF CHECK HSPSERV RESULT\n         BNZ   ABEND\n         ALESERV DELETE,ALET=HALET,MF=(E,ALESRVD)\n         DSPSERV DELETE,STOKEN=HSTOKEN,                                X\n               MF=(E,DSPSRVD,COMPLETE)\n         L     R1,WORKA3P RESTORE ACQ VALUES\n         L     R0,WORKA3L RESTORE ACQ VALUES\n         STORAGE RELEASE,ADDR=(1),LENGTH=(0) FREE WORKAREA\n         L     R1,WORKA2P RESTORE ACQ VALUES\n         L     R0,WORKA2L RESTORE ACQ VALUES\n         STORAGE RELEASE,ADDR=(1),LENGTH=(0) FREE WORKAREA\n         L     R1,WORKA1P RESTORE ACQ VALUES\n         L     R0,WORKA1L RESTORE ACQ VALUES\n         STORAGE RELEASE,ADDR=(1),LENGTH=(0) FREE SAVEAREA\n         SLR   RF,RF RC=0\n         PR    , RESTORE CALLERS STATUS\nABEND    LR    R3,R0 SAVE POSSIBLE REASON CODE\n         ABEND 1024,DUMP SEVERE ERROR\nDSNHLI   L     RF,EPDSNHL2 LINKAGE BYPASSING DUMMY DSNHLI\n         BR    RF ...\nCAFCALLM CALL  ,(,,,,),VL,MF=L\n         DSPSERV PLISTVER=1,MF=(L,DSPSRVL)\nALESRVL  ALESERV MF=L\n         HSPSERV PLISTVER=1,MF=(L,HSPSRVL)\nSQLSTRNG DC    1HL2'0',1CL254' '\nTESTQRYP DC    A(TESTQ1)\n         DC    A(TESTQ2+X'80000000')\nTESTQ1   DC    AL2(L'TESTQ1Q)\nTESTQ1Q  DC    C'SELECT * FROM BUILD.TABRVOLS WHERE VOLSER=?CHAR?'\nTESTQ2   DC    AL2(L'TESTQ2D) P1 DATA VALUE\nTESTQ2D  DC    C'TSO001'\nCONNECT  DC    CL12'CONNECT' CAF SERVICE LITERAL\nOPEN     DC    CL12'OPEN'    CAF SERVICE LITERAL\nHSTRNAME DC    CL8'@' GENERATE HIPERSPACE NAME WITH PREFIX\n         LTORG\n         DSNDRIB DB2 RELEASE INFORMATION BLOCK\n         EXEC SQL INCLUDE SQLDA\nWORKAREA DSECT\nSAVEAREA DS    9D LINKAGE\nWHSPSERV DS    18D 144 BYTE SAVEAREA FOR HSPSERV\nDWORK1   DS    D\nDWORK2   DS    D\nHSTOKEN  DS    D HIPER STOKEN\nHGENNAME DS    D GENERATED HIPERSPACE NAME\nHORIGIN  DS    A RETURNED HIPERSPACE VIRT ADDR ORIGIN\nHALET    DS    F HIPERSPACE ACCESS LIST ENTRY\nHRANGE   DS    A(HRANGE1) PTR TO HSPSERV RANGE PARAM LIST\nHRANGE1  DS    A ADDRESS SPACE SOURCE\nHRANGE2  DS    A HIPERSPACE TARGET ADDRESS\nHRANGE3  DS    F'8' HIPERSPACE BLOCK COUNT\nSAVEAR13 DS    A SAVE AR13  FOR HSPSERV\nWORKA1P  DS    F GETMAINED AREA PTRS AND LEN\nWORKA1L  DS    F FOR SAVEAREA AND WORKAREA\nWORKA2P  DS    F FOR FETCH WORKAREA\nWORKA2L  DS    F\nWORKA3P  DS    F FOR HIPERSPACE BUFFERS\nWORKA3L  DS    F\nROWSIZE  DS    F RETURNED SUM OF COL SIZES\nHRPTR    DS    A HIPERSPACE READ  PTR\nHWPTR    DS    A HIPERSPACE WRITE PTR\nDB2INIT  DS    F DB2 INIT ECB\nDB2TERM  DS    F DB2 TERM ECB\nEPDSNALI DS    A DSNALI ENTRY PTR\nEPDSNHL2 DS    A DSNHLI2 ENTRY PTR\nDB2SSID  DS    CL4 DB2 SSID\nDB2PLAN  DS    CL8 DB2 PLAN NAME\nRIBPTR   DS    A DB2 RELEASE INFO BLOCK PTR\n         DSPSERV PLISTVER=1,MF=(L,DSPSRVD)\nXSPSRVLL EQU   *-DSPSRVD\n         HSPSERV PLISTVER=1,MF=(L,HSPSRVD)\nYSPSRVLL EQU   *-HSPSRVD\nALESRVD  ALESERV MF=L\nALESRVLL EQU   *-ALESRVD\nCAFCALL  CALL  ,(,,,,),VL,MF=L\nCAFCALLL EQU   *-CAFCALL\nSQLPARM  DS    (SQLDLEN)C\n         EXEC SQL INCLUDE SQLCA\nSQLVDA   DS    33016C MAX LEN SQLDA FOR 750 COLUMN DESCRIP\nWORKLEN  EQU   *-WORKAREA\n         END\n/*\n//BIND     EXEC PGM=IKJEFT01,DYNAMNBR=32,COND=(4,LT)\n//DBRMLIB  DD DSN=TECH110.USER.DBRMLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSTSIN DD *\n DSN SYSTEM(DSNB)\n BIND PLAN(ASYSQL) -\n      MEMBER(ASYSQL) -\n      ACTION(REP) -\n      ISOLATION(CS) -\n      VALIDATE(BIND) -\n      EXPLAIN(NO) -\n      ENABLE(BATCH,DB2CALL)\n END\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ATEST": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x920O\\x00\\x920O\\x16\\x12\\x00\\x01\\x00\\x01\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-10-30T00:00:00", "modifydate": "1992-10-30T16:12:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "TECH110"}, "text": " DROP DATABASE DRMF01;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ATEST1": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x921\\x7f\\x00\\x921\\x7f\\x145\\x00\\x02\\x00\\x01\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-11-12T00:00:00", "modifydate": "1992-11-12T14:35:00", "lines": 2, "newlines": 1, "modlines": 2, "user": "TECH110"}, "text": "--SELECT * FROM SYSIBM.SYSTABLES WHERE NAME LIKE 'TRMF%';\n  SELECT * FROM SYSIBM.SYSINDEXES WHERE NAME LIKE 'IRMF%';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "A1": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93\\x11\\x1f\\x00\\x93\\x11?\\t\\x08\\x00\\x06\\x00\\x01\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-04-21T00:00:00", "modifydate": "1993-04-23T09:08:00", "lines": 6, "newlines": 1, "modlines": 0, "user": "TECH110"}, "text": "--UPDATE BUILD.TABRVOLS SET DUMP_STATUS='COMPLETE'\n--  WHERE VOLSER='SEQDA4' AND DUMP_STATUS='FAILURE';\n--UPDATE BUILD.TABRVOLS SET DUMP_STATUS='COMPLETE'\n--  WHERE VOLSER='POS003' AND DUMP_STATUS='FAILURE';\n  UPDATE BUILD.TABRVOLS SET DUMP_STATUS='COMPLETE'\n    WHERE DUMP_STATUS='ACTIVE';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BLDCINP": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92$\\x8f\\x00\\x92$\\x8f\\x14F\\x00c\\x00c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-09-04T00:00:00", "modifydate": "1992-09-04T14:46:00", "lines": 99, "newlines": 99, "modlines": 0, "user": "TECH110"}, "text": "SYS1.ABENDAID.V6R0M3.DYNAMIC.LOADLIB\nSYS1.ABENDAID.V6R0M3.LOADLIB\nSYS1.ACFNCP.V5R3M1.LOADLIB\nSYS1.ACFNCP.V5R3M1.SSPLIB\nSYS1.ANOMVS.V1R1M0.SEZLMOD\nSYS1.APCDDS.V1R0M0.LVL9111.LOADLIB\nSYS1.APCDOC.V1R0M0.CAILIB\nSYS1.BABBAGE.V3R0M0.BBLINK\nSYS1.BABBAGE.V3R0M0.BBLOAD\nSYS1.BUDDASD.V1R1M5.LOADLIB\nSYS1.CAIRIM.V1R0M0.LVL9111.LOADLIB\nSYS1.CALIBR.V3R9M0.LVL9110.LOADLIB\nSYS1.CA90S.V1R0M0.LVL9111.LOADLIB\nSYS1.CICS.TABLE.LOADLIB\nSYS1.CICS.V2R1M2.LOADLIB\nSYS1.CICS.V2R1M2.LOADLIB1\nSYS1.CICS.V2R1M2.LOADLIB2\nSYS1.CICS.V2R1M2.TABLE.LOADLIB\nSYS1.COB2.V1R3M2.CICS\nSYS1.COB2.V1R3M2.COMP\nSYS1.COB2.V1R3M2.LIB\nSYS1.COMPAREX.V7R2M0.LOAD\nSYS1.DATACOM.V8R0M0.INFOCAI.LOADLIB\nSYS1.DATACOM.V8R0M0.LVL9107.LOADLIB\nSYS1.DB2.V2R3M0.DSNEXIT\nSYS1.DB2.V2R3M0.DSNLINK\nSYS1.DB2.V2R3M0.DSNLOAD\nSYS1.DFHSM.V2R6M0.DFQLLIB\nSYS1.DISPATCH.V5R0M0.CAIISPL\nSYS1.DISPATCH.V5R0M0.CAILIB\nSYS1.DISPATCH.V5R0M0.CAILPA\nSYS1.DMS.V1R0M0.LOADLIB\nSYS1.DSSI.V5R5M1.LOAD\nSYS1.DYL280II.V3R0M0.LOAD.LIBRARY\nSYS1.ELD.V1R3M5.LOADLIB\nSYS1.FAVER.V3R8M1.LOADLIB\nSYS1.FDR.V5R1M34.LOADLIB\nSYS1.GDDM.V2R3M0.LOAD\nSYS1.GSP.V7R0M2.LINKLIB\nSYS1.HCD.V4R2M0.SCBDHENU\nSYS1.IAM.V6R1M10.LOADLIB\nSYS1.INTERTST.V4R1M0.LOADLIB\nSYS1.ISMF.V3R3M0.DGTLLIB\nSYS1.ISPF.V3R3M0.ISPLOAD\nSYS1.ISPF.V3R3M0.ISPLPA\nSYS1.JARS.V6R0M0.CAILIB\nSYS1.JCLCHECK.V6R0M0.CAILIB\nSYS1.JES328X.V2R2M0.LOAD\nSYS1.KWIKEY.V2R1M0.LOADLIB\nSYS1.MVSMS.V1R1M0.LINKLIB\nSYS1.NETCENTR.V1R1M0.SYSA.NETVSA.LOADLIB\nSYS1.NETVIEW.V1R3M0.CNMLINK\nSYS1.NETVIEW.V1R3M0.SCNMLPA1\nSYS1.NETVIEW.V1R3M0.USERLINK\nSYS1.NETVIEW.V2R2M0.CNMLINK\nSYS1.NETVIEW.V2R2M0.SCNMLNK1\nSYS1.NETVIEW.V2R2M0.SCNMLPA1\nSYS1.NETVIEW.V2R2M0.USERLINK\nSYS1.NPM.V1R4M1.SFNMLMD1\nSYS1.NUCLEUS\nSYS1.OLTEC.V1R0M0.LOADLIB\nSYS1.OPTII.V1R3M0.CAILIB\nSYS1.OPTII.V1R3M0.CAILPA\nSYS1.OSCAR.V3R6M0.LINKLIB\nSYS1.PDF.V3R3M0.ISRLOAD\nSYS1.PDF.V3R3M0.ISRLPA\nSYS1.PLI.V1R5M1.PLILIB\nSYS1.PLI.V2R3M0.PLICOMP\nSYS1.PLI.V2R3M0.PLILINK\nSYS1.PLI.V2R3M0.SIBMLINK\nSYS1.POOLDASD.V3R1M6.LOADLIB\nSYS1.RAMIS.V7R2M0.LOADLIB\nSYS1.RAMIS.V7R2M0.LPALIB\nSYS1.RPG2.V1R1M0.RG1LOAD\nSYS1.SAMON.V1R1M3.SDXKLMD0\nSYS1.SAMON.V1R1M3.SDXKLMD0\nSYS1.SDSF.V1R3M2.ISFLOAD\nSYS1.SDSF.V1R3M2.ISFLPA\nSYS1.SMPE.V1R5M0.SGIMLMD0\nSYS1.SPMS.V1R2M4.SPMSLIB\nSYS1.SPMS.V1R2M4.SPMSLPA\nSYS1.STKEXLM.V1R1M1.LOADLIB\nSYS1.STKHSC.V1R1M0.LOADLIB\nSYS1.STOPX37.V3R4M3.LOADLIB\nSYS1.SYNCSORT.V3R4ME.LINKLIB\nSYS1.SYNCSORT.V3R4ME.LPALIB\nSYS1.SYNCSORT.V3R4ME.SVCLIB\nSYS1.SYSD.V6R21M64.LOADLIB\nSYS1.TECH.COMMON.LOADLIB\nSYS1.TECH.COMMON.LPALIB\nSYS1.TLMS.V5R3M0.CAILIB.LOADLIB\nSYS1.TMON.V8R1M911.LOADLIB\nSYS1.VPS.R60.CICS.LOAD\nSYS1.VPS.R60.LOAD\nSYS1.VPS.R60.VTAM.LOAD\nSYS1.VSAMTUNE.V2R7M0.LOADLIB\nSYS1.VTAM.V3R4M1.LOADLIB\nSYS1.XCOM.V2R2M1.LOADLIB\nSYS1.ZEKE.V4R0M0.LINKLIB\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BLDCJCL": {"ttr": 1040, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x00\\x00\\x91\"_\\x00\\x92$\\x8f\\x167\\x00f\\x00\\'\\x00f\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "1991-08-13T00:00:00", "modifydate": "1992-09-04T16:37:00", "lines": 102, "newlines": 39, "modlines": 102, "user": "TECH110"}, "text": "/* REXX BUILD A COPY JOB                                     */\nADDRESS \"TSO\";\n\"ALLOC F(INPUT) DA('TECH110.USER.CNTLLIB(BLDCINP)') SHR\";\n\"EXECIO * DISKR INPUT (FINIS STEM INPUT.\";\n\"FREE F(INPUT)\";\nOP = 1;\nOUT.OP=\"//COPYSYS JOB 5304010530000000,'M MCCARTY',NOTIFY=TECH105,\";\nOP=OP+1;\nOUT.OP=\"// CLASS=S,MSGCLASS=G,REGION=8M\";\nOP=OP+1;\nOUT.OP=\"//COPY EXEC PGM=IDCAMS,DYNAMNBR=255\";\nOP=OP+1;\nOUT.OP=\"//SYSPRINT DD SYSOUT=*\";\nOP=OP+1;\nOUT.OP=\"//SYSIN DD *\";\nOP=OP+1;\nVOLLIST=\"SYS016 SYS017 SYS018 SYS019 SYS020 SYS021 SYS022 SYS023\";\nDO I = 1 TO INPUT.0 BY 1;\n  PARSE VAR INPUT.I IDSN;\n  IDSN=STRIP(IDSN);\n  PARSE VAR IDSN \"SYS1.\" REMDSN;\n  CDSN=\"SYSC.\"REMDSN;\n  OUT.OP=\" ALLOC DA('\"CDSN\"') -\";\n  OP=OP+1;\n  OUT.OP=\"    NEW CATALOG DSNTYPE(PDS) DSORG(PO) -\";\n  OP=OP+1;\n  X=LISTDSI(\"'\"IDSN\"'\" DIRECTORY);\n  DIR=SYSADIRBLK;\n  SELECT;\n  WHEN DIR=\"45\" THEN DIR=\"44\";\n  WHEN DIR=\"90\" THEN DIR=\"89\";\n  WHEN DIR=\"135\" THEN DIR=\"134\";\n  WHEN DIR=\"180\" THEN DIR=\"179\";\n  WHEN DIR=\"225\" THEN DIR=\"224\";\n  WHEN DIR=\"270\" THEN DIR=\"269\";\n  WHEN DIR=\"315\" THEN DIR=\"314\";\n  WHEN DIR=\"360\" THEN DIR=\"359\";\n  WHEN DIR=\"405\" THEN DIR=\"404\";\n  OTHERWISE NOP;\n  END;\n  PARSE VAR VOLLIST VOLSER VOLLIST;\n  OUT.OP=\"    STORCLAS(SYSSHARE) VOL(\"VOLSER\") DIR(\"DIR\") -\";\n  OP=OP+1;\n  VOLLIST = VOLLIST VOLSER;\n  IF SYSRECFM=\"U\" THEN RECFM=\"U\";\n  IF SYSRECFM=\"F\" THEN RECFM=\"F\";\n  IF SYSRECFM=\"FB\" THEN RECFM=\"F,B\";\n  IF SYSRECFM=\"VB\" THEN RECFM=\"V,B\";\n  IF SYSRECFM=\"V\" THEN RECFM=\"V\";\n  IF RECFM=\"U\" THEN DO;\n  OUT.OP=\"    RECFM(\"RECFM\") BLKSIZE(\"SYSBLKSIZE\") -\";\n  OP=OP+1; END;\n  ELSE DO;\n  OUT.OP=\"    RECFM(\"RECFM\") LRECL(\"SYSLRECL\") -\";\n  OP=OP+1; END;\n  S1=SYSUSED; S2=SYSUDIRBLK; S3=SYSEXTENTS;\n  OUT.OP=\" /*ALLOCUSED=\"S1 \"DIRUSED=\"S2 \"EXT=\"S3 \"*/\";\n  OP=OP+1;\n  IF SYSUNITS=\"CYLINDER\" THEN SU=\"CYL\";\n  ELSE IF SYSUNITS=\"TRACK\" THEN SU=\"TRK\";\n  ELSE SU=\"???\";\n  OUT.OP=\"   \"SU \"SPACE(\"SYSPRIMARY\",\"SYSSECONDS\") -\";\n  OP=OP+1;\n  DUMMY=OUTTRAP(\"LISTC.\");\n  \"LISTC ENT('\"IDSN\"') ALL\";\n  DUMMY = OUTTRAP(\"OFF\");\n  DO X=1 TO LISTC.0;\n     X1=POS(\"MANAGEMENTCLASS\",LISTC.X);\n     X2=POS(\"DATACLASS\",LISTC.X);\n     IF X1=0 & X2=0 THEN ITERATE;\n     IF X1\u00ac=0 THEN DO;\n         PARSE VAR LISTC.X . \"MANAGEMENTCLASS\" MCLASS;\n         MCLASS=TRANSLATE(MCLASS,\" \",\"-\");\n         MCLASS=STRIP(MCLASS);\n         END;\n     IF X2\u00ac=0 THEN DO;\n         PARSE VAR LISTC.X \"DATACLASS\" DCLASS . ;\n         DCLASS=TRANSLATE(DCLASS,\" \",\"-\");\n         DCLASS=STRIP(DCLASS);\n         LEAVE X;\n         END;\n  END;\n  OUT.OP=\" DATACLAS(\"DCLASS\") MGMTCLAS(\"MCLASS\")\";\n  OP=OP+1;\n  DCLASS=\"\";MCLASS=\"\";\n  OUT.OP=\" ALTER\" CDSN \"-\";\n  OP=OP+1;\n  OUT.OP=\"     NEWNM(\"IDSN\") -\";\n  OP=OP+1;\n  OUT.OP=\"     CAT(SYS1.MCATSA.CLUSTER)\";\n  OP=OP+1;\n  OUT.OP=\" DEF NVSAM (NAME(\"IDSN\") -\";\n  OP=OP+1;\n  OUT.OP=\"     DEVT(3390) VOLUMES(\"VOLSER\") RECATALOG) -\";\n  OP=OP+1;\n  OUT.OP=\"     CAT(SYS1.MCATSB.CLUSTER)\";\n  OP=OP+1;\nEND;\n\"ALLOC F(OUTPT) DA('TECH110.USER.CNTLLIB(BLDCOUT)') SHR\";\n\"EXECIO * DISKW OUTPT (FINIS STEM OUT.\";\n\"FREE F(OUTPT)\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BLDCJCL2": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92%\\x0f\\x00\\x92%\\x0f\\x154\\x00#\\x00f\\x00\\r\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-09-06T00:00:00", "modifydate": "1992-09-06T15:34:00", "lines": 35, "newlines": 102, "modlines": 13, "user": "TECH110"}, "text": "/* REXX BUILD A COPY JOB                                     */\nADDRESS \"TSO\";\n\"ALLOC F(INPUT) DA('TECH110.USER.CNTLLIB(COPINPUT)') SHR\";\n\"EXECIO * DISKR INPUT (FINIS STEM INPUT.\";\n\"FREE F(INPUT)\";\nOP = 1;\nOUT.OP=\"//COPYSYS JOB 5304010530000000,'M MCCARTY',NOTIFY=TECH105,\";\nOP=OP+1;\nOUT.OP=\"// CLASS=S,MSGCLASS=G,REGION=8M\";\nOP=OP+1;\nOUT.OP=\"//COPY EXEC PGM=IEBCOPY\";\nOP=OP+1;\nOUT.OP=\"//SYSPRINT DD SYSOUT=*\";\nOP=OP+1;\nDO I = 1 TO INPUT.0 BY 1;\n  PARSE VAR INPUT.I IDSN;\n  IDSN=STRIP(IDSN);\n  PARSE VAR IDSN \"SYS1.\" REMDSN;\n  CDSN=\"SYSC.\"REMDSN;\n  ADSN=\"SYSA.\"REMDSN;\n  OUT.OP=\"//IN\"I \"DD DSN=\"ADSN\",DISP=SHR\";\n  OP=OP+1;\n  OUT.OP=\"//OUT\"I \"DD DSN=\"CDSN\",DISP=SHR\";\n  OP=OP+1;\nEND;\nOUT.OP=\"//SYSIN DD *\";\nOP=OP+1;\nDO I = 1 TO INPUT.0 BY 1;\n  OUT.OP=\" COPY O=OUT\"I\",I=IN\"I;\n  OP=OP+1;\nEND;\n\"ALLOC F(OUTPT) DA('TECH110.USER.CNTLLIB(COPOUT)') SHR\";\n\"EXECIO * DISKW OUTPT (FINIS STEM OUT.\";\n\"FREE F(OUTPT)\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BLDCJCL3": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92%\\x1f\\x00\\x92%\\x1f\\x10\\x04\\x00%\\x00#\\x00\\r\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-09-07T00:00:00", "modifydate": "1992-09-07T10:04:00", "lines": 37, "newlines": 35, "modlines": 13, "user": "TECH110"}, "text": "/* REXX BUILD A COPY JOB                                     */\nADDRESS \"TSO\";\n\"ALLOC F(INPUT) DA('TECH110.USER.CNTLLIB(COPINPUT)') SHR\";\n\"EXECIO * DISKR INPUT (FINIS STEM INPUT.\";\n\"FREE F(INPUT)\";\nOP = 1;\nOUT.OP=\"//COPYSYS JOB 5304010530000000,'M MCCARTY',NOTIFY=TECH110,\";\nOP=OP+1;\nOUT.OP=\"// CLASS=S,MSGCLASS=G,REGION=8M\";\nOP=OP+1;\nOUT.OP=\"//COPY EXEC PGM=IDCAMS\";\nOP=OP+1;\nOUT.OP=\"//SYSPRINT DD SYSOUT=*\";\nOP=OP+1;\nOUT.OP=\"//SYSIN DD *\";\nOP=OP+1;\nDO I = 1 TO INPUT.0 BY 1;\n  PARSE VAR INPUT.I IDSN;\n  IDSN=STRIP(IDSN);\n  PARSE VAR IDSN \"SYS1.\" REMDSN;\n  CDSN=\"SYSC.\"REMDSN;\n  ADSN=\"SYSA.\"REMDSN;\n  OUT.OP=\" DELETE\" IDSN \"NVSAM NOSCRATCH -\";\n  OP=OP+1;\n  OUT.OP=\" CAT(SYS1.MCATSB.CLUSTER)\";\n  OP=OP+1;\n  OUT.OP=\" ALTER\" IDSN \"-\";\n  OP=OP+1;\n  OUT.OP=\" NEWNAME(\"CDSN\") -\";\n  OP=OP+1;\n  OUT.OP=\" CAT(SYS1.MCATSA.CLUSTER)\";\n  OP=OP+1;\nEND;\n\"ALLOC F(OUTPT) DA('TECH110.USER.CNTLLIB(FIXOUT)') SHR\";\n\"EXECIO * DISKW OUTPT (FINIS STEM OUT.\";\n\"FREE F(OUTPT)\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BLDCJCL4": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00\\x92%\\x1f\\x00\\x92%\\x1f\\x11'\\x00!\\x00%\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-09-07T00:00:00", "modifydate": "1992-09-07T11:27:00", "lines": 33, "newlines": 37, "modlines": 0, "user": "TECH110"}, "text": "/* REXX BUILD A COPY JOB                                     */\nADDRESS \"TSO\";\n\"ALLOC F(INPUT) DA('TECH110.USER.CNTLLIB(COPINPUT)') SHR\";\n\"EXECIO * DISKR INPUT (FINIS STEM INPUT.\";\n\"FREE F(INPUT)\";\nOP = 1;\nOUT.OP=\"//COPYSYS JOB 5304010530000000,'M MCCARTY',NOTIFY=TECH110,\";\nOP=OP+1;\nOUT.OP=\"// CLASS=S,MSGCLASS=G,REGION=8M\";\nOP=OP+1;\nOUT.OP=\"//COPY EXEC PGM=IDCAMS\";\nOP=OP+1;\nOUT.OP=\"//SYSPRINT DD SYSOUT=*\";\nOP=OP+1;\nOUT.OP=\"//SYSIN DD *\";\nOP=OP+1;\nDO I = 1 TO INPUT.0 BY 1;\n  PARSE VAR INPUT.I IDSN;\n  IDSN=STRIP(IDSN);\n  PARSE VAR IDSN \"SYS1.\" REMDSN;\n  CDSN=\"SYSC.\"REMDSN;\n  ADSN=\"SYSA.\"REMDSN;\n  OUT.OP=\" ALTER\" IDSN \"-\";\n  OP=OP+1;\n  OUT.OP=\" NEWNAME(\"CDSN\") -\";\n  OP=OP+1;\n  OUT.OP=\" CAT(SYS1.MCATSA.CLUSTER)\";\n  OP=OP+1;\nEND;\n\"ALLOC F(OUTPT) DA('TECH110.USER.CNTLLIB(FIXOUT)') SHR\";\n\"EXECIO * DISKW OUTPT (FINIS STEM OUT.\";\n\"FREE F(OUTPT)\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BLDCJCL5": {"ttr": 1287, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92%\\x1f\\x00\\x92%\\x1f\\x11X\\x00\\x17\\x00!\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-09-07T00:00:00", "modifydate": "1992-09-07T11:58:00", "lines": 23, "newlines": 33, "modlines": 6, "user": "TECH110"}, "text": "/* REXX BUILD A COPY JOB                                     */\nADDRESS \"TSO\";\n\"ALLOC F(INPUT) DA('TECH110.USER.CNTLLIB(COPINPUT)') SHR\";\n\"EXECIO * DISKR INPUT (FINIS STEM INPUT.\";\n\"FREE F(INPUT)\";\nOP = 1;\nDO I = 1 TO INPUT.0 BY 1;\n  PARSE VAR INPUT.I IDSN;\n  IDSN=STRIP(IDSN);\n  PARSE VAR IDSN \"SYS1.\" REMDSN;\n  CDSN=\"SYSC.\"REMDSN;\n  SDSN=\"SYSS.\"REMDSN;\n  CDSN=\"'\"CDSN\"'\";\n  SDSN=\"'\"SDSN\"'\";\n  OUT.OP=\"RENAME\" CDSN \"+\";\n  OP=OP+1;\n  OUT.OP=\" \" SDSN;\n  OP=OP+1;\nEND;\n\"ALLOC F(OUTPT) DA('TECH110.USER.CNTLLIB(FIXOUT)') SHR\";\n\"EXECIO * DISKW OUTPT (FINIS STEM OUT.\";\n\"FREE F(OUTPT)\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BLDCJCL6": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92%\\x1f\\x00\\x92%\\x1f\\x12S\\x00\\x17\\x00\\x17\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-09-07T00:00:00", "modifydate": "1992-09-07T12:53:00", "lines": 23, "newlines": 23, "modlines": 5, "user": "TECH110"}, "text": "/* REXX BUILD A COPY JOB                                     */\nADDRESS \"TSO\";\n\"ALLOC F(INPUT) DA('TECH110.USER.CNTLLIB(COPINPUT)') SHR\";\n\"EXECIO * DISKR INPUT (FINIS STEM INPUT.\";\n\"FREE F(INPUT)\";\nOP = 1;\nDO I = 1 TO INPUT.0 BY 1;\n  PARSE VAR INPUT.I IDSN;\n  IDSN=STRIP(IDSN);\n  PARSE VAR IDSN \"SYS1.\" REMDSN;\n  TDSN=\"SYST.\"REMDSN;\n  SDSN=\"SYSS.\"REMDSN;\n  TDSN=\"'\"TDSN\"'\";\n  SDSN=\"'\"SDSN\"'\";\n  OUT.OP='\"ALTER' TDSN'\"' \"' '|| ,\";\n  OP=OP+1;\n  OUT.OP='\"NEWNAME('SDSN') CAT(SYS1.UCATSS.CLUSTER)\"';\n  OP=OP+1;\nEND;\n\"ALLOC F(OUTPT) DA('TECH110.USER.CNTLLIB(FIXOUTA)') SHR\";\n\"EXECIO * DISKW OUTPT (FINIS STEM OUT.\";\n\"FREE F(OUTPT)\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BLDG": {"ttr": 1291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x91\\x03\\x0f\\x00\\x95&\\x1f\\x13$\\x00\\n\\x00\\n\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1991-01-30T00:00:00", "modifydate": "1995-09-18T13:24:00", "lines": 10, "newlines": 10, "modlines": 5, "user": "TECH110"}, "text": "//TECH110I JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  DEF GDG (NAME(PCRDT1.VAPSGD00.VP04023R) -\n        LIMIT(7) -\n        NOEMPTY SCRATCH)\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BLDGPTAP": {"ttr": 1293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x915\\x0f\\x00\\x915\\x0f!F\\x00\\x0e\\x00\\x14\\x00\\x07\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-12-16T00:00:00", "modifydate": "1991-12-16T21:46:00", "lines": 14, "newlines": 20, "modlines": 7, "user": "TECH110"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IDCAMS,REGION=6M\n//*COMMENT\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  DEF GDG (NAME(PTAP.TLMS.BKUPVMF) -\n        LIMIT(2) -\n        NOEMPTY NOSCRATCH)\n  DEF GDG (NAME(PTAP.TLMS.BKUPALOG) -\n        LIMIT(2) -\n        NOEMPTY NOSCRATCH)\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BOOKSCAN": {"ttr": 1295, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\x05\\x9f\\x00\\x95\\x05\\x9f\\x179\\x00\\x1a\\x00\\x1a\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-02-28T00:00:00", "modifydate": "1995-02-28T17:39:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "TECH110"}, "text": "/* REXX */\n\"ALLOC F(SHELVES) DA('TECH105.USER.CNTLLIB(BOOKSHL2)') SHR\";\n\"EXECIO * DISKR SHELVES (FINIS STEM SHELF.\";\n\"FREE F(SHELVES)\";\nDO I = 1 TO SHELF.0;\n     PARSE VAR SHELF.I DSNAME . ;\n     \"ALLOC F(BOOKIN) DA('\"DSNAME\"') SHR\";\n     \"EXECIO * DISKR BOOKIN (FINIS STEM BOOKDATA.\";\n     OUTBOOKPTR = 1;\n     DO J = 1 TO BOOKDATA.0;\n           IF SUBSTR(BOOKDATA.J,1,7)\u00ac=\"BKNAME=\" THEN DO;\n                OUTBOOK.OUTBOOKPTR=BOOKDATA.J;\n                OUTBOOKPTR=OUTBOOKPTR+1;\n                END;\n            ELSE DO;\n                OUTBOOK.OUTBOOKPTR=BOOKDATA.J;\n                OUTBOOKPTR=OUTBOOKPTR+1;\n                BOOKID = STRIP(SUBSTR(BOOKDATA.J,8));\n       OUTBOOK.OUTBOOKPTR=\"BKMDSN=SYSS.SOFTCOPY.\"BOOKID\".BOOK\";\n                OUTBOOKPTR=OUTBOOKPTR+1;\n                END;\n     END;\n     \"EXECIO * DISKW BOOKIN (FINIS STEM OUTBOOK.\";\n     \"FREE F(BOOKIN)\";\n     DROP BOOKDATA. ;\nEND;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BUILDX": {"ttr": 1297, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92\\x12\\x0f\\x00\\x93\\x11/\\tH\\x00\\x0f\\x00\\x14\\x00\\x07\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-04-29T00:00:00", "modifydate": "1993-04-22T09:48:00", "lines": 15, "newlines": 20, "modlines": 7, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=ICKDSF\n//SYSPRINT DD SYSOUT=*\n//DISK     DD UNIT=3390,DISP=OLD,VOL=SER=POS003\n//SYSIN    DD *\n   BUILDIX DDNAME(DISK) IXVTOC\n/*\n//S EXEC PGM=ICKDSF\n//SYSPRINT DD SYSOUT=*\n//DISK     DD UNIT=3390,DISP=OLD,VOL=SER=SEQDA4\n//SYSIN    DD *\n   BUILDIX DDNAME(DISK) IXVTOC\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CACHEONB": {"ttr": 1299, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x90&\\x8f\\x00\\x905/\\x14!\\x00\\x17\\x00\\x17\\x00\\x10\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1990-09-25T00:00:00", "modifydate": "1990-12-18T14:21:00", "lines": 23, "newlines": 23, "modlines": 16, "user": "JEFFK"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n SETC VOL(POS001) UNIT(3380) SSYS OFF\n SETC VOL(POS001) UNIT(3380) DEV  OFF\n SETC VOL(POS002) UNIT(3380) SSYS OFF\n SETC VOL(POS002) UNIT(3380) DEV  OFF\n SETC VOL(DRV29E) UNIT(3380) SSYS OFF\n SETC VOL(DRV29E) UNIT(3380) DEV  OFF\n SETC VOL(TEST02) UNIT(3380) SSYS OFF\n SETC VOL(TEST02) UNIT(3380) DEV  OFF\n SETC VOL(DRV724) UNIT(3380) SSYS OFF\n SETC VOL(DRV724) UNIT(3380) DEV  OFF\n SETC VOL(DRV725) UNIT(3380) SSYS OFF\n SETC VOL(DRV725) UNIT(3380) DEV  OFF\n SETC VOL(DRV726) UNIT(3380) SSYS OFF\n SETC VOL(DRV726) UNIT(3380) DEV  OFF\n SETC VOL(DRV727) UNIT(3380) SSYS ON\n SETC VOL(DRV727) UNIT(3380) DEV  ON\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CAPPLNBU": {"ttr": 1301, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01!\\x00\\x00\\x00\\x93#_\\x00\\x93(O\\x14\\x17\\x01\\xd1\\x00\\xea\\x01\\xa9\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.33", "flags": 0, "createdate": "1993-08-23T00:00:00", "modifydate": "1993-10-11T14:17:00", "lines": 465, "newlines": 234, "modlines": 425, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=6M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCLG\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN DD *\nCAPPLNBU CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         SAVE  (14,12),,CAPPLNBU*&SYSDATE*&SYSTIME\n         LR    RA,RF\n         USING CAPPLNBU,RA,RB,RC\n         LA    RB,4095(,RA)\n         LA    RB,1(,RB)\n         LA    RC,4095(,RB)\n         LA    RC,1(,RC)\n         LR    RF,RD\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18A(0)\n         ST    RD,8(,RF)\n         ST    RF,4(,RD)\n         TIME  DEC,TIMEDATE,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         MVC   TIMEDATE(4),TIMEDATE+8\n         UNPK  WORK(9),TIMEDATE(5)\n         MVC   TIMEDATE+8(8),WORK\n         MVC   PREVDATE(8),TIMEDATE+8\n         MVC   MNTHYEAR(2),PREVDATE\n         MVC   MNTHYEAR+2(2),PREVDATE+6\n         PACK  WORK(2),PREVDATE+2(2)\n         SP    WORK(2),=PL2'01'\n         UNPK  WORK+2(3),WORK(2)\n         OI    WORK+4,C'0'\n         MVC   PREVDATE+2(2),WORK+3\n         CLC   =C'00',PREVDATE+2 PREV MONTH\n         BNE   PROCOPEN NO\n         LA    R1,CALENDAR LOOP\nCALCPDAT CLC   MNTHYEAR(2),0(R1)\n         BE    CALCPMTH\n         LA    R1,10(,R1) NEXT\n         B     CALCPDAT\nCALCPMTH MVC   PREVDATE(2),4(R1)\n         MVC   PREVDATE+2(2),6(R1)\n         MVC   PREVDATE+6(2),8(R1)\nPROCOPEN MVC   KEYRDATE(2),PREVDATE\n         MVC   KEYRDATE+2(2),PREVDATE+2\n         MVC   KEYRDATE+4(2),PREVDATE+6\n         MVC   OUTBDATE+0(4),PREVDATE+4 YYYY\n         MVC   OUTBDATE+5(2),PREVDATE+0 MM\n         MVC   OUTBDATE+8(2),PREVDATE+2 DD\n         OPEN  (STORCNTR,,DISTCNTR,,VENDCNTR,,PURCCNTR,,KEYREC)\n         OPEN  (CAPPLAN)\nLOOP1    GET   RPL=RPL1\n         CLC   =C'00',INPUT+10 REGION#\n         BE    LOOP1\n         CLI   INPUT+216,C'A' ACTIVE STORE\n         BE    LOOP1C\n         CLI   INPUT+216,C'N' NEW STORE LESS THAN 1 YEAR OLD\n         BNE   LOOP1\nLOOP1C   L     RF,OUTACTST\n         LA    RF,1(,RF)\n         ST    RF,OUTACTST\n         B     LOOP1\nEODAD1   EQU   * *\nLOOP2    GET   RPL=RPL2\n         CLI   INPUT+18,C'A' DISTRO HEADER RECORD\n         BNE   LOOP2   NO\n         L     RF,OUTDISTR\n         LA    RF,1(,RF)\n         ST    RF,OUTDISTR\n         B     LOOP2\nEODAD2   EQU   * *\nLOOP3    GET   RPL=RPL3\n         MVC   DATE+0(2),INPUT+9  MM\n         MVC   DATE+3(2),INPUT+11 DD\n         MVC   DATE+7(1),INPUT+13 9Y\n         LA    R3,BUCKETS SCAN FOR SLOT\nLOOP31   CLI   0(R3),X'00' END OF SCAN = NEW DATE FOR SLOT\n         BE    NOSLOTS ERROR\n         CLC   DATE(8),0(R3) MATCHING DATE\n         BE    ADDSLOT1 YES\n         CLI   0(R3),C' ' EMPTY SLOT\n         BE    ADDSLOT\n         LA    R3,13(,R3) NEXT SLOT\n         B     LOOP31 SCAN\nADDSLOT  MVC   0(8,R3),DATE FILLIN DATE\nADDSLOT1 AP    8(5,R3),INPUT+51(4) EXPRC/SALES\n         MVC   WORK(5),INPUT+55 EXTERNAL ZONED DEC\n         OI    WORK+4,C'0' UP SIGN\n         PACK  WORK+5(3),WORK+0(5)\n         SLR   RF,RF\n         IC    RF,INPUT+59 CALC SIGN\n         SRL   RF,4 MOVE SIGN\n         STC   RF,WORK SIGN STORED TEMP EG 0C,0D,ETC\n         NI    WORK+7,X'F0' POSITION SIGN\n         OC    WORK+7(1),WORK\n         AP    8(5,R3),WORK+5(3) FACTOR IN NET SALES CALC\n         B     LOOP3\nEODAD3   EQU   * *\n         LA    R3,BUCKETS SCAN FOR SLOT\nPROC3    CLI   0(R3),X'00'\n         BE    PROC3END\n         CLI   0(R3),C' '\n         BE    PROC3END\n         MVC   WTO3+34(8),0(R3)  MOVE DATE\n         MVC   WTO3+44(13),SALEEDIT PATTERN\n         LA    R1,WTO3+53 FLOATING $\n         EDMK  WTO3+44(13),8(R3)\n         BCTR  R1,0\n         MVI   0(R1),C'$'  INSERT\nWTO3     WTO   'DAILY SALES ACCUM FOR   : MM/DD/YY  $X,XXX,XXX.XX'\n         LA    R3,13(,R3) NEXT\n         B     PROC3\nPROC3END EQU   * *\nLOOP4    GET   RPL=RPL4\n         CLI   INPUT+23,C'D' DETAIL\n         BNE   LOOP4 NO\n         CLI   INPUT+118,C'A' ACTIVE DETAIL RCD\n         BNE   LOOP4 NO\n         MVC   MONTH+0(2),INPUT+100 MM\n         MVC   MONTH+3(2),INPUT+104 YY\n         CLC   =C'94',INPUT+104 *****TEMP*****\n         BH    LOOP4\n         LA    R3,PBUCKETS SCAN FOR SLOT\nLOOP41   CLI   0(R3),X'00' END OF SCAN = NEW DATE FOR SLOT\n         BE    NOSLOTS1 ERROR\n         CLC   MONTH(5),0(R3) MATCHING DATE\n         BE    PDDSLOT1 YES\n         CLI   0(R3),C' ' EMPTY SLOT\n         BE    PDDSLOT\n         LA    R3,10(,R3) NEXT SLOT\n         B     LOOP41 SCAN\nPDDSLOT  MVC   0(5,R3),MONTH FILLIN DATE\nPDDSLOT1 AP    5(5,R3),INPUT+96(4) PURORDER QUANTITY\n         B     LOOP4\nEODAD4   EQU   * *\n         LA    R3,PBUCKETS SCAN FOR SLOT\nPROC4    CLI   0(R3),X'00'\n         BE    PROC4END\n         CLI   0(R3),C' '\n         BE    PROC4END\n         MVC   WTO4+34(5),0(R3)  MOVE DATE\n         UNPK  WTO4+41(9),5(5,R3) QTY\n         OI    WTO4+49,C'0' FIX SIGN\nWTO4     WTO   'MONTHLY PURCHASE ORD QTY: MM/YY  XXXXXXXXX'\n         LA    R3,10(,R3) NEXT\n         B     PROC4\nPROC4END EQU   * *\nLOOP5    GET   RPL=RPL5\n         CLI   INPUT+20,C'2' DETAIL\n         BNE   LOOP5 NO\n         CLC   INPUT+253(6),KEYRDATE DETAIL RCD PER PREV DATE\n         BNE   LOOP5 NO\n         AP    KEYRSUM(8),INPUT+242(4) FMKRKEYR-D-RECV-PIECES\n         B LOOP5\nEODAD5   EQU   * *\n*        MVI   OUTLINE,C' '\n*        MVC   OUTLINE+1(131),OUTLINE\n*        MVC   OUTLINE(25),=C'UNITS RECEIVED: XXXXXXXXX'\n*        UNPK  OUTLINE+16(9),KEYRSUM+3(5)\n*        OI    OUTLINE+24,C'0'\nTEMPEXIT EQU   * *\n         PUT   RPL=RPL6\n         LTR   RF,RF\n         BNZ   PUTERROR\n         SLR   R9,R9\nMAINEXIT CLOSE (STORCNTR,,DISTCNTR,,VENDCNTR,,PURCCNTR,,KEYREC)\n         CLOSE (CAPPLAN)\n         L     RD,4(,RD)\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nNOSLOTS  LA    R9,24 ERROR FOR NO SLOTS LEFT\n         B     MAINEXIT\nNOSLOTS1 LA    R9,28 ERROR FOR NO SLOTS LEFT\n         B     MAINEXIT\nPUTERROR ABEND 32,DUMP\nWORK     DS    2D\nTIMEDATE DS    2D\nPREVDATE DS    D\nDATE     DC    C'MM/DD/9Y'\nCNTSTOR  DC    F'0'\nCNTDIST  DC    F'0'\nMNTHYEAR DS    CL4\nEXLST1   EXLST AM=VSAM,EODAD=EODAD1\nEXLST2   EXLST AM=VSAM,EODAD=EODAD2\nEXLST3   EXLST AM=VSAM,EODAD=EODAD3\nEXLST4   EXLST AM=VSAM,EODAD=EODAD4\nEXLST5   EXLST AM=VSAM,EODAD=EODAD5\nOUTREC   DC    0F'0',CL44' '\n         ORG   OUTREC\nOUTBDATE DC    CL16'YYYY-MM-DD' BUSINESS DATE\nOUTACTST DC    F'0' ACTIVE STORE COUNT\nOUTDISTR DC    F'0' DISTRO COUNT\nOUTPURCO DC    F'0' PURCHASE ORDER COUNT\nOUTURECV DC    F'0' UNITS RECEIVED\nOUTUSHIP DC    F'0' UNITS SHIPPED\nOUTSALES DC    PL8'0' SALES ACCUM DEC(15,2) X,XXX,XXX,XXX,XXX.XXS\nOUTRCLEN EQU   *-OUTREC\n         ORG\nSTORCNTR ACB   AM=VSAM,DDNAME=STORCNTR,BUFND=31,EXLST=EXLST1,          X\n               MACRF=(KEY,SEQ,IN,NSR)\nDISTCNTR ACB   AM=VSAM,DDNAME=DISTCNTR,BUFND=31,EXLST=EXLST2,          X\n               MACRF=(KEY,SEQ,IN,NSR)\nVENDCNTR ACB   AM=VSAM,DDNAME=VENDCNTR,BUFND=31,EXLST=EXLST3,          X\n               MACRF=(ADR,SEQ,IN,NSR)\nPURCCNTR ACB   AM=VSAM,DDNAME=PURCCNTR,EXLST=EXLST4,                   X\n               MACRF=(KEY,SEQ,IN,NSR)\nCAPPLAN  ACB   AM=VSAM,DDNAME=CAPPLAN,                                 X\n               MACRF=(KEY,DIR,OUT,NSR)\nKEYREC   ACB   AM=VSAM,DDNAME=KEYREC,BUFND=31,EXLST=EXLST5,            X\n               MACRF=(ADR,SEQ,IN,NSR)\nRPL1     RPL   AM=VSAM,ACB=STORCNTR,AREA=INPUT,AREALEN=32767,          X\n               OPTCD=(KEY,SEQ,FWD,MVE)\nRPL2     RPL   AM=VSAM,ACB=DISTCNTR,AREA=INPUT,AREALEN=32767,          X\n               OPTCD=(KEY,SEQ,FWD,MVE)\nRPL3     RPL   AM=VSAM,ACB=VENDCNTR,AREA=INPUT,AREALEN=32767,          X\n               OPTCD=(ADR,SEQ,FWD,MVE)\nRPL4     RPL   AM=VSAM,ACB=PURCCNTR,AREA=INPUT,AREALEN=32767,          X\n               OPTCD=(KEY,SEQ,FWD,MVE)\nRPL5     RPL   AM=VSAM,ACB=KEYREC,AREA=INPUT,AREALEN=32767,            X\n               OPTCD=(KEY,SEQ,FWD,MVE)\nRPL6     RPL   AM=VSAM,ACB=CAPPLAN,AREA=OUTREC,AREALEN=44,             X\n               OPTCD=(KEY,DIR,FWD,MVE),RECLEN=44\nSALEEDIT DC    C' ',X'20',C',',X'202020',C',',X'202120',C'.',X'2020'\nMONTH    DC    C'MM/YY'\nKEYRDATE DC    C'MMDDYY'\nCALENDAR DC    C'1093',C'093093'\n         DC    C'1193',C'103193'\n         DC    C'1293',C'113093'\n         DC    C'0194',C'123193'\n         DC    C'0294',C'013194'\n         DC    C'0394',C'022894'\n         DC    C'0494',C'033194'\n         DC    C'0594',C'043094'\n         DC    C'0694',C'053194'\n         DC    C'0794',C'063094'\n         DC    C'0894',C'073194'\n         DC    C'0994',C'083194'\n         DC    C'1094',C'093094'\n         DC    C'1194',C'103194'\n         DC    C'1294',C'113094'\n         DC    C'0195',C'123194'\n         DC    C'0295',C'013195'\n         DC    C'0395',C'022895'\n         DC    C'0495',C'033195'\n         DC    C'0595',C'043095'\n         DC    C'0695',C'053195'\n         DC    C'0795',C'063095'\n         DC    C'0895',C'073195'\n         DC    C'0995',C'083195'\n         DC    C'1095',C'093095'\n         DC    C'1195',C'103195'\n         DC    C'1295',C'113095'\nKEYRSUM  DC    PL8'0' UNITS RECEIVED DAILY SUM\n         LTORG\nBUCKETS  DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    CL8' ',PL5'0'\n         DC    13X'00'\nPBUCKETS DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    CL5' ',PL5'0'\n         DC    10X'00'\nINPUT    DS    0D'0',32767C\n         END\n/*\n//G.STORCNTR DD DSN=PGST.K.STORE.MASTER.FILE,DISP=SHR\n//G.DISTCNTR DD DSN=PMCD.X.CADS.DISTRO.FILE,DISP=SHR\n//*G.VENDCNTR DD DSN=PSDD.E.PROD.VENSLS1.FILE,DISP=SHR WEEKLY\n//G.VENDCNTR DD DSN=TECH110.E.PSD.DLY.VENSLS1.FILE,DISP=SHR\n//*G.VENDCNTR DD DSN=PSDD.E.PSD.DLY.VENSLS1.FILE,DISP=SHR\n//G.PURCCNTR DD DSN=PMPD.K.POMSTR.FILE,DISP=SHR\n//G.KEYREC   DD DSN=PMKR.K.KEYR.FILE,DISP=SHR\n//G.SYSUDUMP DD SYSOUT=*\n//G.CAPPLAN DD DSN=TECH110.CAPPLAN.$IAM,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CAPVCLUS": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x93(\\x1f\\x00\\x93(O\\x136\\x00\\x17\\x00\\t\\x00\\x12\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1993-10-08T00:00:00", "modifydate": "1993-10-11T13:36:00", "lines": 23, "newlines": 9, "modlines": 18, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S1 EXEC PGM=IEBDG\n//SYSPRINT DD SYSOUT=*\n//DUMMY DD DSN=&&DUMMY,DISP=(NEW,PASS),LRECL=44,RECFM=FB,\n//  SPACE=(TRK,1)\n//SYSIN DD *\n  DSD OUTPUT=(DUMMY)\n  FD  NAME=FILL,LENGTH=44,STARTLOC=1,FORMAT=BI\n  CREATE QUANTITY=1,NAME=(FILL)\n  END\n//S2 EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//DUMMY DD DSN=&&DUMMY,DISP=(OLD,DELETE)\n//SYSIN DD *\n  DEL TECH110.CAPPLAN.$IAM CL\n  DEF CL (NAME(TECH110.CAPPLAN.$IAM) -\n    KEYS(16,0) RECORDSIZE(44 44) SHAREOPTIONS(2,3) -\n    FREESPACE(5,0) RECORDS(366 366) INDEXED)\n  REPRO INFILE(DUMMY) ODS(TECH110.CAPPLAN.$IAM)\n//IAMOVRID DD *\n  CREATE DD=&ALLDD,PE=50\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CATEDIT": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x94\\x11\\x8f\\x00\\x94\\x11\\x9f\\x10\\x03\\x00D\\x00!\\x00,\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1994-04-28T00:00:00", "modifydate": "1994-04-29T10:03:00", "lines": 68, "newlines": 33, "modlines": 44, "user": "TECH110"}, "text": "//TECH110L JOB (5304010530000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCL,PARM.L='AC=1,XREF,LIST'\n//C.SYSIN DD *\nCATEDIT  CSECT , /* CATEDIT EDIT AND UPDATE */\n         SAVE  (14,12),,CATEDIT*&SYSDATE\n         LR    12,15\n         USING CATEDIT,12\n         LR    11,13 /* CHAIN */\n         CNOP  0,4\n         BAL   13,*+76\n         DC    18F'0'\n         ST    13,8(,11)\n         ST    11,4(,13)\n         OPEN  (CATALOG,(UPDAT))\n         TM    CATALOG+48,X'10' OPEN OK\n         BZ    FAILOPEN NO\nCATSCAN  GET   CATALOG\n         LR    4,1 RCD PTR TO TRANSLATE\n         LH    5,CATALOG+82 DCBLRECL\n         LA    6,0(5,4) END POINT\n         SH    6,=H'4' WE MUST NOT LOOK PAST END OF BUFFER, DO -4\n         LR    8,4 STARTING SCAN POINT\n         LR    9,5 WORKING LEN\nNEXTLCHK LTR   9,9 ANY LEFT\n         BNP   DOPUT NO\n         C     9,=F'256' MAX AT A TIME\n         BL    MINLOOK NEAR END\n         TRT   0(256,8),SCANLOOK\nTRTDONE  BZ    NEXTSECT LOOP\n         CLC   =X'78008080',0(1) MATCH\n         BE    REPL\n         CLC   =X'78048080',0(1) MATCH\n         BE    REPL\n         LA    8,1(,1) NEXT START SCAN\nCALCWLEN LR    9,6 WORK LEN\n         SR    9,8\n         B     NEXTLCHK\nREPL     MVC   0(4,1),=X'78048081' 3490E DEVT\n         LA    8,4(,1) FOR NEXT SCAN\n         B     CALCWLEN ...\nMINLOOK  BCTR  9,0 FOR EX\n         EX    9,EXTRT DO\n         B     TRTDONE\nEXTRT    TRT   0(*-*,8),SCANLOOK\nNEXTSECT LA    8,256(,8) NEXT FULL SECT\n         B     CALCWLEN\nDOPUT    PUTX  CATALOG UPDATE CAT IN PLACE\n         B     CATSCAN\nCATEND   CLOSE (CATALOG)\n         FREEPOOL CATALOG\n         SLR   15,15\nRETURN   L     13,4(,13)\n         RETURN (14,12),RC=(15)\nFAILOPEN LA    15,24 /* OPEN FAILED */\n         B     RETURN\n         LTORG\nCATALOG  DCB   DDNAME=CATALOG,MACRF=(GL,PL),EODAD=CATEND,RECFM=U,      X\n               BLKSIZE=32760,DSORG=PS\nSCANLOOK DC    256X'00'\n         ORG   SCANLOOK+X'78'\n         DC    X'FF'\n         ORG\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(CATEDIT),DISP=SHR,UNIT=\n//*G.CATALOG DD DSN=SYS1.UCATTSM.CLUSTER,DISP=SHR\n//*G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CATEDITR": {"ttr": 1545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x94\\x11\\x8f\\x00\\x94\\x13?\\tP\\x003\\x00!\\x001\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-04-28T00:00:00", "modifydate": "1994-05-13T09:50:00", "lines": 51, "newlines": 33, "modlines": 49, "user": "TECH110"}, "text": "//TECH110L JOB (5304010530000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATABR.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATHSMA.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATPRD1.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATPRD2.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATPRD3.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATPROD.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATQUAL.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATSM.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATSS.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATTEST.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATTSOE.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n//S EXEC PGM=CATEDIT\n//CATALOG DD DSN=SYS1.UCATTST1.CLUSTER,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CATSCAN": {"ttr": 1547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x00\\x00\\x913\\x8f\\x00\\x92&\\x0f\\x16\\x05\\x00\\x81\\x00}\\x00\\x80\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "1991-12-04T00:00:00", "modifydate": "1992-09-16T16:05:00", "lines": 129, "newlines": 125, "modlines": 128, "user": "TECH110"}, "text": "/* REXX EXEC to build CATALOG entries */\ntrue=1; false=0;\n\"FREE F(SYSIN SYSPRINT IAMPRINT OUTPUT)\";\n\"ALLOC F(SYSIN) NEW DELETE TRACK SPACE(1 1)\";\n\"ALLOC F(SYSPRINT) NEW DELETE TRACK SPACE(10 5)\";\n\"ALLOC F(IAMPRINT) DUMMY\";\n\"ALLOC F(OUTPUT) DA('TECH110.USER.CNTLLIB(CATOUT)') SHR\";\nSYSIN.1 = \" LISTC ALL\";\n\"EXECIO * DISKW SYSIN (FINIS STEM SYSIN.\";\n\"CALL 'SYS1.LINKLIB(IDCAMS)'\";\n\"EXECIO * DISKR SYSPRINT (FINIS STEM OUTPUT.\";\ninputctr = 0;\ndo index = 1 to output.0;\n     parse var output.index cc 2 ty 3 trail ;\n     select;\n       when cc=\" \" then ,\n        input.inputctr = input.inputctr strip(substr(output.index,2));\n       when cc=\"0\" then do;\n           if ty=\" \" & trail\u00ac=\" \" then ,\n        input.inputctr = input.inputctr strip(substr(output.index,2));\n        else do;\n          if substr(output.index,2,5)\u00ac=\"ALIAS\" & ,\n             substr(output.index,2,7)\u00ac=\"CLUSTER\" & ,\n             substr(output.index,2,11)\u00ac=\"USERCATALOG\" & ,\n             substr(output.index,2,7)\u00ac=\"NONVSAM\" then iterate index;\n          inputctr = inputctr+1;\n          input.inputctr = strip(substr(output.index,2));\n          end;\n       end;\n       otherwise nop;\n     end;\nend;\nidcctr = 1;\ndo index = 1 to inputctr;\n     type = word(input.index,1); /* alias, nvsam , cl */\n     select;\n        when type=\"ALIAS\" then do;\n           typename=word(input.index,3);\n           aucat = pos(\" USERCAT--\",input.index);\n           anvsm = pos(\" NONVSAM--\",input.index);\n           if aucat\u00ac=0 then do;\n                assocname=word(substr(input.index,aucat+10),1);\n                end;\n            else ,\n                assocname=word(substr(input.index,anvsm+10),1);\n           idc.idcctr=\" DEFINE ALIAS (NAME(\"typename\") -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    REL(\"assocname\"))\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    CAT(SYS1.MCATSA.CLUSTER)\";\n           idcctr = idcctr +1;\n           idc.idcctr=\" DEFINE ALIAS (NAME(\"typename\") -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    REL(\"assocname\"))\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    CAT(SYS1.MCATSB.CLUSTER)\";\n           idcctr = idcctr +1;\n           end;\n        when type=\"NONVSAM\" then do;\n           typename=word(input.index,3);\n          if pos(\".MASTER\",typename)\u00ac=0 then do;\n           aucat = pos(\" VOLSER--\",input.index);\n           ducat = pos(\" DEVTYPE-\",input.index);\n           if aucat\u00ac=0 then do;\n                volname=word(substr(input.index,aucat+19),1);\n                end;\n           if ducat\u00ac=0 then do;\n                voldevt=word(substr(input.index,ducat+23),1);\n                if substr(voldevt,1,1)=\"F\" then voldevt=\"3390\";\n                  else voldevt=\"3380\";\n                end;\n           idc.idcctr=\" DEFINE NONVSAM -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    (NAME(\"typename\") -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    DEVT(\"voldevt\") -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    VOLUMES(\"volname\") RECATALOG) -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    CAT(SYS1.MCATSA.CLUSTER)\";\n           idcctr = idcctr +1;\n           idc.idcctr=\" DEFINE NONVSAM -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    (NAME(\"typename\") -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    DEVT(\"voldevt\") -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    VOLUMES(\"volname\") RECATALOG) -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    CAT(SYS1.MCATSB.CLUSTER)\";\n           idcctr = idcctr +1;\n           end;\n           end;\n        when type=\"USERCATALOG\" then do;\n           typename=word(input.index,3);\n           aucat = pos(\" VOLSER--\",input.index);\n           ducat = pos(\" DEVTYPE-\",input.index);\n           if aucat\u00ac=0 then do;\n                volname=word(substr(input.index,aucat+19),1);\n                end;\n           if ducat\u00ac=0 then do;\n                voldevt=word(substr(input.index,ducat+23),1);\n                if substr(voldevt,1,1)=\"F\" then voldevt=\"3390\";\n                  else voldevt=\"3380\";\n                end;\n           idc.idcctr=\" IMPORT CONNECT OBJECTS -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    ((\"typename \"DEVT(\"voldevt\") -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    VOLUMES(\"volname\"))) -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    CAT(SYS1.MCATSA.CLUSTER)\";\n           idcctr = idcctr +1;\n           idc.idcctr=\" IMPORT CONNECT OBJECTS -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    ((\"typename \"DEVT(\"voldevt\") -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    VOLUMES(\"volname\"))) -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    CAT(SYS1.MCATSB.CLUSTER)\";\n           idcctr = idcctr +1;\n           end;\n        otherwise nop;\n     end;\nend;\n\"EXECIO * DISKW OUTPUT (FINIS STEM IDC.\";\n\"FREE F(SYSIN SYSPRINT IAMPRINT OUTPUT)\";\n\"ALLOC F(SYSIN) DA(*)\";\n\"ALLOC F(SYSPRINT) DA(*)\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CATSCANP": {"ttr": 1550, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00\\x92'_\\x00\\x92'_\\x13A\\x006\\x00\\x81\\x00\\t\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-10-01T00:00:00", "modifydate": "1992-10-01T13:41:00", "lines": 54, "newlines": 129, "modlines": 9, "user": "TECH110"}, "text": "/* REXX EXEC to build CATALOG entries */\ntrue=1; false=0;\n\"FREE F(SYSIN SYSPRINT IAMPRINT OUTPUT)\";\n\"ALLOC F(SYSIN) NEW DELETE TRACK SPACE(1 1)\";\n\"ALLOC F(SYSPRINT) NEW DELETE TRACK SPACE(10 5)\";\n\"ALLOC F(IAMPRINT) DUMMY\";\n\"ALLOC F(OUTPUT) DA('TECH110.USER.CNTLLIB(CATOUTZ)') SHR\";\nSYSIN.1 = \" LISTC ALL CAT(SYS1.UCATSM.CLUSTER)\";\n\"EXECIO * DISKW SYSIN (FINIS STEM SYSIN.\";\n\"CALL 'SYS1.LINKLIB(IDCAMS)'\";\n\"EXECIO * DISKR SYSPRINT (FINIS STEM OUTPUT.\";\ninputctr = 0;\ndo index = 1 to output.0;\n     parse var output.index cc 2 ty 3 trail ;\n     select;\n       when cc=\" \" then ,\n        input.inputctr = input.inputctr strip(substr(output.index,2));\n       when cc=\"0\" then do;\n           if ty=\" \" & trail\u00ac=\" \" then ,\n        input.inputctr = input.inputctr strip(substr(output.index,2));\n        else do;\n          if substr(output.index,2,5)\u00ac=\"ALIAS\" & ,\n             substr(output.index,2,7)\u00ac=\"CLUSTER\" & ,\n             substr(output.index,2,11)\u00ac=\"USERCATALOG\" & ,\n             substr(output.index,2,7)\u00ac=\"NONVSAM\" then iterate index;\n          inputctr = inputctr+1;\n          input.inputctr = strip(substr(output.index,2));\n          end;\n       end;\n       otherwise nop;\n     end;\nend;\nidcctr = 1;\ndo index = 1 to inputctr;\n     type = word(input.index,1); /* alias, nvsam , cl */\n     select;\n        when type=\"NONVSAM\" then do;\n           typename=word(input.index,3);\n          if pos(\"SYST.\",typename)\u00ac=0 then do;\n           tdsn=\"'\"typename\"'\";\n           x=listdsi(tdsn directory);\n           if sysdsorg=\"PO\" & sysmembers=0 then do;\n              idc.idcctr=\"Member count is 0 for DSN:\" typename;\n              idcctr = idcctr +1;\n           end;\n           end;\n           end;\n        otherwise nop;\n     end;\nend;\n\"EXECIO * DISKW OUTPUT (FINIS STEM IDC.\";\n\"FREE F(SYSIN SYSPRINT IAMPRINT OUTPUT)\";\n\"ALLOC F(SYSIN) DA(*)\";\n\"ALLOC F(SYSPRINT) DA(*)\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CATTEMP": {"ttr": 1552, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92&\\x0f\\x00\\x92&\\x0f\\x15\\x15\\x00g\\x00g\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-09-16T00:00:00", "modifydate": "1992-09-16T15:15:00", "lines": 103, "newlines": 103, "modlines": 1, "user": "TECH110"}, "text": "/* REXX EXEC to build CATALOG entries */\ntrue=1; false=0;\n\"FREE F(SYSIN SYSPRINT IAMPRINT OUTPUT)\";\n\"ALLOC F(SYSIN) NEW DELETE TRACK SPACE(1 1)\";\n\"ALLOC F(SYSPRINT) NEW DELETE TRACK SPACE(10 5)\";\n\"ALLOC F(IAMPRINT) DUMMY\";\n\"ALLOC F(OUTPUT) DA('TECH110.USER.CNTLLIB(CATOUT)') SHR\";\nSYSIN.1 = \" LISTC UCAT ALL\";\n\"EXECIO * DISKW SYSIN (FINIS STEM SYSIN.\";\n\"CALL 'SYS1.LINKLIB(IDCAMS)'\";\n\"EXECIO * DISKR SYSPRINT (FINIS STEM OUTPUT.\";\ninputctr = 0;\ndo index = 1 to output.0;\n     parse var output.index cc 2 ty 3 trail ;\n     select;\n       when cc=\" \" then ,\n        input.inputctr = input.inputctr strip(substr(output.index,2));\n       when cc=\"0\" then do;\n           if ty=\" \" & trail\u00ac=\" \" then ,\n        input.inputctr = input.inputctr strip(substr(output.index,2));\n        else do;\n          if substr(output.index,2,5)\u00ac=\"ALIAS\" & ,\n             substr(output.index,2,7)\u00ac=\"CLUSTER\" & ,\n             substr(output.index,2,11)\u00ac=\"USERCATALOG\" & ,\n             substr(output.index,2,7)\u00ac=\"NONVSAM\" then iterate index;\n          inputctr = inputctr+1;\n          input.inputctr = strip(substr(output.index,2));\n          end;\n       end;\n       otherwise nop;\n     end;\nend;\nidcctr = 1;\nhlqlist=\"\";\nuctlist=\"\";\ndo index = 1 to inputctr;\n     type = word(input.index,1); /* alias, nvsam , cl */\n     select;\n        when type=\"ALIAS\" then do;\n           typename=word(input.index,3);\n           aucat = pos(\" USERCAT--\",input.index);\n           anvsm = pos(\" NONVSAM--\",input.index);\n           if aucat\u00ac=0 then do;\n                assocname=word(substr(input.index,aucat+10),1);\n                if wordpos(assocname,uctlist)=0 then ,\n                   uctlist = uctlist assocname;\n                end;\n            else ,\n                assocname=word(substr(input.index,anvsm+10),1);\n           idc.idcctr=\" DEFINE ALIAS (NAME(\"typename\") -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"                REL(\"assocname\"))\";\n           idcctr = idcctr +1;\n           end;\n        when type=\"NONVSAM\" then do;\n           typename=word(input.index,3);\n           parse var typename hlq \".\" . ;\n           hlq=strip(hlq);\n           if wordpos(hlq,hlqlist)\u00ac=0 then iterate index;\n             else hlqlist = hlqlist hlq;\n           end;\n        when type=\"USERCATALOG\" then do;\n           typename=word(input.index,3);\n           aucat = pos(\" VOLSER--\",input.index);\n           if aucat\u00ac=0 then do;\n                volname=word(substr(input.index,aucat+18),1);\n                end;\n           idc.idcctr=\" IMPORT CONNECT OBJECTS -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\" ((\"typename \"DEVT(3390) -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\" VOLUMES(\"volname\"))) -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\" CAT(SYS1.MCATSA.CLUSTER)\";\n           idcctr = idcctr +1;\n           idc.idcctr=\" IMPORT CONNECT OBJECTS -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\" ((\"typename \"DEVT(3390) -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\" VOLUMES(\"volname\"))) -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\" CAT(SYS1.MCATSB.CLUSTER)\";\n           idcctr = idcctr +1;\n           end;\n        otherwise nop;\n     end;\nend;\nhlqctr = words(hlqlist);\ndo index=1 to hlqctr;\n     hlqname=word(hlqlist,index);\n     idc.idcctr=\" /* NONVSAM HLQ:\" left(hlqname,9) \"*/\";\n     idcctr = idcctr + 1;\nend;\nuctctr = words(uctlist);\ndo index=1 to uctctr;\n     uctname=word(uctlist,index);\n     idc.idcctr=\" /* Usercatalog:\" left(uctname,45) \"*/\";\n     idcctr = idcctr + 1;\nend;\n\"EXECIO * DISKW OUTPUT (FINIS STEM IDC.\";\n\"FREE F(SYSIN SYSPRINT IAMPRINT OUTPUT)\";\n\"ALLOC F(SYSIN) DA(*)\";\n\"ALLOC F(SYSPRINT) DA(*)\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CBTDOC": {"ttr": 1795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x91\\x15O\\x00\\x91\\x15o\\x144\\x00\\t\\x00\\t\\x00\\x03\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-06-03T00:00:00", "modifydate": "1991-06-05T14:34:00", "lines": 9, "newlines": 9, "modlines": 3, "user": "JEFFK"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSUT2 DD DSN=JEFFK.USER.CNTLLIB(CBTLOAD),DISP=SHR\n//SYSUT1 DD DSN=CBTINP,DISP=OLD,LABEL=(3,NL),VOL=SER=CBTTAP,\n// DCB=(LRECL=80,RECFM=FB,BLKSIZE=32720),UNIT=TA80\n//SYSIN DD DUMMY\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBTTEMP": {"ttr": 1797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x91\\x15o\\x00\\x925o\\x17\\x04\\x00a\\x00a\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1991-06-05T00:00:00", "modifydate": "1992-12-21T17:04:00", "lines": 97, "newlines": 97, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=4M\n//ASMFCL PROC  V1=CBTTAP,      -   INPUT TAPE VOLUME\n//*            VO=,            -   OUTPUT DASD VOLUME\n//             P=CBT973,           DECOMPRESSION PROGRAM\n//             LAB=002,            INPUT TAPE LABEL NUMBER FOR PROGRAM\n//             CLASS='*',      -   SYSOUT CLASS\n//             WORK1=SYSDA,        DASD OUTPUT TYPE\n//             WORK2=SYSDA,        DASD WORK TYPE\n//             INDEX=TECH110,  -   FIRST LEVEL INDEX FOR DSNAME\n//             DSP=PASS,           OUTPUT DATASET DISPOSITION\n//             UNT=TA80,       -   TYPE UNIT NAME\n//             TY=NL,              TAPE FILE LABEL\n//             PRI=1,              PRIMARY ALLOCATION\n//             SEC=1,              SECONDARY ALLOCATION\n//             DIR=1,              NUMBER OF DIRECTORY BLOCKS\n//             ALLOC=TRK,          ALLOC INCREMENT\n//             LR=80,              LRECL\n//             BKI=32720,          INPUT BLOCKSIZE\n//             FM=FB               RECFM\n//ASM      EXEC  PGM=IEV90,REGION=256K,COND=EVEN,PARM='OBJECT,NODECK'\n//SYSPRINT DD  SYSOUT=&CLASS\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.MODGEN,DISP=SHR\n//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2\n//SYSUT2   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2\n//SYSUT3   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2\n//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(NEW,&DSP.),\n//             UNIT=&WORK1.,FREE=CLOSE,\n//             SPACE=(&ALLOC.,(&PRI.,&SEC.),RLSE) VOL=SER=&VO\n//SYSIN    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),\n//             DCB=(RECFM=&FM.,LRECL=&LR.,BLKSIZE=&BKI.),\n//             LABEL=(&LAB,&TY.,EXPDT=98000)\n//LKED     EXEC  PGM=IEWL,REGION=256K,COND=(4,LT,ASM),PARM=LIST\n//SYSPRINT DD  SYSOUT=&CLASS\n//SYSUT1   DD  SPACE=(CYL,(10,10)),UNIT=&WORK2\n//SYSLMOD  DD  DSN=&INDEX..FILE&LAB..LOAD(&P),DISP=(NEW,&DSP.),\n//             UNIT=&WORK1.,FREE=CLOSE,\n//             SPACE=(&ALLOC.,(&PRI.,&SEC.,&DIR.),RLSE) VOL=SER=&VO\n//SYSLIN   DD  DSN=&INDEX..FILE&LAB..OBJ,DISP=(OLD,&DSP.),\n//             LABEL=(&LAB,&TY.)\n//       PEND\n//UPDATEO PROC V1=CBTTAP,          INPUT TAPE VOLUME\n//             P=CBT973,           DECOMPRESSION PROGRAM\n//             P1=IEBUPDTE,   PROGRAM TO PROCESS IEBUPDTE SYSIN\n//*                           STREAM. YOU MAY USE THE NORMAL IBM PGM\n//*                           OR YOU MAY HAVE INSTALLED THE PDSLOAD\n//*                           PROGRAM FROM FILE 316 OF THE CBT TAPE\n//*                           WHICH IS USEFUL FOR FILES UNLOADED BY\n//*                           THE FAMOUS YALE OFFLOAD PROGRAM. CAN\n//*                           CHANGE THE IMBEDDED '><' TO './' AT\n//*                           RELOAD.\n//*   ---->                    IF PDSLOAD,  USE SYSUT1 DD\n//*   ---->                    IF IEBUPDTE, USE SYSIN  DD\n//             STEPLB='SYS1.LINKLIB',   LIBRARY THAT CONTAINS PGM=P1\n//             S='NEW',            'NEW'           IF IEBUPDTE\n//*                                'UPDTE(><)'     IF PDSLOAD\n//             VO=,                OUTPUT DASD VOLUME\n//             LAB=,               INPUT TAPE LABEL NUMBER\n//             CLASS='*',          SYSOUT CLASS\n//             WORK1=SYSDA,        DASD OUTPUT TYPE\n//             INDEX=TECH110,      FIRST LEVEL INDEX FOR DSNAME\n//             TYPE=PDS,           THIRD LEVEL TYPE FOR DSNAME\n//             DSP=CATLG,          OUTPUT DATASET DISPOSITION\n//             UNT=TA80,           TYPE UNIT NAME\n//             TY=NL,              TAPE FILE LABEL\n//             PRI=190,            PRIMARY ALLOCATION\n//             SEC=190,            SECONDARY ALLOCATION\n//             DIR=92,             NUMBER OF DIRECTORY BLOCKS\n//             ALLOC=TRK,          ALLOC INCREMENT\n//             LR=80,              LRECL\n//             BKI=32720,          INPUT BLOCKSIZE\n//             BKO=5600,           OUTPUT BLOCKSIZE\n//             FM=FB               RECFM\n//UPDATE1  EXEC  PGM=&P,REGION=512K,COND=EVEN\n//STEPLIB  DD  DSN=*.ASMFCL.LKED.SYSLMOD,DISP=(SHR,PASS)\n//INPUT    DD  UNIT=&UNT,VOL=(,RETAIN,SER=&V1),DISP=(OLD,PASS),\n//             DCB=(RECFM=VB,LRECL=94,BLKSIZE=&BKI.),\n//             LABEL=(&LAB,&TY.,EXPDT=98000)\n//OUTPUT   DD  DSN=&&TEMP,DISP=(NEW,PASS),\n//             UNIT=&WORK1.,\n//             DCB=(RECFM=&FM.,LRECL=&LR.,BLKSIZE=&BKO.),\n//             SPACE=(&ALLOC.,(&PRI.,&SEC.),RLSE) VOL=SER=&VO\n//UPDATE2  EXEC  PGM=&P1,PARM='&S',COND=EVEN\n//STEPLIB  DD  DSN=&STEPLB,DISP=SHR\n//SYSPRINT DD  SYSOUT=&CLASS\n//*                            IF PDSLOAD,  USE SYSUT1 DD\n//*                            IF IEBUPDTE, USE SYSIN  DD\n//SYSIN    DD  DSN=&&TEMP,DISP=(OLD,DELETE)\n//*YSUT1   DD  DSN=&&TEMP,DISP=(OLD,DELETE)\n//SYSUT2   DD  DSN=&INDEX..FILE&LAB..&TYPE.,DISP=(NEW,&DSP.),\n//             UNIT=&WORK1.,FREE=CLOSE,\n//             DCB=(RECFM=&FM.,LRECL=&LR.,BLKSIZE=&BKO.),\n//             SPACE=(&ALLOC.,(&PRI.,&SEC.,&DIR.),RLSE),VOL=SER=&VO\n//       PEND\n//ASMFCL      EXEC ASMFCL\n//STEP171     EXEC UPDATEO,LAB=171\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CCPRCOLD": {"ttr": 1800, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x010\\x00\\x00\\x00\\x923\\x9f\\x00\\x94\\x14_\\x12\\x17\\x01E\\x00\\x04\\x01D\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.48", "flags": 0, "createdate": "1992-12-04T00:00:00", "modifydate": "1994-05-25T12:17:00", "lines": 325, "newlines": 4, "modlines": 324, "user": "TECH110"}, "text": "/* REXX PROD XREF CC SCANNER */\nOUTPTR=1;\n\"EXECIO * DISKR CCSCAN (STEM CC. FINIS\";\nTRUE=\"1\";\nFALSE=\"0\";\nFOUNDMEM=FALSE;\nMEMCTR=0;\nDO I = 1 TO CC.0;\n  IF SUBSTR(CC.I,1,7)=\"MEMBER=\" THEN DO;\n       MEMNAME=SUBSTR(CC.I,8,8);\n       FOUNDMEM=TRUE;\n       MEMCTR=MEMCTR+1;\n       MEMDATA.MEMCTR=MEMNAME;\n       DROP CC.I;\n       ITERATE I;\n       END;\n   ELSE IF \u00acFOUNDMEM THEN EXIT 24; /* ERROR */\n  MEMDATA.MEMCTR = ,\nMEMDATA.MEMCTR STRIP(TRANSLATE(SUBSTR(CC.I,1,71),\"     \",\"=()-,\"));\n  DROP CC.I;\nEND;\nDROP CC.0;\nMEMDATA.0=MEMCTR;\nDO I = 1 TO MEMDATA.0;\n    PARSE VAR MEMDATA.I MEMNAME MEMDATA.I;\n    MEMDATA.I=SPACE(MEMDATA.I);\n    SCANCOM = TRUE; /* REMOVE ALL COMMENTS */\n    DO WHILE(SCANCOM);\n          SCANCOM=FALSE;\n          POS1=POS(\"/*\",MEMDATA.I);\n          IF POS1\u00ac=0 THEN DO;\n              POS2=POS(\"*/\",MEMDATA.I,POS1+2);\n              IF POS2\u00ac=0 THEN DO;\n                  DLEN = POS2 - POS1 + 2; /* COMMENT LEN */\n                  MEMDATA.I = DELSTR(MEMDATA.I,POS1,DLEN);\n                  SCANCOM = TRUE; /* SCAN FOR MORE COMMENTS */\n                  END;\n             END;\n      END;\n    ZZ=SUBSTR(MEMDATA.I,1,1);\n    IF ZZ=\"/\" | ZZ>=\"0\" THEN ITERATE I;\n    IF WORD(MEMDATA.I,1)=\"SORT\" THEN ITERATE I;\n    IF WORDPOS(\"REPRO\",MEMDATA.I)\u00ac=0 THEN DO;\n       DO WHILE(WORDPOS(\"REPRO\",MEMDATA.I)\u00ac=0);\n         OP=WORDPOS(\"REPRO\",MEMDATA.I)+1;\n         XX=DELWORD(MEMDATA.I,OP-1,1);\n         KEYW1=WORD(MEMDATA.I,OP);\n         KEYW2=WORD(MEMDATA.I,OP+2);\n         ACODE=\"\";\n         IF KEYW1=\"IFILE\"|KEYW1=\"INFILE\" THEN DO;\n              ACODE=\"D\"; ANAME=WORD(MEMDATA.I,OP+1); END;\n         ELSE IF KEYW1=\"OFILE\"|KEYW1=\"OUTFILE\" THEN DO;\n              ACODE=\"E\"; ANAME=WORD(MEMDATA.I,OP+1); END;\n         ELSE IF KEYW1=\"IDS\"|KEYW1=\"INDATASET\" THEN DO;\n              ACODE=\"F\"; ANAME=WORD(MEMDATA.I,OP+1); END;\n         ELSE IF KEYW1=\"ODS\"|KEYW1=\"OUTDATASET\" THEN DO;\n              ACODE=\"G\"; ANAME=WORD(MEMDATA.I,OP+1); END;\n         ELSE NOP;\n  IF ACODE\u00ac=\"\" THEN DO;\n    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);\n    OUTPTR=OUTPTR+1; END;\n  ACODE=\"\";\n         IF KEYW2=\"IFILE\"|KEYW2=\"INFILE\" THEN DO;\n              ACODE=\"D\"; ANAME=WORD(MEMDATA.I,OP+3); END;\n         ELSE IF KEYW2=\"OFILE\"|KEYW2=\"OUTFILE\" THEN DO;\n              ACODE=\"E\"; ANAME=WORD(MEMDATA.I,OP+3); END;\n         ELSE IF KEYW2=\"IDS\"|KEYW2=\"INDATASET\" THEN DO;\n              ACODE=\"F\"; ANAME=WORD(MEMDATA.I,OP+3); END;\n         ELSE IF KEYW2=\"ODS\"|KEYW2=\"OUTDATASET\" THEN DO;\n              ACODE=\"G\"; ANAME=WORD(MEMDATA.I,OP+3); END;\n         ELSE NOP;\n  IF ACODE\u00ac=\"\" THEN DO;\n    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);\n    OUTPTR=OUTPTR+1; END;\n  ACODE=\"\";\n  MEMDATA.I=XX;\n         END;\n         END;\n    IF WORDPOS(\"PROG\",MEMDATA.I)\u00ac=0 THEN DO;\n       DO WHILE(WORDPOS(\"PROG\",MEMDATA.I)\u00ac=0);  /* DB2 */\n         OP=WORDPOS(\"PROG\",MEMDATA.I)+1;\n         XX=DELWORD(MEMDATA.I,OP-1,1);\n         KEYW1=WORD(MEMDATA.I,OP);\n         KEYW2=WORD(MEMDATA.I,OP+1);\n         ACODE=\"\";\n         IF KEYW2=\"PLAN\" THEN DO;\n              ACODE=\"Z\";\n              ANAME=TRANSLATE(KEYW1,\" \",\"'\");\n              KEYW3=WORD(MEMDATA.I,OP+2); /* GET PLAN NAME */\n              PLNAME=TRANSLATE(KEYW3,\" \",\"'\"); END;\n         ELSE NOP;\n  IF ACODE\u00ac=\"\" THEN DO;\n    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);\n    OUTPTR=OUTPTR+1;\n     IF ANAME\u00ac=PLNAME THEN DO; /* ONLY IF PLAN NAME DIFF THAN PROG*/\n       OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(PLNAME,44);\n       OUTPTR=OUTPTR+1;\n       END;\n    END;\n  ACODE=\"\";\n  MEMDATA.I=XX;\n         END;\n         END;\n    IF WORDPOS(\"OPTION\",MEMDATA.I)\u00ac=0 THEN DO;\n       DO WHILE(WORDPOS(\"OPTION\",MEMDATA.I)\u00ac=0);\n         OP=WORDPOS(\"OPTION\",MEMDATA.I)+1;\n         XX=DELWORD(MEMDATA.I,OP-1,1);\n         KEYW1=WORD(MEMDATA.I,OP); /* = DYL280 OPTION RESTORE PGM */\n         KEYW2=WORD(MEMDATA.I,OP+1); /* PGM NAME */\n         ACODE=\"\";\n         IF KEYW1=\"RESTORE\" THEN DO;\n              ACODE=\"Y\";\n              ANAME=TRANSLATE(KEYW2,\" \",\"'\"); END;\n         ELSE NOP;\n  IF ACODE\u00ac=\"\" THEN DO;\n    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);\n    OUTPTR=OUTPTR+1;\n    END;\n  ACODE=\"\";\n  MEMDATA.I=XX;\n         END;\n         END;\n    IF WORDPOS(\"SELECT\",MEMDATA.I)\u00ac=0 THEN DO;\n       DO WHILE(WORDPOS(\"SELECT\",MEMDATA.I)\u00ac=0);\n         OP=WORDPOS(\"SELECT\",MEMDATA.I)+1;\n         XX=DELWORD(MEMDATA.I,OP-1,1);\n         KEYW1=WORD(MEMDATA.I,OP);\n         KEYW2=WORD(MEMDATA.I,OP+1);\n         ACODE=\"\";\n         IF KEYW1=\"DSN\" | KEYW1=\"DSG\" THEN DO;\n              ACODE=\"F\";\n              ANAME=KEYW2; END;\n         ELSE NOP;\n  IF ACODE\u00ac=\"\" THEN DO;\n    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);\n    OUTPTR=OUTPTR+1; END;\n  ACODE=\"\";\n  MEMDATA.I=XX;\n         END;\n         END;\n    IF WORDPOS(\"DUMP\",MEMDATA.I)\u00ac=0 | ,\n       WORDPOS(\"DUM\",MEMDATA.I)\u00ac=0 | ,\n       WORDPOS(\"RESTORE\",MEMDATA.I)\u00ac=0 | ,\n       WORDPOS(\"RESTOR\",MEMDATA.I)\u00ac=0 | ,\n       WORDPOS(\"RESTO\",MEMDATA.I)\u00ac=0 | ,\n       WORDPOS(\"REST\",MEMDATA.I)\u00ac=0 THEN DO;\n       DO WHILE(WORDPOS(\"DUMP\",MEMDATA.I)\u00ac=0 | ,\n                WORDPOS(\"DUM\",MEMDATA.I)\u00ac=0 | ,\n                WORDPOS(\"RESTORE\",MEMDATA.I)\u00ac=0 | ,\n                WORDPOS(\"RESTOR\",MEMDATA.I)\u00ac=0 | ,\n                WORDPOS(\"RESTO\",MEMDATA.I)\u00ac=0 | ,\n                WORDPOS(\"REST\",MEMDATA.I)\u00ac=0);\n        DTYPE=\"DUMP\";\n        IF WORDPOS(\"DUMP\",MEMDATA.I)\u00ac=0 THEN ,\n           OP=WORDPOS(\"DUMP\",MEMDATA.I)+1;\n        ELSE IF WORDPOS(\"DUM\",MEMDATA.I)\u00ac=0 THEN ,\n           OP=WORDPOS(\"DUM\",MEMDATA.I)+1;\n        ELSE IF WORDPOS(\"RESTORE\",MEMDATA.I)\u00ac=0 THEN DO;\n           OP=WORDPOS(\"RESTORE\",MEMDATA.I)+1; DTYPE=\"REST\"; END;\n        ELSE IF WORDPOS(\"RESTOR\",MEMDATA.I)\u00ac=0 THEN DO;\n           OP=WORDPOS(\"RESTOR\",MEMDATA.I)+1; DTYPE=\"REST\"; END;\n        ELSE IF WORDPOS(\"RESTO\",MEMDATA.I)\u00ac=0 THEN DO;\n           OP=WORDPOS(\"RESTO\",MEMDATA.I)+1; DTYPE=\"REST\"; END;\n        ELSE DO;\n           OP=WORDPOS(\"REST\",MEMDATA.I)+1; DTYPE=\"REST\"; END;\n         XX=DELWORD(MEMDATA.I,OP-1,1);\n         IF WORDPOS(\"INC\",MEMDATA.I,OP)\u00ac=0 THEN ,\n             OP1=WORDPOS(\"INC\",MEMDATA.I,OP)+1;\n         ELSE IF WORDPOS(\"INCL\",MEMDATA.I,OP)\u00ac=0 THEN ,\n             OP1=WORDPOS(\"INCL\",MEMDATA.I,OP)+1;\n         ELSE IF WORDPOS(\"INCLU\",MEMDATA.I,OP)\u00ac=0 THEN ,\n             OP1=WORDPOS(\"INCLU\",MEMDATA.I,OP)+1;\n         ELSE IF WORDPOS(\"INCLUD\",MEMDATA.I,OP)\u00ac=0 THEN ,\n             OP1=WORDPOS(\"INCLUD\",MEMDATA.I,OP)+1;\n         ELSE IF WORDPOS(\"INCLUDE\",MEMDATA.I,OP)\u00ac=0 THEN ,\n             OP1=WORDPOS(\"INCLUDE\",MEMDATA.I,OP)+1;\n         ELSE OP1=\"\";\n         ACODE=\"\";\n         IF OP1\u00ac=\"\" THEN DO;\n         KEYW1 = \"DSNAME\";\n         DO WHILE (KEYW1\u00ac=\"\");\n         KEYW1=WORD(MEMDATA.I,OP1);\n         IF POS(\".\",KEYW1)\u00ac=0 THEN DO;\n           ANAME=KEYW1;\n           OP1=OP1+1;\n           IF DTYPE=\"DUMP\" THEN ,\n             ACODE=\"F\";\n            ELSE ACODE=\"G\";\n            OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);\n            OUTPTR=OUTPTR+1;\n          END;\n          ELSE KEYW1=\"\";\n         END; /* END OF DO WHILE */\n         END; /* END OF OP1 NE NULL */\n  ACODE=\"\";\n  MEMDATA.I=XX;\n         END;\n         END;\n    IF WORDPOS(\"DELETE\",MEMDATA.I)\u00ac=0 THEN DO;\n       DO WHILE(WORDPOS(\"DELETE\",MEMDATA.I)\u00ac=0);\n         OP=WORDPOS(\"DELETE\",MEMDATA.I)+1;\n         XX=DELWORD(MEMDATA.I,OP-1,1);\n         ANAME=WORD(MEMDATA.I,OP);\n         ACODE=\"H\";\n    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);\n    OUTPTR=OUTPTR+1;\n  MEMDATA.I=XX;\n         END;\n         END;\n    IF WORDPOS(\"DEFINE\",MEMDATA.I)\u00ac=0 THEN DO;\n       DO WHILE(WORDPOS(\"DEFINE\",MEMDATA.I)\u00ac=0);\n         OP=WORDPOS(\"DEFINE\",MEMDATA.I)+1;\n         XX=DELWORD(MEMDATA.I,OP-1,1);\n         ACODE=\"\";\n         KEYW1=WORD(MEMDATA.I,OP);\n         KEYW2=WORD(MEMDATA.I,OP+1);\n         ANAME=WORD(MEMDATA.I,OP+2);\n  IF (KEYW1=\"ALTERNATEINDEX\" | KEYW1=\"AIX\") & KEYW2=\"NAME\" THEN ,\n            ACODE=\"J\";\n  ELSE IF (KEYW1=\"CLUSTER\" | KEYW1=\"CL\") & KEYW2=\"NAME\" THEN ,\n            ACODE=\"I\";\n  ELSE IF (KEYW1=\"NONVSAM\" | KEYW1=\"NVSAM\") & KEYW2=\"NAME\" THEN ,\n            ACODE=\"L\";\n  ELSE IF (KEYW1=\"PATH\") & KEYW2=\"NAME\" THEN ,\n            ACODE=\"K\";\n  IF ACODE\u00ac=\"\" THEN DO;\n    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);\n    OUTPTR=OUTPTR+1; END;\n  MEMDATA.I=XX;\n         END;\n         END;\n    IF WORDPOS(\"VERIFY\",MEMDATA.I)\u00ac=0 THEN DO;\n       DO WHILE(WORDPOS(\"VERIFY\",MEMDATA.I)\u00ac=0);\n         OP=WORDPOS(\"VERIFY\",MEMDATA.I)+1;\n         XX=DELWORD(MEMDATA.I,OP-1,1);\n         KEYW1=WORD(MEMDATA.I,OP);\n         ANAME=WORD(MEMDATA.I,OP+1);\n         ACODE=\"\";\n         IF KEYW1=\"FILE\" THEN ACODE=\"M\";\n         ELSE IF KEYW1=\"DS\"|KEYW1=\"DATASET\" THEN ACODE=\"N\";\n         ELSE NOP;\n  IF ACODE\u00ac=\"\" THEN DO;\n    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);\n    OUTPTR=OUTPTR+1; END;\n  MEMDATA.I=XX;\n         END;\n         END;\n    IF WORDPOS(\"EXPORT\",MEMDATA.I)\u00ac=0 THEN DO;\n     FXO = \"\";\n     FXC = WORDS(MEMDATA.I);\n     DO FX = 1 TO FXC;\n      FXW = WORD(MEMDATA.I,FX);\n      IF FXW=\"EXO\" | FXW=\"ESTOP\" | FXW=\"VSAMAID\" THEN ITERATE FX;\n      FXO = FXO FXW;\n     END;\n     MEMDATA.I = FXO;\n       DO WHILE(WORDPOS(\"EXPORT\",MEMDATA.I)\u00ac=0);\n         OP=WORDPOS(\"EXPORT\",MEMDATA.I)+1;\n         XX=DELWORD(MEMDATA.I,OP-1,1);\n         KEYW1=WORD(MEMDATA.I,OP);\n         IF KEYW1=\"EXO\" | KEYW1=\"ESTOP\" | KEYW1=\"VSAMAID\" | ,\n            KEYW1=\"RECLEVEL\" | KEYW1=\"MOUNT\" THEN DO;\n                OP=OP+1;\n                KEYW1=WORD(MEMDATA.I,OP);\n                END;\n         OP=OP+1;\n         IF KEYW1=\"CLUSTER\" THEN DO;\n         ACODE=\"DUMMY\";\n         DO WHILE(ACODE\u00ac=\"\");\n         KEYW2=WORD(MEMDATA.I,OP+0);\n         ANAME=WORD(MEMDATA.I,OP+1);\n         IF KEYW2=\"CL\" | KEYW2=\"CLUSTER\" THEN ACODE=\"O\";\n         ELSE ACODE=\"\";\n  IF ACODE\u00ac=\"\" THEN DO;\n    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);\n    OUTPTR=OUTPTR+1; END;\n         OP=OP+2;\n         END;\n         END;\n  MEMDATA.I=XX;\n         END;\n         END;\n    IF WORDPOS(\"RESTORE\",MEMDATA.I)\u00ac=0 THEN DO;\n     FXO = \"\";\n     FXC = WORDS(MEMDATA.I);\n     DO FX = 1 TO FXC;\n      FXW = WORD(MEMDATA.I,FX);\n      IF FXW=\"REMP\" | FXW=\"RVER\" | FXW=\"PURGE\" | ,\n         FXW=\"VSAMAID\" | FXW=\"NODELETE\" | FXW=\"ESTOP\" | ,\n         FXW=\"NOXTC\" THEN ITERATE FX;\n      FXO = FXO FXW;\n     END;\n     MEMDATA.I = FXO;\n       DO WHILE(WORDPOS(\"RESTORE\",MEMDATA.I)\u00ac=0);\n         OP=WORDPOS(\"RESTORE\",MEMDATA.I)+1;\n         XX=DELWORD(MEMDATA.I,OP-1,1);\n         KEYW1=WORD(MEMDATA.I,OP);\n         IF KEYW1=\"REMP\" | KEYW1=\"RVER\" | KEYW1=\"PURGE\" | ,\n            KEYW1=\"VSAMAID\" | KEYW1=\"NODELETE\" | ,\n            KEYW1=\"ESTOP\" | KEYW1=\"NOXTC\" THEN DO;\n                OP=OP+1;\n                KEYW1=WORD(MEMDATA.I,OP);\n                END;\n         OP=OP+1;\n         IF KEYW1=\"CLUSTER\" THEN DO;\n         ACODE=\"DUMMY\";\n         DO WHILE(ACODE\u00ac=\"\");\n         KEYW2=WORD(MEMDATA.I,OP+0);\n         ANAME=WORD(MEMDATA.I,OP+1);\n         ACODE=\"\";\n         IF KEYW2=\"CL\" | KEYW2=\"CLUSTER\" THEN ACODE=\"P\";\n         IF KEYW2=\"AIX\" THEN ACODE=\"Q\";\n         IF KEYW2=\"PATH\" THEN ACODE=\"R\";\n  IF ACODE\u00ac=\"\" THEN DO;\n    OUT.OUTPTR=LEFT(MEMNAME,8) ACODE LEFT(ANAME,44);\n    OUTPTR=OUTPTR+1; END;\n         OP=OP+2;\n         END;\n         END;\n  MEMDATA.I=XX;\n         END;\n         END;\nEND;\n\"EXECIO * DISKW OUTPUT (STEM OUT. FINIS\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CICSSUMM": {"ttr": 1806, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x00\\x00\\x93\\x16_\\x00\\x93\\x19_\\x15S\\x00G\\x00\\x13\\x00;\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "1993-06-14T00:00:00", "modifydate": "1993-07-14T15:53:00", "lines": 71, "newlines": 19, "modlines": 59, "user": "TECH110"}, "text": "/* CICS SUMMARY REXX */\nREPORTS=\"JAN92 FEB92 MARCH92 APRIL92 MAY92 JUNE92 JULY92 AUG92 \" || ,\n  \"SEPT92 OCT92 NOV92 DEC92 JAN93 FEB93 MARCH93 APRIL93 MAY93 JUNE93\";\nRPTCTR=WORDS(REPORTS);\nTRANSIDLIST=\"\";\nDO I = 1 TO RPTCTR;\n   RPTMONTH=WORD(REPORTS,I);\n   SAY \"PROCESSING\" RPTMONTH;\n   \"FREE F(RPTIN)\";\n   \"ALLOC F(RPTIN) DA('TECH102.MONTHLY.TRAN.DATA(\"RPTMONTH\")') SHR\";\n   \"EXECIO * DISKR RPTIN (FINIS STEM DATAIN.\";\n   SDATALINE=5;\n   EDATALINE=DATAIN.0-1;\n   DO J = SDATALINE TO EDATALINE;\n        PARSE VAR DATAIN.J TRANSID TRANSCOUNT FILEIOCOUNT;\n        TRANSID=STRIP(TRANSID);\n        TRANSCOUNT=SPACE(TRANSLATE(STRIP(TRANSCOUNT),\"\",\",\"),0);\n        FILEIOCOUNT=SPACE(TRANSLATE(STRIP(FILEIOCOUNT),\"\",\",\"),0);\n        XCOUNT.RPTMONTH.TRANSID = TRANSCOUNT;\n        FCOUNT.RPTMONTH.TRANSID = FILEIOCOUNT;\n        IF WORDPOS(TRANSID,TRANSIDLIST)=0 THEN ,\n            TRANSIDLIST=TRANSIDLIST TRANSID;\n   END;\nEND;\nRPTCTR=WORDS(REPORTS);\nXCTR = WORDS(TRANSIDLIST);\n\"FREE F(COUT)\";\n\"FREE F(FOUT)\";\n\"ALLOC F(COUT) DA('TECH110.XCOUNT.DATA') SHR\";\n\"ALLOC F(FOUT) DA('TECH110.FCOUNT.DATA') SHR\";\nXOCTR=2;FOCTR=2;\nXXOUT.1=\"TRANSACTION,JAN92,FEB92,MAR92,APR92,MAY92,JUN92,JUL92,\"|| ,\n \"AUG92,SEP92,OCT92,NOV92,DEC92,JAN93,FEB93,MAR93,APR93,MAY93,JUN93\";\nFFOUT.1=\"TRANSACTION,JAN92,FEB92,MAR92,APR92,MAY92,JUN92,JUL92,\"|| ,\n \"AUG92,SEP92,OCT92,NOV92,DEC92,JAN93,FEB93,MAR93,APR93,MAY93,JUN93\";\nSAY \"FORMATTING FINAL REPORTS\";\nDO K = 1 TO XCTR;\nTRANSID=WORD(TRANSIDLIST,K);\nXOUTLINE=STRIP(TRANSID);\nFOUTLINE=STRIP(TRANSID);\nX92SUM=0;X93SUM=0;\nF92SUM=0;F93SUM=0;\n  DO L = 1 TO RPTCTR;\n      RPTMONTH=WORD(REPORTS,L);\n      IF SYMBOL(\"XCOUNT.RPTMONTH.TRANSID\")=\"VAR\" THEN DO;\n          XOUTLINE=XOUTLINE\",\"XCOUNT.RPTMONTH.TRANSID;\n          FOUTLINE=FOUTLINE\",\"FCOUNT.RPTMONTH.TRANSID;\n          YEAR=SUBSTR(RPTMONTH,LENGTH(RPTMONTH)-1,2);\n          IF YEAR=\"92\" THEN DO;\n               X92SUM=X92SUM+XCOUNT.RPTMONTH.TRANSID;\n               F92SUM=F92SUM+FCOUNT.RPTMONTH.TRANSID;\n               END;\n            ELSE DO;\n               X93SUM=X93SUM+XCOUNT.RPTMONTH.TRANSID;\n               F93SUM=F93SUM+FCOUNT.RPTMONTH.TRANSID;\n               END;\n          END;\n       ELSE DO;\n          XOUTLINE=XOUTLINE\",0\";\n          FOUTLINE=FOUTLINE\",0\";\n          END;\n  END;\nXXOUT.XOCTR= ,\n   LEFT(XOUTLINE,200)RIGHT(X92SUM,12,\"0\") RIGHT(X93SUM,12,\"0\");\n  XOCTR=XOCTR+1;\nFFOUT.FOCTR= ,\n   LEFT(FOUTLINE,200)RIGHT(F92SUM,12,\"0\") RIGHT(F93SUM,12,\"0\");\n  FOCTR=FOCTR+1;\nEND;\n\"EXECIO * DISKW COUT (FINIS STEM XXOUT.\";\n\"EXECIO * DISKW FOUT (FINIS STEM FFOUT.\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CLIST": {"ttr": 1809, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94 \\x0f\\x00\\x94 \\x0f\\x10\\x07\\x00\\x03\\x00\\x02\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-07-19T00:00:00", "modifydate": "1994-07-19T10:07:00", "lines": 3, "newlines": 2, "modlines": 2, "user": "TECH110"}, "text": "PROC 0\nLIBALLDD 'LTEST2' 'SYS1.TESTSRCE.MASTER'\nLIBALLDD 'LTEST3' 'SYS1.TESTSRCE.MASTER(PAB2)'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COFF": {"ttr": 1811, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92\\x02\\x0f\\x00\\x92\\x02\\x0f\\x15&\\x00\\x03\\x00\\x03\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-01-20T00:00:00", "modifydate": "1992-01-20T15:26:00", "lines": 3, "newlines": 3, "modlines": 1, "user": "TECH110"}, "text": "/* REXX console off */\n\"CONSOLE DEACT\";\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "COMMADLM": {"ttr": 2049, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x07_\\x00\\x95\\x07_\\x12S\\x00\\x08\\x00\\x08\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-03-16T00:00:00", "modifydate": "1995-03-16T12:53:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "TECH110"}, "text": "/* REXX Build comma delimited output files from seq input files */\n\"ALLOC F(INPUT) DA('?') SHR\";\n\"EXECIO * diskr INPUT (stem inp. finis\";\n\"FREE F(INPUT)\";\ndo i = 1 to inp.0;\n   parse var inp.i ??????;\nend;\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "COMPLIB5": {"ttr": 2051, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92\\x11O\\x00\\x93\\t\\x7f\\x18G\\x00@\\x00E\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-04-23T00:00:00", "modifydate": "1993-04-07T18:47:00", "lines": 64, "newlines": 69, "modlines": 0, "user": "TECH110"}, "text": "//TECH110X JOB 5304010530000000,'TECH.SUPP.KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//DELETE1  EXEC PGM=IDCAMS\n//* STEP1: IDCAMS DELETE/UNCATALOG THE COPY LOADLIB IF IT EXISTS.\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n  DELETE  SYS1.TEST.BATCH.LOADLIB.COPY       NONVSAM SCRATCH PURGE\n  IF LASTCC = 8 THEN\n     DO\n       SET MAXCC = 0\n     END\n/*\n//*******************************************************************\n//*          ABEND STEP FOR RETURN CODE GE 8                        *\n//ABEND1   EXEC PGM=ABENDWTO,COND=(8,GE,DELETE1)\n//*                                                                 *\n//*******************************************************************\n//COPYLIB1 EXEC  PGM=IEBCOPY\n//* STEP2: COPY/ALLOCATE THE COPY LOADLIB FOR BACKUP/RECOVERY.\n//INDD1    DD    DSN=SYS1.TEST.BATCH.LOADLIB,DISP=OLD                         00\n//OUTDD1   DD    DSN=SYS1.TEST.BATCH.LOADLIB.COPY,                            00\n//         UNIT=SYSDA,DISP=(NEW,CATLG,DELETE),DATACLAS=MODULE,\n//         LIKE=SYS1.TEST.BATCH.LOADLIB,SPACE=(CYL,(130,0,300))               00\n//SYSPRINT DD    SYSOUT=*\n//SYSUT1   DD    UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD    UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD    UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD    UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSIN    DD  *\n    COPY INDD=((INDD1,R)),OUTDD=OUTDD1\n/*\n//*******************************************************************\n//*          ABEND STEP FOR RETURN CODE GE 0                        *\n//ABEND2   EXEC PGM=ABENDWTO,COND=(0,GE,COPYLIB1)\n//*                                                                 *\n//*******************************************************************\n//COMPRESS EXEC  PGM=IEBCOPY\n//* STEP3: COPY/COMPRESS LOADLIB IN-PLACE.\n//INDD1    DD    DSN=SYS1.TEST.BATCH.LOADLIB,DISP=OLD                         00\n//SYSPRINT DD    SYSOUT=*\n//SYSUT1   DD    UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD    UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD    UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD    UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSIN    DD  *\n    COPY INDD=((INDD1,R)),OUTDD=INDD1\n/*\n//*******************************************************************\n//*          ABEND STEP FOR RETURN CODE GE 0                        *\n//ABEND3   EXEC PGM=ABENDWTO,COND=(0,GE,COMPRESS)\n//*                                                                 *\n//*******************************************************************\n//DELETE2  EXEC PGM=IDCAMS\n//* STEP4: IDCAMS DELETE/UNCATALOG THE COPY LOADLIB FROM SYSDA VOLUME.\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n  DELETE  SYS1.TEST.BATCH.LOADLIB.COPY       NONVSAM SCRATCH PURGE\n/*\n//*******************************************************************\n//*          ABEND STEP FOR RETURN CODE GE 0                        *\n//ABEND4   EXEC PGM=ABENDWTO,COND=(0,GE,DELETE2)\n//*                                                                 *\n//*******************************************************************\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COPYDB": {"ttr": 2053, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92\\x11?\\x00\\x92\\x11?\\x142\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-04-22T00:00:00", "modifydate": "1992-04-22T14:32:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "TECH110"}, "text": "//COPYDB JOB 53050105300000000,'J KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=6M\n//*\n//*  THIS JOB COPIES THE RACF DATA BASE FROM SYSA TO SYSM\n//*  JOB MUST BE RUN TWICE - ALSO FOR RACF2\n//*  THE \"M\" SYSTEM MUST BE DOWN WHEN THIS RUNS\n//*\n//STEP1 EXEC PGM=IRRUT400,PARM='NOLOCKINPUT'\n//SYSPRINT DD SYSOUT=*\n//INDD1   DD DSN=SYSA.RACF1,DISP=SHR\n//OUTDD1  DD DSN=SYSM.RACF1,DISP=SHR\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "COPYSMS": {"ttr": 2055, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x91&\\x9f\\x00\\x91&\\x9f\\x12\\x07\\x00\\r\\x00\\x0e\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-09-26T00:00:00", "modifydate": "1991-09-26T12:07:00", "lines": 13, "newlines": 14, "modlines": 6, "user": "TECH110"}, "text": "//COPYSMS  JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=FDRCOPY,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSPRIN1 DD SYSOUT=*\n//DISK1    DD DSN=SYSM.NETVIEW.V1R3M0.CNMSAMP,DISP=SHR\n//TAPE1    DD DSN=TECH110.NETVIEW.V1R3M0.CNMSAMP,DISP=(NEW,CATLG),\n// DSNTYPE=PDS,SPACE=(CYL,(5,2,90)),DATACLAS=CNTL\n//SYSIN DD *\n COPY TYPE=DSF\n SELECT DD=DISK1,NEWDD=TAPE1\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COUNTER": {"ttr": 2057, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x95\\x05\\x9f\\x00\\x95\\x05\\x9f\\x18\\x13\\x00\\x18\\x00\\x1a\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1995-02-28T00:00:00", "modifydate": "1995-02-28T18:13:00", "lines": 24, "newlines": 26, "modlines": 0, "user": "TECH110"}, "text": "/* REXX */\n\"ALLOC F(MLBIN) DA('TECH110.MLB.REPORT11') SHR\";\n\"EXECIO * DISKR MLBIN (FINIS STEM MLB.\";\n\"FREE F(MLBIN)\";\nLIST = \"\";\nDO I = 1 TO MLB.0;\n   ZZ = STRIP(MLB.I);\n   IF WORDPOS(ZZ,LIST) = 0 THEN DO;\n        LIST = LIST ZZ;\n        COUNT.ZZ = 1;\n        END;\n     ELSE DO;\n        COUNT.ZZ = COUNT.ZZ + 1;\n       END;\nEND;\nX = WORDS(LIST);\n\"ALLOC F(OUTPUT) DA('TECH110.USER.CNTLLIB(OUTCOUNT)') SHR\";\nOUTP = 1;\nDO I = 1 TO X;\n   PTR = WORD(LIST,I);\n   OUTDATA.OUTP = LEFT(PTR,8)RIGHT(COUNT.PTR,8,\"0\");\n   OUTP=OUTP+1;\nEND;\n\"EXECIO * DISKW OUTPUT (FINIS STEM OUTDATA.\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CPKMAP": {"ttr": 2059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90\\x19/\\x00\\x90\\x19/\\x11X\\x00\\t\\x00\\t\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-07-11T00:00:00", "modifydate": "1990-07-11T11:58:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=FDRCPK,REGION=6M\n//STEPLIB DD DSN=SYS3.IDP.MODFDR51,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSMAP DD SYSOUT=*\n//SYSIN DD *\n  MAP VOL=*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CPKSHR1": {"ttr": 2061, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x92\\x11\\x9f\\x00\\x92\\x12\\x0f\\x19\\x16\\x00\\x14\\x00\\t\\x00\\x0f\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1992-04-28T00:00:00", "modifydate": "1992-04-29T19:16:00", "lines": 20, "newlines": 9, "modlines": 15, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=FDRCPK,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSMAP DD SYSOUT=*\n//CPKWORK DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//INPUT   DD DSN=TECH105.SMSSS1.BKUP1,DISP=SHR\n//OUTDISK DD UNIT=3380,DISP=OLD,VOL=SER=SMSXXX\n//SYSIN DD *\n  CPK TYPE=COMPAKT,CPY=YES,ENQ=NO,E=KEEP,NOSECOND=NORLSE,OVERRIDE=YES,\n       TODD=OUTDISK,FDD=INPUT,SMSPROT=NONE\n  S ALLDSN\n/*\n//S EXEC PGM=ICKDSF\n//SYSPRINT DD SYSOUT=*\n//DISK     DD UNIT=3380,DISP=OLD,VOL=SER=SMSSS1\n//SYSIN    DD *\n   BUILDIX DDNAME(DISK) IXVTOC\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CPKSHR2": {"ttr": 2063, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92\\x12\\x0f\\x00\\x92\\x12\\x0f\\x19$\\x00\\x0e\\x00\\x14\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-04-29T00:00:00", "modifydate": "1992-04-29T19:24:00", "lines": 14, "newlines": 20, "modlines": 2, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=FDRCPK,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSMAP DD SYSOUT=*\n//CPKWORK DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//INPUT   DD DSN=TECH105.SMSSS2.BKUP1,DISP=SHR\n//OUTDISK DD UNIT=3380,DISP=OLD,VOL=SER=SMSYYY\n//SYSIN DD *\n  CPK TYPE=COMPAKT,CPY=YES,ENQ=NO,E=KEEP,NOSECOND=NORLSE,OVERRIDE=YES,\n       TODD=OUTDISK,FDD=INPUT,SMSPROT=NONE\n  S ALLDSN\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CPKSIMUL": {"ttr": 2065, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x93\\x01\\x8f\\x00\\x93\\x01\\x8f\\x15%\\x00\\x0b\\x00w\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1993-01-18T00:00:00", "modifydate": "1993-01-18T15:25:00", "lines": 11, "newlines": 119, "modlines": 0, "user": "TECH110"}, "text": "//CPKSIMUL JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//STEP01 EXEC PGM=FDRCPK,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSMAP   DD SYSOUT=*\n//SYSIN   DD *\n SIMULATE VOL=(SMSU*),\n   TYPE=COMPAKT,ACTMESS=NO,CONFMESS=NO,\n   HI=NO,MAPS=ALL,NOSECOND=NORLSE,\n   O=MAXFREE,OVERRIDE=NO,POR=ALL,\n   T=KEEP,V=NOCHANGE,%FREE=10\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CPKTEST": {"ttr": 2067, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x92\\x12\\x9f\\x00\\x92\\x13/\\x16#\\x00\\r\\x00\\x14\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-05-08T00:00:00", "modifydate": "1992-05-11T16:23:00", "lines": 13, "newlines": 20, "modlines": 3, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=FDRCPK,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSMAP DD SYSOUT=*\n//CPKWORK DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSIN DD *\n  SIM TYPE=COMPAKT,CPY=YES,NOSECOND=NORLSE,OVERRIDE=NO,\n       VOL=SMSU35,T=KEEP,ENQ=RESERVE,CONFMESS=NO,DUMP=NO,\n       PSR=ALL,POR=ALL,CPKFREEX=16,CPKDSNMX=8,CPKMULTX=8\n  S ALLDSN\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CPKUNMOV": {"ttr": 2069, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x90\\x19/\\x00\\x92)?\\x142\\x00\\x17\\x00F\\x00\\x17\\xe3\\xc5\\xc3\\xc8\\xf1\\xf0\\xf7@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1990-07-11T00:00:00", "modifydate": "1992-10-19T14:32:00", "lines": 23, "newlines": 70, "modlines": 23, "user": "TECH107"}, "text": "//TECH107Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH107\n//S EXEC PGM=FDRZAPOP,REGION=6M\n//SYSLIB   DD DSN=SYS1.FDR.V5R1M34.LOADLIB,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\nRESET  CPKUNMOV\nCPKUNMOV DSG=DB2A\nCPKUNMOV DSG=DB2B\nCPKUNMOV DSG=DB2T\nCPKUNMOV DSG=FDRABR\nCPKUNMOV DSG=HSM\nCPKUNMOV DSG=QMFA\nCPKUNMOV DSG=QMFB\nCPKUNMOV DSG=QMFT\nCPKUNMOV DSG=SYSA\nCPKUNMOV DSG=SYSB\nCPKUNMOV DSG=SYSS\nCPKUNMOV DSG=SYST\nCPKUNMOV DSG=SYS1\nPRINT  CPKUNMOV\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CPUAPAFX": {"ttr": 2071, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01%\\x00\\x00\\x00\\x935_\\x00\\x943o\\x10\\x06\\x00\\x19\\x00G\\x00\\x18\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.37", "flags": 0, "createdate": "1993-12-21T00:00:00", "modifydate": "1994-12-02T10:06:00", "lines": 25, "newlines": 71, "modlines": 24, "user": "TECH110"}, "text": "/* REXX Capacity Planning APAF Analysis                             */\noutptr=1;\nsuboutptr=1;\nsubsum=0;\n\"EXECIO * DISKR APAFIN (STEM APAF. FINIS\";\ndo i = 1 to apaf.0;\n    parse var apaf.i ansicc 2 apafdata;\n    if word(apafdata,4)=\"_SYSTEM_\" then do;\n        parse var apafdata current_date time . . . . . . . sysutil . ;\n        time=substr(time,1,5); /* skip seconds */\n        if suboutptr<6 then do;/*acuum 5 min*/\n             subsum=subsum+sysutil;\n             suboutptr=suboutptr+1;\n             end;\n           else do;\n             suboutptr=1;\n             mean=right(trunc(subsum/5.0,1),4,\"0\");\n             subsum=0;\n             report.outptr = current_date\"-\"time mean;\n             outptr = outptr + 1\n             end;\n    end;\nend;\n\"EXECIO * DISKW APAFOUT (STEM REPORT. FINIS\";\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CPUAPAF1": {"ttr": 2073, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x943_\\x00\\x943o\\x10\\x06\\x00\\x0b\\x00:\\x00\\x08\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-12-01T00:00:00", "modifydate": "1994-12-02T10:06:00", "lines": 11, "newlines": 58, "modlines": 8, "user": "TECH110"}, "text": "//TECH110I JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP1 EXEC PGM=IKJEFT01,PARM='%CPUAPAFX'\n//SYSPROC  DD DSN=TECH110.USER.CNTLLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//APAFIN   DD DSN=TECH110.CPUAPAF.DATA,DISP=OLD,DCB=BUFNO=63\n//APAFOUT  DD DSN=TECH110.CPUAPAF.DATA.SUM,DISP=OLD\n//*APAFOUT  DD DSN=TECH110.CPUAPAF.DATA.SUM,DISP=(NEW,CATLG),\n//*  SPACE=(TRK,(1,1)),RECFM=FB,LRECL=25\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CSDBLANK": {"ttr": 2075, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x13\\x8f\\x00\\x95\\x13\\x8f\\x15G\\x00\\x19\\x00\\x19\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-05-18T00:00:00", "modifydate": "1995-05-18T15:47:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "TECH110"}, "text": "/* REXX */\n\"ALLOC F(INPUT) DSNAME('TECH102.ALLCSD.DATA(JEFF)') SHR\";\n\"EXECIO * DISKR INPUT (STEM IN. FINIS\";\nTRANSID=\"\";\nOUTPTR=1;\nDO I = 1 TO IN.0;\n    PARSE VAR IN.I . . NEWTRANS . ;\n    PARSE VAR NEWTRANS \"(\" NEWTRANS \")\";\n    IF NEWTRANS=TRANSID THEN DO;\n         OUTPUT.OUTPTR=IN.I;\n         OUTPTR=OUTPTR+1;\n         END;\n    ELSE DO;\n         TRANSID=NEWTRANS;\n         OUTPUT.OUTPTR=\" \";\n         OUTPTR=OUTPTR+1;\n         OUTPUT.OUTPTR=IN.I;\n         OUTPTR=OUTPTR+1;\n         END;\nEND;\n\"ALLOC F(OUT) DSNAME('TECH102.ALLCSD.DATA(FINISHED)') SHR\";\n\"EXECIO * DISKW OUT (STEM OUTPUT. FINIS\";\n\"FREE F(INPUT)\";\n\"FREE F(OUT)\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CSDLIST": {"ttr": 2077, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x00\\x00\\x88\\x15\\x9f\\x00\\x93\\t\\x1f\\x17\"\\x00\\x19\\x00\\x0c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1988-06-07T00:00:00", "modifydate": "1993-04-01T17:22:00", "lines": 25, "newlines": 12, "modlines": 0, "user": "TECH110"}, "text": "//TECH110H JOB (5304010530000000,,,STEPP),'TECH.JEFF.KAPLAN',\n//      NOTIFY=TECH110,CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//STEP1 EXEC PGM=DFHCSDUP\n//STEPLIB  DD DSN=SYS1.CICS.V2R1M2.LOADLIB,DISP=SHR\n//DFHCSD   DD DSN=SYSA.CICSP3.DFHCSD,DISP=SHR\n//SYSPRINT DD DSN=TECH110.CSDLIST,DISP=(NEW,CATLG,DELETE),\n//  SPACE=(CYL,(7,2)),LRECL=125,RECFM=VBA,BLKSIZE=27879\n//SYSIN    DD *\nLIST LIST(P3LIST) OBJECTS\n/*\n//STEP2 EXEC PGM=DFHCSDUP\n//STEPLIB  DD DSN=SYS1.CICS.V2R1M2.LOADLIB,DISP=SHR\n//DFHCSD   DD DSN=SYSA.CICSP2.DFHCSD,DISP=SHR\n//SYSPRINT DD DSN=TECH110.CSDLIST,DISP=(MOD,KEEP,DELETE)\n//SYSIN    DD *\nLIST LIST(P2LIST) OBJECTS\n/*\n//STEP3 EXEC PGM=DFHCSDUP\n//STEPLIB  DD DSN=SYS1.CICS.V2R1M2.LOADLIB,DISP=SHR\n//DFHCSD   DD DSN=CICS.CICSPRD1.DFHCSD,DISP=SHR\n//SYSPRINT DD DSN=TECH110.CSDLIST,DISP=(MOD,KEEP,DELETE)\n//SYSIN    DD *\nLIST LIST(PRD1LIST) OBJECTS\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CTAPLIST": {"ttr": 2079, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92#\\x0f\\x00\\x92#\\x0f\\x14\\x14\\x00\\x1d\\x00-\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-08-17T00:00:00", "modifydate": "1992-08-17T14:14:00", "lines": 29, "newlines": 45, "modlines": 0, "user": "TECH110"}, "text": "/* REXX EXEC TO CONSTRUCT COMDISCO CART LIST */\n\"ALLOC F(INPUT) DA('TECH110.COMDISCO.CNTLLIB(STEP4)') SHR\";\n\"ALLOC F(OUTPUT) DA('TECH110.COMDISCO.CNTLLIB(STEP4CRT)') SHR\";\n\"EXECIO * DISKR INPUT (FINIS STEM INPUT.\";\nOUTPTR = 1;\nDO INDEX = 1 TO INPUT.0;\n     IF SUBSTR(INPUT.INDEX,1,8)\u00ac=\"//TAPE1 \" & ,\n        SUBSTR(INPUT.INDEX,1,11)\u00ac=\"// VOL=SER=\" THEN DO;\n          END;\n      ELSE DO;\n            IF SUBSTR(INPUT.INDEX,3,1)=\"T\" THEN DO;\n              PARSE VAR INPUT.INDEX . \".V\" VOLSER \".G\" . ;\n              VOLSER=STRIP(VOLSER);\n              SAY \"PROCESSING VOLSER\" VOLSER;\n            END;\n           ELSE DO;\n              PARSE VAR INPUT.INDEX . \"(\" VOLLIST \")\" . ;\n              VOLLIST=TRANSLATE(VOLLIST,\" \",\",\");\n              TCTR = WORDS(VOLLIST);\n              DO TMP = 1 TO TCTR;\n                  VOL = WORD(VOLLIST,TMP);\n                  OUT.OUTPTR=VOL \"CART\" TMP\"/\"TCTR \"FOR\" VOLSER;\n                  OUTPTR = OUTPTR+1;\n              END;\n              END;\n          END;\nEND;\n\"EXECIO * DISKW OUTPUT (FINIS STEM OUT.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CTNSUB": {"ttr": 2081, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x902?\\x00\\x91\"\\x1f\\x10\\x13\\x00\\x08\\x00\\n\\x00\\x00\\xe6\\xc8\\xe2\\xc5\\xf0\\xf0\\xf1@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1990-11-19T00:00:00", "modifydate": "1991-08-09T10:13:00", "lines": 8, "newlines": 10, "modlines": 0, "user": "WHSE001"}, "text": "//WHSE001C JOB  S010000000000000,'OUTBOUND-TRACKING',\n//         CLASS=H,MSGCLASS=Q,MSGLEVEL=(1,1),REGION=1024K\n//*********************************************************************\n//*  THIS JOB NOTIFIES OPERATIONS THAT THE CARTON TRACKING FILE\n//*  WAS BEEN UPLOADED AND NEEDS TO BE PROCESSED\n//*********************************************************************\n//STEP010  EXEC WTO\n//SYSIN    DD DSN=TUSER.WHSE001.CNTLLIB(CTNTMSG1),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "C370": {"ttr": 2083, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x94\\x19/\\x00\\x95\\x06\\x1f\\x17\\x10\\x00\\x1a\\x00\\x06\\x00\\x17\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1994-07-11T00:00:00", "modifydate": "1995-03-02T17:10:00", "lines": 26, "newlines": 6, "modlines": 23, "user": "TECH110"}, "text": "//TECH110I JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PROC=EDCCPLG,\n// CPARM='RENT,XREF,SOURCE,SHOW,OF,LIS,EXP,AGG,CSECT,OBJECT'\n//COMPILE.SYSIN DD *\n#include <stdio.h>\n#define NUM_CHARS 35\nint main(ac, av)\n    int  ac;\n    char *av\u00dd\u00a8;\n    {\n    int i= 0;\n    ++av, --ac;\n    for (; 0 < ac; ++av, --ac)\n        {\n        i= i + printf(\"%s\", *av);\n        if (1 < ac)\n            printf(\" \");\n        else\n            printf(\"\\n\");\n        }\n    i= NUM_CHARS - i;\n    if (i < 0) i= -i;\n    exit(i);\n    }\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DABR": {"ttr": 2085, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\x10O\\x00\\x93\\x10O\\x14&\\x00\\r\\x00\\xcb\\x00\\x0c\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-04-14T00:00:00", "modifydate": "1993-04-14T14:26:00", "lines": 13, "newlines": 203, "modlines": 12, "user": "TECH110"}, "text": "  CREATE TABLE BUILD.TABRVOLS\n  (VOLSER             CHAR(06) NOT NULL WITH DEFAULT,\n   DUMP_DATE          DATE     NOT NULL WITH DEFAULT,\n   DUMP_TIME          TIME     NOT NULL WITH DEFAULT,\n   DUMP_TYPE          CHAR(07) NOT NULL WITH DEFAULT,\n   DUMP_STATUS        CHAR(12) NOT NULL WITH DEFAULT)\n   IN ?\n  COMMIT;\n  CREATE TABLE BUILD.TABRXCPT\n  (VOLSER             CHAR(06) NOT NULL WITH DEFAULT,\n   DSNAME             CHAR(44) NOT NULL WITH DEFAULT)\n   IN ?\n  COMMIT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DASDANAL": {"ttr": 2305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x00\\x00\\x93\\x02/\\x00\\x93\\x12_\\x15\\x02\\x01?\\x00C\\x01\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "1993-01-22T00:00:00", "modifydate": "1993-05-05T15:02:00", "lines": 319, "newlines": 67, "modlines": 257, "user": "TECH110"}, "text": "/* REXX DASD ANALYSIS REPORT */\n\"ALLOC F(VTOCSYD) DA('TECH110.DASD.VTOCSYSD') SHR\";\n\"ALLOC F(VTOCSUM) DA('TECH110.DASD.VTOCSUM') SHR\";\n\"ALLOC F(APPLSUM) DA('TECH110.DASD.APPLSUM') SHR\";\n\"EXECIO * DISKR VTOCSUM (FINIS STEM VTOC.\";\n\"EXECIO * DISKR VTOCSYD (FINIS STEM VSYD.\";\n\"EXECIO * DISKR APPLSUM (FINIS STEM APPL.\";\nVOLSUM=\"\";\nDO I = 1 TO VTOC.0;\n    IF POS(\"IN SUMMARY\",VTOC.I)\u00ac=0 THEN DO;\n         PARSE VAR VTOC.I . \"TYPE\" DEVT . VOLCNT . ;\n         VOLSUM=VOLSUM DEVT;\n         VOLDATA.DEVT=VOLCNT;\n         END;\n    IF POS(\"TOTAL TRACKS\",VTOC.I)\u00ac=0 THEN DO;\n         VTOC.I=TRANSLATE(VTOC.I,\" \",\"-\");\n         PARSE VAR VTOC.I . \"TRACKS\" TOTTRKS . ;\n         VOLDATA.DEVT=VOLDATA.DEVT TOTTRKS;\n         END;\n    IF POS(\"ALLOCATED TRACKS\",VTOC.I)\u00ac=0 THEN DO;\n         VTOC.I=TRANSLATE(VTOC.I,\" \",\"-\");\n         PARSE VAR VTOC.I . \"TRACKS\" ALCTRKS . \"SETS\" TOTFILES . ;\n         VOLDATA.DEVT=VOLDATA.DEVT ALCTRKS TOTFILES;\n         END;\n    IF POS(\"FREE TRACKS\",VTOC.I)\u00ac=0 THEN DO;\n         VTOC.I=TRANSLATE(VTOC.I,\" \",\"-\");\n         PARSE VAR VTOC.I . \"TRACKS\" FRETRKS . ;\n         VOLDATA.DEVT=VOLDATA.DEVT FRETRKS;\n         END;\n    IF POS(\"1 -  30\",VTOC.I)\u00ac=0 THEN DO;\n         PARSE VAR VTOC.I . \"1 -  30\" DSCTR DSALC . ;\n         VOLDATA.DEVT=VOLDATA.DEVT \"01-30\" DSCTR DSALC;\n         END;\n    IF POS(\"31 -  60\",VTOC.I)\u00ac=0 THEN DO;\n         PARSE VAR VTOC.I . \"31 -  60\" DSCTR DSALC . ;\n         VOLDATA.DEVT=VOLDATA.DEVT \"31-60\" DSCTR DSALC;\n         END;\n    IF POS(\"61 -  90\",VTOC.I)\u00ac=0 THEN DO;\n         PARSE VAR VTOC.I . \"61 -  90\" DSCTR DSALC . ;\n         VOLDATA.DEVT=VOLDATA.DEVT \"61-90\" DSCTR DSALC;\n         END;\n    IF POS(\"91 - ***\",VTOC.I)\u00ac=0 THEN DO;\n         PARSE VAR VTOC.I . \"91 - ***\" DSCTR DSALC . ;\n         VOLDATA.DEVT=VOLDATA.DEVT \"91-**\" DSCTR DSALC;\n         END;\nEND;\nSYDSUM=\"\";\nDO I = 1 TO VSYD.0;\n    IF POS(\"IN SUMMARY\",VSYD.I)\u00ac=0 THEN DO;\n         PARSE VAR VSYD.I . \"TYPE\" DEVT . VOLCNT . ;\n         SYDSUM=SYDSUM DEVT;\n         SYDDATA.DEVT=VOLCNT;\n         END;\n    IF POS(\"TOTAL TRACKS\",VSYD.I)\u00ac=0 THEN DO;\n         VSYD.I=TRANSLATE(VSYD.I,\" \",\"-\");\n         PARSE VAR VSYD.I . \"TRACKS\" TOTTRKS . ;\n         SYDDATA.DEVT=SYDDATA.DEVT TOTTRKS;\n         END;\n    IF POS(\"ALLOCATED TRACKS\",VSYD.I)\u00ac=0 THEN DO;\n         VSYD.I=TRANSLATE(VSYD.I,\" \",\"-\");\n         PARSE VAR VSYD.I . \"TRACKS\" ALCTRKS . \"SETS\" TOTFILES . ;\n         SYDDATA.DEVT=SYDDATA.DEVT ALCTRKS TOTFILES;\n         END;\n    IF POS(\"FREE TRACKS\",VSYD.I)\u00ac=0 THEN DO;\n         VSYD.I=TRANSLATE(VSYD.I,\" \",\"-\");\n         PARSE VAR VSYD.I . \"TRACKS\" FRETRKS . ;\n         SYDDATA.DEVT=SYDDATA.DEVT FRETRKS;\n         END;\nEND;\nTVOLCNT=0;\nTGTTRK=0.;\nTGATRK=0.;\nTGFTRK=0.;\nSYTVOLCNT=0;\nSYTGTTRK=0.;\nSYTGATRK=0.;\nSYTGFTRK=0.;\nTTDS=0;\nSYTTDS=0;\nTLRD1=0; TLRD2=0;\nTLRD3=0; TLRD4=0;\nTLRA1=0.;\nTLRA2=0.;\nTLRA3=0.;\nTLRA4=0.;\nCTR = WORDS(VOLSUM);\nSYCTR = WORDS(SYDSUM);\n\"VMFCLEAR\";\nSAY \"DASDTYPE VOLCNT TOTALGB ALLOCGB ALLOCPCT FREEGB FREEPCT FILES\";\nSAY \"-------- ------ ------- ------- -------- ------ ------- -----\";\nDO I = 1 TO CTR;\n   DEVT = WORD(VOLSUM,I);\n   PARSE VAR VOLDATA.DEVT VOLCNT TTRK ATRK TDS FTRK LRH1 LRD1 LRA1 ,\n      LRH2 LRD2 LRA2 LRH3 LRD3 LRA3 LRH4 LRD4 LRA4;\n   DEVTT=SUBSTR(DEVT,1,4);\n   SELECT;\n       WHEN (DEVTT=\"3380\") THEN TSIZ=47476.;\n       WHEN (DEVTT=\"3390\") THEN TSIZ=56664.;\n       OTHERWISE EXIT 16;\n   END;\n   TLRD1=TLRD1+LRD1; TLRD2=TLRD2+LRD2;\n   TLRD3=TLRD3+LRD3; TLRD4=TLRD4+LRD4;\n   TLRA1=TLRA1+((LRA1*TSIZ)/(1000*1000*1000));\n   TLRA2=TLRA2+((LRA2*TSIZ)/(1000*1000*1000));\n   TLRA3=TLRA3+((LRA3*TSIZ)/(1000*1000*1000));\n   TLRA4=TLRA4+((LRA4*TSIZ)/(1000*1000*1000));\n   GTTRK=(TTRK*TSIZ)/(1000*1000*1000);\n   GATRK=(ATRK*TSIZ)/(1000*1000*1000);PATRK=(GATRK/GTTRK)*100.;\n   GFTRK=(FTRK*TSIZ)/(1000*1000*1000);PFTRK=(GFTRK/GTTRK)*100.;\n   SAY CENTRE(DEVT,9)CENTRE(VOLCNT,7)CENTRE(FORMAT(GTTRK,,2),8)|| ,\n    CENTRE(FORMAT(GATRK,,2),8)CENTRE(FORMAT(PATRK,,2),9)|| ,\n    CENTRE(FORMAT(GFTRK,,2),7)CENTRE(FORMAT(PFTRK,,2),8)|| ,\n    CENTRE(TDS,5);\n   TVOLCNT=TVOLCNT+VOLCNT;\n   TGTTRK=TGTTRK+GTTRK;\n   TGATRK=TGATRK+GATRK; PTGATRK=(TGATRK/TGTTRK)*100.;\n   TGFTRK=TGFTRK+GFTRK; PTGFTRK=(TGFTRK/TGTTRK)*100.;\n   TTDS=TTDS+TDS;\nEND;\nDO I = 1 TO SYCTR;\n   SYDEVT = WORD(SYDSUM,I);\n   PARSE VAR SYDDATA.SYDEVT VOLCNT TTRK ATRK TDS FTRK;\n   DEVTT=SUBSTR(SYDEVT,1,4);\n   SELECT;\n       WHEN (DEVTT=\"3380\") THEN TSIZ=47476.;\n       WHEN (DEVTT=\"3390\") THEN TSIZ=56664.;\n       OTHERWISE EXIT 16;\n   END;\n   SYGTTRK=(TTRK*TSIZ)/(1000*1000*1000);\n   SYGATRK=(ATRK*TSIZ)/(1000*1000*1000);SYPATRK=(SYGATRK/SYGTTRK)*100.;\n   SYGFTRK=(FTRK*TSIZ)/(1000*1000*1000);SYPFTRK=(SYGFTRK/SYGTTRK)*100.;\nEND;\nSAY \"-------- ------ ------- ------- -------- ------ ------- -----\";\nSAY CENTRE(\"TOTALS\",9)CENTRE(TVOLCNT,7)CENTRE(FORMAT(TGTTRK,,2),8)|| ,\n    CENTRE(FORMAT(TGATRK,,2),8)CENTRE(FORMAT(PTGATRK,,2),9)|| ,\n    CENTRE(FORMAT(TGFTRK,,2),7)CENTRE(FORMAT(PTGFTRK,,2),8)|| ,\n    CENTRE(TTDS,5);\n SAY CENTRE(\"SYSDA\",9)CENTRE(VOLCNT,7)CENTRE(FORMAT(SYGTTRK,,2),8)|| ,\n    CENTRE(FORMAT(SYGATRK,,2),8)CENTRE(FORMAT(SYPATRK,,2),9)|| ,\n    CENTRE(FORMAT(SYGFTRK,,2),7)CENTRE(FORMAT(SYPFTRK,,2),8)|| ,\n    CENTRE(TDS,5);\nXVOLCNT=TVOLCNT-VOLCNT;\nXGTTRK=TGTTRK-SYGTTRK;\nXGATRK=TGATRK-SYGATRK;\nXPGATRK=PTGATRK-SYPATRK;\nXGFTRK=TGFTRK-SYGFTRK;\nXPGFTRK=PTGFTRK-SYPFTRK;\nXTDS=TTDS-TDS;\nXPGATRK=(XGATRK/XGTTRK)*100.;\nXPGFTRK=(XGFTRK/XGTTRK)*100.;\nSAY \"-------- ------ ------- ------- -------- ------ ------- -----\";\nSAY CENTRE(\"TOTALS\",9)CENTRE(XVOLCNT,7)CENTRE(FORMAT(XGTTRK,,2),8)|| ,\n    CENTRE(FORMAT(XGATRK,,2),8)CENTRE(FORMAT(XPGATRK,,2),9)|| ,\n    CENTRE(FORMAT(XGFTRK,,2),7)CENTRE(FORMAT(XPGFTRK,,2),8)|| ,\n    CENTRE(XTDS,5);\nSAY \"\";\nSAY \"LASTREF DAYS  DATASETS  TOTALGB    LASTREF DAYS  DATASETS  TOTALGB\"\nSAY \"------------  --------  -------    ------------  --------  -------\"\nSAY CENTRE(\"01 - 30\",13)\" \"CENTRE(TLRD1,8)\"  \"|| ,\n     CENTRE(FORMAT(TLRA1,,2),7)||\"    \"|| ,\n    CENTRE(\"31 - 60\",13)\" \"CENTRE(TLRD2,8)\"  \"|| ,\n     CENTRE(FORMAT(TLRA2,,2),7);\nSAY CENTRE(\"61 - 90\",13)\" \"CENTRE(TLRD3,8)\"  \"|| ,\n     CENTRE(FORMAT(TLRA3,,2),7)||\"    \"|| ,\n    CENTRE(\"91 - **\",13)\" \"CENTRE(TLRD4,8)\"  \"|| ,\n     CENTRE(FORMAT(TLRA4,,2),7);\nSAY \"\";\nAPPLSUM.MVSOP.TOTDSN=0;\nAPPLSUM.MVSOP.GBALLC=0.0;\nAPPLSUM.MISC.TOTDSN=0;\nAPPLSUM.MISC.GBALLC=0.0;\nAPPLSUM.APPL.TOTDSN=0;\nAPPLSUM.APPL.GBALLC=0.0;\nAPPLSUM.STOR.TOTDSN=0;\nAPPLSUM.STOR.GBALLC=0.0;\nAPPLSUM.TECH.TOTDSN=0;\nAPPLSUM.TECH.GBALLC=0.0;\nAPPLSUM.DB2.TOTDSN=0;\nAPPLSUM.DB2.GBALLC=0.0;\nAPPLSUM.QA.TOTDSN=0;\nAPPLSUM.QA.GBALLC=0.0;\nAPPLSUM.ARTH.TOTDSN=0;\nAPPLSUM.ARTH.GBALLC=0.0;\nAPPLSUM.TEMP.TOTDSN=0;\nAPPLSUM.TEMP.GBALLC=0.0;\nAPPLSUM.PROD.TOTDSN=0;\nAPPLSUM.PROD.GBALLC=0.0;\nAPPLSUM.TEST.TOTDSN=0;\nAPPLSUM.TEST.GBALLC=0.0;\nLOPSYS=\"****VTOC ***ABR CAI CATALOG CATINDEX CICS DSCB FDRABR\" ,\n       \"HSM MODEL MVSMS11 OFFL SYS1 SYS2 SYS3 SYSA SYSB\" ,\n       \"SYSC SYSM SYSS SYST SYSZ\";\nLDB2=\"DB2 QMF SYSADM\";\nHQLIST=\"\";\nDO I = 1 TO APPL.0;\n     LINE=TRANSLATE(SUBSTR(APPL.I,2),\" \",\".\");\n     OPREFIX=PREFIX; /* SAVE PREFIX */\n     PARSE VAR LINE PREFIX DEVTYPE TOTFIL . FILTRKS . ;\n     IF SUBSTR(PREFIX,1,4)=\"3380\" | SUBSTR(PREFIX,1,4)=\"3390\" THEN DO;\n         LINE = OPREFIX LINE;\n         PARSE VAR LINE PREFIX DEVTYPE TOTFIL . FILTRKS . ;\n         END;\n     GDEVT=SUBSTR(DEVTYPE,1,4);\n     IF GDEVT\u00ac=\"3380\" & GDEVT\u00ac=\"3390\" THEN DO;\n         PREFIX=OPREFIX;\n         ITERATE I;\n         END;\n     SELECT;\n       WHEN (GDEVT=\"3380\") THEN TSIZ=47476.;\n       WHEN (GDEVT=\"3390\") THEN TSIZ=56664.;\n       OTHERWISE EXIT 16;\n     END;\n     TOTGB=(FILTRKS*TSIZ)/(1000.*1000.*1000.);\n     SUBPREF1=SUBSTR(PREFIX,1,1);\n     SUBPREF2=SUBSTR(PREFIX,1,2);\n     SUBPREF3=SUBSTR(PREFIX,1,3);\n     SUBPREF4=SUBSTR(PREFIX,1,4);\n     SUBPREF5=SUBSTR(PREFIX,1,5);\n     SUBPREF6=SUBSTR(PREFIX,1,6);\n     IF WORDPOS(PREFIX,LOPSYS)\u00ac=0 THEN DO;\n        APPLSUM.MVSOP.TOTDSN=APPLSUM.MVSOP.TOTDSN+TOTFIL;\n        APPLSUM.MVSOP.GBALLC=APPLSUM.MVSOP.GBALLC+TOTGB;\n        ITERATE I;\n      END;\n     IF WORDPOS(SUBPREF3,LDB2)\u00ac=0 | SUBPREF6=\"SYSADM\" THEN DO;\n        APPLSUM.DB2.TOTDSN=APPLSUM.DB2.TOTDSN+TOTFIL;\n        APPLSUM.DB2.GBALLC=APPLSUM.DB2.GBALLC+TOTGB;\n        ITERATE I;\n      END;\n     IF SUBPREF4=\"APPL\" | SUBPREF4=\"INFO\" | SUBPREF4=\"DATA\" | ,\n        PREFIX=\"TCICS\" THEN DO;\n        APPLSUM.APPL.TOTDSN=APPLSUM.APPL.TOTDSN+TOTFIL;\n        APPLSUM.APPL.GBALLC=APPLSUM.APPL.GBALLC+TOTGB;\n        ITERATE I;\n      END;\n     IF SUBPREF4=\"STOR\" THEN DO;\n        APPLSUM.STOR.TOTDSN=APPLSUM.STOR.TOTDSN+TOTFIL;\n        APPLSUM.STOR.GBALLC=APPLSUM.STOR.GBALLC+TOTGB;\n        ITERATE I;\n      END;\n     IF SUBPREF4=\"TECH\" | PREFIX=\"HELPDSK\" | PREFIX=\"MARIAN\" | ,\n         SUBPREF6=\"SYSOPR\" THEN DO;\n        APPLSUM.TECH.TOTDSN=APPLSUM.TECH.TOTDSN+TOTFIL;\n        APPLSUM.TECH.GBALLC=APPLSUM.TECH.GBALLC+TOTGB;\n        ITERATE I;\n      END;\n     IF PREFIX=\"PARTH\" THEN DO;\n        APPLSUM.ARTH.TOTDSN=APPLSUM.ARTH.TOTDSN+TOTFIL;\n        APPLSUM.ARTH.GBALLC=APPLSUM.ARTH.GBALLC+TOTGB;\n        ITERATE I;\n      END;\n     IF SUBPREF4=\"SYS9\" THEN DO;\n        APPLSUM.TEMP.TOTDSN=APPLSUM.TEMP.TOTDSN+TOTFIL;\n        APPLSUM.TEMP.GBALLC=APPLSUM.TEMP.GBALLC+TOTGB;\n        ITERATE I;\n      END;\n     IF SUBPREF1=\"Q\" THEN DO;\n        APPLSUM.QA.TOTDSN=APPLSUM.QA.TOTDSN+TOTFIL;\n        APPLSUM.QA.GBALLC=APPLSUM.QA.GBALLC+TOTGB;\n        ITERATE I;\n      END;\n     IF SUBPREF1=\"P\" THEN DO;\n        APPLSUM.PROD.TOTDSN=APPLSUM.PROD.TOTDSN+TOTFIL;\n        APPLSUM.PROD.GBALLC=APPLSUM.PROD.GBALLC+TOTGB;\n        ITERATE I;\n      END;\n     IF SUBPREF1=\"T\" THEN DO;\n        APPLSUM.TEST.TOTDSN=APPLSUM.TEST.TOTDSN+TOTFIL;\n        APPLSUM.TEST.GBALLC=APPLSUM.TEST.GBALLC+TOTGB;\n        ITERATE I;\n      END;\n      SUBPREF4=STRIP(SUBPREF4);\n      IF WORDPOS(SUBPREF4,HQLIST)=0 THEN DO;\n         HQLIST=HQLIST SUBPREF4;\n         APPLSUM.SUBPREF4.TOTDSN=0;\n         APPLSUM.SUBPREF4.GBALLC=0.0;\n         END;\n      APPLSUM.SUBPREF4.TOTDSN=APPLSUM.SUBPREF4.TOTDSN+TOTFIL;\n      APPLSUM.SUBPREF4.GBALLC=APPLSUM.SUBPREF4.GBALLC+TOTGB;\n      APPLSUM.MISC.TOTDSN=APPLSUM.MISC.TOTDSN+TOTFIL;\n      APPLSUM.MISC.GBALLC=APPLSUM.MISC.GBALLC+TOTGB;\nEND;\nSAY \"GROUP  FILES  TOTGB   GROUP  FILES  TOTGB   GROUP  FILES  TOTGB\";\nSAY \"-----  -----  -----   -----  -----  -----   -----  -----  -----\";\nSAY CENTRE(\"MVSOP\",6)CENTRE(APPLSUM.MVSOP.TOTDSN,7)|| ,\n    CENTRE(FORMAT(APPLSUM.MVSOP.GBALLC,,2),7)||\"  \"|| ,\n    CENTRE(\"TECH\",6)CENTRE(APPLSUM.TECH.TOTDSN,7)|| ,\n    CENTRE(FORMAT(APPLSUM.TECH.GBALLC,,2),7)||\"  \"|| ,\n    CENTRE(\"DB2\",6)CENTRE(APPLSUM.DB2.TOTDSN,7)|| ,\n    CENTRE(FORMAT(APPLSUM.DB2.GBALLC,,2),7);\nSAY CENTRE(\"APPL\",6)CENTRE(APPLSUM.APPL.TOTDSN,7)|| ,\n    CENTRE(FORMAT(APPLSUM.APPL.GBALLC,,2),7)||\"  \"|| ,\n    CENTRE(\"QA\",6)CENTRE(APPLSUM.QA.TOTDSN,7)|| ,\n    CENTRE(FORMAT(APPLSUM.QA.GBALLC,,2),7)||\"  \"|| ,\n    CENTRE(\"STOR\",6)CENTRE(APPLSUM.STOR.TOTDSN,7)|| ,\n    CENTRE(FORMAT(APPLSUM.STOR.GBALLC,,2),7);\nSAY CENTRE(\"ARTH\",6)CENTRE(APPLSUM.ARTH.TOTDSN,7)|| ,\n    CENTRE(FORMAT(APPLSUM.ARTH.GBALLC,,2),7)||\"  \"|| ,\n    CENTRE(\"PROD\",6)CENTRE(APPLSUM.PROD.TOTDSN,7)|| ,\n    CENTRE(FORMAT(APPLSUM.PROD.GBALLC,,2),7)||\"  \"|| ,\n    CENTRE(\"TEST\",6)CENTRE(APPLSUM.TEST.TOTDSN,7)|| ,\n    CENTRE(FORMAT(APPLSUM.TEST.GBALLC,,2),7);\nSAY CENTRE(\"TEMP\",6)CENTRE(APPLSUM.TEMP.TOTDSN,7)|| ,\n    CENTRE(FORMAT(APPLSUM.TEMP.GBALLC,,2),7)||\"  \";\nSAY CENTRE(\"OTHER\",6)CENTRE(APPLSUM.MISC.TOTDSN,7)|| ,\n    CENTRE(FORMAT(APPLSUM.MISC.GBALLC,,2),7)||\"  \";\n/* HQCTR=TRUNC(WORDS(HQLIST)/3*3);\n   DO I = 1 TO HQCTR BY 3;\n   HQ1=WORD(HQLIST,I);\n   HQ2=WORD(HQLIST,I+1);\n   HQ3=WORD(HQLIST,I+2);\n   SAY CENTRE(HQ1,6)CENTRE(APPLSUM.HQ1.TOTDSN,7)|| ,\n      CENTRE(FORMAT(APPLSUM.HQ1.GBALLC,,2),7)||\"  \"|| ,\n      CENTRE(HQ2,6)CENTRE(APPLSUM.HQ2.TOTDSN,7)|| ,\n      CENTRE(FORMAT(APPLSUM.HQ2.GBALLC,,2),7)||\"  \"|| ,\n      CENTRE(HQ3,6)CENTRE(APPLSUM.HQ3.TOTDSN,7)|| ,\n      CENTRE(FORMAT(APPLSUM.HQ3.GBALLC,,2),7);\n  END; */\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DATACLAO": {"ttr": 2311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01a\\x00\\x00\\x00\\x903?\\x00\\x93 \\x8f\\x12E\\x00%\\x00@\\x00#\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.97", "flags": 0, "createdate": "1990-11-29T00:00:00", "modifydate": "1993-07-27T12:45:00", "lines": 37, "newlines": 64, "modlines": 35, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS DATACLASS ROUTINE                 */\nPROC &DATACLAS\n/* DASD UNITS                                                       */\nFILTLIST DASD_UNITS INCLUDE(\n    '3380','3390','DISK','PAGEIO','SYSDA','SYSSQ','SYSTEST',\n    'SMS','QA','PARTH',\n    'VIO','SYSALLDA','APPLTA','SEQDA','SYSTA','USRDA','')\n/* MGMTCLASS AND DSOWNER VALUES THAT ARE CHECKED HERE               */\nFILTLIST OWNERS INCLUDE(\n    'FASHNBUG','CORPSVC1','CORPSVC2','STORESYS')\n/* IGNORE IF NON-DASD ALLOCATION AND SET DATACLASS TO \"NONSMS\"      */\nIF &UNIT \u00ac= &DASD_UNITS THEN DO\n     SET &DATACLAS = 'NONSMS'\n     EXIT CODE(0)\n     END\n/* IF THE USER CODED A MGMTCLASS THEN PROCESS BASED ON THAT VALUE   */\n/* IF THE USER CODED NULL THEN USE THE DSOWNER VALUE FOR PROCESSING */\nSELECT\n/* SET VALUE TO ACTUAL USERID OF ALLOCATOR                          */\n     WHEN (&MGMTCLAS = &OWNERS | +\n           (&MGMTCLAS = '' && +\n             (&DSOWNER = &OWNERS))) DO\n       SET &DATACLAS = '$USER'\n       EXIT CODE(0)\n       END\n/* SET VALUE TO SPACE ACCOUNTING GROUP IF MGMTCLASS=TEMP            */\n     WHEN (&MGMTCLAS = 'TEMP') DO\n       SET &DATACLAS = '$DSOWNER'\n       EXIT CODE(0)\n       END\n/* ELSE SET A DEFAULT VALUE OF SMSUSER                              */\n     OTHERWISE DO\n       SET &DATACLAS = 'SMSUSER'\n       EXIT CODE(0)\n       END\nEND\nEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DATE": {"ttr": 2313, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x95\\x10O\\x00\\x95\\x10O\\x11G\\x00W\\x006\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1995-04-14T00:00:00", "modifydate": "1995-04-14T11:47:00", "lines": 87, "newlines": 54, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//COMPILE  EXEC PGM=IGYCRCTL,PARM='LIB,APOST,RENT,RES,DYNAM,LIST'\n//SYSPRINT DD  SYSOUT=*\n//SYSPUNCH DD  SYSOUT=Z\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//SYSUT1   DD  UNIT=SMS,SPACE=(CYL,(1,1))\n//SYSUT2   DD  UNIT=SMS,SPACE=(CYL,(1,1))\n//SYSUT3   DD  UNIT=SMS,SPACE=(CYL,(1,1))\n//SYSUT4   DD  UNIT=SMS,SPACE=(CYL,(1,1))\n//SYSUT5   DD  UNIT=SMS,SPACE=(CYL,(1,1))\n//SYSUT6   DD  UNIT=SMS,SPACE=(CYL,(1,1))\n//SYSUT7   DD  UNIT=SMS,SPACE=(CYL,(1,1))\n//SYSLIN   DD  DSN=&&LOADSET,UNIT=SMS,DISP=(MOD,PASS),\n//             SPACE=(CYL,(1,1)),DCB=BLKSIZE=800\n//SYSIN    DD  *\n000010 IDENTIFICATION DIVISION.\n000030*\n000040 PROGRAM-ID.     LETSDTE.\n      *TRANSLATED BY MHTRAN-2 10/18/90\n000050*\n000060 AUTHOR.         KRM.\n000070*\n000080 DATE-WRITTEN.   11/15/87.\n000090*\n000100 DATE-COMPILED.\n000400 ENVIRONMENT DIVISION.\n000410 INPUT-OUTPUT SECTION.\n000420 FILE-CONTROL.\n000720 DATA DIVISION.\n000730 FILE SECTION.\n001150 WORKING-STORAGE SECTION.\nNOCMPR 01  NOCMPR2-FLAG                PIC X(02) VALUE X'FFFF'.\n001500*   WORKING STORAGE HOLD AREAS.\n001850 01  W4-CURRENT-TIME.\n001860     05  W4-HH               PIC X(02).\n001870     05  FILLER              PIC X(01)         VALUE ':'.\n001880     05  W4-MM               PIC X(02).\n001890     05  FILLER              PIC X(01)         VALUE ':'.\n001900     05  W4-SS               PIC X(02).\nCOBOL2 01  XNVT-CURRENT-DATE.\nCOBOL2     05  XNVT-CURRENT-YY            PIC XX.\nCOBOL2     05  XNVT-CURRENT-MM            PIC XX.\nCOBOL2     05  XNVT-CURRENT-DD            PIC XX.\nCOBOL2 01  CZXTW-DATE.\nCOBOL2     05  RUN-CURRENT-MM             PIC XX.\nCOBOL2     05                             PIC X  VALUE '/'.\nCOBOL2     05  RUN-CURRENT-DD             PIC XX.\nCOBOL2     05                             PIC X  VALUE '/'.\nCOBOL2     05  RUN-CURRENT-YY             PIC XX.\n       01  XNVT-HHMMSSTH.\n           02 XNVT-HHMMSSTH-HHMMSS.\n              10 XNVT-HHMMSSTH-HH            PIC X(02).\n              10 XNVT-HHMMSSTH-MM            PIC X(02).\n              10 XNVT-HHMMSSTH-SS            PIC X(02).\n           02 XNVT-HHMMSSTH-TH               PIC 9(02).\n002950 PROCEDURE DIVISION.\nCOBOL2     ACCEPT XNVT-CURRENT-DATE FROM DATE\nCOBOL2     MOVE XNVT-CURRENT-YY TO RUN-CURRENT-YY\nCOBOL2     MOVE XNVT-CURRENT-MM TO RUN-CURRENT-MM\nCOBOL2     MOVE XNVT-CURRENT-DD TO RUN-CURRENT-DD.\n           ACCEPT XNVT-HHMMSSTH FROM TIME\n           MOVE XNVT-HHMMSSTH-HH TO W4-HH.\n           MOVE XNVT-HHMMSSTH-MM TO W4-MM.\n           MOVE XNVT-HHMMSSTH-SS TO W4-SS.\n           DISPLAY '                 '\n           DISPLAY '      J E F F N E S S  DATE AND TIME IS '\n           DISPLAY '                 '\n           DISPLAY 'DATE= ' CZXTW-DATE '  TIME= ' W4-CURRENT-TIME.\n           DISPLAY '                 '\n           DISPLAY '                 '.\n007490 CZXTW-GOBACK0. GOBACK.\n//*\n//LNKEDT   EXEC PGM=IEWL,\n//         PARM=('MAP,LIST,LET,XREF,AMODE=31,RMODE=ANY'),\n//         COND=(5,LT,COMPILE)\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SMS,SPACE=(CYL,(1,1))\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLIB   DD  DSN=SYS1.COB2.V1R3M2.LIB,DISP=SHR\n//SYSLMOD  DD  SPACE=(CYL,(1,1,1)),DSN=&&LOD(X),DISP=(,PASS),\n//             UNIT=SYSDA,DCB=BUFNO=1\n//G       EXEC PGM=*.LNKEDT.SYSLMOD\n//STEPLIB  DD DSN=SYSS.TECH.VIRTDATE.LOADLIB,DISP=SHR\n//SYSOUT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DBLISTC": {"ttr": 2316, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92)?\\x00\\x92)\\x7f\\x146\\x00\\r\\x00\\x0e\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-10-19T00:00:00", "modifydate": "1992-10-23T14:36:00", "lines": 13, "newlines": 14, "modlines": 6, "user": "TECH110"}, "text": "//TECH110Z JOB 530401053000000,'TECH.SUPPORT.DB2',\n//           CLASS=S,MSGCLASS=G,NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//*JOBLIB  DD  DSN=SYSS.DB2.V2R3M0.DSNLOAD,DISP=SHR\n//*******************************************************************\n//STEP01  EXEC PGM=IDCAMS\n//SYSPRINT DD  SYSOUT=*\n//SYSOUT   DD  SYSOUT=*\n//SYSIN    DD  *\n  LISTC ENT(DB2A.DSNDBC.DRMF01.SRMF01.I0001.A001) ALL\n  LISTC ENT(DB2A.DSNDBC.DRMF01.SRMF02.I0001.A001) ALL\n  LISTC ENT(DB2A.DSNDBC.DRMF01.SRMF03.I0001.A001) ALL\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DBUSTATS": {"ttr": 2318, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x00\\x00\\x92&\\x0f\\x00\\x93\\x06/\\x14P\\x00\\x1d\\x00b\\x00\\x1d\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1992-09-16T00:00:00", "modifydate": "1993-03-03T14:50:00", "lines": 29, "newlines": 98, "modlines": 29, "user": "TECH110"}, "text": "//TECH110Z JOB 530401053000000,'TECH.SUPPORT.DB2',\n//           CLASS=S,MSGCLASS=G,NOTIFY=TECH110,MSGLEVEL=(1,1)\n//UTIL EXEC DSNUPROC,SYSTEM=DSNB,UID='TEMPA',UTPROC=''\n//**********************************************\n//* STATS UTILITY\n//**********************************************\n/*JOBPARM S=SYSB\n//UTPRINT  DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  RUNSTATS TABLESPACE DTECH01.STECH01\n  TABLE(ALL)\n  INDEX(ALL)\n  UPDATE(ALL)\n  RUNSTATS TABLESPACE DTECH01.STECH02\n  TABLE(ALL)\n  INDEX(ALL)\n  UPDATE(ALL)\n  RUNSTATS TABLESPACE DTECH01.STECH03\n  TABLE(ALL)\n  INDEX(ALL)\n  UPDATE(ALL)\n  RUNSTATS TABLESPACE DTECH01.STECH04\n  TABLE(ALL)\n  INDEX(ALL)\n  UPDATE(ALL)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DCAP": {"ttr": 2320, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93(\\x0f\\x00\\x93(\\x0f\\x15\\x14\\x00\\r\\x00\\xcb\\x00\\x0c\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-10-07T00:00:00", "modifydate": "1993-10-07T15:14:00", "lines": 13, "newlines": 203, "modlines": 12, "user": "TECH110"}, "text": "  CREATE TABLE BUILD.TCAPPLAN\n  (BUSINESS_DATE         DATE     NOT NULL WITH DEFAULT,\n   ACTIVE_STORES         INTEGER  NOT NULL WITH DEFAULT,\n   DISTRO_COUNT          INTEGER  NOT NULL WITH DEFAULT,\n   SALES_AMOUNT          DECIMAL(10,2)  NOT NULL WITH DEFAULT,\n   PURCHASE_ORDERS       INTEGER  NOT NULL WITH DEFAULT,\n   SALES_TRANS_COUNT     INTEGER  NOT NULL WITH DEFAULT,\n   UNITS_SHIPPED         INTEGER  NOT NULL WITH DEFAULT,\n   UNITS_SHIPPED_VAL     DECIMAL(10,2)  NOT NULL WITH DEFAULT,\n   UNITS_RECEIVED        INTEGER  NOT NULL WITH DEFAULT,\n   UNITS_RECEIVED_VAL    DECIMAL(10,2)  NOT NULL WITH DEFAULT)\n   IN DCAP01.SCAP01;\n  COMMIT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DCAPAPF": {"ttr": 2322, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00\\x00\\x00\\x936/\\x00\\x936/\\x13G\\x00)\\x00'\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf6\\xf0\\xf2@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-12-28T00:00:00", "modifydate": "1993-12-28T13:47:00", "lines": 41, "newlines": 39, "modlines": 6, "user": "TECH602"}, "text": "--DROP TABLESPACE SCAP02;\n--COMMIT;\n  CREATE TABLESPACE SCAP02\n  IN DCAP01\n  USING VCAT DB2A\n  PCTFREE 0\n  FREEPAGE 0\n  BUFFERPOOL BP0\n  SEGSIZE 16\n  LOCKSIZE ANY\n  CLOSE NO;\n  COMMIT;\n\n  CREATE TABLE BUILD.TCAPAPAF\n  (DATE               DATE     NOT NULL WITH DEFAULT,\n   WEEKDAY            CHAR(03) NOT NULL WITH DEFAULT,\n   DOMAIN             CHAR(08) NOT NULL WITH DEFAULT,\n   MEAN_PROC_UTIL     DEC(6,2) NOT NULL WITH DEFAULT,\n   VAR_PROC_UTIL      DEC(6,2) NOT NULL WITH DEFAULT,\n   MAX_PROC_UTIL      DEC(6,2) NOT NULL WITH DEFAULT,\n   FREQ0_PROC_UTIL    DEC(6,2) NOT NULL WITH DEFAULT,\n   FREQ1_PROC_UTIL    DEC(6,2) NOT NULL WITH DEFAULT,\n   FREQ2_PROC_UTIL    DEC(6,2) NOT NULL WITH DEFAULT,\n   FREQ3_PROC_UTIL    DEC(6,2) NOT NULL WITH DEFAULT,\n   FREQ4_PROC_UTIL    DEC(6,2) NOT NULL WITH DEFAULT,\n   FREQ5_PROC_UTIL    DEC(6,2) NOT NULL WITH DEFAULT,\n   FREQ6_PROC_UTIL    DEC(6,2) NOT NULL WITH DEFAULT,\n   FREQ7_PROC_UTIL    DEC(6,2) NOT NULL WITH DEFAULT,\n   FREQ8_PROC_UTIL    DEC(6,2) NOT NULL WITH DEFAULT,\n   FREQ9_PROC_UTIL    DEC(6,2) NOT NULL WITH DEFAULT)\n   IN DCAP01.SCAP02;\n  COMMIT;\n\n  GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE\n    BUILD.TCAPAPAF\n    TO TECH110;\n  COMMIT;\n  GRANT SELECT ON TABLE\n    BUILD.TCAPAPAF\n    TO PUBLIC AT ALL LOCATIONS;\n  COMMIT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DCAPDIST": {"ttr": 2561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x94\\x02O\\x00\\x94\\x02O\\x13T\\x00\\x1d\\x00\\x1f\\x00\\x08\\xe3\\xc5\\xc3\\xc8\\xf6\\xf0\\xf2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-01-24T00:00:00", "modifydate": "1994-01-24T13:54:00", "lines": 29, "newlines": 31, "modlines": 8, "user": "TECH602"}, "text": "--DROP TABLESPACE SCAP05;\n--COMMIT;\n  CREATE TABLESPACE SCAP05\n  IN DCAP01\n  USING VCAT DB2A\n  PCTFREE 0\n  FREEPAGE 0\n  BUFFERPOOL BP0\n  SEGSIZE 16\n  LOCKSIZE ANY\n  CLOSE NO;\n  COMMIT;\n\n  CREATE TABLE BUILD.TCAPDIST\n  (DATE               DATE      NOT NULL WITH DEFAULT,\n   WEEKDAY            CHAR(03)  NOT NULL WITH DEFAULT,\n   DISTROS            INTEGER   NOT NULL WITH DEFAULT,\n   DISTRO_UNITS       INTEGER   NOT NULL WITH DEFAULT)\n   IN DCAP01.SCAP05;\n  COMMIT;\n\n  GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE\n    BUILD.TCAPDIST\n    TO TECH110;\n  COMMIT;\n  GRANT SELECT ON TABLE\n    BUILD.TCAPDIST\n    TO PUBLIC AT ALL LOCATIONS;\n  COMMIT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DCAPINVN": {"ttr": 2563, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x94\\x02O\\x00\\x94\\x02O\\x13U\\x00\\x1f\\x00\\x1c\\x00\\n\\xe3\\xc5\\xc3\\xc8\\xf6\\xf0\\xf2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1994-01-24T00:00:00", "modifydate": "1994-01-24T13:55:00", "lines": 31, "newlines": 28, "modlines": 10, "user": "TECH602"}, "text": "--DROP TABLESPACE SCAP06;\n--COMMIT;\n  CREATE TABLESPACE SCAP06\n  IN DCAP01\n  USING VCAT DB2A\n  PCTFREE 0\n  FREEPAGE 0\n  BUFFERPOOL BP0\n  SEGSIZE 16\n  LOCKSIZE ANY\n  CLOSE NO;\n  COMMIT;\n\n  CREATE TABLE BUILD.TCAPINVN\n  (DATE               DATE      NOT NULL WITH DEFAULT,\n   WEEKDAY            CHAR(03)  NOT NULL WITH DEFAULT,\n   INVEN_UNITS_IN     INTEGER   NOT NULL WITH DEFAULT,\n   INVEN_VALUE_IN     DEC(10,2) NOT NULL WITH DEFAULT,\n   INVEN_UNITS_OUT    INTEGER   NOT NULL WITH DEFAULT,\n   INVEN_VALUE_OUT    DEC(10,2) NOT NULL WITH DEFAULT)\n   IN DCAP01.SCAP06;\n  COMMIT;\n\n  GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE\n    BUILD.TCAPINVN\n    TO TECH110;\n  COMMIT;\n  GRANT SELECT ON TABLE\n    BUILD.TCAPINVN\n    TO PUBLIC AT ALL LOCATIONS;\n  COMMIT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DCAPPLAN": {"ttr": 2565, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x935O\\x00\\x935O\\x16)\\x00)\\x00\\xcb\\x00\\x1c\\xe3\\xc5\\xc3\\xc8\\xf6\\xf0\\xf2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-12-20T00:00:00", "modifydate": "1993-12-20T16:29:00", "lines": 41, "newlines": 203, "modlines": 28, "user": "TECH602"}, "text": "--DROP DATABASE DCAP01;\n--COMMIT;\n  CREATE DATABASE DCAP01;\n  COMMIT;\n\n  CREATE TABLESPACE SCAP01\n  IN DCAP01\n  USING VCAT DB2A\n  PCTFREE 0\n  FREEPAGE 0\n  BUFFERPOOL BP0\n  SEGSIZE 16\n  LOCKSIZE ANY\n  CLOSE NO;\n  COMMIT;\n\n  CREATE TABLE BUILD.TCAPTMON\n  (DATE               DATE      NOT NULL WITH DEFAULT,\n   WEEKDAY            CHAR(03)  NOT NULL WITH DEFAULT,\n   AREA               CHAR(40)  NOT NULL WITH DEFAULT,\n   TRANS_COUNT        INTEGER   NOT NULL WITH DEFAULT,\n   RESP_TIME_SEC      DEC(14,4) NOT NULL WITH DEFAULT,\n   FILE_COUNT         INTEGER   NOT NULL WITH DEFAULT,\n   IO_TIME_SEC        DEC(14,4) NOT NULL WITH DEFAULT,\n   CPU_TIME_SEC       DEC(14,4) NOT NULL WITH DEFAULT,\n   RESP_01_COUNT      INTEGER   NOT NULL WITH DEFAULT,\n   RESP_12_COUNT      INTEGER   NOT NULL WITH DEFAULT,\n   RESP_23_COUNT      INTEGER   NOT NULL WITH DEFAULT,\n   RESP_34_COUNT      INTEGER   NOT NULL WITH DEFAULT,\n   RESP_G4_COUNT      INTEGER   NOT NULL WITH DEFAULT)\n   IN DCAP01.SCAP01;\n  COMMIT;\n\n  GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE\n    BUILD.TCAPTMON\n    TO TECH110;\n  COMMIT;\n  GRANT SELECT ON TABLE\n    BUILD.TCAPTMON\n    TO PUBLIC AT ALL LOCATIONS;\n  COMMIT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DCAPSALE": {"ttr": 2567, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x94\\x00?\\x00\\x94\\x00O\\x10B\\x00\\x1c\\x00\\x1d\\x00\\x12\\xe3\\xc5\\xc3\\xc8\\xf6\\xf0\\xf2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1994-01-03T00:00:00", "modifydate": "1994-01-04T10:42:00", "lines": 28, "newlines": 29, "modlines": 18, "user": "TECH602"}, "text": "--DROP TABLESPACE SCAP04;\n--COMMIT;\n  CREATE TABLESPACE SCAP04\n  IN DCAP01\n  USING VCAT DB2A\n  PCTFREE 0\n  FREEPAGE 0\n  BUFFERPOOL BP0\n  SEGSIZE 16\n  LOCKSIZE ANY\n  CLOSE NO;\n  COMMIT;\n\n  CREATE TABLE BUILD.TCAPSALE\n  (DATE               DATE      NOT NULL WITH DEFAULT,\n   WEEKDAY            CHAR(03)  NOT NULL WITH DEFAULT,\n   SALES$_REPORTED    DEC(10,2) NOT NULL WITH DEFAULT)\n   IN DCAP01.SCAP04;\n  COMMIT;\n\n  GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE\n    BUILD.TCAPSALE\n    TO TECH110;\n  COMMIT;\n  GRANT SELECT ON TABLE\n    BUILD.TCAPSALE\n    TO PUBLIC AT ALL LOCATIONS;\n  COMMIT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DCAPSTRX": {"ttr": 2569, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x936O\\x00\\x936O\\x14\\x15\\x00\\x1d\\x00)\\x00\\x08\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-12-30T00:00:00", "modifydate": "1993-12-30T14:15:00", "lines": 29, "newlines": 41, "modlines": 8, "user": "TECH110"}, "text": "--DROP TABLESPACE SCAP03;\n--COMMIT;\n  CREATE TABLESPACE SCAP03\n  IN DCAP01\n  USING VCAT DB2A\n  PCTFREE 0\n  FREEPAGE 0\n  BUFFERPOOL BP0\n  SEGSIZE 16\n  LOCKSIZE ANY\n  CLOSE NO;\n  COMMIT;\n\n  CREATE TABLE BUILD.TCAPSTRX\n  (DATE               DATE     NOT NULL WITH DEFAULT,\n   WEEKDAY            CHAR(03) NOT NULL WITH DEFAULT,\n   STORES_REPORTING   INTEGER  NOT NULL WITH DEFAULT,\n   SALES_TRANSACTIONS INTEGER  NOT NULL WITH DEFAULT)\n   IN DCAP01.SCAP03;\n  COMMIT;\n\n  GRANT SELECT, UPDATE, INSERT, DELETE ON TABLE\n    BUILD.TCAPSTRX\n    TO TECH110;\n  COMMIT;\n  GRANT SELECT ON TABLE\n    BUILD.TCAPSTRX\n    TO PUBLIC AT ALL LOCATIONS;\n  COMMIT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DEFNTSNW": {"ttr": 2571, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x915O\\x00\\x915O\\x12$\\x00-\\x00\\x14\\x00&\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-12-20T00:00:00", "modifydate": "1991-12-20T12:24:00", "lines": 45, "newlines": 20, "modlines": 38, "user": "TECH110"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IDCAMS,REGION=6M\n//*COMMENT\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  DEF ALIAS (NAME(SRTY001) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(SRTY002) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(GERRY) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(TPAUL) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(TDBOWEN) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(MARIAN) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(MARIANT) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(TMIKEM) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(TJERRYZ) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(TKENM) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(JEFFK) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(TPJM) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(TWPH) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER001) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER002) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER003) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER004) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER005) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER101) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER102) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER103) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER104) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER105) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER201) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER202) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER203) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER500) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER501) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER502) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER972) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER990) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER991) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER992) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER993) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER994) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER995) REL(SYS1.UCATTPDP.CLUSTER))\n  DEF ALIAS (NAME(OPER999) REL(SYS1.UCATTPDP.CLUSTER))\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DEFRCAT": {"ttr": 2573, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x93\\x03O\\x00\\x94\"\\x8f\\x12\\x07\\x00\\x0b\\x00X\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1993-02-03T00:00:00", "modifydate": "1994-08-16T12:07:00", "lines": 11, "newlines": 88, "modlines": 0, "user": "TECH110"}, "text": "//TECH110K JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//STEP01 EXEC PGM=IDCAMS,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSIN   DD *\n DEF NVSAM (NAME(SYS1.SMARTDB2.V1R1M0.SMMVS.LOAD) -\n    VOL(SYS016) DEVT(3390) RECATALOG) -\n    CAT(SYS1.MCATSB.CLUSTER)\n DEF NVSAM (NAME(SYS1.SMARTDB2.V1R1M0.SMSAF.LOAD) -\n    VOL(SYS001) DEVT(3390) RECATALOG) -\n    CAT(SYS1.MCATSB.CLUSTER)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DEFTSOC": {"ttr": 2575, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x912/\\x00\\x912/\\x17\\x05\\x00X\\x00f\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-11-18T00:00:00", "modifydate": "1991-11-18T17:05:00", "lines": 88, "newlines": 102, "modlines": 0, "user": "TECH110"}, "text": "//DEFTSOC  JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//STEP01 EXEC PGM=IDCAMS,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSIN   DD *\n DEF NVSAM (NAME(TECH000.USER.CNTLLIB) -\n    VOL(SMSU03) DEVT(3380))\n DEF NVSAM (NAME(TECH001.USER.CNTLLIB) -\n    VOL(SMSU04) DEVT(3380))\n DEF NVSAM (NAME(TECH001.USER2.CNTLLIB) -\n    VOL(SMSU11) DEVT(3380))\n DEF NVSAM (NAME(TECH001.RACF19.CNTLLIB) -\n    VOL(SMSU08) DEVT(3380))\n DEF NVSAM (NAME(TECH001.STAGING.CNTLLIB) -\n    VOL(SMSU07) DEVT(3380))\n DEF NVSAM (NAME(TECH002.USER.CNTLLIB) -\n    VOL(SMSU05) DEVT(3380))\n DEF NVSAM (NAME(TECH099.USER.CNTLLIB) -\n    VOL(SMSU06) DEVT(3380))\n DEF NVSAM (NAME(TECH101.USER.CNTLLIB) -\n    VOL(SMSU07) DEVT(3380))\n DEF NVSAM (NAME(TECH102.USER.CNTLLIB) -\n    VOL(SMSU08) DEVT(3380))\n DEF NVSAM (NAME(TECH103.USER.CNTLLIB) -\n    VOL(SMSU09) DEVT(3380))\n DEF NVSAM (NAME(TECH104.USER.CNTLLIB) -\n    VOL(SMSU10) DEVT(3380))\n DEF NVSAM (NAME(TECH105.USER.CNTLLIB) -\n    VOL(SMSU11) DEVT(3380))\n DEF NVSAM (NAME(TECH106.USER.CNTLLIB) -\n    VOL(SMSU03) DEVT(3380))\n DEF NVSAM (NAME(TECH107.USER.CNTLLIB) -\n    VOL(SMSU04) DEVT(3380))\n DEF NVSAM (NAME(TECH108.USER.CNTLLIB) -\n    VOL(SMSU05) DEVT(3380))\n DEF NVSAM (NAME(TECH109.USER.CNTLLIB) -\n    VOL(SMSU06) DEVT(3380))\n DEF NVSAM (NAME(TECH111.USER.CNTLLIB) -\n    VOL(SMSU08) DEVT(3380))\n DEF NVSAM (NAME(TECH200.USER.CNTLLIB) -\n    VOL(SMSU09) DEVT(3380))\n DEF NVSAM (NAME(TECH201.USER.CNTLLIB) -\n    VOL(SMSU10) DEVT(3380))\n DEF NVSAM (NAME(TECH202.USER.CNTLLIB) -\n    VOL(SMSU11) DEVT(3380))\n DEF NVSAM (NAME(TECH203.USER.CNTLLIB) -\n    VOL(SMSU03) DEVT(3380))\n DEF NVSAM (NAME(TECH204.USER.CNTLLIB) -\n    VOL(SMSU04) DEVT(3380))\n DEF NVSAM (NAME(TECH205.USER.CNTLLIB) -\n    VOL(SMSU05) DEVT(3380))\n DEF NVSAM (NAME(TECH206.USER.CNTLLIB) -\n    VOL(SMSU06) DEVT(3380))\n DEF NVSAM (NAME(TECH207.USER.CNTLLIB) -\n    VOL(SMSU07) DEVT(3380))\n DEF NVSAM (NAME(TECH208.USER.CNTLLIB) -\n    VOL(SMSU08) DEVT(3380))\n DEF NVSAM (NAME(TECH209.USER.CNTLLIB) -\n    VOL(SMSU09) DEVT(3380))\n DEF NVSAM (NAME(TECH220.USER.CNTLLIB) -\n    VOL(SMSU10) DEVT(3380))\n DEF NVSAM (NAME(TECH221.USER.CNTLLIB) -\n    VOL(SMSU11) DEVT(3380))\n DEF NVSAM (NAME(TECH250.USER.CNTLLIB) -\n    VOL(SMSU03) DEVT(3380))\n DEF NVSAM (NAME(TECH251.USER.CNTLLIB) -\n    VOL(SMSU04) DEVT(3380))\n DEF NVSAM (NAME(TECH252.USER.CNTLLIB) -\n    VOL(SMSU05) DEVT(3380))\n DEF NVSAM (NAME(TECH253.USER.CNTLLIB) -\n    VOL(SMSU06) DEVT(3380))\n DEF NVSAM (NAME(TECH290.USER.CNTLLIB) -\n    VOL(SMSU07) DEVT(3380))\n DEF NVSAM (NAME(TECH291.USER.CNTLLIB) -\n    VOL(SMSU08) DEVT(3380))\n DEF NVSAM (NAME(TECH292.USER.CNTLLIB) -\n    VOL(SMSU09) DEVT(3380))\n DEF NVSAM (NAME(TECH293.USER.CNTLLIB) -\n    VOL(SMSU10) DEVT(3380))\n DEF NVSAM (NAME(TECH294.USER.CNTLLIB) -\n    VOL(SMSU11) DEVT(3380))\n DEF NVSAM (NAME(TECH295.USER.CNTLLIB) -\n    VOL(SMSU03) DEVT(3380))\n DEF NVSAM (NAME(TECH296.USER.CNTLLIB) -\n    VOL(SMSU04) DEVT(3380))\n DEF NVSAM (NAME(TECH299.USER.CNTLLIB) -\n    VOL(SMSU05) DEVT(3380))\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DELETEG": {"ttr": 2578, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x91\\x13?\\x00\\x91\\x13?\\x11Y\\x00\\x08\\x00\\x08\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-05-13T00:00:00", "modifydate": "1991-05-13T11:59:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  DELETE JEFFK.POLL.OUTPUT  GDG\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DELNOSCR": {"ttr": 2580, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x910\\x9f\\x00\\x93\\x07\\x0f\\x10F\\x00\\n\\x00\\x08\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1991-11-05T00:00:00", "modifydate": "1993-03-11T10:46:00", "lines": 10, "newlines": 8, "modlines": 4, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=P,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  DELETE INFOV01.USER.CNTLLIB NOSCRATCH\n  DELETE INFOV01.USER.JCLLIB  NOSCRATCH\n  DELETE INFOV01.USER.SRCELIB NOSCRATCH\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DELNVRE": {"ttr": 2582, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x92\\x15\\x7f\\x00\\x935\\x1f\\x10V\\x00\\n\\x00\\t\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-06-05T00:00:00", "modifydate": "1993-12-17T10:56:00", "lines": 10, "newlines": 9, "modlines": 6, "user": "TECH110"}, "text": "/* REXX */\nTRACE ?I;\nADDRESS \"ISPEXEC\" \"VGET (ZDLDSN ZDLVOL ZDLDEV) SHARED\";\nADDRESS \"TSO\";\n\"ALLOC F(\"ZDLVOL\") DA('\"ZDLDSN\"') OLD UNIT(\"ZDLDEV\") \"|| ,\n     \"VOL(\"ZDLVOL\")\";\n\"DELETE '\"ZDLDSN\"' NVR FILE(\"ZDLVOL\")\";\nSAVERC = RC;\n\"FREE F(\"ZDLVOL\")\";\nEXIT SAVERC;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DELTNSCR": {"ttr": 2584, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x912?\\x00\\x912?\\x14C\\x00/\\x00X\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-11-19T00:00:00", "modifydate": "1991-11-19T14:43:00", "lines": 47, "newlines": 88, "modlines": 0, "user": "TECH110"}, "text": "//DEFTSOC  JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//STEP01 EXEC PGM=IDCAMS,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSIN   DD *\n DEL TECH000.USER.CNTLLIB       NOSCRATCH\n DEL TECH001.USER.CNTLLIB       NOSCRATCH\n DEL TECH001.USER2.CNTLLIB       NOSCRATCH\n DEL TECH001.RACF19.CNTLLIB       NOSCRATCH\n DEL TECH001.STAGING.CNTLLIB       NOSCRATCH\n DEL TECH002.USER.CNTLLIB       NOSCRATCH\n DEL TECH099.USER.CNTLLIB       NOSCRATCH\n DEL TECH101.USER.CNTLLIB       NOSCRATCH\n DEL TECH102.USER.CNTLLIB       NOSCRATCH\n DEL TECH103.USER.CNTLLIB       NOSCRATCH\n DEL TECH104.USER.CNTLLIB       NOSCRATCH\n DEL TECH105.USER.CNTLLIB       NOSCRATCH\n DEL TECH106.USER.CNTLLIB       NOSCRATCH\n DEL TECH107.USER.CNTLLIB       NOSCRATCH\n DEL TECH108.USER.CNTLLIB       NOSCRATCH\n DEL TECH109.USER.CNTLLIB       NOSCRATCH\n DEL TECH111.USER.CNTLLIB       NOSCRATCH\n DEL TECH200.USER.CNTLLIB       NOSCRATCH\n DEL TECH201.USER.CNTLLIB       NOSCRATCH\n DEL TECH202.USER.CNTLLIB       NOSCRATCH\n DEL TECH203.USER.CNTLLIB       NOSCRATCH\n DEL TECH204.USER.CNTLLIB       NOSCRATCH\n DEL TECH205.USER.CNTLLIB       NOSCRATCH\n DEL TECH206.USER.CNTLLIB       NOSCRATCH\n DEL TECH207.USER.CNTLLIB       NOSCRATCH\n DEL TECH208.USER.CNTLLIB       NOSCRATCH\n DEL TECH209.USER.CNTLLIB       NOSCRATCH\n DEL TECH220.USER.CNTLLIB       NOSCRATCH\n DEL TECH221.USER.CNTLLIB       NOSCRATCH\n DEL TECH250.USER.CNTLLIB       NOSCRATCH\n DEL TECH251.USER.CNTLLIB       NOSCRATCH\n DEL TECH252.USER.CNTLLIB       NOSCRATCH\n DEL TECH253.USER.CNTLLIB       NOSCRATCH\n DEL TECH290.USER.CNTLLIB       NOSCRATCH\n DEL TECH291.USER.CNTLLIB       NOSCRATCH\n DEL TECH292.USER.CNTLLIB       NOSCRATCH\n DEL TECH293.USER.CNTLLIB       NOSCRATCH\n DEL TECH294.USER.CNTLLIB       NOSCRATCH\n DEL TECH295.USER.CNTLLIB       NOSCRATCH\n DEL TECH296.USER.CNTLLIB       NOSCRATCH\n DEL TECH299.USER.CNTLLIB       NOSCRATCH\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DELTNVR": {"ttr": 2586, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x07\\x00\\x00\\x00\\x912?\\x00\\x92'_\\tB\\x00\\x19\\x00X\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.07", "flags": 0, "createdate": "1991-11-19T00:00:00", "modifydate": "1992-10-01T09:42:00", "lines": 25, "newlines": 88, "modlines": 0, "user": "TECH110"}, "text": "//DELTNVR  JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//STEP01 EXEC PGM=IDCAMS,REGION=8M\n//SYS020 DD VOL=SER=SYS020,DISP=OLD,UNIT=3390\n//SYSPRINT DD SYSOUT=*\n//SYSIN   DD *\n DEF NVSAM (NAME(SYS1.PCSQL.V1R02M00.CONFIG.DATA) -\n  VOL(SYS021) DEVT(3390) RECATALOG) CAT(SYS1.MCATSB.CLUSTER)\n DEF NVSAM (NAME(SYS1.IPCS.V4R2M0.SBLSMSG0) -\n  VOL(SYS017) DEVT(3390) RECATALOG) CAT(SYS1.MCATSB.CLUSTER)\n DEF NVSAM (NAME(SYS1.EXAMINE.V3R1M0.EXAMINE.CLIST) -\n  VOL(SYS020) DEVT(3390) RECATALOG) CAT(SYS1.MCATSB.CLUSTER)\n DEF NVSAM (NAME(SYS1.EXAMINE.V3R1M0.EXAMINE.DBASE1) -\n  VOL(SYS020) DEVT(3390) RECATALOG) CAT(SYS1.MCATSB.CLUSTER)\n DEF NVSAM (NAME(SYS1.EXAMINE.V3R1M0.EXAMINE.DBASE2) -\n  VOL(SYS020) DEVT(3390) RECATALOG) CAT(SYS1.MCATSB.CLUSTER)\n DEF NVSAM (NAME(SYS1.EXAMINE.V3R1M0.EXAMINE.LOAD) -\n  VOL(SYS020) DEVT(3390) RECATALOG) CAT(SYS1.MCATSB.CLUSTER)\n DEF NVSAM (NAME(SYS1.EXAMINE.V3R1M0.EXAMINE.MESSAGES) -\n  VOL(SYS020) DEVT(3390) RECATALOG) CAT(SYS1.MCATSB.CLUSTER)\n DEF NVSAM (NAME(SYS1.EXAMINE.V3R1M0.EXAMINE.PANELS) -\n  VOL(SYS020) DEVT(3390) RECATALOG) CAT(SYS1.MCATSB.CLUSTER)\n DEF NVSAM (NAME(SYS1.EXAMINE.V3R1M0.EXAMINE.TABLES) -\n  VOL(SYS020) DEVT(3390) RECATALOG) CAT(SYS1.MCATSB.CLUSTER)\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DELTVVR": {"ttr": 2588, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x910\\x9f\\x00\\x94\\x11\\x8f\\x12\\x01\\x00\\t\\x00\\x08\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1991-11-05T00:00:00", "modifydate": "1994-04-28T12:01:00", "lines": 9, "newlines": 8, "modlines": 4, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//VOLSER DD UNIT=3390,DISP=OLD,VOL=SER=POS002\n//SYSIN DD *\n  DEL TPTPS.E.GFH.CALLEX.FILE.DATA -\n     FILE(VOLSER) VVR\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DELUCAT": {"ttr": 2590, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x915o\\x00\\x93\\x07o!Q\\x00\\n\\x00\\x08\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1991-12-22T00:00:00", "modifydate": "1993-03-17T21:51:00", "lines": 10, "newlines": 8, "modlines": 5, "user": "TECH110"}, "text": "//TECH110F JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//* DELETE TEMP ESA UCAT\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  DELETE SYS1.UCATFDR.CLUSTER UCAT FORCE\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DELVSAM": {"ttr": 2592, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x916/\\x00\\x916/\\x17\\x14\\x00\\n\\x00\\x08\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-12-28T00:00:00", "modifydate": "1991-12-28T17:14:00", "lines": 10, "newlines": 8, "modlines": 3, "user": "TECH110"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  DELETE HSM.BCDS CLUSTER CAT(SYS1.UCATHSMA.CLUSTER)\n  DELETE HSM.OCDS CLUSTER CAT(SYS1.UCATHSMA.CLUSTER)\n  DELETE HSM.MCDS CLUSTER CAT(SYS1.UCATHSMA.CLUSTER)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DELVVDS": {"ttr": 2817, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x916\\x1f\\x00\\x92\\x03O\\x10\\x05\\x00\\x08\\x00a\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1991-12-27T00:00:00", "modifydate": "1992-02-03T10:05:00", "lines": 8, "newlines": 97, "modlines": 0, "user": "TECH110"}, "text": "//DELVVDS  JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//STEP01 EXEC PGM=IDCAMS,REGION=8M\n//SMSSA4 DD VOL=SER=SMSSA4,DISP=OLD,UNIT=3380\n//SYSPRINT DD SYSOUT=*\n//SYSIN   DD *\n  DEL SYS1.VVDS.VSMSSA4 FILE(SMSSA4) RECOVERY\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DELVVRE": {"ttr": 2819, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92\\x15\\x7f\\x00\\x92\\x15\\x7f\\x12\\x19\\x00\\t\\x00\\t\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-06-05T00:00:00", "modifydate": "1992-06-05T12:19:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "TECH110"}, "text": "/* REXX */\nADDRESS \"ISPEXEC\" \"VGET (ZDLDSN ZDLVOL ZDLDEV) SHARED\";\nADDRESS \"TSO\";\n\"ALLOC F(\"ZDLVOL\") DA('\"ZDLDSN\"') OLD UNIT(\"ZDLDEV\") \"|| ,\n     \"VOL(\"ZDLVOL\")\";\n\"DELETE '\"ZDLDSN\"' VVR FILE(\"ZDLVOL\")\";\nSAVERC = RC;\n\"FREE F(\"ZDLVOL\")\";\nEXIT SAVERC;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DFDSSDEL": {"ttr": 2821, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x07\\x00\\x00\\x00\\x92&?\\x00\\x92'O\\x161\\x00\\x11\\x00\\x13\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.07", "flags": 0, "createdate": "1992-09-19T00:00:00", "modifydate": "1992-09-30T16:31:00", "lines": 17, "newlines": 19, "modlines": 0, "user": "TECH110"}, "text": "//DFDSSDEL JOB 5304010530000000,'TECH.SUPP.DANBOWEN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=6M\n/*JOBPARM S=SYSB\n//COPYDS   EXEC PGM=ADRDSSU\n//DASDIN   DD UNIT=3390,VOL=SER=SYS017,DISP=SHR\n//DASDOUT  DD UNIT=3390,VOL=SER=SYS001,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n  COPY DATASET(                                                        -\n      INCLUDE(SYST.TECH.COMMON.CNTLLIB))                          -\n      INDDNAME(DASDIN) OUTDDNAME(DASDOUT)                              -\n      RECATALOG(SYS1.MCATSB.CLUSTER)                                   -\n      RENAMEU(SYS1)                                                    -\n      MGMTCLAS(NOMIG) STORCLAS(SYSSHARE)                               -\n      DELETE TOL(IOER ENQF) WAIT(0,0) ALLDATA(*) ALLEXCP\n//*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFDSSDMP": {"ttr": 2823, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x95 _\\x00\\x95&_\\x10A\\x00\\x0c\\x00\\x0f\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1995-07-24T00:00:00", "modifydate": "1995-09-22T10:41:00", "lines": 12, "newlines": 15, "modlines": 6, "user": "TECH110"}, "text": "//TECH110L JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n// EXEC PGM=ADRDSSU\n//SYSPRINT DD SYSOUT=*\n//TAPE    DD DISP=(NEW,KEEP),UNIT=SILO,DSN=TECHDUMP\n//SYSIN DD *\n  DUMP OUTDD(TAPE) -\n    DS(INCL(TECH110.**,SYSS.TECH.COMMON.**,SYS1.TECH.COMMON.**,  -\n            SYS1.PARMLIB,TECH103.USER.CNTLLIB, -\n            SYS1.SYNCSORT.**,SYSM.SYNCSORT.**,SYS1.PROCLIB)) -\n    TOL(ENQF) WAIT(0,0)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFDSSRST": {"ttr": 2825, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x95 o\\x00\\x951\\x1f\\x11\\x13\\x00\\r\\x00\\x0f\\x00\\x07\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1995-07-25T00:00:00", "modifydate": "1995-11-07T11:13:00", "lines": 13, "newlines": 15, "modlines": 7, "user": "TECH110"}, "text": "//TECH110L JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n// EXEC PGM=ADRDSSU\n//SYSPRINT DD SYSOUT=*\n//TAPE DD DSN=TECH321.TCPIP,DISP=OLD,UNIT=SILO,\n// VOL=SER=(U10700)\n//SYSIN DD *\n  RESTORE INDDNAME(TAPE) -\n     DS(INCL(TECH110.TCPIP.**,SYS1.TCPIP.**)) -\n     RENAMEU((TECH110.TCPIP.**, -\n       SYS1.TCPIP.**)) -\n     CATALOG IMPORT NMC NSC\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFDSS1": {"ttr": 2827, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\x17\\x9f\\x00\\x95\\x17\\x9f\\x13%\\x00\\x0f\\x00\\x0f\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-06-28T00:00:00", "modifydate": "1995-06-28T13:25:00", "lines": 15, "newlines": 15, "modlines": 1, "user": "TECH110"}, "text": "//TECH110L JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n// EXEC PGM=ADRDSSU\n//SYSPRINT DD SYSOUT=*\n//DCSIRS1 DD DISP=OLD,UNIT=3390,VOL=SER=CSIRS1\n//TCSIRS1 DD DISP=OLD,UNIT=SILO,DSN=T1606822.D#CSIRS1,\n//  VOL=SER=(CSI010,CSI011)\n//DCSIDL1 DD DISP=OLD,UNIT=3390,VOL=SER=CSIDL1\n//TCSIDL1 DD DISP=OLD,UNIT=SILO,DSN=T1606822.D#CSIDL1,\n//  VOL=SER=(CSI020,CSI021)\n//SYSIN DD *\n  PARALLEL\n  RESTORE INDDNAME(TCSIRS1) OUTDDNAME(DCSIRS1)\n  RESTORE INDDNAME(TCSIDL1) OUTDDNAME(DCSIDL1)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DFDSS2": {"ttr": 2829, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x17\\x9f\\x00\\x95\\x17\\x9f\\x12W\\x00\\x17\\x00\\x17\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-06-28T00:00:00", "modifydate": "1995-06-28T12:57:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n// EXEC PGM=ADRDSSU\n//SYSPRINT DD SYSOUT=*\n//DCSICAT DD DISP=OLD,UNIT=3390,VOL=SER=CSICAT\n//TCSICAT DD DISP=OLD,UNIT=SILO,DSN=T1606822.D#CSICAT,\n//  VOL=SER=(CSI030)\n//DCSISMP DD DISP=OLD,UNIT=3390,VOL=SER=CSISMP\n//TCSISMP DD DISP=OLD,UNIT=SILO,DSN=T1606822.D#CSISMP,\n//  VOL=SER=(CSI040)\n//DCSIPP1 DD DISP=OLD,UNIT=3390,VOL=SER=CSIPP1\n//TCSIPP1 DD DISP=OLD,UNIT=SILO,DSN=T1606822.D#CSIPP1,\n//  VOL=SER=(CSI050)\n//DCSIDL2 DD DISP=OLD,UNIT=3390,VOL=SER=CSIDL2\n//TCSIDL2 DD DISP=OLD,UNIT=SILO,DSN=T1606822.D#CSIDL2,\n//  VOL=SER=(CSI060)\n//SYSIN DD *\n  PARALLEL\n  RESTORE INDDNAME(TCSICAT) OUTDDNAME(DCSICAT)\n  RESTORE INDDNAME(TCSISMP) OUTDDNAME(DCSISMP)\n  RESTORE INDDNAME(TCSIPP1) OUTDDNAME(DCSIPP1)\n  RESTORE INDDNAME(TCSIDL2) OUTDDNAME(DCSIDL2)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DIAGNOSE": {"ttr": 2831, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x910\\x9f\\x00\\x93\\x13\\x7f\\x100\\x00\\x0e\\x00\\x14\\x00\\t\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1991-11-05T00:00:00", "modifydate": "1993-05-17T10:30:00", "lines": 14, "newlines": 20, "modlines": 9, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//VSAM10 DD DSN=SYS1.VVDS.VVSAM10,DISP=SHR,AMP='AMORG'\n//SYSIN DD *\n  DIAGNOSE ICFCAT -\n     INDATASET(SYS1.UCATPRD1.CLUSTER) -\n     COMPAREDD(VSAM10)\n  DIAGNOSE VVDS -\n     COMPAREDS(SYS1.UCATPRD1.CLUSTER) -\n     INFILE(VSAM10)\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DISASM": {"ttr": 2833, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x925o\\x00\\x925o\\x17\\x11\\x00\\t\\x00D\\x00\\x08\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-12-21T00:00:00", "modifydate": "1992-12-21T17:11:00", "lines": 9, "newlines": 68, "modlines": 8, "user": "TECH110"}, "text": "//GOLD02PP JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=DISASM,REGION=6M\n//DISPRINT DD SYSOUT=*\n//DISPUNCH DD SYSOUT=*\n//DISMOD DD DSN=SYS1.TEST.BATCH.LOADLIB,DISP=SHR\n//DISIN DD *\nMODULE   GOLD02PP\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DLFDELET": {"ttr": 2835, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x921O\\x00\\x921O\\x11T\\x00\\x05\\x00\\x04\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-11-09T00:00:00", "modifydate": "1992-11-09T11:54:00", "lines": 5, "newlines": 4, "modlines": 2, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//S EXEC PGM=COFMSTCN,PARM='SMSU05TECH110.TEST.HIPERBAT'\n//S EXEC PGM=COFMSTCN,PARM='SMSU23TECH110.TEST.HIPERBAT'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DRERPROF": {"ttr": 2837, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92\\x12/\\x00\\x92\\x12/\\x15W\\x019\\x019\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-05-01T00:00:00", "modifydate": "1992-05-01T15:57:00", "lines": 313, "newlines": 313, "modlines": 0, "user": "TECH110"}, "text": "/* REXX **********************************************************/\n/*                                                               */\n/*     PROGRAM NAME: DRERPROF                                    */\n/*                                                               */\n/* DESCRIPTIVE NAME: SLR Dialog profile                          */\n/*                                                               */\n/* Read this before you start editing this profile:              */\n/*                                                               */\n/* - This is a REXX program and REXX syntax rules must be        */\n/*   followed.                                                   */\n/* - The format of each profile variable is:                     */\n/*   variable = value                                            */\n/*   -  Variable is a symbolic name for an option or data set.   */\n/*   -  Value is the value to assign to the profile variable. It */\n/*      can be one or more words, with or without quotes.        */\n/*   -  A value can be continued to the next line by using a     */\n/*      comma as the last character. Example:                    */\n/*      SLRSAMP = 'SLR.LOCAL.SLRSAMP' , /* Customized tables   */*/\n/*                'SLR.V3R3M0.SLRSAMP'  /* SLR delivered tables*/*/\n/* - Variables starting with SLRU are output data sets and       */\n/*   can only contain one data set name. The other variables     */\n/*   beginning with SLR can have up to three data sets specified.*/\n/*   Exception to this rule is the SLRFORM data set which is an  */\n/*   output data set for GDDM ICU formats.                       */\n/* - All data sets, except data base names, must exist before    */\n/*   the SLR dialog is started.                                  */\n/* - The data set names must be fully qualified.                 */\n/* - When you allocate the user data sets, model them after      */\n/*   the corresponding SLR data set.                             */\n/*                                                               */\n/* - Normally, you create one profile for the SLR specialist,    */\n/*   who will perform customization, and one for all other       */\n/*   users. Each user must use their own SLRUTLIB, it cannot     */\n/*   be shared but it can be the same data set as used for the   */\n/*   ISPTABL for example.                                        */\n/*   The SLR specialist should use a SLR specific SLRUTLIB data  */\n/*   set. This data set should be the first data set name set    */\n/*   to variable SLRTLIB. In this way, the end users will only   */\n/*   see the customized SLR ISPF tables and not the shipped ones.*/\n/*                                                        PL79091*/\n/* - Before you start the SLR dialog, you must ensure that the   */\n/*   SLR LINKLIB is in the system link list or allocated to      */\n/*   STEPLIB. The SLR SLREXEC data set must be allcoated to      */\n/*   SYSEXEC or SYSPROC. The SLR SLRCLIST data set must be       */\n/*   allocated to SYSPROC.                                PL79091*/\n/*                                                               */\n/* CHANGE ACTIVITY:                                              */\n/*    Created 90-07-26 for SLR V3R3M0 by UB                      */\n/*    Change 01 91-03-01 Wrong data set for variable ADMCFORM.   */\n/*                       ADMCFORM should be SLRFORM target lib.  */\n/*                       Some documentation added.               */\n/*                       APAR PL79091.                           */\n/*    Change 02 91-05-23 Save of GDDM variable was omitted.      */\n/*                       APAR PL85043.                           */\n/*                                                               */\n/*****************************************************************/\nSignal on syntax                    /* Trap REXX syntax errors   */\nParse Source . . module .           /* Module name               */\n\n/*AAA*************************************************************/\n/* Set data set prefix                                           */\n/* usrpre is the prefix for data sets allocated per user.        */\n/* syspre is the prefix for data sets allocated per SLR system.  */\n/*        Normally the same as usrpre when customizing.          */\n/* slrpre is the prefix for the SLR target data sets.            */\n/*****************************************************************/\nusrpre = Sysvar('SYSPREF')   /* User data set prefix (TSO prefix)*/\nsyspre = Sysvar('SYSPREF')   /* Customized SLR data set prefix   */\nslrprm = 'SYSM.SLR.V3R3M0'   /* SLR data set prefix              */\nslrpre = 'SYS1.SLR.V3R3M0'   /* SLR data set prefix              */\n\n/*****************************************************************/\n/* Set global options                                            */\n/*****************************************************************/\ndebug = 0                  /* 0 - No debug, 1 - Enable Debug     */\nlogo  = 0                  /* 0 - No SLR logo, 1 - Show SLR logo */\ngddm  = 0                  /* 0 - No GDDM used, 1 - GDDM used    */\n\n/*****************************************************************/\n/* Set language                                                  */\n/*****************************************************************/\nAddress \"ISPEXEC\"  \"VGET ZLANG\"     /* Get ISPF language         */\nIf Translate(zlang) = 'JAPANESE' Then\n  language = 'JAPANESE'             /* Japanese                  */\nElse\n  language = 'ENGLISH'              /* English (also default)    */\n\n/*****************************************************************/\n/* Output ISPF table data set. SLR will concatenate this         */\n/* data set before the SLRTABL data set when reading.            */\n/* Must be one per SLR user.                                     */\n/*****************************************************************/\nslrutlib = usrpre'.SLRTABL'         /* SLR ISPF tables           */\n\n/*****************************************************************/\n/* Data sets containing local modifications to SLR. They will    */\n/* be concatenated ahead of the corresponding SLR data sets.     */\n/*****************************************************************/\nslruslib = syspre'.SLRCNTL'         /* SLR ISPF skeletons        */\nslrusamp = syspre'.SLRSAMP'         /* User table definitions    */\nslruasm  = syspre'.SLRASM'          /* User table source         */\nslrumacs = syspre'.SLRMACS'         /* User macros               */\nslruclist= syspre'.SLRCLIST'        /* User clists               */\nslrucntl = syspre'.SLRCNTL'         /* User JCL                  */\nslrform  = syspre'.ADMCFORM'        /* User GDDM formats         */\n\n/*****************************************************************/\n/* SLR data bases. You can add your own data bases by adding     */\n/* a new unique data base symbolic name to the SLRDBS list and   */\n/* by assigning the new variable a name.                         */\n/* Note: do may not use MAINFILE as a data base name.            */\n/*****************************************************************/\nslrdbs   = 'REPORTDB SYSTEMDB WORKFILE',  /* List of data bases  */\n           'DEMODB ACCTDB FCASTDB PERFMDB NRDB'\nreportdb = syspre'.REPORTDB'        /* SLR report data base      */\nsystemdb = syspre'.SYSTEMDB'        /* SLR system data base      */\nworkfile = syspre'.WORKFILE'        /* SLR Work data base        */\nacctdb   = syspre'.ACCTDB'          /* SLR accounting data base  */\nfcastdb  = syspre'.FCASTDB'         /* SLR forecasting data base */\nperfmdb  = syspre'.PERFMDB'         /* SLR performance data base */\ndemodb   = syspre'.DEMODB'          /* SLR demo data base        */\nnrdb     = syspre'.NRDB'            /* SLR Network Report db     */\n\n/*****************************************************************/\n/* SLR GDDM data sets                                            */\n/*****************************************************************/\nadmgdf   = syspre'.ADMGDF'           /* SLR GDDM ADMGDF          */\nadmcdata = syspre'.ADMCDATA'         /* SLR GDDM ADMCDATA        */\nadmcform = slrpre'.SLRFORM'          /* SLR GDDM formats  PL79091*/\nadmdefs  = slrpre'.SLRCNTL(DREJGDPR)'  /* GDDM nicknames  PL79091*/\nadmsymbl = 'SYS1.GDDMSYM'            /* GDDM symbols      PL79091*/\n\n/*****************************************************************/\n/* SLR sort data sets                                            */\n/*****************************************************************/\nsortlib  = 'NULLFILE'               /* SORT load library         */\nsortwsz  = 30                       /* Number of workfile cyls   */\nsortwu   = 'SYSDA'                  /* Workfile unit             */\nsysout   = 'DUMMY'                  /* SORT message output       */\n\n/*****************************************************************/\n/* JCL jobcards                                                  */\n/*****************************************************************/\njobcard1 = \"//\"Userid()\"S JOB (123456,NOBO),'SLR JCL',            \"\njobcard2 = \"//  NOTIFY=\"Userid()\",MSGCLASS=G,CLASS=S,REGION=6500K \"\njobcard3 = \"//*\"\njobcard4 = \"//*\"\njobcard5 = \"//*\"\n\n/*****************************************************************/\n/* SLR ISPF data sets. Since each user must have their own       */\n/* ISPF table data set for SLR outputs, the customized SLR ISPF  */\n/* table data set should be concatenated to the SLRTLIB to make  */\n/* it available to all SLR users.                                */\n/* Up to three data sets can be concatenated.                    */\n/*****************************************************************/\nslrplib = slrpre'.SLRPPLIB'         /* SLR ISPF panels           */\nslrmlib = slrpre'.SLRMLIB'          /* SLR ISPF messages         */\nslrslib = slrpre'.SLRSLIB'          /* SLR ISPF skeletons        */\nslrtlib = syspre'.SLRTABL' ,        /* Customized SLR ISPF tables*/\n          slrpre'.SLRTABL'          /* SLR ISPF tables           */\n\n/*****************************************************************/\n/* SLR data sets. Up to three data sets may be concatenated.     */\n/*                                                        PL79091*/\n/*****************************************************************/\nslrload = 'SYS1.LINKLIB'            /* SLR load modules          */\nslrsamp = slrprm'.SLRSAMP'          /* SLR table & exits (load)  */\nslrmacs = slrprm'.SLRMACS'          /* SLR table macros          */\nslrasm  = slrprm'.SLRASM'           /* SLR table & exits (source)*/\nslrexec = slrpre'.SLREXEC'          /* SLR rexx programs         */\nslrcntl = slrprm'.SLRCNTL'          /* SLR cntl programs         */\nslrclist= slrpre'.SLRCLIST'         /* SLR clist programs        */\nslrdbt  = slrpre'.SLRDBT'           /* SLR data base table ref.  */\nslrdump = 'DUMMY'                   /* SLR dump file. Can be:    */\n                                    /* DUMMY  -  No output       */\n                                    /* *   - Output to terminal  */\n\n/*****************************************************************/\n/*                                                               */\n/*             END OF CUSTOMIZATION FOR SLR                      */\n/*                                                               */\n/*   The rest of the code should not be modified.                */\n/*BBB ************************************************************/\n\n/*****************************************************************/\n/* LIBDEF to table data set                                      */\n/*****************************************************************/\nAddress \"ISPEXEC\" \"CONTROL ERRORS RETURN\"\nCall libdef 'ISPTLIB' slrutlib slrtlib  /* Keylists, cmd tables  */\nCall libdef 'SLRTLIB' slrutlib slrtlib  /* SLR input ISPF tables */\nCall libdef 'SLRTABL' slrutlib          /* SLR output tables     */\n\n/*****************************************************************/\n/* Open Profile ISPF table. If it doesn't exist, create it.      */\n/* The DRETPROF table has one key (PROFVAR) and one data         */\n/* column (PROFVAL).                                             */\n/*****************************************************************/\nAddress \"ISPEXEC\"\n\"TBOPEN  DRETPROF SHARE WRITE LIBRARY(SLRTLIB)\"\n\n/*****************************************************************/\n/* Check return code from TBOPEN                                 */\n/*****************************************************************/\nSelect\n  /***************************************************************/\n  /* Table opened, no action                                     */\n  /***************************************************************/\n  When rc = 0 Then\n    Nop\n\n  /***************************************************************/\n  /* Table does not exist. Create it                             */\n  /***************************************************************/\n  When rc = 8 Then\n    Do\n      \"TBCREATE DRETPROF KEYS(PROFVAR) NAMES(PROFVAL)\",\n      \"  LIBRARY(SLRTABL) SHARE REPLACE\"\n      If debug > 0 Then\n        Call drertrc module' TBCREATE DRETPROF rc = 'rc\n      If rc > 8 Then\n        Do\n          Say 'Cannot create SLR table DRETPROD on data set' slrutlib\n          Say 'Program terminates.'\n          Say zerrlm\n          Exit rc\n        End\n    End\n\n  /***************************************************************/\n  /* Other errors. Issue message                                 */\n  /***************************************************************/\n  When rc > 8 Then\n    Do\n      Say 'Cannot open SLR table DRETPROD on data set' slrutlib slrtlib\n      Say 'Program terminates with rc = 'rc\n      Say zerrlm\n      Exit rc\n    End\n  Otherwise\n    Nop\nEnd\n\n/*****************************************************************/\n/* For all supported SLR variables, update DRETPROF table        */\n/*****************************************************************/\nvl = ,                                  /* GDDM added     PL85043*/\n  'SLRSAMP  SLRUSAMP SLRMACS   SLRUMACS SLRASM   SLRUASM ',\n  'SLRFORM  ADMCFORM ADMCDATA  ADMGDF   ADMDEFS  ADMSYMBL',\n  'SLREXEC  SLRCNTL  SLRUCNTL  SLRMLIB  SLRPLIB  SLRSLIB ',\n  'SLRTLIB  SLRUTLIB SLRMKLB   SLRPKLB  SLRTKLB  SLRSKLB ',\n  'JOBCARD1 JOBCARD2 JOBCARD3  JOBCARD4 JOBCARD5         ',\n  'SORTLIB  SYSOUT   SORTWSZ   SORTWU   GDDM             ',\n  'DEBUG    LANGUAGE SLRDUMP   LOGO     SLRUSLIB         ',\n  'SLRDBT   SLRCLIST SLRUCLIST SLRLOAD  SLRDBS 'slrdbs\n\nDo i = 1 To Words(vl)\n  profvar = Word(vl,i)\n  profval = Translate(Value(profvar))\n  \"TBMOD DRETPROF\"\nEnd\n\n/*****************************************************************/\n/* Save profile                                                  */\n/*****************************************************************/\n\"TBSAVE  DRETPROF LIBRARY(SLRTABL)\"\n\nExit 0\n\n/*****************************************************************/\n/* Handle LIBDEF calls                                           */\n/*                                                               */\n/* Called as:  LIBDEF  dd_name  dsn_names                        */\n/*   dd_name   -  Any name allowed by LIBDEF                     */\n/*   dsn_names -  Any data set names allowed by LIBDEF DATASET   */\n/*                                                               */\n/* If any return code from LIBDEF, issue message and terminate   */\n/*****************************************************************/\nLibdef:\n  Arg dd_name dsn_names\n  ds_names = ''\n  Do i = 1 To Words(dsn_names)\n    ds_names = ds_names \"'\"Word(dsn_names,i)\"'\"\n  End\n\n  Address \"ISPEXEC\" \"LIBDEF \"dd_name\" DATASET ID(\"ds_names\") UNCOND\"\n  If rc > 4 Then\n    Do\n      Say 'ISPF LIBDEF error in SLR DRERPROF exec when trying to'\n      Say 'libdef 'dd_name' to 'ds_names'. LIBDEF return code 'rc\n      Say 'and message 'zerrlm\n      Exit rc\n    End\n\nReturn\n\n/*****************************************************************/\n/* Syntax error discovered                                       */\n/*****************************************************************/\nSyntax:\n  Call drertrc module' Syntax error in 'module' line 'sigl\n  Call drertrc module' Error text: 'Errortext(rc)\n  Call drertrc module' Error line: 'Space(Sourceline(sigl))\n  Say 'Syntax error trapped in: 'module\n  Say 'REXX return code 'rc ' in line 'sigl': 'errortext(rc)\n  Say 'Lines before error line are:'\n  Do i = Max(sigl - 5,1) To sigl\n    Say Right(i,5,'0')': 'Space(Sourceline(i))\n  End\n  Say 'Report problem to your SLR specialist'\n  Exit 20\n\nReturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSABATTR": {"ttr": 3073, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x91\\x13O\\x00\\x91\\x13O\\x105\\x00b\\x00V\\x00\\r\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1991-05-14T00:00:00", "modifydate": "1991-05-14T10:35:00", "lines": 98, "newlines": 86, "modlines": 13, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n// DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nDSABATTR CSECT\n* SCAN TIOT AND SET ALL DSAB INUSE BITS ON CAUSING ALL DYNALLOC\n* REQUESTS TO BE TREATED AS IF REGULAR JCL IN TERMS OF TSO/E\n* FREE ALL COMMAND.\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nDSABATTR AMODE 24\nDSABATTR RMODE 24\n         SAVE  (14,12),,DSABATTR*&SYSDATE*&SYSTIME\n         LR    RA,RF ADDRESSABILITY\n         USING DSABATTR,RA,RB,RC\n         LA    RB,4095(RA)\n         LA    RB,1(RB)\n         LA    RC,4095(RB)\n         LA    RC,1(RC)\n         LR    RF,RD SAVEAREA HOUSEKEEPING\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18F'0'\n         ST    RD,8(RF)\n         ST    RF,4(RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         USING PSA,R0\n         L     R2,PSATOLD\n         DROP  R0\n         USING TCB,R2\n         L     R2,TCBTIO\n         DROP  R2\n         USING TIOT1,R2\n         LA    R3,TIOENTRY\n         DROP  R2\n         USING TIOENTRY,R3\n         SLR   R4,R4 WORK\nLOOPTIOT IC    R4,TIOELNGH\n         LTR   R4,R4 TIOT END\n         BZ    ENDTIOT\n         CLI   TIOEDDNM,C' '\n         BE    SCANTIOT\n         CLI   TIOEDDNM,X'00'\n         BE    SCANTIOT\n         MVC   DRETDDNM+6(8),=CL8' '\n         LA    RF,8\n         LA    R1,TIOEDDNM+7\nLOOPSIZE CLI   0(R1),C' '\n         BNE   SIZEDDNM\n         BCTR  RF,0\n         BCT   R1,LOOPSIZE\nSIZEDDNM STC   RF,DRETDDNM+5\n         MVC   DRETDDNM+6(8),TIOEDDNM\n         LA    R1,DSVC99P\n         SVC   99\n         UNPK  OUTATTR+1(3),DRESP(2)\n         TR    OUTATTR+1(2),TAB-C'0'\n         TPUT  DRETDDNM+6,11\nSCANTIOT LA    R3,0(R4,R3) NEXT TIOT ENTRY\n         B     LOOPTIOT\nENDTIOT  L     RD,4(RD)\n         RETURN (14,12),RC=0\nDSVC99P  DC    0F'0',X'80',AL3(DRB)\nDRB      DC    X'1407000000000000'\n         DC    A(DTEXTP),8X'00'\nDTEXTP   DC    X'00',AL3(DRETATTR)\n         DC    X'80',AL3(DRETDDNM)\nDRETDDNM DC    X'000100010008',C'????????'\nOUTATTR  DC    C' ?? '\nDRETATTR DC    X'000C00010001'\nDRESP    DC    X'0004' REQUEST RESP HERE\nTAB      DC    C'0123456789ABCDEF'\n         LTORG\n         PRINT NOGEN\n         IHAPSA\n         IKJTCB\n         DSECT\n         IEFTIOT1\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(DSABATTR),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSABINUS": {"ttr": 3076, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x91\\x13?\\x00\\x91\\x13O\\x10D\\x00j\\x00M\\x00$\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1991-05-13T00:00:00", "modifydate": "1991-05-14T10:44:00", "lines": 106, "newlines": 77, "modlines": 36, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n// DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nDSABINUS CSECT\n* SCAN TIOT AND SET ALL DSAB INUSE BITS ON CAUSING ALL DYNALLOC\n* REQUESTS TO BE TREATED AS IF REGULAR JCL IN TERMS OF TSO/E\n* FREE ALL COMMAND.\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nDSABINUS AMODE 24\nDSABINUS RMODE 24\n         SAVE  (14,12),,DSABINUS*&SYSDATE*&SYSTIME\n         LR    RA,RF ADDRESSABILITY\n         USING DSABINUS,RA,RB,RC\n         LA    RB,4095(RA)\n         LA    RB,1(RB)\n         LA    RC,4095(RB)\n         LA    RC,1(RC)\n         LR    RF,RD SAVEAREA HOUSEKEEPING\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18F'0'\n         ST    RD,8(RF)\n         ST    RF,4(RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         USING PSA,R0\n         L     R2,PSATOLD\n         DROP  R0\n         USING TCB,R2\n         L     R2,TCBTIO\n         DROP  R2\n         USING TIOT1,R2\n         LA    R3,TIOENTRY\n         DROP  R2\n         USING TIOENTRY,R3\n         SLR   R4,R4 WORK\nLOOPTIOT IC    R4,TIOELNGH\n         LTR   R4,R4 TIOT END\n         BZ    ENDTIOT\n         CLI   TIOEDDNM,C' '\n         BE    SCANTIOT\n         CLI   TIOEDDNM,X'00'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(4),=C'STEP'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(3),=C'JOB'\n         BE    SCANTIOT\n         MVC   DRETDDNM+6(8),=CL8' '\n         LA    RF,8\n         LA    R1,TIOEDDNM+7\nLOOPSIZE CLI   0(R1),C' '\n         BNE   SIZEDDNM\n         BCTR  RF,0\n         BCT   R1,LOOPSIZE\nSIZEDDNM STC   RF,DRETDDNM+5\n         MVC   DRETDDNM+6(8),TIOEDDNM\n         LA    R1,DSVC99P\n         SVC   99\n         TM    DRESP,X'40' INUSE ALREADY\n         BO    SCANTIOT\n         TPUT  DRETDDNM+6,8\n         LA    R1,ASVC99P\n         SVC   99\nSCANTIOT LA    R3,0(R4,R3) NEXT TIOT ENTRY\n         B     LOOPTIOT\nENDTIOT  L     RD,4(RD)\n         RETURN (14,12),RC=0\nASVC99P  DC    0F'0',X'80',AL3(ARB)\nARB      DC    X'1406000000000000'\n         DC    A(ATEXTP),8X'00'\nATEXTP   DC    X'80',AL3(DRETDDNM)\nDSVC99P  DC    0F'0',X'80',AL3(DRB)\nDRB      DC    X'1407000000000000'\n         DC    A(DTEXTP),8X'00'\nDTEXTP   DC    X'00',AL3(DRETATTR)\n         DC    X'80',AL3(DRETDDNM)\nDRETDDNM DC    X'000100010008',C'????????'\nDRETATTR DC    X'000C00010001'\nDRESP    DC    X'00' REQUEST RESP HERE\n         LTORG\n         PRINT NOGEN\n         IHAPSA\n         IKJTCB\n         DSECT\n         IEFTIOT1\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(DSABINUS),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSS": {"ttr": 3079, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x19o\\x00\\x91\\x19o\\x12R\\x02\\x0e\\x02\\x16\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-07-15T00:00:00", "modifydate": "1991-07-15T12:52:00", "lines": 526, "newlines": 534, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//         DD DSN=SYS1.AMACLIB.SMPE5,DISP=SHR\n//C.SYSIN  DD *\nDsserv   TITLE 'Dataset Services TSO/E Command'\nDSSERV   CSECT , /* Dataset Services */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK59      EQU   59\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK100     EQU   100\nK128     EQU   128\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nDSSERV   AMODE 31\nDSSERV   RMODE 24\n         SAVE  (14,12),,DSSERV*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* Cppl */\n         USING CPPL,R3\n         LR    RA,RF /* Addressability */\n         USING DSSERV,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         LA    R0,DWORDS\n         GETMAIN R,LV=(0),LOC=BELOW\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING DSRVWMAP,RD\n         MVC   ISPLINKL(CALLISTL),CALLIST /* Reentrant call list */\n         CALL  ISPQRY , /* Verify ISPF active */\n         LTR   RF,RF ...\n         BNZ   ISPINACT /* ISPF inactive */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(VDEFINE,TABLCOLS,VARIABLE,VFORMAT,VLENGTH,LIST)X\n               ,MF=(E,(1)),VL , /* Function variable pool table cols */\n         LTR   RF,RF ...\n         BNZ   FVDEF /* Variable define failed */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(VDEFINE,SYSNAMES,SYSVARS,ZFORMAT,ZLENGTH,LIST),X\n               MF=(E,(1)),VL , /* Function variable pool sys z vars */\n         LTR   RF,RF ...\n         BNZ   FVDEF /* Variable define failed */\n         CALL  ISPLINK,(TBCREATE,TABLNAME,NULL,TABLCOLS,NOWRITE,REPLACEX\n               ),VL\n         CLM   RF,K1,=AL1(K4) /* Rc = 0 or 4 is normal */\n         BH    FTBCREAT /* Table creation failed */\n         CALL  ISPLINK,(TBSORT,TABLNAME,SORTLIST),VL /* Sort table */\n         LTR   RF,RF ...\n         BNZ   FTBSORT /* Table sort failed */\n         USING PSA,R0 /* Map PSA */\n         L     R4,FLCCVT /* CVT pointer */\n         DROP  R0\n         USING CVT,R4 /* Map CVT */\n         L     R4,CVTCBSP /* AMCBS pointer */\n         DROP  R4\n         USING AMCBS,R4 /* Map SP 245 key 0 */\n         L     R4,CBSCAXCN /* Pointer to CAXWA chain */\n         DROP  R4\n         USING IGGCAXWA,R4 /* Map Catalog Work Area */\nLOOKMCAT TM    CAXFLGS,CAXMCT /* Master catalog entry */\n         BO    LOCMCAT /* Yes */\n         ICM   R4,K15,CAXCHN /* Scan active catalog chain */\n         BNZ   LOOKMCAT /* Loop */\n         B     LMCATERR /* Master catalog not located ? */\nLOCMCAT  MVC   MCATDSN(L'MCATDSN),CAXCNAM /* Save catalog name */\n         MVC   MCATACB,CAXACB /* Save master catalog ACB ptr */\n         L     R4,CAXUCB /* Map UCB of mcat volume */\n         DROP  R4\n         USING UCBOB,R4\n         MVC   MCATVSER(L'MCATVSER),UCBVOLI /* Save DASD volume ser */\n         DROP  R4\n         MVC   VCMD(K9),=CL59' ' /* Init */\n         MVC   VENTRY(K9),=CL9'Mstrcatlg' /* Build mcat line */\n         MVC   VNAME(K59),=CL59' ' /* Init */\n         XC    VDATA,VDATA /* Init */\n         MVC   VNAME(L'MCATDSN),MCATDSN ...\n         MVI   VKEY,C'1'     /* Sort code */\n         MVC   VKEY+K1(L'MCATDSN),MCATDSN ...\n         MVC   VKEY+K1+L'MCATDSN(K3),=CL3'000'\n         CALL  ISPLINK,(TBADD,TABLNAME,NULL,ORDER,MULTROWS),VL\n         LTR   RF,RF ...\n         BNZ   FTBADD /* Table addition failed */\nIOSVSCAN LA    R1,IOSVPARM /* Input param for IOSVSUCB */\n         L     RF,VSUCBEP /* Routine ptr */\n         BALR  RE,RF ... /* DASD scan */\n         LTR   RF,RF /* Scan end */\n         BNZ   ENDIOSV /* Yes */\n         L     RF,IOSVUCBR /* Pickup UCB address */\n         USING UCBOB,RF /* Map UCB */\n         TM    UCBSTAT,UCBONLI /* DASD unit online */\n         BZ    IOSVSCAN /* No */\n         MVC   VCMD(K9),=CL59' ' /* Init */\n         MVC   VENTRY(K9),=CL9'Volume' /* Build DASD line */\n         MVC   VNAME(K59),=CL59' ' /* Init */\n         XC    VDATA,VDATA /* Init */\n         STCM  RF,K15,VDATA /* Save UCB address in hidden data */\n         MVC   VNAME(L'UCBVOLI),UCBVOLI ...\n         MVI   VKEY,C'3'     /* Sort code */\n         MVC   VKEY+K1(L'MCATDSN),VNAME ...\n         MVC   VKEY+K1+L'MCATDSN(K3),=CL3'000'\n         DROP  RF\n         CALL  ISPLINK,(TBADD,TABLNAME,NULL,ORDER,MULTROWS),VL\n         LTR   RF,RF ...\n         BNZ   FTBADD /* Table addition failed */\n         B     IOSVSCAN /* Continue */\nENDIOSV  EQU   * *\n         XC    SVC26PRM(CTGPLEN),SVC26PRM /* Clear cat parm */\n         LA    R9,SVC26PRM /* Map parm */\n         USING CTGPL,R9\n         OI    CTGOPTN1,CTGNAME /* Ref dsect descript */\n         OI    CTGOPTN2,CTGGTNXT+CTGBOTH\n         OI    CTGOPTN3,CTGCMS+CTGAM0\n         OI    CTGOPTNS,CTGLTCAT\n         MVI   CTGTYPE,CTGTUCAT /* Ucat code */\n         LA    R0,CTGENTP /* Req dsn area */\n         ST    R0,CTGENT ...\n         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         LA    R0,MCATACB /* Req cat area */\n         ST    R0,CTGCAT ...\n         XC    CATRESP,CATRESP /* Clear cat response area */\n         LA    R0,L'CATRESP /* Tell sys len */\n         STCM  R0,K3,CATRESP ...\n         LA    R0,CATRESP /* Tell sys address */\n         ST    R0,CTGWKA ...\n         MVC   CTGFLS(CTGFLSPL),CTGFLSP /* Build needed field entries*/\n         LA    RF,K4 /* Max # CTGFL entries */\n         STC   RF,CTGNOFLD /* Tell sys */\n         LA    RE,CTGFIELD /* CTGFL pointers */\n         LA    R1,CTGFLS /* Actual CTGFLs */\n         USING CTGFL,R1 /* Map */\nCTGSETL  ST    R1,K0(,RE) /* Set a CTGFL ptr */\n         SLR   R0,R0 /* Calc size of this CTGFL */\n         IC    R0,CTGFLDNO /* # of variable len fields */\n         SLL   R0,K3 /* Each var field is 8 bytes */\n         ALR   R1,R0 /* Ptr to next CTGFL in stor */\n         LA    R1,CTGFLL(,R1) /* Factor in fixed len */\n         LA    RE,K4(,RE) /* Next CTGFL ptr loc */\n         BCT   RF,CTGSETL /* Loop for all fields */\n         DROP  R1\nCATSCANU LA    R1,SVC26PRM /* Cat serv param */\n         SVC   26 , /* Service */\n         CLM   RF,K1,=AL1(K40) /* RC 40 return */\n         BE    URC40 /* Ignore it */\n         LTR   RF,RF /* Scan until end */\n         BNZ   CUEND ...\n         USING CTGFL,R4\nURC40    LA    R4,RESPENTN /* Map entry name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         MVC   VCMD(K9),=CL59' ' /* Init */\n         MVC   VENTRY(K9),=CL9'Usercatlg' /* Build ucat line */\n         MVC   VNAME(K59),=CL59' ' /* Init */\n         XC    VDATA,VDATA /* Init */\n         MVC   VNAME(K3),SEPR\n         MVC   VNAME+K3(L'MCATDSN),K0(R7)  /* DSN for panel display */\n         MVI   VKEY,C'2'     /* Sort code */\n         MVC   VKEY+K1(L'MCATDSN),VNAME+K3 ...\n         MVC   VKEY+K1+L'MCATDSN(K3),=CL3'000'\n         MVC   CTGENTP(L'MCATDSN),K0(R7)  /* DSN for cat scan;up key*/\n         SLR   RF,RF /* Add binary 1 to cat scan key */\n         IC    RF,CTGENTP+L'MCATDSN-K1\n         LA    RF,K1(,RF) ...\n         STC   RF,CTGENTP+L'MCATDSN-K1\n         CALL  ISPLINK,(TBADD,TABLNAME,NULL,ORDER,MULTROWS),VL\n         LTR   RF,RF ...\n         BNZ   FTBADD /* Table addition failed */\n         B     CATSCANU /* Loop for all ucats */\n         DROP  R4\nCUEND    MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         MVI   CTGTYPE,CTGTANM /* Alias code */\nCATSCANX LA    R1,SVC26PRM /* Cat serv param */\n         SVC   26 , /* Service */\n         CLM   RF,K1,=AL1(K40) /* RC 40 return */\n         BE    XRC40 /* Ignore it */\n         LTR   RF,RF /* Scan until end */\n         BNZ   CXEND ...\n         USING CTGFL,R4\nXRC40    LA    R4,RESPENTN /* Map entry name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         MVC   CTGENTP(L'MCATDSN),K0(R7)  /* Als for cat scan;up key*/\n         SLR   RF,RF /* Add binary 1 to cat scan key */\n         IC    RF,CTGENTP+L'MCATDSN-K1\n         LA    RF,K1(,RF) ...\n         STC   RF,CTGENTP+L'MCATDSN-K1\n         MVC   VCMD(K9),=CL59' ' /* Init */\n         MVC   VENTRY(K9),=CL9'Alias' /* Build alias line */\n         MVC   VNAME(K59),=CL59' ' /* Init */\n         XC    VDATA,VDATA /* Init */\n         MVC   VNAME+K3(K3),SEPR\n         MVC   VNAME+K6(L'MCATDSN),K0(R7)  /*Als for panel display */\n         TRT   VNAME+K6(L'MCATDSN+K1),LOOKBLNK /* Append .* */\n         MVC   K0(K2,R1),=C'.*' ...\n         MVI   VKEY,C'2'     /* Sort code */\n         LA    R4,RESPNMDS /* Map true name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         CLI   K0(R7),CTGTUCAT /* Ucat code */\n         BNE   CATSCANX /* Skip over non-ucat alias assoc */\n         MVC   VKEY+K1(L'MCATDSN),K1(R7) ...\n         MVC   VKEY+K1+L'MCATDSN(K3),=CL3'001'\n         CALL  ISPLINK,(TBADD,TABLNAME,NULL,ORDER,MULTROWS),VL\n         LTR   RF,RF ...\n         BNZ   FTBADD /* Table addition failed */\n         B     CATSCANX /* Loop for all alias */\n         DROP  R4\n         DROP  R9\nCXEND    CALL  ISPLINK,(TBTOP,TABLNAME),VL\n         LTR   RF,RF ...\n         BNZ   FTBTOP /* Table top post failed */\nREDISPLY CALL  ISPLINK,(TBDISPL,TABLNAME,PANELID),VL\n         CNOP  0,4\n         B     *+K4(RF) /* index on return code */\n         B     ZEROSEL /* Zero or one sel row and scroll may be pend */\n         B     MULTSEL /* Multiple selected rows */\n         B     DISPRET /* End selected; rows may have been selected */\n         B     FTBDISPL /* Error */\n         B     FTBDISPL /* Error */\n         B     FTBDISPL /* Error */\nZEROSEL  EQU   * *\nMULTSEL  EQU   * *\n         ICM   R4,K15,UTDSELS /* How many rows selected */\n         BZ    REDISPLY /* None */\nPROCESS  EQU   * *\n         CLI   VENTRY,C'M' /* Master cat */\n         BE    PROCM ...\n         CLI   VENTRY,C'U' /* User cat */\n         BE    PROCU ...\n         CLI   VENTRY,C'A' /* Alias entry */\n         BE    PROCA ...\n         CLI   VENTRY,C'V' /* Vol entry */\n         BE    PROCV ...\nPROCV    ICM   R7,K15,VDATA /* Volume row saved UCB ptr */\n         MVC   CVPLPARM(CVPLNGTH),CVPL /* CVAF services prep */\n         LA    R5,CVPLPARM /* Map CVPL */\n         USING CVPLMAP,R5\n         LA    R3,CVPLPBUF /* Buffer list */\n         XC    CVPLPBUF(CVPLPBFL),CVPLPBUF /* Clear */\n         LA    R6,IECSDSL1 /* F1 dscb */\n         OI    BFLHFL,BFLHDSCB /* DSCBs to be read */\n         MVI   BFLHNOE,X'01' /* Buflist entry count */\n         LA    R0,DS1FMTID /* Addr DSCB buffer */\n         ST    R0,BFLEBUF ...\n         MVI   BFLELTH,DS1END-DS1FMTID /* 96 byte len */\n         XC    DS1DSNAM,DS1DSNAM /* Start key */\n         CVAFSEQ DSN=(R6),BUFLIST=(R3),UCB=(R7),MF=(E,CVPLPARM)\n         CLI   DS1DSNAM,X'04' /* VTOC ? */\n         BNE   VTOCNORM /* No */\n  TPUT ERRORS,16\nVTOCNORM EQU   * *\n  TPUT ERRORS,15\n         B     PROCEND /* Continue */\n         DROP  R5\nPROCM    EQU   * *\nPROCU    EQU   * *\nPROCA    EQU   * *\nPROCEND  BCT   R4,PROCNXTR /* Process next selected row */\n         B     REDISPLY /* Continue */\nPROCNXTR CALL  ISPLINK,(TBDISPL,TABLNAME),VL\n         B     PROCESS /* Loop processing all selected rows */\nDISPRET  EQU   * *\n         CALL  ISPLINK,(TBCLOSE,TABLNAME),VL /* Close open table */\n         B     MAINEXIT\nERRORS   DC    C'ABCDEFGHIJKLMNOP'\nFTBTOP   EQU   * *\n         TPUT  ERRORS,1\n         B     MAINEXIT\nFTBSORT  EQU   * *\n         TPUT  ERRORS,2\n         B     MAINEXIT\nFTBDISPL EQU   * *\n         TPUT  ERRORS,3\n         B     MAINEXIT\nFVDEF    EQU   * *\n         TPUT  ERRORS,4\n         B     MAINEXIT\nFTBADD   EQU   * *\n         TPUT  ERRORS,5\n         B     MAINEXIT\nFTBCREAT EQU   * *\n         TPUT  ERRORS,6\n         B     MAINEXIT\nISPINACT EQU   * *\n         TPUT  ERRORS,7\n         B     MAINEXIT\nLMCATERR EQU   * *\n         TPUT  ERRORS,8\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         LA    R0,DWORDS\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         RETURN (14,12),RC=0\nVLENGTH  DC    A(K9,K9,K59,K48,K4) /* Variable lens */\nZLENGTH  DC    A(K8,K3),(K9)A(K4) /* Variable lens */\nCALLIST  CALL  ,(,,,,,,,,,,,,,,),MF=L,VL\nCALLISTL EQU   *-CALLIST\nCVPL     CVAFSEQ ACCESS=GTEQ,IXRCDS=KEEP,MF=L\nCVAFDIRL CVAFDIR ACCESS=READ,MF=L\nIOSVSKEL DC    A(*-*,IOSVDEVT,X'80000000') /* IOSVSUCB parm */\nVFORMAT  DC    (K5)CL8'CHAR' /* All charac formats */\nZFORMAT  DC    (K2)CL8'CHAR',(K9)CL8'FIXED' /* Mixed formats */\nMULTROWS DC    A(K60) /* Assume TBADD of 60 rows at a time */\nCTGFLSP  DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,CATVOL,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nCTGFLSPL EQU   *-CTGFLSP /* Len */\nMULTITYP DC    CL8'MULTITYP'   /* CTGFL field name */\nENTNAME  DC    CL8'ENTNAME'    /* CTGFL field name */\nENTYPE   DC    CL8'ENTYPE'     /* CTGFL field name */\nCATVOL   DC    CL8'CATVOL'     /* CTGFL field name */\nNAMEDS   DC    CL8'NAMEDS'     /* CTGFL field name */\nCATACB   DC    CL8'CATACB'     /* CTGFL field name */\nTBCREATE DC    CL8'TBCREATE' /* ISPF service */\nTBSORT   DC    CL8'TBSORT' /* ISPF service */\nTBADD    DC    CL8'TBADD' /* ISPF service */\nTBTOP    DC    CL8'TBTOP' /* ISPF service */\nVDEFINE  DC    CL8'VDEFINE' /* ISPF service */\nTBDISPL  DC    CL8'TBDISPL' /* ISPF service */\nTBCLOSE  DC    CL8'TBCLOSE' /* ISPF service */\nTABLNAME DC    CL8'DSSERVT' /* ISPF tablename */\nPANELID  DC    CL8'DSSERVP' /* ISPF panelname */\nTABLCOLS DC    C'(COMMAND,ENTRYTYP,NAME,SORTKEY,DATA)'\nSYSNAMES DC    C'(ZTDRET,ZTDADD,ZTDSCRP,ZTDSRID,ZTDAMT,ZTDSIZE,ZTDLTOP,X\n               ZTDLROWS,ZTDROWS,ZTDSELS,ZTDTOP)'\nSORTLIST DC    C'(SORTKEY,C,A,NAME,C,A)'\nNOWRITE  DC    CL8'NOWRITE' /* Temporary ISPF table */\nORDER    DC    CL8'ORDER' /* Sort ISPF table */\nREPLACE  DC    CL8'REPLACE' /* Replace existing table */\nLIST     DC    CL8'LIST' /* VDEFINE list */\nNULL     DC    C' ' /* Dummy positional call parameter */\nIOSVDEVT DC    AL1(UCB3DACC)  /* DASD class */\nLOOKBLNK DC    (K256)AL1(K0) /* Look for a blank */\n         ORG   LOOKBLNK+C' '\n         DC    AL1(K255)\n         ORG\nSEPR     DC    C'|__'  /* PC-like line sep */\n         LTORG\nDSRVWMAP DSECT\nSAVEAREA DC    (K18)A(K0)\nVSUCBRET DC    (K100)AL1(K0) /* IOSVSUCB results */\nIOSVPARM DC    A(*-*,IOSVDEVT,X'80000000') /* IOSVSUCB parm */\nVSUCBEP  DC    A(*-*) /* IOSVSUCB ep */\nIOSVUCBR DC    A(*-*) /* Return UCB ptr */\nISPLINKL CALL  ,(,,,,,,,,,,,,,,),MF=L,VL\nMCATACB  DC    A(*-*) /* Master catalog ACB ptr */\nMCATDSN  DC    CL44' ' /* Master catalog dsname */\nMCATVSER DC    CL6' ' /* Master catalog volume serial */\n*********************** Contiguous storage required *******************\nALIGN    DC    0D'0' /* Alignment for variable pool */\nVARIABLE EQU   * * /* Begin ISPF function variables */\nVCMD     DC    CL9' '   /* Command col */\nVENTRY   DC    CL9' '   /* Entrytyp col */\nVNAME    DC    CL59' '  /* Name col */\nVKEY     DC    CL48' '  /* Sort key hidden col */\nVDATA    DC    CL4' '  /* Hidden data per row type */\nSYSVARS  EQU   * * /* Begin ISPF function variables */\nUTDRET   DC    CL8' ' /* ISPF system variables */\nUTDADD   DC    CL3' '\nUTDSCRP  DC    F'0'\nUTDSRID  DC    F'0'\nUTDAMT   DC    F'0'\nUTDSIZE  DC    F'0'\nUTDLTOP  DC    F'0'\nUTDLROWS DC    F'0'\nUTDROWS  DC    F'0'\nUTDSELS  DC    F'0'\nUTDTOP   DC    F'0'\n*********************** Contiguous storage required *******************\nCVPLPARM DC    (CVPLNGTH)AL1(K0) /* CVPL services */\nCVPLPBUF ICVAFBFL DSECT=NO\nCVPLPBFL EQU   *-CVPLPBUF\n         IECSDSL1 (1)\nCTGFLS   EQU   *\nRESPENTN DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,CATVOL,K0),(K2)AL4(K0)\nRESPNMDS DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nSVC26PRM DC    (CTGPLEN)AL1(K0) /* Param for catalog services */\nCTGENTP  DC    CL44' ' /* Requested dsname for cat searches */\nCATRESP  DC    CL256' ' /* Cat serv response area */\nDWORDS   EQU   ((((*-SAVEAREA)+K7)/K8)*K8)\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         DSECT\n         IEFUCBOB\n         IHAPSA\n         CVT   DSECT=YES\nAMCBS    DSECT , /* Access Method Control Block Structure */\n         ORG   AMCBS+K20\nCBSCAXCN DC    A(*-*) /* Pointer CAXWA chain */\nIGGCAXWA DSECT , /* Catalog Auxiliary Work Area */\n         ORG   IGGCAXWA+K4 /* CAXWA chain ptr */\nCAXCHN   DC    A(*-*) ...\nCAXFLGS  DC    AL1(*-*) /* Flags */\nCAXMCT   EQU   X'04' /* 1=Master Catalog, 0=User Catalog */\n         ORG   IGGCAXWA+K24\nCAXACB   DC    A(*-*)   /* Catalog acb */\n         ORG   IGGCAXWA+K28\nCAXUCB   DC    A(*-*) /* UCB pointer */\n         ORG   IGGCAXWA+K52\nCAXCNAM  DC    CL44' ' /* Catalog name */\nCTGPL    DSECT ,      /* Catalog parameter list */\nCTGOPTN1 DS    X      /* First option byte */\nCTGNAME  EQU   X'04'  /* CTGENT holds a(dsname) or a(ci#)\nCTGCNAME EQU   X'02'  /* CTGCAT hold a(cat dsname */\nCTGOPTN2 DS    X      /* Second option byte */\nCTGGTNXT EQU   X'10'  /* LISTCAT get next option */\nCTGBOTH  EQU   X'01'  /* Caller accepts ICF arch */\nCTGOPTN3 DS    X      /* Third option byte */\nCTGCMS   EQU   X'80'  /* Catalog mgmt services req */\nCTGAM0   EQU   X'01'  /* ICF/VSAM request */\nCTGOPTN4 DS    X      /* Fourth option byte */\nCTGENT   DS    A      /* Address of the catalog record id */\nCTGCAT   DS    A      /* Address cat dsname or address cat acb */\nCTGWKA   DS    A      /* Address callers workarea */\nCTGDSORG DS    XL2    /* Superlocate DSORG */\n         ORG   CTGDSORG\nCTGOPTNS DS    XL2    /* Cat management services options */\nCTGLTCAT EQU   X'20'  /* LISTCAT */\nCTGF2SEN EQU   X'01'  /* Can handle 40-2 return code */\nCTGTYPE  DS    C      /* Cat record type */\nCTGTUCAT EQU   C'U'   /* Usercat code */\nCTGTANM  EQU   C'X'   /* Alias name */\nCTGNOFLD DS    X      /* CTGFIELD entry count */\nCTGNEWNM DS    A      /* Alter new dsname ptr */\n         ORG   CTGNEWNM\nCTGFDBK  DS    XL2    /* Feedback area */\nCTGFBFLG DS    XL2    /* Superlocate flags */\nCTGJSCB  DS    A      /* JSCB  ptr */\nCTGFIELD EQU   *      /* 4 byte ptr to each CTGFL; len=4*CTGNOFLD */\nCTGPLEN  EQU   *-CTGPL+(K4*K4) /* Base len w/max4 4byte ctgfl ptrs */\nCTGFL    DSECT , /* Filed entry map */\nCTGFLDNO DS    X /* # entries in CTGFLDAT */\nCTGFLDCD DS    X /* Fl test condition */\nCTGFLDGC DS    X /* Type group code */\nCTGFLDRE DS    X /* Test results */\nCTGFLDWA DS    A /* Workarea; cat rcd field name info */\nCTGFLDNM DS    A /* Address of the field name */\nCTGFLCHN DS    A /* Address of CTGFL test or 0 */\nCTGFLDAT EQU   * /* Start of len/address pairs */\nCTGFLL   EQU   *-CTGFL\n         PRINT GEN\nCVPLMAP  ICVAFPL\n         PRINT NOGEN\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(DSS),DISP=SHR,\n// UNIT=3390,VOL=SER=MCSRES\n//*UNIT=,SPACE=\n//L.SYSLIB DD DSN=ISP.V2R3M0.ISPLOAD,DISP=SHR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSSAVE": {"ttr": 3333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x91\\x19o\\x00\\x91\\x19o\\x12Q\\x02\\x16\\x02\\x16\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-07-15T00:00:00", "modifydate": "1991-07-15T12:51:00", "lines": 534, "newlines": 534, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//         DD DSN=SYS1.AMACLIB.SMPE5,DISP=SHR\n//C.SYSIN  DD *\nDsserv   TITLE 'Dataset Services TSO/E Command'\nDSSERV   CSECT , /* Dataset Services */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK59      EQU   59\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK100     EQU   100\nK128     EQU   128\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nDSSERV   AMODE 31\nDSSERV   RMODE 24\n         SAVE  (14,12),,DSSERV*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* Cppl */\n         USING CPPL,R3\n         LR    RA,RF /* Addressability */\n         USING DSSERV,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         LA    R0,DWORDS\n         GETMAIN R,LV=(0),LOC=BELOW\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING DSRVWMAP,RD\n         MVC   IOSVPARM(K12),IOSVSKEL /* IOSVSUCB parameter */\n         LA    RF,VSUCBRET /* Position in parm list */\n         ST    RF,IOSVPARM ... /* result ptr */\n         LA    RF,IOSVUCBR /* Position in parm list */\n         STCM  RF,K7,IOSVPARM+K9 ... /* UCB addr return ptr */\n         XC    VSUCBRET(K100),VSUCBRET /* Clear IOSVSUCB area */\n         MVC   ISPLINKL(CALLISTL),CALLIST /* Reentrant call list */\n         CALL  ISPQRY , /* Verify ISPF active */\n         LTR   RF,RF ...\n         BNZ   ISPINACT /* ISPF inactive */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(VDEFINE,TABLCOLS,VARIABLE,VFORMAT,VLENGTH,LIST)X\n               ,MF=(E,(1)),VL , /* Function variable pool table cols */\n         LTR   RF,RF ...\n         BNZ   FVDEF /* Variable define failed */\n         LA    R1,ISPLINKL /* Call list */\n         CALL  ISPLINK,(VDEFINE,SYSNAMES,SYSVARS,ZFORMAT,ZLENGTH,LIST),X\n               MF=(E,(1)),VL , /* Function variable pool sys z vars */\n         LTR   RF,RF ...\n         BNZ   FVDEF /* Variable define failed */\n         CALL  ISPLINK,(TBCREATE,TABLNAME,NULL,TABLCOLS,NOWRITE,REPLACEX\n               ),VL\n         CLM   RF,K1,=AL1(K4) /* Rc = 0 or 4 is normal */\n         BH    FTBCREAT /* Table creation failed */\n         CALL  ISPLINK,(TBSORT,TABLNAME,SORTLIST),VL /* Sort table */\n         LTR   RF,RF ...\n         BNZ   FTBSORT /* Table sort failed */\n         USING PSA,R0 /* Map PSA */\n         L     R4,FLCCVT /* CVT pointer */\n         DROP  R0\n         USING CVT,R4 /* Map CVT */\n         L     RF,CVTUCBSC /* IOSVSUCB entry pointer */\n         ST    RF,VSUCBEP /* Save */\n         L     R4,CVTCBSP /* AMCBS pointer */\n         DROP  R4\n         USING AMCBS,R4 /* Map SP 245 key 0 */\n         L     R4,CBSCAXCN /* Pointer to CAXWA chain */\n         DROP  R4\n         USING IGGCAXWA,R4 /* Map Catalog Work Area */\nLOOKMCAT TM    CAXFLGS,CAXMCT /* Master catalog entry */\n         BO    LOCMCAT /* Yes */\n         ICM   R4,K15,CAXCHN /* Scan active catalog chain */\n         BNZ   LOOKMCAT /* Loop */\n         B     LMCATERR /* Master catalog not located ? */\nLOCMCAT  MVC   MCATDSN(L'MCATDSN),CAXCNAM /* Save catalog name */\n         MVC   MCATACB,CAXACB /* Save master catalog ACB ptr */\n         L     R4,CAXUCB /* Map UCB of mcat volume */\n         DROP  R4\n         USING UCBOB,R4\n         MVC   MCATVSER(L'MCATVSER),UCBVOLI /* Save DASD volume ser */\n         DROP  R4\n         MVC   VCMD(K9),=CL59' ' /* Init */\n         MVC   VENTRY(K9),=CL9'Mstrcatlg' /* Build mcat line */\n         MVC   VNAME(K59),=CL59' ' /* Init */\n         XC    VDATA,VDATA /* Init */\n         MVC   VNAME(L'MCATDSN),MCATDSN ...\n         MVI   VKEY,C'1'     /* Sort code */\n         MVC   VKEY+K1(L'MCATDSN),MCATDSN ...\n         MVC   VKEY+K1+L'MCATDSN(K3),=CL3'000'\n         CALL  ISPLINK,(TBADD,TABLNAME,NULL,ORDER,MULTROWS),VL\n         LTR   RF,RF ...\n         BNZ   FTBADD /* Table addition failed */\nIOSVSCAN LA    R1,IOSVPARM /* Input param for IOSVSUCB */\n         L     RF,VSUCBEP /* Routine ptr */\n         BALR  RE,RF ... /* DASD scan */\n         LTR   RF,RF /* Scan end */\n         BNZ   ENDIOSV /* Yes */\n         L     RF,IOSVUCBR /* Pickup UCB address */\n         USING UCBOB,RF /* Map UCB */\n         TM    UCBSTAT,UCBONLI /* DASD unit online */\n         BZ    IOSVSCAN /* No */\n         MVC   VCMD(K9),=CL59' ' /* Init */\n         MVC   VENTRY(K9),=CL9'Volume' /* Build DASD line */\n         MVC   VNAME(K59),=CL59' ' /* Init */\n         XC    VDATA,VDATA /* Init */\n         STCM  RF,K15,VDATA /* Save UCB address in hidden data */\n         MVC   VNAME(L'UCBVOLI),UCBVOLI ...\n         MVI   VKEY,C'3'     /* Sort code */\n         MVC   VKEY+K1(L'MCATDSN),VNAME ...\n         MVC   VKEY+K1+L'MCATDSN(K3),=CL3'000'\n         DROP  RF\n         CALL  ISPLINK,(TBADD,TABLNAME,NULL,ORDER,MULTROWS),VL\n         LTR   RF,RF ...\n         BNZ   FTBADD /* Table addition failed */\n         B     IOSVSCAN /* Continue */\nENDIOSV  EQU   * *\n         XC    SVC26PRM(CTGPLEN),SVC26PRM /* Clear cat parm */\n         LA    R9,SVC26PRM /* Map parm */\n         USING CTGPL,R9\n         OI    CTGOPTN1,CTGNAME /* Ref dsect descript */\n         OI    CTGOPTN2,CTGGTNXT+CTGBOTH\n         OI    CTGOPTN3,CTGCMS+CTGAM0\n         OI    CTGOPTNS,CTGLTCAT\n         MVI   CTGTYPE,CTGTUCAT /* Ucat code */\n         LA    R0,CTGENTP /* Req dsn area */\n         ST    R0,CTGENT ...\n         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         LA    R0,MCATACB /* Req cat area */\n         ST    R0,CTGCAT ...\n         XC    CATRESP,CATRESP /* Clear cat response area */\n         LA    R0,L'CATRESP /* Tell sys len */\n         STCM  R0,K3,CATRESP ...\n         LA    R0,CATRESP /* Tell sys address */\n         ST    R0,CTGWKA ...\n         MVC   CTGFLS(CTGFLSPL),CTGFLSP /* Build needed field entries*/\n         LA    RF,K4 /* Max # CTGFL entries */\n         STC   RF,CTGNOFLD /* Tell sys */\n         LA    RE,CTGFIELD /* CTGFL pointers */\n         LA    R1,CTGFLS /* Actual CTGFLs */\n         USING CTGFL,R1 /* Map */\nCTGSETL  ST    R1,K0(,RE) /* Set a CTGFL ptr */\n         SLR   R0,R0 /* Calc size of this CTGFL */\n         IC    R0,CTGFLDNO /* # of variable len fields */\n         SLL   R0,K3 /* Each var field is 8 bytes */\n         ALR   R1,R0 /* Ptr to next CTGFL in stor */\n         LA    R1,CTGFLL(,R1) /* Factor in fixed len */\n         LA    RE,K4(,RE) /* Next CTGFL ptr loc */\n         BCT   RF,CTGSETL /* Loop for all fields */\n         DROP  R1\nCATSCANU LA    R1,SVC26PRM /* Cat serv param */\n         SVC   26 , /* Service */\n         CLM   RF,K1,=AL1(K40) /* RC 40 return */\n         BE    URC40 /* Ignore it */\n         LTR   RF,RF /* Scan until end */\n         BNZ   CUEND ...\n         USING CTGFL,R4\nURC40    LA    R4,RESPENTN /* Map entry name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         MVC   VCMD(K9),=CL59' ' /* Init */\n         MVC   VENTRY(K9),=CL9'Usercatlg' /* Build ucat line */\n         MVC   VNAME(K59),=CL59' ' /* Init */\n         XC    VDATA,VDATA /* Init */\n         MVC   VNAME(K3),SEPR\n         MVC   VNAME+K3(L'MCATDSN),K0(R7)  /* DSN for panel display */\n         MVI   VKEY,C'2'     /* Sort code */\n         MVC   VKEY+K1(L'MCATDSN),VNAME+K3 ...\n         MVC   VKEY+K1+L'MCATDSN(K3),=CL3'000'\n         MVC   CTGENTP(L'MCATDSN),K0(R7)  /* DSN for cat scan;up key*/\n         SLR   RF,RF /* Add binary 1 to cat scan key */\n         IC    RF,CTGENTP+L'MCATDSN-K1\n         LA    RF,K1(,RF) ...\n         STC   RF,CTGENTP+L'MCATDSN-K1\n         CALL  ISPLINK,(TBADD,TABLNAME,NULL,ORDER,MULTROWS),VL\n         LTR   RF,RF ...\n         BNZ   FTBADD /* Table addition failed */\n         B     CATSCANU /* Loop for all ucats */\n         DROP  R4\nCUEND    MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         MVI   CTGTYPE,CTGTANM /* Alias code */\nCATSCANX LA    R1,SVC26PRM /* Cat serv param */\n         SVC   26 , /* Service */\n         CLM   RF,K1,=AL1(K40) /* RC 40 return */\n         BE    XRC40 /* Ignore it */\n         LTR   RF,RF /* Scan until end */\n         BNZ   CXEND ...\n         USING CTGFL,R4\nXRC40    LA    R4,RESPENTN /* Map entry name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         MVC   CTGENTP(L'MCATDSN),K0(R7)  /* Als for cat scan;up key*/\n         SLR   RF,RF /* Add binary 1 to cat scan key */\n         IC    RF,CTGENTP+L'MCATDSN-K1\n         LA    RF,K1(,RF) ...\n         STC   RF,CTGENTP+L'MCATDSN-K1\n         MVC   VCMD(K9),=CL59' ' /* Init */\n         MVC   VENTRY(K9),=CL9'Alias' /* Build alias line */\n         MVC   VNAME(K59),=CL59' ' /* Init */\n         XC    VDATA,VDATA /* Init */\n         MVC   VNAME+K3(K3),SEPR\n         MVC   VNAME+K6(L'MCATDSN),K0(R7)  /*Als for panel display */\n         TRT   VNAME+K6(L'MCATDSN+K1),LOOKBLNK /* Append .* */\n         MVC   K0(K2,R1),=C'.*' ...\n         MVI   VKEY,C'2'     /* Sort code */\n         LA    R4,RESPNMDS /* Map true name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         CLI   K0(R7),CTGTUCAT /* Ucat code */\n         BNE   CATSCANX /* Skip over non-ucat alias assoc */\n         MVC   VKEY+K1(L'MCATDSN),K1(R7) ...\n         MVC   VKEY+K1+L'MCATDSN(K3),=CL3'001'\n         CALL  ISPLINK,(TBADD,TABLNAME,NULL,ORDER,MULTROWS),VL\n         LTR   RF,RF ...\n         BNZ   FTBADD /* Table addition failed */\n         B     CATSCANX /* Loop for all alias */\n         DROP  R4\n         DROP  R9\nCXEND    CALL  ISPLINK,(TBTOP,TABLNAME),VL\n         LTR   RF,RF ...\n         BNZ   FTBTOP /* Table top post failed */\nREDISPLY CALL  ISPLINK,(TBDISPL,TABLNAME,PANELID),VL\n         CNOP  0,4\n         B     *+K4(RF) /* index on return code */\n         B     ZEROSEL /* Zero or one sel row and scroll may be pend */\n         B     MULTSEL /* Multiple selected rows */\n         B     DISPRET /* End selected; rows may have been selected */\n         B     FTBDISPL /* Error */\n         B     FTBDISPL /* Error */\n         B     FTBDISPL /* Error */\nZEROSEL  EQU   * *\nMULTSEL  EQU   * *\n         ICM   R4,K15,UTDSELS /* How many rows selected */\n         BZ    REDISPLY /* None */\nPROCESS  EQU   * *\n         CLI   VENTRY,C'M' /* Master cat */\n         BE    PROCM ...\n         CLI   VENTRY,C'U' /* User cat */\n         BE    PROCU ...\n         CLI   VENTRY,C'A' /* Alias entry */\n         BE    PROCA ...\n         CLI   VENTRY,C'V' /* Vol entry */\n         BE    PROCV ...\nPROCV    ICM   R7,K15,VDATA /* Volume row saved UCB ptr */\n         MVC   CVPLPARM(CVPLNGTH),CVPL /* CVAF services prep */\n         LA    R5,CVPLPARM /* Map CVPL */\n         USING CVPLMAP,R5\n         LA    R3,CVPLPBUF /* Buffer list */\n         XC    CVPLPBUF(CVPLPBFL),CVPLPBUF /* Clear */\n         LA    R6,IECSDSL1 /* F1 dscb */\n         OI    BFLHFL,BFLHDSCB /* DSCBs to be read */\n         MVI   BFLHNOE,X'01' /* Buflist entry count */\n         LA    R0,DS1FMTID /* Addr DSCB buffer */\n         ST    R0,BFLEBUF ...\n         MVI   BFLELTH,DS1END-DS1FMTID /* 96 byte len */\n         XC    DS1DSNAM,DS1DSNAM /* Start key */\n         CVAFSEQ DSN=(R6),BUFLIST=(R3),UCB=(R7),MF=(E,CVPLPARM)\n         CLI   DS1DSNAM,X'04' /* VTOC ? */\n         BNE   VTOCNORM /* No */\n  TPUT ERRORS,16\nVTOCNORM EQU   * *\n  TPUT ERRORS,15\n         B     PROCEND /* Continue */\n         DROP  R5\nPROCM    EQU   * *\nPROCU    EQU   * *\nPROCA    EQU   * *\nPROCEND  BCT   R4,PROCNXTR /* Process next selected row */\n         B     REDISPLY /* Continue */\nPROCNXTR CALL  ISPLINK,(TBDISPL,TABLNAME),VL\n         B     PROCESS /* Loop processing all selected rows */\nDISPRET  EQU   * *\n         CALL  ISPLINK,(TBCLOSE,TABLNAME),VL /* Close open table */\n         B     MAINEXIT\nERRORS   DC    C'ABCDEFGHIJKLMNOP'\nFTBTOP   EQU   * *\n         TPUT  ERRORS,1\n         B     MAINEXIT\nFTBSORT  EQU   * *\n         TPUT  ERRORS,2\n         B     MAINEXIT\nFTBDISPL EQU   * *\n         TPUT  ERRORS,3\n         B     MAINEXIT\nFVDEF    EQU   * *\n         TPUT  ERRORS,4\n         B     MAINEXIT\nFTBADD   EQU   * *\n         TPUT  ERRORS,5\n         B     MAINEXIT\nFTBCREAT EQU   * *\n         TPUT  ERRORS,6\n         B     MAINEXIT\nISPINACT EQU   * *\n         TPUT  ERRORS,7\n         B     MAINEXIT\nLMCATERR EQU   * *\n         TPUT  ERRORS,8\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         LA    R0,DWORDS\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         RETURN (14,12),RC=0\nVLENGTH  DC    A(K9,K9,K59,K48,K4) /* Variable lens */\nZLENGTH  DC    A(K8,K3),(K9)A(K4) /* Variable lens */\nCALLIST  CALL  ,(,,,,,,,,,,,,,,),MF=L,VL\nCALLISTL EQU   *-CALLIST\nCVPL     CVAFSEQ ACCESS=GTEQ,IXRCDS=KEEP,MF=L\nCVAFDIRL CVAFDIR ACCESS=READ,MF=L\nIOSVSKEL DC    A(*-*,IOSVDEVT,X'80000000') /* IOSVSUCB parm */\nVFORMAT  DC    (K5)CL8'CHAR' /* All charac formats */\nZFORMAT  DC    (K2)CL8'CHAR',(K9)CL8'FIXED' /* Mixed formats */\nMULTROWS DC    A(K60) /* Assume TBADD of 60 rows at a time */\nCTGFLSP  DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,CATVOL,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nCTGFLSPL EQU   *-CTGFLSP /* Len */\nMULTITYP DC    CL8'MULTITYP'   /* CTGFL field name */\nENTNAME  DC    CL8'ENTNAME'    /* CTGFL field name */\nENTYPE   DC    CL8'ENTYPE'     /* CTGFL field name */\nCATVOL   DC    CL8'CATVOL'     /* CTGFL field name */\nNAMEDS   DC    CL8'NAMEDS'     /* CTGFL field name */\nCATACB   DC    CL8'CATACB'     /* CTGFL field name */\nTBCREATE DC    CL8'TBCREATE' /* ISPF service */\nTBSORT   DC    CL8'TBSORT' /* ISPF service */\nTBADD    DC    CL8'TBADD' /* ISPF service */\nTBTOP    DC    CL8'TBTOP' /* ISPF service */\nVDEFINE  DC    CL8'VDEFINE' /* ISPF service */\nTBDISPL  DC    CL8'TBDISPL' /* ISPF service */\nTBCLOSE  DC    CL8'TBCLOSE' /* ISPF service */\nTABLNAME DC    CL8'DSSERVT' /* ISPF tablename */\nPANELID  DC    CL8'DSSERVP' /* ISPF panelname */\nTABLCOLS DC    C'(COMMAND,ENTRYTYP,NAME,SORTKEY,DATA)'\nSYSNAMES DC    C'(ZTDRET,ZTDADD,ZTDSCRP,ZTDSRID,ZTDAMT,ZTDSIZE,ZTDLTOP,X\n               ZTDLROWS,ZTDROWS,ZTDSELS,ZTDTOP)'\nSORTLIST DC    C'(SORTKEY,C,A,NAME,C,A)'\nNOWRITE  DC    CL8'NOWRITE' /* Temporary ISPF table */\nORDER    DC    CL8'ORDER' /* Sort ISPF table */\nREPLACE  DC    CL8'REPLACE' /* Replace existing table */\nLIST     DC    CL8'LIST' /* VDEFINE list */\nNULL     DC    C' ' /* Dummy positional call parameter */\nIOSVDEVT DC    AL1(UCB3DACC)  /* DASD class */\nLOOKBLNK DC    (K256)AL1(K0) /* Look for a blank */\n         ORG   LOOKBLNK+C' '\n         DC    AL1(K255)\n         ORG\nSEPR     DC    C'|__'  /* PC-like line sep */\n         LTORG\nDSRVWMAP DSECT\nSAVEAREA DC    (K18)A(K0)\nVSUCBRET DC    (K100)AL1(K0) /* IOSVSUCB results */\nIOSVPARM DC    A(*-*,IOSVDEVT,X'80000000') /* IOSVSUCB parm */\nVSUCBEP  DC    A(*-*) /* IOSVSUCB ep */\nIOSVUCBR DC    A(*-*) /* Return UCB ptr */\nISPLINKL CALL  ,(,,,,,,,,,,,,,,),MF=L,VL\nMCATACB  DC    A(*-*) /* Master catalog ACB ptr */\nMCATDSN  DC    CL44' ' /* Master catalog dsname */\nMCATVSER DC    CL6' ' /* Master catalog volume serial */\n*********************** Contiguous storage required *******************\nALIGN    DC    0D'0' /* Alignment for variable pool */\nVARIABLE EQU   * * /* Begin ISPF function variables */\nVCMD     DC    CL9' '   /* Command col */\nVENTRY   DC    CL9' '   /* Entrytyp col */\nVNAME    DC    CL59' '  /* Name col */\nVKEY     DC    CL48' '  /* Sort key hidden col */\nVDATA    DC    CL4' '  /* Hidden data per row type */\nSYSVARS  EQU   * * /* Begin ISPF function variables */\nUTDRET   DC    CL8' ' /* ISPF system variables */\nUTDADD   DC    CL3' '\nUTDSCRP  DC    F'0'\nUTDSRID  DC    F'0'\nUTDAMT   DC    F'0'\nUTDSIZE  DC    F'0'\nUTDLTOP  DC    F'0'\nUTDLROWS DC    F'0'\nUTDROWS  DC    F'0'\nUTDSELS  DC    F'0'\nUTDTOP   DC    F'0'\n*********************** Contiguous storage required *******************\nCVPLPARM DC    (CVPLNGTH)AL1(K0) /* CVPL services */\nCVPLPBUF ICVAFBFL DSECT=NO\nCVPLPBFL EQU   *-CVPLPBUF\n         IECSDSL1 (1)\nCTGFLS   EQU   *\nRESPENTN DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,CATVOL,K0),(K2)AL4(K0)\nRESPNMDS DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nSVC26PRM DC    (CTGPLEN)AL1(K0) /* Param for catalog services */\nCTGENTP  DC    CL44' ' /* Requested dsname for cat searches */\nCATRESP  DC    CL256' ' /* Cat serv response area */\nDWORDS   EQU   ((((*-SAVEAREA)+K7)/K8)*K8)\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         DSECT\n         IEFUCBOB\n         IHAPSA\n         CVT   DSECT=YES\nAMCBS    DSECT , /* Access Method Control Block Structure */\n         ORG   AMCBS+K20\nCBSCAXCN DC    A(*-*) /* Pointer CAXWA chain */\nIGGCAXWA DSECT , /* Catalog Auxiliary Work Area */\n         ORG   IGGCAXWA+K4 /* CAXWA chain ptr */\nCAXCHN   DC    A(*-*) ...\nCAXFLGS  DC    AL1(*-*) /* Flags */\nCAXMCT   EQU   X'04' /* 1=Master Catalog, 0=User Catalog */\n         ORG   IGGCAXWA+K24\nCAXACB   DC    A(*-*)   /* Catalog acb */\n         ORG   IGGCAXWA+K28\nCAXUCB   DC    A(*-*) /* UCB pointer */\n         ORG   IGGCAXWA+K52\nCAXCNAM  DC    CL44' ' /* Catalog name */\nCTGPL    DSECT ,      /* Catalog parameter list */\nCTGOPTN1 DS    X      /* First option byte */\nCTGNAME  EQU   X'04'  /* CTGENT holds a(dsname) or a(ci#)\nCTGCNAME EQU   X'02'  /* CTGCAT hold a(cat dsname */\nCTGOPTN2 DS    X      /* Second option byte */\nCTGGTNXT EQU   X'10'  /* LISTCAT get next option */\nCTGBOTH  EQU   X'01'  /* Caller accepts ICF arch */\nCTGOPTN3 DS    X      /* Third option byte */\nCTGCMS   EQU   X'80'  /* Catalog mgmt services req */\nCTGAM0   EQU   X'01'  /* ICF/VSAM request */\nCTGOPTN4 DS    X      /* Fourth option byte */\nCTGENT   DS    A      /* Address of the catalog record id */\nCTGCAT   DS    A      /* Address cat dsname or address cat acb */\nCTGWKA   DS    A      /* Address callers workarea */\nCTGDSORG DS    XL2    /* Superlocate DSORG */\n         ORG   CTGDSORG\nCTGOPTNS DS    XL2    /* Cat management services options */\nCTGLTCAT EQU   X'20'  /* LISTCAT */\nCTGF2SEN EQU   X'01'  /* Can handle 40-2 return code */\nCTGTYPE  DS    C      /* Cat record type */\nCTGTUCAT EQU   C'U'   /* Usercat code */\nCTGTANM  EQU   C'X'   /* Alias name */\nCTGNOFLD DS    X      /* CTGFIELD entry count */\nCTGNEWNM DS    A      /* Alter new dsname ptr */\n         ORG   CTGNEWNM\nCTGFDBK  DS    XL2    /* Feedback area */\nCTGFBFLG DS    XL2    /* Superlocate flags */\nCTGJSCB  DS    A      /* JSCB  ptr */\nCTGFIELD EQU   *      /* 4 byte ptr to each CTGFL; len=4*CTGNOFLD */\nCTGPLEN  EQU   *-CTGPL+(K4*K4) /* Base len w/max4 4byte ctgfl ptrs */\nCTGFL    DSECT , /* Filed entry map */\nCTGFLDNO DS    X /* # entries in CTGFLDAT */\nCTGFLDCD DS    X /* Fl test condition */\nCTGFLDGC DS    X /* Type group code */\nCTGFLDRE DS    X /* Test results */\nCTGFLDWA DS    A /* Workarea; cat rcd field name info */\nCTGFLDNM DS    A /* Address of the field name */\nCTGFLCHN DS    A /* Address of CTGFL test or 0 */\nCTGFLDAT EQU   * /* Start of len/address pairs */\nCTGFLL   EQU   *-CTGFL\n         PRINT GEN\nCVPLMAP  ICVAFPL\n         PRINT NOGEN\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(DSS),DISP=SHR,\n// UNIT=3390,VOL=SER=MCSRES\n//*UNIT=,SPACE=\n//L.SYSLIB DD DSN=ISP.V2R3M0.ISPLOAD,DISP=SHR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DYNATEST": {"ttr": 3588, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x13/\\x00\\x94\\x13/\\x156\\x00\\x0b\\x00\\x0b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-12T00:00:00", "modifydate": "1994-05-12T15:36:00", "lines": 11, "newlines": 11, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP0010 EXEC PGM=DYNADSN\n//SYSPRINT DD   SYSOUT=*\n//SYSIN    DD   *\n$$$$     JEFF\n/*\n//STEP0020 EXEC PGM=IEFBR14\n//TEST   DD DSN=PTAP.$$$$TEST,DISP=(NEW,CATLG,DELETE),\n// UNIT=SYSDA,DCB=(LRECL=80,RECFM=FB,BLKSIZE=80),SPACE=(TRK,1)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXAMINE": {"ttr": 3590, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x911\\x0f\\x00\\x93\\x05O\\x171\\x00\\x0b\\x00\\x14\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1991-11-06T00:00:00", "modifydate": "1993-02-23T17:31:00", "lines": 11, "newlines": 20, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB 5304010530000000,'TECH.JEFFK',NOTIFY=TECH110,\n//         MSGCLASS=G,CLASS=S,MSGLEVEL=(1,1),REGION=8M\n//ALLOC    PROC\n//IDCAMS   EXEC PGM=IDCAMS,REGION=8M\n//SYSPRINT DD   SYSOUT=*\n//      PEND\n//ALOCDICT   EXEC ALLOC\n//IDCAMS.SYSIN    DD   *\n EXAMINE -\n   NAME (PMCD.X.AVAIL.DISTRO.FILE)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXPAND": {"ttr": 3592, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x95\\x10O\\x00\\x95\\x10O\\x13\\x06\\x00\\x0c\\x00W\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1995-04-14T00:00:00", "modifydate": "1995-04-14T13:06:00", "lines": 12, "newlines": 87, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//LNKEDT   EXEC PGM=IEWL,\n//         PARM=('NCAL,MAP,LIST,LET,XREF,AMODE=31,RMODE=24,RENT')\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  UNIT=SMS,SPACE=(CYL,(1,1))\n//SYSLMOD  DD  DSN=SYSS.TECH.VIRTDATE.LOADLIB,DISP=SHR\n//SYSLIN   DD  *\n  INCLUDE SYSLMOD(IGZCPCO)\n  EXPAND IGZEDTE(512)\n  NAME IGZCPCO(R)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXPLAIN": {"ttr": 3594, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93\\x06\\x8f\\x00\\x93\\x06\\x8f\\x16\\x03\\x00\\x02\\x00\\x01\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-03-09T00:00:00", "modifydate": "1993-03-09T16:03:00", "lines": 2, "newlines": 1, "modlines": 0, "user": "TECH110"}, "text": "  SELECT * FROM TECH110.PLAN_TABLE;\n--SELECT * FROM SYSIBM.SYSTABLES WHERE CREATOR = 'BUILD'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXPORT": {"ttr": 3596, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\x05O\\x00\\x93\\x05O\\x173\\x00\\r\\x00\\x0b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-02-23T00:00:00", "modifydate": "1993-02-23T17:33:00", "lines": 13, "newlines": 11, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB 5304010530000000,'TECH.JEFFK',NOTIFY=TECH110,\n//         MSGCLASS=G,CLASS=S,MSGLEVEL=(1,1),REGION=8M\n//ALLOC    PROC\n//IDCAMS   EXEC PGM=IDCAMS,REGION=8M\n//SYSPRINT DD   SYSOUT=*\n//OUTPUT DD DSN=TECH110.EXPORT.DATA,DISP=(NEW,CATLG),\n//  SPACE=(CYL,(5,5))\n//      PEND\n//ALOCDICT   EXEC ALLOC\n//IDCAMS.SYSIN    DD   *\n EXPORT  -\n         PMCD.X.AVAIL.DISTRO.FILE OUTFILE(OUTPUT) TEMP\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXPRTCAT": {"ttr": 3598, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x915\\x7f\\x00\\x915\\x7f\\x080\\x00\\x14\\x00\\x13\\x00\\x0e\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-12-23T00:00:00", "modifydate": "1991-12-23T08:30:00", "lines": 20, "newlines": 19, "modlines": 14, "user": "JEFFK"}, "text": "//JEFFKS   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=IDCAMS,REGION=6M\n//* EXPORTT ALL XA USERCATS - MUST BE THE LAST JOB RUN ON XA\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n EXPORT CATALOG.MVSICF1.VMVSDL1 DISCONNECT\n EXPORT CATALOG.MVSICF1.VMVSRS1 DISCONNECT\n EXPORT CATALOG.MXA.GLOBAL DISCONNECT\n EXPORT CATALOG.MXA.MASTER DISCONNECT\n EXPORT CATALOG.VMXACIC DISCONNECT\n EXPORT PDU.PROD.ONE.USERCAT DISCONNECT\n EXPORT PDU.PROD.TWO.USERCAT DISCONNECT\n EXPORT PDU.PROD.THREE.USERCAT DISCONNECT\n EXPORT SYS1.UCATTSOE.XA.CLUSTER DISCONNECT\n EXPORT TDU.TEST.ONE.USERCAT DISCONNECT\n EXPORT TECH.USER.CATALOG DISCONNECT\n/*\n//* EXPORT CATALOG.MVSICFM.VMVSCAT DISCONNECT\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXTRCTCP": {"ttr": 3600, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x93#\\x1f\\x00\\x93#_\\x164\\x00\\x0f\\x00\\x01\\x00\\x0e\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1993-08-19T00:00:00", "modifydate": "1993-08-23T16:34:00", "lines": 15, "newlines": 1, "modlines": 14, "user": "TECH110"}, "text": "/* REXX EXTRACT CURRENT ACTIVE STORE COUNT */\n\"EXECIO * DISKR STORCNTR (FINIS STEM ST.\";\nDO I = 1 TO ST.0;\n    PARSE VAR ST.I MSGNO RCDLIT . . . RCDOUT;\n    IF MSGNO\u00ac=\"WER054I\" | RCDLIT \u00ac=\"RCD\" THEN ITERATE;\n    SAY \"THE CURRENT ACTIVE STORE COUNT IS:\" STRIP(RCDOUT);\n    EXIT 0;\nEND;\n\"EXECIO * DISKR DISTCNTR (FINIS STEM DI.\";\nDO I = 1 TO DI.0;\n    PARSE VAR DI.I MSGNO RCDLIT . . . RCDOUT;\n    IF MSGNO\u00ac=\"WER054I\" | RCDLIT \u00ac=\"RCD\" THEN ITERATE;\n    SAY \"THE CURRENT DISTRO COUNT IS:\" STRIP(RCDOUT);\n    EXIT 0;\nEND;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FAVER": {"ttr": 3602, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\x05O\\x00\\x93\\x05O\\x17F\\x00\\x0f\\x00\\r\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-02-23T00:00:00", "modifydate": "1993-02-23T17:46:00", "lines": 15, "newlines": 13, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB 5304010530000000,'TECH.JEFFK',NOTIFY=TECH110,\n//         MSGCLASS=G,CLASS=S,MSGLEVEL=(1,1),REGION=8M\n//ALLOC    PROC\n//IDCAMS   EXEC PGM=GVEXPORT\n//SYSPRINT DD   SYSOUT=*\n//FVROUT0 DD DSN=TECH110.EXPORT.DATA,DISP=(NEW,CATLG),\n//  SPACE=(CYL,(5,5))\n//      PEND\n//ALOCDICT   EXEC ALLOC\n//IDCAMS.SYSIN    DD   *\n EXPORT\n CLUSTER\n CILEVEL\n CL=PMCD.X.AVAIL.DISTRO.FILE\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRAGING": {"ttr": 3604, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93%o\\x00\\x93%o\\x12\\x19\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-09-13T00:00:00", "modifydate": "1993-09-13T12:19:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "TECH110"}, "text": "//TECH110X JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//STEP1 EXEC PGM=FDRABRP,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//ABRMAP   DD SYSOUT=*\n//ABRSUM   DD SYSOUT=*\n//SYSIN DD *\n P VTOC,SUMPFX=YES,COMBINE,FORMAT=CRT,DSG=(SYSM.),VOLG=(SYS,SMS)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRCATR": {"ttr": 3606, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x926_\\x00\\x926_\\x14H\\x00\\x0b\\x00\\x0c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-12-30T00:00:00", "modifydate": "1992-12-30T14:48:00", "lines": 11, "newlines": 12, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB 530401053000,'KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=8M\n//ABRARCH  EXEC PGM=FDRABRP\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//ABRMAP   DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSIN    DD *\n  P CATLG\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRCOPY1": {"ttr": 3608, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x912\\x1f\\x00\\x912?\\x155\\x00d\\x00f\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-11-17T00:00:00", "modifydate": "1991-11-19T15:35:00", "lines": 100, "newlines": 102, "modlines": 0, "user": "TECH110"}, "text": "//FDRCOPY1 JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//STEP01 EXEC PGM=FDRCOPY,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSPRIN1 DD SYSOUT=*\n//SYSPRIN2 DD SYSOUT=*\n//SYSPRIN3 DD SYSOUT=*\n//SYSPRIN4 DD SYSOUT=*\n//SYSPRIN5 DD SYSOUT=*\n//SYSPRIN6 DD SYSOUT=*\n//SYSPRIN7 DD SYSOUT=*\n//SYSPRIN8 DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//DISK1   DD UNIT=3390,DISP=OLD,VOL=SER=SMSSM1\n//DISK2   DD UNIT=3390,DISP=OLD,VOL=SER=SMSSM2\n//DISK3   DD UNIT=3390,DISP=OLD,VOL=SER=SMSSM3\n//DISK4   DD UNIT=3390,DISP=OLD,VOL=SER=SMSSM4\n//DISK5   DD UNIT=3390,DISP=OLD,VOL=SER=SMSSM5\n//DISK6   DD UNIT=3390,DISP=OLD,VOL=SER=SMSSM6\n//DISK7   DD UNIT=3380,DISP=OLD,VOL=SER=SMSU01\n//DISK8   DD UNIT=3380,DISP=OLD,VOL=SER=SMSU02\n//SYSIN   DD *\n COPY TYPE=DSF,ENQERR=PROCESS,DSNENQ=NONE\n SELECT DSN=TECH000.USER.CNTLLIB,\n    NVOL=(SMSU03),STORCLAS=SCSTNRDG\n SELECT DSN=TECH001.USER.CNTLLIB,\n    NVOL=(SMSU04),STORCLAS=SCSTNRDG\n SELECT DSN=TECH002.USER.CNTLLIB,\n    NVOL=(SMSU05),STORCLAS=SCSTNRDG\n SELECT DSN=TECH099.USER.CNTLLIB,\n    NVOL=(SMSU06),STORCLAS=SCSTNRDG\n SELECT DSN=TECH101.USER.CNTLLIB,\n    NVOL=(SMSU07),STORCLAS=SCSTNRDG\n SELECT DSN=TECH102.USER.CNTLLIB,\n    NVOL=(SMSU08),STORCLAS=SCSTNRDG\n SELECT DSN=TECH103.USER.CNTLLIB,\n    NVOL=(SMSU09),STORCLAS=SCSTNRDG\n SELECT DSN=TECH104.USER.CNTLLIB,\n    NVOL=(SMSU10),STORCLAS=SCSTNRDG\n SELECT DSN=TECH105.USER.CNTLLIB,\n    NVOL=(SMSU11),STORCLAS=SCSTNRDG\n SELECT DSN=TECH106.USER.CNTLLIB,\n    NVOL=(SMSU03),STORCLAS=SCSTNRDG\n SELECT DSN=TECH107.USER.CNTLLIB,\n    NVOL=(SMSU04),STORCLAS=SCSTNRDG\n SELECT DSN=TECH108.USER.CNTLLIB,\n    NVOL=(SMSU05),STORCLAS=SCSTNRDG\n SELECT DSN=TECH109.USER.CNTLLIB,\n    NVOL=(SMSU06),STORCLAS=SCSTNRDG\n SELECT DSN=TECH111.USER.CNTLLIB,\n    NVOL=(SMSU08),STORCLAS=SCSTNRDG\n SELECT DSN=TECH200.USER.CNTLLIB,\n    NVOL=(SMSU09),STORCLAS=SCSTNRDG\n SELECT DSN=TECH201.USER.CNTLLIB,\n    NVOL=(SMSU10),STORCLAS=SCSTNRDG\n SELECT DSN=TECH202.USER.CNTLLIB,\n    NVOL=(SMSU11),STORCLAS=SCSTNRDG\n SELECT DSN=TECH203.USER.CNTLLIB,\n    NVOL=(SMSU03),STORCLAS=SCSTNRDG\n SELECT DSN=TECH204.USER.CNTLLIB,\n    NVOL=(SMSU04),STORCLAS=SCSTNRDG\n SELECT DSN=TECH205.USER.CNTLLIB,\n    NVOL=(SMSU05),STORCLAS=SCSTNRDG\n SELECT DSN=TECH206.USER.CNTLLIB,\n    NVOL=(SMSU06),STORCLAS=SCSTNRDG\n SELECT DSN=TECH207.USER.CNTLLIB,\n    NVOL=(SMSU07),STORCLAS=SCSTNRDG\n SELECT DSN=TECH208.USER.CNTLLIB,\n    NVOL=(SMSU08),STORCLAS=SCSTNRDG\n SELECT DSN=TECH209.USER.CNTLLIB,\n    NVOL=(SMSU09),STORCLAS=SCSTNRDG\n SELECT DSN=TECH220.USER.CNTLLIB,\n    NVOL=(SMSU10),STORCLAS=SCSTNRDG\n SELECT DSN=TECH221.USER.CNTLLIB,\n    NVOL=(SMSU11),STORCLAS=SCSTNRDG\n SELECT DSN=TECH250.USER.CNTLLIB,\n    NVOL=(SMSU03),STORCLAS=SCSTNRDG\n SELECT DSN=TECH251.USER.CNTLLIB,\n    NVOL=(SMSU04),STORCLAS=SCSTNRDG\n SELECT DSN=TECH252.USER.CNTLLIB,\n    NVOL=(SMSU05),STORCLAS=SCSTNRDG\n SELECT DSN=TECH253.USER.CNTLLIB,\n    NVOL=(SMSU06),STORCLAS=SCSTNRDG\n SELECT DSN=TECH290.USER.CNTLLIB,\n    NVOL=(SMSU07),STORCLAS=SCSTNRDG\n SELECT DSN=TECH291.USER.CNTLLIB,\n    NVOL=(SMSU08),STORCLAS=SCSTNRDG\n SELECT DSN=TECH292.USER.CNTLLIB,\n    NVOL=(SMSU09),STORCLAS=SCSTNRDG\n SELECT DSN=TECH293.USER.CNTLLIB,\n    NVOL=(SMSU10),STORCLAS=SCSTNRDG\n SELECT DSN=TECH294.USER.CNTLLIB,\n    NVOL=(SMSU11),STORCLAS=SCSTNRDG\n SELECT DSN=TECH295.USER.CNTLLIB,\n    NVOL=(SMSU03),STORCLAS=SCSTNRDG\n SELECT DSN=TECH296.USER.CNTLLIB,\n    NVOL=(SMSU04),STORCLAS=SCSTNRDG\n SELECT DSN=TECH299.USER.CNTLLIB,\n    NVOL=(SMSU05),STORCLAS=SCSTNRDG\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRDUMP": {"ttr": 3611, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90\\x19/\\x00\\x90\\x19/\\x14\\t\\x00\\x12\\x00\\x12\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-07-11T00:00:00", "modifydate": "1990-07-11T14:09:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=FDR,REGION=8M\n//STEPLIB DD DSN=SYS3.IDP.MODFDR51,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//DISK1 DD UNIT=3380,DISP=OLD,VOL=SER=MVS001\n//DISK2 DD UNIT=3380,DISP=OLD,VOL=SER=MVS002\n//SYSPRIN1 DD SYSOUT=*\n//SYSPRIN2 DD SYSOUT=*\n//TAPE1 DD UNIT=TA80,DSN=TEST.BACKUP.MVS001,DISP=(NEW,DELETE),\n//  VOL=(,,,99)\n//TAPE2 DD UNIT=TA80,DSN=TEST.BACKUP.MVS002,DISP=(NEW,DELETE),\n//  VOL=(,,,99)\n//SYSIN DD *\n DUMP TYPE=FDR,ATTACH,BUFNO=MAX,DATA=USED,\n      LBPZERO=VALID,COMPRESS=ALL\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDREPORT": {"ttr": 3613, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x91\\x14\\x9f\\x00\\x95\\x03\\x9f\\x15\\x00\\x00\\x0b\\x00\\n\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-05-29T00:00:00", "modifydate": "1995-02-08T15:00:00", "lines": 11, "newlines": 10, "modlines": 5, "user": "TECH110"}, "text": "//TECH110R JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=A,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S1 EXEC PGM=FDRABRP,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//ABRMAP   DD SYSOUT=*\n//ABRSUM   DD SYSOUT=*\n//SYSIN DD *\n PRINT VTOC,SUMPFX=YES,ONLINE,DETAIL=YES,COMBINE\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRLOAD": {"ttr": 3615, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x90\\x19/\\x00\\x90$\\x7f\\x150\\x00\\n\\x00\\t\\x00\\x05\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1990-07-11T00:00:00", "modifydate": "1990-09-04T15:30:00", "lines": 10, "newlines": 9, "modlines": 5, "user": "JEFFK"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=IEBUPDTE,REGION=6M,PARM=NEW\n//SYSPRINT DD DUMMY\n//SYSUT2 DD DSN=SYS3.IDP.ICLFDR51,DISP=OLD\n//*SYSUT2 DD DSN=SYS3.IDP.ICLFDR51,DISP=(NEW,CATLG),\n//* VOL=SER=WORK02,UNIT=3380,SPACE=(CYL,(8,1,54)),\n//* DCB=(LRECL=80,RECFM=FB,BLKSIZE=3120)\n//SYSIN DD DSN=FDRICL,DISP=OLD,LABEL=6,VOL=SER=FDR51T,UNIT=TA80\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRMOVE": {"ttr": 3617, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x1e\\x00\\x00\\x00\\x92\\x01\\x7f\\x00\\x92'_\\x10\\x11\\x00$\\x00d\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.30", "flags": 0, "createdate": "1992-01-17T00:00:00", "modifydate": "1992-10-01T10:11:00", "lines": 36, "newlines": 100, "modlines": 0, "user": "TECH110"}, "text": "//FDRMOVE  JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n/*JOBPARM S=SYSB\n//STEP01 EXEC PGM=FDRCOPY,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSPRIN1 DD SYSOUT=*\n//SYSPRIN2 DD SYSOUT=*\n//SYSPRIN3 DD SYSOUT=*\n//SYSPRIN4 DD SYSOUT=*\n//SYSPRIN5 DD SYSOUT=*\n//SYSPRIN6 DD SYSOUT=*\n//SYSPRIN7 DD SYSOUT=*\n//SYSPRIN8 DD SYSOUT=*\n//SYSPRIN9 DD SYSOUT=*\n//SYSPRINA DD SYSOUT=*\n//SYSPRINB DD SYSOUT=*\n//SYSPRINC DD SYSOUT=*\n//SYSPRIND DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//DISK1   DD UNIT=3390,DISP=OLD,VOL=SER=SYS003\n//DISK2   DD UNIT=3390,DISP=OLD,VOL=SER=SYS005\n//SYSIN   DD *\n MOVE TYPE=DSF,DATA=ALL,SMSGDG=INPUT,PRESTAGE\n SELECT DSN=SYST.BABBAGE.**,DSORG=(PO,PS),RECAT,\n   STORCLAS=SYSSHARE,NVOL=SYS010\n SELECT DSN=SYST.DSSI.**,DSORG=(PO,PS),RECAT,\n   STORCLAS=SYSSHARE,NVOL=SYS010\n SELECT DSN=SYST.JCLCHECK.**,DSORG=(PO,PS),RECAT,\n   STORCLAS=SYSSHARE,NVOL=SYS010\n SELECT DSN=SYST.NETCENTR.**,DSORG=(PO,PS),RECAT,\n   STORCLAS=SYSSHARE,NVOL=SYS010\n SELECT DSN=SYST.NPM.**,DSORG=(PO,PS),RECAT,\n   STORCLAS=SYSSHARE,NVOL=SYS010\n SELECT DSN=SYST.SLR.**,DSORG=(PO,PS),RECAT,\n   STORCLAS=SYSSHARE,NVOL=SYS010\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRPRINT": {"ttr": 3619, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x92 O\\x00\\x92 o\\x10#\\x00\\x0c\\x00\\x0b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-07-22T00:00:00", "modifydate": "1992-07-24T10:23:00", "lines": 12, "newlines": 11, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB 530401053000,'KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=8M\n//ABRARCH  EXEC PGM=FDRABRP\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//ABRMAP   DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//*RINT    VOLSTAT\n//SYSIN    DD *\n  PRINT    VTOC,VOL=DRV656\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRPVTOC": {"ttr": 3842, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01>\\x00\\x00\\x00\\x92 O\\x00\\x94'/\\x114\\x00\\x0e\\x00\\x0b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.62", "flags": 0, "createdate": "1992-07-22T00:00:00", "modifydate": "1994-09-29T11:34:00", "lines": 14, "newlines": 11, "modlines": 0, "user": "TECH110"}, "text": "//TECH110A JOB 530401053000,'JEFF KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),REGION=8M\n//* PRINT ABR VTOC INFO\n//ABRARCH  EXEC PGM=FDRABRP,REGION=8M\n//ABRMAP   DD SYSOUT=*\n//ABRSUM   DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSIN    DD *\nPRINT VTOC,SUMPFX=ALL,COMBINE,DETAIL=NO,FORMAT=PRT,\n  VOLG=(DB2)\n//*  ONLINE\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRRPT": {"ttr": 3844, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00\\x00\\x00\\x92\\x14?\\x00\\x93%o\\x158\\x00\\x11\\x00\\x0f\\x00\\x0b\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "1992-05-22T00:00:00", "modifydate": "1993-09-13T15:38:00", "lines": 17, "newlines": 15, "modlines": 11, "user": "TECH110"}, "text": "//TECH110R JOB 530401053000,'JEFF KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=7M\n/*JOBPARM S=SYSA\n//ABR1     EXEC PGM=FDREPORT\n//SYSPRINT DD SYSOUT=*\n//ABRMAP   DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSIN    DD *\n  REPORT   FIELD=(NAME,DSSN,BYTES,LRDATE)\n  XSELECT  LRDATE.LE.(93.225)\n  XSELECT  STORGRP=SYSPOOL\n  XSELECT  STORGRP=USRPOOL\n  XEXCLUDE DSG=(SYS1.**,SYSA.**,SYSB.**,SYSS.**)\n  SORT     FIELD=(NAME)\n  PRINT    BYTEFORMAT=MEGABYTES,DATATYPE=VTOC,SUM=YES,ONLINE\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRRPT2": {"ttr": 3846, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00\\x00\\x00\\x94'/\\x00\\x94'/\\x11T\\x00\\x0c\\x00\\x11\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-09-29T00:00:00", "modifydate": "1994-09-29T11:54:00", "lines": 12, "newlines": 17, "modlines": 4, "user": "TECH110"}, "text": "//TECH110R JOB 530401053000,'JEFF KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=7M\n//ABR1     EXEC PGM=FDREPORT\n//SYSPRINT DD SYSOUT=*\n//ABRMAP   DD DSN=TECH110.DASD.USED.REPORT,DISP=(NEW,CATLG),\n// SPACE=(CYL,(5,1))\n//SYSOUT   DD SYSOUT=*\n//SYSIN    DD *\n REPORT  FIELD=(%USED,BYTES,BYTESUSE)\n PRINT  BYTEFORMAT=KILOBYTES,DATATYPE=VTOC,SUM=YES,ONLINE,SORT=COMBINE\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRRPT3": {"ttr": 3848, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x945O\\x00\\x95\\x06\\x9f\\t#\\x00\\x0c\\x00\\x0c\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1994-12-20T00:00:00", "modifydate": "1995-03-10T09:23:00", "lines": 12, "newlines": 12, "modlines": 4, "user": "TECH110"}, "text": "//TECH110R JOB 530401053000,'JEFF KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=7M\n//ABR1     EXEC PGM=FDREPORT\n//SYSPRINT DD SYSOUT=*\n//ABRMAP   DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSIN    DD *\n REPORT  FIELD=(DSN)\n SELECT DSG=P\n PRINT  DATATYPE=VTOC,SUM=YES,ONLINE,SORT=COMBINE\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDRRPT4": {"ttr": 3850, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\x00O\\x00\\x95\\x00O\\x11&\\x00\\x0c\\x00\\x0b\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-01-04T00:00:00", "modifydate": "1995-01-04T11:26:00", "lines": 12, "newlines": 11, "modlines": 1, "user": "TECH110"}, "text": "//TECH110R JOB 530401053000,'JEFF KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=7M\n//ABR1     EXEC PGM=FDREPORT\n//SYSPRINT DD SYSOUT=*\n//ABRMAP   DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSIN    DD *\n XSELECT DSG=SYSM.,VOLG\u00ac=MNT\n REPORT  FIELD=(DSN,BYTESUSE)\n PRINT  BYTEFORMAT=BYTES,DATATYPE=VTOC,SUM=YES,ONLINE,SORT=COMBINE\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FDSCAN": {"ttr": 3852, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01A\\x00\\x00\\x00\\x91\\x02_\\x00\\x94\\x13\\x7f\\x147\\x011\\x01\\xe2\\x00\\xd4\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.65", "flags": 0, "createdate": "1991-01-25T00:00:00", "modifydate": "1994-05-17T14:37:00", "lines": 305, "newlines": 482, "modlines": 212, "user": "TECH110"}, "text": "//TECH110J JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL\n//C.SYSIN  DD *\nPDS      TITLE 'SCAN LOADLIB PDS FOR VSCOB FIB FILE ACCES'\nFDSCAN   CSECT , /* CONVERT DATASET FORMAT */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nFDSCAN   AMODE 24\nFDSCAN   RMODE 24\n         SAVE  (14,12),,FDSCAN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING FDSCAN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\nOPENLIST OPEN  (DIRREAD,(INPUT),SYSUT2,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R7,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         SLR   R5,R5 /* TOTAL MEMBER COUNT */\n         L     R3,=A(TTRLIST) /* START OF DIR LIST */\nGETDIR   READ  DECBDIR,SF,MF=E\n         CHECK DECBDIR\n         LA    R4,DIRBLOCK+K10 /* PTR FIRST DIR BLOK ENTRY */\nDIRBSCAN CLC   =X'FFFFFFFF',K0(R4) /* DIR END */\n         BE    DIREND\n         LA    R5,K1(,R5) +1 MEMBER\n         C     R5,=A(K32760) EXCEEDED MAX # MEMBERS WE HANDLE\n         BH    FMEMCOUN YES\n         MVC   K0(K3,R3),K8(R4) SAVE MEMBER TTR\n         MVC   K4(K8,R3),K0(R4) MEMBER NAME\n         MVI   K3(R3),X'00' /* CLEAR LAST TTR UNUSED BYTE */\n         LA    R3,K12(,R3) NEXT TTR SPOT; DO HALFWORD BOUND\n         CLC   DIRBLOCK(K8),K0(R4) BLOCK END\n         BE    GETDIR YES\n         SLR   RF,RF /* CALC ENTRY LEN */\n         NI    K11(R4),XFF-X80-X40-X20 OFF ALIAS AND TTRN BITS\n         IC    RF,K11(,R4)\n         SLL   RF,K1 /* NUMBER HALFWORDS */\n         LA    R4,K12(RF,R4) NEXT SPOT\n         B     DIRBSCAN /* CONTINUE */\nDIREND   CLOSE (DIRREAD)\nOPENSYT1 OPEN  (MEMREAD,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYT1+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         LTR   R5,R5 /* ANY MEMBERS IN DATASET */\n         BNP   FNOMEM NO\n         L     R8,=A(TTRLIST) /* START OF DIR LIST */\nMEMLOOP  FIND  MEMREAD,(R8),C /* BPAM USES OUR TTR */\n         LTR   RF,RF /* FIND OK */\n         BNZ   FFIND ...\nGETMEM   READ  DECBMEM,SF,MF=E /* INPUT DATA BLOCK */\n         CHECK DECBMEM\nGETMEM2  LA    R6,MEMREAD     /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         LH    R3,DCBLRECL /* INPUT BLOCKSIZE */\n         DROP  R6\n         LR    R7,R3     /* SCAN FOR FIB */\n         SLR   R6,R6\n         LA    R9,IOAREA SCAN AREA\n         D     R6,=F'256' MAX TRT LEN\n         LTR   R7,R7 MAJOR SCAN\n         BZ    LASTSEG\n         SLR   R1,R1\nSCAN     TRT   K0(K256,R9),SCANF\n         BZ    NOTFOUND\n         CLC   =C'FIB',K0(R1) FIB WORD\n         MVI   K0(R1),C'X' REPLACE AND RESUME SCAN\n         BNE   SCAN ...\n         LA    R0,IOAREA SEE IF WHOLE FIB IS IN THIS BLOCK\n         ALR   R0,R3 END OF BLOCK\n         LA    R2,48(,R1) THIS BYTE MUST BE ACCESSIBLE IN THIS BLK\n         CLR   R2,R0 COMPARE\n         BL    SAVDDNAM CONTINUE\n         LR    R2,R1 SAVE FOR RESUME SCAN\nREADNBLK READ  DECBMEM2,SF,MF=E /* INPUT DATA BLOCK */\n         CHECK DECBMEM2\n         L     RF,=A(IOAREA2) PTR\n         CLI   0(RF),X'03' SKIP BLK IF 1TYPE OF LINKEDIT RCD\n         BE    READNBLK LOOP\n         LA    RE,IOAREA MOVE NEXT FIB PIECE\n         ALR   RE,R3 END OF BLOCK\n         MVC   0(256,RE),0(RF) MOVE ONE CHUNK FROM FRONT\n         LR    R1,R2 RESTORE\n         MVC   DDNAME(K8),K6(R1) SAVE DDNAME\n         MVC   MEMNAME(K8),K4(R8)\n         MVC   ACCESS(K6),=CL6'INPUT'\n         TM    K48(R1),X80\n         BO    DOWRT2\n         MVC   ACCESS(K6),=CL6'OUTPUT'\nDOWRT2   PUT   SYSUT2,RESULT\n         LA    R6,MEMREAD     /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         LH    R3,DCBLRECL /* INPUT BLOCKSIZE */\n         DROP  R6\n         LR    R1,R3 MOVE LEN\n         LR    RF,R3 ...\n         LA    R0,IOAREA SINK\n         L     RE,=A(IOAREA2) SOURCE\n         MVCL  R0,RE COPY BLOCK\n         B     GETMEM2 RESUME WITH NEW BLK MOVED INTO FIRST BUFFER\nSAVDDNAM MVC   DDNAME(K8),K6(R1) SAVE DDNAME\n         MVC   MEMNAME(K8),K4(R8)\n         MVC   ACCESS(K6),=CL6'INPUT'\n         TM    K48(R1),X80\n         BO    DOWRT\n         MVC   ACCESS(K6),=CL6'OUTPUT'\nDOWRT    PUT   SYSUT2,RESULT\n         B     SCAN\nNOTFOUND LA    R9,K256(,R9) NEXT\n         BCT   R7,SCAN\nLASTSEG  LTR   R6,R6 REMAINDER\n         BZ    GETMEM\n         BCTR  R6,0\n         EX    R6,LASTTRT\n         LA    R6,K1(,R6) FOR RESCAN\n         BZ    GETMEM\n         CLC   =C'FIB',K0(R1) FIB WORD\n         MVI   K0(R1),C'X' REPLACE AND RESUME SCAN\n         BNE   LASTSEG ...\n         LA    R0,IOAREA SEE IF WHOLE FIB IS IN THIS BLOCK\n         ALR   R0,R3 END OF BLOCK\n         LA    R2,48(,R1) THIS BYTE MUST BE ACCESSIBLE IN THIS BLK\n         CLR   R2,R0 COMPARE\n         BL    SAVDDNM2 CONTINUE\n         LR    R2,R1 SAVE FOR RESUME SCAN\nREADNBL2 READ  DECBMEM2,SF,MF=E /* INPUT DATA BLOCK */\n         CHECK DECBMEM2\n         L     RF,=A(IOAREA2) PTR\n         CLI   0(RF),X'03' SKIP BLK IF 1TYPE OF LINKEDIT RCD\n         BE    READNBL2 LOOP\n         LA    RE,IOAREA  MOVE NEXT FIB PIECE\n         ALR   RE,R3 END OF BLOCK\n         MVC   0(256,RE),0(RF) MOVE ONE CHUNK FROM FRONT\n         LR    R1,R2 RESTORE\n         MVC   DDNAME(K8),K6(R1) SAVE DDNAME\n         MVC   MEMNAME(K8),K4(R8)\n         MVC   ACCESS(K6),=CL6'INPUT'\n         TM    K48(R1),X80\n         BO    DOWRT3\n         MVC   ACCESS(K6),=CL6'OUTPUT'\nDOWRT3   PUT   SYSUT2,RESULT\n         LA    R6,MEMREAD     /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         LH    R3,DCBLRECL /* INPUT BLOCKSIZE */\n         DROP  R6\n         LR    R1,R3 MOVE LEN\n         LR    RF,R3 ...\n         LA    R0,IOAREA SINK\n         L     RE,=A(IOAREA2) SOURCE\n         MVCL  R0,RE COPY BLOCK\n         B     GETMEM2 RESUME WITH NEW BLK MOVED INTO FIRST BUFFER\nSAVDDNM2 MVC   DDNAME(K8),K6(R1) SAVE DDNAME\n         MVC   MEMNAME(K8),K4(R8)\n         MVC   ACCESS(K6),=CL6'INPUT'\n         TM    K48(R1),X80\n         BO    DOWRTL\n         MVC   ACCESS(K6),=CL6'OUTPUT'\nDOWRTL   PUT   SYSUT2,RESULT\n         B     LASTSEG\nLASTTRT  TRT   K0(*-*,R9),SCANF\nMEMEND   LA    R8,K12(,R8) /* NEXT TTR */\n         BCT   R5,MEMLOOP /* LOOP FOR ALL MEMBERS */\n         CLOSE (MEMREAD,,SYSUT2) /* CLOSE ALL */\n         FREEPOOL SYSUT2\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nFMEMCOUN LA    RF,K28 /* MORE THAN 32760 MEMBERS */\n         B     MAINEXIT\nFNOMEM   LA    RF,K32 /* NO INPUT MEMBERS IN SYSUT1 */\n         B     MAINEXIT\nFFIND    LA    RF,K36 /* FIND FAILURE */\n         B     MAINEXIT\n         LTORG\n         PRINT NOGEN\n         READ  DECBDIR,SF,DIRREAD,DIRBLOCK,'S',MF=L /*READ DIR BLOCK*/\n         READ  DECBMEM,SF,MEMREAD,IOAREA,'S',MF=L  /*READ MEM BLOCK*/\n         READ  DECBMEM2,SF,MEMREAD,IOAREA2,'S',MF=L  /*READ MEM BLOCK*/\nWORK     DC    D'0'\nDIRREAD  DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(R),                       X\n               EODAD=*-*,KEYLEN=8,RECFM=F,LRECL=256,BLKSIZE=256\nMEMREAD  DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R),EODAD=MEMEND,RECFM=U,  X\n               KEYLEN=0,LRECL=0\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM),LRECL=24\nSCANF    DC    256X'00'\n         ORG   SCANF+C'F'\n         DC    X'FF'\n         ORG\nRESULT   DC    CL24' '\n         ORG   RESULT\nMEMNAME  DC    CL8' '\n         DC    C' '\nDDNAME   DC    CL8' '\n         DC    C' '\nACCESS   DC    CL6' '\n         ORG\nSAVRECFM DC    AL1(K0)\nDIRBLOCK DC    (K264)AL1(K0) /* A DIR BLOCK */\nIOAREA   DS    0H'0',(K32760)AL1(K0) /* LARGE I/O WORKAREA */\nFILLER   DS    256C' '\nIOAREA2  DS    0H'0',(K32760)AL1(K0) /* LARGE I/O WORKAREA */\nTTRLIST  DS    (K0)A(K0),(K32760)CL12' '\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//*L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(FDSCAN),DISP=SHR,\n//* UNIT=,SPACE=\n//L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(FDSCAN),DISP=SHR,\n// UNIT=,SPACE=\n//*G.SYSUT1 DD DSN=SYS1.PROD.BATCH.LOADLIB,DISP=SHR\n//*G.SYSUT2 DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FIXCAT": {"ttr": 3858, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x93\\x06\\x0f\\x00\\x93\\x06?\\x156\\x00V\\x00F\\x00-\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1993-03-01T00:00:00", "modifydate": "1993-03-04T15:36:00", "lines": 86, "newlines": 70, "modlines": 45, "user": "TECH110"}, "text": "/* REXX */\nNVOL=\"VSAM01 VSAM09 VSAM21\";\n\"ALLOC F(CAT) DA('TECH104.LISTCAT') SHR\";\n\"ALLOC F(OCAT) DA('TECH104.LISTCAT.FIX') OLD\";\nREMLIST = \"\";\nOCATPTR=1;\n\"EXECIO * DISKR CAT (FINIS STEM CAT.\";\nDO I = 1 TO CAT.0;\n  CAT.I=TRANSLATE(CAT.I,\" \",\"-\");\n  PARSE VAR CAT.I W1 W2 W3 W4 W5 . ;\n  IF W1=\"0CLUSTER\" | W1=\"0AIX\" THEN DO;\n      SAVEC=W2;\n      SAVED=\"\";\n      SAVEI=\"\";\n      END;\n  IF W1=\"0DATA\" THEN DO;\n      SAVED=W2;\n      END;\n  IF W1=\"0INDEX\" THEN DO;\n      SAVEI=W2;\n      END;\n  IF W1=\"VOLSER\" THEN DO;\n     SAVEVOL=W2;\n     END;\n  IF W2=\"VOLSER\" THEN DO;\n     SAVEVOL=W3;\n     END;\n  IF W1=\"VOLFLAG\" THEN DO;\n     IF W2=\"CANDIDATE\" & SAVEI=\"\" & ,\n        (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" /* \"LEFT(SAVED,44) SAVEVOL \"CANDIDATE */\";\n     OCATPTR=OCATPTR+1;\n     REMLIST=REMLIST SAVED SAVEVOL\n                END;\n     IF W2=\"CANDIDATE\" & SAVEI\u00ac=\"\" & ,\n        (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" /* \"LEFT(SAVEI,44) SAVEVOL \"CANDIDATE */\";\n     OCATPTR=OCATPTR+1;\n     REMLIST=REMLIST SAVEI SAVEVOL\n                END;\n     IF W2=\"PRIME\" & SAVEI=\"\" & ,\n        (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" /* \"LEFT(SAVED,44) SAVEVOL \"PRIME */\";\n     OCATPTR=OCATPTR+1;\n                END;\n     IF W2=\"PRIME\" & SAVEI\u00ac=\"\" & ,\n        (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" /* \"LEFT(SAVEI,44) SAVEVOL \"PRIME */\";\n     OCATPTR=OCATPTR+1;\n                END;\n     END;\n  IF W2=\"VOLFLAG\" THEN DO;\n     IF W3=\"CANDIDATE\" & SAVEI=\"\" & ,\n        (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" /* \"LEFT(SAVED,44) SAVEVOL \"CANDIDATE */\";\n     OCATPTR=OCATPTR+1;\n     REMLIST=REMLIST SAVED SAVEVOL\n                END;\n     IF W3=\"CANDIDATE\" & SAVEI\u00ac=\"\" & ,\n        (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" /* \"LEFT(SAVEI,44) SAVEVOL \"CANDIDATE */\";\n     OCATPTR=OCATPTR+1;\n     REMLIST=REMLIST SAVEI SAVEVOL\n                END;\n     IF W3=\"PRIME\" & SAVEI=\"\" & ,\n        (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" /* \"LEFT(SAVED,44) SAVEVOL \"PRIME */\";\n     OCATPTR=OCATPTR+1;\n                END;\n     IF W3=\"PRIME\" & SAVEI\u00ac=\"\" & ,\n        (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" /* \"LEFT(SAVEI,44) SAVEVOL \"PRIME */\";\n     OCATPTR=OCATPTR+1;\n                END;\n     END;\nEND;\nCTR=WORDS(REMLIST);\nDO I = 1 TO CTR BY 2;\n   RDSN=WORD(REMLIST,I);\n   RVOL=WORD(REMLIST,I+1);\n   OCAT.OCATPTR=\" ALTER\" RDSN \"-\";\n   OCATPTR=OCATPTR+1;\n   OCAT.OCATPTR=\"         RVOL(\"RVOL\") FILE(\"RVOL\")\";\n   OCATPTR=OCATPTR+1;\nEND;\n\"EXECIO * DISKW OCAT (FINIS STEM OCAT.\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FIXCAT2": {"ttr": 3861, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\x06?\\x00\\x93\\x06?\\x157\\x00\\x06\\x00\\t\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-03-04T00:00:00", "modifydate": "1993-03-04T15:37:00", "lines": 6, "newlines": 9, "modlines": 3, "user": "TECH110"}, "text": "//LISTCAT  JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH104\n//S EXEC PGM=IDCAMS,REGION=7M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD DSN=TECH104.LISTCAT.FIX,DISP=SHR\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FIXCLAS1": {"ttr": 3863, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x91&?\\x00\\x91&?\\x10V\\x00\\x0e\\x00\\x0c\\x00\\n\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1991-09-20T00:00:00", "modifydate": "1991-09-20T10:56:00", "lines": 14, "newlines": 12, "modlines": 10, "user": "TECH110"}, "text": "//FIXCLASS JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=TECH110\n//* DATACLAS ALTERATION FOR AN EXISTING DATASET\n//S EXEC PGM=FDRCOPY,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSPRIN1 DD SYSOUT=*\n//* VOLSER IS INPUT VOLSER\n//DISK1    DD UNIT=SYSDA,VOL=SER=SMSSM6,DISP=OLD\n//TAPE1    DD UNIT=SYSDA,VOL=SER=SMSSM6,DISP=OLD\n//SYSIN DD *\n MOVE TYPE=DSF,RECAT\n SELECT NVOL=SMS*,DSN=SYS1.ZEKE.V4R0M0.ISPPLIB,DATACLAS=PANEL\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FIXINDEX": {"ttr": 4097, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93\\x05O\\x00\\x93\\x05O\\x18\"\\x00s\\x00u\\x00\\x15\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-02-23T00:00:00", "modifydate": "1993-02-23T18:22:00", "lines": 115, "newlines": 117, "modlines": 21, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCLG\n//C.SYSIN  DD *\nRBA      TITLE 'ADDRESSED RBA ACCESS TO KSDS'\nFIXINDEX CSECT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX00      EQU   X'00'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nFIXINDEX AMODE 24\nFIXINDEX RMODE 24\n         SAVE  (14,12),,RBARESET*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING FIXINDEX,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         OPEN  (KSDSACB,,OUTPUT,(OUTPUT))\nLOOP     GET   RPL=KSDSRPL\n         PUT   OUTPUT,INPUT\n         B     LOOP\nEODAD    CLOSE (KSDSACB,,OUTPUT)\n         SLR   RF,RF\nRETURN   L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nKSDSACB  ACB   AM=VSAM,DDNAME=KSDS,MACRF=(ADR,SEQ,IN),EXLST=KSDSEXL\nKSDSRPL  RPL   ACB=KSDSACB,AREA=INPUT,AREALEN=500,                   XXX\n               OPTCD=(ADR,SEQ)\nKSDSEXL  EXLST EODAD=EODAD\nOUTPUT   DCB   DDNAME=OUTPUT,MACRF=(PM),DSORG=PS\nINPUT    DC    500C' '\n         LTORG\n         END\n/*\n//G.KSDS    DD DSN=PMCD.X.AVAIL.DISTRO.FILE,DISP=SHR\n//G.SYSUDUMP DD SYSOUT=*\n//G.OUTPUT DD DSN=TECH110.KSDS.OUTPUT,DISP=(NEW,CATLG),\n//  LRECL=500,RECFM=FB,SPACE=(CYL,(1,1))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FIXLISTC": {"ttr": 4100, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1d\\x00\\x00\\x00\\x93\\x00/\\x00\\x93\\x06\\x0f\\x13P\\x00F\\x00\\x0c\\x00?\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.29", "flags": 0, "createdate": "1993-01-02T00:00:00", "modifydate": "1993-03-01T13:50:00", "lines": 70, "newlines": 12, "modlines": 63, "user": "TECH110"}, "text": "/* REXX */\nNVOL=\"VSAM01 VSAM04 VSAM05 VSAM07 VSAM23\";\n\"ALLOC F(CAT) DA('TECH110.LISTCAT') SHR\";\n\"ALLOC F(OCAT) DA('TECH110.LISTCAT.FIX') OLD\";\nOCATPTR=1;\n\"EXECIO * DISKR CAT (FINIS STEM CAT.\";\nDO I = 1 TO CAT.0;\n  CAT.I=TRANSLATE(CAT.I,\" \",\"-\");\n  PARSE VAR CAT.I W1 W2 W3 W4 W5 . ;\n  IF W1=\"0CLUSTER\" | W1=\"0AIX\" THEN DO;\n      SAVEC=W2;\n      SAVED=\"\";\n      SAVEI=\"\";\n      END;\n  IF W1=\"0DATA\" THEN DO;\n      SAVED=W2;\n      END;\n  IF W1=\"0INDEX\" THEN DO;\n      SAVEI=W2;\n      END;\n  IF W1=\"VOLSER\" THEN DO;\n     SAVEVOL=W2;\n     END;\n  IF W2=\"VOLSER\" THEN DO;\n     SAVEVOL=W3;\n     END;\n  IF W1=\"DEVTYPE\" THEN DO;\n     IF W2=\"X'3010200F'\" THEN W2=\"3390\";\n       ELSE W2=\"3380\";\n     SAVEDEV=W2;\n     END;\n  IF W2=\"DEVTYPE\" THEN DO;\n     IF W3=\"X'3010200F'\" THEN W3=\"3390\";\n       ELSE W3=\"3380\";\n     SAVEDEV=W3;\n     END;\n  IF W1=\"VOLFLAG\" THEN DO;\n     IF W2=\"CANDIDATE\" & SAVEI=\"\" & ,\n        SAVEDEV=\"3380\" & (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" ALTER\" SAVED \"RVOL(\"SAVEVOL\") FILE(\"SAVEVOL\")\";\n     OCATPTR=OCATPTR+1;\n     OCAT.OCATPTR=\" ALTER\" SAVED \"AVOL(VSAM05) FILE(VSAM05)\";\n     OCATPTR=OCATPTR+1;\n                END;\n     IF W2=\"CANDIDATE\" & SAVEI\u00ac=\"\" & ,\n        SAVEDEV=\"3380\" & (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" ALTER\" SAVEI \"RVOL(\"SAVEVOL\") FILE(\"SAVEVOL\")\";\n     OCATPTR=OCATPTR+1;\n     OCAT.OCATPTR=\" ALTER\" SAVEI \"AVOL(VSAM06) FILE(VSAM06)\";\n     OCATPTR=OCATPTR+1;\n                END;\n     END;\n  IF W2=\"VOLFLAG\" THEN DO;\n     IF W3=\"CANDIDATE\" & SAVEI=\"\" & ,\n        SAVEDEV=\"3380\" & (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" ALTER\" SAVED \"RVOL(\"SAVEVOL\") FILE(\"SAVEVOL\")\";\n     OCATPTR=OCATPTR+1;\n     OCAT.OCATPTR=\" ALTER\" SAVED \"AVOL(VSAM08) FILE(VSAM08)\";\n     OCATPTR=OCATPTR+1;\n                END;\n     IF W3=\"CANDIDATE\" & SAVEI\u00ac=\"\" & ,\n        SAVEDEV=\"3380\" & (WORDPOS(SAVEVOL,NVOL)\u00ac=0) THEN DO;\n     OCAT.OCATPTR=\" ALTER\" SAVEI \"RVOL(\"SAVEVOL\") FILE(\"SAVEVOL\")\";\n     OCATPTR=OCATPTR+1;\n     OCAT.OCATPTR=\" ALTER\" SAVEI \"AVOL(VSAM15) FILE(VSAM15)\";\n     OCATPTR=OCATPTR+1;\n                END;\n     END;\nEND;\n\"EXECIO * DISKW OCAT (FINIS STEM OCAT.\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FIXOUT1": {"ttr": 4102, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92%\\x1f\\x00\\x92%\\x1f\\x12\\x18\\x00\\x10\\x00\\x10\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-09-07T00:00:00", "modifydate": "1992-09-07T12:18:00", "lines": 16, "newlines": 16, "modlines": 0, "user": "TECH110"}, "text": "/* REXX */\nADDRESS \"TSO\";\nRENAME 'SYSC.ANOMVS.V1R1M0.SEZLCL1' ,\n  'SYSS.ANOMVS.V1R1M0.SEZLCL1'\nRENAME 'SYSC.ANOMVS.V1R1M0.SEZLCL2' ,\n  'SYSS.ANOMVS.V1R1M0.SEZLCL2'\nRENAME 'SYSC.ANOMVS.V1R1M0.SEZLINST' ,\n  'SYSS.ANOMVS.V1R1M0.SEZLINST'\nRENAME 'SYSC.ANOMVS.V1R1M0.SEZLMSG' ,\n  'SYSS.ANOMVS.V1R1M0.SEZLMSG'\nRENAME 'SYSC.ANOMVS.V1R1M0.SEZLPN1' ,\n  'SYSS.ANOMVS.V1R1M0.SEZLPN1'\nRENAME 'SYSC.ANOMVS.V1R1M0.SEZLPN2' ,\n  'SYSS.ANOMVS.V1R1M0.SEZLPN2'\nRENAME 'SYSC.ANOMVS.V1R1M0.SEZLSRC' ,\n  'SYSS.ANOMVS.V1R1M0.SEZLSRC'\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FIXOUT2": {"ttr": 4104, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92%\\x1f\\x00\\x92%\\x1f\\x12(\\x00\\x04\\x00\\x10\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-09-07T00:00:00", "modifydate": "1992-09-07T12:28:00", "lines": 4, "newlines": 16, "modlines": 0, "user": "TECH110"}, "text": "/* REXX */\nADDRESS \"TSO\";\n\"RENAME 'SYSC.ANOMVS.V1R1M0.SEZLSRC'\" || \" \" || ,\n  \"'SYST.ANOMVS.V1R1M0.SEZLSRC'\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FIXU1": {"ttr": 4106, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\\x00?\\x00\\x93\\x00?\\x05B\\x00\\x07\\x00\\x07\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-01-03T00:00:00", "modifydate": "1993-01-03T05:42:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "TECH110"}, "text": "/* REXX */\n\"ALLOC F(CCDATA) DA('TECH110.TEST.CCSCAN') SHR\";\n\"EXECIO * DISKR CCDATA (FINIS STEM CC.\";\nDO I = 1 TO CC.0;\n CCOUT.I = CC.I;\n IF POS(\"VOLUMES\",CC.I)\u00ac=0 | POS(\"VOL\",CC.I)\u00ac=0 THEN DO;\nEND;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FOCUSCMD": {"ttr": 4108, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x00\\x00\\x944/\\x00\\x95\\x12\\x8f\\x12T\\x00$\\x00@\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1994-12-08T00:00:00", "modifydate": "1995-05-08T12:54:00", "lines": 36, "newlines": 64, "modlines": 0, "user": "TECH110"}, "text": "SET ALL=PASS\nSET ASNAMES=ON\nJOIN CLEAR *\n-RUN\n-* *\n-TYPE RETCODE : &RETCODE\n-IF &RETCODE GE 8 GOTO ABN_RETCODE;\n-* *\nSET SQLENGINE=DB2\nSQL SET AUTOCLOSE ON FIN\nSQL PREPARE DB2VOUT FOR\n  SELECT DATE,WEEKDAY,AVG(MEAN_PROC_UTIL),AVG(VAR_PROC_UTIL),\n         MONTH(DATE)\n  FROM BUILD.TCAPAPAF WHERE DOMAIN='SYSTEM1' AND\n     WEEKDAY\u00ac='Sat' AND WEEKDAY\u00ac='Sun'\n  GROUP BY DATE,WEEKDAY\n  ORDER BY DATE\nEND\n-*\n?FF DB2VOUT\nDEFINE FILE DB2VOUT\nPROCSTD = SQRT(E04)\nEND\nTABLEF FILE DB2VOUT\nHEADING CENTER\n \"Weekday Processor Utilization Summary; Produced on &DATE\"\nPRINT E01 AS 'Date'\n      E02 AS 'Weekday'\n      COMPUTE PROCLO = E03 - PROCSTD; AS 'Processor Util Low'\n      COMPUTE PROCHI = E03 + PROCSTD; AS 'Processor Util High'\nEND\n-TYPE RETCODE : &RETCODE\n-IF &RETCODE GE 8 GOTO ABN_RETCODE;\n-EXIT\n-ABN_RETCODE\n-QUIT FOCUS(&RETCODE)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FOCUSJCL": {"ttr": 4110, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x944/\\x00\\x95\\x12\\x8f\\x11C\\x00$\\x00/\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-12-08T00:00:00", "modifydate": "1995-05-08T11:43:00", "lines": 36, "newlines": 47, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//M297A0A2 EXEC PGM=FOCUS\n//SYSPRINT DD SYSOUT=*\n//OFFLINE  DD SYSOUT=*,\n//            DCB=(RECFM=FBA,LRECL=143,BLKSIZE=3990)\n//MASTER   DD DSN=SYSS.FOCUS.V6R8M0.MASTER.DATA,DISP=SHR\n//HOLDMAST DD DSN=NULLFILE,DISP=SHR\n//FOCEXEC  DD DSN=TECH110.USER.CNTLLIB,DISP=SHR\n//         DD DSN=SYSS.FOCUS.V6R8M0.FOCEXEC.DATA,DISP=SHR\n//FOCLIB   DD DSN=SYSS.FOCUS.V6R8M0.FOCSQL.LOAD,DISP=SHR\n//FOCSQL   DD DSN=SYSS.FOCUS.V6R8M0.FOCSQL.DATA,DISP=SHR\n//USERLIB  DD DSN=SYSS.FOCUS.V6R8M0.FUSELIB.LOAD,DISP=SHR\n//         DD DSN=SYS1.FOCUS.V6R8M0.LOAD,DISP=SHR\n//         DD DSN=SYSS.FOCUS.V6R8M0.FOCSQL.LOAD,DISP=SHR\n//ERRORS   DD DSN=SYSS.FOCUS.V6R8M0.ERRORS.DATA,DISP=SHR\n//TRFLIB   DD DSN=SYSS.FOCUS.V6R8M0.TRF.DATA,DISP=SHR\n//FOCSORT  DD UNIT=SMS,SPACE=(CYL,(1,1),RLSE)\n//S001WK01 DD UNIT=SMS,SPACE=(CYL,(1,1))\n//S001WK02 DD UNIT=SMS,SPACE=(CYL,(1,1))\n//S001WK03 DD UNIT=SMS,SPACE=(CYL,(1,1))\n//S001WK04 DD UNIT=SMS,SPACE=(CYL,(1,1))\n//S001WK05 DD UNIT=SMS,SPACE=(CYL,(1,1))\n//S001WK06 DD UNIT=SMS,SPACE=(CYL,(1,1))\n//FOCHOLD  DD UNIT=SMS,SPACE=(CYL,(1,1),RLSE)\n//FOC$HOLD DD UNIT=SMS,SPACE=(CYL,(1,1),RLSE)\n//SYSIN    DD *\n  TSO SQL SET OPTIMIZATION ON\n  SET HIPERFOCUS = ON\n  SET EXTSORT = ON\n  SET AUTOTABLEF = ON\n  SET FOCSAM = OLD\n  OFFLINE\n  EX FOCUSCMD\n  FIN\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FRAGINDX": {"ttr": 4112, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x00\\x00\\x92\"?\\x00\\x92\"?\\x16S\\x00\\x1c\\x00\\x0c\\x00\\x16\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1992-08-10T00:00:00", "modifydate": "1992-08-10T16:53:00", "lines": 28, "newlines": 12, "modlines": 22, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S1 EXEC PGM=IDCAMS,REGION=6M\n//*COMMENT FRAGMENTATION INDEX REPORT\n//SYSPRINT DD SYSOUT=*\n//OUTPUT   DD DSN=&&DCOLLECT,DISP=(NEW,PASS),\n//  DATACLAS=DATAPS,LRECL=264,RECFM=VB\n//SYSIN DD *\n  DCOLLECT OUTFILE(OUTPUT) -\n        NOD VOL(*)\n/* END\n//S2 EXEC PGM=SORT,REGION=6M\n//*COMMENT SORT FRAGMENTATION REPORT\n//SYSPRINT DD SYSOUT=*\n//SORTIN   DD DSN=&&DCOLLECT,DISP=(OLD,DELETE)\n//SORTOUT  DD DSN=&&SORTFRAG,DISP=(NEW,PASS),DATACLAS=DATAPS\n//SYSOUT   DD SYSOUT=*\n//SYSIN    DD *\n  SORT FIELDS=(53,4,D),FORMAT=BI,DYNALLOC=(SYSDA,1)\n  OUTREC FIELDS=(1:1,4,5:29,6)\n/*\n//S3 EXEC PGM=IKJEFT01,REGION=6M,PARM='%SLCTFRAG'\n//*COMMENT BACKUP JOB SELECTION\n//SYSPROC  DD DSN=TECH110.USER.CNTLLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//INPUT    DD DSN=&&SORTFRAG,DISP=(OLD,DELETE)\n//SYSTSIN  DD DUMMY\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FRCABTRM": {"ttr": 4114, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\x03\\x9f\\x00\\x95\\x05/\\x14\"\\x01\\xc6\\x01\\xc6\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-02-08T00:00:00", "modifydate": "1995-02-21T14:22:00", "lines": 454, "newlines": 454, "modlines": 0, "user": "TECH110"}, "text": "//TECH110M JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n//S EXEC ASMHCL\n//C.SYSLIB DD\n// DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN DD *\nABENDWTO TITLE 'PRODUCTION JOB ABEND PROCESSOR'\nABENDWTO CSECT ,\n         SYSSTATE ASCENV=P PRIMARY ASC MODE\nABENDWTO AMODE 31\nABENDWTO RMODE 24\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         BAKR  RE,0 SAVE CALLERS STATUS ON LINKAGE STACK RETRG IS R14\n         LA    RA,0(,RF) SETUP ADDRESSING REGS\n         USING ABENDWTO,RA\n         L     R0,=A(WORKLEN)\n         LR    R1,R0 MAXREQ SIZE\n         STORAGE OBTAIN,LENGTH=((0),(1)),LOC=(BELOW,ANY)  WORKAREA\n         LA    RD,0(,R1) PTR TO MY SAVEAREA\n         USING WORKAREA,RD\n         MVC   SAVEAREA+4(4),=C'F1SA' INDICATE REGS SAVED ON STACK\n         USING PSA,R0\n         L     R3,PSATOLD TCB\n         DROP  R0\n         USING TCB,R3\n         L     R2,TCBTIO TIOT\n         USING TIOT1,R2\n         MVC   JOBNAME(8),TIOCNJOB SAVE JOBNAME\n         SLR   R4,R4\n         ICM   R4,7,TCBJSCBB JSCB\n         DROP  R3\n         USING IEZJSCB,R4\n         SLR   R5,R5\n         ICM   R5,7,JSCSCTP TTR OF CURRENT SCT\n         LR    RF,R5 SAVE FOR SCT SCAN LATER\n         L     R7,JSCBJCT JCT PER JOB\n         USING INSMSCT,R5\n         USING INJMJCT,R7\n         LA    R5,16(,R5) BYPASS QMGR PREFIX\n         LA    R7,16(,R7) BYPASS QMGR PREFIX\n         SLR   R6,R6\n         ICM   R6,7,SCTXBTTR SCTX\n         DROP  R5 , R5 IS CURRENT SCT PTR; RF IS PRIOR TO ADJUSTMENT\n         USING SCTXIN,R6\n         LA    R6,16(,R6) BYPASS QMGR PREFIX\n         CLI   SCTXPARM,X'00' ANY PARM ON EXEC STMT\n         BE    TERMEXIC NO, OLD STYLE CALL; FORCE ABEND\n         CLC   =C'FAILRC',SCTXPARM VALIDITY CHECK\n         BNE   PARMERR NG\n         CLI   SCTXPARM+6,C'0' SIMPLE VALID CHECK\n         BL    PARMERR NG\n         CLI   SCTXPARM+7,C'0' SIMPLE VALID CHECK\n         BL    PARMERR NG\n         CLI   SCTXPARM+8,X'00' MUST BE\n         BNE   PARMERR NG\n         PACK  DWORK1(8),SCTXPARM+6(2) CONVERT TO BINARY\n         CVB   R0,DWORK1 AND THEN SAVE\n         ST    R0,PARMRC SAVE HERE\n         DROP  R6\n         SLR   R8,R8 ACQUIRE JOBS FIRST SCT\n         ICM   R8,7,JCTSDKAD SVA OF FIRST SCT; FORWARD CHAIN\nSCTSCAN  LA    R8,16(,R8) SKIP QMGR PREFIX\n         USING INSMSCT,R8\n         CLM   RF,7,SCTANSCT IS THIS PREVIOUS STEP TO US\n         BE    CHECKRC YES; GO CHECK RETURN CODES\n         ICM   R8,7,SCTANSCT NEXT SCT IN CHAIN\n         BNZ   SCTSCAN CONTINUE\n         WTO   TEXT=ABMSG5,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 24,DUMP,STEP,USER , SHOULD NOT OCCUR\nCHECKRC  SLR   R6,R6\n         ICM   R6,7,SCTXBTTR SCTX\n         USING SCTXIN,R6\n         LA    R6,16(,R6) BYPASS QMGR PREFIX\n         ICM   R0,15,SCTXABCC DID THIS STEP ABEND\n         BNZ   RESTART YES\n         DROP  R6\n         CLC   SCTSEXEC(2),PARMRC+2 COMPARE RETURN CODES\n         BL    EXIT SUCCESSFUL EXECUTION\n         OI    FLAGS,X'80' INDICATE CC FAILURE\nRESTART  LA    R9,TIOELNGH PTR TO DD ENTRIES\n         MVC   ABENDSTP(8),SCTSNAME SAVE STEP NAME\n         CLI   ABENDSTP,C' ' ANY NAME\n         BNE   FILLPST YES\n         MVC   ABENDSTP(8),=CL8'????????'\nFILLPST  MVC   ABENDPST(8),SCTSCLPC SAVE NAME OF STEP CALLED PROC\n         CLI   ABENDPST,C' ' ANY NAME\n         BNE   FILLPGM YES\n         MVC   ABENDPST(8),=CL8'????????'\nFILLPGM  MVC   ABENDPGM(8),SCTPGMNM SAVE PROGRAM NAME\nTIOTLOOP SLR   RB,RB WORK\n         ICM   RB,1,0(R9) ENTRY LEN\n         BZ    TERMEXIT END OF TIOT DD ENTRIES\n         CLC   TIOEDDNM-TIOELNGH(4,R9),=C'SAVE' SAVE REQUIRED\n         BE    SAVEDDNM YES\nTIOTNEXT LA    R9,0(RB,R9) NEXT ENTRY\n         B     TIOTLOOP CONTINUE\nSAVEDDNM MVC   DDNAME(8),TIOEDDNM-TIOELNGH(R9) SAVE THIS DDNAME\n         NI    FLAGS,X'FF'-X'60' RESET EOV SCAN FLAGS\n         L     RC,=A(MODELDCB) PTR\n         MVC   INPUTDCB(DCBLEN),0(RC)    POSITION BELOW LINE DCB\n         LA    RC,INPUTDCB MAP\n         USING IHADCB,RC\n         MVC   DCBDDNAM(8),DDNAME\n         MVC   EXLSTL(8),EXLSTM POSITION EXLST\n         LA    R0,JFCB PER EXLST REQ\n         STCM  R0,7,EXLSTL+1 ...\n         MVC   EODADL(4),EODADM POSITION EODAD EXIT\n         LA    R0,EODADL 24 BIT PTR\n         STCM  R0,7,DCBEODA ...\n         LA    R0,EXLSTL UPDATE DCB WITH EXLST PTR\n         STCM  R0,7,DCBEXLSA ...\n         MVC   RDJFCBL(RDJFCBML),RDJFCBM POSITION RDJFCB PARAM LIST\n         RDJFCB ((RC)),MF=(E,RDJFCBL)\n         LTR   RF,RF CHECK\n         BNZ   FRDJFCB ...\n         LA    RF,JFCB CHECK DSNAME\n         USING INFMJFCB,RF\n         TM    JFCBIND2,JFCTEMP TEMP DATASET\n         BNO   TIOTNEXT NO, SKIP THIS FILE\n         DROP  RF\n         OPEN  ((RC),INPUT),MODE=31 , FILL DEB\n         LTR   RF,RF CHECK\n         LR    RF,RC DCB PTR\n         BNZ   FOPEN   ...\n         TM    DCBOFLGS,X'10' OPEN SUCCESSFUL\n         BZ    FOPEN NO\n         XC    TRACKSUM,TRACKSUM TOTAL TRACK COUNT\nEOVLOOP  TM    FLAGS,X'20' EODAD ACTIVE\n         BO    EOVCLOSE YES, TERM SCAN\n         SLR   RB,RB WORK\n         ICM   RB,7,DCBDEBA DEB PTR\n         USING DEBBASIC,RB\n         TM    DEBDEBID,X'0F' VERIFY THIS IS A DEB\n         BNO   FDEB LOGIC ERROR\n         SLR   RF,RF EXTENT COUNT\n         IC    RF,DEBNMEXT EXTENTS COUNT\n         LTR   RF,RF VALIDATE\n         BZ    FDEB ERROR\n         LA    RB,32(,RB) PTR TO DASD SECTION\n         DROP  RB\n         USING DEBDASD,RB\n         SLR   RE,RE SUM UP 3390 TRACKS REQUIRED\n         OI    FLAGS,X'40' WERE SCANNING DEB NOW\nDEBLOOP  AH    RE,DEBNMTRK TRACK COUNT PER EXTENT\n         LA    RB,16(,RB) LOOP\n         BCT   RF,DEBLOOP ...\n         DROP  RB\n         USING DEBACSMD,RB\n         L     RF,TRACKSUM ACCUM ACROSS ALL VOLS OF MULTIVOL FILE\n         AR    RF,RE ...\n         ST    RF,TRACKSUM SAVE TOTAL TRACK COUNT\n         CLC   DEBVOLSQ+1(1),DEBVOLNM+1 AT END OF VOLUMES\n         BNL   EOVCLOSE YES\n         FEOV  ((RC)) EOV WILL UPDATE NEXT VOLS EXTENTS\n         B     EOVLOOP LOOP THROUGH ALL VOLUMES\n         DROP  RB\nEOVCLOSE MVC   OUTRECFM+6(1),DCBRECFM COPY RECFM FROM INPUT TO SVC99\n         MVC   OUTLRECL+6(2),DCBLRECL COPY LRECL FROM INPUT TO SVC99\n         NI    FLAGS,X'FF'-X'60' RESET EOV SCAN FLAGS\n         CLOSE ((RC)),MODE=31 , CLOSE AFTER EOV PROCESSING\n         L     RF,=A(PFREEP1) SWITCH TO 24 BIT MODE\n         L     RF,0(,RF)     SWITCH TO 24 BIT MODE\n         BASSM R3,RF ...\n         B     TRKSUM CONTINUE\nFREEP1   FREEPOOL ((RC)) , RELEASE SYSTEM ACQUIRED BUFFER POOL\n         BSM   R0,R3 RESTORE ...\nTRKSUM   L     R1,TRACKSUM ROUND TRACK SUM UP TO MULTI OF 8\n         LA    R1,7(,R1) ...\n         SRL   R1,3\n         SLL   R1,3\n         CH    R1,=H'3200' TRK CTR GT THAN THIS\n         BNL   VLCNT8 VOLCNT OF 8\n         CH    R1,=H'1600' TRK CTR GT THAN THIS\n         BNL   VLCNT4 VOLCNT OF 4\n         CH    R1,=H'800' TRK CTR GT THAN THIS\n         BNL   VLCNT2 VOLCNT OF 1\n         LA    R0,1 VOLC\n         STC   R0,OUTVOLC+6 ...\n         B     STORSPAC CONTINUE\nVLCNT2   LA    R0,2 VOLC\n         STC   R0,OUTVOLC+6 ...\n         SRL   R1,1 DIVIDE TRACK COUNT BY 2\n         B     STORSPAC CONTINUE\nVLCNT4   LA    R0,4 VOLC\n         STC   R0,OUTVOLC+6 ...\n         SRL   R1,2 DIVIDE TRACK COUNT BY 4\n         B     STORSPAC CONTINUE\nVLCNT8   LA    R0,8 VOLC\n         STC   R0,OUTVOLC+6 ...\n         SRL   R1,3 DIVIDE TRACK COUNT BY 8\nSTORSPAC STCM  R1,7,OUTPRIM+6 STORE IN DYNALLOC SPACE OUTPUT PARM\n         LA    RF,JFCB CHECK DSNAME\n         USING INFMJFCB,RF\n         MVC   OUTDSN+6(44),=CL44'RESTART.' MOVE RESTART HLQ TO DSN\n         MVC   OUTDSN+14(8),JOBNAME POSITION JOBNAME\n         LA    R1,OUTDSN+15 LOOK FOR NEXT POSITION\nSTAMP1   CLI   0(R1),C' ' SCAN\n         BE    POSTIME GO POSITION TIMESTAMP\n         LA    R1,1(,R1) NEXT\n         B     STAMP1 ...\nPOSTIME  MVC   0(2,R1),=C'.D' START DATE AND TIME\n         MVC   2(14,R1),JFCBDSNM+3 TIMESTAMP\n         LA    RE,JFCBDSNM+43 SCAN BACKWARDS LOOKING FOR LASTQUAL\nQUALSCAN CLI   0(RE),C'.' SCAN BACKWARDS\n         BE    QUALPER YES\n         BCT   RE,QUALSCAN LOOP\nQUALPER  MVC   16(8,R1),1(RE) MOVE TO NEW DSNAME\n         MVC   LOGDSN1(8),1(RE) FOR MESSAG TO OPER\n         MVC   LOGDSN2(44),OUTDSN+6 ...\n         LA    RE,OUTDSN+49 SCAN BACKWARDS TO DETRMINE TRUE DSNLEN\nLOOPDLEN CLI   0(RE),C' ' END\n         BNE   CALCDLEN GO CALC LEN\n         BCT   RE,LOOPDLEN LOOP\nCALCDLEN LA    R1,OUTDSN+5 ADJUSTED DSN START\n         SLR   RE,R1 HAVE TRUE LEN NOW\n         STCM  RE,3,OUTDSN+4 SAVE IN SVC99 PARMLIST\n         DROP  RF\n         XC    OUTRB+2(2),OUTRB+2   CLEAR\n         XC    OUTRB+4(4),OUTRB+4   CLEAR\n         XC    OUTRB+12(8),OUTRB+12   CLEAR\n         MVC   ABMSG4P(44),OUTDSN+6 SAVE DSN FOR MSG\n         LA    R1,OUTRBPTR POINT TO SVC 99 PARM\n         DYNALLOC , REQUEST SVC 99 SERVICES\n         LTR   RF,RF FAILURE\n         BNZ   FSVC99 YES\n         OPEN  ((RC),INPUT),MODE=31 , FILL DEB\n         LTR   RF,RF CHECK\n         LR    RF,RC DCB PTR\n         BNZ   FOPEN   ...\n         TM    DCBOFLGS,X'10' OPEN SUCCESSFUL\n         BZ    FOPEN NO\n         MVC   OUTDCBL(OUTDCBML),OUTDCBM MOVE OUTPUT DCB MODEL\n         LA    RC,OUTDCBL OPEN\n         OPEN  ((RC),OUTPUT),MODE=31 , OUTPUT DCB\n         LTR   RF,RF CHECK\n         LR    RF,RC DCB PTR\n         BNZ   FOPEN   ...\n         TM    DCBOFLGS,X'10' OPEN SUCCESSFUL\n         BZ    FOPEN NO\n         LR    RB,RC OUTPUT DCB\n         LA    RC,INPUTDCB RESTORE\n         L     RF,=A(PGETPUT) SWITCH TO 24 BIT MODE\n         L     RF,0(,RF)     SWITCH TO 24 BIT MODE\n         BASSM R3,RF ...\n         B     CLOSGP CONTINUE\nGETPUT   LA    R0,BUFFER PER GET\n         GET   ((RC)),((0)) COPY DATASET\n         LH    R0,DCBLRECL COPY LRECL TO OUTPUT DCB FOR RECFM=U\n         DROP  RC\n         USING IHADCB,RB\n         STH   R0,DCBLRECL ...\n         DROP  RB\n         USING IHADCB,RC\n         LA    R0,BUFFER PER PUT\n         PUT   ((RB)),((0))  ...\n         B     GETPUT LOOP\nEODAD    OI    FLAGS,X'20' EODAD ACTIVE FLAG\n         TM    FLAGS,X'40' ARE WE IN EOV SCAN CODE\n         BO    EOVLOOP YES\n         BSM   R0,R3 RESTORE ...\nCLOSGP   CLOSE ((RB),FREE,(RC),FREE),MODE=31 , RELEASE\n         WTO   TEXT=LOGMSG,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         L     RF,=A(PFREEP2) SWITCH TO 24 BIT MODE\n         L     RF,0(,RF)     SWITCH TO 24 BIT MODE\n         BASSM R3,RF ...\n         B     NTIOT  CONTINUE\nFREEP2   FREEPOOL ((RB)) , RELEASE SYSTEM ACQUIRED BUFFER POOL\n         FREEPOOL ((RC)) , RELEASE SYSTEM ACQUIRED BUFFER POOL\n         BSM   R0,R3 RESTORE ...\nNTIOT    SLR   RB,RB WORK\n         ICM   RB,1,0(R9) ENTRY LEN FOR TIOT\n         B     TIOTNEXT PROCESS NEXT TIOT DD ENTRY\n*ERMEXIC MVC   ABENDJOC(8),JOBNAME INTO OLD MSG\n*        SLR   R0,R0 CLEAR AS PER WTO\n*        WTO   TEXT=ABENDMSC,ROUTCDE=(2),DESC=(11)\nTERMEXIC ABEND 0,DUMP,STEP,USER\nTERMEXIT MVC   ABENDJOB(8),JOBNAME INTO MSG\n         SLR   R0,R0 CLEAR AS PER WTO\n         WTO   TEXT=ABENDMSG,ROUTCDE=(2),DESC=(11)\n         TM    FLAGS,X'80' PRIOR ABEND IN PROGRESS\n         BNO   EXIT YES\n         ABEND 0,,STEP,USER\nEXIT     L     R0,=A(WORKLEN) LEN\n         LR    R1,RD\n         STORAGE RELEASE,ADDR=(1),LENGTH=(0) FREE SAVEAREA\n         SLR   RF,RF RC=0\n         PR    , RESTORE CALLERS STATUS\n         DROP  RC\nPARMERR  WTO   TEXT=ABMSG1,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 28,DUMP,STEP,USER\nFRDJFCB  WTO   TEXT=ABMSG2,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 32,DUMP,STEP,USER\n         USING IHADCB,RF\nFOPEN    MVC   ABMSG3P(8),DCBDDNAM SAVE FOR MSG\n         DROP  RF\n         WTO   TEXT=ABMSG3,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 36,DUMP,STEP,USER\nFDEB     WTO   TEXT=ABMSG2,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 40,DUMP,STEP,USER\nFSVC99   WTO   TEXT=ABMSG4,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         ABEND 44,DUMP,STEP,USER\nDCBABEND OI    FLAGS,X'10' INDICATE DCB ABEND TAKEN\n         STM   RE,R1,TEMPSAVE SAVE SOME REGS\n         WTO   TEXT=ABMSG6,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         LM    RE,R1,TEMPSAVE SAVE SOME REGS\n         SLR   RF,RF CONTINUE\n         BR    RE RETURN\nSYNADX   OI    FLAGS,X'10' INDICATE DCB ABEND TAKEN\n         STM   RE,R1,TEMPSAVE SAVE SOME REGS\n         WTO   TEXT=ABMSG7,ROUTCDE=(11),DESC=(6),MCSFLAG=(HRDCPY)\n         LM    RE,R1,TEMPSAVE SAVE SOME REGS\n         SLR   RF,RF CONTINUE\n         BR    RE RETURN\nOUTDCBM  DCB   DDNAME=OUTPUT,DSORG=PS,MACRF=(PM),BUFNO=32\nOUTDCBML EQU   *-OUTDCBM LEN\nRDJFCBM  RDJFCB 0,MF=L\nRDJFCBML EQU   *-RDJFCBM\nEXLSTM   DC    X'07',AL3(0) JFCB PTR\n         DC    X'91',AL3(DCBABEND) DCB ABEND EXIT\nTRACKSUM DC    F'0' ACCUM TRACK COUNT\nPGETPUT  DC    A(GETPUT) ADDRESS OF AMODE 24 ROUTINE\nPFREEP1  DC    A(FREEP1) ADDRESS OF AMODE 24 ROUTINE\nPFREEP2  DC    A(FREEP2) ADDRESS OF AMODE 24 ROUTINE\nEODADM   B     EODAD EOF FOR SEQ INPUT\nOUTRBPTR DC    A(OUTRB+X'80000000') SVC 99 PARAM LIST\nOUTRB    DC    X'14',AL1(S99VRBAL),X'0000',A(0,OUTTUPL,OUTRBX,0)\nOUTRBX   DC    C'S99RBX',AL1(S99RBXVR),AL1(S99EIMSG+S99EWTP)\n         DC    AL1(0),AL1(0),AL1(S99XWARN),AL1(0)\n         DC    AL4(0),AL4(0),AL4(0),AL4(0),AL4(0),AL4(0)\nOUTTUPL  DC    A(OUTDDN)\n         DC    A(OUTDSN)\n         DC    A(OUTSTAT)\n         DC    A(OUTNDISP)\n         DC    A(OUTADISP)\n         DC    A(OUTTRK)\n         DC    A(OUTPRIM)\n         DC    A(OUTRLSE)\n         DC    A(OUTLRECL)\n         DC    A(OUTVOLC)\n         DC    A(OUTSC)\n         DC    A(OUTDC)\n         DC    A(OUTMC)\n         DC    A(OUTRECFM+X'80000000')\nOUTDDN   DC    0H'0',AL2(DALDDNAM,1,6),C'OUTPUT' DDNAME\nOUTDSN   DC    0H'0',AL2(DALDSNAM,1,*-*),CL44' ' DSN\nOUTSTAT  DC    0H'0',AL2(DALSTATS,1,1),X'04'   DISP=NEW\nOUTNDISP DC    0H'0',AL2(DALNDISP,1,1),X'02'   DISP=CATLG\nOUTADISP DC    0H'0',AL2(DALCDISP,1,1),X'02'   DISP=CATLG\nOUTTRK   DC    0H'0',AL2(DALTRK,0)  TRACK REQUEST\nOUTPRIM  DC    0H'0',AL2(DALPRIME,1,3),AL3(*-*)  PRIMARY SPACEREQ\nOUTRLSE  DC    0H'0',AL2(DALRLSE,0)  RLSE  REQUEST\nOUTLRECL DC    0H'0',AL2(DALLRECL,1,2),AL2(*-*)  LRECL\nOUTVOLC  DC    0H'0',AL2(DALVLCNT,1,1),AL1(*-*)  VOLUME COUNT\nOUTSC    DC    0H'0',AL2(DALSTCL,1,8),C'PREALLOC' STORCLAS\nOUTDC    DC    0H'0',AL2(DALDACL,1,7),C'SMSUSER' DATACLAS\nOUTMC    DC    0H'0',AL2(DALMGCL,1,4),C'TEMP'     MGMTCLAS\nOUTRECFM DC    0H'0',AL2(DALRECFM,1,1),AL1(*-*)  RECFM\nABENDMSC DC    AL2(ABENDMCE-ABENDMSC-2),C'JOB '\nABENDJOC DC    C'XXXXXXXX HAS ABENDED OR HAS TERMINATED WITH A FAILING X\n               RETURN CODE.'\nABENDMCE EQU   *\nABENDMSG DC    AL2(ABENDMSE-ABENDMSG-2),C'JOB '\nABENDJOB DC    C'XXXXXXXX PROCSTEP '\nABENDPST DC    C'XXXXXXXX STEPNAME '\nABENDSTP DC    C'XXXXXXXX PROGRAM '\nABENDPGM DC    C'XXXXXXXX HAS ABENDED OR HAS TERMINATED WITH A FAILING X\n               RETURN CODE.'\nABENDMSE EQU   *\nLOGMSG   DC    AL2(LOGMSGE-LOGMSG-2),C'DATASET &&&&'\nLOGDSN1  DC    C'XXXXXXXX SAVED AS '\nLOGDSN2  DC    CL44' ',C'.'\nLOGMSGE  EQU   *\nABMSG1   DC    AL2(ABMSG1E-ABMSG1-2)\n         DC    C'EXEC JCL STATEMENT PARM IS INVALID.'\nABMSG1E  EQU   *\nABMSG2   DC    AL2(ABMSG2E-ABMSG2-2)\n         DC    C'INTERNAL LOGIC ERROR. NOTIFY TECH SUPPORT.'\nABMSG2E  EQU   *\nABMSG3   DC    AL2(ABMSG3E-ABMSG3-2)\n         DC    C'OPEN FAILURE FOR DDNAME: '\nABMSG3P  DC    CL8' '\nABMSG3E  EQU   *\nABMSG4   DC    AL2(ABMSG4E-ABMSG4-2)\n         DC    C'DYNAMIC ALLOCATION FAILURE FOR DSNAME: '\nABMSG4P  DC    CL44' '\nABMSG4E  EQU   *\nABMSG5   DC    AL2(ABMSG5E-ABMSG5-2)\n         DC    C'ABENDWTO CANNOT BE INVOKED AS THE FIRST STEP OF A JOB'\nABMSG5E  EQU   *\nABMSG6   DC    AL2(ABMSG6E-ABMSG6-2)\n         DC    C'EMPTY DATASET OR DCB RECFM/LRECL/BLKSZ INVALID'\nABMSG6E  EQU   *\nABMSG7   DC    AL2(ABMSG7E-ABMSG7-2)\n         DC    C'EMPTY DATASET OR I/O ERROR READING INPUT DATASET'\nABMSG7E  EQU   *\nFLAGS    DC    X'00' X80 IF CONDCODE FAILURE ELSE ABEND\n*                    X40 EOV DEB SCAN IN PROGRESS\n*                    X20 EOV EODAD PRESENT\n*                    X10 DCB ABEND COND INDICATED\n         LTORG\nMODELDCB DCB   DDNAME=SAVE????,DSORG=PS,MACRF=(GM),EXLST=EXLSTM,       X\n               BUFNO=32,SYNAD=SYNADX\nDCBLEN   EQU   *-MODELDCB\nWORKAREA DSECT\nSAVEAREA DS    9D LINKAGE\nDWORK1   DS    D\nDWORK2   DS    D\nJOBNAME  DS    CL8\nDDNAME   DS    CL8\nTEMPSAVE DS    4F SOME REG SAVE\nJFCB     DS    CL176\nPARMRC   DS    F\nINPUTDCB DCB   DDNAME=SAVE????,DSORG=PS,MACRF=(GM),EXLST=EXLSTM,       X\n               BUFNO=32,SYNAD=SYNADX\nOUTDCBL  DCB   DDNAME=OUTPUT,DSORG=PS,MACRF=(PM),BUFNO=32\nEXLSTL   DC    X'07',AL3(0) JFCB PTR\n         DC    X'91',AL3(DCBABEND) DCB ABEND EXIT\nRDJFCBL  RDJFCB 0,MF=L\nEODADL   B     *-* FILL IN WITH PROPER ADDRESS\nBUFFER   DS    32760C MAX BUFFER\nWORKLEN  EQU   *-WORKAREA\n         IHAPSA\n         IKJTCB\nIEFTIOT1 DSECT\n         IEFTIOT1\n         IEFASCTB\n         IEFAJCTB\n         DSECT\n         IEFJFCBN\n         IEZJSCB\n         IEFSCTX\n         DCBD  DSORG=PS\n         IEZDEB\n         IEFZB4D0\n         IEFZB4D2\n         END\n/*\n//*L.SYSLMOD DD DSN=SYS1.TEST.BATCH.LOADLIB(FRCABTRM),UNIT=,DISP=SHR\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FREEALL": {"ttr": 4358, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x91\\x13O\\x00\\x91\\x13O\\x14G\\x00s\\x00o\\x00\\x07\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-05-14T00:00:00", "modifydate": "1991-05-14T14:47:00", "lines": 115, "newlines": 111, "modlines": 7, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n// DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nFREEALL  CSECT\n* SCAN TIOT AND SET ALL DSAB INUSE BITS ON CAUSING ALL DYNALLOC\n* REQUESTS TO BE TREATED AS IF REGULAR JCL IN TERMS OF TSO/E\n* FREE ALL COMMAND.\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nFREEALL  AMODE 24\nFREEALL  RMODE 24\n         SAVE  (14,12),,FREEALL*&SYSDATE*&SYSTIME\n         LR    RA,RF ADDRESSABILITY\n         USING FREEALL,RA,RB,RC\n         LA    RB,4095(RA)\n         LA    RB,1(RB)\n         LA    RC,4095(RB)\n         LA    RC,1(RC)\n         LR    RF,RD SAVEAREA HOUSEKEEPING\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18F'0'\n         ST    RD,8(RF)\n         ST    RF,4(RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         USING PSA,R0\n         L     R2,PSATOLD\n         DROP  R0\n         USING TCB,R2\n         L     R2,TCBTIO\n         DROP  R2\n         USING TIOT1,R2\n         LA    R3,TIOENTRY\n         DROP  R2\n         USING TIOENTRY,R3\n         SLR   R4,R4 WORK\nLOOPTIOT IC    R4,TIOELNGH\n         LTR   R4,R4 TIOT END\n         BZ    ENDTIOT\n         CLI   TIOEDDNM,C' '\n         BE    SCANTIOT\n         CLI   TIOEDDNM,X'00'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(3),=C'SYS'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(3),=C'ISP'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(3),=C'ISR'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(4),=C'STEP'\n         BE    SCANTIOT\n         CLC   TIOEDDNM(3),=C'JOB'\n         BE    SCANTIOT\n         MVC   DRETDDNM+6(8),=CL8' '\n         LA    RF,8\n         LA    R1,TIOEDDNM+7\nLOOPSIZE CLI   0(R1),C' '\n         BNE   SIZEDDNM\n         BCTR  RF,0\n         BCT   R1,LOOPSIZE\nSIZEDDNM STC   RF,DRETDDNM+5\n         MVC   DRETDDNM+6(8),TIOEDDNM\n         LA    R1,DSVC99P\n         SVC   99\n         TM    DRESP,X'40' INUSE ALREADY OR JCL ALLOC\n         BO    SCANTIOT\n         TM    DRESP,X'08' INUSE ALREADY OR JCL ALLOC\n         BZ    SCANTIOT\n         LA    R1,ASVC99P\n         SVC   99\nSCANTIOT LA    R3,0(R4,R3) NEXT TIOT ENTRY\n         B     LOOPTIOT\nENDTIOT  L     RD,4(RD)\n         RETURN (14,12),RC=0\nASVC99P  DC    0F'0',X'80',AL3(ARB)\nARB      DC    X'1402000000000000'\n         DC    A(ATEXTP),8X'00'\nATEXTP   DC    X'00',AL3(DRETDDNM)\n         DC    X'80',AL3(PERMALLC)\nPERMALLC DC    X'00070000'\nDSVC99P  DC    0F'0',X'80',AL3(DRB)\nDRB      DC    X'1407000000000000'\n         DC    A(DTEXTP),8X'00'\nDTEXTP   DC    X'00',AL3(DRETATTR)\n         DC    X'80',AL3(DRETDDNM)\nDRETDDNM DC    X'000100010008',C'????????'\nDRETATTR DC    X'000C00010001'\nDRESP    DC    X'00' REQUEST RESP HERE\n         LTORG\n         PRINT NOGEN\n         IHAPSA\n         IKJTCB\n         DSECT\n         IEFTIOT1\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(FREEALL),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FS": {"ttr": 4361, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94\\x14?\\x00\\x94\\x14?\\x14X\\x00\\x11\\x00\\r\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-05-23T00:00:00", "modifydate": "1994-05-23T14:58:00", "lines": 17, "newlines": 13, "modlines": 6, "user": "TECH110"}, "text": "/* REXX Full screen TSO command invocation */\nparse arg tsocmd; /* acquire TSO command*/\ndummy = MSG(\"OFF\");\ndummy = OUTTRAP(\"outline.\");\naddress TSO tsocmd;\nif RC < 0 then do;\n   say \"Command not found\";\n   exit 16;\n   end;\n\"ALLOC F(FULLSCR) TRACKS SPACE(1 1) NEW DSORG(PS)\" ,\n    \"LRECL(132) RECFM(F B) BLKSIZE(132)\";\n\"EXECIO * DISKW FULLSCR (STEM outline. FINIS\";\nADDRESS ISPEXEC \"LMINIT DATAID(IDVAR) DDNAME(FULLSCR)\";\nADDRESS ISPEXEC \"BROWSE DATAID(\"IDVAR\")\";\nADDRESS ISPEXEC \"LMFREE DATAID(\"IDVAR\")\";\n\"FREE F(FULLSCR) DELETE\";\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FTP": {"ttr": 4363, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x06_\\x00\\x95\\x06_\\x17\\x19\\x00\\r\\x00\\r\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-03-06T00:00:00", "modifydate": "1995-03-06T17:19:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=FTP\n//SYSPRINT DD SYSOUT=*\n//OUTPUT   DD SYSOUT=*\n//INPUT    DD *\n129.1.4.8\nTECH110\nCD C:\\TEST\nMPUT 'TECH110.USER.CNTLLIB2(*)'\nQUIT\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GDGTEST": {"ttr": 4365, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91)\\x7f\\x00\\x91)\\x7f\\x15I\\x00\\n\\x00\\x14\\x00\\x07\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-10-24T00:00:00", "modifydate": "1991-10-24T15:49:00", "lines": 10, "newlines": 20, "modlines": 7, "user": "TECH110"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IEBGENER\n//SYSUT1 DD DSN=TECH110.USER.CNTLLIB(GDGTEST),DISP=SHR\n//SYSUT2 DD DSN=PCRDT1.VAPSGD00.VP03910R(+1),DISP=(NEW,CATLG),\n//  DCB=(RECFM=FBM,LRECL=80,BLKSIZE=6400),SPACE=(CYL,(1,1),RLSE),\n//  UNIT=SEQDA,LIKE=MODEL.DSCB\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD DUMMY\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GENDUMP": {"ttr": 4367, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x90\"\\x9f\\x00\\x90\"\\x9f\\x16H\\x00\\x1d\\x00!\\x00\\x04\\xe3\\xd6\\xd7\\xc5\\xd9\\xf2@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1990-08-17T00:00:00", "modifydate": "1990-08-17T16:48:00", "lines": 29, "newlines": 33, "modlines": 4, "user": "TOPER2"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//LKED      EXEC  PGM=FDRSARLR,REGION=4M,\n//           PARM='DECK,PRSYSIN'\n//STEPLIB   DD   DSN=SYS3.IDP.MODFDR51,DISP=SHR\n//SYSPRINT  DD   SYSOUT=*\n//OBJIN     DD   DSN=SYS3.IDP.ICLFDR51(SAROBJ),DISP=SHR\n//OUTPUT    DD   DSN=&&SAR,\n//           UNIT=B61,DISP=(NEW,PASS),LABEL=(,NL),\n//           DCB=(LRECL=80,RECFM=FB,BLKSIZE=80)\n//SYSIN     DD *\n  CONSOLE DEVICE=3270\n  CONSOLE UNIT=01F\n  HRDCOPY DEVICE=3203\n  OVERRIDE=Y\n  HRDCOPY UNIT=02F\n  OPERATION REQUEST-DUMP\n  TYPE=FULL\n  OUTPUT TAPE DEVICE-3480,2\n  OUTPUT TAPE UNIT=460,001\n  MODE=D4\n  INPUT DISK DEVICE-3380\n  INPUT DISK UNIT=120\n  VOLUME SERIAL=      ,CPY=Y\n//DOWN EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD DUMMY\n//SYSUT1 DD DSN=&&SAR,DISP=(OLD,DELETE)\n//SYSUT2 DD DSN=SYS3.IDP.ICLFDR51(IPLSAR),DISP=OLD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GENRECAT": {"ttr": 4369, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x95\\x02\\x0f\\x00\\x95\\x02\\x0f\\x12\\x08\\x00\\x16\\x00\\x16\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-01-20T00:00:00", "modifydate": "1995-01-20T12:08:00", "lines": 22, "newlines": 22, "modlines": 2, "user": "TECH110"}, "text": "/* REXX EXEC to generate recatalog IDCAMS statements         */\n\"ALLOC F(OUTP) DSNAME('TECH110.USER.CNTLLIB(GENREC2I)') SHR\";\noutline=1;\ndummy = outtrap(\"recat.\");\n\"LISTC LVL('SYS1.TCPIP') VOL\";\ndummy = outtrap(\"OFF\");\ndo i = 1 to recat.0;\n  if word(recat.i,1)=\"NONVSAM\" then do;\n       dsname=strip(word(recat.i,3));\n       end;\n  if substr(word(recat.i,1),1,6)=\"VOLSER\" then do;\n       wlen=length(word(recat.i,1));\n       volser=strip(substr(word(recat.i,1),wlen-5,6));\n       out.outline=\" DEF NVSAM (NAME(\"dsname\") -\";\n       outline=outline+1;\n       out.outline=\" VOL(\"volser\") DEVT(3390) RECATALOG) -\";\n       outline=outline+1;\n       out.outline=\" CAT(SYS1.MCATSA.CLUSTER)\";\n       outline=outline+1;\n       end;\nend;\n\"EXECIO * DISKW OUTP (STEM OUT. FINIS\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENREST": {"ttr": 4371, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x90\"\\x9f\\x00\\x90\"\\x9f\\x16D\\x00\\x1d\\x00!\\x00\\x03\\xe3\\xd4\\xc9\\xd2\\xc5\\xd4@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-08-17T00:00:00", "modifydate": "1990-08-17T16:44:00", "lines": 29, "newlines": 33, "modlines": 3, "user": "TMIKEM"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//LKED      EXEC  PGM=FDRSARLR,REGION=4M,\n//           PARM='DECK,PRSYSIN'\n//STEPLIB   DD   DSN=SYS3.IDP.MODFDR51,DISP=SHR\n//SYSPRINT  DD   SYSOUT=*\n//OBJIN     DD   DSN=SYS3.IDP.ICLFDR51(SAROBJ),DISP=SHR\n//OUTPUT    DD   DSN=&&SAR,\n//           UNIT=B65,DISP=(NEW,PASS),LABEL=(,NL),\n//           DCB=(LRECL=80,RECFM=FB,BLKSIZE=80)\n//SYSIN     DD *\n  CONSOLE DEVICE=3270\n  CONSOLE UNIT=01F\n  HRDCOPY DEVICE=3203\n  OVERRIDE=Y\n  HRDCOPY UNIT=02F\n  OPERATION REQUEST-RESTORE\n  TYPE=FULL\n  INPUT TAPE DEVICE-3480,2\n  INPUT TAPE UNIT=460,001\n  MODE=D4\n  OUTPUT DISK DEVICE-3380\n  OUTPUT DISK UNIT=120\n  VOLUME SERIAL=      ,CPY=Y\n//DOWN EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD DUMMY\n//SYSUT1 DD DSN=&&SAR,DISP=(OLD,DELETE)\n//SYSUT2 DD DSN=SYS3.IDP.ICLFDR51(IPLSAR),DISP=OLD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GENSAR": {"ttr": 4373, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x90!O\\x00\\x90$\\x7f\\x163\\x00\\x1d\\x00)\\x00\\x1a\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1990-08-02T00:00:00", "modifydate": "1990-09-04T16:33:00", "lines": 29, "newlines": 41, "modlines": 26, "user": "JEFFK"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//LKED      EXEC  PGM=FDRSARLR,REGION=4M,\n//           PARM='DECK,PRSYSIN'\n//STEPLIB   DD   DSN=SYS3.IDP.MODFDR51,DISP=SHR\n//SYSPRINT  DD   SYSOUT=*\n//OBJIN     DD   DSN=SYS3.IDP.ICLFDR51(SAROBJ),DISP=SHR\n//OUTPUT    DD   DSN=&&SAR,\n//           UNIT=SYSDA,DISP=(NEW,PASS),SPACE=(CYL,(1,1)),\n//           DCB=(LRECL=80,RECFM=FB,BLKSIZE=80)\n//SYSIN     DD *\n  CONSOLE DEVICE=3270\n  CONSOLE UNIT=01F\n  HRDCOPY DEVICE=3203\n  OVERRIDE=Y\n  HRDCOPY UNIT=02F\n  OPERATION REQUEST=RESTORE\n  TYPE=FULL\n  INPUT TAPE DEVICE=3480,2\n  INPUT TAPE UNIT=460,001\n  OUTPUT DISK DEVICE=3380\n  MODE=D4\n  OUTPUT DISK UNIT=120\n  VOLUME SERIAL=      ,CPY=Y\n//DOWN EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD DUMMY\n//SYSUT1 DD DSN=&&SAR,DISP=(OLD,DELETE)\n//SYSUT2 DD DSN=SYS3.IDP.ICLFDR51(IPLSAR),DISP=OLD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GRANT": {"ttr": 4375, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x920\\x1f\\x00\\x920/\\x100\\x00\\x01\\x00\\x03\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf6\\xf0\\xf1@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-10-27T00:00:00", "modifydate": "1992-10-28T10:30:00", "lines": 1, "newlines": 3, "modlines": 1, "user": "TECH601"}, "text": "  SELECT RECLENGTH FROM SYSIBM.SYSTABLES WHERE NAME = 'TRAMBLK'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GRANTS": {"ttr": 4609, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x921\\x7f\\x00\\x922_\\x15G\\x00\\x04\\x00\\x04\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-11-12T00:00:00", "modifydate": "1992-11-20T15:47:00", "lines": 4, "newlines": 4, "modlines": 4, "user": "TECH110"}, "text": "GRANT SELECT ON TABLE BUILD.TXRFJOB TO PUBLIC;\nGRANT SELECT ON TABLE BUILD.TXRFFILE TO PUBLIC;\nGRANT SELECT ON TABLE BUILD.TXRFPROC TO PUBLIC;\nGRANT SELECT ON TABLE BUILD.TXRFEXEC TO PUBLIC;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GRSUSER": {"ttr": 4611, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x91\\x08O\\x00\\x91\\x08O\\x165\\x00\\xcb\\x00\\xad\\x006\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1991-03-25T00:00:00", "modifydate": "1991-03-25T16:35:00", "lines": 203, "newlines": 173, "modlines": 54, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS,REFR,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nGRS      TITLE 'GQSCAN SERVICES'\nGRSUSER  CSECT , /* GRSUSER */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nGRSUSER  AMODE 24\nGRSUSER  RMODE 24\n         SAVE  (14,12),,GRSUSER*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING GRSUSER,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         MODESET KEY=ZERO,MODE=SUP\n         SLR   R9,R9 RC\n         L     R0,=A(DWORDS)\n         GETMAIN R,LV=(0)\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING GRSWMAP,RD\n         XC    PARSEPPL(K28),PARSEPPL /* PREP PARAM SCAN */\n         XC    CMDPANS,CMDPANS\n         XC    CMDPECB,CMDPECB\n         LA    R8,PARSEPPL MAP\n         USING PPL,R8\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         MVC   PPLCBUF,CPPLCBUF\n         LA    R0,CMDPECB\n         ST    R0,PPLECB\n         LA    R0,CMDPANS\n         ST    R0,PPLANS\n         L     R0,=A(IKJPARM)\n         ST    R0,PPLPCL\n         DROP  R8\n         CALLTSSR EP=IKJPARS,MF=(E,(R8))\n         LTR   R9,RF\n         BNZ   MAINEXIT\n         L     R4,CMDPANS /* RESPONSE */\n         USING IKJPARMD,R4\n         TM    USERPARM+K6,X80 DSN FOUND\n         BZ    DSNERROR\n         L     R5,USERPARM DSN PTR\n*        TM    USERPARM+K6,X40 DSN IN QUOTES\n*        BZ    NODSNQ    NO\n*        LA    R5,K1(,R5) POSITION DSN PTR PAST FIRST QUOTE\n*NODSNQ  EQU   * *\n         LH    R6,USERPARM+K4 DSN LEN - NEVER INCL QUOTES\n         MVC   GQSCANLX(GQSCANLL),GQSCANL\n         GQSCAN AREA=(GQRESP,K4095),                                   X\n               RESNAME=(QNAME,(R5),(R6),SPECIFIC,K8),MF=(E,GQSCANLX)\n         LR    R9,RF SAVE RC\n         LA    R1,CMDPANS\n         IKJRLSA (R1)\n         DROP  R4\n         LTR   R9,R9 CHEK RC\n         BZ    GQ0\n         CH    R9,=H'8' TOOO MUCH DATA\n         BE    GQ0\n         B     MAINEXIT ERROR\nGQ0      MVC   MSGRESP,=CL24' ' FILLER\n         LA    R7,GQRESP\n         USING RIB,R7\n         L     R4,RIBNRIBE RIBE COUNT RETURNED\n         LTR   R4,R4 CHECK\n         BZ    MAINEXIT\n         LH    R5,RIBVLEN VAR RIB SECTION LEN\n         LA    R7,RIBEND-RIB(R5,R7) /* START OF RIBES */\n         DROP  R7\n         USING RIBE,R7\nDORIBE   TM    RIBESFLG,RIBESTAT RES OWNER\n         BO    ISOWNER YES\nNEXTRIBE LA    R7,RIBEEND-RIBE(,R7) NEXT RIBE\n         BCT   R4,DORIBE LOOP\n         B     MAINEXIT ALL DONE\nISOWNER  MVC   MSGRESP(L'RIBEJBNM),RIBEJBNM OWNER NAME\n         MVC   MSGRESP+L'RIBEJBNM+K2(K9),=CL9'EXCLUSIVE' ASSUME\n         TM    RIBERFLG,RIBETYPE CHECK SHR OR EXCL\n         BZ    ISEXCL OK\n         MVC   MSGRESP+L'RIBEJBNM+K2(K9),=CL9'SHARE'\nISEXCL   LA    R1,MSGRESP\n         LA    R0,K24\n         TPUT  (1),(0)\n         LTR   R9,RF\n         BZ    NEXTRIBE CONTINUE\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         L     R0,=A(DWORDS)\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nDSNERROR LA    R9,K255 DSN NOT FOUND\n         B     MAINEXIT\n         LTORG\nIKJPARM  IKJPARM\nUSERPARM IKJPOSIT DSNAME,UPPERCASE,PROMPT='REQUIRED DSNAME ?'\n         IKJENDP\nGQSCANL  GQSCAN SCOPE=ALL,MF=L\nGQSCANLL EQU    *-GQSCANL\nQNAME    DC    CL8'SYSDSN'\nRNAME    DC    CL44'CICS.V211.LOADLIB'\nGRSWMAP  DSECT\nSAVEAREA DC    18F'0'\nCMDPECB  DC    A(K0)\nCMDPANS  DC    A(K0)\nPARSEPPL DC    (K28)AL1(K0) PARSE PPL\nGQSCANLX GQSCAN SCOPE=ALL,MF=L\nMSGRESP  DC    (K24)C' '\nGQRESP   DC    (K4095)AL1(K0)\nDWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         CVT   DSECT=YES\n         ISGRIB\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(WHOHAS),DISP=SHR,\n//  UNIT=,SPACE=\n//*L.SYSLMOD DD DSN=SYS1.TECH.LPALIB(WHOHAS),DISP=SHR,\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GSY05A": {"ttr": 4615, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x930\\x1f\\x00\\x95\"o\\x15R\\x01\"\\x01\\x1d\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1993-10-28T00:00:00", "modifydate": "1995-08-14T15:52:00", "lines": 290, "newlines": 285, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCL\n//C.SYSIN DD *\nIMG      TITLE 'IMAGING SYSTEM DOWNLOAD PREP'\nIMAGEGEN CSECT ,\n*        FILE=O:\\AIMSYS\\REPORTS\\IN\\???XXXXX.INP\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK26      EQU   26\nK27      EQU   27\nK29      EQU   29\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK133     EQU   133\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nIMAGEGEN AMODE 24\nIMAGEGEN RMODE 24\n         SAVE  (14,12),,IMAGEGEN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING IMAGEGEN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         STCK  CLOCK\n         UNPK  WORK(K7),CLOCK+K2(K4) PROVIDE UNIQUE SERIAL#\n         TR    WORK+K0(K5),HEXCHAR-C'0'\n         MVC   XPRM1+K6(K5),WORK+K0\n         MVC   XPRM2+K29(K5),WORK+K0\n         MVC   CALLSLOG+K21(K5),WORK+K0\n         RDJFCB (INOUT)\n         LTR   RF,RF OKAY\n         BNZ   FRDJFCB\n         MVC   CALLSLOG+K27(K44),JFCB SAVE DSNAME TO BE PROCESS\nOPENLIST OPEN  (INOUT,(UPDAT),BACKUP,(OUTPUT),REPORT,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R8,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         USING IHADCB,R8\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R8\nLOOP     GET   INOUT\n         LR    R2,R1 SAVE RECORD PTR\n         LR    R0,R1 FOR OUTPUT\n         CLI   XPRM1+K3,C'?' STILL LOOKING FOR FIRST NONBLANK RCD\n         BNE   LOOP2 NO\n DC X'0000'\n         CLI   K0(R1),C'1'  ASA NEW PAGE\n         BNE   LOOP2 JUST SEND OUT\n         MVC   XPRM1+K3(K3),K1(R1)   ACQUIRE REPORT ID\n         MVC   XPRM2+K26(K3),K1(R1)\n         MVC   CALLSLOG+K18(K3),K1(R1)\nLOOP2    PUT   BACKUP,(0)\n         PUT   REPORT,(0)\n         LA    R6,INOUT PTR DCB\n         USING IHADCB,R6\n         LH    R6,DCBLRECL LRECL\n         DROP  R6\n         BCTR  R6,0 FOR EX\n         EX    R6,TRASCII CONVERT TO ASCII\n         LR    R0,R2 OUTPUT\n         PUTX  INOUT\n         B     LOOP\nTRASCII  TR    K0(*-*,R2),EBCASCII /* CHANGE TO ASCII */\nEOD      CLOSE (INOUT,,BACKUP,,REPORT)\n         FREEPOOL INOUT   ,\n         FREEPOOL BACKUP  ,\n         FREEPOOL REPORT  ,\nOPENSYSI OPEN  (SYSIN01,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYSI+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         TIME  DEC,CLOCK,LINKAGE=SYSTEM\n         TIME  DEC  /* OLD FORMAT FOR DATE */\n         STCM  R1,K7,WORK2 DATE IS 0CYYDDDF\n         MVC   WORK(K2),CLOCK HHMM\n         MVI   WORK+K2,X'0F' MAKE PACKED VALID\n         AP    WORK(K3),=PL3'20' ADD 2 MIN\n         CP    WORK+1(K2),=PL2'600' OVER AN HOUR\n         BL    STTIME OKAY\n         MVI   WORK+1,X'02' 2 MIN PAST THE HOUR\n         AP    WORK(K3),=PL3'1000' ADD 1 HOUR\n         CP    WORK(K3),=PL3'24000' OVER A DAY\n         BL    STTIME OKAY\n         SP    WORK(K3),=PL3'24000' CORRECT\n         AP    WORK2(K3),=PL3'1' ADD FOR TOMORROW\nSTTIME   UNPK  WORK+K3(K5),WORK(K3) PRINTABLE\n         MVC   XPRM9+K10(K4),WORK+K3 FOR XCOM\n         UNPK  WORK2+K3(K5),WORK2(K3) PRINTABLE\n         MVC   XPRM10+K10(K5),WORK2+K3 FOR XCOM\n         OI    XPRM10+K14,C'0'\n         LA    R6,XPRMCTR RECORD CTR\n         LA    R7,XPRM PTR\nXPRMLOOP PUT   SYSIN01,(R7)\n         LA    R7,K80(,R7)\n         BCT   R6,XPRMLOOP\n         CLOSE (SYSIN01)\n         FREEPOOL SYSIN01 ,\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         LA    R1,=A(XCOMPA) /* EXEC PARM FOR SYSA*/\n         L     RE,K16 CVT\n         ICM   RE,K7,197(RE) CVTSMCA\n         LA    RE,K0(,RE) CLEAR HI\n         CLC   =C'SYSA',K16(RE) IS SYSA\n         BE    GOSCHED YES\n         CLC   =C'SYSB',K16(RE) IS SYSB\n         BNE   FSMCA  UNKNOWN SYSTEM\n         LA    R1,=A(XCOMPB) /* EXEC PARM FOR SYSB*/\nGOSCHED  BALR  RE,RF /* GO SCHEDULE */\n         LTR   RF,RF /* RC */\n         BNZ   MAINEXIT /* SCHEDULE FAILURE */\n         DELETE EPLOC=XCOMMEP\nCALLSLOG WTO   'IMAGEDREQ XXXXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n               XXXXXXXX'\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFSMCA    LA    RF,K32 /* SMCA   FAILURE */\n         B     MAINEXIT\nFRDJFCB  LA    RF,K28 /* RDJFCB FAILURE */\n         B     MAINEXIT\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nCLOCK    DC    D'0',D'0'\nWORK     DC    D'0'\nWORK2    DC    D'0'\nINOUT    DCB   DDNAME=INOUT,DSORG=PS,EODAD=EOD,MACRF=(GL,PM),          X\n               RECFM=FB,EXLST=JFCBLST\nBACKUP   DCB   DDNAME=BACKUP,DSORG=PS,MACRF=(PM),                      X\n               RECFM=FB\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),                      X\n               RECFM=FBA\nSYSIN01  DCB   DDNAME=SYSIN01,DSORG=PS,MACRF=(PM)\nJFCBLST  DC    0F'0',X'87',AL3(JFCB)\nJFCB     DC    0F'0',CL176' '\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMPA   DC    AL2(L'XCOMPAL)\nXCOMPAL  DC    C'TYPE=SCHEDULE,GROUP=IMAGESYS,STCAPPL=XCOMAPPL,ACBNAME=*\n               XCOM'\nXCOMPB   DC    AL2(L'XCOMPBL)\nXCOMPBL  DC    C'TYPE=SCHEDULE,GROUP=IMAGESYS,STCAPPL=XCOMAPPL,ACBNAME=*\n               XCOB'\nHEXCHAR  DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\nXPRM     EQU   * *\nXPRM1    DC    CL80'ID=???XXXXX'\nXPRM2    DC    CL80'FILE=O:\\AIMSYS\\REPORTS\\IN\\???XXXXX.INP'\nXPRM3    DC    CL80'FILETYPE=FILE'\nXPRM4    DC    CL80'TYPE=SEND'\nXPRM5    DC    CL80'CODE=ASCII'\nXPRM6    DC    CL80'PACK=NO'\nXPRM7    DC    CL80'COMPRESS=YES'\nXPRM8    DC    CL80'RECSEP=NO'\nXPRM9    DC    CL80'STARTTIME=HHMM'\nXPRM10   DC    CL80'STARTDATE=YYDDD'\nXPRMCTR  EQU   (*-XPRM)/80\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C','\n         DC    X'2C255F3E3F'\n         ORG   EBCASCII+C'.'\n         DC    X'2E3C282B2026'\n         ORG   EBCASCII+C':'\n         DC    X'3A2340273D22'\n         ORG   EBCASCII+C'!'\n         DC    X'21242A293B202D2F'\n         ORG   EBCASCII+X'81'\n         DC    X'616263646566676869'\n         ORG   EBCASCII+X'91'\n         DC    X'6A6B6C6D6E6F707172'\n         ORG   EBCASCII+X'A2'\n         DC    X'737475767778797A'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(GSY05A),DISP=SHR,UNIT=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GSY05AT": {"ttr": 4621, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\"o\\x00\\x95\"o\\x15P\\x00\\x0f\\x00\\x0e\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-08-14T00:00:00", "modifydate": "1995-08-14T15:50:00", "lines": 15, "newlines": 14, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//JOBLIB   DD DSN=TECH110.USER.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.TEST.BATCH.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.PROD.BATCH.LOADLIB,DISP=SHR\n//STEP010 EXEC PGM=GSY05A\n//SYSUDUMP DD SYSOUT=*\n//INOUT    DD DSN=TECH110.IMAGE1,\n//            DISP=SHR,FREE=CLOSE\n//LCLDS01  DD DSN=TECH110.IMAGE1,\n//            DISP=SHR,FREE=CLOSE\n//BACKUP   DD DUMMY\n//SYSIN01  DD DSN=&&XCOMPRM,DISP=(NEW,DELETE),UNIT=VIO,\n//            SPACE=(TRK,(1,1)),RECFM=FB,LRECL=80\n//REPORT   DD SYSOUT=*,LRECL=133,FREE=CLOSE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HISTOGRM": {"ttr": 4623, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94%\\x7f\\x00\\x94%\\x7f\\x14 \\x00\\t\\x00\\t\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-09-14T00:00:00", "modifydate": "1994-09-14T14:20:00", "lines": 9, "newlines": 9, "modlines": 1, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=HISTOGRM\n//SYSUT1 DD DSN=TECH110.MLB.SUMMER94,DISP=OLD\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  NOBLOCK,NOREC\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IAMACCES": {"ttr": 4625, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x90\\x17\\x7f\\x00\\x90\\x17\\x8f\\x12Q\\x00\\x01\\x00\\x01\\x00\\x01\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-06-26T00:00:00", "modifydate": "1990-06-27T12:51:00", "lines": 1, "newlines": 1, "modlines": 1, "user": "JEFFK"}, "text": "ACCESS DD=&ALLDD,DYNCORE=256,MAXBUFNO=32,MINBUFNO=8\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IAMCREAT": {"ttr": 4627, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90\\x17\\x7f\\x00\\x90\\x17\\x7f\\x16\\x11\\x00\\x01\\x00\\x01\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-06-26T00:00:00", "modifydate": "1990-06-26T16:11:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "JEFFK"}, "text": "CREATE DD=&ALLDD,B=2,DATACOMP=YES,MAXBUFNO=32,MINBUFNO=8\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IAMLOAD": {"ttr": 4629, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x90\\x17\\x8f\\x00\\x903\\x8f\\x11\\t\\x00\\x07\\x00\\t\\x00\\x03\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-06-27T00:00:00", "modifydate": "1990-12-04T11:09:00", "lines": 7, "newlines": 9, "modlines": 3, "user": "JEFFK"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=IEBUPDTE,REGION=6M,PARM=NEW\n//SYSPRINT DD DUMMY\n//SYSUT2 DD DSN=SYS3.IAM.V61.CNTLLIB,DISP=OLD\n//SYSIN DD DSN=IAMICL,DISP=OLD,LABEL=9,VOL=SER=IAM61T,UNIT=TA80\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IAMREPRO": {"ttr": 4865, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x90\\x17\\x8f\\x00\\x90\"\\x0f\\x117\\x00\\x10\\x00\\x0e\\x00\\x05\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1990-06-27T00:00:00", "modifydate": "1990-08-08T11:37:00", "lines": 16, "newlines": 14, "modlines": 5, "user": "JEFFK"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//IAMOVRID DD DSN=TD.TEST1.CNTLCARD.MASTER(IAMACCES),DISP=SHR,\n// SUBSYS=LAM\n//INPUT DD DSN=PMBU.K.STORE.MASINV.FILE,DISP=SHR\n//IAMINFO  DD SYSOUT=*\n//IAMPRINT DD SYSOUT=*\n//SYSIN DD *\n REPRO -\n      INFILE(INPUT) -\n      OUTDATASET(JEFFK.PMBU.K.STORE.MASINV.FILE)  -\n      COUNT(200) REUSE\n       LISTCAT ENTRY(JEFFK.PMBU.K.STORE.MASINV.FILE) ALL\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IAMSIMVS": {"ttr": 4867, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x90)\\x0f\\x00\\x90)\\x1f\\x11#\\x00\\x0e\\x00\\t\\x00\\x07\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1990-10-17T00:00:00", "modifydate": "1990-10-18T11:23:00", "lines": 14, "newlines": 9, "modlines": 7, "user": "JEFFK"}, "text": "//JEFFKI   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//SIMULAT1 EXEC PGM=IAMSIMVS,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSIN    DD *\n  SELECT DSN=SYS3.INTERTST.VER31075.PROTSYM\n  SELECT DSN=SYS3.INTERTST.VER31075.PROTCPF\n  SELECT DSN=SYS3.INTERTST.VER31075.PROTHLF\n  SELECT DSN=SYS3.SYSD.SYSDUSER\n  SELECT DSN=SYS3.VSAMTUNE.WORKLOAD.FILE\n  SELECT DSN=SYS3.VSAMTUNE.TUNEREQ.FILE\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IAMSMFVS": {"ttr": 4869, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90\\x15\\x0f\\x00\\x90\\x15\\x0f\\x15H\\x00\\x07\\x00\\x07\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-05-30T00:00:00", "modifydate": "1990-05-30T15:48:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFKI   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=IEBUPDTE,REGION=6M,PARM=NEW\n//SYSPRINT DD DUMMY\n//SYSUT2 DD DSN=JEFFK.IDP.ICLIAM60,DISP=OLD\n//SYSIN DD DSN=IAMICL,DISP=OLD,LABEL=9,VOL=SER=IAM60T,UNIT=TA80\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IBMSMFD": {"ttr": 4871, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x952\\x1f\\x00\\x953\\x9f\\x18\\x11\\x00\\x16\\x00x\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-11-17T00:00:00", "modifydate": "1995-12-05T18:11:00", "lines": 22, "newlines": 120, "modlines": 5, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//CASFXSMF PROC A='*',\n//         SCDDSN='SYSS.JARSMF.SCDS',\n//         STEPLIB='SYS1.JARSMF.V1R5M0.CAILIB',\n//         TPUNIT='CART'\n//STEP1    EXEC PGM=SMFD\n//STEPLIB  DD   DISP=SHR,DSN=&STEPLIB\n//SCDS     DD   DISP=OLD,DSN=&SCDDSN\n//HISTORY1 DD   UNIT=(&TPUNIT,,DEFER),VOL=SER=SMFTAP,DISP=(OLD,PASS)\n//JARSPEC  DD DSN=BUILDING.SMF.DATA,DISP=(NEW,KEEP),\n//            VOL=(,,,6),UNIT=SILO,\n//            DCB=(RECFM=VBS,LRECL=32756,BLKSIZE=32760)\n//SYSPRINT DD SYSOUT=&A\n//SYSXDIAG DD SYSOUT=&A\n// PEND\n//STEP001 EXEC CASFXSMF\n//SYSIN    DD *\nEXTRACT FROM(110195 0000) TO(111695 2359)\n        SELECT(14,15,30,62,64,208)\n        SID(ALL) TODD(JARSPEC).\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ICECALC": {"ttr": 4873, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x10/\\x00\\x95\\x10/\\x11\\x07\\x00\\x13\\x00\\x13\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-04-12T00:00:00", "modifydate": "1995-04-12T11:07:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "TECH110"}, "text": "/* REXX */\n\"VMFCLEAR\";\nsay \"Enter IXFP net load GB count\";\nparse upper pull netload;\nsay \"Enter #tracks alloc from DASD report\";\nparse upper pull trkalloc;\nGBalloc = (trkalloc/1000000.0)*(56.664);\ncompression = GBalloc/netload;\nprojected70 = ((.70*151.4)*GBalloc)/netload;\nprojected80 = ((.80*151.4)*GBalloc)/netload;\nprojected90 = ((.90*151.4)*GBalloc)/netload;\n\"VMFCLEAR\";\nsay \"ICEBERG DASD GB allocated:\" GBalloc;\nsay \"ICEBERG DASD GB physically used:\" netload;\nsay \"ICEBERG compression ratio:\" compression;\nsay \"ICEBERG projected GB allocated at 70% net load:\" projected70;\nsay \"ICEBERG projected GB allocated at 80% net load:\" projected80;\nsay \"ICEBERG projected GB allocated at 90% net load:\" projected90;\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ICETEST": {"ttr": 4875, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\"?\\x00\\x95\"?\\x17\\x12\\x00\\x03\\x00\\x03\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-08-11T00:00:00", "modifydate": "1995-08-11T17:12:00", "lines": 3, "newlines": 3, "modlines": 0, "user": "TECH110"}, "text": "/* Rexx */\ntrace i;\n\"SIBADMIN QUERY SUBSYS\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ICKDSF": {"ttr": 4877, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x95\\x17\\x9f\\x00\\x944\\x8f\\x130\\x00\\x08\\x00\\x0c\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-06-28T00:00:00", "modifydate": "1994-12-14T13:30:00", "lines": 8, "newlines": 12, "modlines": 1, "user": "TECH110"}, "text": "//TECH110M JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//INITDASD EXEC PGM=ICKDSF\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  INIT UNITADDRESS(3E9) NOVERIFY VTOC(100,0,10) VOLID(CSIRS1)\n  INIT UNITADDRESS(3ED) NOVERIFY VTOC(100,0,10) VOLID(CSIDL1)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEBGENER": {"ttr": 4879, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x00\\x00\\x905/\\x00\\x95\\x05\\x9f\\x138\\x00\\x0b\\x02\\xd1\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1990-12-18T00:00:00", "modifydate": "1995-02-28T13:38:00", "lines": 11, "newlines": 721, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'JEFFK TECH SUPPT',CLASS=S,\n//         MSGCLASS=G,NOTIFY=TECH110\n//S1 EXEC PGM=IEBGENER,REGION=6M\n//SYSPRINT DD SYSOUT=*,DCB=RECFM=FA\n//SYSIN    DD *\n  GENERATE MAXFLDS=2,MAXLITS=4,MAXGPS=1\nGP1 RECORD FIELD=(4,1,,1),FIELD=(4,'0000',,6)\n//SYSUT1   DD DSN=TECH110.MLB.REPORT11,DISP=SHR\n//SYSUT2   DD DSN=TECH110.MLB.REPORT,DISP=(NEW,CATLG),\n//  SPACE=(CYL,(1,1),RLSE),RECFM=FB,LRECL=9\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEBGENR2": {"ttr": 4881, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x92!\\x9f\\x00\\x94%\\x7f\\x13V\\x00\\n\\x00\\x08\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-08-06T00:00:00", "modifydate": "1994-09-14T13:56:00", "lines": 10, "newlines": 8, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'JEFFK TECH SUPPT',CLASS=S,\n//         MSGCLASS=G,NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//S1 EXEC PGM=IEBGENER,REGION=6M\n//SYSPRINT DD SYSOUT=*,DCB=RECFM=FA\n//SYSIN    DD DUMMY\n//SYSUT1   DD DSN=TECH110.MLB,DISP=OLD\n//SYSUT2   DD DSN=TECH110.MLB.SUMMER94,DISP=(NEW,CATLG),\n//  UNIT=SILO,VOL=SER=(MQ4100,XI8359),LABEL=EXPDT=98000\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEBGENR3": {"ttr": 4883, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x95\\x04O\\x00\\x95\"\\x1f\\x141\\x00\\x15\\x00\\n\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1995-02-13T00:00:00", "modifydate": "1995-08-09T14:31:00", "lines": 21, "newlines": 10, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'JEFFK TECH SUPPT',CLASS=S,\n//         MSGCLASS=G,NOTIFY=TECH110\n//S1 EXEC PGM=IEBGENER,REGION=8M\n//SYSPRINT DD SYSOUT=*,DCB=RECFM=FA\n//SYSIN    DD DUMMY\n//SYSUT1   DD DSN=TECH110.DUMP.HSM,DISP=OLD\n//SYSUT2   DD DSN=TECH.SYS1.DUMP,DISP=(NEW,KEEP),\n//  UNIT=SILO,LABEL=(1,SL)\n//S2 EXEC PGM=IEBGENER,REGION=8M\n//SYSPRINT DD SYSOUT=*,DCB=RECFM=FA\n//SYSIN    DD DUMMY\n//SYSUT1   DD DSN=TECH110.HSMPDOX,DISP=OLD\n//SYSUT2   DD DSN=TECH.HSMPDOX,DISP=(NEW,KEEP),\n//  UNIT=SILO,LABEL=(2,SL),VOL=REF=*.S1.SYSUT2\n//S3 EXEC PGM=IEBGENER,REGION=8M\n//SYSPRINT DD SYSOUT=*,DCB=RECFM=FA\n//SYSIN    DD DUMMY\n//SYSUT1   DD DSN=TECH110.HSMPDOY,DISP=OLD\n//SYSUT2   DD DSN=TECH.HSMPDOY,DISP=(NEW,KEEP),\n//  UNIT=SILO,LABEL=(3,SL),VOL=REF=*.S2.SYSUT2\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEBUPDTE": {"ttr": 4885, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x91\\x16\\x9f\\x00\\x91\\x16\\x9f\\x12#\\x00\\x06\\x00\\x06\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-06-18T00:00:00", "modifydate": "1991-06-18T12:23:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFKIOP JOB (530000000000),'JEFFK TECH SUPPT',CLASS=S,\n//         MSGCLASS=G,NOTIFY=JEFFK\n//S EXEC PGM=IEBUPDTE,REGION=6M,PARM=NEW\n//SYSPRINT DD SYSOUT=*,DCB=RECFM=FA\n//SYSUT2   DD DSN=JEFFK.USER.DISASM.SRCELIB,DISP=SHR\n//SYSIN DD DSN=JEFFK.FILE171.PDS(DISASSRC),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEFDB401": {"ttr": 4887, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\"\\x00\\x00\\x00\\x91\\x08_\\x00\\x91\\x16\\x8f\\x15Y\\x01\\x0f\\x00\\x85\\x00\\x9c\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.34", "flags": 0, "createdate": "1991-03-26T00:00:00", "modifydate": "1991-06-17T15:59:00", "lines": 271, "newlines": 133, "modlines": 156, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS,REFR,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nIEF      TITLE 'IEFDB401 DYNAMIC ALLOC SCAN'\nIEFDB401 CSECT , /* IEFDB401 */\n* ADD SUBSYS=LAM FOR LIBRARIAN MASTER FILE ACCESSES\n* CHECK FOR DDNAME LAMXCEPT ALLOCATED - CODE ON\n* DO NOT INSERT SUBSYS=LAM IF CALLER IS FROM SVC\n* CHECK FOR DSN BUILDING...MASTER\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nIEFDB401 AMODE 31\nIEFDB401 RMODE ANY\n         SAVE  (14,12),,IEFDB401*&SYSDATE*&SYSTIME\n         LR    RC,RF /*ADDRESSABILITY*/\n         USING IEFDB401,RC\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         LM    R2,RA,K0(R1) /* INPUT PARAM LIST */\n* R2=SVC99 PARAM LIST, R3=WORK AREA CONTIG TO TEXT UNITS\n* R4=WORKAREA LEN, R5=JOBNAME, R6=PRGMRNAME, R7=JOBACCT\n* R8=STEPNAME, R9=EXEC PGMNAME, RA=EXECACCT\n         L     R3,K0(,R3) PICKUP ADDR OF WORKAREA\n         L     R4,K0(,R4) PICKUP WORKAREA LEN\n         C     R4,=A(K32) OUR MIN LEN FOR TEXTUNIT PTR/TEXT UNITS\n         BL    EXIT NO GOOD\n         USING S99RB,R2\n         CLI   S99VERB,S99VRBAL DSNAME ALLOCATION\n         BNE   EXIT NO\n         USING PSA,R0 /* SCAN THRU TIOT LOOKING FOR DDNAME */\n         L     RF,PSATOLD\n         DROP  R0\n         USING TCB,RF\n         L     RF,TCBTIO\n         DROP  RF\n         USING TIOT1,RF\n         LA    RB,TIOENTRY\n         DROP  RF\n         USING TIOENTRY,RB\n         SLR   RF,RF WORK\nLOOPTIOT IC    RF,TIOELNGH\n         LTR   RF,RF TIOT END\n         BZ    EXIT NOT FOUND\n         CLC   TIOEDDNM(8),=CL8'LAMXCEPT'  DDNAME ACTIVATION\n         BE    ENDTIOT  YES\nSCANTIOT LA    RB,0(RF,RB) NEXT TIOT ENTRY\n         B     LOOPTIOT\nENDTIOT  EQU   * * FEATURE IS ACTIVATED\n         USING S99TUPL,R3\n         XC    S99TUPTR,S99TUPTR CLEAR OUR ADDTNL SUBSYS TEXT UNIT\n         DROP  R3\n         L     R2,S99TXTPP TEXT POINTERS PTR\n         DROP  R2\n         USING S99TUPL,R2\nLOOKTUNT L     RF,S99TUPTR TEXT UNIT\n         LR    R0,RF SEE IF TEXT UNIT PLACEHOLDER\n         N     R0,=A(X'7FFFFFFF') STRIP LAST TEXT UNIT BIT\n         BZ    NEXTTUNT YES; IS DUMMY PLACEHOLDER\n         USING S99TUNIT,RF\n         CLC   S99TUKEY,=AL2(DALDSNAM) DSNAME TEXT UNIT\n         BE    CHECKDSN YES\n         CLC   S99TUKEY,=AL2(DALSTATS) DISP TEXT UNIT\n         BE    CHECKDSP YES\n         CLC   S99TUKEY,=AL2(DALSSNM) SUBSYSTEM TEXT UNIT\n         BE    EXIT USER HAS REQUESTED SUBSYS= ALREADY\nNEXTTUNT LTR   RF,RF LAST TEXT UNIT\n         BM    LASTTUNT YES\n         LA    R2,L'S99TUPTR(,R2) NEXT TEXT UNIT PTR\n         B     LOOKTUNT CONTINUE TEXT UNIT SCAN\nCHECKDSP CLI   S99TUPAR,X04 DISP=NEW\n         BE    EXIT LEAVE\n         CLI   S99TUPAR,X02 DISP=MOD\n         BE    EXIT LEAVE\n         B     NEXTTUNT CONTINUE\nCHECKDSN CLC   S99TULNG,=AL2(K8) MIN LEN OF X.MASTER\n         BL    EXIT LEAVE, TOOO SHORT\n         CLC   =C'BUILDING',S99TUPAR DSN HLQ REQUIRED\n         BNE   EXIT NO, LEAVE\n         LH    RB,S99TULNG DSN LEN\n         LA    RB,S99TUPAR(RB) PTR TO DSN END\nLOOKBACK BCTR  RB,K0 LAST CHAR IN DSN PTR\n         CLI   K0(RB),C' ' BACKUP LOOKING FOR NONBLANKS\n         BE    LOOKBACK YES\n         S     RB,=A(K6) BACKUP TO LITERAL .MASTER\n         CLC   =C'.MASTER',K0(RB) IS THIS A LIBRARIAN MASTER FILE\n         BNE   EXIT NO, LEAVE\n         DROP  R2\n         USING S99TUPL,R3\n         OI    S99TUPTR,S99TUPLN SET LIBRARIAN MASTER FOUND BIT\n         B     NEXTTUNT CONTINUE\nLASTTUNT TM    S99TUPTR,S99TUPLN FOUND A MASTER\n         BZ    EXIT NO\n         DROP  R3\n         USING PSA,R0\n         L     RB,PSATOLD /* OUR TCB */\n         DROP  R0\n         USING TCB,RB\n         L     R6,TCBRBP /* RB CHAIN END */\n         DROP  RB\n         USING RBBASIC,R6\nNEXTRB   TM    RBSTAB1,RBFTSVRB IS THIS AN SVRB\n         BO    SVRB YES\n         ICM   R6,K7,RBLINKB NEXT ONE BACKWARDS\nNEXTRB1  CLM   RB,K7,RBLINKB AT CHAIN END\n         BE    EXIT NO SVRB FOUND ??\n         B     NEXTRB\nSVRB     ICM   R6,K7,RBLINKB NEXT ONE BACKWARDS\n         TM    RBSTAB1,RBFTP CALLING PRB\n         BZ    YESPRB FOUND A PRB\n         TM    RBSTAB1,RBFTSVRB IS THIS AN SVRB\n         BNO   NEXTRB1 NO\nYESPRB   BCTR  R6,K0 /* BACK ONE TO ARCHITECTED INTERRUPT CODE*/\n         CLI   K0(R6),X'63' SVC 99 INTERRUPT CODE\n         LA    R6,K1(,R6) FIX RB PTR FIRST\n         BNE   NEXTRB1 NO CONTINUE SEARCH\n         TM    RBSTAB1,RBFTSVRB IS THIS AN SVRB CALLER TO SVC 99\n         BO    EXIT YES\n         L     R0,RBOPSWA  CALLERS PSW ADDRESS\n         X     R0,=A(X'7FFFFFFF') AMODE BIT OFF\n         L     RB,CVTPTR /* LOCATE LOW LPA = WHERE LAMMVS IS */\n         USING CVT,RB\n         CL    R0,CVTSHRVM BELOW LOW CSA IS OK\n         BL    PRBOK ...\n         L     RB,CVTSMEXT VSTOR MAP\n         DROP  RB\n         USING CVTVSTGX,RB\n         CL    R0,CVTPLPAE PLPA END ADDRESS\n         BL    EXIT NO GOOD\n         DROP  R6\n         USING S99TUPL,R2\nPRBOK    NI    S99TUPTR,X7F TURN OFF EXISTING LAST TEXT UNIT BIT\n         DROP  R2\n         USING S99TUPL,R3\n         LA    RF,L'S99TUPTR+L'S99TUPTR(,R3) WORKAREA SPOT FOR TEXTU\n         ST    RF,S99TUPTR SET TEXT UNIT PTR\n         MVC   S99TUKEY,=AL2(DALSSNM) SUBSYS NAME REQ\n         MVC   S99TUNUM,=AL2(K1) 1 PARAM NUMBER\n         MVC   S99TULNG,=AL2(L'LAM)\n         MVC   S99TUPAR(L'LAM),LAM\n*        LA    R3,L'S99TUPTR(,R3) LAST TEXT UNIT\n*        LA    RF,L'S99TUKEY+L'S99TUNUM+L'S99TULNG+L'LAM(,RF)\n*        ST    RF,S99TUPTR SET TEXT UNIT PTR\n         OI    S99TUPTR,S99TUPLN SET TEXT UNIT END BIT\n*        MVC   S99TUKEY,=AL2(DALSSPRM) SUBSYS PARM REQ\n*        MVC   S99TUNUM,=AL2(K1) 1 PARAM NUMBER\n*        MVC   S99TULNG,=AL2(L'JFCBU)\n*        MVC   S99TUPAR(L'JFCBU),JFCBU\n         DROP  R3,RF\n*        LM    R2,RA,K0(R1) /* INPUT PARAM LIST */\n* R2=SVC99 PARAM LIST, R3=WORK AREA CONTIG TO TEXT UNITS\n* R4=WORKAREA LEN, R5=JOBNAME, R6=PRGMRNAME, R7=JOBACCT\n* R8=STEPNAME, R9=EXEC PGMNAME, RA=EXECACCT\n*        L     R3,K0(,R3) PICKUP ADDR OF WORKAREA\n*        LA    R3,K64(,R3) SKIP USED FRONT PORTION */\n*        MVC   K0(WTOLL,R3),WTOL\n*        MVC   4(8,R3),0(R5)\n*        MVC   13(8,R3),0(R8)\n*        MVC   22(8,R3),0(R9)\n*        USING S99RB,R2\n*        L     R2,S99TXTPP TEXT POINTERS PTR\n*        DROP  R2\n*        USING S99TUPL,R2\n*LOOPTUNT L     R4,S99TUPTR TEXT UNIT\n*        N     R4,=A(X'7FFFFFFF')\n*        BZ    NXT\n*        UNPK  31(13,R3),0(7,R4)\n*        MVI   43(R3),C' '\n*        TR    31(12,R3),TABL-C'0'\n*        MVC   45(6,R3),=CL6' '\n*        CLI   K5(R4),X'06'\n*        BL    WTODO\n*        MVC   45(6,R3),6(R4)\n*WTODO   WTO ,MF=(E,(R3))\n*NXT     TM    S99TUPTR,X80 LAST TEXT UNIT\n*        BO    EXIT1    YES\n*        LA    R2,L'S99TUPTR(,R2) NEXT TEXT UNIT PTR\n*        B     LOOPTUNT CONTINUE TEXT UNIT SCAN\n*EXIT1   WTO   'IEFDB401 END'\nEXIT     RETURN (14,12),RC=0\nLAM      DC    C'LAM ' SUBSYS=LAM\n*JFCBU    DC    C'JFCB=U'\n*WTOL WTO 'XXXXXXXX/XXXXXXXX/XXXXXXXX/XXXXXXXXXXXXX/??????',MF=L\n*WTOLL EQU *-WTOL\n*TABL DC C'0123456789ABCDEF'\n         LTORG\n         PRINT NOGEN\n         IEFTIOT1\n         IEFZB4D0\n         IEFZB4D2\n         IHAPSA\n         CVT  DSECT=YES\n         IKJTCB\n         IHARB LIST=YES\n         IEFJESCT TYPE=DSECT\n         IEFJSCVT\n         IEFJSSVT\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(IEFDB401),DISP=SHR,\n//  UNIT=3390,SPACE=,VOL=SER=MCSRES\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEHPROGM": {"ttr": 4892, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x953O\\x00\\x953O\\x15\\x04\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-11-30T00:00:00", "modifydate": "1995-11-30T15:04:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IEHPROGM\n//SYSPRINT DD SYSOUT=*\n//SMSU36 DD UNIT=3390,VOL=SER=SMSU36,DISP=OLD\n//SMSU22 DD UNIT=3390,VOL=SER=SMSU22,DISP=OLD\n//SMSSA3 DD UNIT=3390,VOL=SER=SMSSA3,DISP=OLD\n//SYSIN DD *\n SCRATCH DSNAME=TECH602.DOM4.COPY.931011.162200,VOL=3390=SMSU36,PURGE\n SCRATCH DSNAME=TECH602.DOM4.COPY2.931011.162700,VOL=3390=SMSSA3,PURGE\n SCRATCH DSNAME=TECH602.DOM4.COPY3.931011.163000,VOL=3390=SMSU22,PURGE\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IGDSMS00": {"ttr": 4894, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x06/\\x00\\x94\\x06/\\x145\\x00\\t\\x00\\t\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-03-03T00:00:00", "modifydate": "1994-03-03T14:35:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "TECH110"}, "text": "SMS ACDS(SYS1.ACDS.CLUSTER)      /* ACTIVE CONTROL DATA SET          */\n    COMMDS(SYS1.COMMDS.CLUSTER)  /* COMMUNICATIONS DATA SET          */\n    DSNTYPE(LIBRARY)             /* DEFAULT TO PDSE DATA SETS        */\n    PDSESHARING(NORMAL)          /* SYSPLEX SHARED READ ACCESS       */\n    REVERIFY(NO)                 /* AUTHORITY CHECK AT JOB INTERPRET */\n    ACSDEFAULTS(NO)              /* DONT INIT RACF ACS VARIABLES     */\n    TRACE(ON)                    /* ACTIVATE SMS INTERNAL TRACE      */\n    SIZE(64K)                    /* USE A 64K TRACE TABLE INTERNALLY */\n    TYPE(ERROR)                  /* TRACE ONLY ERROR EVENTS          */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IMAGEGEN": {"ttr": 5121, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x05\\x00\\x00\\x00\\x920\\x9f\\x00\\x920\\x9f\\x17\\x10\\x00\\xa7\\x03\\x0f\\x00'\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.05", "flags": 0, "createdate": "1992-11-04T00:00:00", "modifydate": "1992-11-04T17:10:00", "lines": 167, "newlines": 783, "modlines": 39, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n/*JOBPARM S=SYSA\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nIMG      TITLE 'IMAGING SYSTEM DOWNLOAD PREP'\nIMAGEGEN CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK27      EQU   27\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK133     EQU   133\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nIMAGEGEN AMODE 24\nIMAGEGEN RMODE 24\n         SAVE  (14,12),,IMAGEGEN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING IMAGEGEN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\nOPENLIST OPEN  (INOUT,(UPDAT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\nLOOP     GET   INOUT\n         TR    K0(K133,R1),EBCASCII /* CHANGE TO ASCII */\n         LR    R0,R1 OUTPUT\n         PUTX  INOUT\n         B     LOOP\nEOD      CLOSE (INOUT)\n         FREEPOOL INOUT   ,\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nINOUT    DCB   DDNAME=INOUT,DSORG=PS,EODAD=EOD,MACRF=(GL,PM),          X\n               RECFM=FB,LRECL=133\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C'.'\n         DC    X'2E'\n         ORG   EBCASCII+C':'\n         DC    X'3A'\n         ORG   EBCASCII+C'='\n         DC    X'3D'\n         ORG   EBCASCII+X'81'\n         DC    X'616263646566676869'\n         ORG   EBCASCII+X'91'\n         DC    X'6A6B6C6D6E6F707172'\n         ORG   EBCASCII+X'A2'\n         DC    X'737475767778797A'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(IMAGEGEN),DISP=SHR,\n// UNIT=,SPACE=\n//*G.INOUT DD DSN=TECH110.TEST.HIPERBAT,DISP=SHR\n//*G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IMAGEGNT": {"ttr": 5125, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x924\\x9f\\x00\\x924\\x9f\\x15\\t\\x00\\xf9\\x00\\xf9\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-12-14T00:00:00", "modifydate": "1992-12-14T15:09:00", "lines": 249, "newlines": 249, "modlines": 4, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n/*JOBPARM S=SYSA\n//S EXEC ASMHCLG,PARM.L='LIST,LET,XREF,MAP'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nIMG      TITLE 'IMAGING SYSTEM DOWNLOAD PREP'\nIMAGEGEN CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK26      EQU   26\nK27      EQU   27\nK29      EQU   29\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK133     EQU   133\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nIMAGEGEN AMODE 24\nIMAGEGEN RMODE 24\n         SAVE  (14,12),,IMAGEGEN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING IMAGEGEN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         STCK  CLOCK\n         UNPK  WORK(K7),CLOCK+K2(K4) PROVIDE UNIQUE SERIAL#\n         TR    WORK+K0(K5),HEXCHAR-C'0'\n         MVC   XPRM1+K6(K5),WORK+K0\n         MVC   XPRM2+K18(K5),WORK+K0\nOPENLIST OPEN  (INOUT,(UPDAT),BACKUP,(OUTPUT),REPORT,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R8,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         USING IHADCB,R8\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R8\n         GET   INOUT GET FIRST RECORD FOR REPORT ID\n         MVC   XPRM1+K3(K3),K1(R1)\n         MVC   XPRM2+K15(K3),K1(R1)\n         B     LOOP2\nLOOP     GET   INOUT\nLOOP2    LR    R2,R1 SAVE RECORD PTR\n         LR    R0,R1 FOR OUTPUT\n         PUT   BACKUP,(0)\n         PUT   REPORT,(0)\n         LA    R6,INOUT PTR DCB\n         USING IHADCB,R6\n         LH    R6,DCBLRECL LRECL\n         DROP  R6\n         BCTR  R6,0 FOR EX\n         EX    R6,TRASCII CONVERT TO ASCII\n         LR    R0,R2 OUTPUT\n         PUTX  INOUT\n         B     LOOP\nTRASCII  TR    K0(*-*,R2),EBCASCII /* CHANGE TO ASCII */\nEOD      CLOSE (INOUT,,BACKUP,,REPORT)\n         FREEPOOL INOUT   ,\n         FREEPOOL BACKUP  ,\n         FREEPOOL REPORT  ,\nOPENSYSI OPEN  (SYSIN01,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYSI+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         LA    R6,XPRMCTR RECORD CTR\n         LA    R7,XPRM PTR\nXPRMLOOP PUT   SYSIN01,(R7)\n         LA    R7,K80(,R7)\n         BCT   R6,XPRMLOOP\n         CLOSE (SYSIN01)\n         FREEPOOL SYSIN01 ,\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         LA    R1,=A(XCOMMPRM) /* EXEC PARM */\n         BALR  RE,RF /* GO SCHEDULE */\n         LTR   RF,RF /* RC */\n         BNZ   MAINEXIT /* SCHEDULE FAILURE */\n         DELETE EPLOC=XCOMMEP\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nCLOCK    DC    D'0'\nWORK     DC    D'0'\nINOUT    DCB   DDNAME=INOUT,DSORG=PS,EODAD=EOD,MACRF=(GL,PM),          X\n               RECFM=FB\nBACKUP   DCB   DDNAME=BACKUP,DSORG=PS,MACRF=(PM),                      X\n               RECFM=FB\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),                      X\n               RECFM=FB\nSYSIN01  DCB   DDNAME=SYSIN01,DSORG=PS,MACRF=(PM)\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMMPRM DC    AL2(L'XCOMMPRL)\nXCOMMPRL DC    C'TYPE=SCHEDULE,GROUP=IMAGESYS'\nHEXCHAR  DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\nXPRM     EQU   * *\nXPRM1    DC    CL80'ID=XXXXXXXX'\nXPRM2    DC    CL80'FILE=R:\\DENISE\\XXXXXXXX.INP'\nXPRM3    DC    CL80'FILETYPE=FILE'\nXPRM4    DC    CL80'TYPE=SEND'\nXPRM5    DC    CL80'CODE=ASCII'\nXPRM6    DC    CL80'PACK=NO'\nXPRM7    DC    CL80'COMPRESS=YES'\nXPRM8    DC    CL80'RECSEP=NO'\nXPRMCTR  EQU   (*-XPRM)/80\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C','\n         DC    X'2C255F3E3F'\n         ORG   EBCASCII+C'.'\n         DC    X'2E3C282B2026'\n         ORG   EBCASCII+C':'\n         DC    X'3A2340273D22'\n         ORG   EBCASCII+C'!'\n         DC    X'21242A293B202D2F'\n         ORG   EBCASCII+X'81'\n         DC    X'616263646566676869'\n         ORG   EBCASCII+X'91'\n         DC    X'6A6B6C6D6E6F707172'\n         ORG   EBCASCII+X'A2'\n         DC    X'737475767778797A'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//*L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(IMAGEGEN),DISP=SHR,\n//* UNIT=,SPACE=\n//G.INOUT DD DSN=TECH110.TEST.IMAGE,DISP=SHR,FREE=CLOSE\n//G.LCLDS01 DD DSN=TECH110.TEST.IMAGE,DISP=SHR\n//G.BACKUP DD DUMMY,UNIT=CART,DISP=(NEW,KEEP),FREE=CLOSE,\n//     DSN=TECH110.TEST.BACKUP,LRECL=133,BLKSIZE=32718\n//G.SYSIN01 DD DSN=&&XCOMPRM,DISP=(NEW,DELETE),UNIT=VIO,\n//   SPACE=(TRK,(1,1)),RECFM=FB,LRECL=80\n//G.REPORT   DD SYSOUT=Z,LRECL=133,FREE=CLOSE\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IMAGEGN2": {"ttr": 5130, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x921\\x0f\\x00\\x921\\x1f\\x15F\\x00\\xb3\\x00\\xad\\x00!\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-11-05T00:00:00", "modifydate": "1992-11-06T15:46:00", "lines": 179, "newlines": 173, "modlines": 33, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n/*JOBPARM S=SYSA\n//S EXEC ASMHCLG,PARM.L='LIST,LET,XREF,MAP'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nIMG      TITLE 'IMAGING SYSTEM DOWNLOAD PREP'\nIMAGEGEN CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK27      EQU   27\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK133     EQU   133\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nIMAGEGEN AMODE 24\nIMAGEGEN RMODE 24\n         SAVE  (14,12),,IMAGEGEN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING IMAGEGEN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\nOPENLIST OPEN  (INPUT,(INPUT),PSOOUT,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R7,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\nLOOP     GET   INPUT,IOAREA\n*        TR    IOAREA(133),EBCASCII /* CHANGE TO ASCII */\n         PUT   PSOOUT,IOAREA\n         B     LOOP\nEOD      CLOSE (INPUT,,PSOOUT)\n         FREEPOOL INPUT   ,\n         FREEPOOL PSOOUT  ,\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nINPUT    DCB   DDNAME=INPUT,DSORG=PS,EODAD=EOD,MACRF=(GM),             X\n               RECFM=FB,LRECL=133\nPSOOUT   DCB   DDNAME=PSOOUT,DSORG=PS,MACRF=(PM),                      X\n               RECFM=FB,LRECL=133,BLKSIZE=13300\nEBCASCII DC    (K256)AL1(*-EBCASCII)\n         ORG   EBCASCII\n         DC    C' '\n*BCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n*        ORG   EBCASCII+C' '\n*        DC    X'20'\n*        ORG   EBCASCII+C'.'\n*        DC    X'2E'\n*        ORG   EBCASCII+C':'\n*        DC    X'3A'\n*        ORG   EBCASCII+C'='\n*        DC    X'3D'\n*        ORG   EBCASCII+X'81'\n*        DC    X'616263646566676869'\n*        ORG   EBCASCII+X'91'\n*        DC    X'6A6B6C6D6E6F707172'\n*        ORG   EBCASCII+X'A2'\n*        DC    X'737475767778797A'\n*        ORG   EBCASCII+C'A'\n*        DC    X'414243444546474849'\n*        ORG   EBCASCII+C'J'\n*        DC    X'4A4B4C4D4E4F505152'\n*        ORG   EBCASCII+C'S'\n*        DC    X'535455565758595A'\n*        ORG   EBCASCII+C'0'\n*        DC    X'30313233343536373839'\n         ORG\nIOAREA   DC    CL133' '\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//*L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(IMAGEGEN),DISP=SHR,\n//* UNIT=,SPACE=\n//*G.INOUT DD DSN=TECH110.TEST.HIPERBAT,DISP=SHR\n//*G.SYSUDUMP DD SYSOUT=*\n//G.INPUT   DD DSN=TECH110.TEST.HIPERBAT,DISP=SHR\n//G.PSOOUT  DD SYSOUT=(A,IMAGESYS)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IMAGEGN3": {"ttr": 5377, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00\\x00\\x00\\x921O\\x00\\x93\\x02\\x9f\\x15&\\x01\\x12\\x00\\xde\\x00U\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "1992-11-09T00:00:00", "modifydate": "1993-01-29T15:26:00", "lines": 274, "newlines": 222, "modlines": 85, "user": "TECH110"}, "text": "//TECH110A JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n/*JOBPARM S=SYSA\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nIMG      TITLE 'IMAGING SYSTEM DOWNLOAD PREP'\nIMAGEGEN CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK26      EQU   26\nK27      EQU   27\nK29      EQU   29\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK133     EQU   133\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nIMAGEGEN AMODE 24\nIMAGEGEN RMODE 24\n         SAVE  (14,12),,IMAGEGEN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING IMAGEGEN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         STCK  CLOCK\n         UNPK  WORK(K7),CLOCK+K2(K4) PROVIDE UNIQUE SERIAL#\n         TR    WORK+K0(K5),HEXCHAR-C'0'\n         MVC   XPRM1+K6(K5),WORK+K0\n         MVC   XPRM2+K29(K5),WORK+K0\n         MVC   CALLSLOG+K21(K5),WORK+K0\n         RDJFCB (INOUT)\n         LTR   RF,RF OKAY\n         BNZ   FRDJFCB\n         MVC   CALLSLOG+K27(K44),JFCB SAVE DSNAME TO BE PROCESS\nOPENLIST OPEN  (INOUT,(UPDAT),BACKUP,(OUTPUT),REPORT,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R8,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         USING IHADCB,R8\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R8\nLOOP     GET   INOUT\n         LR    R2,R1 SAVE RECORD PTR\n         LR    R0,R1 FOR OUTPUT\n         CLI   XPRM1+K3,C'?' STILL LOOKING FOR FIRST NONBLANK RCD\n         BNE   LOOP2 NO\n         CLI   K0(R1),C'1'  ASA NEW PAGE\n         BNE   LOOP2 JUST SEND OUT\n         MVC   XPRM1+K3(K3),K1(R1)   ACQUIRE REPORT ID\n         MVC   XPRM2+K26(K3),K1(R1)\n         MVC   CALLSLOG+K18(K3),K1(R1)\nLOOP2    PUT   BACKUP,(0)\n         PUT   REPORT,(0)\n         LA    R6,INOUT PTR DCB\n         USING IHADCB,R6\n         LH    R6,DCBLRECL LRECL\n         DROP  R6\n         BCTR  R6,0 FOR EX\n         EX    R6,TRASCII CONVERT TO ASCII\n         LR    R0,R2 OUTPUT\n         PUTX  INOUT\n         B     LOOP\nTRASCII  TR    K0(*-*,R2),EBCASCII /* CHANGE TO ASCII */\nEOD      CLOSE (INOUT,,BACKUP,,REPORT)\n         FREEPOOL INOUT   ,\n         FREEPOOL BACKUP  ,\n         FREEPOOL REPORT  ,\nOPENSYSI OPEN  (SYSIN01,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYSI+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         TIME  DEC,CLOCK,LINKAGE=SYSTEM\n         MVC   WORK(K2),CLOCK HHMM\n         MVI   WORK+K2,X'0F' MAKE PACKED VALID\n         AP    WORK(K3),=PL3'2000' ADD 2 HOUR\n         CP    WORK(K3),=PL3'24000' OVER A DAY\n         BL    STTIME OKAY\n         SP    WORK(K3),=PL3'24000' CORRECT\nSTTIME   UNPK  WORK+K3(K5),WORK(K3) PRINTABLE\n         MVC   XPRM9+K10(K4),WORK+K3 FOR XCOM\n         LA    R6,XPRMCTR RECORD CTR\n         LA    R7,XPRM PTR\nXPRMLOOP PUT   SYSIN01,(R7)\n         LA    R7,K80(,R7)\n         BCT   R6,XPRMLOOP\n         CLOSE (SYSIN01)\n         FREEPOOL SYSIN01 ,\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         LA    R1,=A(XCOMMPRM) /* EXEC PARM */\n         BALR  RE,RF /* GO SCHEDULE */\n         LTR   RF,RF /* RC */\n         BNZ   MAINEXIT /* SCHEDULE FAILURE */\n         DELETE EPLOC=XCOMMEP\nCALLSLOG WTO   'IMAGEDREQ XXXXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n               XXXXXXXX'\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFRDJFCB  LA    RF,K28 /* RDJFCB FAILURE */\n         B     MAINEXIT\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nCLOCK    DC    D'0'\nWORK     DC    D'0'\nINOUT    DCB   DDNAME=INOUT,DSORG=PS,EODAD=EOD,MACRF=(GL,PM),          X\n               RECFM=FB,EXLST=JFCBLST\nBACKUP   DCB   DDNAME=BACKUP,DSORG=PS,MACRF=(PM),                      X\n               RECFM=FB\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),                      X\n               RECFM=FBA\nSYSIN01  DCB   DDNAME=SYSIN01,DSORG=PS,MACRF=(PM)\nJFCBLST  DC    0F'0',X'87',AL3(JFCB)\nJFCB     DC    0F'0',CL176' '\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMMPRM DC    AL2(L'XCOMMPRL)\nXCOMMPRL DC    C'TYPE=SCHEDULE,GROUP=IMAGESYS'\nHEXCHAR  DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\nXPRM     EQU   * *\nXPRM1    DC    CL80'ID=???XXXXX'\nXPRM2    DC    CL80'FILE=O:\\AIMSYS\\REPORTS\\IN\\???XXXXX.INP'\nXPRM3    DC    CL80'FILETYPE=FILE'\nXPRM4    DC    CL80'TYPE=SEND'\nXPRM5    DC    CL80'CODE=ASCII'\nXPRM6    DC    CL80'PACK=NO'\nXPRM7    DC    CL80'COMPRESS=YES'\nXPRM8    DC    CL80'RECSEP=NO'\nXPRM9    DC    CL80'STARTTIME=HHMM'\nXPRMCTR  EQU   (*-XPRM)/80\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C','\n         DC    X'2C255F3E3F'\n         ORG   EBCASCII+C'.'\n         DC    X'2E3C282B2026'\n         ORG   EBCASCII+C':'\n         DC    X'3A2340273D22'\n         ORG   EBCASCII+C'!'\n         DC    X'21242A293B202D2F'\n         ORG   EBCASCII+X'81'\n         DC    X'616263646566676869'\n         ORG   EBCASCII+X'91'\n         DC    X'6A6B6C6D6E6F707172'\n         ORG   EBCASCII+X'A2'\n         DC    X'737475767778797A'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(IMAGEGEN),DISP=SHR,\n// UNIT=,SPACE=\n//G.INOUT DD DSN=APPL215.N.FICHE.PARIDW00.AR03A.PRINT,DISP=SHR,\n//   FREE=CLOSE\n//G.LCLDS01 DD DSN=APPL215.N.FICHE.PARIDW00.AR03A.PRINT,DISP=SHR\n//G.BACKUP DD DUMMY,UNIT=CART,DISP=(NEW,KEEP),FREE=CLOSE,\n//     DSN=TECH110.TEST.BACKUP,LRECL=133,BLKSIZE=32718\n//G.SYSIN01 DD DSN=&&XCOMPRM,DISP=(NEW,DELETE),UNIT=VIO,\n//   SPACE=(TRK,(1,1)),RECFM=FB,LRECL=80\n//G.REPORT   DD SYSOUT=*,LRECL=133,FREE=CLOSE\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IMAGEGN4": {"ttr": 5382, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x93\\x02\\x8f\\x00\\x93\\x02\\x9f\\x10E\\x00\\xbf\\x01\\x08\\x00\\r\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1993-01-28T00:00:00", "modifydate": "1993-01-29T10:45:00", "lines": 191, "newlines": 264, "modlines": 13, "user": "TECH110"}, "text": "//TECH110A JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n/*JOBPARM S=SYSA\n//S EXEC ASMHCLG,PARM.L='LIST,LET,XREF,MAP'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nIMG      TITLE 'IMAGING SYSTEM RETRANSMIT DOWNLOAD PREP'\nIMAGEGEN CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK26      EQU   26\nK27      EQU   27\nK29      EQU   29\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK133     EQU   133\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nIMAGEGEN AMODE 24\nIMAGEGEN RMODE 24\n         SAVE  (14,12),,IMAGEGEN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING IMAGEGEN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         STCK  CLOCK\n         UNPK  WORK(K7),CLOCK+K2(K4) PROVIDE UNIQUE SERIAL#\n         TR    WORK+K0(K5),HEXCHAR-C'0'\n         MVC   XPRM1+K6(K5),WORK+K0\n         MVC   XPRM2+K29(K5),WORK+K0\n         MVC   CALLSLOG+K21(K5),WORK+K0\n         RDJFCB (LCLDS01)\n         LTR   RF,RF OKAY\n         BNZ   FRDJFCB\n         MVC   CALLSLOG+K27(K44),JFCB SAVE DSNAME TO BE PROCESS\n         MVC   XPRM1+K3(K3),JFCB     ACQUIRE REPORT ID\n         MVC   XPRM2+K26(K3),JFCB\n         MVC   CALLSLOG+K18(K3),JFCB\nOPENSYSI OPEN  (SYSIN01,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYSI+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         LA    R6,XPRMCTR RECORD CTR\n         LA    R7,XPRM PTR\nXPRMLOOP PUT   SYSIN01,(R7)\n         LA    R7,K80(,R7)\n         BCT   R6,XPRMLOOP\n         CLOSE (SYSIN01)\n         FREEPOOL SYSIN01 ,\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         LA    R1,=A(XCOMMPRM) /* EXEC PARM */\n         BALR  RE,RF /* GO SCHEDULE */\n         LTR   RF,RF /* RC */\n         BNZ   MAINEXIT /* SCHEDULE FAILURE */\n         DELETE EPLOC=XCOMMEP\nCALLSLOG WTO   'IMAGEDREQ XXXXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n               XXXXXXXX'\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFRDJFCB  LA    RF,K28 /* RDJFCB FAILURE */\n         B     MAINEXIT\nFOPEN    LA    RF,K24 /* OPEN   FAILURE */\n         B     MAINEXIT\nCLOCK    DC    D'0'\nWORK     DC    D'0'\nLCLDS01  DCB   DDNAME=LCLDS01,DSORG=PS,MACRF=(GL),                     X\n               RECFM=FB,EXLST=JFCBLST\nSYSIN01  DCB   DDNAME=SYSIN01,DSORG=PS,MACRF=(PM)\nJFCBLST  DC    0F'0',X'87',AL3(JFCB)\nJFCB     DC    0F'0',CL176' '\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMMPRM DC    AL2(L'XCOMMPRL)\nXCOMMPRL DC    C'TYPE=SCHEDULE,GROUP=IMAGESYS'\nHEXCHAR  DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\nXPRM     EQU   * *\nXPRM1    DC    CL80'ID=???XXXXX'\nXPRM2    DC    CL80'FILE=O:\\AIMSYS\\REPORTS\\IN\\???XXXXX.INP'\nXPRM3    DC    CL80'FILETYPE=FILE'\nXPRM4    DC    CL80'TYPE=SEND'\nXPRM5    DC    CL80'CODE=ASCII'\nXPRM6    DC    CL80'PACK=NO'\nXPRM7    DC    CL80'COMPRESS=YES'\nXPRM8    DC    CL80'RECSEP=NO'\nXPRMCTR  EQU   (*-XPRM)/80\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//*L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(IMAGREGN),DISP=SHR,\n//* UNIT=,SPACE=\n//G.LCLDS01 DD DSN=PMMK.N.IMAGE.PMMRK75D.STEP0015.PRINTER,DISP=SHR,\n//    FREE=CLOSE\n//G.SYSIN01 DD DSN=&&XCOMPRM,DISP=(NEW,DELETE),UNIT=VIO,\n//   SPACE=(TRK,(1,1)),RECFM=FB,LRECL=80\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IMAGETST": {"ttr": 5386, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x921\\x0f\\x00\\x93\\x02\\x8f\\x14A\\x00\\x0f\\x00\\x03\\x00\\x0f\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1992-11-05T00:00:00", "modifydate": "1993-01-28T14:41:00", "lines": 15, "newlines": 3, "modlines": 15, "user": "TECH110"}, "text": "//TECH110A JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n/*JOBPARM S=SYSA\n//S EXEC PGM=IMAGEGEN\n//STEPLIB DD DSN=TECH110.USER.LOADLIB,DISP=SHR\n//INOUT   DD DSN=APPL215.N.FICHE.PARIDW00.AR06A.DEPT,DISP=SHR,\n//  FREE=CLOSE\n//LCLDS01 DD DSN=APPL215.N.FICHE.PARIDW00.AR06A.DEPT,DISP=SHR,\n//  FREE=CLOSE\n//BACKUP DD DUMMY,UNIT=CART,DISP=(NEW,KEEP),FREE=CLOSE,\n//   DSN=TECH110.TEST.BACKUP,LRECL=133,BLKSIZE=32718\n//SYSIN01 DD DSN=&&XCOMPRM,DISP=(NEW,DELETE),UNIT=VIO,\n//  SPACE=(TRK,(1,1)),RECFM=FB,LRECL=80\n//REPORT   DD SYSOUT=Z,LRECL=133,FREE=CLOSE\n//SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IMAGTST": {"ttr": 5388, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x930\\x1f\\x00\\x95\"o\\x15R\\x01\"\\x01\\x1d\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1993-10-28T00:00:00", "modifydate": "1995-08-14T15:52:00", "lines": 290, "newlines": 285, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCL\n//C.SYSIN DD *\nIMG      TITLE 'IMAGING SYSTEM DOWNLOAD PREP'\nIMAGEGEN CSECT ,\n*        FILE=O:\\AIMSYS\\REPORTS\\IN\\???XXXXX.INP\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK26      EQU   26\nK27      EQU   27\nK29      EQU   29\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK133     EQU   133\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nIMAGEGEN AMODE 24\nIMAGEGEN RMODE 24\n         SAVE  (14,12),,IMAGEGEN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING IMAGEGEN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         STCK  CLOCK\n         UNPK  WORK(K7),CLOCK+K2(K4) PROVIDE UNIQUE SERIAL#\n         TR    WORK+K0(K5),HEXCHAR-C'0'\n         MVC   XPRM1+K6(K5),WORK+K0\n         MVC   XPRM2+K29(K5),WORK+K0\n         MVC   CALLSLOG+K21(K5),WORK+K0\n         RDJFCB (INOUT)\n         LTR   RF,RF OKAY\n         BNZ   FRDJFCB\n         MVC   CALLSLOG+K27(K44),JFCB SAVE DSNAME TO BE PROCESS\nOPENLIST OPEN  (INOUT,(UPDAT),BACKUP,(OUTPUT),REPORT,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R8,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         USING IHADCB,R8\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R8\nLOOP     GET   INOUT\n         LR    R2,R1 SAVE RECORD PTR\n         LR    R0,R1 FOR OUTPUT\n         CLI   XPRM1+K3,C'?' STILL LOOKING FOR FIRST NONBLANK RCD\n         BNE   LOOP2 NO\n DC X'0000'\n         CLI   K0(R1),C'1'  ASA NEW PAGE\n         BNE   LOOP2 JUST SEND OUT\n         MVC   XPRM1+K3(K3),K1(R1)   ACQUIRE REPORT ID\n         MVC   XPRM2+K26(K3),K1(R1)\n         MVC   CALLSLOG+K18(K3),K1(R1)\nLOOP2    PUT   BACKUP,(0)\n         PUT   REPORT,(0)\n         LA    R6,INOUT PTR DCB\n         USING IHADCB,R6\n         LH    R6,DCBLRECL LRECL\n         DROP  R6\n         BCTR  R6,0 FOR EX\n         EX    R6,TRASCII CONVERT TO ASCII\n         LR    R0,R2 OUTPUT\n         PUTX  INOUT\n         B     LOOP\nTRASCII  TR    K0(*-*,R2),EBCASCII /* CHANGE TO ASCII */\nEOD      CLOSE (INOUT,,BACKUP,,REPORT)\n         FREEPOOL INOUT   ,\n         FREEPOOL BACKUP  ,\n         FREEPOOL REPORT  ,\nOPENSYSI OPEN  (SYSIN01,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYSI+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         TIME  DEC,CLOCK,LINKAGE=SYSTEM\n         TIME  DEC  /* OLD FORMAT FOR DATE */\n         STCM  R1,K7,WORK2 DATE IS 0CYYDDDF\n         MVC   WORK(K2),CLOCK HHMM\n         MVI   WORK+K2,X'0F' MAKE PACKED VALID\n         AP    WORK(K3),=PL3'20' ADD 2 MIN\n         CP    WORK+1(K2),=PL2'600' OVER AN HOUR\n         BL    STTIME OKAY\n         MVI   WORK+1,X'02' 2 MIN PAST THE HOUR\n         AP    WORK(K3),=PL3'1000' ADD 1 HOUR\n         CP    WORK(K3),=PL3'24000' OVER A DAY\n         BL    STTIME OKAY\n         SP    WORK(K3),=PL3'24000' CORRECT\n         AP    WORK2(K3),=PL3'1' ADD FOR TOMORROW\nSTTIME   UNPK  WORK+K3(K5),WORK(K3) PRINTABLE\n         MVC   XPRM9+K10(K4),WORK+K3 FOR XCOM\n         UNPK  WORK2+K3(K5),WORK2(K3) PRINTABLE\n         MVC   XPRM10+K10(K5),WORK2+K3 FOR XCOM\n         OI    XPRM10+K14,C'0'\n         LA    R6,XPRMCTR RECORD CTR\n         LA    R7,XPRM PTR\nXPRMLOOP PUT   SYSIN01,(R7)\n         LA    R7,K80(,R7)\n         BCT   R6,XPRMLOOP\n         CLOSE (SYSIN01)\n         FREEPOOL SYSIN01 ,\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         LA    R1,=A(XCOMPA) /* EXEC PARM FOR SYSA*/\n         L     RE,K16 CVT\n         ICM   RE,K7,197(RE) CVTSMCA\n         LA    RE,K0(,RE) CLEAR HI\n         CLC   =C'SYSA',K16(RE) IS SYSA\n         BE    GOSCHED YES\n         CLC   =C'SYSB',K16(RE) IS SYSB\n         BNE   FSMCA  UNKNOWN SYSTEM\n         LA    R1,=A(XCOMPB) /* EXEC PARM FOR SYSB*/\nGOSCHED  BALR  RE,RF /* GO SCHEDULE */\n         LTR   RF,RF /* RC */\n         BNZ   MAINEXIT /* SCHEDULE FAILURE */\n         DELETE EPLOC=XCOMMEP\nCALLSLOG WTO   'IMAGEDREQ XXXXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n               XXXXXXXX'\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFSMCA    LA    RF,K32 /* SMCA   FAILURE */\n         B     MAINEXIT\nFRDJFCB  LA    RF,K28 /* RDJFCB FAILURE */\n         B     MAINEXIT\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nCLOCK    DC    D'0',D'0'\nWORK     DC    D'0'\nWORK2    DC    D'0'\nINOUT    DCB   DDNAME=INOUT,DSORG=PS,EODAD=EOD,MACRF=(GL,PM),          X\n               RECFM=FB,EXLST=JFCBLST\nBACKUP   DCB   DDNAME=BACKUP,DSORG=PS,MACRF=(PM),                      X\n               RECFM=FB\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),                      X\n               RECFM=FBA\nSYSIN01  DCB   DDNAME=SYSIN01,DSORG=PS,MACRF=(PM)\nJFCBLST  DC    0F'0',X'87',AL3(JFCB)\nJFCB     DC    0F'0',CL176' '\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMPA   DC    AL2(L'XCOMPAL)\nXCOMPAL  DC    C'TYPE=SCHEDULE,GROUP=IMAGESYS,STCAPPL=XCOMAPPL,ACBNAME=*\n               XCOM'\nXCOMPB   DC    AL2(L'XCOMPBL)\nXCOMPBL  DC    C'TYPE=SCHEDULE,GROUP=IMAGESYS,STCAPPL=XCOMAPPL,ACBNAME=*\n               XCOB'\nHEXCHAR  DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\nXPRM     EQU   * *\nXPRM1    DC    CL80'ID=???XXXXX'\nXPRM2    DC    CL80'FILE=O:\\AIMSYS\\REPORTS\\IN\\???XXXXX.INP'\nXPRM3    DC    CL80'FILETYPE=FILE'\nXPRM4    DC    CL80'TYPE=SEND'\nXPRM5    DC    CL80'CODE=ASCII'\nXPRM6    DC    CL80'PACK=NO'\nXPRM7    DC    CL80'COMPRESS=YES'\nXPRM8    DC    CL80'RECSEP=NO'\nXPRM9    DC    CL80'STARTTIME=HHMM'\nXPRM10   DC    CL80'STARTDATE=YYDDD'\nXPRMCTR  EQU   (*-XPRM)/80\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C','\n         DC    X'2C255F3E3F'\n         ORG   EBCASCII+C'.'\n         DC    X'2E3C282B2026'\n         ORG   EBCASCII+C':'\n         DC    X'3A2340273D22'\n         ORG   EBCASCII+C'!'\n         DC    X'21242A293B202D2F'\n         ORG   EBCASCII+X'81'\n         DC    X'616263646566676869'\n         ORG   EBCASCII+X'91'\n         DC    X'6A6B6C6D6E6F707172'\n         ORG   EBCASCII+X'A2'\n         DC    X'737475767778797A'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(GSY05A),DISP=SHR,UNIT=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IMPRTCAT": {"ttr": 5638, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x915o\\x00\\x916\\x1f\\x18\\x11\\x00\\x0f\\x00\\x14\\x00\\t\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-12-22T00:00:00", "modifydate": "1991-12-27T18:11:00", "lines": 15, "newlines": 20, "modlines": 9, "user": "TECH110"}, "text": "//JEFFKS   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IDCAMS,REGION=6M\n//* IMPORT ALL XA USERCATS\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n IMPORT CON OBJ((PDU.PROD.ONE.USERCAT DEVT(3380) VOL(MXA001)))\n IMPORT CON OBJ((PDU.PROD.TWO.USERCAT DEVT(3380) VOL(MXA002)))\n IMPORT CON OBJ((PDU.PROD.THREE.USERCAT DEVT(3380) VOL(MXA003)))\n IMPORT CON OBJ((SYS1.UCATTSOE.XA.CLUSTER DEVT(3390) VOL(SYSDA5)))\n IMPORT CON OBJ((TDU.TEST.ONE.USERCAT DEVT(3380) VOL(MXA003)))\n IMPORT CON OBJ((TECH.USER.CATALOG DEVT(3380) VOL(MXACAT)))\n/*\n//* MCAT CATALOG.MVSICFM.VMVSCAT MVSCAT 3380\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INCLUDE1": {"ttr": 5640, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92 _\\x00\\x92 _\\x153\\x00\\x02\\x00\\x01\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-07-23T00:00:00", "modifydate": "1992-07-23T15:33:00", "lines": 2, "newlines": 1, "modlines": 1, "user": "TECH110"}, "text": "//INCLUDE1 DD DSN=TECH110.RMF.HISTORY,DISP=SHR\n//INC2     INCLUDE MEMBER=INCLUDE2\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INCLUDE2": {"ttr": 5642, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92 _\\x00\\x92 _\\x150\\x00\\x01\\x00\\x01\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-07-23T00:00:00", "modifydate": "1992-07-23T15:30:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "TECH110"}, "text": "//INCLUDE2 DD DSN=TECH110.RMF.HISTORY.OUTPUT,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IOCPCHK": {"ttr": 5644, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01#\\x00\\x00\\x00\\x881\\x9f\\x00\\x95\\x01\\x0f\\x16R\\x00\\x08\\x00\\x0c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.35", "flags": 0, "createdate": "1988-11-14T00:00:00", "modifydate": "1995-01-10T16:52:00", "lines": 8, "newlines": 12, "modlines": 0, "user": "TECH110"}, "text": "//TECH110L JOB 5304010530000000,'TECH.SUPP.TECH110',\n//             NOTIFY=TECH110,\n//             CLASS=S,MSGCLASS=G\n//IOCPLST   EXEC PGM=AMDIOCP,PARM='FORMAT=EMIF,VERIFY=5995M,LPAR=YES'\n//SYSIN     DD   DSN=TECH110.USER.CNTLLIB(AMD2570M),DISP=SHR\n//SYSPRINT  DD   SYSOUT=*,DCB=(RECFM=FA)\n//SYSPROF   DD   DUMMY,DCB=(LRECL=80,RECFM=F,DSORG=PS)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IOCPWRIT": {"ttr": 5646, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x95\\x01/\\x00\\x95\\x17O\\x10C\\x00\\x08\\x00\\x08\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1995-01-12T00:00:00", "modifydate": "1995-06-23T10:43:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "TECH110"}, "text": "//TECH110L JOB 5304010530000000,'TECH.SUPP.TECH110',\n//             NOTIFY=TECH110,\n//             CLASS=S,MSGCLASS=G\n//IOCPLST   EXEC PGM=AMDIOCP,PARM='FORMAT=EMIF,WRTCDS=A1,LPAR=YES'\n//SYSIN     DD   DSN=TECH110.USER.CNTLLIB(AMD2570M),DISP=SHR\n//SYSPRINT  DD   SYSOUT=*,DCB=(RECFM=FA)\n//SYSPROF   DD   DUMMY,DCB=(LRECL=80,RECFM=F,DSORG=PS)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IOSUBSYS": {"ttr": 5648, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x00\\x00\\x952O\\x00\\x952o\\x17G\\x00U\\x00\\x0e\\x00N\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1995-11-20T00:00:00", "modifydate": "1995-11-22T17:47:00", "lines": 85, "newlines": 14, "modlines": 78, "user": "TECH110"}, "text": "/* REXX I/O Subsystem display */\nokay = 0;\ntrue=1;\ndevlist=\"\";\n\"CONSPROF SOLDISP(NO)\";\n\"CONSOLE ACTIVATE\";\naddress \"CONSOLE\";\n\"CART CHPSTAT\";\ndo i = 0 to 255;\nchpid = d2x(i,2);\nchpd.chpid=\"\";\n\"D M=CHP(\"chpid\")\";\nresponse = GETMSG(\"resp.\",\"SOL\",\"CHPSTAT\",,30);\nif response = okay then do j =3 to (resp.0 - 3);\n     if j=3 & ,\n         pos(\"PART OF ANOTHER\",resp.j)>0 then iterate i;\n     if j=3 & ,\n         pos(\"DOES NOT EXIST\",resp.j)>0 then iterate i;\n      else if j=3 then nop;\n      else do;\n          pdev=word(resp.j,1);\n          do k = 0 to 15;\n              kdev=right(pdev||d2x(k,1),4,\"0\");\n              if wordpos(kdev,devlist)=0 then do;\n                   devlist = devlist kdev;\n                   dev.kdev = word(resp.j,k+2) chpid;\n                   end;\n                else ,\n                   dev.kdev = dev.kdev word(resp.j,k+2) chpid;\n          end k;\n        end;\n   end j;\n  else do;\n     say \"Error processing CHPID\" chpid;\n     exit 16;\n     end;\nend i;\n\"DEACTIVATE\";\naddress \"TSO\";\n\"CONSPROF SOLDISP(YES)\";\ncvtptr = storage(\"00000010\",4); /* locate llt/smca from cvt */\ncvtsmca = storage(d2x(c2d(cvtptr)+196),4); /* mapping smca */\nsavehi=substr(c2x(cvtsmca),1,2); /* hi order bit is on */\nsmcasid = savehi||d2x(x2d(substr(c2x(cvtsmca),3))+16);\nsmcasid = storage(smcasid,4); /* SMF id */\noutptr=1;\noutp.outptr=\"System\" smcasid \"I/O Configuration as of\" date(\"U\")\".\";\ndo j = 0 to 4095; /* process list */\n   if pos(d2x(j,4),devlist)=0 then iterate j;\n   z = d2x(j,4); /* note works only for 3 digit devno with left 0 */\n   l = words(dev.z);\n   outptr=outptr+1;\n   outp.outptr=\"Devno\" z\n   do k = 1 to l by 2;\n       str=\"\";\n       status = word(dev.z,k);\n       chpid = word(dev.z,k+1);\n       if pos(\"+\",status)>0 then str=str \"and Online\";\n       if pos(\"@\",status)>0 then str=str \"and Path not validated\";\n       if pos(\"-\",status)>0 then str=str \"and Offline\";\n       if pos(\".\",status)>0 then str=str \"and Device does not exist\";\n       if pos(\"*\",status)>0 then str=str \"and Physically online\";\n       if pos(\"$\",status)>0 then str=str \"and Path not operational\";\n       str=substr(space(str),5)\".\";\n       outptr=outptr+1;\n       outp.outptr=\"    \" \"via CHPID\" chpid \"status is\" str;\n       chpd.chpid=chpd.chpid z translate(str,\"$\",\" \");\n   end k;\nend;\ndo i = 0 to 255;\n  chpid = d2x(i,2);\n  outptr=outptr+1;\n  outp.outptr=\"CHPID\" chpid;\n  xword=words(chpd.chpid);\n  do j = 1 to xword by 2;\n      devno=word(chpd.chpid,j);\n      str=translate(word(chpd.chpid,j+1),\" \",\"$\");\n      outptr=outptr+1;\n      outp.outptr=\"    \" \"Devno\" devno \"status is\" str;\n  end;\nend;\n\"ALLOC F(OUTPUT) DA('TECH110.USER.CNTLLIB(IOSTATS)') SHR\";\n\"EXECIO * DISKW OUTPUT (STEM outp. FINIS\";\n\"FREE F(OUTPUT)\";\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ITEST": {"ttr": 5651, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x93\\x01\\x8f\\x00\\x93\\x02\\x0f\\x17\\x19\\x00\\x11\\x00\\x0b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1993-01-18T00:00:00", "modifydate": "1993-01-20T17:19:00", "lines": 17, "newlines": 11, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=O,MSGCLASS=G,MSGLEVEL=(1,1)\n/*JOBPARM S=SYSA\n//STEP01 EXEC ASMHCLG\n//C.SYSIN DD *\nTEST CSECT\n SAVE (14,12)\n LR 9,13\n LR 10,15\n USING TEST,10\n LA 13,SAVE\n WTO 'L71AX020 P1 ID=PAR72E7A XCOMM0137I P5 P6 P7 SUCCESSFULLY X'\n LR  13,9\n RETURN (14,12),RC=0\nSAVE DS 18F\n LTORG\n END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCLPDB6": {"ttr": 5653, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94&/\\x00\\x94&/\\x11Y\\x00m\\x00m\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-09-19T00:00:00", "modifydate": "1994-09-19T11:59:00", "lines": 109, "newlines": 109, "modlines": 1, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//MXGSAS   PROC ENTRY=SASXA1,\n//    WORK='30,10',             WORK SPACE, CYLINDERS\n//    SORT=10,                  SORT WORK SPACE, CYLINDERS\n//    MXGHLQ='SYSS.MXG.V12R03MA',    LEVEL QUALIFIER FOR MXG LIBRARIES\n//    SASHLQ='SYSS.SAS.V6R8M0', HIGH LEVEL QUALIFIER FOR SAS LIBRARIES\n//    CONFIG=NULLFILE,\n//    LOAD='*.NULLPDS,VOL=REF=*.NULLPDS',\n//    SASAUTO='*.NULLPDS,VOL=REF=*.NULLPDS',\n//    OPTIONS=\n//*********************************************************************\n//*  JCL PROCEDURE \"MXGSAS\" TO EXECUTE MXG PROGRAMS UNDER SAS        **\n//*                                                                  **\n//*  USES \"PRODUCTION\" MXG DATA SET NAMES OF                         **\n//*           MXG.USERID.SOURCLIB      -  INSTALLATION TAILORING     **\n//*           MXG.MXG.SOURCLIB         -  MXG MASTER SOURCE LIBRARY  **\n//*           MXG.MXG.FORMATS          -  MXG FORMAT LIBRARY         **\n//*                                                                  **\n//*  VENDOR:  MERRILL CONSULTANT'S MXG SOFTWARE  214-351-1966        **\n//*                                                                  **\n//*  THE DEFAULT SYMBOLICS DEFINED ABOVE ASSUME YOUR HIGH LEVEL      **\n//*   QUALIFIER FOR SAS LIBRARIES IS \"SAS.SAS608\" AND YOUR HIGH      **\n//*   LEVEL QUALIFIER FOR MXG LIBRARIES IS \"MXG\".                    **\n//*                                                                  **\n//*********************************************************************\n//MXGSAS   EXEC PGM=&ENTRY,PARM='SORT=&SORT &OPTIONS'\n//NULLPDS   DD DISP=(MOD,PASS),DSN=&&NULLPDS,UNIT=SYSDA,\n//    SPACE=(TRK,(1,1,1)),DCB=BLKSIZE=6160\n//STEPLIB   DD DISP=(SHR,PASS),DSN=&LOAD\n//          DD DISP=SHR,DSN=&SASHLQ..LIBRARY\n//CONFIG    DD DISP=SHR,DSN=&SASHLQ..CNTLLIB(BATCHXA)\n//          DD DISP=SHR,DSN=&MXGHLQ..SRCELIB(CONFIG)\n//          DD DISP=SHR,DSN=&CONFIG\n//SASAUTOS  DD DISP=(SHR,PASS),DSN=&SASAUTO\n//          DD DISP=SHR,DSN=&SASHLQ..AUTOLIB\n//SASHELP   DD DISP=SHR,DSN=&SASHLQ..SASHELP\n//SASMSG    DD DISP=SHR,DSN=&SASHLQ..SASMSG\n//WORK      DD UNIT=SYSDA,SPACE=(CYL,(&WORK),,,ROUND)\n//SASLOG    DD SYSOUT=*\n//SASLIST   DD SYSOUT=*\n//SASPARM   DD UNIT=SYSDA,SPACE=(400,(100,300)),\n//    DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,BUFNO=1)\n//SORTWK01  DD UNIT=SYSDA,SPACE=(CYL,(&SORT))\n//SORTWK02  DD UNIT=SYSDA,SPACE=(CYL,(&SORT))\n//SORTWK03  DD UNIT=SYSDA,SPACE=(CYL,(&SORT))\n//INSTREAM  DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//LIBRARY   DD DISP=SHR,DSN=&MXGHLQ..FORMATS\n//SOURCLIB  DD DISP=SHR,DSN=&MXGHLQ..CNTLLIB\n//          DD DISP=SHR,DSN=&MXGHLQ..SRCELIB\n// PEND\n//S1 EXEC MXGSAS,TIME=15,WORK=200\n//PDB      DD DSN=TECH110.MXG.PDB,DISP=(,CATLG),\n//            DCB=RECFM=FS,\n//            SPACE=(CYL,(5,3))\n//*\n//SPIN     DD DSN=TECH110.MXG.SPIN,DISP=(,CATLG),\n//            DCB=RECFM=FS,\n//            SPACE=(CYL,(5,3))\n//*\n//*   BY DEFAULT, MXG SENDS CICSTRAN DATA TO THE CICSTRAN DDNAME, WHICH\n//*    MOST SITES PUT ON TAPE BECAUSE OF ITS VOLUME, AND WHICH IS THEN\n//*    READ BACK IN WITH ASUMCICS TO PUT THE PDB.CICS SUMMARIZED DATASET\n//*    IN YOUR DAILY PDB.  YOU CONTROL THE DESTINATION IN IMACCICS.\n//*   IF YOU DO NOT HAVE TYPE 110 SMF RECORDS TO PROCESS, YOU CAN REMOVE\n//*    THIS CICSTRAN DDNAME, PROVIDED YOU FIRST EDIT MEMBER IMACCICS AND\n//*    CHANGE ALL DDNAMES THEREIN ALL TO \"WORK\".\n//CICSTRAN DD DSN=TECH110.MXG.CICSTRAN,DISP=(,CATLG),  CICS 110 TRANS\n//            DCB=RECFM=FS\n//*\n//*   BY DEFAULT, MXG SENDS DB2ACCT TO THE PDB, BECAUSE IT IS NOT TOO\n//*    LARGE AT MOST MXG SITES.  HOWEVER, LARGE DB2 SITES NEED TO BE\n//*    ABLE TO PUT DB2ACCT TO TAPE.  BY CHANGING THE DEFAULT _LDB2ACC\n//*    FROM \"DB2ACCT\" TO \"DB2ACCT.DB2ACCT\" IN MEMBER IMACDB2, AND THEN\n//*    ADDING THE //DB2ACCT DD, YOU TOO CAN STORE YOUR DETAIL DB2ACCT\n//*    DATA SET IN THE DB2ACCT DATA LIBRARY ON TAPE.\n//DB2ACCT  DD DSN=TECH110.MXG.DB2ACCT,DISP=(,CATLG),    DB2 101 ACCT\n//            DCB=RECFM=FS\n//*\n//SMF      DD DSN=TECH110.SMF.EXTRACT,DISP=SHR\n//*\n//SOURCLIB DD DSN=SYSS.MXG.V12R03MA.CNTLLIB,DISP=SHR\n//         DD DSN=SYSS.MXG.V12R03MA.SRCELIB,DISP=SHR\n//*\n//SYSIN    DD *\n\n  %INCLUDE SOURCLIB(BUILDPDB); /*BUILD PDB                      */\n\n     /* ASUM MEMBERS SUMMARIZE DETAIL DATA INTO THE PDB */\n\n  %INCLUDE SOURCLIB(ASUMCICS); /*BUILD PDB.CICS FROM CICSTRAN     */\n  %INCLUDE SOURCLIB(ASUMDB2A); /*BUILD PDB.ASUMDB2A FROM DB2ACCT  */\n  %INCLUDE SOURCLIB(ASUMJOBS); /*BUILD PDB.JOBSKED FROM JOBS      */\n  %INCLUDE SOURCLIB(ASUM70PR); /*BUILD PDB.ASUM70PR FROM TYPE70PR */\n  %INCLUDE SOURCLIB(ASUMTMNT); /*BUILD PDB.TAPEMNTS FROM TYPETMNT */\n\n  /* ANAL MEMBERS ANALYZE AND PRODUCE SAMPLE REPORTS */\n\n  %INCLUDE SOURCLIB(ANALCONT);\n  %INCLUDE SOURCLIB(ANALDALY);   /* NOTE:  IT IS NOT NORMAL TO    */\n  %INCLUDE SOURCLIB(ANALPROG);   /*        CONCATENATE ALL OF     */\n  %INCLUDE SOURCLIB(ANALESV);    /*        THESE MXG ANALYSIS     */\n  %INCLUDE SOURCLIB(ANALMPL);    /*        AND REPORTING PROGRAMS */\n  %INCLUDE SOURCLIB(ANALAVAL);   /*        IN YOUR DAILY PDB RUN. */\n  %INCLUDE SOURCLIB(ANALPRNT);   /*        THEY ARE INCLUDED HERE */\n  %INCLUDE SOURCLIB(ANALTAPE);   /*        SO THAT YOU WILL GET   */\n  %INCLUDE SOURCLIB(ANALTSOR);   /*        SOME SAMPLE REPORTS ON */\n  %INCLUDE SOURCLIB(ANALTURN);   /*        YOUR FIRST EXECUTION OF*/\n  %INCLUDE SOURCLIB(ANALCICS);   /*        BUILDPDB.              */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLRPT": {"ttr": 5656, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00\\x90(_\\x00\\x90(_\\x08Q\\x00\\t\\x00'\\x00\\x01\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-10-12T00:00:00", "modifydate": "1990-10-12T08:51:00", "lines": 9, "newlines": 39, "modlines": 1, "user": "JEFFK"}, "text": "//JEFFKT   JOB 530000000000,'TECH.JEFF.KAPLAN',NOTIFY=JEFFK,\n//         MSGCLASS=G,MSGLEVEL=(1,1),REGION=4M,CLASS=S\n//REPORT1  EXEC PGM=DOCRPT,REGION=4M,\n// PARM='RPT(XJOB),JOB(*),SYSTEM(*),INALL'\n//STEPLIB  DD  DSN=CAI.DISP40.CAILIB,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSDICT  DD  DSN=CAI.CAAPCDOC.SYSDICT,DISP=OLD\n//SYSDICT1 DD  DSN=CAI.CAAPCDOC.SYSPATH,DISP=OLD\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JEFFCALL": {"ttr": 5658, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x931?\\x00\\x931?\\x12\\x00\\x00\\t\\x00\\t\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-11-09T00:00:00", "modifydate": "1993-11-09T12:00:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "TECH110"}, "text": "//TECH110C JOB 530401053000,'J KAPLAN',NOTIFY=TECH110,\n//    CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1)\n//STEP1    EXEC PGM=JEFFCALL\n//STEPLIB  DD   DSN=TECH110.USER.LOADLIB,DISP=SHR\n//         DD   DSN=SYS1.TEST.BATCH.LOADLIB,DISP=SHR\n//SYSUDUMP DD   SYSOUT=*\n//SYSPRINT DD   SYSOUT=*\n//SYSOUT   DD   SYSOUT=*\n//*******************************************************************\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JOBCARD": {"ttr": 5889, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92)?\\x00\\x92)?\\x13)\\x00\\x02\\x00\\x02\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-10-19T00:00:00", "modifydate": "1992-10-19T13:29:00", "lines": 2, "newlines": 2, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JSVERIFY": {"ttr": 5891, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\x08_\\x00\\x93\\x08_\\x156\\x00\\x18\\x00\\x19\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-03-26T00:00:00", "modifydate": "1993-03-26T15:36:00", "lines": 24, "newlines": 25, "modlines": 2, "user": "TECH110"}, "text": "//TECH110Y JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//PRODXREF EXEC JS5PROC,DJSNAME='SYSS.DSSI.V5R6M2'\n//STEP01.STEPLIB DD DSN=SYS1.DSSI.V5R6M2.LOAD,DISP=SHR\n//STEP01.JLLOD   DD DSN=SYS1.DSSI.V5R6M2.LOAD,DISP=SHR\n//STEP01.SYSIN DD *\nINPUT SELECTION\n      DSN=SYS1.PRODJCL.MASTER\n      SOURCE TYPE=LIBRARIAN-3\n      SELECT=PREFIX=RBCKFEE\nRUN OPTIONS:\n      ACCESS CONTROL CARDS=NO,LIMIT=99\n      CAC=NO,NOVTOC,NOPGM,NOPDSMEM\n      EXIT NAME=JSVFYPGM,'JOB,PROC,PROG,DD'\n      JLJPA PROCLIB TYPE=LIBRARIAN-3\n      JLJPC PROCLIB TYPE=LIBRARIAN-3\n      JOB LIMIT=(0,0)\n      SMS=NOACS,NOCAS\n      TEMPORARY DATA SETS=INCLUDE\n/*\n//STEP01.JLJPA DD DSN=SYS1.PRODPROC.MASTER,DISP=SHR\n//STEP01.JLJPF DD DSN=SYS1.PRODSYSI.MASTER,DISP=SHR,SUBSYS=LAM\n//STEP01.JLLTM DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LDATAB": {"ttr": 5893, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x90&\\x8f\\x00\\x90&\\x8f\\x14C\\x00\\x10\\x00\\x17\\x00\\x01\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-09-25T00:00:00", "modifydate": "1990-09-25T14:43:00", "lines": 16, "newlines": 23, "modlines": 1, "user": "JEFFK"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n LDATA STATUS VOL(POS001) UNIT(3380)\n LDATA STATUS VOL(POS002) UNIT(3380)\n LDATA STATUS VOL(DRV29E) UNIT(3380)\n LDATA STATUS VOL(TEST02) UNIT(3380)\n LDATA STATUS VOL(DRV724) UNIT(3380)\n LDATA STATUS VOL(DRV725) UNIT(3380)\n LDATA STATUS VOL(DRV726) UNIT(3380)\n LDATA STATUS VOL(DRV727) UNIT(3380)\n LDATA COUNTS VOL(POS001) UNIT(3380) SSYS\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LIBIP02": {"ttr": 5895, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x14\\x1f\\x00\\x91\\x15\\x1f\\x10 \\x00E\\x00D\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-05-21T00:00:00", "modifydate": "1991-05-31T10:20:00", "lines": 69, "newlines": 68, "modlines": 0, "user": "JEFFK"}, "text": ")ATTR DEFAULT(%\u00a6_)\n  ? TYPE(TEXT)  INTENS(LOW) COLOR(BLUE)\n  % TYPE(TEXT)  INTENS(HIGH) COLOR(RED) HILITE(BLINK)\n  # TYPE(TEXT)  INTENS(LOW)  COLOR(WHITE)\n  @ TYPE(TEXT)  INTENS(LOW)  COLOR(YELLOW) HILITE(REVERSE)\n  ! TYPE(TEXT)  INTENS(HIGH) COLOR(YELLOW)\n  } TYPE(TEXT)  INTENS(HIGH) COLOR(TURQ)\n  _ TYPE(INPUT) INTENS(HIGH) COLOR(RED) CAPS(ON)\n  \u00a2 TYPE(OUTPUT) INTENS(HIGH) COLOR(RED) JUST(RIGHT)\n  ~ TYPE(OUTPUT) INTENS(HIGH) COLOR(RED)  JUST(LEFT)\n  \u00ac TYPE(INPUT)  INTENS(NON)\n  + TYPE(OUTPUT) INTENS(LOW)  COLOR(WHITE)\n)BODY CMD(ZCMD) SMSG(MSG1) LMSG(MSG2) EXPAND(\\\\)\n!\\*\\**** &RL EXTENDED LIBRARIAN INTERACTIVE PRODUCTIVITY SERVICES **\\*\\*\n#COMMAND ===>_ZCMD                                       \u00a2Z                    \u00a6\n\u00a2Z\n@|||||||@@@@|||@@@@@@@@|||@@|||||||||@@||||||||@@@@#****AVAILABLE FUNCTIONS*****\n@|||@@@@@@@@|||@@@@@@@@|||@@|||@@@|||@@|||@@@@@@@@@#*}A- ARCLIST  E- EDIT     #*\n@||||||@@@@@|||@@@@@@@@|||@@|||||||||@@|||||||||@@@#*}B- BROWSE   I- INFO     #*\n@|||@@@@@@@@|||@@@@@@@@|||@@|||@@@@@@@@@@@@@@|||@@@#*}C- COPY     P- PRINT    #*\n@|||||||||@@|||||||||@@|||@@|||@@@@@@@@|||||||||@@@#*}D- DELETE   R- RENAME   #*\n                                                   #*                         #*\n ?LIBRARIAN LIBRARY:                               #*                         #*\n     ?PROJECT#===>_LIBIPRJ #                       #*}OPTIONS-?DISPLAY/SET    #*\n     ?GROUP  #===>_LIBILIB #                       #*}TYPES  -?AVAILABLE TYPES#*\n     ?TYPE   #===>_LIBITYP #                       #*}UTILITY-?COPY           #*\n     ?MEMBER #===>_LIBIIMOD?NEWNAME#===>_LIBINNM ? #*********#SCREEN+Z#*********\n     ?PSWD   #===>_LIBP?   ?MCD    #===>\u00acZ   #\n!    ?ARC LVL#===>_LIBIARC     #\n!\n ?OTHER LIBRARIAN DSNAME#===>_LIBIODSN\n      \u00a6\n ?SELECTION LIST #===>_Z! (L/S/Q)    LONG LIST:   ?PGMR#===>_LIBIPGMR       ?\n                                                   TYPE#===>_LIBISTYP!(OR /lan)\n!?CONFIRM DELETE #===>_Z! (Y/N)     ?PRINT FUNCTION    #===>_Z   !  (REPT/DATA)\n!?DISPLAY HISTORY#===>_Z! (Y/N)\n)INIT\n  .ZVARS='(MSG1,MSG2,ZSCREEN,ELI$DMCD,LIBISLSL,LIBICDYN,LIBPREP,LIBIHDYN)      '\n  .HELP = TLIBRE\n  IF (&CURSOR = ' ')\n    &CURSOR = LIBIIMOD\n    IF (&LIBITYP = ' ')\n      &CURSOR = LIBITYP\n    IF (&LIBILIB = ' ')\n      &CURSOR = LIBILIB\n    IF (&LIBIPRJ = ' ')\n      &CURSOR = LIBIPRJ\n    .CURSOR = &CURSOR\n  &RL = &ELI$OREL\n  &LIBISTYP=&LIBIXTYP\n)PROC\n  &LIBIMAC = @LIBEPRF\n  VER (&LIBIPRJ,DSNAME)\n  VER (&LIBILIB,DSNAME)\n  VER (&LIBITYP,DSNAME)\n  IF (&LIBP \u00ac= ' ')\n    VER (&LIBP,PICT,CCCC)\n  VER (&LIBISLSL,LIST,L,S,Q,MSG=LIBI083B)\n  VER (&LIBPREP,LIST,REPT,DATA)\n  VER (&LIBICDYN,LIST,Y,N,MSG=LIBI083C)\n  VER (&LIBIHDYN,LIST,Y,N,MSG=LIBI083K)\n  IF (&LIBIPGMR = '')\n    &LIBIPGMR='*'\n  IF (&LIBISTYP = '*')\n    &LIBISTYP=''\n    &LIBIXTYP=&LIBISTYP\n  VPUT (LIBIPRJ,LIBILIB,LIBITYP,LIBIPGMR,LIBISLSL,LIBICDYN,ELI$DNV,\n        LIBPREP,LIBIHDYN,LIBIXTYP) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LIBSMP": {"ttr": 5897, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x91\\x15\\x8f\\x00\\x91\\x15\\x8f\\x17!\\x004\\x00<\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-06-07T00:00:00", "modifydate": "1991-06-07T17:21:00", "lines": 52, "newlines": 60, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFKZ   JOB 5300000000000,'TECH.SUPP.JKAPLAN',NOTIFY=JEFFK,\n//             CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=8M\n//SMP5PROC PROC\n//SMPE     EXEC PGM=GIMSMP,PARM='DATE=U'\n//SMPCSI   DD DSN=SYS3.ADRLIBR.REL39.GLOBAL.CSI,DISP=OLD\n//SMPOUT   DD SYSOUT=*\n//SMPRPT   DD SYSOUT=*\n//SMPLIST  DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SMPLOG   DD SYSOUT=*\n//SMPGLOG  DD DUMMY\n//PARMLIB  DD DSN=SYS1.PARMLIB,DISP=SHR\n//SYSUT1   DD UNIT=SYSDA,SPACE=(3120,(0380,0760))\n//SYSUT2   DD UNIT=SYSDA,SPACE=(3120,(0380,0760))\n//SYSUT3   DD UNIT=SYSDA,SPACE=(3120,(0380,0760))\n//SYSUT4   DD UNIT=SYSDA,SPACE=(3120,(0038,0100)),\n//         DCB=(LRECL=80,BLKSIZE=3120,RECFM=FB)\n//SMPWRK1  DD UNIT=SYSDA,\n//            SPACE=(3120,(0364,0380,500)),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//SMPWRK2  DD UNIT=SYSDA,\n//            SPACE=(3120,(0364,0380,500)),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//SMPWRK3  DD UNIT=SYSDA,\n//            SPACE=(3120,(0364,0380,500)),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//SMPWRK4  DD UNIT=SYSDA,\n//            SPACE=(3120,(0364,0380,500)),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//SMPWRK6  DD UNIT=SYSDA,\n//            SPACE=(3120,(0364,0380,500)),\n//            DCB=(RECFM=FB,BLKSIZE=3120)\n//SMPCNTL  DD DDNAME=SYSIN\n//   PEND\n//SMPR  EXEC SMP5PROC\n//SYSIN  DD *\n SET BDY(GLOBAL) .\n RECEIVE SELECT(CO52300) SYSMODS.\n SET BDY(CAITGT) .\n APPLY SELECT (CO52300) .\n/*\n//SMPPTFIN DD *\n++APAR (CO52300) .\n++VER (Z038) FMID(CLR3900) .\n++ZAP (LAMMVS1) DISTLIB(CLJ39LLD) .\n NAME LAMMVS1\n IDRDATA CO52300\n BASE 000000\n VER 0011C0 45E0,CEF2\n REP 0011C0 4700,CEF2\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LIBSUB": {"ttr": 5899, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01&\\x00\\x00\\x00\\x91\\x13_\\x00\\x91\\x15\\x0f\\x06P\\x01\\x95\\x01\\x1d\\x00\\x89\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.38", "flags": 0, "createdate": "1991-05-15T00:00:00", "modifydate": "1991-05-30T06:50:00", "lines": 405, "newlines": 285, "modlines": 137, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,RENT,REUS'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nLIB      TITLE 'SUBMIT FROM LIBRARIAN MASTER'\nLIBSUB   CSECT , /* LIBSUB */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nLIBSUB   AMODE 31\nLIBSUB   RMODE 24\n         SAVE  (14,12),,LIBSUB*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING LIBSUB,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SLR   R9,R9 RC\n         L     R0,=A(DWORDS)\n         GETMAIN R,LV=(0),LOC=BELOW\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING LIBWMAP,RD\n         ST    RD,DIALDATA SAVE USING REGS FOR LM ROUTINES\n         ST    RA,K0(,RD) SAVE FOR ADDRESSING\n         MVC   DCBMASTR(DCBL),CPYMASTR BUILD DCB\n         MVC   OPENL(OPENLL),CPYOPENL OPEN LIST\n         MVC   CLOSL(CLOSLL),CPYCLOSL CLOS LIST\n         MVI   LIBSBM,C' ' EDIT DSNAME\n         MVC   LIBSBM+K1(L'LIBSBM-K1),LIBSBM INIT\n         LA    R1,P99RB BUILD DAIRFAIL PARAMS\n         ST    R1,DAIRFAIL\n         LA    R1,DAIRRC\n         ST    R1,DAIRFAIL+K4\n         LA    R1,ZEROPTR\n         ST    R1,DAIRFAIL+K8\n         LA    R1,DAIRSW\n         ST    R1,DAIRFAIL+K12\n         ST    R3,DAIRFAIL+K16 CPPL PTR\n         XC    DAIRFAIL+K20(K4),DAIRFAIL+K20\n         USING PSA,R0\n         L     R1,PSATOLD CHECK AUTHORIZATION OF CALLER BY PROCNAME\n         DROP  R0\n         USING TCB,R1\n         L     R1,TCBTIO\n         DROP  R1\n         USING TIOT1,R1\n         CLC   =CL8'@IKJSOPR',TIOCSTEP+K8\n         BE    AUTHOK\n         CLC   =CL8'@IKJSSUP',TIOCSTEP+K8\n         DROP  R1\n         BE    AUTHOK\n         B     SUBEXIT\nAUTHOK   XC    PARSEPPL(K28),PARSEPPL /* PREP PARAM SCAN */\n         XC    CMDPANS,CMDPANS\n         XC    CMDPECB,CMDPECB\n         LA    R8,PARSEPPL MAP\n         USING PPL,R8\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         MVC   PPLCBUF,CPPLCBUF\n         LA    R0,CMDPECB\n         ST    R0,PPLECB\n         LA    R0,CMDPANS\n         ST    R0,PPLANS\n         L     R0,=A(IKJPARM)\n         ST    R0,PPLPCL\n         DROP  R8\n         CALLTSSR EP=IKJPARS,MF=(E,(R8))\n         LTR   R9,RF\n         BNZ   SUBEXIT\n         L     R4,CMDPANS /* RESPONSE */\n         USING IKJPARMD,R4\n         L     R5,LIBMEM MEMBER NAME PTR\n         LH    R6,LIBMEM+K4 MEMBER NAME LEN\n         LA    RF,PMEMBER\n         USING S99TUNIT,RF\n         STCM  R6,K3,S99TULNG SAVE LEN IN DYNALLOC LIST\n         BCTR  R6,K0\n         MVC   S99TUPAR(K8),=CL8' ' INIT\n         EX    R6,MOVEMEM MOVE IN MEMBER NAME\n         ICM   R0,K15,S99TUPAR SAVE IN REG\n         ICM   R1,K15,S99TUPAR+K4 ...\n         B     GETDSN AROUND\nMOVEMEM  MVC   S99TUPAR(*-*),K0(R5)\n         DROP  RF\nGETDSN   LA    R5,DEFDSN DEFAULT DSNAME\n         LA    R6,L'DEFDSN ASSUMED LEN\n         TM    LIBDSN+K6,X80 DSN PRESENT\n         BZ    NODSN NO, ELSE\n         L     R5,LIBDSN DSN PTR\n         LH    R6,LIBDSN+K4 DSN LEN - NEVER INCL QUOTES\nNODSN    LA    RF,PDSNAME\n         USING S99TUNIT,RF\n         STCM  R6,K3,S99TULNG SAVE LEN IN DYNALLOC LIST\n         BCTR  R6,K0\n         EX    R6,MOVEDSN MOVE IN DSNAME\n         EX    R6,MOVEDSN2 MOVE IN DSNAME\n         LA    R6,LIBSBM+K1(R6) BUILD EDIT DSN\n         MVI   K0(R6),C'('\n         STCM  R0,K15,K1(R6) BUILD DSN\n         STCM  R1,K15,K5(R6) ...\nLOOKPARN CLI   K2(R6),C' ' BUILD )\n         BE    SPOTPARN YES\n         LA    R6,K1(,R6) NEXT POSSIBLE SPOT\n         B     LOOKPARN\nSPOTPARN MVI   K2(R6),C')' POSITION MEMBER END CHAR\n         B     VREL   AROUND\nMOVEDSN  MVC   S99TUPAR(*-*),K0(R5)\nMOVEDSN2 MVC   LIBSBM(*-*),K0(R5)\n         DROP  RF\nVREL     LA    R1,CMDPANS\n         IKJRLSA (R1)\n         DROP  R4\n         LA    RF,P99RBPTR BUILD DYNALLOC LIST\n         USING S99RBP,RF\n         LA    R0,P99RB\n         ST    R0,S99RBPTR\n         OI    S99RBPTR,S99RBPND\n         DROP  RF\n         LA    RF,P99RB\n         USING S99RB,RF\n         MVI   S99RBLN,X'14'\n         MVI   S99VERB,S99VRBAL\n         XC    S99FLAG1,S99FLAG1\n         XC    S99ERROR,S99ERROR\n         XC    S99INFO,S99INFO\n         LA    R0,P99TUPTR\n         ST    R0,S99TXTPP\n         XC    S99RSV01,S99RSV01\n         XC    S99FLAG2,S99FLAG2\n         DROP  RF\n         LA    RF,P99TUPTR\n         USING S99TUPL,RF\n         LA    R0,PDDNAME\n         ST    R0,S99TUPTR\n         LA    RF,K4(,RF) NEXT TEXT PTR\n         LA    R0,PDSNAME\n         ST    R0,S99TUPTR\n         LA    RF,K4(,RF) NEXT TEXT PTR\n         LA    R0,PMEMBER\n         ST    R0,S99TUPTR\n         LA    RF,K4(,RF) NEXT TEXT PTR\n         LA    R0,PDISP\n         ST    R0,S99TUPTR\n         LA    RF,K4(,RF) NEXT TEXT PTR\n         LA    R0,PSUBSYS\n         ST    R0,S99TUPTR\n         OI    S99TUPTR,S99TUPLN\n         DROP  RF\n         LA    RF,PDDNAME\n         USING S99TUNIT,RF\n         MVC   S99TUKEY,=AL2(DALDDNAM)\n         MVC   S99TUNUM,=AL2(K1)\n         MVC   S99TULNG,=AL2(K8)\n         MVC   S99TUPAR(L'LIBMASTR),LIBMASTR DDNAME\n         DROP  RF\n         LA    RF,PDSNAME\n         USING S99TUNIT,RF\n         MVC   S99TUKEY,=AL2(DALDSNAM)\n         MVC   S99TUNUM,=AL2(K1)\n         DROP  RF\n         LA    RF,PMEMBER\n         USING S99TUNIT,RF\n         MVC   S99TUKEY,=AL2(DALMEMBR)\n         MVC   S99TUNUM,=AL2(K1)\n         DROP  RF\n         LA    RF,PDISP\n         USING S99TUNIT,RF\n         MVC   S99TUKEY,=AL2(DALSTATS)\n         MVC   S99TUNUM,=AL2(K1)\n         MVC   S99TULNG,=AL2(K1)\n         MVI   S99TUPAR,K8 DISP=SHR\n         DROP  RF\n         LA    RF,PSUBSYS\n         USING S99TUNIT,RF\n         MVC   S99TUKEY,=AL2(DALSSNM)\n         MVC   S99TUNUM,=AL2(K1)\n         MVC   S99TULNG,=AL2(K3)\n         MVC   S99TUPAR(K3),=CL3'LAM' SUBSYS=LAM\n         DROP  RF\n         LA    R1,P99RBPTR\n         SVC   99\n         LTR   R9,RF\n         BNZ   FSVC99\n         LA    R2,DCBMASTR DCBPTR\n         LA    R1,OPENL LIST FORM\n         OPEN  ((R2)),MODE=31,MF=(E,(1))\n         TM    K48(R2),X'10' OPEN OK\n         BZ    SUBEXIT\n         XC    CALLLIST(K64),CALLLIST CLEAR\n         LA    R1,CALLLIST MF=L\n         CALL  ISPLINK,(CONTROL,DISPLAY,REFRESH),VL,MF=(E,(1))\n         XC    CALLLIST(K64),CALLLIST CLEAR\n         LA    R1,CALLLIST MF=L\n         LA    R2,DIALDATA PASSED REGS\n         LA    R9,LIBSBM\n         CALL  ISPLINK,(EDIF,(R9),PROF,RECFM,LRECL,ALMREA,ALMWRIT,,(R2)X\n               ,LRECL),VL,MF=(E,(1))\n         LR    R9,RF\n         LA    R2,DCBMASTR DCBPTR\n         LA    R1,CLOSL LIST FORM\n         CLOSE ((R2)),MODE=31,MF=(E,(1))\n         FREEPOOL (R2)\nSUBEXIT  L     R2,K4(,RD)\n         LR    R1,RD\n         L     R0,=A(DWORDS)\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nFSVC99   ST    R9,DAIRRC FOR DAIRFAIL\n         LA    R1,DAIRFAIL\n         LINK  EP=IKJEFF18 SHOW DYNALLOC ERROR\n         B     SUBEXIT\nLMREAD   STM   RE,RC,K12(RD) SAVE REGS CHAINING\n         LM    R4,R7,K0(R1) DIALOG PASSED PARMS\n         LR    R3,RD CALLERS SAVEAREA\n         L     RD,K0(,R7) WORKAREA PTR\n         L     RA,K0(,RD) FIRST USING\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD SAVE ORIG WORKAREA PTR\n         LA    R8,K80 TELL EDIF LEN LRECL\n         ST    R8,K0(,R5) ...\n         LA    R8,READLINE DATA AREA\n         ST    R8,K0(,R4) TELL EDIF WHERE DATA IS\n         LA    R9,DCBMASTR\n         LA    RD,SAVEARE2 OUR SAVERAEA\n         ST    R3,K4(,RD) CHAIN\n         ST    RD,K8(,R3) ...\n         LA    R6,GLUERET LINKAGE ASSIST\n         BSM   R6,0 SAVE CURRENT AMODE\n         LA    R7,EOFRET LINKAGE ASSIST\n         BSM   R7,0 SAVE CURRENT AMODE\n         LA    RF,GLUE PREP FOR ASSIST\n         BASSM RE,RF FLIP AMODE\nGLUE     GET   (R9),(R8)\n         BSM   0,R6 RESTORE AMODE AND RETURN FROM LINKAGE\nGLUERET  L     RD,K4(,RD) RESTORE SAVEAREA PTR\n         LM    RE,RC,K12(RD) RESTORE\n         SLR   RF,RF\n         BR    RE RETURN\nEODAD    BSM   0,R7 RESTORE AMODE AND RETURN FROM LINKAGE\nEOFRET   L     RD,K4(,RD) RESTORE SAVEAREA PTR\n         LM    RE,RC,K12(RD) RESTORE\n         LA    RF,K8 EODAD\n         BR    RE RETURN\nLMWRITE  SLR   RF,RF IGNORE ALL SAVES AND ENDS\n         BR    RE RETURN\n         LTORG\nZEROPTR  DC    A(*-*)\nALMREA   DC    A(LMREAD)\nALMWRIT  DC    A(LMWRITE)\nEDIF     DC    CL8'EDIF'\nLMOPEN   DC    CL8'LMOPEN'\nINPUT    DC    CL8'INPUT'\nLRECL    DC    A(K80)\n         PRINT NOGEN\nCPYMASTR DCB   DDNAME=LIBMASTR,DSORG=PS,RECFM=F,LRECL=80,MACRF=(GM),   X\n               EODAD=EODAD,BLKSIZE=80\nDCBL     EQU   *-CPYMASTR\nCPYOPENL OPEN  (,(INPUT)),MODE=31,MF=L\nOPENLL   EQU   *-CPYOPENL\nCPYCLOSL CLOSE (*-*),MODE=31,MF=L\nCLOSLL   EQU   *-CPYCLOSL\nRECFM    DC    C'F '\nDAIRSW   DC    X'0032' DAIRFAIL SWITCHES\nCONTROL  DC    CL8'CONTROL'\nDISPLAY  DC    CL8'DISPLAY'\nREFRESH  DC    CL8'REFRESH'\nLIBMASTR DC    CL8'LIBMASTR' DDNAME USED FOR ACCESS\nLMINIT   DC    CL8'LMINIT' SERVICE\nPROF     DC    CL8'EDIFPROF'\nLMGET    DC    CL8'LMGET'\nMOVE     DC    CL8'MOVE'\nDEFDSN   DC    C'BUILDING.PRODJCL.MASTER' DEFAULT LIBRARIAN MASTER\nBLANK    DC    C' '\nIKJPARM  IKJPARM\nLIBMEM   IKJIDENT 'LIBRARIAN MEMBER',UPPERCASE,                        X\n               FIRST=ALPHA,OTHER=ALPHANUM,                             X\n               PROMPT='ENTER REQUIRED LIBRARIAN DATASET MEMBER NAME'\nLIBDSN   IKJPOSIT DSNAME,UPPERCASE\n         IKJENDP\nLIBWMAP  DSECT\nSAVEAREA DC    18F'0' MUST BE FIRST 2 AREAS IN THIS ORDER\nSAVEARE2 DC    18F'0' DO NOT MOVE\nDIALDATA DC    A(K0,K0,K0,K0) PASS USING REGS\nCMDPECB  DC    A(K0)\nCMDPANS  DC    A(K0)\nACTUALEN DC    CL8' '\nPARSEPPL DC    (K28)AL1(K0) PARSE PPL\nDAIRFAIL DC    (K6)A(*-*)\nDAIRRC   DC    A(*-*)\nDATAID   DC    CL8' ' PDF LM SERV\nREADLINE DC    CL80' ' DATA AREA\nDCBMASTR DCB   DDNAME=LIBMASTR,DSORG=PS,RECFM=F,LRECL=80,MACRF=(GM),   X\n               EODAD=EODAD,BLKSIZE=80\nOPENL    OPEN  (,(INPUT)),MODE=31,MF=L\nCLOSL    CLOSE (*-*),MODE=31,MF=L\nCALLLIST CALL  ,(,,,,,,,,,,,,,,,),MF=L\nP99RBPTR DC    (L'S99RBPTR)AL1(K0)\nP99RB    DC    (S99RBEND-S99RB)AL1(K0)\nP99TUPTR DC    (K5*L'S99TUPTR)AL1(K0)\nPDDNAME  DC    (K6+K8)AL1(K0)\nPDSNAME  DC    (K6+K44)AL1(K0)\nPMEMBER  DC    (K6+K8)AL1(K0)\nPDISP    DC    (K6+K1)AL1(K0)\nPSUBSYS  DC    (K6+K3)AL1(K0)\nLIBSBM   DC    CL54' '\nDWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)\n         IKJPPL\n         IKJCPPL\n         CVT   DSECT=YES\n         IKJTCB\n         IHAPSA\n         DSECT\n         IEFTIOT1\n         IEFZB4D0\n         IEFZB4D2\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(LIBSUB),DISP=SHR,\n//  UNIT=,SPACE=\n//L.SYSLIB DD DSN=ISP.V2R3M0.ISPLOAD,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LINK": {"ttr": 6145, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x02_\\x00\\x95\\x02_\\x176\\x00\\r\\x00\\r\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-01-25T00:00:00", "modifydate": "1995-01-25T17:36:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//L       EXEC PGM=IEWL,\n//             PARM='LIST,LET,XREF,MAP'\n//SYSLIN   DD  *\n   INCLUDE SYSLMOD(PSF50SO)\n   INCLUDE SYSLMOD(PSF50B)\n   ENTRY PSF50B\n   NAME PSF50BZZ(R)\n//SYSLMOD  DD  DSN=SYSS.FSA.REFORMAT.V1R0M0.BATLOAD,DISP=SHR\n//SYSUT1   DD  DSN=&SYSUT1,SPACE=(1024,(120,120),,,ROUND),UNIT=VIO,\n//             DCB=BUFNO=1\n//SYSPRINT DD  SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTCAT": {"ttr": 6147, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x90\\x15\\x1f\\x00\\x92\\x19\\x0f\\x13\\x18\\x00\\x0e\\x00\\x07\\x00\\n\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1990-05-31T00:00:00", "modifydate": "1992-07-08T13:18:00", "lines": 14, "newlines": 7, "modlines": 10, "user": "TECH110"}, "text": "//LISTCAT  JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n LISTC   CAT(SYS1.MCATSYSA.CLUSTER) NAMES\n LISTC   CAT(SYS1.UCATFDRA.CLUSTER) NAMES\n LISTC   CAT(SYS1.UCATHSMA.CLUSTER) NAMES\n LISTC   CAT(SYS1.UCATPROD.CLUSTER) NAMES\n LISTC   CAT(SYS1.UCATQUAL.CLUSTER) NAMES\n LISTC   CAT(SYS1.UCATSYSS.CLUSTER) NAMES\n LISTC   CAT(SYS1.UCATTEST.CLUSTER) NAMES\n LISTC   CAT(SYS1.UCATTSOE.CLUSTER) NAMES\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTCAT2": {"ttr": 6149, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x93\\x00/\\x00\\x93\\x06?\\x155\\x00\\t\\x00\\x07\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1993-01-02T00:00:00", "modifydate": "1993-03-04T15:35:00", "lines": 9, "newlines": 7, "modlines": 6, "user": "TECH110"}, "text": "//LISTCAT  JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH104\n//S EXEC PGM=IDCAMS,REGION=7M\n//SYSPRINT  DD DSN=TECH104.LISTCAT,DISP=OLD\n//SYSIN DD *\n LISTC   CAT(SYS1.UCATPRD1.CLUSTER) ALL CL INDEX DATA\n LISTC   CAT(SYS1.UCATPRD2.CLUSTER) ALL CL INDEX DATA\n LISTC   CAT(SYS1.UCATPRD3.CLUSTER) ALL CL INDEX DATA\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTIDR": {"ttr": 6151, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x06o\\x00\\x94\\x06o\\x16$\\x00\\t\\x00\\t\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-03-07T00:00:00", "modifydate": "1994-03-07T16:24:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "TECH110"}, "text": "//TECH110K JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=AMBLIST,REGION=8M\n//SYSLIB DD DSN=SYSS.FCS.V4R5M0.LOADLIB,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  LISTIDR MEMBER=FCS225\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LISTVTOC": {"ttr": 6153, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92\\x00/\\x00\\x92\\x00/\\x12G\\x00\\n\\x00\\x0e\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-01-02T00:00:00", "modifydate": "1992-01-02T12:47:00", "lines": 10, "newlines": 14, "modlines": 6, "user": "TECH110"}, "text": "//LISTVTOC JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IEHLIST,REGION=6M\n//SMSSA4 DD UNIT=3380,VOL=SER=SMSSA4,DISP=OLD\n//SMSSA7 DD UNIT=3380,VOL=SER=SMSSA7,DISP=OLD\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n LISTVTOC FORMAT,VOL=3380=SMSSA4\n LISTVTOC FORMAT,VOL=3380=SMSSA7\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADPCT": {"ttr": 6155, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\t/\\x00\\x93\\t/\\x14@\\x00%\\x00\\xd4\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-04-02T00:00:00", "modifydate": "1993-04-02T14:40:00", "lines": 37, "newlines": 212, "modlines": 3, "user": "TECH110"}, "text": "//TECH110Y JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//UTIL EXEC DSNUPROC,SYSTEM=DSNB,UID='TEMPW',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=TECH110.CSDOUT,\n//     DISP=SHR\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TECHXREF\n  (JOB_NAME                 POSITION (001:008) CHAR,\n   JOB_CLASS                POSITION (009:009) CHAR,\n   EXEC_PROC_STEP_NAM       POSITION (010:017) CHAR,\n   PROC_NAME                POSITION (018:025) CHAR,\n   EXEC_PGM_STEP_NAME       POSITION (026:033) CHAR,\n   EXEC_PGM                 POSITION (034:041) CHAR,\n   STEP_WITHIN_PROC         POSITION (042:044) CHAR,\n   STEP_WITHIN_JOB          POSITION (045:047) CHAR,\n   DD_NAME                  POSITION (048:055) CHAR,\n   DATASET_NAME             POSITION (056:099) CHAR,\n   MEMBER                   POSITION (100:107) CHAR,\n   DISP                     POSITION (108:110) CHAR,\n   ACCESS                   POSITION (111:116) CHAR)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADZEKE": {"ttr": 6157, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\t\\x7f\\x00\\x93\\t\\x7f\\x162\\x00%\\x00%\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-04-07T00:00:00", "modifydate": "1993-04-07T16:32:00", "lines": 37, "newlines": 37, "modlines": 1, "user": "TECH110"}, "text": "//TECH110Y JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//UTIL EXEC DSNUPROC,SYSTEM=DSNB,UID='TEMPW',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=TECH110.ZEKEOUT,\n//     DISP=SHR\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TECHXREF\n  (JOB_NAME                 POSITION (001:008) CHAR,\n   JOB_CLASS                POSITION (009:009) CHAR,\n   EXEC_PROC_STEP_NAM       POSITION (010:017) CHAR,\n   PROC_NAME                POSITION (018:025) CHAR,\n   EXEC_PGM_STEP_NAME       POSITION (026:033) CHAR,\n   EXEC_PGM                 POSITION (034:041) CHAR,\n   STEP_WITHIN_PROC         POSITION (042:044) CHAR,\n   STEP_WITHIN_JOB          POSITION (045:047) CHAR,\n   DD_NAME                  POSITION (048:055) CHAR,\n   DATASET_NAME             POSITION (056:099) CHAR,\n   MEMBER                   POSITION (100:107) CHAR,\n   DISP                     POSITION (108:110) CHAR,\n   ACCESS                   POSITION (111:116) CHAR)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOGREC": {"ttr": 6159, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92%/\\x00\\x92%/\\tE\\x00\\x05\\x00\\n\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-09-08T00:00:00", "modifydate": "1992-09-08T09:45:00", "lines": 5, "newlines": 10, "modlines": 3, "user": "TECH110"}, "text": "//LOGREC   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IFCDIP00,REGION=6M\n//SERERDS DD DSN=SYSB.LOGREC,DISP=OLD\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOOKCMDS": {"ttr": 6161, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x00\\x00\\x91 \\x7f\\x00\\x91 \\x7f\\x107\\x00\\x19\\x00\\x07\\x00\\x18\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1991-07-26T00:00:00", "modifydate": "1991-07-26T10:37:00", "lines": 25, "newlines": 7, "modlines": 24, "user": "JEFFK"}, "text": "/* REXX Look at an ISPF command application table              */\ntrue  = 1;\nfalse = 0;\neof = false;\nnull = \"\";\nuid = userid();\naddress \"ISPEXEC\";\ndsname = uid\".USER.CNTLLIB\";\naddress \"TSO\" \"ALLOC F(DDLOOK) DA('\"dsname\"(FILECMDS)') OLD\";\n\"TBTOP  ISPCMDS\";\ni = 0;\ndo while (\u00aceof);\n   \"TBSKIP ISPCMDS\";\n   \"TBGET  ISPCMDS\";\n    if rc\u00ac=0 then do;\n         eof = true;\n         iterate;\n         end;\n    i = i+1;\n    outrec.i=left(\"Verb:\"left(zctverb,9)\"Trunc:\"left(zcttrunc,2)|| ,\n         \"Act:\"zctact,80);\nend;\naddress \"TSO\" \"EXECIO * DISKW DDLOOK (FINIS STEM OUTREC.\";\nsay \"Output is in dsname \"dsname\"(FILECMDS)\";\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LOOKSMSC": {"ttr": 6163, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x91(\\x8f\\x00\\x91(\\x8f\\x14$\\x00\\x1e\\x00\\x19\\x00\\x0c\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-10-15T00:00:00", "modifydate": "1991-10-15T14:24:00", "lines": 30, "newlines": 25, "modlines": 12, "user": "TECH110"}, "text": "/* REXX Look at an ISPF table of SMS class data                */\nparse upper arg tablname . ;\nif tablname = \"\" then exit 0;\ntrue  = 1;\nfalse = 0;\neof = false;\nnull = \"\";\nuid = userid();\naddress \"ISPEXEC\";\ndsname = uid\".USER.CNTLLIB\";\naddress \"TSO\" \"ALLOC F(DDDATA) DA('\"dsname\"(CLASDATA)') OLD\";\naddress \"TSO\" \"ALLOC F(DDMGMT) DA('\"dsname\"(CLASMGMT)') OLD\";\naddress \"TSO\" \"ALLOC F(DDSTOR) DA('\"dsname\"(CLASSTOR)') OLD\";\naddress \"TSO\" \"ALLOC F(DDSTGP) DA('\"dsname\"(CLASSTGP)') OLD\";\n\"TBTOP  DATACLAS\";\ni = 0;\ndo while (\u00aceof);\n   \"TBSKIP DATACLAS\";\n   \"TBGET  DATACLAS\";\n    if rc\u00ac=0 then do;\n         eof = true;\n         iterate;\n         end;\n    i = i+1;\n    outrec.i=left(\"Verb:\"left(zctverb,9)\"Trunc:\"left(zcttrunc,2)|| ,\n         \"Act:\"zctact,80);\nend;\naddress \"TSO\" \"EXECIO * DISKW DDDATA (FINIS STEM OUTREC.\";\neof = false;\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LPROLL": {"ttr": 6165, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x15&\\x00\\x17\\x00+\\x00\\x11\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T15:26:00", "lines": 23, "newlines": 43, "modlines": 17, "user": "TECH110"}, "text": "//TECH110K JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP10   EXEC PGM=IKJEFT01,PARM='%ROCKROLL',REGION=8M,\n//            DYNAMNBR=128\n//SYSPROC  DD DSN=TECH110.USER.CNTLLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//* ARCHIVED DATASETS\n//ROLLOUT1 DD DUMMY\n//ROLLOUT2 DD DUMMY\n//ROLLOUT3 DD DUMMY\n//* CURRENT GENERATIONS\n//GEN11    DD DUMMY\n//GEN12    DD DUMMY\n//GEN13    DD DUMMY\n//* NEXT GENERATIONS\n//GEN21    DD DUMMY\n//GEN22    DD DUMMY\n//GEN23    DD DUMMY\n//* NEXTNEXT GENERATIONS\n//GEN31    DD DUMMY\n//GEN32    DD DUMMY\n//GEN33    DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MERGTEST": {"ttr": 6167, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x03\\x7f\\x00\\x91\\x03\\x7f\\x14\\x06\\x00\\x14\\x00\\x03\\x00\\x12\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-02-06T00:00:00", "modifydate": "1991-02-06T14:06:00", "lines": 20, "newlines": 3, "modlines": 18, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (5304010530000000,,,STEP),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC PGM=SORT,REGION=6M,\n// PARM='CORE=MAX,NOEQUALS'\n//SYSOUT DD SYSOUT=*\n//*SORTIN01 DD DSN=PMBU.K.MASINV.AUDIT.FILE,DISP=SHR,\n//*  AMP=('BUFND=5,BUFNI=3')\n//SORTIN02 DD DSN=PMDS.E.DSBBACF,DISP=SHR,\n//   AMP=('BUFND=5')\n//SORTIN03 DD DSN=PMDS.E.DSBBARF,DISP=SHR,\n//   AMP=('BUFND=5')\n//*SORTIN04 DD DSN=PMBU.K.MERCH.MASINV.AUDIT.FILE,DISP=SHR,\n//*   AMP=('BUFND=5,BUFNI=3')\n//SORTOUT DD DSN=&&TEMP,DISP=(NEW,DELETE),UNIT=SYSDA,\n//   DCB=(RECFM=FB,LRECL=211,BLKSIZE=27852),\n//   SPACE=(CYL,(20,20))\n//SYSIN DD *\n* MERGE FIELDS=(180,1,CH,A,20,27,CH,A,181,2,CH,A,1,19,CH,A)\n  MERGE FIELDS=(180,1,CH,A)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MGMTCLAO": {"ttr": 6169, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x019\\x00\\x00\\x00\\x905O\\x00\\x93!\\x1f\\x16%\\x00#\\x00\\xdf\\x00#\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.57", "flags": 0, "createdate": "1990-12-20T00:00:00", "modifydate": "1993-07-30T16:25:00", "lines": 35, "newlines": 223, "modlines": 35, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS MGMTCLASS ROUTINE                 */\n/*                                                                  */\nPROC &MGMTCLAS\n/*                                                                  */\n/* ASSIGN A NEW MANAGMT CLASS ONLY IF THIS IS NEW SMS ALLOCATION    */\n/* I.E. IF RECALL OR RECOVER OR ETC. THEN KEEP PREV ASSIGNED VALUE  */\n/*                                                                  */\nSELECT (&ACSENVIR)\n/*                                                                  */\n      WHEN ('ALLOC') DO\n/* PROCESS THE CODED MGMTCLAS VALUE                                 */\n               SELECT (&MGMTCLAS)\n/* USER CODED MGMTCLAS; USE THAT VALUE IF TEMP                      */\n                     WHEN ('TEMP') DO\n                          SET &MGMTCLAS = 'TEMP'\n                          EXIT CODE(0)\n                          END\n/* ASSIGN SOMETHING IF MGMTCLAS NOT CODED OR FORCE VALUE OF DSOWNER */\n                     OTHERWISE DO\n/* USER DID NOT CODE MGMTCLAS; USE THE RACF DFP RESOWNER VALUE      */\n                          SET &MGMTCLAS = '$DSOWNER'\n                          EXIT CODE(0)\n                          END\n               END\n      END\n/*                                                                  */\n/*                                                                  */\n/* FALL THROUGH FOR RECALLS, ETC.                                   */\n      OTHERWISE DO\n           SET &MGMTCLAS = &MGMTCLAS\n           EXIT CODE(0)\n           END\nEND\n/*                                                                  */\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MIMAUTH": {"ttr": 6171, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x932\\x8f\\x00\\x932\\x8f\\x11(\\x00\\x08\\x00\\x08\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-11-24T00:00:00", "modifydate": "1993-11-24T11:28:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'JEFFK TECH SUPPT',CLASS=S,\n//         MSGCLASS=G,NOTIFY=TECH110\n//S1 EXEC PGM=IEBGENER,REGION=6M\n//SYSPRINT DD SYSOUT=*,DCB=RECFM=FA\n//SYSIN    DD DUMMY\n//SYSUT1   DD DSN=SYST.MIM.V3R0M0.AUTH,DISP=SHR\n//SYSUT2   DD DSN=SYSS.MIM.V3R0M0.AUTH,DISP=SHR\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MIMZAP": {"ttr": 6173, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93\\x02\\x7f\\x00\\x93\\x02\\x7f\\x19T\\x00\\x06\\x00\\x06\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-01-27T00:00:00", "modifydate": "1993-01-27T19:54:00", "lines": 6, "newlines": 6, "modlines": 2, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=AMASPZAP,PARM='IGNIDRFULL'\n//SYSPRINT DD SYSOUT=*\n//SYSLIB DD DSN=SYS1.MIM.V3R0M0.LOADLIB,DISP=SHR\n//SYSIN DD DSN=SYSM.MIM.V3R0M0.FIXSEQ,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MODELGDG": {"ttr": 6175, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91)\\x7f\\x00\\x91)\\x7f\\x15\\x17\\x00\\x06\\x00\\x06\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-10-24T00:00:00", "modifydate": "1991-10-24T15:17:00", "lines": 6, "newlines": 6, "modlines": 1, "user": "TECH110"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IEFBR14\n//MODEL DD DSN=MODEL.DSCB,DISP=(NEW,CATLG),\n// UNIT=3390,VOL=SER=SMSSM1,SPACE=(CYL,(0,0)),\n// MGMTCLAS=NOACTION,STORCLAS=SCSTNRDG,DATACLAS=DATAIN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MORTGAGE": {"ttr": 6177, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01!\\x00\\x00\\x00\\x92\\x01o\\x00\\x92\\x02\\x0f\\x14\\x17\\x00\\xa9\\x00\\x10\\x00\\x9b\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.33", "flags": 0, "createdate": "1992-01-16T00:00:00", "modifydate": "1992-01-20T14:17:00", "lines": 169, "newlines": 16, "modlines": 155, "user": "TECH110"}, "text": "/* REXX mortgage calculation */\naddress \"TSO\";\noutfile=\"'\"userid()\".USER.CNTLLIB(MORTGOUT)'\";\n\"ALLOC F(OUT) DA(\"outfile\") SHR\";\n\"VMFCLEAR\";\nmorgtype=\"\";\ndo while(morgtype=\"\");\n   say \"Enter mortgage type as follows:\";\n   say \"    'F' for fixed rate mortgage\";\n   say \"    'V' for variable rate mortgage\";\n   say \"    'B' for bi-weekly fixed rate mortgage\";\n   parse upper pull morgtype;\n   select;\n      when morgtype=\"F\" then nop;\n      when morgtype=\"V\" then nop;\n      when morgtype=\"B\" then nop;\n      otherwise morgtype=\"\";\n   end;\nend;\noutptr=1;\nselect;\n   when morgtype=\"F\" then do;\n     morgrate=\"\";\n     do while(morgrate=\"\");\n        say \"Enter mortgage rate\";\n        parse upper pull morgrate;\n        if \u00acdatatype(morgrate,\"N\") then morgrate=\"\";\n     end;\n     morgterm=\"\";\n     do while(morgterm=\"\");\n        say \"Enter mortgage term in years\";\n        parse upper pull morgterm;\n        if \u00acdatatype(morgterm,\"W\") then morgterm=\"\";\n     end;\n     morgamnt=\"\";\n     do while(morgamnt=\"\");\n        say \"Enter mortgage amount\";\n        parse upper pull morgamnt;\n        if \u00acdatatype(morgamnt,\"W\") then morgamnt=\"\";\n     end;\n     monthrate=morgrate/1200.00;\n     morgmths=morgterm*12;\n monthpay=morgamnt*(monthrate/(1.0-(1.0/((1.0+monthrate)**morgmths))));\n     monthpay=TRUNC((monthpay+5.000001e-3)*100)/100;\n     outp.outptr=\"Mortgage-amount Mortgage-term Mortgage-rate\";\n     outptr=outptr+1;\n  outp.outptr=right(morgamnt,15)right(morgterm,14)right(morgrate,14);\n     outptr=outptr+1;\n     outp.outptr=\"Monthly payments are: $\"monthpay;\n     outptr=outptr+1;\n     pamort.0=morgamnt;\n     totint=0.0;\n     do i = 1 to morgmths;\n        p=i-1; /* prev month */\n        iamort.i=trunc((pamort.p*monthrate+5.000001e-3)*100)/100;\n        iamort.i=iamort.i+0; /* rexx will retain trail 0s */\n        pamort.i=pamort.p-monthpay+iamort.i;\n        mthprinc=monthpay-iamort.i;\n        if pamort.p<mthprinc then do;\n             mthprinc=pamort.p;\n             pamort.i=0;\n             iamort.i=0;\n             end;\n        totint=totint+iamort.i;\n        totprinc=morgamnt-pamort.i;\noutp.outptr=\"YrMth Principal Interest Remain-Principal Total-Princ\"|| ,\n      \"ipal Total-Interest\";\n     outptr=outptr+1;\n     t=i-1;\n     year=t%12+1;\n     mth=i-((year-1)*12);\n     ym=year||\"/\"mth;\n     fmthprinc=format(mthprinc,,2);\n     fiamort=format(iamort.i,,2);\n     fpamort=format(pamort.i,,2);\n     ftotint=format(totint,,2);\n     ftotprinc=format(totprinc,,2);\noutp.outptr=right(ym,5)right(fmthprinc,10)right(fiamort,9)|| ,\n             right(fpamort,17)right(ftotprinc,16)right(ftotint,15);\n     outptr=outptr+1;\n     end;\n   end;\n   when morgtype=\"V\" then do;\n   end;\n   when morgtype=\"B\" then do;\n     morgrate=\"\";\n     do while(morgrate=\"\");\n        say \"Enter mortgage rate\";\n        parse upper pull morgrate;\n        if \u00acdatatype(morgrate,\"N\") then morgrate=\"\";\n     end;\n     morgterm=\"\";\n     do while(morgterm=\"\");\n        say \"Enter mortgage term in years\";\n        parse upper pull morgterm;\n        if \u00acdatatype(morgterm,\"W\") then morgterm=\"\";\n     end;\n     morgamnt=\"\";\n     do while(morgamnt=\"\");\n        say \"Enter mortgage amount\";\n        parse upper pull morgamnt;\n        if \u00acdatatype(morgamnt,\"W\") then morgamnt=\"\";\n     end;\n     morgprep=\"\";\n     do while(morgprep=\"\");\n        say \"Enter mortgage prepayment amount per payment\";\n        parse upper pull morgprep;\n        if \u00acdatatype(morgprep,\"W\") then morgprep=\"\";\n     end;\n outp.outptr=\"Mortgage-amount Mortgage-term Mortgage-rate Prepay\";\n outptr=outptr+1;\n outp.outptr=right(morgamnt,15)right(morgterm,14)right(morgrate,14)|| ,\n   right(morgprep,7);\n     outptr=outptr+1;\n     monthrate=morgrate/1200.00;\n     outp.outptr=\"Mortgage monthly interest rate:\" monthrate;\n     outptr=outptr+1;\n     morgmths=morgterm*12;\n monthpay=morgamnt*(monthrate/(1.0-(1.0/((1.0+monthrate)**morgmths))));\n     outp.outptr=\"Mortgage monthly payment:\" monthpay;\n     outptr=outptr+1;\n     monthpay=(monthpay*13.0)/26.0;\n     outp.outptr=\"Mortgage biweekly payment:\" monthpay;\n     outptr=outptr+1;\n     monthpay=TRUNC((monthpay+5.000001e-3)*100)/100;\n     monthrate=morgrate/2600.00;\n     outp.outptr=\"Mortgage biweekly interest rate:\" monthrate;\n     outptr=outptr+1;\n     morgmths=morgterm*26;\n     outp.outptr=\"Bi-weekly payments are: $\"monthpay;\n     outptr=outptr+1;\n     pamort.0=morgamnt;\n     totint=0.0;\n     do i = 1 to morgmths;\n        p=i-1; /* prev month */\n        iamort.i=trunc((pamort.p*monthrate+5.000001e-3)*100)/100;\n        iamort.i=iamort.i+0; /* rexx will retain trail 0s */\n        pamort.i=pamort.p-monthpay+iamort.i-morgprep;\n        mthprinc=monthpay-iamort.i+morgprep;\n        if pamort.p<mthprinc then do;\n             mthprinc=pamort.p;\n             pamort.i=0;\n             iamort.i=0;\n             end;\n        totint=totint+iamort.i;\n        totprinc=morgamnt-pamort.i;\noutp.outptr=\"YrPay Principal Interest Remain-Principal Total-Princ\"|| ,\n      \"ipal Total-Interest\";\n     outptr=outptr+1;\n     t=i-1;\n     year=t%26+1;\n     mth=i-((year-1)*26);\n     ym=year||\"/\"mth;\n     fmthprinc=format(mthprinc,,2);\n     fiamort=format(iamort.i,,2);\n     fpamort=format(pamort.i,,2);\n     ftotint=format(totint,,2);\n     ftotprinc=format(totprinc,,2);\noutp.outptr=right(ym,5)right(fmthprinc,10)right(fiamort,9)|| ,\n             right(fpamort,17)right(ftotprinc,16)right(ftotint,15);\n     outptr=outptr+1;\n     if iamort.i=0 then leave i; /* finished in record time */\n     end;\n   end;\n   otherwise nop;\nend;\n\"EXECIO * DISKW OUT (FINIS STEM OUTP.\";\n\"FREE F(OUT)\";\nsay \"Output is located in:\" outfile;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MOVESMS": {"ttr": 6403, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91&\\x8f\\x00\\x91&\\x8f\\x17\\x07\\x00\\x0e\\x00\\x0e\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-09-25T00:00:00", "modifydate": "1991-09-25T17:07:00", "lines": 14, "newlines": 14, "modlines": 4, "user": "TECH110"}, "text": "//MOVESMS  JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=TECH110\n//* DATACLAS ALTERATION FOR AN EXISTING DATASET\n//S EXEC PGM=FDRCOPY,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSPRIN1 DD SYSOUT=*\n//* VOLSER IS INPUT VOLSER\n//DISK1    DD UNIT=SYSDA,VOL=SER=SMSSM2,DISP=OLD\n//TAPE1    DD UNIT=SYSDA,VOL=SER=SMSSM2,DISP=OLD\n//SYSIN DD *\n MOVE TYPE=DSF,RECAT\n SELECT NVOL=SMS*,DSN=SYSM.NETVIEW.V1R3M0.CNMSAMP\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MPFLST00": {"ttr": 6405, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x94\\x08\\x1f\\x00\\x94\\x19o\\x11@\\x00\\x04\\x00\\xb0\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-03-22T00:00:00", "modifydate": "1994-07-15T11:40:00", "lines": 4, "newlines": 176, "modlines": 0, "user": "TECH110"}, "text": "IEC501A,AUTO(YES),SUP(NO)  /* Mount msg for robocop       */\nIEF233A,AUTO(YES),SUP(NO)  /* Mount msg for robocop       */\nIEC502E,AUTO(YES),SUP(NO),RETAIN(NO)  /* DISMount msg for robocop */\nIEF234E,AUTO(YES),SUP(NO),RETAIN(NO)  /* DISMount msg for robocop */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MSGAUTOM": {"ttr": 6407, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x010\\x00\\x00\\x00\\x91(O\\x00\\x94\\x19o\\x11A\\x00\\x0c\\x00\\x03\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.48", "flags": 0, "createdate": "1991-10-11T00:00:00", "modifydate": "1994-07-15T11:41:00", "lines": 12, "newlines": 3, "modlines": 0, "user": "TECH110"}, "text": " IF MSGID = 'IEC501A' & TEXT = MSGTEXT\n  THEN EXEC (CMD('ROBOCOP ' MSGTEXT)\n  ROUTE(ONE NTVMAOP2 NTVMAOP3 NTVMAOP4 NTVMAOP5));\n IF MSGID = 'IEF233A' & TEXT = MSGTEXT\n  THEN EXEC (CMD('ROBOCOP ' MSGTEXT)\n  ROUTE(ONE NTVMAOP2 NTVMAOP3 NTVMAOP4 NTVMAOP5));\n IF MSGID = 'IEC502E' & TEXT = MSGTEXT\n  THEN EXEC (CMD('ROBOCOP ' MSGTEXT)\n  ROUTE(ONE NTVMAOP2 NTVMAOP3 NTVMAOP4 NTVMAOP5));\n IF MSGID = 'IEF234E' & TEXT = MSGTEXT\n  THEN EXEC (CMD('ROBOCOP ' MSGTEXT)\n  ROUTE(ONE NTVMAOP2 NTVMAOP3 NTVMAOP4 NTVMAOP5));\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MSGQ": {"ttr": 6409, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x10/\\x00\\x95\\x10/\\x12D\\x00\\x06\\x00\\x06\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-04-12T00:00:00", "modifydate": "1995-04-12T12:44:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "TECH110"}, "text": "//TECH110L JOB (5304010530000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//MSGQ EXEC PGM=MSGQ\n//STEPLIB DD DSN=TECH110.MAINT.LOADLIB,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MVSNFS": {"ttr": 6411, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94)\\x0f\\x00\\x94)\\x0f\\x15!\\x00\\x04\\x00\\x04\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-10-17T00:00:00", "modifydate": "1994-10-17T15:21:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//S EXEC PROC=MVSNFS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MXGFORMT": {"ttr": 6413, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94&/\\x00\\x94&/\\x110\\x00\\r\\x00\\t\\x00\\x0b\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-09-19T00:00:00", "modifydate": "1994-09-19T11:30:00", "lines": 13, "newlines": 9, "modlines": 11, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC SAS608,CONFIG='SYSS.MXG.V12R03MA.SRCELIB(CONFIG)'\n//SASLOG DD SYSOUT=*\n//SASLIST DD SYSOUT=*\n//SOURCLIB DD DSN=SYSS.MXG.V12R03MA.CNTLLIB,DISP=SHR\n//         DD DSN=SYSS.MXG.V12R03MA.SRCELIB,DISP=SHR\n//LIBRARY  DD DSN=SYSS.MXG.V12R03MA.FORMATS,DISP=(NEW,CATLG),\n// DCB=(RECFM=FS,LRECL=27648,BLKSIZE=27648),\n// SPACE=(CYL,(1,1))\n//SYSIN DD *\n  %INCLUDE SOURCLIB(FORMATS);\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MXGLOAD": {"ttr": 6415, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94$_\\x00\\x94$_\\x15\\x12\\x00\\t\\x00\\t\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-09-02T00:00:00", "modifydate": "1994-09-02T15:12:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IEBUPDTE,PARM=NEW\n//SYSPRINT DD DUMMY\n//SYSIN DD DSN=MXG.TAPE.MXG.SOURCLIB,DISP=SHR,VOL=SER=C30239,\n// UNIT=SILO,DCB=(RECFM=FB,LRECL=80,BLKSIZE=32720),\n//  LABEL=(,NL,EXPDT=98000)\n//SYSUT2 DD DSN=SYSM.MXG.V12R03MA.INSTLIB,DISP=(NEW,CATLG),\n//  RECFM=FB,LRECL=80,SPACE=(CYL,(75,5,474))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "M204B": {"ttr": 6417, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x91\\x11\\x9f\\x00\\x91\\x11\\x9f\\x16\\x01\\x00[\\x00[\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-04-29T00:00:00", "modifydate": "1991-04-29T16:01:00", "lines": 91, "newlines": 91, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSIN  DD *\nM204B    TITLE 'M204B'\nM204B    CSECT ,\nM204B    AMODE 31\nM204B    RMODE ANY\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         USING M204B,RF , MAP\n         STM   RE,RC,12(RD) SAVE CALLERS REGISTERS\n         B     EYECATCH BRANCH AROUND EYECATCHER\n         DC    C'CPI M204B   ' EYECATCHER\nEYECATCH LR    RC,RF ESTABLISH ADDRESSABILITY VIA REG 12\n         DROP  RF\n         USING M204B,RC , MAP\n         ST    RD,SAVEAREA+4 BACKCHAIN OUR SAVEAREA\n         LR    R2,RD TEMP PTR TO CALLERS SAVEAREA\n         LA    RD,SAVEAREA PTR TO OUR SAVEAREA\n         ST    RD,8(R2) FORWARD CHAIN OLD SAVEAREA TO OUR SAVEAREA\n         L     R2,4(R1)\n         L     R3,8(R1)\n         LA    R3,0(R3)\n         L     R1,0(R1)\n         LH    R4,8(R1)\n         AR    R4,R1\n         ST    R4,L20C\n         MVI   L210,C'N'\n         MVI   L211,C'N'\n         CLC   14(8,R1),0(R2)\n         BNE   LABEL1\n         CLI   30(R1),C'Y'\n         BE    LABEL1\n         MVI   L211,C'Y'\nLABEL1   LA    R4,50(R1)\n         LA    R2,12(R2)\n         LA    R3,12(R3)\n         LR    RA,R3\n         C     R4,L20C\n         BL    LABEL2\n         B     EXIT\nLABEL2   LH    R5,0(R4)\n         C     R5,F81\n         BNL   LABEL3\n         LA    R6,WORKL84\n         CLI   L211,C'N'\n         BE    LABEL4\n         LR    R6,R2\nLABEL4   LR    R7,R5\n         BCTR  R7,0\n         EX    R7,EXCLC1\n         BNE   LABEL5\n         EX    R7,EXMVC1\n         B     LABEL6\nLABEL5   EX    R7,EXCLC2\n         BNE   LABEL7\n         EX    R7,EXCLC3\n         BNE   LABEL7\n         EX    R7,EXMVC1\n         B     LABEL6\nLABEL7   EX    R7,EXCLC4\nEXIT\nRETURN   L     RD,SAVEAREA+4 CALLERS SAVEAREA PTR\n         LM    RE,RC,12(RD) CALLERS REGS\n         LA    RF,0 SET RC = 0\n         BR    RE RETURN TO CALLER\nSAVEAREA DC    18F'0' OUR SAVEAREA\nSAVER4   DC    A(0)\nFLAG1    DC    C' '\nFLAG2    DC    C' '\nWORKL84  DC    84X'00'\nF81      DC    F'81'\n         END\n/*\n//*L.SYSLMOD DD DSN=YOURDSN(LOADMOD),DISP=SHR,\n//*  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "M205B": {"ttr": 6420, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x91\\x11O\\x00\\x91\\x11o\\x12\\x01\\x003\\x003\\x00\\x06\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1991-04-24T00:00:00", "modifydate": "1991-04-26T12:01:00", "lines": 51, "newlines": 51, "modlines": 6, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSIN  DD *\nM205B    TITLE 'M205B'\nM205B    CSECT ,\nM205B    AMODE 31\nM205B    RMODE ANY\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         USING M205B,RF , MAP\n         STM   RE,RC,12(RD) SAVE CALLERS REGISTERS\n         B     EYECATCH BRANCH AROUND EYECATCHER\n         DC    C'CPI M205B   ' EYECATCHER\nEYECATCH LR    RC,RF ESTABLISH ADDRESSABILITY VIA REG 12\n         DROP  RF\n         USING M205B,RC , MAP\n         ST    RD,SAVEAREA+4 BACKCHAIN OUR SAVEAREA\n         LR    R2,RD TEMP PTR TO CALLERS SAVEAREA\n         LA    RD,SAVEAREA PTR TO OUR SAVEAREA\n         ST    RD,8(R2) FORWARD CHAIN OLD SAVEAREA TO OUR SAVEAREA\nLOOPPARM L     R3,4(R1) PICKUP PTR TO SECOND PASSED PARAMETER\n         MVC   0(4,R3),0(R1) COPY ADDR(PTR) TO SECOND PARAM\n         TM    4(R1),X'80' LAST PARAM SET PASSED\n         BNO   CONTINUE NO\n         B     RETURN EXIT\nCONTINUE LA    R1,8(R1) ADVANCE PASSED PARAM PTR\n         B     LOOPPARM\nRETURN   L     RD,SAVEAREA+4 CALLERS SAVEAREA PTR\n         LM    RE,RC,12(RD) CALLERS REGS\n         LA    RF,0 SET RC = 0\n         BR    RE RETURN TO CALLER\nSAVEAREA DC    18F'0' OUR SAVEAREA\n         END\n/*\n//*L.SYSLMOD DD DSN=YOURDSN(LOADMOD),DISP=SHR,\n//*  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "M206B": {"ttr": 6422, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x91\\x11o\\x00\\x91\\x11o\\x12X\\x00U\\x00,\\x00)\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-04-26T00:00:00", "modifydate": "1991-04-26T12:58:00", "lines": 85, "newlines": 44, "modlines": 41, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSIN  DD *\nM206B    TITLE 'M206B'\nM206B    CSECT ,\nM206B    AMODE 31\nM206B    RMODE ANY\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         USING M206B,RF , MAP\n         STM   RE,RC,12(RD) SAVE CALLERS REGISTERS\n         B     EYECATCH BRANCH AROUND EYECATCHER\n         DC    C'CPI M206B   ' EYECATCHER\nEYECATCH LR    RC,RF ESTABLISH ADDRESSABILITY VIA REG 12\n         DROP  RF\n         USING M206B,RC , MAP\n         ST    RD,SAVEAREA+4 BACKCHAIN OUR SAVEAREA\n         LR    R2,RD TEMP PTR TO CALLERS SAVEAREA\n         LA    RD,SAVEAREA PTR TO OUR SAVEAREA\n         ST    RD,8(R2) FORWARD CHAIN OLD SAVEAREA TO OUR SAVEAREA\n         L     R2,4(R1) PICKUP ADDRESS OF SECOND PARAM PASSED\n         L     R3,8(R1) PICKUP ADDRESS OF THIRD PARAM PASSED\n         L     R1,0(R1) PICKUP ADDRESS OF FIRST PASSED PARAM\n         LH    R4,8(R1)\n         AR    R4,R1\n         ST    R4,WORK1\n         LA    R4,50(R1)\n         LA    R2,12(R2)\n         LA    R3,12(R3)\nLOOP     LH    R5,0(R4)\n         C     R4,WORK1\n         BL    CONTINUE\n         B     RETURN\nCONTINUE CLC   0(2,R3),MINUS1\n         BNE   NMINUS1\n         MVI   0(R3),X'00'\n         MVI   1(R3),X'00'\nNMINUS1  CLC   2(1,R3),CHARH\n         BNE   LABEL1\n         MVC   2(1,R3),BLANK\nLABEL1   CLC   0(2,R2),H9\n         BNE   LABEL2\n         CLC   3(1,R3),ASTERISK\n         BNE   LABEL2\n         MVI   3(R3),C' '\nLABEL2   LA    R2,3(R2)\n         AR    R2,R5\n         LA    R3,3(R3)\n         AR    R3,R5\n         LA    R4,5(R4)\n         B     LOOP\nRETURN   L     RD,SAVEAREA+4 CALLERS SAVEAREA PTR\n         LM    RE,RC,12(RD) CALLERS REGS\n         LA    RF,0 SET RC = 0\n         BR    RE RETURN TO CALLER\n         DC    X'0000' FILLER\nSAVEAREA DC    18F'0' OUR SAVEAREA\n         DC    F'0'\n         DC    F'0'\nWORK1    DC    F'0'\n         DC    X'00'\nCHARH    DC    C'H'\nBLANK    DC    C' '\nASTERISK DC    C'*'\nMINUS1   DC    H'-1'\nH9       DC    H'9'\n         END\n/*\n//*L.SYSLMOD DD DSN=YOURDSN(LOADMOD),DISP=SHR,\n//*  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NJESAMP": {"ttr": 6425, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x913?\\x00\\x913?\\tS\\x00\\x08\\x00\\x08\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-11-29T00:00:00", "modifydate": "1991-11-29T09:53:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "TECH110"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*ROUTE XEQ CHRMSYSM\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NTVAUTCL": {"ttr": 6427, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x91(\\x0f\\x00\\x91(?\\x16&\\x00\\'\\x00\\x08\\x00\"\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1991-10-07T00:00:00", "modifydate": "1991-10-10T16:26:00", "lines": 39, "newlines": 8, "modlines": 34, "user": "TECH110"}, "text": "//TECH110A JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=Q,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//IAMPRINT DD SYSOUT=*\n//IAMOVRID DD *\n  CREATE DD=&ALLDD,O=40000\n//IAMINFO  DD SYSOUT=*\n//SYSIN DD *\n   DELETE SYS1.NETVIEW.NTVMAUTO.DSILOGP.CLUSTER CL\n   DEF CLUSTER(NAME(SYS1.NETVIEW.NTVMAUTO.DSILOGP.CLUSTER) -\n           OWNER($IAM) -\n           MGMTCLAS(NOMIG) -\n           INDEXED -\n           KEYS (4,8) -\n           RECSZ(125,404) -\n           FSPC(0,0) -\n           REUSE -\n           SHR(2) -\n           CYLINDERS(100) -\n           CISZ(4096) -\n           IMBED )\n   LISTC ENTRY(SYS1.NETVIEW.NTVMAUTO.DSILOGP.CLUSTER) ALL\n   DELETE SYS1.NETVIEW.NTVMAUTO.DSILOGS.CLUSTER CL\n   DEF CLUSTER(NAME(SYS1.NETVIEW.NTVMAUTO.DSILOGS.CLUSTER) -\n           OWNER($IAM) -\n           MGMTCLAS(NOMIG) -\n           INDEXED -\n           KEYS (4,8) -\n           RECSZ(125,404) -\n           FSPC(0,0) -\n           REUSE -\n           SHR(2) -\n           CYLINDERS(100) -\n           CISZ(4096) -\n           IMBED )\n   LISTC ENTRY(SYS1.NETVIEW.NTVMAUTO.DSILOGS.CLUSTER) ALL\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ONLVOL": {"ttr": 6429, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92\"O\\x00\\x92\"O\\x11\\t\\x00\\x17\\x00\\x1c\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-08-11T00:00:00", "modifydate": "1992-08-11T11:09:00", "lines": 23, "newlines": 28, "modlines": 3, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S1 EXEC PGM=IDCAMS,REGION=6M\n//*COMMENT FRAGMENTATION INDEX REPORT\n//SYSPRINT DD SYSOUT=*\n//OUTPUT   DD DSN=&&DCOLLECT,DISP=(NEW,PASS),\n//  DATACLAS=DATAPS,LRECL=264,RECFM=VB\n//SYSIN DD *\n  DCOLLECT OUTFILE(OUTPUT) -\n        NOD VOL(*)\n/* END\n//S2 EXEC PGM=SORT,REGION=6M\n//*COMMENT SORT FRAGMENTATION REPORT\n//SYSPRINT DD SYSOUT=*\n//SORTIN   DD DSN=&&DCOLLECT,DISP=(OLD,DELETE)\n//SORTOUT  DD DSN=TECH110.VOLUMES,DISP=(NEW,CATLG,DELETE),\n//   DATACLAS=DATAPS\n//SYSOUT   DD SYSOUT=*\n//SYSIN    DD *\n  SORT FIELDS=(53,4,D),FORMAT=BI,DYNALLOC=(SYSDA,1)\n  OUTREC FIELDS=(1:1,4,5:29,6,13:73,8,23:81,2,HEX)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PASSWORD": {"ttr": 6431, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01 \\x00\\x00\\x00\\x91\\x07?\\x00\\x923o\\x17\\x12\\x00\\xd1\\x00l\\x00{\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.32", "flags": 0, "createdate": "1991-03-14T00:00:00", "modifydate": "1992-12-01T17:12:00", "lines": 209, "newlines": 108, "modlines": 123, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nRCF      TITLE 'REXX RACFPASS PROFILE UPDATE'\nRACFUSER CSECT , /* RACFUSER */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nRACFUSER AMODE 31\nRACFUSER RMODE 24\n         SAVE  (14,12),,RACFUSER*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING RACFUSER,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SLR   R9,R9 RC\n         LA    R0,DWORDS\n         GETMAIN R,LV=(0)\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING RACFWMAP,RD\n         XC    PARSEPPL(K28),PARSEPPL /* PREP PARAM SCAN */\n         XC    CMDPANS,CMDPANS\n         XC    CMDPECB,CMDPECB\n         LA    R8,PARSEPPL MAP\n         USING PPL,R8\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         MVC   PPLCBUF,CPPLCBUF\n         LA    R0,CMDPECB\n         ST    R0,PPLECB\n         LA    R0,CMDPANS\n         ST    R0,PPLANS\n         L     R0,=A(IKJPARM)\n         ST    R0,PPLPCL\n         DROP  R8\n         CALLTSSR EP=IKJPARS,MF=(E,(R8))\n         LTR   R9,RF\n         BNZ   MAINEXIT\n         L     R4,CMDPANS /* RESPONSE */\n         USING IKJPARMD,R4\n         L     R5,USERPARM\n         LH    R6,USERPARM+K4\n         TM    USERPARM+K6,X80 UID FOUND\n         BZ    UIDERROR\n         STC   R6,USERID /* FOR RACF */\n         BCTR  R6,K0\n         EX    R6,MOVEUID\n         LA    R1,CMDPANS\n         IKJRLSA (R1)\n         LA    R5,RACFWORK\n         MVC   RACFWORK(K4),=A(K96)\n         LA    R6,LXTEINTY\n         LA    R7,LXTFNAME\n         MVC   K0(LLLEINTY,R6),LSTEINTY MAKE RENT\n         MVC   K0(LLLFNAME,R7),FNAME\n         DROP  R4\n         LA    R4,USERID\n         ICHEINTY LOCATE,TYPE='USR',ENTRY=(R4),RELEASE=1.8.1,          X\n               WKAREA=(R5),ACTIONS=(FNAME),OPTIONS=(ACTION),MF=(E,(R6))\n         LTR   R9,RF\n         BNZ   NOUSER\n         LA    R1,RACFWORK+K32\n  DC X'0000'\n         CLI   K0(R1),C' ' ANYTHING THERE\n         BE    NODATA\n         LA    R0,K20\n         STM   R0,R1,VALUELEN ...\n*        TPUT  (1),(0)\nMAINEXT1 LINK  EP=IKJCT441,PARAM=(ECODE,NAMEPTR,NAMELEN,VALUEPTR,      X\n               VALUELEN,TOKEN),VL=1\n*        LTR   R9,RF ignore this RC\n         B     MAINEXIT\n*OUSER   TPUT  NOUSERM,L'NOUSERM\nNOUSER   LA    R0,L'NOUSERM\n         LA    R1,NOUSERM\n         STM   R0,R1,VALUELEN ...\n         B     MAINEXT1\n*ODATA   TPUT  NODATAM,L'NODATAM\nNODATA   LA    R0,L'NODATAM\n         LA    R1,NODATAM\n         STM   R0,R1,VALUELEN ...\n         B     MAINEXT1\nUIDERROR LA    R9,K255 /* UID NOT PRESENT */\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         LA    R0,DWORDS\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nMOVEUID  MVC   USERID+K1(*-*),K0(R5) ACQUIRE USERID\nNOUSERM  DC    C'Invalid TSO/E userid entered.'\nNODATAM  DC    C'RACF database programmer name field missing.'\n         LTORG\nECODE    DC    A(TSVEUPDT) Set value\nNAMEPTR  DC    A(NAME)\nNAMELEN  DC    F'5'\nVALUELEN DC    A(*-*) Keep together\nVALUEPTR DC    A(*-*)\nTOKEN    DC    F'0'\nNAME     DC    C'WHOIS' Rexx var name\nFNAME    ICHEACTN FIELD=PASSWORD,RELEASE=1.8.1\nLLLFNAME EQU   *-FNAME\nLSTEINTY ICHEINTY LOCATE,TYPE='USR',ENTRY=*-*,RELEASE=1.8.1,           X\n               WKAREA=*-*,ACTIONS=(FNAME),MF=L\nLLLEINTY EQU   *-LSTEINTY\nIKJPARM  IKJPARM\nUSERPARM IKJPOSIT USERID,UPPERCASE,PROMPT='Required TSO/E userid ?'\n         IKJENDP\nRACFWMAP DSECT\nSAVEAREA DC    18F'0'\nCMDPECB  DC    A(K0)\nCMDPANS  DC    A(K0)\nPARSEPPL DC    (K28)AL1(K0) PARSE PPL\nLXTEINTY DC    (LLLEINTY)AL1(K0)\nRACFWORK DC    A(K96),(K92)AL1(K0)\nLXTFNAME DC    (LLLFNAME)AL1(K0)\nUSERID   DC    AL1(*-*),CL8' '\nDWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         CVT   DSECT=YES\n         IKJTSVT\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(PASSWORD),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PDS": {"ttr": 6660, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x91(\\x1f\\x00\\x91(\\x1f\\x145\\x00\\x16\\x00\\x11\\x00\\n\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1991-10-08T00:00:00", "modifydate": "1991-10-08T14:35:00", "lines": 22, "newlines": 17, "modlines": 10, "user": "TECH110"}, "text": "/* REXX PDSE TO PDS EXEC */\nADDRESS \"TSO\";\nPARSE UPPER ARG DSNAME DIR DC;\nIF DSNAME = \"\" | DIR = \"\" THEN EXIT 16;\nPARSE VAR DSNAME \"'\" DSNAME \"'\";\nPARSE VAR DSNAME HLQ \".\" . ;\nIF HLQ=\"SYS1\" THEN MC=\"NOMIG\";\n   ELSE MC=\"STANDARD\";\nINDSN = \"'\"DSNAME||\".PDSE'\";\nDSNAME = \"'\"DSNAME\"'\";\n'RENAME' DSNAME INDSN;\n\"FREE F(OUT)\";\n\"ALLOC F(OUT) LIKE(\"INDSN\") DSNTYPE(PDS) DIR(\"DIR\") DSNAME(\"DSNAME|| ,\n  \") NEW CATALOG STORCLAS(SCSTNRDG) MGMTCLAS(\"MC\") DATACLAS(\"DC\")\";\nIF RC\u00ac=0 THEN EXIT 16;\n\"FREE F(IN)\";\n\"ALLOC F(IN) DA(\"INDSN\") SHR\";\nIF RC\u00ac=0 THEN EXIT 16;\n\"FREE F(SYSIN)\";\n\"ALLOC F(SYSIN) DA('TECH110.USER.CNTLLIB(PDSSYSIN)') SHR\";\nIF RC\u00ac=0 THEN EXIT 16;\n\"CALL 'SYS1.LINKLIB(IEBCOPY)'\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDSMTCH": {"ttr": 6662, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x91(\\x9f\\x00\\x91(\\x9f\\x16U\\x00[\\x00\\x19\\x00[\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1991-10-16T00:00:00", "modifydate": "1991-10-16T16:55:00", "lines": 91, "newlines": 25, "modlines": 91, "user": "TECH110"}, "text": "/* REXX EXEC to compare/match PDS directory member names     */\nparse upper arg dsname1 dsname2 . ;\nif dsname2 = \"\" then exit 16; /* Missing input */\nif substr(dsname1,1,1)\u00ac=\"'\" then ,\n      dsname1 = \"'\"dsname1\"'\";\nif substr(dsname2,1,1)\u00ac=\"'\" then ,\n      dsname2 = \"'\"dsname2\"'\";\ndummy = listdsi(dsname1 \"directory\");\nif sysreason=5 then do;say \"Invalid dsname: \"dsname1;exit 16;end;\nmem1dir = sysmembers;\ndummy = listdsi(dsname2 \"directory\");\nif sysreason=5 then do;say \"Invalid dsname: \"dsname2;exit 16;end;\nmem2dir = sysmembers;\ndummy = outtrap(\"dsn1list.\");\n\"LISTDS\" dsname1 \"MEMBERS\";\ndummy = outtrap(\"OFF\");\ndummy = outtrap(\"dsn2list.\");\n\"LISTDS\" dsname2 \"MEMBERS\";\ndummy = outtrap(\"OFF\");\nin1not2 = \"\";\nin2not1 = \"\";\nmem1 = 0;\nmem2 = 0;\ndo i = 1 to dsn1list.0;\n  if dsn1list.i=\"--MEMBERS--\" then do;\n       dsn1ptr = i+1; /* first member name */\n       leave i;\n       end;\nend;\ndo i = 1 to dsn2list.0;\n  if dsn2list.i=\"--MEMBERS--\" then do;\n       dsn2ptr = i+1; /* first member name */\n       leave i;\n       end;\nend;\ndo loop=1 to 99999; /* forever loop */\n    dsn1list.dsn1ptr = word(dsn1list.dsn1ptr,1);\n    dsn2list.dsn2ptr = word(dsn2list.dsn2ptr,1);\n    if dsn1list.dsn1ptr = dsn2list.dsn2ptr then do;\n           mem1 = mem1+1; mem2 = mem2+1;\n           dsn1ptr = dsn1ptr+1;\n           dsn2ptr = dsn2ptr+1;\n           end;\n    else if dsn1list.dsn1ptr > dsn2list.dsn2ptr then do;\n           mem2 = mem2+1;\n           in2not1 = in2not1 dsn2list.dsn2ptr;\n           dsn2ptr = dsn2ptr+1;\n           end;\n    else if dsn1list.dsn1ptr < dsn2list.dsn2ptr then do;\n           mem1 = mem1+1;\n           in1not2 = in1not2 dsn1list.dsn1ptr;\n           dsn1ptr = dsn1ptr+1;\n           end;\n    if dsn1ptr>dsn1list.0 & dsn2ptr>dsn2list.0 then leave loop;\n    if dsn1ptr>dsn1list.0 then do;\n           do i = dsn2ptr to dsn2list.0;\n           dsn2list.i = word(dsn2list.i,1);\n           mem2 = mem2+1;\n           in2not1 = in2not1 dsn2list.i;\n           end;\n           leave loop;\n           end;\n    if dsn2ptr>dsn2list.0 then do;\n           do i = dsn1ptr to dsn1list.0;\n           dsn1list.i = word(dsn1list.i,1);\n           mem1 = mem1+1;\n           in1not2 = in1not2 dsn1list.i;\n           end;\n           leave loop;\n           end;\nend;\n\"VMFCLEAR\";\nalias1 = mem1dir-mem1;\nalias2 = mem2dir-mem2;\nsay \"DSNAME: \"dsname1\";   member count: \"mem1\"; alias(es): \"alias1;\nsay \"DSNAME: \"dsname2\";   member count: \"mem2\"; alias(es): \"alias2;\nif in1not2\u00ac=\"\" then do;\n      say \"Members in \"dsname1\" and NOT in \"dsname2;\n      ctr = words(in1not2);\n      do i = 1 to ctr;\n         say \"   \"word(in1not2,i);\n      end;\nend;\nif in2not1\u00ac=\"\" then do;\n      say \"Members in \"dsname2\" and NOT in \"dsname1;\n      ctr = words(in2not1);\n      do i = 1 to ctr;\n         say \"   \"word(in2not1,i);\n      end;\nend;\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDSSYSIN": {"ttr": 6665, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x91(\\x1f\\x00\\x91(\\x1f\\t6\\x00\\x01\\x00\\x01\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-10-08T00:00:00", "modifydate": "1991-10-08T09:36:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "TECH110"}, "text": "  C O=OUT,I=IN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDSTOSEQ": {"ttr": 6667, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x017\\x00\\x00\\x00\\x91\\x02_\\x00\\x91\\x11O\\x14R\\x00\\xd8\\x01\\xe2\\x00{\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.55", "flags": 0, "createdate": "1991-01-25T00:00:00", "modifydate": "1991-04-24T14:52:00", "lines": 216, "newlines": 482, "modlines": 123, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.KAPLAN.JEFF',\n// CLASS=A,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL\n//C.SYSIN  DD *\nPDS      TITLE 'PDS DATASET TO SEQUENTIAL DATASET UTILITY'\nPDSTOSEQ CSECT , /* CONVERT DATASET FORMAT */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nPDSTOSEQ AMODE 24\nPDSTOSEQ RMODE 24\n         SAVE  (14,12),,PDSTOSEQ*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING PDSTOSEQ,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\nOPENLIST OPEN  (DIRREAD,(INPUT),SYSUT2,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R7,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         SLR   R5,R5 /* TOTAL MEMBER COUNT */\n         L     R3,=A(TTRLIST) /* START OF DIR LIST */\nGETDIR   READ  DECBDIR,SF,MF=E\n         CHECK DECBDIR\n         LA    R4,DIRBLOCK+K10 /* PTR FIRST DIR BLOK ENTRY */\nDIRBSCAN CLC   =X'FFFFFFFF',K0(R4) /* DIR END */\n         BE    DIREND\n         LA    R5,K1(,R5) +1 MEMBER\n         C     R5,=A(K32760) EXCEEDED MAX # MEMBERS WE HANDLE\n         BH    FMEMCOUN YES\n         MVC   K0(K3,R3),K8(R4) SAVE MEMBER TTR\n         MVI   K3(R3),X'00' /* CLEAR LAST TTR UNUSED BYTE */\n         LA    R3,K4(,R3) NEXT TTR SPOT; DO HALFWORD BOUND\n         CLC   DIRBLOCK(K8),K0(R4) BLOCK END\n         BE    GETDIR YES\n         SLR   RF,RF /* CALC ENTRY LEN */\n         NI    K11(R4),XFF-X80-X40-X20 OFF ALIAS AND TTRN BITS\n         IC    RF,K11(,R4)\n         SLL   RF,K1 /* NUMBER HALFWORDS */\n         LA    R4,K12(RF,R4) NEXT SPOT\n         B     DIRBSCAN /* CONTINUE */\nDIREND   CLOSE (DIRREAD)\nOPENSYT1 OPEN  (MEMREAD,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYT1+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         LA    R6,SYSUT2 /* OUTPUT DCB */\n         USING IHADCB,R6\n         LH    R8,DCBBLKSI /* INPUT BLOCKSIZE FROM OUTPUT */\n         LH    R9,DCBLRECL /* INPUT LRECL FROM OUTPUT */\n         MVC   SAVRECFM,DCBRECFM /* SAVE OUT PUT RECFM\n         DROP  R6\n         LTR   R5,R5 /* ANY MEMBERS IN DATASET */\n         BNP   FNOMEM NO\n         L     R8,=A(TTRLIST) /* START OF DIR LIST */\nMEMLOOP  FIND  MEMREAD,(R8),C /* BPAM USES OUR TTR */\n         LTR   RF,RF /* FIND OK */\n         BNZ   FFIND ...\nGETMEM   READ  DECBMEM,SF,MF=E /* INPUT DATA BLOCK */\n         CHECK DECBMEM\n         LA    R6,MEMREAD     /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         LH    R3,DCBLRECL /* INPUT BLOCKSIZE */\n         DROP  R6\n         TM    SAVRECFM,X80+X40 /* RECFM=U */\n         BO    RECFMU YES\n         TM    SAVRECFM,X80 /* RECFM=F */\n         BO    RECFMF YES\n         TM    SAVRECFM,X08 /* DONT SUPPORT VS OR VBS */\n         BO    FVBS EXIT\n         LH    R2,IOAREA /* INPUT VAR BLKSIZE */\n         SH    R2,=H'4' /* CALC OUT BDW LEN */\n         LA    R6,IOAREA+K4 /* A RECORD */\nPUTVARCD LH    R3,K0(,R6) /* RDW */\n         SR    R2,R3 /* CALC OUT RCD */\n         PUT   SYSUT2,(R6) /* OUTPUT 1 VAR LEN RCD */\n         LA    R6,K0(R3,R6) NEXT RCD\n         LTR   R2,R2 ANYMORE\n         BP    PUTVARCD YES\n         B     GETMEM   /* CONTINUE */\nRECFMU   LA    R6,SYSUT2\n         USING IHADCB,R6\n         STH   R3,DCBLRECL /* SET OUTPUT BLKSIZE */\n         DROP  R6\n         PUT   SYSUT2,IOAREA /*UIS1 RCD PER BLOCK */\n         B     GETMEM   /* CONTINUE */\nRECFMF   SLR   R2,R2\n         DR    R2,R9 /* BLOCKING FACTOR ON INPUT */\n         L     R2,=A(IOAREA) /* INPUT BLOCK */\nWRITERCD PUT   SYSUT2,(R2)    /* OUTPUT RCD */\n         LA    R2,K0(R9,R2) /* NEXT DEBLOCKED RCD */\n         BCT   R3,WRITERCD /* LOOP */\n         B     GETMEM /* NEXT BLOCK READ */\nMEMEND   LA    R8,K4(,R8) /* NEXT TTR */\n         BCT   R5,MEMLOOP /* LOOP FOR ALL MEMBERS */\n         CLOSE (MEMREAD,,SYSUT2) /* CLOSE ALL */\n         FREEPOOL SYSUT2\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nFMEMCOUN LA    RF,K28 /* MORE THAN 32760 MEMBERS */\n         B     MAINEXIT\nFNOMEM   LA    RF,K32 /* NO INPUT MEMBERS IN SYSUT1 */\n         B     MAINEXIT\nFFIND    LA    RF,K36 /* FIND FAILURE */\n         B     MAINEXIT\nFVBS     LA    RF,K40 /* INPUT VS OR VBS    */\n         B     MAINEXIT\n         LTORG\n         PRINT NOGEN\n         READ  DECBDIR,SF,DIRREAD,DIRBLOCK,'S',MF=L /*READ DIR BLOCK*/\n         READ  DECBMEM,SF,MEMREAD,IOAREA,'S',MF=L  /*READ MEM BLOCK*/\nWORK     DC    D'0'\nDIRREAD  DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(R),                       X\n               EODAD=*-*,KEYLEN=8,RECFM=F,LRECL=256,BLKSIZE=256\nMEMREAD  DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R),EODAD=MEMEND,RECFM=U,  X\n               KEYLEN=0,LRECL=0\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM)\nSAVRECFM DC    AL1(K0)\nDIRBLOCK DC    (K264)AL1(K0) /* A DIR BLOCK */\nIOAREA   DS    0H'0',(K32760)AL1(K0) /* LARGE I/O WORKAREA */\nTTRLIST  DS    (K0)A(K0),(K32760)CL4' '\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDSXSEQ": {"ttr": 6672, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\\x02\\x7f\\x00\\x93\\x02\\x7f\\x16\\x00\\x00\\x07\\x00\\x07\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-01-27T00:00:00", "modifydate": "1993-01-27T16:00:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=PDSTOSEQ\n//SYSPRINT DD SYSOUT=*\n//SYSUT1 DD DSN=SYSM.MIM.V3R0M0.FIXLIB,DISP=SHR\n//SYSUT2 DD DSN=SYSM.MIM.V3R0M0.FIXSEQ,DISP=(NEW,CATLG),\n// SPACE=(TRK,(3,1)),LRECL=80,RECFM=FB\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PIPEDUMP": {"ttr": 6674, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x94$/\\x00\\x94$?\\tF\\x00\\x16\\x00y\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-08-30T00:00:00", "modifydate": "1994-08-31T09:46:00", "lines": 22, "newlines": 121, "modlines": 4, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//CASFXSMF PROC A='*',\n//         SCDDSN='SYSS.JARSMF.SCDS',\n//         STEPLIB='SYS1.JARSMF.V1R5M0.CAILIB',\n//         TPUNIT='CART'\n//STEP1    EXEC PGM=SMFD\n//STEPLIB  DD   DISP=SHR,DSN=&STEPLIB\n//SCDS     DD   DISP=OLD,DSN=&SCDDSN\n//HISTORY1 DD   UNIT=(&TPUNIT,,DEFER),VOL=SER=SMFTAP,DISP=(OLD,PASS)\n//JARSPEC  DD DSN=PIPES.SMFDATA,DISP=(,KEEP,DELETE),\n//            UNIT=CART,VOL=SER=CVA026,\n//            DCB=(RECFM=VBS,LRECL=32756,BLKSIZE=32760)\n//SYSPRINT DD SYSOUT=&A\n//SYSXDIAG DD SYSOUT=&A\n// PEND\n//STEP001 EXEC CASFXSMF\n//SYSIN    DD *\nEXTRACT FROM(082694 0000) TO(083094 2359)\n        SELECT(14,15,16,30,62,64,208)\n        SID(ALL) TODD(JARSPEC).\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PIPEIN": {"ttr": 6676, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x942\\x9f\\x00\\x942\\x9f\\x14P\\x00\\x08\\x00\\x08\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-11-25T00:00:00", "modifydate": "1994-11-25T14:50:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "TECH110"}, "text": "//TECH110I JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//S EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD DUMMY\n//SYSUT2 DD SYSOUT=*\n//SYSUT1 DD DSN=PIPE.TEST,SUBSYS=PIPE,LABEL=(,,,IN),RECFM=FB,LRECL=80\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PIPEOUT": {"ttr": 6678, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x942\\x9f\\x00\\x942\\x9f\\x14P\\x00\\x08\\x00\\x08\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-11-25T00:00:00", "modifydate": "1994-11-25T14:50:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//S EXEC PGM=IEBGENER\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD DUMMY\n//SYSUT1 DD DSN=SYSS.TECH.COMMON.DOCLIB,DISP=SHR\n//SYSUT2 DD DSN=PIPE.TEST,SUBSYS=PIPE,LABEL=(,,,OUT),RECFM=FB,LRECL=80\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PMONASM": {"ttr": 6913, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x00\\x00\\x93\\x10\\x9f\\x00\\x93\\x11\\x0f\\x14)\\x00I\\x00s\\x00&\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "1993-04-19T00:00:00", "modifydate": "1993-04-20T14:29:00", "lines": 73, "newlines": 115, "modlines": 38, "user": "TECH110"}, "text": "//TECH110G JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n// DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nPMON     CSECT\n* COBOL V2 DYNAMIC CALL USING 8 CHAR TRACE ID POINT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nPMON     AMODE 24\nPMON     RMODE 24\n         SAVE  (14,12),,PMON*&SYSDATE*&SYSTIME\n         LR    RA,RF ADDRESSABILITY\n         USING PMON,RA,RB,RC\n         LA    RB,4095(RA)\n         LA    RB,1(RB)\n         LA    RC,4095(RB)\n         LA    RC,1(RC)\n         LR    RF,RD SAVEAREA HOUSEKEEPING\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18F'0'\n         ST    RD,8(RF)\n         ST    RF,4(RD)\n         LR    R2,R1 SAVE PASSED PARAM PTR\n         LA    R0,256\n         GETMAIN RU,LV=(0)\n         LR    R3,R1 SAVE AREA PTR\n*        L     R5,0(,R2)\n*        LA    R5,0(,R5)\n*        MVC   WTO+8(8),0(R5) TRACEID 8 BYTES\n         STCK  0(R3)\n         UNPK  8(13,R3),0(7,R3)\n         TR    8(12,R3),TRHEX\n         MVC   WTO+17(12),8(R3)\n         L     R5,X'224' ASCB PTR\n         MVC   0(8,R3),X'40'(R5) ASCBEJST\n         UNPK  8(13,R3),0(7,R3)\n         TR    8(12,R3),TRHEX\n         MVC   WTO+30(12),8(R3)\n         MVC   0(8,R3),X'C8'(R5) ASCBSRBT\n         UNPK  8(13,R3),0(7,R3)\n         TR    8(12,R3),TRHEX\n         MVC   WTO+43(12),8(R3)\nWTO      WTO   'XXXXXXXX XXXXXXXXXXXX XXXXXXXXXXXX XXXXXXXXXXXX'\n         LA    R0,256\n         FREEMAIN RU,LV=(0),A=(R3)\n         L     RD,4(RD)\n         RETURN (14,12),RC=0\n         LTORG\nTRHEX    DC    256X'00'\n         ORG   TRHEX+C'0'\n         DC    C'0123456789ABCDEF'\n         ORG\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TEST.BATCH.LOADLIB(PMON),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POLLBKV0": {"ttr": 6916, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x00\\x00\\x91\\x02_\\x00\\x91\\x03\\x0f\\x15C\\x02\\xbe\\x01\\xe2\\x01\"\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "1991-01-25T00:00:00", "modifydate": "1991-01-30T15:43:00", "lines": 702, "newlines": 482, "modlines": 290, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.AMODGEN,DISP=SHR\n//C.SYSIN  DD *\nPLB      TITLE 'STORE POLL DOWNLOAD DATA BREAKOUT'\nPOLLDOWN CSECT , /* STORE POLL DOWNLOAD DATA FILE BREAKOUT'\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK27      EQU   27\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nPOLLDOWN AMODE 24\nPOLLDOWN RMODE 24\n         SAVE  (14,12),,POLLDOWN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING POLLDOWN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         TESTAUTH FCTN=1 , /* APF AUTHORIZED */\n         LTR   RF,RF\n         BNZ   FAUTH\n         SYSEVENT DONTSWAP,ENTRY=SVC , /* NOSWAP SHORT-TERM */\n         LTR   RF,RF\n         BNZ   FSWAP\n         L     R1,=A(POLLDOWN) /* PAGEFIX */\n         L     RF,=A(ENDFIX) ...\n         PGSER R,FIX,A=(1),EA=(15),ECB=0,RELEASE=N,LONG=Y,BACKOUT=Y\n         LTR   RF,RF\n         BNZ   FPGSER\n         RDJFCB BREAKER , /* ACQUIRE OUTPUT FILE JFCB */\n         LTR   RF,RF\n         BNZ   FRDJFCB\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         TM    JFCDSRG1,JFCORGPO /* DSORG=PO */\n         BZ    FNOTPO /* NO */\n         TM    JFCBIND2,JFCNEW /* DISP=NEW */\n         BNO   FNOTNEW /* NO */\n         DROP  RF\nOPENLIST OPEN  (DMASTER,(INPUT),BREAKER,(OUTPUT),REPORT,(OUTPUT),      X\n               EMASTER,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R9,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         USING IHADCB,R8\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R8\n         USING IHADCB,R9\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R9\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         SLR   R5,R5 /* OUTSTAND NCP WRITE COUNTER */\nPGETLOOP LA    R6,INAREA /* DOWNLOAD FILE HAS SETS OF 4 RCDS*/\n         GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         NI    FLAGS,XFF-X40 /* SET NEW MEMBER FLAG OFF */\n         OI    FLAGS,X80 /* SET UNEXPECTED EOF; MUST HAVE SETS OF 4*/\n         TM    FLAGS,X08 /* MID TYPE 30 FILE */\n         BO    MIDTYP30 /* YES */\n         CLC   =C'30',INAREA+K7 /* NEW TYPE 30 SET */\n         BE    SET30MOD /* YES */\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         LA    R7,K3 /* CTR FOR NEXT 3 RECORDS */\nGETLOOP  GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         BCT   R7,GETLOOP  ...\n         MVC   INAREA+K80(K64),INAREA+K96 /*BUILD */\n         MVC   INAREA+K144(K64),INAREA+K176 /* SHIFT RECORD AREAS */\n         MVC   INAREA+K208(K64),INAREA+K256\nLAST30SG MVC   SEQFIELD(K1),INAREA+K16 /* INPUT RECORD SEQ # */\nPROCE0   NI    FLAGS,XFF-X80 /* RESET EXPECTED EOF BIT */\n         NI    SEQFIELD,XFF-X80 /* SHUT DOWN HI SET END BIT */\n         TM    FLAGS,X20 /* EXPECTED WRAPAROUND MODE */\n         BO    DOWRAP /* YES */\n         CLC   EXPSEQ,SEQFIELD /* MATCH ON EXPECTED SEQ # */\n         BNE   SEQERR /* ERROR */\n         CLI   SEQFIELD,X01 /* FIRST OF SET */\n         BNE   BUILDRCD /* NO, ELSE SAVE MEMBER NAME */\n         CLC   STOWLIST+K1(K4),INAREA+K2 /* COMPARE STORE ID */\n         BNE   RESETSEQ /* MEMBER BREAK */\n         TM    FLAGS,X04 /* E0 UP */\n         BZ    CHKDFID NO\n         CLC   STOWLIST+K5(K3),INAREA+K9 /* E0 FID */\n         BNE   RESETSEQ /* BREAK */\n         B     SEQERR /* OUT OF SEQ */\nCHKDFID  CLC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VAL DOWN CMPR*/\n         BNE   RESETSEQ /* MEMBER BREAK */\n         CLC   =C'50',INAREA+K7  /* FILEID WITH SUBGROUP */\n         BE    BUILDMEM /* YES */\n         CLC   =C'60',INAREA+K7 /* THIS ONE TOO */\n         BE    BUILDMEM /* CONTINUE */\n         B     SEQERR /* OUT OF SEQ */\nRESETSEQ MVI   DUPLSEQ,C'0' /* RESET MEMBER NAME SUFFIX */\nBUILDMEM MVC   STOWLIST+K1(K4),INAREA+K2 /* SAVE STORE ID */\n         CLC   STOWLIST+K1(K4),=C'0000' /* INVALID VALUE STOREID*/\n         BE    INVSTID /* BAD*/\n         TRT   STOWLIST+K1(K4),NUMSONLY /* NUMERICS ONLY */\n         BNZ   INVSTID /* BAD*/\n         TM    FLAGS,X04 /* E0 CODE */\n         BZ    MOVDFID /* NO */\n         MVC   STOWLIST+K5(K3),INAREA+K9 /* FID FOR E0 */\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* GET FIRST REAL RCD OF SET */\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nMOVDFID  MVC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VALUE DOWNDATA*/\n         CLC   STOWLIST+K5(K2),=C'50'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'60'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'30'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'25'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'27'   /* VALID VALUE */\n         BNE   INVFT /* ERROR */\nVALIDFT  SLR   RF,RF /* BUILD UNIQUE SUFFIX */\n         IC    RF,DUPLSEQ /* INCR BY 1 FOR UNIQUE MEMBER NAME */\n         LA    RF,K1(,RF)\n         CLM   RF,K1,=C'9'    /* EXCEEDED SUFFIX MAX */\n         BH    HISUBEOF /* YES */\n         STC   RF,DUPLSEQ /* SAVE NEW UNIQUE MEMBER NAME SUFFIX */\n         STC   RF,STOWLIST+K7 ...\nPRIMCOMM XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nBUILDRCD LH    RF,K0(,R3) /* CURRENT VAR BLOCK SIZE */\n         SLR   R0,R0 /* PICKUP RECORD SET LEN */\n         TM    FLAGS,X04 /* E0 */\n         BZ    RCDLD /* NO */\n         ICM   R0,3,INAREA+K19  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         CLM   R0,K3,=AL2(K255) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\n         B     RCDLE\nRCDLD    ICM   R0,3,INAREA+17  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         AL    R0,=A(K3) /* FACTOR IN 1BYTE SEQ#AND 2BYTELEN*/\n         CLM   R0,K3,=AL2(K256) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\nRCDLE    AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         C     RF,=A(K32760) /* MAX BLOCKSIZE */\n         BH    DONTFIT /* THIS RECORD CANT BE ADDED */\n         STH   RF,K0(,R3) /* UPDATE BDW */\n         LH    RF,K4(,R3) /* CURRENT VAR RCD SIZE */\n         AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         STH   RF,K4(,R3) /* UPDATE RDW */\n         L     R6,TCHAR# /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,TCHAR# ...\n         L     R6,XBUILDEM /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,XBUILDEM ...\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PROPD /* MOVE D0 */\n         LA    R8,INAREA+K21 /* SOURCE AREA */\n         B     PROPE /* CONTINUE */\nPROPD    MVC   0(K3,R4),INAREA+K16 /* MOVE 3BYTE HDR FIELD */\n         LA    R4,K3(,R4) /* + */\n         LA    R8,INAREA+K19 /* SOURCE AREA */\nPROPE    LR    R6,R4 /* TARGET FOR RCD MOVE */\n         LR    R9,R7  /* AS PER MVCL MAX PER RCD */\n         MVCL  R6,R8 /* MOVE RECORD INTO OUTPUT BUFFER */\n         LR    R4,R6 /* SAVE POSITION OF NEXT RCD TO BE BUILT */\n         TM    FLAGS,X04 /* E0 */\n         BZ    LRCDD /* NO */\n         TM    INAREA+K18,X80 /* SET END */\n         BO    E0SETEND /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE WRAP */\n         BNE   PGETE /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETE /* CONTINUE */\nE0SETEND LH    RF,K0(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* BDW -2 */\n         STH   RF,K0(,R3)\n         LH    RF,K4(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* RDW -2 */\n         STH   RF,K4(,R3)\n         L     RF,TCHAR#\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,TCHAR#\n         L     RF,XBUILDEM\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,XBUILDEM\n         B     BREAKIT /* CONTINUE */\nLRCDD    TM    INAREA+K16,X80 /* LAST RECORD IN SET */\n         BO    BREAKIT /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE POLL */\n         BNE   PGETLOOP /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETLOOP /* CONTINUE */\nDOWRAP   NI    FLAGS,XFF-X20 /* SET WRAP MODE OFF */\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         CLI   SEQFIELD,X01 /* EXPECTED WRAP; MUST BE 01 */\n         BE    BUILDRCD /* OK */\n         B     WRAPERR /* FAILURE IN INPUT */\nSET30MOD OI    FLAGS,X08 /* TYPE 30 FILE PROCESS ACTIVE */\n         GET   DMASTER,(R6) /*IGNORE SET HDR - MAJOR SEQ# 001*/\nMIDTYP30 GET   DMASTER,(R6) /* FIRST OF SET */\n         SLR   R6,R6 /* WORK */\n         ICM   R6,K3,INAREA+K17 /* RCD LEN */\n         LA    R7,K57 /* MAX DATA LEN ON FIRST RCD-INCL $$A$ TRLR*/\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         LA    R7,K60 /* SECONDARY RCD MAX */\n         GET   DMASTER,INAREA+K76 /* RCD SEG# 2*/\n         MVC   INAREA+K76(K60),INAREA+K92 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K136 /* RCD SEG# 3*/\n         MVC   INAREA+K136(K60),INAREA+K152 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K196 /* RCD SEG# 4*/\n         MVC   INAREA+K196(K60),INAREA+K212 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K256 /* RCD SEG# 5*/\n         MVC   INAREA+K256(K60),INAREA+K272 /* SHIFT IGN HDR/TRLR */\n         B     LAST30SG /* LENGTH EXHAUSTED */\nDONTFIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DONTFIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDONTFIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         B     PRIMCOMM /* CONTINUE */\nBREAKIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    BREAKIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nBREAKIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE BEFORE STOW */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         OI    FLAGS,X40 /* SET STOW DOWN; MEMBER CREATED */\n         NI    FLAGS,XFF-X08 /* RESET TYP30 PROCESS OFF */\n         L     RF,MEMLISTP /* UPDATE DIRECTORY MEMBER */\n         MVC   K0(K8,RF),STOWLIST /* MEMBER NAME */\n         L     R0,XBUILDEM /* MEMBER BYTE COUNT */\n         CVD   R0,WORK ...\n         UNPK  K8(K9,RF),WORK+K3(K5)\n         MVC   K8(K8,RF),K9(RF) ...\n         OI    K15(RF),C'0' ....\n         TR    K0(K16,RF),EBCASCII /* CHANGE TO ASCII */\n         LA    RF,K16(,RF) /* SET NEXT DIR ENTRY PTR */\n         ST    RF,MEMLISTP /* UPDATE PTR */\n         L     RF,MEMBER# /* INCR MEMBER COUNTER */\n         LA    RF,K1(,RF)\n         ST    RF,MEMBER# ...\n         CLC   XBUILDEM,MBUILDEM /* IS THIS LARGEST MEM */\n         BNH   RESETIND /* NO */\n         MVC   MBUILDEM,XBUILDEM /* RESET MAX FOUND */\n         MVC   MNAMEMEM,STOWLIST /* MEMBER NAME */\nRESETIND XC    XBUILDEM,XBUILDEM /* RESET INDIV TOTAL */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PGETLOOP /* CONTINUE */\n         B     PGETE /* CONTINUE E0 */\nEOD      TM    FLAGS,X80 /* UNEXPECTED */\n         BO    SNOEOF /* YES */\n         TM    FLAGS,X40 /* SEE IF STOW FLAG ON */\n         BZ    SNOEOF /* YES */\n         NI    FLAGS,XFF-X40 /* SET NEW MEM OFF */\n         OI    FLAGS,X04 /* INDICATE E0 PROCESSING ACTIVE */\n         MVC   STOWLIST(K8),=C'E???????' /* PREP FOR E0 MEMBERS */\nPGETE    OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* RETRIEVE E0 RCD */\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nEOE      MVC   STOWLIST(K8),=C'DIRECTRY' /* INTERNAL DIRNAME */\n         SLR   R5,R5 /* CURRENT WRITE CHECK CTR */\n         L     R3,CURAREAP /* PREP DIR HDR */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K4(K2,R3),=AL2(K84) /* RDW */\n         MVC   K0(K2,R3),=AL2(K88) /* BDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         MVC   K32(K4,R4),=C'DSN=' /* HARD CODE */\n         L     RF,MEMBER# /* MEMBER ENTRY CTR */\n         CVD   RF,WORK ...\n         UNPK  K16(K8,R4),WORK+K4(K4)\n         OI    K23(R4),C'0'\n         MVC   K24(K8,R4),=C'00000000' /* RESERVED */\n         MVC   K0(K16,R4),=C'19YY.DDDHH:MM:SS' /* LITERAL */\n         TIME  DEC\n         STCM  R1,K7,WORK+K5 /* DATE */\n         UNPK  WORK(K5),WORK+K5(K3) ...\n         OI    WORK+4,C'0'\n         MVC   K2(K2,R4),WORK /* YY */\n         MVC   K5(K3,R4),WORK+K2 /* DDD */\n         CLM   R1,K8,=AL1(K0) /* CENTURY 19 OR 20 */\n         BE    DOTIME /* 19 */\n         MVC   K0(K2,R4),=C'20' /* ELSE */\nDOTIME   ST    R0,WORK /* PACKED TIME */\n         MVI   WORK+K3,K15 /* MAKE LIKE PACKED */\n         UNPK  K36(K7,R4),WORK(K4) /* USE TEMP WORK */\n         MVC   K8(K2,R4),K36(R4) HH\n         MVC   K11(K2,R4),K38(R4) MM\n         MVC   K14(K2,R4),K40(R4) SS\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   K36(K44,R4),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         TR    K0(K80,R4),EBCASCII /* CHANGE TO ASCII */\n         WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R6,MEMBER# /* PRODUCE OUR DIRECTORY MEMBER */\n         L     R7,=A(MEMLIST) /* TABLE START */\nDODIR0   LA    R8,K2047 /* MAX # DIR ENTRY IN 1 VAR LEN BLK */\n         SLR   R9,R9 /* CURRENT BLK ENTRY COUNT */\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nDODIR1   MVC   K0(K16,R4),K0(R7) /* POSITION 1 MEMBER ENTRY */\n         LA    R9,K1(,R9) /* INCR ENTRY COUNT */\n         LA    R4,K16(,R4) /* NEXT OUTPUT SPOT */\n         LA    R7,K16(,R7) /* NEXT INPUT SPOT */\n         BCT   R8,DODIR3 /* COUNT FOR # ENTRIES IN BLK */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR2   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDODIR2   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         B     DODIR0   /* CONTINUE */\nDODIR3   BCT   R6,DODIR1 /* MEMBER COUNT */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR5   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nDODIR5   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         CLOSE (BREAKER) /* MAKE AVAIL FOR XCOMM */\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   SDSNAME+K6(L'JFCBDSNM),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         LA    R1,SVC99PRM /* DYNALLOC PARM */\n         DYNALLOC\n         LTR   RF,RF\n         BNZ   FSVC99\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         LA    R1,=A(XCOMMPRM) /* EXEC PARM */\n         BALR  RE,RF /* GO SCHEDULE */\n         LTR   RF,RF /* RC */\n         BNZ   FXCOMM /* SCHEDULE FAILURE */\n         DELETE EPLOC=XCOMMEP\nERREXIT  MVC   OUTMSG(L'HEADER),HEADER\n         PUT   REPORT,OUTMSG\n         L     RF,MEMBER# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMEM#),MSGMEM#\n         MVC   OUTMSG+L'MSGMEM#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMEM#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TCHAR# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGTCH#),MSGTCH#\n         MVC   OUTMSG+L'MSGTCH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGTCH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         SLR   R6,R6\n         L     R7,TCHAR#\n         L     R8,MEMBER#\n         LTR   R8,R8 /* DONT GET ERROR FOR DIVIDE BY 0 */\n         BNZ   CALCAVGC  /* ELSE FORCE THIS MESSAGE */\n         SLR   R7,R7\n         B     CALCAVG2\nCALCAVGC DR    R6,R8\nCALCAVG2 ST    R7,TAVCH#\n         L     RF,TAVCH# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGACH#),MSGACH#\n         MVC   OUTMSG+L'MSGACH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGACH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,MBUILDEM /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMCH#1),MSGMCH#1\n         MVC   OUTMSG+L'MSGMCH#1(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMCH#1(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         MVC   OUTMSG(L'MSGMCH#2),MSGMCH#2\n         MVC   OUTMSG+K17(K8),MNAMEMEM\n         PUT   REPORT,OUTMSG\n         TM    FLAGS,X10 /* SEVERE ERROR OCCURED */\n         BZ    DOCLOSE /* NO */\n         MVC   OUTMSG(L'MERRMSG),MERRMSG\n         PUT   REPORT,OUTMSG\nDOCLOSE  CLOSE (DMASTER,,REPORT,,EMASTER)\n         FREEPOOL DMASTER , /*NO FREEPOOL FOR BREAKER;DYNBUFF USED*/\n         FREEPOOL EMASTER ,\n         FREEPOOL REPORT  ,\n         L     R1,=A(POLLDOWN) /* PAGEFREE*/\n         L     RF,=A(ENDFIX) ...\n         PGSER R,FREE,A=(1),EA=(15),ECB=0,RELEASE=N,ANYWHER=Y\n         LTR   RF,RF\n         BNZ   FPGSER\n         SYSEVENT OKSWAP,ENTRY=SVC , /* SWAP AGAIN */\n         LTR   RF,RF\n         BNZ   FSWAP\nXEXIT    L     RF,SYSTEMRC /* SET OS RC */\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nSNOEOF   LA    RF,K28 /* UNEXPECTED EOF ON INPUT */\n         B     DUMPEXIT\nWRAPERR  LA    RF,K32 /* X7F NOT FOLLOWED BY X01 */\n         B     DUMPEXIT\nSEQERR   LA    RF,K36 /* SEQUENCE NUMBER OUT OF ORDER */\n         B     DUMPEXIT\nINVRCDLN LA    RF,K40 /* INDIV RCD LEN=0 OR GT>253 */\n         B     DUMPEXIT\nHISUBEOF LA    RF,K44 /* TOO MANY >9 MULTIPLE 50/60 SUBFILES */\n         B     DUMPEXIT\nINVFT    LA    RF,K48 /* INVALID INPUT RCD FILETYPE(25,27,30,50,60)\n         B     DUMPEXIT\nINVSTID  LA    RF,K52 /* INVALID STOR ID=0 OR NOT NUMERIC */\n         B     DUMPEXIT\nFRDJFCB  LA    RF,K56 /* READ JFCB FAILURE */\n         B     MAINEXIT\nFNOTPO   LA    RF,K60 /* BREAKER NOT PO */\n         B     MAINEXIT\nFNOTNEW  LA    RF,K64 /* DISP=NEW MUST BE FOR BREAKER */\n         B     MAINEXIT\nFAUTH    LA    RF,K68 /* NOT AUTH */\n         B     MAINEXIT\nFSWAP    LA    RF,K72 /* DONTSWAP FAIL */\n         B     MAINEXIT\nFPGSER   LA    RF,K76 /* PAGEFIX FAIL  */\n         B     MAINEXIT\nFSVC99   LA    RF,K80 /* SVC99 ALLOC FAIL */\n         B     DUMPEXIT\nFXCOMM   LA    RF,200(,RF) /* 200+XCOM FAILURE */\n         B     DUMPEXIT\nFSTOW    LA    RF,100(,RF) /* 100+STOW FAILURE CODE+REASON CODE*/\n         ALR   RF,R0 /* ADD IN REASON CODE */\nDUMPEXIT OI    FLAGS,X10 /* SEVERE ERROR BIT */\n         ST    RF,SYSTEMRC /* BINARY RC */\n         CVD   RF,WORK /* PREP ERROR MSG */\n         UNPK  WORK(K3),WORK+K6(K2)\n         OI    WORK+K2,C'0'\n         MVC   MERRMSG+K13(K3),WORK\n         MVC   MERRMSG+K27(K8),STOWLIST\n         B     ERREXIT\n         LTORG\n         PRINT NOGEN\n         WRITE DECB,SF,BREAKER,MF=L    /* OUTPUT A BLOCK */\nWORK     DC    D'0'\nJFCBEXIT DC    0F'0',X'87',AL3(JFCB)\nJFCB     DC    CL176' ' /* A JFCB AREA */\nBREAKER  DCB   DDNAME=BREAKER,DSORG=PO,MACRF=(R,W),NCP=5,RECFM=VB,     X\n               LRECL=32756,BLKSIZE=32760,BUFNO=11,EXLST=JFCBEXIT\nDMASTER  DCB   DDNAME=DMASTER,DSORG=PS,EODAD=EOD,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=80\nEMASTER  DCB   DDNAME=EMASTER,DSORG=PS,EODAD=EOE,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=550\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(GM,PM),                   X\n               RECFM=FBA,LRECL=133,BLKSIZE=133\nSVC99PRM DC    X'80',AL3(SVC99RB)\nSVC99RB  DC    X'14014000'\n         DC    X'00000000'\n         DC    A(S99TXTPR)\n         DC    X'00000000'\n         DC    X'00000000'\nS99TXTPR DC    X'00',AL3(SDDNAME)\n         DC    X'00',AL3(SDSNAME)\n         DC    X'00',AL3(SMEMBER)\n         DC    X'80',AL3(SDISP)\nSDDNAME  DC    X'000100010008',CL8'LCLDS01'\nSDSNAME  DC    X'00020001002C',CL44' '\nSMEMBER  DC    X'000300010008',CL8'DIRECTRY'\nSDISP    DC    X'000400010001',X'01' /* OLD */\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMMPRM DC    AL2(L'XCOMMPRL)\nXCOMMPRL DC    C'TYPE=SCHEDULE'\nSTOWLIST DC    (K0)A(K0),C'D???????',A(K0) /* TTRC OF ZERO */\nCURAREAP DC    A(OUTAREA1) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA2) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA3) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA4) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA5) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA6) /* CURRENT WORKING ON OUTPUT PTR */\nMEMBER#  DC    A(K0) /* NUMBER OF PROCESSED MEMBERS */\nTCHAR#   DC    A(K0) /* TOTAL NUMBER OF DATA CHARACTERS TO BE SENT*/\nTAVCH#   DC    A(K0) /* APPROX AVG NUMBER CHARS PER MEMBER */\nXBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMEMLISTP DC    A(MEMLIST) /* PTR TO INTERNAL DIRECTORY */\nSYSTEMRC DC    A(K0) /* RC */\nMNAMEMEM DC    CL8' ' ...\nDUPLSEQ  DC    C'0' /* MEMBER NAME SUFFIX FOR ID50/60 SUBGROUPS */\nFLAGS    DC    AL1(K0)\n* X80 UNEXPECTED EOF; SHOULD NOT OCCUR\n* X40 LAST RECORD WAS SUBEOF - MEMBER CREATED\n* X20 MEMBER RCD WRAPAROUND FROM X7F TO X01 ...\n* X10 SEVERE ERROR FLAG USED BY EOJ ROUTINE\n* X08 TYPE 30 PROCESSING ACTIVE\n* X04 D0 PROCESSING COMPLETE; E0 PROCESSING ACTIVE\nSEQFIELD DC    AL1(K0) /* USED TO HOLD SEQUENCE NUMBER */\nEXPSEQ   DC    AL1(K1) /* EXPECTED SEQ # NEXT - MAKE SURE ORDER */\nMSGPAT   DC    X'4B2020206B2020206B202120'\nOUTMSG   DC    CL133' '\nHEADER   DC    C'1POLLDOWN BREAKOUT REPORT'\nMSGMEM#  DC    CL40'0# OF PDS MEMBERS CREATED................'\nMSGTCH#  DC    CL40'0TOTAL # DOWNLOADED CHARACTERS...........'\nMSGACH#  DC    CL40'0APPROX. AVG. # CHARACTERS PER MEMBER....'\nMSGMCH#1 DC    CL40'0MAX. # CHARS. PER INDIVIDUAL MEMBER.....'\nMSGMCH#2 DC    CL52' MEMBER NAME IS: XXXXXXXX'\nMERRMSG  DC    CL52'0** ERROR RC:??? ** MEMBER:????????'\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C'.'\n         DC    X'2E'\n         ORG   EBCASCII+C':'\n         DC    X'3A'\n         ORG   EBCASCII+C'='\n         DC    X'3D'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\nNUMSONLY DC    (K256)AL1(XFF) /* CHECK FOR DIGITS ONLY */\n         ORG   NUMSONLY+C'0'\n         DC    (K10)AL1(K0)\n         ORG\nINAREA   DC    (K550)AL1(K0) /* INPUT WORKAREA */\nOUTAREA1 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA2 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA3 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA4 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA5 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA6 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nMEMLIST  DS    (K32760)CL16' ' /* INCORE DIRECTORY */\nENDFIX   EQU   *-K1\n* 8 BYTE ASCII MEMBER NAME; 8 BYTE ASCII MEMBER CHAR COUNT\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         DSECT\n         IEFJFCBN\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.LPALIB(POLLDOWN),DISP=SHR,\n// UNIT=,SPACE=\n//*G.WORK DD DSN=JEFFK.VTOC.DATA,DISP=SHR\n//*G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POLLBKV1": {"ttr": 7174, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x91\\x12o\\x00\\x91\\x12o\\x14A\\x02\\xdf\\x02\\xdf\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-05-06T00:00:00", "modifydate": "1991-05-06T14:41:00", "lines": 735, "newlines": 735, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.AMODGEN,DISP=SHR\n//C.SYSIN  DD *\nPLB      TITLE 'STORE POLL DOWNLOAD DATA BREAKOUT'\nPOLLDOWN CSECT , /* STORE POLL DOWNLOAD DATA FILE BREAKOUT'\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK27      EQU   27\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nPOLLDOWN AMODE 24\nPOLLDOWN RMODE 24\n         SAVE  (14,12),,POLLDOWN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING POLLDOWN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         TESTAUTH FCTN=1 , /* APF AUTHORIZED */\n         LTR   RF,RF\n         BNZ   FAUTH\n         MODESET KEY=ZERO,MODE=SUP,RELATED=('STATE SWITCH')\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         SYSEVENT DONTSWAP,ENTRY=BRANCH , /* NOSWAP SHORT-TERM */\n         LR    RD,R6 /* RESTORE */\n         CLM   R1,K1,=AL1(K0)\n         BNE   FSWAP\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         L     R1,=A(POLLDOWN) /* PAGEFIX */\n         L     R2,=A(ENDFIX) ...\n         PGSER R,FIX,A=(1),EA=(2),RELEASE=N,LONG=Y,BACKOUT=Y,          X\n               BRANCH=Y,ECB=FIXECB\n         LR    RD,R6 /* RESTORE */\n         LTR   RF,RF\n         BNZ   FPGSER\n         USING PSA,R0\n         L     RF,PSATOLD /* MAP TCB PROPER */\n         DROP  R0\n         USING TCB,RF\n         MODESET EXTKEY=TCB,WORKREG=2,RELATED=('TCB KEY')\n         DROP  RF\n         RDJFCB BREAKER , /* ACQUIRE OUTPUT FILE JFCB */\n         LTR   RF,RF\n         BNZ   FRDJFCB\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         TM    JFCDSRG1,JFCORGPO /* DSORG=PO */\n         BZ    FNOTPO /* NO */\n         TM    JFCBIND2,JFCNEW /* DISP=NEW */\n         BNO   FNOTNEW /* NO */\n         DROP  RF\nOPENLIST OPEN  (DMASTER,(INPUT),BREAKER,(OUTPUT),REPORT,(OUTPUT),      X\n               EMASTER,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R9,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         USING IHADCB,R8\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R8\n         USING IHADCB,R9\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R9\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         SLR   R5,R5 /* OUTSTAND NCP WRITE COUNTER */\nPGETLOOP LA    R6,INAREA /* DOWNLOAD FILE HAS SETS OF 4 RCDS*/\n         GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         NI    FLAGS,XFF-X40 /* SET NEW MEMBER FLAG OFF */\n         OI    FLAGS,X80 /* SET UNEXPECTED EOF; MUST HAVE SETS OF 4*/\n         TM    FLAGS,X08 /* MID TYPE 30 FILE */\n         BO    MIDTYP30 /* YES */\n         CLC   =C'30',INAREA+K7 /* NEW TYPE 30 SET */\n         BE    SET30MOD /* YES */\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         LA    R7,K3 /* CTR FOR NEXT 3 RECORDS */\nGETLOOP  GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         BCT   R7,GETLOOP  ...\n         MVC   INAREA+K80(K64),INAREA+K96 /*BUILD */\n         MVC   INAREA+K144(K64),INAREA+K176 /* SHIFT RECORD AREAS */\n         MVC   INAREA+K208(K64),INAREA+K256\nLAST30SG MVC   SEQFIELD(K1),INAREA+K16 /* INPUT RECORD SEQ # */\nPROCE0   NI    FLAGS,XFF-X80 /* RESET EXPECTED EOF BIT */\n         NI    SEQFIELD,XFF-X80 /* SHUT DOWN HI SET END BIT */\n         TM    FLAGS,X20 /* EXPECTED WRAPAROUND MODE */\n         BO    DOWRAP /* YES */\n         CLC   EXPSEQ,SEQFIELD /* MATCH ON EXPECTED SEQ # */\n         BNE   SEQERR /* ERROR */\n         CLI   SEQFIELD,X01 /* FIRST OF SET */\n         BNE   BUILDRCD /* NO, ELSE SAVE MEMBER NAME */\n         CLC   STOWLIST+K1(K4),INAREA+K2 /* COMPARE STORE ID */\n         BNE   RESETSEQ /* MEMBER BREAK */\n         TM    FLAGS,X04 /* E0 UP */\n         BZ    CHKDFID NO\n         CLC   STOWLIST+K5(K3),INAREA+K9 /* E0 FID */\n         BNE   RESETSEQ /* BREAK */\n         B     SEQERR /* OUT OF SEQ */\nCHKDFID  CLC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VAL DOWN CMPR*/\n         BNE   RESETSEQ /* MEMBER BREAK */\n         CLC   =C'50',INAREA+K7  /* FILEID WITH SUBGROUP */\n         BE    BUILDMEM /* YES */\n         CLC   =C'60',INAREA+K7 /* THIS ONE TOO */\n         BE    BUILDMEM /* CONTINUE */\n         B     SEQERR /* OUT OF SEQ */\nRESETSEQ MVI   DUPLSEQ,C'0' /* RESET MEMBER NAME SUFFIX */\nBUILDMEM MVC   STOWLIST+K1(K4),INAREA+K2 /* SAVE STORE ID */\n         CLC   STOWLIST+K1(K4),=C'0000' /* INVALID VALUE STOREID*/\n         BE    INVSTID /* BAD*/\n         TRT   STOWLIST+K1(K4),NUMSONLY /* NUMERICS ONLY */\n         BNZ   INVSTID /* BAD*/\n         TM    FLAGS,X04 /* E0 CODE */\n         BZ    MOVDFID /* NO */\n         MVC   STOWLIST+K5(K3),INAREA+K9 /* FID FOR E0 */\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* GET FIRST REAL RCD OF SET */\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nMOVDFID  MVC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VALUE DOWNDATA*/\n         CLC   STOWLIST+K5(K2),=C'50'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'60'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'30'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'25'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'27'   /* VALID VALUE */\n         BNE   INVFT /* ERROR */\nVALIDFT  SLR   RF,RF /* BUILD UNIQUE SUFFIX */\n         IC    RF,DUPLSEQ /* INCR BY 1 FOR UNIQUE MEMBER NAME */\n         LA    RF,K1(,RF)\n         CLM   RF,K1,=C'9'    /* EXCEEDED SUFFIX MAX */\n         BH    HISUBEOF /* YES */\n         STC   RF,DUPLSEQ /* SAVE NEW UNIQUE MEMBER NAME SUFFIX */\n         STC   RF,STOWLIST+K7 ...\nPRIMCOMM XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nBUILDRCD LH    RF,K0(,R3) /* CURRENT VAR BLOCK SIZE */\n         SLR   R0,R0 /* PICKUP RECORD SET LEN */\n         TM    FLAGS,X04 /* E0 */\n         BZ    RCDLD /* NO */\n         ICM   R0,3,INAREA+K19  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         CLM   R0,K3,=AL2(K255) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\n         B     RCDLE\nRCDLD    ICM   R0,3,INAREA+17  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         AL    R0,=A(K3) /* FACTOR IN 1BYTE SEQ#AND 2BYTELEN*/\n         CLM   R0,K3,=AL2(K256) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\nRCDLE    AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         C     RF,=A(K32760) /* MAX BLOCKSIZE */\n         BH    DONTFIT /* THIS RECORD CANT BE ADDED */\n         STH   RF,K0(,R3) /* UPDATE BDW */\n         LH    RF,K4(,R3) /* CURRENT VAR RCD SIZE */\n         AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         STH   RF,K4(,R3) /* UPDATE RDW */\n         L     R6,TCHAR# /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,TCHAR# ...\n         L     R6,XBUILDEM /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,XBUILDEM ...\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PROPD /* MOVE D0 */\n         LA    R8,INAREA+K21 /* SOURCE AREA */\n         B     PROPE /* CONTINUE */\nPROPD    MVC   0(K3,R4),INAREA+K16 /* MOVE 3BYTE HDR FIELD */\n         LA    R4,K3(,R4) /* + */\n         LA    R8,INAREA+K19 /* SOURCE AREA */\nPROPE    LR    R6,R4 /* TARGET FOR RCD MOVE */\n         LR    R9,R7  /* AS PER MVCL MAX PER RCD */\n         MVCL  R6,R8 /* MOVE RECORD INTO OUTPUT BUFFER */\n         LR    R4,R6 /* SAVE POSITION OF NEXT RCD TO BE BUILT */\n         TM    FLAGS,X04 /* E0 */\n         BZ    LRCDD /* NO */\n         TM    INAREA+K18,X80 /* SET END */\n         BO    E0SETEND /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE WRAP */\n         BNE   PGETE /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETE /* CONTINUE */\nE0SETEND LH    RF,K0(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* BDW -2 */\n         STH   RF,K0(,R3)\n         LH    RF,K4(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* RDW -2 */\n         STH   RF,K4(,R3)\n         L     RF,TCHAR#\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,TCHAR#\n         L     RF,XBUILDEM\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,XBUILDEM\n         B     BREAKIT /* CONTINUE */\nLRCDD    TM    INAREA+K16,X80 /* LAST RECORD IN SET */\n         BO    BREAKIT /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE POLL */\n         BNE   PGETLOOP /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETLOOP /* CONTINUE */\nDOWRAP   NI    FLAGS,XFF-X20 /* SET WRAP MODE OFF */\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         CLI   SEQFIELD,X01 /* EXPECTED WRAP; MUST BE 01 */\n         BE    BUILDRCD /* OK */\n         B     WRAPERR /* FAILURE IN INPUT */\nSET30MOD OI    FLAGS,X08 /* TYPE 30 FILE PROCESS ACTIVE */\n         GET   DMASTER,(R6) /*IGNORE SET HDR - MAJOR SEQ# 001*/\nMIDTYP30 GET   DMASTER,(R6) /* FIRST OF SET */\n         SLR   R6,R6 /* WORK */\n         ICM   R6,K3,INAREA+K17 /* RCD LEN */\n         LA    R7,K57 /* MAX DATA LEN ON FIRST RCD-INCL $$A$ TRLR*/\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         LA    R7,K60 /* SECONDARY RCD MAX */\n         GET   DMASTER,INAREA+K76 /* RCD SEG# 2*/\n         MVC   INAREA+K76(K60),INAREA+K92 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K136 /* RCD SEG# 3*/\n         MVC   INAREA+K136(K60),INAREA+K152 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K196 /* RCD SEG# 4*/\n         MVC   INAREA+K196(K60),INAREA+K212 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K256 /* RCD SEG# 5*/\n         MVC   INAREA+K256(K60),INAREA+K272 /* SHIFT IGN HDR/TRLR */\n         B     LAST30SG /* LENGTH EXHAUSTED */\nDONTFIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DONTFIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDONTFIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         B     PRIMCOMM /* CONTINUE */\nBREAKIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    BREAKIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nBREAKIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE BEFORE STOW */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         OI    FLAGS,X40 /* SET STOW DOWN; MEMBER CREATED */\n         NI    FLAGS,XFF-X08 /* RESET TYP30 PROCESS OFF */\n         L     RF,MEMLISTP /* UPDATE DIRECTORY MEMBER */\n         MVC   K0(K8,RF),STOWLIST /* MEMBER NAME */\n         L     R0,XBUILDEM /* MEMBER BYTE COUNT */\n         CVD   R0,WORK ...\n         UNPK  K8(K9,RF),WORK+K3(K5)\n         MVC   K8(K8,RF),K9(RF) ...\n         OI    K15(RF),C'0' ....\n         TR    K0(K16,RF),EBCASCII /* CHANGE TO ASCII */\n         LA    RF,K16(,RF) /* SET NEXT DIR ENTRY PTR */\n         ST    RF,MEMLISTP /* UPDATE PTR */\n         L     RF,MEMBER# /* INCR MEMBER COUNTER */\n         LA    RF,K1(,RF)\n         ST    RF,MEMBER# ...\n         CLC   XBUILDEM,MBUILDEM /* IS THIS LARGEST MEM */\n         BNH   RESETIND /* NO */\n         MVC   MBUILDEM,XBUILDEM /* RESET MAX FOUND */\n         MVC   MNAMEMEM,STOWLIST /* MEMBER NAME */\nRESETIND XC    XBUILDEM,XBUILDEM /* RESET INDIV TOTAL */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PGETLOOP /* CONTINUE */\n         B     PGETE /* CONTINUE E0 */\nEOD      TM    FLAGS,X80 /* UNEXPECTED */\n         BO    SNOEOF /* YES */\n         TM    FLAGS,X40 /* SEE IF STOW FLAG ON */\n         BZ    SNOEOF /* YES */\n         NI    FLAGS,XFF-X40 /* SET NEW MEM OFF */\n         OI    FLAGS,X04 /* INDICATE E0 PROCESSING ACTIVE */\n         MVC   STOWLIST(K8),=C'E???????' /* PREP FOR E0 MEMBERS */\nPGETE    OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* RETRIEVE E0 RCD */\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nEOE      MVC   STOWLIST(K8),=C'DIRECTRY' /* INTERNAL DIRNAME */\n         SLR   R5,R5 /* CURRENT WRITE CHECK CTR */\n         L     R3,CURAREAP /* PREP DIR HDR */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K4(K2,R3),=AL2(K84) /* RDW */\n         MVC   K0(K2,R3),=AL2(K88) /* BDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         MVC   K32(K4,R4),=C'DSN=' /* HARD CODE */\n         L     RF,MEMBER# /* MEMBER ENTRY CTR */\n         CVD   RF,WORK ...\n         UNPK  K16(K8,R4),WORK+K4(K4)\n         OI    K23(R4),C'0'\n         MVC   K24(K8,R4),=C'00000000' /* RESERVED */\n         MVC   K0(K16,R4),=C'19YY.DDDHH:MM:SS' /* LITERAL */\n         TIME  DEC\n         STCM  R1,K7,WORK+K5 /* DATE */\n         UNPK  WORK(K5),WORK+K5(K3) ...\n         OI    WORK+4,C'0'\n         MVC   K2(K2,R4),WORK /* YY */\n         MVC   K5(K3,R4),WORK+K2 /* DDD */\n         CLM   R1,K8,=AL1(K0) /* CENTURY 19 OR 20 */\n         BE    DOTIME /* 19 */\n         MVC   K0(K2,R4),=C'20' /* ELSE */\nDOTIME   ST    R0,WORK /* PACKED TIME */\n         MVI   WORK+K3,K15 /* MAKE LIKE PACKED */\n         UNPK  K36(K7,R4),WORK(K4) /* USE TEMP WORK */\n         MVC   K8(K2,R4),K36(R4) HH\n         MVC   K11(K2,R4),K38(R4) MM\n         MVC   K14(K2,R4),K40(R4) SS\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   K36(K44,R4),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         TR    K0(K80,R4),EBCASCII /* CHANGE TO ASCII */\n         WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R6,MEMBER# /* PRODUCE OUR DIRECTORY MEMBER */\n         L     R7,=A(MEMLIST) /* TABLE START */\nDODIR0   LA    R8,K2047 /* MAX # DIR ENTRY IN 1 VAR LEN BLK */\n         SLR   R9,R9 /* CURRENT BLK ENTRY COUNT */\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nDODIR1   MVC   K0(K16,R4),K0(R7) /* POSITION 1 MEMBER ENTRY */\n         LA    R9,K1(,R9) /* INCR ENTRY COUNT */\n         LA    R4,K16(,R4) /* NEXT OUTPUT SPOT */\n         LA    R7,K16(,R7) /* NEXT INPUT SPOT */\n         BCT   R8,DODIR3 /* COUNT FOR # ENTRIES IN BLK */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR2   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDODIR2   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         B     DODIR0   /* CONTINUE */\nDODIR3   BCT   R6,DODIR1 /* MEMBER COUNT */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR5   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nDODIR5   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         CLOSE (BREAKER) /* MAKE AVAIL FOR XCOMM */\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   SDSNAME+K6(L'JFCBDSNM),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         LA    R1,SVC99PRM /* DYNALLOC PARM */\n         DYNALLOC\n         LTR   RF,RF\n         BNZ   FSVC99\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         LA    R1,=A(XCOMMPRM) /* EXEC PARM */\n         BALR  RE,RF /* GO SCHEDULE */\n         LTR   RF,RF /* RC */\n         BNZ   FXCOMM /* SCHEDULE FAILURE */\n         DELETE EPLOC=XCOMMEP\nERREXIT  MVC   OUTMSG(L'HEADER),HEADER\n         PUT   REPORT,OUTMSG\n         L     RF,MEMBER# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMEM#),MSGMEM#\n         MVC   OUTMSG+L'MSGMEM#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMEM#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TCHAR# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGTCH#),MSGTCH#\n         MVC   OUTMSG+L'MSGTCH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGTCH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         SLR   R6,R6\n         L     R7,TCHAR#\n         L     R8,MEMBER#\n         LTR   R8,R8 /* DONT GET ERROR FOR DIVIDE BY 0 */\n         BNZ   CALCAVGC  /* ELSE FORCE THIS MESSAGE */\n         SLR   R7,R7\n         B     CALCAVG2\nCALCAVGC DR    R6,R8\nCALCAVG2 ST    R7,TAVCH#\n         L     RF,TAVCH# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGACH#),MSGACH#\n         MVC   OUTMSG+L'MSGACH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGACH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,MBUILDEM /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMCH#1),MSGMCH#1\n         MVC   OUTMSG+L'MSGMCH#1(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMCH#1(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         MVC   OUTMSG(L'MSGMCH#2),MSGMCH#2\n         MVC   OUTMSG+K17(K8),MNAMEMEM\n         PUT   REPORT,OUTMSG\n         TM    FLAGS,X10 /* SEVERE ERROR OCCURED */\n         BZ    DOCLOSE /* NO */\n         MVC   OUTMSG(L'MERRMSG),MERRMSG\n         PUT   REPORT,OUTMSG\nDOCLOSE  CLOSE (DMASTER,,REPORT,,EMASTER)\n         FREEPOOL DMASTER , /*NO FREEPOOL FOR BREAKER;DYNBUFF USED*/\n         FREEPOOL EMASTER ,\n         FREEPOOL REPORT  ,\n         MODESET EXTKEY=ZERO,WORKREG=2,RELATED=('SUPVR KEY')\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         L     R1,=A(POLLDOWN) /* PAGEFREE*/\n         L     R2,=A(ENDFIX) ...\n         PGSER R,FREE,A=(1),EA=(2),RELEASE=N,ANYWHER=Y,                X\n               BRANCH=Y,ECB=FIXECB\n         LR    RD,R6 /* RESTORE */\n         LTR   RF,RF\n         BNZ   FPGSER\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         SYSEVENT OKSWAP,ENTRY=BRANCH , /* SWAP AGAIN */\n         LR    RD,R6 /* RESTORE */\n         CLM   R1,K1,=AL1(K0)\n         BNE   FSWAP\n         USING PSA,R0\n         L     RF,PSATOLD /* MAP TCB PROPER */\n         DROP  R0\n         USING TCB,RF\n         MODESET EXTKEY=TCB,WORKREG=2,RELATED=('TCB KEY')\n         DROP  RF\nXEXIT    L     RF,SYSTEMRC /* SET OS RC */\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nSNOEOF   LA    RF,K28 /* UNEXPECTED EOF ON INPUT */\n         B     DUMPEXIT\nWRAPERR  LA    RF,K32 /* X7F NOT FOLLOWED BY X01 */\n         B     DUMPEXIT\nSEQERR   LA    RF,K36 /* SEQUENCE NUMBER OUT OF ORDER */\n         B     DUMPEXIT\nINVRCDLN LA    RF,K40 /* INDIV RCD LEN=0 OR GT>253 */\n         B     DUMPEXIT\nHISUBEOF LA    RF,K44 /* TOO MANY >9 MULTIPLE 50/60 SUBFILES */\n         B     DUMPEXIT\nINVFT    LA    RF,K48 /* INVALID INPUT RCD FILETYPE(25,27,30,50,60)\n         B     DUMPEXIT\nINVSTID  LA    RF,K52 /* INVALID STOR ID=0 OR NOT NUMERIC */\n         B     DUMPEXIT\nFRDJFCB  LA    RF,K56 /* READ JFCB FAILURE */\n         B     MAINEXIT\nFNOTPO   LA    RF,K60 /* BREAKER NOT PO */\n         B     MAINEXIT\nFNOTNEW  LA    RF,K64 /* DISP=NEW MUST BE FOR BREAKER */\n         B     MAINEXIT\nFAUTH    LA    RF,K68 /* NOT AUTH */\n         B     MAINEXIT\nFSWAP    LA    RF,K72 /* DONTSWAP FAIL */\n         B     MAINEXIT\nFPGSER   LA    RF,K76 /* PAGEFIX FAIL  */\n         B     MAINEXIT\nFSVC99   LA    RF,K80 /* SVC99 ALLOC FAIL */\n         B     DUMPEXIT\nFXCOMM   LA    RF,200(,RF) /* 200+XCOM FAILURE */\n         B     DUMPEXIT\nFSTOW    LA    RF,100(,RF) /* 100+STOW FAILURE CODE+REASON CODE*/\n         ALR   RF,R0 /* ADD IN REASON CODE */\nDUMPEXIT OI    FLAGS,X10 /* SEVERE ERROR BIT */\n         ST    RF,SYSTEMRC /* BINARY RC */\n         CVD   RF,WORK /* PREP ERROR MSG */\n         UNPK  WORK(K3),WORK+K6(K2)\n         OI    WORK+K2,C'0'\n         MVC   MERRMSG+K13(K3),WORK\n         MVC   MERRMSG+K27(K8),STOWLIST\n         B     ERREXIT\n         LTORG\n         PRINT NOGEN\n         WRITE DECB,SF,BREAKER,MF=L    /* OUTPUT A BLOCK */\nWORK     DC    D'0'\nJFCBEXIT DC    0F'0',X'87',AL3(JFCB)\nJFCB     DC    CL176' ' /* A JFCB AREA */\nSAVEAREA DC    (K18)A(K0) /* SPECIAL SAVE AREA */\nFIXECB   DC    A(K0) /* PGSER ECB */\nBREAKER  DCB   DDNAME=BREAKER,DSORG=PO,MACRF=(R,W),NCP=5,RECFM=VB,     X\n               LRECL=32756,BLKSIZE=32760,BUFNO=11,EXLST=JFCBEXIT\nDMASTER  DCB   DDNAME=DMASTER,DSORG=PS,EODAD=EOD,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=80\nEMASTER  DCB   DDNAME=EMASTER,DSORG=PS,EODAD=EOE,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=550\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(GM,PM),                   X\n               RECFM=FBA,LRECL=133,BLKSIZE=133\nSVC99PRM DC    X'80',AL3(SVC99RB)\nSVC99RB  DC    X'14014000'\n         DC    X'00000000'\n         DC    A(S99TXTPR)\n         DC    X'00000000'\n         DC    X'40000000' /* WAIT ON DSN */\nS99TXTPR DC    X'00',AL3(SDDNAME)\n         DC    X'00',AL3(SDSNAME)\n         DC    X'00',AL3(SMEMBER)\n         DC    X'80',AL3(SDISP)\nSDDNAME  DC    X'000100010008',CL8'LCLDS01'\nSDSNAME  DC    X'00020001002C',CL44' '\nSMEMBER  DC    X'000300010008',CL8'DIRECTRY'\nSDISP    DC    X'000400010001',X'01' /* OLD */\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMMPRM DC    AL2(L'XCOMMPRL)\nXCOMMPRL DC    C'TYPE=SCHEDULE'\nSTOWLIST DC    (K0)A(K0),C'D???????',A(K0) /* TTRC OF ZERO */\nCURAREAP DC    A(OUTAREA1) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA2) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA3) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA4) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA5) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA6) /* CURRENT WORKING ON OUTPUT PTR */\nMEMBER#  DC    A(K0) /* NUMBER OF PROCESSED MEMBERS */\nTCHAR#   DC    A(K0) /* TOTAL NUMBER OF DATA CHARACTERS TO BE SENT*/\nTAVCH#   DC    A(K0) /* APPROX AVG NUMBER CHARS PER MEMBER */\nXBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMEMLISTP DC    A(MEMLIST) /* PTR TO INTERNAL DIRECTORY */\nSYSTEMRC DC    A(K0) /* RC */\nMNAMEMEM DC    CL8' ' ...\nDUPLSEQ  DC    C'0' /* MEMBER NAME SUFFIX FOR ID50/60 SUBGROUPS */\nFLAGS    DC    AL1(K0)\n* X80 UNEXPECTED EOF; SHOULD NOT OCCUR\n* X40 LAST RECORD WAS SUBEOF - MEMBER CREATED\n* X20 MEMBER RCD WRAPAROUND FROM X7F TO X01 ...\n* X10 SEVERE ERROR FLAG USED BY EOJ ROUTINE\n* X08 TYPE 30 PROCESSING ACTIVE\n* X04 D0 PROCESSING COMPLETE; E0 PROCESSING ACTIVE\nSEQFIELD DC    AL1(K0) /* USED TO HOLD SEQUENCE NUMBER */\nEXPSEQ   DC    AL1(K1) /* EXPECTED SEQ # NEXT - MAKE SURE ORDER */\nMSGPAT   DC    X'4B2020206B2020206B202120'\nOUTMSG   DC    CL133' '\nHEADER   DC    C'1POLLDOWN BREAKOUT REPORT'\nMSGMEM#  DC    CL40'0# OF PDS MEMBERS CREATED................'\nMSGTCH#  DC    CL40'0TOTAL # DOWNLOADED CHARACTERS...........'\nMSGACH#  DC    CL40'0APPROX. AVG. # CHARACTERS PER MEMBER....'\nMSGMCH#1 DC    CL40'0MAX. # CHARS. PER INDIVIDUAL MEMBER.....'\nMSGMCH#2 DC    CL52' MEMBER NAME IS: XXXXXXXX'\nMERRMSG  DC    CL52'0** ERROR RC:??? ** MEMBER:????????'\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C'.'\n         DC    X'2E'\n         ORG   EBCASCII+C':'\n         DC    X'3A'\n         ORG   EBCASCII+C'='\n         DC    X'3D'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\nNUMSONLY DC    (K256)AL1(XFF) /* CHECK FOR DIGITS ONLY */\n         ORG   NUMSONLY+C'0'\n         DC    (K10)AL1(K0)\n         ORG\nINAREA   DC    (K550)AL1(K0) /* INPUT WORKAREA */\nOUTAREA1 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA2 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA3 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA4 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA5 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA6 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nMEMLIST  DS    (K32760)CL16' ' /* INCORE DIRECTORY */\nENDFIX   EQU   *-K1\n* 8 BYTE ASCII MEMBER NAME; 8 BYTE ASCII MEMBER CHAR COUNT\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         DSECT\n         IEFJFCBN\n         CVT   DSECT=YES\n         IKJTCB\n         IHAPSA\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.LPALIB(POLLDOWN),DISP=SHR,\n// UNIT=,SPACE=\n//*G.WORK DD DSN=JEFFK.VTOC.DATA,DISP=SHR\n//*G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POLLCOPY": {"ttr": 7432, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x13?\\x00\\x91\\x18\\x9f\\t\\x07\\x00\\x03\\x00\\x01\\x00\\x02\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-05-13T00:00:00", "modifydate": "1991-07-08T09:07:00", "lines": 3, "newlines": 1, "modlines": 2, "user": "JEFFK"}, "text": " COPY OUTDD=COPY2,INDD=COPY1\n COPY OUTDD=COPY3,INDD=COPY1\n COPY OUTDD=COPY4,INDD=COPY1\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POLLDOWN": {"ttr": 7434, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01)\\x00\\x00\\x00\\x91\\x02_\\x00\\x91\\x13?\\x120\\x03\\x0f\\x01\\xe2\\x01t\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.41", "flags": 0, "createdate": "1991-01-25T00:00:00", "modifydate": "1991-05-13T12:30:00", "lines": 783, "newlines": 482, "modlines": 372, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.AMODGEN,DISP=SHR\n//C.SYSIN  DD *\nPLB      TITLE 'STORE POLL DOWNLOAD DATA BREAKOUT'\nPOLLDOWN CSECT , /* STORE POLL DOWNLOAD DATA FILE BREAKOUT'\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK27      EQU   27\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nPOLLDOWN AMODE 24\nPOLLDOWN RMODE 24\n         SAVE  (14,12),,POLLDOWN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING POLLDOWN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         TESTAUTH FCTN=1 , /* APF AUTHORIZED */\n         LTR   RF,RF\n         BNZ   FAUTH\n         MODESET KEY=ZERO,MODE=SUP,RELATED=('STATE SWITCH')\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         SYSEVENT DONTSWAP,ENTRY=BRANCH , /* NOSWAP SHORT-TERM */\n         LR    RD,R6 /* RESTORE */\n         CLM   R1,K1,=AL1(K0)\n         BNE   FSWAP\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         L     R1,=A(POLLDOWN) /* PAGEFIX */\n         L     R2,=A(ENDFIX) ...\n         PGSER R,FIX,A=(1),EA=(2),RELEASE=N,LONG=Y,BACKOUT=Y,          X\n               BRANCH=Y,ECB=FIXECB\n         LR    RD,R6 /* RESTORE */\n         LTR   RF,RF\n         BNZ   FPGSER\n         USING PSA,R0\n         L     RF,PSATOLD /* MAP TCB PROPER */\n         DROP  R0\n         USING TCB,RF\n         MODESET EXTKEY=TCB,WORKREG=2,RELATED=('TCB KEY')\n         DROP  RF\n         RDJFCB BREAKER , /* ACQUIRE OUTPUT FILE JFCB */\n         LTR   RF,RF\n         BNZ   FRDJFCB\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         TM    JFCDSRG1,JFCORGPO /* DSORG=PO */\n         BZ    FNOTPO /* NO */\n         TM    JFCBIND2,JFCNEW /* DISP=NEW */\n         BNO   FNOTNEW /* NO */\n         DROP  RF\nOPENLIST OPEN  (DMASTER,(INPUT),BREAKER,(OUTPUT),REPORT,(OUTPUT),      X\n               EMASTER,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R9,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         USING IHADCB,R8\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R8\n         USING IHADCB,R9\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R9\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         SLR   R5,R5 /* OUTSTAND NCP WRITE COUNTER */\nPGETLOOP LA    R6,INAREA /* DOWNLOAD FILE HAS SETS OF 4 RCDS*/\n         GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         NI    FLAGS,XFF-X40 /* SET NEW MEMBER FLAG OFF */\n         OI    FLAGS,X80 /* SET UNEXPECTED EOF; MUST HAVE SETS OF 4*/\n         TM    FLAGS,X08 /* MID TYPE 30 FILE */\n         BO    MIDTYP30 /* YES */\n         CLC   =C'30',INAREA+K7 /* NEW TYPE 30 SET */\n         BE    SET30MOD /* YES */\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         LA    R7,K3 /* CTR FOR NEXT 3 RECORDS */\nGETLOOP  GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         BCT   R7,GETLOOP  ...\n         MVC   INAREA+K80(K64),INAREA+K96 /*BUILD */\n         MVC   INAREA+K144(K64),INAREA+K176 /* SHIFT RECORD AREAS */\n         MVC   INAREA+K208(K64),INAREA+K256\nLAST30SG MVC   SEQFIELD(K1),INAREA+K16 /* INPUT RECORD SEQ # */\nPROCE0   NI    FLAGS,XFF-X80 /* RESET EXPECTED EOF BIT */\n         NI    SEQFIELD,XFF-X80 /* SHUT DOWN HI SET END BIT */\n         TM    FLAGS,X20 /* EXPECTED WRAPAROUND MODE */\n         BO    DOWRAP /* YES */\n         CLC   EXPSEQ,SEQFIELD /* MATCH ON EXPECTED SEQ # */\n         BNE   SEQERR /* ERROR */\n         CLI   SEQFIELD,X01 /* FIRST OF SET */\n         BNE   BUILDRCD /* NO, ELSE SAVE MEMBER NAME */\n         CLC   STOWLIST+K1(K4),INAREA+K2 /* COMPARE STORE ID */\n         BNE   RESETSEQ /* MEMBER BREAK */\n         TM    FLAGS,X04 /* E0 UP */\n         BZ    CHKDFID NO\n         CLC   STOWLIST+K5(K3),INAREA+K9 /* E0 FID */\n         BNE   RESETSEQ /* BREAK */\n         B     SEQERR /* OUT OF SEQ */\nCHKDFID  CLC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VAL DOWN CMPR*/\n         BNE   RESETSEQ /* MEMBER BREAK */\n         CLC   =C'50',INAREA+K7  /* FILEID WITH SUBGROUP */\n         BE    BUILDMEM /* YES */\n         CLC   =C'60',INAREA+K7 /* THIS ONE TOO */\n         BE    BUILDMEM /* CONTINUE */\n         B     SEQERR /* OUT OF SEQ */\nRESETSEQ MVI   DUPLSEQ,C'0' /* RESET MEMBER NAME SUFFIX */\nBUILDMEM MVC   STOWLIST+K1(K4),INAREA+K2 /* SAVE STORE ID */\n         CLC   STOWLIST+K1(K4),=C'0000' /* INVALID VALUE STOREID*/\n         BE    INVSTID /* BAD*/\n         TRT   STOWLIST+K1(K4),NUMSONLY /* NUMERICS ONLY */\n         BNZ   INVSTID /* BAD*/\n         TM    FLAGS,X04 /* E0 CODE */\n         BZ    MOVDFID /* NO */\n         MVC   STOWLIST+K5(K3),INAREA+K9 /* FID FOR E0 */\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* GET FIRST REAL RCD OF SET */\n         L     R1,TEIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K550)\n         ST    R1,TEIN#\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nMOVDFID  MVC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VALUE DOWNDATA*/\n         CLC   STOWLIST+K5(K2),=C'50'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'60'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'30'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'25'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'27'   /* VALID VALUE */\n         BNE   INVFT /* ERROR */\nVALIDFT  SLR   RF,RF /* BUILD UNIQUE SUFFIX */\n         IC    RF,DUPLSEQ /* INCR BY 1 FOR UNIQUE MEMBER NAME */\n         LA    RF,K1(,RF)\n         CLM   RF,K1,=C'9'    /* EXCEEDED SUFFIX MAX */\n         BH    HISUBEOF /* YES */\n         STC   RF,DUPLSEQ /* SAVE NEW UNIQUE MEMBER NAME SUFFIX */\n         STC   RF,STOWLIST+K7 ...\nPRIMCOMM XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nBUILDRCD LH    RF,K0(,R3) /* CURRENT VAR BLOCK SIZE */\n         SLR   R0,R0 /* PICKUP RECORD SET LEN */\n         TM    FLAGS,X04 /* E0 */\n         BZ    RCDLD /* NO */\n         ICM   R0,3,INAREA+K19  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         CLM   R0,K3,=AL2(K255) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\n         B     RCDLE\nRCDLD    ICM   R0,3,INAREA+17  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         AL    R0,=A(K3) /* FACTOR IN 1BYTE SEQ#AND 2BYTELEN*/\n         CLM   R0,K3,=AL2(K256) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\nRCDLE    AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         C     RF,=A(K32760) /* MAX BLOCKSIZE */\n         BH    DONTFIT /* THIS RECORD CANT BE ADDED */\n         STH   RF,K0(,R3) /* UPDATE BDW */\n         LH    RF,K4(,R3) /* CURRENT VAR RCD SIZE */\n         AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         STH   RF,K4(,R3) /* UPDATE RDW */\n         L     R6,TCHAR# /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,TCHAR# ...\n         L     R6,XBUILDEM /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,XBUILDEM ...\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PROPD /* MOVE D0 */\n         LA    R8,INAREA+K21 /* SOURCE AREA */\n         B     PROPE /* CONTINUE */\nPROPD    MVC   0(K3,R4),INAREA+K16 /* MOVE 3BYTE HDR FIELD */\n         LA    R4,K3(,R4) /* + */\n         LA    R8,INAREA+K19 /* SOURCE AREA */\nPROPE    LR    R6,R4 /* TARGET FOR RCD MOVE */\n         LR    R9,R7  /* AS PER MVCL MAX PER RCD */\n         MVCL  R6,R8 /* MOVE RECORD INTO OUTPUT BUFFER */\n         LR    R4,R6 /* SAVE POSITION OF NEXT RCD TO BE BUILT */\n         TM    FLAGS,X04 /* E0 */\n         BZ    LRCDD /* NO */\n         TM    INAREA+K18,X80 /* SET END */\n         BO    E0SETEND /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE WRAP */\n         BNE   PGETE /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETE /* CONTINUE */\nE0SETEND LH    RF,K0(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* BDW -2 */\n         STH   RF,K0(,R3)\n         LH    RF,K4(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* RDW -2 */\n         STH   RF,K4(,R3)\n         L     RF,TCHAR#\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,TCHAR#\n         L     RF,XBUILDEM\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,XBUILDEM\n         B     BREAKIT /* CONTINUE */\nLRCDD    TM    INAREA+K16,X80 /* LAST RECORD IN SET */\n         BO    BREAKIT /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE POLL */\n         BNE   PGETLOOP /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETLOOP /* CONTINUE */\nDOWRAP   NI    FLAGS,XFF-X20 /* SET WRAP MODE OFF */\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         CLI   SEQFIELD,X01 /* EXPECTED WRAP; MUST BE 01 */\n         BE    BUILDRCD /* OK */\n         B     WRAPERR /* FAILURE IN INPUT */\nSET30MOD OI    FLAGS,X08 /* TYPE 30 FILE PROCESS ACTIVE */\n         GET   DMASTER,(R6) /*IGNORE SET HDR - MAJOR SEQ# 001*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\nMIDTYP30 GET   DMASTER,(R6) /* FIRST OF SET */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         SLR   R6,R6 /* WORK */\n         ICM   R6,K3,INAREA+K17 /* RCD LEN */\n         LA    R7,K57 /* MAX DATA LEN ON FIRST RCD-INCL $$A$ TRLR*/\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         LA    R7,K60 /* SECONDARY RCD MAX */\n         GET   DMASTER,INAREA+K76 /* RCD SEG# 2*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K76(K60),INAREA+K92 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K136 /* RCD SEG# 3*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K136(K60),INAREA+K152 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K196 /* RCD SEG# 4*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K196(K60),INAREA+K212 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K256 /* RCD SEG# 5*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K256(K60),INAREA+K272 /* SHIFT IGN HDR/TRLR */\n         B     LAST30SG /* LENGTH EXHAUSTED */\nDONTFIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DONTFIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDONTFIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         B     PRIMCOMM /* CONTINUE */\nBREAKIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    BREAKIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nBREAKIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE BEFORE STOW */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         OI    FLAGS,X40 /* SET STOW DOWN; MEMBER CREATED */\n         NI    FLAGS,XFF-X08 /* RESET TYP30 PROCESS OFF */\n         L     RF,MEMLISTP /* UPDATE DIRECTORY MEMBER */\n         MVC   K0(K8,RF),STOWLIST /* MEMBER NAME */\n         L     R0,XBUILDEM /* MEMBER BYTE COUNT */\n         CVD   R0,WORK ...\n         UNPK  K8(K9,RF),WORK+K3(K5)\n         MVC   K8(K8,RF),K9(RF) ...\n         OI    K15(RF),C'0' ....\n         TR    K0(K16,RF),EBCASCII /* CHANGE TO ASCII */\n         LA    RF,K16(,RF) /* SET NEXT DIR ENTRY PTR */\n         ST    RF,MEMLISTP /* UPDATE PTR */\n         L     RF,MEMBER# /* INCR MEMBER COUNTER */\n         LA    RF,K1(,RF)\n         ST    RF,MEMBER# ...\n         CLC   XBUILDEM,MBUILDEM /* IS THIS LARGEST MEM */\n         BNH   RESETIND /* NO */\n         MVC   MBUILDEM,XBUILDEM /* RESET MAX FOUND */\n         MVC   MNAMEMEM,STOWLIST /* MEMBER NAME */\nRESETIND XC    XBUILDEM,XBUILDEM /* RESET INDIV TOTAL */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PGETLOOP /* CONTINUE */\n         B     PGETE /* CONTINUE E0 */\nEOD      TM    FLAGS,X80 /* UNEXPECTED */\n         BO    SNOEOF /* YES */\n         TM    FLAGS,X40 /* SEE IF STOW FLAG ON */\n         BZ    SNOEOF /* YES */\n         NI    FLAGS,XFF-X40 /* SET NEW MEM OFF */\n         OI    FLAGS,X04 /* INDICATE E0 PROCESSING ACTIVE */\n         MVC   STOWLIST(K8),=C'E???????' /* PREP FOR E0 MEMBERS */\nPGETE    OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* RETRIEVE E0 RCD */\n         L     R1,TEIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K550)\n         ST    R1,TEIN#\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nEOE      MVC   STOWLIST(K8),=C'DIRECTRY' /* INTERNAL DIRNAME */\n         SLR   R5,R5 /* CURRENT WRITE CHECK CTR */\n         L     R3,CURAREAP /* PREP DIR HDR */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K4(K2,R3),=AL2(K84) /* RDW */\n         MVC   K0(K2,R3),=AL2(K88) /* BDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         MVC   K32(K4,R4),=C'DSN=' /* HARD CODE */\n         L     RF,MEMBER# /* MEMBER ENTRY CTR */\n         CVD   RF,WORK ...\n         UNPK  K16(K8,R4),WORK+K4(K4)\n         OI    K23(R4),C'0'\n         MVC   K24(K8,R4),=C'00000000' /* RESERVED */\n         MVC   K0(K16,R4),=C'19YY.DDDHH:MM:SS' /* LITERAL */\n         TIME  DEC\n         STCM  R1,K7,WORK+K5 /* DATE */\n         UNPK  WORK(K5),WORK+K5(K3) ...\n         OI    WORK+4,C'0'\n         MVC   K2(K2,R4),WORK /* YY */\n         MVC   K5(K3,R4),WORK+K2 /* DDD */\n         CLM   R1,K8,=AL1(K0) /* CENTURY 19 OR 20 */\n         BE    DOTIME /* 19 */\n         MVC   K0(K2,R4),=C'20' /* ELSE */\nDOTIME   ST    R0,WORK /* PACKED TIME */\n         MVI   WORK+K3,K15 /* MAKE LIKE PACKED */\n         UNPK  K36(K7,R4),WORK(K4) /* USE TEMP WORK */\n         MVC   K8(K2,R4),K36(R4) HH\n         MVC   K11(K2,R4),K38(R4) MM\n         MVC   K14(K2,R4),K40(R4) SS\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   K36(K44,R4),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         TR    K0(K80,R4),EBCASCII /* CHANGE TO ASCII */\n         WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R6,MEMBER# /* PRODUCE OUR DIRECTORY MEMBER */\n         L     R7,=A(MEMLIST) /* TABLE START */\nDODIR0   LA    R8,K2047 /* MAX # DIR ENTRY IN 1 VAR LEN BLK */\n         SLR   R9,R9 /* CURRENT BLK ENTRY COUNT */\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nDODIR1   MVC   K0(K16,R4),K0(R7) /* POSITION 1 MEMBER ENTRY */\n         LA    R9,K1(,R9) /* INCR ENTRY COUNT */\n         LA    R4,K16(,R4) /* NEXT OUTPUT SPOT */\n         LA    R7,K16(,R7) /* NEXT INPUT SPOT */\n         BCT   R8,DODIR3 /* COUNT FOR # ENTRIES IN BLK */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR2   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDODIR2   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         B     DODIR0   /* CONTINUE */\nDODIR3   BCT   R6,DODIR1 /* MEMBER COUNT */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR5   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nDODIR5   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         CLOSE (BREAKER) /* MAKE AVAIL FOR XCOMM */\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   SDSNAME+K6(L'JFCBDSNM),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         LA    R1,SVC99PRM /* DYNALLOC PARM */\n         DYNALLOC\n         LTR   RF,RF\n         BNZ   FSVC99\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         LA    R1,=A(XCOMMPRM) /* EXEC PARM */\n         BALR  RE,RF /* GO SCHEDULE */\n         LTR   RF,RF /* RC */\n         BNZ   FXCOMM /* SCHEDULE FAILURE */\n         DELETE EPLOC=XCOMMEP\nERREXIT  MVC   OUTMSG(L'HEADER),HEADER\n         PUT   REPORT,OUTMSG\n         L     RF,MEMBER# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMEM#),MSGMEM#\n         MVC   OUTMSG+L'MSGMEM#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMEM#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TDIN#   /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGDIN#),MSGDIN#\n         MVC   OUTMSG+L'MSGDIN#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGDIN#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TEIN#   /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGEIN#),MSGEIN#\n         MVC   OUTMSG+L'MSGEIN#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGEIN#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TCHAR# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGTCH#),MSGTCH#\n         MVC   OUTMSG+L'MSGTCH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGTCH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         SLR   R6,R6\n         L     R7,TCHAR#\n         L     R8,MEMBER#\n         LTR   R8,R8 /* DONT GET ERROR FOR DIVIDE BY 0 */\n         BNZ   CALCAVGC  /* ELSE FORCE THIS MESSAGE */\n         SLR   R7,R7\n         B     CALCAVG2\nCALCAVGC DR    R6,R8\nCALCAVG2 ST    R7,TAVCH#\n         L     RF,TAVCH# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGACH#),MSGACH#\n         MVC   OUTMSG+L'MSGACH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGACH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,MBUILDEM /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMCH#1),MSGMCH#1\n         MVC   OUTMSG+L'MSGMCH#1(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMCH#1(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         MVC   OUTMSG(L'MSGMCH#2),MSGMCH#2\n         MVC   OUTMSG+K17(K8),MNAMEMEM\n         PUT   REPORT,OUTMSG\n         TM    FLAGS,X10 /* SEVERE ERROR OCCURED */\n         BZ    DOCLOSE /* NO */\n         MVC   OUTMSG(L'MERRMSG),MERRMSG\n         PUT   REPORT,OUTMSG\nDOCLOSE  CLOSE (DMASTER,,REPORT,,EMASTER)\n         FREEPOOL DMASTER , /*NO FREEPOOL FOR BREAKER;DYNBUFF USED*/\n         FREEPOOL EMASTER ,\n         FREEPOOL REPORT  ,\n         MODESET EXTKEY=ZERO,WORKREG=2,RELATED=('SUPVR KEY')\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         L     R1,=A(POLLDOWN) /* PAGEFREE*/\n         L     R2,=A(ENDFIX) ...\n         PGSER R,FREE,A=(1),EA=(2),RELEASE=N,ANYWHER=Y,                X\n               BRANCH=Y,ECB=FIXECB\n         LR    RD,R6 /* RESTORE */\n         LTR   RF,RF\n         BNZ   FPGSER\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         SYSEVENT OKSWAP,ENTRY=BRANCH , /* SWAP AGAIN */\n         LR    RD,R6 /* RESTORE */\n         CLM   R1,K1,=AL1(K0)\n         BNE   FSWAP\n         USING PSA,R0\n         L     RF,PSATOLD /* MAP TCB PROPER */\n         DROP  R0\n         USING TCB,RF\n         MODESET EXTKEY=TCB,WORKREG=2,RELATED=('TCB KEY')\n         DROP  RF\nXEXIT    L     RF,SYSTEMRC /* SET OS RC */\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nSNOEOF   LA    RF,K28 /* UNEXPECTED EOF ON INPUT */\n         B     DUMPEXIT\nWRAPERR  LA    RF,K32 /* X7F NOT FOLLOWED BY X01 */\n         B     DUMPEXIT\nSEQERR   LA    RF,K36 /* SEQUENCE NUMBER OUT OF ORDER */\n         B     DUMPEXIT\nINVRCDLN LA    RF,K40 /* INDIV RCD LEN=0 OR GT>253 */\n         B     DUMPEXIT\nHISUBEOF LA    RF,K44 /* TOO MANY >9 MULTIPLE 50/60 SUBFILES */\n         B     DUMPEXIT\nINVFT    LA    RF,K48 /* INVALID INPUT RCD FILETYPE(25,27,30,50,60)\n         B     DUMPEXIT\nINVSTID  LA    RF,K52 /* INVALID STOR ID=0 OR NOT NUMERIC */\n         B     DUMPEXIT\nFRDJFCB  LA    RF,K56 /* READ JFCB FAILURE */\n         B     MAINEXIT\nFNOTPO   LA    RF,K60 /* BREAKER NOT PO */\n         B     MAINEXIT\nFNOTNEW  LA    RF,K64 /* DISP=NEW MUST BE FOR BREAKER */\n         B     MAINEXIT\nFAUTH    LA    RF,K68 /* NOT AUTH */\n         B     MAINEXIT\nFSWAP    LA    RF,K72 /* DONTSWAP FAIL */\n         B     MAINEXIT\nFPGSER   LA    RF,K76 /* PAGEFIX FAIL  */\n         B     MAINEXIT\nFSVC99   LA    RF,K80 /* SVC99 ALLOC FAIL */\n         B     DUMPEXIT\nFXCOMM   LA    RF,200(,RF) /* 200+XCOM FAILURE */\n         B     DUMPEXIT\nFSTOW    LA    RF,100(,RF) /* 100+STOW FAILURE CODE+REASON CODE*/\n         ALR   RF,R0 /* ADD IN REASON CODE */\nDUMPEXIT OI    FLAGS,X10 /* SEVERE ERROR BIT */\n         ST    RF,SYSTEMRC /* BINARY RC */\n         CVD   RF,WORK /* PREP ERROR MSG */\n         UNPK  WORK(K3),WORK+K6(K2)\n         OI    WORK+K2,C'0'\n         MVC   MERRMSG+K13(K3),WORK\n         MVC   MERRMSG+K27(K8),STOWLIST\n         B     ERREXIT\n         LTORG\n         PRINT NOGEN\n         WRITE DECB,SF,BREAKER,MF=L    /* OUTPUT A BLOCK */\nWORK     DC    D'0'\nJFCBEXIT DC    0F'0',X'87',AL3(JFCB)\nJFCB     DC    CL176' ' /* A JFCB AREA */\nSAVEAREA DC    (K18)A(K0) /* SPECIAL SAVE AREA */\nFIXECB   DC    A(K0) /* PGSER ECB */\nBREAKER  DCB   DDNAME=BREAKER,DSORG=PO,MACRF=(R,W),NCP=5,RECFM=VB,     X\n               LRECL=32756,BLKSIZE=32760,BUFNO=11,EXLST=JFCBEXIT\nDMASTER  DCB   DDNAME=DMASTER,DSORG=PS,EODAD=EOD,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=80\nEMASTER  DCB   DDNAME=EMASTER,DSORG=PS,EODAD=EOE,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=550\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(GM,PM),                   X\n               RECFM=FBA,LRECL=133,BLKSIZE=133\nSVC99PRM DC    X'80',AL3(SVC99RB)\nSVC99RB  DC    X'14014000'\n         DC    X'00000000'\n         DC    A(S99TXTPR)\n         DC    X'00000000'\n         DC    X'40000000' /* WAIT ON DSN */\nS99TXTPR DC    X'00',AL3(SDDNAME)\n         DC    X'00',AL3(SDSNAME)\n         DC    X'00',AL3(SMEMBER)\n         DC    X'80',AL3(SDISP)\nSDDNAME  DC    X'000100010008',CL8'LCLDS01'\nSDSNAME  DC    X'00020001002C',CL44' '\nSMEMBER  DC    X'000300010008',CL8'DIRECTRY'\nSDISP    DC    X'000400010001',X'01' /* OLD */\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMMPRM DC    AL2(L'XCOMMPRL)\nXCOMMPRL DC    C'TYPE=SCHEDULE'\nSTOWLIST DC    (K0)A(K0),C'D???????',A(K0) /* TTRC OF ZERO */\nCURAREAP DC    A(OUTAREA1) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA2) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA3) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA4) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA5) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA6) /* CURRENT WORKING ON OUTPUT PTR */\nSTAGEPTR DC    A(*-*) /* WHERE UP TO IN STAGING AREA */\nMEMBER#  DC    A(K0) /* NUMBER OF PROCESSED MEMBERS */\nTDIN#    DC    A(K0) /* PRICE/PROMO CHARS IN */\nTEIN#    DC    A(K0) /* EO/MISC     CHARS IN */\nTCHAR#   DC    A(K0) /* TOTAL NUMBER OF DATA CHARACTERS TO BE SENT*/\nTAVCH#   DC    A(K0) /* APPROX AVG NUMBER CHARS PER MEMBER */\nXBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMEMLISTP DC    A(MEMLIST) /* PTR TO INTERNAL DIRECTORY */\nSYSTEMRC DC    A(K0) /* RC */\nMNAMEMEM DC    CL8' ' ...\nDUPLSEQ  DC    C'0' /* MEMBER NAME SUFFIX FOR ID50/60 SUBGROUPS */\nFLAGS    DC    AL1(K0)\n* X80 UNEXPECTED EOF; SHOULD NOT OCCUR\n* X40 LAST RECORD WAS SUBEOF - MEMBER CREATED\n* X20 MEMBER RCD WRAPAROUND FROM X7F TO X01 ...\n* X10 SEVERE ERROR FLAG USED BY EOJ ROUTINE\n* X08 TYPE 30 PROCESSING ACTIVE\n* X04 D0 PROCESSING COMPLETE; E0 PROCESSING ACTIVE\nSEQFIELD DC    AL1(K0) /* USED TO HOLD SEQUENCE NUMBER */\nEXPSEQ   DC    AL1(K1) /* EXPECTED SEQ # NEXT - MAKE SURE ORDER */\nMSGPAT   DC    X'4B2020206B2020206B202120'\nOUTMSG   DC    CL133' '\nHEADER   DC    C'1POLLDOWN BREAKOUT REPORT'\nMSGMEM#  DC    CL40'0# OF PDS MEMBERS CREATED................'\nMSGDIN#  DC    CL40'0TOTAL PRICE/PROMO DATA IN...............'\nMSGEIN#  DC    CL40'0TOTAL E0/MISC DATA IN...................'\nMSGTCH#  DC    CL40'0TOTAL # DOWNLOADED CHARACTERS...........'\nMSGACH#  DC    CL40'0APPROX. AVG. # CHARACTERS PER MEMBER....'\nMSGMCH#1 DC    CL40'0MAX. # CHARS. PER INDIVIDUAL MEMBER.....'\nMSGMCH#2 DC    CL52' MEMBER NAME IS: XXXXXXXX'\nMERRMSG  DC    CL52'0** ERROR RC:??? ** MEMBER:????????'\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C'.'\n         DC    X'2E'\n         ORG   EBCASCII+C':'\n         DC    X'3A'\n         ORG   EBCASCII+C'='\n         DC    X'3D'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\nNUMSONLY DC    (K256)AL1(XFF) /* CHECK FOR DIGITS ONLY */\n         ORG   NUMSONLY+C'0'\n         DC    (K10)AL1(K0)\n         ORG\nINAREA   DC    (K550)AL1(K0) /* INPUT WORKAREA */\nOUTAREA1 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA2 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA3 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA4 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA5 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA6 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nMEMLIST  DS    (K32760)CL16' ' /* INCORE DIRECTORY */\nENDFIX   EQU   *-K1\n* 8 BYTE ASCII MEMBER NAME; 8 BYTE ASCII MEMBER CHAR COUNT\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         DSECT\n         IEFJFCBN\n         CVT   DSECT=YES\n         IKJTCB\n         IHAPSA\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.LPALIB(POLLUT1),DISP=SHR,\n// UNIT=,SPACE=\n//*G.WORK DD DSN=JEFFK.VTOC.DATA,DISP=SHR\n//*G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POLLTSTS": {"ttr": 7691, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00\\x00\\x00\\x91\\x01\\x0f\\x00\\x91\\x03o\\x11 \\x00\\r\\x00\\x07\\x00\\x0c\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "1991-01-10T00:00:00", "modifydate": "1991-02-05T11:20:00", "lines": 13, "newlines": 7, "modlines": 12, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (5304010530000000,,,STEP),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC PGM=POLLDOWN,DPRTY=(15,15)\n//STEPLIB DD DSN=SYS1.TECH.LPALIB,DISP=SHR\n//        DD DSN=SYS3.XCOMM.LOAD,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//REPORT   DD SYSOUT=*\n//DMASTER DD DISP=SHR,DSN=JEFFK.FNCL.N.SDD.POLL.DOWNDATA,FREE=CLOSE\n//EMASTER DD DISP=SHR,DSN=JEFFK.FNCL.N.SDD.POLL.SORTE0,FREE=CLOSE\n//BREAKER DD DSN=JEFFK.POLL.OUTPUT(+1),DISP=(NEW,CATLG,DELETE),\n// UNIT=3390,VOL=SER=SYSDA5,SPACE=(CYL,(10,1,500)),FREE=CLOSE,\n// DCB=(SYS1.LINKLIB,DSORG=PO,RECFM=VB,BLKSIZE=32760,LRECL=32756)\n//SYSIN01 DD DSN=JEFFK.TSO1.PDS(XCOMMDIR),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POLLTST3": {"ttr": 7693, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x912o\\x00\\x912o\\x11\\x00\\x00\\r\\x00#\\x00\\x06\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-11-22T00:00:00", "modifydate": "1991-11-22T11:00:00", "lines": 13, "newlines": 35, "modlines": 6, "user": "JEFFK"}, "text": "//POLLTUT1 JOB (5304010530000000,,,STEP),'TECH.JEFF.KAPLAN',\n// CLASS=H,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=8M\n//S1 EXEC PGM=SDD81A,DPRTY=(15,15)\n//STEPLIB DD DSN=SYS1.TECH.LPALIB,DISP=SHR\n//        DD DSN=SYS3.XCOM.REL221.LOAD,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//REPORT   DD SYSOUT=*\n//DMASTER DD DISP=SHR,DSN=FNCL.N.SDD.POLL.SORTPPM,FREE=CLOSE\n//EMASTER DD DISP=SHR,DSN=FNCL.N.SDD.POLL.SORTE0,FREE=CLOSE\n//BREAKER DD DSN=JEFFK.POLL.TEST,DISP=(NEW,CATLG,DELETE),\n// UNIT=3390,SPACE=(CYL,(50,50,500),RLSE),VOL=SER=TSO001,\n// FREE=CLOSE,\n// DCB=(SYS1.LINKLIB,DSORG=PO,RECFM=VB,BLKSIZE=32760,LRECL=32756)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POLLTUT1": {"ttr": 7937, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01*\\x00\\x00\\x00\\x91\\x01\\x0f\\x00\\x91\\x18\\x9f\\tV\\x00\\x1f\\x00\\x07\\x00\\x1f\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.42", "flags": 0, "createdate": "1991-01-10T00:00:00", "modifydate": "1991-07-08T09:56:00", "lines": 31, "newlines": 7, "modlines": 31, "user": "JEFFK"}, "text": "//POLLTUT1 JOB (5304010530000000,,,STEP),'TECH.JEFF.KAPLAN',\n// CLASS=H,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=8M\n//S1 EXEC PGM=POLLUT1,DPRTY=(15,15)\n//STEPLIB DD DSN=SYS1.TECH.LPALIB,DISP=SHR\n//        DD DSN=SYS3.XCOM.REL221.LOAD,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//REPORT   DD SYSOUT=*\n//DMASTER DD DISP=SHR,DSN=JEFFK.N.SDD.POLL.SORTPPM,FREE=CLOSE\n//EMASTER DD DISP=SHR,DSN=JEFFK.N.SDD.POLL.SORTE0,FREE=CLOSE\n//BREAKER DD DSN=JEFFK.POLL1.OUTPUT(+1),DISP=(NEW,CATLG,DELETE),\n// UNIT=3390,SPACE=(CYL,(200,50,500),RLSE),VOL=SER=TSO001,\n// FREE=CLOSE,\n// DCB=(SYS1.LINKLIB,DSORG=PO,RECFM=VB,BLKSIZE=32760,LRECL=32756)\n//SYSIN01 DD DSN=JEFFK.USER.CNTLLIB(XCOMMDIR),DISP=SHR\n//* CREATE COPIES OF DOWNLOADED FILE\n//S2 EXEC PGM=IEBCOPY,DPRTY=(15,15)\n//SYSPRINT DD DUMMY\n//COPY1 DD DSN=JEFFK.POLL1.OUTPUT(+1),DISP=SHR\n//COPY2 DD DSN=JEFFK.POLL2.OUTPUT(+1),DISP=(NEW,CATLG,DELETE),\n// UNIT=3390,SPACE=(CYL,(200,50,500),RLSE),VOL=SER=TSO001,\n// FREE=CLOSE,\n// DCB=(SYS1.LINKLIB,DSORG=PO,RECFM=VB,BLKSIZE=32760,LRECL=32756)\n//COPY3 DD DSN=JEFFK.POLL3.OUTPUT(+1),DISP=(NEW,CATLG,DELETE),\n// UNIT=3390,SPACE=(CYL,(200,50,500),RLSE),VOL=SER=TSO001,\n// FREE=CLOSE,\n// DCB=(SYS1.LINKLIB,DSORG=PO,RECFM=VB,BLKSIZE=32760,LRECL=32756)\n//COPY4 DD DSN=JEFFK.POLL4.OUTPUT(+1),DISP=(NEW,CATLG,DELETE),\n// UNIT=3390,SPACE=(CYL,(200,50,500),RLSE),VOL=SER=TSO001,\n// FREE=CLOSE,\n// DCB=(SYS1.LINKLIB,DSORG=PO,RECFM=VB,BLKSIZE=32760,LRECL=32756)\n//SYSIN DD DSN=JEFFK.USER.CNTLLIB(POLLCOPY),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POLLT160": {"ttr": 7939, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1d\\x00\\x00\\x00\\x91\\x01\\x0f\\x00\\x92\\x04?\\x12(\\x00\\x0e\\x00\\x07\\x00\\x0e\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.29", "flags": 0, "createdate": "1991-01-10T00:00:00", "modifydate": "1992-02-12T12:28:00", "lines": 14, "newlines": 7, "modlines": 14, "user": "TECH110"}, "text": "//POLLTEST JOB (5304010530000000,,,STEP),'TECH.JEFF.KAPLAN',\n// CLASS=H,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC PGM=POLLDOWN,DPRTY=(15,15)\n//STEPLIB DD DSN=SYS1.TECH.LPALIB,DISP=SHR\n//        DD DSN=SYS3.XCOMM.LOAD,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//REPORT   DD SYSOUT=*\n//DMASTER DD DISP=SHR,DSN=FNCL.N.SDD.POLL.PPM160,FREE=CLOSE\n//EMASTER DD DISP=SHR,DSN=FNCL.N.SDD.POLL.E0160,FREE=CLOSE\n//BREAKER DD DSN=JEFFK.POLL.OUTPUT(+1),DISP=(NEW,CATLG,DELETE),\n// UNIT=3390,VOL=SER=SYSDA5,SPACE=(CYL,(200,50,500),RLSE),\n// FREE=CLOSE,\n// DCB=(SYS1.LINKLIB,DSORG=PO,RECFM=VB,BLKSIZE=32760,LRECL=32756)\n//SYSIN01 DD DSN=JEFFK.TSO1.PDS(XCOMMDIR),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POLLT320": {"ttr": 7941, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1d\\x00\\x00\\x00\\x91\\x01\\x0f\\x00\\x91\\x03\\x8f\\x10Q\\x00\\x0e\\x00\\x07\\x00\\x0e\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.29", "flags": 0, "createdate": "1991-01-10T00:00:00", "modifydate": "1991-02-07T10:51:00", "lines": 14, "newlines": 7, "modlines": 14, "user": "JEFFK"}, "text": "//POLLT320 JOB (5304010530000000,,,STEP),'TECH.JEFF.KAPLAN',\n// CLASS=H,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC PGM=POLLDOWN,DPRTY=(15,15)\n//STEPLIB DD DSN=SYS1.TECH.LPALIB,DISP=SHR\n//        DD DSN=SYS3.XCOMM.LOAD,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//REPORT   DD SYSOUT=*\n//DMASTER DD DISP=SHR,DSN=FNCL.N.SDD.POLL.PPM320,FREE=CLOSE\n//EMASTER DD DISP=SHR,DSN=FNCL.N.SDD.POLL.E0320,FREE=CLOSE\n//BREAKER DD DSN=JEFFK.POLL.OUTPUT(+1),DISP=(NEW,CATLG,DELETE),\n// UNIT=3390,VOL=SER=SYSDA5,SPACE=(CYL,(200,50,500),RLSE),\n// FREE=CLOSE,\n// DCB=(SYS1.LINKLIB,DSORG=PO,RECFM=VB,BLKSIZE=32760,LRECL=32756)\n//SYSIN01 DD DSN=JEFFK.TSO1.PDS(XCOMMDIR),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POSXR01D": {"ttr": 7943, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x91\\x00\\x8f\\x00\\x94)\\x1f\\x16Q\\x00\\xdd\\x00\\x1e\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-01-08T00:00:00", "modifydate": "1994-10-18T16:51:00", "lines": 221, "newlines": 30, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//**  ******************************************************************\n//**  *               J C L   M A I N T E N A N C E   L O G\n//**  *\n//**  *  --------  ----  -----------------------------------------------\n//**  *  DATE      INIT  DESCRIPTION OF CHANGE\n//**  * 12/11/90   HKB   BRING SX37RPTS UP TO STANDARDS. CC# 0949\n//**  *                  CREATED NEW PROC AS OSXR01D.\n//**  *                  ADDED TWO NEW SYSINS AS OSR01D01 & OSR01D02.\n//**  *                  RENAMED DISPATCH WRITERS AS OXR01D00,05,10.\n//**  * 12/11/90   HKB   MOVED SX37RPTS JCL TO LIBRARIAN.\n//**  * 06/20/90   GRT   CHANGED MSGCLASS TO Q.\n//**  * 08/14/89   GRT   CHANGED CLASS TO ACCOMADATE INIT REALIGNMENT.\n//**  ******************************************************************\n//**  ******************************************************************\n//**  * JSN:         THIS JOB EXTRACTS AND SORTS STOP-X37 SMF RECORDS.\n//**  *\n//**  * PI :         NONE\n//**  *\n//**  * JD :         POJAR00D\n//**  *\n//**  * ERT:         2 MINUTES.\n//**  ******************************************************************\n//* LIBEXPAND PROCLIB:SYS1.PRODPROC.MASTER;MEMBER:OSXR01D\n//*OSXR01D  PROC\n//**  ******************************************************************\n//**  *               J C L   M A I N T E N A N C E   L O G\n//**  *\n//**  *  --------  ----  -----------------------------------------------\n//**  *  DATE      INIT  DESCRIPTION OF CHANGE\n//**  *  12/11/90  HKB  BRING SX37RPTS UP TO STANDARDS, CC #0949.\n//**  *                 CREATED NEW PROC AS OSXR01D.\n//**  *                 ADDED TWO NEW SYSINS AS OSR01D01 & OSR01D02.\n//**  *                 REMOVED COMMENTED OUT DD SORTIN FOR DSN=\n//**  *                 PD.SMFDUMP.WEEKLY.BACKUP(0) IN STEP0010.\n//**  *                 RENAMED DISPATCH WRITERS AS OXR01D00,05,10.\n//**  *  06/20/90  GRT  ADDED DISPATCH WRITER NAMES.\n//**  *  04/26/89  GRT  ADDED ABEND STEP FOR COND CODE CHECKING.\n//**  ******************************************************************\n//**  ******************************************************************\n//**  * JSN:         THIS JOB EXTRACTS AND SORTS STOP-X37 SMF RECORDS\n//**  *\n//**  * PI :         NONE\n//**  *\n//**  * JD :         POJAR00D\n//**  *\n//**  * ERT:         2 MINUTES.\n//**  ******************************************************************\n//**  ******************************************************************\n//**  * SID:         STEP0010\n//**  *\n//*   * SN : THIS STEP EXTRACTS AND SORTS STOP-X37 SMF RECORDS BY JOBID.\n//*   *      NOTE: IF RECID NOT = 201, MODIFY THE X'C9' ON THE INCLUDE\n//*   *      CARD IN SYSIN OSR01D01 TO THE APPROPRIATE RECORD ID.\n//**  *\n//**  * CFC:         NONE\n//**  *\n//**  * CFO:         NONE\n//**  *\n//**  * BU :         NO\n//**  *\n//**  * DISK FILES:  SORTOUT                                 OUTPUT\n//**  *              SORTIN                                  INPUT\n//**  *\n//**  * TAPE FILES:  NONE\n//**  *\n//**  * RPT:         NONE\n//**  *\n//**  * LRD:         NONE\n//**  *\n//**  * SR :         NONE\n//**  *\n//**  * RI :         RESTART STEP010\n//**  *\n//**  * SBU:         NONE\n//**  *\n//**  * SI :         NONE\n//**  ******************************************************************\n//STEP010 EXEC  PGM=SORT\n//SYSOUT   DD  SYSOUT=*\n//SORTWK01 DD  UNIT=SMS,SPACE=(CYL,(3,3))\n//*SORTIN   DD  DSN=PTAP.CHGBACK.JARSBAT.SMFDLY(0),DISP=OLD\n//SORTIN   DD  DSN=TECH104.SMFDATA,DISP=SHR\n//SORTOUT  DD  DSN=&&TEMP,DISP=(NEW,PASS,DELETE),\n//             SPACE=(CYL,(3,3)),UNIT=SMS,\n//             DCB=(RECFM=VBS,LRECL=32756,BLKSIZE=32760,DSORG=PS)\n//* LIBEXPAND DSNAME:SYS1.PRODSYSI.MASTER;MEMBER:OSR01D01\n//SYSIN     DD DATA,DCB=BLKSIZE=80\n   INCLUDE COND=(6,1,BI,EQ,X'C9')\n   SORT FIELDS=(19,16,CH,A,11,4,PD,A,7,4,FI,A)\n/*\n//**********************************************************************\n//*          ABEND STEP FOR RETURN CODE                                *\n//*ABEND010 EXEC PGM=ABENDWTO,COND=(0,GE,STEP010)\n//**********************************************************************\n//**  ******************************************************************\n//**  * SID:         STEP020\n//**  *\n//*   * SN :         EXECUTES SMFX37B FROM SYS3.X37R33.LOAD AND CREATES\n//*   *              TWO OUTPUT REPORTS, ARCHIVED ONLY.\n//**  *\n//**  * CFC:         NONE\n//**  *\n//**  * CFO:         NONE\n//**  *\n//**  * BU :         NO\n//**  *\n//**  * DISK FILES:  SMFFILE                             I/O\n//**  *\n//**  * TAPE FILES:  NONE\n//**  *\n//**  * RPT:         SWITCHING REPORT\n//**  *              MULTI VOLUME REPORT\n//**  *\n//**  * LRD:         NONE\n//**  *\n//**  * SR :         NONE\n//**  *\n//**  * RI :         RESTART STEP010\n//**  *\n//**  * SBU:         NONE\n//**  *\n//**  * SI :         NONE\n//**  ******************************************************************\n//STEP020 EXEC  PGM=SMFX37B,\n//         PARM='RECID=201,STEP=YES,PEOPLE=60,COST=15'\n//SMFFILE  DD  DSN=&&TEMP,DISP=(OLD,PASS,DELETE)\n//SYSPRINT DD  SYSOUT=*\n//PERMDSN  DD  SYSOUT=*\n//**********************************************************************\n//*          ABEND STEP FOR RETURN CODE                                *\n//*ABEND020 EXEC PGM=ABENDWTO,COND=(0,GE,STEP020)\n//**********************************************************************\n//**  ******************************************************************\n//**  * SID:         STEP030\n//**  *\n//*   * SN :         THIS STEP GENERATES THE RECAT REPORT ONLY.\n//**  *\n//**  * CFC:         NONE\n//**  *\n//**  * CFO:         NONE\n//**  *\n//**  * BU :         NO\n//**  *\n//**  * DISK FILES:  SORTIN                               INPUT\n//**  *              SORTOUT                              OUTPUT\n//**  *\n//**  * TAPE FILES:  NONE\n//**  *\n//**  * RPT:         NONE\n//**  *\n//**  * LRD:         NONE\n//**  *\n//**  * SR :         NONE\n//**  *\n//**  * RI :         RESTART STEP010\n//**  *\n//**  * SBU:         NONE\n//**  *\n//**  * SI :         NONE\n//**  ******************************************************************\n//STEP030 EXEC  PGM=SORT\n//SYSOUT   DD  SYSOUT=*\n//SORTWK01 DD  UNIT=SMS,SPACE=(CYL,(3,3))\n//SORTIN   DD  DSN=&&TEMP,DISP=(OLD,DELETE)\n//SORTOUT  DD  DSN=&&TEMP1,DISP=(NEW,PASS,DELETE),\n//             SPACE=(CYL,(3,3)),UNIT=SMS,\n//             DCB=(RECFM=VBS,LRECL=32756,BLKSIZE=32760,DSORG=PS)\n//* LIBEXPAND DSNAME:SYS1.PRODSYSI.MASTER;MEMBER:OSR01D02\n//SYSIN     DD DATA,DCB=BLKSIZE=80\n   INCLUDE COND=(70,1,BI,EQ,X'10',AND,283,3,CH,EQ,C'JOB')\n   SORT FIELDS=(19,16,CH,A,11,4,PD,A,7,4,FI,A)\n/*\n//**********************************************************************\n//*          ABEND STEP FOR RETURN CODE                                *\n//*ABEND030 EXEC PGM=ABENDWTO,COND=(0,GE,STEP030)\n//**********************************************************************\n//**  ******************************************************************\n//**  * SID:         STEP040\n//**  *\n//*   * SN :         PRODUCE STOP-X37 ANALYSIS REPORT, USER ABENDS:\n//*   *              1000  -  INVALID KEYWORD IN PARAMETER FIELD\n//*   *              1001  -  INVALID PARAMETER ON RECID= KEYWORD\n//*   *              1002  -  INVALID PARAMETER ON LIST= KEYWORD\n//*   *              1003  -  INVALID PARAMETER ON DUMP= KEYWORD\n//*   *              1004  -  INVALID PARAMETER ON LINES= KEYWORD\n//**  *\n//**  * CFC:         NONE\n//**  *\n//**  * CFO:         NONE\n//**  *\n//**  * BU :         NO\n//**  *\n//**  * DISK FILES:  SMFFILE                              I/O\n//**  *\n//**  * TAPE FILES:  NONE\n//**  *\n//**  * RPT:         RECAT REPORT\n//**  *\n//**  * LRD:         NONE\n//**  *\n//**  * SR :         NONE\n//**  *\n//**  * RI :         RESTART STEP010\n//**  *\n//**  * SBU:         NONE\n//**  *\n//**  * SI :         NONE\n//**  ******************************************************************\n//STEP040 EXEC  PGM=SMFX37B,\n//         PARM='RECID=201,STEP=YES,PEOPLE=60,COST=15'\n//SMFFILE  DD  DSN=&&TEMP1,DISP=(OLD,DELETE)\n//SYSPRINT DD  SYSOUT=*\n//PERMDSN  DD  SYSOUT=*\n//**********************************************************************\n//*          ABEND STEP FOR RETURN CODE                                *\n//*ABEND040 EXEC PGM=ABENDWTO,COND=(0,GE,STEP040)\n//**********************************************************************\n//* PEND\n//*OSXR01D  EXEC OSXR01D\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRINTMIL": {"ttr": 7948, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x91\\x14/\\x00\\x95\\x13o\\x14R\\x00\\x0b\\x00\\x03\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1991-05-22T00:00:00", "modifydate": "1995-05-16T14:52:00", "lines": 11, "newlines": 3, "modlines": 0, "user": "TECH110"}, "text": "/* Printlog rexx exec */\n\"FREE F(ISPLIST) SYSOUT(R) DEST(MILFORD)\";\nif rc \\= 0 then exit rc;\nmsgstat = MSG('off');\n\"EXECUTIL HT\";\n\"FREE ATTR(MLOG)\";\n\"ATTR MLOG RECFM(F B A) LRECL(133) BLKSIZE(1330)\";\n\"ALLOC F(ISPLIST) SYSOUT(R) DEST(MILFORD) USING(MLOG)\";\n\"EXECUTIL RT\";\nmsgstat = MSG(msgstat);\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PRTDMP": {"ttr": 7950, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00\\x00\\x00\\x91'\\x0f\\x00\\x94!\\x7f 7\\x00*\\x00\\x14\\x00*\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "1991-09-27T00:00:00", "modifydate": "1994-08-05T20:37:00", "lines": 42, "newlines": 20, "modlines": 42, "user": "TECH110"}, "text": "//TECH110F JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//DEF EXEC PGM=IDCAMS,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  DELETE TECH110.IPCSDDIR.CLUSTER CLUSTER\n  SET MAXCC=0\n  DEF CL(NAME(TECH110.IPCSDDIR.CLUSTER) -\n     CYLINDERS(1 1) KEYS(128 0) -\n     CONTROLINTERVALSIZE(4096) RECORDSIZE(384 3072))\n/*\n// IF RC = 0 THEN\n//IPCSINIT EXEC PGM=IKJEFT01,REGION=8M\n//SYSTSPRT DD SYSOUT=*\n//SYSPROC DD DSN=SYSS.IPCS.V4R2M0.SBLSCLI0,DISP=SHR\n//SYSTSIN DD *\n  IPCS NOPARM\n  IPCSDDIR 'TECH110.IPCSDDIR.CLUSTER'\n  END\n/*\n// ENDIF\n// IF RC = 0 THEN\n//IPCSINIT EXEC PGM=IKJEFT01,REGION=8M\n//SYSTSPRT DD SYSOUT=*\n//SYSPROC DD DSN=SYSS.IPCS.V4R2M0.SBLSCLI0,DISP=SHR\n//IPCSDDIR DD DSN=TECH110.IPCSDDIR.CLUSTER,DISP=SHR\n//DUMP DD DSN=SYS1.DUMP01,DISP=SHR\n//SYSTSIN DD *\n  IPCS NOPARM\n  SETDEF DDNAME(DUMP) NOCONFIRM\n  SUMMARY\n  LPAMAP\n  VERBEXIT DAEDATA\n  VERBEXIT LOGDATA\n  VERBEXIT MMSDATA\n  VERBEXIT MTRACE\n  VERBEXIT SUMDUMP\n  VERBEXIT TRACE\n  LIST (0:7FFFFFFF)\n  END\n/*\n// ENDIF\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRTDMP2": {"ttr": 7952, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00\\x00\\x00\\x91'?\\x00\\x91'?\\x112\\x00&\\x00$\\x00\\x08\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "1991-09-30T00:00:00", "modifydate": "1991-09-30T11:32:00", "lines": 38, "newlines": 36, "modlines": 8, "user": "TECH110"}, "text": "//PRTDMP   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=1,MSGLEVEL=(1,1),NOTIFY=TECH110\n//DEF EXEC PGM=IDCAMS,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  DELETE TECH110.DDIR CLUSTER\n  DELETE TECH110.IPCSDDIR.CLUSTER CLUSTER\n  SET MAXCC=0\n  DEF CL(NAME(TECH110.IPCSDDIR.CLUSTER) -\n     CYLINDERS(1 1) KEYS(128 0) -\n     CONTROLINTERVALSIZE(4096) RECORDSIZE(384 3072))\n/*\n// IF RC = 0 THEN\n//IPCSINIT EXEC PGM=IKJEFT01,REGION=8M\n//SYSTSPRT DD SYSOUT=*\n//SYSPROC DD DSN=SYS1.IPCS.V4R2M0.SBLSCLI0,DISP=SHR\n//SYSTSIN DD *\n  IPCS NOPARM\n  IPCSDDIR 'TECH110.IPCSDDIR.CLUSTER'\n  END\n/*\n// ENDIF\n// IF RC = 0 THEN\n//IPCSINIT EXEC PGM=IKJEFT01,REGION=8M\n//SYSTSPRT DD SYSOUT=*\n//SYSPROC DD DSN=SYS1.IPCS.V4R2M0.SBLSCLI0,DISP=SHR\n//IPCSDDIR DD DSN=TECH110.IPCSDDIR.CLUSTER,DISP=SHR\n//DUMP DD DSN=SYS1.DUMP04,DISP=SHR\n//SYSTSIN DD *\n  IPCS NOPARM\n  SETDEF DDNAME(DUMP) NOCONFIRM\n  VERBEXIT LOGDATA\n  VERBEXIT MTRACE\n  VERBEXIT SUMDUMP\n  VERBEXIT TRACE\n  END\n/*\n// ENDIF\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PSDD81D": {"ttr": 7954, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x915\\x1f\\x00\\x915\\x0f Y\\x00\\x1d\\x00\\x1d\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-12-17T00:00:00", "modifydate": "1991-12-16T20:59:00", "lines": 29, "newlines": 29, "modlines": 0, "user": "TECH110"}, "text": "//PSDD81D  JOB 5310010480000000,'UT1/XCOM DNLOAD POS',\n//         NOTIFY=TECH110,\n//         CLASS=H,MSGCLASS=G,REGION=8M,\n//         RESTART=*\n//JOBLIB DD DSN=BUILDING.EMERGNCY.BATCH.LOADLIB,DISP=SHR\n//       DD DSN=BUILDING.PROD.BATCH.LOADLIB,DISP=SHR\n//***************************************************************\n//**  ******************************************************************\n//**  *               J C L   M A I N T E N A N C E   L O G\n//**  *\n//**  *    DATE    INIT  DESCRIPTION OF CHANGE\n//**  *  --------  ----  -----------------------------------------------\n//**  *\n//**  *  11/01/91  BAR   INITIAL TURNOVER                      (CC#1393)\n//**  ******************************************************************\n//**  ******************************************************************\n//**  * JSN:         THIS JOB REFORMATS SDD DOWNLOAD DATA INTO A PDS\n//**  *              FILE WITH SEVERAL MEMBERS PER STORE AND TRANSMITS\n//**  *              A DIRECTORY VIA XCOM\n//**  *\n//**  * PI :         MUST COMPLETE SUCCESSFULLY\n//**  *              IF ANY PROBLEMS CALL PERSON ON CRITICAL CALL LIST\n//**  *\n//**  * JD :         RUN AFTER PASD06D\n//**  *\n//**  * ERT:         15 MINUTES\n//**  ******************************************************************\n//**********************************************************************\n//SDD81D EXEC SDD81D\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PSEQTEST": {"ttr": 7956, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1c\\x00\\x00\\x00\\x91\\x01\\x0f\\x00\\x91\\x06\\x7f\\x12\\x05\\x00\\t\\x00\\x07\\x00\\x08\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.28", "flags": 0, "createdate": "1991-01-10T00:00:00", "modifydate": "1991-03-08T12:05:00", "lines": 9, "newlines": 7, "modlines": 8, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (5304010530000000,,,STEP),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//**** THE OUTPUT SYSUT2 DCB PARAM MUST MATCH THE INPUT SYSUT1 */\n//S EXEC PGM=PDSTOSEQ\n//SYSUDUMP DD SYSOUT=*\n//SYSUT1 DD DSN=MDC23.N.DATA,DISP=SHR\n//SYSUT2 DD DSN=JEFFK.MDC23.N.DATA,DISP=(NEW,CATLG,DELETE),\n// UNIT=3390,VOL=SER=SYSDA5,SPACE=(CYL,(1,1)),\n// DCB=(MDC23.N.DATA,DSORG=PS)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PURBKUP": {"ttr": 7958, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\x10?\\x00\\x93\\x10?\\x12)\\x00\\x08\\x00\\n\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-04-13T00:00:00", "modifydate": "1993-04-13T12:29:00", "lines": 8, "newlines": 10, "modlines": 6, "user": "TECH110"}, "text": "//TECH110L JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//PURGE   EXEC PGM=FDRABRCM\n//SYSPRINT DD SYSOUT=*\n//ABRMAP   DD SYSOUT=*\n//SYSIN    DD *\n  PURGE BACKUP,VOL=(KEN001,KEN002),MAXGEN=0\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QCAPF1": {"ttr": 7960, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x94\\x04_\\x00\\x94\\x04_\\x14\\x03\\x00.\\x00\\x16\\x00\\x19\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-02-14T00:00:00", "modifydate": "1994-02-14T14:03:00", "lines": 46, "newlines": 22, "modlines": 25, "user": "TECH110"}, "text": "/* REXX Production XREF            */\nCALL DSQCIX \"START (DSQSMODE=BATCH DSQSSUBS=DSNA\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"RUN QUERY TECH110.QCAPAFS4 (FORM TECH110.FCAPAFS4\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"PRINT REPORT\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"RUN QUERY TECH110.QCAPAFS2 (FORM TECH110.FCAPAFS2\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"PRINT REPORT\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"RUN QUERY TECH110.QCAPAFS3 (FORM TECH110.FCAPAFS3\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"PRINT REPORT\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nterm:\nCALL DSQCIX \"EXIT\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "QCAPF5": {"ttr": 7962, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94\\x06\\x8f\\x00\\x94\\x06\\x8f\\x12#\\x00\\x16\\x00.\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-03-09T00:00:00", "modifydate": "1994-03-09T12:23:00", "lines": 22, "newlines": 46, "modlines": 1, "user": "TECH110"}, "text": "/* REXX Production XREF            */\nCALL DSQCIX \"START (DSQSMODE=BATCH DSQSSUBS=DSNA\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"RUN QUERY TECH110.QCAPAFS5 (FORM TECH110.FCAPAFS5\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"PRINT REPORT\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nterm:\nCALL DSQCIX \"EXIT\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "QCDLY2": {"ttr": 8193, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01-\\x00\\x00\\x00\\x922_\\x00\\x94\\x06o\\x11\\x08\\x00\\x16\\x00'\\x00\\x13\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.45", "flags": 0, "createdate": "1992-11-20T00:00:00", "modifydate": "1994-03-07T11:08:00", "lines": 22, "newlines": 39, "modlines": 19, "user": "TECH110"}, "text": "/* REXX Production XREF            */\nCALL DSQCIX \"START (DSQSMODE=BATCH DSQSSUBS=DSNA\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"RUN QUERY TECH110.QCAPDLY1 (FORM TECH110.FCAPDLY1\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"PRINT REPORT\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nterm:\nCALL DSQCIX \"EXIT\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "QCTMN1": {"ttr": 8195, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x94\\x03\\x8f\\x00\\x94\\x03\\x8f\\x15W\\x00\\x16\\x00\\x10\\x00\\x07\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-02-07T00:00:00", "modifydate": "1994-02-07T15:57:00", "lines": 22, "newlines": 16, "modlines": 7, "user": "TECH110"}, "text": "/* REXX Production XREF            */\nCALL DSQCIX \"START (DSQSMODE=BATCH DSQSSUBS=DSNA\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"RUN QUERY TECH110.QCAPTMN1 (FORM TECH110.FCAPTMN1\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"PRINT REPORT\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nterm:\nCALL DSQCIX \"EXIT\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "QCTMN2": {"ttr": 8197, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x94\\x05\\x9f\\x00\\x94\\x05\\x9f\\x12\\x15\\x00\\x19\\x00\\x16\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-02-28T00:00:00", "modifydate": "1994-02-28T12:15:00", "lines": 25, "newlines": 22, "modlines": 5, "user": "TECH110"}, "text": "/* REXX Production TMON            */\nparse upper arg mm \"/\" dd \"/\" yy;\ndate = \"'19\"yy\"-\"mm\"-\"dd\"'\";\nCALL DSQCIX \"START (DSQSMODE=BATCH DSQSSUBS=DSNA\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"RUN QUERY TECH110.QCAPTMN2 (FORM TECH110.FCAPTMN1 \"|| ,\n    \"&DATE=\"date;\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nCALL DSQCIX \"PRINT REPORT\";\nif dsq_return_code \u00ac=0 then do;\n    say dsq_message_id dsq_message_text;\n    say dsq_q_message_id dsq_q_message_text;\n    signal term;\n    end;\nterm:\nCALL DSQCIX \"EXIT\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "QSAMHIPR": {"ttr": 8199, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92\\x03\\x8f\\x00\\x92\\x03\\x8f\\x10V\\x00p\\x01G\\x00\\x11\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-02-07T00:00:00", "modifydate": "1992-02-07T10:56:00", "lines": 112, "newlines": 327, "modlines": 17, "user": "TECH110"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.KAPLAN.JEFF',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n//S EXEC ASMHCLG\n//C.SYSIN  DD *\nTEST     CSECT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK23      EQU   23\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK4095    EQU   4095\nK4096    EQU   4096\nK16384   EQU   16384\nK32752   EQU   32752\nK32756   EQU   32756\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nTEST     AMODE 24\nTEST     RMODE 24\n         SAVE  (14,12),,TEST*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING TEST,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\nOPENLIST OPEN  (IN,(INPUT),OUT,(OUTPUT))\nLOOP     GET   IN,IOAREA\n         PUT   OUT,IOAREA\n         B     LOOP\nEXIT     CLOSE (IN,,OUT)\n         L     RD,K4(,RD)\n         RETURN (14,12),RC=0\nIOAREA   DC CL80' '\nIN DCB DDNAME=IN,EODAD=EXIT,DSORG=PS,MACRF=(GM)\nOUT DCB DDNAME=OUT,DSORG=PS,MACRF=(PM)\n         END\n/*\n//G.SYSUDUMP DD SYSOUT=*\n//G.IN DD DSN=TECH110.TEST1.HIPERBAT,DISP=SHR\n//G.OUT DD DSN=TECH110.TEST.HIPERBAT,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QXREF": {"ttr": 8202, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93\\x06\\x8f\\x00\\x93\\x06\\x8f\\x16\\x07\\x00\\x15\\x00\\x12\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-03-09T00:00:00", "modifydate": "1993-03-09T16:07:00", "lines": 21, "newlines": 18, "modlines": 0, "user": "TECH110"}, "text": "EXPLAIN PLAN SET QUERYNO=1 FOR\nSELECT JOBNAME,JOBCLASS,\n       PROCJSTP,PROCSTEP,PROCNAME,\n       EXECPSTP,EXECSTEP,EXECPGM,\n       FILEDDNM,FILEACC,FILEDSN,FILEDISP,FILEMEM\nFROM BUILD.TTECHJOB,\n     BUILD.TTECHPROC,\n     BUILD.TTECHEXEC,\n     BUILD.TTECHFILE\nWHERE FILEJOBN=PROCJOBN AND\n      FILEPROC=PROCNAME AND\n      FILEJSTP=PROCJSTP AND\n      FILEPROC=EXECPROC AND\n      FILEPSTP=EXECPSTP AND\n      FILEJOBN=JOBNAME AND\n      FILEDSN LIKE 'PAA%' AND\n      EXECPGM LIKE '%' AND\n      FILEMEM LIKE '%' AND\n      PROCNAME LIKE '%' AND\n      JOBNAME LIKE '%'\nORDER BY FILEDSN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RACFUSER": {"ttr": 8204, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01$\\x00\\x00\\x00\\x91\\x07?\\x00\\x95%\\x1f\\x14T\\x01A\\x00l\\x00\\xe9\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.36", "flags": 0, "createdate": "1991-03-14T00:00:00", "modifydate": "1995-09-08T14:54:00", "lines": 321, "newlines": 108, "modlines": 233, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCL,PARM.L='XREF,LIST,AC=1'\n//C.SYSLIB DD DSN=SYSM.MACLIB,DISP=SHR\n//         DD DSN=SYSM.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nRCF      TITLE 'REXX RACFUSER PROFILE RETRIEVAL'\nRACFUSER CSECT , /* RACFUSER */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nRACFUSER AMODE 24\nRACFUSER RMODE 24\n         SAVE  (14,12),,RACFUSER*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING RACFUSER,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SLR   R9,R9 RC\n         LA    R0,DWORDS\n         GETMAIN R,LV=(0)\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING RACFWMAP,RD\n         XC    PARSEPPL(K28),PARSEPPL /* PREP PARAM SCAN */\n         XC    CMDPANS,CMDPANS\n         XC    CMDPECB,CMDPECB\n         LA    R8,PARSEPPL MAP\n         USING PPL,R8\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         MVC   PPLCBUF,CPPLCBUF\n         LA    R0,CMDPECB\n         ST    R0,PPLECB\n         LA    R0,CMDPANS\n         ST    R0,PPLANS\n         L     R0,=A(IKJPARM)\n         ST    R0,PPLPCL\n         DROP  R8\n         CALLTSSR EP=IKJPARS,MF=(E,(R8))\n         LTR   R9,RF\n         BNZ   MAINEXIT\n         L     R4,CMDPANS /* RESPONSE */\n         USING IKJPARMD,R4\n         L     R5,USERPARM\n         LH    R6,USERPARM+K4\n         TM    USERPARM+K6,X80 UID FOUND\n         BZ    UIDERROR\n         STC   R6,USERID /* FOR RACF */\n         BCTR  R6,K0\n         EX    R6,MOVEUID\n         LA    R1,CMDPANS\n         IKJRLSA (R1)\n         LA    R5,RACFWORK\n         MVC   RACFWORK(K4),=A(K96)\n         LA    R6,LXTEINTY\n         MVC   K0(LLLEINTY,R6),LSTEINTY MAKE RENT\n         LA    R7,LXTFNAME\n         MVC   K0(LLLFNAME,R7),FNAME\n         LA    R7,LXTFINT\n         MVC   K0(LLLFINT,R7),FINT\n         LA    R7,LXTFAUDT\n         MVC   K0(LLLFAUDT,R7),FAUDT\n         LA    R7,LXTFSPEC\n         MVC   K0(LLLFSPEC,R7),FSPEC\n         LA    R7,LXTFOPER\n         MVC   K0(LLLFOPER,R7),FOPER\n         LA    R7,LXTFREVK\n         MVC   K0(LLLFREVK,R7),FREVK\n         LA    R7,LXTFGACC\n         MVC   K0(LLLFGACC,R7),FGACC\n         LA    R7,DOUTLINE\n         MVC   K0(CULEN,R7),COUTLINE\n         DROP  R4\n         LA    R4,USERID\n         ICHEINTY LOCATE,TYPE='USR',ENTRY=(R4),RELEASE=1.8.1,          X\n               WKAREA=(R5),                                            X\n               ACTIONS=(FNAME,FINT,FAUDT,FSPEC,FOPER,FREVK,FGACC),     X\n               OPTIONS=(ACTION),MF=(E,(R6))\n         LTR   R9,RF\n         BNZ   NOUSER\n         LA    R1,RACFWORK+K32\n         CLI   K0(R1),C' ' ANYTHING THERE\n         BE    NODATA\n         MVC   DUID(K20),K0(R1)\n         LA    R1,RACFWORK+K56\n         CLI   K0(R1),C' ' ANYTHING THERE\n         BE    DOATTRIB\n         CLI   K0(R1),X'FF' ANYTHING THERE\n         BE    DOATTRIB\n         SLR   R0,R0\n         IC    R0,RACFWORK+K56\n         CVD   R0,WORK\n         UNPK  WORK(K3),WORK+K6(K2)\n         MVC   DPSWDINT(K2),WORK+K1\n         OI    DPSWDINT+K1,C'0'\nDOATTRIB EQU * *\n         LA    RF,DATTRIB\n         LA    R1,RACFWORK+61\n         CLI   K0(R1),X'00' ANYTHING THERE\n         BE    DA1\n         MVC   K0(K8,RF),=C'Auditor '\n         LA    RF,K8(,RF)\nDA1      EQU   * *\n         LA    R1,RACFWORK+66\n         CLI   K0(R1),X'00' ANYTHING THERE\n         BE    DA2\n         MVC   K0(K8,RF),=C'Special '\n         LA    RF,K8(,RF)\nDA2      EQU   * *\n         LA    R1,RACFWORK+71\n         CLI   K0(R1),X'00' ANYTHING THERE\n         BE    DA3\n         MVC   K0(K11,RF),=C'Operations '\n         LA    RF,K11(,RF)\nDA3      EQU   * *\n         LA    R1,RACFWORK+76\n         CLI   K0(R1),X'00' ANYTHING THERE\n         BE    DA4\n         MVC   K0(K8,RF),=C'Revoked '\n         LA    RF,K8(,RF)\nDA4      EQU   * *\n         LA    R1,RACFWORK+81\n         CLI   K0(R1),X'00' ANYTHING THERE\n         BE    DA5\n         MVC   K0(K6,RF),=C'GRPACC'\n         LA    RF,K6(,RF)\nDA5      EQU   * *\n         LA    R0,DULEN\n         LA    R1,DOUTLINE\n         STM   R0,R1,VALUELEN ...\n         LINK  EP=IKJCT441,PARAM=(ECODE,NAMEPTR,NAMELEN,VALUEPTR,      X\n               VALUELEN,TOKEN),VL=1\n         LTR   R9,RF is rexx env active\n         BZ    MAINEXIT yes leave\n         LA    R0,DULEN\n         LA    R1,DOUTLINE\n         TPUT  (1),(0)\n         B     MAINEXIT\nNOUSER   LA    R0,L'NOUSERM\n         LA    R1,NOUSERM\n         STM   R0,R1,VALUELEN ...\n         LINK  EP=IKJCT441,PARAM=(ECODE,NAMEPTR,NAMELEN,VALUEPTR,      X\n               VALUELEN,TOKEN),VL=1\n         LTR   R9,RF is rexx env active\n         BZ    MAINEXIT yes leave\n         LA    R0,L'NOUSERM\n         LA    R1,NOUSERM\n         TPUT  (1),(0)\n         B     MAINEXIT\nNODATA   LA    R0,L'NODATAM\n         LA    R1,NODATAM\n         STM   R0,R1,VALUELEN ...\n         LINK  EP=IKJCT441,PARAM=(ECODE,NAMEPTR,NAMELEN,VALUEPTR,      X\n               VALUELEN,TOKEN),VL=1\n         LTR   R9,RF is rexx env active\n         BZ    MAINEXIT yes leave\n         LA    R0,L'NODATAM\n         LA    R1,NODATAM\n         TPUT  (1),(0)\n         B     MAINEXIT\nUIDERROR LA    R9,K255 /* UID NOT PRESENT */\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         LA    R0,DWORDS\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nMOVEUID  MVC   USERID+K1(*-*),K0(R5) ACQUIRE USERID\nNOUSERM  DC    C'Invalid TSO/E userid entered.'\nNODATAM  DC    C'RACF database programmer name field missing.'\n         LTORG\nFNAME    ICHEACTN FIELD=PGMRNAME,RELEASE=1.8.1\nLLLFNAME EQU   *-FNAME\nFINT     ICHEACTN FIELD=PASSINT,RELEASE=1.8.1\nLLLFINT  EQU   *-FINT\nFAUDT    ICHEACTN FIELD=FLAG6,RELEASE=1.8.1\nLLLFAUDT EQU   *-FAUDT\nFSPEC    ICHEACTN FIELD=FLAG2,RELEASE=1.8.1\nLLLFSPEC EQU   *-FSPEC\nFOPER    ICHEACTN FIELD=FLAG3,RELEASE=1.8.1\nLLLFOPER EQU   *-FOPER\nFREVK    ICHEACTN FIELD=FLAG4,RELEASE=1.8.1\nLLLFREVK EQU   *-FREVK\nFGACC    ICHEACTN FIELD=FLAG5,RELEASE=1.8.1\nLLLFGACC EQU   *-FGACC\nLSTEINTY ICHEINTY LOCATE,TYPE='USR',ENTRY=*-*,RELEASE=1.8.1,           X\n               WKAREA=*-*,ACTIONS=(FNAME,FINT,FAUDT,FSPEC,FOPER,FREVK,FX\n               GACC),MF=L\nLLLEINTY EQU   *-LSTEINTY\nIKJPARM  IKJPARM\nUSERPARM IKJPOSIT USERID,UPPERCASE,PROMPT='Required TSO/E userid ?'\n         IKJENDP\nCOUTLINE EQU   * *\n         DC    C'Userid: '\n         DC    CL20' ' userid\n         DC    C' Password Interval: '\n         DC    CL2'NA' password interval\n         DC    C' Attributes: '\n         DC    C'None                                     '\nCULEN    EQU   *-COUTLINE\nREXXSERV EQU   * *\nECODE    DC    A(TSVEUPDT) Set value\nNAMEPTR  DC    A(VARNAME)\nNAMELEN  DC    F'5'\nVALUELEN DC    A(*-*) Keep together\nVALUEPTR DC    A(*-*)\nTOKEN    DC    F'0'\nVARNAME  DC    C'WHOIS' Rexx var name\nRACFWMAP DSECT\nSAVEAREA DC    18F'0'\nWORK     DC    D'0'\nCMDPECB  DC    A(K0)\nCMDPANS  DC    A(K0)\nPARSEPPL DC    (K28)AL1(K0) PARSE PPL\nLXTEINTY DC    (LLLEINTY)AL1(K0)\nRACFWORK DC    A(K96),(K92)AL1(K0)\nLXTFNAME DC    (LLLFNAME)AL1(K0)\nLXTFINT  DC    (LLLFINT)AL1(K0)\nLXTFAUDT DC    (LLLFAUDT)AL1(K0)\nLXTFSPEC DC    (LLLFSPEC)AL1(K0)\nLXTFOPER DC    (LLLFOPER)AL1(K0)\nLXTFREVK DC    (LLLFREVK)AL1(K0)\nLXTFGACC DC    (LLLFGACC)AL1(K0)\nUSERID   DC    AL1(*-*),CL8' '\nDOUTLINE EQU   * *\n         DC    C'Userid: '\nDUID     DC    CL20' ' userid\n         DC    C' Password Interval: '\nDPSWDINT DC    CL2' ' password interval\n         DC    C' Attributes: '\nDATTRIB  DC    C'None                                     '\nDULEN    EQU   *-DOUTLINE\nDWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         IKJTSVT\n         CVT   DSECT=YES\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(WHOIS),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RACFUSR1": {"ttr": 8449, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x00\\x00\\x91\\x07?\\x00\\x92\\x11O\\x16C\\x00\\xd0\\x00l\\x00y\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "1991-03-14T00:00:00", "modifydate": "1992-04-23T16:43:00", "lines": 208, "newlines": 108, "modlines": 121, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST,AC=1'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nRCF      TITLE 'REXX RACFUSER PROFILE RETRIEVAL'\nRACFUSER CSECT , /* RACFUSER */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nRACFUSER AMODE 31\nRACFUSER RMODE 24\n         SAVE  (14,12),,RACFUSER*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING RACFUSER,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SLR   R9,R9 RC\n         LA    R0,DWORDS\n         GETMAIN R,LV=(0)\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING RACFWMAP,RD\n         XC    PARSEPPL(K28),PARSEPPL /* PREP PARAM SCAN */\n         XC    CMDPANS,CMDPANS\n         XC    CMDPECB,CMDPECB\n         LA    R8,PARSEPPL MAP\n         USING PPL,R8\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         MVC   PPLCBUF,CPPLCBUF\n         LA    R0,CMDPECB\n         ST    R0,PPLECB\n         LA    R0,CMDPANS\n         ST    R0,PPLANS\n         L     R0,=A(IKJPARM)\n         ST    R0,PPLPCL\n         DROP  R8\n         CALLTSSR EP=IKJPARS,MF=(E,(R8))\n         LTR   R9,RF\n         BNZ   MAINEXIT\n         L     R4,CMDPANS /* RESPONSE */\n         USING IKJPARMD,R4\n         L     R5,USERPARM\n         LH    R6,USERPARM+K4\n         TM    USERPARM+K6,X80 UID FOUND\n         BZ    UIDERROR\n         STC   R6,USERID /* FOR RACF */\n         BCTR  R6,K0\n         EX    R6,MOVEUID\n         LA    R1,CMDPANS\n         IKJRLSA (R1)\n         LA    R5,RACFWORK\n         MVC   RACFWORK(K4),=A(K96)\n         LA    R6,LXTEINTY\n         LA    R7,LXTFNAME\n         MVC   K0(LLLEINTY,R6),LSTEINTY MAKE RENT\n         MVC   K0(LLLFNAME,R7),FNAME\n         DROP  R4\n         LA    R4,USERID\n         ICHEINTY LOCATE,TYPE='USR',ENTRY=(R4),RELEASE=1.8.1,          X\n               WKAREA=(R5),ACTIONS=(FNAME),OPTIONS=(ACTION),MF=(E,(R6))\n         LTR   R9,RF\n         BNZ   NOUSER\n         LA    R1,RACFWORK+K32\n         CLI   K0(R1),C' ' ANYTHING THERE\n         BE    NODATA\n         LA    R0,K20\n         STM   R0,R1,VALUELEN ...\n*        TPUT  (1),(0)\nMAINEXT1 LINK  EP=IKJCT441,PARAM=(ECODE,NAMEPTR,NAMELEN,VALUEPTR,      X\n               VALUELEN,TOKEN),VL=1\n*        LTR   R9,RF ignore this RC\n         B     MAINEXIT\n*OUSER   TPUT  NOUSERM,L'NOUSERM\nNOUSER   LA    R0,L'NOUSERM\n         LA    R1,NOUSERM\n         STM   R0,R1,VALUELEN ...\n         B     MAINEXT1\n*ODATA   TPUT  NODATAM,L'NODATAM\nNODATA   LA    R0,L'NODATAM\n         LA    R1,NODATAM\n         STM   R0,R1,VALUELEN ...\n         B     MAINEXT1\nUIDERROR LA    R9,K255 /* UID NOT PRESENT */\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         LA    R0,DWORDS\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nMOVEUID  MVC   USERID+K1(*-*),K0(R5) ACQUIRE USERID\nNOUSERM  DC    C'Invalid TSO/E userid entered.'\nNODATAM  DC    C'RACF database programmer name field missing.'\n         LTORG\nECODE    DC    A(TSVEUPDT) Set value\nNAMEPTR  DC    A(NAME)\nNAMELEN  DC    F'5'\nVALUELEN DC    A(*-*) Keep together\nVALUEPTR DC    A(*-*)\nTOKEN    DC    F'0'\nNAME     DC    C'WHOIS' Rexx var name\nFNAME    ICHEACTN FIELD=PGMRNAME,RELEASE=1.8.1\nLLLFNAME EQU   *-FNAME\nLSTEINTY ICHEINTY LOCATE,TYPE='USR',ENTRY=*-*,RELEASE=1.8.1,           X\n               WKAREA=*-*,ACTIONS=(FNAME),MF=L\nLLLEINTY EQU   *-LSTEINTY\nIKJPARM  IKJPARM\nUSERPARM IKJPOSIT USERID,UPPERCASE,PROMPT='Required TSO/E userid ?'\n         IKJENDP\nRACFWMAP DSECT\nSAVEAREA DC    18F'0'\nCMDPECB  DC    A(K0)\nCMDPANS  DC    A(K0)\nPARSEPPL DC    (K28)AL1(K0) PARSE PPL\nLXTEINTY DC    (LLLEINTY)AL1(K0)\nRACFWORK DC    A(K96),(K92)AL1(K0)\nLXTFNAME DC    (LLLFNAME)AL1(K0)\nUSERID   DC    AL1(*-*),CL8' '\nDWORDS   EQU   ((((*-SAVEAREA)+7)/8)*8)\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         CVT   DSECT=YES\n         IKJTSVT\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(WHOISX),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RBARESET": {"ttr": 8453, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x924O\\x00\\x924O\\x18#\\x00u\\x00\\xdd\\x00\\x1a\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-12-09T00:00:00", "modifydate": "1992-12-09T18:23:00", "lines": 117, "newlines": 221, "modlines": 26, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL\n//C.SYSIN  DD *\nRBA      TITLE 'RESET HI-USED RBA TO 0 FOR REUSABLE CLUTR'\nRBARESET CSECT , /* RESET HI-USED RBA */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX00      EQU   X'00'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nRBARESET AMODE 24\nRBARESET RMODE 24\n         SAVE  (14,12),,RBARESET*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING RBARESET,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         GENCB BLK=ACB,AM=VSAM,DDNAME=RESET,LOC=BELOW,                 X\n               MACRF=(KEY,SEQ,OUT,RST,NSR)\n         LTR   RF,RF /* OKAY */\n         BNZ   FGENCB\n         LR    R2,R1 SAVE PTR\n         OPEN  ((R2)),MODE=24\n         LTR   RF,RF /* OPEN OKAY */\n         BZ    CLOSE\n         CL    RF,=A(K4) WARNING\n         BH    FOPEN NG\nCLOSE    CLOSE ((R2)),MODE=24\n         SLR   RF,RF\nRETURN   L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 OPEN FAILURE\n         B     RETURN\nFGENCB   LA    RF,K28 GENC FAILURE\n         B     RETURN\n         LTORG\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(RBARESET),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RBATEST": {"ttr": 8456, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924O\\x00\\x924O\\x18 \\x00\\x04\\x00\\x04\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-09T00:00:00", "modifydate": "1992-12-09T18:20:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=A,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=RBARESET\n//RESET    DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RCTMN2": {"ttr": 8458, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01W\\x00\\x00\\x00\\x94\\x05\\x9f\\x00\\x94\\x12\\x9f\\x117\\x01&\\x00\\r\\x01!\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.87", "flags": 0, "createdate": "1994-02-28T00:00:00", "modifydate": "1994-05-09T11:37:00", "lines": 294, "newlines": 13, "modlines": 289, "user": "TECH110"}, "text": "/* REXX Capacity Planning Daily TMON Data Summary */\ntrue=\"1\";\nfalse=\"0\";\nfirst_switch=true;\n\"EXECIO * DISKR INPUT (STEM INPUT. FINIS\";\ntotl_count=0;\narea_count=0;\ngrand_trans_count=0;\ngrand_resp01_count=0;\ngrand_resp12_count=0;\ngrand_resp23_count=0;\ngrand_resp34_count=0;\ngrand_respg4_count=0;\ngrand_resp_time_sum=0;\ngrand_resp_time_ctr=0;\ngrand_resp_time_avg=0;\ngrand_file_count=0;\ngrand_io_time=0;\ngrand_cpu_time=0;\nprev_area_title=\"\";\nprev_area=\"\";\narea_trans_count=0;\narea_resp_time_sum=0;\narea_resp_time_ctr=0;\narea_resp_time_avg=0;\narea_resp01_count=0;\narea_resp12_count=0;\narea_resp23_count=0;\narea_resp34_count=0;\narea_respg4_count=0;\narea_file_count=0;\narea_io_time=0;\narea_cpu_time=0;\ndo i = 1 to input.0;\n      /* parse TMON output report */\n      parse var input.i cc 2 date 14 day 19 area 51 remainder;\n      date=strip(date);day=strip(day);area=strip(area);\n      remainder=strip(remainder);\n      /* eliminate spurious lines */\n      if area=\"\" | area=\" \" then iterate i;\n      if substr(remainder,1,4)=\"PAGE\" then iterate i;\n      if date\u00ac=\"\" & substr(date,1,2)\u00ac=\"19\" then iterate;\n      if substr(date,1,2)=\"19\" then do;\n          savedate=date;\n          saveday=day;\n          end;\n      if substr(area,1,1)=\"*\" then iterate i; /* skip alls */\n      parse var remainder trans_count resp_time file_count ,\n         io_time cpu_time resp01 resp12 resp23 resp34 respg4 . ;\n      xcheck=word(area,1);\n      if xcheck=\"Bensalem\" | xcheck=\"Green\" | xcheck=\"Lu\" | ,\n         xcheck=\"Playback\" then ,\n           xclude=true; /* ignore long-running */\n         else xclude=false;\n if \u00acxclude then do;\n      totl_count=totl_count+1;\n      grand_trans_count=grand_trans_count+trans_count;\n      grand_resp_time_sum=grand_resp_time_sum + ,\n           ((resp_time*trans_count));\n      grand_resp_time_ctr=grand_resp_time_ctr+1.0;\n      grand_resp_time_avg=grand_resp_time_avg+resp_time;\n      grand_resp01_count=grand_resp01_count+resp01;\n      grand_resp12_count=grand_resp12_count+resp12;\n      grand_resp23_count=grand_resp23_count+resp23;\n      grand_resp34_count=grand_resp34_count+resp34;\n      grand_respg4_count=grand_respg4_count+respg4;\n      grand_file_count=grand_file_count+file_count;\n      grand_io_time=grand_io_time+io_time;\n      grand_cpu_time=grand_cpu_time+cpu_time;\n   end;\n      parse var area area_title . ;\n      if area_title\u00ac=prev_area_title & \u00acfirst_switch then do;\n          area_count=area_count+1; /* sum total num of areas */\n          save.area_count=\"(\"prev_area\")\" area_trans_count ,\n             area_resp_time_avg ,\n             area_resp_time_sum area_resp_time_ctr ,\n             area_file_count area_io_time area_cpu_time ,\n             area_resp01_count ,\n             area_resp12_count ,\n             area_resp23_count ,\n             area_resp34_count ,\n             area_respg4_count;\n          area_trans_count=0;\n          area_resp_time_sum=0;\n          area_resp_time_ctr=0;\n          area_resp_time_avg=0;\n          area_resp01_count=0;\n          area_resp12_count=0;\n          area_resp23_count=0;\n          area_resp34_count=0;\n          area_respg4_count=0;\n          area_file_count=0;\n          area_io_time=0;\n          area_cpu_time=0;\n      end;\n      temp_ctr=area_count+1; /* ctr to control saved detail data */\n      area_trans_count=area_trans_count+trans_count;\narea_resp_time_sum=area_resp_time_sum+((resp_time*trans_count));\n      area_resp_time_ctr=area_resp_time_ctr+1.0;\n      area_resp_time_avg=area_resp_time_avg+resp_time;\n      area_resp01_count=area_resp01_count+resp01;\n      area_resp12_count=area_resp12_count+resp12;\n      area_resp23_count=area_resp23_count+resp23;\n      area_resp34_count=area_resp34_count+resp34;\n      area_respg4_count=area_respg4_count+respg4;\n      area_file_count=area_file_count+file_count;\n      area_io_time=area_io_time+io_time;\n      area_cpu_time=area_cpu_time+cpu_time;\n      first_switch=false;\n      prev_area_title=area_title;\n      prev_area=area;\n      if symbol(\"detail.temp_ctr\")=\"LIT\" then ,\n            detail.temp_ctr=\"\";\n     temp=  ((resp_time*trans_count)/3600.0);\n     temp2=subword(area,2);\n     prcheck=word(area,1);\n     if prcheck=\"Bensalem\"|prcheck=\"Green\" then temp2=\"\";\n     if temp2=\"\" | temp2=\" \" then temp2=area;\n      detail.temp_ctr=detail.temp_ctr || ,\n            \"(\"temp2\")\" || ,\n            \"(\"trans_count\")\" || ,\n            \"(\"resp_time\")\" || ,\n            \"(\"temp\")\" || ,\n            \"(\"file_count\")\" || ,\n            \"(\"cpu_time\")\" || ,\n            \"(\"io_time\")\" || ,\n            \"(\"resp01\")\" || ,\n            \"(\"respg4\")\" || ,\n            \"(\"resp12\")\" || ,\n            \"(\"resp23\")\" || ,\n            \"(\"resp34\")\";\nend;\n/* final sums */\narea_count=area_count+1; /* sum total num of areas */\nsave.area_count=\"(\"prev_area\")\" area_trans_count ,\n      area_resp_time_avg ,\n      area_resp_time_sum area_resp_time_ctr ,\n      area_file_count area_io_time area_cpu_time ,\n      area_resp01_count ,\n      area_resp12_count ,\n      area_resp23_count ,\n      area_resp34_count ,\n      area_respg4_count;\noutput.1=copies(\" \",60)\"CICS Activity Report for\"  saveday  savedate;\n\"EXECIO 1 DISKW OUTPUT (STEM output.\";\noutput.1=\"\";\n\"EXECIO 1 DISKW OUTPUT (STEM output.\";\noutput.1= ,\n  left(\"      Area\",16)   left(\"TrnsCt\",6) left(\"  Pct\",7)\"  \" ,\n         left(\"AvgRsp\",6)\"  \" ,\n         left(\"Trn0-1\",6) left(\"Pct 0-1\",7)\"  \" ,\n         left(\"Tr1-2\",5) left(\"Pct 1-2\",7)\"  \" ,\n         left(\"Tr2-3\",5) left(\"Pct 2-3\",7)\"  \" ,\n         left(\"Tr3-4\",5) left(\"Pct 3-4\",7)\"  \" ,\n         left(\"TrGt4\",5) left(\"Pct Gt4\",7)\"  \" ,\n         left(\"File I/O\",8) left(\"  Pct\",7)\"  \" ,\n         left(\"CPU/Hr\",6) left(\"  Pct\",7);\n\"EXECIO 1 DISKW OUTPUT (STEM output.\";\nsep=copies(\"-\",16)   copies(\"-\",6) copies(\"-\",7)\"  \" ,\n         copies(\"-\",6)\"  \" ,\n         copies(\"-\",6) copies(\"-\",7)\"  \" ,\n         copies(\"-\",5) copies(\"-\",7)\"  \" ,\n         copies(\"-\",5) copies(\"-\",7)\"  \" ,\n         copies(\"-\",5) copies(\"-\",7)\"  \" ,\n         copies(\"-\",5) copies(\"-\",7)\"  \" ,\n         copies(\"-\",8) copies(\"-\",7)\"  \" ,\n         copies(\"-\",6) copies(\"-\",7);\noutput.1=sep;\n\"EXECIO 1 DISKW OUTPUT (STEM output.\";\nprinting_areas=\"\";\ndo i = 1 to area_count;\n parse var save.i \"(\" area \")\" trans respavg resp count file io cpu ,\n           resp01 resp12 resp23 resp34 respg4;\n    if count>1 then area=word(area,1); /* take just first word */\n    printchek=word(area,1);\n    if printchek=\"Bensalem\"|printchek=\"Green\" then do;\n          printing_areas=printing_areas i;\n          iterate i;\n          end;\n    if printchek=\"Playback\" then do; /* ignore */\n          iterate i;\n          end;\n    area=left(area,16);\n    trans=right(format(trans,9,0),6);\n    resp01=right(format(resp01,9,0),6);\n    resp12=right(format(resp12,9,0),5);\n    resp23=right(format(resp23,9,0),5);\n    resp34=right(format(resp34,9,0),5);\n    respg4=right(format(respg4,9,0),5);\n    respavg=right(format(respavg/count,9,2),6);\n    resp =right(format(resp/trans,9,2),6);\n    file =right(format(file,9,0),8);\n/*  cpu  =right(trunc(cpu,2),12);\n    io   =right(trunc(io,9,2),12);  */\n    hcpu  =right(format(cpu/3600.0,7,2),6);\n    hio   =right(format(io/3600.0,7,2),10);\n    ptrans=right(format((trans/grand_trans_count)*100.0,9,2)\"%\",7)\"  \";\n    presp01=right(format((resp01/trans)*100.0,9,2)\"%\",7);\n    presp12=right(format((resp12/trans)*100.0,9,2)\"%\",7);\n    presp23=right(format((resp23/trans)*100.0,9,2)\"%\",7)\"  \";\n    presp34=right(format((resp34/trans)*100.0,9,2)\"%\",7)\"  \";\n    prespg4=right(format((respg4/trans)*100.0,9,2)\"%\",7);\n    presp =right(format((resp/grand_resp_time_sum)*100.0,9,2)\"%\",7);\n    pfile =right(format((file/grand_file_count)*100.0,9,2)\"%\",7);\n    pcpu  =right(format((cpu/grand_cpu_time)*100.0,9,2)\"%\",7);\n    pio   =right(format((io/grand_io_time)*100.0,9,2)\"%\",7);\noutput.1 = area   trans ptrans   resp\"  \"   resp01 presp01\"  \" ,\n    resp12 presp12\"  \" ,\n    resp23 presp23   resp34 presp34   respg4 prespg4\"  \" ,\n    file pfile\"  \" ,\n    hcpu pcpu;\n\"EXECIO 1 DISKW OUTPUT (STEM output.\";\noutput.1=sep;\n\"EXECIO 1 DISKW OUTPUT (STEM output.\";\nif area=\"Warehouse\" then do;\n     printctr=words(printing_areas);\n     do z = 1 to printctr;\n        printware=word(printing_areas,z);\n        detail.i=detail.i detail.printware;\n     end;\nend;\ndo while(detail.i\u00ac=\"\");\ndo l = 1 to 12;\n      parse var detail.i \"(\" data.l \")\" detail.i;\nend l;\ndata.1=right(substr(data.1,1,14),16);\ndata.2=right(format(data.2,9,0),6);\ndata.3=right(format(data.3,9,2),6)\"  \";\ndata.8=right(format(data.8,9,0),6);\ndata.9=right(format(data.9,9,0),5);\ndata.10=right(format(data.10,9,0),5);\ndata.11=right(format(data.11,9,0),5);\ndata.12=right(format(data.12,9,0),5);\ndata.4=right(format(data.4,9,2),12);\ndata.5=right(format(data.5,9,0),8);\nptrans=right(format((data.2/trans)*100.0,9,2)\"%\",7)\"  \";\npresp01=right(format((data.8/data.2)*100.0,9,2)\"%\",7);\npresp12=right(format((data.10/data.2)*100.0,9,2)\"%\",7);\npresp23=right(format((data.11/data.2)*100.0,9,2)\"%\",7)\"  \";\npresp34=right(format((data.12/data.2)*100.0,9,2)\"%\",7)\"  \";\nprespg4=right(format((data.9/data.2)*100.0,9,2)\"%\",7);\nif resp=0.0 then presp=right(format(100.00,9,2)\"%\",7);\nelse ,\npresp =right(format((data.4/resp)*100.0,9,2)\"%\",7);\nif file=0.0 then pfile=right(format(100.00,9,2)\"%\",7);\nelse ,\npfile =right(format((data.5/file)*100.0,9,2)\"%\",7);\nif cpu=0.0 then pcpu=right(format(100.00,9,2)\"%\",7);\nelse ,\npcpu  =right(format((data.6/cpu)*100.0,9,2)\"%\",7);\nif io=0.0 then pio=right(format(100.00,9,2)\"%\",7);\nelse ,\npio   =right(format((data.7/io)*100.0,9,2)\"%\",7);\ndata.6=right(format(data.6/3600.0,7,2),6);\ndata.7=right(format(data.7/3600.0,7,2),10);\noutput.1=data.1   data.2 ptrans   data.3   data.8 presp01\"  \" ,\n    data.10 presp12\"  \" ,\n    data.11 presp23   data.12 presp34   data.9 prespg4\"  \" ,\n    data.5 pfile\"  \" ,\n    data.6 pcpu;\n\"EXECIO 1 DISKW OUTPUT (STEM output.\";\nend; /* end while */\noutput.1=\"\";\n\"EXECIO 1 DISKW OUTPUT (STEM output.\";\noutput.1=\"\";\n\"EXECIO 1 DISKW OUTPUT (STEM output.\";\nend i;\noutput.1=sep;\n\"EXECIO 1 DISKW OUTPUT (STEM output.\";\npct100=\"100.00%\";\npgresp01= ,\n right(format((grand_resp01_count/grand_trans_count)*100.0,9,2)\"%\",7);\npgresp12= ,\n right(format((grand_resp12_count/grand_trans_count)*100.0,9,2)\"%\",7);\npgresp23= ,\n right(format((grand_resp23_count/grand_trans_count)*100.0,9,2)\"%\",7);\npgresp34= ,\n right(format((grand_resp34_count/grand_trans_count)*100.0,9,2)\"%\",7);\npgrespg4= ,\n right(format((grand_respg4_count/grand_trans_count)*100.0,9,2)\"%\",7);\ntemp1=right(format(grand_trans_count,9,0),6) right(pct100,7)\"  \";\ntemp2=right(format(grand_resp_time_avg/totl_count,9,2),6)\"  \";\ntemp5=right(format(grand_resp_time_sum/grand_trans_count,9,2),6)\"  \";\ntemp3=right(format(grand_resp01_count,9,0),6) pgresp01\"  \";\ntemp4=right(format(grand_resp12_count,9,0),5) pgresp12\"  \";\noutput.1=left(\"  Grand Totals\",16)   temp1 temp5 temp3 temp4 ,\n  right(format(grand_resp23_count,9,0),5) pgresp23\"  \" ,\n  right(format(grand_resp34_count,9,0),5) pgresp34\"  \" ,\n  right(format(grand_respg4_count,9,0),5) pgrespg4\"  \" ,\n  right(format(grand_file_count,9,0),8) right(pct100,7)\"  \" ,\n  right(format(grand_cpu_time/3600.0,7,2),6) right(pct100,7);\n\"EXECIO 1 DISKW OUTPUT (STEM output.\";\n\"EXECIO 0 DISKW OUTPUT (FINIS\";\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RCXCL": {"ttr": 8707, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x93\\x12\\x7f\\x00\\x93\\x14\\x1f\\tV\\x00\\x1c\\x00\\r\\x00\\x19\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1993-05-07T00:00:00", "modifydate": "1993-05-21T09:56:00", "lines": 28, "newlines": 13, "modlines": 25, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//*\n//* REXX EXEC COMPILE AND LINK\n//* SUBSTITUTE YOUR CSECT NAME IN RCXC PARM CSECT PARAMETER\n//*\n//C EXEC PGM=RCXC,REGION=6M,\n// PARM='CONDENSE(YES) CSECT(NWALLOC1) LIST(YES) XREF(YES) BOUNDS(1,72)X\n//             '\n//STEPLIB  DD DSN=SYSM.RCX.V2R1M0.RCXLOAD,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//RCXPRINT DD SYSOUT=*\n//RCXOBJ   DD DSN=&&SYSLIN,UNIT=VIO,DISP=(NEW,PASS),\n//  SPACE=(TRK,(2,1)),LRECL=80,RECFM=FB,BLKSIZE=3200\n//RCXIN    DD DSN=TECH103.USER.CNTLLIB,DISP=SHR\n//L       EXEC PGM=IEWL,COND=(5,LT,C),REGION=6M,\n//             PARM='LIST,LET,XREF,MAP'\n//SYSLIB   DD  DSN=SYSM.RCX.V2R1M0.RCXNCAL,DISP=SHR\n//SYSLIN   DD  DSN=&&SYSLIN,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  SPACE=(CYL,(1,1,1)),DSN=&LOAD(X),DISP=(,PASS),\n//             UNIT=SYSDA,DCB=BUFNO=1\n//SYSUT1   DD  DSN=&SYSUT1,SPACE=(1024,(120,120),,,ROUND),UNIT=VIO,\n//             DCB=BUFNO=1\n//SYSPRINT DD  SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REFRESAA": {"ttr": 8709, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x912\\x1f\\x00\\x912\\x1f\\tY\\x00d\\x06\\x9e\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-11-17T00:00:00", "modifydate": "1991-11-17T09:59:00", "lines": 100, "newlines": 1694, "modlines": 0, "user": "TECH110"}, "text": "//REFRJOB JOB (5304010530000000),'TECH.SUPPORT',\n// NOTIFY=TECH110,CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//STEP1 EXEC PGM=FDRCOPY,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//DISKT DD DSN=SYSM.PARMLIB,DISP=SHR\n//TAPET DD DSN=SYSA.PARMLIB,DISP=SHR\n//SYSPRINU DD SYSOUT=*\n//DISKU DD DSN=SYSM.PROCLIB,DISP=SHR\n//TAPEU DD DSN=SYSA.PROCLIB,DISP=SHR\n//SYSIN DD *\n  COPY TYPE=DSF,ENQERR=PROCESS,DSNENQ=NONE\n  SELECT DSN=SYS1.PARMLIB,TAPEDD=T\n  SELECT DSN=SYS1.PROCLIB,TAPEDD=U\n/*\n//STEP2 EXEC PGM=FDRCOPY,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSPRINA DD SYSOUT=*\n//DISKA DD DSN=SYSM.TECH.COMMON.EXECLIB,DISP=SHR\n//TAPEA DD DSN=SYSA.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSPRINB DD SYSOUT=*\n//DISKB DD DSN=SYSM.TECH.COMMON.HELP,DISP=SHR\n//TAPEB DD DSN=SYSA.TECH.COMMON.HELP,DISP=SHR\n//SYSPRINC DD SYSOUT=*\n//DISKC DD DSN=SYSM.TECH.COMMON.ISPMLIB,DISP=SHR\n//TAPEC DD DSN=SYSA.TECH.COMMON.ISPMLIB,DISP=SHR\n//SYSPRIND DD SYSOUT=*\n//DISKD DD DSN=SYSM.TECH.COMMON.ISPPLIB,DISP=SHR\n//TAPED DD DSN=SYSA.TECH.COMMON.ISPPLIB,DISP=SHR\n//SYSPRINE DD SYSOUT=*\n//DISKE DD DSN=SYSM.TECH.COMMON.ISPPPLIB,DISP=SHR\n//TAPEE DD DSN=SYSA.TECH.COMMON.ISPPPLIB,DISP=SHR\n//SYSPRINF DD SYSOUT=*\n//DISKF DD DSN=SYSM.TECH.COMMON.ISPSLIB,DISP=SHR\n//TAPEF DD DSN=SYSA.TECH.COMMON.ISPSLIB,DISP=SHR\n//SYSPRING DD SYSOUT=*\n//DISKG DD DSN=SYSM.TECH.COMMON.ISPTLIB,DISP=SHR\n//TAPEG DD DSN=SYSA.TECH.COMMON.ISPTLIB,DISP=SHR\n//SYSPRINH DD SYSOUT=*\n//DISKH DD DSN=SYSM.TECH.COMMON.LOADLIB,DISP=SHR\n//TAPEH DD DSN=SYSA.TECH.COMMON.LOADLIB,DISP=SHR\n//SYSPRINI DD SYSOUT=*\n//DISKI DD DSN=SYSM.TECH.COMMON.LPALIB,DISP=SHR\n//TAPEI DD DSN=SYSA.TECH.COMMON.LPALIB,DISP=SHR\n//SYSPRINJ DD SYSOUT=*\n//DISKJ DD DSN=SYSM.TECH.COMMON.PARMLIB,DISP=SHR\n//TAPEJ DD DSN=SYSA.TECH.COMMON.PARMLIB,DISP=SHR\n//SYSPRINK DD SYSOUT=*\n//DISKK DD DSN=SYSM.TECH.COMMON.PROCLIB,DISP=SHR\n//TAPEK DD DSN=SYSA.TECH.COMMON.PROCLIB,DISP=SHR\n//SYSIN DD *\n  COPY TYPE=DSF,ENQERR=PROCESS,DSNENQ=NONE\n  SELECT DSN=SYS1.TECH.COMMON.EXECLIB,TAPEDD=A\n  SELECT DSN=SYS1.TECH.COMMON.HELP,TAPEDD=B\n  SELECT DSN=SYS1.TECH.COMMON.ISPMLIB,TAPEDD=C\n  SELECT DSN=SYS1.TECH.COMMON.ISPPLIB,TAPEDD=D\n  SELECT DSN=SYS1.TECH.COMMON.ISPPPLIB,TAPEDD=E\n  SELECT DSN=SYS1.TECH.COMMON.ISPSLIB,TAPEDD=F\n  SELECT DSN=SYS1.TECH.COMMON.ISPTLIB,TAPEDD=G\n  SELECT DSN=SYS1.TECH.COMMON.LOADLIB,TAPEDD=H\n  SELECT DSN=SYS1.TECH.COMMON.LPALIB,TAPEDD=I\n  SELECT DSN=SYS1.TECH.COMMON.PARMLIB,TAPEDD=J\n  SELECT DSN=SYS1.TECH.COMMON.PROCLIB,TAPEDD=K\n/*\n//STEP57 EXEC PGM=FDRCOPY,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSPRINB DD SYSOUT=*\n//DISKB DD DSN=SYSM.VTAM.V3R3M0.PARMLIB,DISP=SHR\n//TAPEB DD DSN=SYSA.VTAM.V3R3M0.PARMLIB,DISP=SHR\n//SYSIN DD *\n  COPY TYPE=DSF,ENQERR=PROCESS,DSNENQ=NONE\n  SELECT DSN=SYS1.VTAM.V3R3M0.PARMLIB,TAPEDD=B\n/*\n//STEP60 EXEC PGM=FDRCOPY,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSPRINA DD SYSOUT=*\n//DISKA DD DSN=SYSM.NETVIEW.NTVAAUTO.DSIPARM,DISP=SHR\n//TAPEA DD DSN=SYSA.NETVIEW.NTVAAUTO.DSIPARM,DISP=SHR\n//SYSPRINB DD SYSOUT=*\n//DISKB DD DSN=SYSM.NETVIEW.NTVAVTAM.DSIPARM,DISP=SHR\n//TAPEB DD DSN=SYSA.NETVIEW.NTVAVTAM.DSIPARM,DISP=SHR\n//SYSPRINC DD SYSOUT=*\n//DISKC DD DSN=SYSM.NETVIEW.NTVAVTAM.DSIPRF,DISP=SHR\n//TAPEC DD DSN=SYSA.NETVIEW.NTVAVTAM.DSIPRF,DISP=SHR\n//SYSIN DD *\n  COPY TYPE=DSF,ENQERR=PROCESS,DSNENQ=NONE\n  SELECT DSN=SYS1.NETVIEW.NTVAAUTO.DSIPARM,TAPEDD=A\n  SELECT DSN=SYS1.NETVIEW.NTVAVTAM.DSIPARM,TAPEDD=B\n  SELECT DSN=SYS1.NETVIEW.NTVAVTAM.DSIPRF,TAPEDD=C\n/*\n//STEP45 EXEC PGM=FDRCOPY,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSPRINA DD SYSOUT=*\n//DISKA DD DSN=SYSM.SAMON.V1R1M3.SDXKICD0,DISP=SHR\n//TAPEA DD DSN=SYSA.SAMON.V1R1M3.SDXKICD0,DISP=SHR\n//SYSIN DD *\n  COPY TYPE=DSF,ENQERR=PROCESS,DSNENQ=NONE\n  SELECT DSN=SYS1.SAMON.V1R1M3.SDXKICD0,TAPEDD=A\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REFROLD": {"ttr": 8712, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x911\\x9f\\x00\\x911\\x9f!$\\x00v\\x00\\x13\\x00t\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1991-11-15T00:00:00", "modifydate": "1991-11-15T21:24:00", "lines": 118, "newlines": 19, "modlines": 116, "user": "TECH110"}, "text": "/* REXX EXEC to refresh a target system from a maintenance system */\nparse upper arg product_name; /* passed parm */\nif product_name=\"\" | product_name=\"ESABASE\" then lvl=\"SYS1\";\n    else if product_name=\"TECHCOMM\" then lvl=\"SYS1.TECH.COMMON\";\n    else lvl = \"SYS1.\"product_name;\ndummy = outtrap(\"dsnlist.\");\n\"LISTC LEVEL('\"lvl\"') NAMES CAT('SYS1.MCATSYSM.CLUSTER')\";\ndummy = outtrap(\"OFF\");\nif product_name=\"\" then do;\n   products = \"ESABASE TECHCOMM\"; /* init product list */\n   prodlist.ESABASE = \"\"; /* init ESABASE dsname list */\n   prodlist.TECHCOMM = \"\"; /* init TECHCOMM dsname list */\n   end;\nelse do; /* reinit */\n   products=product_name; /* reinit */\n   prodlist.product_name = \"\";\n   end;\ndo index =1 to dsnlist.0;\n   parse upper var dsnlist.index enttype . dsname;\n   if enttype\u00ac=\"NONVSAM\" then iterate index;\n   dsname=strip(dsname);\n   quoted_dsname=\"'\"dsname\"'\";\n   funcrc = LISTDSI(quoted_dsname);\n   if funcrc>4 then iterate index; /* tape entry or gdg etc. */\n   if SYSDSORG\u00ac=\"PO\" then iterate index;\n   parse var dsname hlq \".\" mlq \".\" llq1 \".\" llqs;\n   if llq1=\"\" then do; /* dsn w/only 2 quals= part of ESA base */\n        prodlist.ESABASE = prodlist.ESABASE dsname;\n        end;\n   else if mlq=\"TECH\" & llq1=\"COMMON\" then do;\n        prodlist.TECHCOMM = prodlist.TECHCOMM dsname;\n        end;\n   else do; /* product */\n        parse var llq1 \"V\" vers \"R\" rel \"M\" mod;\n        if mod=\"\" then iterate index; /* non-conform dsname */\n        if wordpos(mlq,products)=0 then do;/* first time product*/\n                products=products mlq;\n                prodlist.mlq = dsname;\n                end;\n            else do;\n                prodlist.mlq = prodlist.mlq dsname;\n                end;\n        end;\nend;\nif product_name\u00ac=\"\" & prodlist.product_name=\"\" then do;\n     say \"No datasets found!\";\n     exit 0;\n     end;\n\"VMFCLEAR\";\nif product_name\u00ac=\"\" then do;\n     say \"Processing product\" product_name;\n     say \"\";\n     say \"The following datasets will be refreshed\";\n     ctr = words(prodlist.product_name);\n     do index = 1 to ctr;\n         say \"      \"word(prodlist.product_name,index);\n     end;\nend;\nelse do;\n     say \"Processing ALL products\";\n     say \"\";\n     say \"The following products will be refreshed\";\n     say \"\";\n     ctr = words(products);\n     do index = 1 to ctr;\n         say \"      \"word(products,index);\n     end;\nend;\nsay \"\";\nsay \"Enter to save REFRJOB in\" userid()\".USER.CNTLLIB\";\nsay \"Type and enter 'QUIT' to exit\";\nparse upper pull status;\nif status\u00ac=\"\" then exit 0;\n\"ALLOC F(REFROUT) DA('\"userid()\".USER.CNTLLIB(REFRJOB)') SHR\";\nstepctr=1;\nfdrddn = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\nline.1=\"//REFRJOB JOB (5304010530000000),'TECH.SUPPORT',\";\nline.2=\"// NOTIFY=\"userid()\",CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\";\nlinectr=3;\nproduct_ctr = words(products);\ndo index=1 to product_ctr;\n      pname=word(products,index);\n      line.linectr=\"//STEP\"stepctr \"EXEC PGM=FDRCOPY,REGION=8M\";\n      stepctr=stepctr+1; linectr=linectr+1;\n      line.linectr=\"//SYSPRINT DD SYSOUT=*\";\n      linectr=linectr+1;\n      fdrptr = 1;\n      dctr=words(prodlist.pname);\n      do dindex=1 to dctr;\n          pdsn=word(prodlist.pname,dindex);\n          parse var pdsn . \".\" pdsn; /* strip hlq */\n          ddn=substr(fdrddn,fdrptr,1);fdrptr=fdrptr+1;\n          line.linectr=\"//SYSPRIN\"ddn \"DD SYSOUT=*\";\n          linectr=linectr+1;\n          line.linectr=\"//DISK\"ddn \"DD DSN=SYSM.\"pdsn\",DISP=SHR\";\n          linectr=linectr+1;\n          line.linectr=\"//TAPE\"ddn \"DD DSN=SYSA.\"pdsn\",DISP=SHR\";\n          linectr=linectr+1;\n      end;\n      line.linectr=\"//SYSIN DD *\";\n      linectr=linectr+1;\n      line.linectr=\"  COPY TYPE=DSF,ENQERR=PROCESS,DSNENQ=NONE\";\n      linectr=linectr+1;\n      fdrptr = 1;\n      do dindex=1 to dctr;\n          pdsn=word(prodlist.pname,dindex);\n          parse var pdsn . \".\" pdsn; /* strip hlq */\n          ddn=substr(fdrddn,fdrptr,1);fdrptr=fdrptr+1;\n          line.linectr=\"  SELECT DSN=SYS1.\"pdsn\",TAPEDD=\"ddn;\n          linectr=linectr+1;\n      end;\n      line.linectr=\"/*\";\n      linectr=linectr+1;\nend;\nline.linectr=\"//\";\n\"EXECIO * DISKW REFROUT (FINIS STEM LINE.\";\n\"FREE F(REFROUT)\";\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REPRO": {"ttr": 8715, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x011\\x00\\x00\\x00\\x88 \\x7f\\x00\\x94%_\\x139\\x00-\\x00\\xfc\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.49", "flags": 0, "createdate": "1988-07-25T00:00:00", "modifydate": "1994-09-12T13:39:00", "lines": 45, "newlines": 252, "modlines": 0, "user": "TECH110"}, "text": "PROC 0 DEBUG\n\nALLOCATE:  ALLOCATE DSNAME('TECH110.N.TEMP.TRACK.FILE') +\n                    DDNAME(DD1) +\n                    OLD\n\n           IF &LASTCC NE 0 THEN +\n           GOTO ERROR\n\n           ALLOCATE DSNAME('TECH110.N.CTN.TRACK.FILE') +\n                    DDNAME(DD2) +\n                    SPACE(2,2) CYLINDERS +\n                    UNIT(SYSDA) +\n                    DSORG(PS) +\n                    LRECL(80) +\n                    BLKSIZE(23680) +\n                    RECFM(F,B) +\n                    MOD\n\n           IF &LASTCC NE 0 THEN +\n           GOTO ERROR\n\nREPRO:     REPRO INFILE(DD1) OUTFILE(DD2)\n\n           IF &LASTCC NE 0 THEN +\n           GOTO ERROR\n\n           FREE DD(DD1) +                                                     00\n           DELETE                                                             00\n\n           FREE DD(DD2)\n\n           GOTO EXIT\n\nERROR:     WRITE\n           WRITE REPRO \"ERROR\" !!!!\n           WRITE\n           WRITE CHECK ERROR MESSAGES\n           GOTO END\n\nEXIT:      WRITE\n           WRITE REPRO \"SUCCESSFUL\" !!!!\n           WRITE\n\nEND:     EXIT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RESONL": {"ttr": 8717, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x94!O\\x00\\x94#\\x7f\\x10\\x17\\x00\\x10\\x00\\x1b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1994-08-02T00:00:00", "modifydate": "1994-08-25T10:17:00", "lines": 16, "newlines": 27, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP1     EXEC PGM=ADRDSSU\n//SYSPRINT  DD SYSOUT=*\n//TAPE      DD UNIT=(TA80,,DEFER),\n//             DSN=PTAP.PSD.PROLL.BKUP.G0958V00,\n//             VOL=SER=C10970,\n//             LABEL=(1,SL),DISP=SHR\n//SYSIN     DD  *\n RESTORE INDD(TAPE)         -\n         CAT                -\n   DS(INC( -\n             PAPY.K.ON.LINE.PR -\n                       )) -\n RENAMEU(PAPY.K.ON.LINE.PR, TECH110.K.ON.LINE.PR.BKUP)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RESTADDR": {"ttr": 8719, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00\\x00\\x00\\x88\\x05O\\x00\\x94!\\x7f\\x11F\\x00\\x0e\\x00\\x13\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "1988-02-23T00:00:00", "modifydate": "1994-08-05T11:46:00", "lines": 14, "newlines": 19, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//RESTORE  EXEC PGM=ADRDSSU\n//SYSPRINT DD  SYSOUT=*\n//TAPEIN   DD DSN=PD.RACF.DATABASE.BACKUP(0),DISP=OLD\n//DISKOUT  DD DSN=SYST.RACF1,DISP=SHR,UNIT=3390,VOL=SER=MNT002\n//SYSIN  DD *\n RESTORE INDDNAME(TAPEIN)                                              -\n         DATASET(INCL(SYS1.RACF1))                                     -\n         OUTDDNAME(DISKOUT) REPLACE                                    -\n         BYPASSACS(SYS1.RACF1)                                         -\n             TOL(ENQF) WAIT(0,0)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REXXSQLS": {"ttr": 8721, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x92)\\x7f\\x00\\x92)\\x7f\\x15V\\x00\\x86\\x00\\xb1\\x00\\x17\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1992-10-23T00:00:00", "modifydate": "1992-10-23T15:56:00", "lines": 134, "newlines": 177, "modlines": 23, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC DSNHASMH\n//PC.DBRMLIB DD DSN=TECH110.USER.DBRMLIB(REXXSQL),DISP=SHR\n//PC.SYSLIB DD DSN=NULLFILE,DISP=SHR\n//PC.SYSIN  DD *\nREXXSQL  TITLE 'REXX SQL INTERFACE'\nREXXSQL  CSECT , /* REXXSQL */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nREXXSQL  AMODE 24\nREXXSQL  RMODE 24\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SAVE  (14,12),,REXXSQL*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING REXXSQL,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD CHAIN\n         CNOP  0,4\n         BAL   RD,*+K76\n         DC    (K18)A(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SLR   R9,R9 RC\n         LA    R8,SQLSTOR\n         USING SQLDSECT,R8\n         USING EFPL,R1\n         L     R2,EFPLARG ARGUMENTS TABLE\n         L     R3,EFPLEVAL EVALBLOCK PTR\n         L     R3,K0(,R3) ACTUAL EVALBLOCK PTR\n         DROP  R1\n         L     R4,K0(R2) A(SQLSTMT) XFF\n         CL    R4,=A(X'FFFFFFFF') PARMLIST END\n         EXEC SQL EXECUTE IMMEDIATE :SQLSTMT\n         USING EVALBLOCK,R3\n         LA    R0,K8 DDNAME LEN\n         ST    R0,EVALBLOCK_EVLEN\n         MVC   EVALBLOCK_EVDATA(K8),PDDN+K6\n         B     EXIT\nEXIT     LR    RF,R9 RC\n         L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nRC24     LA    R9,K4(,R9)\nRC20     LA    R9,K4(,R9)\nRC16     LA    R9,K4(,R9)\nRC12     LA    R9,K4(,R9)\nRC8      LA    R9,K4(,R9)\nRC4      LA    R9,K4(,R9)\n         B     EXIT\n         EXEC SQL INCLUDE SQLCA\n         LTORG\nSQLSTOR  DS    (SQLDLEN)C SQL WORKAREA\nSQLSTMT  DS    H'0',CL32760' ' INVOKED SQL STATEMENT\n         EXEC SQL INCLUDE SQLDA\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IRXSHVB\n         END\n/*\n//LKED.SYSLMOD DD DSN=TECH110.USER.LOADLIB(REXXSQL),DISP=SHR\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMAXMON": {"ttr": 8724, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x00\\x00\\x92\\x05\\x8f\\x00\\x951\\x7f\\x16(\\x008\\x00\\x01\\x008\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1992-02-27T00:00:00", "modifydate": "1995-11-13T16:28:00", "lines": 56, "newlines": 1, "modlines": 56, "user": "TECH110"}, "text": "/* ******************* REXX XBM monitor ************************** */\ntrue = \"1\"; false = \"0\";\naddress \"TSO\"; /* map environment */\ndsname = \"'SYS1.PRODSYSI.MASTER(TRC00D00)'\"; /* parmlib */\nddname = LIBALLOC(dsname); /* allocate parmlib even if librarian */\n\"EXECIO * DISKR\" ddname \"(FINIS STEM TBLINPUT.\"; /* acquire job */\npsaaold = storage(\"00000224\",4); /* locate current ascb from psa */\nascbasxb = storage(d2x(c2d(psaaold)+108),4); /* mapping asxb */\nasxbuser = storage(d2x(c2d(ascbasxb)+192),7); /* locate userid */\nmatch = false; /* Assume error */\ndo index = 1 to tblinput.0; /* Scan for name translation */\n    parse var tblinput.index origname newname . ;\n    origname=strip(origname); newname=strip(newname);\n    if origname\u00ac=asxbuser then iterate;\n         else do;\n            match=true;\n            jcl_member_name = newname;\n            leave index;\n            end;\nend;\nif \u00acmatch then exit 20; /* Leave as no table match */\ndsname = \"'SYS1.PRODJCL.MASTER(\"jcl_member_name\")'\"; /* parmlib */\nddname = LIBALLOC(dsname); /* allocate parmlib even if librarian */\nif rc\u00ac=0 then do;\n   dsname = \"'SYS1.TESTJCL.MASTER(\"jcl_member_name\")'\"; /* parmlib */\n   ddname = LIBALLOC(dsname); /* allocate parmlib even if librarian */\n   if rc\u00ac=0 then exit 16;\n   end;\n\"EXECIO * DISKR\" ddname \"(FINIS STEM JCLINPUT.\"; /* acquire job */\ngenuser = false; /* Generated job must have USER= */\ndo index = 1 to jclinput.0; /* scan */\n     if substr(jclinput.index,1,3)=\"//*\" then iterate; /* ignore */\n     if pos(\"USER=\",jclinput.index)\u00ac=0 then do;\n              /* Dont let job sub with USER=RMAX; will cause loop */\n              /* Must be USER=ZEKE                                */\n/*            if pos(\"USER=ZEKE\",jclinput.index)=0 then exit 16;  */\n              genuser=true; /* Valid job */\n              leave index; /* exit loop */\n              end;\nend;\nif \u00acgenuser then exit 16; /* Leave as invalid JCL found */\ncounter = jclinput.0+1; /* number of base jcl statements */\njclinput.counter = \"//SYSUT1 DD DATA,DCB=BLKSIZE=80\"; /* xbm in */\ncounter = counter+1; /* prep for sysin datastream loop */\n\"EXECIO * DISKR SYSIN (FINIS STEM STREAM.\"; /* process xbm input */\ndo index = 1 to stream.0;\n     jclstate = substr(stream.index,1,2); /* ignore jcl */\n     if jclstate=\"//\" | jclstate=\"/*\" then iterate; /*...*/\n     jclinput.counter = stream.index; /* add to output jcl */\n     counter = counter + 1; /* next */\nend;\njclinput.counter = \"/*\"; /* xbm sysin eof */\ncounter = counter+1; /* last time */\njclinput.counter = \"//\"; /* xbm sysin eof */\n\"EXECIO * DISKW INTRDR (FINIS STEM JCLINPUT.\"; /* write job */\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RMAXOLD": {"ttr": 8961, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x00\\x00\\x92\\x05\\x8f\\x00\\x92\\t\\x1f\\x15\\x04\\x003\\x00\\x01\\x003\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1992-02-27T00:00:00", "modifydate": "1992-03-31T15:04:00", "lines": 51, "newlines": 1, "modlines": 51, "user": "TECH110"}, "text": "/* ******************* REXX XBM monitor ************************** */\ntrue = \"1\"; false = \"0\";\naddress \"TSO\"; /* map environment */\ndsname = \"'SYS1.PRODSYSI.MASTER(TRC00D00)'\"; /* parmlib */\nddname = LIBALLOC(dsname); /* allocate parmlib even if librarian */\n\"EXECIO * DISKR\" ddname \"(FINIS STEM TBLINPUT.\"; /* acquire job */\npsaaold = storage(\"00000224\",4); /* locate current ascb from psa */\nascbasxb = storage(d2x(c2d(psaaold)+108),4); /* mapping asxb */\nasxbuser = storage(d2x(c2d(ascbasxb)+192),7); /* locate userid */\nmatch = false; /* Assume error */\ndo index = 1 to tblinput.0; /* Scan for name translation */\n    parse var tblinput.index origname newname . ;\n    origname=strip(origname); newname=strip(newname);\n    if origname\u00ac=asxbuser then iterate;\n         else do;\n            match=true;\n            jcl_member_name = newname;\n            leave index;\n            end;\nend;\nif \u00acmatch then exit 20; /* Leave as no table match */\ndsname = \"'SYS1.PRODJCL.MASTER(\"jcl_member_name\")'\"; /* parmlib */\nddname = LIBALLOC(dsname); /* allocate parmlib even if librarian */\n\"EXECIO * DISKR\" ddname \"(FINIS STEM JCLINPUT.\"; /* acquire job */\ngenuser = false; /* Generated job must have USER= */\ndo index = 1 to jclinput.0; /* scan */\n     if substr(jclinput.index,1,3)=\"//*\" then iterate; /* ignore */\n     if pos(\"USER=\",jclinput.index)\u00ac=0 then do;\n              /* Dont let job sub with USER=RMAX; will cause loop */\n              /* Must be USER=ZEKE                                */\n              if pos(\"USER=ZEKE\",jclinput.index)=0 then exit 16;\n              genuser=true; /* Valid job */\n              leave index; /* exit loop */\n              end;\nend;\nif \u00acgenuser then exit 16; /* Leave as invalid JCL found */\ncounter = jclinput.0+1; /* number of base jcl statements */\njclinput.counter = \"//SYSUT1 DD DATA,DCB=BLKSIZE=80\"; /* xbm in */\ncounter = counter+1; /* prep for sysin datastream loop */\n\"EXECIO * DISKR SYSIN (FINIS STEM STREAM.\"; /* process xbm input */\ndo index = 1 to stream.0;\n     jclstate = substr(stream.index,1,2); /* ignore jcl */\n     if jclstate=\"//\" | jclstate=\"/*\" then iterate; /*...*/\n     jclinput.counter = stream.index; /* add to output jcl */\n     counter = counter + 1; /* next */\nend;\njclinput.counter = \"/*\"; /* xbm sysin eof */\ncounter = counter+1; /* last time */\njclinput.counter = \"//\"; /* xbm sysin eof */\n\"EXECIO * DISKW INTRDR (FINIS STEM JCLINPUT.\"; /* write job */\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RMFDATA": {"ttr": 8963, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\x11_\\x00\\x95\\x11_\\x13Y\\x00\\x16\\x00x\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-04-25T00:00:00", "modifydate": "1995-04-25T13:59:00", "lines": 22, "newlines": 120, "modlines": 4, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//CASFXSMF PROC A='*',\n//         SCDDSN='SYSS.JARSMF.SCDS',\n//         STEPLIB='SYS1.JARSMF.V1R5M0.CAILIB',\n//         TPUNIT='CART'\n//STEP1    EXEC PGM=SMFD\n//STEPLIB  DD   DISP=SHR,DSN=&STEPLIB\n//SCDS     DD   DISP=OLD,DSN=&SCDDSN\n//HISTORY1 DD   UNIT=(&TPUNIT,,DEFER),VOL=SER=SMFTAP,DISP=(OLD,PASS)\n//JARSPEC  DD DSN=TECH110.RMF72,DISP=(NEW,CATLG),\n//            SPACE=(CYL,(200,25),RLSE),\n//            DCB=(RECFM=VBS,LRECL=32756,BLKSIZE=32760)\n//SYSPRINT DD SYSOUT=&A\n//SYSXDIAG DD SYSOUT=&A\n// PEND\n//STEP001 EXEC CASFXSMF\n//SYSIN    DD *\nEXTRACT FROM(020195 0000) TO(042495 2359)\n        SELECT(72)\n        SID(ALL) TODD(JARSPEC).\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMFGEN": {"ttr": 8965, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x92\\x15o\\x00\\x92!o\\x11\\x11\\x00\\x11\\x00\\x11\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1992-06-04T00:00:00", "modifydate": "1992-08-03T11:11:00", "lines": 17, "newlines": 17, "modlines": 5, "user": "TECH110"}, "text": "/* REXX RMF PROCESSOR  */\n\"ALLOC F(INPUT) DA('TECH110.RMF.HISTORY.OUTPUT') SHR\";\n\"ALLOC F(OUTPUT) DA('TECH110.RMF.HISTORY') OLD\";\n\"EXECIO * DISKR INPUT (FINIS STEM IN.\";\nOUTPTR = 1;\nDO I = 1 TO IN.0;\n  PARSE VAR IN.I CC 2 Z;\n  PARSE VAR Z IDTE ITME . ICPU . IDASD IJOB . ITSO . . . . . . . ISR . ;\n  IF ISR=\"\" | SUBSTR(IDTE,3,1)\u00ac=\"/\" | SUBSTR(IDTE,1,2)=\"MM\" ,\n      THEN ITERATE;\n  IDTE = IDTE||\"/92\";\n  ITME = SUBSTR(ITME,1,2);\n  OUT.OUTPTR=IDTE ITME ICPU IDASD IJOB ITSO ISR;\n  OUTPTR=OUTPTR+1;\nEND;\n\"EXECIO * DISKW OUTPUT (FINIS STEM OUT.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RMFPP": {"ttr": 8967, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01.\\x00\\x00\\x00\\x92\\x01O\\x00\\x95\\x11o\\x11T\\x00\\n\\x00\\x0c\\x00\\x07\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.46", "flags": 0, "createdate": "1992-01-14T00:00:00", "modifydate": "1995-04-26T11:54:00", "lines": 10, "newlines": 12, "modlines": 7, "user": "TECH110"}, "text": "//TECH110L JOB (530000000000),'TECH.JEFF.KAPLAN',PRTY=15,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=ERBRMFPP,REGION=8M\n//MFPINPUT DD DSN=TECH110.RMF72,DISP=SHR,DCB=BUFNO=63\n//SYSIN DD *\n REPORTS(WKLD(GROUP))\n DINTV(9959)\n SYSOUT(G)\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMFPP1": {"ttr": 8969, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x92\\x15O\\x00\\x92\\x15O\\x16\\x03\\x00*\\x00\\r\\x00!\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-06-02T00:00:00", "modifydate": "1992-06-02T16:03:00", "lines": 42, "newlines": 13, "modlines": 33, "user": "TECH110"}, "text": "//RMFPP    JOB (530000000000),'TECH.JEFF.KAPLAN',PRTY=15,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=ERBRMFPP,REGION=8M\n//MFPMSGDS DD DUMMY\n//PPSUM001 DD DSN=TECH110.RMF.HISTORY.OUTPUT,DISP=(NEW,CATLG),\n// SPACE=(CYL,(5,2)),BLKSIZE=13681,RECFM=VBA,LRECL=137\n//MFPINPUT DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-14),DISP=SHR,\n// RECFM=VBS,LRECL=32760\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-13),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-12),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-11),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-10),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-9),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-8),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-7),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-6),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-5),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-4),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-3),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-2),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-1),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-0),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//SYSIN DD *\n RTOD(0000,2400)\n SUMMARY(INT)\n SYSOUT(G)\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMFPP2": {"ttr": 8971, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92\\x18\\x1f\\x00\\x92!o\\x11\\x16\\x00\\x15\\x00\\x14\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-06-29T00:00:00", "modifydate": "1992-08-03T11:16:00", "lines": 21, "newlines": 20, "modlines": 3, "user": "TECH110"}, "text": "//RMFPP    JOB (530000000000),'TECH.JEFF.KAPLAN',PRTY=15,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=ERBRMFPP,REGION=8M\n//MFPMSGDS DD DUMMY\n//PPSUM001 DD DSN=TECH110.RMF.HISTORY.OUTPUT,DISP=MOD\n//MFPINPUT DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-4),DISP=SHR,\n// RECFM=VBS,LRECL=32760\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-3),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-2),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-1),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//         DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(0),DISP=SHR,\n// RECFM=VBS,LRECL=32760,UNIT=AFF=MFPINPUT\n//SYSIN DD *\n RTOD(0000,2400)\n SUMMARY(INT)\n SYSOUT(G)\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMFPP4": {"ttr": 8973, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x934\\x0f\\x00\\x934\\x0f\\tU\\x00\\x0c\\x00\\x0c\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-12-06T00:00:00", "modifydate": "1993-12-06T09:55:00", "lines": 12, "newlines": 12, "modlines": 1, "user": "TECH110"}, "text": "//RMFPP    JOB (530000000000),'TECH.JEFF.KAPLAN',PRTY=15,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=ERBRMFPP,REGION=8M\n//MFPINPUT DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(0),DISP=SHR\n//SYSIN DD *\n DINTV(0030)\n REPORTS(CPU,CHAN,DEVICE(DASD),PAGING,PAGESP,SRCS,SPAG)\n REPORTS(WKLD(PERIOD,SYSTEM))\n SUMMARY(INT,TOT)\n SYSOUT(G)\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMFPP5": {"ttr": 8975, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x934\\x1f\\x00\\x934\\x8f\\x10A\\x00\\x10\\x00\\x10\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-12-07T00:00:00", "modifydate": "1993-12-14T10:41:00", "lines": 16, "newlines": 16, "modlines": 6, "user": "TECH110"}, "text": "//TECH110U JOB (530000000000),'TECH.JEFF.KAPLAN',PRTY=15,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=ERBRMFPP,REGION=8M\n//*MFPINPUT DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(0),DISP=SHR\n//MFPINPUT DD DSN=SYSS.SMFDUMP.WKLY.ACCUM,DISP=SHR\n//SYSIN DD *\n DINTV(0030)\n REPORTS(ENQ,DEVICE(TAPE))\n SUMMARY(INT,TOT)\n SYSOUT(G)\n/* END\n//* RTOD(1000,1600)\n//* STOD(1000,1600)\n//* DATE(93332,93332)\n//*  SYSID(SYSA)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMFPP6": {"ttr": 8977, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\x04o\\x00\\x95\\x04o\\x11F\\x00\\x1f\\x00\\x0c\\x00\\x18\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-02-15T00:00:00", "modifydate": "1995-02-15T11:46:00", "lines": 31, "newlines": 12, "modlines": 24, "user": "TECH110"}, "text": "//TECH110F JOB (530000000000),'TECH.JEFF.KAPLAN',PRTY=15,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//CASFXSMF PROC A='*',\n//         SCDDSN='SYSS.JARSMF.SCDS',\n//         STEPLIB='SYS1.JARSMF.V1R5M0.CAILIB',\n//         TPUNIT='CART'\n//STEP1    EXEC PGM=SMFD\n//STEPLIB  DD   DISP=SHR,DSN=&STEPLIB\n//SCDS     DD   DISP=OLD,DSN=&SCDDSN\n//HISTORY1 DD   UNIT=(&TPUNIT,,DEFER),VOL=SER=SMFTAP,DISP=(OLD,PASS)\n//JARSPEC  DD DSN=&&RMFDATA,DISP=(,PASS,DELETE),\n//            SPACE=(CYL,(15,5),RLSE),VOL=(,,,2),\n//            DCB=(RECFM=VBS,LRECL=32756,BLKSIZE=32760)\n//SYSPRINT DD SYSOUT=&A\n//SYSXDIAG DD SYSOUT=&A\n// PEND\n//STEP001 EXEC CASFXSMF\n//SYSIN    DD *\nEXTRACT FROM(021395 0000) TO(021495 2359)\n        SELECT(70,71,72,73,74,75,76,77,78,79)\n        SID(ALL) TODD(JARSPEC).\n/*\n//S EXEC PGM=ERBRMFPP,REGION=8M\n//MFPINPUT DD DSN=&&RMFDATA,DISP=OLD,DCB=BUFNO=63\n//SYSIN DD *\n DINTV(0015)\n REPORTS(DEVICE(DASD))\n SUMMARY(INT,TOT)\n SYSOUT(G)\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RMFPP9": {"ttr": 8979, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x94\\x06\\x7f\\x00\\x94\\x06\\x7f\\x126\\x00\\x11\\x00\\x11\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-03-08T00:00:00", "modifydate": "1994-03-08T12:36:00", "lines": 17, "newlines": 17, "modlines": 2, "user": "TECH110"}, "text": "//TECH110L JOB (530000000000),'TECH.JEFF.KAPLAN',PRTY=15,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=ERBRMFPP,REGION=8M\n//MFPINPUT DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(0),DISP=SHR\n//*MFPINPUT DD DSN=SYSS.SMFDUMP.WKLY.ACCUM,DISP=SHR,DCB=BUFNO=63\n//*MFPINPUT DD DSN=SYSS.SMFDUMP.DLY.FILE,DISP=SHR,DCB=BUFNO=63\n//SYSIN DD *\n DATE(94065,94065)\n DINTV(2400)\n SYSID(SYSB)\n RTOD(0000,2400)\n STOD(0000,2400)\n REPORTS(WKLD(PERIOD,SYSTEM))\n SUMMARY(INT,TOT)\n SYSOUT(G)\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RNLCHECK": {"ttr": 8981, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x922?\\x00\\x922?\\x14\\x17\\x00\\x03\\x00\\x03\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-11-18T00:00:00", "modifydate": "1992-11-18T14:17:00", "lines": 3, "newlines": 3, "modlines": 0, "user": "TECH110"}, "text": "/* REXX ISGRNLSS SYNTAX CHECKER */\n\"ALLOCATE DD(PARMLIB) DSN('SYS1.PARMLIB') SHR\";\n\"CALL 'TECH110.USER.LOADLIB(ISGRNLCK)' 'SS'\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RNLCKASM": {"ttr": 8983, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x922?\\x00\\x922?\\x14\\x11\\x00\\x1a\\x01S\\x00\\x19\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-11-18T00:00:00", "modifydate": "1992-11-18T14:11:00", "lines": 26, "newlines": 339, "modlines": 25, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD DSN=SYS1.SAMPLIB(ISGRNLMS),DISP=SHR\n//L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(ISGRNLMS),DISP=SHR,\n// UNIT=,SPACE=\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD DSN=SYS1.SAMPLIB(ISGRNLPR),DISP=SHR\n//L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(ISGRNLPR),DISP=SHR,\n// UNIT=,SPACE=\n//S EXEC ASMHCL,PARM.L='LIST,LET,XREF,MAP'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD DSN=SYS1.SAMPLIB(ISGRNLCK),DISP=SHR\n//L.SYSLMOD DD DSN=TECH110.USER.LOADLIB,DISP=SHR,\n// UNIT=,SPACE=\n//L.SYSIN DD *\n  INCLUDE SYSLMOD(ISGRNLMS)\n  INCLUDE SYSLMOD(ISGRNLPR)\n  ENTRY ISGRNLCK\n  NAME ISGRNLCK(R)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ROBOCOP": {"ttr": 8985, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x94\\x10\\x9f\\x00\\x94\\x19o\\x12@\\x004\\x00)\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1994-04-19T00:00:00", "modifydate": "1994-07-15T12:40:00", "lines": 52, "newlines": 41, "modlines": 0, "user": "TECH110"}, "text": "/* REXX ROBOCOP MVS/ESA Silo Automated Operator                    */\n/*                                                                 */\n/* NetView automation member MUST contain the following:           */\n/*    IF MSGID = 'IEC501A' & TEXT = MSGTEXT                        */\n/*       THEN EXEC (CMD('ROBOCOP ' MSGTEXT)                        */\n/*            ROUTE(ONE ...));                                     */\n/*    IF MSGID = 'IEF233A' & TEXT = MSGTEXT                        */\n/*       THEN EXEC (CMD('ROBOCOP ' MSGTEXT)                        */\n/*            ROUTE(ONE ...));                                     */\n/*    IF MSGID = 'IEC502E' & TEXT = MSGTEXT                        */\n/*       THEN EXEC (CMD('ROBOCOP ' MSGTEXT)                        */\n/*            ROUTE(ONE ...));                                     */\n/*    IF MSGID = 'IEF234E' & TEXT = MSGTEXT                        */\n/*       THEN EXEC (CMD('ROBOCOP ' MSGTEXT)                        */\n/*            ROUTE(ONE ...));                                     */\n/*                                                                 */\n/* List of valid silo addresses                                    */\nsilo_units = \"B00 B01 B02 B03 B08 B09 B0A B0B B10 B11 B12 B13 B18 B19 B1A B1B\nB20 B21 B22 B23 B28 B29 B2A B2B B30 B31 B32 B33 B38 B39 B3A B3B\";\nsilo_command = \"\"; /* null variable */\n/*                                                                 */\n/* Parse and acquire drive address and volser                      */\nparse arg msgid msgtext;\nparse var msgtext . cuu \",\" volser \",\" . ;\n/*                                                                 */\n/* check if acquired drive address a valid SILO unit               */\nif wordpos(cuu,silo_units) = 0 then exit 0;\n/*                                                                 */\n/* acquire our system id                                           */\nsystemid = sysid();\n/*                                                                 */\n/* Determine message id                                            */\nselect;\n/*                                                                 */\n/* Process SILO mount message                                      */\n   when (msgid=\"IEC501A\" | msgid=\"IEF233A\") then do;\n/* Build HSC mount command                                         */\n        silo_command = \"@M\" volser cuu systemid;\n      end;\n/*                                                                 */\n/* Process SILO demount message                                    */\n   when (msgid=\"IEC502E\" | msgid=\"IEF234E\") then do;\n/* Build HSC dismount command                                      */\n        silo_command = \"@DISM\" volser cuu systemid;\n      end;\n/*                                                                 */\n/* We should not have been called; check automation message table  */\n   otherwise nop; /* should not occur */\nend;\n/* Route command to HSC running system                             */\n\"MVS $N1,D=CHRMSYSA,'\"silo_command\"'\";\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ROBOTEST": {"ttr": 8987, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\t\\x1f\\x00\\x94\\t\\x1f\\x16P\\x00\\x04\\x00\\x04\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-01T00:00:00", "modifydate": "1994-04-01T16:50:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//S EXEC ROBOAUTO\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ROCKROLL": {"ttr": 8989, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x11/\\x00\\x94\\x11/\\x15\\x18\\x00I\\x00I\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-04-22T00:00:00", "modifydate": "1994-04-22T15:18:00", "lines": 73, "newlines": 73, "modlines": 0, "user": "TECH110"}, "text": "/* REXX RockRoll roll groups of datasets and archive oldest gener */\naddress \"TSO\";\ntrue = \"1\"; false = \"0\";\n/* Acquire ddnames and datasetnames that we are to rock and roll */\ndummy = outtrap(\"listalc.\"); /* trap lista output */\n\"LISTALC STATUS\"; /* find dsnames per ddname */\nresponse = \"\";\nddnamelist = \"\";\ndo  i = 2 to listalc.0;\n       response = response strip(listalc.i); /* remove filler */\nend;\ncounter = words(response); /* loop */\ndo i = 1 to counter;\n     element = word(response,i);\n     if element = \"TERMFILE\" then do;\n           ddname = word(response,i+1);\n           ddnamelist = ddnamelist ddname;\n           ddname.ddname = \"TERMFILE\";\n           lastddname = ddname; /* save ddname for concat */\n           i = i + 1; /* skip */\n           end;\n     else if element = \"NULLFILE\" then do;\n           ddname = word(response,i+1);\n           ddnamelist = ddnamelist ddname;\n           ddname.ddname = \"NULLFILE\";\n           lastddname = ddname; /* save ddname for concat */\n           i = i + 1; /* skip */\n           end;\n        else do;\n           dsname = element;\n           if substr(dsname,1,1)=\"*\" then ,\n                 dsname = substr(dsname,2); /* remove notinuse flag*/\n           ddname = word(response,i+1);\n           if substr(ddname,1,4)=\"KEEP\" | substr(ddname,1,6)=\"DELETE\" ,\n               then do;\n                    ddname.lastddname = ddname.lastddname dsname;\n                    i = i + 1;\n               end;\n               else do;\n                    ddnamelist = ddnamelist ddname;\n                    ddname.ddname = dsname;\n                    lastddname = ddname; /* save ddname for concat */\n                    i = i + 2;\n               end;\n        end;\nend;\nddname# = words(ddnamelist); /* sort ddnames found */\ndo i = 1 to ddname#;\n    ddname.i = word(ddnamelist,i);\nend;\nswapped = true;\ndo while(swapped);\nswapped = false;\ndo i = 1 to ddname#-1;\n   this = i;\n   next = i+1;\n   if ddname.this > ddname.next then do;\n        temp = ddname.next; /* swap */\n        ddname.next = ddname.this;\n        ddname.this = temp;\n        swapped = true;\n        end;\nend;\nend;\ndo i = 1 to ddname#;\n  trueddn = ddname.i;\n  say left(trueddn,8) word(ddname.trueddn,1);\n  dsncount = words(ddname.trueddn);\n  if dsncount>1 then do j = 2 to dsncount;\n     say \"         \"word(ddname.trueddn,j);\n     end;\nend;\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RPKZIP": {"ttr": 8992, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x18\\x7f\\x00\\x95\\x18\\x7f\\x10#\\x00\\x1f\\x00\\x1f\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-07-06T00:00:00", "modifydate": "1995-07-06T10:23:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//RST1STEP EXEC PGM=IKJEFT01,DYNAMNBR=30\n//SYSPRINT DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD *\n  PROFILE NOPREFIX\n  RECEIVE USERID(TECH110) INDSN('TECH110.SYSS.PKZIP.V2R1M1.CNTL')\n  DSNAME('SYSS.PKZIP.V2R1M1.CNTL') -\n  UNIT(3390) VOLUME(SYS009)\n/*\n//*\n//RST2STEP EXEC PGM=IKJEFT01,DYNAMNBR=30\n//SYSPRINT DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD *\n  PROFILE NOPREFIX\n  RECEIVE USERID(TECH110) INDSN('TECH110.SYSS.PKZIP.V2R1M1.LOADLIB')\n  DSNAME('SYSS.PKZIP.V2R1M1.LOADLIB') -\n  UNIT(3390) VOLUME(SYS009)\n/*\n//*\n//RST3STEP EXEC PGM=IKJEFT01,DYNAMNBR=30\n//SYSPRINT DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD *\n  PROFILE NOPREFIX\n  RECEIVE USERID(TECH110) INDSN('TECH110.SYSS.PKZIP.V2R1M1.SOURCE')\n  DSNAME('SYSS.PKZIP.V2R1M1.SOURCE') -\n  UNIT(3390) VOLUME(SYS009)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RUNASQL": {"ttr": 8994, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\x11\\x8f\\x00\\x93\\x11\\x8f\\x11\\x05\\x00\\x06\\x00g\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-04-28T00:00:00", "modifydate": "1993-04-28T11:05:00", "lines": 6, "newlines": 103, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n/*JOBPARM S=SYSB\n//S EXEC PGM=ASYSQL\n//STEPLIB  DD DSN=TECH110.USER.LOADLIB,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RUNDATE": {"ttr": 9218, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x95\\x10O\\x00\\x95\\x16?\\x11\\x10\\x00\\x08\\x00\\x07\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1995-04-14T00:00:00", "modifydate": "1995-06-12T11:10:00", "lines": 8, "newlines": 7, "modlines": 0, "user": "TECH110"}, "text": "//TECH110R JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP010  EXEC PGM=DATE\n//STEPLIB  DD DSN=SYS1.TEST.BATCH.LOADLIB,DISP=SHR\n//         DD DSN=SYSS.TECH.VIRTDATE.LOADLIB,DISP=SHR\n//SYSOUT   DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//VJD02331 DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RUNDMPPR": {"ttr": 9220, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x93\\x05o\\x00\\x93\\x06\\x0f\\x12\"\\x00\\x08\\x00\\xdc\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1993-02-25T00:00:00", "modifydate": "1993-03-01T12:22:00", "lines": 8, "newlines": 220, "modlines": 5, "user": "TECH110"}, "text": "//TECH110G JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//SCAN   EXEC PGM=IKJEFT01,PARM='%CICDMPPR'\n//SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//DUMPIN   DD DSN=TECH110.PDPC.DUMP.DATA,DISP=SHR\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAMPI": {"ttr": 9222, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x91(\\x9f\\x00\\x91(\\x9f\\t$\\x00\\x19\\x03\\xe7\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-10-16T00:00:00", "modifydate": "1991-10-16T09:24:00", "lines": 25, "newlines": 999, "modlines": 0, "user": "TECH110"}, "text": "* LPAR MVSPROD\n CNTLUNIT CUNUMBR=07C0,PATH=(2F),UNITADD=((C0,032)),SHARED=N,          *\n               PROTOCL=S,UNIT=3880\n CNTLUNIT CUNUMBR=17C0,PATH=(2D),UNITADD=((C0,032)),SHARED=N,          *\n               PROTOCL=S,UNIT=3880\n CNTLUNIT CUNUMBR=27C0,PATH=(2A),UNITADD=((C0,032)),SHARED=N,          *\n               PROTOCL=S,UNIT=3880\n CNTLUNIT CUNUMBR=37C0,PATH=(29),UNITADD=((C0,032)),SHARED=N,          *\n               PROTOCL=S,UNIT=3880\n IODEVICE ADDRESS=(7C0,32),CUNUMBR=(07C0,17C0,27C0,37C0),              *\n               TIMEOUT=Y,UNIT=3380\n* LPAR MVSSYSM\n CNTLUNIT CUNUMBR=47C0,PATH=(2E),UNITADD=((C0,032)),SHARED=N,          *\n               PROTOCL=S,UNIT=3880\n IODEVICE ADDRESS=(7C0,32),CUNUMBR=(47C0),                             *\n               TIMEOUT=Y,UNIT=3380\n* LPAR MVSSYSA\n CNTLUNIT CUNUMBR=57C0,PATH=(26),UNITADD=((C0,032)),SHARED=N,          *\n               PROTOCL=S,UNIT=3880\n CNTLUNIT CUNUMBR=67C0,PATH=(2B),UNITADD=((C0,032)),SHARED=N,          *\n               PROTOCL=S,UNIT=3880\n CNTLUNIT CUNUMBR=77C0,PATH=(2C),UNITADD=((C0,032)),SHARED=N,          *\n               PROTOCL=S,UNIT=3880\n IODEVICE ADDRESS=(7C0,32),CUNUMBR=(57C0,67C0,77C0),                   *\n               TIMEOUT=Y,UNIT=3380\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAVEACDS": {"ttr": 9224, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92\\x05/\\x00\\x92\\x05/\\t\\x07\\x00\\x02\\x00\\x02\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-02-21T00:00:00", "modifydate": "1992-02-21T09:07:00", "lines": 2, "newlines": 2, "modlines": 1, "user": "TECH110"}, "text": "/* Save active SMS CDS REXX */\n\"OP SETSMS SAVEACDS(SYSS.ACDS2.CLUSTER)\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SCANTERM": {"ttr": 9226, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\x08_\\x00\\x93\\x08_\\x12\\x05\\x00\\x14\\x00\\x0e\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-03-26T00:00:00", "modifydate": "1993-03-26T12:05:00", "lines": 20, "newlines": 14, "modlines": 0, "user": "TECH110"}, "text": "/* REXX */\n\"ALLOC F(IN) DA('TECH102.NOTERM.DATA') SHR\";\n\"ALLOC F(OUT) DA('TECH110.USER.CNTLLIB(SCNTRMOT)') SHR\";\n\"EXECIO * DISKR IN (FINIS STEM IN.\";\nOUTCTR=1;\nLIST=\"\";\nDO I = 1 TO IN.0;\n   PARSE VALUE STRIP(SUBSTR(IN.I,2)) WITH W1 W2 W3;\n   IF W2=\"\" & W3=\"\" THEN DO;\n       IF WORDPOS(W1,LIST)=0 THEN ,\n           LIST=LIST W1;\n       END;\nEND;\nX=WORDS(LIST);\nDO I = 1 TO X;\n   OUT.OUTCTR=WORD(LIST,I);\n   OUTCTR=OUTCTR+1;\nEND;\n\"EXECIO * DISKW OUT (FINIS STEM OUT.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SCNTRMOT": {"ttr": 9228, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\\x08_\\x00\\x93\\x08_\\x12\\x13\\x00*\\x00*\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-26T00:00:00", "modifydate": "1993-03-26T12:13:00", "lines": 42, "newlines": 42, "modlines": 0, "user": "TECH110"}, "text": "CATD\nCLS1\nCRSQ\nCSFU\nCSKP\nCSNE\nCSSC\nCSSY\nCSTA\nCXRE\nEIK1\nRP60\nRS02\nRS16\nRS20\nRS22\nRS23\nRS25\nSPC1\nSPP1\nTRR4\nVTAT\nWLS2\nWLS3\nWLS4\nWLS5\nWLS6\nWOBA\nWOBC\nWOBE\nWOBG\nWOB2\nWOB4\nWOB6\nWOB8\nWOPA\nWOSA\nWOSE\nWOS0\nWOS2\nWOS4\nWOS6\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SDD81B": {"ttr": 9230, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x00\\x00\\x92\\x03O\\x00\\x92\\x03_\\x165\\x01G\\x00\\xd8\\x00\\xad\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1992-02-03T00:00:00", "modifydate": "1992-02-04T16:35:00", "lines": 327, "newlines": 216, "modlines": 173, "user": "TECH110"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.KAPLAN.JEFF',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n//S EXEC ASMHCLG\n//C.SYSIN  DD *\nPOL      TITLE 'STORE POLLING MEMBER MERGE'\nSDD81B   CSECT , /* CONVERT DATASET FORMAT */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK23      EQU   23\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK4095    EQU   4095\nK4096    EQU   4096\nK16384   EQU   16384\nK32752   EQU   32752\nK32756   EQU   32756\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nSDD81B   AMODE 24\nSDD81B   RMODE 24\n         SAVE  (14,12),,SDD81B*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING SDD81B,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\nOPENLIST OPEN  (DIRREAD,(INPUT),SYSUT2,(OUTPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R7,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         SLR   R5,R5 /* TOTAL MEMBER COUNT */\n         L     R3,=A(TTRLIST) /* START OF DIR LIST */\nGETDIR   READ  DECBDIR,SF,MF=E\n         CHECK DECBDIR\n         LA    R4,DIRBLOCK+K10 /* PTR FIRST DIR BLOK ENTRY */\nDIRBSCAN CLC   =X'FFFFFFFF',K0(R4) /* DIR END */\n         BE    DIREND\n         LA    R5,K1(,R5) +1 MEMBER\n         C     R5,=A(K16384) EXCEEDED MAX # MEMBERS WE HANDLE\n         BH    FMEMCOUN YES\n         MVC   K0(K8,R3),K0(R4) SAVE MEMBER NAME\n         MVC   K8(K3,R3),K8(R4) SAVE MEMBER TTR\n         MVI   K11(R3),X'00' /* CLEAR LAST TTR UNUSED BYTE */\n         MVC   K12(K4,R3),=X'00000000' BACKCHAIN PTR PER STORE\n         LA    R3,K16(,R3) NEXT TTR SPOT; DO HALFWORD BOUND\n         CLC   DIRBLOCK(K8),K0(R4) BLOCK END\n         BE    GETDIR YES\n         SLR   RF,RF /* CALC ENTRY LEN */\n         NI    K11(R4),XFF-X80-X40-X20 OFF ALIAS AND TTRN BITS\n         IC    RF,K11(,R4)\n         SLL   RF,K1 /* NUMBER HALFWORDS */\n         LA    R4,K12(RF,R4) NEXT SPOT\n         B     DIRBSCAN /* CONTINUE */\nDIREND   CLOSE (DIRREAD)\n         LTR   R5,R5 /* ANY MEMBERS IN DATASET */\n         BNP   FNOMEM NO\n         L     R4,=A(TTRLIST) SCAN INFO ON ALL INPUT MEMBERS\n         L     RF,=A(STORLIST) OUTPUT CHAINED STORE LIST\n         XC    K0(K12,RF),K0(RF) PRIME STORE LIST\n         B     NEXTITTR SKIP MEMBER DIRECTRY\nSTORLOP0 L     RF,=A(STORLIST) SCAN KNOWN STORE LIST\nSTORLOP1 OC    K0(K8,RF),K0(RF) SET END OF STORE LIST\n         BZ    ADDNSTOR ADD NEW STORE TO LIST\n         CLC   K1(K4,R4),K0(RF) KNOWN STOR NUMBER\n         BE    ADDESTOR ADD EXISTING STORE\n         LA    RF,K12(,RF) NEXT KNOWN STORE TO CHECK\n         B     STORLOP1 ...\nADDESTOR LM    R6,R7,K4(RF) STOR MEMCTR AND BACKCHAIN PTR\n         LA    R6,K1(,R6) #MEM IN THIS STORE\n         ST    R7,K12(,R4) BACKCHAIN INPUT MEMBER LIST\n         LR    R7,R4 NEW CHAIN END IN STOR\n         STM   R6,R7,K4(RF) STORE INFO UPDATED\nNEXTITTR LA    R4,K16(,R4) NEXT INPUT TTR\n         BCT   R5,STORLOP0 RESCAN KNOWN STORE LIST FOR NEW MEM\n         B     OPENSYT1 REOPEN FOR MEMBER READ\nADDNSTOR MVC   K0(K4,RF),K1(R4) SAVE STORE NUMBER\n         XC    K4(K8,RF),K4(RF) INIT MEMCTR AND CHAIN PTR\n         B     ADDESTOR CONTINUE\nOPENSYT1 OPEN  (MEMREAD,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         L     R6,OPENSYT1+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         L     R0,=A(7*1024*1024) 7M WORKAREA\n         GETMAIN R,LV=(0)\n         ST    R1,WORKPTR\n         L     R7,=A(STORLIST) /* START OF DIR LIST */\nSTORSCAN LM    R4,R6,K0(R7) STOR#,MEMCTR,FIRSTPTR\n         MVC   K0(K4,R1),=C'STOR' HEADER START\n         ST    R4,K4(,R1) STORE #\n         ST    R5,STORMEMC SAVE THIS STORE MEM CTR\n         CVD   R5,WORK MEMBER CTR PER STORE\n         UNPK  WORK(K5),WORK+K5(K3) PRINTABLE\n         OI    WORK+K4,C'0'\n         MVC   K8(K3,R1),=C'000' ...\n         MVC   K11(K5,R1),WORK ...\n         LR    RF,R5 CALC HEADER SIZE\n         LA    R0,K24 ...\n         SLR   RE,RE ...\n         MR    RE,R0 ...\n         LA    RF,K16(,RF) ADD FIXED HDR SIZE\n         LA    R4,K16(,R1) PTR VAR HDR SECTION\n         LA    R5,K0(RF,R1) PTR DATA SECTION\n         ST    RF,K8(,R4) TEMP HOLD AREA FOR MEMBER OFFSET SAVE\nSTORLOOP MVC   K0(K8,R4),K0(R6) HDR MEMBER NAME\n         XC    K16(K8,R4),K16(R4) CLEAR MEMBER ENTRY SIZE\n         LA    R8,K8(,R6) PTR TO TTR TO START MEM READ\nMEMLOOP  FIND  MEMREAD,(R8),C /* BPAM USES OUR TTR */\n         LTR   RF,RF /* FIND OK */\n         BNZ   FFIND ...\nGETMEM   READ  DECBMEM,SF,MF=E /* INPUT DATA BLOCK */\n         CHECK DECBMEM\n         LH    R2,IOAREA+K4 /* INPUT VAR RCDSIZE */\n         SH    R2,=H'4' /* CALC OUT RDW LEN - ALWAYS 1 RCD/BLK */\n         L     R0,K16(,R4) GET TEMP AREA DATA FOR MEM SIZE\n         ALR   R0,R2 THIS RCD LEN\n         ST    R0,K16(,R4) SAVE SUM\n         LR    R0,R5 TARGET DATA SECTION AREA\n         LR    R1,R2 LEN\n         LA    RE,IOAREA+K8 SOURCE DATA AREA\n         LR    RF,R2 LEN\n         MVCL  R0,RE SAVE DATA\n         ALR   R5,R2 PTR NEXT DATA AREA\n         B     GETMEM LOOP\nMEMEND   ICM   R6,K15,K12(R6) RUN STORE MEM CHAIN\n         LA    R4,K24(,R4) NEXT OUTPUT HDR LOC\n         BNZ   STORLOOP CONTINUE\n         L     R2,WORKPTR START OF OUTPUT DATA\n         MVC   STOWLIST(K8),K0(R2) MEMBER NAME FOR STOW\n         TR    K0(K16,R2),EBCASCII FIXED HDR TO ASCII\n         L     R3,STORMEMC THIS STORE MEM CTR\n         LA    R2,K16(,R2) PTR VAR HDR SECTION\n         L     R4,K8(,R2) FIRST OFFSET SAVED HERE\n         LR    R1,R4 SAVE IN R1 TOTAL STORE MEMBER LEN INCL HDR\nPROCHDR1 L     R5,K16(,R2) LEN OF MEMBER IN BIN\n         ALR   R1,R5 SUM TOTAL STOR LEN\n         LR    R0,R4 CALC NEXT OFFSET\n         ALR   R0,R5 ...\n         CVD   R4,WORK OFFSET IN BIN\n         LR    R4,R0 NEXT OFFSET\n         UNPK  K8(K8,R2),WORK+K4(K4) PRINTABLE\n         OI    K15(R2),C'0'\n         CVD   R5,WORK LEN IN BIN\n         UNPK  K16(K8,R2),WORK+K4(K4) PRINTABLE\n         OI    K23(R2),C'0'\n         TR    K0(K24,R2),EBCASCII VAR HDR TO ASCII\n         LA    R2,K24(,R2) NEXT VAR HDR SEC\n         BCT   R3,PROCHDR1\n         SLR   R0,R0 CALC HOW MANY 32752 BYTE RCDS FOR STORE\n         D     R0,=A(K32752) MAX RCD LEN,R1=COUNT,R0=RMDR\n         LR    R2,R0 SAVE RMDR\n         LR    R3,R1 SAVE RCD CTR\n         XC    IOAREA(K8),IOAREA SETUP BDW AND RDW\n         LTR   R3,R3 ANY MAXSIZE RCDS\n         BZ    TRUNCMEM NO\n         MVC   IOAREA(K2),=AL2(K32760) BDW\n         MVC   IOAREA+K4(K2),=AL2(K32756) RDW\n         L     R4,WORKPTR OUTPUT AREA HOLDER\nWMEMLOOP LM    R0,R1,=A(IOAREA+K8,K32752) TARGET PTR\n         LR    RE,R4 SOURCE PTR\n         ALR   R4,R1 NEXT SOURCE PTR\n         LR    RF,R1 LEN\n         MVCL  R0,RE ...\n         WRITE DECBOUT,SF,,IOAREA,MF=E /* OUTPUT A BLOCK */\n         CHECK DECBOUT /* WAIT AND CHECK PREVIOUS WRITE */\n         BCT   R3,WMEMLOOP CONTINUE\nTRUNCMEM L     R0,=A(IOAREA+K8) TARGET PTR\n         LR    R1,R2 SHORT LEN\n         LR    RF,R2 SHORT LEN\n         LR    RE,R4 SOURCE PTR\n         MVCL  R0,RE ...\n         LA    R2,K4(,R2) RDW TOTAL\n         STH   R2,IOAREA+K4 ...\n         LA    R2,K4(,R2) BDW TOTAL\n         STH   R2,IOAREA ...\n         WRITE DECBOUT,SF,,IOAREA,MF=E /* OUTPUT A BLOCK */\n         CHECK DECBOUT /* WAIT AND CHECK PREVIOUS WRITE */\n         STOW  SYSUT2,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         L     R1,WORKPTR RESET STORE DATA PTR FOR NEXT STORE\n         LA    R7,K12(,R7) PROCESS NEXT STORE\n         OC    K0(K12,R7),K0(R7) STORE LIST END\n         BNZ   STORSCAN CONTINUE\n         CLOSE (MEMREAD,,SYSUT2)\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nFMEMCOUN LA    RF,K28 /* MORE THAN MAX MEMBERS */\n         B     MAINEXIT\nFNOMEM   LA    RF,K32 /* NO INPUT MEMBERS IN SYSUT1 */\n         B     MAINEXIT\nFFIND    LA    RF,K36 /* FIND FAILURE */\n         B     MAINEXIT\nFSTOW    LA    RF,K40 /* STOW FAILURE */\n         B     MAINEXIT\n         LTORG\n         PRINT NOGEN\n         READ  DECBDIR,SF,DIRREAD,DIRBLOCK,'S',MF=L /*READ DIR BLOCK*/\n         READ  DECBMEM,SF,MEMREAD,IOAREA,'S',MF=L  /*READ MEM BLOCK*/\nWORK     DC    D'0'\nWORKPTR  DC    A(K0) GETMAINED AREA\nSTORMEMC DC    A(K0) SAVE AREA FOR STORE MEM CTR\nDIRREAD  DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(R),                       X\n               EODAD=*-*,KEYLEN=8,RECFM=F,LRECL=256,BLKSIZE=256\nMEMREAD  DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R),EODAD=MEMEND,RECFM=VB, X\n               KEYLEN=0\nSYSUT2   DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=(R,W),NCP=1,RECFM=VB,      X\n               LRECL=32756,BLKSIZE=32760,BUFNO=1\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C'.'\n         DC    X'2E'\n         ORG   EBCASCII+C':'\n         DC    X'3A'\n         ORG   EBCASCII+C'='\n         DC    X'3D'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\nSTOWLIST DC    (K0)A(K0),C'STOR????',A(K0) /* TTRC OF ZERO */\n         WRITE DECBOUT,SF,SYSUT2,MF=L    /* OUTPUT A BLOCK */\nSAVRECFM DC    AL1(K0)\nDIRBLOCK DC    (K264)AL1(K0) /* A DIR BLOCK */\nIOAREA   DS    0H'0',(K32760)AL1(K0) /* LARGE I/O WORKAREA */\nTTRLIST  DS    (K0)A(K0),(K16384)CL16' ' 8NAME,4TTR,4STORECHAINPTR\nSTORLIST DS    (K4096)CL12' '  4STORE#,4STORMEMCTR,4STORMEMPTR\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//G.SYSUDUMP DD SYSOUT=*\n//G.SYSUT1 DD DSN=TECH110.POLLFVOL.OUTPUT,DISP=SHR\n//G.SYSUT2 DD DISP=(NEW,CATLG),DSN=TECH110.TEST.PDS,\n//  RECFM=VB,LRECL=32756,BLKSIZE=32760,\n//  SPACE=(CYL,(300,50,180),RLSE)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SDD81JCL": {"ttr": 9236, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x92\\x04?\\x00\\x92\\x04O\\x17\\x10\\x00\\x17\\x00\\xa2\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-02-12T00:00:00", "modifydate": "1992-02-13T17:10:00", "lines": 23, "newlines": 162, "modlines": 0, "user": "TECH110"}, "text": "//SDD81JCL JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=TECH110,TYPRUN=HOLD\n//STEP010  EXEC PGM=SDD81TMP,\n//            DPRTY=(15,15)\n//SYSUDUMP DD SYSOUT=X\n//REPORT   DD SYSOUT=*\n//XCOMLOG  DD SYSOUT=*,\n//            DCB=LRECL=133\n//DMASTER  DD DSN=FNCL.N.SDD.JOEG100.SORTPPM,\n//            DISP=SHR,\n//            FREE=CLOSE\n//EMASTER  DD DSN=FNCL.N.SDD.JOEG100.SORTE0,\n//            DISP=SHR,\n//            FREE=CLOSE\n//BREAKER  DD DSN=TECH110.POLLE113.OUTPUT,\n//            DISP=(NEW,CATLG,DELETE),\n//            DCB=(SYS1.LINKLIB,\n//             DSORG=PO,RECFM=VB,BLKSIZE=32760,LRECL=32756),\n//            SPACE=(CYL,(150,50,180),RLSE),\n//            FREE=CLOSE\n//SYSIN01  DD DSN=SYS1.PRODSYSI.MASTER(SDD81D10),\n//            DISP=SHR,\n//            SUBSYS=LAM\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SDD81NEW": {"ttr": 9238, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x912o\\x00\\x912o\\x10U\\x03\\x17\\x03\\x15\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-11-22T00:00:00", "modifydate": "1991-11-22T10:55:00", "lines": 791, "newlines": 789, "modlines": 0, "user": "JEFFK"}, "text": "PLB      TITLE 'STORE POLL DOWNLOAD DATA BREAKOUT'\nPOLLDOWN CSECT , /* STORE POLL DOWNLOAD DATA FILE BREAKOUT'\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK27      EQU   27\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX00      EQU   X'00'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nPOLLDOWN AMODE 24\nPOLLDOWN RMODE 24\n         SAVE  (14,12),,POLLDOWN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING POLLDOWN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         TESTAUTH FCTN=1 , /* APF AUTHORIZED */\n         LTR   RF,RF\n         BNZ   FAUTH\n         MODESET KEY=ZERO,MODE=SUP,RELATED=('STATE SWITCH')\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         SYSEVENT DONTSWAP,ENTRY=BRANCH , /* NOSWAP SHORT-TERM */\n         LR    RD,R6 /* RESTORE */\n         CLM   R1,K1,=AL1(K0)\n         BNE   FSWAP\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         L     R1,=A(POLLDOWN) /* PAGEFIX */\n         L     R2,=A(ENDFIX) ...\n*        PGSER R,FIX,A=(1),EA=(2),RELEASE=N,LONG=Y,BACKOUT=Y,         X\n*              BRANCH=Y,ECB=FIXECB\n         LR    RD,R6 /* RESTORE */\n*        LTR   RF,RF\n*        BNZ   FPGSER\n         USING PSA,R0\n         L     RF,PSATOLD /* MAP TCB PROPER */\n         DROP  R0\n         USING TCB,RF\n         MODESET EXTKEY=TCB,WORKREG=2,RELATED=('TCB KEY')\n         DROP  RF\n         RDJFCB BREAKER , /* ACQUIRE OUTPUT FILE JFCB */\n         LTR   RF,RF\n         BNZ   FRDJFCB\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         TM    JFCDSRG1,JFCORGPO /* DSORG=PO */\n         BZ    FNOTPO /* NO */\n         TM    JFCBIND2,JFCNEW /* DISP=NEW */\n         BNO   FNOTNEW /* NO */\n         DROP  RF\nOPENLIST OPEN  (DMASTER,(INPUT),BREAKER,(OUTPUT),REPORT,(OUTPUT),      X\n               EMASTER,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R9,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         USING IHADCB,R8\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R8\n         USING IHADCB,R9\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R9\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         SLR   R5,R5 /* OUTSTAND NCP WRITE COUNTER */\nPGETLOOP LA    R6,INAREA /* DOWNLOAD FILE HAS SETS OF 4 RCDS*/\n         GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         NI    FLAGS,XFF-X40 /* SET NEW MEMBER FLAG OFF */\n         OI    FLAGS,X80 /* SET UNEXPECTED EOF; MUST HAVE SETS OF 4*/\n         TM    FLAGS,X08 /* MID TYPE 30 FILE */\n         BO    MIDTYP30 /* YES */\n         CLC   =C'30',INAREA+K7 /* NEW TYPE 30 SET */\n         BE    SET30MOD /* YES */\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         LA    R7,K3 /* CTR FOR NEXT 3 RECORDS */\nGETLOOP  GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         BCT   R7,GETLOOP  ...\n         MVC   INAREA+K80(K64),INAREA+K96 /*BUILD */\n         MVC   INAREA+K144(K64),INAREA+K176 /* SHIFT RECORD AREAS */\n         MVC   INAREA+K208(K64),INAREA+K256\nLAST30SG MVC   SEQFIELD(K1),INAREA+K16 /* INPUT RECORD SEQ # */\nPROCE0   NI    FLAGS,XFF-X80 /* RESET EXPECTED EOF BIT */\n         NI    SEQFIELD,XFF-X80 /* SHUT DOWN HI SET END BIT */\n         TM    FLAGS,X20 /* EXPECTED WRAPAROUND MODE */\n         BO    DOWRAP /* YES */\n         CLC   EXPSEQ,SEQFIELD /* MATCH ON EXPECTED SEQ # */\n         BNE   SEQERR /* ERROR */\n         TM    FLAGS,X01 IF TYPE30 HAS WRAPPED ALREADY\n         BO    BUILDRCD DO NOT DO NEXT CHECK-CAUSE SEQ# GOES 0,1,..\n         CLI   SEQFIELD,X01 /* FIRST OF SET */\n         BNE   BUILDRCD /* NO, ELSE SAVE MEMBER NAME */\n         CLC   STOWLIST+K1(K4),INAREA+K2 /* COMPARE STORE ID */\n         BNE   RESETSEQ /* MEMBER BREAK */\n         TM    FLAGS,X04 /* E0 UP */\n         BZ    CHKDFID NO\n         CLC   STOWLIST+K5(K3),INAREA+K9 /* E0 FID */\n         BNE   RESETSEQ /* BREAK */\n         B     SEQERR /* OUT OF SEQ */\nCHKDFID  CLC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VAL DOWN CMPR*/\n         BNE   RESETSEQ /* MEMBER BREAK */\n         CLC   =C'50',INAREA+K7  /* FILEID WITH SUBGROUP */\n         BE    BUILDMEM /* YES */\n         CLC   =C'60',INAREA+K7 /* THIS ONE TOO */\n         BE    BUILDMEM /* CONTINUE */\n         B     SEQERR /* OUT OF SEQ */\nRESETSEQ MVI   DUPLSEQ,C'0' /* RESET MEMBER NAME SUFFIX */\nBUILDMEM MVC   STOWLIST+K1(K4),INAREA+K2 /* SAVE STORE ID */\n         CLC   STOWLIST+K1(K4),=C'0000' /* INVALID VALUE STOREID*/\n         BE    INVSTID /* BAD*/\n         TRT   STOWLIST+K1(K4),NUMSONLY /* NUMERICS ONLY */\n         BNZ   INVSTID /* BAD*/\n         TM    FLAGS,X04 /* E0 CODE */\n         BZ    MOVDFID /* NO */\n         MVC   STOWLIST+K5(K3),INAREA+K9 /* FID FOR E0 */\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* GET FIRST REAL RCD OF SET */\n         L     R1,TEIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K550)\n         ST    R1,TEIN#\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nMOVDFID  MVC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VALUE DOWNDATA*/\n         CLC   STOWLIST+K5(K2),=C'50'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'60'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'30'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'25'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'27'   /* VALID VALUE */\n         BNE   INVFT /* ERROR */\nVALIDFT  SLR   RF,RF /* BUILD UNIQUE SUFFIX */\n         IC    RF,DUPLSEQ /* INCR BY 1 FOR UNIQUE MEMBER NAME */\n         LA    RF,K1(,RF)\n         CLM   RF,K1,=C'9'    /* EXCEEDED SUFFIX MAX */\n         BH    HISUBEOF /* YES */\n         STC   RF,DUPLSEQ /* SAVE NEW UNIQUE MEMBER NAME SUFFIX */\n         STC   RF,STOWLIST+K7 ...\nPRIMCOMM XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nBUILDRCD LH    RF,K0(,R3) /* CURRENT VAR BLOCK SIZE */\n         SLR   R0,R0 /* PICKUP RECORD SET LEN */\n         TM    FLAGS,X04 /* E0 */\n         BZ    RCDLD /* NO */\n         ICM   R0,3,INAREA+K19  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         CLM   R0,K3,=AL2(K255) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\n         B     RCDLE\nRCDLD    ICM   R0,3,INAREA+17  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         AL    R0,=A(K3) /* FACTOR IN 1BYTE SEQ#AND 2BYTELEN*/\n         CLM   R0,K3,=AL2(K256) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\nRCDLE    AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         C     RF,=A(K32760) /* MAX BLOCKSIZE */\n         BH    DONTFIT /* THIS RECORD CANT BE ADDED */\n         STH   RF,K0(,R3) /* UPDATE BDW */\n         LH    RF,K4(,R3) /* CURRENT VAR RCD SIZE */\n         AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         STH   RF,K4(,R3) /* UPDATE RDW */\n         L     R6,TCHAR# /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,TCHAR# ...\n         L     R6,XBUILDEM /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,XBUILDEM ...\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PROPD /* MOVE D0 */\n         LA    R8,INAREA+K21 /* SOURCE AREA */\n         B     PROPE /* CONTINUE */\nPROPD    MVC   0(K3,R4),INAREA+K16 /* MOVE 3BYTE HDR FIELD */\n         LA    R4,K3(,R4) /* + */\n         LA    R8,INAREA+K19 /* SOURCE AREA */\nPROPE    LR    R6,R4 /* TARGET FOR RCD MOVE */\n         LR    R9,R7  /* AS PER MVCL MAX PER RCD */\n         MVCL  R6,R8 /* MOVE RECORD INTO OUTPUT BUFFER */\n         LR    R4,R6 /* SAVE POSITION OF NEXT RCD TO BE BUILT */\n         TM    FLAGS,X04 /* E0 */\n         BZ    LRCDD /* NO */\n         TM    INAREA+K18,X80 /* SET END */\n         BO    E0SETEND /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE WRAP */\n         BNE   PGETE /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETE /* CONTINUE */\nE0SETEND LH    RF,K0(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* BDW -2 */\n         STH   RF,K0(,R3)\n         LH    RF,K4(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* RDW -2 */\n         STH   RF,K4(,R3)\n         L     RF,TCHAR#\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,TCHAR#\n         L     RF,XBUILDEM\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,XBUILDEM\n         B     BREAKIT /* CONTINUE */\nLRCDD    TM    INAREA+K16,X80 /* LAST RECORD IN SET */\n         BO    BREAKIT /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE POLL */\n         BNE   PGETLOOP /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETLOOP /* CONTINUE */\nDOWRAP   NI    FLAGS,XFF-X20 /* SET WRAP MODE OFF */\n         TM    FLAGS,X08 MID TYPE30\n         BO    DOWRAP30 YES, THEY WRAP TO 0, NOT 1\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         CLI   SEQFIELD,X01 /* EXPECTED WRAP; MUST BE 01 */\n         BE    BUILDRCD /* OK */\n         B     WRAPERR /* FAILURE IN INPUT */\nDOWRAP30 MVI   EXPSEQ,X00 /* NEXT RCD HAS SEQ # OF 00 */\n         OI    FLAGS,X01 TYPE30 HAS WRAPPED\n         CLI   SEQFIELD,X00 /* MUST BE THIS SEQ */\n         BE    BUILDRCD OK, CONTINUE\n         B     WRAPERR /* FAILURE */\nSET30MOD OI    FLAGS,X08 /* TYPE 30 FILE PROCESS ACTIVE */\n         GET   DMASTER,(R6) /*IGNORE SET HDR - MAJOR SEQ# 001*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\nMIDTYP30 GET   DMASTER,(R6) /* FIRST OF SET */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         SLR   R6,R6 /* WORK */\n         ICM   R6,K3,INAREA+K17 /* RCD LEN */\n         LA    R7,K57 /* MAX DATA LEN ON FIRST RCD-INCL $$A$ TRLR*/\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         LA    R7,K60 /* SECONDARY RCD MAX */\n         GET   DMASTER,INAREA+K76 /* RCD SEG# 2*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K76(K60),INAREA+K92 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K136 /* RCD SEG# 3*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K136(K60),INAREA+K152 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K196 /* RCD SEG# 4*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K196(K60),INAREA+K212 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K256 /* RCD SEG# 5*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K256(K60),INAREA+K272 /* SHIFT IGN HDR/TRLR */\n         B     LAST30SG /* LENGTH EXHAUSTED */\nDONTFIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DONTFIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDONTFIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         B     PRIMCOMM /* CONTINUE */\nBREAKIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    BREAKIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nBREAKIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE BEFORE STOW */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         OI    FLAGS,X40 /* SET STOW DOWN; MEMBER CREATED */\n         NI    FLAGS,XFF-X08-X01  /* RESET TYP30 PROCESS OFF */\n         L     RF,MEMLISTP /* UPDATE DIRECTORY MEMBER */\n         MVC   K0(K8,RF),STOWLIST /* MEMBER NAME */\n         L     R0,XBUILDEM /* MEMBER BYTE COUNT */\n         CVD   R0,WORK ...\n         UNPK  K8(K9,RF),WORK+K3(K5)\n         MVC   K8(K8,RF),K9(RF) ...\n         OI    K15(RF),C'0' ....\n         TR    K0(K16,RF),EBCASCII /* CHANGE TO ASCII */\n         LA    RF,K16(,RF) /* SET NEXT DIR ENTRY PTR */\n         ST    RF,MEMLISTP /* UPDATE PTR */\n         L     RF,MEMBER# /* INCR MEMBER COUNTER */\n         LA    RF,K1(,RF)\n         ST    RF,MEMBER# ...\n         CLC   XBUILDEM,MBUILDEM /* IS THIS LARGEST MEM */\n         BNH   RESETIND /* NO */\n         MVC   MBUILDEM,XBUILDEM /* RESET MAX FOUND */\n         MVC   MNAMEMEM,STOWLIST /* MEMBER NAME */\nRESETIND XC    XBUILDEM,XBUILDEM /* RESET INDIV TOTAL */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PGETLOOP /* CONTINUE */\n         B     PGETE /* CONTINUE E0 */\nEOD      L     RF,MEMBER# MEMBER COUNT\n         LTR   RF,RF ANY MEMBERS AT ALL\n         BZ    EODE NO, SKIP NEXT CODE\n         TM    FLAGS,X80 /* UNEXPECTED */\n         BO    SNOEOF /* YES */\n         TM    FLAGS,X40 /* SEE IF STOW FLAG ON */\n         BZ    SNOEOF /* YES */\nEODE     NI    FLAGS,XFF-X40 /* SET NEW MEM OFF */\n         OI    FLAGS,X04 /* INDICATE E0 PROCESSING ACTIVE */\n         MVC   STOWLIST(K8),=C'E???????' /* PREP FOR E0 MEMBERS */\nPGETE    OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* RETRIEVE E0 RCD */\n         L     R1,TEIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K550)\n         ST    R1,TEIN#\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nEOE      MVC   STOWLIST(K8),=C'DIRECTRY' /* INTERNAL DIRNAME */\n         SLR   R5,R5 /* CURRENT WRITE CHECK CTR */\n         L     R3,CURAREAP /* PREP DIR HDR */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K4(K2,R3),=AL2(K84) /* RDW */\n         MVC   K0(K2,R3),=AL2(K88) /* BDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         MVC   K32(K4,R4),=C'DSN=' /* HARD CODE */\n         L     RF,MEMBER# /* MEMBER ENTRY CTR */\n         CVD   RF,WORK ...\n         UNPK  K16(K8,R4),WORK+K4(K4)\n         OI    K23(R4),C'0'\n         MVC   K24(K8,R4),=C'00000000' /* RESERVED */\n         MVC   K0(K16,R4),=C'19YY.DDDHH:MM:SS' /* LITERAL */\n         TIME  DEC\n         STCM  R1,K7,WORK+K5 /* DATE */\n         UNPK  WORK(K5),WORK+K5(K3) ...\n         OI    WORK+4,C'0'\n         MVC   K2(K2,R4),WORK /* YY */\n         MVC   K5(K3,R4),WORK+K2 /* DDD */\n         CLM   R1,K8,=AL1(K0) /* CENTURY 19 OR 20 */\n         BE    DOTIME /* 19 */\n         MVC   K0(K2,R4),=C'20' /* ELSE */\nDOTIME   ST    R0,WORK /* PACKED TIME */\n         MVI   WORK+K3,K15 /* MAKE LIKE PACKED */\n         UNPK  K36(K7,R4),WORK(K4) /* USE TEMP WORK */\n         MVC   K8(K2,R4),K36(R4) HH\n         MVC   K11(K2,R4),K38(R4) MM\n         MVC   K14(K2,R4),K40(R4) SS\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   K36(K44,R4),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         TR    K0(K80,R4),EBCASCII /* CHANGE TO ASCII */\n         WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R6,MEMBER# /* PRODUCE OUR DIRECTORY MEMBER */\n         LTR   R6,R6 ANY MEMBERS AT ALL\n         BZ    DODIR5A SKIP OUTPUT\n         L     R7,=A(MEMLIST) /* TABLE START */\nDODIR0   LA    R8,K2047 /* MAX # DIR ENTRY IN 1 VAR LEN BLK */\n         SLR   R9,R9 /* CURRENT BLK ENTRY COUNT */\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nDODIR1   MVC   K0(K16,R4),K0(R7) /* POSITION 1 MEMBER ENTRY */\n         LA    R9,K1(,R9) /* INCR ENTRY COUNT */\n         LA    R4,K16(,R4) /* NEXT OUTPUT SPOT */\n         LA    R7,K16(,R7) /* NEXT INPUT SPOT */\n         BCT   R8,DODIR3 /* COUNT FOR # ENTRIES IN BLK */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR2   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDODIR2   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         B     DODIR0   /* CONTINUE */\nDODIR3   BCT   R6,DODIR1 /* MEMBER COUNT */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR5   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nDODIR5   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\nDODIR5A  CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         CLOSE (BREAKER) /* MAKE AVAIL FOR XCOMM */\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   SDSNAME+K6(L'JFCBDSNM),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         LA    R1,SVC99PRM /* DYNALLOC PARM */\n         DYNALLOC\n         LTR   RF,RF\n         BNZ   FSVC99\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         LA    R1,=A(XCOMMPRM) /* EXEC PARM */\n         BALR  RE,RF /* GO SCHEDULE */\n         LTR   RF,RF /* RC */\n         BNZ   FXCOMM /* SCHEDULE FAILURE */\n         DELETE EPLOC=XCOMMEP\nERREXIT  MVC   OUTMSG(L'HEADER),HEADER\n         PUT   REPORT,OUTMSG\n         L     RF,MEMBER# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMEM#),MSGMEM#\n         MVC   OUTMSG+L'MSGMEM#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMEM#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TDIN#   /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGDIN#),MSGDIN#\n         MVC   OUTMSG+L'MSGDIN#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGDIN#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TEIN#   /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGEIN#),MSGEIN#\n         MVC   OUTMSG+L'MSGEIN#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGEIN#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TCHAR# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGTCH#),MSGTCH#\n         MVC   OUTMSG+L'MSGTCH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGTCH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         SLR   R6,R6\n         L     R7,TCHAR#\n         L     R8,MEMBER#\n         LTR   R8,R8 /* DONT GET ERROR FOR DIVIDE BY 0 */\n         BNZ   CALCAVGC  /* ELSE FORCE THIS MESSAGE */\n         SLR   R7,R7\n         B     CALCAVG2\nCALCAVGC DR    R6,R8\nCALCAVG2 ST    R7,TAVCH#\n         L     RF,TAVCH# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGACH#),MSGACH#\n         MVC   OUTMSG+L'MSGACH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGACH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,MBUILDEM /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMCH#1),MSGMCH#1\n         MVC   OUTMSG+L'MSGMCH#1(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMCH#1(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         MVC   OUTMSG(L'MSGMCH#2),MSGMCH#2\n         MVC   OUTMSG+K17(K8),MNAMEMEM\n         PUT   REPORT,OUTMSG\n         TM    FLAGS,X10 /* SEVERE ERROR OCCURED */\n         BZ    DOCLOSE /* NO */\n         MVC   OUTMSG(L'MERRMSG),MERRMSG\n         PUT   REPORT,OUTMSG\nDOCLOSE  CLOSE (DMASTER,,REPORT,,EMASTER)\n         FREEPOOL DMASTER , /*NO FREEPOOL FOR BREAKER;DYNBUFF USED*/\n         FREEPOOL EMASTER ,\n         FREEPOOL REPORT  ,\n         MODESET EXTKEY=ZERO,WORKREG=2,RELATED=('SUPVR KEY')\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         L     R1,=A(POLLDOWN) /* PAGEFREE*/\n         L     R2,=A(ENDFIX) ...\n*        PGSER R,FREE,A=(1),EA=(2),RELEASE=N,ANYWHER=Y,               X\n*              BRANCH=Y,ECB=FIXECB\n         LR    RD,R6 /* RESTORE */\n*        LTR   RF,RF\n*        BNZ   FPGSER\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         SYSEVENT OKSWAP,ENTRY=BRANCH , /* SWAP AGAIN */\n         LR    RD,R6 /* RESTORE */\n         CLM   R1,K1,=AL1(K0)\n         BNE   FSWAP\n         USING PSA,R0\n         L     RF,PSATOLD /* MAP TCB PROPER */\n         DROP  R0\n         USING TCB,RF\n         MODESET EXTKEY=TCB,WORKREG=2,RELATED=('TCB KEY')\n         DROP  RF\nXEXIT    L     RF,SYSTEMRC /* SET OS RC */\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nSNOEOF   LA    RF,K28 /* UNEXPECTED EOF ON INPUT */\n         B     DUMPEXIT\nWRAPERR  LA    RF,K32 /* X7F NOT FOLLOWED BY X01 */\n         B     DUMPEXIT\nSEQERR   LA    RF,K36 /* SEQUENCE NUMBER OUT OF ORDER */\n         B     DUMPEXIT\nINVRCDLN LA    RF,K40 /* INDIV RCD LEN=0 OR GT>253 */\n         B     DUMPEXIT\nHISUBEOF LA    RF,K44 /* TOO MANY >9 MULTIPLE 50/60 SUBFILES */\n         B     DUMPEXIT\nINVFT    LA    RF,K48 /* INVALID INPUT RCD FILETYPE(25,27,30,50,60)\n         B     DUMPEXIT\nINVSTID  LA    RF,K52 /* INVALID STOR ID=0 OR NOT NUMERIC */\n         B     DUMPEXIT\nFRDJFCB  LA    RF,K56 /* READ JFCB FAILURE */\n         B     MAINEXIT\nFNOTPO   LA    RF,K60 /* BREAKER NOT PO */\n         B     MAINEXIT\nFNOTNEW  LA    RF,K64 /* DISP=NEW MUST BE FOR BREAKER */\n         B     MAINEXIT\nFAUTH    LA    RF,K68 /* NOT AUTH */\n         B     MAINEXIT\nFSWAP    LA    RF,K72 /* DONTSWAP FAIL */\n         B     MAINEXIT\nFPGSER   LA    RF,K76 /* PAGEFIX FAIL  */\n         B     MAINEXIT\nFSVC99   LA    RF,K80 /* SVC99 ALLOC FAIL */\n         B     DUMPEXIT\nFXCOMM   LA    RF,200(,RF) /* 200+XCOM FAILURE */\n         B     DUMPEXIT\nFSTOW    LA    RF,100(,RF) /* 100+STOW FAILURE CODE+REASON CODE*/\n         ALR   RF,R0 /* ADD IN REASON CODE */\nDUMPEXIT OI    FLAGS,X10 /* SEVERE ERROR BIT */\n         ST    RF,SYSTEMRC /* BINARY RC */\n         CVD   RF,WORK /* PREP ERROR MSG */\n         UNPK  WORK(K3),WORK+K6(K2)\n         OI    WORK+K2,C'0'\n         MVC   MERRMSG+K13(K3),WORK\n         MVC   MERRMSG+K27(K8),STOWLIST\n         LA    R0,200 DONT DUMP IF XCOM ERROR\n         CLR   RF,R0 CHECK\n         BNL   ERREXIT\n         ABEND 512,DUMP\n         LTORG\n         PRINT NOGEN\n         WRITE DECB,SF,BREAKER,MF=L    /* OUTPUT A BLOCK */\nWORK     DC    D'0'\nJFCBEXIT DC    0F'0',X'87',AL3(JFCB)\nJFCB     DC    CL176' ' /* A JFCB AREA */\nSAVEAREA DC    (K18)A(K0) /* SPECIAL SAVE AREA */\nFIXECB   DC    A(K0) /* PGSER ECB */\nBREAKER  DCB   DDNAME=BREAKER,DSORG=PO,MACRF=(R,W),NCP=5,RECFM=VB,     X\n               LRECL=32756,BLKSIZE=32760,BUFNO=11,EXLST=JFCBEXIT\nDMASTER  DCB   DDNAME=DMASTER,DSORG=PS,EODAD=EOD,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=80\nEMASTER  DCB   DDNAME=EMASTER,DSORG=PS,EODAD=EOE,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=550\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(GM,PM),                   X\n               RECFM=FBA,LRECL=133,BLKSIZE=133\nSVC99PRM DC    X'80',AL3(SVC99RB)\nSVC99RB  DC    X'14014000'\n         DC    X'00000000'\n         DC    A(S99TXTPR)\n         DC    X'00000000'\n         DC    X'40000000' /* WAIT ON DSN */\nS99TXTPR DC    X'00',AL3(SDDNAME)\n         DC    X'00',AL3(SDSNAME)\n         DC    X'00',AL3(SMEMBER)\n         DC    X'80',AL3(SDISP)\nSDDNAME  DC    X'000100010008',CL8'LCLDS01'\nSDSNAME  DC    X'00020001002C',CL44' '\nSMEMBER  DC    X'000300010008',CL8'DIRECTRY'\nSDISP    DC    X'000400010001',X'08' /* SHR */\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMMPRM DC    AL2(L'XCOMMPRL)\nXCOMMPRL DC    C'TYPE=EXECUTE'\nSTOWLIST DC    (K0)A(K0),C'D???????',A(K0) /* TTRC OF ZERO */\nCURAREAP DC    A(OUTAREA1) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA2) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA3) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA4) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA5) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA6) /* CURRENT WORKING ON OUTPUT PTR */\nSTAGEPTR DC    A(*-*) /* WHERE UP TO IN STAGING AREA */\nMEMBER#  DC    A(K0) /* NUMBER OF PROCESSED MEMBERS */\nTDIN#    DC    A(K0) /* PRICE/PROMO CHARS IN */\nTEIN#    DC    A(K0) /* EO/MISC     CHARS IN */\nTCHAR#   DC    A(K0) /* TOTAL NUMBER OF DATA CHARACTERS TO BE SENT*/\nTAVCH#   DC    A(K0) /* APPROX AVG NUMBER CHARS PER MEMBER */\nXBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMEMLISTP DC    A(MEMLIST) /* PTR TO INTERNAL DIRECTORY */\nSYSTEMRC DC    A(K0) /* RC */\nMNAMEMEM DC    CL8' ' ...\nDUPLSEQ  DC    C'0' /* MEMBER NAME SUFFIX FOR ID50/60 SUBGROUPS */\nFLAGS    DC    AL1(K0)\n* X80 UNEXPECTED EOF; SHOULD NOT OCCUR\n* X40 LAST RECORD WAS SUBEOF - MEMBER CREATED\n* X20 MEMBER RCD WRAPAROUND FROM X7F TO X01 ...\n* X10 SEVERE ERROR FLAG USED BY EOJ ROUTINE\n* X08 TYPE 30 PROCESSING ACTIVE\n* X04 D0 PROCESSING COMPLETE; E0 PROCESSING ACTIVE\n* X01 TYPE30 SET HAS WRAPPED AT LEAST ONCE\nSEQFIELD DC    AL1(K0) /* USED TO HOLD SEQUENCE NUMBER */\nEXPSEQ   DC    AL1(K1) /* EXPECTED SEQ # NEXT - MAKE SURE ORDER */\nMSGPAT   DC    X'4B2020206B2020206B202120'\nOUTMSG   DC    CL133' '\nHEADER   DC    C'1POLLDOWN BREAKOUT REPORT'\nMSGMEM#  DC    CL40'0# OF PDS MEMBERS CREATED................'\nMSGDIN#  DC    CL40'0TOTAL PRICE/PROMO DATA IN...............'\nMSGEIN#  DC    CL40'0TOTAL E0/MISC DATA IN...................'\nMSGTCH#  DC    CL40'0TOTAL # DOWNLOADED CHARACTERS...........'\nMSGACH#  DC    CL40'0APPROX. AVG. # CHARACTERS PER MEMBER....'\nMSGMCH#1 DC    CL40'0MAX. # CHARS. PER INDIVIDUAL MEMBER.....'\nMSGMCH#2 DC    CL52' MEMBER NAME IS: XXXXXXXX'\nMERRMSG  DC    CL52'0** ERROR RC:??? ** MEMBER:????????'\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C'.'\n         DC    X'2E'\n         ORG   EBCASCII+C':'\n         DC    X'3A'\n         ORG   EBCASCII+C'='\n         DC    X'3D'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\nNUMSONLY DC    (K256)AL1(XFF) /* CHECK FOR DIGITS ONLY */\n         ORG   NUMSONLY+C'0'\n         DC    (K10)AL1(K0)\n         ORG\nINAREA   DC    (K550)AL1(K0) /* INPUT WORKAREA */\nOUTAREA1 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA2 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA3 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA4 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA5 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA6 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nMEMLIST  DS    (K32760)CL16' ' /* INCORE DIRECTORY */\nENDFIX   EQU   *-K1\n* 8 BYTE ASCII MEMBER NAME; 8 BYTE ASCII MEMBER CHAR COUNT\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         DSECT\n         IEFJFCBN\n         CVT   DSECT=YES\n         IKJTCB\n         IHAPSA\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SDD81TMP": {"ttr": 9732, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92\\x04?\\x00\\x92\\x04?\\x12 \\x03$\\x03\\x17\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-02-12T00:00:00", "modifydate": "1992-02-12T12:20:00", "lines": 804, "newlines": 791, "modlines": 0, "user": "TECH110"}, "text": "PLB      TITLE 'STORE POLL DOWNLOAD DATA BREAKOUT'\nPOLLDOWN CSECT , /* STORE POLL DOWNLOAD DATA FILE BREAKOUT'\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK27      EQU   27\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX00      EQU   X'00'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nPOLLDOWN AMODE 24\nPOLLDOWN RMODE 24\n         SAVE  (14,12),,POLLDOWN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING POLLDOWN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         TESTAUTH FCTN=1 , /* APF AUTHORIZED */\n         LTR   RF,RF\n         BNZ   FAUTH\n         MODESET KEY=ZERO,MODE=SUP,RELATED=('STATE SWITCH')\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         SYSEVENT DONTSWAP,ENTRY=BRANCH , /* NOSWAP SHORT-TERM */\n         LR    RD,R6 /* RESTORE */\n         CLM   R1,K1,=AL1(K0)\n         BNE   FSWAP\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         L     R1,=A(POLLDOWN) /* PAGEFIX */\n         L     R2,=A(ENDFIX) ...\n*        PGSER R,FIX,A=(1),EA=(2),RELEASE=N,LONG=Y,BACKOUT=Y,         X\n*              BRANCH=Y,ECB=FIXECB\n         LR    RD,R6 /* RESTORE */\n*        LTR   RF,RF\n*        BNZ   FPGSER\n         USING PSA,R0\n         L     RF,PSATOLD /* MAP TCB PROPER */\n         DROP  R0\n         USING TCB,RF\n         MODESET EXTKEY=TCB,WORKREG=2,RELATED=('TCB KEY')\n         DROP  RF\n         RDJFCB BREAKER , /* ACQUIRE OUTPUT FILE JFCB */\n         LTR   RF,RF\n         BNZ   FRDJFCB\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         TM    JFCDSRG1,JFCORGPO /* DSORG=PO */\n         BZ    FNOTPO /* NO */\n         TM    JFCBIND2,JFCNEW /* DISP=NEW */\n         BNO   FNOTNEW /* NO */\n         DROP  RF\nOPENLIST OPEN  (DMASTER,(INPUT),BREAKER,(OUTPUT),REPORT,(OUTPUT),      X\n               EMASTER,(INPUT))\n         LTR   RF,RF /* OPEN OKAY */\n         BNZ   FOPEN /*NO*/\n         LM    R6,R9,OPENLIST+K4 /* PICKUP DCB PTRS */\n         USING IHADCB,R6\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R6\n         USING IHADCB,R7\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R7\n         USING IHADCB,R8\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R8\n         USING IHADCB,R9\n         TM    DCBOFLGS,DCBOFOPN\n         BZ    FOPEN\n         DROP  R9\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         SLR   R5,R5 /* OUTSTAND NCP WRITE COUNTER */\nPGETLOOP LA    R6,INAREA /* DOWNLOAD FILE HAS SETS OF 4 RCDS*/\n         GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         NI    FLAGS,XFF-X40 /* SET NEW MEMBER FLAG OFF */\n         OI    FLAGS,X80 /* SET UNEXPECTED EOF; MUST HAVE SETS OF 4*/\n         TM    FLAGS,X08 /* MID TYPE 30 FILE */\n         BO    MIDTYP30 /* YES */\n         CLC   =C'30',INAREA+K7 /* NEW TYPE 30 SET */\n         BE    SET30MOD /* YES */\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         LA    R7,K3 /* CTR FOR NEXT 3 RECORDS */\nGETLOOP  GET   DMASTER,(R6)    /* FIRST INPUT RECORD FOR PRIMING */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         LA    R6,K80(,R6) /* NEXT SAVE AREA */\n         BCT   R7,GETLOOP  ...\n         MVC   INAREA+K80(K64),INAREA+K96 /*BUILD */\n         MVC   INAREA+K144(K64),INAREA+K176 /* SHIFT RECORD AREAS */\n         MVC   INAREA+K208(K64),INAREA+K256\nLAST30SG MVC   SEQFIELD(K1),INAREA+K16 /* INPUT RECORD SEQ # */\nPROCE0   NI    FLAGS,XFF-X80 /* RESET EXPECTED EOF BIT */\n         NI    SEQFIELD,XFF-X80 /* SHUT DOWN HI SET END BIT */\n         TM    FLAGS,X20 /* EXPECTED WRAPAROUND MODE */\n         BO    DOWRAP /* YES */\n         CLC   EXPSEQ,SEQFIELD /* MATCH ON EXPECTED SEQ # */\n         BNE   SEQERR /* ERROR */\n         TM    FLAGS,X01 IF TYPE30 HAS WRAPPED ALREADY\n         BO    BUILDRCD DO NOT DO NEXT CHECK-CAUSE SEQ# GOES 0,1,..\n         CLI   SEQFIELD,X01 /* FIRST OF SET */\n         BNE   BUILDRCD /* NO, ELSE SAVE MEMBER NAME */\n         CLC   STOWLIST+K1(K4),INAREA+K2 /* COMPARE STORE ID */\n         BNE   RESETSEQ /* MEMBER BREAK */\n         TM    FLAGS,X04 /* E0 UP */\n         BZ    CHKDFID NO\n         CLC   STOWLIST+K5(K3),INAREA+K9 /* E0 FID */\n         BNE   RESETSEQ /* BREAK */\n         B     SEQERR /* OUT OF SEQ */\nCHKDFID  CLC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VAL DOWN CMPR*/\n         BNE   RESETSEQ /* MEMBER BREAK */\n         CLC   =C'50',INAREA+K7  /* FILEID WITH SUBGROUP */\n         BE    BUILDMEM /* YES */\n         CLC   =C'60',INAREA+K7 /* THIS ONE TOO */\n         BE    BUILDMEM /* CONTINUE */\n         B     SEQERR /* OUT OF SEQ */\nRESETSEQ MVI   DUPLSEQ,C'0' /* RESET MEMBER NAME SUFFIX */\nBUILDMEM MVC   STOWLIST+K1(K4),INAREA+K2 /* SAVE STORE ID */\n         CLC   STOWLIST+K1(K4),=C'0000' /* INVALID VALUE STOREID*/\n         BE    INVSTID /* BAD*/\n         TRT   STOWLIST+K1(K4),NUMSONLY /* NUMERICS ONLY */\n         BNZ   INVSTID /* BAD*/\n         TM    FLAGS,X04 /* E0 CODE */\n         BZ    MOVDFID /* NO */\n         MVC   STOWLIST+K5(K3),INAREA+K9 /* FID FOR E0 */\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* GET FIRST REAL RCD OF SET */\n         L     R1,TEIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K550)\n         ST    R1,TEIN#\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nMOVDFID  MVC   STOWLIST+K5(K2),INAREA+K7 /* FILEID VALUE DOWNDATA*/\n         CLC   STOWLIST+K5(K2),=C'50'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'60'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'30'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'25'   /* VALID VALUE */\n         BE    VALIDFT /* OK */\n         CLC   STOWLIST+K5(K2),=C'27'   /* VALID VALUE */\n         BNE   INVFT /* ERROR */\nVALIDFT  SLR   RF,RF /* BUILD UNIQUE SUFFIX */\n         IC    RF,DUPLSEQ /* INCR BY 1 FOR UNIQUE MEMBER NAME */\n         LA    RF,K1(,RF)\n         CLM   RF,K1,=C'9'    /* EXCEEDED SUFFIX MAX */\n         BH    HISUBEOF /* YES */\n         STC   RF,DUPLSEQ /* SAVE NEW UNIQUE MEMBER NAME SUFFIX */\n         STC   RF,STOWLIST+K7 ...\nPRIMCOMM XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K0(K2,R3),=AL2(K8) /* BDW SIZE INCL ITSELF */\n         MVC   K4(K2,R3),=AL2(K4) /* RDW SIZE INCL ITSELF */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nBUILDRCD LH    RF,K0(,R3) /* CURRENT VAR BLOCK SIZE */\n         SLR   R0,R0 /* PICKUP RECORD SET LEN */\n         TM    FLAGS,X04 /* E0 */\n         BZ    RCDLD /* NO */\n         ICM   R0,3,INAREA+K19  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         CLM   R0,K3,=AL2(K255) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\n         B     RCDLE\nRCDLD    ICM   R0,3,INAREA+17  /* ADD RCD LEN */\n         LTR   R7,R0 /* SAVE FOR POSSIBLE RCD MOVE */\n         BZ    INVRCDLN /* INVALID RECORD LEN */\n         AL    R0,=A(K3) /* FACTOR IN 1BYTE SEQ#AND 2BYTELEN*/\n         CLM   R0,K3,=AL2(K256) /* MUST NOT EXCEED THIS LEN */\n         BH    INVRCDLN /* BAD RECORD */\nRCDLE    AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         C     RF,=A(K32760) /* MAX BLOCKSIZE */\n         BH    DONTFIT /* THIS RECORD CANT BE ADDED */\n         STH   RF,K0(,R3) /* UPDATE BDW */\n         LH    RF,K4(,R3) /* CURRENT VAR RCD SIZE */\n         AR    RF,R0 /* SUM FOR NEW LEN USING FULLWORD INSTR */\n         STH   RF,K4(,R3) /* UPDATE RDW */\n         L     R6,TCHAR# /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,TCHAR# ...\n         L     R6,XBUILDEM /* INCR # OF TRANSMITTED CHARS */\n         AR    R6,R0 /* DONT INCL BDW, RDW, ETC */\n         ST    R6,XBUILDEM ...\n         SLR   RF,RF /* INCR EXPECTED SEQ # */\n         IC    RF,EXPSEQ ...\n         LA    RF,K1(,RF) ...\n         STC   RF,EXPSEQ /* DONE */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PROPD /* MOVE D0 */\n         LA    R8,INAREA+K21 /* SOURCE AREA */\n         B     PROPE /* CONTINUE */\nPROPD    MVC   0(K3,R4),INAREA+K16 /* MOVE 3BYTE HDR FIELD */\n         LA    R4,K3(,R4) /* + */\n         LA    R8,INAREA+K19 /* SOURCE AREA */\nPROPE    TM    FLAGS,X04 E0\n         BZ    PROPE2 NO\n         CLC   =C'113',STOWLIST+K5 E113 RCD\n         BNE   PROPE2 NO\n         SLR   R0,R0 CALC INDIV RCD CTR\n         LR    R1,R7 RCD LEN\n         LA    RF,K20 SMALL RCD SIZE\n         DR    R0,RF R1=RCD CTR\n         LR    RF,R8 CONVERT AREA TO BRACKETS\nCNVBRKT  MVI   K0(RF),X'5B' ASCII LEFT BRACKET\n         MVI   K17(RF),X'5D' ASCII RIGHT BRACKET\n         LA    RF,K20(,RF) NEXT SPOT\n         BCT   R1,CNVBRKT ...\nPROPE2   LR    R6,R4 /* TARGET FOR RCD MOVE */\n         LR    R9,R7  /* AS PER MVCL MAX PER RCD */\n         MVCL  R6,R8 /* MOVE RECORD INTO OUTPUT BUFFER */\n         LR    R4,R6 /* SAVE POSITION OF NEXT RCD TO BE BUILT */\n         TM    FLAGS,X04 /* E0 */\n         BZ    LRCDD /* NO */\n         TM    INAREA+K18,X80 /* SET END */\n         BO    E0SETEND /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE WRAP */\n         BNE   PGETE /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETE /* CONTINUE */\nE0SETEND LH    RF,K0(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* BDW -2 */\n         STH   RF,K0(,R3)\n         LH    RF,K4(,R3) /* STRIP 2 FROM SIZE..E0 CONTROL STUFF*/\n         S     RF,=A(K2) /* RDW -2 */\n         STH   RF,K4(,R3)\n         L     RF,TCHAR#\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,TCHAR#\n         L     RF,XBUILDEM\n         S     RF,=A(K2) /* CHARS TRANSMITTED */\n         ST    RF,XBUILDEM\n         B     BREAKIT /* CONTINUE */\nLRCDD    TM    INAREA+K16,X80 /* LAST RECORD IN SET */\n         BO    BREAKIT /* YES */\n         CLI   SEQFIELD,X7F /* LAST RCD BEFORE POLL */\n         BNE   PGETLOOP /* NO, CONTINUE */\n         OI    FLAGS,X20 /* SET WRAP MODE; 7F TO 01 AGAIN */\n         B     PGETLOOP /* CONTINUE */\nDOWRAP   NI    FLAGS,XFF-X20 /* SET WRAP MODE OFF */\n         TM    FLAGS,X08 MID TYPE30\n         BO    DOWRAP30 YES, THEY WRAP TO 0, NOT 1\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         CLI   SEQFIELD,X01 /* EXPECTED WRAP; MUST BE 01 */\n         BE    BUILDRCD /* OK */\n         B     WRAPERR /* FAILURE IN INPUT */\nDOWRAP30 MVI   EXPSEQ,X00 /* NEXT RCD HAS SEQ # OF 00 */\n         OI    FLAGS,X01 TYPE30 HAS WRAPPED\n         CLI   SEQFIELD,X00 /* MUST BE THIS SEQ */\n         BE    BUILDRCD OK, CONTINUE\n         B     WRAPERR /* FAILURE */\nSET30MOD OI    FLAGS,X08 /* TYPE 30 FILE PROCESS ACTIVE */\n         GET   DMASTER,(R6) /*IGNORE SET HDR - MAJOR SEQ# 001*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\nMIDTYP30 GET   DMASTER,(R6) /* FIRST OF SET */\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         SLR   R6,R6 /* WORK */\n         ICM   R6,K3,INAREA+K17 /* RCD LEN */\n         LA    R7,K57 /* MAX DATA LEN ON FIRST RCD-INCL $$A$ TRLR*/\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         LA    R7,K60 /* SECONDARY RCD MAX */\n         GET   DMASTER,INAREA+K76 /* RCD SEG# 2*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K76(K60),INAREA+K92 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K136 /* RCD SEG# 3*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K136(K60),INAREA+K152 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K196 /* RCD SEG# 4*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K196(K60),INAREA+K212 /* SHIFT IGN HDR/TRLR */\n         CLR   R6,R7 /* MINOR SET COMPLETED */\n         BNH   LAST30SG /* YES, LENGTH EXHAUSTED */\n         SLR   R6,R7 /* DECREMENT COUNT */\n         GET   DMASTER,INAREA+K256 /* RCD SEG# 5*/\n         L     R1,TDIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K80)\n         ST    R1,TDIN#\n         MVC   INAREA+K256(K60),INAREA+K272 /* SHIFT IGN HDR/TRLR */\n         B     LAST30SG /* LENGTH EXHAUSTED */\nDONTFIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DONTFIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDONTFIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         B     PRIMCOMM /* CONTINUE */\nBREAKIT  CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    BREAKIT2 /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nBREAKIT2 WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE BEFORE STOW */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         MVI   EXPSEQ,X01 /* NEXT RCD EXPECTED SEQ# OF 01 */\n         OI    FLAGS,X40 /* SET STOW DOWN; MEMBER CREATED */\n         NI    FLAGS,XFF-X08-X01  /* RESET TYP30 PROCESS OFF */\n         L     RF,MEMLISTP /* UPDATE DIRECTORY MEMBER */\n         MVC   K0(K8,RF),STOWLIST /* MEMBER NAME */\n         L     R0,XBUILDEM /* MEMBER BYTE COUNT */\n         CVD   R0,WORK ...\n         UNPK  K8(K9,RF),WORK+K3(K5)\n         MVC   K8(K8,RF),K9(RF) ...\n         OI    K15(RF),C'0' ....\n         TR    K0(K16,RF),EBCASCII /* CHANGE TO ASCII */\n         LA    RF,K16(,RF) /* SET NEXT DIR ENTRY PTR */\n         ST    RF,MEMLISTP /* UPDATE PTR */\n         L     RF,MEMBER# /* INCR MEMBER COUNTER */\n         LA    RF,K1(,RF)\n         ST    RF,MEMBER# ...\n         CLC   XBUILDEM,MBUILDEM /* IS THIS LARGEST MEM */\n         BNH   RESETIND /* NO */\n         MVC   MBUILDEM,XBUILDEM /* RESET MAX FOUND */\n         MVC   MNAMEMEM,STOWLIST /* MEMBER NAME */\nRESETIND XC    XBUILDEM,XBUILDEM /* RESET INDIV TOTAL */\n         TM    FLAGS,X04 /* E0 */\n         BZ    PGETLOOP /* CONTINUE */\n         B     PGETE /* CONTINUE E0 */\nEOD      L     RF,MEMBER# MEMBER COUNT\n         LTR   RF,RF ANY MEMBERS AT ALL\n         BZ    EODE NO, SKIP NEXT CODE\n         TM    FLAGS,X80 /* UNEXPECTED */\n         BO    SNOEOF /* YES */\n         TM    FLAGS,X40 /* SEE IF STOW FLAG ON */\n         BZ    SNOEOF /* YES */\nEODE     NI    FLAGS,XFF-X40 /* SET NEW MEM OFF */\n         OI    FLAGS,X04 /* INDICATE E0 PROCESSING ACTIVE */\n         MVC   STOWLIST(K8),=C'E???????' /* PREP FOR E0 MEMBERS */\nPGETE    OI    FLAGS,X80 /* SET SNO EOF */\n         GET   EMASTER,INAREA /* RETRIEVE E0 RCD */\n         L     R1,TEIN# BYTE COUNTER INCREMENT\n         AL    R1,=A(K550)\n         ST    R1,TEIN#\n         MVC   SEQFIELD(K1),INAREA+K18 /* SET SEQ# */\n         B     PROCE0 /* CONTINUE */\nEOE      MVC   STOWLIST(K8),=C'DIRECTRY' /* INTERNAL DIRNAME */\n         SLR   R5,R5 /* CURRENT WRITE CHECK CTR */\n         L     R3,CURAREAP /* PREP DIR HDR */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         MVC   K4(K2,R3),=AL2(K84) /* RDW */\n         MVC   K0(K2,R3),=AL2(K88) /* BDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\n         MVC   K32(K4,R4),=C'DSN=' /* HARD CODE */\n         L     RF,MEMBER# /* MEMBER ENTRY CTR */\n         CVD   RF,WORK ...\n         UNPK  K16(K8,R4),WORK+K4(K4)\n         OI    K23(R4),C'0'\n         MVC   K24(K8,R4),=C'00000000' /* RESERVED */\n         MVC   K0(K16,R4),=C'19YY.DDDHH:MM:SS' /* LITERAL */\n         TIME  DEC\n         STCM  R1,K7,WORK+K5 /* DATE */\n         UNPK  WORK(K5),WORK+K5(K3) ...\n         OI    WORK+4,C'0'\n         MVC   K2(K2,R4),WORK /* YY */\n         MVC   K5(K3,R4),WORK+K2 /* DDD */\n         CLM   R1,K8,=AL1(K0) /* CENTURY 19 OR 20 */\n         BE    DOTIME /* 19 */\n         MVC   K0(K2,R4),=C'20' /* ELSE */\nDOTIME   ST    R0,WORK /* PACKED TIME */\n         MVI   WORK+K3,K15 /* MAKE LIKE PACKED */\n         UNPK  K36(K7,R4),WORK(K4) /* USE TEMP WORK */\n         MVC   K8(K2,R4),K36(R4) HH\n         MVC   K11(K2,R4),K38(R4) MM\n         MVC   K14(K2,R4),K40(R4) SS\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   K36(K44,R4),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         TR    K0(K80,R4),EBCASCII /* CHANGE TO ASCII */\n         WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         L     R6,MEMBER# /* PRODUCE OUR DIRECTORY MEMBER */\n         LTR   R6,R6 ANY MEMBERS AT ALL\n         BZ    DODIR5A SKIP OUTPUT\n         L     R7,=A(MEMLIST) /* TABLE START */\nDODIR0   LA    R8,K2047 /* MAX # DIR ENTRY IN 1 VAR LEN BLK */\n         SLR   R9,R9 /* CURRENT BLK ENTRY COUNT */\n         L     R3,CURAREAP /* CURRENT OUTPUT AREA ADDRESS */\n         XC    K0(K8,R3),K0(R3)    /* RESET BDW AND RDW */\n         LA    R4,K8(,R3) /* POSITION OF FIRST RECORD */\nDODIR1   MVC   K0(K16,R4),K0(R7) /* POSITION 1 MEMBER ENTRY */\n         LA    R9,K1(,R9) /* INCR ENTRY COUNT */\n         LA    R4,K16(,R4) /* NEXT OUTPUT SPOT */\n         LA    R7,K16(,R7) /* NEXT INPUT SPOT */\n         BCT   R8,DODIR3 /* COUNT FOR # ENTRIES IN BLK */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR2   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         SLR   R5,R5 /* RESET CHAINED BUFF COUNTER */\nDODIR2   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\n         LA    R5,K1(,R5) /* INCR WRITE OUTSTAND COUNT */\n         L     RF,CURAREAP /* ROLL OUTPUT PTRS */\n         MVC   CURAREAP(K20),CURAREAP+K4 ...\n         ST    RF,CURAREAP+K20 ...\n         B     DODIR0   /* CONTINUE */\nDODIR3   BCT   R6,DODIR1 /* MEMBER COUNT */\n         SLL   R9,4 /* ENTRY COUNT TIMES 16 */\n         LA    R9,K4(,R9) /* PLUS RDW */\n         STH   R9,K4(,R3) /* INTO RDW */\n         LA    R9,K4(,R9) /* PLUS BDW */\n         STH   R9,K0(,R3) /* INTO BDW */\n         CL    R5,=A(K5) /* AT MAX COUNT OF WRITES */\n         BL    DODIR5   /* DO MORE */\n         CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\nDODIR5   WRITE DECB,SF,,(R3),MF=E /* OUTPUT A BLOCK */\nDODIR5A  CHECK DECB /* WAIT AND CHECK PREVIOUS WRITE */\n         STOW  BREAKER,STOWLIST,A /* DIRECTORY UPDATE */\n         LTR   RF,RF /* CHECK */\n         BNZ   FSTOW /* ADD PDS DIR ENTRY FAILURE */\n         CLOSE (BREAKER) /* MAKE AVAIL FOR XCOMM */\n         LA    RF,JFCB\n         USING INFMJFCB,RF\n         MVC   SDSNAME+K6(L'JFCBDSNM),JFCBDSNM /* GET SAVED DSN */\n         DROP  RF\n         LA    R1,SVC99PRM /* DYNALLOC PARM */\n         DYNALLOC\n         LTR   RF,RF\n         BNZ   FSVC99\n         LOAD  EPLOC=XCOMMEP\n         LR    RF,R0 /* EP */\n         LA    R1,=A(XCOMMPRM) /* EXEC PARM */\n         BALR  RE,RF /* GO SCHEDULE */\n         LTR   RF,RF /* RC */\n         BNZ   FXCOMM /* SCHEDULE FAILURE */\n         DELETE EPLOC=XCOMMEP\nERREXIT  MVC   OUTMSG(L'HEADER),HEADER\n         PUT   REPORT,OUTMSG\n         L     RF,MEMBER# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMEM#),MSGMEM#\n         MVC   OUTMSG+L'MSGMEM#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMEM#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TDIN#   /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGDIN#),MSGDIN#\n         MVC   OUTMSG+L'MSGDIN#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGDIN#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TEIN#   /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGEIN#),MSGEIN#\n         MVC   OUTMSG+L'MSGEIN#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGEIN#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,TCHAR# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGTCH#),MSGTCH#\n         MVC   OUTMSG+L'MSGTCH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGTCH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         SLR   R6,R6\n         L     R7,TCHAR#\n         L     R8,MEMBER#\n         LTR   R8,R8 /* DONT GET ERROR FOR DIVIDE BY 0 */\n         BNZ   CALCAVGC  /* ELSE FORCE THIS MESSAGE */\n         SLR   R7,R7\n         B     CALCAVG2\nCALCAVGC DR    R6,R8\nCALCAVG2 ST    R7,TAVCH#\n         L     RF,TAVCH# /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGACH#),MSGACH#\n         MVC   OUTMSG+L'MSGACH#(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGACH#(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         L     RF,MBUILDEM /* STATISTICS */\n         CVD   RF,WORK ...\n         MVC   OUTMSG(L'MSGMCH#1),MSGMCH#1\n         MVC   OUTMSG+L'MSGMCH#1(L'MSGPAT),MSGPAT\n         ED    OUTMSG+L'MSGMCH#1(L'MSGPAT),WORK+K3\n         PUT   REPORT,OUTMSG\n         MVC   OUTMSG(L'MSGMCH#2),MSGMCH#2\n         MVC   OUTMSG+K17(K8),MNAMEMEM\n         PUT   REPORT,OUTMSG\n         TM    FLAGS,X10 /* SEVERE ERROR OCCURED */\n         BZ    DOCLOSE /* NO */\n         MVC   OUTMSG(L'MERRMSG),MERRMSG\n         PUT   REPORT,OUTMSG\nDOCLOSE  CLOSE (DMASTER,,REPORT,,EMASTER)\n         FREEPOOL DMASTER , /*NO FREEPOOL FOR BREAKER;DYNBUFF USED*/\n         FREEPOOL EMASTER ,\n         FREEPOOL REPORT  ,\n         MODESET EXTKEY=ZERO,WORKREG=2,RELATED=('SUPVR KEY')\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         L     R1,=A(POLLDOWN) /* PAGEFREE*/\n         L     R2,=A(ENDFIX) ...\n*        PGSER R,FREE,A=(1),EA=(2),RELEASE=N,ANYWHER=Y,               X\n*              BRANCH=Y,ECB=FIXECB\n         LR    RD,R6 /* RESTORE */\n*        LTR   RF,RF\n*        BNZ   FPGSER\n         LR    R6,RD /* SAVE REGULAR SAVEAREA PTR */\n         LA    RD,SAVEAREA ...\n         SYSEVENT OKSWAP,ENTRY=BRANCH , /* SWAP AGAIN */\n         LR    RD,R6 /* RESTORE */\n         CLM   R1,K1,=AL1(K0)\n         BNE   FSWAP\n         USING PSA,R0\n         L     RF,PSATOLD /* MAP TCB PROPER */\n         DROP  R0\n         USING TCB,RF\n         MODESET EXTKEY=TCB,WORKREG=2,RELATED=('TCB KEY')\n         DROP  RF\nXEXIT    L     RF,SYSTEMRC /* SET OS RC */\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nSNOEOF   LA    RF,K28 /* UNEXPECTED EOF ON INPUT */\n         B     DUMPEXIT\nWRAPERR  LA    RF,K32 /* X7F NOT FOLLOWED BY X01 */\n         B     DUMPEXIT\nSEQERR   LA    RF,K36 /* SEQUENCE NUMBER OUT OF ORDER */\n         B     DUMPEXIT\nINVRCDLN LA    RF,K40 /* INDIV RCD LEN=0 OR GT>253 */\n         B     DUMPEXIT\nHISUBEOF LA    RF,K44 /* TOO MANY >9 MULTIPLE 50/60 SUBFILES */\n         B     DUMPEXIT\nINVFT    LA    RF,K48 /* INVALID INPUT RCD FILETYPE(25,27,30,50,60)\n         B     DUMPEXIT\nINVSTID  LA    RF,K52 /* INVALID STOR ID=0 OR NOT NUMERIC */\n         B     DUMPEXIT\nFRDJFCB  LA    RF,K56 /* READ JFCB FAILURE */\n         B     MAINEXIT\nFNOTPO   LA    RF,K60 /* BREAKER NOT PO */\n         B     MAINEXIT\nFNOTNEW  LA    RF,K64 /* DISP=NEW MUST BE FOR BREAKER */\n         B     MAINEXIT\nFAUTH    LA    RF,K68 /* NOT AUTH */\n         B     MAINEXIT\nFSWAP    LA    RF,K72 /* DONTSWAP FAIL */\n         B     MAINEXIT\nFPGSER   LA    RF,K76 /* PAGEFIX FAIL  */\n         B     MAINEXIT\nFSVC99   LA    RF,K80 /* SVC99 ALLOC FAIL */\n         B     DUMPEXIT\nFXCOMM   LA    RF,200(,RF) /* 200+XCOM FAILURE */\n         B     DUMPEXIT\nFSTOW    LA    RF,100(,RF) /* 100+STOW FAILURE CODE+REASON CODE*/\n         ALR   RF,R0 /* ADD IN REASON CODE */\nDUMPEXIT OI    FLAGS,X10 /* SEVERE ERROR BIT */\n         ST    RF,SYSTEMRC /* BINARY RC */\n         CVD   RF,WORK /* PREP ERROR MSG */\n         UNPK  WORK(K3),WORK+K6(K2)\n         OI    WORK+K2,C'0'\n         MVC   MERRMSG+K13(K3),WORK\n         MVC   MERRMSG+K27(K8),STOWLIST\n         LA    R0,200 DONT DUMP IF XCOM ERROR\n         CLR   RF,R0 CHECK\n         BNL   ERREXIT\n         ABEND 512,DUMP\n         LTORG\n         PRINT NOGEN\n         WRITE DECB,SF,BREAKER,MF=L    /* OUTPUT A BLOCK */\nWORK     DC    D'0'\nJFCBEXIT DC    0F'0',X'87',AL3(JFCB)\nJFCB     DC    CL176' ' /* A JFCB AREA */\nSAVEAREA DC    (K18)A(K0) /* SPECIAL SAVE AREA */\nFIXECB   DC    A(K0) /* PGSER ECB */\nBREAKER  DCB   DDNAME=BREAKER,DSORG=PO,MACRF=(R,W),NCP=5,RECFM=VB,     X\n               LRECL=32756,BLKSIZE=32760,BUFNO=11,EXLST=JFCBEXIT\nDMASTER  DCB   DDNAME=DMASTER,DSORG=PS,EODAD=EOD,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=80\nEMASTER  DCB   DDNAME=EMASTER,DSORG=PS,EODAD=EOE,MACRF=(GM,PM),        X\n               RECFM=FB,LRECL=550\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(GM,PM),                   X\n               RECFM=FBA,LRECL=133,BLKSIZE=133\nSVC99PRM DC    X'80',AL3(SVC99RB)\nSVC99RB  DC    X'14014000'\n         DC    X'00000000'\n         DC    A(S99TXTPR)\n         DC    X'00000000'\n         DC    X'40000000' /* WAIT ON DSN */\nS99TXTPR DC    X'00',AL3(SDDNAME)\n         DC    X'00',AL3(SDSNAME)\n         DC    X'00',AL3(SMEMBER)\n         DC    X'80',AL3(SDISP)\nSDDNAME  DC    X'000100010008',CL8'LCLDS01'\nSDSNAME  DC    X'00020001002C',CL44' '\nSMEMBER  DC    X'000300010008',CL8'DIRECTRY'\nSDISP    DC    X'000400010001',X'08' /* SHR */\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMMPRM DC    AL2(L'XCOMMPRL)\nXCOMMPRL DC    C'TYPE=EXECUTE'\nSTOWLIST DC    (K0)A(K0),C'D???????',A(K0) /* TTRC OF ZERO */\nCURAREAP DC    A(OUTAREA1) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA2) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA3) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA4) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA5) /* CURRENT WORKING ON OUTPUT PTR */\n         DC    A(OUTAREA6) /* CURRENT WORKING ON OUTPUT PTR */\nSTAGEPTR DC    A(*-*) /* WHERE UP TO IN STAGING AREA */\nMEMBER#  DC    A(K0) /* NUMBER OF PROCESSED MEMBERS */\nTDIN#    DC    A(K0) /* PRICE/PROMO CHARS IN */\nTEIN#    DC    A(K0) /* EO/MISC     CHARS IN */\nTCHAR#   DC    A(K0) /* TOTAL NUMBER OF DATA CHARACTERS TO BE SENT*/\nTAVCH#   DC    A(K0) /* APPROX AVG NUMBER CHARS PER MEMBER */\nXBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMBUILDEM DC    A(K0) /* MAX CHARS IN INDIV MEMBER */\nMEMLISTP DC    A(MEMLIST) /* PTR TO INTERNAL DIRECTORY */\nSYSTEMRC DC    A(K0) /* RC */\nMNAMEMEM DC    CL8' ' ...\nDUPLSEQ  DC    C'0' /* MEMBER NAME SUFFIX FOR ID50/60 SUBGROUPS */\nFLAGS    DC    AL1(K0)\n* X80 UNEXPECTED EOF; SHOULD NOT OCCUR\n* X40 LAST RECORD WAS SUBEOF - MEMBER CREATED\n* X20 MEMBER RCD WRAPAROUND FROM X7F TO X01 ...\n* X10 SEVERE ERROR FLAG USED BY EOJ ROUTINE\n* X08 TYPE 30 PROCESSING ACTIVE\n* X04 D0 PROCESSING COMPLETE; E0 PROCESSING ACTIVE\n* X01 TYPE30 SET HAS WRAPPED AT LEAST ONCE\nSEQFIELD DC    AL1(K0) /* USED TO HOLD SEQUENCE NUMBER */\nEXPSEQ   DC    AL1(K1) /* EXPECTED SEQ # NEXT - MAKE SURE ORDER */\nMSGPAT   DC    X'4B2020206B2020206B202120'\nOUTMSG   DC    CL133' '\nHEADER   DC    C'1POLLDOWN BREAKOUT REPORT'\nMSGMEM#  DC    CL40'0# OF PDS MEMBERS CREATED................'\nMSGDIN#  DC    CL40'0TOTAL PRICE/PROMO DATA IN...............'\nMSGEIN#  DC    CL40'0TOTAL E0/MISC DATA IN...................'\nMSGTCH#  DC    CL40'0TOTAL # DOWNLOADED CHARACTERS...........'\nMSGACH#  DC    CL40'0APPROX. AVG. # CHARACTERS PER MEMBER....'\nMSGMCH#1 DC    CL40'0MAX. # CHARS. PER INDIVIDUAL MEMBER.....'\nMSGMCH#2 DC    CL52' MEMBER NAME IS: XXXXXXXX'\nMERRMSG  DC    CL52'0** ERROR RC:??? ** MEMBER:????????'\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C'.'\n         DC    X'2E'\n         ORG   EBCASCII+C':'\n         DC    X'3A'\n         ORG   EBCASCII+C'='\n         DC    X'3D'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\nNUMSONLY DC    (K256)AL1(XFF) /* CHECK FOR DIGITS ONLY */\n         ORG   NUMSONLY+C'0'\n         DC    (K10)AL1(K0)\n         ORG\nINAREA   DC    (K550)AL1(K0) /* INPUT WORKAREA */\nOUTAREA1 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA2 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA3 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA4 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA5 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nOUTAREA6 DS    (K32760)AL1(K0) /* LARGE OUTPUT WORKAREA */\nMEMLIST  DS    (K32760)CL16' ' /* INCORE DIRECTORY */\nENDFIX   EQU   *-K1\n* 8 BYTE ASCII MEMBER NAME; 8 BYTE ASCII MEMBER CHAR COUNT\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         DSECT\n         IEFJFCBN\n         CVT   DSECT=YES\n         IKJTCB\n         IHAPSA\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SERIAL": {"ttr": 9991, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x91\\x16_\\x00\\x95\\x05O\\x14&\\x00\\x06\\x00\\x05\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1991-06-14T00:00:00", "modifydate": "1995-02-23T14:26:00", "lines": 6, "newlines": 5, "modlines": 2, "user": "TECH110"}, "text": "/* REXX Identify LPAR exec */\npsapccav = c2x(storage(00000208,4)); /* pcca ptr */\npccacpid = d2x(x2d(psapccav)+4); /* pccacpid ptr */\ncpuid = storage(pccacpid,12); /* cpuid */\nsay cpuid;\nexit 0;\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SICSCAN": {"ttr": 9993, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x03/\\x00\\x95\\x03/\\x17V\\x00\\r\\x00\\r\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-02-01T00:00:00", "modifydate": "1995-02-01T17:56:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "TECH110"}, "text": "/* REXX SICSCAN */\n\"ALLOC F(IN) DATASET('TECH110.SIC') SHR\";\n\"ALLOC F(OUT) DATASET('TECH110.SICMINOR') SHR\";\nOUTPTR=1;\n\"EXECIO * DISKR IN (FINIS STEM SIC.\";\nDO I = 1 TO SIC.0;\n    SIC = SUBSTR(SIC.I,1,4);\n    TEXT = SUBSTR(SIC.I,5);\n    IF SUBSTR(SIC,3,1)=\"0\" | SUBSTR(SIC,4,1)=\"0\" THEN ITERATE I;\n    OUTPUT.OUTPTR = SIC TEXT;\n    OUTPTR = OUTPTR+1;\nEND;\n\"EXECIO * DISKW OUT (FINIS STEM OUTPUT.\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SLCTFRAG": {"ttr": 9995, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92\"?\\x00\\x92\"?\\x16Y\\x00\\x08\\x00\\x05\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-08-10T00:00:00", "modifydate": "1992-08-10T16:59:00", "lines": 8, "newlines": 5, "modlines": 4, "user": "TECH110"}, "text": "/* REXX EXEC SELECT BACKUP JOB BY VOLSER */\n\"EXECIO * DISKR INPUT (STEM INPUT. FINIS\";\nDO INDEX = 1 TO INPUT.0;\n     IF INDEX <= 10 THEN , /* MAX 10 COMPAKT JOBS PER WEEK */\n           SAY \"BC\"INPUT.INDEX;\n       ELSE SAY \"BU\"INPUT.INDEX;\nEND;\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SMFANAL": {"ttr": 9997, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x93!\\x8f\\x00\\x93!\\x8f\\x11\\x14\\x00\\xea\\x00\\xca\\x00)\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1993-08-06T00:00:00", "modifydate": "1993-08-06T11:14:00", "lines": 234, "newlines": 202, "modlines": 41, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=6M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCLG\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN DD *\nSMFPROC  CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         SAVE  (14,12),,SMFPROC*&SYSDATE*&SYSTIME\n         LR    RA,RF\n         USING SMFPROC,RA,RB,RC\n         LA    RB,4095(,RA)\n         LA    RB,1(,RB)\n         LA    RC,4095(,RB)\n         LA    RC,1(,RC)\n         LR    RF,RD\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18A(0)\n         ST    RD,8(,RF)\n         ST    RF,4(,RD)\n         OPEN  (SMFIN,(INPUT),REPORT,(OUTPUT))\nLOOPIN   XC    INPUT(256),INPUT\n         XC    INPUT+256(256),INPUT+256\n         GET   SMFIN,INPUT\n         LA    R4,INPUT\n         CLI   INPUT+5,14 TYPE\n         BE    TYPE14\n         CLI   INPUT+5,15 TYPE\n         BE    TYPE15\n         CLI   INPUT+5,17 TYPE\n         BE    TYPE17\n         CLI   INPUT+5,18 TYPE\n         BE    TYPE18\n         CLI   INPUT+5,61 TYPE\n         BE    TYPE61\n         CLI   INPUT+5,62 TYPE\n         BE    TYPE62\n         CLI   INPUT+5,63 TYPE\n         BE    TYPE63\n         CLI   INPUT+5,65 TYPE\n         BE    TYPE65\n         CLI   INPUT+5,66 TYPE\n         BE    TYPE66\n         CLI   INPUT+5,67 TYPE\n         BE    TYPE67\n         CLI   INPUT+5,68 TYPE\n         BE    TYPE68\n         B     LOOPIN\n         USING SMFD14,R4\nTYPE14   CLC   REQDSN,SMFJFCB1\n         BNE   LOOPIN\n         UNPK  WORK(8),SMF14DTE\n         OI    WORK+7,C'0'\n         MVC   OUTDATE(7),WORK+1\n         MVC   OUTJOB(8),SMF14JBN\n         MVC   OUTACT(8),=CL8'OPENINPT'\n         PUT   REPORT,OUTREC\n         B     LOOPIN\n         DROP  R4\n         USING SMFD14,R4\nTYPE15   CLC   REQDSN,SMFJFCB1\n         BNE   LOOPIN\n         UNPK  WORK(8),SMF14DTE\n         OI    WORK+7,C'0'\n         MVC   OUTDATE(7),WORK+1\n         MVC   OUTJOB(8),SMF14JBN\n         MVC   OUTACT(8),=CL8'OPENOUPT'\n         PUT   REPORT,OUTREC\n         B     LOOPIN\n         DROP  R4\n         USING SMFD17,R4\nTYPE17   CLC   REQDSN,SMF17DSN\n         BNE   LOOPIN\n         UNPK  WORK(8),SMF17DTE\n         OI    WORK+7,C'0'\n         MVC   OUTDATE(7),WORK+1\n         MVC   OUTJOB(8),SMF17JBN\n         MVC   OUTACT(8),=CL8'SCRATCH'\n         PUT   REPORT,OUTREC\n         B     LOOPIN\n         DROP  R4\n         USING SMFD18,R4\nTYPE18   CLC   REQDSN,SMF18ODS\n         BNE   LOOPIN\n         UNPK  WORK(8),SMF18DTE\n         OI    WORK+7,C'0'\n         MVC   OUTDATE(7),WORK+1\n         MVC   OUTJOB(8),SMF18JBN\n         MVC   OUTACT(8),=CL8'RENAME'\n         PUT   REPORT,OUTREC\n         B     LOOPIN\n         DROP  R4\n         USING SMFD61,R4\nTYPE61   CLC   REQDSN,SMF61ENM\n         BNE   LOOPIN\n         UNPK  WORK(8),SMF61DTE\n         OI    WORK+7,C'0'\n         MVC   OUTDATE(7),WORK+1\n         MVC   OUTJOB(8),SMF61JNM\n         MVC   OUTACT(8),=CL8'DEFINE'\n         PUT   REPORT,OUTREC\n         B     LOOPIN\n         DROP  R4\n         USING SMFD62,R4\nTYPE62   CLC   REQDSN,SMF62DNM\n         BNE   LOOPIN\n         UNPK  WORK(8),SMF62DTE\n         OI    WORK+7,C'0'\n         MVC   OUTDATE(7),WORK+1\n         MVC   OUTJOB(8),SMF62JBN\n         MVC   OUTACT(8),=CL8'VSAMOPEN'\n         PUT   REPORT,OUTREC\n         B     LOOPIN\n         DROP  R4\n         USING SMFD63,R4\nTYPE63   CLC   REQDSN,SMF63ENM\n         BNE   LOOPIN\n         UNPK  WORK(8),SMF63DTE\n         OI    WORK+7,C'0'\n         MVC   OUTDATE(7),WORK+1\n         MVC   OUTJOB(8),SMF63JBN\n         MVC   OUTACT(8),=CL8'DEFINE'\n         PUT   REPORT,OUTREC\n         B     LOOPIN\n         DROP  R4\n         USING SMFD65,R4\nTYPE65   CLC   REQDSN,SMF65ENM\n         BNE   LOOPIN\n         UNPK  WORK(8),SMF65DTE\n         OI    WORK+7,C'0'\n         MVC   OUTDATE(7),WORK+1\n         MVC   OUTJOB(8),SMF65JNM\n         MVC   OUTACT(8),=CL8'DELETE'\n         PUT   REPORT,OUTREC\n         B     LOOPIN\n         DROP  R4\n         USING SMFD66,R4\nTYPE66   CLC   REQDSN,SMF66ENM\n         BNE   LOOPIN\n         UNPK  WORK(8),SMF66DTE\n         OI    WORK+7,C'0'\n         MVC   OUTDATE(7),WORK+1\n         MVC   OUTJOB(8),SMF66JNM\n         MVC   OUTACT(8),=CL8'ALTER'\n         PUT   REPORT,OUTREC\n         B     LOOPIN\n         DROP  R4\n         USING SMFD67,R4\nTYPE67   CLC   REQDSN,SMF67DEN\n         BNE   LOOPIN\n         UNPK  WORK(8),SMF67DTE\n         OI    WORK+7,C'0'\n         MVC   OUTDATE(7),WORK+1\n         MVC   OUTJOB(8),SMF67JBN\n         MVC   OUTACT(8),=CL8'DELETE'\n         PUT   REPORT,OUTREC\n         B     LOOPIN\n         DROP  R4\n         USING SMFD68,R4\nTYPE68   CLC   REQDSN,SMF68ONM\n         BNE   LOOPIN\n         UNPK  WORK(8),SMF68DTE\n         OI    WORK+7,C'0'\n         MVC   OUTDATE(7),WORK+1\n         MVC   OUTJOB(8),SMF68JBN\n         MVC   OUTACT(8),=CL8'RENAME'\n         PUT   REPORT,OUTREC\n         B     LOOPIN\n         DROP  R4\nEODAD    EQU   * *\n         CLOSE (SMFIN,,REPORT)\n         FREEPOOL SMFIN\n         FREEPOOL REPORT\n         SLR   R9,R9\nMAINEXIT L     RD,4(,RD)\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nWORK     DS    D\nREQDSN   DC    CL44'PWWO.K.WWOSRTR'\nOUTREC   DC    CL25' '\n         ORG   OUTREC\nOUTDATE  DS    CL7\n         DS    CL1\nOUTJOB   DS    CL8\n         DS    CL1\nOUTACT   DS    CL8\n         ORG\nSMFIN    DCB   DDNAME=SMFIN,DSORG=PS,MACRF=(GM),EODAD=EODAD\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),RECFM=FB,LRECL=25\n         LTORG\nINPUT    DS    0D'0',32767C\nSMFD14   DSECT\n         IFASMFR (14)\nSMFD17   DSECT\n         IFASMFR (17)\nSMFD18   DSECT\n         IFASMFR (18)\nSMFD61   DSECT\n         IFASMFI6 61\nSMFD62   DSECT\n         IFASMFR (62)\nSMFD63   DSECT\n         IFASMFR (63)\nSMFD64   DSECT\n         IFASMFR (64)\nSMFD65   DSECT\n         IFASMFI6 65\nSMFD66   DSECT\n         IFASMFI6 66\nSMFD67   DSECT\n         IFASMFR (67)\nSMFD68   DSECT\n         IFASMFR (68)\n         END\n/*\n//*G.SMFIN DD DSN=SYSS.SMFDUMP.DLY.FILE,DISP=SHR\n//G.SMFIN DD DSN=SYSS.SMFDUMP.WKLY.ACCUM,DISP=SHR\n//G.SYSUDUMP DD SYSOUT=*\n//G.REPORT DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFDSNME": {"ttr": 10241, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x921o\\x00\\x921o\\x15@\\x00\\xb4\\x00d\\x00b\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1992-11-11T00:00:00", "modifydate": "1992-11-11T15:40:00", "lines": 180, "newlines": 100, "modlines": 98, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=6M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//S EXEC ASMHCLG\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN DD *\nSMFPROC  CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         SAVE  (14,12),,SMFPROC*&SYSDATE*&SYSTIME\n         LR    RA,RF\n         USING SMFPROC,RA,RB,RC\n         LA    RB,4095(,RA)\n         LA    RB,1(,RB)\n         LA    RC,4095(,RB)\n         LA    RC,1(,RC)\n         LR    RF,RD\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18A(0)\n         ST    RD,8(,RF)\n         ST    RF,4(,RD)\n         OPEN  (SMFIN,(INPUT),SMFDSN,(OUTPUT))\nLOOPIN   XC    INPUT(256),INPUT\n         XC    INPUT+256(256),INPUT+256\n         GET   SMFIN,INPUT\n         LA    R4,INPUT\n         CLI   INPUT+5,15 TYPE\n         BE    TYPE15\n         CLI   INPUT+5,64 TYPE\n         BNE   LOOPIN\n         USING SMFVSM64,R4\nTYPE64   SLR   R6,R6\n         ICM   R7,15,SMF64TME\n         D     R6,=F'360000'\n         CVD   R7,WORK\n         UNPK  WORK(3),WORK+6(2)\n         OI    WORK+2,C'0'\n         MVC   DSNTIME(2),WORK+1\n         UNPK  WORK(8),SMF64DTE+1(3)\n         MVC   DSNDATE(5),WORK+3\n         MVC   DSNJOB(8),SMF64JBN\n         MVC   DSNNAME(44),SMF64CLN\n         CLI   DSNNAME,C'P'\n         BNE   LOOPIN\n         CLC   DSNNAME(5),=C'PTAP.'\n         BE    LOOPIN\n         CLC   DSNNAME(6),=C'PARTH.'\n         BE    LOOPIN\n         CLC   DSNNAME(7),=C'PCRDT1.'\n         BE    LOOPIN\n         CLC   DSNNAME(7),=C'PRAMIS.'\n         BE    LOOPIN\n         CLC   DSNNAME(10),=C'PD.BACKUP.'\n         BE    LOOPIN\n         CLC   DSNNAME(13),=C'PMDS.N.FICHE.'\n         BE    LOOPIN\n         CLC   DSNNAME(5),=C'PDPE.'\n         BE    LOOPIN\n         CLC   DSNNAME(5),=C'PEPI.'\n         BE    LOOPIN\n         CLC   DSNNAME+4(3),=C'.N.'\n         BE    LOOPIN\n         CLC   DSNNAME+5(3),=C'.N.'\n         BE    LOOPIN\n         CLC   DSNNAME+6(3),=C'.N.'\n         BE    LOOPIN\n         CLC   DSNNAME+7(3),=C'.N.'\n         BE    LOOPIN\n         CLC   DSNNAME+8(3),=C'.N.'\n         BE    LOOPIN\n         TM    SMF64RIN,X'80'\n         BNO   LOOPIN\n         OC    SMF64DLR,SMF64DLR\n         BZ    LOOPIN\n         PUT   SMFDSN,OUTDSN\n         B     LOOPIN\n         DROP  R4\n         USING SMFRCD15,R4\nTYPE15   SLR   R6,R6\n         ICM   R7,15,SMF14TME\n         D     R6,=F'360000'\n         CVD   R7,WORK\n         UNPK  WORK(3),WORK+6(2)\n         OI    WORK+2,C'0'\n         MVC   DSNTIME(2),WORK+1\n         UNPK  WORK(8),SMF14DTE+1(3)\n         MVC   DSNDATE(5),WORK+3\n         MVC   DSNJOB(8),SMF14JBN\n         MVC   DSNNAME(44),SMFJFCB1\n         CLI   DSNNAME,C'P'\n         BNE   LOOPIN\n         CLC   DSNNAME(5),=C'PTAP.'\n         BE    LOOPIN\n         CLC   DSNNAME(6),=C'PARTH.'\n         BE    LOOPIN\n         CLC   DSNNAME(7),=C'PCRDT1.'\n         BE    LOOPIN\n         CLC   DSNNAME(7),=C'PRAMIS.'\n         BE    LOOPIN\n         CLC   DSNNAME(10),=C'PD.BACKUP.'\n         BE    LOOPIN\n         CLC   DSNNAME(13),=C'PMDS.N.FICHE.'\n         BE    LOOPIN\n         CLC   DSNNAME(5),=C'PDPE.'\n         BE    LOOPIN\n         CLC   DSNNAME(5),=C'PEPI.'\n         BE    LOOPIN\n         CLC   DSNNAME+4(3),=C'.N.'\n         BE    LOOPIN\n         CLC   DSNNAME+5(3),=C'.N.'\n         BE    LOOPIN\n         CLC   DSNNAME+6(3),=C'.N.'\n         BE    LOOPIN\n         CLC   DSNNAME+7(3),=C'.N.'\n         BE    LOOPIN\n         CLC   DSNNAME+8(3),=C'.N.'\n         BE    LOOPIN\n         PUT   SMFDSN,OUTDSN\n         B     LOOPIN\n         DROP  R4\nEODAD    EQU   * *\n         CLOSE (SMFIN,,SMFDSN)\n         FREEPOOL SMFIN\n         FREEPOOL SMFDSN\n         SLR   R9,R9\nMAINEXIT L     RD,4(,RD)\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nWORK     DS    D\nSMFIN    DCB   DDNAME=SMFIN,DSORG=PS,MACRF=(GM),EODAD=EODAD\nSMFDSN   DCB   DDNAME=SMFDSN,DSORG=PS,MACRF=(PM)\nOUTDSN   DS    0F'0'\nDSNNAME  DS    CL44\n         DC    C' '\nDSNJOB   DS    CL8\n         DC    C' '\nDSNDATE  DS    CL5\n         DC    C' '\nDSNTIME  DS    CL2\n         LTORG\nINPUT    DS    0D'0',32767C\nSMFRCD15 DSECT\n         IFASMFR (15)\nSMFVSM64 DSECT\n         IFASMFR (64)\n         END\n/*\n//*G.SMFIN DD DSN=SYSS.SMFDUMP.DLY.FILE,DISP=SHR\n//G.SMFIN DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(0),DISP=SHR\n//        DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-1),DISP=SHR,UNIT=AFF=SMFIN\n//        DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-2),DISP=SHR,UNIT=AFF=SMFIN\n//        DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-3),DISP=SHR,UNIT=AFF=SMFIN\n//        DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-4),DISP=SHR,UNIT=AFF=SMFIN\n//G.SYSUDUMP DD SYSOUT=*\n//G.SMFDSN DD DSN=&&SMFDSN,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(10,5)),LRECL=62,RECFM=FB\n//SORTCPU EXEC PGM=SORT\n//SYSPRINT DD SYSOUT=*\n//SYSOUT DD SYSOUT=*\n//SORTIN DD DSN=&&SMFDSN,DISP=(OLD,DELETE)\n//SORTOUT DD DSN=TECH110.USER.SRTDSN,DISP=(NEW,CATLG,DELETE),\n// SPACE=(CYL,(10,5)),LRECL=62,RECFM=FB\n//SYSIN DD *\n  SORT FIELDS=(1,44,CH,A,55,5,CH,D,61,2,CH,D,46,8,CH,A)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFPROC": {"ttr": 10245, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01#\\x00\\x00\\x00\\x92)?\\x00\\x920\\x0f\\x10\\x01\\x01\\x97\\x005\\x01n\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.35", "flags": 0, "createdate": "1992-10-19T00:00:00", "modifydate": "1992-10-26T10:01:00", "lines": 407, "newlines": 53, "modlines": 366, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=6M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//S EXEC ASMHCLG\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n// DD DSN=SYSM.RMF.V4R2M1.MAC01,DISP=SHR\n//C.SYSIN DD *\nSMFPROC  CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         SAVE  (14,12),,SMFPROC*&SYSDATE*&SYSTIME\n         LR    RA,RF\n         USING SMFPROC,RA,RB,RC\n         LA    RB,4095(,RA)\n         LA    RB,1(,RB)\n         LA    RC,4095(,RB)\n         LA    RC,1(,RC)\n         LR    RF,RD\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18A(0)\n         ST    RD,8(,RF)\n         ST    RF,4(,RD)\n         OPEN  (SMFIN,(INPUT),SMFCPU,(OUTPUT),SMFWRK,(OUTPUT),SMFJOB,(OX\n               UTPUT))\nLOOPIN   XC    INPUT(256),INPUT\n         XC    INPUT+256(256),INPUT+256\n         GET   SMFIN,INPUT\n         LA    R4,INPUT\n         CLI   INPUT+5,72 TYPE\n         BE    TYPE72\n         CLI   INPUT+5,30 TYPE\n         BE    TYPE30\n         CLI   INPUT+5,70 TYPE\n         BNE   LOOPIN\n         USING SMF70HDR,R4\nTYPE70   MVC   CPUSYSID(4),SMF70SID\n         LA    R4,INPUT\n         A     R4,INPUT+28\n         DROP  R4\n         USING SMF70PRO,R4\n         MVC   CPUDATE(10),=CL10'19YY-MM-DD'\n         UNPK  WORK(3),SMF70DAT+1(2)\n         MVC   CPUDATE+2(2),WORK\n         CLC   WORK(2),=C'92'\n         BE    DLEAP70\n         CLC   WORK(2),=C'96'\n         BE    DLEAP70\n         LA    R5,NLEPYEAR\n         B     CALC70\nDLEAP70  LA    R5,LEAPYEAR\nCALC70   CP    SMF70DAT+2(2),0(2,R5)\n         BNL   FC70\n         LA    R5,4(,R5)\n         B     CALC70\nFC70     MVC   CPUDATE+5(2),2(R5)\n         SP    SMF70DAT+2(2),0(2,R5)\n         AP    SMF70DAT+2(2),=PL1'1'\n         UNPK  WORK(3),SMF70DAT+2(2)\n         MVC   CPUDATE+8(2),WORK+1\n         OI    CPUDATE+9,C'0'\n         UNPK  WORK(5),SMF70IST(3)\n         MVC   CPUTIME(2),WORK+1\n         CLI   SMF70INT,X'59' 1 HOUR INTERVAL\n         BE    GOODINT0\n         CLI   SMF70INT,X'60' 1 HOUR INTERVAL\n         BNE   LOOPIN IGNORE\n         DROP  R4\n         USING SMF70CPU,R4\nGOODINT0 LA    R4,INPUT\n         A     R4,INPUT+44\n         LH    R5,INPUT+48 LEN OF CPUDATA SEC\n         LH    R6,INPUT+50 NMBR OF CPU DATA SEC\nNEXTCPUS UNPK  WORK(3),SMF70SER(2)\n         MVC   CPUID(2),WORK\n         TR    CPUID(2),TRHEX-C'0'\n         MVC   CPUWAIT(4),SMF70WAT\n         PUT   SMFCPU,OUTCPU\n         ALR   R4,R5 NEXT CPUSEC\n         BCT   R6,NEXTCPUS ...\n         B     LOOPIN ..\n         DROP  R4\n         USING SMF72HDR,R4\nTYPE72   MVC   WRKSYSID(4),SMF72SID\n         LA    R4,INPUT\n         A     R4,INPUT+28\n         DROP  R4\n         USING SMF72PRO,R4\n         MVC   WRKDATE(10),=CL10'19YY-MM-DD'\n         UNPK  WORK(3),SMF72DAT+1(2)\n         MVC   WRKDATE+2(2),WORK\n         CLC   WORK(2),=C'92'\n         BE    DLEAP72\n         CLC   WORK(2),=C'96'\n         BE    DLEAP72\n         LA    R5,NLEPYEAR\n         B     CALC72\nDLEAP72  LA    R5,LEAPYEAR\nCALC72   CP    SMF72DAT+2(2),0(2,R5)\n         BNL   FC72\n         LA    R5,4(,R5)\n         B     CALC72\nFC72     MVC   WRKDATE+5(2),2(R5)\n         SP    SMF72DAT+2(2),0(2,R5)\n         AP    SMF72DAT+2(2),=PL1'1'\n         UNPK  WORK(3),SMF72DAT+2(2)\n         MVC   WRKDATE+8(2),WORK+1\n         OI    WRKDATE+9,C'0'\n         UNPK  WORK(5),SMF72IST(3)\n         MVC   WRKTIME(2),WORK+1\n         CLI   SMF72INT,X'59' 1 HOUR INTERVAL\n         BE    GOODINT2\n         CLI   SMF72INT,X'60' 1 HOUR INTERVAL\n         BNE   LOOPIN IGNORE\n         DROP  R4\n         USING SMF72CTL,R4\nGOODINT2 LA    R4,INPUT\n         A     R4,INPUT+36\n         CLC   =AL2(100),SMF72SUB PGN>=100\n         BH    LOOPIN IGNORE\n         MVC   WRKXNAME(8),=CL8' '\n         CLI   SMF72SYS,C' '\n         BE    LOOPIN\n         CLI   SMF72SYS,C'J'\n         BE    ISJOB\n         CLI   SMF72SYS,C'T'\n         BE    ISTSU\n         MVC   WRKXNAME(8),SMF72NAM\n         CLI   WRKXNAME,C' '\n         BE    LOOPIN\n         B     COMMON\nISTSU    MVC   WRKXNAME(3),=C'TSU'\n         MVC   WRKXNAME+3(5),SMF72USR\n         B     COMMON\nISJOB    MVC   WRKXNAME(6),=C'JCLASS'\n         MVC   WRKXNAME+6(1),SMF72CLS\n         CLI   WRKXNAME+6,C' '\n         BE    LOOPIN\n         DROP  R4\n         USING SMF72WKL,R4\nCOMMON   LA    R4,INPUT\n         A     R4,INPUT+44\n         MVC   WRKXCOUN(4),SMF72TTX\n         L     RF,SMF72CTS\n         A     RF,SMF72STS\n         ST    RF,WRKSCPU\n         MVC   WRKSIO(4),SMF72ITS\n         PUT   SMFWRK,OUTWRK\n         B     LOOPIN\n         DROP  R4\n         USING SMFRCD30,R4\nTYPE30   MVC   JOBSYSID(4),SMF30SID\n         MVC   JOBDATE(10),=CL10'19YY-MM-DD'\n         UNPK  WORK(3),SMF30DTE+1(2)\n         MVC   JOBDATE+2(2),WORK\n         CLC   WORK(2),=C'92'\n         BE    DLEAP30\n         CLC   WORK(2),=C'96'\n         BE    DLEAP30\n         LA    R5,NLEPYEAR\n         B     CALC30\nDLEAP30  LA    R5,LEAPYEAR\nCALC30   CP    SMF30DTE+2(2),0(2,R5)\n         BNL   FC30\n         LA    R5,4(,R5)\n         B     CALC30\nFC30     MVC   JOBDATE+5(2),2(R5)\n         SP    SMF30DTE+2(2),0(2,R5)\n         AP    SMF30DTE+2(2),=PL1'1'\n         UNPK  WORK(3),SMF30DTE+2(2)\n         MVC   JOBDATE+8(2),WORK+1\n         OI    JOBDATE+9,C'0'\n         SLR   R6,R6\n         ICM   R7,15,SMF30TME\n         D     R6,=F'360000'\n         CVD   R7,WORK\n         UNPK  WORK(3),WORK+6(2)\n         OI    WORK+2,C'0'\n         MVC   JOBTIME(2),WORK+1\n         DROP  R4\n         USING SMF30PSS,R4\n         LA    R4,INPUT\n         A     R4,INPUT+24\n         CLC   =H'5',SMF30TYP JOBTERM ONLY\n         BNE   LOOPIN\n         DROP  R4\n         USING SMF30ID,R4\n         LA    R4,INPUT\n         A     R4,INPUT+32\n         MVC   JOBCLASS(1),SMF30CLS\n         CLI   JOBCLASS,C' ' BLANK FOR STC TSU\n         BE    LOOPIN IGNORE\n         MVC   JOBRGRP(8),SMF30GRP\n         MVC   JOBRUID(8),SMF30RUD\n         DROP  R4\n         USING SMF30PRF,R4\n         LA    R4,INPUT\n         A     R4,INPUT+80\n         L     RF,SMF30CSU\n         A     RF,SMF30SRB\n         ST    RF,JOBSCPU\n         MVC   JOBSIO(4),SMF30IO\n         LTR   RF,RF\n         BNZ   PUT30\n         OC    JOBSIO(4),JOBSIO\n         BZ    LOOPIN IGNORE NO PERF IMPACT\nPUT30    PUT   SMFJOB,OUTJOB\n         B     LOOPIN\nEODAD    EQU   * *\n         CLOSE (SMFIN,,SMFCPU,,SMFWRK,,SMFJOB)\n         FREEPOOL SMFIN\n         FREEPOOL SMFCPU\n         FREEPOOL SMFWRK\n         FREEPOOL SMFJOB\n         SLR   R9,R9\nMAINEXIT L     RD,4(,RD)\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nWORK     DS    D\nSMFIN    DCB   DDNAME=SMFIN,DSORG=PS,MACRF=(GM),EODAD=EODAD\nSMFCPU   DCB   DDNAME=SMFCPU,DSORG=PS,MACRF=(PM)\nSMFWRK   DCB   DDNAME=SMFWRK,DSORG=PS,MACRF=(PM)\nSMFJOB   DCB   DDNAME=SMFJOB,DSORG=PS,MACRF=(PM)\nLEAPYEAR DC    PL2'336',CL2'12'\n         DC    PL2'306',CL2'11'\n         DC    PL2'275',CL2'10'\n         DC    PL2'245',CL2'09'\n         DC    PL2'214',CL2'08'\n         DC    PL2'183',CL2'07'\n         DC    PL2'153',CL2'06'\n         DC    PL2'122',CL2'05'\n         DC    PL2'092',CL2'04'\n         DC    PL2'061',CL2'03'\n         DC    PL2'032',CL2'02'\n         DC    PL2'001',CL2'01'\nNLEPYEAR DC    PL2'335',CL2'12'\n         DC    PL2'305',CL2'11'\n         DC    PL2'274',CL2'10'\n         DC    PL2'244',CL2'09'\n         DC    PL2'213',CL2'08'\n         DC    PL2'182',CL2'07'\n         DC    PL2'152',CL2'06'\n         DC    PL2'121',CL2'05'\n         DC    PL2'091',CL2'04'\n         DC    PL2'060',CL2'03'\n         DC    PL2'032',CL2'02'\n         DC    PL2'001',CL2'01'\nOUTCPU   DS    0F'0'\nCPUDATE  DS    CL10 YYYY-MM-DD\nCPUTIME  DS    CL2  HH\nCPUSYSID DS    CL4\nCPUWAIT  DS    FL4\nCPUID    DS    CL2  DOMAIN/LPAR ID\nOUTWRK   DS    0F'0'\nWRKDATE  DS    CL10 YYYY-MM-DD\nWRKTIME  DS    CL2  HH\nWRKSYSID DS    CL4\nWRKXNAME DS    CL8 STCNAME,TSUXXXXX,CLASSX\nWRKXCOUN DS    FL4 TRANSACTION ENDED COUNT\nWRKSCPU  DS    FL4\nWRKSIO   DS    FL4\nOUTJOB   DS    0F'0'\nJOBDATE  DS    CL10 YYYY-MM-DD\nJOBTIME  DS    CL2  HH\nJOBSYSID DS    CL4\nJOBRGRP  DS    CL8  RACF GROUP\nJOBRUID  DS    CL8  RACF UID\nJOBSCPU  DS    FL4\nJOBSIO   DS    FL4\nJOBCLASS DS    C JOBCLASS\nTRHEX    DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\n         LTORG\nINPUT    DS    0D'0',32767C\n         ERBSMFR (70,72)\n         IFASMFR (30)\n         END\n/*\n//G.SMFIN DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(0),DISP=SHR\n//G.SYSUDUMP DD SYSOUT=*\n//G.SMFCPU DD DSN=&&SMFCPU,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(1,1)),LRECL=22,RECFM=FB\n//G.SMFWRK DD DSN=&&SMFWRK,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(1,1)),LRECL=36,RECFM=FB\n//G.SMFJOB DD DSN=&&SMFJOB,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(1,1)),LRECL=41,RECFM=FB\n//SORTCPU EXEC PGM=SORT\n//SYSPRINT DD SYSOUT=*\n//SYSOUT DD SYSOUT=*\n//SORTIN DD DSN=&&SMFCPU,DISP=(OLD,DELETE)\n//SORTOUT DD DSN=&&SRTCPU,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(1,1)),LRECL=22,RECFM=FB\n//SYSIN DD *\n  SORT FIELDS=(1,22,BI,A)\n/*\n//SORTWRK EXEC PGM=SORT\n//SYSPRINT DD SYSOUT=*\n//SYSOUT DD SYSOUT=*\n//SORTIN DD DSN=&&SMFWRK,DISP=(OLD,DELETE)\n//SORTOUT DD DSN=&&SRTWRK,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(1,1)),LRECL=36,RECFM=FB\n//SYSIN DD *\n  SORT FIELDS=(1,36,BI,A)\n/*\n//SORTJOB EXEC PGM=SORT\n//SYSPRINT DD SYSOUT=*\n//SYSOUT DD SYSOUT=*\n//SORTIN DD DSN=&&SMFJOB,DISP=(OLD,DELETE)\n//SORTOUT DD DSN=&&SRTJOB,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(1,1)),LRECL=41,RECFM=FB\n//SYSIN DD *\n  SORT FIELDS=(1,41,BI,A)\n/*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPA',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=&&SRTCPU,\n//     DISP=(OLD,DELETE)\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TRMFCPU\n  (INTVDATE         POSITION (001:010) DATE EXTERNAL(10),\n   INTVTIME         POSITION (011:012) CHAR,\n   SYSID            POSITION (013:016) CHAR,\n   CPUWAIT          POSITION (017:020) INTEGER,\n   CPUID            POSITION (021:022) CHAR)\n/*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPA',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=&&SRTWRK,\n//     DISP=(OLD,DELETE)\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TRMFWRK\n  (INTVDATE         POSITION (001:010) DATE EXTERNAL(10),\n   INTVTIME         POSITION (011:012) CHAR,\n   SYSID            POSITION (013:016) CHAR,\n   XNAME            POSITION (017:024) CHAR,\n   XCOUNT           POSITION (025:028) INTEGER,\n   SERVCPU          POSITION (029:032) INTEGER,\n   SERVIO           POSITION (033:036) INTEGER)\n/*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPA',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=&&SRTJOB,\n//     DISP=(OLD,DELETE)\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TRMFJOB\n  (SMFDATE          POSITION (001:010) DATE EXTERNAL(10),\n   SMFTIME          POSITION (011:012) CHAR,\n   SYSID            POSITION (013:016) CHAR,\n   RACGROUP         POSITION (017:024) CHAR,\n   RACUID           POSITION (025:032) CHAR,\n   SERVCPU          POSITION (033:036) INTEGER,\n   SERVIO           POSITION (037:040) INTEGER,\n   JOBCLASS         POSITION (041:041) CHAR)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFPROC2": {"ttr": 10497, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x00\\x00\\x920\\x1f\\x00\\x93\\x01\\x8f\\tB\\x02\\x18\\x01\\x97\\x01\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1992-10-27T00:00:00", "modifydate": "1993-01-18T09:42:00", "lines": 536, "newlines": 407, "modlines": 260, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=6M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//S EXEC ASMHCLG\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n// DD DSN=SYSM.RMF.V4R2M1.MAC01,DISP=SHR\n//C.SYSIN DD *\nSMFPROC  CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         SAVE  (14,12),,SMFPROC*&SYSDATE*&SYSTIME\n         LR    RA,RF\n         USING SMFPROC,RA,RB,RC\n         LA    RB,4095(,RA)\n         LA    RB,1(,RB)\n         LA    RC,4095(,RB)\n         LA    RC,1(,RC)\n         LR    RF,RD\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18A(0)\n         ST    RD,8(,RF)\n         ST    RF,4(,RD)\n         OPEN  (SMFIN,(INPUT),SMFCPU,(OUTPUT),SMFWRK,(OUTPUT),SMFJOB,(OX\n               UTPUT),SMFWTR,(OUTPUT))\nLOOPIN   XC    INPUT(256),INPUT\n         XC    INPUT+256(256),INPUT+256\n         GET   SMFIN,INPUT\n         LA    R4,INPUT\n         CLI   INPUT+5,72 TYPE\n         BE    TYPE72\n         CLI   INPUT+5,30 TYPE\n         BE    TYPE30\n         CLI   INPUT+5,06 TYPE\n         BE    TYPE06\n         CLI   INPUT+5,70 TYPE\n         BNE   LOOPIN\n         USING SMF70HDR,R4\nTYPE70   MVC   CPUSYSID(4),SMF70SID\n         LA    R4,INPUT\n         A     R4,INPUT+28\n         DROP  R4\n         USING SMF70PRO,R4\n         MVC   CPUDATE(10),=CL10'19YY-MM-DD'\n         UNPK  WORK(3),SMF70DAT+1(2)\n         MVC   CPUDATE+2(2),WORK\n         CLC   WORK(2),=C'92'\n         BE    DLEAP70\n         CLC   WORK(2),=C'96'\n         BE    DLEAP70\n         LA    R5,NLEPYEAR\n         B     CALC70\nDLEAP70  LA    R5,LEAPYEAR\nCALC70   CP    SMF70DAT+2(2),0(2,R5)\n         BNL   FC70\n         LA    R5,4(,R5)\n         B     CALC70\nFC70     MVC   CPUDATE+5(2),2(R5)\n         SP    SMF70DAT+2(2),0(2,R5)\n         AP    SMF70DAT+2(2),=PL1'1'\n         UNPK  WORK(3),SMF70DAT+2(2)\n         MVC   CPUDATE+8(2),WORK+1\n         OI    CPUDATE+9,C'0'\n         UNPK  WORK(5),SMF70IST(3)\n         MVC   CPUTIME(2),WORK+1\n         CLI   SMF70INT,X'59' 1 HOUR INTERVAL\n         BE    GOODINT0\n         CLI   SMF70INT,X'60' 1 HOUR INTERVAL\n         BNE   LOOPIN IGNORE\n         DROP  R4\n         USING SMF70CPU,R4\nGOODINT0 LA    R4,INPUT\n         A     R4,INPUT+44\n         LH    R5,INPUT+48 LEN OF CPUDATA SEC\n         LH    R6,INPUT+50 NMBR OF CPU DATA SEC\n         LR    RF,R6 SAVE CPUSER CTR\n         MH    RF,=H'3432' NUMBR SEC\n         XC    CPUUTIL(4),CPUUTIL\nNEXTCPUS L     R0,SMF70WAT\n         AL    R0,CPUUTIL\n         ST    R0,CPUUTIL\n         ALR   R4,R5 NEXT CPUSEC\n         BCT   R6,NEXTCPUS ...\n         LR    R0,RF CALC CPUUTIL\n         SL    R0,CPUUTIL\n         ST    R0,CPUUTIL\n         ST    RF,CPUINTVL\n         PUT   SMFCPU,OUTCPU\n         B     LOOPIN ..\n         DROP  R4\n         USING SMF72HDR,R4\nTYPE72   MVC   WRKSYSID(4),SMF72SID\n         CLC   =H'1',SMF72STY SUBTYPE\n         BNE   LOOPIN\n         LA    R4,INPUT\n         A     R4,INPUT+28\n         DROP  R4\n         USING SMF72PRO,R4\n         MVC   WRKDATE(10),=CL10'19YY-MM-DD'\n         UNPK  WORK(3),SMF72DAT+1(2)\n         MVC   WRKDATE+2(2),WORK\n         CLC   WORK(2),=C'92'\n         BE    DLEAP72\n         CLC   WORK(2),=C'96'\n         BE    DLEAP72\n         LA    R5,NLEPYEAR\n         B     CALC72\nDLEAP72  LA    R5,LEAPYEAR\nCALC72   CP    SMF72DAT+2(2),0(2,R5)\n         BNL   FC72\n         LA    R5,4(,R5)\n         B     CALC72\nFC72     MVC   WRKDATE+5(2),2(R5)\n         SP    SMF72DAT+2(2),0(2,R5)\n         AP    SMF72DAT+2(2),=PL1'1'\n         UNPK  WORK(3),SMF72DAT+2(2)\n         MVC   WRKDATE+8(2),WORK+1\n         OI    WRKDATE+9,C'0'\n         UNPK  WORK(5),SMF72IST(3)\n         MVC   WRKTIME(2),WORK+1\n         CLI   SMF72INT,X'59' 1 HOUR INTERVAL\n         BE    GOODINT2\n         CLI   SMF72INT,X'60' 1 HOUR INTERVAL\n         BNE   LOOPIN IGNORE\n         DROP  R4\n         USING SMF72CTL,R4\nGOODINT2 LA    R4,INPUT\n         A     R4,INPUT+36\n         CLC   =AL2(100),SMF72SUB PGN>=100\n         BH    LOOPIN IGNORE\n         MVC   WRKXNAME(8),=CL8' '\n         CLI   SMF72SYS,C' '\n         BE    LOOPIN\n         CLI   SMF72SYS,C'J'\n         BE    ISJOB\n         CLI   SMF72SYS,C'T'\n         BE    ISTSU\n         MVC   WRKXNAME(8),SMF72NAM\n         CLI   WRKXNAME,C' '\n         BE    LOOPIN\n         B     COMMON\nISTSU    MVC   WRKXNAME(3),=C'TSU'\n         MVC   WRKXNAME+3(5),SMF72USR\n         B     COMMON\nISJOB    MVC   WRKXNAME(6),=C'JCLASS'\n         MVC   WRKXNAME+6(1),SMF72CLS\n         CLI   WRKXNAME+6,C' '\n         BE    LOOPIN\n         DROP  R4\n         USING SMF72WKL,R4\nCOMMON   LA    R4,INPUT\n         A     R4,INPUT+44\n         MVC   WRKXCOUN(4),SMF72TTX\n         L     RF,SMF72CTS\n         LTR   RF,RF\n         BM    LOOPIN\n         A     RF,SMF72STS\n         LTR   RF,RF\n         BM    LOOPIN\n         A     RF,SMF72ITS\n         LTR   RF,RF CHECK\n         BZ    LOOPIN\n         BM    MAX72\nPUTT72   ST    RF,WRKSERV\n         PUT   SMFWRK,OUTWRK\n         B     LOOPIN\nMAX72    L     RF,=F'2147483647' MAX\n         B     PUTT72\n         DROP  R4\n         USING SMFRCD06,R4\nTYPE06   MVC   WTRLREC(4),SMF6NLR    RECORD CTR\n         MVC   WTRUID(8),=CL8' '\n         TM    SMF6PAD1,X'40' COMMON SECT\n         BZ    WRT06 NO\n         TM    SMF6PAD1,X'80' 3800   SECT\n         BZ    NO3800\n         LA    R4,SMF6LN1 POSITION VAR SECT\n         AH    R4,0(,R4)  ...\n         AH    R4,0(,R4)\n         B     T6COMM\nNO3800   LA    R4,SMF6LN1 POSITION VAR SECT\n         AH    R4,0(,R4)  ...\nT6COMM   MVC   WTRUID(8),SMF6USID-SMF6LN3(R4)\nWRT06    PUT   SMFWTR,OUTWTR\n         B     LOOPIN\n         DROP  R4\n         USING SMFRCD30,R4\nTYPE30   MVC   JOBSYSID(4),SMF30SID\n         MVC   JOBDATE(10),=CL10'19YY-MM-DD'\n         UNPK  WORK(3),SMF30DTE+1(2)\n         MVC   JOBDATE+2(2),WORK\n         CLC   WORK(2),=C'92'\n         BE    DLEAP30\n         CLC   WORK(2),=C'96'\n         BE    DLEAP30\n         LA    R5,NLEPYEAR\n         B     CALC30\nDLEAP30  LA    R5,LEAPYEAR\nCALC30   CP    SMF30DTE+2(2),0(2,R5)\n         BNL   FC30\n         LA    R5,4(,R5)\n         B     CALC30\nFC30     MVC   JOBDATE+5(2),2(R5)\n         SP    SMF30DTE+2(2),0(2,R5)\n         AP    SMF30DTE+2(2),=PL1'1'\n         UNPK  WORK(3),SMF30DTE+2(2)\n         MVC   JOBDATE+8(2),WORK+1\n         OI    JOBDATE+9,C'0'\n         SLR   R6,R6\n         ICM   R7,15,SMF30TME\n         D     R6,=F'360000'\n         CVD   R7,WORK\n         UNPK  WORK(3),WORK+6(2)\n         OI    WORK+2,C'0'\n         MVC   JOBTIME(2),WORK+1\n         DROP  R4\n         USING SMF30PSS,R4\n         LA    R4,INPUT\n         A     R4,INPUT+24\n         CLC   =H'5',SMF30TYP JOBTERM ONLY\n         BNE   LOOPIN\n         DROP  R4\n         USING SMF30ID,R4\n         LA    R4,INPUT\n         A     R4,INPUT+32\n         MVC   JOBCLASS(1),SMF30CLS\n         CLI   JOBCLASS,C' ' BLANK FOR STC TSU\n         BE    LOOPIN IGNORE\n         MVC   JOBRGRP(8),SMF30GRP\n         MVC   JOBRUID(8),SMF30RUD\n         DROP  R4\n         USING SMF30OPS,R4\n         LA    R4,INPUT\n         A     R4,INPUT+88\n         L     R0,SMF30PTM\n         AL    R0,SMF30TPR\n         STCM  R0,15,JOBMOUNT\n         DROP  R4\n         USING SMF30URA,R4\n         LA    R4,INPUT\n         A     R4,INPUT+40\n         L     R0,SMF30TEP\n         LTR   R0,R0\n         L     RF,=F'2147483647' MAX\n         BM    SETEXCP\n         LR    RF,R0 SET EXCP CTR\nSETEXCP  STCM  RF,15,JOBIOCNT ...\n         DROP  R4\n         USING SMF30ACS,R4\n         LA    R4,INPUT\n         A     R4,INPUT+64\n         MVC   JOBACCT(9),=CL9' '\n         CLI   SMF30ACL,X'09'\n         BL    DO30PRF\n         MVC   JOBACCT(9),SMF30ACT\n         DROP  R4\n         USING SMF30PRF,R4\nDO30PRF  LA    R4,INPUT\n         A     R4,INPUT+80\n         L     RF,SMF30CSU\n         LTR   RF,RF\n         BM    LOOPIN\n         A     RF,SMF30SRB\n         LTR   RF,RF\n         BM    LOOPIN\n         A     RF,SMF30IO\n         LTR   RF,RF\n         BZ    LOOPIN\n         BM    MAX30\nPUT30    STCM  RF,15,JOBSERV\n         PUT   SMFJOB,OUTJOB\n         B     LOOPIN\nMAX30    L     RF,=F'2147483647' MAX\n         B     PUT30\nEODAD    EQU   * *\n         CLOSE (SMFIN,,SMFCPU,,SMFWRK,,SMFJOB,,SMFWTR)\n         FREEPOOL SMFIN\n         FREEPOOL SMFCPU\n         FREEPOOL SMFWRK\n         FREEPOOL SMFJOB\n         FREEPOOL SMFWTR\n         SLR   R9,R9\nMAINEXIT L     RD,4(,RD)\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nWORK     DS    D\nSMFIN    DCB   DDNAME=SMFIN,DSORG=PS,MACRF=(GM),EODAD=EODAD\nSMFCPU   DCB   DDNAME=SMFCPU,DSORG=PS,MACRF=(PM)\nSMFWRK   DCB   DDNAME=SMFWRK,DSORG=PS,MACRF=(PM)\nSMFJOB   DCB   DDNAME=SMFJOB,DSORG=PS,MACRF=(PM)\nSMFWTR   DCB   DDNAME=SMFWTR,DSORG=PS,MACRF=(PM)\nLEAPYEAR DC    PL2'336',CL2'12'\n         DC    PL2'306',CL2'11'\n         DC    PL2'275',CL2'10'\n         DC    PL2'245',CL2'09'\n         DC    PL2'214',CL2'08'\n         DC    PL2'183',CL2'07'\n         DC    PL2'153',CL2'06'\n         DC    PL2'122',CL2'05'\n         DC    PL2'092',CL2'04'\n         DC    PL2'061',CL2'03'\n         DC    PL2'032',CL2'02'\n         DC    PL2'001',CL2'01'\nNLEPYEAR DC    PL2'335',CL2'12'\n         DC    PL2'305',CL2'11'\n         DC    PL2'274',CL2'10'\n         DC    PL2'244',CL2'09'\n         DC    PL2'213',CL2'08'\n         DC    PL2'182',CL2'07'\n         DC    PL2'152',CL2'06'\n         DC    PL2'121',CL2'05'\n         DC    PL2'091',CL2'04'\n         DC    PL2'060',CL2'03'\n         DC    PL2'032',CL2'02'\n         DC    PL2'001',CL2'01'\nOUTCPU   DS    0F'0'\nCPUSYSID DS    CL4\nCPUDATE  DS    CL10 YYYY-MM-DD\nCPUTIME  DS    CL2  HH\nCPUUTIL  DS    FL4\nCPUINTVL DS    FL4\nOUTWRK   DS    0F'0'\nWRKXNAME DS    CL8 STCNAME,TSUXXXXX,CLASSX\nWRKSYSID DS    CL4\nWRKXCOUN DS    FL4 TRANSACTION ENDED COUNT\nWRKSERV  DS    FL4\nWRKDATE  DS    CL10 YYYY-MM-DD\nWRKTIME  DS    CL2  HH\nOUTJOB   DS    0F'0'\nJOBRGRP  DS    CL8  RACF GROUP\nJOBRUID  DS    CL8  RACF UID\nJOBCLASS DS    C    JOBCLASS\nJOBSERV  DS    FL4\nJOBSYSID DS    CL4\nJOBDATE  DS    CL10 YYYY-MM-DD\nJOBTIME  DS    CL2  HH\nJOBACCT  DS    CL9  FIRST ACCT FIELD\nJOBIOCNT DS    FL4  JOB IO COUNTER\nJOBMOUNT DS    FL4  JOB MOUNT CTR\nOUTWTR   DS    0F'0'\nWTRUID   DS    CL8\nWTRLREC  DS    FL4\nTRHEX    DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\n         LTORG\nINPUT    DS    0D'0',32767C\n         ERBSMFR (70,72)\nSMFRCD06 DSECT\n         IFASMFR (6,30)\n         END\n/*\n//G.SMFIN DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(0),DISP=SHR\n//*       DD DSN=PD.SMFDUMP.WEEKLY.BACKUP(-1),DISP=SHR,\n//*   UNIT=AFF=SMFIN\n//G.SYSUDUMP DD SYSOUT=*\n//G.SMFCPU DD DSN=&&SMFCPU,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(10,5)),LRECL=24,RECFM=FB\n//G.SMFWRK DD DSN=&&SMFWRK,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(10,5)),LRECL=32,RECFM=FB\n//G.SMFJOB DD DSN=&&SMFJOB,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(10,5)),LRECL=54,RECFM=FB\n//G.SMFWTR DD DSN=&&SMFWTR,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(10,5)),LRECL=12,RECFM=FB\n//SORTCPU EXEC PGM=SORT\n//SYSPRINT DD SYSOUT=*\n//SYSOUT DD SYSOUT=*\n//SORTIN DD DSN=&&SMFCPU,DISP=(OLD,DELETE)\n//*SORTOUT DD DSN=TECH110.USER.SRTCPU,DISP=MOD\n//SORTOUT DD DSN=&&SRTCPUM,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(10,5)),LRECL=24,RECFM=FB\n//SYSIN DD *\n  SORT FIELDS=(1,24,BI,A)\n/*\n//SORTWRK EXEC PGM=SORT\n//SYSPRINT DD SYSOUT=*\n//SYSOUT DD SYSOUT=*\n//SORTIN DD DSN=&&SMFWRK,DISP=(OLD,DELETE)\n//*SORTOUT DD DSN=TECH110.USER.SRTWRK,DISP=MOD\n//SORTOUT DD DSN=&&SRTWRKM,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(10,5)),LRECL=32,RECFM=FB\n//SYSIN DD *\n  SORT FIELDS=(1,32,BI,A)\n/*\n//SORTJOB EXEC PGM=SORT\n//SYSPRINT DD SYSOUT=*\n//SYSOUT DD SYSOUT=*\n//SORTIN DD DSN=&&SMFJOB,DISP=(OLD,DELETE)\n//*SORTOUT DD DSN=TECH110.USER.SRTJOB,DISP=MOD\n//SORTOUT DD DSN=&&SRTJOBM,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(10,5)),LRECL=54,RECFM=FB\n//SYSIN DD *\n  SORT FIELDS=(1,54,BI,A)\n/*\n//SORTWTR EXEC PGM=SORT\n//SYSPRINT DD SYSOUT=*\n//SYSOUT DD SYSOUT=*\n//SORTIN DD DSN=&&SMFWTR,DISP=(OLD,DELETE)\n//*SORTOUT DD DSN=TECH110.USER.SRTWTR,DISP=MOD\n//SORTOUT DD DSN=&&SRTWTRM,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(10,5)),LRECL=12,RECFM=FB\n//SYSIN DD *\n  SORT FIELDS=(1,12,BI,A)\n/*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPJ',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=&&SRTCPUM,DISP=(OLD,PASS)\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TRMFCPU\n  (SYSID            POSITION (001:004) CHAR,\n   INTVDATE         POSITION (005:014) DATE EXTERNAL(10),\n   INTVTIME         POSITION (015:016) CHAR,\n   CPUUTIL          POSITION (017:020) INTEGER,\n   CPUINTV          POSITION (021:024) INTEGER)\n/*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPK',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=&&SRTWRKM,DISP=(OLD,PASS)\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TRMFWRK\n  (XNAME            POSITION (001:008) CHAR,\n   SYSID            POSITION (009:012) CHAR,\n   XCOUNT           POSITION (013:016) INTEGER,\n   SERV             POSITION (017:020) INTEGER,\n   INTVDATE         POSITION (021:030) DATE EXTERNAL(10),\n   INTVTIME         POSITION (031:032) CHAR)\n/*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPL',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=&&SRTJOBM,DISP=(OLD,PASS)\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TRMFJOB\n  (RACGROUP         POSITION (001:008) CHAR,\n   RACUID           POSITION (009:016) CHAR,\n   JOBCLASS         POSITION (017:017) CHAR,\n   SERV             POSITION (018:021) INTEGER,\n   SYSID            POSITION (022:025) CHAR,\n   SMFDATE          POSITION (026:035) DATE EXTERNAL(10),\n   SMFTIME          POSITION (036:037) CHAR,\n   JOBACCT          POSITION (038:046) CHAR,\n   JOBIOCNT         POSITION (047:050) INTEGER,\n   JOBMOUNT         POSITION (051:054) INTEGER)\n/*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPM',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=&&SRTWTRM,DISP=(OLD,PASS)\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TRMFWTR\n  (WTRUID           POSITION (001:008) CHAR,\n   WTRLREC          POSITION (009:012) INTEGER)\n/*\n//G1 EXEC PGM=IEBGENER,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSUT1 DD DSN=&&SRTWTRM,DISP=(OLD,DELETE)\n//SYSUT2 DD DSN=TECH110.USER.SRTWTR,DISP=(MOD,KEEP)\n//SYSIN  DD DUMMY\n//G2 EXEC PGM=IEBGENER,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSUT1 DD DSN=&&SRTJOBM,DISP=(OLD,DELETE)\n//SYSUT2 DD DSN=TECH110.USER.SRTJOB,DISP=(MOD,KEEP)\n//SYSIN  DD DUMMY\n//G3 EXEC PGM=IEBGENER,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSUT1 DD DSN=&&SRTWRKM,DISP=(OLD,DELETE)\n//SYSUT2 DD DSN=TECH110.USER.SRTWRK,DISP=(MOD,KEEP)\n//SYSIN  DD DUMMY\n//G4 EXEC PGM=IEBGENER,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSUT1 DD DSN=&&SRTCPUM,DISP=(OLD,DELETE)\n//SYSUT2 DD DSN=TECH110.USER.SRTCPU,DISP=(MOD,KEEP)\n//SYSIN  DD DUMMY\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMFPROC3": {"ttr": 10506, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x920\\x1f\\x00\\x922\\x1f\\x11\\x07\\x00k\\x01\\x97\\x007\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1992-10-27T00:00:00", "modifydate": "1992-11-16T11:07:00", "lines": 107, "newlines": 407, "modlines": 55, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=6M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPJ',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=TECH110.USER.SRTCPUM,\n//     DISP=SHR\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TRMFCPU\n  (SYSID            POSITION (001:004) CHAR,\n   INTVDATE         POSITION (005:014) DATE EXTERNAL(10),\n   INTVTIME         POSITION (015:016) CHAR,\n   CPUUTIL          POSITION (017:020) INTEGER,\n   CPUINTV          POSITION (021:024) INTEGER)\n/*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPK',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=TECH110.USER.SRTWRKM,\n//     DISP=SHR\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TRMFWRK\n  (XNAME            POSITION (001:008) CHAR,\n   SYSID            POSITION (009:012) CHAR,\n   XCOUNT           POSITION (013:016) INTEGER,\n   SERV             POSITION (017:020) INTEGER,\n   INTVDATE         POSITION (021:030) DATE EXTERNAL(10),\n   INTVTIME         POSITION (031:032) CHAR)\n/*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPL',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=TECH110.USER.SRTJOBM,\n//     DISP=SHR\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TRMFJOB\n  (RACGROUP         POSITION (001:008) CHAR,\n   RACUID           POSITION (009:016) CHAR,\n   JOBCLASS         POSITION (017:017) CHAR,\n   SERV             POSITION (018:021) INTEGER,\n   SYSID            POSITION (022:025) CHAR,\n   SMFDATE          POSITION (026:035) DATE EXTERNAL(10),\n   SMFTIME          POSITION (036:037) CHAR,\n   JOBACCT          POSITION (038:046) CHAR,\n   JOBIOCNT         POSITION (047:050) INTEGER,\n   JOBMOUNT         POSITION (051:054) INTEGER)\n/*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPM',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=TECH110.USER.SRTWTRM,\n//     DISP=SHR\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(YES) LOG(NO)\n  INTO TABLE BUILD.TRMFWTR\n  (WTRUID           POSITION (001:008) CHAR,\n   WTRLREC          POSITION (009:012) INTEGER)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMPLIST": {"ttr": 10755, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92\\x12\\x7f\\x00\\x92\\x12\\x7f\\x10\\x05\\x00\\r\\x00\\r\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-05-06T00:00:00", "modifydate": "1992-05-06T10:05:00", "lines": 13, "newlines": 13, "modlines": 3, "user": "TECH110"}, "text": "//SMPLIST JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=A,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S1 EXEC PGM=GIMSMP,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//ABRMAP   DD SYSOUT=*\n//SYSIN DD *\n XSELECT VOLG=SMS\n REPORT FIELD=(DSN,VOL,DCBINFO,NOEXTENT,SMSCLASS,STORGRP)\n SORT FIELD=(DSN)\n PRINT\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSEXMPL": {"ttr": 10757, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x92\\x14\\x0f\\x00\\x93!_\\x11\\x03\\x00\\x06\\x00\\t\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1992-05-19T00:00:00", "modifydate": "1993-08-03T11:03:00", "lines": 6, "newlines": 9, "modlines": 4, "user": "TECH110"}, "text": "//TECH110Y JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STDSYM INCLUDE MEMBER=STDSYM\n//S EXEC PGM=IEFBR14\n//EXAMPLE1 DD DSN=&SYS.&DIST..&SOURCING..KIRKSTON.TEST,DISP=SHR\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSEXMP2": {"ttr": 10759, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x92\\x14\\x0f\\x00\\x94$/\\t\\x15\\x00\\x0c\\x00\\x0b\\x00\\x0b\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1992-05-19T00:00:00", "modifydate": "1994-08-30T09:15:00", "lines": 12, "newlines": 11, "modlines": 11, "user": "TECH110"}, "text": "//TECH110K JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n   DEF CL (NAME(TECH110.TEST.CLUSTER) -\n      MB(1,1) -\n      VOL(* * *) RECSZ(200 600))\n   IF LASTCC = 0 THEN -\n   LISTC ENTRY(TECH110.TEST.CLUSTER) ALL\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSEXMP3": {"ttr": 10761, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01 \\x00\\x00\\x00\\x92\\x19\\x1f\\x00\\x92(?\\x12\\x18\\x00\\x07\\x00\\x0b\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.32", "flags": 0, "createdate": "1992-07-09T00:00:00", "modifydate": "1992-10-09T12:18:00", "lines": 7, "newlines": 11, "modlines": 5, "user": "TECH110"}, "text": "//SMSEXMPL JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S1 EXEC PGM=IEFBR14\n//EXAMPLE1 DD DSN=TECH110.TEST.DATA,DISP=(NEW,CATLG),\n// AVGREC=M,SPACE=(1,(1,1)),DATACLAS=DATAPS,LRECL=80,RECFM=FB,\n// VOL=SER=('*','*')\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSEXMP4": {"ttr": 10763, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92 _\\x00\\x92 _\\x14\\x16\\x00\\x13\\x00\\x07\\x00\\x10\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-07-23T00:00:00", "modifydate": "1992-07-23T14:16:00", "lines": 19, "newlines": 7, "modlines": 16, "user": "TECH110"}, "text": "//SMSEXMPL JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP1 EXEC PGM=IEFBR14\n//STEP2 EXEC PGM=IEFBR14\n//IFSTEP3 IF (\u00acABEND & STEP1.RC<=4 & STEP2.RC=12) THEN\n//STEP3 EXEC PGM=IEFBR14\n// ELSE\n//IFSTEP4 IF (STEP2.ABENDCC=S0C4 | STEP1.ABENDCC=U1536) THEN\n//STEP4 EXEC PGM=IEFBR14\n// ELSE\n//ENDSTEP4 ENDIF\n//ENDSTEP3 ENDIF\n//IFSTEP5 IF (STEP3.RUN=TRUE & ABEND=FALSE) THEN\n//STEP5 EXEC PGM=IEFBR14\n//ENDSTEP5 ENDIF\n//IFSTEP6 IF ((\u00acSTEP4.RUN) & (STEP2.RUN | \u00acSTEP1.ABEND)) THEN\n//STEP6 EXEC PGM=IEFBR14\n//ENDSTEP6 ENDIF\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSEXMP5": {"ttr": 10765, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92 _\\x00\\x92 _\\x15\\x01\\x00\\r\\x00\\x13\\x00\\n\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-07-23T00:00:00", "modifydate": "1992-07-23T15:01:00", "lines": 13, "newlines": 19, "modlines": 10, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=TECH110\n//DEFAULT OUTPUT DEFAULT=YES,NOTIFY=TECH110,JESDS=ALL,\n//          OUTDISP=(KEEP,PURGE),\n//          NAME='GERRY CHOJNACKI',\n//          ADDRESS=('3750 STATE ROAD','BENSALEM,PA.','19020'),\n//          DEPT='MIS-TECHNICAL SUPPORT',\n//          ROOM='7-128'\n//STEP1 EXEC PGM=IEFBR14\n//SYSPRINT   DD SYSOUT=*\n//STEP2 EXEC PGM=IEFBR14\n//SYSPRINT   DD SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSEXMP6": {"ttr": 10767, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92 _\\x00\\x92 _\\x15\\x16\\x00\\x07\\x00\\r\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-07-23T00:00:00", "modifydate": "1992-07-23T15:16:00", "lines": 7, "newlines": 13, "modlines": 4, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP1 EXEC PGM=IEFBR14\n//SYSPRT1    DD SYSOUT=*,SEGMENT=50   /* SPIN-OFF EVERY 50 PAGES */\n//SYSPRT2    DD SYSOUT=*,SPIN=UNALLOC /* SPIN-OFF AT STEP-END    */\n//*                                   /* NOT JOB-END             */\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSEXMP7": {"ttr": 10769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92 _\\x00\\x92 _\\x155\\x00\\x07\\x00\\x07\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-07-23T00:00:00", "modifydate": "1992-07-23T15:35:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//MYLIB JCLLIB ORDER=(TECH110.USER.CNTLLIB,TECH110.USER2.CNTLLIB)\n//STEP1 EXEC PGM=IEFBR14\n//STEP2 EXEC PROC=TESTPROC\n//INC1  INCLUDE MEMBER=INCLUDE1\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSEXMP8": {"ttr": 10771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92 _\\x00\\x92 _\\x15X\\x00\\n\\x00\\n\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-07-23T00:00:00", "modifydate": "1992-07-23T15:58:00", "lines": 10, "newlines": 10, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//TESTPROC PROC\n//STEP1 EXEC PGM=&A&B&C,PARM=&C.23\n// PEND\n// SET A=IEF,B=BR,C=14\n// EXEC PROC=TESTPROC\n// SET A=IEF,B=,C=BR14\n// EXEC PROC=TESTPROC\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMSEXMP9": {"ttr": 10773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92 o\\x00\\x92 o\\x14S\\x00\\x05\\x00\\x05\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-07-24T00:00:00", "modifydate": "1992-07-24T14:53:00", "lines": 5, "newlines": 5, "modlines": 0, "user": "TECH110"}, "text": "//SMSEXMPL JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IEFBR14\n//CARD   DD DSN=TECH110.TEST.CNTLLIB,DISP=(MOD,DELETE,DELETE)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SQLDEL": {"ttr": 10775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x93\\x06/\\x00\\x93\\x06/\\x14&\\x00\\x04\\x00\\x04\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1993-03-03T00:00:00", "modifydate": "1993-03-03T14:26:00", "lines": 4, "newlines": 4, "modlines": 4, "user": "TECH110"}, "text": " DROP TABLE  BUILD.TXRFJOB ;\n DROP TABLE  BUILD.TXRFEXEC ;\n DROP TABLE  BUILD.TXRFPROC ;\n DROP TABLE  BUILD.TXRFFILE ;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SQLSEL": {"ttr": 10777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\x06/\\x00\\x93\\x06/\\x14Q\\x00\\x01\\x00\\x01\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-03-03T00:00:00", "modifydate": "1993-03-03T14:51:00", "lines": 1, "newlines": 1, "modlines": 1, "user": "TECH110"}, "text": "SELECT * FROM SYSIBM.SYSDBAUTH WHERE GRANTEE='TECH110';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STANDARD": {"ttr": 10779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94\"O\\x00\\x94#O\\x108\\x00]\\x00\\\\\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-08-12T00:00:00", "modifydate": "1994-08-22T10:38:00", "lines": 93, "newlines": 92, "modlines": 0, "user": "TECH110"}, "text": "//********************************************************************/\n//* INCLUDE THIS MEMBER CONTAINING STANDARD SYMBOLIC PARAMETERS      */\n//* //STANDARD INCLUDE MEMBER=STANDARD                               */\n//* IMMEDIATELY AFTER THE JOB STATEMENT, PRIOR TO FIRST EXEC         */\n//*                                                                  */\n//* DATASET NAME FORMAT                                              */\n//*                                                                  */\n//* &ENV..&FUNC.. ... &CLUSTER|&IAM|&BACKUP                          */\n//* FOR EXAMPLE,                                                     */\n//* PROD.INVTY...CLUSTER         WOULD BE CODED AS                   */\n//* &ENV..&INVTY...&CLUSTER IN PROC BODY                             */\n//*                                                                  */\n//* &ENV REPRESENTS PRODUCTION('PROD')                               */\n//*                 QUALITY ASSURANCE('QUAL')                        */\n//*                 TEST('TEST')                                     */\n//*                 PROGRAMMER TSO/E USERID('APPL...')               */\n//*                                                                  */\n//* &FUNC REPRESENTS THE BUSINESS-ORIENTED DATA FUNCTION             */\n//*                 USE SYMBOLICS &ADMIN, &CUST, ETC.                */\n//*                                                                  */\n//* &CLUSTER IDENTIFIES THIS AS A VSAM KSDS/ESDS/RRDS/LSDS FILE      */\n//* &IAM IDENTIFIES THIS AS AN IAM FILE                              */\n//* &BACKUP IDENTIFIES THIS AS A BACKUP OF AN EXISTING FILE          */\n//********************************************************************/\n//  SET UID=&SYSUID          /* SUBMITTERS RACF USERID               */\n//********************************************************************/\n//  SET ENV='PROD'           /* PRODUCTION DATASET                   */\n//********************************************************************/\n//  SET ADMIN='ADMIN'        /* ADMINISTRATION                       */\n//  SET CUST='CUST'          /* CUSTOMER                             */\n//  SET FIN='FIN'            /* FINANCE                              */\n//  SET INVTY='INVTY'        /* INVENTORY MANAGEMENT                 */\n//  SET MFG='MFG'            /* MANUFACTURING                        */\n//  SET MIS='MIS'            /* MANAGEMENT INFORMATION SYSTEMS       */\n//  SET PLAN='PLAN'          /* PLANNING                             */\n//  SET REAL='REAL'          /* REAL ESTATE DEVELOPMENT              */\n//  SET SALES='SALES'        /* SALES                                */\n//  SET SHIP='SHIP'          /* SHIPPING                             */\n//********************************************************************/\n//  SET CLUSTER='CLUSTER'    /* VSAM CLUSTER                         */\n//  SET BACKUP='BACKUP'      /* BACKUP DATASET                       */\n//  SET IAM='$IAM'           /* IAM CLUSTER                          */\n//  SET KSDS='RECORG=KS'     /* VSAM CLUSTER                         */\n//  SET ESDS='RECORG=ES'     /* VSAM CLUSTER                         */\n//  SET RRDS='RECORG=RR'     /* VSAM CLUSTER                         */\n//  SET LSDS='RECORG=LS'     /* VSAM CLUSTER                         */\n//********************************************************************/\n//  SET TEMP='MGMTCLAS=TEMP' /* TEMPORARY, WITHIN A JOB, FILE        */\n//********************************************************************/\n//  SET NEW='DISP=(NEW,CATLG,DELETE)'        /* DISP                 */\n//  SET SHR='DISP=(SHR,KEEP,KEEP)'           /* DISP                 */\n//  SET OLD='DISP=(OLD,KEEP,KEEP)'           /* DISP                 */\n//  SET MOD='DISP=(MOD,KEEP,KEEP)'           /* DISP                 */\n//  SET DEL='DISP=(OLD,DELETE,KEEP)'         /* DISP                 */\n//********************************************************************/\n//  SET LAM='SUBSYS=LAM'     /* LAM SUPPORT                          */\n//********************************************************************/\n//  SET SYSOUT='SYSOUT=*'    /* SYSOUT                               */\n//  SET SYSOUTA='SYSOUT=A'   /* SYSOUT                               */\n//  SET SYSOUTB='SYSOUT=B'   /* SYSOUT                               */\n//  SET SYSOUTC='SYSOUT=C'   /* SYSOUT                               */\n//  SET SYSOUTD='SYSOUT=D'   /* SYSOUT                               */\n//  SET SYSOUTE='SYSOUT=E'   /* SYSOUT                               */\n//  SET SYSOUTF='SYSOUT=F'   /* SYSOUT                               */\n//  SET SYSOUTG='SYSOUT=G'   /* SYSOUT                               */\n//  SET SYSOUTH='SYSOUT=H'   /* SYSOUT                               */\n//  SET SYSOUTI='SYSOUT=I'   /* SYSOUT                               */\n//  SET SYSOUTJ='SYSOUT=J'   /* SYSOUT                               */\n//  SET SYSOUTK='SYSOUT=K'   /* SYSOUT                               */\n//  SET SYSOUTL='SYSOUT=L'   /* SYSOUT                               */\n//  SET SYSOUTM='SYSOUT=M'   /* SYSOUT                               */\n//  SET SYSOUTN='SYSOUT=N'   /* SYSOUT                               */\n//  SET SYSOUTO='SYSOUT=O'   /* SYSOUT                               */\n//  SET SYSOUTP='SYSOUT=P'   /* SYSOUT                               */\n//  SET SYSOUTQ='SYSOUT=Q'   /* SYSOUT                               */\n//  SET SYSOUTR='SYSOUT=R'   /* SYSOUT                               */\n//  SET SYSOUTS='SYSOUT=S'   /* SYSOUT                               */\n//  SET SYSOUTT='SYSOUT=T'   /* SYSOUT                               */\n//  SET SYSOUTU='SYSOUT=U'   /* SYSOUT                               */\n//  SET SYSOUTX='SYSOUT=X'   /* SYSOUT                               */\n//  SET SYSOUTY='SYSOUT=Y'   /* SYSOUT                               */\n//  SET SYSOUTZ='SYSOUT=Z'   /* SYSOUT                               */\n//  SET SYSOUT0='SYSOUT=0'   /* SYSOUT                               */\n//  SET SYSOUT3='SYSOUT=3'   /* SYSOUT                               */\n//  SET SYSOUT4='SYSOUT=4'   /* SYSOUT                               */\n//  SET SYSOUT5='SYSOUT=5'   /* SYSOUT                               */\n//  SET SYSOUT7='SYSOUT=7'   /* SYSOUT                               */\n//  SET SYSOUT8='SYSOUT=8'   /* SYSOUT                               */\n//  SET SYSOUT9='SYSOUT=9'   /* SYSOUT                               */\n//********************************************************************/\n//  SET FREECLOS='FREE=CLOSE' /* SPIN OFF AT CLOSE                   */\n//********************************************************************/\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STATSUP": {"ttr": 10782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x95\\x18O\\x00\\x95\\x18O\\x13\\x13\\x00\\x1f\\x00\\x07\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1995-07-03T00:00:00", "modifydate": "1995-07-03T13:13:00", "lines": 31, "newlines": 7, "modlines": 0, "user": "TECH110"}, "text": "/* REXX Statistics Update */\ntrue = \"1\"; false = \"0\";  /* switches */\nusername=\"\";moddate=\"\";\nsay \"Enter DSNAME\";\nparse upper pull dsname;\nsay \"Enter member name\";\nparse upper pull member;\nsay \"Enter new userid or null if none\";\nparse upper pull username;\nsay \"Enter new modified date (YY/MM/DD) or null if none\";\nparse upper pull moddate;\naddress \"ISPEXEC\"; /* ISPF/PDF services */\n\"LMINIT DATAID(DSNID) DATASET('\"dsname\"') ENQ(SHR)\";\nsaverc=rc;\nsay \"LMINIT rc is:\" saverc;\nif saverc\u00ac= 0 then do;\n       zedsmsg = \"Invalid dsname\";\n       zedlmsg = \"Invalid dsname or dataset not currently available.\";\n       signal error_exit;\n       end;\nif username\u00ac=\"\" & moddate=\"\" then ,\n   \"LMMSTATS DATAID(\"dsnid\") MEMBER(\"member\") USER(\"username\")\";\nif username=\"\" & moddate\u00ac=\"\" then ,\n   \"LMMSTATS DATAID(\"dsnid\") MEMBER(\"member\") MODDATE(\"moddate\")\";\nif username\u00ac=\"\" & moddate\u00ac=\"\" then ,\n \"LMMSTATS DATAID(\"dsnid\") MEMBER(\"member\") MODDATE(\"moddate\")\" || ,\n    \" USER(\"username\")\";\nsaverc=rc;\nsay \"LMMSTATS rc is:\" saverc;\n\"LMFREE DATAID(\"dsnid\")\";\nexit saverc;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STEP4EXC": {"ttr": 10784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92\"\\x7f\\x00\\x92\"\\x7f\\x11(\\x00-\\x00\\x14\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-08-14T00:00:00", "modifydate": "1992-08-14T11:28:00", "lines": 45, "newlines": 20, "modlines": 0, "user": "TECH110"}, "text": "/* REXX EXEC TO CONSTRUCT COMDISCO DASD FDR RESTORE JOBS */\n\"ALLOC F(INPUT) DA('TECH110.COMDISCO.CNTLLIB(STEP4SKL)') SHR\";\n\"ALLOC F(OUTPUT) DA('TECH110.COMDISCO.CNTLLIB(STEP4)') SHR\";\n\"EXECIO * DISKR INPUT (FINIS STEM INPUT.\";\nOUTPTR = 1;\nCURDSN = \"\";\nDO INDEX = 1 TO INPUT.0;\n     IF SUBSTR(INPUT.INDEX,1,8)\u00ac=\"//TAPE1 \" & ,\n        SUBSTR(INPUT.INDEX,1,13)\u00ac=\"// UNIT=3480,\" THEN DO;\n          OUTPUT.OUTPTR=INPUT.INDEX;\n          OUTPTR=OUTPTR+1;\n          END;\n      ELSE DO;\n            IF SUBSTR(INPUT.INDEX,3,1)=\"T\" THEN DO;\n              PARSE VAR INPUT.INDEX . \"DSN=\" CURDSN \".GXXXXV00\" . ;\n              SAY \"PROCESSING DATASET\" CURDSN;\n              DUMMY = OUTTRAP(\"LISTCOUT.\");\n              \"LISTC ENTRY('\"CURDSN\"') VOLUME\";\n              DUMMY = OUTTRAP(\"OFF\");\n              VOLLIST = \"\";\n              DO LISTIDX = LISTCOUT.0 TO 1 BY -1;\n                  IF  POS(\"VOLSER---\",LISTCOUT.LISTIDX)\u00ac=0 THEN DO;\n                        PARSE VAR LISTCOUT.LISTIDX ,\n                        . \"VOLSER------------\" VOLSER \"DEVTYPE\" . ;\n                        IF VOLLIST=\"\" THEN VOLLIST = STRIP(VOLSER);\n                          ELSE VOLLIST=STRIP(VOLSER)\",\"VOLLIST;\n                      END;\n                  ELSE IF POS(\"NONVSAM \",LISTCOUT.LISTIDX)\u00ac=0 ,\n                     THEN DO;\n                     PARSE VAR LISTCOUT.LISTIDX ,\n                       . \"NONVSAM ---- \" CURDSN . ;\n                      CURDSN=STRIP(CURDSN);\n                     LEAVE LISTIDX;\n                     END;\n              END;\n              VOLLIST=\"(\"VOLLIST\")\";\n          OUTPUT.OUTPTR=\"//TAPE1 DD DISP=OLD,DSN=\"CURDSN\",UNIT=3480,\";\n              OUTPTR=OUTPTR+1;\n              OUTPUT.OUTPTR=\"// VOL=SER=\"VOLLIST;\n              OUTPTR=OUTPTR+1;\n            END;\n          END;\nEND;\n\"EXECIO * DISKW OUTPUT (FINIS STEM OUTPUT.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STOPX37R": {"ttr": 10786, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93(\\x0f\\x00\\x93(\\x0f\\x16Q\\x00\\x06\\x00\\x97\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-10-07T00:00:00", "modifydate": "1993-10-07T16:51:00", "lines": 6, "newlines": 151, "modlines": 4, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=6M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=X37VOLSW\n//SMFIN DD DSN=SYSS.SMFDUMP.DLY.FILE,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n//REPORT DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORECNT": {"ttr": 10788, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x94\\x02O\\x00\\x94\\x02O\\x15\\x11\\x004\\x00\"\\x00\\'\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1994-01-24T00:00:00", "modifydate": "1994-01-24T15:11:00", "lines": 52, "newlines": 34, "modlines": 39, "user": "TECH110"}, "text": "/* REXX COUNT # STORES PER MONTH */\nTRUE=\"1\";\nFALSE=\"0\";\n\"ALLOC F(IN) DA('TECH110.STORE.SUMMARY') SHR\";\n\"EXECIO * DISKR IN (STEM IN. FINIS\";\nSTORLIST=\"\";\nDO I = 1 TO IN.0;\n    PARSE VAR IN.I OPEN 7 CLOSE ;\n    IF OPEN=\"000000\" THEN ITERATE I;\n    MONTH=\"19\"SUBSTR(OPEN,1,4);\n    IF WORDPOS(MONTH,STORLIST)\u00ac=0 THEN DO;\n        STORES.MONTH=STORES.MONTH+1;\n        END;\n    ELSE DO;\n        STORLIST=STORLIST MONTH;\n        STORES.MONTH=+1;\n        END;\n    IF CLOSE=\"000000\" THEN ITERATE I;\n    MONTH=\"19\"SUBSTR(CLOSE,1,4);\n    IF WORDPOS(MONTH,STORLIST)\u00ac=0 THEN DO;\n        STORES.MONTH=STORES.MONTH-1;\n        END;\n    ELSE DO;\n        STORLIST=STORLIST MONTH;\n        STORES.MONTH=-1;\n        END;\nEND;\nJ=WORDS(STORLIST);\nDO I = 1 TO J;\n  K = WORD(STORLIST,I);\n  SORT.I=K;\nEND;\nSWITCH=TRUE;\nJ=J-1;\nDO WHILE(SWITCH);\nSWITCH=FALSE;\n  DO I = 1 TO J;\n    K=I+1;\n    IF SORT.I<=SORT.K THEN ITERATE I;\n    TEMP=SORT.I;\n    SORT.I=SORT.K;\n    SORT.K=TEMP;\n    SWITCH=TRUE;\n  END;\nEND;\nJ=J+1;\nTOTAL=0;\nDO I = 1 TO J;\n   K=SORT.I;\n   TOTAL=TOTAL+STORES.K;\n   SAY K TOTAL;\nEND;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STORESUM": {"ttr": 11009, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x94\\x02O\\x00\\x94\\x02O\\x13I\\x00J\\x01\\xd1\\x00\\x15\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-01-24T00:00:00", "modifydate": "1994-01-24T13:49:00", "lines": 74, "newlines": 465, "modlines": 21, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=6M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCLG\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN DD *\nSTORESUM CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         SAVE  (14,12),,STORESUM*&SYSDATE*&SYSTIME\n         LR    RA,RF\n         USING STORESUM,RA,RB,RC\n         LA    RB,4095(,RA)\n         LA    RB,1(,RB)\n         LA    RC,4095(,RB)\n         LA    RC,1(,RC)\n         LR    RF,RD\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18A(0)\n         ST    RD,8(,RF)\n         ST    RF,4(,RD)\n         OPEN  (STORCNTR,,OUTPUT,(OUTPUT))\nLOOP1    GET   RPL=RPL1\n         MVC   OUTSDATE(6),INPUT+264 ACT OPEN DATE\n         MVC   OUTCDATE(6),INPUT+270 CLOSE DATE\n         PUT   OUTPUT,OUTREC\n         B     LOOP1\n*        CLC   =C'00',INPUT+10 REGION#\n*        BE    LOOP1\n*        CLI   INPUT+216,C'A' ACTIVE STORE\n*        BE    LOOP1C\n*        CLI   INPUT+216,C'N' NEW STORE LESS THAN 1 YEAR OLD\n*        BNE   LOOP1\nEODAD1   EQU   * *\n         SLR   R9,R9\nMAINEXIT CLOSE (STORCNTR,,OUTPUT)\n         L     RD,4(,RD)\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\nWORK     DS    2D\nEXLST1   EXLST AM=VSAM,EODAD=EODAD1\nOUTREC   DC    0F'0',CL12' '\n         ORG   OUTREC\nOUTSDATE DC    CL6' '\nOUTCDATE DC    CL6' '\nOUTRCLEN EQU   *-OUTREC\n         ORG\nSTORCNTR ACB   AM=VSAM,DDNAME=STORCNTR,BUFND=31,EXLST=EXLST1,          X\n               MACRF=(KEY,SEQ,IN,NSR)\nRPL1     RPL   AM=VSAM,ACB=STORCNTR,AREA=INPUT,AREALEN=32767,          X\n               OPTCD=(KEY,SEQ,FWD,MVE)\nOUTPUT   DCB   DDNAME=OUTPUT,DSORG=PS,LRECL=12,RECFM=FB,MACRF=(PM)\n         LTORG\nINPUT    DS    0D'0',32767C\n         END\n/*\n//G.STORCNTR DD DSN=PGST.K.STORE.MASTER.FILE,DISP=SHR\n//G.SYSUDUMP DD SYSOUT=*\n//G.OUTPUT  DD DSN=TECH110.STORE.SUMMARY,DISP=(NEW,CATLG,DELETE),\n// SPACE=(TRK,(1,1))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORGRPM": {"ttr": 11012, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93 /\\x00\\x93 /\\x137\\x00\\r\\x005\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-07-21T00:00:00", "modifydate": "1993-07-21T13:37:00", "lines": 13, "newlines": 53, "modlines": 1, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS STORGRP ROUTINE FOR SYSM ONLY     */\nPROC &STORGRP\nSELECT\n   WHEN (&DSTYPE = 'TEMP') DO\n      SET &STORGRP = 'VIOPOOL','USRPOOL'\n      EXIT CODE(0)\n      END\n   OTHERWISE DO\n      SET &STORGRP = 'USRPOOL'\n      EXIT CODE(0)\n      END\nEND\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORGRPO": {"ttr": 11014, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x00\\x00\\x92%O\\x00\\x930o\\x16$\\x00A\\x00#\\x00>\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "1992-09-10T00:00:00", "modifydate": "1993-11-02T16:24:00", "lines": 65, "newlines": 35, "modlines": 62, "user": "TECH110"}, "text": "/* BUILDING DEPOSIT, INC. SMS ACS STORGRP ROUTINE                   */\nPROC &STORGRP\nFILTLIST &ALLPOOLS INCLUDE(FDR.**)\nFILTLIST &ARTHPOOL INCLUDE(PARTH.DATA%*.DBA)\nFILTLIST &DB2PPOOL INCLUDE('DB2A','DB2B')\nFILTLIST &DB2TPOOL INCLUDE('DB2X','DB2Y')\nFILTLIST &CICSHLQ  INCLUDE('PACCT',\n                           'PAUDT',\n                           'PCORP',\n                           'PCRDT',\n                           'PDIST',\n                           'PFINL',\n                           'PMERC',\n                           'PREAL',\n                           'PSTOP',\n                           'PSTOR',\n                           'PTECH')\nFILTLIST &CICSREG  INCLUDE('P1','P2','P3','P4')\nFILTLIST &MNTPOOL  INCLUDE('SYST')\nFILTLIST &SYSPOOL  INCLUDE('SYSA','SYSB','SYSM','SYSS','SYS1')\nFILTLIST &HIPERF   INCLUDE('FASTREAD','FASTWRIT')\nSELECT\n   WHEN (&DSTYPE = 'TEMP') DO\n      SET &STORGRP = 'VIOPOOL','USRPOOL'\n      EXIT CODE(0)\n      END\n   WHEN (&STORCLAS = &HIPERF && &ANYVOL \u00ac= '') DO\n      SET &STORGRP = 'PERFPOOL'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &ARTHPOOL) DO\n      SET &STORGRP = 'ARTHPOOL'\n      EXIT CODE(0)\n      END\n   WHEN (&DSN = &ALLPOOLS) DO\n      SET &STORGRP='USRPOOL','SYSPOOL','DB2PPOOL','CICSPOOL', +\n                   'ARTHPOOL','DB2TPOOL','PERFPOOL'\n      EXIT CODE(0)\n      END\n   WHEN (&HLQ = &DB2PPOOL) DO\n      SET &STORGRP = 'DB2PPOOL'\n      EXIT CODE(0)\n      END\n   WHEN (&HLQ = &DB2TPOOL) DO\n      SET &STORGRP = 'DB2TPOOL'\n      EXIT CODE(0)\n      END\n   WHEN (&HLQ = &MNTPOOL) DO\n      SET &STORGRP = 'MNTPOOL'\n      EXIT CODE(0)\n      END\n   WHEN (&HLQ = &SYSPOOL) DO\n      SET &STORGRP = 'SYSPOOL'\n      EXIT CODE(0)\n      END\n   WHEN (&HLQ = &CICSHLQ` && &DSN(3) = &CICSREG) DO\n      SET &STORGRP = 'CICSPOOL'\n      EXIT CODE(0)\n      END\n   OTHERWISE DO\n      SET &STORGRP = 'USRPOOL'\n      EXIT CODE(0)\n      END\nEND\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STORTEST": {"ttr": 11016, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x92\\x03\\x7f\\x00\\x92\\x03\\x7f\\x17!\\x00=\\x00\\t\\x00=\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-02-06T00:00:00", "modifydate": "1992-02-06T17:21:00", "lines": 61, "newlines": 9, "modlines": 61, "user": "TECH110"}, "text": "//STORTEST JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=H,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP030 EXEC PGM=XCOMJOB,\n//            DPRTY=(15,15),\n//            PARM='TYPE=EXECUTE'\n//XCOMLOG  DD SYSOUT=*,\n//            DCB=LRECL=133\n//SYSIN01   DD DATA,DCB=BLKSIZE=80\nTYPE=SEND,\nFILETYPE=FILE,\nLU=H10T236,\nFILEOPT=REPLACE,\nCODE=ASCII,\nEPRTY=255,\nSPRTY=225,\nCOMPRESS=YES,\nHOLD=NO,\nAGE=3,\nTRUNCATE=NO,\nRECSEP=NO,\nID=D0002301,\nLFILE=TECH110.POLLFVOL.OUTPUT(D0002301),\nFILE=F:\\BC\\D0002301.DAT\nNEWXFER,\nID=D0002601,\nLFILE=TECH110.POLLFVOL.OUTPUT(D0002601),\nFILE=F:\\BC\\D0002601.DAT\nNEWXFER,\nID=D0003301,\nLFILE=TECH110.POLLFVOL.OUTPUT(D0003301),\nFILE=F:\\BC\\D0003301.DAT\nNEWXFER,\nID=D0003601,\nLFILE=TECH110.POLLFVOL.OUTPUT(D0003601),\nFILE=F:\\BC\\D0003601.DAT\nNEWXFER,\nID=D0004301,\nLFILE=TECH110.POLLFVOL.OUTPUT(D0004301),\nFILE=F:\\BC\\D0004301.DAT\nNEWXFER,\nID=D0004601,\nLFILE=TECH110.POLLFVOL.OUTPUT(D0004601),\nFILE=F:\\BC\\D0004601.DAT\nNEWXFER,\nID=D0008301,\nLFILE=TECH110.POLLFVOL.OUTPUT(D0008301),\nFILE=F:\\BC\\D0008301.DAT\nNEWXFER,\nID=D0008601,\nLFILE=TECH110.POLLFVOL.OUTPUT(D0008601),\nFILE=F:\\BC\\D0008601.DAT\nNEWXFER,\nID=D0009301,\nLFILE=TECH110.POLLFVOL.OUTPUT(D0009301),\nFILE=F:\\BC\\D0009301.DAT\nNEWXFER,\nID=D0009601,\nLFILE=TECH110.POLLFVOL.OUTPUT(D0009601),\nFILE=F:\\BC\\D0009601.DAT\n/*\n//**********************************************************************\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STPX37TS": {"ttr": 11018, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x93(\\x0f\\x00\\x94)/\\x15Q\\x00\\x1a\\x00\\x97\\x00\\x1a\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1993-10-07T00:00:00", "modifydate": "1994-10-19T15:51:00", "lines": 26, "newlines": 151, "modlines": 26, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//CASFXSMF PROC A='*',\n//         SCDDSN='SYSS.JARSMF.SCDS',\n//         STEPLIB='SYS1.JARSMF.V1R5M0.CAILIB',\n//         TPUNIT='CART'\n//STEP1    EXEC PGM=SMFD\n//STEPLIB  DD   DISP=SHR,DSN=&STEPLIB\n//SCDS     DD   DISP=OLD,DSN=&SCDDSN\n//HISTORY1 DD   UNIT=(&TPUNIT,,DEFER),VOL=SER=SMFTAP,DISP=(OLD,PASS)\n//JARSPEC  DD DSN=&&STOPDATA,DISP=(,PASS,DELETE),\n//            SPACE=(CYL,(5,5),RLSE),\n//            DCB=(RECFM=VBS,LRECL=32756,BLKSIZE=32760)\n//SYSPRINT DD SYSOUT=&A\n//SYSXDIAG DD SYSOUT=&A\n// PEND\n//STEP001 EXEC CASFXSMF\n//SYSIN    DD *\nEXTRACT FROM(101794 0000) TO(101794 2359)\n        SELECT(201)\n        SID(ALL) TODD(JARSPEC).\n/*\n//S EXEC PGM=X37RECAT\n//SMFIN    DD DSN=&&STOPDATA,DISP=(OLD,DELETE)\n//SYSUDUMP DD SYSOUT=*\n//REPORT DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SU10ADI9": {"ttr": 11020, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x910\\x9f\\x00\\x911\\x0f\\x14)\\x00\\x1c\\x00y\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-11-05T00:00:00", "modifydate": "1991-11-06T14:29:00", "lines": 28, "newlines": 121, "modlines": 0, "user": "TECH110"}, "text": "//FLOAD    JOB 5304010530000000,'TECH.JEFFK',NOTIFY=TECH110,\n//         MSGCLASS=G,CLASS=S,MSGLEVEL=(1,1),REGION=8M\n//ALLOC    PROC  HLQ='DUMY.APCDOC.V1R0M0.',\n//         SYSOUT='*'              <===== INSTALLATION SYSOUT CLASS\n//IEBDG    EXEC PGM=IEBDG\n//SYSPRINT DD   SYSOUT=&SYSOUT\n//DBINIT   DD   DSN=&&DBINIT,UNIT=SYSDA,\n//         SPACE=(TRK,(1,1)),DISP=(,PASS),\n//         DCB=(RECFM=FB,LRECL=100,BLKSIZE=100)\n//INITDICT EXEC PGM=IDCAMS,REGION=8M\n//SYSPRINT DD   SYSOUT=&SYSOUT\n//DBINIT   DD   DSN=&&DBINIT,DISP=(OLD,DELETE)\n//SYSDICT  DD   DSN=&HLQ.CAAPCDOC.SYSDICT,DISP=SHR\n//      PEND\n//*\n//ALOCDICT   EXEC ALLOC\n//*\n//IEBDG.SYSIN    DD   *\n DSD OUTPUT=(DBINIT)\n CREATE QUANTITY=1,FILL=' ',PICTURE=1,9,' '\n END\n/*\n//INITDICT.SYSIN    DD   *\n /***********************************************************/\n /*   INITIALIZE CA-APCDOC DATABASE                         */\n /***********************************************************/\n REPRO INFILE (DBINIT) OUTFILE (SYSDICT)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYNALIAS": {"ttr": 11022, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x953?\\x00\\x953?\\x169\\x009\\x00\\x81\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1995-11-29T00:00:00", "modifydate": "1995-11-29T16:39:00", "lines": 57, "newlines": 129, "modlines": 5, "user": "TECH110"}, "text": "/* REXX EXEC to build CATALOG entries */\ntrue=1; false=0;\n\"FREE F(SYSIN SYSPRINT IAMPRINT OUTPUT)\";\n\"ALLOC F(SYSIN) NEW DELETE TRACK SPACE(1 1)\";\n\"ALLOC F(SYSPRINT) NEW DELETE TRACK SPACE(10 5)\";\n\"ALLOC F(IAMPRINT) DUMMY\";\n\"ALLOC F(OUTPUT) DA('TECH110.USER.CNTLLIB(CATOUT)') SHR\";\nSYSIN.1 = \" LISTC ALIAS ALL\";\n\"EXECIO * DISKW SYSIN (FINIS STEM SYSIN.\";\n\"CALL 'SYS1.LINKLIB(IDCAMS)'\";\n\"EXECIO * DISKR SYSPRINT (FINIS STEM OUTPUT.\";\ninputctr = 0;\ndo index = 1 to output.0;\n     parse var output.index cc 2 ty 3 trail ;\n     select;\n       when cc=\" \" then ,\n        input.inputctr = input.inputctr strip(substr(output.index,2));\n       when cc=\"0\" then do;\n           if ty=\" \" & trail\u00ac=\" \" then ,\n        input.inputctr = input.inputctr strip(substr(output.index,2));\n        else do;\n          if substr(output.index,2,5)\u00ac=\"ALIAS\" then iterate index;\n          inputctr = inputctr+1;\n          input.inputctr = strip(substr(output.index,2));\n          end;\n       end;\n       otherwise nop;\n     end;\nend;\nidcctr = 1;\ndo index = 1 to inputctr;\n     type = word(input.index,1); /* alias, nvsam , cl */\n     select;\n        when type=\"ALIAS\" then do;\n           typename=word(input.index,3);\n           aucat = pos(\" USERCAT--\",input.index);\n           anvsm = pos(\" NONVSAM--\",input.index);\n           if aucat\u00ac=0 then do;\n                assocname=word(substr(input.index,aucat+10),1);\n                end;\n            else ,\n                assocname=word(substr(input.index,anvsm+10),1);\n           idc.idcctr=\" DEFINE ALIAS (NAME(\"typename\") -\";\n           idcctr = idcctr +1;\n           idc.idcctr=\"    REL(\"assocname\")) -\";\nidc.idcctr=\"    REL(SYS1.CATSYSP.TEMP.CLUSTER)) -\"; /* remove TEMP */\n           idcctr = idcctr +1;\n           idc.idcctr=\"    CAT(SYS1.CATSYSP.MASTER.CLUSTER)\";\n           idcctr = idcctr +1;\n           end;\n        otherwise nop;\n     end;\nend;\n\"EXECIO * DISKW OUTPUT (FINIS STEM IDC.\";\n\"FREE F(SYSIN SYSPRINT IAMPRINT OUTPUT)\";\n\"ALLOC F(SYSIN) DA(*)\";\n\"ALLOC F(SYSPRINT) DA(*)\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYNCLIST": {"ttr": 11024, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90\\x17/\\x00\\x90\\x17/\\t&\\x00\\t\\x00\\t\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-06-21T00:00:00", "modifydate": "1990-06-21T09:26:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFKS   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=S,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=SYNCLIST,REGION=6M\n//STEPLIB DD DSN=SYS3.SYNC.V33E.LINKLIB,DISP=SHR\n//        DD DSN=SYS3.SYNC.V33E.LPALIB,DISP=SHR\n//SYSLIB  DD DSN=SYS3.SYNC.V33E.LINKLIB,DISP=SHR\n//        DD DSN=SYS3.SYNC.V33E.LPALIB,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYNCRACF": {"ttr": 11026, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93)\\x8f\\x00\\x93)\\x8f\"D\\x00\\r\\x00\\r\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-10-25T00:00:00", "modifydate": "1993-10-25T22:44:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//S EXEC PGM=IKJEFT01\n//SYSPRINT DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSLBC DD DSN=SYS1.BRODCAST,DISP=SHR\n//SYSUADS DD DSN=SYS1.UADS,DISP=SHR\n//SYSTSIN DD *\nACCOUNT\nSYNC RACF\nEND\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSAIOCP": {"ttr": 11028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x12\\x00\\x00\\x00\\x881\\x9f\\x00\\x93\\x19_\\x17\\x16\\x00\\x0b\\x00\\x0c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.18", "flags": 0, "createdate": "1988-11-14T00:00:00", "modifydate": "1993-07-14T17:16:00", "lines": 11, "newlines": 12, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB 5304010530000000,'TECH.SUPP.TECH110',\n//             NOTIFY=TECH110,\n//             CLASS=S,MSGCLASS=G,REGION=6M,\n//             RESTART=*\n/*JOBPARM S=SYSA\n//IOCPLST   EXEC PGM=AMDIOCP,PARM='WRTCDS=A2'\n//SYSIN     DD   DSN=TECH110.USER.CNTLLIB(SYSA5990),DISP=SHR\n//SYSPRINT  DD   SYSOUT=*,DCB=(RECFM=FA)\n//SYSPROF   DD   DUMMY,DCB=(LRECL=80,RECFM=F,DSORG=PS)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSALIAS": {"ttr": 11030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x92'\\x9f\\x00\\x92'\\x9f\\x16\\x00\\x00\\x05\\x00\\x05\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-10-05T00:00:00", "modifydate": "1992-10-05T16:00:00", "lines": 5, "newlines": 5, "modlines": 0, "user": "TECH110"}, "text": "/* REXX */\n\"RENAME 'SYSS.TECH.COMMON.EXECLIB(SYSUP)' \"|| ,\n \"'SYSS.TECH.COMMON.EXECLIB(SYSUPADD)' ALIAS\";\n\"RENAME 'SYSS.TECH.COMMON.EXECLIB(SYSUP)' \"|| ,\n \"'SYSS.TECH.COMMON.EXECLIB(SYSUPDEL)' ALIAS\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYSBIOCP": {"ttr": 11032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x923\\x0f\\x00\\x93\\x19_\\x17\\x18\\x00\\x0b\\x00\\x0b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1992-11-25T00:00:00", "modifydate": "1993-07-14T17:18:00", "lines": 11, "newlines": 11, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB 5304010530000000,'TECH.SUPP.TECH110',\n//             NOTIFY=TECH110,\n//             CLASS=S,MSGCLASS=G,REGION=6M,\n//             RESTART=*\n/*JOBPARM S=SYSB\n//IOCPLST   EXEC PGM=AMDIOCP,PARM='WRTCDS=B2'\n//SYSIN     DD   DSN=TECH110.USER.CNTLLIB(SYSB5990),DISP=SHR\n//SYSPRINT  DD   SYSOUT=*,DCB=(RECFM=FA)\n//SYSPROF   DD   DUMMY,DCB=(LRECL=80,RECFM=F,DSORG=PS)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSDASD": {"ttr": 11034, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x93\\x02/\\x00\\x93\\x15/\\tS\\x00\\x16\\x00$\\x00\\x11\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1993-01-22T00:00:00", "modifydate": "1993-06-01T09:53:00", "lines": 22, "newlines": 36, "modlines": 17, "user": "TECH110"}, "text": "//TECH110X JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//STEP1 EXEC PGM=FDRABRP,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//ABRMAP   DD DSN=TECH110.DASD.VTOCSUM,DISP=SHR\n//ABRSUM   DD DSN=TECH110.DASD.APPLSUM,DISP=SHR\n//SYSIN DD *\n P VTOC,SUMPFX=YES,COMBINE,DETAIL=NO,FORMAT=CRT,SUM=YES,\n    ONLINE\n/*\n//STEP2 EXEC PGM=FDRABRP,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//ABRMAP   DD DSN=TECH110.DASD.VTOCSYSD,DISP=SHR\n//ABRSUM   DD DSN=TECH110.DASD.APPLSYSD,DISP=SHR\n//SYSIN DD *\n P VTOC,SUMPFX=YES,COMBINE,DETAIL=NO,FORMAT=CRT,SUM=YES,\n    VOLG=SYSDA\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSDASDR": {"ttr": 11036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x93\\x02\\x8f\\x00\\x93\\x02\\x8f\\x16G\\x00\\x11\\x00\\x0c\\x00\\x0b\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1993-01-28T00:00:00", "modifydate": "1993-01-28T16:47:00", "lines": 17, "newlines": 12, "modlines": 11, "user": "TECH110"}, "text": "//SYSDASDR JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//STEP1 EXEC PGM=FDREPORT,REGION=8M\n//STEPLIB  DD DSN=SYS1.FDR.V5R2M4.LOADLIB,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//ABRMAP   DD SYSOUT=*\n//ABRSUM   DD SYSOUT=*\n//SYSIN DD *\n SELECT VOLG=SMSU4\n SUMMARY FIELD=(INDEX,BYTES)\n SORT FIELD=(INDEX,BYTES)\n PRINT BYTEFORMAT=KILOBYTES,DATATYPE=VTOC,ENABLE=(HEXBYTES),\n    RPTYPE=NONE\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSMATCH": {"ttr": 11265, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92\\x00\\x8f\\x00\\x92\\x00\\x8f\\x14\"\\x00r\\x00n\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-01-08T00:00:00", "modifydate": "1992-01-08T14:22:00", "lines": 114, "newlines": 110, "modlines": 0, "user": "TECH110"}, "text": "//SYSMATCH JOB 53050105300000000,'J KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=8M\n//TSOSYS  EXEC PGM=IKJEFT01,DYNAMNBR=128\n//SYSUT1   DD  DUMMY\n//SYSUT2   DD  DUMMY\n//SYSIN    DD  DUMMY\n//SYSTSPRT DD  SYSOUT=*\n//SYSPROC  DD  DSN=SYS1.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSTSIN  DD  *\n%MODMATCH SYSA.ABENDAID.V6R0M3.DYNAMIC.LOADLIB +\n          SYSM.ABENDAID.V6R0M3.DYNAMIC.LOADLIB\n%MODMATCH SYSA.ABENDAID.V6R0M3.LOADLIB +\n          SYSM.ABENDAID.V6R0M3.LOADLIB\n%MODMATCH SYSA.APCDOC.V1R0M0.CAILIB +\n          SYSM.APCDOC.V1R0M0.CAILIB\n%MODMATCH SYSA.BABBAGE.V3R0M0.BBLINK +\n          SYSM.BABBAGE.V3R0M0.BBLINK\n%MODMATCH SYSA.BABBAGE.V3R0M0.BBLOAD +\n          SYSM.BABBAGE.V3R0M0.BBLOAD\n%MODMATCH SYSA.BUDDASD.V1R1M5.LOADLIB +\n          SYSM.BUDDASD.V1R1M5.LOADLIB\n%MODMATCH SYSA.CAIRIM.V1R0M0.LOADLIB +\n          SYSM.CAIRIM.V1R0M0.LOADLIB\n%MODMATCH SYSA.CALIBR.V3R9M0.CAILIB.LOADLIB +\n          SYSM.CALIBR.V3R9M0.CAILIB.LOADLIB\n%MODMATCH SYSA.CICS.V2R1M1.LOADLIB +\n          SYSM.CICS.V2R1M1.LOADLIB\n%MODMATCH SYSA.CMDLIB +\n          SYSM.CMDLIB\n%MODMATCH SYSA.COB2.V1R3M2.COMP +\n          SYSM.COB2.V1R3M2.COMP\n%MODMATCH SYSA.COB2.V1R3M2.LIB +\n          SYSM.COB2.V1R3M2.LIB\n%MODMATCH SYSA.COMPAREX.V7R2M0.LOAD +\n          SYSM.COMPAREX.V7R2M0.LOAD\n%MODMATCH SYSA.DFHSM.V2R6M0.DFQLLIB +\n          SYSM.DFHSM.V2R6M0.DFQLLIB\n%MODMATCH SYSA.DISPATCH.V5R0M0.CAIISPL +\n          SYSM.DISPATCH.V5R0M0.CAIISPL\n%MODMATCH SYSA.DISPATCH.V5R0M0.CAILIB +\n          SYSM.DISPATCH.V5R0M0.CAILIB\n%MODMATCH SYSA.DMS.V1R0M0.LOADLIB +\n          SYSM.DMS.V1R0M0.LOADLIB\n%MODMATCH SYSA.DYL280II.V3R0M0.LOAD.LIBRARY +\n          SYSM.DYL280II.V3R0M0.LOAD.LIBRARY\n%MODMATCH SYSA.ELD.V1R3M5.LOADLIB +\n          SYSM.ELD.V1R3M5.LOADLIB\n%MODMATCH SYSA.FAVER.V3R7M0.LOADLIB +\n          SYSM.FAVER.V3R7M0.LOADLIB\n%MODMATCH SYSA.FDR.V5R1M30.LOADLIB +\n          SYSM.FDR.V5R1M30.LOADLIB\n%MODMATCH SYSA.GDDM.V2R3M0.LOAD +\n          SYSM.GDDM.V2R3M0.LOAD\n%MODMATCH SYSA.HCD.V4R2M0.SCBDHENU +\n          SYSM.HCD.V4R2M0.SCBDHENU\n%MODMATCH SYSA.IAM.V6R1M7.LOADLIB +\n          SYSM.IAM.V6R1M7.LOADLIB\n%MODMATCH SYSA.INTERTST.V4R1M0.LOADLIB +\n          SYSM.INTERTST.V4R1M0.LOADLIB\n%MODMATCH SYSA.ISMF.V3R3M0.DGTLLIB +\n          SYSM.ISMF.V3R3M0.DGTLLIB\n%MODMATCH SYSA.ISPF.V3R3M0.ISPLOAD +\n          SYSM.ISPF.V3R3M0.ISPLOAD\n%MODMATCH SYSA.JARS.V6R0M0.CAILIB +\n          SYSM.JARS.V6R0M0.CAILIB\n%MODMATCH SYSA.JCLCHECK.V6R0M0.CAILIB +\n          SYSM.JCLCHECK.V6R0M0.CAILIB\n%MODMATCH SYSA.JES328X.V2R2M0.LOAD +\n          SYSM.JES328X.V2R2M0.LOAD\n%MODMATCH SYSA.LINKLIB +\n          SYSM.LINKLIB\n%MODMATCH SYSA.LPALIB +\n          SYSM.LPALIB\n%MODMATCH SYSA.MIGLIB +\n          SYSM.MIGLIB\n%MODMATCH SYSA.MVSMS.V1R1M0.LINKLIB +\n          SYSM.MVSMS.V1R1M0.LINKLIB\n%MODMATCH SYSA.NETVIEW.V1R3M0.CNMLINK +\n          SYSM.NETVIEW.V1R3M0.CNMLINK\n%MODMATCH SYSA.NUCLEUS +\n          SYSM.NUCLEUS\n%MODMATCH SYSA.OSCAR.V3R6M0.LINKLIB +\n          SYSM.OSCAR.V3R6M0.LINKLIB\n%MODMATCH SYSA.PDF.V3R3M0.ISRLOAD +\n          SYSM.PDF.V3R3M0.ISRLOAD\n%MODMATCH SYSA.PLI.V1R5M1.PLILIB +\n          SYSM.PLI.V1R5M1.PLILIB\n%MODMATCH SYSA.POOLDASD.V3R1M6.LOADLIB +\n          SYSM.POOLDASD.V3R1M6.LOADLIB\n%MODMATCH SYSA.RAMIS.V7R2M0.LOADLIB +\n          SYSM.RAMIS.V7R2M0.LOADLIB\n%MODMATCH SYSA.RPG2.V1R1M0.RG1LOAD +\n          SYSM.RPG2.V1R1M0.RG1LOAD\n%MODMATCH SYSA.SAMON.V1R1M3.SDXKLMD0 +\n          SYSM.SAMON.V1R1M3.SDXKLMD0\n%MODMATCH SYSA.SDSF.V1R3M2.ISFLOAD +\n          SYSM.SDSF.V1R3M2.ISFLOAD\n%MODMATCH SYSA.SMPE.V1R5M0.SGIMLMD0 +\n          SYSM.SMPE.V1R5M0.SGIMLMD0\n%MODMATCH SYSA.STOPX37.V3R3M8.LOADLIB +\n          SYSM.STOPX37.V3R3M8.LOADLIB\n%MODMATCH SYSA.SYNCSORT.V3R4ME.LINKLIB +\n          SYSM.SYNCSORT.V3R4ME.LINKLIB\n%MODMATCH SYSA.TECH.COMMON.LOADLIB +\n          SYSM.TECH.COMMON.LOADLIB\n%MODMATCH SYSA.TECH.COMMON.LPALIB +\n          SYSM.TECH.COMMON.LPALIB\n%MODMATCH SYSA.VSAMTUNE.V2R7M0.LOADLIB +\n          SYSM.VSAMTUNE.V2R7M0.LOADLIB\n%MODMATCH SYSA.XCOM.V2R2M1.LOADLIB +\n          SYSM.XCOM.V2R2M1.LOADLIB\n%MODMATCH SYSA.ZEKE.V4R0M0.LINKLIB +\n          SYSM.ZEKE.V4R0M0.LINKLIB\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSMIOCP": {"ttr": 11268, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x923_\\x00\\x93\\x16\\x7f\\x17T\\x00\\n\\x00\\x0b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-11-30T00:00:00", "modifydate": "1993-06-16T17:54:00", "lines": 10, "newlines": 11, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB 5304010530000000,'TECH.SUPP.TECH110',\n//             NOTIFY=TECH110,\n//             CLASS=S,MSGCLASS=G,REGION=6M,\n//             RESTART=*\n//IOCPLST   EXEC PGM=AMDIOCP,PARM='WRTCDS=A?'\n//SYSIN     DD   DSN=TECH110.USER.CNTLLIB(SYSM5990),DISP=SHR\n//SYSPRINT  DD   SYSOUT=*,DCB=(RECFM=FA)\n//SYSPROF   DD   DUMMY,DCB=(LRECL=80,RECFM=F,DSORG=PS)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSUIOCP": {"ttr": 11270, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\x14\\x8f\\x00\\x93\\x16\\x7f\\x17E\\x00\\x0f\\x00\\x0b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-05-28T00:00:00", "modifydate": "1993-06-16T17:45:00", "lines": 15, "newlines": 11, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB 5304010530000000,'TECH.SUPP.TECH110',\n//             NOTIFY=TECH110,\n//             CLASS=S,MSGCLASS=G,REGION=6M,\n//             RESTART=*\n/*JOBPARM S=SYSB\n//* IMPORTANT\n//* ASSIGN NEXT PHYSICAL IOCDS IN SYSU DOMAIN B06-B10 TO\n//* SYSB DOMAIN AS LOGICAL B0 SO IOCDS CAN BE WRITTEN FROM SYSB\n//* YOU MUST UNASSIGN B0 AND REASSIGN PHYSICAL IOCDS BACK TO SYSU\n//IOCPLST   EXEC PGM=AMDIOCP,PARM='WRTCDS=B0'\n//SYSIN     DD   DSN=TECH110.USER.CNTLLIB(SYSU5990),DISP=SHR\n//SYSPRINT  DD   SYSOUT=*,DCB=(RECFM=FA)\n//SYSPROF   DD   DUMMY,DCB=(LRECL=80,RECFM=F,DSORG=PS)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TAPEMAP": {"ttr": 11272, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x00\\x00\\x88(\\x7f\\x00\\x93\\x12o\\x15 \\x00\\x0b\\x00\\r\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "1988-10-13T00:00:00", "modifydate": "1993-05-06T15:20:00", "lines": 11, "newlines": 13, "modlines": 0, "user": "TECH110"}, "text": "//TECH110F JOB 5304010530000000,'TECH.SUPP.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=6M\n//*\n//* DOC: THIS JCL MEMBER IS USED TO INVOKE THE TLMS UTILITY TO MAP AN\n//*      OS LABELED TAPE AND PROVIDE THE TAPE LAYOUT ( DATASET NAMES )\n//*      AND DCB INFORMATION ABOUT EACH FILE ON THE TAPE.\n//*\n//TAPESCAN   EXEC PGM=TAPEMAP,PARM='R93091/SILO'\n//SYSPRINT   DD   SYSOUT=*\n//SYSUDUMP   DD   SYSOUT=*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TDB2TEP2": {"ttr": 11274, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\x10_\\x00\\x93\\x10_\\x103\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-04-15T00:00:00", "modifydate": "1993-04-15T10:33:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "TECH110"}, "text": "//TECH110D JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//* INVOKE DB2 PGM DSNTEP2 IRREGARDLESS OF SYSA OR SYSB\n//STEP01 EXEC PGM=IKJEFT01,REGION=6M,PARM='%DB2TEPCK',DYNAMNBR=32\n//SYSPROC DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//SYSIN    DD *\n   SELECT * FROM BUILD.TABRXCPT;\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TDB2TICK": {"ttr": 11276, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x93\\x10_\\x00\\x93\\x10_\\x101\\x00\\x0c\\x00X\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1993-04-15T00:00:00", "modifydate": "1993-04-15T10:31:00", "lines": 12, "newlines": 88, "modlines": 0, "user": "TECH110"}, "text": "//TECH110D JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//* INVOKE DB2 PGM DSNTIAD IRREGARDLESS OF SYSA OR SYSB\n//STEP01 EXEC PGM=IKJEFT01,REGION=6M,PARM='%DB2TIACK',DYNAMNBR=32\n//SYSPROC DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//SYSIN    DD *\n   DELETE FROM BUILD.TABRXCPT WHERE VOLSER='123';\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TEST": {"ttr": 11278, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95\\t?\\x00\\x951/\\x16\\x15\\x00\\n\\x00\\r\\x00\\x08\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-04-03T00:00:00", "modifydate": "1995-11-08T16:15:00", "lines": 10, "newlines": 13, "modlines": 8, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHC\n//C.SYSIN DD *\nTEST CSECT\n USING TEST,15\n  RESMGR ADD,TOKEN=TOK,TYPE=TASK,ASID=ALL,TCB=ALL,ROUTINE=(BRANCH,X)\nTOK DS F\nX EQU *\n END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTBITR": {"ttr": 11280, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x931_\\x00\\x931_\\x14R\\x00\\x0f\\x00\\x12\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1993-11-11T00:00:00", "modifydate": "1993-11-11T14:52:00", "lines": 15, "newlines": 18, "modlines": 0, "user": "TECH110"}, "text": "//TECH110R JOB 5200010520000000,'KAPLAN',CLASS=S,\n//   MSGCLASS=S,NOTIFY=TECH110\n//JOBLIB  DD DSN=SYS1.TEST.BATCH.LOADLIB,DISP=SHR\n//        DD DSN=TECH110.USER.LOADLIB,DISP=SHR\n//STEP0001 EXEC PGM=TESTBIT\n//SYSOUX   DD SYSOUT=*\n//SYSDBOUT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSABOUT DD SYSOUT=*\n//SNAPDD   DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//INTABLE  DD DSN=APPL122.TABLEA,DISP=SHR\n//INFILE   DD DSN=APPL122.INPUTA,DISP=SHR\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTB2C": {"ttr": 11282, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93!o\\x00\\x93!o\\x14S\\x00\\x08\\x00\\x07\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-08-04T00:00:00", "modifydate": "1993-08-04T14:53:00", "lines": 8, "newlines": 7, "modlines": 1, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IKJEFT01,PARM='%TESTB2CR'\n//SYSPROC DD DSN=TECH110.USER.CNTLLIB,DISP=SHR\n//STEPLIB DD DSN=TECH110.USER.LOADLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD DUMMY\n//INPUT DD DSN=TECH318.DSNTIAUL.SYSREC00,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTB2CR": {"ttr": 11284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x93!o\\x00\\x93!o\\x15\\x02\\x00\\x10\\x00\\x01\\x00\\x0f\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1993-08-04T00:00:00", "modifydate": "1993-08-04T15:02:00", "lines": 16, "newlines": 1, "modlines": 15, "user": "TECH110"}, "text": "/* REXX */\n\"EXECIO * DISKR INPUT (FINIS STEM IN.\";\nSAY IN.0;\nSAY IN.1;\nSAY IN.2;\nPARSE VAR IN.1 . 23 VAR1 27 VAR2;\nSAY VAR1 VAR2;\nSAY B2C(VAR1) B2C(VAR2);\nPARSE VAR IN.2 . 23 VAR1 27 VAR2;\nSAY VAR1 VAR2;\nSAY B2C(VAR1) B2C(VAR2);\nPARSE VAR IN.3 . 23 VAR1 27 VAR2;\nSAY VAR1 VAR2;\nSAY B2C(VAR1) B2C(VAR2);\nSAY B2C(\"\")\nSAY B2C(VAR1,VAR2)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TESTCLOS": {"ttr": 11286, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x945_\\x00\\x945_\\x16R\\x00\\x12\\x00\\x12\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-12-21T00:00:00", "modifydate": "1994-12-21T16:52:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC ASMHCLG\n//C.SYSIN DD *\nTEST CSECT\n BALR 12,0\n USING *,12\n LR 11,14\n OPEN (TESTDCB,(OUTPUT))\n TM TESTDCB+48,X'10'\n BZ NODD\n DC X'0000'\nNODD BR 14\nTESTDCB DCB DDNAME=TEST,LRECL=80,RECFM=FB,DSORG=PS,MACRF=(PM)\nDATA DC CL80'AA'\n LTORG\n END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTCSD": {"ttr": 11288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93\\t/\\x00\\x93\\t/\\x12\\x14\\x00\\x0b\\x00e\\x00\\x07\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-04-02T00:00:00", "modifydate": "1993-04-02T12:14:00", "lines": 11, "newlines": 101, "modlines": 7, "user": "TECH110"}, "text": "//TECH110L JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//CSDSCAN EXEC PGM=IKJEFT01,PARM='%CSDSCAN'\n//*SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSPROC  DD DSN=TECH110.USER.CNTLLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//CSDIN    DD DSN=TECH110.CSDLIST,DISP=SHR\n//CSDOUT   DD DSN=TECH110.CSDOUT,DISP=SHR\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTDB2P": {"ttr": 11290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x93\\x11?\\x00\\x93\\x11?\\x16R\\x00\\x0b\\x00\\x0c\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1993-04-23T00:00:00", "modifydate": "1993-04-23T16:52:00", "lines": 11, "newlines": 12, "modlines": 0, "user": "TECH110"}, "text": "//TECH110D JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//* INVOKE DB2 PRODUCTION PROGRAM IRREGARDLESS OF SYSA OR SYSB\n//STEP01 EXEC PGM=IKJEFT01,REGION=6M,DYNAMNBR=32,\n//  PARM='%XDB2PROD YOUR_PROGRAM_NAME YOUR_PLAN_NAME'\n//STEPLIB  DD DSN=SYS1.PROD.BATCH.LOADLIB,DISP=SHR\n//SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTDB2T": {"ttr": 11292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93\\x11?\\x00\\x93\\x11?\\x16S\\x00\\x0c\\x00\\x0b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-04-23T00:00:00", "modifydate": "1993-04-23T16:53:00", "lines": 12, "newlines": 11, "modlines": 0, "user": "TECH110"}, "text": "//TECH110D JOB 530401053000000,'TECH.KAPLAN',NOTIFY=TECH110,\n//            CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//* INVOKE DB2 TEST PROGRAM IRREGARDLESS OF SYSA OR SYSB\n//STEP01 EXEC PGM=IKJEFT01,REGION=6M,DYNAMNBR=32,\n//  PARM='%XDB2TEST YOUR_PROGRAM_NAME YOUR_PLAN_NAME'\n//STEPLIB  DD DSN=SYS1.TEST.BATCH.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.PROD.BATCH.LOADLIB,DISP=SHR\n//SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTFAVR": {"ttr": 11294, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x02O\\x00\\x91\\x02O\\x14B\\x00\\r\\x00\\x17\\x00\\t\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-01-24T00:00:00", "modifydate": "1991-01-24T14:42:00", "lines": 13, "newlines": 23, "modlines": 9, "user": "JEFFK"}, "text": "//JEFFTECH JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=GVEXPORT,REGION=6M\n//STEPLIB DD DSN=TECH.FAVER.V362.LINKLIB,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//IAMPRINT DD SYSOUT=*\n//FVROUT0 DD DSN=&&TEMP,DISP=(NEW,DELETE),UNIT=PAGEIO,\n// SPACE=(CYL,(5,1))\n//SYSIN DD *\n EXPORT\n CLUSTER\n CL=TKENM.K.PMBU.K.STORE.MASINV.FILE\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTJCL1": {"ttr": 11296, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x92\\x06o\\x00\\x92\\x06o\\x15F\\x00\\x08\\x00\\x0b\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-03-06T00:00:00", "modifydate": "1992-03-06T15:46:00", "lines": 8, "newlines": 11, "modlines": 2, "user": "TECH110"}, "text": "//TECH110X JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=Z,MSGLEVEL=(1,1),NOTIFY=TECH110\n//JESLOG OUTPUT JESDS=LOG,CLASS=G\n//S EXEC PGM=IDCAMS,REGION=6M\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n LISTC   CAT(SYS1.UCATTEST.CLUSTER) ALL\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTJCL2": {"ttr": 11298, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92\\x06o\\x00\\x92\\x06o\\x15U\\x00\\x08\\x00\\x0b\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-03-06T00:00:00", "modifydate": "1992-03-06T15:55:00", "lines": 8, "newlines": 11, "modlines": 3, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=7,MSGLEVEL=(1,1),NOTIFY=TECH110\n//* THIS JOB MUST RUN WHEN TECH110X IS COMPLETE\n//S EXEC PGM=IKJEFT01,\n//     PARM='OUTPUT TECH110X CLASS(G) PRINT(''TECH110.JTEST.LOG'')'\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD DUMMY\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTPROC": {"ttr": 11300, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00\\x00\\x00\\x92 _\\x00\\x95\\x02_\\x16E\\x00\\x11\\x00\\x04\\x00\\x10\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "1992-07-23T00:00:00", "modifydate": "1995-01-25T16:45:00", "lines": 17, "newlines": 4, "modlines": 16, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//TEST1 PROC\n//STEP1    EXEC PGM=IEFBR14\n//STEP2    EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//TEST1 PEND\n//TEST2 PROC\n//STEP1    EXEC PGM=IEFBR14\n//STEP2    EXEC PGM=IEFBR14\n//STEP3    EXEC PGM=IEFBR14,COND=(0,GE,STEP2)\n//TEST1 PEND\n//STEPP1 EXEC PROC=TEST1\n//STEP2.SYSIN DD *\n    TEST CONTROL CARD\n/*\n//STEPP2 EXEC PROC=TEST2\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTTEST": {"ttr": 11302, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\\x02\\x9f\\x00\\x93\\x02\\x9f\\x136\\x00\\x06\\x00\\x06\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-01-29T00:00:00", "modifydate": "1993-01-29T13:36:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=IKJEFT01,REGION=6M,\n//  PARM='CONSOLE SYSCMD(D GRS,RES=(SYSDSN,TECH110*))'\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTXREF": {"ttr": 11304, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93\\x07_\\x00\\x93\\x07_\\x16R\\x00\\x13\\x00\\x13\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-03-16T00:00:00", "modifydate": "1993-03-16T16:52:00", "lines": 19, "newlines": 19, "modlines": 4, "user": "TECH110"}, "text": "//TECH110Y JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//TEST     EXEC PGM=IKJEFT01,DYNAMNBR=20\n//SYSTSPRT DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSTSIN  DD  *\n DSN SYSTEM(DSNB)\n RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP23) -\n LIB('SYSS.DB2.V2R3M0.DB2B.RUNLIB.LOAD')\n END\n//SYSIN    DD *\nSELECT JOBNAME  FROM\nBUILD.TTECHJOB\nWHERE JOBNAME NOT IN\n (SELECT DISTINCT PROCJOBN FROM BUILD.TTECHPROC)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTXRF2": {"ttr": 11306, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\x07_\\x00\\x93\\x07_\\x17\\x04\\x00\\x13\\x00\\x13\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-03-16T00:00:00", "modifydate": "1993-03-16T17:04:00", "lines": 19, "newlines": 19, "modlines": 4, "user": "TECH110"}, "text": "//TECH110Y JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//TEST     EXEC PGM=IKJEFT01,DYNAMNBR=20\n//SYSTSPRT DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSTSIN  DD  *\n DSN SYSTEM(DSNB)\n RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP23) -\n LIB('SYSS.DB2.V2R3M0.DB2B.RUNLIB.LOAD')\n END\n//SYSIN    DD *\nSELECT *        FROM\nBUILD.TTECHEXEC\nWHERE EXECPROC NOT IN\n (SELECT DISTINCT PROCNAME FROM BUILD.TTECHPROC)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TESTZ": {"ttr": 11522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93\\t\\x7f\\x00\\x93\\t\\x7f\\x16\\x19\\x00\\n\\x00\\x0b\\x00\\x05\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-04-07T00:00:00", "modifydate": "1993-04-07T16:19:00", "lines": 10, "newlines": 11, "modlines": 5, "user": "TECH110"}, "text": "//TECH110L JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//CSDSCAN EXEC PGM=IKJEFT01,PARM='%ZEKESCAN'\n//SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//ZEKEIN   DD DSN=TECH110.ZEKEIN,DISP=SHR\n//ZEKEOUT  DD DSN=TECH110.ZEKEOUT,DISP=(NEW,CATLG),\n//  SPACE=(CYL,(2,1)),RECFM=FB,LRECL=116\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TEST1": {"ttr": 11524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x92!/\\x00\\x93\\x06\\x9f\\x15\\x14\\x00\\x07\\x00\\x0f\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1992-07-30T00:00:00", "modifydate": "1993-03-10T15:14:00", "lines": 7, "newlines": 15, "modlines": 0, "user": "TECH110"}, "text": "//TECH110A JOB (530000000000),'JEFFK TECH SUPPT',CLASS=S,\n//         MSGCLASS=G,NOTIFY=TECH110\n// JCLLIB ORDER=TECH110.USER.CNTLLIB\n//STDSYM INCLUDE MEMBER=STDSYM\n//STEP1 EXEC PROC=TESTPROC,SYS='TECH110.',MERC='USER2',\n//   EZ0='CNTLLIB'\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TEST2400": {"ttr": 11526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1b\\x00\\x00\\x00\\x93\\x04\\x8f\\x00\\x93\\x04\\x8f\\x16\\x07\\x00\\xbc\\x01\\x12\\x00\\x06\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.27", "flags": 0, "createdate": "1993-02-17T00:00:00", "modifydate": "1993-02-17T16:07:00", "lines": 188, "newlines": 274, "modlines": 6, "user": "TECH110"}, "text": "//TECH110A JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCLG,PARM.L='LIST,LET,XREF,MAP'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nIMG      TITLE 'IMAGING SYSTEM DOWNLOAD PREP'\nIMAGEGEN CSECT ,\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK21      EQU   21\nK23      EQU   23\nK24      EQU   24\nK26      EQU   26\nK27      EQU   27\nK29      EQU   29\nK28      EQU   28\nK32      EQU   32\nK34      EQU   34\nK36      EQU   36\nK38      EQU   38\nK40      EQU   40\nK43      EQU   43\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK57      EQU   57\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK133     EQU   133\nK136     EQU   136\nK144     EQU   144\nK152     EQU   152\nK176     EQU   176\nK196     EQU   196\nK208     EQU   208\nK212     EQU   212\nK255     EQU   255\nK256     EQU   256\nK272     EQU   272\nK320     EQU   320\nK550     EQU   550\nK2047    EQU   2047\nK2048    EQU   2048\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nIMAGEGEN AMODE 24\nIMAGEGEN RMODE 24\n         SAVE  (14,12),,IMAGEGEN*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING IMAGEGEN,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD /*SAVEAREA HOUSEKEEPING*/\n         CNOP  K0,K4\n         BAL   RD,*+K76\n         DC    (K18)AL4(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         TIME  DEC,CLOCK2,LINKAGE=SYSTEM\n         MVC   WORK(K2),CLOCK HHMM\n         MVI   WORK+K2,X'0F' MAKE PACKED VALID\n         AP    WORK(K3),=PL3'2000' ADD 2 HOUR\n         CP    WORK(K3),=PL3'24000' OVER A DAY\n         BL    STTIME OKAY\n         SP    WORK(K3),=PL3'24000' CORRECT\nSTTIME   UNPK  WORK+K3(K5),WORK(K3) PRINTABLE\n         MVC   XPRM9+K10(K4),WORK+K3 FOR XCOM\n  DC X'0000'\n         SLR   RF,RF\nMAINEXIT L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nFRDJFCB  LA    RF,K28 /* RDJFCB FAILURE */\n         B     MAINEXIT\nFOPEN    LA    RF,K24 /* GENERAL OPEN FAILURE */\n         B     MAINEXIT\nCLOCK    DS    0D'0'\n         DC    X'2355'\nCLOCK2   DC    D'0'\nWORK     DC    D'0'\nBACKUP   DCB   DDNAME=BACKUP,DSORG=PS,MACRF=(PM),                      X\n               RECFM=FB\nREPORT   DCB   DDNAME=REPORT,DSORG=PS,MACRF=(PM),                      X\n               RECFM=FBA\nSYSIN01  DCB   DDNAME=SYSIN01,DSORG=PS,MACRF=(PM)\nJFCBLST  DC    0F'0',X'87',AL3(JFCB)\nJFCB     DC    0F'0',CL176' '\nXCOMMEP  DC    0F'0',CL8'XCOMJOB'\nXCOMMPRM DC    AL2(L'XCOMMPRL)\nXCOMMPRL DC    C'TYPE=SCHEDULE,GROUP=IMAGESYS'\nHEXCHAR  DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'\nXPRM     EQU   * *\nXPRM1    DC    CL80'ID=???XXXXX'\nXPRM2    DC    CL80'FILE=O:\\AIMSYS\\REPORTS\\IN\\???XXXXX.INP'\nXPRM3    DC    CL80'FILETYPE=FILE'\nXPRM4    DC    CL80'TYPE=SEND'\nXPRM5    DC    CL80'CODE=ASCII'\nXPRM6    DC    CL80'PACK=NO'\nXPRM7    DC    CL80'COMPRESS=YES'\nXPRM8    DC    CL80'RECSEP=NO'\nXPRM9    DC    CL80'STARTTIME=HHMM'\nXPRMCTR  EQU   (*-XPRM)/80\nEBCASCII DC    (K256)AL1(K32) /* DEFAULT TO ASCII BLANK */\n         ORG   EBCASCII+C' '\n         DC    X'20'\n         ORG   EBCASCII+C','\n         DC    X'2C255F3E3F'\n         ORG   EBCASCII+C'.'\n         DC    X'2E3C282B2026'\n         ORG   EBCASCII+C':'\n         DC    X'3A2340273D22'\n         ORG   EBCASCII+C'!'\n         DC    X'21242A293B202D2F'\n         ORG   EBCASCII+X'81'\n         DC    X'616263646566676869'\n         ORG   EBCASCII+X'91'\n         DC    X'6A6B6C6D6E6F707172'\n         ORG   EBCASCII+X'A2'\n         DC    X'737475767778797A'\n         ORG   EBCASCII+C'A'\n         DC    X'414243444546474849'\n         ORG   EBCASCII+C'J'\n         DC    X'4A4B4C4D4E4F505152'\n         ORG   EBCASCII+C'S'\n         DC    X'535455565758595A'\n         ORG   EBCASCII+C'0'\n         DC    X'30313233343536373839'\n         ORG\n         DCBD  DSORG=(PO,QS),DEVD=DA\n         END\n/*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TEST5": {"ttr": 11530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92\\x02\\x8f\\x00\\x92\\x02\\x8f\\x163\\x00\\x05\\x00\\x05\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-01-28T00:00:00", "modifydate": "1992-01-28T16:33:00", "lines": 5, "newlines": 5, "modlines": 0, "user": "TECH110"}, "text": "//JEFFKZ   JOB 530000000000,'JKAPLAN TECHSUP',NOTIFY=JEFFK,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=6M\n// EXEC PGM=IKJEFT01,PARM='CONSOLE SYSCMD(F LLA,UPDATE=AA)'\n//SYSTSPRT DD  DUMMY\n//SYSTSIN  DD  DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TEST8": {"ttr": 11532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x94\\x19/\\x00\\x953\\x1f\\x17(\\x00\\x04\\x00\\x07\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1994-07-11T00:00:00", "modifydate": "1995-11-27T17:28:00", "lines": 4, "newlines": 7, "modlines": 0, "user": "TECH110"}, "text": "//TECH110A JOB (530000000000),'JEFFK TECH SUPPT',CLASS=S,\n//         MSGCLASS=G,NOTIFY=TECH110\n//TECHSERV EXEC PGM=STORTEST,REGION=512M\n//STEPLIB DD DSN=SYS1.TECH.COMMON.LOADLIB,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TEST9": {"ttr": 11534, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x953\\x1f\\x00\\x953\\x1f\\x17\\x04\\x00\\x16\\x00\\x16\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-11-27T00:00:00", "modifydate": "1995-11-27T17:04:00", "lines": 22, "newlines": 22, "modlines": 3, "user": "TECH110"}, "text": "//TECHSERV JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=512M\n//S EXEC ASMHCLG\n//C.SYSIN DD *\nTEST CSECT\n LR 12,15\n USING TEST,12\n LR 11,14\n STORAGE OBTAIN,LENGTH=(1024000000,1000000),LOC=ANY,COND=YES\n LR 5,0\n CVD 5,DWORD\n UNPK DWORD2(16),DWORD+3(5)\n OI DWORD2+15,C'0'\n MVC WTOM+8(16),DWORD2\nWTOM WTO 'XXXXXXXXXXXXXXXX'\n  LR 14,11\n  SLR 15,15\n  BR 14\nDWORD DC D'0'\nDWORD2 DC 2D'0'\n  END\n//*L.SYSLMOD DD DSN=TECH110.USER.LOADLIB(STORTEST),DISP=SHR,UNIT=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TEST99": {"ttr": 11536, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\\x07\\x1f\\x00\\x93\\x07\\x1f\\x16B\\x00\\x1d\\x00\\x1d\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-12T00:00:00", "modifydate": "1993-03-12T16:42:00", "lines": 29, "newlines": 29, "modlines": 0, "user": "TECH110"}, "text": "//TECH110A JOB 530401053000000,'TECH.SUPPORT.DB2',\n//           CLASS=S,MSGCLASS=G,NOTIFY=TECH110\n//UTIL EXEC DSNUTILB,PARM='DSNB,UIDX'\n/*JOBPARM S=SYSB\n//SYSREC   DD DUMMY,DISP=OLD\n//SYSDISC  DD DSN=TECH110.NOTLOAD,\n//     DISP=(MOD,CATLG)\n//SYSUT1   DD DSN=TECH110.SYSUT1,\n//     DISP=(MOD,DELETE,CATLG),\n//     SPACE=(16384,(20,20),,,ROUND),\n//     UNIT=SYSDA\n//SORTOUT  DD DSN=TECH110.SORTOUT,\n//     DISP=(MOD,DELETE,CATLG),\n//     SPACE=(16384,(20,20),,,ROUND),\n//     UNIT=SYSDA\n//SYSERR   DD DSN=TECH110.SYSERR,\n//     DISP=(MOD,DELETE,CATLG),\n//     SPACE=(16384,(20,20),,,ROUND),\n//     UNIT=SYSDA\n//UTPRINT  DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//DSNUPROC.SYSMAP DD DSN=TECH110.SYSMAP,\n//     DISP=(MOD,DELETE,CATLG),\n//     SPACE=(16384,(20,20),,,ROUND),\n//     UNIT=SYSDA\n//SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(NO) REPLACE LOG(NO)\n  INTO TABLE TECH110.PLAN_TABLE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TEX": {"ttr": 11538, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x92\\x17O\\x00\\x92\\x17O\\x105\\x00\\x16\\x00\\x13\\x00\\x10\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1992-06-22T00:00:00", "modifydate": "1992-06-22T10:35:00", "lines": 22, "newlines": 19, "modlines": 16, "user": "TECH110"}, "text": "/* REXX */\n\"ALLOC F(INDD) DA('TECH110.RMF.HISTORY') OLD\";\n\"EXECIO * DISKR INDD (FINIS STEM T.\";\n\"ALLOC F(OUTDD) DA('TECH110.TEMP.DATA') OLD\";\nX=0;\nS1=0;S2=0;\nDO I = 1 TO T.0;\n  PARSE VAR T.I PD PT . . . . PS;\n  IF PT<\"09\" THEN ITERATE;\n  ELSE IF PT=\"09\" THEN DO;\n  S1=PD;\n  S2=PS;\n  END;\n  ELSE IF PT<=\"16\" THEN DO;\n    S2=S2+PS; END;\n  ELSE IF PT=\"17\" THEN DO;\n    X=X+1;\n    OUTX.X=S1 RIGHT(S2,8,\"0\"); END;\n  ELSE ITERATE;\nEND;\n\"EXECIO * DISKW OUTDD (FINIS STEM OUTX.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TEX2": {"ttr": 11540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x92\\x17O\\x00\\x92\\x17O\\x11 \\x00\\x14\\x00\\x16\\x00\\n\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-06-22T00:00:00", "modifydate": "1992-06-22T11:20:00", "lines": 20, "newlines": 22, "modlines": 10, "user": "TECH110"}, "text": "/* REXX */\n\"ALLOC F(INDD) DA('TECH110.TEMP.DATA') OLD\";\n\"EXECIO * DISKR INDD (FINIS STEM T.\";\n\"ALLOC F(OUTDD) DA('TECH110.TEMP.DATA3') OLD\";\nX=0;\nS1=0;S2=0;\nDO I = 1 TO T.0;\n  PARSE VAR T.I PD PS;\n  IF PD\u00ac=\"$\" THEN DO;\n  S1=PD;\n  S2=S2+PS;\n  END;\n  ELSE DO;\n    X=X+1;\n    OUTX.X=S1 RIGHT(S2,9,\"0\");\nS1=0;S2=0;\n  END;\nEND;\n\"EXECIO * DISKW OUTDD (FINIS STEM OUTX.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TIDOUTS": {"ttr": 11542, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x915O\\x00\\x915O\\x11\"\\x00a\\x00a\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-12-20T00:00:00", "modifydate": "1991-12-20T11:22:00", "lines": 97, "newlines": 97, "modlines": 0, "user": "TECH110"}, "text": "ACCT0\nAPPLADMN\nAPPL0\nAPPL1\nAPPL100\nAPPL2\nAPPL200\nAPPL3\nCORPSVC1\nCORPSVC2\nCORP1\nCORP2\nCORP4\nCRDT1\nDATACOMM\nDEVCNTR\nDIST0\nDIST1\nDIST2\nDIST3\nEMERGNCY\nEXEC0\nFASHNBUG\nFINL6\nFINL7\nHELPDESK\nINFOV01\nINFO0\nINFO002\nINFO005\nINFO1\nMANI1\nMERCA\nMERC5\nMERC7\nMERC8\nMERC9\nOPERATON\nPOLLING\nPRODCNTL\nREAL0\nREAL1\nSTOP1\nSTORSYS\nSTOR0\nSTOR001\nTECHADMN\nTECHSERV\nTECHSUPT\nTECH0\nTECH000\nTECH001\nTECH002\nTECH099\nTECH1\nTECH100\nTECH101\nTECH102\nTECH103\nTECH104\nTECH105\nTECH106\nTECH107\nTECH108\nTECH109\nTECH110\nTECH111\nTECH2\nTECH200\nTECH201\nTECH202\nTECH203\nTECH204\nTECH205\nTECH206\nTECH207\nTECH208\nTECH209\nTECH220\nTECH221\nTECH222\nTECH250\nTECH251\nTECH252\nTECH253\nTECH290\nTECH291\nTECH292\nTECH293\nTECH294\nTECH295\nTECH296\nTECH299\nTECH3\nTECH4\nTECH5\nVOICECOM\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TIDXADEF": {"ttr": 11545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x915O\\x00\\x915O\\x11\\x03\\x00\\x0f\\x00G\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-12-20T00:00:00", "modifydate": "1991-12-20T11:03:00", "lines": 15, "newlines": 71, "modlines": 0, "user": "TECH110"}, "text": "/* REXX CREATE JOB TO RESET TSO ALIAS */\n\"ALLOC F(IN) DA('TECH110.USER.CNTLLIB(TSORMVXL)') SHR\";\n\"ALLOC F(OUTPUT) DA('TECH110.USER.CNTLLIB(TSUALDEF)') SHR\";\n\"EXECIO * DISKR IN (FINIS STEM IN.\";\nDO I =1 TO IN.0;\n   IN.I=STRIP(IN.I);\nEND;\nOUTCTR=1;\nDO I = 1 TO IN.0;\n   OUT.OUTCTR=\" DEL\" IN.I \"ALIAS\";\n   OUTCTR=OUTCTR+1;\n   OUT.OUTCTR=\" DEF ALIAS (NAME(\"IN.I\") REL(SYS1.UCATTPDP.CLUSTER))\";\n   OUTCTR=OUTCTR+1;\nEND;\n\"EXECIO * DISKW OUTPUT (FINIS STEM OUT.\";\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TIDXCMPR": {"ttr": 11547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x00\\x00\\x915O\\x00\\x915O\\x07\\x16\\x00G\\x00?\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1991-12-20T00:00:00", "modifydate": "1991-12-20T07:16:00", "lines": 71, "newlines": 63, "modlines": 0, "user": "TECH110"}, "text": "/* REXX COMPARE XA TSO HLQ LIST TO ESA TSO HLQ LIST */\nTRUE=\"1\";FALSE=\"0\";\n\"ALLOC F(INXA) DA('TECH110.USER.CNTLLIB(TIDOUT)') SHR\";\n\"ALLOC F(INESA) DA('TECH110.USER.CNTLLIB(TIDOUTE)') SHR\";\n\"ALLOC F(OUTPUT) DA('TECH110.USER.CNTLLIB(TIDXCEPT)') SHR\";\n\"EXECIO * DISKR INXA (FINIS STEM IXA.\";\n\"EXECIO * DISKR INESA (FINIS STEM IESA.\";\nDO I =1 TO IXA.0;\n   IXA.I=STRIP(IXA.I);\nEND;\nDO I =1 TO IESA.0;\n   IESA.I=STRIP(IESA.I);\nEND;\nINXANESA=\"\";\nINESANXA=\"\";\nOUTCTR=1;\nXAPTR=1;\nESAPTR=1;\nXAEOF=FALSE;\nESAEOF=FALSE;\nDO WHILE((\u00acXAEOF) & (\u00acESAEOF));\n    SELECT;\n      WHEN (IXA.XAPTR=IESA.ESAPTR) THEN DO;\n             XAPTR=XAPTR+1;ESAPTR=ESAPTR+1;\n             IF XAPTR>IXA.0 THEN XAEOF=TRUE;\n             IF ESAPTR>IESA.0 THEN ESAEOF=TRUE;\n             END;\n      WHEN (IXA.XAPTR>IESA.ESAPTR) THEN DO;\n             INESANXA=INESANXA IESA.ESAPTR;\n             ESAPTR=ESAPTR+1;\n             IF ESAPTR>IESA.0 THEN ESAEOF=TRUE;\n             END;\n      WHEN (IXA.XAPTR<IESA.ESAPTR) THEN DO;\n             INXANESA=INXANESA IXA.XAPTR;\n             XAPTR=XAPTR+1;\n             IF XAPTR>IXA.0 THEN XAEOF=TRUE;\n             END;\n    END;\nEND;\nDO WHILE(\u00acXAEOF);\n             INXANESA=INXANESA IXA.XAPTR;\n             XAPTR=XAPTR+1;\n             IF XAPTR>IXA.0 THEN XAEOF=TRUE;\nEND;\nDO WHILE(\u00acESAEOF);\n             INESANXA=INESANXA IESA.ESAPTR;\n             ESAPTR=ESAPTR+1;\n             IF ESAPTR>IESA.0 THEN ESAEOF=TRUE;\nEND;\nOUT.OUTCTR=\"TSO HLQ IN XA AND NOT IN ESA\";\nOUTCTR=OUTCTR+1;\nOUT.OUTCTR=\" \";\nOUTCTR=OUTCTR+1;\nHII=WORDS(INXANESA);\nDO I = 1 TO HII;\n   OUT.OUTCTR = WORD(INXANESA,I);\n   OUTCTR=OUTCTR+1;\nEND;\nOUT.OUTCTR=\" \";\nOUTCTR=OUTCTR+1;\nOUT.OUTCTR=\"TSO HLQ IN ESA AND NOT IN XA\";\nOUTCTR=OUTCTR+1;\nOUT.OUTCTR=\" \";\nOUTCTR=OUTCTR+1;\nHII=WORDS(INESANXA);\nDO I = 1 TO HII;\n   OUT.OUTCTR = WORD(INESANXA,I);\n   OUTCTR=OUTCTR+1;\nEND;\nADDRESS \"TSO\" \"EXECIO * DISKW OUTPUT (FINIS STEM OUT.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TIOTSCAN": {"ttr": 11779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x95\\x10O\\x00\\x95\\x10\\x7f\\x10A\\x00)\\x00T\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1995-04-14T00:00:00", "modifydate": "1995-04-17T10:41:00", "lines": 41, "newlines": 84, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n//ASM EXEC ASMHCLG\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN DD *\nTIOTSCAN TITLE 'TIOTSCAN'\nTIOTSCAN CSECT ,\n         BALR  12,0\n         USING *,12\n         USING PSA,0\n         L     15,PSATOLD\n         DROP  0\n         USING TCB,15\n         L     15,TCBTIO\n         DROP  15\n         USING TIOT1,15\n         SLR   1,1\nLOOP     CLC   =C'VJD',TIOEDDNM\n         BE    FOUND\n         IC    1,TIOELNGH\n         LTR   1,1\n         BZ    ERROR\n         ALR   15,1\n         B     LOOP\nFOUND    PACK  WORK(8),TIOEDDNM+3(5)\n         OI    WORK+7,X'0F'\n         L     1,WORK+4\n     DC X'0000'\nWORK DS D'0'\nERROR EQU *\n         LTORG\n         IHAPSA\n         IKJTCB\nTIOTMAP  DSECT\n         IEFTIOT1\n         END\n/*\n//G.SYSUDUMP DD SYSOUT=*\n//G.VJD00104 DD DUMMY\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TLMSXREF": {"ttr": 11781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x93\\x07\\x1f\\x00\\x93\\x07\\x1f\\x16\\x12\\x00\\x0f\\x00\\t\\x00\\n\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1993-03-12T00:00:00", "modifydate": "1993-03-12T16:12:00", "lines": 15, "newlines": 9, "modlines": 10, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//TLMS016 EXEC CATRPTS\n//TLMSRPTS.SYSPRINT DD DSN=TECH110.TLMS016,\n//  DISP=(NEW,CATLG,DELETE),SPACE=(CYL,(3,1)),LRECL=133,RECFM=FB\n//TLMSRPTS.SYSIN DD *\nTLMS016\n/*\n//TLMS004 EXEC CATRPTS,CYL2='(100,10)'\n//TLMSRPTS.SYSPRINT DD DSN=TECH110.TLMS004,\n//  DISP=(NEW,CATLG,DELETE),SPACE=(CYL,(150,15)),LRECL=133,RECFM=FB\n//TLMSRPTS.SYSIN DD *\nTLMS004\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TLMSXRFJ": {"ttr": 11783, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x16\\x00\\x00\\x00\\x93\\x07O\\x00\\x93\\x08\\x1f\\x15\\x19\\x00e\\x01\\x03\\x00[\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.22", "flags": 0, "createdate": "1993-03-15T00:00:00", "modifydate": "1993-03-22T15:19:00", "lines": 101, "newlines": 259, "modlines": 91, "user": "TECH110"}, "text": "//TECH110Y JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//TLMS016 EXEC CATRPTS\n//TLMSRPTS.SYSPRINT DD DSN=&&TLMS016,\n//  DISP=(NEW,PASS,DELETE),SPACE=(CYL,(3,1)),LRECL=133,RECFM=FB\n//TLMSRPTS.SYSIN DD *\nTLMS016\n/*\n//TLMS004 EXEC CATRPTS,CYL2='(100,10)'\n//TLMSRPTS.SYSPRINT DD DSN=&&TLMS004,\n//  DISP=(NEW,PASS,DELETE),SPACE=(CYL,(150,15)),LRECL=133,RECFM=FB\n//TLMSRPTS.SYSIN DD *\nTLMS004\n/*\n//TLMERG1 EXEC PGM=IKJEFT01,PARM='%TLMSMERG'\n//SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//TLMS004  DD DSN=&&TLMS004,DISP=(OLD,DELETE)\n//TLMS016  DD DSN=&&TLMS016,DISP=(OLD,DELETE)\n//TLMSOUT  DD DSN=&&TLMSOUT,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(5,3)),UNIT=VIO,LRECL=72,RECFM=FB\n//TLMSOUT3 DD DSN=&&TLMSOUT3,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(6,2)),UNIT=VIO,LRECL=50,RECFM=FB\n//*\n//SORTMR EXEC PGM=SORT,REGION=7M,PARM='DYNALLOC=SYSDA'\n//SYSOUT   DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SORTIN DD DSN=&&TLMSOUT,DISP=(OLD,DELETE)\n//SORTOUT  DD DSN=&&TLMSIN,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(5,3)),UNIT=VIO,LRECL=72,RECFM=FB\n//SYSIN DD *\n SORT FIELDS=(1,45,CH,D)\n/*\n//TLMERG2 EXEC PGM=IKJEFT01,PARM='%TLMSMRGX'\n//SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//TLMSIN   DD DSN=&&TLMSIN,DISP=(OLD,DELETE)\n//TLMSOUT  DD DSN=&&TLMSOUT2,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(7,3)),UNIT=VIO,LRECL=93,RECFM=FB\n//*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNB,UID='TEMPA',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=&&TLMSOUT2,\n//     DISP=(OLD,DELETE)\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(NO) LOG(NO) REPLACE\n  INTO TABLE BUILD.TLMSXREF\n  (DSNAME           POSITION (001:044) CHAR,\n   CREATE_DATE      POSITION (046:053) CHAR,\n   LAST_REF_DATE    POSITION (054:061) CHAR,\n   PHYS_FILE_CNT    POSITION (062:064) INT EXTERNAL,\n   RETN_LOC_ID      POSITION (065:066) CHAR,\n   RETN_TYPE        POSITION (067:067) CHAR,\n   RETN_NBR         POSITION (068:071) CHAR,\n   OFF1_RETN_LOC_ID POSITION (072:073) CHAR,\n   OFF1_RETN_TYPE   POSITION (074:074) CHAR,\n   OFF1_RETN_NBR    POSITION (075:078) CHAR,\n   OFF2_RETN_LOC_ID POSITION (079:080) CHAR,\n   OFF2_RETN_TYPE   POSITION (081:081) CHAR,\n   OFF2_RETN_NBR    POSITION (082:085) CHAR,\n   KEEP_DATE        POSITION (086:093) CHAR)\n/*\n//*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNB,UID='TEMPB',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=&&TLMSOUT3,\n//     DISP=(OLD,DELETE)\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(NO) LOG(NO) REPLACE\n  INTO TABLE BUILD.TLMSVREF\n  (DSNAME           POSITION (001:044) CHAR,\n   VOL_SER          POSITION (045:050) CHAR)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TLMSXTST": {"ttr": 11786, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\to\\x00\\x93#\\x1f\\x154\\x00f\\x00e\\x00\\x13\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-04-06T00:00:00", "modifydate": "1993-08-19T15:34:00", "lines": 102, "newlines": 101, "modlines": 19, "user": "TECH110"}, "text": "//TECH110Y JOB (530000000000),'TECH.JEFF.KAPLAN',REGION=8M,\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//TLMS016 EXEC CATRPTS\n//TLMSRPTS.SYSPRINT DD DSN=TECH110.TLMS016,\n//  DISP=(NEW,CATLG,DELETE),SPACE=(CYL,(3,1)),LRECL=133,RECFM=FB\n//TLMSRPTS.SYSIN DD *\nTLMS016\n/*\n//TLMS004 EXEC CATRPTS,CYL2='(100,10)'\n//TLMSRPTS.SYSPRINT DD DSN=TECH110.TLMS004,\n//  DISP=(NEW,CATLG,DELETE),SPACE=(CYL,(150,15)),LRECL=133,RECFM=FB\n//TLMSRPTS.SYSIN DD *\nTLMS004\n/*\n//TLMERG1 EXEC PGM=IKJEFT01,PARM='%TLMSMERG'\n//*SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSPROC  DD DSN=TECH110.USER.CNTLLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//TLMS004  DD DSN=TECH110.TLMS004,DISP=(OLD,KEEP)\n//TLMS016  DD DSN=TECH110.TLMS016,DISP=(OLD,KEEP)\n//TLMSOUT  DD DSN=TECH110.TLMSOUT,DISP=(NEW,CATLG),\n// SPACE=(CYL,(5,3)),LRECL=72,RECFM=FB\n//TLMSOUT3 DD DSN=TECH110.TLMSOUT3,DISP=(NEW,CATLG),\n// SPACE=(CYL,(6,2)),LRECL=50,RECFM=FB\n//*\n//SORTMR EXEC PGM=SORT,REGION=7M,PARM='DYNALLOC=SYSDA'\n//SYSOUT   DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SORTIN DD DSN=TECH110.TLMSOUT,DISP=(OLD,KEEP)\n//SORTOUT  DD DSN=&&TLMSIN,DISP=(NEW,PASS,DELETE),\n// SPACE=(CYL,(5,3)),UNIT=VIO,LRECL=72,RECFM=FB\n//SYSIN DD *\n SORT FIELDS=(1,45,CH,D)\n/*\n//TLMERG2 EXEC PGM=IKJEFT01,PARM='%TLMSMRGX'\n//SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//TLMSIN   DD DSN=&&TLMSIN,DISP=(OLD,DELETE)\n//TLMSOUT  DD DSN=TECH110.TLMSOUT2,DISP=(NEW,CATLG,DELETE),\n// SPACE=(CYL,(7,3)),LRECL=93,RECFM=FB\n//*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNB,UID='TEMPA',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=TECH110.TLMSOUT2,\n//     DISP=(OLD,KEEP)\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(NO) LOG(NO) REPLACE\n  INTO TABLE BUILD.TLMSXREF\n  (DSNAME           POSITION (001:044) CHAR,\n   CREATE_DATE      POSITION (046:053) CHAR,\n   LAST_REF_DATE    POSITION (054:061) CHAR,\n   PHYS_FILE_CNT    POSITION (062:064) INT EXTERNAL,\n   RETN_LOC_ID      POSITION (065:066) CHAR,\n   RETN_TYPE        POSITION (067:067) CHAR,\n   RETN_NBR         POSITION (068:071) CHAR,\n   OFF1_RETN_LOC_ID POSITION (072:073) CHAR,\n   OFF1_RETN_TYPE   POSITION (074:074) CHAR,\n   OFF1_RETN_NBR    POSITION (075:078) CHAR,\n   OFF2_RETN_LOC_ID POSITION (079:080) CHAR,\n   OFF2_RETN_TYPE   POSITION (081:081) CHAR,\n   OFF2_RETN_NBR    POSITION (082:085) CHAR,\n   KEEP_DATE        POSITION (086:093) CHAR)\n/*\n//*\n//UTIL EXEC DSNUPROC,SYSTEM=DSNB,UID='TEMPB',UTPROC=''\n//DSNUPROC.SYSREC DD DSN=TECH110.TLMSOUT3,\n//     DISP=(OLD,KEEP)\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(NO) LOG(NO) REPLACE\n  INTO TABLE BUILD.TLMSVREF\n  (DSNAME           POSITION (001:044) CHAR,\n   VOL_SER          POSITION (045:050) CHAR)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMONCAPL": {"ttr": 11789, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x935\\x1f\\x00\\x935\\x1f\\x16\\x18\\x00\\x08\\x00\\x08\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-12-17T00:00:00", "modifydate": "1993-12-17T16:18:00", "lines": 8, "newlines": 8, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP1 EXEC PGM=IKJEFT01,PARM='%CPLANTMN'\n//SYSPROC  DD DSN=TECH110.USER.CNTLLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//TMONIN   DD DSN=TECH110.DAILY.DATA,DISP=SHR\n//TMONOUT  DD DSN=TECH110.TMON.OUTPUT,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TMRP23C": {"ttr": 11791, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x00\\x00\\x93\\x07_\\x00\\x93\\x11\\x0f\\x15\\x18\\x00\\x12\\x00\\x0f\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1993-03-16T00:00:00", "modifydate": "1993-04-20T15:18:00", "lines": 18, "newlines": 15, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB 5200010520000000,'KAPLAN',CLASS=S,MSGCLASS=G,\n//         NOTIFY=TECH110\n/*JOBPARM S=SYSA\n//*\n//STEP020 EXEC PGM=IKJEFT01,DYNAMNBR=32,REGION=256M\n//STEPLIB  DD DSN=SYS1.TEST.BATCH.LOADLIB,DISP=SHR\n//         DD DSN=SYS1.PROD.BATCH.LOADLIB,DISP=SHR\n//SYS007   DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//SYSABOUT DD SYSOUT=*\n//SYSTSIN  DD *\n DSN SYSTEM(DSNX)\n RUN PROG (MRP23C) -\n   PLAN (MRP23C)\n END\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSOADD": {"ttr": 11793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01'\\x00\\x00\\x00\\x87\\x15?\\x00\\x91\\x11O\\x16\\x01\\x00\\x1c\\x007\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@\"", "ispf": {"version": "01.39", "flags": 0, "createdate": "1987-06-02T00:00:00", "modifydate": "1991-04-24T16:01:00", "lines": 28, "newlines": 55, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFKZ   JOB 530000000000,'JKAPLAN TECHSUP',NOTIFY=JEFFK,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),REGION=6M\n//UADS    EXEC PGM=IKJEFT01\n//SYSTSPRT DD  SYSOUT=*\n//SYSUADS  DD  DSN=SYS1.UADS,DISP=SHR\n//SYSLBC   DD  DSN=SYS1.BRODCAST,DISP=SHR\n//SYSTSIN  DD  *\nACCOUNT\nADD   (????### PASSWORD ACCT######### @IKJ????) SIZE(8192)          +\n     UNIT(SYSDA) NOACCT JCL MAXSIZE(8192) NOMOUNT NOOPER\nSYNC                  /* ENSURE THAT BRODCAST DATA SET IS USEABLE */\nEND\n/*\n//DEFALIAS EXEC PGM=IDCAMS,COND=(0,LT)\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n  DELETE  ????### ALIAS\n  SET MAXCC=0\n  DEFINE  ALIAS                                   -\n          (NAME(????###)               -\n          RELATE(SYS1.UCATTSOE.XA.CLUSTER))   -\n   CATALOG(CATALOG.MVSICFM.VMVSCAT)\n/*\n//ALLOCPDS EXEC PGM=IEFBR14,COND=(0,LT)\n//DUMMY    DD DSN=????###.USER.CNTLLIB,DISP=(NEW,CATLG),\n//            SPACE=(CYL,(5,,180)),\n//            UNIT=SYSDA,DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSOIDLST": {"ttr": 11795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x915?\\x00\\x915O\\x06\\x07\\x00\\x0f\\x00\\x0f\\x00\\x07\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-12-19T00:00:00", "modifydate": "1991-12-20T06:07:00", "lines": 15, "newlines": 15, "modlines": 7, "user": "TECH110"}, "text": "/* REXX EXEC TO CREATE A LIST OF TSO HLQ */\n\"ALLOC F(OUTPUT) DA('TECH110.USER.CNTLLIB(TIDOUTE)') SHR\";\nDUMMY = OUTTRAP(\"DSNLIST.\");\n\"LISTC ENTRY('SYS1.UCATTSOE.CLUSTER') ALL\";\nDUMMY = OUTTRAP(\"OFF\");\nOUTCTR=1;\nDO INDEX = 1 TO DSNLIST.0;\n   LINE = STRIP(DSNLIST.INDEX);\n   IF SUBSTR(LINE,1,9)\u00ac=\"ALIAS----\" THEN ITERATE;\n   ALIAS = SUBSTR(LINE,10);\n   OUT.OUTCTR=ALIAS;\n   OUTCTR=OUTCTR+1;\nEND;\n\"EXECIO * DISKW OUTPUT (FINIS STEM OUT.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSOOIDL": {"ttr": 11797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x915O\\x00\\x915O\\x125\\x00\\x0f\\x00\\x0f\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-12-20T00:00:00", "modifydate": "1991-12-20T12:35:00", "lines": 15, "newlines": 15, "modlines": 2, "user": "TECH110"}, "text": "/* REXX EXEC TO CREATE A LIST OF TSO HLQ */\n\"ALLOC F(OUTPUT) DA('TECH110.USER.CNTLLIB(TIDOUTO)') SHR\";\nDUMMY = OUTTRAP(\"DSNLIST.\");\n\"LISTC ENTRY('SYS1.UCATTPDP.CLUSTER') ALL\";\nDUMMY = OUTTRAP(\"OFF\");\nOUTCTR=1;\nDO INDEX = 1 TO DSNLIST.0;\n   LINE = STRIP(DSNLIST.INDEX);\n   IF SUBSTR(LINE,1,9)\u00ac=\"ALIAS----\" THEN ITERATE;\n   ALIAS = SUBSTR(LINE,10);\n   OUT.OUTCTR=ALIAS;\n   OUTCTR=OUTCTR+1;\nEND;\n\"EXECIO * DISKW OUTPUT (FINIS STEM OUT.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSOSMSLS": {"ttr": 11799, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x915O\\x00\\x915O\\x11 \\x00\\x0f\\x00\\x0f\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1991-12-20T00:00:00", "modifydate": "1991-12-20T11:20:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "TECH110"}, "text": "/* REXX EXEC TO CREATE A LIST OF TSO HLQ */\n\"ALLOC F(OUTPUT) DA('TECH110.USER.CNTLLIB(TIDOUTS)') SHR\";\nDUMMY = OUTTRAP(\"DSNLIST.\");\n\"LISTC ENTRY('SYS1.UCATTSOE.CLUSTER') ALL\";\nDUMMY = OUTTRAP(\"OFF\");\nOUTCTR=1;\nDO INDEX = 1 TO DSNLIST.0;\n   LINE = STRIP(DSNLIST.INDEX);\n   IF SUBSTR(LINE,1,9)\u00ac=\"ALIAS----\" THEN ITERATE;\n   ALIAS = SUBSTR(LINE,10);\n   OUT.OUTCTR=ALIAS;\n   OUTCTR=OUTCTR+1;\nEND;\n\"EXECIO * DISKW OUTPUT (FINIS STEM OUT.\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TSOUSERS": {"ttr": 11801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91)\\x0f\\x00\\x91)\\x0f\\x13S\\x00O\\x00[\\x00\\x01\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-10-17T00:00:00", "modifydate": "1991-10-17T13:53:00", "lines": 79, "newlines": 91, "modlines": 1, "user": "TECH110"}, "text": "/* REXX EXEC to list logged-on TSO users                     */\ndummy = outtrap(\"dsn1list.\");\n\"LISTDS\" dsname1 \"MEMBERS\";\ndummy = outtrap(\"OFF\");\ndummy = outtrap(\"dsn2list.\");\n\"LISTDS\" dsname2 \"MEMBERS\";\ndummy = outtrap(\"OFF\");\nin1not2 = \"\";\nin2not1 = \"\";\nmem1 = 0;\nmem2 = 0;\ndo i = 1 to dsn1list.0;\n  if dsn1list.i=\"--MEMBERS--\" then do;\n       dsn1ptr = i+1; /* first member name */\n       leave i;\n       end;\nend;\ndo i = 1 to dsn2list.0;\n  if dsn2list.i=\"--MEMBERS--\" then do;\n       dsn2ptr = i+1; /* first member name */\n       leave i;\n       end;\nend;\ndo loop=1 to 99999; /* forever loop */\n    dsn1list.dsn1ptr = word(dsn1list.dsn1ptr,1);\n    dsn2list.dsn2ptr = word(dsn2list.dsn2ptr,1);\n    if dsn1list.dsn1ptr = dsn2list.dsn2ptr then do;\n           mem1 = mem1+1; mem2 = mem2+1;\n           dsn1ptr = dsn1ptr+1;\n           dsn2ptr = dsn2ptr+1;\n           end;\n    else if dsn1list.dsn1ptr > dsn2list.dsn2ptr then do;\n           mem2 = mem2+1;\n           in2not1 = in2not1 dsn2list.dsn2ptr;\n           dsn2ptr = dsn2ptr+1;\n           end;\n    else if dsn1list.dsn1ptr < dsn2list.dsn2ptr then do;\n           mem1 = mem1+1;\n           in1not2 = in1not2 dsn1list.dsn1ptr;\n           dsn1ptr = dsn1ptr+1;\n           end;\n    if dsn1ptr>dsn1list.0 & dsn2ptr>dsn2list.0 then leave loop;\n    if dsn1ptr>dsn1list.0 then do;\n           do i = dsn2ptr to dsn2list.0;\n           dsn2list.i = word(dsn2list.i,1);\n           mem2 = mem2+1;\n           in2not1 = in2not1 dsn2list.i;\n           end;\n           leave loop;\n           end;\n    if dsn2ptr>dsn2list.0 then do;\n           do i = dsn1ptr to dsn1list.0;\n           dsn1list.i = word(dsn1list.i,1);\n           mem1 = mem1+1;\n           in1not2 = in1not2 dsn1list.i;\n           end;\n           leave loop;\n           end;\nend;\n\"VMFCLEAR\";\nalias1 = mem1dir-mem1;\nalias2 = mem2dir-mem2;\nsay \"DSNAME: \"dsname1\";   member count: \"mem1\"; alias(es): \"alias1;\nsay \"DSNAME: \"dsname2\";   member count: \"mem2\"; alias(es): \"alias2;\nif in1not2\u00ac=\"\" then do;\n      say \"Members in \"dsname1\" and NOT in \"dsname2;\n      ctr = words(in1not2);\n      do i = 1 to ctr;\n         say \"   \"word(in1not2,i);\n      end;\nend;\nif in2not1\u00ac=\"\" then do;\n      say \"Members in \"dsname2\" and NOT in \"dsname1;\n      ctr = words(in2not1);\n      do i = 1 to ctr;\n         say \"   \"word(in2not1,i);\n      end;\nend;\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "UIDBUILD": {"ttr": 12033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00\\x00\\x00\\x91\\x12\\x0f\\x00\\x91\\x12\\x0f\\x12'\\x00:\\x00\\x17\\x00&\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-04-30T00:00:00", "modifydate": "1991-04-30T12:27:00", "lines": 58, "newlines": 23, "modlines": 38, "user": "JEFFK"}, "text": "/* CREATE JCL FOR BUILDING NEW USERIDS REXX EXEC */\nADDRESS TSO;\n\"ALLOC F(INPUT) DA('SRTY001.USER.CNTLLIB(REXINPUT)') SHR\";\n\"EXECIO * DISKR INPUT (FINIS STEM INPUT.\";\n\"FREE F(INPUT)\";\n\"NEWSTACK\";\nQUEUE \"//ADDUSERS JOB 5304010530000000,'T FINNER',NOTIFY=SRTY001,\";\nQUEUE \"// CLASS=S,MSGCLASS=G,REGION=6M\";\nQUEUE \"//UADS EXEC PGM=IKJEFT01\";\nQUEUE \"//SYSTSPRT DD SYSOUT=*\";\nQUEUE \"//SYSUADS DD DSN=SYS1.UADS,DISP=SHR\";\nQUEUE \"//SYSLBC DD DSN=SYS1.BRODCAST,DISP=SHR\";\nQUEUE \"//SYSTSIN DD *\";\nQUEUE \"ACCOUNT\";\nDO I = 1 TO INPUT.0;\n   PARSE VAR INPUT.I UID . ;\n   QUEUE \"ADD (\"UID \"PASSWORD ACCOUNT @IKJXPDF) SIZE(8192) +\";\n   QUEUE \" UNIT(SYSDA) NOACCT JCL MAXSIZE(8192) NOMOUNT NOOPER\";\nEND;\nQUEUE \"SYNC\";\nQUEUE \"END\";\nDO I = 1 TO INPUT.0;\n   PARSE VAR INPUT.I UID UNAME;\n   UNAME = SPACE(UNAME);\n   QUEUE \"ADDUSER\" UID \"NAME('\"UNAME\"') PASSWORD(\"UID\")\";\n   QUEUE \"OWNER(SUPTEST) DFLTGRP(SUPTEST) GRPACC\";\n   QUEUE \"ADDSD '\"UID\".*' GENERIC OWNER(SUPTEST) UACC(READ)\";\nEND;\nQUEUE \"/*\";\nQUEUE \"//DEFALIAS EXEC PGM=IDCAMS,COND=(0,LT)\";\nQUEUE \"//SYSPRINT DD SYSOUT=*\";\nQUEUE \"//SYSIN DD *\";\nDO I = 1 TO INPUT.0;\n   PARSE VAR INPUT.I UID . ;\n   QUEUE \" DELETE\" UID \"ALIAS\";\nEND;\nQUEUE \" SET MAXCC=0\";\nDO I = 1 TO INPUT.0;\n   PARSE VAR INPUT.I UID . ;\n   QUEUE \" DEFINE ALIAS -\";\n   QUEUE \" (NAME(\"UID\") -\";\n   QUEUE \" RELATE(SYS1.UCATTSOE.XA.CLUSTER)) -\";\n   QUEUE \" CATALOG(CATALOG.MVSICFM.VMVSCAT)\";\nEND;\nQUEUE \"/*\";\nQUEUE \"//ALLOCPDS EXEC PGM=IEFBR14,COND=(0,LT)\";\nDO I = 1 TO INPUT.0;\n   PARSE VAR INPUT.I UID . ;\n   QUEUE \"//DUMMY DD DSN=\"UID\".USER.CNTLLIB,DISP=(NEW,CATLG),\";\n   QUEUE \"// SPACE=(CYL,(5,,180)),\";\n   QUEUE \"// UNIT=SYSDA,DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)\";\nEND;\nQUEUE \"//\";\nQUEUE \"\";\n\"ALLOC F(OUTPUT) DA('SRTY001.USER.CNTLLIB(UTSOADD)') SHR\";\n\"EXECIO * DISKW OUTPUT (FINIS\";\n\"FREE F(OUTPUT)\";\nEXIT 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ULOADCPU": {"ttr": 12035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x92%\\x9f\\x00\\x92)_\\x17!\\x00 \\x00c\\x00\\x17\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1992-09-15T00:00:00", "modifydate": "1992-10-21T17:21:00", "lines": 32, "newlines": 99, "modlines": 23, "user": "TECH110"}, "text": "//TECH110Z JOB 530401053000000,'TECH.SUPPORT.DB2',\n//           CLASS=S,MSGCLASS=G,NOTIFY=TECH110,MSGLEVEL=(1,1)\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPA',UTPROC=''\n/*JOBPARM S=SYSA\n//**********************************************\n//* LOAD UTILITY\n//SYSUDUMP DD SYSOUT=*\n//**********************************************\n//DSNUPROC.SYSREC DD DSN=TECH110.USER.SMFCPU,\n//     DISP=SHR\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(NO) REPLACE LOG(NO)\n  INTO TABLE BUILD.TRMFCPU\n  (INTVDATE         POSITION (001:010) DATE EXTERNAL(10),\n   INTVTIME         POSITION (011:012) CHAR,\n   SYSID            POSITION (013:016) CHAR,\n   CPUWAIT          POSITION (017:020) INTEGER,\n   CPUID            POSITION (021:022) CHAR)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ULOADJOB": {"ttr": 12037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x92$O\\x00\\x92)o\\tQ\\x00#\\x005\\x00#\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1992-08-31T00:00:00", "modifydate": "1992-10-22T09:51:00", "lines": 35, "newlines": 53, "modlines": 35, "user": "TECH110"}, "text": "//TECH110Z JOB 530401053000000,'TECH.SUPPORT.DB2',\n//           CLASS=S,MSGCLASS=G,NOTIFY=TECH110,MSGLEVEL=(1,1)\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPA',UTPROC=''\n/*JOBPARM S=SYSA\n//**********************************************\n//* LOAD UTILITY\n//SYSUDUMP DD SYSOUT=*\n//**********************************************\n//DSNUPROC.SYSREC DD DSN=TECH110.USER.SMFJOB,\n//     DISP=SHR\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(NO) REPLACE LOG(NO)\n  INTO TABLE BUILD.TRMFJOB\n  (SMFDATE          POSITION (001:010) DATE EXTERNAL(10),\n   SMFTIME          POSITION (011:012) CHAR,\n   SYSID            POSITION (013:016) CHAR,\n   RACGROUP         POSITION (017:024) CHAR,\n   RACUID           POSITION (025:032) CHAR,\n   SERVCPU          POSITION (033:036) INTEGER,\n   SERVIO           POSITION (037:040) INTEGER,\n   JOBCLASS         POSITION (041:041) CHAR)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ULOADWRK": {"ttr": 12039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x00\\x00\\x92$O\\x00\\x92)o\\tT\\x00\"\\x005\\x00\"\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "1992-08-31T00:00:00", "modifydate": "1992-10-22T09:54:00", "lines": 34, "newlines": 53, "modlines": 34, "user": "TECH110"}, "text": "//TECH110Z JOB 530401053000000,'TECH.SUPPORT.DB2',\n//           CLASS=S,MSGCLASS=G,NOTIFY=TECH110,MSGLEVEL=(1,1)\n//UTIL EXEC DSNUPROC,SYSTEM=DSNA,UID='TEMPA',UTPROC=''\n/*JOBPARM S=SYSA\n//**********************************************\n//* LOAD UTILITY\n//SYSUDUMP DD SYSOUT=*\n//**********************************************\n//DSNUPROC.SYSREC DD DSN=TECH110.USER.SMFWRK,\n//     DISP=SHR\n//*\n//DSNUPROC.SYSUT1 DD DSN=&&SYSUT1,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//*\n//DSNUPROC.SORTOUT DD DSN=&&SORTOUT,\n//     DISP=(NEW,DELETE),\n//     SPACE=(CYL,(5,5)),\n//     UNIT=VIO\n//DSNUPROC.SYSERR DD SYSOUT=*\n//DSNUPROC.SYSMAP DD SYSOUT=*\n//*\n//DSNUPROC.SYSIN    DD *\n  LOAD DATA INDDN(SYSREC) RESUME(NO) REPLACE LOG(NO)\n  INTO TABLE BUILD.TRMFWRK\n  (INTVDATE         POSITION (001:010) DATE EXTERNAL(10),\n   INTVTIME         POSITION (011:012) CHAR,\n   SYSID            POSITION (013:016) CHAR,\n   XNAME            POSITION (017:024) CHAR,\n   XCOUNT           POSITION (025:028) INTEGER,\n   SERVCPU          POSITION (029:032) INTEGER,\n   SERVIO           POSITION (033:036) INTEGER)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UPSTREAM": {"ttr": 12041, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95)\\x7f\\x00\\x95)\\x7f\\x17$\\x00\\x12\\x00\\x03\\x00\\x10\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-10-24T00:00:00", "modifydate": "1995-10-24T17:24:00", "lines": 18, "newlines": 3, "modlines": 16, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//MAIN     EXEC PGM=IUCVMAST,PARM='USTMAIN',REGION=0M,TIME=1440\n//STEPLIB  DD  DSN=SYS1.UPSTREAM.V2R4M4.LOADLIB,DISP=SHR\n//ABNLDUMP DD  DUMMY            BYPASS ABEND-AID\n//USTLOG   DD  SYSOUT=*\n//USTLOG2  DD  SYSOUT=*\n//USTSUMM  DD  SYSOUT=*\n//USTSUMM2 DD  SYSOUT=*\n//USTINFO  DD  SYSOUT=*\n//USTSNAP  DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSOUT   DD  DUMMY        FOR TAPE RESTORES (SORT OUTPUT)\n//SYSIN    DD  DUMMY,DCB=BLKSIZE=80  FOR OLDER XA SYSTEMS\n//USTCONFG DD  DSN=SYSS.UPSTREAM.V2R4M4.CONFIG(CHRMPLEX),DISP=SHR\n//USTCATLG DD  DSN=SYSS.UPSTREAM.V2R4M4.CATALOG.$UST.CLUSTER,DISP=SHR\n//USTFILEI DD  DSN=SYSS.UPSTREAM.V2R4M4.FILEINFO.$UST.CLUSTER,DISP=SHR\n//USTFILEC DD  DSN=SYSS.UPSTREAM.V2R4M4.FILEDATA.CLUSTER,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VENSLS1": {"ttr": 12043, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93(O\\x00\\x93(O\\x131\\x00\\x12\\x00\\x12\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-10-11T00:00:00", "modifydate": "1993-10-11T13:31:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP02   EXEC PGM=ADRDSSU\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=X\n//DASD   DD UNIT=SYSTA,VOL=SER=(SYSTA2),DISP=SHR\n//TAPE     DD UNIT=(TA80,,DEFER),VOL=(,RETAIN),\n//            DSN=PTAP.PASAC01D.BKUP(0),\n//            LABEL=(1,SL),DISP=OLD\n//SYSIN    DD  *\n RESTORE INDD(TAPE)         -\n         OUTDD(DASD)        -\n         REPLACE            -\n   DS(INC( -\n             PSDD.E.PSD.DLY.VENSLS1.FILE -\n                       )) -\n RENAMEU(PSDD.E.PSD.DLY.VENSLS1.FILE,TECH110.E.PSD.DLY.VENSLS1.FILE)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VMAINTV": {"ttr": 12045, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x92 _\\x00\\x92 o\\x105\\x00 \\x00\\x08\\x00\\x1d\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-07-23T00:00:00", "modifydate": "1992-07-24T10:35:00", "lines": 32, "newlines": 8, "modlines": 29, "user": "TECH110"}, "text": "//TECH110M JOB 530401053000,'KAPLAN',NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1)\n//IDCAMS1  EXEC PGM=FDRABRM,REGION=8M\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\nSELECT  DSG=A,VOL=DRV656,UPDT=OFF\nSELECT  DSG=B,VOL=DRV656,UPDT=OFF\nSELECT  DSG=C,VOL=DRV656,UPDT=OFF\nSELECT  DSG=D,VOL=DRV656,UPDT=OFF\nSELECT  DSG=E,VOL=DRV656,UPDT=OFF\nSELECT  DSG=F,VOL=DRV656,UPDT=OFF\nSELECT  DSG=G,VOL=DRV656,UPDT=OFF\nSELECT  DSG=H,VOL=DRV656,UPDT=OFF\nSELECT  DSG=I,VOL=DRV656,UPDT=OFF\nSELECT  DSG=J,VOL=DRV656,UPDT=OFF\nSELECT  DSG=K,VOL=DRV656,UPDT=OFF\nSELECT  DSG=L,VOL=DRV656,UPDT=OFF\nSELECT  DSG=M,VOL=DRV656,UPDT=OFF\nSELECT  DSG=N,VOL=DRV656,UPDT=OFF\nSELECT  DSG=O,VOL=DRV656,UPDT=OFF\nSELECT  DSG=P,VOL=DRV656,UPDT=OFF\nSELECT  DSG=Q,VOL=DRV656,UPDT=OFF\nSELECT  DSG=R,VOL=DRV656,UPDT=OFF\nSELECT  DSG=S,VOL=DRV656,UPDT=OFF\nSELECT  DSG=T,VOL=DRV656,UPDT=OFF\nSELECT  DSG=U,VOL=DRV656,UPDT=OFF\nSELECT  DSG=V,VOL=DRV656,UPDT=OFF\nSELECT  DSG=W,VOL=DRV656,UPDT=OFF\nSELECT  DSG=X,VOL=DRV656,UPDT=OFF\nSELECT  DSG=Y,VOL=DRV656,UPDT=OFF\nSELECT  DSG=Z,VOL=DRV656,UPDT=OFF\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VOLSADDR": {"ttr": 12047, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x00\\x00\\x92\\x01?\\x00\\x92\\x17O\\x16\\x10\\x00\\'\\x00\"\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1992-01-13T00:00:00", "modifydate": "1992-06-22T16:10:00", "lines": 39, "newlines": 34, "modlines": 0, "user": "TECH110"}, "text": "SPL003 - 138 - SYSA\nSPL001 - 283 - SYSA\nSMSSM3 - 284 - SYSM\nSMSU01 - 288 - SYSM\nSMSU02 - 292 - SYSM\nMIGR01 - 29F - SYSM\nSPL002 - 366 - SYSA\nSMSU19 - 655 - SYSM\nSMSSS1 - 658 - SYSA/SYSM\nSMSSS2 - 659 - SYSA/SYSM\nSMSSS3 - 65B - SYSA/SYSM\nSMSSA1 - 708 - SYSA\nSMSSM4 - 709 - SYSM\nSMSSA3 - 70A - SYSA\nSMSSM5 - 712 - SYSM\nSMSSM2 - 713 - SYSM\nSMSSM6 - 714 - SYSM\nSMSSA2 - 715 - SYSA\nSMSSM1 - 71D - SYSM\nSMSU21 - 784 - SYSM\nSMSU22 - 788 - SYSM\nSMSU38 - 792 - SYSA\nSMSU40 - 795 - SYSA\nSMSU39 - 7A0 - SYSA\nSMSU23 - 7B0 - SYSA\nSMSU24 - 7B1 - SYSA\nSMSU25 - 7B2 - SYSA\nSMSU26 - 7B3 - SYSA\nSMSU27 - 7B4 - SYSA\nSMSU28 - 7B5 - SYSA\nSMSU29 - 7B6 - SYSA\nSMSU30 - 7B7 - SYSA\nSMSU31 - 7B8 - SYSA\nSMSU32 - 7B9 - SYSA\nSMSU33 - 7BA - SYSA\nSMSU34 - 7BB - SYSA\nSMSU35 - 7BC - SYSA\nSMSU36 - 7BD - SYSA\nSMSU37 - 7BE - SYSM\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VOLSNAME": {"ttr": 12049, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x00\\x00\\x92\\x01?\\x00\\x92\\x17O\\x16\\t\\x00\\'\\x00\"\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1992-01-13T00:00:00", "modifydate": "1992-06-22T16:09:00", "lines": 39, "newlines": 34, "modlines": 0, "user": "TECH110"}, "text": "MIGR01 - 29F - SYSM\nSMSSA1 - 708 - SYSA\nSMSSA2 - 715 - SYSA\nSMSSA3 - 70A - SYSA\nSMSSM1 - 71D - SYSM\nSMSSM2 - 713 - SYSM\nSMSSM3 - 284 - SYSM\nSMSSM4 - 709 - SYSM\nSMSSM5 - 712 - SYSM\nSMSSM6 - 714 - SYSM\nSMSSS1 - 658 - SYSA/SYSM\nSMSSS2 - 659 - SYSA/SYSM\nSMSSS3 - 65B - SYSA/SYSM\nSMSU01 - 288 - SYSM\nSMSU02 - 292 - SYSM\nSMSU19 - 655 - SYSM\nSMSU21 - 784 - SYSM\nSMSU22 - 788 - SYSM\nSMSU23 - 7B0 - SYSA\nSMSU24 - 7B1 - SYSA\nSMSU25 - 7B2 - SYSA\nSMSU26 - 7B3 - SYSA\nSMSU27 - 7B4 - SYSA\nSMSU28 - 7B5 - SYSA\nSMSU29 - 7B6 - SYSA\nSMSU30 - 7B7 - SYSA\nSMSU31 - 7B8 - SYSA\nSMSU32 - 7B9 - SYSA\nSMSU33 - 7BA - SYSA\nSMSU34 - 7BB - SYSA\nSMSU35 - 7BC - SYSA\nSMSU36 - 7BD - SYSA\nSMSU37 - 7BE - SYSM\nSMSU38 - 792 - SYSA\nSMSU39 - 7A0 - SYSA\nSMSU40 - 795 - SYSA\nSPL001 - 283 - SYSA\nSPL002 - 366 - SYSA\nSPL003 - 138 - SYSA\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VSMRESET": {"ttr": 12051, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x90)o\\x00\\x90)\\x7f\\t#\\x00F\\x00:\\x00\\x0f\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1990-10-23T00:00:00", "modifydate": "1990-10-24T09:23:00", "lines": 70, "newlines": 58, "modlines": 15, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nVSMRESET CSECT , /*RESET REUSABLE VSAM CLUSTER*/\nM0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nVSMRESET AMODE 24\nVSMRESET RMODE 24\n         SAVE  (14,12),,VSMRESET*&SYSDATE*&SYSTIME\n         LR    RC,RF ADDRESSABILITY\n         USING VSMRESET,RC\n         LR    RF,RD SAVEAREA HOUSEKEEPING\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18F'0'\n         ST    RD,8(RF)\n         ST    RF,4(RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         OI    GFBITS,GFWTPSW IKJEFF19 BATCH SWITCH\n         MVC   GFPGMNP,=A(PGMNAME) PROGRAM NAME FOR ERROR MSG\n         MVC   GFPGMNL,=AL2(8) PROGNAME LEN\n         GENCB BLK=ACB,AM=VSAM,DDNAME=VSMRESET,                        X\n               MACRF=(RST,NSR,OUT),STRNO=1\n         LTR   RF,RF OK\n         BNZ   DEFACBER\n         LR    R2,R1 SAVE ACB PTR\n         ST    R2,GFCBPTR ACB PTR FOR IKJEFF19\n         MVC   GFCALLID,=AL2(GFOPEN) OPEN FAILURE ID\n         OPEN  ((R2)),MODE=24 OPEN AND CLOSE TO RESET\n         LTR   RF,RF OK\n         BNZ   OPENERR\n         MVC   GFCALLID,=AL2(GFCLOSE) CLOSE FAILURE\n         CLOSE ((R2)),MODE=24\n         LTR   RF,RF OK\n         BNZ   CLOSERR\n         L     RD,4(RD)\n         RETURN (14,12),RC=0\nDEFACBER L     RD,4(RD)\n         RETURN (14,12),RC=24\nOPENERR  ST    RF,GFRCODE RETURN CODE\n         LINK  EP=IKJEFF19,PARAM=GFPARMS\n         L     RD,4(RD)\n         RETURN (14,12),RC=28\nCLOSERR  ST    RF,GFRCODE RETURN CODE\n         LINK  EP=IKJEFF19,PARAM=GFPARMS\n         L     RD,4(RD)\n         RETURN (14,12),RC=32\n         IKJEFFGF\nPGMNAME  DC    CL8'VSMRESET' PROGRAM NAME\n         LTORG\n         END\n/*\n//L.SYSLMOD DD DSN=TD.TEST1.BATCH.LOADLIB(VSMRESET),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VSMTEST": {"ttr": 12053, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x90)\\x7f\\x00\\x90)\\x7f\\t&\\x00\\x06\\x00\\x04\\x00\\x02\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-10-24T00:00:00", "modifydate": "1990-10-24T09:26:00", "lines": 6, "newlines": 4, "modlines": 2, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC PGM=VSMRESET\n//* RESET TO EMPTY A REUSABLE VSAM CLUSTER\n//STEPLIB DD DSN=TD.TEST1.BATCH.LOADLIB,DISP=SHR\n//VSMRESET DD DSN=YOURCLUSTERNAMEHERE,DISP=OLD\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOC": {"ttr": 12055, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x91\\x16\\x9f\\x00\\x91\\x17\\x0f\\x10\\x16\\x00V\\x00\\t\\x00N\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1991-06-18T00:00:00", "modifydate": "1991-06-19T10:16:00", "lines": 86, "newlines": 9, "modlines": 78, "user": "JEFFK"}, "text": "/* REXX VTOC Analysis */\naddress \"TSO\";\n\"VMFCLEAR\";\nsay \"Processing all DASD volumes...\";\ndummy = MSG(\"OFF\");\n\"FREE F(SYSPRINT SYSOUT ABRSUM SYSIN ABRMAP ABRDCB)\";\ndummy = MSG(\"ON\");\n\"ALLOC F(SYSPRINT) DUMMY\";\n\"ALLOC F(SYSOUT) DUMMY\";\n\"ALLOC F(ABRSUM) DUMMY\";\n\"ALLOC F(SYSIN) DA('JEFFK.USER.CNTLLIB(VTOCSYIN)') SHR\";\n\"ATTR ABRDCB RECFM(F B A) LRECL(133) BLKSIZE(1330)\";\n\"ALLOC F(ABRMAP) USING(ABRDCB) UNIT(PAGEIO) SPACE(1 1)\" ,\n    \"CYLINDERS NEW DELETE\";\n\"CALL 'TECH.FDR.V5115.LOADLIB(FDRABRP)'\";\n\"EXECIO * DISKR ABRMAP (FINIS STEM VTOCDATA.\";\ndevtypes = \"\";\ndo i = 1 to vtocdata.0;\n     select;\n        when wordpos(\"DEVICE TYPE\",vtocdata.i) \u00ac= 0 then do;\n                parse var vtocdata.i ,\n                   . \"DEVICE TYPE\" unit \"--\" unitcount . ;\n                devtypes = devtypes unit;\n                volcount.unit = unitcount;\n                end;\n        when wordpos(\"TOTAL TRACKS\",vtocdata.i) \u00ac= 0 then do;\n                parse var vtocdata.i ,\n                   . \"TOTAL TRACKS\" trackcount . ;\n                trackcount = reverse(strip(trackcount));\n                parse var trackcount trackcount \"-\" . ;\n                trackcount = reverse(trackcount);\n                trackcount.unit = trackcount;\n                end;\n        when wordpos(\"ALLOCATED TRACKS\",vtocdata.i) \u00ac= 0 then do;\n                parse var vtocdata.i ,\n                   . \"ALLOCATED TRACKS\" trackcount . ;\n                trackcount = reverse(strip(trackcount));\n                parse var trackcount trackcount \"-\" . ;\n                trackcount = reverse(trackcount);\n                trackalloc.unit = trackcount;\n                end;\n        when wordpos(\"FREE TRACKS\",vtocdata.i) \u00ac= 0 then do;\n                parse var vtocdata.i ,\n                   . \"FREE TRACKS\" trackcount . ;\n                trackcount = reverse(strip(trackcount));\n                parse var trackcount trackcount \"-\" . ;\n                trackcount = reverse(trackcount);\n                trackfree.unit = trackcount;\n                end;\n        otherwise nop;\n     end;\nend;\ntypevols = words(devtypes); /* counter of different unit types */\ntotal_dasd_space = 0;\nalloc_dasd_space = 0;\nfree_dasd_space = 0;\ndo i = 1 to typevols;\n    unit = word(devtypes,i);\n    select;\n        when substr(unit,1,4) = \"3380\" then do;\n            tspace = (trackcount.unit*47476)/(1024*1024*1024);\n            total_dasd_space = total_dasd_space + tspace;\n            aspace = (trackalloc.unit*47476)/(1024*1024*1024);\n            alloc_dasd_space = alloc_dasd_space + aspace;\n            fspace = (trackfree.unit*47476)/(1024*1024*1024);\n            free_dasd_space = free_dasd_space + fspace;\n            end;\n        when substr(unit,1,4) = \"3390\" then do;\n            tspace = (trackcount.unit*56664)/(1024*1024*1024);\n            total_dasd_space = total_dasd_space + tspace;\n            aspace = (trackalloc.unit*56664)/(1024*1024*1024);\n            alloc_dasd_space = alloc_dasd_space + aspace;\n            fspace = (trackfree.unit*56664)/(1024*1024*1024);\n            free_dasd_space = free_dasd_space + fspace;\n            end;\n        otherwise nop;\n    end;\nend;\n\"VMFCLEAR\";\nsay \"--------------------DASD Farm Space Summary--------------------\";\nsay \"Total DASD space:\" total_dasd_space \"GB.\";\nsay \"\";\nsay \"Allocated DASD space:\" alloc_dasd_space \"GB.\";\nsay \"\";\nsay \"Free DASD space:\" free_dasd_space \"GB.\";\nexit 0;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VTOCSCAN": {"ttr": 12289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00\\x00\\x00\\x90\\x14\\x9f\\x00\\x90\\x14\\x9f\\x13@\\x00\\x9e\\x00k\\x00?\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "1990-05-29T00:00:00", "modifydate": "1990-05-29T13:40:00", "lines": 158, "newlines": 107, "modlines": 63, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.AMODGEN,DISP=SHR,UNIT=3380,VOL=SER=MVSDL1\n//         DD DSN=SYS1.AMACLIB,DISP=SHR,UNIT=3380,VOL=SER=MVSDL1\n//C.SYSIN  DD *\nVTOCSCAN CSECT , /*VTOC ANALYSIS*/\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nVTOCSCAN AMODE 24\nVTOCSCAN RMODE 24\n         SAVE  (14,12),,VTOCSCAN*&SYSDATE*&SYSTIME\n         LR    RA,RF ADDRESSABILITY\n         USING VTOCSCAN,RA,RB,RC\n         LA    RB,4095(RA)\n         LA    RB,1(RB)\n         LA    RC,4095(RB)\n         LA    RC,1(RC)\n         LR    RF,RD SAVEAREA HOUSEKEEPING\n         CNOP  0,4\n         BAL   RD,*+76\n         DC    18F'0'\n         ST    RD,8(RF)\n         ST    RF,4(RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         EXTRACT CSCLPTR,FIELDS=(COMM)\n         L     R4,CSCLPTR /* COMMUNIC AREA PTR */\n         USING COMLIST,R4\n         L     R0,COMECBPT /* PTR COMM ECB */\n         ST    R0,ECBPOPER /* PLACE INTO ECBLIST */\n         LA    R4,COMCIBPT /* PTR CIB CHAIN PTR */\n         DROP  R4\n         ST    R4,CIBCHPTR /* SAVE PTR CHAIN PTR */\n         ICM   R5,15,0(R4) /* CURRENT CIB CHAIN PTR */\n         BZ    NOSTART /* NOT STARTED TASK */\n         USING CIBNEXT,R5\n         CLI   CIBVERB,CIBSTART /* STARTED TASK CIB */\n         BNE   NOSTART /* NO */\n         QEDIT ORIGIN=(R4),BLOCK=(R5) /* UNCHAIN START CIB */\n         LTR   RF,RF\n         BNZ   FQEDIT\nNOSTART  QEDIT ORIGIN=(R4),CIBCTR=0 /* DISABLE OPER MODIFIES */\n         LTR   RF,RF\n         BNZ   FQEDIT\n         DROP  R5\n         LA    R7,4095 MAX SAMPLE COUNT\n         OPEN  (WORKDCB,(OUTPUT))\n         LA    R2,WORKDCB\n         USING IHADCB,R2\n         TM    DCBOFLGS,DCBOFOPN OPEN OKAY\n         BZ    FWORK\n         DROP  R2\nIOSVSCAN TIME  DEC\n         ST    R0,WORK TIME IS HHMMSSTT - PD\n         UNPK  WORK+3(5),WORK+0(3)\n         MVC   WORKOUT+22(4),WORK+3\n         LA    R1,IOSVPARM /* SCAN UCBS */\n         L     RF,CVTPTR\n         USING CVTMAP,RF\n         L     RF,CVTUCBSC /* IOSVSUCB EP PTR */\n         DROP  RF\n         BALR  RE,RF /* SCAN FOR DASD ONLY */\n         LTR   RF,RF /* SCAN END */\n         BNZ   ENDIOSV\n         L     R8,IOSVPARM+12 /* PICKUP UCB PTR */\n         USING UCBOB,R8\n         TM    UCBSTAT,UCBONLI ONLINE\n         BZ    IOSVSCAN NO\n         MVC   WORKOUT(6),UCBVOLI  /* VOLSER */\n         ST    R8,UCBLIST FOR DEVTYPE\n         DEVTYPE ,(DEVTYPE,24),UCBLIST=(UCBLIST,1)\n         LTR   RF,RF\n         BNZ   FDEVT\n         LH    RF,DEVTYPE+8 3380 PHYS CYL COUNT\n         BCTR  RF,0 SUBTRACT CE CYL\n         CVD   RF,WORK\n         UNPK  WORK+0(5),WORK+5(3)\n         OI    WORK+4,C'0'\n         MVC   WORKOUT+7(4),WORK+1\n         LSPACE UCB=((R8)),DATA=LSPACE\n         LTR   RF,RF\n         BNZ   FLSPACE\n         L     RF,LSPACE+8 TOTAL FREE CYL\n         CVD   RF,WORK\n         UNPK  WORK+0(5),WORK+5(3)\n         OI    WORK+4,C'0'\n         MVC   WORKOUT+12(4),WORK+1\n         L     RF,LSPACE+32 FRAGMENTATION INDEX 0-999 (HIGH=BAD FRAG)\n         CVD   RF,WORK\n         UNPK  WORK+0(5),WORK+5(3)\n         OI    WORK+4,C'0'\n         MVC   WORKOUT+17(4),WORK+1\n         PUT   WORKDCB,WORKOUT SAVE DATA\n         B     IOSVSCAN CONTINUE\n         DROP  R8\nENDIOSV  EQU   * *\n         STIMER WAIT,DINTVL=DINTVL\n         L     RF,ECBPOPER DID OPER STOP US\n         TM    0(RF),X'40' POSTED\n         BO    BREAKOUT\n         BCT   R7,IOSVSCAN LOOP\nBREAKOUT CLOSE (WORKDCB)\n         L     RD,4(RD)\n         RETURN (14,12),RC=0\nFQEDIT   L     RD,4(RD)\n         RETURN (14,12),RC=24\nFWORK    L     RD,4(RD)\n         RETURN (14,12),RC=28\nFDEVT    L     RD,4(RD)\n         RETURN (14,12),RC=32\nFLSPACE  L     RD,4(RD)\n         RETURN (14,12),RC=36\nWORK     DC    D'0'\nDINTVL   DC    C'00300000' 30 MIN WAIT\nLSPACE   DC    36X'00'\nCIBCHPTR DC    A(*-*)\nCSCLPTR  DC    A(*-*)\nMECBLIST DC    0F'0'\nECBPOPER DC    A(*-*)\nTIMERPOP DC    X'80',AL3(*-*)\nIOSVPARM DC    A(IOSVWORK,IOSVDEVT),X'80',AL3(IOSVPARM+12),A(0)\nIOSVWORK DC    512X'00'\nUCBLIST  DC    A(*-*) FOR DEVTYPE\nDEVTYPE  DC    24X'00' DEVTYPE RESPONSE AREA\nWORKOUT  DC    CL26' '\nIOSVDEVT DC    AL1(UCB3DACC) DASD CLASS\n         LTORG\n         PRINT NOGEN\nWORKDCB  DCB   DDNAME=WORK,DSORG=PS,MACRF=(GM,PM),RECFM=FB,LRECL=26\n         CVT   DSECT=YES\n         DSECT\n         IEFUCBOB\n         DSECT\n         IEZCOM\n         DSECT\n         IEZCIB\n         DCBD  DSORG=QS,DEVD=DA\n         END\n/*\n//L.SYSLMOD DD DSN=TD.TEST1.BATCH.LOADLIB(VTOCSCAN),DISP=SHR,\n// UNIT=,SPACE=\n//*G.WORK DD DSN=JEFFK.VTOC.DATA,DISP=SHR\n//*G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOCSORT": {"ttr": 12293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90\\x14\\x9f\\x00\\x90\\x14\\x9f\\x14!\\x00\\t\\x00\\t\\x00\\x00\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-05-29T00:00:00", "modifydate": "1990-05-29T14:21:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "JEFFK"}, "text": "//JEFFKS   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK\n//S EXEC PGM=SYNCSORT,REGION=6M\n//SYSOUT DD SYSOUT=*\n//SORTIN DD DSN=JEFFK.VTOC.TESTDATA,DISP=SHR\n//SORTOUT DD DSN=JEFFK.VTOC.SORTDATA,DISP=OLD\n//SYSIN DD *\n SORT FIELDS=(23,4,CH,A,1,6,CH,A)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOCSYIN": {"ttr": 12295, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x91\\x16\\x9f\\x00\\x91\\x17\\x0f\\t2\\x00\\x01\\x00\\x01\\x00\\x01\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-06-18T00:00:00", "modifydate": "1991-06-19T09:32:00", "lines": 1, "newlines": 1, "modlines": 1, "user": "JEFFK"}, "text": " PRINT VTOC,SUMPFX=NO,ONLINE,DETAIL=NO,COMBINE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WHOISX": {"ttr": 12297, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x92\\x11?\\x00\\x92\\x11O\\x16E\\x00\\x04\\x00\\x03\\x00\\x03\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1992-04-22T00:00:00", "modifydate": "1992-04-23T16:45:00", "lines": 4, "newlines": 3, "modlines": 3, "user": "TECH110"}, "text": "/* REXX */\nparse upper arg uid;\n\"WHOISX\" uid;\nsay \"Code:\" rc \"Result:\" whois; /* result in variable WHOIS */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WRESTSRC": {"ttr": 12299, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x93\\x01?\\x00\\x94\\x14?\\x123\\x024\\x02\\x14\\x002\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1993-01-13T00:00:00", "modifydate": "1994-05-23T12:33:00", "lines": 564, "newlines": 532, "modlines": 50, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//C.SYSIN  DD *\nRST      TITLE 'Rest monitor'\nWREST    CSECT , /* WREST */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK26      EQU   26\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK264     EQU   264\nK424     EQU   424\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nWREST    AMODE 24\nWREST    RMODE 24\n         SAVE  (14,12),,WREST*&SYSDATE*&SYSTIME\n         LR    R3,R1 /* CPPL */\n         USING CPPL,R3\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING WREST,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         LA    RD,SAVEAREA+K4\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SLR   R9,R9 RC\n         STFSMODE ON,INITIAL=YES\n         USING PSA,R0 /* Map PSA */\n         L     R4,FLCCVT /* CVT pointer */\n         DROP  R0\n         USING CVT,R4 /* Map CVT */\n         L     R4,CVTCBSP /* AMCBS pointer */\n         DROP  R4\n         USING AMCBS,R4 /* Map SP 245 key 0 */\n         L     R4,CBSCAXCN /* Pointer to CAXWA chain */\n         DROP  R4\n         USING IGGCAXWA,R4 /* Map Catalog Work Area */\nLOOKUCAT CLC   CAXCNAM(K44),=CL44'SYS1.UCATABR.CLUSTER'\n         BE    LOCUCAT /* Yes */\n         ICM   R4,K15,CAXCHN /* Scan active catalog chain */\n         BNZ   LOOKUCAT /* Loop */\nLOCUCAT  MVC   UCATACB,CAXACB /* Save user catalog ACB ptr */\n         DROP  R4\n         XC    SVC26PRM(CTGPLEN),SVC26PRM /* Clear cat parm */\n         LA    R9,SVC26PRM /* Map parm */\n         USING CTGPL,R9\n         OI    CTGOPTN1,CTGNAME /* Ref dsect descript */\n         OI    CTGOPTN2,CTGGTNXT+CTGBOTH\n         OI    CTGOPTN3,CTGCMS+CTGAM0\n         OI    CTGOPTNS,CTGLTCAT\n         LA    R0,CTGENTP /* Req dsn area */\n         ST    R0,CTGENT ...\n         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         LA    R0,UCATACB /* Req cat area */\n         ST    R0,CTGCAT ...\n         XC    CATRESP,CATRESP /* Clear cat response area */\n         XC    CATRESP+K256,CATRESP+K256 /*Clearcat response area */\n         LA    R0,K512      /* Tell sys len */\n         STCM  R0,K3,CATRESP ...\n         LA    R0,CATRESP /* Tell sys address */\n         ST    R0,CTGWKA ...\n         MVC   CTGFLS(CTGFLSPL),CTGFLSP /* Build needed field entries*/\n         LA    RF,K4 /* Max # CTGFL entries */\n         STC   RF,CTGNOFLD /* Tell sys */\n         LA    RE,CTGFIELD /* CTGFL pointers */\n         LA    R1,CTGFLS /* Actual CTGFLs */\n         USING CTGFL,R1 /* Map */\nCTGSETL  ST    R1,K0(,RE) /* Set a CTGFL ptr */\n         SLR   R0,R0 /* Calc size of this CTGFL */\n         IC    R0,CTGFLDNO /* # of variable len fields */\n         SLL   R0,K3 /* Each var field is 8 bytes */\n         ALR   R1,R0 /* Ptr to next CTGFL in stor */\n         LA    R1,CTGFLL(,R1) /* Factor in fixed len */\n         LA    RE,K4(,RE) /* Next CTGFL ptr loc */\n         BCT   RF,CTGSETL /* Loop for all fields */\n         DROP  R1\nBIGLOOP  MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         MVC   CTGENTP(K26),=C'FDRABR.COMDISCO.WEEKREST.V' /*scan    */\n         MVI   CTGTYPE,C'A'    /* Nvsam code */\n         LA    R8,BUFFER+K3\nCATSCANA LA    R1,SVC26PRM /* Cat serv param */\n         SVC   26 , /* Service */\n         CLM   RF,K1,=AL1(K40) /* RC 40 return */\n         BE    XRC40 /* Ignore it */\n         LTR   RF,RF /* Scan until end */\n         BNZ   CAEND ...\n         USING CTGFL,R4\nXRC40    LA    R4,RESPENTN /* Map entry name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         MVC   CTGENTP(K44),K0(R7)  /* Als for cat scan;up key*/\n         CLC   CTGENTP(K26),=C'FDRABR.COMDISCO.WEEKREST.V' /*scan    */\n         BNE   CAEND end loop\n*        MVC   K3(K6,R8),CTGENTP+K26 volser\n         SLR   RF,RF /* Add binary 1 to cat scan key */\n         IC    RF,CTGENTP+K44-K1\n         LA    RF,K1(,RF) ...\n         STC   RF,CTGENTP+K44-K1\n         LA    R4,RESPOWNR /* Map ownerid response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         LA    RF,CBWAIT counter\n         MVI   K2(R8),C'5' aqua\n         CLI   K0(R7),C'N'\n         BE    NEXT\n         LA    RF,CBACT  counter\n         MVI   K2(R8),C'6' yellow\n         CLI   K0(R7),C'I'\n         BE    NEXT1\n         LA    RF,CBNOR  counter\n         MVI   K2(R8),C'4' green\n         CLI   K0(R7),C'C'\n         BE    NEXT\n         LA    RF,CBABN  counter\n         MVI   K2(R8),C'2' failed\nNEXT1    MVC   K3(K6,R8),CTGENTP+K26 volser\n         LA    R8,K11(,R8) next\nNEXT     L     R1,K0(,RF) incr counter\n         LA    R1,K1(,R1) +1\n         ST    R1,K0(,RF) ...\n         DROP  R4\n         B     CATSCANA loop\nCAEND    EQU   * *\n         TIME  DEC\n         ST    R0,TIMEWORK\n         UNPK  WORK(K7),TIMEWORK(K4)\n         MVC   TIME+K0(K2),WORK+K0\n         MVC   TIME+K3(K2),WORK+K2\n         MVC   TIME+K6(K2),WORK+K4\n         L     RF,CBWAIT show counter\n         CVD   RF,WORK\n         UNPK  CWAIT+K3(K3),WORK+K6(K2)\n         OI    CWAIT+K5,C'0' ...\n         L     RF,CBACT  show counter\n         CVD   RF,WORK\n         UNPK  CACT+K3(K3),WORK+K6(K2)\n         OI    CACT+K5,C'0' ...\n         L     RF,CBNOR  show counter\n         CVD   RF,WORK\n         UNPK  CNOR+K3(K3),WORK+K6(K2)\n         OI    CNOR+K5,C'0' ...\n         L     RF,CBABN  show counter\n         CVD   RF,WORK\n         UNPK  CABN+K3(K3),WORK+K6(K2)\n         OI    CABN+K5,C'0' ...\n         TPUT  BUFFER,BUFFERL,FULLSCR\n         STIMER WAIT,DINTVL=DINTVL sleep user spec time\n         XC    CBWAIT,CBWAIT\n         XC    CBACT,CBACT\n         XC    CBNOR,CBNOR\n         XC    CBABN,CBABN\n         TGET  DUMMYIN,K3,NOWAIT\n         CLM   RF,K1,=AL1(K4) okay\n         BNE   MAINEXIT\n         B     BIGLOOP ...\nMAINEXIT L     RD,K4(,RD)\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\n         LTORG\nTIMEWORK DC    D'0'\nWORK     DC    D'0'\nSAVEAREA DC    18F'0'\nDINTVL   DC    C'00020000'\nBUFFER   DC    X'27F5C3'\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F5',C'        '\n         DC    X'2842F7'\nTIME     DC    C'??:??:??   '\nCWAIT    DC    X'2842F5',C'XXX (Waiting)   '\nCACT     DC    X'2842F6',C'XXX (Active)    '\nCNOR     DC    X'2842F4',C'XXX (Normal end)  '\nCABN     DC    X'2842F2',C'XXX (Abnormal end)'\nBUFFERL  EQU   *-BUFFER\nDUMMYIN  DC    CL3' '\nCTGFLSP  DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,OWNERID,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nCTGFLSPL EQU   *-CTGFLSP /* Len */\nMULTITYP DC    CL8'MULTITYP'   /* CTGFL field name */\nENTNAME  DC    CL8'ENTNAME'    /* CTGFL field name */\nENTYPE   DC    CL8'ENTYPE'     /* CTGFL field name */\nOWNERID  DC    CL8'OWNERID'    /* CTGFL field name */\nNAMEDS   DC    CL8'NAMEDS'     /* CTGFL field name */\nCATACB   DC    CL8'CATACB'     /* CTGFL field name */\nUCATACB  DC    A(*-*) /* Master catalog ACB ptr */\nCBWAIT   DC    F'0' counter\nCBACT    DC    F'0' counter\nCBNOR    DC    F'0' counter\nCBABN    DC    F'0' counter\nCTGFLS   EQU   *\nRESPENTN DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\nRESPENTT DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\nRESPOWNR DC    AL1(K1),(K3)AL1(K0),AL4(K0,OWNERID,K0),(K2)AL4(K0)\nRESPNMDS DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nSVC26PRM DC    (CTGPLEN)AL1(K0) /* Param for catalog services */\nCTGENTP  DC    CL44' ' /* Requested dsname for cat searches */\nCATRESP  DC    CL256' ' /* Cat serv response area */\n         DC    CL256' ' /* Cat serv response area */\n         PRINT NOGEN\n         IKJPPL\n         IKJCPPL\n         CVT   DSECT=YES\n         IHAPSA\nAMCBS    DSECT , /* Access Method Control Block Structure */\n         ORG   AMCBS+K20\nCBSCAXCN DC    A(*-*) /* Pointer CAXWA chain */\nIGGCAXWA DSECT , /* Catalog Auxiliary Work Area */\n         ORG   IGGCAXWA+K4 /* CAXWA chain ptr */\nCAXCHN   DC    A(*-*) ...\nCAXFLGS  DC    AL1(*-*) /* Flags */\nCAXMCT   EQU   X'04' /* 1=Master Catalog, 0=User Catalog */\n         ORG   IGGCAXWA+K24\nCAXACB   DC    A(*-*)   /* Catalog acb */\n         ORG   IGGCAXWA+K28\nCAXUCB   DC    A(*-*) /* UCB pointer */\n         ORG   IGGCAXWA+K52\nCAXCNAM  DC    CL44' ' /* Catalog name */\nCTGPL    DSECT ,      /* Catalog parameter list */\nCTGOPTN1 DS    X      /* First option byte */\nCTGNAME  EQU   X'04'  /* CTGENT holds a(dsname) or a(ci#)\nCTGCNAME EQU   X'02'  /* CTGCAT hold a(cat dsname */\nCTGOPTN2 DS    X      /* Second option byte */\nCTGGTNXT EQU   X'10'  /* LISTCAT get next option */\nCTGBOTH  EQU   X'01'  /* Caller accepts ICF arch */\nCTGOPTN3 DS    X      /* Third option byte */\nCTGCMS   EQU   X'80'  /* Catalog mgmt services req */\nCTGAM0   EQU   X'01'  /* ICF/VSAM request */\nCTGOPTN4 DS    X      /* Fourth option byte */\nCTGENT   DS    A      /* Address of the catalog record id */\nCTGCAT   DS    A      /* Address cat dsname or address cat acb */\nCTGWKA   DS    A      /* Address callers workarea */\nCTGDSORG DS    XL2    /* Superlocate DSORG */\n         ORG   CTGDSORG\nCTGOPTNS DS    XL2    /* Cat management services options */\nCTGLTCAT EQU   X'20'  /* LISTCAT */\nCTGF2SEN EQU   X'01'  /* Can handle 40-2 return code */\nCTGTYPE  DS    C      /* Cat record type */\nCTGTUCAT EQU   C'U'   /* Usercat code */\nCTGTANM  EQU   C'X'   /* Alias name */\nCTGTALL  EQU   X'00'  /* Search all */\nCTGNOFLD DS    X      /* CTGFIELD entry count */\nCTGNEWNM DS    A      /* Alter new dsname ptr */\n         ORG   CTGNEWNM\nCTGFDBK  DS    XL2    /* Feedback area */\nCTGFBFLG DS    XL2    /* Superlocate flags */\nCTGJSCB  DS    A      /* JSCB  ptr */\nCTGFIELD EQU   *      /* 4 byte ptr to each CTGFL; len=4*CTGNOFLD */\nCTGPLEN  EQU   *-CTGPL+(K4*K4) /* Base len w/max4 4byte ctgfl ptrs */\nCTGFL    DSECT , /* Filed entry map */\nCTGFLDNO DS    X /* # entries in CTGFLDAT */\nCTGFLDCD DS    X /* Fl test condition */\nCTGFLDGC DS    X /* Type group code */\nCTGFLDRE DS    X /* Test results */\nCTGFLDWA DS    A /* Workarea; cat rcd field name info */\nCTGFLDNM DS    A /* Address of the field name */\nCTGFLCHN DS    A /* Address of CTGFL test or 0 */\nCTGFLDAT EQU   * /* Start of len/address pairs */\nCTGFLL   EQU   *-CTGFL\n         END\n/*\n//L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(WREST),DISP=SHR,\n// UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "WTOTEST": {"ttr": 12550, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x95\\x10\\x0f\\x00\\x95\\x10\\x0f\\x113\\x006\\x00\\x9f\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-04-10T00:00:00", "modifydate": "1995-04-10T11:33:00", "lines": 54, "newlines": 159, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n//ASM EXEC ASMHCLG\n//C.SYSIN DD *\nDYNATBL  TITLE 'DYNAMIC TABLE MANIPULATION SUBROUTINE'\nDYNATBL  CSECT ,\n         SYSSTATE ASCENV=P PRIMARY ASC MODE\nDYNATBL  AMODE 31\nDYNATBL  RMODE ANY\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nAR0      EQU   0\nAR1      EQU   1\nAR2      EQU   2\nAR3      EQU   3\nAR4      EQU   4\nAR5      EQU   5\nAR6      EQU   6\nAR7      EQU   7\nAR8      EQU   8\nAR9      EQU   9\nARA      EQU   10\nARB      EQU   11\nARC      EQU   12\nARD      EQU   13\nARE      EQU   14\nARF      EQU   15\n         BAKR  RE,0 SAVE CALLERS STATUS ON LINKAGE STACK RETRG IS R14\n         LAE   RA,0(,RF) SETUP ADDRESSING REGS GR/AR PRMY SPACE MODE\n         USING DYNATBL,RA\n         SAC   0   SWITCH TO P  MODE, CODE=X'000000000000'\n         LA    RD,SAVEAREA PTR TO MY SAVEAREA\n         MVC   SAVEAREA+4(4),=C'F1SA' INDICATE REGS SAVED ON STACK\n         WTO   'HELLO',ROUTCDE=(11)\nSAVEAREA DS    9D\n         LTORG\n         END\n/*\n//*L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(BINDEX),DISP=SHR,UNIT=\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XCATSRC": {"ttr": 12552, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x00\\x00\\x92(?\\x00\\x93\\x01?\\x12\"\\x01\\x16\\x02\\x0e\\x00C\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1992-10-09T00:00:00", "modifydate": "1993-01-13T12:22:00", "lines": 278, "newlines": 526, "modlines": 67, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=6M\n//S EXEC ASMHCLG,PARM.L='XREF,LIST'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MODGEN,DISP=SHR\n//         DD DSN=SYSM.AMACLIB,DISP=SHR\n//C.SYSIN  DD *\nXCAT     TITLE 'Xcat'\nXCAT     CSECT , /* Dataset Services */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK26      EQU   26\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK45      EQU   45\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK59      EQU   59\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK100     EQU   100\nK128     EQU   128\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nXCAT     AMODE 31\nXCAT     RMODE 24\n         SAVE  (14,12),,XCAT*&SYSDATE*&SYSTIME\n         LR    RA,RF /* Addressability */\n         USING XCAT,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    R2,RD /*SAVEAREA HOUSEKEEPING*/\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         LA    R0,DWORDS\n         GETMAIN R,LV=(0),LOC=BELOW\n         LR    RD,R1\n         ST    RD,K8(,R2)\n         ST    R2,K4(,RD)\n         USING XCATWMAP,RD\n         USING PSA,R0 /* Map PSA */\n         L     R4,FLCCVT /* CVT pointer */\n         DROP  R0\n         USING CVT,R4 /* Map CVT */\n         L     R4,CVTCBSP /* AMCBS pointer */\n         DROP  R4\n         USING AMCBS,R4 /* Map SP 245 key 0 */\n         L     R4,CBSCAXCN /* Pointer to CAXWA chain */\n         DROP  R4\n         USING IGGCAXWA,R4 /* Map Catalog Work Area */\nLOOKUCAT CLC   CAXCNAM(K44),=CL44'SYS1.UCATFDR.CLUSTER'\n         BE    LOCUCAT /* Yes */\n         ICM   R4,K15,CAXCHN /* Scan active catalog chain */\n         BNZ   LOOKUCAT /* Loop */\nLOCUCAT  MVC   UCATACB,CAXACB /* Save user catalog ACB ptr */\n         DROP  R4\n         XC    SVC26PRM(CTGPLEN),SVC26PRM /* Clear cat parm */\n         LA    R9,SVC26PRM /* Map parm */\n         USING CTGPL,R9\n         OI    CTGOPTN1,CTGNAME /* Ref dsect descript */\n         OI    CTGOPTN2,CTGGTNXT+CTGBOTH\n         OI    CTGOPTN3,CTGCMS+CTGAM0\n         OI    CTGOPTNS,CTGLTCAT\n         LA    R0,CTGENTP /* Req dsn area */\n         ST    R0,CTGENT ...\n         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         LA    R0,UCATACB /* Req cat area */\n         ST    R0,CTGCAT ...\n         XC    CATRESP,CATRESP /* Clear cat response area */\n         XC    CATRESP+K256,CATRESP+K256 /*Clearcat response area */\n         LA    R0,K512      /* Tell sys len */\n         STCM  R0,K3,CATRESP ...\n         LA    R0,CATRESP /* Tell sys address */\n         ST    R0,CTGWKA ...\n         MVC   CTGFLS(CTGFLSPL),CTGFLSP /* Build needed field entries*/\n         LA    RF,K4 /* Max # CTGFL entries */\n         STC   RF,CTGNOFLD /* Tell sys */\n         LA    RE,CTGFIELD /* CTGFL pointers */\n         LA    R1,CTGFLS /* Actual CTGFLs */\n         USING CTGFL,R1 /* Map */\nCTGSETL  ST    R1,K0(,RE) /* Set a CTGFL ptr */\n         SLR   R0,R0 /* Calc size of this CTGFL */\n         IC    R0,CTGFLDNO /* # of variable len fields */\n         SLL   R0,K3 /* Each var field is 8 bytes */\n         ALR   R1,R0 /* Ptr to next CTGFL in stor */\n         LA    R1,CTGFLL(,R1) /* Factor in fixed len */\n         LA    RE,K4(,RE) /* Next CTGFL ptr loc */\n         BCT   RF,CTGSETL /* Loop for all fields */\n         DROP  R1\n         MVI   CTGENTP,C' ' /* Blank out entry dsn for first call */\n         MVC   CTGENTP+K1(L'CTGENTP-K1),CTGENTP ...\n         MVC   CTGENTP(K26),=C'FDRABR.COMDISCO.WEEKDUMP.V' /*scan    */\n         MVI   CTGTYPE,C'A'    /* Nvsam code */\nCATSCANA LA    R1,SVC26PRM /* Cat serv param */\n         SVC   26 , /* Service */\n         CLM   RF,K1,=AL1(K40) /* RC 40 return */\n         BE    XRC40 /* Ignore it */\n         LTR   RF,RF /* Scan until end */\n         BNZ   CAEND ...\n         USING CTGFL,R4\nXRC40    LA    R4,RESPENTN /* Map entry name response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         MVC   CTGENTP(K44),K0(R7)  /* Als for cat scan;up key*/\n         CLC   CTGENTP(K26),=C'FDRABR.COMDISCO.WEEKDUMP.V' /*scan    */\n         BNE   CAEND end loop\n         MVC   VOLSER(K6),CTGENTP+K26 save volser\n         SLR   RF,RF /* Add binary 1 to cat scan key */\n         IC    RF,CTGENTP+K44-K1\n         LA    RF,K1(,RF) ...\n         STC   RF,CTGENTP+K44-K1\n         LA    R4,RESPOWNR /* Map ownerid response */\n         LM    R6,R7,CTGFLDAT /* Acquire len and address */\n         MVC   VOLSTAT(K1),K0(R7) save status\n         DROP  R4\n         B     CATSCANA loop\nCAEND    EQU   * *\n         SLR   R9,R9 rc\nMAINEXIT L     R2,K4(,RD)\n         LR    R1,RD\n         LA    R0,DWORDS\n         FREEMAIN R,A=(1),LV=(0)\n         LR    RD,R2\n         LR    RF,R9\n         RETURN (14,12),RC=(15)\n         DROP  R9\nCTGFLSP  DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,OWNERID,K0),(K2)AL4(K0)\n         DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nCTGFLSPL EQU   *-CTGFLSP /* Len */\nMULTITYP DC    CL8'MULTITYP'   /* CTGFL field name */\nENTNAME  DC    CL8'ENTNAME'    /* CTGFL field name */\nENTYPE   DC    CL8'ENTYPE'     /* CTGFL field name */\nOWNERID  DC    CL8'OWNERID'    /* CTGFL field name */\nNAMEDS   DC    CL8'NAMEDS'     /* CTGFL field name */\nCATACB   DC    CL8'CATACB'     /* CTGFL field name */\n         LTORG\nXCATWMAP DSECT\nSAVEAREA DC    (K18)A(K0)\nVOLSER   DC    CL6' '\nVOLSTAT  DC    CL1' '\nUCATACB  DC    A(*-*) /* Master catalog ACB ptr */\nCTGFLS   EQU   *\nRESPENTN DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTNAME,K0),(K2)AL4(K0)\nRESPENTT DC    AL1(K1),(K3)AL1(K0),AL4(K0,ENTYPE,K0),(K2)AL4(K0)\nRESPOWNR DC    AL1(K1),(K3)AL1(K0),AL4(K0,OWNERID,K0),(K2)AL4(K0)\nRESPNMDS DC    AL1(K1),(K3)AL1(K0),AL4(K0,NAMEDS,K0),(K2)AL4(K0)\nSVC26PRM DC    (CTGPLEN)AL1(K0) /* Param for catalog services */\nCTGENTP  DC    CL44' ' /* Requested dsname for cat searches */\nCATRESP  DC    CL256' ' /* Cat serv response area */\n         DC    CL256' ' /* Cat serv response area */\nDWORDS   EQU   ((((*-SAVEAREA)+K7)/K8)*K8)\n         PRINT NOGEN\n         IHAPSA\n         CVT   DSECT=YES\nAMCBS    DSECT , /* Access Method Control Block Structure */\n         ORG   AMCBS+K20\nCBSCAXCN DC    A(*-*) /* Pointer CAXWA chain */\nIGGCAXWA DSECT , /* Catalog Auxiliary Work Area */\n         ORG   IGGCAXWA+K4 /* CAXWA chain ptr */\nCAXCHN   DC    A(*-*) ...\nCAXFLGS  DC    AL1(*-*) /* Flags */\nCAXMCT   EQU   X'04' /* 1=Master Catalog, 0=User Catalog */\n         ORG   IGGCAXWA+K24\nCAXACB   DC    A(*-*)   /* Catalog acb */\n         ORG   IGGCAXWA+K28\nCAXUCB   DC    A(*-*) /* UCB pointer */\n         ORG   IGGCAXWA+K52\nCAXCNAM  DC    CL44' ' /* Catalog name */\nCTGPL    DSECT ,      /* Catalog parameter list */\nCTGOPTN1 DS    X      /* First option byte */\nCTGNAME  EQU   X'04'  /* CTGENT holds a(dsname) or a(ci#)\nCTGCNAME EQU   X'02'  /* CTGCAT hold a(cat dsname */\nCTGOPTN2 DS    X      /* Second option byte */\nCTGGTNXT EQU   X'10'  /* LISTCAT get next option */\nCTGBOTH  EQU   X'01'  /* Caller accepts ICF arch */\nCTGOPTN3 DS    X      /* Third option byte */\nCTGCMS   EQU   X'80'  /* Catalog mgmt services req */\nCTGAM0   EQU   X'01'  /* ICF/VSAM request */\nCTGOPTN4 DS    X      /* Fourth option byte */\nCTGENT   DS    A      /* Address of the catalog record id */\nCTGCAT   DS    A      /* Address cat dsname or address cat acb */\nCTGWKA   DS    A      /* Address callers workarea */\nCTGDSORG DS    XL2    /* Superlocate DSORG */\n         ORG   CTGDSORG\nCTGOPTNS DS    XL2    /* Cat management services options */\nCTGLTCAT EQU   X'20'  /* LISTCAT */\nCTGF2SEN EQU   X'01'  /* Can handle 40-2 return code */\nCTGTYPE  DS    C      /* Cat record type */\nCTGTUCAT EQU   C'U'   /* Usercat code */\nCTGTANM  EQU   C'X'   /* Alias name */\nCTGTALL  EQU   X'00'  /* Search all */\nCTGNOFLD DS    X      /* CTGFIELD entry count */\nCTGNEWNM DS    A      /* Alter new dsname ptr */\n         ORG   CTGNEWNM\nCTGFDBK  DS    XL2    /* Feedback area */\nCTGFBFLG DS    XL2    /* Superlocate flags */\nCTGJSCB  DS    A      /* JSCB  ptr */\nCTGFIELD EQU   *      /* 4 byte ptr to each CTGFL; len=4*CTGNOFLD */\nCTGPLEN  EQU   *-CTGPL+(K4*K4) /* Base len w/max4 4byte ctgfl ptrs */\nCTGFL    DSECT , /* Filed entry map */\nCTGFLDNO DS    X /* # entries in CTGFLDAT */\nCTGFLDCD DS    X /* Fl test condition */\nCTGFLDGC DS    X /* Type group code */\nCTGFLDRE DS    X /* Test results */\nCTGFLDWA DS    A /* Workarea; cat rcd field name info */\nCTGFLDNM DS    A /* Address of the field name */\nCTGFLCHN DS    A /* Address of CTGFL test or 0 */\nCTGFLDAT EQU   * /* Start of len/address pairs */\nCTGFLL   EQU   *-CTGFL\n         END\n/*\n//*L.SYSLMOD DD DSN=SYS1.TECH.COMMON.LOADLIB(XDSL),DISP=SHR,\n//* UNIT=,SPACE=\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XCOMJOB": {"ttr": 12557, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x95\\x03\\x7f\\x00\\x95\\x03\\x7f\\tC\\x00\\x13\\x00\\x13\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1995-02-06T00:00:00", "modifydate": "1995-02-06T09:43:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP0010 EXEC PGM=XCOMJOB,\n//      PARM='TYPE=SCHEDULE,CONTINUE=NO'\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSIN01  DD *\nLUSER=TECH110\nNOTIFY=TECH110\nCODE=EBCDIC\nCOMPRESS=YES\nFILETYPE=FILE\nID=XCOMXFER\nLFILE=SYS1.TECH.COMMON.PROCLIB(ABENDAID)\nLU=RSCXCOM1\nTYPE=SEND\nFILE=/XCOMTST/WPH\nFILEOPT=REPLACE\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XCOMLOAD": {"ttr": 12559, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\x14\\x1f\\x00\\x93\\x14\\x1f\\x10I\\x00\\n\\x00\\t\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-05-21T00:00:00", "modifydate": "1993-05-21T10:49:00", "lines": 10, "newlines": 9, "modlines": 0, "user": "TECH110"}, "text": "//TECH110A JOB (530000000000),'JEFFK TECH SUPPT',CLASS=S,\n//         MSGCLASS=G,NOTIFY=TECH110\n//S EXEC PGM=IEBGENER,REGION=6M\n//SYSPRINT DD SYSOUT=*,DCB=RECFM=FA\n//SYSIN    DD DUMMY\n//SYSUT1   DD DSN=TAPE.XCOM.JCL,DISP=OLD,UNIT=SILO,\n// LABEL=(1,SL,EXPDT=98000),VOL=SER=XCOMTP\n//SYSUT2   DD DSN=SYSM.XCOM.V2R2M3D.INSTALL,DISP=(NEW,CATLG),\n// SPACE=(TRK,(3,1))\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XCOMMDIR": {"ttr": 12801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x91\\x02\\x9f\\x00\\x91\\x18\\x9f\\t\\x18\\x00\\x0e\\x00\\x08\\x00\\x0e\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1991-01-29T00:00:00", "modifydate": "1991-07-08T09:18:00", "lines": 14, "newlines": 8, "modlines": 14, "user": "JEFFK"}, "text": "TYPE=SEND,\nFILETYPE=FILE,\nLU=H10T236,\nFILE=F:\\BC\\MAIN_DIR.MAP,\nFILEOPT=REPLACE,\nCODE=ASCII,\nEPRTY=255,\nSPRTY=225,\nCOMPRESS=YES,\nHOLD=NO,\nAGE=3,\nID=POLLMEMDIR,\nTRUNCATE=NO,\nRECSEP=NO\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XCOMSAMP": {"ttr": 12803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\x19?\\x00\\x93\\x19?\\x12I\\x00\\x12\\x00\\x15\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-07-12T00:00:00", "modifydate": "1993-07-12T12:49:00", "lines": 18, "newlines": 21, "modlines": 4, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STEP0010 EXEC PGM=XCOMJOB,\n//      PARM='TYPE=SCHEDULE,CONTINUE=NO'\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSIN01  DD *\nLUSER=TECH110\nNOTIFY=TECH110\nCODE=EBCDIC\nCOMPRESS=RLE\nFILETYPE=FILE\nID=TESTXCOM\nLFILE=SYS1.TECH.COMMON.PROCLIB(ABENDAID)\nLU=RSCXCOM1\nTYPE=SEND\nFILE=/XCOMTST/WPH\nFILEOPT=REPLACE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XCOMTEST": {"ttr": 12805, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00\\x00\\x00\\x93\\x14o\\x00\\x93\\x14\\x8f\\x11\\x01\\x00\\x15\\x00\\n\\x00\\x11\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "1993-05-26T00:00:00", "modifydate": "1993-05-28T11:01:00", "lines": 21, "newlines": 10, "modlines": 17, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n/*JOBPARM S=SYSB\n//STEP0010 EXEC PGM=XCOMCOMM,\n//      PARM='XCOMAPPL/TYPE=SCHEDULE,CONTINUE=NO'\n//SYSPRINT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSIN01  DD *\nLUSER=TECH110\nNOTIFY=TECH110\nCODE=EBCDIC\nCOMPRESS=YES\nFILETYPE=FILE\nID=TESTXCOM\nLFILE=SYS1.TECH.COMMON.PROCLIB(ABENDAID)\nLU=RSCXCOM1\nTYPE=SEND\nFILE=/xcomtst/wph\nFILEOPT=REPLACE\nUSERID='pyip'\nPASSWORD=yipper\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "XLIBALLS": {"ttr": 12807, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x91\\x15\\x7f\\x00\\x91\\x16\\x1f\\x14W\\x00\\xb1\\x00\\xbb\\x00\\x19\\xd1\\xc5\\xc6\\xc6\\xd2@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1991-06-06T00:00:00", "modifydate": "1991-06-10T14:57:00", "lines": 177, "newlines": 187, "modlines": 25, "user": "JEFFK"}, "text": "//JEFFKZ   JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=JEFFK,REGION=6M\n//S EXEC ASMHCL,PARM.L='XREF,LIST'\n//C.SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSIN  DD *\nLIBALLOC TITLE 'ALLOCATE LIBMASTER AS PS FILE'\nLIBALLOC CSECT , /* LIBALLOC */\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\nK0       EQU   0\nK1       EQU   1\nK2       EQU   2\nK3       EQU   3\nK4       EQU   4\nK5       EQU   5\nK6       EQU   6\nK7       EQU   7\nK8       EQU   8\nK9       EQU   9\nK10      EQU   10\nK11      EQU   11\nK12      EQU   12\nK13      EQU   13\nK14      EQU   14\nK15      EQU   15\nK16      EQU   16\nK17      EQU   17\nK18      EQU   18\nK19      EQU   19\nK20      EQU   20\nK24      EQU   24\nK28      EQU   28\nK32      EQU   32\nK36      EQU   36\nK40      EQU   40\nK44      EQU   44\nK48      EQU   48\nK52      EQU   52\nK56      EQU   56\nK60      EQU   60\nK64      EQU   64\nK68      EQU   68\nK72      EQU   72\nK76      EQU   76\nK80      EQU   80\nK84      EQU   84\nK88      EQU   88\nK92      EQU   92\nK96      EQU   96\nK255     EQU   255\nK256     EQU   256\nK512     EQU   512\nK4095    EQU   4095\nK32760   EQU   32760\nX80      EQU   X'80'\nX40      EQU   X'40'\nX20      EQU   X'20'\nX10      EQU   X'10'\nX08      EQU   X'08'\nX04      EQU   X'04'\nX02      EQU   X'02'\nX01      EQU   X'01'\nX7F      EQU   X'7F'\nXFF      EQU   X'FF'\nLIBALLOC AMODE 24\nLIBALLOC RMODE 24\n         SPLEVEL SET=2 , /* MVS/XA EXPANSION */\n         SAVE  (14,12),,LIBALLOC*&SYSDATE*&SYSTIME\n         LR    RA,RF /*ADDRESSABILITY*/\n         USING LIBALLOC,RA,RB,RC\n         LA    RB,K4095(,RA)\n         LA    RB,K1(,RB)\n         LA    RC,K4095(,RB)\n         LA    RC,K1(,RC)\n         LR    RF,RD CHAIN\n         CNOP  0,4\n         BAL   RD,*+K76\n         DC    (K18)A(K0)\n         ST    RD,K8(,RF)\n         ST    RF,K4(,RD)\n         SLR   R9,R9 RC\n         USING EFPL,R1\n         L     R2,EFPLARG ARGUMENTS TABLE\n         L     R3,EFPLEVAL EVALBLOCK PTR\n         L     R3,K0(,R3) ACTUAL EVALBLOCK PTR\n         DROP  R1\n         LM    R4,R8,K0(R2) A(DSN) L(DSN) A(MEMBER) L(MEM) XFF\n         CL    R8,=A(X'FFFFFFFF') PARMLIST END\n         BE    FMEM YES\n         CL    R6,=A(X'FFFFFFFF') PARMLIST END\n         BNE   RC4  YES\n         C     R5,=A(K44) MAX DSN LEN\n         BH    RC8\n         LTR   R5,R5 NULLS\n         BZ    RC16\n         STCM  R5,K3,PDSN+K4 DSN LEN\n         BCTR  R5,K0 PER EX\n         EX    R5,MOVEDSN\n         OI    DSNONLY,X80 SHORTEN SVC 99 LIST\n         B     DYNAM ...\nFMEM     C     R5,=A(K44) MAX DSN LEN\n         BH    RC8\n         C     R7,=A(K8) MAX MEM NAME LEN\n         BH    RC12\n         LTR   R5,R5 NULLS\n         BZ    RC16\n         LTR   R7,R7 NULLS\n         BZ    RC20\n         STCM  R5,K3,PDSN+K4 DSN LEN\n         STCM  R7,K3,PMEMB+K4 MEMBER NAME LEN\n         BCTR  R5,K0 PER EX\n         BCTR  R7,K0 PER EX\n         EX    R5,MOVEDSN\n         EX    R7,MOVEMEM\nDYNAM    LA    R1,DYNPARM SVC 99\n         SVC   99\n         LTR   R9,RF\n         BNZ   RC24 ERROR\n         USING EVALBLOCK,R3\n         LA    R0,K8 DDNAME LEN\n         ST    R0,EVALBLOCK_EVLEN\n         MVC   EVALBLOCK_EVDATA(K8),PDDN+K6\n         B     EXIT\nEXIT     LR    RF,R9 RC\n         L     RD,K4(,RD)\n         RETURN (14,12),RC=(15)\nRC24     LA    R9,K4(,R9)\nRC20     LA    R9,K4(,R9)\nRC16     LA    R9,K4(,R9)\nRC12     LA    R9,K4(,R9)\nRC8      LA    R9,K4(,R9)\nRC4      LA    R9,K4(,R9)\n         B     EXIT\nMOVEDSN  MVC   PDSNN(*-*),K0(R4)\nMOVEMEM  MVC   PMEMBN(*-*),K0(R6)\nDYNPARM  DC    X'80',AL3(S99RBP)\nS99RBP   DC    X'14010000'\n         DC    X'00000000'\n         DC    A(S99TXTP)\n         DC    8X'00'\nS99TXTP  DC    A(PDSN)\n         DC    A(PDISP)\n         DC    A(PSUBS)\n         DC    A(PDDN)\nDSNONLY  DC    A(PUNAL)\n         DC    X'80',AL3(PMEMB)\nPDDN     DC    X'005500010008',C'XXXXXXXX'\nPDSN     DC    X'00020001',AL2(*-*)\nPDSNN    DC    CL44'  '\nPDISP    DC    X'00040001000108'\nPSUBS    DC    X'005F00010003',C'LAM'\nPMEMB    DC    X'00030001',AL2(*-*)\nPMEMBN   DC    CL8' '\nPUNAL    DC    X'001C0000'\n         LTORG\n         IRXEFPL\n         IRXARGTB\n         IRXEVALB\n         IRXSHVB\n         END\n/*\n//L.SYSLMOD DD DSN=IPO1.LINKLIB(XLIBALLC),DISP=SHR,\n//  UNIT=,SPACE=\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XREFPROD": {"ttr": 12811, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01T\\x00\\x00\\x00\\x921\\x8f\\x00\\x94\\x11\\x8f\\x105\\x00-\\x00\\t\\x00-\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.84", "flags": 0, "createdate": "1992-11-13T00:00:00", "modifydate": "1994-04-28T10:35:00", "lines": 45, "newlines": 9, "modlines": 45, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n//PRODXREF EXEC JS5PROC,OPT02='DOCOPT2B'\n//STEP01.JLLOD   DD DSN=SYS1.TECH.COMMON.LOADLIB,DISP=SHR\n//STEP01.SYSIN DD *\nINPUT SELECTION\n      DSN=SYS1.PRODJCL.MASTER\n      SOURCE TYPE=LIBRARIAN-3\n      SELECT=PREFIX=PMRP\nRUN OPTIONS:\n      ACCESS CONTROL CARDS=NO,LIMIT=99\n      CAC=NO,NOVTOC,NOPGM,NOPDSMEM\n      EXIT NAME=PRODXREF\n      JLJPA PROCLIB TYPE=PDS\n      JOB LIMIT=(0,0)\n      SMS=NOACS,NOCAS\n      TEMPORARY DATA SETS=INCLUDE\n/*\n//STEP01.JLJPA DD DSN=SYS1.PRODPROC.MASTER,DISP=SHR,SUBSYS=LAM\n//             DD DSN=SYS1.TECH.COMMON.PROCLIB,DISP=SHR,SUBSYS=LAM\n//STEP01.JLKAC DD DUMMY,BLKSIZE=133\n//STEP01.JLJPF DD DSN=SYS1.PRODSYSI.MASTER,DISP=SHR,SUBSYS=LAM\n//STEP01.JLLTM DD DUMMY\n//STEP01.TECHXREF DD DSN=TECH110.TXREF1,DISP=(NEW,CATLG,DELETE),\n//  SPACE=(CYL,(9,2)),LRECL=116,RECFM=FB\n//*\n//*FDMERG EXEC PGM=IKJEFT01,PARM='%FDMERG'\n//*SYSPROC  DD DSN=SYSS.TECH.COMMON.EXECLIB,DISP=SHR\n//*SYSTSPRT DD SYSOUT=*\n//*SYSTSIN  DD DUMMY\n//*XREFIN   DD DSN=&&TXREF1,DISP=(OLD,DELETE)\n//*XREFOUT  DD DSN=&&TXREF2,DISP=(NEW,PASS,DELETE),\n//*  SPACE=(CYL,(9,2)),UNIT=VIO,LRECL=116,RECFM=FB\n//*FDSCAN   DD DSN=&&FDSCAN,DISP=(OLD,DELETE)\n//*\n//*\n//CCMERG1 EXEC PGM=IKJEFT01,PARM='%CCMERG SYS1.PRODSYSI.MASTER'\n//SYSPROC  DD DSN=TECH110.USER.CNTLLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//XREFFILE DD DSN=TECH110.TXREF1,DISP=(OLD,KEEP)\n//XREFOUT  DD DSN=TECH110.TXREF3,DISP=(NEW,CATLG,DELETE),\n//  SPACE=(CYL,(15,2)),LRECL=116,RECFM=FB\n//CCSCAN   DD DSN=TECH110.CCPROCI,DISP=(OLD,KEEP)\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XREFT2": {"ttr": 12813, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x933\\x7f\\x00\\x933\\x7f\\x11\\x19\\x00\\t\\x00$\\x00\\x07\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-12-03T00:00:00", "modifydate": "1993-12-03T11:19:00", "lines": 9, "newlines": 36, "modlines": 7, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110,REGION=8M\n/*JOBPARM S=SYSA\n//FDMERG EXEC PGM=IKJEFT01,PARM='%PXREFPRC'\n//SYSPROC  DD DSN=TECH110.USER.CNTLLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//XREFIN   DD DSN=TECH110.TXREF1,DISP=SHR\n//XREFOUT DD DSN=TECH110.TXREF2,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XREFT3": {"ttr": 12815, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x13?\\x00\\x94\\x13?\\x114\\x00\\x06\\x00\\x06\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-05-13T00:00:00", "modifydate": "1994-05-13T11:34:00", "lines": 6, "newlines": 6, "modlines": 0, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//FDSCAN   EXEC PGM=FDSCAN\n//SYSUT1  DD DSN=SYS1.PROD.BATCH.LOADLIB,DISP=SHR\n//SYSUT2  DD DSN=TECH110.FDOLD,DISP=(NEW,CATLG,DELETE),\n// SPACE=(CYL,(1,1)),LRECL=24,RECFM=FB\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XTEST": {"ttr": 12817, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x931_\\x00\\x95\\x04o\\x16E\\x00\\x10\\x00\\x0e\\x00\\x0e\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1993-11-11T00:00:00", "modifydate": "1995-02-15T16:45:00", "lines": 16, "newlines": 14, "modlines": 14, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//*CCSCAN1 EXEC PGM=CCSCANL\n//*SYSUT1 DD DSN=SYS1.PRODSYSI.MASTER,DISP=SHR,SUBSYS=LAM\n//*SYSUT2 DD DSN=TECH110.CCSCANI,DISP=(NEW,CATLG),\n//* SPACE=(CYL,(10,10)),LRECL=80,RECFM=FB\n//*SYSUDUMP DD SYSOUT=*\n//*\n//CCPROC1 EXEC PGM=IKJEFT01,PARM='%CCPROC'\n//SYSPROC  DD DSN=TECH110.USER.CNTLLIB,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSTSIN  DD DUMMY\n//OUTPUT   DD DSN=TECH110.CCPROCI,DISP=(NEW,CATLG),\n// SPACE=(CYL,(9,2)),LRECL=55,RECFM=FB\n//CCSCAN   DD DSN=TECH110.CCSCANI,DISP=(OLD,KEEP)\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZAP": {"ttr": 12819, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x933O\\x00\\x94 o\\x11\\x15\\x00\\x06\\x00\\x06\\x00\\x02\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1993-11-30T00:00:00", "modifydate": "1994-07-25T11:15:00", "lines": 6, "newlines": 6, "modlines": 2, "user": "TECH110"}, "text": "//TECH110Z JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=AMASPZAP\n//SYSPRINT DD SYSOUT=*\n//SYSLIB   DD DSN=SYS1.RAMIS.V7R2M0.LOADLIB,DISP=SHR\n//SYSIN    DD DSN=TECH110.USER.CNTLLIB(RA72236M),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZIP": {"ttr": 12821, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x95\\x18\\x7f\\x00\\x95\\x19\\x1f\\x15\"\\x00\\x0b\\x00\\x0b\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1995-07-06T00:00:00", "modifydate": "1995-07-10T15:22:00", "lines": 11, "newlines": 11, "modlines": 0, "user": "TECH110"}, "text": "//TECH110M JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//STPZIP   EXEC PGM=PKZIP\n//STEPLIB  DD DISP=SHR,DSN=SYSS.PKZIP.V2R1M1.LOADLIB\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n -ZIPCUR(TECH110.USER.CNTLLIB2)\n -ARCHIVE(TECH110.ZIP.TEST)\n -ARCHUNIT(SYSALLDA)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZKCATTST": {"ttr": 12823, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x00\\x0c\\x00\\x00\\x00\\x88\\x12o\\x00\\x93\\t_\\x102\\x00\\x0b\\x00\\x00\\x00\\x00\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "00.12", "flags": 0, "createdate": "1988-05-05T00:00:00", "modifydate": "1993-04-05T10:32:00", "lines": 11, "newlines": 0, "modlines": 0, "user": "TECH110"}, "text": "//TECH110B JOB  5301010520000000,'TECH.JEFF.KAPLAN',\n//         NOTIFY=TECH110,\n//         CLASS=S,MSGCLASS=G\n//ZEKELIST EXEC PGM=ZEKE\n//SYSPRINT DD DSN=TECH110.ZEKEOUT,DISP=(NEW,CATLG,DELETE),\n//  SPACE=(CYL,(5,2))\n//SYSIN    DD *\nLIST EVENTS JOB OCCURS WHENDETAIL LISTOCCURS LISTWHEN\n        FIELDS (TYPE JOBNAME)\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZZAP": {"ttr": 12825, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x95\\x18\\x7f\\x00\\x95\\x18\\x8f\\x18S\\x00\\x0b\\x00\\x0c\\x00\\x04\\xe3\\xc5\\xc3\\xc8\\xf1\\xf1\\xf0@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1995-07-06T00:00:00", "modifydate": "1995-07-07T18:53:00", "lines": 11, "newlines": 12, "modlines": 4, "user": "TECH110"}, "text": "//TECH110K JOB (530000000000),'TECH.JEFF.KAPLAN',\n// CLASS=S,MSGCLASS=G,MSGLEVEL=(1,1),NOTIFY=TECH110\n//S EXEC PGM=AMASPZAP,REGION=8M\n//SYSLIB DD DSN=TECH110.ML.LOADLIB,DISP=SHR\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  NAME T4XFLIC\n  REP 0226 0000,0000,0000,0000,0000,0000,0000\n  DUMPT T4XFLIC\n/* END\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT254/FILE254.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT254", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}