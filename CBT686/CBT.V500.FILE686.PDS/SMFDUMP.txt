SMFDUMP  CSECT
         PRINT ON
SMFDUMP  TITLE 'SMF DUMP ROUTINE TO DUMP - S M F - DATA SETS '
*/* DOC: THIS PROGRAM USED TO DUMP NON-EMPTY SMF DATA SETS,
*/*      THIS SAMPLE SMFDUMP IS FOR MVS VERSION 5.
***********************************************************************
*  CBT RELEASE OF CODE ORIGINALLY SHIPPED BY IBM IN SYS1.SAMPLIB      *
*  SHIPMENT CEASED AFTER OS/390 2.7                                   *
*                                                                     *
*  THIS CODE CAN BE DRIVEN BY THE IEFU29 SHIPPED AS                   *
*  SYS1.SAMPLIB(IEEU29), JUMPING TO THE CODE AT THE APPROPRIATE LABEL *
*  .V5J2 OR V5J3.                                                     *
*  THIS CAN BE ACHIEVED BY INSERTING IN IEFU29 AFTER THE CSECT CARD;  *
*      AGO     .V5J2     (FOR EXAMPLE)                                *
*                                                                     *
*  UPDATES:                                       21/07/2004   SG     *
*  - REMOVED MVS VERSION 4 DEPENDENT CODE                             *
*  - MULTILINE WTO CORRECTED TO GENERATE REQUIRED INLINE              *
*  - PRIOR TO ISSUEING "RESERVE", CHECK FOR GRS BEING ACTIVE.         *
*    IF GRS IS ACTIVE, RESERVE IS *NOT* ISSUED/DEQ'D                  *
*    IF GRS IS NOT ACTIVE, BUT THE (DASD) VOLUME IS GENNED AS         *
*    NON-SHARED THE RESERVE (AND DEQ) IS AGAIN BYPASSED               *
*  - IDENTIFIES ITSELF AS VERSION ONE RELEASE 10.                     *
*  UPDATES:                                       01/03/2006   WW     *
*  - ADDED INSTRUCTION AT DEQDONE TO CLEAR REG 0 TO ALLOW MULTI-LINE  *
*    WTO TO COME OUT                                                  *
*                                                                     *
***********************************************************************
*                                                                     *
*             MODULE NAME = SMFDUMP                                   *
*                                                                     *
*             DESCRIPTIVE NAME =                                      *
*                ROUTINE TO DUMP THE SMF DATASETS                     *
*                                                                     *
*             FUNCTION =                                              *
*                DUMP ALL FULL AND ACTIVE SMF DATA SETS               *
*                                                                     *
*                OPERATION =                                          *
*                   CHECK THAT DUMPOUT DD IS PRESENT.                 *
*                   CHECK THAT DUMPOUT DEVICE TYPE IS DISK OR TAPE    *
*                   IF ALTERNATE SMF DATASETS ARE ELIGIBLE TO         *
*                     BE DUMPED, THEN DUMP THEM                       *
*                   IF CURRENT SMF DATASET IS ELIGIBLE TO BE          *
*                     DUMPED, THEN SWITCH SMF AND DUMP WHAT WAS       *
*                     THE PRIMARY SMF DATASET                         *
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = CHARACTER SET IS EBCDIC.  REASSEMBLE *
*                    IF A DIFFERENT CHARACTER SET IS NEEDED.          *
*                                                                     *
*                 RESTRICTIONS =                                      *
*                    SMF MUST BE ACTIVE.                              *
*                    SMF DATA SETS MUST BE VSAM DATA SETS.            *
*                    DUMPOUT DEVICE MUST BE DISK OR TAPE.             *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 3  = WORK REGISTERS               *
*                    REGISTERS 4 TO 6  = UNUSED                       *
*                    REGISTER  7       = LINKAGE TO INTERNAL ROUTINES *
*                    REGISTERS 8 TO 9  = UNUSED                       *
*                    REGISTERS 10      = ADDRESSABILITY TO IEEMBRDS   *
*                                       (RECORDING DATA SET BLOCKS)   *
*                    REGISTER  11      = ADDRESSABILITY TO SMCA DSECT *
*                    REGISTER  12      = ADDRESSABILITY TO SMFDUMP    *
*                                        CSECT                        *
*                    REGISTER  13      = SAVE AREA REGISTER           *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*                PATCH LABEL = PATCH (UNUSED AND INTIALIZED TO        *
*                   BINARY ZEROES)                                    *
*                                                                     *
*             MODULE TYPE = PROCEDURE                                 *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE = LESS THAN A PAGE                       *
*                                                                     *
*                ATTRIBUTES = KEY 8, NON-REENTRANT,                   *
*                   PROBLEM PROGRAM STATE,AUTHORIZED                  *
*                                                                     *
*             ENTRY POINTS = SMFDUMP (ONLY ENTRY POINT)               *
*                                                                     *
*                LINKAGE = STANDARD OS LINKAGE CONVENTIONS            *
*                                                                     *
*             INPUT = NONE                                            *
*                                                                     *
*             OUTPUT = NONE                                           *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODES =                                       *
*                   00 = NORMAL RETURN                                *
*                   04 = NO SMF DATASETS AVAILABLE TO DUMP            *
*                   08 = IFASMFDP RETURNED NON-ZERO RETURN CODE       *
*                   12 = UNABLE TO SWITCH SMF RECORDING               *
*                   16 = DUMPOUT DD MISSING OR UCB INVALID            *
*                   20 = SMCA CANNOT BE LOCATED                       *
*                                                                     *
*             EXIT - ERROR = NONE - PROGRAM WILL RETURN WITH          *
*                CODE IN REGISTER 15                                  *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = IFASMFDP, IKJEFF18                        *
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = SMCA, CVT, GVT, UCB.                *
*                                                                     *
*                NOTE: IFASMFDP RUNS WITH RMODE=24 AND AMODE=24.      *
*                      SMFDUMP RUNS WITH RMODE=24 BECAUSE IT MUST     *
*                      PASS IFASMFDP A SAVEAREA IN 24-BIT ADDRESS     *
*                      SPACE.                                         *
*                      SMFDUMP RUNS WITH AMODE=31 TO ADDRESS THE      *
*                      RDS CONTROL BLOCK.                             *
*                                                                     *
*             TABLES = NONE                                           *
*                                                                     *
*             MACROS = SAVE, DEVTYPE, WTO, MODESET, RETURN, DYNALLOC, *
*                   STIMER, LINK, IEESMCA, IKJEFFDF.                  *
*                                                                     *
*             MESSAGES =                                              *
*                DAIRFAIL SERVICE ROUTINE IS USED TO ISSUE MESSAGES.  *
*                THOSE ISSUED BY THE COMMAND ARE FOUND FOLLOWING THE  *
*                LABEL ERRMSGS.                                       *
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
*             ADDITIONAL INFORMATION:                                 *
*                THE SMFDUMP PROGRAM WILL 'SWITCH' BETWEEN SMF        *
*                DATA SETS AND WAIT FOR THE SWITCH TO OCCUR.          *
*                THE WAIT TIME IS SET BY THE EQUATE STATEMENT         *
*                'WAITLIM' AND MAY BE CHANGED BY ADDING 60 FOR        *
*                EACH ADDITIONAL MINUTE OF WAIT TIME.                 *
*                                                                     *
***********************************************************************
         EJECT
SMFDUMP  CSECT ,                       CSECT NAME DECLARED
SMFDUMP  AMODE 31                      ADDRESS MODE,TO ADDRESS RDS
SMFDUMP  RMODE 24                      RESIDENCE MODE
*
*  CONSTANT EQUATES
*
CMDSVC   EQU   34                      SVC TO ISSUE COMMAND
ISITSP   EQU   X'80'                   HIGH-ORDER BIT CVTSMCA
*                                        TO INDICATE SP SYSTEM
DASD     EQU   X'20'                   UCB DEVICE TYPE FOR DASD DEVICES
TAPE     EQU   X'80'                   UCB DEVICE TYPE FOR TAPE DEVICES
WAITLIM  EQU   3600                    60 SECONDS/MINUTE
*                                          FOR 60 MINUTES
*
K0       EQU   0                       CONSTANT 0
K1       EQU   1                       CONSTANT 1
K2       EQU   2                       CONSTANT 2
K4       EQU   4                       CONSTANT 4
K8       EQU   8                       CONSTANT 8
K12      EQU   12                      CONSTANT 12
K15      EQU   15                      CONSTANT 15
K16      EQU   16                      CONSTANT 16
K20      EQU   20                      CONSTANT 20
*
* REGISTER EQUATES
*
R00      EQU   00
R01      EQU   01
R02      EQU   02
R03      EQU   03
R04      EQU   04
R05      EQU   05
R06      EQU   06
R07      EQU   07
R08      EQU   08
R09      EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         SAVE  (14,12),,SMFDUMP_&SYSDATE SAVE REGISTERS
         USING SMFDUMP,R12             SET UP BASE ADDRESSABILITY
         LR    R12,R15                 LOAD BASE REG WITH ENTRY POINT
         LA    R14,SAVE                GET ADDRESS OF REGISTER SAVE
         ST    R13,K4(R14)             SAVE CALLER'S SAVE AREA ADDR
         ST    R14,K8(R13)             SAVE MY SAVE AREA ADDRESS
         LR    R13,R14                 LOAD SAVE AREA ADDRESS
*
* ISSUE SMFDUMP PROGRAM STARTED MESSAGE
*
         WTO   MF=(E,MSG000)           ISSUE STARTED MESSAGE
*
* CHECK FOR DUMPOUT DD PRESENT
*
         DEVTYPE DDOUT,DEVAREA         GET DEVICE TYPE OF DUMPOUT DD
         LTR   R15,R15                 IS DUMPOUT DD PRESENT?
         BNZ   NODDOUT                 DD MISSING BR TO ERROR RTN
*
* CHECK DEVICE TYPE OF DUMPOUT DEVICE(TAPE OR DASD)
*
         CLI   DEVAREA+K2,TAPE         IS DUMPOUT A TAPE DEVICE
         BE    OKTODUMP                YES, BR TO CONTINUE PROCESSING
         CLI   DEVAREA+K2,DASD         IS DUMPOUT A DASD DEVICE
         BNE   NOCANDMP                NO, INVLAID DEVICE TYPE BR
*
* IF DASD, GET UCB ADDRESS OF DUMPOUT FOR RESERVE
*
         EXTRACT TIOTADDR,FIELDS=TIOT  GET TIOT ADDRESS
         SR    R02,R02                 CLEAR WORK REG
         L     R03,TIOTADDR            LOAD TIOT POINTER
         USING TIOT1,R03
NEXTDD   ICM   R02,1,TIOELNGH          GET LENGTH OF DD ENTRY
         BZ    NODDOUT                 END OF TIOT
         CLC   TIOEDDNM,DDOUT          IS THIS OUR DD STMT
         BE    DDFOUND                 YES - BRANCH
         LA    R03,0(R02,R03)          POINT TO NEXT DD ENTRY
         B     NEXTDD                  AND PROCESS IT
DDFOUND  MVC   OUTUCB+1(3),TIOEFSRT    SAVE UCB ADDRESS
         DROP  R03
         L     R03,OUTUCB              LOAD UCB POINTER
         USING UCBOB,R03
         CLI   UCBID,X'FF'             VALID UCB ??
         BNE   UCBERROR                NOPE - EXIT STAGE LEFT
         MVC   VOLSER(6),UCBVOLI       SAVE THE VOLSER
         TM    UCBTBYT2,UCBRR          GENNED SHARED ??
         BO    OKTODUMP                YES - DON'T FLAG
         OI    FLAG,NOTSHR             FLAG FOR LATER
*
* TEST IF THIS SYSTEM IS RUNNING MVS/SP
*
OKTODUMP EQU   *
         DROP  R03
         L     R11,CVTPTR              LOAD ADDRESS OF CVT
         USING CVTMAP,R11              TELL THE ASSEMBLER
         L     R01,CVTGVT              GET ADDRESS OF GVT
         TM    GVTGSFLG-GVT(R01),GVTGRSNA     GRS NOT ACTIVE  ???
         BO    NOGRS                   YES - MAY NEED A RESERVE ISSUED
         OI    FLAG,GRSACT             FLAG FOR LATER
*
NOGRS    EQU   *
         L     R11,CVTSMCA             GET ADDRESS OF SMCA
         LTR   R11,R11                 DOES IT EXIST   ???
         BZ    NOSMF                   NO - WE ARE NOT WANTED HERE
         DROP  R11                     FINISHED WITH CVT
         USING SMCABASE,R11            GET SMCA BASE ADDRESS
*
* DUMP ALL VSAM SMF DATA SETS THAT ARE FULL
*
         ENQ   (SMFQNAME,SMFRNAME,E,,SYSTEM) ENQ ON SMF SMFW-Q
DMPINACT MVC   ACTRDS,SMCASVCR         SAVE ACTIVE RDS
         ICM   R10,K15,SMCAFRDS        POINT TO FIRST RDS
         BZ    SMFERROR                IF SMF NOT ACTIVE, EXIT
         USING IEEMBRDS,R10
GETNSMF  TM    RDSFLG1,RDSDUMP         IS SMF DATASET FULL
         BZ    SMFBUMP                 NO - GET NEXT ONE
         MVC   SMFDSN,RDSNAME          MOVE IN  SMF  DATASET NAME
         BAL   R07,DALOC               CALL DUMP SUBROUTINE
SMFBUMP  L     R10,RDSNEXT             GET NEXT RDS
         TM    RDSFLG2,RDSLOST         IS THIS THE DUMMY RDS?
         BZ    GETNSMF                 NO-PROCESS NEXT DATA SET
*
* ALL INACTIVE SMF DATA SETS HAVE BEEN DUMPED.
* TEST IF A SWITCH OCCURED DURING DUMPING.
*
         C     R10,ACTRDS              WAS ACTIVE RDS THE DUMMY
         BE    DODEQ                   YES, THEN DEQ AND EXIT
         CLC   SMCASVCR,ACTRDS         IS SAME RDS STILL ACTIVE
         BNE   DMPINACT                NO, START ALL OVER AGN
         EJECT
*
* ISSUE OPERATOR 'SWITCH SMF' COMMAND AND WAIT FOR COMPLETION
*
SMFSWTCH DS    0H
         L     R10,SMCASVCR            GET ADDR OF ACTIVE RDS
         DROP  R11                     FINISHED WITH SMCABASE
         MODESET MF=(E,SUPRMOD)        GET IN SUPR STATE FOR SVC 34  #
         SLR   R00,R00                 CLEAR REG 0
         LA    R01,CMDISMF             GET ADDRESS OF COMMAND I SMF
         SVC   CMDSVC                  ISSUE COMMAND VIA SVC 34
         MODESET MF=(E,PROBMOD)        GET BACK IN PROB STATE
         WTO   MF=(E,MSG010)           DISPLAY SWITCHED MESSAGE
         LA    R03,WAITLIM             SET LOOP COUNTER TO WAIT TIME
CHKYX    TM    RDSFLG1,RDSDUMP         HAS SWITCH OCCURED ?
         BO    DOLAST1                 YES - DON'T WAIT
         STIMER WAIT,BINTVL=ONESEC     WAIT FOR ONE SECOND
         BCT   R03,CHKYX               LOOP BACK TO TRY AGAIN
         DEQ   MF=(E,DEQLIST)          DEQ ON SMF SMFWRITER-Q        #
         WTO   MF=(E,MSG002)           UNABLE TO SWITCH ERROR MESSAGE
         LA    R15,K12                 BAD RETURN CAN GO NO FURTHER
         B     EXITR                   RETURN TO CALLER'S CALLER
*
* DUMP ALTERNATE SMF DATASET AFTER SWITCH OCCURRED
*
DOLAST1  MVC   SMFDSN,RDSNAME          MOVE IN  SMF  DATASET NAME
         BAL   R07,DALOC               CALL RTN TO DUMP INACTIVE SMF
DODEQ    DEQ   MF=(E,DEQLIST)          DEQ ON SMF SMFWRITER-Q
*
* RETURN BACK TO CALLER
*
EXIT     SLR   R15,R15                 SET NORMAL RETURN CODE
EXITR    L     R13,K4(R13)             LOAD CALLERS SAVE AREA ADDRESS
         RETURN (14,12),RC=(15)        RETURN TO CALLER
         EJECT
*
NOSMF    WTO   MF=(E,MSG009)           ISSUE NO SP  SYSTEM MSG
         LA    R15,K20                 LOAD RETURN CODE
         B     EXITR                   BR TO EXIT
*
SMFERROR WTO   MF=(E,MSG003)           ISSUE NO DATASET TO DUMP MESSAGE
         LA    R15,K4                  LOAD RETURN CODE
         B     EXITR                   BR TO EXIT WITH RETURN CODE
*
NOCANDMP WTO   MF=(E,MSG008)           ISSUE INVALID DEVICE TYPE MSG
         LA    R15,K16                 LOAD RETURN CODE
         B     EXITR                   BR TO EXIT WITH RET. CODE
*
NODDOUT  WTO   MF=(E,MSG001)           ISSUE DUMPOUT DD MISSING MSG
         LA    R15,K16                 LOAD RETURN CODE
         B     EXITR                   BR TO EXIT WITH RET. CODE
*
UCBERROR WTO   MF=(E,MSG014)           ISSUE DUMPOUT DD MISSING MSG
         LA    R15,K16                 LOAD RETURN CODE
         B     EXITR                   BR TO EXIT WITH RET. CODE
*
*  ROUTINE TO ALLOCATE  S M F  DATASET AS DDNAME DUMPIN
*
DALOC    DS    0H                      ALLOC SUBROUTINE
         XC    FREEER(K4),FREEER       CLEAR DYNALLOC ERROR AREAS
         LA    R01,FREE                LOAD DYNALLOC PARM LIST
         DYNALLOC                      FREE DDNAME DUMPIN
         XC    ALOCER(K4),ALOCER       CLEAR DYNALLOC ERROR AREAS
         LA    R01,ALOC                LOAD PARM LIST ADDRESS
         DYNALLOC                      ALLOC  SMF  DATASET DD=DUMPIN
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   DYNERR                  IF ZERO THEN ALLOC OK
         CLI   DEVAREA+K2,DASD         IS DUMPOUT A DASD DVC
         BNE   RESDONE                 NO, DONT RESERVE
         TM    FLAG,GRSACT             GRS LOOKING AFTER US ???
         BO    NORESMSG                YES, DONT RESERVE
         TM    FLAG,NOTSHR             UCB GENNED NON-SHARE ??
         BO    NOSHRMSG                YES, DONT RESERVE
         MVC   MSG011+31(6),VOLSER     PUT VOLSER IN MESSAGE
         WTO   MF=(E,MSG011)           SAY RES NEEDED
         RESERVE MF=(E,OUTRSV)         RESERVE DUMPOUT
         B     RESDONE                 ONE MSG IS ENOUGH
NOSHRMSG EQU   *
         MVC   MSG012+42(6),VOLSER     PUT VOLSER IN MESSAGE
         WTO   MF=(E,MSG012)           SAY NON-GRS NON-SHARE
         B     RESDONE                 ONE MSG IS ENOUGH
NORESMSG EQU   *
         MVC   MSG013+29(6),VOLSER     PUT VOLSER IN MESSAGE
         WTO   MF=(E,MSG013)           SAY GRS ACTIVE
RESDONE  EQU   *
         LINK  SF=(E,LINKDUMP)         LINK TO SMF UTILITY
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   DUMPERR                 IF ZERO THEN BR TO EXIT ROUTINE
         CLI   DEVAREA+K2,DASD         IS DUMPOUT A DASD DVC
         BNE   DEQDONE                 NO, DONT DEQUEUE
         TM    FLAG,GRSACT+NOTSHR      DID WE SKIP THE RESERVE ???
         BNZ   DEQDONE                 YES, DONT DEQ
         DEQ   MF=(E,OUTDEQ)           RELEASE DUMPOUT
DEQDONE  EQU   *
         MVC   MSG2DSN,SMFDSN          SMF DATASET NAME TO MESSAGE
         SR    R00,R00                 CLEAR REG. 0
         WTO   TEXT=((MSG1,),(MSG2,)),MF=(E,MSG007)  ISSUE MSG
CHKDMP   EQU   *
         TM    RDSFLG1,RDSDUMP         HAS DUMP BEEN POSTED?
         BZR   R07                     YES - DON'T WAIT ANYMORE
         DROP  R10                     FINISHED WITH IEEMBRDS
         STIMER WAIT,BINTVL=ONESEC     WAIT FOR ONE SECOND
         B     CHKDMP                  LOOP BACK TO CHK AGAIN
*
DUMPERR  WTO   MF=(E,MSG006)           ISSUE DUMP FAILED MESSAGE
         LA    R15,K8                  SET RETURN CODE
         B     EXITR                   BR TO EXIT FROM SMFDUMP
*
DYNERR   ST    R15,DRFLR15             SAVE RETCODE FOR DAIRFAIL
         LA    R01,DRFLPARM            LOAD DAIRFAIL PARM LIST ADDRESS
         XC    DRFLPARM(DFLEN),DRFLPARM CLEAR AREA FIRST
         USING DFDSECTD,R01            SET ADDRESSIBLITY TO PARM LIST
         LA    R15,ALOCRB              GET ADDRESS OF ALLOCATION RB
         ST    R15,DFS99RBP            SAVE IN DAIRFAIL PARM LIST
         LA    R15,DRFLR15             GET ADDRESS OF SAVED REG 15
         ST    R15,DFRCP               SAVE IN DAIRFAIL PARM LIST
         LA    R15,FULL0               GET ADDRESS OF OF DUMMY F02
         ST    R15,DFJEFF02            SAVE IN DAIRFAIL PARM LIST
         LA    R15,DRFLID              GET ADDRESS OF CALLER'S FLAGS
         ST    R15,DFIDP               SAVE IN DAIRFAIL PARM LIST
         DROP  R01
         LINK  SF=(E,LINKDRFL)         LINK TO DAIRFAIL SERVICE ROUTINE
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   DRFLERR                 IF NOT ZERO THEN GOTO DRFL ERR
         WTO   MF=(E,MSG005)           ELSE ISSUE DYNALLOC FAILED MSG
         LA    R15,K12                 SET RETURN CODE
         B     EXITR                   BR TO EXIT FROM SMFDUMP
*
DRFLERR  WTO   MF=(E,MSG004)           ELSE ISSUE DAIRFAIL ERROR MSG
         LA    R15,K16                 SET RETURN CODE
         B     EXITR                   BR TO EXIT FROM SMFDUMP
         EJECT
*
*  DATA AREA
*
         DS    0D                                                    #
SAVE     DC    18F'0'                  REGISTER SAVE AREA
SMFQNAME DC    CL8'IPOSMF01'           QNAME FOR IFASMFDP      SIPO50#
SMFRNAME DC    CL7'DATASET'            RNAME FOR IFASMFDP            #
DEQLIST  DEQ   (SMFQNAME,SMFRNAME,,SYSTEM),MF=L     SMF SMFWRITER-Q  #
CMDISMF  DC    Y(12),Y(00),CL08'I SMF' COMMAND (I SMF) SVC 34 INPUT
ACTRDS   DC    F'0'                    ACTIVE RECORDING DS
TIOTADDR DC    F'0'                    ADDRESS OF TIOT
OUTRSV   RESERVE (SMFQNAME,OUTRNAME,E,,SYSTEMS),UCB=OUTUCB,MF=L
OUTDEQ   DEQ   (SMFQNAME,OUTRNAME,,SYSTEMS),MF=L RLSE DUMPOUT
OUTRNAME DC    CL7'DUMPOUT'            RNAME FOR RESERVE
OUTUCB   DC    F'0'                    UCB ADDRESS FOR RSVE
FLAG     DC    XL1'0'                  AS IT SAYS ...
GRSACT   EQU   X'80'                   ... GRS ACTIVE IN THIS IMAGE
NOTSHR   EQU   X'40'                   ... VOLSER *NOT* GENNED SHR - IN
*                                          NON-GRS THIS SAVES A RESERVE
VOLSER   DC    CL6' '                  SAVE FOR LATER
*
*  CONTROL FOR SVC 99 TO FREE DDNAME DUMPIN
*
FREE     DC    A(FREERB+X'80000000')   RB POINTER
FREERB   DS    0F                      REQUEST BLOCK FO DYNALLOC
         DC    AL1(20),AL1(02),AL2(0)  LENGTH,UNALLOC_VERB,FLAGS
FREEER   DC    AL2(0)                  ERROR CODE
FREEIN   DC    AL2(0)                  INFO CODE
         DC    A(FREETP)               TXT UNIT LIST POINTER
         DC    A(0)                    RESERVED
         DC    A(0)                    FLAGS
FREETP   CALL  ,(FREEDDN),VL,MF=L      TEXT UNIT POINTERS
FREEDDN  DC    XL2'1',XL2'1',XL2'8',CL8'DUMPIN'  FREE DDNAME=DUMPIN
*
*  CONTROL FOR SVC 99 TO ALLOCATE DDNAME DUMPIN TO  SMF DATASET NAME
*
ALOC     DC    A(ALOCRB+X'80000000')   RB POINTER
ALOCRB   DS    0F
         DC    AL1(20)                 LENGTH
         DC    AL1(01)                 ALLOC_VERB
         DC    AL2(0)                  FLAGS
ALOCER   DC    AL2(0)                  ERROR CODE
ALOCIN   DC    AL2(0)                  INFO CODE
         DC    A(ALOCTP)               TEXT UNIT LIST POINTER
         DC    A(0)                    RESERVED
         DC    A(0)                    FLAGS
ALOCTP   CALL  ,(ALOCDDN,ALOCDSN,ALOCDSP,ALOCVBS),VL,MF=L TU POINTERS
ALOCDDN  DC    XL2'1'                  TEXT UNIT FOR DDNAME
         DC    X'0001'                 NUMBER
         DC    AL2(8)                  DDNAME LENGTH
         DC    CL8'DUMPIN'             DDNAME=DUMPIN
ALOCDSN  DC    XL2'2'                  DATASET NAME KEY
         DC    X'0001'                 NUMBER
         DC    AL2(L'SMFDSN)           DATASET NAME LENGTH
SMFDSN   DC    CL44' '                 SMF DATASET NAME
ALOCDSP  DC    XL2'4'
         DC    XL2'1'
         DC    XL2'1'
         DC    XL1'08'                 DISP=SHR
ALOCVBS  DC    XL2'49'
         DC    XL2'1'
         DC    XL2'1'
         DC    XL1'58'                 RECFM=VBS
*
* PROGRAM CONSTANTS
*
ONESEC   DC    F'100'                  100 HUNDREDTHS SEC. FOR STIMER
DDOUT    DC    CL8'DUMPOUT'            OUTPUT DDNAME FOR TIOT SCAN
DEVAREA  DC    2F'0'                   OUTPUT FOR DEVTYPE MACRO
         IKJEFFDF DFDSECT=YES          DAIRFAIL PARM LIST MAP
SMFDUMP  CSECT
FULL0    DC    F'0'                    ADDRESS OF NULL IKJEFF02 ROUTINE
DRFLR15  DC    A(0)
DRFLPARM DC    XL(DFLEN)'00'
DRFLID   DC    AL1(DFWTP)
         DC    AL1(DFSVC99)
SAVEYORX DC    C' '                    SAVE AREA FOR ALT. MAN_ DATASET
*
MSG1     DC    AL2(L'MSG1TXT)
MSG1TXT  DC    C'SMFDUMP COMPLETED FOR DATASET: '
MSG2     DC    AL2(MSG2LEN)
MSG2TXT  DC    C'DSNAME='
MSG2DSN  DC    CL44' '
MSG2LEN  EQU   *-MSG2TXT
*
*
* MODESETS ISSUED
*
SUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L GET IN SUPR STATE FOR SVC 34
PROBMOD  MODESET KEY=NZERO,MODE=PROB,MF=L GET BACK IN PROB STATE
*
* LINKS ISSUED
*
LINKDRFL LINK  EP=IKJEFF18,SF=L        LINK TO DAIRFAIL SERVICE ROUTINE
LINKDUMP LINK  EP=IFASMFDP,SF=L        LINK TO IFASMFDP SMF DUMP RTN
*
* MESSAGES ISSUED
*
ERRMSGS  DS    0F
MSG000   WTO   'SMFDUMP VERSION 1 RELEASE 10 - STARTED',               X
               ROUTCDE=(11),MF=L
MSG001   WTO   'SMFDUMP DUMPOUT DD MISSING',                           X
               ROUTCDE=(11),MF=L
MSG002   WTO   'SMFDUMP SWITCH OF SMF FAILED TO OCCUR',                X
               ROUTCDE=(11),MF=L
MSG003   WTO   'SMFDUMP NO SMF DATASETS ELIGIBLE FOR DUMP',            X
               ROUTCDE=(11),MF=L
MSG004   WTO   'SMFDUMP DYNAMIC ALLOCATION FAILED, AND DAIRFAIL',      X
               ROUTCDE=(11),MF=L
MSG005   WTO   'SMFDUMP DYNAMIC ALLOCATION FAILED',                    X
               ROUTCDE=(11),MF=L
MSG006   WTO   'SMFDUMP IFASMFDP PROGRAM FAILED TO DUMP SMF',          X
               ROUTCDE=(11),MF=L
MSG007   WTO   TEXT=((MSG1,D),(MSG2,DE)),ROUTCDE=(1,2,11),MF=L
MSG008   WTO   'SMFDUMP DUMPOUT DD INVALID DEVICE TYPE ',              X
               ROUTCDE=(11),MF=L
MSG009   WTO   'SMFDUMP SMF NOT ACTIVE - SMCA MISSING',                X
               ROUTCDE=(11),MF=L
MSG010   WTO   'SMFDUMP SWITCH SMF COMMAND ISSUED',                    X
               ROUTCDE=(11),MF=L
MSG011   WTO   'SMFDUMP: GRS INACTIVE, VOL(******) RESERVED',          X
               ROUTCDE=(11),MF=L
MSG012   WTO   'SMFDUMP: GRS INACTIVE, NON-SHARED VOL(******) NOT RESERX
               VED',ROUTCDE=(11),MF=L
MSG013   WTO   'SMFDUMP: GRS ACTIVE, VOL(******) NOT RESERVED',        X
               ROUTCDE=(11),MF=L
MSG014   WTO   'SMFDUMP DUMPOUT UCB INVALID FORMAT',                   X
               ROUTCDE=(11),MF=L
*
* PATCH AREA
*
         DS    0D
MODLEN   EQU   *-SMFDUMP           EQUATE FOR MODULE LENGTH(- PATCH)
PTCHLEN  EQU   ((MODLEN+7)/8+7)/8*8 PATCH AREA LENGTH EQUATE
PTCHLNTH DC    Y(PTCHLEN)          LENGTH OF PATCH AREA
PTCHBASE DC    S(PATCH)            BASE DISPLACED ADDRESS OF PATCH
PATCH    DC    XL(32)'00'          PATCH AREA
*PATCH    DC    XL(PTCHLEN)'00'     PATCH AREA
*
         EJECT
         IEESMCA ,                 SMCA DSECT IN SYS1.AMODGEN
         EJECT ,
         IEFTIOT1 ,                TIOT MAPPING DSECT
         EJECT ,
IEEMBRDS DSECT
RDSID    DS    CL4                 CONTROL BLOCK ID
RDSNEXT  DS    F                   FORWARD CHAIN POINTER
RDSPREV  DS    F                   BACKWARD CHAIN POINTER
*
RDSFLG1  DS    X
RDSFREE  EQU   X'10'               1 - NEED TO FREE DATASET
RDSDUMP  EQU   X'08'               1 - OPER HAS BEEN TOLD TO
*                                      DUMP DS
RDSREADY EQU   X'04'               1 - DS IS OPEN AND READY
RDSCLOSE EQU   X'02'               1 - DS NEEDS TO BE CLOSED
RDSNDOP  EQU   X'01'               1 - DS NEEDS TO BE OPENED
*
RDSFLG2  DS    X
RDSLOST  EQU   X'80'               DUMMY RDS FOR LOST DATA
RDSPHYER EQU   X'40'               1 - PHYSICAL I/O ERROR
RDSLOGER EQU   X'20'               1 - LOGICAL I/O ERROR
*
RDSFLG3  DS    X                   RESERVED
RDSNLEN  DS    X                   RESERVED
RDSNAME  DS    CL44                DATASET NAME
RDSVOLID DS    CL6                 VOLUME SERIAL
         DS    CL2
RDSDDN   DS    CL8                 DDNAME RETND BY DYNALLOC
RDSCAPTY DS    F                   CAPACITY IN # OF BLOCKS
RDSNXTBL DS    F                   NUMBER OF NEXT AVAIL BLOCK
RDSBQE   DS    F                   ADDR OF BQE BEING WRITTEN
RDSAVSPC DS    F                   AVAIL SPACE FROM SHOWCB
RDSENRBA DS    F                   ENDRBA FROM SHOWCB
RDSCINV  DS    F                   CONTROL INTERVAL SIZE
RDSDOMID DS    2F                  MSG # OF DUMP MSG
RDSRPL   DS    CL76                VSAM RPL
RDSACB   DS    CL76                VSAM ACB
*
         PRINT OFF
         CVT   DSECT=YES               MAP THE CVT AREA
         PRINT ON
         ISGGVT                    GRS VECTOR TABLE
         IEFUCBOB                  UCB MAPPING
         END   SMFDUMP
