{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012253000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 4996810, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE526.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 4996810, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 4996810, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE526.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00M\\x06'", "DS1TRBAL": "b'ex'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xe3\\x00\\x08\\x03\\xe8\\x00\\n\\x00N'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Y\\x000\\x01\\x14!\\x8f\\x01\\x14!\\x8f\\x14G\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf9@@@'", "ispf": {"version": "04.89", "flags": 0, "createdate": "2014-08-06T00:00:00", "modifydate": "2014-08-06T14:47:30", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-489"}, "text": "REGULAR CBT TAPE - VERSION 489    FILE:  526\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT489.FILE526\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 15 MEMBERS COUNTED; CUMULATIVE SIZE IS 47,179 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   08/06/14    14:47:30    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE01": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00B\\x01\\x14!o\\x01\\x14!o\\x14\\x02\\x00\\x16\\x00\\x16\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-08-04T00:00:00", "modifydate": "2014-08-04T14:02:42", "lines": 22, "newlines": 22, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  Updated information for David Russell\n          creator of file 526 on CBTTAPE\nFrom:     \"David I. Russell\" <DIRussell@bcbsms.com>\nDate:     8/4/2014 11:06 AM\nTo:       \"'sbgolob@cbttape.org'\" <sbgolob@cbttape.org>\n\nSam,\n\nNote my new info on signature line.\n\nWill be providing new versions of files in 526 when able..\n\nHope all is well\n\nThanks\n\nDavid Russell\n\nSr System Programmer Tech Services\n601 664 4405\nDIRussell@bcbsms.com\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE02": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00 \\x01\\x14!\\x8f\\x01\\x14!\\x8f\\x14D\\x00 \\x00#\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2014-08-06T00:00:00", "modifydate": "2014-08-06T14:44:20", "lines": 32, "newlines": 35, "modlines": 0, "user": "SBGOLOB"}, "text": "\n              !!!!!!  PLEASE READ  !!!!!!\n                      ------ ----\n\n\nThis product has been completely replaced by the author, David\nRussell, Aug 6, 2014.  However, because of the difficulty of\ntranslating the text documentation from the new MSWORD doc members,\n$INSTDO1, $INSTDO2, AND $CMDSDOC into plain text, I am keeping the\nprevious plain text members here, and their original WORD source\nmembers.  The ISPF id's on each member should indicate what each\nmember is, and its status:\n\n\n               Member   Date       Userid\n               -------- ---------- -------\n\n               $$NOTE01 2014/08/04 SBGOLOB\n               $$NOTE02 2014/08/06 SBGOLOB\n               $CMDSDOC 2014/08/06 NEWDOC\n               $CMDSDOL 2001/07/10 OLDDOC\n               $INSTDOL 2014/08/06 OLDDOC\n               $INSTDO1 2014/08/06 NEWDOC\n               $INSTDO2 2014/08/06 NEWDOC\n               HELP     2014/08/06 RUSSELL\n               PANEL    2014/08/06 RUSSELL\n               PARMLIB  2014/08/06 RUSSELL\n               REXX     2014/08/06 RUSSELL\n               SPICMDS  2001/07/10 OLDTEXT\n               SPIINST  2001/07/10 OLDTEXT\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$CMDSDOC": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x14!\\x8f\\x01\\x14!\\x8f\\x14\\x16\\x01\\xdc\\x01\\xdc\\x00\\x00\\xd5\\xc5\\xe6\\xc4\\xd6\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-08-06T00:00:00", "modifydate": "2014-08-06T14:16:00", "lines": 476, "newlines": 476, "modlines": 0, "user": "NEWDOC"}, "mimetype": "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "datatype": "binary", "extension": ".docx"}, "$CMDSDOL": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x19\\x1f\\x01\\x01\\x19\\x1f\\x16\\x15\\x04\\xe7\\x04\\xe7\\x00\\x00\\xd6\\xd3\\xc4\\xc4\\xd6\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-07-10T00:00:00", "modifydate": "2001-07-10T16:15:00", "lines": 1255, "newlines": 1255, "modlines": 0, "user": "OLDDOC"}, "mimetype": "application/msword", "datatype": "binary", "extension": ".doc"}, "$INSTDOL": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x14!\\x8f\\x01\\x14!\\x8f\\x14&\\x03\\xa7\\x03\\xa7\\x00\\x00\\xd6\\xd3\\xc4\\xc4\\xd6\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-08-06T00:00:00", "modifydate": "2014-08-06T14:26:00", "lines": 935, "newlines": 935, "modlines": 0, "user": "OLDDOC"}, "mimetype": "application/msword", "datatype": "binary", "extension": ".doc"}, "$INSTDO1": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x14!\\x8f\\x01\\x14!\\x8f\\x14\\x16\\x02T\\x02T\\x00\\x00\\xd5\\xc5\\xe6\\xc4\\xd6\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-08-06T00:00:00", "modifydate": "2014-08-06T14:16:00", "lines": 596, "newlines": 596, "modlines": 0, "user": "NEWDOC"}, "mimetype": "application/msword", "datatype": "binary", "extension": ".doc"}, "$INSTDO2": {"ttr": 1799, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x14!\\x8f\\x01\\x14!\\x8f\\x14\\x16\\x03\\x14\\x03\\x14\\x00\\x00\\xd5\\xc5\\xe6\\xc4\\xd6\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-08-06T00:00:00", "modifydate": "2014-08-06T14:16:00", "lines": 788, "newlines": 788, "modlines": 0, "user": "NEWDOC"}, "mimetype": "application/msword", "datatype": "binary", "extension": ".doc"}, "@FILE526": {"ttr": 2058, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Y\\x00#\\x01\\x14!\\x8f\\x01\\x14!\\x8f\\x14G\\x003\\x003\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf9@@@'", "ispf": {"version": "04.89", "flags": 0, "createdate": "2014-08-06T00:00:00", "modifydate": "2014-08-06T14:47:23", "lines": 51, "newlines": 51, "modlines": 0, "user": "CBT-489"}, "text": "//***FILE 526 is from David I. Russell, and contains a security     *   FILE 526\n//*           administration interface product for CA-Top Secret.   *   FILE 526\n//*                                                                 *   FILE 526\n//*           This is a highly sophisticated package, intended      *   FILE 526\n//*           to assist Top Secret security administrators.         *   FILE 526\n//*                                                                 *   FILE 526\n//*         email:   \"David I. Russell\" <DIRussell@bcbsms.com>      *   FILE 526\n//*                                                                 *   FILE 526\n//*       The SPI panel system is a full-screen ISPF-based          *   FILE 526\n//*       system that greatly automates the standard security       *   FILE 526\n//*       administrator functions normally performed through        *   FILE 526\n//*       tedious, TSO-based syntax commands.  The system allows    *   FILE 526\n//*       you to:                                                   *   FILE 526\n//*                                                                 *   FILE 526\n//*       Edit a profile in a full screen mode,                     *   FILE 526\n//*       'disassemble' a TSS ID (or all of a resource's            *   FILE 526\n//*       permissions) to show you the commands that created it,    *   FILE 526\n//*       or create a JCL stream to duplicate a permission rule     *   FILE 526\n//*       database wide.  There are over 100 commands to quicken    *   FILE 526\n//*       TSS administration.                                       *   FILE 526\n//*                                                                 *   FILE 526\n//*       The panel, help, rexx and parmlib members are transmit    *   FILE 526\n//*       format datasets, to expand, issue the commands:           *   FILE 526\n//*                                                                 *   FILE 526\n//*       RECEIVE INDS('xxxx.xxxx.xxxx(PANEL)')                     *   FILE 526\n//*       RECEIVE INDS('xxxx.xxxx.xxxx(HELP)')                      *   FILE 526\n//*       RECEIVE INDS('xxxx.xxxx.xxxx(REXX)')                      *   FILE 526\n//*       RECEIVE INDS('xxxx.xxxx.xxxx(PARMLIB)')                   *   FILE 526\n//*                                                                 *   FILE 526\n//*          * * * *  ---------------------------  * * * *          *   FILE 526\n//*          * * * *  PLEASE READ MEMBER $$NOTE02  * * * *          *   FILE 526\n//*          * * * *  ---------------------------  * * * *          *   FILE 526\n//*                                                                 *   FILE 526\n//*       Text doc members are from the first edition of this       *   FILE 526\n//*       product.  For the most up-to-date documentation,          *   FILE 526\n//*       see members $INSTDO1 and $INSTDO2.                        *   FILE 526\n//*                                                                 *   FILE 526\n//*       System requirements for this package:                     *   FILE 526\n//*                                                                 *   FILE 526\n//*       Top Secret 5.0 or later (4.4 will probably work           *   FILE 526\n//*       but no testing has been done).                            *   FILE 526\n//*                                                                 *   FILE 526\n//*       Any user of this system must have all requisite           *   FILE 526\n//*       TOP SECRET authorities, as the package uses only          *   FILE 526\n//*       standard TOP SECRET commands.                             *   FILE 526\n//*                                                                 *   FILE 526\n//*       An ISPF/PDF  environment and the authority to             *   FILE 526\n//*       issue the LIBDEF command to change ones                   *   FILE 526\n//*       environment.  The oldest system this package has          *   FILE 526\n//*       worked on is ESA 5.2.2 .                                  *   FILE 526\n//*                                                                 *   FILE 526\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HELP": {"ttr": 2305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x14!\\x8f\\x01\\x14!\\x8f\\x14\\x15\\x04j\\x04j\\x00\\x00\\xd9\\xe4\\xe2\\xe2\\xc5\\xd3\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-08-06T00:00:00", "modifydate": "2014-08-06T14:15:00", "lines": 1130, "newlines": 1130, "modlines": 0, "user": "RUSSELL"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PANEL": {"ttr": 2570, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x01\\x19\\x1f\\x01\\x14!\\x8f\\x18\\x12\\x0b\\xb1\\n\\xe0\\x00\\x00\\xd9\\xe4\\xe2\\xe2\\xc5\\xd3\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-07-10T00:00:00", "modifydate": "2014-08-06T18:12:00", "lines": 2993, "newlines": 2784, "modlines": 0, "user": "RUSSELL"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PARMLIB": {"ttr": 3848, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x01\\x19\\x1f\\x01\\x14!\\x8f\\x18\\x12\\x0fU\\x06U\\x00\\x00\\xd9\\xe4\\xe2\\xe2\\xc5\\xd3\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-07-10T00:00:00", "modifydate": "2014-08-06T18:12:00", "lines": 3925, "newlines": 1621, "modlines": 0, "user": "RUSSELL"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "REXX": {"ttr": 5633, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x01\\x19\\x1f\\x01\\x14!\\x8f\\x18\\x12\\x81z;Q\\x00\\x00\\xd9\\xe4\\xe2\\xe2\\xc5\\xd3\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-07-10T00:00:00", "modifydate": "2014-08-06T18:12:00", "lines": 33146, "newlines": 15185, "modlines": 0, "user": "RUSSELL"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "SPICMDS": {"ttr": 18952, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x19\\x1f\\x01\\x01\\x19\\x1f\\x18\\x06\\x04\\x18\\x04\\x18\\x00\\x00\\xd6\\xd3\\xc4\\xe3\\xc5\\xe7\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-07-10T00:00:00", "modifydate": "2001-07-10T18:06:00", "lines": 1048, "newlines": 1048, "modlines": 0, "user": "OLDTEXT"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "SPIINST": {"ttr": 19461, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x19\\x1f\\x01\\x01\\x19\\x1f\\x17\\x00\\x03\\x02\\x03\\x02\\x00\\x00\\xd6\\xd3\\xc4\\xe3\\xc5\\xe7\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-07-10T00:00:00", "modifydate": "2001-07-10T17:00:00", "lines": 770, "newlines": 770, "modlines": 0, "user": "OLDTEXT"}, "text": "\n\n\n                              SPI\n               Installation and Customization Guide\n\n\n\nChapter  1\n\nInstallation Procedures\n\nSystem Requirements\n\nThere are no specific hardware requirements.\n\nSoftware requirements:\n\n* MVS 5.2.2 or above including all versions of OS/390\n* ISPF version 3.5\n* CA-Top Secret 5.0 or 5.1.  There are no known incompatabilities\n  with CA-Top Secret 4.4, but all testing has been done with\n  version 5.1\n\nInitial Installation Steps\n\nThere are no pre-installation requirements.  A summary of the\ninstallation steps are given below:\n\nStep 1: Unload the EMAILed files to your installation datasets.\nStep 2: Copy REXX EXEC TSSU to a local CLIST or REXX library or\n        include the DSNs you unloaded above in your SYSPROC or\n        SYSEXEC ISPF concatenation.\nStep 3: Determine SMFID and JESNODE of your system and create the\n        T$$xxxx member\n\nStep 4: Customize the installation datasets to your\n        installation's requirements.\n\nDetails on how to perform each step are given on the following\npages.\n\n\n\nStep 1.\n\nSave the EMAIL attachments to your hard drive as the following\nfiles:\n       rexx.xmt\n       parmlib.xmt\n       panel.xmt\n\n2 Transfer the Files to your MVS system making sure that the MVS\n  files have these attributes DSORG= PS  RECFM= FB  LRECLl= 80\n  BLKSIZE= 3120 and have at least 7 cylinders of space. Your\n  transfer program probably specifies these options in the\n  background so you may have to adjust these parameters there. This\n  would be done in  PC3270 by selecting the transfer pull down\n  option, the setup option, the define transfer setup option, and\n  specifying the above options in addition to what would normally\n  be specified for a binary transfer.  Be sure to specify a binary\n  transfer.\n\nFor the sake of example this documentation I assume that these\nare the source and resulting MVS filenames\n\nIf you change these names just note what they are for the next\nstep of the process.\n\nrexx.xmt        =====> SPI.REXX.XMIT\nparmlib.xmt     =====> SPI.PARMLIB.XMIT\npanel.xmt       =====> SPI.PANEL.XMIT\n\n3 Logon to the ISPF on the MVS system that has received the files\n  and issue the following command for each file you selected to\n  transfer specifying the names you used as output above.\n\nTSO receive indsname('SPI.REXX.XMIT')\nYou should receive the following prompt:\nDataset G104228.SPI.V5.REXX from G104228 on ????????\nEnter restore parameters or 'DELETE' or 'END' +\nReply as follows substituting your desired output dataset name\nDataset('my.output.rexxfile')\n\nStep 2.\n\nCopy member TSSU from the REXX library into a local SYSEXEC or\nSYSPROC dataset referenced in your logon procedure.  Change\nreferenced datasets inside that EXEC to reflect what you called\nyour output datasets in the above step.  The datasets named in\nthe two statements below need to be changed to reflect your local\nvalues:\n\nTHEREXX  =\"SYS3.TSS.SYSEXEC\"\nTHEPANEL =\"SYS3.TSS.PANEL\"\n\nStep 3.\n\nDetermine your SMF SYSID and your JES node name. (Your MVS\nsystems programmer can provide you this data.) Copy member\nT$$SAMP from the REXX library to a new member in the same dataset\nnamed T$$xxxx, where xxxx is your SMF SYSID.  For example, if\nyour system SMF SYSID is MVS1, copy T$$SAMP to a member named\nT$$MVS1.  The JES node will be used in the next step.\n\n\nStep 4.\n\nEdit the TSSINI and T$$xxxx Exec's in REXX library to reflect\nlocal values.  Bold variables below must be changed to reflect\nlocal values.  The other variables should work as delivered, but\nyou may opt to change them.  All variables are fully explained in\nthe next topic, The TSSINI and T$$xxxx Members.\n\nTSSINI Variables:\nRequired changes -  DSBACK, DEF, AUTHCODE , PARMLIB\nOptional changes - NEWPASS, SCALIST, SRCCMD, SRCSCR\n\nT$$xxxx Variables:\nRequired changes - DS6, JESNODE, PARMLIB\nOptional changes - DS1 DS2 DS3 DS4 DS5 ALUNIT and any TSSINI\n                   values to be overridden.\n\n\nThe TSSINI and T$$xxxx Members\n\nThese two members are REXX execs that set up each user's\nenvironment at panel initialization, and are re-executed when a\nREINIT command is issued. Values set in TSSINI will be overlaid\nby the T$$xxxx member settings if the same variable is specified\nin both places. Since these members are so highly used, it is\nimportant to create a backup prior to changing either member.\n\nChanges to the TSSINI member should only be made for variables\nthat are defined when the product arrives.  User variables should\nnot be added to TSSINI.  Values specified in TSSINI are site\nmaintained and their usage is discussed below.\n\nEditing TSSINI Member Variables\n\nTHIS_VERSION - The current panel system version.  Changing this\n     value will cause a full REINIT (which reloads all user variables)\n     to be performed (once for each user) the next time they use the\n     system.\nALUNIT  - The unit type when allocating datasets.\nAUTHNUM - The default authorization number for a user who has no\n     match in the authorization parmlib member.\nDEF - The defaults file, a partitioned dataset used for the\n     addition function.  This file is where standard department\n     authorities reside.  This filename should not have quotes\n     included.  For a detailed description of the contents of this\n     dataset, see the Add Function in the \"Customization Procedures\"\n     chapter of this guide.\nDSBACK -  A PDS used for the backup function.  This file should\n     include single quotes.  This file is a basic PDS name only, and\n     must not be a fully qualified dataset with a member name.\nPARMLIB -  A PDS used for parameter files.  This file should not\n     include single quotes.  This file is a basic PDS name only, and\n     must not be a fully qualified dataset with a member name.\nSCALIST - A valid flatfile or PDS member with a list of\n     administrator IDs that will use the panel system and their\n     authority levels.\nSRCCMD - A valid flatfile or PDS member that contains the\n     supplied command definitions.\nSRCSCR  - A valid flatfile or PDS member that contains your\n     screen definition.\nTRAPNUM - The number of lines of debug data to retain.\nUSERCMD - A valid flatfile or PDS member that contains your\n     custom command definitions that will override the delivered\n     commands.\n\nEditing T$$xxxx Member Variables\n\nNEWPASS -  The text value to be substituted for user passwords\n     during addition and conversion processing. This value will be\n     included inside the parenthesis of the Replace password\n     command.\n\nCONVOPT - Indicates where the convert function is to store\n     interim data.  The two options are DATASET or INTERNAL.  If\n     DATASET is specified then any ID being converted is first\n     listed to the DS1 dataset.  If INTERNAL is specified a dataset\n     list is not created.\n\nDS1 - A sequential file of  LRECL 80 for work dataset 1.\nDS2 - A sequential file of  LRECL 80 for output dataset 2.\nDS3 - A sequential file of  LRECL 80 for output dataset 3.\nDS4 - A sequential file of  LRECL 133 for wide report output.\nDS5 - A sequential file of  LRECL 80 for output dataset 5.\nDS6 - This is sequential file or a PDS member that contains a JCL\n     stream that supports a batch ISPSTART command.  A sample of this\n     type of JCL stream is included in member JCSOURCE of the\n     delivered parmlib.  You must change the datasets in the DS6\n     dataset to reflect valid datasets for your installation. This JCL\n     must include the delivered REXX library in the //SYSPROC DDNAME\n     concatenation.  The last line in the deck must be:\n\n//SYSTSIN  DD DATA,DLM=@@\n\nThis line of code allows instream data to be appended to the JCL\nstream by subsequent commands.  After you have customized and\nused the panel system at least once, copy your ISPF profile\ndataset to another profile dataset for use by this job.  The\n//ISPPROF DDNAME should reference this dataset.  This allows any\ncommands issued in the job to have access to local variable\nsettings.  You should recopy your ISPF profile to this dataset\neach time you make variable changes that would affect the batch\nenvironment, or whenever a new version of the SPI  software is\ninstalled.\n\nDSBACK - Same as the TSSINI value, but can be overridden here.\n\nFLATMODL - A sequential file to use as a model dataset for work\nDSN allocation.  This model dataset should be allocated with the\nattributes you want used when the panel system dynamically\ncreates new datasets for work files.\n\nJESNODE - The JES (Job Entry Subsystem) node name.\n\nMSCA - The Top Secret MSCA ACID, used for converting SCA and LSCA\n     IDs.\n\nPARMLIB -  A PDS used for parameter files.  This file should not\ninclude single quotes.  This file is a basic PDS name only, and\nmust not be a fully qualified dataset with a member name.\n\nSRCCMD - Same as the TSSINI value, but can be overridden here.\n\nSRCSCR  - Same as the TSSINI value, but can be overridden here.\n\nVARLIST - A blank deliniated list of valid profile user variables\nthat will be honored when the panel system passes variables to\nuser commands defined in the command list member. Keep in mind\nthis variable cannot be more than 255 characters long.\n\nInstallation Complete\n\nAt this point the basic product installation is complete.\nContinue with the Customization Procedures given in the next\nchapter.\n\n\n\nChapter  2\n\nCustomization Procedures\n\nThis chapter explains how you can customize the supplied\nenvironment to your site's specifications.  The topics include:\n\n* Customization Guidelines.\n* Using the Delivered Functions - such as ADD, BATCH, and WRITEDEBUG\n* Securing Commands and Defining User Authority Levels\n\nCustomization Guidelines\n\nThe variables used in the system are set in one of two REXX\nExecs: TSSINI or T$$xxxx (where xxxx represents the SYSID of the\ncurrent system).  Variables set in TSSINI are overwritten by\nvalues specified in the T$$xxxx member.  Changes to TSSINI are\nmade for variables that are set globally, while the T$$xxxx\nmember holds individual system customization.\n\nNew variables should not be added to TSSINI; they should only be\nadded to TS$$xxxx.  New variable additions made to the T$$xxxx\nmember must be comprised of two things: a variable set statement\nand a VPUT line that references the variable named in the set\nstatement.  An example is given below:\n\nJESNODE  = \"IMSJESC\"\nADDRESS ISPEXEC \"VPUT JESNODE  PROFILE\"\n\nThe delivered functions have these statements in one or both of\nthe above Execs for each required variable.  Therefore, most of\nthe delivered functions require nothing more than variable\nchanges to the T$$xxxx member.\n\nCustomizing and using the Delivered Functions\n\nSpecific customization requirements are indicated below for each\ndelivered function:\n\n* Add\n* Authrun\n* Backup\n* Batch\n* Convert\n* Delete\n* Getbackup\n* WriteDebug\n\nADD Function\n\nThe ADD function uses the DEF variable (which should be a PDS\ndataset with members formatted as mentioned below) to retrieve\nthe default authorities for each ID that is added.  During ID\naddition the department specified for the ID is used as a member\nname for retrieval from the defaults dataset.  The administrator\nmay override the default specification so that any valid member\nis used.  Below is an example of a default authority member\n(member DEFSAMP1 in the parmlib).\n\nDEPT( $DEPT$ ) TYPE(USER)\n TSS PER( $$ ) DSN($$.DSN) ACCESS(ALL)\n TSS add( $$ ) home('/u/users/$$')\n TSS PER( $$ ) TSOACCT(98000)\n TSS PER( $$ ) TSOPROC(STEPLIB)\n TSS PER( $$ ) TSOPROC(SPFLOGON)\n TSS ADD( $$ ) PROF(MVSTECH)\n TSS ADD( $$ ) PROF(CONSPROF)\n TSS ADD( $$ ) PROF(CICSPRF)\n\nLine one of the member is appended to the TSS CREATE command,\nwhich is generated by the ADD command.  The panel system CREATE\ncommand is comprised of these two lines:\n\nTSS CREATE(xxxxxx)  PASSWORD(xxxxxx ,##)      +\nNAME(' the name          ')\n\nThe first line of the defaults member is appended to this TSS\nCREATE command listed above.\n\nEach of the remaining lines are incorporated into the CREATE\nstream after variable resolution.  Currently, the only two\nvariables that are scanned for include:\n\n* $DEPT$ - The department specified on the addition panel.\n* $$           - The ACID being added.\n\nNotes:  Any valid TSO command can be issued in this stream.\nSince the %ADDLOCAL  REXX EXEC is called each time an ID is added\nby the system, this exec is a good place to include an alias\ndefinition, or any other function that needs to be performed\nexternal to the security package for a new ID.  A null function\nADDLOCAL EXEC is included in the default library.\n\nSince some administrators do not have departments in their ID\ncreation, you may wish to create a DCA/VCA/LSCA member in the\ndefaults dataset.\n\nAUTHRUN Function\n\nThis function uses the DEF variable to retrieve a valid default\nauthority member, as does the ADD function. This function can\nalso be called as a native REXX exec as part of an authority\nstream in effect chaining authority streams together. The format\nfor invoking the AUTHRUN exec is as follows:\n\n%AUTHRUN  the.defaults.dataset.stream(member)     $$\n\nNote that the $$ would be replaced by the ID being added if this\nwas part of an authority stream.\n\nBACKUP Function\n\nThis function requires you to specify the variable DSBACK and\npoint to a valid PDS.  There are no other overrides applicable to\nthis function.\n\nBATCH Function\n\nLike all functions that produce JCL as output, the BATCH function\nrequires you to specify the variable DS6 and point to a valid JCL\ndeck that supports a batch ISPSTART command.  Specific\nrequirements for this JCL deck can be found in the DS6 variable\ndescription in the topic Editing T$$xxxx Member Variables in the\n\"Installation Procedures\" chapter.\n\nCONVERT Function\n\nLike all functions that produce JCL as output this function\nrequires you to specify the variable DS6 and point to a valid JCL\ndeck that supports a batch ISPSTART command.  See the DS6\nvariable description in the topic Editing T$$xxxx Member\nVariables in the \"Installation Procedures\" chapter for specific\nrequirements of this JCL deck.\n\nDELETE Function\n\nThis function requires the variable DSBACK be specified and point\nto a valid PDS.\n\nGETBACKUP Function\n\nThis function requires the variable DSBACK be specified and point\nto a valid PDS.  There are no other overrides applicable to this\nfunction.\n\nThe WRITEDEBUG Function\n\nThis function requires the TRAPNUM variable to be a valid whole\nnumber, to indicate how many lines of debug information to keep\navailable for reference.\n\nDefining User Authority Levels and Securing Commands\n\nThe system uses an authority range of 1 - 10, with 1 being the\nlowest and 10 being the highest or most authorized level.  An  ID\ncan issue a command if it has an authority level equal to or\nhigher than the level required by a command.\n\nEach command definition has a minimum authority level defined in\nthe command definition member.  Any ID must have at least this\nauthority level to invoke that command.\n\nID authorities are defined in member ALLIDS in the delivered\nparmlib, and referenced by the variable SCALIST.  The SCALIST\nvalue is set in the TSSINI exec.  As delivered, all user IDs have\nauthority level 10-the highest level of authority.  To change a\nuser's level, update the ALLIDS member, as discussed in the\nfollowing topic.\n\nCommands are defined in member CORECMD in the delivered parmlib,\nand referenced by the variable SRCCMD.  The SRCCMD value is set\nin the TSSINI exec.\n\nTo include a new command in the system, do the following:\n\n1. Determine what security level will be required to issue the\n   command.\n\n2. Create the command description entry and include it in the\n   CORECMD member, or whatever member you are currently using.  Be\n   sure the security setting is what you determined in the previous\n   step.\n\n3. Make the command accessible to the system.  If it is a CLIST\n   or REXX EXEC, move it into an ISPF library.  If it is a load\n   module, make sure it is in the linklist or steplib concatenation\n   of your session.\n\nYou may wish to create your own separate command member that will\noverride the delivered command member. The variable USERCMD in\nTSSINI points to your own command member.\n\nUser ID Authority Definition Member (ALLIDS in PARMLIB)\n\nThis member defines user IDs and the non-default authorities you\nwish them to have from the panel system.  Default authorities are\nset by the AUTHNUM variable in TSSINI.  Each user ID that is to\nhave an authority that differs from the default authority should\nhave an entry in this ALLIDS member.\n\nWord-Dependent Parameters\n\nThe ALLIDS member includes word-dependent parameters.  There are\nno column dependencies.  The first word is checked for a match\nagainst the user ID that is using the system.  If there is a\nmatch on the first word starting in position 1, the user ID's\nauthority is set to the numeric value in word 2, and checking\ncontinues for the entire file. Words 3 and greater are never\nchecked.\n\nWhich Authority is Used with Multiple Matches?\n\nMasking is done automatically; that is, an A in the ALLIDS member\nfile will match any user ID starting with A.  Thus, there can be\nmultiple entries in the ALLIDS member which match a given user\nID. Which match determines the user ID's authority?  In all\ncases, the final match of a user ID determines the authority.\n\nFor example, suppose the ALLIDS authority member includes the\nfollowing entries:\n\nIBMUSER      10 DEFAULT\nMYID         10 MY USER ID\nYOURID       10 YOUR ID\nM             1 All M IDs\nMYID1         9 My favorite  ID\n\nIn this case, the user ID MYID would have an authority of 1,\nsince the last match found was one line 4.  The user ID MYID1\nwould have an authority of 9 since the last match found would be\non line 5.  ALLIDS should be organized with the least specific\nentries on the top of the file and the more specific entries at\nthe bottom of the file.\n\nThe Command Definition Member (CORECMD in PARMLIB)\n\nCommands are defined in member CORECMD in the delivered parmlib,\nand referenced by the variable SRCCMD.  The value of SRCCMD is\nset in the TSSINI Exec.\n\nThe command definition member is read each time that a user\ninvokes the panel system.  The delivered command member will\nfunction without any modifications.  Optional changes can be made\nif you need to add commands or change the default security\nrequirements of delivered commands.\n\nNote: It is always a good idea to make a backup copy of this\nmember prior to making changes. If you are not running in expert\ndisplay mode you probably do not want to modify any values except\nthe authnum value for preexisting commands. Any changes to the\ncommand definition member other than authority changes will not\nbe reflected in the basic panel environment.\n\nBelow is a section of the PARMLIB member CORECMD, which defines\nthe CONVERT command to the panel system.  The first line is\nmerely a comment, while the second line actually defines the\nCONVERT command to the panel system.  This member is read in word\nby word--that is, it is column independent.\n\nWord 1: Panel Command Parameter (PNLCMD)\n\nWord 1 on each line is the panel command parameter (indicated by\nthe PNLCMD header in the comment).  This must be an exact match\nwith the command entered by the user on the panel.  For example,\nthe line below will receive control when CONVERT is entered on\nthe panel system command line.\n\n* PNLCMD CMDNAME    MSG    DATA DATA2 AUTH TRAP BATCH  VARS\n CONVERT   TVER.CON  1     0      0    5   ON    2     ACID\n\nWord 2: Internal Command Parameter (CMDNAME)\n\nWord 2 on each line is the internal command parameter (indicated\nby the CMDNAME header in the comment). This is the command that\nwill be issued by the system itself internally to accomplish the\nwork that the user requested. This must be a REXX exec, CLIST, or\nload module available to this TSO user.  A special keyword is\nallowed for this parameter only, it is the TVER prefix.  This\nwill be replaced with the three-character code, which indicates\nthe security package and version level.  For example if you are\nusing *Top Secret* version 5.0 the prefix will be T50, so the\nactual REXX exec name that will invoked here is T50CON.  The TVER\nvariable is set in the TSSVERS REXX EXEC.  No other variable will\nbe interpreted in CMDNAME parameter!\n\n* PNLCMD CMDNAME    MSG    DATA DATA2 AUTH TRAP BATCH  VARS\n CONVERT   TVER.CON  1      0     0    5    ON   2     ACID\n\nWord 3: Message Parameter (MSG)\n\nWord 3 on each line is the message parameter (indicated by the\nMSG header in the comment). This determines whether at the\nconclusion of this command the panel system should retrieve the\nvariable SECRC (via an ISPEXEC VGET  PROFILE  service) and\ndisplay it on the command line as the result of the command.  The\nvalid values here are 0 or 1.  If a zero is specified the return\ncode is displayed at the conclusion of the command.  A 1 causes\nthe returned message to be displayed.\n\n* PNLCMD CMDNAME    MSG    DATA DATA2 AUTH TRAP BATCH  VARS\n CONVERT   TVER.CON  1      0     0    5    ON   2     ACID\n\nWord 4: Data Parameter (DATA)\n\nWord 4 on each line is the data parameter (indicated by the DATA\nheader in the comment). This determines whether the data field on\nthe panel must be filled in prior to invocation of this command,\nand, if so, what must be present in the field. The valid values\nhere are 0, 1, NUM, CHAR, OPTC, or OPTN, as defined in the\nfollowing table.\n\nData Parameter Values for Panel Fields\n\nValue       Definition\n\n0           Value is not required.\n1           Value must be filled in.\nNUM         Value must be numeric.\nCHAR        Value must be filled with a character value.\nOPTN        Optional value; if specified, must be numeric.\nOPTC        Optional value; if specified, it must be a character.\n\n* PNLCMD CMDNAME    MSG    DATA DATA2 AUTH TRAP BATCH  VARS\n CONVERT   TVER.CON  1      0     0    5    ON   2     ACID\n\nWord 5: Second Data Parameter (DATA2)\n\nWord 5 is exactly the same as word 4 except it refers to the\nDATA2 screen value.\n\nWord 6: Authority Parameter (AUTH)\n\nWord 6 on each line is the authority parameter (indicated by the\nAUTH header in the comment). The convert command specifies a 5 as\nits authority level.\n\n* PNLCMD CMDNAME    MSG    DATA DATA2 AUTH TRAP BATCH  VARS\n CONVERT   TVER.CON  1      0     0    5    ON   2     ACID\n\nWord 7: Out-trap Parameter (TRAP)\n\nWord 7 on each line is the out-trap parameter (indicated by the\nTRAP header in the comment). The possible values of this\nparameter are ON and OFF and LOG. When ON is specified all output\nfrom this exec is suppressed via the REXX out-trap facility. When\noff is specified any messages written are shown to the user\nimmediately. The LOG option in addition to trapping output of the\nfunction writes a one-line record to the SPI  log dataset\n(specified in the LOGDSN variable in TSSINI). Most functions\nshould specify ON or LOG and write debug only messages to the\nscreen. Suppressed messages can be viewed with the WRITEDEBUG\nfunction.\n\n* PNLCMD CMDNAME    MSG    DATA DATA2 AUTH TRAP BATCH  VARS\n CONVERT   TVER.CON  1      0     0    5    ON   2     ACID\n.\n\nWord 8: Batch Environment Setting (BATCH)\n\nWord 8 on each line is the batch environment setting ( indicated\nby the BATCH header in the comment  ). The possible values for\nthis parameter are 0, 1 or 2 .\n\n0  -  A value of 0 indicates that this command will not be issued\n      in batch mode, but that a record will be written to the\n      accrued JCL stream instead. This value is normally specified\n      for a command that updates the security database directly.\n\n1  -  A value of 1 indicates that the command is to be issued in\n      batch mode and supports a pre-opened batch file. This would\n      normally be specified for a command that writes multiple\n      updates to the batch file. This setting is used rarely and\n      usually indicates a command that is doing a large amount of\n      decision making.\n\n2  -  A value of 2 indicates that the command is to be issued\n      immediately without respect to the mode with no pre-opened\n      batch file. Any command using this setting should be a short\n      running command that performs no security updates.\n\n* PNLCMD CMDNAME    MSG    DATA DATA2 AUTH TRAP BATCH  VARS\n CONVERT   TVER.CON  1      0     0    5    ON   2     ACID\n\n\nArguments Following Word 8\n\nWords following word 8 are a list of arguments to pass to the\ninvoked routine on the command line. There are several control\ncharacters that can be included to control how the argument\nstring is created.  These control characters and their function\nare given below:\n\n_    An underscore indicates that any value that follows is a\n     literal and should not be substituted.\n\n<    The less-than sign indicates that any preceding spaces\n     should be deleted.\n\nExample 1:      If  these variables are set:\nDSBACK = SYS1.BACKUP\nACID   = MYID\nDS1    = 'TECH.MYID.C1'\nDATA   =  ABC\nDATA2  =  DEF\nthen the variable string below:\nTRAP BATCH  VARS\nON          2         DSBACK  <_( <ACID <__)   DS1   __SHR\nwould be passed as this argument:\nSYS1.BACKUP(MYID)  'TECH.MYID.C1'  SHR\n\nExample 2:      If  the same variables are set:\nDSBACK = SYS1.BACKUP\nACID   = MYID\nDS1    = 'TECH.MYID.C1'\nDATA   =  ABC\nDATA2  =  DEF\nthen the string below:\n__PER( <ACID __) __DSN(SYS1.STUF. <DATA <__. <DATA2 __) __ACCESS(ALL)\nwould be passed as this argument:\nper(MYID  )  DSN(SYS1.STUF.ABC.DEF) ACCESS(ALL)\n\n\nScreen Definition Member (CORESCR in PARMLIB)\n\nThe screen appearance can be customized to include commands that\nyou add to the panel system. Unlike the CORECMD member, the\nscreen definition member is column dependent!\n\nNote: This member is only referred to in expert mode, if you are\nnot runing in expert mode do not change this data.\n\nThere are three visible columns on the main panel that are\ndefined in the first three fields, starting in columns 1, 23 and\n41, and an authority indicator in columns 79-80.  The first three\ncolumns are shown to the user exactly as they appear in the\nscreen definition member only if the authorization level of the\nuser is equal to or above the authorization level for that line\nin the screen definition.   This allows you to customize the\nmember so that each level of authority only sees the commands\nthat they are authorized to execute.\n\nBe aware that the security authority of the command in the\ncommand definition member and the authority level defined in the\nscreen definition member must match, or the user will either see\noptions they cannot use or will not see options they are\nauthorized to use.\n\n\n\n\nA\nADD Function\n        customization guidelines        12\nArgument string control characters      22\nAuthority parameter (AUTH)\n        customization guidelines        20\n\nB\nBatch environment setting (BATCH)\n        customization guidelines        21\n\nC\nCommand definition member (CORECMD)\n        customization guidelines        17\nCustomization guidelines                11\n\nD\nData parameter (DATA)\n        customization guidelines        19\nData parameter\n        values                          19\n\nH\nHardware requirements (none)             1\n\nI\nInstallation steps                       1\nInternal command parameter (CMDNAME)\n        customization guidelines        18\n\nM\nMessage parameter (MSG)\n        customization guidelines        19\n\nO\nOut-trap parameter (TRAP)\n        customization guidelines        20\n\nP\nPanel command parameter (PNLCMD)\n        customization guidelines        17\n\nS\nScreen definition member (CORESCR)\n        customization guidelines        23\nSecond data parameter (DATA2)\n        customization guidelines        19\nSoftware requirements                    1\nSPI\n        customization                   11\n        installation steps               1\n        requirements, system             1\n\nT\nT$$SAMP\n        copy to new member T$$xxxx       5\nT$$xxxx\n        editing variables                5, 7\n        variable definitions             9\nTSSINI\n        editing variables                5, 7\n        variable definitions             7\nTSSU, copy to local SYSEXEC or SYSPROC   5\n\n\nDefining User Authority Levels and Securing Commands\n\nDefining User Authority Levels and Securing Commands\n\n2-26    SPI  Installation and Customization Guide\n\n        Customization Procedures    2-25\n\n\n\n        Customization Procedures    2-1\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT526/FILE526.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT526", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}