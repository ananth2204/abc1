{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012512000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 293930, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE633.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE633.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x06\\x11'", "DS1TRBAL": "b'=~'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\x91\\x00\\x03\\x04\\x91\\x00\\t\\x00\\x07'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04[\\x00\\x13\\x01\\x152\\x0f\\x01\\x152\\x0f\\x15S\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf1@@@'", "ispf": {"version": "04.91", "flags": 0, "createdate": "2015-11-16T00:00:00", "modifydate": "2015-11-16T15:53:13", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-491"}, "text": "REGULAR CBT TAPE - VERSION 491    FILE:  633\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT491.FILE633\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 16 MEMBERS COUNTED; CUMULATIVE SIZE IS 2,690 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   11/16/15    15:53:13    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x03\\x14\\x8f\\x01\\x03\\x14\\x8f\\x17F\\x00\\x1b\\x00\\x1b\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-05-28T00:00:00", "modifydate": "2003-05-28T17:46:30", "lines": 27, "newlines": 27, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: Updated DSPACE & FDSPACE ISPF Dialog - CBT Contribution\nDate: Tue, 27 May 2003 13:09:25 -0600\nTo: sbgolob@cbttape.org\n\nSam,\n\nHere is an updated copy of DSPACE.  I updated the code that\noriginally existed on CBT Tape 426, File 369.\n\nThe DSPACE command only had a one line update to add support for\n3380s emulated by a 2105 ESS (SHARK).  But, I rewrote the TSO\nHELP text, updated the FDSPACE panel with 4-byte UCB support,\nrelaxed (eliminated) the restrictions imposed upon the user when\nentering a volume serial number, added mount status, colorized\nthe panel and added more descriptive and meaningful panel text,\nand replaced the customized mods from PRC with general ISPF API\ncalls to use the LMDDISP service to present the user with an ISPF\n3.4 scrollable data set list.  Finally, I wrote 4 new ISPF HELP\npanels.\n\nThe code was tested on a T/REX running ISPF 5.2, TSO/E 3.3, and\nz/OS 1.3.0.  No statement of support whatsoever is implied by\nthis contribution.\n\nEnjoy.... and let me know if you have any problems reading the\nattachment.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$LOADLIB": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x14 \\x8f\\x01\\x14 \\x8f!@\\x00/\\x00/\\x00\\x00\\xd3\\xd6\\xc1\\xc4\\xd3\\xc9\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-07-27T00:00:00", "modifydate": "2014-07-27T21:40:00", "lines": 47, "newlines": 47, "modlines": 0, "user": "LOADLIB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "@FILE633": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04[\\x00\\x06\\x01\\x152\\x0f\\x01\\x152\\x0f\\x15S\\x00\\x18\\x00\\x18\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf1@@@'", "ispf": {"version": "04.91", "flags": 0, "createdate": "2015-11-16T00:00:00", "modifydate": "2015-11-16T15:53:06", "lines": 24, "newlines": 24, "modlines": 0, "user": "CBT-491"}, "text": "//***FILE 633 is from William J. Smith and contains both an updated *   FILE 633\n//*           version of the DSPACE (display DASD space) TSO        *   FILE 633\n//*           command processor, and also an ISPF front-end         *   FILE 633\n//*           driven by the CLIST called FDSPACE.                   *   FILE 633\n//*                                                                 *   FILE 633\n//*       For your convenience, a load module library in TSO XMIT   *   FILE 633\n//*       format has been included, as member $LOADLIB.             *   FILE 633\n//*                                                                 *   FILE 633\n//*       Besides the ability to list free space of the DASD        *   FILE 633\n//*       volumes that are online, the FDSPACE ISPF dialog allows   *   FILE 633\n//*       you do display the datasets on each volume.               *   FILE 633\n//*                                                                 *   FILE 633\n//*       Updated by Sam Golob to include total cylinders on each   *   FILE 633\n//*       volume.                                                   *   FILE 633\n//*                                                                 *   FILE 633\n//*       Version of DSPACE added (member DSPACEAV) fixed for EAV   *   FILE 633\n//*       volumes, but it does not work with the existing dialogs   *   FILE 633\n//*       and panels yet.  (Done by Bill Smith)                     *   FILE 633\n//*                                                                 *   FILE 633\n//*           email:  sfowjs@sbcglobal.net                          *   FILE 633\n//*                                                                 *   FILE 633\n//*           email:  sbgolob@cbttape.org                           *   FILE 633\n//*                   sbgolob@attglobal.net                         *   FILE 633\n//*                                                                 *   FILE 633\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSPACE": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00P\\x01\\x03\\x14\\x7f\\x01\\x14 \\x8f \\x17\\x02\\x83\\x02W\\x00\\x00\\xc1\\xe2\\xd4@@@@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "2003-05-27T00:00:00", "modifydate": "2014-07-27T20:17:50", "lines": 643, "newlines": 599, "modlines": 0, "user": "ASM"}, "text": "DSPACE   TITLE 'DSPACE - DISPLAY DASD SPACE INFORMATION.'\n********************************************************************\n*                                                                  *\n* NAME - DSPACE.                                                   *\n*                                                                  *\n* DESCRIPTION - TSO COMMAND TO DISPLAY AVAILABLE SPACE ON DIRECT   *\n*               ACCESS VOLUME(S).                                  *\n*                                                                  *\n* TO USE - ENTER: DSPACE VVVVVV   ,VVVVVV = A VOLSER (1-6 CHARS)   *\n*                 DSPACE UUUU     ,UUUU = A UCB ADDRESS (4 CHARS)  *\n*                 DSPACE NNNNNNNN ,NNNNNNNN = A UNITNAME (1-8 CHARS*\n*                 DSPACE STORAGE  ,FOR ALL STORAGE VOLUMES         *\n*                 DSPACE PUBLIC   ,FOR ALL PUBLIC VOLUMES          *\n*                 DSPACE PRIVATE  ,FOR ALL PRIVATE VOLUMES         *\n*                 DSPACE ONLINE   ,FOR ALL ONLINE VOLUMES (DEFAULT)*\n*                                                                  *\n*   NOTE: DSPACE ACCEPTS A MASK: DSPACE RES* OR DSPACE 3C*         *\n*         DSPACE ALSO ACCEPTS A LIST: DSPACE (VVVVVV,UUUU,...)     *\n*         -OR- A COMBINATION THEREOF: DSPACE (WORK*, SYSRES, 91*)  *\n*                                                                  *\n* LOG -                                                            *\n*   12/17/86 L01 PTW IMPLEMENTED                                   *L01\n*   05/16/95 DAV ADD 3390 TO DEVTABLE.                             *\n*   01/14/99 DAV CHANGE TO WORK WITH NEW I/O GEN, USING UCBSCAN.   *\n*                ALSO ADD 3390 DYNAMIC TO DEVTABLE.                *\n*   01/27/99 DAV CHANGE TO WORK 4 DIGIT ADDRESS AND CORRECT IXVTOC *\n*                NOT SHOWING.                                      *\n*   02/22/99 DAV CHANGE TO LSPACE MACRO (FROM THE SVC DIRECT).     *\n*                                                                  *\n*   05/16/03 WJS Added 3380 as an \"Emulated 2105 Shark Device\" to  *\n*                the devtable.                                     *\n*                Major updates to the accompanying ISPF FDSPACE    *\n*                dialog largely in support of 4-byte UCBs.         *\n*                Tested on a T/REX using z/OS 1.3, TSO/E 3.3.0,    *\n*                and ISPF 5.2.0.                                   *\n*                                                                  *\n*   07/27/14 SBG Added display of the total number of cylinders    *\n*                on each volume.  It's nice to know how much       *\n*                space is left on a pack, but it's also important  *\n*                to know how big the pack is in the first place,   *\n*                especially if you're dealing with minidisks.      *\n*                EAV support is only partial as yet, and has not   *\n*                been tested.                                      *\n*                                                                  *\n********************************************************************\n         EJECT\n* ------------------------------------------------------------------- *\n         MACRO\n.*     --------------------------------------\n.*     DISPLAY HEX VALUES IN CHARACTER FORMAT\n.*     --------------------------------------\n&NAME    HEX   &TO,&LEN,&FROM\n&NAME    DS    0H\n         ST    R9,SAVER9A               Save area for BAL register\n         STM   R15,R1,HEXSAVE           Save work registers\n         LA    R1,&FROM                 Load from address\n         LA    R0,&LEN                  Load number of chars to move\n         LA    R15,&TO                  Load to address\n         BAL   R9,HEX                   Go to routine - do the work\n         LM    R15,R1,HEXSAVE           Restore work registers\n         L     R9,SAVER9A               Restore BAL register\n         MEND\n* ------------------------------------------------------------------- *\n********************************************************************\n*                                                                  *\n*        I N I T I A L I Z E                                       *\n*                                                                  *\n********************************************************************\n         LCLC  &CSECT\n&CSECT   SETC  'DSPACE'\n&CSECT   CSECT\n&CSECT   AMODE 31\n&CSECT   RMODE ANY\nR0       EQU   00\nR1       EQU   01\nR2       EQU   02                 WORK\nR3       EQU   03                 WORK\nR4       EQU   04                 WORK\nR5       EQU   05                 WORK\nR6       EQU   06                 WORK\nR7       EQU   07                 UCB ADR\nR8       EQU   08                 LSPACE PARM ADR\nR9       EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12                 PROGRAM BASE.\nR13      EQU   13                 A(SAVE AREA).\nR14      EQU   14\nR15      EQU   15\n*\nDOSAVE   EQU   *\n         SAVE  (14,12),,&CSECT--&SYSDATE--&SYSTIME\n         LR    R12,R15            ESTABLISH BASE.\n         USING &CSECT,R12         TELL ASSEMBLER.\n         GETMAIN RU,LV=DYNLEN     DYNAMIC AREA.\n         EJECT\nDOPTRS   EQU   *\n         LR    R2,R13             SAVE AREA\n         LR    R13,R1               SWITCH.\n         USING DYNAMIC,R13        TELL ASSEMBLER.\n         LR    R0,R1\n         LA    R1,DYNLEN\n         LA    R14,R0\n         SLR   R15,R15\n         MVCL  R0,R14             ZERO STORAGE.\n         ST    R2,4(,R13)         BACK CHAIN.\n         ST    R13,8(,R2)         FORWARD CHAIN.\n         XC    RC,RC\n         L     R2,4(,R13)\n         L     R2,24(,R2)         R2 = A(PARMLIST).\n         USING CPPL,R2            CONSTRUCT TSO CONTROL BLOCKS.\n         MVC   MYIOPB(IOPBLEN),XIOPB INITIALIZE DYNAMIC IOPB.\n         LA    R3,MYPPL           BUILD PPL.\n         USING PPL,R3\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         LA    R4,ECB\n         ST    R4,PPLECB\n         MVC   PPLPCL,=A(MYPCL)\n         LA    R4,MYANS\n         ST    R4,PPLANS\n         MVC   PPLCBUF,CPPLCBUF\n         XC    PPLUWA,PPLUWA\n         DROP  R3\n         LA    R3,MYIOPL          BUILD IOPL.\n         USING IOPL,R3\n         MVC   IOPLUPT,CPPLUPT\n         MVC   IOPLECT,CPPLECT\n         LA    R4,ECB\n         ST    R4,IOPLECB\n         LA    R4,MYIOPB\n         ST    R4,IOPLIOPB\n         DROP  R2,R3\n         MVC   OUTAREA(4),=AL2(OUTAREAL,0) INITIALIZE PUTLINE MSG.\n         CALLTSSR EP=IKJPARS,MF=(E,MYPPL) CALL PARSE.\n         LTR   R15,R15\n         BNZ   BADPARS\n         L     R2,MYANS           R2 = A(PDL FROM PARSE)\n         USING MYPDL,R2\n         LA    R2,VOLUMES         R2 = A(VOLUME POSITIONAL PDE).\n         DROP  R2\n         XC    COUNT,COUNT\n         XC    SCANWORK,SCANWORK  CLEAR SCANWORK AREA\n         XC    UCBCOPY,UCBCOPY    CLEAR UCBCOPY  AREA\n         XC    UCBEXTN,UCBEXTN    CLEAR UCBEXTN  AREA\n         MVI   DCETEXT,X'00'      START CLEAR OF DCE AREA\n         MVC   DCETEXT+1(L'DCETEXT-1),DCETEXT\n         LA    R8,LSPCPRMW        -> R8 TO LSPACE PARM WORKAREA       |\n         USING LSPCPRM,R8         R8 = A(LSPACE PARM WORKAREA)        |\n         LA    R0,LSPCMSG         GET ADR TO LSPCMSG                  |\n         ST    R0,LSPCMSGA        STORE IT IN LSPCMSGA                |\n         EJECT\n********************************************************************\n*                                                                  *\n*        G E T   1 S T   T H I N G   I N   L I S T                 *\n*                                                                  *\n********************************************************************\nLOOPPDE  DS    0H\n         MVI   TYPE,0\n         MVI   TRY,0\n         MVI   ATTR,0\n         ST    R2,PDEADDR         SAVE A(PDE).\n         MVI   VALUE,C' '\n         MVC   VALUE+1(L'VALUE-1),VALUE\n         L     R3,0(,R2)          R3 = A(PDE).\n         LH    R4,4(,R2)          R5 = L'VALUE.\n         STH   R4,VALUELEN\n         BCTR  R4,R0\n         EX    R4,MVCVALUE\n         CLC   =C'STORAGE ',VALUE CHECK FOR STORAGE.\n         BNE   NOTSTOR\n         OI    TYPE,STORAGE\n         MVI   ATTR,UCBBSTR\n         B     DOSCAN\nNOTSTOR  DS    0H\n         CLC   =C'PUBLIC ',VALUE CHECK FOR PUBLIC.\n         BNE   NOTPUB\n         OI    TYPE,PUBLIC\n         MVI   ATTR,UCBBPUB\n         B     DOSCAN\nNOTPUB   DS    0H\n         CLC   =C'PRIVATE ',VALUE CHECK FOR PRIVATE.\n         BNE   NOTPRIV\n         OI    TYPE,PRIVATE\n         MVI   ATTR,UCBBPRV\n         B     DOSCAN\nNOTPRIV  DS    0H\n         CLC   =C'ONLINE ',VALUE CHECK FOR ONLINE.\n         BNE   ENDONL\n         OI    TYPE,ONLINE\n         B     DOSCAN\nENDONL   DS    0H\n         CLC   VALUELEN,=H'6'     IF L'VALUE > 6, CAN ONLY BE UNITNAME.\n         BH    TRYUNIT\n         CLC   VALUELEN,=H'2'     IF L'VALUE < 2, TRY UNITNAME.\n         BL    TRYUNIT\n         OI    TRY,VOLUME         SPECIFY TRY FOR VOLUME.\n         LH    R4,VALUELEN\n         BCTR  R4,0\n         LA    R5,VALUE(R4)\n         CLI   0(R5),C'*'\n         BNE   NOTMASK\n         OI    TRY,MASK\n         STH   R4,VALUELEN\n         EJECT\nNOTMASK  DS    0H\n         CLC   VALUELEN,=H'4'     IF L'VALUE > 4, CAN'T BE UCB.       |\n         BH    DOSCAN\n         OI    TRY,UCB\n         B     DOSCAN\n         SPACE 3\n         SPACE 3\n********************************************************************\n*                                                                  *\n*        G E T   N E X T   T H I N G   I N   L I S T               *\n*                                                                  *\n********************************************************************\nNEXTPDE  DS    0H\n         XC    SCANWORK,SCANWORK  CLEAR SCANWORK AREA\n         XC    UCBCOPY,UCBCOPY    CLEAR UCBCOPY  AREA\n         XC    UCBEXTN,UCBEXTN    CLEAR UCBEXTN  AREA\n         MVI   DCETEXT,X'00'      START CLEAR OF DCE AREA\n         MVC   DCETEXT+1(L'DCETEXT-1),DCETEXT\n         L     R2,PDEADDR         GET NEXT ENTRY IS PARSE LIST.\n         L     R2,8(,R2)\n         CL    R2,=X'FF000000'    IF NO MORE, RETURN.\n         BNE   LOOPPDE\n         EJECT\n********************************************************************\n*                                                                  *\n*        R E T U R N                                               *\n*                                                                  *\n********************************************************************\nRETURN   DS    0H\n         IKJRLSA MYANS\n         L     R2,RC                  R2 = RC.\n         LR    R1,R13              PREPARE\n         L     R13,4(,R13)           FOR FREEMAIN.\n         FREEMAIN RU,LV=DYNLEN,A=(1)\n         LR    R15,R2              AND RETURN\n         RETURN (14,12),RC=(15)      WITH R15 = RC.\n         EJECT\n********************************************************************\n*                                                                  *\n*        U C B   S C A N                                           *\n*                                                                  *\n********************************************************************\nDOSCAN   DS    0H\n         UCBSCAN COPY,                                                 C\n               WORKAREA=SCANWORK,                                      C\n               UCBAREA=UCBCOPY,                                        C\n               CMXTAREA=UCBEXTN,                                       C\n               DCEAREA=DCETEXT,                                        C\n               DCELEN=DCELENTH,                                        C\n               DYNAMIC=YES,                                            C\n               RANGE=ALL,                                              C\n               DEVCLASS=DASD,                                          C\n               DEVNCHAR=DEVNAME,                                       C\n               RETCODE=RETCODE,                                        C\n               RSNCODE=RSNCODE,                                        C\n               MF=(E,UCBSCANL)\n         LTR   R15,R15            CHECK THE RETURN CODE.\n         BNZ   ENDSCAN            IF NOT 0, ASSUME NO MORE TO SCAN\nDOSCAN1  DS    0H\n         LA    R3,UCBCOPY         GET ADR OF UCB\n         LA    R7,UCBCOPY         GET ADR OF UCB\n         USING UCBDSECT,R7        TELL ASM\n         TM    TRY,VOLUME         IF WE ARE TO TRY FOR VOLUME,\n         BZ    NOTVOL\n         LA    R4,L'UCBVOLI-1     ASSUME FULL LENGTH COMPARE...\n         TM    TRY,MASK             UNLESS A MASK WAS SPECIFIED.\n         BZ    *+10\n         LH    R4,VALUELEN\n         BCTR  R4,0\n         EX    R4,CLCVOLI\n         BNE   NOTVOL\n         OI    TYPE,VOLUME\n         B     SCANSPAC\nNOTVOL   DS    0H\n         TM    TRY,UCB            IF WE ARE TO TRY FOR UCB,\n         BZ    NOTUCB\n         LA    R4,L'DEVNAME-1     ASSUME FULL LENGTH COMPARE...       |\n         TM    TRY,MASK             UNLESS A MASK WAS SPECIFIED.\n         BZ    *+10\n         LH    R4,VALUELEN\n         BCTR  R4,0\n         EX    R4,CLCNAME\n         BNE   NOTUCB\n         OI    TYPE,UCB\n         B     SCANSPAC\nNOTUCB   DS    0H\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE\n         BZ    NOTATTR            IF ATTRIBUTE COMPARE, DO IT.\n         SLR   R4,R4\n         IC    R4,ATTR\n         EX    R4,TMATTR\n         BO    SCANSPAC\n         B     DOSCAN\nNOTATTR  DS    0H\n         TM    TYPE,ONLINE        IF NO ONLINE REQUEST,\n         BZ    DOSCAN               GET NEXT UCB.\nSCANSPAC DS    0H\n* --> below\n         XC    DCECYLS,DCECYLS\n         MVC   DCECYLS(2),DCETEXT+18\n* --> above\n         BAL   R10,DOLSPACE       GO DO LSPACE.\n         TM    TYPE,VOLUME+UCB    IF WE HIT ON SINGLE REQUEST,\n         BZ    DOSCAN               ALL DONE.\n         TM    TRY,MASK           UNLESS IT WAS A MASK REQUEST.\n         BO    DOSCAN\nENDSCAN  DS    0H\n         CLI   TYPE,0             IF WE HAVE A HIT,\n         BNE   NEXTPDE              GO DO NEXT.\n         EJECT\n********************************************************************\n*                                                                  *\n*        U N I T   R E Q U E S T                                   *\n*                                                                  *\n********************************************************************\nTRYUNIT  DS    0H\n         MVC   UNITNAME,VALUE     INIT LISTS FO IEFEB4UV.\n         XC    UNITLIST,UNITLIST\n         XC    UNITATTR,UNITATTR\n         MVI   UNITFLG,X'10'\n         LINK  EP=IEFEB4UV,PARAM=(UNITTAB,UNITFLG),MF=(E,UNITPARM)\n         LTR   R15,R15            IF RC \u00ac= 0,\n         BNZ   ENDUNIT              ASSUME NOT A UNITNAME.\n         OI    TYPE,UNIT\n         L     R2,UNITLIST\n         L     R4,4(,R2)          R4 = # UCBS IN RETURNED LIST.\n         L     R3,8(,R2)          R3 = A(UCB).\n         LA    R2,8(,R2)          R2 = A(THIS UCB ENTRY IN TABLE).\nUNITLOOP DS    0H\n         BAL   R10,DOLSPACE\n         LA    R2,4(,R2)          R2 = A(NEXT UCB ENTRY IN TABLE).\n         L     R3,0(,R2)          R3 = A(NEXT UCB).\n         BCT   R4,UNITLOOP        LOOP.\n         L     R2,UNITLIST\n         L     R0,0(,R2)\n         FREEMAIN R,LV=(0),A=(R2) FREEMAIN IEFEB4UV STORAGE.\n         B     NEXTPDE\nENDUNIT  DS    0H\n         B     BADREQ             CAN'T IDENTIFY REQUEST.\n         EJECT\n********************************************************************\n*        D O   L S P A C E   S V C ( 7 8 )                         *\n********************************************************************\nDOLSPACE DS    0H\n         LH    R0,COUNT           PUT OUT HEADER FOR 1ST REQ ONLY.\n         AH    R0,=H'1'\n         STH   R0,COUNT\n         CH    R0,=H'1'\n         BNE   NOHDR\n         PUTLINE OUTPUT=(OUTHDR,SINGLE,DATA),MF=(E,MYIOPL)\nNOHDR    DS    0H\n         MVI   OUTAREA+4,C' '     FORMAT OUTPUT LINE.\n         MVC   OUTAREA+5(OUTAREAL-5),OUTAREA+4\n         MVC   OUTUCB,DEVNAME                                         |\n         TM    UCBSTAT,UCBONLI    IF UCB NOT ONLINE,\n         BZ    BADONL               GO TO ERROR ROUTINE.\n         TM    UCBSTAT,UCBCHGS+UCBUNLD NO FUNNY STATUS.\n         BNZ   BADUCB\n         MVC   OUTVOL,UCBVOLI\nGETDEVT  EQU   *\n         MVC   OUTDEVT(5),=C'???? ' MOVE IN SKELETON\n         LA    R6,DEVTABLE         POINT TO OUR TABLE\nDEVLOOP  EQU   *\n         CLI   0(R6),X'FF'         ARE WE AT END OF TABLE?\n         BE    ENDOTAB             IF SO, WE WILL KNOW\n         CLC   0(4,R6),UCBTYP      DO WE MATCH?\n         BE    GOTDEVT\n         A     R6,=F'09'           MOVE ALONG IN TABLE\n         B     DEVLOOP             LOOP BACK\nGOTDEVT  EQU   *\n         MVC   OUTDEVT(5),4(R6)    MOVE IN ITS NAME\nENDOTAB  EQU   *\n         TM    UCBSTAB,UCBBPRV     CHK IF MOUNTED PRIV\n         BO    PRTPRIV\n         TM    UCBSTAB,UCBBPUB     CHK IF MOUNTED PUB\n         BO    PRTPUB\n         TM    UCBSTAB,UCBBSTR     CHK IF MOUNTED STRG\n         BO    PRTSTRG\n         MVC   OUTATTR,=C'????'    NOT MOUNTED NORMALLY\n         B     CONTPRT\nPRTPRIV  MVC   OUTATTR,=C'PRIV'    IS MOUNTED PRIVATE\n         B     CONTPRT\nPRTPUB   MVC   OUTATTR,=C'PUB '    IS MOUNTED PUBLIC\n         B     CONTPRT\nPRTSTRG  MVC   OUTATTR,=C'STRG'    IS MOUNTED STORAGE\n*\nCONTPRT  EQU   *\n*        LR    R0,R7              R0 = A(UCB).\n*        LA    R1,LSPCMSG         R1 = A(MSG AREA).\n*        SVC   78                 DO LSPACE.\n         MVI   LSPCPRMW,X'00'     START CLEAR OF LSPACE PARM WORKAREA |\n         MVC   LSPCPRMW+1(L'LSPCPRMW-1),LSPCPRMW    FINISH CLEAR      |\n         MVC   LSPCPRMW,LSPCPRMT  COPY PARM TEMPLATE TO WORKAREA      |\nLSPCEXEC LSPACE EXPMSG=LSPCMSG,                                        C\n               F4DSCB=0,                                               C\n               SMF=NONE,                                               C\n               UCB=(R7),                                               C\n               MF=(E,LSPCPRM)\n         LTR   R15,R15            IF BAD RC,\n         BNZ   BADSVC78             GO TO ERROR ROUTINE.\n         MVC   OUTSPACE(L'LSPCMSG),LSPCMSG\n         CVAFTST UCB=(R7)         CHECK FOR INDEXED VTOC.\n         CH    R15,=H'8'          IF RC = 8, WE'RE INDEXED.\n         BNE   CONTPRT1\n         MVI   OUTINDEX,C'I'\nCONTPRT1 EQU   *\n*  NUMBER OF CYLINDERS   -   below\n         ST    R7,SAVER7A             Save R7 again.\n         ST    R11,SAVER11A           Save R11 too.\n         LA    R7,DCETEXT             Load the stored DCE address.\n         XR    R11,R11                Clear R11.\n         ICM   R11,B'0011',X'12'(R7)  Put in the complete low halfword.\n*                                     DCEUDCYL                      V14\n*debug*  HEX   LINE+80,2,X'12'(R7)    Move unit address to display. V14\n         CLM   R11,B'0011',=X'FFFE'   ? more than 65,520 cylinders  V14\n         BNE   SHOW_CYL               no, display this value        V14\n*                                                                   V14\n****     ICM   R11,B'1111',X'38'(R7)  get DCEHICY or                V14\n         ICM   R11,B'1111',X'34'(R7)  get DCEUDCY                   V14\n*                                                                   V14\nSHOW_CYL DS    0H                                                   V14\n         CVD   R11,CVDAREA            Convert to packed decimal.\n         MVC   CYLCNT,CVDAREA+4       Store for safekeeping.\n         MVC   OUTCYLW(9),MASK9       Move in mask.\n         ED    OUTCYLW(9),CVDAREA+4   Print the display number.\n         MVC   OUTCYLS(7),OUTCYLW+2   Chop hi order 2 bytes\n         L     R11,SAVER11A           Restore saved R11.\n         L     R7,SAVER7A             Restore saved R7.\n*  NUMBER OF CYLINDERS   -   above\n         PUTLINE OUTPUT=(OUTAREA,SINGLE,DATA),MF=(E,MYIOPL)\n         BR    R10\n         EJECT\n********************************************************************\n*        E R R O R S                                               *\n********************************************************************\nBADPARS  DS    0H                 BAD PARSE.\n         MVC   RC,=F'12'\n         LA    R15,MSGPARS\n         LA    R10,RETURN\n         B     DOMSG\nBADREQ   DS    0H                 CAN'T IDENTIFY REQUEST.\n         MVC   RC,=F'8'\n         LA    R15,MSGREQ\n         LA    R10,NEXTPDE\n         B     DOMSG\nBADONL   DS    0H                 UCB NOT ONLINE.\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE+ONLINE\n         BNZ   RETMSG             FOR ABOVE REQUESTS, IGNORE ERROR.\n         MVC   OUTSPACE(L'MSGONL),MSGONL\n         LA    R15,OUTAREA\n         B     DOMSG\nBADUCB   DS    0H                 FUNNY STATUS.\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE+ONLINE\n         BNZ   RETMSG             FOR ABOVE REQUESTS, IGNORE ERROR.\n         MVC   OUTSPACE(L'MSGUCB),MSGUCB\n         LA    R15,OUTAREA\n         B     DOMSG\nBADSVC78 DS    0H                 BAD LSAPCE RC.\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE+ONLINE\n         BNZ   RETMSG             FOR ABOVE REQUESTS, IGNORE ERROR.\n         MVC   OUTSPACE(L'MSGSVC78),MSGSVC78\n         LA    R10,NEXTPDE\n         B     DOMSG\nDOMSG    DS    0H\n         PUTLINE OUTPUT=((R15),SINGLE,DATA),MF=(E,MYIOPL)\nRETMSG   DS    0H\n         BR    R10\n         EJECT\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\nHEX      MVC   1(1,R15),0(R1)         Move byte\n         UNPK  0(3,R15),1(2,R15)      Unpack\n         TR    0(2,R15),HEXTAB-240    Translate\n         LA    R15,2(,R15)            Increment output pointer\n         LA    R1,1(,R1)              Increment input pointer\n         BCT   R0,HEX                 Decrement length, then loop\n         MVI   0(R15),C' '            Blank the trailing byte\n         BR    R9                     Return to caller\nHEXTAB   DC    C'0123456789ABCDEF'    Translate table\n         SPACE\n* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\n********************************************************************\n*                                                                  *\n*        S T A T I C   A R E A                                     *\n*                                                                  *\n********************************************************************\nMVCVALUE MVC   VALUE(*-*),0(R3)\nCLCVOLI  CLC   UCBVOLI(*-*),VALUE        COMPARE VOLSER.\nCLCNAME  CLC   DEVNAME(*-*),VALUE        COMPARE EBCDIC UCB NAME.     |\nTMATTR   TM    UCBSTAB,*-*\n*\nMASK9    DC    XL9'402020202020202120' Mask for no of cyls display\n*\n         DS    0F\nDCELENTH DC    AL2(L'DCETEXT)\nMSGONL   DC    C'OFFLINE'\nMSGUCB   DC    C'SPACE COULD NOT BE DETERMINED.'\nMSGSVC78 DC    C'LSPACE SVC ERROR, IGNORED.'\nMSGPARS  DC    AL2(MSGPARSL,0)\n         DC    C'TSO PARSE ERROR, PROGRAM TERMINATED.'\nMSGPARSL EQU   *-MSGPARS\nMSGREQ   DC    AL2(MSGREQL,0)\n         DC    C'VOLSER, UCB, OR UNIT NOT FOUND, IGNORED.'\nMSGREQL  EQU   *-MSGREQ\n*\nXIOPB    PUTLINE MF=L\nIOPBLEN  EQU   *-XIOPB\nMYPCL    IKJPARM DSECT=MYPDL\n*\nVOLUMES  IKJIDENT  VOLUME,LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,CHAR,     X\n               MAXLNTH=8,DEFAULT='ONLINE'\n*\n         IKJENDP\n*\nOUTHDR   DC    AL2(OUTHDRL,0)\n         DC    C'VOL    '\n         DC    C'  '\n         DC    C'UNIT '\n         DC    C'DEVT  '\n         DC    C'ATTR '\n         DC    C'      '\n         DC    C'  #CYL '                                             |\n         DC    C'  #TRK '                                             |\n         DC    C'  #EXT '                                             |\n         DC    C' CYL-C '                                             |\n         DC    C' TRK-C '                                             |\n         DC    C'TOTCYL'\nOUTHDRL  EQU   *-OUTHDR\n*\n         LTORG *\n*\nSRCLEVEL DC    C'                                        '\n*\n* DEVICE TABLE\n*\nDEVTABLE EQU   *\n         DC    X'3010200E',C'3380 '\n         DC    X'3030200E',C'3380 '    EMULATED 3380 2105 SHARK DEV\n         DC    X'3010200F',C'3390 '    3390 \"NORMAL\"\n         DC    X'3030200F',C'3390 '    3390 DYNAMIC\n         DC    X'FFFFFFFF'             END OF TABLE\n*\nLSPCPRMT LSPACE MF=L              LSPACE PARM TEMPLATE                |\n         EJECT\n********************************************************************\n*                                                                  *\n*        D Y N A M I C   A R E A                                   *\n*                                                                  *\n********************************************************************\nDYNAMIC  DSECT\nSAVE     DS    18F .\nSAVER7A  DS    F\nSAVER9A  DS    F\nSAVER11A DS    F\nCVDAREA  DS    D\nRC       DS    F\nECB      DS    F\nMYANS    DS    A\nPDEADDR  DS    A\nMYCPPL   DS    0F,CL(CPPLLEN)\nMYPPL    DS    0F,CL(PPLLEN)\nMYIOPL   DS    0F,CL(IOPLLEN)\nMYIOPB   DS    0F,CL(IOPBLEN)\nCOUNT    DS    H\nVALUELEN DS    H\nVALUE    DS    CL8\nCYLCNT   DS    PL4                    Saved cyliner count (not used)\nOUTAREA  DS    0F,AL2,AL2\nOUTVOL   DS    CL6,CL1\nOUTINDEX DS    CL1,CL1\nOUTUCB   DS    CL4,CL1                                                |\nOUTDEVT  DS    CL5,CL1\nOUTATTR  DS    CL4,CL1\nOUTSPACE DS    CL50\n         ORG   OUTSPACE+41\nOUTCYLS  DS    CL7\nOUTAREAL EQU   *-OUTAREA\nOUTCYLW  DS    CL9\n* IEFEB4UV PARM LIST.\nUNITPARM DS    2A                     IEFEB4UV PARM LIST\nUNITTAB  DS    0F                     UNIT TABLE\nUNITNAME DS    CL8                    UNITNAME (INPUT TO IEFEB4UV)\nUNITLIST DS    F                      UNITNAME LIST ADDR (OUTPUT)\nUNITATTR DS    F                      DON'T PROVIDE ATTRIBUTE LIST\nUNITFLG  DS    X                      IEFEB4UV PARM LIST\n* END IEFEB4UV PARM LIST.\nTYPE     DS    X\nTRY      DS    X\nPRIVATE  EQU   X'01'\nSTORAGE  EQU   X'02'\nPUBLIC   EQU   X'04'\nVOLUME   EQU   X'08'\nUCB      EQU   X'10'\nUNIT     EQU   X'20'\nONLINE   EQU   X'40'\nMASK     EQU   X'80'\nATTR     DS    X\n*\n         DS    0D\n         UCBSCAN MF=(L,UCBSCANL)\n         DS    0D\nSCANWORK DS    CL100    WORK AREA USED BY THE UCBSCAN SERVICES\n         DS    0D\nUCBCOPY  DS    48C      UCB COMN SEGMENT & DEVICE DEPENDENT SEGMENT\n         DS    0D\nUCBEXTN  DS    36C      UCB COMN EXTENTION SEGMENT\nRETCODE  DS    F        RETURN CODE USED BY UCBSCAN SERVICES\nRSNCODE  DS    F        REASON CODE USED BY UCBSCAN SERVICES\nDEVNAME  DS    CL4      DEVICE NUMBER ASSOCIATED WITH UCB.\nDCETEXT  DS    XL256    DCE AREA\nDCECYLS  DS    H        NUMBER OF CYLINDERS ON VOLUME\n*\n* LSPACE ITEMS\n*\nLSPCMSGA DS    A                                                      |\nLSPCPRMW DS    XL(LSPAEND-LSPCPRM) LSPACE PARM WORKAREA               |\nLSPCMSG  LSPACE MF=(L,EXPMSG)                                         |\n*\nDYNLEN   EQU   *-DYNAMIC\n         TITLE 'DSPACE - MACRO LSPACE PARM LIST'\nLSPCPRM  LSPACE MF=D                                                  |\n         TITLE 'DSPACE - MACRO IKJCPPL'\n         IKJCPPL\nCPPLLEN  EQU   *-CPPL\n         TITLE 'DSPACE - MACRO IKJPPL'\n         IKJPPL\nPPLLEN   EQU   *-PPL\n         TITLE 'DSPACE - MACRO IKJIOPL'\n         IKJIOPL\nIOPLLEN  EQU   *-IOPL\n         SPACE 3\n         TITLE 'DSPACE - MACRO IHAPSA'\n         IHAPSA LIST=YES\n         TITLE 'DSPACE - MACRO CVT'\n         CVT   DSECT=YES,LIST=YES\n         TITLE 'DSPACE - MACRO UCB'\nUCBDSECT DSECT\n         IEFUCBOB LIST=YES\n         END   &CSECT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSPACE$": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\t\\x00\\x994/\\x01\\x14 \\x8f \"\\x00\\x1c\\x00\\x1d\\x00\\x00\\xc1\\xe2\\xd4\\xd1\\xc3\\xd3@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1999-12-08T00:00:00", "modifydate": "2014-07-27T20:22:09", "lines": 28, "newlines": 29, "modlines": 0, "user": "ASMJCL"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=A,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.B.ASM(DSPACE)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETCODE AC(0)\n SETSSI  CB489633\n NAME    DSPACE(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSPACEAV": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x14\\x01\\x14)/\\x01\\x152\\x0f\\x15P\\x02\\xd0\\x02\\xce\\x00\\x00\\xc5\\xc1\\xe5@@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2014-10-19T00:00:00", "modifydate": "2015-11-16T15:50:14", "lines": 720, "newlines": 718, "modlines": 0, "user": "EAV"}, "text": "//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//******************************************************************\n//*                                                                *\n//*   FIXED FOR EAV VOLUMES, BUT NOT FOR THE FDSPACE DIALOG YET    *\n//*                                                                *\n//******************************************************************\n//ASM      EXEC PGM=ASMA90,\n//         PARM='OBJECT,NODECK,RENT'\n//SYSPRINT  DD  SYSOUT=*\n//SYSPUNCH  DD  DUMMY\n//SYSLIB    DD  DISP=SHR,DSN=SYS1.MACLIB\n//          DD  DISP=SHR,DSN=SYS1.MODGEN\n//SYSUT1    DD  UNIT=SYSALLDA,SPACE=(TRK,(2,1))\n//SYSLIN    DD  UNIT=SYSALLDA,SPACE=(TRK,(2,1)),DSN=&&OBJMOD,\n//     DCB=(RECFM=FB,LRECL=80,BLKSIZE=0,DSORG=PS),\n//     DISP=(,PASS,DELETE)\n//SYSIN     DD  *\nDSPACE   TITLE 'DSPACE - DISPLAY DASD SPACE INFORMATION'\n********************************************************************\n*                                                                  *\n* NAME - DSPACE                                                    *\n*                                                                  *\n* DESCRIPTION - TSO COMMAND TO DISPLAY AVAILABLE SPACE ON ONLINE   *\n*               DIRECT ACCESS STORAGE DEVICES                      *\n*                                                                  *\n* TO USE - ENTER: DSPACE VVVVVV   ,VVVVVV = A VOLSER (1-6 CHARS)   *\n*                 DSPACE UUUU     ,UUUU = A UCB ADDRESS (4 CHARS)  *\n*                 DSPACE NNNNNNNN ,NNNNNNNN = A UNITNAME (1-8 CHARS*\n*                 DSPACE STORAGE  ,FOR ALL STORAGE VOLUMES         *\n*                 DSPACE PUBLIC   ,FOR ALL PUBLIC VOLUMES          *\n*                 DSPACE PRIVATE  ,FOR ALL PRIVATE VOLUMES         *\n*                 DSPACE ONLINE   ,FOR ALL ONLINE VOLUMES (DEFAULT)*\n*                                                                  *\n*   NOTE: DSPACE ACCEPTS A MASK: DSPACE RES* OR DSPACE 3C*         *\n*         DSPACE ALSO ACCEPTS A LIST: DSPACE (VVVVVV,UUUU,...)     *\n*         -OR- A COMBINATION THEREOF: DSPACE (WORK*, SYSRES, 91*)  *\n*                                                                  *\n* LOG -                                                            *\n*   12/17/86 L01 PTW IMPLEMENTED                                   *L01\n*   05/16/95 DAV ADD 3390 TO DEVTABLE.                             *\n*   01/14/99 DAV CHANGE TO WORK WITH NEW I/O GEN, USING UCBSCAN.   *\n*                ALSO ADD 3390 DYNAMIC TO DEVTABLE.                *\n*   01/27/99 DAV CHANGE TO WORK 4 DIGIT ADDRESS AND CORRECT IXVTOC *\n*                NOT SHOWING.                                      *\n*   02/22/99 DAV CHANGE TO LSPACE MACRO (FROM THE SVC DIRECT).     *\n*                                                                  *\n*   05/16/03 WJS Added 3380 as an \"Emulated 2105 Shark Device\" to  *\n*                the devtable.                                     *\n*                Major updates to the accompanying ISPF FDSPACE    *\n*                dialog largely in support of 4-byte UCBs.         *\n*                Tested on a T/REX using z/OS 1.3, TSO/E 3.3.0,    *\n*                and ISPF 5.2.0.                                   *\n*                                                                  *\n*   10/07/14 WJS EAV Support on z/OS 2.1 JES2 HJE7790              *\n*                This code remains UNTESTED on pre-z/OS 2.1 images *\n*                with or without EAVs.                             *\n*                                                                  *\n*                Caveats:  This code supports the 95 byte extended *\n*                expanded return area contents. The non-EAV DSPACE *\n*                supported the 40 byte return area.  The output    *\n*                header was expanded to display the free space     *\n*                statistics from the track-managed space of the    *\n*                volume.  Consequently, the output will WRAP on a  *\n*                3270 in mod 2,3,4 flavors with an 80 column       *\n*                screen width.  If this code is executed from TSO  *\n*                READY mode under control of the Session Manager,  *\n*                it SHOULD format correctly with no wrapping.  I   *\n*                was unable to test this code at the time with TSO *\n*                Session Manager.  If the output header is incor-  *\n*                rectly aligned, change the code at label OUTHDR.  *\n*                The ISPF support remains to be reworked: It will  *\n*                not work as currently written (panel and CLIST)   *\n*                due to changes in the offsets of the returned     *\n*                results and the content being displayed.          *\n*                                                                  *\n*                What was changed? Very Little - just made it work *\n*                  1. Changed the LIST and EXECUTE forms of the    *\n*                     LSPACE macro invocations from EXPMSG to      *\n*                     XEXPMSG and added PLISTVER=MAX.  That's it.  *\n*                  2. Increased the value of the variable OUTSPACE *\n*                     from 50 to 120.  It's used by PUTLINE after  *\n*                     a MVC moves it from the return area.  If it  *\n*                     is too small, the TMS free space statistics  *\n*                     will be truncated upon display.  I over-     *\n*                     allocated it by 25% just as the 16 bit code  *\n*                     did.                                         *\n*                  3. No changes were made to the HELP. This needs *\n*                     to be done to document the meaning of the    *\n*                     new headers.                                 *\n*                  4. In the process of working on the code I      *\n*                     discovered errors in the DFSMSdfp Advanced   *\n*                     Service manual.  IBM was notified of the     *\n*                     errors on page 33 that describe the XEXPMSG  *\n*                     returned results.                            *\n*                                                                  *\n* REF - IBM z/OS Hot Topics Newsletter, Issue 20, March 2009,      *\n*       \"LSPACE: Above and Beyond\", pp. 36-38, by Keith Cowden,    *\n*       Jan Redding, and William Smith,                            *\n*       http://publibz.boulder.ibm.com/epubs/pdf/e0z2n191.pdf      *\n*                                                                  *\n*     - z/OS V2R21.0 DFSMSdfp Advanced Sevices, SC23-6861-01       *\n*                                                                  *\n********************************************************************\n         EJECT\n********************************************************************\n*                                                                  *\n*        I N I T I A L I Z E                                       *\n*                                                                  *\n********************************************************************\n         LCLC  &CSECT\n&CSECT   SETC  'DSPACE'\n&CSECT   CSECT\n&CSECT   AMODE 31\n&CSECT   RMODE ANY\nR0       EQU   00\nR1       EQU   01\nR2       EQU   02                 WORK\nR3       EQU   03                 WORK\nR4       EQU   04                 WORK\nR5       EQU   05                 WORK\nR6       EQU   06                 WORK\nR7       EQU   07                 UCB ADR\nR8       EQU   08                 LSPACE PARM ADR\nR9       EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12                 PROGRAM BASE.\nR13      EQU   13                 A(SAVE AREA).\nR14      EQU   14\nR15      EQU   15\n*\nDOSAVE   EQU   *\n         SAVE  (14,12),,&CSECT--&SYSDATE--&SYSTIME\n         LR    R12,R15            ESTABLISH BASE.\n         USING &CSECT,R12         TELL ASSEMBLER.\n         GETMAIN RU,LV=DYNLEN     DYNAMIC AREA.\n         EJECT\nDOPTRS   EQU   *\n         LR    R2,R13             SAVE AREA\n         LR    R13,R1               SWITCH.\n         USING DYNAMIC,R13        TELL ASSEMBLER.\n         LR    R0,R1\n         LA    R1,DYNLEN\n         LA    R14,R0\n         SLR   R15,R15\n         MVCL  R0,R14             ZERO STORAGE.\n         ST    R2,4(,R13)         BACK CHAIN.\n         ST    R13,8(,R2)         FORWARD CHAIN.\n         XC    RC,RC\n         L     R2,4(,R13)\n         L     R2,24(,R2)         R2 = A(PARMLIST).\n         USING CPPL,R2            CONSTRUCT TSO CONTROL BLOCKS.\n         MVC   MYIOPB(IOPBLEN),XIOPB INITIALIZE DYNAMIC IOPB.\n         LA    R3,MYPPL           BUILD PPL.\n         USING PPL,R3\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         LA    R4,ECB\n         ST    R4,PPLECB\n         MVC   PPLPCL,=A(MYPCL)\n         LA    R4,MYANS\n         ST    R4,PPLANS\n         MVC   PPLCBUF,CPPLCBUF\n         XC    PPLUWA,PPLUWA\n         DROP  R3\n         LA    R3,MYIOPL          BUILD IOPL.\n         USING IOPL,R3\n         MVC   IOPLUPT,CPPLUPT\n         MVC   IOPLECT,CPPLECT\n         LA    R4,ECB\n         ST    R4,IOPLECB\n         LA    R4,MYIOPB\n         ST    R4,IOPLIOPB\n         DROP  R2,R3\n         MVC   OUTAREA(4),=AL2(OUTAREAL,0) INITIALIZE PUTLINE MSG.\n         CALLTSSR EP=IKJPARS,MF=(E,MYPPL) CALL PARSE.\n         LTR   R15,R15\n         BNZ   BADPARS\n         L     R2,MYANS           R2 = A(PDL FROM PARSE)\n         USING MYPDL,R2\n         LA    R2,VOLUMES         R2 = A(VOLUME POSITIONAL PDE).\n         DROP  R2\n         XC    COUNT,COUNT\n         XC    SCANWORK,SCANWORK  CLEAR SCANWORK AREA\n         XC    UCBCOPY,UCBCOPY    CLEAR UCBCOPY  AREA\n         XC    UCBEXTN,UCBEXTN    CLEAR UCBEXTN  AREA\n         MVI   DCETEXT,X'00'      START CLEAR OF DCE AREA\n         MVC   DCETEXT+1(L'DCETEXT-1),DCETEXT\n         LA    R8,LSPCPRMW        -> R8 TO LSPACE PARM WORKAREA\n         USING LSPCPRM,R8         R8 = A(LSPACE PARM WORKAREA)\n         LA    R0,LSPCMSG         GET ADR TO LSPCMSG\n         ST    R0,LSPCMSGA        STORE IT IN LSPCMSGA\n         EJECT\n********************************************************************\n*                                                                  *\n*        G E T   1 S T   T H I N G   I N   L I S T                 *\n*                                                                  *\n********************************************************************\nLOOPPDE  DS    0H\n         MVI   TYPE,0\n         MVI   TRY,0\n         MVI   ATTR,0\n         ST    R2,PDEADDR         SAVE A(PDE).\n         MVI   VALUE,C' '\n         MVC   VALUE+1(L'VALUE-1),VALUE\n         L     R3,0(,R2)          R3 = A(PDE).\n         LH    R4,4(,R2)          R5 = L'VALUE.\n         STH   R4,VALUELEN\n         BCTR  R4,R0\n         EX    R4,MVCVALUE\n         CLC   =C'STORAGE ',VALUE CHECK FOR STORAGE.\n         BNE   NOTSTOR\n         OI    TYPE,STORAGE\n         MVI   ATTR,UCBBSTR\n         B     DOSCAN\nNOTSTOR  DS    0H\n         CLC   =C'PUBLIC ',VALUE CHECK FOR PUBLIC.\n         BNE   NOTPUB\n         OI    TYPE,PUBLIC\n         MVI   ATTR,UCBBPUB\n         B     DOSCAN\nNOTPUB   DS    0H\n         CLC   =C'PRIVATE ',VALUE CHECK FOR PRIVATE.\n         BNE   NOTPRIV\n         OI    TYPE,PRIVATE\n         MVI   ATTR,UCBBPRV\n         B     DOSCAN\nNOTPRIV  DS    0H\n         CLC   =C'ONLINE ',VALUE CHECK FOR ONLINE.\n         BNE   ENDONL\n         OI    TYPE,ONLINE\n         B     DOSCAN\nENDONL   DS    0H\n         CLC   VALUELEN,=H'6'     IF L'VALUE > 6, CAN ONLY BE UNITNAME.\n         BH    TRYUNIT\n         CLC   VALUELEN,=H'2'     IF L'VALUE < 2, TRY UNITNAME.\n         BL    TRYUNIT\n         OI    TRY,VOLUME         SPECIFY TRY FOR VOLUME.\n         LH    R4,VALUELEN\n         BCTR  R4,0\n         LA    R5,VALUE(R4)\n         CLI   0(R5),C'*'\n         BNE   NOTMASK\n         OI    TRY,MASK\n         STH   R4,VALUELEN\n         EJECT\nNOTMASK  DS    0H\n         CLC   VALUELEN,=H'4'     IF L'VALUE > 4, CAN'T BE UCB.       |\n         BH    DOSCAN\n         OI    TRY,UCB\n         B     DOSCAN\n         SPACE 3\n********************************************************************\n*                                                                  *\n*        G E T   N E X T   T H I N G   I N   L I S T               *\n*                                                                  *\n********************************************************************\nNEXTPDE  DS    0H\n         XC    SCANWORK,SCANWORK  CLEAR SCANWORK AREA\n         XC    UCBCOPY,UCBCOPY    CLEAR UCBCOPY  AREA\n         XC    UCBEXTN,UCBEXTN    CLEAR UCBEXTN  AREA\n         MVI   DCETEXT,X'00'      START CLEAR OF DCE AREA\n         MVC   DCETEXT+1(L'DCETEXT-1),DCETEXT\n         L     R2,PDEADDR         GET NEXT ENTRY IS PARSE LIST.\n         L     R2,8(,R2)\n         CL    R2,=X'FF000000'    IF NO MORE, RETURN.\n         BNE   LOOPPDE\n         EJECT\n********************************************************************\n*                                                                  *\n*        R E T U R N                                               *\n*                                                                  *\n********************************************************************\nRETURN   DS    0H\n         IKJRLSA MYANS\n         L     R2,RC                  R2 = RC.\n         LR    R1,R13              PREPARE\n         L     R13,4(,R13)           FOR FREEMAIN.\n         FREEMAIN RU,LV=DYNLEN,A=(1)\n         LR    R15,R2              AND RETURN\n         RETURN (14,12),RC=(15)      WITH R15 = RC.\n         EJECT\n********************************************************************\n*                                                                  *\n*        U C B   S C A N - Unauthorized - Must use COPY option     *\n*                                                                  *\n********************************************************************\nDOSCAN   DS    0H\n         UCBSCAN COPY,                                                 C\n               WORKAREA=SCANWORK,                                      C\n               UCBAREA=UCBCOPY,                                        C\n               CMXTAREA=UCBEXTN,                                       C\n               DCEAREA=DCETEXT,                                        C\n               DCELEN=DCELENTH,                                        C\n               DYNAMIC=YES,                                            C\n               RANGE=ALL,                                              C\n               DEVCLASS=DASD,                                          C\n               DEVNCHAR=DEVNAME,                                       C\n               RETCODE=RETCODE,                                        C\n               RSNCODE=RSNCODE,                                        C\n               MF=(E,UCBSCANL)\n         LTR   R15,R15            CHECK THE RETURN CODE.\n         BNZ   ENDSCAN            IF NOT 0, ASSUME NO MORE TO SCAN\nDOSCAN1  DS    0H\n         LA    R3,UCBCOPY         GET ADR OF UCB\n         LA    R7,UCBCOPY         GET ADR OF UCB\n         USING UCBDSECT,R7        TELL ASM\n         TM    TRY,VOLUME         IF WE ARE TO TRY FOR VOLUME,\n         BZ    NOTVOL\n         LA    R4,L'UCBVOLI-1     ASSUME FULL LENGTH COMPARE...\n         TM    TRY,MASK             UNLESS A MASK WAS SPECIFIED.\n         BZ    *+10\n         LH    R4,VALUELEN\n         BCTR  R4,0\n         EX    R4,CLCVOLI\n         BNE   NOTVOL\n         OI    TYPE,VOLUME\n         B     SCANSPAC\nNOTVOL   DS    0H\n         TM    TRY,UCB            IF WE ARE TO TRY FOR UCB,\n         BZ    NOTUCB\n         LA    R4,L'DEVNAME-1     ASSUME FULL LENGTH COMPARE...       |\n         TM    TRY,MASK             UNLESS A MASK WAS SPECIFIED.\n         BZ    *+10\n         LH    R4,VALUELEN\n         BCTR  R4,0\n         EX    R4,CLCNAME\n         BNE   NOTUCB\n         OI    TYPE,UCB\n         B     SCANSPAC\nNOTUCB   DS    0H\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE\n         BZ    NOTATTR            IF ATTRIBUTE COMPARE, DO IT.\n         SLR   R4,R4\n         IC    R4,ATTR\n         EX    R4,TMATTR\n         BO    SCANSPAC\n         B     DOSCAN\nNOTATTR  DS    0H\n         TM    TYPE,ONLINE        IF NO ONLINE REQUEST,\n         BZ    DOSCAN               GET NEXT UCB.\nSCANSPAC DS    0H\n         BAL   R10,DOLSPACE       GO DO LSPACE.\n         TM    TYPE,VOLUME+UCB    IF WE HIT ON SINGLE REQUEST,\n         BZ    DOSCAN               ALL DONE.\n         TM    TRY,MASK           UNLESS IT WAS A MASK REQUEST.\n         BO    DOSCAN\nENDSCAN  DS    0H\n         CLI   TYPE,0             IF WE HAVE A HIT,\n         BNE   NEXTPDE              GO DO NEXT.\n         EJECT\n*******************************************************************\n*                                                                 *\n*        U N I T   R E Q U E S T                                  *\n*                                                                 *\n*******************************************************************\nTRYUNIT  DS    0H\n         MVC   UNITNAME,VALUE     INIT LISTS FO IEFEB4UV.\n         XC    UNITLIST,UNITLIST\n         XC    UNITATTR,UNITATTR\n         MVI   UNITFLG,X'10'\n         LINK  EP=IEFEB4UV,PARAM=(UNITTAB,UNITFLG),MF=(E,UNITPARM)\n         LTR   R15,R15            IF RC ^= 0,\n         BNZ   ENDUNIT              ASSUME NOT A UNITNAME.\n         OI    TYPE,UNIT\n         L     R2,UNITLIST\n         L     R4,4(,R2)          R4 = # UCBS IN RETURNED LIST.\n         L     R3,8(,R2)          R3 = A(UCB).\n         LA    R2,8(,R2)          R2 = A(THIS UCB ENTRY IN TABLE).\nUNITLOOP DS    0H\n         BAL   R10,DOLSPACE\n         LA    R2,4(,R2)          R2 = A(NEXT UCB ENTRY IN TABLE).\n         L     R3,0(,R2)          R3 = A(NEXT UCB).\n         BCT   R4,UNITLOOP        LOOP.\n         L     R2,UNITLIST\n         L     R0,0(,R2)\n         FREEMAIN R,LV=(0),A=(R2) FREEMAIN IEFEB4UV STORAGE.\n         B     NEXTPDE\nENDUNIT  DS    0H\n         B     BADREQ             CAN'T IDENTIFY REQUEST.\n         EJECT\n********************************************************************\n*                                                                  *\n*        D O   L S P A C E   S V C ( 7 8 )                         *\n*                                                                  *\n********************************************************************\nDOLSPACE DS    0H\n         LH    R0,COUNT           PUT OUT HEADER FOR 1ST REQ ONLY.\n         AH    R0,=H'1'\n         STH   R0,COUNT\n         CH    R0,=H'1'\n         BNE   NOHDR\n         PUTLINE OUTPUT=(OUTHDR,SINGLE,DATA),MF=(E,MYIOPL)\nNOHDR    DS    0H\n         MVI   OUTAREA+4,C' '     FORMAT OUTPUT LINE.\n         MVC   OUTAREA+5(OUTAREAL-5),OUTAREA+4\n         MVC   OUTUCB,DEVNAME                                         |\n         TM    UCBSTAT,UCBONLI    IF UCB NOT ONLINE,\n         BZ    BADONL               GO TO ERROR ROUTINE.\n         TM    UCBSTAT,UCBCHGS+UCBUNLD NO FUNNY STATUS.\n         BNZ   BADUCB\n         MVC   OUTVOL,UCBVOLI\nGETDEVT  EQU   *\n         MVC   OUTDEVT(5),=C'???? ' MOVE IN SKELETON\n         LA    R6,DEVTABLE         POINT TO OUR TABLE\nDEVLOOP  EQU   *\n         CLI   0(R6),X'FF'         ARE WE AT END OF TABLE?\n         BE    ENDOTAB             IF SO, WE WILL KNOW\n         CLC   0(4,R6),UCBTYP      DO WE MATCH?\n         BE    GOTDEVT\n         A     R6,=F'09'           MOVE ALONG IN TABLE\n         B     DEVLOOP             LOOP BACK\nGOTDEVT  EQU   *\n         MVC   OUTDEVT(5),4(R6)    MOVE IN ITS NAME\nENDOTAB  EQU   *\n         TM    UCBSTAB,UCBBPRV     CHK IF MOUNTED PRIV\n         BO    PRTPRIV\n         TM    UCBSTAB,UCBBPUB     CHK IF MOUNTED PUB\n         BO    PRTPUB\n         TM    UCBSTAB,UCBBSTR     CHK IF MOUNTED STRG\n         BO    PRTSTRG\n         MVC   OUTATTR,=C'????'    NOT MOUNTED NORMALLY\n         B     CONTPRT\nPRTPRIV  MVC   OUTATTR,=C'PRIV'    IS MOUNTED PRIVATE\n         B     CONTPRT\nPRTPUB   MVC   OUTATTR,=C'PUB '    IS MOUNTED PUBLIC\n         B     CONTPRT\nPRTSTRG  MVC   OUTATTR,=C'STRG'    IS MOUNTED STORAGE\n*\nCONTPRT  EQU   *\n*        LR    R0,R7              R0 = A(UCB).\n*        LA    R1,LSPCMSG         R1 = A(MSG AREA).\n*        SVC   78                 DO LSPACE.\n         MVI   LSPCPRMW,X'00'     START CLEAR OF LSPACE PARM WORKAREA |\n         MVC   LSPCPRMW+1(L'LSPCPRMW-1),LSPCPRMW    FINISH CLEAR      |\n         MVC   LSPCPRMW,LSPCPRMT  COPY PARM TEMPLATE TO WORKAREA      |\n*\n********************************************************************\n*                                                                  *\n*        EAV Parameter List for LSPACE - 28 bit execution          *\n*                                                                  *\n*        LSPACE returns the return code in register 15.            *\n*        SMF requires authorization.                               *\n*                                                                  *\n********************************************************************\n*\nLSPCEXEC LSPACE XEXPMSG=LSPCMSG,                                       C\n               MF=(E,LSPCPRM),                                         C\n               UCB=(R7),                                               C\n               SMF=NONE,                                               C\n               F4DSCB=0\n*\n********************************************************************\n*                                                                  *\n*        Pre-EAV Parameter List for LSPACE - 16 bit execution      *\n*                                                                  *\n********************************************************************\n*\n*LSPCEXEC LSPACE EXPMSG=LSPCMSG,                                      C\n*               F4DSCB=0,                                             C\n*               SMF=NONE,                                             C\n*               UCB=(R7),                                             C\n*               MF=(E,LSPCPRM)\n         LTR   R15,R15            IF BAD RC,\n         BNZ   BADSVC78             GO TO ERROR ROUTINE.\n         MVC   OUTSPACE(L'LSPCMSG),LSPCMSG\n         CVAFTST UCB=(R7)         CHECK FOR INDEXED VTOC.\n         CH    R15,=H'8'          IF RC = 8, WE'RE INDEXED.\n         BNE   CONTPRT1\n         MVI   OUTINDEX,C'I'\nCONTPRT1 EQU   *\n         PUTLINE OUTPUT=(OUTAREA,SINGLE,DATA),MF=(E,MYIOPL)\n         BR    R10\n         EJECT\n********************************************************************\n*        E R R O R S                                               *\n********************************************************************\nBADPARS  DS    0H                 BAD PARSE.\n         MVC   RC,=F'12'\n         LA    R15,MSGPARS\n         LA    R10,RETURN\n         B     DOMSG\nBADREQ   DS    0H                 CAN'T IDENTIFY REQUEST.\n         MVC   RC,=F'8'\n         LA    R15,MSGREQ\n         LA    R10,NEXTPDE\n         B     DOMSG\nBADONL   DS    0H                 UCB NOT ONLINE.\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE+ONLINE\n         BNZ   RETMSG             FOR ABOVE REQUESTS, IGNORE ERROR.\n         MVC   OUTSPACE(L'MSGONL),MSGONL\n         LA    R15,OUTAREA\n         B     DOMSG\nBADUCB   DS    0H                 FUNNY STATUS.\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE+ONLINE\n         BNZ   RETMSG             FOR ABOVE REQUESTS, IGNORE ERROR.\n         MVC   OUTSPACE(L'MSGUCB),MSGUCB\n         LA    R15,OUTAREA\n         B     DOMSG\nBADSVC78 DS    0H                 BAD LSAPCE RC.\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE+ONLINE\n         BNZ   RETMSG             FOR ABOVE REQUESTS, IGNORE ERROR.\n         MVC   OUTSPACE(L'MSGSVC78),MSGSVC78\n         LA    R10,NEXTPDE\n         B     DOMSG\nDOMSG    DS    0H\n         PUTLINE OUTPUT=((R15),SINGLE,DATA),MF=(E,MYIOPL)\nRETMSG   DS    0H\n         BR    R10\n         EJECT\n********************************************************************\n*                                                                  *\n*        S T A T I C   A R E A                                     *\n*                                                                  *\n********************************************************************\nMVCVALUE MVC   VALUE(*-*),0(R3)\nCLCVOLI  CLC   UCBVOLI(*-*),VALUE        COMPARE VOLSER.\nCLCNAME  CLC   DEVNAME(*-*),VALUE        COMPARE EBCDIC UCB NAME.     |\nTMATTR   TM    UCBSTAB,*-*\n*\n         DS    0F\nDCELENTH DC    AL2(L'DCETEXT)\nMSGONL   DC    C'OFFLINE'\nMSGUCB   DC    C'SPACE COULD NOT BE DETERMINED.'\nMSGSVC78 DC    C'LSPACE SVC ERROR, IGNORED.'\nMSGPARS  DC    AL2(MSGPARSL,0)\n         DC    C'TSO PARSE ERROR, PROGRAM TERMINATED.'\nMSGPARSL EQU   *-MSGPARS\nMSGREQ   DC    AL2(MSGREQL,0)\n         DC    C'VOLSER, UCB, OR UNIT NOT FOUND, IGNORED.'\nMSGREQL  EQU   *-MSGREQ\n*\nXIOPB    PUTLINE MF=L\nIOPBLEN  EQU   *-XIOPB\nMYPCL    IKJPARM DSECT=MYPDL\n*\nVOLUMES  IKJIDENT  VOLUME,LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,CHAR,     X\n               MAXLNTH=8,DEFAULT='ONLINE'\n*\n         IKJENDP\n*\nOUTHDR   DC    AL2(OUTHDRL,0)\n         DC    C'VOL    '\n         DC    C'  '\n         DC    C'UNIT '\n         DC    C'DEVT  '\n         DC    C'ATTR '\n         DC    C'      '\n         DC    C'#FREE CYL  '\n         DC    C'#FREE TRK  '\n         DC    C'#FREE EXT  '\n         DC    C'   CYL-C '\n         DC    C'TRK-C '\n         DC    C'TMS-#C '\n         DC    C'    TMS-#T '\n         DC    C'    TMS-#E '\n         DC    C'TMS-CYL-C '\n         DC    C'TMS-TRK-C'\nOUTHDRL  EQU   *-OUTHDR\n*\n         LTORG *\n*\nSRCLEVEL DC    C'                                        '\n*\n* DEVICE TABLE\n*\nDEVTABLE EQU   *\n         DC    X'3010200E',C'3380 '\n         DC    X'3030200E',C'3380 '    EMULATED 3380 2105 SHARK DEV\n         DC    X'3010200F',C'3390 '    3390 \"NORMAL\"\n         DC    X'3030200F',C'3390 '    3390 DYNAMIC\n         DC    X'FFFFFFFF'             END OF TABLE\n********************************************************************\n*                                                                  *\n*        List form of the LSPACE macro with PLISTVER=MAX added to  *\n*        support EAV and the return of 95 bytes of data to the     *\n*        return area.                                              *\n*                                                                  *\n********************************************************************\nLSPCPRMT LSPACE MF=L,PLISTVER=MAX  LSPACE PARM TEMPLATE\n         EJECT\n********************************************************************\n*                                                                  *\n*        D Y N A M I C   A R E A                                   *\n*                                                                  *\n********************************************************************\nDYNAMIC  DSECT\nSAVE     DS    18F\nRC       DS    F\nECB      DS    F\nMYANS    DS    A\nPDEADDR  DS    A\nMYCPPL   DS    0F,CL(CPPLLEN)\nMYPPL    DS    0F,CL(PPLLEN)\nMYIOPL   DS    0F,CL(IOPLLEN)\nMYIOPB   DS    0F,CL(IOPBLEN)\nCOUNT    DS    H\nVALUELEN DS    H\nVALUE    DS    CL8\nOUTAREA  DS    0F,AL2,AL2\nOUTVOL   DS    CL6,CL1\nOUTINDEX DS    CL1,CL1\nOUTUCB   DS    CL4,CL1                                                |\nOUTDEVT  DS    CL5,CL1\nOUTATTR  DS    CL4,CL1\nOUTSPACE DS    CL120                  EAV SUPPORT - Increased from 50\nOUTAREAL EQU   *-OUTAREA\n* IEFEB4UV PARM LIST.\nUNITPARM DS    2A                     IEFEB4UV PARM LIST\nUNITTAB  DS    0F                     UNIT TABLE\nUNITNAME DS    CL8                    UNITNAME (INPUT TO IEFEB4UV)\nUNITLIST DS    F                      UNITNAME LIST ADDR (OUTPUT)\nUNITATTR DS    F                      DON'T PROVIDE ATTRIBUTE LIST\nUNITFLG  DS    X                      IEFEB4UV PARM LIST\n* END IEFEB4UV PARM LIST.\nTYPE     DS    X\nTRY      DS    X\nPRIVATE  EQU   X'01'\nSTORAGE  EQU   X'02'\nPUBLIC   EQU   X'04'\nVOLUME   EQU   X'08'\nUCB      EQU   X'10'\nUNIT     EQU   X'20'\nONLINE   EQU   X'40'\nMASK     EQU   X'80'\nATTR     DS    X\n*\n         DS    0D\n         UCBSCAN MF=(L,UCBSCANL)\n         DS    0D\nSCANWORK DS    CL100    WORK AREA USED BY THE UCBSCAN SERVICES\n         DS    0D\nUCBCOPY  DS    48C      UCB COMN SEGMENT & DEVICE DEPENDENT SEGMENT\n         DS    0D\nUCBEXTN  DS    36C      UCB COMN EXTENTION SEGMENT\nRETCODE  DS    F        RETURN CODE USED BY UCBSCAN SERVICES\nRSNCODE  DS    F        REASON CODE USED BY UCBSCAN SERVICES\nDEVNAME  DS    CL4      DEVICE NUMBER ASSOCIATED WITH UCB.\nDCETEXT  DS    XL256    DCE AREA\n*                                                                  *\n********************************************************************\n*                                                                  *\n*                                                                  *\n* LSPACE ITEMS (Work Areas)                                        *\n*                                                                  *\n*                                                                  *\n********************************************************************\n*                                                                  *\nLSPCMSGA DS    A                                                      |\nLSPCPRMW DS    XL(LSPAEND-LSPCPRM) LSPACE PARM WORKAREA               |\n*                                                                  *\n********************************************************************\n*                                                                  *\n* Invocation of the List-Form of LSPACE using the extended and     *\n* expanded return area of 95 bytes for EAVs.                       *\n*                                                                  *\n********************************************************************\n*                                                                  *\nLSPCMSG  LSPACE MF=(L,XEXPMSG)                                        |\n*\n********************************************************************\n*                                                                  *\n* Old List-form for the expanded message return area (40 bytes)    *\n*                                                                  *\n********************************************************************\n*                                                                  *\n*LSPCMSG  LSPACE MF=(L,EXPMSG)                                        |\n*\nDYNLEN   EQU   *-DYNAMIC\n         TITLE 'DSPACE - MACRO LSPACE PARM LIST'\n*\n********************************************************************\n*                                                                  *\n* Old DSECT-form without PLISTVER                                  *\n*                                                                  *\n********************************************************************\n*                                                                  *\n*LSPCPRM  LSPACE MF=D\n*\n********************************************************************\n*                                                                  *\n* New DSECT-form with PLISTVER=MAX                                 *\n*                                                                  *\n********************************************************************\n*                                                                  *\nLSPCPRM  LSPACE MF=D,PLISTVER=MAX\n         TITLE 'DSPACE - MACRO IKJCPPL'\n         IKJCPPL\nCPPLLEN  EQU   *-CPPL\n         TITLE 'DSPACE - MACRO IKJPPL'\n         IKJPPL\nPPLLEN   EQU   *-PPL\n         TITLE 'DSPACE - MACRO IKJIOPL'\n         IKJIOPL\nIOPLLEN  EQU   *-IOPL\n         SPACE 3\n         TITLE 'DSPACE - MACRO IHAPSA'\n         IHAPSA LIST=YES\n         TITLE 'DSPACE - MACRO CVT'\n         CVT   DSECT=YES,LIST=YES\n         TITLE 'DSPACE - MACRO UCB'\nUCBDSECT DSECT\n         IEFUCBOB LIST=YES\n         END   &CSECT\n/*\n//BIND     EXEC PGM=IEWBLINK,COND=(4,LT),\n//         PARM='LIST,LET,XREF,RENT,REUS'\n//SYSPRINT  DD  SYSOUT=*\n//SYSUT1    DD  UNIT=SYSALLDA,SPACE=(TRK,(2,1))\n//SYSLMOD   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLIN    DD  UNIT=SYSALLDA,DSN=&&OBJMOD,\n//     DISP=(OLD,DELETE)\n//          DD  DDNAME=SYSIN\n//SYSIN     DD  *\n IDENTIFY DSPACE('UPDATED WITH EAV SUPPORT')\n SETSSI   CB491633\n NAME     DSPACEAV(R)\n/*\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSPACEH": {"ttr": 1032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x07\\x01\\x03\\x14\\x7f\\x01\\x14 \\x8f!Y\\x00E\\x00$\\x00\\x00\\xc8\\xc5\\xd3\\xd7@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2003-05-27T00:00:00", "modifydate": "2014-07-27T21:59:07", "lines": 69, "newlines": 36, "modlines": 0, "user": "HELP"}, "text": ")F FUNCTION -\n   The DSPACE or \"DASD SPACE\" command displays space utilization of\n   mounted online storage devices using the LSPACE (SVC 78) macro\n   facility.\n)X SYNTAX -\n   DSPACE VVVVVV    ...  VVVVVV   = a VOLSER (1-6 characters)\n   DSPACE UUUU      ...  UUUU     = a UCB address (4 characters)\n   DSPACE NNNNNNNN  ...  NNNNNNNN = a UNITNAME (1-8 characters)\n   DSPACE STORAGE   ...  displays all volumes mounted STORAGE\n   DSPACE PUBLIC    ...  displays all volumes mounted PUBLIC\n   DSPACE PRIVATE   ...  displays all volumes mounted PRIVATE\n   DSPACE ONLINE    ...  displays all ONLINE volumes (DEFAULT)\n\n   Note: DSPACE accepts a mask: DSPACE TSO* or DSPACE work*\n)O OPERANDS -\n   DSPACE also accepts a list: DSPACE (VVVVVV,UUUU,...) where the list\n   is placed within matching parentheses and each field within the\n   parentheses is separated by commas or blanks.  space or comma.\n   Wildcards are acceptable and may be used along with any of the above\n   reserved keywords.\n\n   DSPACE displays the maximum number of contiguous free cylinders,\n   free tracks, the number of extents, and the number of contiguous\n   cylinders and tracks.  The letter \"I\" between the volume serial\n   number and the unit address signifies the presence of an active\n   indexed VTOC.\n\n   Example:  DSPACE (W*)\n\n   Sample output:\n\nVOL      UNIT DEVT  ATTR         #CYL   #TRK   #EXT  CYL-C  TRK-C TOTCYL\nWORK80 I 0128 3380  PRIV SPACE=000156,000013,000003/000155,000000   885\nWORK01 I 0AA0 3390  STRG SPACE=000296,000674,000074/000052,000005  1113\nWORK02 I 0AA1 3390  STRG SPACE=000484,000507,000062/000131,000003  1113\nWORK03 I 0AA2 3390  STRG SPACE=000094,000444,000051/000019,000016  1113\nWORK04 I 0AA3 3390  STRG SPACE=000143,000440,000060/000046,000015  1113\nWORK05 I 0AA4 3390  STRG SPACE=000394,000341,000041/000135,000003  1113\nWORK06 I 0AA5 3390  STRG SPACE=000168,000113,000025/000138,000000  1113\nWORK07 I 0AA6 3390  STRG SPACE=000381,000107,000016/000151,000001  1113\nWORK08 I 0AA7 3390  STRG SPACE=000446,000123,000018/000383,000010  1113\nWORKE1 I 0AC7 3390  STRG SPACE=001309,000189,000025/000834,000014  3340\nWORKE2 I 0AC8 3390  PRIV SPACE=000837,000049,000010/000623,000002  3340\nWORKE3 I 0AC9 3390  PRIV SPACE=000259,000053,000012/000250,000019  3340\nWORKE4 I 0ACA 3390  PRIV SPACE=000407,000037,000007/000180,000005  3340\nWORKS1 I 0ACB 3390  PRIV SPACE=003333,000010,000001/003333,000010  3340\nWORKS2 I 0ACC 3390  PRIV SPACE=003328,000012,000002/003327,000012  3340\nWORKS3 I 0ACD 3390  PRIV SPACE=003313,000006,000001/003313,000006  3340\nWORKS4 I 0ACE 3390  PRIV SPACE=003333,000000,000001/003333,000000  3340\nWORK91 I 0AEB 3390  PRIV SPACE=008739,000000,000001/008739,000000 10020\nWORK92 I 0AEC 3390  PRIV SPACE=008900,000000,000001/008900,000000 10020\nWORK93 I 0AED 3390  PRIV SPACE=008223,000000,000001/008223,000000 10020\n\n   Example:  DSPACE STORAGE\n\n   Sample output:\n\nVOL      UNIT DEVT  ATTR         #CYL   #TRK   #EXT  CYL-C  TRK-C TOTCYL\nWORK01 I 0AA0 3390  STRG SPACE=000296,000674,000074/000052,000005  1113\nWORK02 I 0AA1 3390  STRG SPACE=000484,000507,000062/000131,000003  1113\nWORK03 I 0AA2 3390  STRG SPACE=000094,000444,000051/000019,000016  1113\nWORK04 I 0AA3 3390  STRG SPACE=000143,000440,000060/000046,000015  1113\nWORK05 I 0AA4 3390  STRG SPACE=000394,000341,000041/000135,000003  1113\nWORK06 I 0AA5 3390  STRG SPACE=000168,000113,000025/000138,000000  1113\nWORK07 I 0AA6 3390  STRG SPACE=000381,000107,000016/000151,000001  1113\nWORK08 I 0AA7 3390  STRG SPACE=000446,000123,000018/000383,000010  1113\nWORKE1 I 0AC7 3390  STRG SPACE=001309,000189,000025/000834,000014  3340\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSPACEO": {"ttr": 1034, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00R\\x01\\x03\\x14\\x7f\\x01\\x03\\x14\\x8f\\x17T\\x02S\\x02W\\x00\\x00\\xd6\\xd3\\xc4\\xe5\\xc5\\xd9\\xe2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2003-05-27T00:00:00", "modifydate": "2003-05-28T17:54:52", "lines": 595, "newlines": 599, "modlines": 0, "user": "OLDVERS"}, "text": "//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//ASM      EXEC PGM=ASMA90,\n//         PARM='OBJECT,NODECK'\n//SYSPRINT  DD  SYSOUT=*\n//SYSLIB    DD  DISP=SHR,DSN=SYS1.MACLIB\n//          DD  DISP=SHR,DSN=SYS1.MODGEN\n//SYSPUNCH  DD  DUMMY\n//SYSUT1    DD  UNIT=VIO,SPACE=(1024,(120,120))\n//SYSLIN    DD  UNIT=VIO,SPACE=(3040,(40,40),RLSE),DSN=&&SYSLIN,\n//     DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),DISP=(,PASS)\n//SYSIN     DD  *\nDSPACE   TITLE 'DSPACE - DISPLAY DASD SPACE INFORMATION.'\n********************************************************************\n*                                                                  *\n* NAME - DSPACE.                                                   *\n*                                                                  *\n* DESCRIPTION - TSO COMMAND TO DISPLAY AVAILABLE SPACE ON DIRECT   *\n*               ACCESS VOLUME(S).                                  *\n*                                                                  *\n* TO USE - ENTER: DSPACE VVVVVV   ,VVVVVV = A VOLSER (1-6 CHARS)   *\n*                 DSPACE UUUU     ,UUUU = A UCB ADDRESS (4 CHARS)  *\n*                 DSPACE NNNNNNNN ,NNNNNNNN = A UNITNAME (1-8 CHARS*\n*                 DSPACE STORAGE  ,FOR ALL STORAGE VOLUMES         *\n*                 DSPACE PUBLIC   ,FOR ALL PUBLIC VOLUMES          *\n*                 DSPACE PRIVATE  ,FOR ALL PRIVATE VOLUMES         *\n*                 DSPACE ONLINE   ,FOR ALL ONLINE VOLUMES (DEFAULT)*\n*                                                                  *\n*   NOTE: DSPACE ACCEPTS A MASK: DSPACE RES* OR DSPACE 3C*         *\n*         DSPACE ALSO ACCEPTS A LIST: DSPACE (VVVVVV,UUUU,...)     *\n*         -OR- A COMBINATION THEREOF: DSPACE (WORK*, SYSRES, 91*)  *\n*                                                                  *\n* LOG -                                                            *\n*   12/17/86 L01 PTW IMPLEMENTED                                   *L01\n*   05/16/95 DAV ADD 3390 TO DEVTABLE.                             *\n*   01/14/99 DAV CHANGE TO WORK WITH NEW I/O GEN, USING UCBSCAN.   *\n*                ALSO ADD 3390 DYNAMIC TO DEVTABLE.                *\n*   01/27/99 DAV CHANGE TO WORK 4 DIGIT ADDRESS AND CORRECT IXVTOC *\n*                NOT SHOWING.                                      *\n*   02/22/99 DAV CHANGE TO LSPACE MACRO (FROM THE SVC DIRECT).     *\n*                                                                  *\n*   05/16/03 WJS Added 3380 as an \"Emulated 2105 Shark Device\" to  *\n*                the devtable.                                     *\n*                Major updates to the accompanying ISPF FDSPACE    *\n*                dialog largely in support of 4-byte UCBs.         *\n*                Tested on a T/REX using z/OS 1.3, TSO/E 3.3.0,    *\n*                and ISPF 5.2.0.                                   *\n*                                                                  *\n********************************************************************\n         EJECT\n********************************************************************\n*                                                                  *\n*        I N I T I A L I Z E                                       *\n*                                                                  *\n********************************************************************\n         LCLC  &CSECT\n&CSECT   SETC  'DSPACE'\n&CSECT   CSECT\n&CSECT   AMODE 31\n&CSECT   RMODE ANY\nR0       EQU   00\nR1       EQU   01\nR2       EQU   02                 WORK\nR3       EQU   03                 WORK\nR4       EQU   04                 WORK\nR5       EQU   05                 WORK\nR6       EQU   06                 WORK\nR7       EQU   07                 UCB ADR\nR8       EQU   08                 LSPACE PARM ADR\nR9       EQU   09\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12                 PROGRAM BASE.\nR13      EQU   13                 A(SAVE AREA).\nR14      EQU   14\nR15      EQU   15\n*\nDOSAVE   EQU   *\n         SAVE  (14,12),,&CSECT--&SYSDATE--&SYSTIME\n         LR    R12,R15            ESTABLISH BASE.\n         USING &CSECT,R12         TELL ASSEMBLER.\n         GETMAIN RU,LV=DYNLEN     DYNAMIC AREA.\n         EJECT\nDOPTRS   EQU   *\n         LR    R2,R13             SAVE AREA\n         LR    R13,R1               SWITCH.\n         USING DYNAMIC,R13        TELL ASSEMBLER.\n         LR    R0,R1\n         LA    R1,DYNLEN\n         LA    R14,R0\n         SLR   R15,R15\n         MVCL  R0,R14             ZERO STORAGE.\n         ST    R2,4(,R13)         BACK CHAIN.\n         ST    R13,8(,R2)         FORWARD CHAIN.\n         XC    RC,RC\n         L     R2,4(,R13)\n         L     R2,24(,R2)         R2 = A(PARMLIST).\n         USING CPPL,R2            CONSTRUCT TSO CONTROL BLOCKS.\n         MVC   MYIOPB(IOPBLEN),XIOPB INITIALIZE DYNAMIC IOPB.\n         LA    R3,MYPPL           BUILD PPL.\n         USING PPL,R3\n         MVC   PPLUPT,CPPLUPT\n         MVC   PPLECT,CPPLECT\n         LA    R4,ECB\n         ST    R4,PPLECB\n         MVC   PPLPCL,=A(MYPCL)\n         LA    R4,MYANS\n         ST    R4,PPLANS\n         MVC   PPLCBUF,CPPLCBUF\n         XC    PPLUWA,PPLUWA\n         DROP  R3\n         LA    R3,MYIOPL          BUILD IOPL.\n         USING IOPL,R3\n         MVC   IOPLUPT,CPPLUPT\n         MVC   IOPLECT,CPPLECT\n         LA    R4,ECB\n         ST    R4,IOPLECB\n         LA    R4,MYIOPB\n         ST    R4,IOPLIOPB\n         DROP  R2,R3\n         MVC   OUTAREA(4),=AL2(OUTAREAL,0) INITIALIZE PUTLINE MSG.\n         CALLTSSR EP=IKJPARS,MF=(E,MYPPL) CALL PARSE.\n         LTR   R15,R15\n         BNZ   BADPARS\n         L     R2,MYANS           R2 = A(PDL FROM PARSE)\n         USING MYPDL,R2\n         LA    R2,VOLUMES         R2 = A(VOLUME POSITIONAL PDE).\n         DROP  R2\n         XC    COUNT,COUNT\n         XC    SCANWORK,SCANWORK  CLEAR SCANWORK AREA\n         XC    UCBCOPY,UCBCOPY    CLEAR UCBCOPY  AREA\n         XC    UCBEXTN,UCBEXTN    CLEAR UCBEXTN  AREA\n         MVI   DCETEXT,X'00'      START CLEAR OF DCE AREA\n         MVC   DCETEXT+1(L'DCETEXT-1),DCETEXT\n         LA    R8,LSPCPRMW        -> R8 TO LSPACE PARM WORKAREA       |\n         USING LSPCPRM,R8         R8 = A(LSPACE PARM WORKAREA)        |\n         LA    R0,LSPCMSG         GET ADR TO LSPCMSG                  |\n         ST    R0,LSPCMSGA        STORE IT IN LSPCMSGA                |\n         EJECT\n********************************************************************\n*                                                                  *\n*        G E T   1 S T   T H I N G   I N   L I S T                 *\n*                                                                  *\n********************************************************************\nLOOPPDE  DS    0H\n         MVI   TYPE,0\n         MVI   TRY,0\n         MVI   ATTR,0\n         ST    R2,PDEADDR         SAVE A(PDE).\n         MVI   VALUE,C' '\n         MVC   VALUE+1(L'VALUE-1),VALUE\n         L     R3,0(,R2)          R3 = A(PDE).\n         LH    R4,4(,R2)          R5 = L'VALUE.\n         STH   R4,VALUELEN\n         BCTR  R4,R0\n         EX    R4,MVCVALUE\n         CLC   =C'STORAGE ',VALUE CHECK FOR STORAGE.\n         BNE   NOTSTOR\n         OI    TYPE,STORAGE\n         MVI   ATTR,UCBBSTR\n         B     DOSCAN\nNOTSTOR  DS    0H\n         CLC   =C'PUBLIC ',VALUE CHECK FOR PUBLIC.\n         BNE   NOTPUB\n         OI    TYPE,PUBLIC\n         MVI   ATTR,UCBBPUB\n         B     DOSCAN\nNOTPUB   DS    0H\n         CLC   =C'PRIVATE ',VALUE CHECK FOR PRIVATE.\n         BNE   NOTPRIV\n         OI    TYPE,PRIVATE\n         MVI   ATTR,UCBBPRV\n         B     DOSCAN\nNOTPRIV  DS    0H\n         CLC   =C'ONLINE ',VALUE CHECK FOR ONLINE.\n         BNE   ENDONL\n         OI    TYPE,ONLINE\n         B     DOSCAN\nENDONL   DS    0H\n         CLC   VALUELEN,=H'6'     IF L'VALUE > 6, CAN ONLY BE UNITNAME.\n         BH    TRYUNIT\n         CLC   VALUELEN,=H'2'     IF L'VALUE < 2, TRY UNITNAME.\n         BL    TRYUNIT\n         OI    TRY,VOLUME         SPECIFY TRY FOR VOLUME.\n         LH    R4,VALUELEN\n         BCTR  R4,0\n         LA    R5,VALUE(R4)\n         CLI   0(R5),C'*'\n         BNE   NOTMASK\n         OI    TRY,MASK\n         STH   R4,VALUELEN\n         EJECT\nNOTMASK  DS    0H\n         CLC   VALUELEN,=H'4'     IF L'VALUE > 4, CAN'T BE UCB.       |\n         BH    DOSCAN\n         OI    TRY,UCB\n         B     DOSCAN\n         SPACE 3\n         SPACE 3\n********************************************************************\n*                                                                  *\n*        G E T   N E X T   T H I N G   I N   L I S T               *\n*                                                                  *\n********************************************************************\nNEXTPDE  DS    0H\n         XC    SCANWORK,SCANWORK  CLEAR SCANWORK AREA\n         XC    UCBCOPY,UCBCOPY    CLEAR UCBCOPY  AREA\n         XC    UCBEXTN,UCBEXTN    CLEAR UCBEXTN  AREA\n         MVI   DCETEXT,X'00'      START CLEAR OF DCE AREA\n         MVC   DCETEXT+1(L'DCETEXT-1),DCETEXT\n         L     R2,PDEADDR         GET NEXT ENTRY IS PARSE LIST.\n         L     R2,8(,R2)\n         CL    R2,=X'FF000000'    IF NO MORE, RETURN.\n         BNE   LOOPPDE\n         EJECT\n********************************************************************\n*                                                                  *\n*        R E T U R N                                               *\n*                                                                  *\n********************************************************************\nRETURN   DS    0H\n         IKJRLSA MYANS\n         L     R2,RC                  R2 = RC.\n         LR    R1,R13              PREPARE\n         L     R13,4(,R13)           FOR FREEMAIN.\n         FREEMAIN RU,LV=DYNLEN,A=(1)\n         LR    R15,R2              AND RETURN\n         RETURN (14,12),RC=(15)      WITH R15 = RC.\n         EJECT\n********************************************************************\n*                                                                  *\n*        U C B   S C A N                                           *\n*                                                                  *\n********************************************************************\nDOSCAN   DS    0H\n         UCBSCAN COPY,                                                 C\n               WORKAREA=SCANWORK,                                      C\n               UCBAREA=UCBCOPY,                                        C\n               CMXTAREA=UCBEXTN,                                       C\n               DCEAREA=DCETEXT,                                        C\n               DCELEN=DCELENTH,                                        C\n               DYNAMIC=YES,                                            C\n               RANGE=ALL,                                              C\n               DEVCLASS=DASD,                                          C\n               DEVNCHAR=DEVNAME,                                       C\n               RETCODE=RETCODE,                                        C\n               RSNCODE=RSNCODE,                                        C\n               MF=(E,UCBSCANL)\n         LTR   R15,R15            CHECK THE RETURN CODE.\n         BNZ   ENDSCAN            IF NOT 0, ASSUME NO MORE TO SCAN\nDOSCAN1  DS    0H\n         LA    R3,UCBCOPY         GET ADR OF UCB\n         LA    R7,UCBCOPY         GET ADR OF UCB\n         USING UCBDSECT,R7        TELL ASM\n         TM    TRY,VOLUME         IF WE ARE TO TRY FOR VOLUME,\n         BZ    NOTVOL\n         LA    R4,L'UCBVOLI-1     ASSUME FULL LENGTH COMPARE...\n         TM    TRY,MASK             UNLESS A MASK WAS SPECIFIED.\n         BZ    *+10\n         LH    R4,VALUELEN\n         BCTR  R4,0\n         EX    R4,CLCVOLI\n         BNE   NOTVOL\n         OI    TYPE,VOLUME\n         B     SCANSPAC\nNOTVOL   DS    0H\n         TM    TRY,UCB            IF WE ARE TO TRY FOR UCB,\n         BZ    NOTUCB\n         LA    R4,L'DEVNAME-1     ASSUME FULL LENGTH COMPARE...       |\n         TM    TRY,MASK             UNLESS A MASK WAS SPECIFIED.\n         BZ    *+10\n         LH    R4,VALUELEN\n         BCTR  R4,0\n         EX    R4,CLCNAME\n         BNE   NOTUCB\n         OI    TYPE,UCB\n         B     SCANSPAC\nNOTUCB   DS    0H\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE\n         BZ    NOTATTR            IF ATTRIBUTE COMPARE, DO IT.\n         SLR   R4,R4\n         IC    R4,ATTR\n         EX    R4,TMATTR\n         BO    SCANSPAC\n         B     DOSCAN\nNOTATTR  DS    0H\n         TM    TYPE,ONLINE        IF NO ONLINE REQUEST,\n         BZ    DOSCAN               GET NEXT UCB.\nSCANSPAC DS    0H\n         BAL   R10,DOLSPACE       GO DO LSPACE.\n         TM    TYPE,VOLUME+UCB    IF WE HIT ON SINGLE REQUEST,\n         BZ    DOSCAN               ALL DONE.\n         TM    TRY,MASK           UNLESS IT WAS A MASK REQUEST.\n         BO    DOSCAN\nENDSCAN  DS    0H\n         CLI   TYPE,0             IF WE HAVE A HIT,\n         BNE   NEXTPDE              GO DO NEXT.\n         EJECT\n********************************************************************\n*                                                                  *\n*        U N I T   R E Q U E S T                                   *\n*                                                                  *\n********************************************************************\nTRYUNIT  DS    0H\n         MVC   UNITNAME,VALUE     INIT LISTS FO IEFEB4UV.\n         XC    UNITLIST,UNITLIST\n         XC    UNITATTR,UNITATTR\n         MVI   UNITFLG,X'10'\n         LINK  EP=IEFEB4UV,PARAM=(UNITTAB,UNITFLG),MF=(E,UNITPARM)\n         LTR   R15,R15            IF RC \u00ac= 0,\n         BNZ   ENDUNIT              ASSUME NOT A UNITNAME.\n         OI    TYPE,UNIT\n         L     R2,UNITLIST\n         L     R4,4(,R2)          R4 = # UCBS IN RETURNED LIST.\n         L     R3,8(,R2)          R3 = A(UCB).\n         LA    R2,8(,R2)          R2 = A(THIS UCB ENTRY IN TABLE).\nUNITLOOP DS    0H\n         BAL   R10,DOLSPACE\n         LA    R2,4(,R2)          R2 = A(NEXT UCB ENTRY IN TABLE).\n         L     R3,0(,R2)          R3 = A(NEXT UCB).\n         BCT   R4,UNITLOOP        LOOP.\n         L     R2,UNITLIST\n         L     R0,0(,R2)\n         FREEMAIN R,LV=(0),A=(R2) FREEMAIN IEFEB4UV STORAGE.\n         B     NEXTPDE\nENDUNIT  DS    0H\n         B     BADREQ             CAN'T IDENTIFY REQUEST.\n         EJECT\n********************************************************************\n*        D O   L S P A C E   S V C ( 7 8 )                         *\n********************************************************************\nDOLSPACE DS    0H\n         LH    R0,COUNT           PUT OUT HEADER FOR 1ST REQ ONLY.\n         AH    R0,=H'1'\n         STH   R0,COUNT\n         CH    R0,=H'1'\n         BNE   NOHDR\n         PUTLINE OUTPUT=(OUTHDR,SINGLE,DATA),MF=(E,MYIOPL)\nNOHDR    DS    0H\n         MVI   OUTAREA+4,C' '     FORMAT OUTPUT LINE.\n         MVC   OUTAREA+5(OUTAREAL-5),OUTAREA+4\n         MVC   OUTUCB,DEVNAME                                         |\n         TM    UCBSTAT,UCBONLI    IF UCB NOT ONLINE,\n         BZ    BADONL               GO TO ERROR ROUTINE.\n         TM    UCBSTAT,UCBCHGS+UCBUNLD NO FUNNY STATUS.\n         BNZ   BADUCB\n         MVC   OUTVOL,UCBVOLI\nGETDEVT  EQU   *\n         MVC   OUTDEVT(5),=C'???? ' MOVE IN SKELETON\n         LA    R6,DEVTABLE         POINT TO OUR TABLE\nDEVLOOP  EQU   *\n         CLI   0(R6),X'FF'         ARE WE AT END OF TABLE?\n         BE    ENDOTAB             IF SO, WE WILL KNOW\n         CLC   0(4,R6),UCBTYP      DO WE MATCH?\n         BE    GOTDEVT\n         A     R6,=F'09'           MOVE ALONG IN TABLE\n         B     DEVLOOP             LOOP BACK\nGOTDEVT  EQU   *\n         MVC   OUTDEVT(5),4(R6)    MOVE IN ITS NAME\nENDOTAB  EQU   *\n         TM    UCBSTAB,UCBBPRV     CHK IF MOUNTED PRIV\n         BO    PRTPRIV\n         TM    UCBSTAB,UCBBPUB     CHK IF MOUNTED PUB\n         BO    PRTPUB\n         TM    UCBSTAB,UCBBSTR     CHK IF MOUNTED STRG\n         BO    PRTSTRG\n         MVC   OUTATTR,=C'????'    NOT MOUNTED NORMALLY\n         B     CONTPRT\nPRTPRIV  MVC   OUTATTR,=C'PRIV'    IS MOUNTED PRIVATE\n         B     CONTPRT\nPRTPUB   MVC   OUTATTR,=C'PUB '    IS MOUNTED PUBLIC\n         B     CONTPRT\nPRTSTRG  MVC   OUTATTR,=C'STRG'    IS MOUNTED STORAGE\n*\nCONTPRT  EQU   *\n*        LR    R0,R7              R0 = A(UCB).\n*        LA    R1,LSPCMSG         R1 = A(MSG AREA).\n*        SVC   78                 DO LSPACE.\n         MVI   LSPCPRMW,X'00'     START CLEAR OF LSPACE PARM WORKAREA |\n         MVC   LSPCPRMW+1(L'LSPCPRMW-1),LSPCPRMW    FINISH CLEAR      |\n         MVC   LSPCPRMW,LSPCPRMT  COPY PARM TEMPLATE TO WORKAREA      |\nLSPCEXEC LSPACE EXPMSG=LSPCMSG,                                        C\n               F4DSCB=0,                                               C\n               SMF=NONE,                                               C\n               UCB=(R7),                                               C\n               MF=(E,LSPCPRM)\n         LTR   R15,R15            IF BAD RC,\n         BNZ   BADSVC78             GO TO ERROR ROUTINE.\n         MVC   OUTSPACE(L'LSPCMSG),LSPCMSG\n         CVAFTST UCB=(R7)         CHECK FOR INDEXED VTOC.\n         CH    R15,=H'8'          IF RC = 8, WE'RE INDEXED.\n         BNE   CONTPRT1\n         MVI   OUTINDEX,C'I'\nCONTPRT1 EQU   *\n         PUTLINE OUTPUT=(OUTAREA,SINGLE,DATA),MF=(E,MYIOPL)\n         BR    R10\n         EJECT\n********************************************************************\n*        E R R O R S                                               *\n********************************************************************\nBADPARS  DS    0H                 BAD PARSE.\n         MVC   RC,=F'12'\n         LA    R15,MSGPARS\n         LA    R10,RETURN\n         B     DOMSG\nBADREQ   DS    0H                 CAN'T IDENTIFY REQUEST.\n         MVC   RC,=F'8'\n         LA    R15,MSGREQ\n         LA    R10,NEXTPDE\n         B     DOMSG\nBADONL   DS    0H                 UCB NOT ONLINE.\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE+ONLINE\n         BNZ   RETMSG             FOR ABOVE REQUESTS, IGNORE ERROR.\n         MVC   OUTSPACE(L'MSGONL),MSGONL\n         LA    R15,OUTAREA\n         B     DOMSG\nBADUCB   DS    0H                 FUNNY STATUS.\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE+ONLINE\n         BNZ   RETMSG             FOR ABOVE REQUESTS, IGNORE ERROR.\n         MVC   OUTSPACE(L'MSGUCB),MSGUCB\n         LA    R15,OUTAREA\n         B     DOMSG\nBADSVC78 DS    0H                 BAD LSAPCE RC.\n         TM    TYPE,STORAGE+PUBLIC+PRIVATE+ONLINE\n         BNZ   RETMSG             FOR ABOVE REQUESTS, IGNORE ERROR.\n         MVC   OUTSPACE(L'MSGSVC78),MSGSVC78\n         LA    R10,NEXTPDE\n         B     DOMSG\nDOMSG    DS    0H\n         PUTLINE OUTPUT=((R15),SINGLE,DATA),MF=(E,MYIOPL)\nRETMSG   DS    0H\n         BR    R10\n         EJECT\n********************************************************************\n*                                                                  *\n*        S T A T I C   A R E A                                     *\n*                                                                  *\n********************************************************************\nMVCVALUE MVC   VALUE(*-*),0(R3)\nCLCVOLI  CLC   UCBVOLI(*-*),VALUE        COMPARE VOLSER.\nCLCNAME  CLC   DEVNAME(*-*),VALUE        COMPARE EBCDIC UCB NAME.     |\nTMATTR   TM    UCBSTAB,*-*\n*\n         DS    0F\nDCELENTH DC    AL2(L'DCETEXT)\nMSGONL   DC    C'OFFLINE'\nMSGUCB   DC    C'SPACE COULD NOT BE DETERMINED.'\nMSGSVC78 DC    C'LSPACE SVC ERROR, IGNORED.'\nMSGPARS  DC    AL2(MSGPARSL,0)\n         DC    C'TSO PARSE ERROR, PROGRAM TERMINATED.'\nMSGPARSL EQU   *-MSGPARS\nMSGREQ   DC    AL2(MSGREQL,0)\n         DC    C'VOLSER, UCB, OR UNIT NOT FOUND, IGNORED.'\nMSGREQL  EQU   *-MSGREQ\n*\nXIOPB    PUTLINE MF=L\nIOPBLEN  EQU   *-XIOPB\nMYPCL    IKJPARM DSECT=MYPDL\n*\nVOLUMES  IKJIDENT  VOLUME,LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,CHAR,     X\n               MAXLNTH=8,DEFAULT='ONLINE'\n*\n         IKJENDP\n*\nOUTHDR   DC    AL2(OUTHDRL,0)\n         DC    C'VOL    '\n         DC    C'  '\n         DC    C'UNIT '\n         DC    C'DEVT  '\n         DC    C'ATTR '\n         DC    C'      '\n         DC    C'  #CYL '                                             |\n         DC    C'  #TRK '                                             |\n         DC    C'  #EXT '                                             |\n         DC    C' CYL-C '                                             |\n         DC    C' TRK-C '                                             |\nOUTHDRL  EQU   *-OUTHDR\n*\n         LTORG *\n*\nSRCLEVEL DC    C'                                        '\n*\n* DEVICE TABLE\n*\nDEVTABLE EQU   *\n         DC    X'3010200E',C'3380 '\n         DC    X'3030200E',C'3380 '    EMULATED 3380 2105 SHARK DEV\n         DC    X'3010200F',C'3390 '    3390 \"NORMAL\"\n         DC    X'3030200F',C'3390 '    3390 DYNAMIC\n         DC    X'FFFFFFFF'             END OF TABLE\n*\nLSPCPRMT LSPACE MF=L              LSPACE PARM TEMPLATE                |\n         EJECT\n********************************************************************\n*                                                                  *\n*        D Y N A M I C   A R E A                                   *\n*                                                                  *\n********************************************************************\nDYNAMIC  DSECT\nSAVE     DS    18F .\nRC       DS    F\nECB      DS    F\nMYANS    DS    A\nPDEADDR  DS    A\nMYCPPL   DS    0F,CL(CPPLLEN)\nMYPPL    DS    0F,CL(PPLLEN)\nMYIOPL   DS    0F,CL(IOPLLEN)\nMYIOPB   DS    0F,CL(IOPBLEN)\nCOUNT    DS    H\nVALUELEN DS    H\nVALUE    DS    CL8\nOUTAREA  DS    0F,AL2,AL2\nOUTVOL   DS    CL6,CL1\nOUTINDEX DS    CL1,CL1\nOUTUCB   DS    CL4,CL1                                                |\nOUTDEVT  DS    CL5,CL1\nOUTATTR  DS    CL4,CL1\nOUTSPACE DS    CL50\nOUTAREAL EQU   *-OUTAREA\n* IEFEB4UV PARM LIST.\nUNITPARM DS    2A                     IEFEB4UV PARM LIST\nUNITTAB  DS    0F                     UNIT TABLE\nUNITNAME DS    CL8                    UNITNAME (INPUT TO IEFEB4UV)\nUNITLIST DS    F                      UNITNAME LIST ADDR (OUTPUT)\nUNITATTR DS    F                      DON'T PROVIDE ATTRIBUTE LIST\nUNITFLG  DS    X                      IEFEB4UV PARM LIST\n* END IEFEB4UV PARM LIST.\nTYPE     DS    X\nTRY      DS    X\nPRIVATE  EQU   X'01'\nSTORAGE  EQU   X'02'\nPUBLIC   EQU   X'04'\nVOLUME   EQU   X'08'\nUCB      EQU   X'10'\nUNIT     EQU   X'20'\nONLINE   EQU   X'40'\nMASK     EQU   X'80'\nATTR     DS    X\n*\n         DS    0D\n         UCBSCAN MF=(L,UCBSCANL)\n         DS    0D\nSCANWORK DS    CL100    WORK AREA USED BY THE UCBSCAN SERVICES\n         DS    0D\nUCBCOPY  DS    48C      UCB COMN SEGMENT & DEVICE DEPENDENT SEGMENT\n         DS    0D\nUCBEXTN  DS    36C      UCB COMN EXTENTION SEGMENT\nRETCODE  DS    F        RETURN CODE USED BY UCBSCAN SERVICES\nRSNCODE  DS    F        REASON CODE USED BY UCBSCAN SERVICES\nDEVNAME  DS    CL4      DEVICE NUMBER ASSOCIATED WITH UCB.\nDCETEXT  DS    XL256    DCE AREA\n*\n* LSPACE ITEMS\n*\nLSPCMSGA DS    A                                                      |\nLSPCPRMW DS    XL(LSPAEND-LSPCPRM) LSPACE PARM WORKAREA               |\nLSPCMSG  LSPACE MF=(L,EXPMSG)                                         |\n*\nDYNLEN   EQU   *-DYNAMIC\n         TITLE 'DSPACE - MACRO LSPACE PARM LIST'\nLSPCPRM  LSPACE MF=D                                                  |\n         TITLE 'DSPACE - MACRO IKJCPPL'\n         IKJCPPL\nCPPLLEN  EQU   *-CPPL\n         TITLE 'DSPACE - MACRO IKJPPL'\n         IKJPPL\nPPLLEN   EQU   *-PPL\n         TITLE 'DSPACE - MACRO IKJIOPL'\n         IKJIOPL\nIOPLLEN  EQU   *-IOPL\n         SPACE 3\n         TITLE 'DSPACE - MACRO IHAPSA'\n         IHAPSA LIST=YES\n         TITLE 'DSPACE - MACRO CVT'\n         CVT   DSECT=YES,LIST=YES\n         TITLE 'DSPACE - MACRO UCB'\nUCBDSECT DSECT\n         IEFUCBOB LIST=YES\n         END   &CSECT\n/*\n//*\n//LKED     EXEC PGM=IEWBLINK,\n//         PARM='NCAL,LET,LIST,XREF'\n//SYSLMOD   DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSUT1    DD  UNIT=VIO,SPACE=(TRK,(10,10))\n//SYSPRINT  DD  SYSOUT=*\n//SYSLIN    DD  DSN=&&SYSLIN,DISP=(OLD,DELETE)\n//          DD  DDNAME=SYSIN\n//SYSIN     DD  *\n IDENTIFY DSPACE('SHARE CBTMODS 426 SHARK UPDATES')\n SETSSI   CB460633\n NAME     DSPACE(R)\n/*\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FDSPACE": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00X\\x01\\x03\\x14\\x8f\\x01\\x14 \\x8f F\\x01#\\x01\\x1b\\x00\\x00\\xc3\\xd3\\xc9\\xe2\\xe3@@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2003-05-28T00:00:00", "modifydate": "2014-07-27T20:46:58", "lines": 291, "newlines": 283, "modlines": 0, "user": "CLIST"}, "text": "PROC 0 DEBUG\n/* ----------------------------------------------------------------- */\n/*                                                                   */\n/* Updated, 21May04, Sam Golob                                       */\n/*    Per Lionel Dyck, raised SYSOUTTRAP to 10000.                   */\n/*                                                                   */\n/* Updated, 21May03, William J. Smith                                */\n/* .  Added condition code check for LMDDISP in the event it gener-  */\n/*    ates a RC > 0.                                                 */\n/* .  Commented code that generated an \"in progress\" message for     */\n/*    large volume list displays.                                    */\n/*                                                                   */\n/* Updated, 16May03, William J. Smith                                */\n/* .  Tested with z/OS 01.03.00 HBB7706 BCPLEVEL=SP7.0.3 JES2 2.10   */\n/* .  Removed all PRC modifcations that were dependent upon panel    */\n/*    changes to ISRUDL and replaced with standard ISPF LM service   */\n/*    calls to display ISPF option 3.4 full-volume data set lists.   */\n/* .  Updated to support formatting and displaying of 4-byte UCB     */\n/*    addresses...                                                   */\n/*    - Changed SUBSTR values to properly index into the trapped     */\n/*      DSPACE command output.                                       */\n/*    - Changed arithmetic calculations to correctly sort 4-byte     */\n/*      UCB addresses.                                               */\n/*    - Added support for display of the volume MOUNT attribute.     */\n/*    - Removed MODLINE and replace with Z variables in the panel    */\n/*      and a corresponding )MODEL statement.                        */\n/* .  Added new panel message in support of options B or S.          */\n/* .  Increased SYSOUTTRAP limit from 256 to 4096 for systems with   */\n/*    large numbers of volumes.                                      */\n/* .  Replaced cascading IF statements with a single SELECT/END.     */\n/* .  Converted all messages to \"new\" format with rewriten text.     */\n/* .  Removed unused variables.                                      */\n/*                                                                   */\n/* CHANGE LOG -                                                      */\n/*  12/05/86 PTW IMPLEMENTED                                         */\n/*  07/27/14 SBG Added support for total number of cylinders on      */\n/*               the volume                                          */\n/*                                                                   */\n/* ----------------------------------------------------------------- */\nIF &DEBUG = DEBUG THEN +\n  CONTROL NOFLUSH LIST CONLIST SYMLIST\nELSE +\n  CONTROL NOFLUSH NOLIST\n\nISPEXEC VGET (NAME SORT) SHARED\n\nSET OLDNAME = &STR(&NAME)\nSET OLDSORT = &STR(&SORT)\n\nIF &STR(&NAME) = &STR( ) THEN +\n  DO\n    SET NAME    = ONLINE\n    SET OLDNAME = ONLINE\n  END\n\nISPEXEC DISPLAY PANEL(FDSPACEP)\n\nIF &LASTCC \u00ac= 8 THEN +\n  DO\n    REFRESH: +\n    CONTROL NOCONLIST NOLIST\n    ISPEXEC CONTROL NONDISPL\n    ISPEXEC DISPLAY PANEL(FDSPACEP)\n    SET &MSGID =\n\n    ISPEXEC TBCREATE MEMTABLE REPLACE NOWRITE +\n                              KEYS(VOLUME UCB) +\n                              NAMES(VTOC ATTR CYL TRK EXT CYLC TRKC +\n                               NOCY SORTUCB SORTFREE SORTCONT)\n\n    SET &SYSOUTTRAP = 10000\n    DSPACE (&NAME)\n    SET &SYSOUTTRAP = 0\n\n    SET &LINE = 1\n    SET &SL   = &SYSOUTLINE\n    SET &LNES = &EVAL(&SYSOUTLINE - 1)\n\n    DO WHILE &LINE < &SL+1\n      SET &T = &&SYSOUTLINE&LINE\n      SET &SYSDVAL = &STR(&T)\n      READDVAL  &A &B &C &D &E &F &G &H &I &J\n      IF &DEBUG = DEBUG THEN +\n        WRITE A=&A B=&B C=&C D=&D E=&E F=&F G=&G H=&H I=&I J=&J\n\n      SELECT (&A)\n        WHEN (&STR(VOLSER)) +\n          DO\n            SET STEXT = &STR(\"&NAME\" not found)\n            SET LTEXT = &STR(+\n             VOLSER, UCB, or UNIT \"&NAME\" not found. Please re-enter)\n            SET MSGNUM = &STR(FDS000)\n            ISPEXEC SETMSG MSG(&MSGNUM)\n          END\n        WHEN (&STR(IKJ56702I)) +\n          DO\n            SET STEXT = &STR(\"&NAME\" not found)\n            SET LTEXT = &STR(+\n             IKJ56702I Invalid volume... Please re-enter)\n            SET MSGNUM = &STR(FDS000)\n            ISPEXEC SETMSG MSG(&MSGNUM)\n          END\n        WHEN (&STR(TSO)) +\n          DO\n            SET STEXT = &STR(\"&NAME\" not found)\n            SET LTEXT = &STR(+\n             TSO PARSE ERROR. DSPACE command terminated)\n            SET MSGNUM = &STR(FDS000)\n            ISPEXEC SETMSG MSG(&MSGNUM)\n          END\n        OTHERWISE +\n          DO\n            IF &SUBSTR(1:3,&A) \u00ac= &STR(VOL) THEN +\n              DO\n                SET VOLUME = &STR(&A)\n                IF &B = &STR(I) THEN +\n                  DO\n                    SET VTOC = &STR(&B)\n                    SET UCB  = &STR(&C)\n                    SET ATTR = &STR(&E)\n                    SET CYL  = &SUBSTR(7:12,&F)\n                    SET TRK  = &STR(&G)\n                    SET EXT  = &SUBSTR(1:6,&STR(&H))\n                    SET CYLC = &SUBSTR(8:13,&STR(&H))\n                    SET TRKC = &STR(&I)\n                    SET NOCY = &STR(&J)\n                  END\n                IF &B \u00ac= &STR(I) AND &B \u00ac= &STR(OFFLINE) THEN +\n                  DO\n                    SET VTOC = &STR( )\n                    SET UCB  = &STR(&B)\n                    SET ATTR = &STR(&D)\n                    SET CYL  = &SUBSTR(7:12,&E)\n                    SET TRK  = &STR(&F)\n                    SET EXT  = &SUBSTR(1:6,&STR(&G))\n                    SET CYLC = &SUBSTR(8:13,&STR(&G))\n                    SET TRKC = &STR(&H)\n                    SET NOCY = &STR(&I)\n                  END\n                IF &STR(&B) = &STR(OFFLINE) THEN +\n                  DO\n                    SET VOLUME = &STR( )\n                    SET VTOC   = &STR( )\n                    SET UCB    = &STR(&A)\n                    SET ATTR   = &STR(OFFLINE)\n                    SET CYL    = &STR( )\n                    SET TRK    = &STR( )\n                    SET EXT    = &STR( )\n                    SET CYLC   = &STR( )\n                    SET TRKC   = &STR( )\n                    SET NOCY   = &STR( )\n                  END\n\n/* ----------------------------------------------------------------- */ /\n/*                                                                   */ /\n/* This routine converts the character mode representation of a      */ /\n/* 4-byte UCB address to its numeric equivalent to allow TBSORT to   */ /\n/* correctly sort and display it.                                    */ /\n/*                                                                   */ /\n/* ----------------------------------------------------------------- */ /\n\n                SET CNTR = 1\n                DO WHILE &CNTR <= 4\n                  SET W&CNTR = &SUBSTR(&CNTR,&UCB)\n                  SET DIGIT = &SUBSTR(&CNTR,&UCB)\n                  IF &DIGIT = &STR(A) THEN SET W&CNTR = 10\n                  IF &DIGIT = &STR(B) THEN SET W&CNTR = 11\n                  IF &DIGIT = &STR(C) THEN SET W&CNTR = 12\n                  IF &DIGIT = &STR(D) THEN SET W&CNTR = 13\n                  IF &DIGIT = &STR(E) THEN SET W&CNTR = 14\n                  IF &DIGIT = &STR(F) THEN SET W&CNTR = 15\n                  SET CNTR = &CNTR + 1\n                END\n                SET SORTUCB  = &EVAL(&W1*4096 + &W2*256 + &W3*16 + &W4)\n                SET SORTFREE = &STR(&CYL || &TRK)\n                SET SORTCONT = &STR(&CYLC || &TRKC)\n/* ----------------------------------------------------------------- */\n/*              SET LNEC     = &LINE - 1                             */\n/*              IF &EVAL(&LNEC//50) = 0 THEN +                       */\n/*                DO                                                 */\n/*                  ISPEXEC SETMSG  MSG(FDS005)                      */\n/*                  ISPEXEC CONTROL DISPLAY LOCK                     */\n/*                  ISPEXEC DISPLAY MSG(FDS005)                      */\n/*                END                                                */\n/* ----------------------------------------------------------------- */\n                ISPEXEC TBADD    MEMTABLE\n                ISPEXEC TBVCLEAR MEMTABLE\n              END\n          END\n      END\n      SET &LINE = &LINE+1\n    END\n\n    RESORT: +\n    SELECT (&SORT)\n      WHEN (&STR( )) +\n        ISPEXEC TBSORT MEMTABLE FIELDS(VOLUME C A SORTUCB N A)\n      WHEN (1) +\n        ISPEXEC TBSORT MEMTABLE FIELDS(VOLUME C A SORTUCB N A)\n      WHEN (2) +\n        ISPEXEC TBSORT MEMTABLE FIELDS(SORTUCB N A)\n      WHEN (3) +\n        ISPEXEC TBSORT MEMTABLE FIELDS(SORTFREE B D)\n      WHEN (4) +\n        ISPEXEC TBSORT MEMTABLE FIELDS(SORTCONT B D)\n    END\n\n    ISPEXEC TBTOP MEMTABLE\n    ISPEXEC TBDISPL MEMTABLE PANEL(FDSPACEP) +\n                             POSITION(ROW) +\n                             AUTOSEL(NO) +\n                             MSG(&MSGNUM)\n    SET &TBDRC = &LASTCC\n\n    DO WHILE &TBDRC < 8\n      IF &STR(&MSGNUM) \u00ac= &STR( ) THEN +\n        DO\n          SET OLDNAME = &STR(&NAME)\n          SET &MSGNUM = &STR( )\n          GOTO REFRESH\n        END\n      ELSE +\n        SET &MSGNUM = &STR( )\n\n      IF &STR(&NAME) \u00ac= &STR(&OLDNAME) THEN +\n        DO\n          SET OLDNAME = &STR(&NAME)\n          GOTO REFRESH\n        END\n\n      IF &STR(&SORT) \u00ac= &STR(&OLDSORT) THEN +\n        DO\n          SET OLDSORT = &STR(&SORT)\n          GOTO RESORT\n        END\n\n/* ----------------------------------------------------------------- */\n/*                                                                   */\n/* The variable ZTDSELS is created by the TBDISPL to indicate the    */\n/* number of selected rows.  It includes the current selected row,   */\n/* if one exists, and any pending selected rows.  It is an output    */\n/* variable whose length is 4.                                       */\n/*                                                                   */\n/* If either \"S\" or \"B\" is selected by one or more volumes, call the */\n/* ISPF LMDDISP to cause a \"SPACE\" view of all data sets on the      */\n/* volume to be displayed.  This code supercedes and replaces the    */\n/* obsolete PRC modifications to explicitly call ISRUDL with custom  */\n/* user modifications.                                               */\n/*                                                                   */\n/* ----------------------------------------------------------------- */\n\n      IF &ZTDSELS > 0 THEN +\n        DO\n          IF &STR(&VOLUME) = &STR( ) THEN +\n            DO\n              ISPEXEC SETMSG MSG(FDS001)\n              ISPEXEC TBDISPL MEMTABLE POSITION(ROW) +\n                                       AUTOSEL(NO) +\n                                       CSRROW(&ROW) +\n                                       MSG(FDS001)\n              SET &TBDRC = &LASTCC\n            END\n          ELSE +\n            DO\n              ISPEXEC LMDINIT LISTID(ID) VOLUME(&VOLUME)\n\n              ISPEXEC CONTROL DISPLAY SAVE\n              ISPEXEC LMDDISP LISTID(&ID) VIEW(SPACE) CONFIRM(YES)\n              IF &LASTCC > 0 THEN +\n                ISPEXEC SETMSG MSG(&ZERRMSG)\n              ISPEXEC CONTROL DISPLAY RESTORE\n\n              ISPEXEC LMDFREE LISTID(&ID)\n\n              ISPEXEC TBDISPL MEMTABLE POSITION(ROW) +\n                                       AUTOSEL(NO) +\n                                       CSRROW(&ROW)\n              SET &TBDRC = &LASTCC\n            END\n        END\n      ELSE +\n        DO\n          ISPEXEC TBDISPL MEMTABLE POSITION(ROW)\n          SET &TBDRC = &LASTCC\n        END\n      CONTROL NOLIST NOCONLIST\n    END\n    ISPEXEC TBEND MEMTABLE\n    ISPEXEC VPUT (NAME SORT) SHARED\n  END\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FDSPACEP": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00\\x07\\x01\\x03\\x14\\x7f\\x01\\x14 \\x8f C\\x00`\\x00X\\x00\\x00\\xd7\\xc1\\xd5\\xc5\\xd3@@@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2003-05-27T00:00:00", "modifydate": "2014-07-27T20:43:07", "lines": 96, "newlines": 88, "modlines": 0, "user": "PANEL"}, "text": ")ATTR DEFAULT(%+_)\n  $ TYPE(TEXT)   INTENS(HIGH) COLOR(PINK)\n  _ TYPE(INPUT)  INTENS(HIGH) COLOR(YELLOW) CAPS(ON)\n  % TYPE(TEXT)   INTENS(HIGH) COLOR(WHITE)\n  \u00ac TYPE(TEXT)   INTENS(HIGH) COLOR(RED)\n  + TYPE(TEXT)   INTENS(LOW)  COLOR(TURQ)\n  ~ TYPE(TEXT)   INTENS(LOW)  COLOR(YELLOW)\n  | TYPE(TEXT)   INTENS(HIGH) COLOR(BLUE)\n  @ TYPE(OUTPUT) INTENS(LOW)  COLOR(BLUE)\n)BODY EXPAND(\\\\) ASIS\n\u00ac\\-\\~ D A S D   S P A C E \u00ac\\-\\\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_ZUSC+\n%                                                                              +\n|Storage%===>_NAME                                                             +\n+                       (Volser/UCB Addr/Online/Private/Public/Storage & w/mask)\n|                                                                              +\n|Sort by%===>_Z+        (1=Volser, 2=Device Numb, 3=Free Cyls, 4=Maximum-Contig)\n%                                                                              +\n|Type \"S\" or \"B\" next to one or more VOLSERs to display a list of data sets.\n%                                                                              +\n%           DEVC   IX    MOUNT   FREE   FREE    EXT     MAXMUM-CONTIG   TOTAL\n%S VOLSER   NUMB  VTOC   ATTR    CYLS   TRKS    NUM     CYLS   TRKS     CYLS\n+===============================================================================\n)MODEL\n_S@Z       @Z      @Z   @Z      @Z     @Z      @Z      @Z     @Z       @Z\n)INIT\n .CURSOR  = NAME\n .HELP    = FDSPACH1\n &S       = ' '\n .ZVARS   = '(SORT,VOLUME,UCB,VTOC,ATTR,CYL,TRK,EXT,CYLC,TRKC,NOCY)'\n\n IF (&SORT = &Z)\n   &SORT = 1\n IF (&SORT \u00ac= ' ')\n   VGET (SORT,OLDSORT) SHARED\n\n &OLDNAME = &NAME\n &OLDSORT = &SORT\n\n)REINIT\n REFRESH (*)\n IF (&S = ' ')\n   .CURSOR = NAME\n &S = ' '\n IF (&SORT = &Z)\n   &SORT = 1\n IF (&SORT \u00ac= ' ')\n   VGET (SORT,OLDSORT) SHARED\n\n)PROC\n VER (&SORT,LIST,1,2,3,4,MSG=FDS002)\n VER (&S,LIST,B,S,MSG=FDS003)\n\n IF (&NAME = &Z)\n   &NAME = '&OLDNAME'\n IF (&SORT = &Z)\n   &SORT = '&OLDSORT'\n &S = ' '\n\n VPUT (SORT,S,OLDNAME,NAME,OLDSORT,SORT) SHARED\n\n)END\n/* ----------------------------------------------------------------- */\n/*                                                                   */\n/* --------------------------------------------------                */\n/* DSPACE TSO Command Processor ISPF Front-End Dialog                */\n/* --------------------------------------------------                */\n/*                                                                   */\n/* - Updated 10Jun03, Sam Golob                                      */\n/*                                                                   */\n/*   . After entering S or B next to a Volume, blank the &S field    */\n/*     for next time.                                                */\n/*                                                                   */\n/* - Updated 20May95, William J. Smith                               */\n/*                                                                   */\n/*   . Source:  SHARE CBTMODS tape no. 426, file 369                 */\n/*   . Author:  Unknown                                              */\n/*   . Tested:  z/Series T/REX running z/OS 1.3, TSO/E 3.3, ISPF 5.2 */\n/*   . Updated for use with 4-byte UCBs, eliminated restriction on   */\n/*     specifying a single volume serial number on the panel, and    */\n/*     incorporated both color and support for mount status.         */\n/*   . Incorported support for LMDDISP service to display data sets  */\n/*     on the volume.                                                */\n/*   * Updated to support total number of cylinders on the volume.   */\n/*                                                                   */\n/*                                                                   */\n/* -----------------------------------                               */\n/* Return codes for the DSPACE command                               */\n/* -----------------------------------                               */\n/*                                                                   */\n/*   0  Processing successful.                                       */\n/*   8  VOLSER, UCB, OR UNIT NOT FOUND, IGNORED.                     */\n/*  12  IKJ56702I INVALID VOLUME,                                    */\n/*      TSO PARSE ERROR, PROGRAM TERMINATED.                         */\n/*                                                                   */\n/* ----------------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FDSPACH1": {"ttr": 1544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x03\\x14\\x7f\\x01\\x03\\x14\\x7f\\x10I\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd7\\xc1\\xd5\\xc5\\xd3@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2003-05-27T00:00:00", "modifydate": "2003-05-27T10:49:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "PANEL"}, "text": ")BODY EXPAND(\\\\)\n%\\-\\ DASD Space (1 of 4) \\-\\\n%Command ===>_ZCMD                                                             +\n%\n%                --------------------------------------------------\n                 | Direct Access Storage Device Space Utilization |\n                 --------------------------------------------------\n+\n% DASD Space+is an ISPF dialog that displays space utilization of online\n  direct access storage devices in a scrollable, tabular format.  DASD Space\n  is driven by a TSO CLIST which uses the%SYSOUTTRAP+facility to capture the\n  PUTLINE output of the%DSPACE TSO command processor+and displays it in an\n  ISPF storage resident table.  Consequently, DASD SPACE is entirely dependent\n  upon the output that is generated by the DSPACE TSO command processor to\n  properly function.\n\n  DSPACE is an assembly language TSO command processor that uses the%UCBSCAN+\n  and%LSPACE (SVC 78)+macros to obtain and display the following information\n  about online direct access storage devices:%volume serial, index VTOC\n  status, UNIT address, device type, mount attribute, and space utilization.\n+ DASD space utilization consists of: 1. total no. of%free cylinders,+2. total\n  no.  of of%free tracks,+3. total no. of%extents,+and 4. the maximum number\n  of%contiguous cylinders and tracks.\n+\n\n)PROC\n  &ZCONT = FDSPACH2\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FDSPACH2": {"ttr": 1546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00R\\x01\\x03\\x14\\x7f\\x01\\x14 \\x8f!3\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd7\\xc1\\xd5\\xc5\\xd3@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2003-05-27T00:00:00", "modifydate": "2014-07-27T21:33:52", "lines": 29, "newlines": 29, "modlines": 0, "user": "PANEL"}, "text": ")BODY EXPAND(\\\\)\n%\\-\\ DASD Space (2 of 4) \\-\\\n%Command ===>_ZCMD                                                             +\n%\n%                --------------------------------------------------\n                 | Direct Access Storage Device Space Utilization |\n                 --------------------------------------------------\n+\n  DASD Space%reorders and displays+the DSPACE TSO command processor output in\n  the following format:\n\n%           DEVC   IX    MOUNT   FREE   FREE    EXT     MAXMUM-CONTIG   TOTAL\n%S VOLSER   NUMB  VTOC   ATTR    CYLS   TRKS    NUM     CYLS   TRKS     CYLS\n%============================================================================\n+\n  DASD Space prompts the user to enter data in three areas on the panel:\n% \"Storage\", \"Sort by\",+and either an%\"S\" or \"B\"+next to one or more volume\n  serial numbers.\n\n  The%\"Storage\"+field is extremely flexible and spans the width of the entire\n  panel.  This gives the user the flexibility to enter multiple selection\n  criteria for online direct access storage device selection and display.  The\n% default value+for the storage field (if nothing is specified) is%ONLINE.\n+ That is, ALL online storage devices will be displayed in the table.\n\n)PROC\n  &ZCONT = FDSPACH3\n  &ZUP = FDSPACH1\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FDSPACH3": {"ttr": 1548, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x03\\x14\\x7f\\x01\\x03\\x14\\x7f\\x10I\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd7\\xc1\\xd5\\xc5\\xd3@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2003-05-27T00:00:00", "modifydate": "2003-05-27T10:49:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "PANEL"}, "text": ")BODY EXPAND(\\\\)\n%\\-\\ DASD Space (3 of 4) \\-\\\n%Command ===>_ZCMD                                                             +\n%\n%                --------------------------------------------------\n                 | Direct Access Storage Device Space Utilization |\n                 --------------------------------------------------\n+\n  The%default sort order+for output displayed in the table is an%ascending\n  character sort by volume serial.+ This display can take time to generate if\n  large numbers of storage volumes are online.\n\n  Other \"reserved\" keywords that may be specified in this field include the\n  following: %STORAGE, PUBLIC, and PRIVATE.+ One or more unique volume serials\n  may be entered along with a 4 character UCB address, or UNIT name with a\n  maximum length of 8 characters. %Any combination+of these values is\n  permissible in the \"Storage\" input field.\n\n  A terminating%asterisk (mask)+may also be specified as a%wild-card+value\n  with a volume serial. For example, DEV* TST* SYSRS*, may all be\n  simultaneously entered in the \"Storage\" field along with any combination of\n  reserved keywords.  The following example of a \"Storage\" field selection\n  criteria is valid:\n\n                   %Storage ===> STORAGE 4A* CLR* SYS* PUBLIC+\n\n)PROC\n  &ZCONT = FDSPACH4\n  &ZUP = FDSPACH2\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FDSPACH4": {"ttr": 1550, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x03\\x14\\x7f\\x01\\x03\\x14\\x7f\\x10I\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd7\\xc1\\xd5\\xc5\\xd3@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2003-05-27T00:00:00", "modifydate": "2003-05-27T10:49:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "PANEL"}, "text": ")BODY EXPAND(\\\\)\n%\\-\\ DASD Space (4 of 4) \\-\\\n%Command ===>_ZCMD                                                             +\n%\n%                --------------------------------------------------\n                 | Direct Access Storage Device Space Utilization |\n                 --------------------------------------------------\n+\n The following alternative%sort orders+may be optionally specified for any\n combination of displayed storage volumes in the%\"Sort by\"+field:%1-Volume\n serial, 2-Device number (i.e. UCB address), 3-Total no. free cylinders, and\n 4-Maximum no. of contiguous free cylinders.\n+\n The characters%\"S\" or \"B\"+may be typed on one or more online storage devices\n to cause the LMDDISP dialog service to be invoked placing the user in an ISPF\n option 3.4 display of all data sets that reside on one or more volumes.  The\n default view for this display is the %data set space+display.\n\n\n\n\n\n\n\n\n)PROC\n  &ZUP = FDSPACH1\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FDS00": {"ttr": 1552, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x03\\x14\\x7f\\x01\\x03\\x14\\x7f\\x10I\\x00\\x17\\x00\\x17\\x00\\x00\\xd4\\xe2\\xc7@@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2003-05-27T00:00:00", "modifydate": "2003-05-27T10:49:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "MSG"}, "text": "FDS000  '&STEXT'                       .TYPE=WARNING  .WINDOW=RESP\n'&LTEXT..'\n\nFDS001  '&UCB DASD device OFFLINE'     .TYPE=WARNING  .WINDOW=RESP\n'Requests to display a list of data sets on OFFLINE volumes cannot ' +\n'be processed.  Press the Enter key to continue processing.'\n\nFDS002  'Enter valid SORT option '     .TYPE=WARNING  .WINDOW=RESP\n'You have entered an invalid SORT option.  Sort option are in the ' +\n'range of 1 to 4 as described in the panel body itself.'\n\nFDS003  'Enter value of S or B   '     .TYPE=WARNING  .WINDOW=RESP\n'You have entered an invalid selection code to display a list of ' +\n'data sets on a volume.  Enter either S or B to display a list of ' +\n'all data sets on one or more ONLINE DASD volumes.'\n\nFDS004  'Press ENTER to continue '     .TYPE=WARNING  .WINDOW=RESP\n'Make changes to \"NAMES\" or \"SORT\" as appropriate.  Press ENTER to '+\n'continue.'\n\nFDS005  'Line &LNEC of &LNES     '     .TYPE=WARNING  .WINDOW=RESP\n' '\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT633/FILE633.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT633", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}