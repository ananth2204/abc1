{"INMR01": {"INMLRECL": 80, "INMFNODE": "ORIGNODE", "INMFUID": "ORIGUID", "INMTNODE": "DESTNODE", "INMTUID": "DESTUID", "INMFTIME": "20191002000633000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 6160, "INMRECFM": "FB", "INMDIR": 44, "INMDSNAM": "PDPCLIB.MACLIB", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 6176, "INMBLKSZ": 6180, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"PDPCLIB.MACLIB": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 6160, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 6180, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 1113, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 0, "DS1REFD": "000000", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x00\\x00\\x00\\x00'", "DS1LSTAR": "b'\\x00\\x00\\x00'", "DS1TRBAL": "b''"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0cvD\\x04\\x94\\x0c\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0cvD\\x04\\x94\\x0c\\xd8'", "b'X\\x000\\x10\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x80\\x00\\x02\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"PDPEPIL": {"ttr": 263, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n&N       PDPEPIL\n         GBLB  &PDFEPIL\n         AIF   (&PDFEPIL).ONCED\n&PDFEPIL SETB  1\n*\n* The standard GCC exit code macro\n* by Chris Langford and Dave Jones\n* August, 2006\n*\n* This code is in the public domain and can be used without\n* restriction in any application, either commercial or non-commerical,\n* and can be freely redistributed.\n*\n.ONCED   ANOP  ,\n&N       L     13,4(,13)\n         RETURN (14,12),RC=(15)\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PDPMAIN": {"ttr": 265, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "**********************************************************************\n*                                                                    *\n*  This macro was written by Paul Edwards                            *\n*  Released to the public domain                                     *\n*                                                                    *\n**********************************************************************\n**********************************************************************\n*                                                                    *\n*  PDPMAIN - standard code to insert when \"main\" found.              *\n*                                                                    *\n**********************************************************************\n*\n         DS    0F\n*\n* Eyecatcher\n*\n         DC    C'GCCMVS!!'\n*\n* This is the normal entry point for the module regardless\n* of whether running on z/OS or MVS 3.8j\n*\n         EXTRN @@CRT0\n         ENTRY @@MAIN\n@@MAIN   DS    0H\n         BALR  15,0\n         USING *,15\n         L     15,=V(@@CRT0)\n         BR    15\n         LTORG\n         DROP  15\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDPPRLG": {"ttr": 267, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n&N       PDPPRLG &CINDEX=,&FRAME=,&BASER=,&ENTRY=\n         GBLB  &PDFPRLG\n         AIF   (&PDFPRLG).ONCED\n&PDFPRLG SETB  1\n*\n* The standard GCC entry prolog macro\n* by Chris Langford and Dave Jones\n* August, 2006\n*\n* This code is in the public domain and can be used without\n* restriction in any application, either commercial or non-commerical,\n* and can be freely redistributed.\n*\n.ONCED   AIF   ('&ENTRY' EQ 'NO').NENT\n*\n         ENTRY &N\n.NENT    ANOP\n&N       DS    0H\n         USING *,&BASER\n         SAVE  (14,12),,&N\n         LR    &BASER,15\n         L     15,76(,13)\n         ST    13,4(,15)\n         ST    15,8(,13)\n         LR    13,15\n         AIF   ('&FRAME' EQ '' OR '&FRAME' EQ '0').COMNUM\n         AIF   (T'&FRAME NE 'N').NONNUM\n         AIF   (&FRAME GE 4096).NONNUM\n         LA    15,&FRAME.(,15)\n         AGO   .COMNUM\n.NONNUM  A     15,=A(&FRAME)\n.COMNUM  ST    15,76(13)\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PDPTOP": {"ttr": 269, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "**********************************************************************\n*                                                                    *\n*  This macro was written by Paul Edwards                            *\n*  Released to the public domain                                     *\n*                                                                    *\n**********************************************************************\n**********************************************************************\n*                                                                    *\n*  PDPTOP - standard code for the start of every assembler file.     *\n*                                                                    *\n*  (version customized for S/380 - see PDPTOP/PDPORIG for original)  *\n*                                                                    *\n**********************************************************************\n*\n* Is the GCC or IBM C calling convention being used?\n*\n         GBLC &COMP               Declare compiler switch\n*\n* What system are the compiles being done for?\n*\n         GBLC &ZSYS               Declare variable for system\n*\n* Do we want to support environments like MVS/XA needing step down?\n*\n         GBLC &STEPD              Declare variable for step-down\n*\n* Which OS are we targetting?\n*\n         GBLC &OS                 Declare compiler switch\n*\n* Are PUTs done in locate or move mode?\n*\n         GBLC &OUTM\n*\n*\n*\n&COMP    SETC 'GCC'               Indicate that this is for GCC\n* &COMP    SETC 'IBMC'            Indicate that this is for IBM C\n&ZSYS    SETC 'S380'              Define either S370, S380 or S390\n&STEPD   SETC 'YES'               Indicate we want to step down\n&OUTM    SETC 'M'                 Indicate move mode\n* &OUTM    SETC 'L'               Indicate locate mode\n&OS      SETC 'UNKNOWN'           Indicate that the OS is not known\n* &OS      SETC 'MVS'             Indicate that this is for MVS\n* &OS      SETC 'MUSIC'           Indicate that this is for MUSIC/SP\n*\n* The S/380 model (e.g. MVS/XA) is a hybrid model - the code\n* can reside below the line so that it can do I/O, but it\n* can address data above the line. So it can constantly\n* switch between AMODEs.\n*\n         AMODE ANY\n         RMODE ANY\n*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PDP370": {"ttr": 257, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "**********************************************************************\n*                                                                    *\n*  This macro was written by Paul Edwards                            *\n*  Released to the public domain                                     *\n*                                                                    *\n**********************************************************************\n**********************************************************************\n*                                                                    *\n*  PDPTOP - standard code for the start of every assembler file.     *\n*                                                                    *\n*  (version customized for S/370 - see PDPTOP/PDPORIG for original)  *\n*                                                                    *\n**********************************************************************\n*\n* Is the GCC or IBM C calling convention being used?\n*\n         GBLC &COMP               Declare compiler switch\n*\n* What system are the compiles being done for?\n*\n         GBLC &ZSYS               Declare variable for system\n*\n* Do we want to support environments like MVS/XA needing step down?\n*\n         GBLC &STEPD              Declare variable for step-down\n*\n* Which OS are we targetting?\n*\n         GBLC &OS                 Declare compiler switch\n*\n* Are PUTs done in locate or move mode?\n*\n         GBLC &OUTM\n*\n*\n*\n&COMP    SETC 'GCC'               Indicate that this is for GCC\n* &COMP    SETC 'IBMC'            Indicate that this is for IBM C\n&ZSYS    SETC 'S370'              Define either S370, S380 or S390\n&STEPD   SETC 'NO'                Indicate we don't want to step down\n&OUTM    SETC 'M'                 Indicate move mode\n* &OUTM    SETC 'L'               Indicate locate mode\n&OS      SETC 'UNKNOWN'           Indicate that the OS is not known\n* &OS      SETC 'MVS'             Indicate that this is for MVS\n* &OS      SETC 'MUSIC'           Indicate that this is for MUSIC/SP\n*\n* AMODE/RMODE not available on S370. In the S/370 model,\n* everything is 24-bit so these considerations are not\n* important.\n*\n*        AMODE ANY\n*        RMODE ANY\n*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PDP380": {"ttr": 259, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "**********************************************************************\n*                                                                    *\n*  This macro was written by Paul Edwards                            *\n*  Released to the public domain                                     *\n*                                                                    *\n**********************************************************************\n**********************************************************************\n*                                                                    *\n*  PDPTOP - standard code for the start of every assembler file.     *\n*                                                                    *\n*  (version customized for S/380 - see PDPTOP/PDPORIG for original)  *\n*                                                                    *\n**********************************************************************\n*\n* Is the GCC or IBM C calling convention being used?\n*\n         GBLC &COMP               Declare compiler switch\n*\n* What system are the compiles being done for?\n*\n         GBLC &ZSYS               Declare variable for system\n*\n* Do we want to support environments like MVS/XA needing step down?\n*\n         GBLC &STEPD              Declare variable for step-down\n*\n* Which OS are we targetting?\n*\n         GBLC &OS                 Declare compiler switch\n*\n* Are PUTs done in locate or move mode?\n*\n         GBLC &OUTM\n*\n*\n*\n&COMP    SETC 'GCC'               Indicate that this is for GCC\n* &COMP    SETC 'IBMC'            Indicate that this is for IBM C\n&ZSYS    SETC 'S380'              Define either S370, S380 or S390\n&STEPD   SETC 'YES'               Indicate we want to step down\n&OUTM    SETC 'M'                 Indicate move mode\n* &OUTM    SETC 'L'               Indicate locate mode\n&OS      SETC 'UNKNOWN'           Indicate that the OS is not known\n* &OS      SETC 'MVS'             Indicate that this is for MVS\n* &OS      SETC 'MUSIC'           Indicate that this is for MUSIC/SP\n*\n* The S/380 model (e.g. MVS/XA) is a hybrid model - the code\n* can reside below the line so that it can do I/O, but it\n* can address data above the line. So it can constantly\n* switch between AMODEs.\n*\n         AMODE ANY\n         RMODE ANY\n*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PDP390": {"ttr": 261, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "**********************************************************************\n*                                                                    *\n*  This macro was written by Paul Edwards                            *\n*  Released to the public domain                                     *\n*                                                                    *\n**********************************************************************\n**********************************************************************\n*                                                                    *\n*  PDPTOP - standard code for the start of every assembler file.     *\n*                                                                    *\n*  (version customized for S/390 - see PDPTOP/PDPORIG for original)  *\n*                                                                    *\n**********************************************************************\n*\n* Is the GCC or IBM C calling convention being used?\n*\n         GBLC &COMP               Declare compiler switch\n*\n* What system are the compiles being done for?\n*\n         GBLC &ZSYS               Declare variable for system\n*\n* Do we want to support environments like MVS/XA needing step down?\n*\n         GBLC &STEPD              Declare variable for step-down\n*\n* Which OS are we targetting?\n*\n         GBLC &OS                 Declare compiler switch\n*\n* Are PUTs done in locate or move mode?\n*\n         GBLC &OUTM\n*\n*\n*\n&COMP    SETC 'GCC'               Indicate that this is for GCC\n* &COMP    SETC 'IBMC'            Indicate that this is for IBM C\n&ZSYS    SETC 'S390'              Define either S370, S380 or S390\n&STEPD   SETC 'NO'                Indicate we don't want to step down\n&OUTM    SETC 'M'                 Indicate move mode\n* &OUTM    SETC 'L'               Indicate locate mode\n&OS      SETC 'UNKNOWN'           Indicate that the OS is not known\n* &OS      SETC 'MVS'             Indicate that this is for MVS\n* &OS      SETC 'MUSIC'           Indicate that this is for MUSIC/SP\n*\n* The S/390 model (with code able to reside above the 16 MB line)\n* has no AMODE/RMODE restrictions.\n* Note that this option isn't available under CMS, which\n* requires the executable to be RMODE 24 - even under z/VM.\n*\n         AMODE ANY\n         RMODE ANY\n*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT852/CBT.V500.FILE852.PDS/PDPMAC.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT852/CBT.V500.FILE852.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}