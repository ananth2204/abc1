         COPY  PDPTOP
         CSECT
* X-var debug_hooks
         ENTRY DEBUG@HO
* Program data area
         DS    0F
DEBUG@HO EQU   *
         DC    V(DO@NOTHI)
* Program text area
@@LC0    EQU   *
         DC    C'rtl'
         DC    X'0'
@@LC1    EQU   *
         DC    C'sibling'
         DC    X'0'
@@LC2    EQU   *
         DC    C'eh'
         DC    X'0'
@@LC3    EQU   *
         DC    C'jump'
         DC    X'0'
@@LC4    EQU   *
         DC    C'ssa'
         DC    X'0'
@@LC5    EQU   *
         DC    C'ssaccp'
         DC    X'0'
@@LC6    EQU   *
         DC    C'ssadce'
         DC    X'0'
@@LC7    EQU   *
         DC    C'ussa'
         DC    X'0'
@@LC8    EQU   *
         DC    C'cse'
         DC    X'0'
@@LC9    EQU   *
         DC    C'addressof'
         DC    X'0'
@@LC10   EQU   *
         DC    C'gcse'
         DC    X'0'
@@LC11   EQU   *
         DC    C'loop'
         DC    X'0'
@@LC12   EQU   *
         DC    C'cse2'
         DC    X'0'
@@LC13   EQU   *
         DC    C'cfg'
         DC    X'0'
@@LC14   EQU   *
         DC    C'bp'
         DC    X'0'
@@LC15   EQU   *
         DC    C'life'
         DC    X'0'
@@LC16   EQU   *
         DC    C'combine'
         DC    X'0'
@@LC17   EQU   *
         DC    C'ce'
         DC    X'0'
@@LC18   EQU   *
         DC    C'regmove'
         DC    X'0'
@@LC19   EQU   *
         DC    C'sched'
         DC    X'0'
@@LC20   EQU   *
         DC    C'lreg'
         DC    X'0'
@@LC21   EQU   *
         DC    C'greg'
         DC    X'0'
@@LC22   EQU   *
         DC    C'postreload'
         DC    X'0'
@@LC23   EQU   *
         DC    C'flow2'
         DC    X'0'
@@LC24   EQU   *
         DC    C'peephole2'
         DC    X'0'
@@LC25   EQU   *
         DC    C'rnreg'
         DC    X'0'
@@LC26   EQU   *
         DC    C'ce2'
         DC    X'0'
@@LC27   EQU   *
         DC    C'sched2'
         DC    X'0'
@@LC28   EQU   *
         DC    C'stack'
         DC    X'0'
@@LC29   EQU   *
         DC    C'bbro'
         DC    X'0'
@@LC30   EQU   *
         DC    C'mach'
         DC    X'0'
@@LC31   EQU   *
         DC    C'dbr'
         DC    X'0'
* Program data area
         DS    0F
@@0      EQU   *
         DC    A(@@LC0)
         DC    X'99'
         DC    X'00'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC1)
         DC    X'89'
         DC    X'00'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC2)
         DC    X'88'
         DC    X'00'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC3)
         DC    X'91'
         DC    X'00'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC4)
         DC    X'85'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC5)
         DC    X'E6'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC6)
         DC    X'E7'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC7)
         DC    X'85'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC8)
         DC    X'A2'
         DC    X'00'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC9)
         DC    X'C6'
         DC    X'00'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC10)
         DC    X'C7'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC11)
         DC    X'D3'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC12)
         DC    X'A3'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC13)
         DC    X'86'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC14)
         DC    X'82'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC15)
         DC    X'86'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC16)
         DC    X'83'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC17)
         DC    X'C3'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC18)
         DC    X'D5'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC19)
         DC    X'E2'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC20)
         DC    X'93'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC21)
         DC    X'87'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC22)
         DC    X'96'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC23)
         DC    X'A6'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC24)
         DC    X'A9'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC25)
         DC    X'95'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC26)
         DC    X'C5'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC27)
         DC    X'D9'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC28)
         DC    X'92'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC29)
         DC    X'C2'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC30)
         DC    X'D4'
         DC    X'01'
         DC    X'00'
         DC    X'00'
         DC    A(@@LC31)
         DC    X'84'
         DC    X'00'
         DC    X'00'
         DC    X'00'
* X-var write_symbols
         ENTRY WRITE@SY
         DS    0F
WRITE@SY EQU   *
         DC    F'0'
* X-var debug_info_level
         ENTRY DEBUG@IN
         DS    0F
DEBUG@IN EQU   *
         DC    F'0'
* X-var use_gnu_debug_info_extensions
         ENTRY USE@GNU@
         DS    0F
USE@GNU@ EQU   *
         DC    F'0'
* X-var optze
         ENTRY OPTZE
         DS    0F
OPTZE    EQU   *
         DC    F'0'
* X-var optzsz
         ENTRY OPTZSZ
         DS    0F
OPTZSZ   EQU   *
         DC    F'0'
         DS    0F
@@1      EQU   *
         DC    F'0'
* X-var leexpr
         ENTRY LEEXPR
         DS    0F
LEEXPR   EQU   *
         DC    F'0'
* X-var incdecfinh
         ENTRY INCDECFI
         DS    0F
INCDECFI EQU   *
         DC    F'0'
* X-var flag_eliminate_dwarf2_dups
         ENTRY FLAG@ELI
         DS    0F
FLAG@ELI EQU   *
         DC    F'0'
* X-var profflag
         ENTRY PROFFLAG
         DS    0F
PROFFLAG EQU   *
         DC    F'0'
* X-var profaflag
         ENTRY PROFAFLA
         DS    0F
PROFAFLA EQU   *
         DC    F'0'
* X-var flag_test_coverage
         ENTRY FLAG@TES
         DS    0F
FLAG@TES EQU   *
         DC    F'0'
* X-var fbprob
         ENTRY FBPROB
         DS    0F
FBPROB   EQU   *
         DC    F'0'
* X-var flag_reorder_blocks
         ENTRY FLAG@REO
         DS    0F
FLAG@REO EQU   *
         DC    F'0'
* X-var frenreg
         ENTRY FRENREG
         DS    0F
FRENREG  EQU   *
         DC    F'0'
* X-var flag_cprop_registers
         ENTRY FLAG@CPR
         DS    0F
FLAG@CPR EQU   *
         DC    F'0'
* X-var pednt
         ENTRY PEDNT
         DS    0F
PEDNT    EQU   *
         DC    F'0'
* X-var in_system_header
         ENTRY IN@SYSTE
         DS    0F
IN@SYSTE EQU   *
         DC    F'0'
* X-var quiet_flag
         ENTRY QUIET@FL
         DS    0F
QUIET@FL EQU   *
         DC    F'0'
* X-var time_report
         ENTRY TIME@REP
         DS    0F
TIME@REP EQU   *
         DC    F'0'
* X-var mem_report
         ENTRY MEM@REPO
         DS    0F
MEM@REPO EQU   *
         DC    F'0'
* X-var flag_detailed_statistics
         ENTRY FLAG@DET
         DS    0F
FLAG@DET EQU   *
         DC    F'0'
* X-var flag_caller_saves
         ENTRY FLAG@CAL
         DS    0F
FLAG@CAL EQU   *
         DC    F'0'
* X-var flag_pcc_struct_return
         ENTRY FLAG@PCC
         DS    0F
FLAG@PCC EQU   *
         DC    F'1'
* X-var ffmem
         ENTRY FFMEM
         DS    0F
FFMEM    EQU   *
         DC    F'0'
* X-var ffaddr
         ENTRY FFADDR
         DS    0F
FFADDR   EQU   *
         DC    F'0'
* X-var flag_defer_pop
         ENTRY FLAG@DEF
         DS    0F
FLAG@DEF EQU   *
         DC    F'0'
* X-var flag_float_store
         ENTRY FLAG@FLO
         DS    0F
FLAG@FLO EQU   *
         DC    F'0'
* X-var fsreduce
         ENTRY FSREDUCE
         DS    0F
FSREDUCE EQU   *
         DC    F'0'
* X-var flag_move_all_movables
         ENTRY FLAG@MOV
         DS    0F
FLAG@MOV EQU   *
         DC    F'0'
* X-var flag_reduce_all_givs
         ENTRY FLAG@RED
         DS    0F
FLAG@RED EQU   *
         DC    F'0'
* X-var flag_regmove
         ENTRY FLAG@REG
         DS    0F
FLAG@REG EQU   *
         DC    F'0'
* X-var flag_writable_strings
         ENTRY FLAG@WRI
         DS    0F
FLAG@WRI EQU   *
         DC    F'0'
* X-var fnofcse
         ENTRY FNOFCSE
         DS    0F
FNOFCSE  EQU   *
         DC    F'0'
* X-var flag_omit_frame_pointer
         ENTRY FLAG@OMI
         DS    0F
FLAG@OMI EQU   *
         DC    F'0'
* X-var flag_function_sections
         ENTRY FLAG@FUN
         DS    0F
FLAG@FUN EQU   *
         DC    F'0'
* X-var flag_data_sections
         ENTRY FLAG@DAT
         DS    0F
FLAG@DAT EQU   *
         DC    F'0'
* X-var fnopeep
         ENTRY FNOPEEP
         DS    0F
FNOPEEP  EQU   *
         DC    F'0'
* X-var flag_optimize_sibling_calls
         ENTRY FLAG@OPT
         DS    0F
FLAG@OPT EQU   *
         DC    F'0'
* X-var flag_errno_math
         ENTRY FLAG@ERR
         DS    0F
FLAG@ERR EQU   *
         DC    F'1'
* X-var flag_unsafe_math_optimizations
         ENTRY FLAG@UNS
         DS    0F
FLAG@UNS EQU   *
         DC    F'0'
* X-var ftrapmath
         ENTRY FTRAPMAT
         DS    0F
FTRAPMAT EQU   *
         DC    F'1'
* X-var flag_complex_divide_method
         ENTRY FLAG@COM
         DS    0F
FLAG@COM EQU   *
         DC    F'0'
* X-var flag_syntax_only
         ENTRY FLAG@SYN
         DS    0F
FLAG@SYN EQU   *
         DC    F'0'
* X-var fgclm
         ENTRY FGCLM
         DS    0F
FGCLM    EQU   *
         DC    F'1'
* X-var fgcsm
         ENTRY FGCSM
         DS    0F
FGCSM    EQU   *
         DC    F'1'
* X-var fnoinl
         ENTRY FNOINL
         DS    0F
FNOINL   EQU   *
         DC    F'2'
* X-var flag_really_no_inline
         ENTRY FLAG@REA
         DS    0F
FLAG@REA EQU   *
         DC    F'2'
* X-var fksconst
         ENTRY FKSCONST
         DS    0F
FKSCONST EQU   *
         DC    F'1'
* X-var flag_gen_aux_info
         ENTRY FLAG@GEN
         DS    0F
FLAG@GEN EQU   *
         DC    F'0'
* X-var flag_unwind_tables
         ENTRY FLAG@UNW
         DS    0F
FLAG@UNW EQU   *
         DC    F'0'
* X-var flag_asynchronous_unwind_tables
         ENTRY FLAG@ASY
         DS    0F
FLAG@ASY EQU   *
         DC    F'0'
* X-var flag_pedantic_errors
         ENTRY FLAG@PED
         DS    0F
FLAG@PED EQU   *
         DC    F'0'
* X-var fsinsn
         ENTRY FSINSN
         DS    0F
FSINSN   EQU   *
         DC    F'0'
* X-var fsciar
         ENTRY FSCIAR
         DS    0F
FSCIAR   EQU   *
         DC    F'0'
* X-var fsiblk
         ENTRY FSIBLK
         DS    0F
FSIBLK   EQU   *
         DC    F'1'
* X-var fsspec
         ENTRY FSSPEC
         DS    0F
FSSPEC   EQU   *
         DC    F'1'
* X-var fsspcl
         ENTRY FSSPCL
         DS    0F
FSSPCL   EQU   *
         DC    F'0'
* X-var fspcld
         ENTRY FSPCLD
         DS    0F
FSPCLD   EQU   *
         DC    F'0'
* X-var fbocr
         ENTRY FBOCR
         DS    0F
FBOCR    EQU   *
         DC    F'1'
* X-var flag_inhibit_size_directive
         ENTRY FLAG@INH
         DS    0F
FLAG@INH EQU   *
         DC    F'0'
* X-var flag_verbose_asm
         ENTRY FLAG@VER
         DS    0F
FLAG@VER EQU   *
         DC    F'0'
* X-var flag_debug_asm
         ENTRY FLAG@DEB
         DS    0F
FLAG@DEB EQU   *
         DC    F'0'
* X-var flgdrtl
         ENTRY FLGDRTL
         DS    0F
FLGDRTL  EQU   *
         DC    F'0'
* X-var flag_gnu_linker
         ENTRY FLAG@GNU
         DS    0F
FLAG@GNU EQU   *
         DC    F'1'
* X-var fssa
         ENTRY FSSA
         DS    0F
FSSA     EQU   *
         DC    F'0'
* X-var fssaccp
         ENTRY FSSACCP
         DS    0F
FSSACCP  EQU   *
         DC    F'0'
* X-var fssadce
         ENTRY FSSADCE
         DS    0F
FSSADCE  EQU   *
         DC    F'0'
* X-var flag_pack_struct
         ENTRY FLAG@PAC
         DS    0F
FLAG@PAC EQU   *
         DC    F'0'
* X-var flag_argument_noalias
         ENTRY FLAG@ARG
         DS    0F
FLAG@ARG EQU   *
         DC    F'0'
* X-var fstralias
         ENTRY FSTRALIA
         DS    0F
FSTRALIA EQU   *
         DC    F'0'
* X-var flag_instrument_function_entry_exit
         ENTRY FLAG@INS
         DS    0F
FLAG@INS EQU   *
         DC    F'0'
* X-var fnoind
         ENTRY FNOIND
         DS    0F
FNOIND   EQU   *
         DC    F'0'
* X-var flag_peephole2
         ENTRY FLAG@PEE
         DS    0F
FLAG@PEE EQU   *
         DC    F'0'
* X-var flag_guess_branch_prob
         ENTRY FLAG@GUE
         DS    0F
FLAG@GUE EQU   *
         DC    F'0'
* X-var fbpoint
         ENTRY FBPOINT
         DS    0F
FBPOINT  EQU   *
         DC    F'0'
* X-var fbcheck
         ENTRY FBCHECK
         DS    0F
FBCHECK  EQU   *
         DC    F'0'
* X-var flag_merge_constants
         ENTRY FLAG@MER
         DS    0F
FLAG@MER EQU   *
         DC    F'1'
* X-var freumin
         ENTRY FREUMIN
         DS    0F
FREUMIN  EQU   *
         DC    F'1'
* Program text area
@@LC32   EQU   *
         DC    X'0'
@@LC33   EQU   *
         DC    C'Generate debugging info in default format'
         DC    X'0'
@@LC34   EQU   *
         DC    C'gdb'
         DC    X'0'
@@LC35   EQU   *
         DC    C'Generate debugging info in default extended form'
         DC    C'at'
         DC    X'0'
         DS    0F
@@2      EQU   *
         DC    A(@@LC32)
         DC    F'0'
         DC    F'1'
         DC    A(@@LC33)
         DC    A(@@LC34)
         DC    F'0'
         DC    F'1'
         DC    A(@@LC35)
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
* X-var ftrapv
         ENTRY FTRAPV
* Program data area
         DS    0F
FTRAPV   EQU   *
         DC    F'0'
* X-var flag_leading_underscore
         ENTRY FLAG@LEA
         DS    0F
FLAG@LEA EQU   *
         DC    F'-1'
* Program text area
@@LC36   EQU   *
         DC    C'max-inline-insns'
         DC    X'0'
@@LC37   EQU   *
         DC    C'The maximum number of instructions in a function'
         DC    C' that is eligible for inlining'
         DC    X'0'
@@LC38   EQU   *
         DC    C'max-delay-slot-insn-search'
         DC    X'0'
@@LC39   EQU   *
         DC    C'The maximum number of instructions to consider t'
         DC    C'o fill a delay slot'
         DC    X'0'
@@LC40   EQU   *
         DC    C'max-delay-slot-live-search'
         DC    X'0'
@@LC41   EQU   *
         DC    C'The maximum number of instructions to consider t'
         DC    C'o find accurate live register information'
         DC    X'0'
@@LC42   EQU   *
         DC    C'max-pending-list-length'
         DC    X'0'
@@LC43   EQU   *
         DC    C'The maximum length of scheduling''s pending oper'
         DC    C'ations list'
         DC    X'0'
@@LC44   EQU   *
         DC    C'max-gcse-memory'
         DC    X'0'
@@LC45   EQU   *
         DC    C'The maximum amount of memory to be allocated by '
         DC    C'GCSE'
         DC    X'0'
@@LC46   EQU   *
         DC    C'max-gcse-passes'
         DC    X'0'
@@LC47   EQU   *
         DC    C'The maximum number of passes to make when doing '
         DC    C'GCSE'
         DC    X'0'
         DS    0F
@@3      EQU   *
         DC    A(@@LC36)
         DC    F'600'
         DC    A(@@LC37)
         DC    A(@@LC38)
         DC    F'100'
         DC    A(@@LC39)
         DC    A(@@LC40)
         DC    F'333'
         DC    A(@@LC41)
         DC    A(@@LC42)
         DC    F'32'
         DC    A(@@LC43)
         DC    A(@@LC44)
         DC    F'52428800'
         DC    A(@@LC45)
         DC    A(@@LC46)
         DC    F'1'
         DC    A(@@LC47)
         DC    F'0'
         DC    F'0'
         DC    F'0'
@@LC48   EQU   *
         DC    C'eliminate-dwarf2-dups'
         DC    X'0'
@@LC49   EQU   *
         DC    C'Perform DWARF2 duplicate elimination'
         DC    X'0'
@@LC50   EQU   *
         DC    C'float-store'
         DC    X'0'
@@LC51   EQU   *
         DC    C'Do not store floats in registers'
         DC    X'0'
@@LC52   EQU   *
         DC    C'volatile'
         DC    X'0'
@@LC53   EQU   *
         DC    C'Consider all mem refs through pointers as volati'
         DC    C'le'
         DC    X'0'
@@LC54   EQU   *
         DC    C'volatile-global'
         DC    X'0'
@@LC55   EQU   *
         DC    C'Consider all mem refs to global data to be volat'
         DC    C'ile'
         DC    X'0'
@@LC56   EQU   *
         DC    C'volatile-static'
         DC    X'0'
@@LC57   EQU   *
         DC    C'Consider all mem refs to static data to be volat'
         DC    C'ile'
         DC    X'0'
@@LC58   EQU   *
         DC    C'defer-pop'
         DC    X'0'
@@LC59   EQU   *
         DC    C'Defer popping functions args from stack until la'
         DC    C'ter'
         DC    X'0'
@@LC60   EQU   *
         DC    C'omit-frame-pointer'
         DC    X'0'
@@LC61   EQU   *
         DC    C'When possible do not generate stack frames'
         DC    X'0'
@@LC62   EQU   *
         DC    C'optimize-sibling-calls'
         DC    X'0'
@@LC63   EQU   *
         DC    C'Optimize sibling and tail recursive calls'
         DC    X'0'
@@LC64   EQU   *
         DC    C'cse-follow-jumps'
         DC    X'0'
@@LC65   EQU   *
         DC    C'When running CSE, follow jumps to their targets'
         DC    X'0'
@@LC66   EQU   *
         DC    C'cse-skip-blocks'
         DC    X'0'
@@LC67   EQU   *
         DC    C'When running CSE, follow conditional jumps'
         DC    X'0'
@@LC68   EQU   *
         DC    C'expensive-optimizations'
         DC    X'0'
@@LC69   EQU   *
         DC    C'Perform a number of minor, expensive optimizatio'
         DC    C'ns'
         DC    X'0'
@@LC70   EQU   *
         DC    C'thread-jumps'
         DC    X'0'
@@LC71   EQU   *
         DC    C'Perform jump threading optimizations'
         DC    X'0'
@@LC72   EQU   *
         DC    C'strength-reduce'
         DC    X'0'
@@LC73   EQU   *
         DC    C'Perform strength reduction optimizations'
         DC    X'0'
@@LC74   EQU   *
         DC    C'unroll-loops'
         DC    X'0'
@@LC75   EQU   *
         DC    C'Perform loop unrolling when iteration count is k'
         DC    C'nown'
         DC    X'0'
@@LC76   EQU   *
         DC    C'unroll-all-loops'
         DC    X'0'
@@LC77   EQU   *
         DC    C'Perform loop unrolling for all loops'
         DC    X'0'
@@LC78   EQU   *
         DC    C'prefetch-loop-arrays'
         DC    X'0'
@@LC79   EQU   *
         DC    C'Generate prefetch instructions, if available, fo'
         DC    C'r arrays in loops'
         DC    X'0'
@@LC80   EQU   *
         DC    C'move-all-movables'
         DC    X'0'
@@LC81   EQU   *
         DC    C'Force all loop invariant computations out of loo'
         DC    C'ps'
         DC    X'0'
@@LC82   EQU   *
         DC    C'reduce-all-givs'
         DC    X'0'
@@LC83   EQU   *
         DC    C'Strength reduce all loop general induction varia'
         DC    C'bles'
         DC    X'0'
@@LC84   EQU   *
         DC    C'writable-strings'
         DC    X'0'
@@LC85   EQU   *
         DC    C'Store strings in writable data section'
         DC    X'0'
@@LC86   EQU   *
         DC    C'peephole'
         DC    X'0'
@@LC87   EQU   *
         DC    C'Enable machine specific peephole optimizations'
         DC    X'0'
@@LC88   EQU   *
         DC    C'force-mem'
         DC    X'0'
@@LC89   EQU   *
         DC    C'Copy memory operands into registers before using'
         DC    X'0'
@@LC90   EQU   *
         DC    C'force-addr'
         DC    X'0'
@@LC91   EQU   *
         DC    C'Copy memory address constants into regs before u'
         DC    C'sing'
         DC    X'0'
@@LC92   EQU   *
         DC    C'function-cse'
         DC    X'0'
@@LC93   EQU   *
         DC    C'Allow function addresses to be held in registers'
         DC    X'0'
@@LC94   EQU   *
         DC    C'inline-functions'
         DC    X'0'
@@LC95   EQU   *
         DC    C'Integrate simple functions into their callers'
         DC    X'0'
@@LC96   EQU   *
         DC    C'keep-inline-functions'
         DC    X'0'
@@LC97   EQU   *
         DC    C'Generate code for funcs even if they are fully i'
         DC    C'nlined'
         DC    X'0'
@@LC98   EQU   *
         DC    C'inline'
         DC    X'0'
@@LC99   EQU   *
         DC    C'Pay attention to the ''inline'' keyword'
         DC    X'0'
@@LC100  EQU   *
         DC    C'keep-static-consts'
         DC    X'0'
@@LC101  EQU   *
         DC    C'Emit static const variables even if they are not'
         DC    C' used'
         DC    X'0'
@@LC102  EQU   *
         DC    C'syntax-only'
         DC    X'0'
@@LC103  EQU   *
         DC    C'Check for syntax errors, then stop'
         DC    X'0'
@@LC104  EQU   *
         DC    C'shared-data'
         DC    X'0'
@@LC105  EQU   *
         DC    C'Mark data as shared rather than private'
         DC    X'0'
@@LC106  EQU   *
         DC    C'caller-saves'
         DC    X'0'
@@LC107  EQU   *
         DC    C'Enable saving registers around function calls'
         DC    X'0'
@@LC108  EQU   *
         DC    C'pcc-struct-return'
         DC    X'0'
@@LC109  EQU   *
         DC    C'Return ''short'' aggregates in memory, not regis'
         DC    C'ters'
         DC    X'0'
@@LC110  EQU   *
         DC    C'reg-struct-return'
         DC    X'0'
@@LC111  EQU   *
         DC    C'Return ''short'' aggregates in registers'
         DC    X'0'
@@LC112  EQU   *
         DC    C'delayed-branch'
         DC    X'0'
@@LC113  EQU   *
         DC    C'Attempt to fill delay slots of branch instructio'
         DC    C'ns'
         DC    X'0'
@@LC114  EQU   *
         DC    C'Perform the global common subexpression eliminat'
         DC    C'ion'
         DC    X'0'
@@LC115  EQU   *
         DC    C'gcse-lm'
         DC    X'0'
@@LC116  EQU   *
         DC    C'Perform enhanced load motion during global subex'
         DC    C'pression elimination'
         DC    X'0'
@@LC117  EQU   *
         DC    C'gcse-sm'
         DC    X'0'
@@LC118  EQU   *
         DC    C'Perform store motion after global subexpression '
         DC    C'elimination'
         DC    X'0'
@@LC119  EQU   *
         DC    C'rerun-cse-after-loop'
         DC    X'0'
@@LC120  EQU   *
         DC    C'Run CSE pass after loop optimizations'
         DC    X'0'
@@LC121  EQU   *
         DC    C'rerun-loop-opt'
         DC    X'0'
@@LC122  EQU   *
         DC    C'Run the loop optimizer twice'
         DC    X'0'
@@LC123  EQU   *
         DC    C'delete-null-pointer-checks'
         DC    X'0'
@@LC124  EQU   *
         DC    C'Delete useless null pointer checks'
         DC    X'0'
@@LC125  EQU   *
         DC    C'pretend-float'
         DC    X'0'
@@LC126  EQU   *
         DC    C'Pretend that host and target use the same FP for'
         DC    C'mat'
         DC    X'0'
@@LC127  EQU   *
         DC    C'schedule-insns'
         DC    X'0'
@@LC128  EQU   *
         DC    C'Reschedule instructions before register allocati'
         DC    C'on'
         DC    X'0'
@@LC129  EQU   *
         DC    C'schedule-insns2'
         DC    X'0'
@@LC130  EQU   *
         DC    C'Reschedule instructions after register allocatio'
         DC    C'n'
         DC    X'0'
@@LC131  EQU   *
         DC    C'sched-interblock'
         DC    X'0'
@@LC132  EQU   *
         DC    C'Enable scheduling across basic blocks'
         DC    X'0'
@@LC133  EQU   *
         DC    C'sched-spec'
         DC    X'0'
@@LC134  EQU   *
         DC    C'Allow speculative motion of non-loads'
         DC    X'0'
@@LC135  EQU   *
         DC    C'sched-spec-load'
         DC    X'0'
@@LC136  EQU   *
         DC    C'Allow speculative motion of some loads'
         DC    X'0'
@@LC137  EQU   *
         DC    C'sched-spec-load-dangerous'
         DC    X'0'
@@LC138  EQU   *
         DC    C'Allow speculative motion of more loads'
         DC    X'0'
@@LC139  EQU   *
         DC    C'branch-count-reg'
         DC    X'0'
@@LC140  EQU   *
         DC    C'Replace add,compare,branch with branch on count '
         DC    C'reg'
         DC    X'0'
@@LC141  EQU   *
         DC    C'pic'
         DC    X'0'
@@LC142  EQU   *
         DC    C'Generate position independent code, if possible'
         DC    X'0'
@@LC143  EQU   *
         DC    C'PIC'
         DC    X'0'
@@LC144  EQU   *
         DC    C'exceptions'
         DC    X'0'
@@LC145  EQU   *
         DC    C'Enable exception handling'
         DC    X'0'
@@LC146  EQU   *
         DC    C'unwind-tables'
         DC    X'0'
@@LC147  EQU   *
         DC    C'Just generate unwind tables for exception handli'
         DC    C'ng'
         DC    X'0'
@@LC148  EQU   *
         DC    C'asynchronous-unwind-tables'
         DC    X'0'
@@LC149  EQU   *
         DC    C'Generate unwind tables exact at each instruction'
         DC    C' boundary'
         DC    X'0'
@@LC150  EQU   *
         DC    C'non-call-exceptions'
         DC    X'0'
@@LC151  EQU   *
         DC    C'Support synchronous non-call exceptions'
         DC    X'0'
@@LC152  EQU   *
         DC    C'profile-arcs'
         DC    X'0'
@@LC153  EQU   *
         DC    C'Insert arc based program profiling code'
         DC    X'0'
@@LC154  EQU   *
         DC    C'test-coverage'
         DC    X'0'
@@LC155  EQU   *
         DC    C'Create data files needed by gcov'
         DC    X'0'
@@LC156  EQU   *
         DC    C'branch-probabilities'
         DC    X'0'
@@LC157  EQU   *
         DC    C'Use profiling information for branch probabiliti'
         DC    C'es'
         DC    X'0'
@@LC158  EQU   *
         DC    C'reorder-blocks'
         DC    X'0'
@@LC159  EQU   *
         DC    C'Reorder basic blocks to improve code placement'
         DC    X'0'
@@LC160  EQU   *
         DC    C'rename-registers'
         DC    X'0'
@@LC161  EQU   *
         DC    C'Do the register renaming optimization pass'
         DC    X'0'
@@LC162  EQU   *
         DC    C'cprop-registers'
         DC    X'0'
@@LC163  EQU   *
         DC    C'Do the register copy-propagation optimization pa'
         DC    C'ss'
         DC    X'0'
@@LC164  EQU   *
         DC    C'common'
         DC    X'0'
@@LC165  EQU   *
         DC    C'Do not put uninitialized globals in the common s'
         DC    C'ection'
         DC    X'0'
@@LC166  EQU   *
         DC    C'inhibit-size-directive'
         DC    X'0'
@@LC167  EQU   *
         DC    C'Do not generate .size directives'
         DC    X'0'
@@LC168  EQU   *
         DC    C'function-sections'
         DC    X'0'
@@LC169  EQU   *
         DC    C'place each function into its own section'
         DC    X'0'
@@LC170  EQU   *
         DC    C'data-sections'
         DC    X'0'
@@LC171  EQU   *
         DC    C'place data items into their own section'
         DC    X'0'
@@LC172  EQU   *
         DC    C'verbose-asm'
         DC    X'0'
@@LC173  EQU   *
         DC    C'Add extra commentry to assembler output'
         DC    X'0'
@@LC174  EQU   *
         DC    C'gnu-linker'
         DC    X'0'
@@LC175  EQU   *
         DC    C'Output GNU ld formatted global initializers'
         DC    X'0'
@@LC176  EQU   *
         DC    C'Enables a register move optimization'
         DC    X'0'
@@LC177  EQU   *
         DC    C'optimize-register-move'
         DC    X'0'
@@LC178  EQU   *
         DC    C'Do the full regmove optimization pass'
         DC    X'0'
@@LC179  EQU   *
         DC    C'pack-struct'
         DC    X'0'
@@LC180  EQU   *
         DC    C'Pack structure members together without holes'
         DC    X'0'
@@LC181  EQU   *
         DC    C'stack-check'
         DC    X'0'
@@LC182  EQU   *
         DC    C'Insert stack checking code into the program'
         DC    X'0'
@@LC183  EQU   *
         DC    C'argument-alias'
         DC    X'0'
@@LC184  EQU   *
         DC    C'Specify that arguments may alias each other '
         DC    X'50'
         DC    C' globals'
         DC    X'0'
@@LC185  EQU   *
         DC    C'argument-noalias'
         DC    X'0'
@@LC186  EQU   *
         DC    C'Assume arguments may alias globals but not each '
         DC    C'other'
         DC    X'0'
@@LC187  EQU   *
         DC    C'argument-noalias-global'
         DC    X'0'
@@LC188  EQU   *
         DC    C'Assume arguments do not alias each other or glob'
         DC    C'als'
         DC    X'0'
@@LC189  EQU   *
         DC    C'strict-aliasing'
         DC    X'0'
@@LC190  EQU   *
         DC    C'Assume strict aliasing rules apply'
         DC    X'0'
@@LC191  EQU   *
         DC    C'align-loops'
         DC    X'0'
@@LC192  EQU   *
         DC    C'Align the start of loops'
         DC    X'0'
@@LC193  EQU   *
         DC    C'align-jumps'
         DC    X'0'
@@LC194  EQU   *
         DC    C'Align labels which are only reached by jumping'
         DC    X'0'
@@LC195  EQU   *
         DC    C'align-labels'
         DC    X'0'
@@LC196  EQU   *
         DC    C'Align all labels'
         DC    X'0'
@@LC197  EQU   *
         DC    C'align-functions'
         DC    X'0'
@@LC198  EQU   *
         DC    C'Align the start of functions'
         DC    X'0'
@@LC199  EQU   *
         DC    C'merge-constants'
         DC    X'0'
@@LC200  EQU   *
         DC    C'Attempt to merge identical constants accross com'
         DC    C'pilation units'
         DC    X'0'
@@LC201  EQU   *
         DC    C'merge-all-constants'
         DC    X'0'
@@LC202  EQU   *
         DC    C'Attempt to merge identical constants and constan'
         DC    C't variables'
         DC    X'0'
@@LC203  EQU   *
         DC    C'dump-unnumbered'
         DC    X'0'
@@LC204  EQU   *
         DC    C'Suppress output of instruction numbers and line '
         DC    C'number notes in debugging dumps'
         DC    X'0'
@@LC205  EQU   *
         DC    C'instrument-functions'
         DC    X'0'
@@LC206  EQU   *
         DC    C'Instrument function entry/exit with profiling ca'
         DC    C'lls'
         DC    X'0'
@@LC207  EQU   *
         DC    C'Enable SSA optimizations'
         DC    X'0'
@@LC208  EQU   *
         DC    C'ssa-ccp'
         DC    X'0'
@@LC209  EQU   *
         DC    C'Enable SSA conditional constant propagation'
         DC    X'0'
@@LC210  EQU   *
         DC    C'ssa-dce'
         DC    X'0'
@@LC211  EQU   *
         DC    C'Enable aggressive SSA dead code elimination'
         DC    X'0'
@@LC212  EQU   *
         DC    C'leading-underscore'
         DC    X'0'
@@LC213  EQU   *
         DC    C'External symbols have a leading underscore'
         DC    X'0'
@@LC214  EQU   *
         DC    C'ident'
         DC    X'0'
@@LC215  EQU   *
         DC    C'Process #ident directives'
         DC    X'0'
@@LC216  EQU   *
         DC    C'Enables an rtl peephole pass run before sched2'
         DC    X'0'
@@LC217  EQU   *
         DC    C'guess-branch-probability'
         DC    X'0'
@@LC218  EQU   *
         DC    C'Enables guessing of branch probabilities'
         DC    X'0'
@@LC219  EQU   *
         DC    C'math-errno'
         DC    X'0'
@@LC220  EQU   *
         DC    C'Set errno after built-in math functions'
         DC    X'0'
@@LC221  EQU   *
         DC    C'trapping-math'
         DC    X'0'
@@LC222  EQU   *
         DC    C'Floating-point operations can trap'
         DC    X'0'
@@LC223  EQU   *
         DC    C'unsafe-math-optimizations'
         DC    X'0'
@@LC224  EQU   *
         DC    C'Allow math optimizations that may violate IEEE o'
         DC    C'r ANSI standards'
         DC    X'0'
@@LC225  EQU   *
         DC    C'bounded-pointers'
         DC    X'0'
@@LC226  EQU   *
         DC    C'Compile pointers as triples: value, base '
         DC    X'50'
         DC    C' end'
         DC    X'0'
@@LC227  EQU   *
         DC    C'bounds-check'
         DC    X'0'
@@LC228  EQU   *
         DC    C'Generate code to check bounds before dereferenci'
         DC    C'ng pointers and arrays'
         DC    X'0'
@@LC229  EQU   *
         DC    C'single-precision-constant'
         DC    X'0'
@@LC230  EQU   *
         DC    C'Convert floating point constant to single precis'
         DC    C'ion constant'
         DC    X'0'
@@LC231  EQU   *
         DC    C'time-report'
         DC    X'0'
@@LC232  EQU   *
         DC    C'Report time taken by each compiler pass at end o'
         DC    C'f run'
         DC    X'0'
@@LC233  EQU   *
         DC    C'mem-report'
         DC    X'0'
@@LC234  EQU   *
         DC    C'Report on permanent memory allocation at end of '
         DC    C'run'
         DC    X'0'
@@LC235  EQU   *
         DC    C'trapv'
         DC    X'0'
@@LC236  EQU   *
         DC    C'Trap for signed overflow in addition / subtracti'
         DC    C'on / multiplication'
         DC    X'0'
         DS    0F
@@4      EQU   *
         DC    A(@@LC48)
         DC    A(FLAG@ELI)
         DC    F'1'
         DC    A(@@LC49)
         DC    A(@@LC50)
         DC    A(FLAG@FLO)
         DC    F'1'
         DC    A(@@LC51)
         DC    A(@@LC52)
         DC    A(FVOLAT)
         DC    F'1'
         DC    A(@@LC53)
         DC    A(@@LC54)
         DC    A(FVOLGLOB)
         DC    F'1'
         DC    A(@@LC55)
         DC    A(@@LC56)
         DC    A(FVOLSTAT)
         DC    F'1'
         DC    A(@@LC57)
         DC    A(@@LC58)
         DC    A(FLAG@DEF)
         DC    F'1'
         DC    A(@@LC59)
         DC    A(@@LC60)
         DC    A(FLAG@OMI)
         DC    F'1'
         DC    A(@@LC61)
         DC    A(@@LC62)
         DC    A(FLAG@OPT)
         DC    F'1'
         DC    A(@@LC63)
         DC    A(@@LC64)
         DC    A(FCFJUMP)
         DC    F'1'
         DC    A(@@LC65)
         DC    A(@@LC66)
         DC    A(FCSKIP)
         DC    F'1'
         DC    A(@@LC67)
         DC    A(@@LC68)
         DC    A(FLAG@EXP)
         DC    F'1'
         DC    A(@@LC69)
         DC    A(@@LC70)
         DC    A(FLAG@THR)
         DC    F'1'
         DC    A(@@LC71)
         DC    A(@@LC72)
         DC    A(FSREDUCE)
         DC    F'1'
         DC    A(@@LC73)
         DC    A(@@LC74)
         DC    A(FUNRLOOP)
         DC    F'1'
         DC    A(@@LC75)
         DC    A(@@LC76)
         DC    A(FUNRALOO)
         DC    F'1'
         DC    A(@@LC77)
         DC    A(@@LC78)
         DC    A(FPREFL)
         DC    F'1'
         DC    A(@@LC79)
         DC    A(@@LC80)
         DC    A(FLAG@MOV)
         DC    F'1'
         DC    A(@@LC81)
         DC    A(@@LC82)
         DC    A(FLAG@RED)
         DC    F'1'
         DC    A(@@LC83)
         DC    A(@@LC84)
         DC    A(FLAG@WRI)
         DC    F'1'
         DC    A(@@LC85)
         DC    A(@@LC86)
         DC    A(FNOPEEP)
         DC    F'0'
         DC    A(@@LC87)
         DC    A(@@LC88)
         DC    A(FFMEM)
         DC    F'1'
         DC    A(@@LC89)
         DC    A(@@LC90)
         DC    A(FFADDR)
         DC    F'1'
         DC    A(@@LC91)
         DC    A(@@LC92)
         DC    A(FNOFCSE)
         DC    F'0'
         DC    A(@@LC93)
         DC    A(@@LC94)
         DC    A(FLINFNCS)
         DC    F'1'
         DC    A(@@LC95)
         DC    A(@@LC96)
         DC    A(FKINF)
         DC    F'1'
         DC    A(@@LC97)
         DC    A(@@LC98)
         DC    A(FNOINL)
         DC    F'0'
         DC    A(@@LC99)
         DC    A(@@LC100)
         DC    A(FKSCONST)
         DC    F'1'
         DC    A(@@LC101)
         DC    A(@@LC102)
         DC    A(FLAG@SYN)
         DC    F'1'
         DC    A(@@LC103)
         DC    A(@@LC104)
         DC    A(FLAG@SHA)
         DC    F'1'
         DC    A(@@LC105)
         DC    A(@@LC106)
         DC    A(FLAG@CAL)
         DC    F'1'
         DC    A(@@LC107)
         DC    A(@@LC108)
         DC    A(FLAG@PCC)
         DC    F'1'
         DC    A(@@LC109)
         DC    A(@@LC110)
         DC    A(FLAG@PCC)
         DC    F'0'
         DC    A(@@LC111)
         DC    A(@@LC112)
         DC    A(FLAG@DEL)
         DC    F'1'
         DC    A(@@LC113)
         DC    A(@@LC10)
         DC    A(@@5)
         DC    F'1'
         DC    A(@@LC114)
         DC    A(@@LC115)
         DC    A(FGCLM)
         DC    F'1'
         DC    A(@@LC116)
         DC    A(@@LC117)
         DC    A(FGCSM)
         DC    F'1'
         DC    A(@@LC118)
         DC    A(@@LC119)
         DC    A(@@6)
         DC    F'1'
         DC    A(@@LC120)
         DC    A(@@LC121)
         DC    A(FLAG@RER)
         DC    F'1'
         DC    A(@@LC122)
         DC    A(@@LC123)
         DC    A(@@7)
         DC    F'1'
         DC    A(@@LC124)
         DC    A(@@LC125)
         DC    A(FPRETF)
         DC    F'1'
         DC    A(@@LC126)
         DC    A(@@LC127)
         DC    A(FSINSN)
         DC    F'1'
         DC    A(@@LC128)
         DC    A(@@LC129)
         DC    A(FSCIAR)
         DC    F'1'
         DC    A(@@LC130)
         DC    A(@@LC131)
         DC    A(FSIBLK)
         DC    F'1'
         DC    A(@@LC132)
         DC    A(@@LC133)
         DC    A(FSSPEC)
         DC    F'1'
         DC    A(@@LC134)
         DC    A(@@LC135)
         DC    A(FSSPCL)
         DC    F'1'
         DC    A(@@LC136)
         DC    A(@@LC137)
         DC    A(FSPCLD)
         DC    F'1'
         DC    A(@@LC138)
         DC    A(@@LC139)
         DC    A(FBOCR)
         DC    F'1'
         DC    A(@@LC140)
         DC    A(@@LC141)
         DC    A(FLAG@PIC)
         DC    F'1'
         DC    A(@@LC142)
         DC    A(@@LC143)
         DC    A(FLAG@PIC)
         DC    F'2'
         DC    A(@@LC32)
         DC    A(@@LC144)
         DC    A(FLAG@EXC)
         DC    F'1'
         DC    A(@@LC145)
         DC    A(@@LC146)
         DC    A(FLAG@UNW)
         DC    F'1'
         DC    A(@@LC147)
         DC    A(@@LC148)
         DC    A(FLAG@ASY)
         DC    F'1'
         DC    A(@@LC149)
         DC    A(@@LC150)
         DC    V(FLNCALXC)
         DC    F'1'
         DC    A(@@LC151)
         DC    A(@@LC152)
         DC    A(PROFAFLA)
         DC    F'1'
         DC    A(@@LC153)
         DC    A(@@LC154)
         DC    A(FLAG@TES)
         DC    F'1'
         DC    A(@@LC155)
         DC    A(@@LC156)
         DC    A(FBPROB)
         DC    F'1'
         DC    A(@@LC157)
         DC    A(@@LC158)
         DC    A(FLAG@REO)
         DC    F'1'
         DC    A(@@LC159)
         DC    A(@@LC160)
         DC    A(FRENREG)
         DC    F'1'
         DC    A(@@LC161)
         DC    A(@@LC162)
         DC    A(FLAG@CPR)
         DC    F'1'
         DC    A(@@LC163)
         DC    A(@@LC164)
         DC    A(FNOCOM)
         DC    F'0'
         DC    A(@@LC165)
         DC    A(@@LC166)
         DC    A(FLAG@INH)
         DC    F'1'
         DC    A(@@LC167)
         DC    A(@@LC168)
         DC    A(FLAG@FUN)
         DC    F'1'
         DC    A(@@LC169)
         DC    A(@@LC170)
         DC    A(FLAG@DAT)
         DC    F'1'
         DC    A(@@LC171)
         DC    A(@@LC172)
         DC    A(FLAG@VER)
         DC    F'1'
         DC    A(@@LC173)
         DC    A(@@LC174)
         DC    A(FLAG@GNU)
         DC    F'1'
         DC    A(@@LC175)
         DC    A(@@LC18)
         DC    A(FLAG@REG)
         DC    F'1'
         DC    A(@@LC176)
         DC    A(@@LC177)
         DC    A(FLAG@REG)
         DC    F'1'
         DC    A(@@LC178)
         DC    A(@@LC179)
         DC    A(FLAG@PAC)
         DC    F'1'
         DC    A(@@LC180)
         DC    A(@@LC181)
         DC    A(FLAG@STA)
         DC    F'1'
         DC    A(@@LC182)
         DC    A(@@LC183)
         DC    A(FLAG@ARG)
         DC    F'0'
         DC    A(@@LC184)
         DC    A(@@LC185)
         DC    A(FLAG@ARG)
         DC    F'1'
         DC    A(@@LC186)
         DC    A(@@LC187)
         DC    A(FLAG@ARG)
         DC    F'2'
         DC    A(@@LC188)
         DC    A(@@LC189)
         DC    A(FSTRALIA)
         DC    F'1'
         DC    A(@@LC190)
         DC    A(@@LC191)
         DC    A(ALLOOP)
         DC    F'0'
         DC    A(@@LC192)
         DC    A(@@LC193)
         DC    A(ALJUMP)
         DC    F'0'
         DC    A(@@LC194)
         DC    A(@@LC195)
         DC    A(ALLAB)
         DC    F'0'
         DC    A(@@LC196)
         DC    A(@@LC197)
         DC    A(ALFUNCS)
         DC    F'0'
         DC    A(@@LC198)
         DC    A(@@LC199)
         DC    A(FLAG@MER)
         DC    F'1'
         DC    A(@@LC200)
         DC    A(@@LC201)
         DC    A(FLAG@MER)
         DC    F'2'
         DC    A(@@LC202)
         DC    A(@@LC203)
         DC    V(FLGDMPUN)
         DC    F'1'
         DC    A(@@LC204)
         DC    A(@@LC205)
         DC    A(FLAG@INS)
         DC    F'1'
         DC    A(@@LC206)
         DC    A(@@LC4)
         DC    A(FSSA)
         DC    F'1'
         DC    A(@@LC207)
         DC    A(@@LC208)
         DC    A(FSSACCP)
         DC    F'1'
         DC    A(@@LC209)
         DC    A(@@LC210)
         DC    A(FSSADCE)
         DC    F'1'
         DC    A(@@LC211)
         DC    A(@@LC212)
         DC    A(FLAG@LEA)
         DC    F'1'
         DC    A(@@LC213)
         DC    A(@@LC214)
         DC    A(FNOIND)
         DC    F'0'
         DC    A(@@LC215)
         DC    A(@@LC24)
         DC    A(FLAG@PEE)
         DC    F'1'
         DC    A(@@LC216)
         DC    A(@@LC217)
         DC    A(FLAG@GUE)
         DC    F'1'
         DC    A(@@LC218)
         DC    A(@@LC219)
         DC    A(FLAG@ERR)
         DC    F'1'
         DC    A(@@LC220)
         DC    A(@@LC221)
         DC    A(FTRAPMAT)
         DC    F'1'
         DC    A(@@LC222)
         DC    A(@@LC223)
         DC    A(FLAG@UNS)
         DC    F'1'
         DC    A(@@LC224)
         DC    A(@@LC225)
         DC    A(FBPOINT)
         DC    F'1'
         DC    A(@@LC226)
         DC    A(@@LC227)
         DC    A(FBCHECK)
         DC    F'1'
         DC    A(@@LC228)
         DC    A(@@LC229)
         DC    A(FLAG@SIN)
         DC    F'1'
         DC    A(@@LC230)
         DC    A(@@LC231)
         DC    A(TIME@REP)
         DC    F'1'
         DC    A(@@LC232)
         DC    A(@@LC233)
         DC    A(MEM@REPO)
         DC    F'1'
         DC    A(@@LC234)
         DC    A(@@LC235)
         DC    A(FTRAPV)
         DC    F'1'
         DC    A(@@LC236)
@@LC237  EQU   *
         DC    C'-ansi'
         DC    X'0'
@@LC238  EQU   *
         DC    C'Compile just for ISO C89'
         DC    X'0'
@@LC239  EQU   *
         DC    C'-fallow-single-precision'
         DC    X'0'
@@LC240  EQU   *
         DC    C'Do not promote floats to double if using -tradit'
         DC    C'ional'
         DC    X'0'
@@LC241  EQU   *
         DC    C'-std= '
         DC    X'0'
@@LC242  EQU   *
         DC    C'Determine language standard'
         DC    X'0'
@@LC243  EQU   *
         DC    C'-fsigned-bitfields'
         DC    X'0'
@@LC244  EQU   *
         DC    C'-funsigned-bitfields'
         DC    X'0'
@@LC245  EQU   *
         DC    C'Make bit-fields by unsigned by default'
         DC    X'0'
@@LC246  EQU   *
         DC    C'-fno-signed-bitfields'
         DC    X'0'
@@LC247  EQU   *
         DC    C'-fno-unsigned-bitfields'
         DC    X'0'
@@LC248  EQU   *
         DC    C'-fsigned-char'
         DC    X'0'
@@LC249  EQU   *
         DC    C'Make ''char'' be signed by default'
         DC    X'0'
@@LC250  EQU   *
         DC    C'-funsigned-char'
         DC    X'0'
@@LC251  EQU   *
         DC    C'Make ''char'' be unsigned by default'
         DC    X'0'
@@LC252  EQU   *
         DC    C'-fno-signed-char'
         DC    X'0'
@@LC253  EQU   *
         DC    C'-fno-unsigned-char'
         DC    X'0'
@@LC254  EQU   *
         DC    C'-ftraditional'
         DC    X'0'
@@LC255  EQU   *
         DC    C'-traditional'
         DC    X'0'
@@LC256  EQU   *
         DC    C'Attempt to support traditional K'
         DC    X'50'
         DC    C'R style C'
         DC    X'0'
@@LC257  EQU   *
         DC    C'-fnotraditional'
         DC    X'0'
@@LC258  EQU   *
         DC    C'-fno-traditional'
         DC    X'0'
@@LC259  EQU   *
         DC    C'-fasm'
         DC    X'0'
@@LC260  EQU   *
         DC    C'-fno-asm'
         DC    X'0'
@@LC261  EQU   *
         DC    C'Do not recognize the ''asm'' keyword'
         DC    X'0'
@@LC262  EQU   *
         DC    C'-fbuiltin'
         DC    X'0'
@@LC263  EQU   *
         DC    C'-fno-builtin'
         DC    X'0'
@@LC264  EQU   *
         DC    C'Do not recognize any built in functions'
         DC    X'0'
@@LC265  EQU   *
         DC    C'-fhosted'
         DC    X'0'
@@LC266  EQU   *
         DC    C'Assume normal C execution environment'
         DC    X'0'
@@LC267  EQU   *
         DC    C'-fno-hosted'
         DC    X'0'
@@LC268  EQU   *
         DC    C'-ffreestanding'
         DC    X'0'
@@LC269  EQU   *
         DC    C'Assume that standard libraries '
         DC    X'50'
         DC    C' main might not exist'
         DC    X'0'
@@LC270  EQU   *
         DC    C'-fno-freestanding'
         DC    X'0'
@@LC271  EQU   *
         DC    C'-fcond-mismatch'
         DC    X'0'
@@LC272  EQU   *
         DC    C'Allow different types as args of ? operator'
         DC    X'0'
@@LC273  EQU   *
         DC    C'-fno-cond-mismatch'
         DC    X'0'
@@LC274  EQU   *
         DC    C'-fdollars-in-identifiers'
         DC    X'0'
@@LC275  EQU   *
         DC    C'Allow the use of $ inside identifiers'
         DC    X'0'
@@LC276  EQU   *
         DC    C'-fno-dollars-in-identifiers'
         DC    X'0'
@@LC277  EQU   *
         DC    C'-fpreprocessed'
         DC    X'0'
@@LC278  EQU   *
         DC    C'-fno-preprocessed'
         DC    X'0'
@@LC279  EQU   *
         DC    C'-fshort-double'
         DC    X'0'
@@LC280  EQU   *
         DC    C'Use the same size for double as for float'
         DC    X'0'
@@LC281  EQU   *
         DC    C'-fno-short-double'
         DC    X'0'
@@LC282  EQU   *
         DC    C'-fshort-enums'
         DC    X'0'
@@LC283  EQU   *
         DC    C'Use the smallest fitting integer to hold enums'
         DC    X'0'
@@LC284  EQU   *
         DC    C'-fno-short-enums'
         DC    X'0'
@@LC285  EQU   *
         DC    C'-fshort-wchar'
         DC    X'0'
@@LC286  EQU   *
         DC    C'Override the underlying type for wchar_t to `uns'
         DC    C'igned short'''
         DC    X'0'
@@LC287  EQU   *
         DC    C'-fno-short-wchar'
         DC    X'0'
@@LC288  EQU   *
         DC    C'-Wall'
         DC    X'0'
@@LC289  EQU   *
         DC    C'Enable most warning messages'
         DC    X'0'
@@LC290  EQU   *
         DC    C'-Wbad-function-cast'
         DC    X'0'
@@LC291  EQU   *
         DC    C'Warn about casting functions to incompatible typ'
         DC    C'es'
         DC    X'0'
@@LC292  EQU   *
         DC    C'-Wno-bad-function-cast'
         DC    X'0'
@@LC293  EQU   *
         DC    C'-Wno-missing-noreturn'
         DC    X'0'
@@LC294  EQU   *
         DC    C'-Wmissing-format-attribute'
         DC    X'0'
@@LC295  EQU   *
         DC    C'Warn about functions which might be candidates f'
         DC    C'or format attributes'
         DC    X'0'
@@LC296  EQU   *
         DC    C'-Wno-missing-format-attribute'
         DC    X'0'
@@LC297  EQU   *
         DC    C'-Wcast-qual'
         DC    X'0'
@@LC298  EQU   *
         DC    C'Warn about casts which discard qualifiers'
         DC    X'0'
@@LC299  EQU   *
         DC    C'-Wno-cast-qual'
         DC    X'0'
@@LC300  EQU   *
         DC    C'-Wchar-subscripts'
         DC    X'0'
@@LC301  EQU   *
         DC    C'Warn about subscripts whose type is ''char'''
         DC    X'0'
@@LC302  EQU   *
         DC    C'-Wno-char-subscripts'
         DC    X'0'
@@LC303  EQU   *
         DC    C'-Wcomment'
         DC    X'0'
@@LC304  EQU   *
         DC    C'Warn if nested comments are detected'
         DC    X'0'
@@LC305  EQU   *
         DC    C'-Wno-comment'
         DC    X'0'
@@LC306  EQU   *
         DC    C'-Wcomments'
         DC    X'0'
@@LC307  EQU   *
         DC    C'-Wno-comments'
         DC    X'0'
@@LC308  EQU   *
         DC    C'-Wconversion'
         DC    X'0'
@@LC309  EQU   *
         DC    C'Warn about possibly confusing type conversions'
         DC    X'0'
@@LC310  EQU   *
         DC    C'-Wno-conversion'
         DC    X'0'
@@LC311  EQU   *
         DC    C'-Wformat'
         DC    X'0'
@@LC312  EQU   *
         DC    C'Warn about printf/scanf/strftime/strfmon format '
         DC    C'anomalies'
         DC    X'0'
@@LC313  EQU   *
         DC    C'-Wno-format'
         DC    X'0'
@@LC314  EQU   *
         DC    C'-Wformat-y2k'
         DC    X'0'
@@LC315  EQU   *
         DC    C'-Wno-format-y2k'
         DC    X'0'
@@LC316  EQU   *
         DC    C'Don''t warn about strftime formats yielding 2 di'
         DC    C'git years'
         DC    X'0'
@@LC317  EQU   *
         DC    C'-Wformat-extra-args'
         DC    X'0'
@@LC318  EQU   *
         DC    C'-Wno-format-extra-args'
         DC    X'0'
@@LC319  EQU   *
         DC    C'Don''t warn about too many arguments to format f'
         DC    C'unctions'
         DC    X'0'
@@LC320  EQU   *
         DC    C'-Wformat-nonliteral'
         DC    X'0'
@@LC321  EQU   *
         DC    C'Warn about non-string-literal format strings'
         DC    X'0'
@@LC322  EQU   *
         DC    C'-Wno-format-nonliteral'
         DC    X'0'
@@LC323  EQU   *
         DC    C'-Wformat-security'
         DC    X'0'
@@LC324  EQU   *
         DC    C'Warn about possible security problems with forma'
         DC    C't functions'
         DC    X'0'
@@LC325  EQU   *
         DC    C'-Wno-format-security'
         DC    X'0'
@@LC326  EQU   *
         DC    C'-Wimplicit-function-declaration'
         DC    X'0'
@@LC327  EQU   *
         DC    C'Warn about implicit function declarations'
         DC    X'0'
@@LC328  EQU   *
         DC    C'-Wno-implicit-function-declaration'
         DC    X'0'
@@LC329  EQU   *
         DC    C'-Werror-implicit-function-declaration'
         DC    X'0'
@@LC330  EQU   *
         DC    C'-Wimplicit-int'
         DC    X'0'
@@LC331  EQU   *
         DC    C'Warn when a declaration does not specify a type'
         DC    X'0'
@@LC332  EQU   *
         DC    C'-Wno-implicit-int'
         DC    X'0'
@@LC333  EQU   *
         DC    C'-Wimplicit'
         DC    X'0'
@@LC334  EQU   *
         DC    C'-Wno-implicit'
         DC    X'0'
@@LC335  EQU   *
         DC    C'-Wimport'
         DC    X'0'
@@LC336  EQU   *
         DC    C'Warn about the use of the #import directive'
         DC    X'0'
@@LC337  EQU   *
         DC    C'-Wno-import'
         DC    X'0'
@@LC338  EQU   *
         DC    C'-Wlong-long'
         DC    X'0'
@@LC339  EQU   *
         DC    C'-Wno-long-long'
         DC    X'0'
@@LC340  EQU   *
         DC    C'Do not warn about using ''long long'' when -peda'
         DC    C'ntic'
         DC    X'0'
@@LC341  EQU   *
         DC    C'-Wmain'
         DC    X'0'
@@LC342  EQU   *
         DC    C'Warn about suspicious declarations of main'
         DC    X'0'
@@LC343  EQU   *
         DC    C'-Wno-main'
         DC    X'0'
@@LC344  EQU   *
         DC    C'-Wmissing-braces'
         DC    X'0'
@@LC345  EQU   *
         DC    C'Warn about possibly missing braces around initia'
         DC    C'lizers'
         DC    X'0'
@@LC346  EQU   *
         DC    C'-Wno-missing-braces'
         DC    X'0'
@@LC347  EQU   *
         DC    C'-Wmissing-declarations'
         DC    X'0'
@@LC348  EQU   *
         DC    C'Warn about global funcs without previous declara'
         DC    C'tions'
         DC    X'0'
@@LC349  EQU   *
         DC    C'-Wno-missing-declarations'
         DC    X'0'
@@LC350  EQU   *
         DC    C'-Wmissing-prototypes'
         DC    X'0'
@@LC351  EQU   *
         DC    C'Warn about global funcs without prototypes'
         DC    X'0'
@@LC352  EQU   *
         DC    C'-Wno-missing-prototypes'
         DC    X'0'
@@LC353  EQU   *
         DC    C'-Wmultichar'
         DC    X'0'
@@LC354  EQU   *
         DC    C'Warn about use of multicharacter literals'
         DC    X'0'
@@LC355  EQU   *
         DC    C'-Wno-multichar'
         DC    X'0'
@@LC356  EQU   *
         DC    C'-Wnested-externs'
         DC    X'0'
@@LC357  EQU   *
         DC    C'Warn about externs not at file scope level'
         DC    X'0'
@@LC358  EQU   *
         DC    C'-Wno-nested-externs'
         DC    X'0'
@@LC359  EQU   *
         DC    C'-Wparentheses'
         DC    X'0'
@@LC360  EQU   *
         DC    C'Warn about possible missing parentheses'
         DC    X'0'
@@LC361  EQU   *
         DC    C'-Wno-parentheses'
         DC    X'0'
@@LC362  EQU   *
         DC    C'-Wsequence-point'
         DC    X'0'
@@LC363  EQU   *
         DC    C'Warn about possible violations of sequence point'
         DC    C' rules'
         DC    X'0'
@@LC364  EQU   *
         DC    C'-Wno-sequence-point'
         DC    X'0'
@@LC365  EQU   *
         DC    C'-Wpointer-arith'
         DC    X'0'
@@LC366  EQU   *
         DC    C'Warn about function pointer arithmetic'
         DC    X'0'
@@LC367  EQU   *
         DC    C'-Wno-pointer-arith'
         DC    X'0'
@@LC368  EQU   *
         DC    C'-Wredundant-decls'
         DC    X'0'
@@LC369  EQU   *
         DC    C'Warn about multiple declarations of the same obj'
         DC    C'ect'
         DC    X'0'
@@LC370  EQU   *
         DC    C'-Wno-redundant-decls'
         DC    X'0'
@@LC371  EQU   *
         DC    C'-Wsign-compare'
         DC    X'0'
@@LC372  EQU   *
         DC    C'Warn about signed/unsigned comparisons'
         DC    X'0'
@@LC373  EQU   *
         DC    C'-Wno-sign-compare'
         DC    X'0'
@@LC374  EQU   *
         DC    C'-Wfloat-equal'
         DC    X'0'
@@LC375  EQU   *
         DC    C'Warn about testing equality of floating point nu'
         DC    C'mbers'
         DC    X'0'
@@LC376  EQU   *
         DC    C'-Wno-float-equal'
         DC    X'0'
@@LC377  EQU   *
         DC    C'-Wunknown-pragmas'
         DC    X'0'
@@LC378  EQU   *
         DC    C'Warn about unrecognized pragmas'
         DC    X'0'
@@LC379  EQU   *
         DC    C'-Wno-unknown-pragmas'
         DC    X'0'
@@LC380  EQU   *
         DC    C'-Wstrict-prototypes'
         DC    X'0'
@@LC381  EQU   *
         DC    C'Warn about non-prototyped function decls'
         DC    X'0'
@@LC382  EQU   *
         DC    C'-Wno-strict-prototypes'
         DC    X'0'
@@LC383  EQU   *
         DC    C'-Wtraditional'
         DC    X'0'
@@LC384  EQU   *
         DC    C'Warn about constructs whose meaning change in IS'
         DC    C'O C'
         DC    X'0'
@@LC385  EQU   *
         DC    C'-Wno-traditional'
         DC    X'0'
@@LC386  EQU   *
         DC    C'-Wtrigraphs'
         DC    X'0'
@@LC387  EQU   *
         DC    C'Warn when trigraphs are encountered'
         DC    X'0'
@@LC388  EQU   *
         DC    C'-Wno-trigraphs'
         DC    X'0'
@@LC389  EQU   *
         DC    C'-Wundef'
         DC    X'0'
@@LC390  EQU   *
         DC    C'-Wno-undef'
         DC    X'0'
@@LC391  EQU   *
         DC    C'-Wwrite-strings'
         DC    X'0'
@@LC392  EQU   *
         DC    C'Mark strings as ''const char *'''
         DC    X'0'
@@LC393  EQU   *
         DC    C'-Wno-write-strings'
         DC    X'0'
         DS    0F
@@8      EQU   *
         DC    A(@@LC237)
         DC    A(@@LC238)
         DC    A(@@LC239)
         DC    A(@@LC240)
         DC    A(@@LC241)
         DC    A(@@LC242)
         DC    A(@@LC243)
         DC    A(@@LC32)
         DC    A(@@LC244)
         DC    A(@@LC245)
         DC    A(@@LC246)
         DC    A(@@LC32)
         DC    A(@@LC247)
         DC    A(@@LC32)
         DC    A(@@LC248)
         DC    A(@@LC249)
         DC    A(@@LC250)
         DC    A(@@LC251)
         DC    A(@@LC252)
         DC    A(@@LC32)
         DC    A(@@LC253)
         DC    A(@@LC32)
         DC    A(@@LC254)
         DC    A(@@LC32)
         DC    A(@@LC255)
         DC    A(@@LC256)
         DC    A(@@LC257)
         DC    A(@@LC32)
         DC    A(@@LC258)
         DC    A(@@LC32)
         DC    A(@@LC259)
         DC    A(@@LC32)
         DC    A(@@LC260)
         DC    A(@@LC261)
         DC    A(@@LC262)
         DC    A(@@LC32)
         DC    A(@@LC263)
         DC    A(@@LC264)
         DC    A(@@LC265)
         DC    A(@@LC266)
         DC    A(@@LC267)
         DC    A(@@LC32)
         DC    A(@@LC268)
         DC    A(@@LC269)
         DC    A(@@LC270)
         DC    A(@@LC32)
         DC    A(@@LC271)
         DC    A(@@LC272)
         DC    A(@@LC273)
         DC    A(@@LC32)
         DC    A(@@LC274)
         DC    A(@@LC275)
         DC    A(@@LC276)
         DC    A(@@LC32)
         DC    A(@@LC277)
         DC    A(@@LC32)
         DC    A(@@LC278)
         DC    A(@@LC32)
         DC    A(@@LC279)
         DC    A(@@LC280)
         DC    A(@@LC281)
         DC    A(@@LC32)
         DC    A(@@LC282)
         DC    A(@@LC283)
         DC    A(@@LC284)
         DC    A(@@LC32)
         DC    A(@@LC285)
         DC    A(@@LC286)
         DC    A(@@LC287)
         DC    A(@@LC32)
         DC    A(@@LC288)
         DC    A(@@LC289)
         DC    A(@@LC290)
         DC    A(@@LC291)
         DC    A(@@LC292)
         DC    A(@@LC32)
         DC    A(@@LC293)
         DC    A(@@LC32)
         DC    A(@@LC294)
         DC    A(@@LC295)
         DC    A(@@LC296)
         DC    A(@@LC32)
         DC    A(@@LC297)
         DC    A(@@LC298)
         DC    A(@@LC299)
         DC    A(@@LC32)
         DC    A(@@LC300)
         DC    A(@@LC301)
         DC    A(@@LC302)
         DC    A(@@LC32)
         DC    A(@@LC303)
         DC    A(@@LC304)
         DC    A(@@LC305)
         DC    A(@@LC32)
         DC    A(@@LC306)
         DC    A(@@LC304)
         DC    A(@@LC307)
         DC    A(@@LC32)
         DC    A(@@LC308)
         DC    A(@@LC309)
         DC    A(@@LC310)
         DC    A(@@LC32)
         DC    A(@@LC311)
         DC    A(@@LC312)
         DC    A(@@LC313)
         DC    A(@@LC32)
         DC    A(@@LC314)
         DC    A(@@LC32)
         DC    A(@@LC315)
         DC    A(@@LC316)
         DC    A(@@LC317)
         DC    A(@@LC32)
         DC    A(@@LC318)
         DC    A(@@LC319)
         DC    A(@@LC320)
         DC    A(@@LC321)
         DC    A(@@LC322)
         DC    A(@@LC32)
         DC    A(@@LC323)
         DC    A(@@LC324)
         DC    A(@@LC325)
         DC    A(@@LC32)
         DC    A(@@LC326)
         DC    A(@@LC327)
         DC    A(@@LC328)
         DC    A(@@LC32)
         DC    A(@@LC329)
         DC    A(@@LC32)
         DC    A(@@LC330)
         DC    A(@@LC331)
         DC    A(@@LC332)
         DC    A(@@LC32)
         DC    A(@@LC333)
         DC    A(@@LC32)
         DC    A(@@LC334)
         DC    A(@@LC32)
         DC    A(@@LC335)
         DC    A(@@LC336)
         DC    A(@@LC337)
         DC    A(@@LC32)
         DC    A(@@LC338)
         DC    A(@@LC32)
         DC    A(@@LC339)
         DC    A(@@LC340)
         DC    A(@@LC341)
         DC    A(@@LC342)
         DC    A(@@LC343)
         DC    A(@@LC32)
         DC    A(@@LC344)
         DC    A(@@LC345)
         DC    A(@@LC346)
         DC    A(@@LC32)
         DC    A(@@LC347)
         DC    A(@@LC348)
         DC    A(@@LC349)
         DC    A(@@LC32)
         DC    A(@@LC350)
         DC    A(@@LC351)
         DC    A(@@LC352)
         DC    A(@@LC32)
         DC    A(@@LC353)
         DC    A(@@LC354)
         DC    A(@@LC355)
         DC    A(@@LC32)
         DC    A(@@LC356)
         DC    A(@@LC357)
         DC    A(@@LC358)
         DC    A(@@LC32)
         DC    A(@@LC359)
         DC    A(@@LC360)
         DC    A(@@LC361)
         DC    A(@@LC32)
         DC    A(@@LC362)
         DC    A(@@LC363)
         DC    A(@@LC364)
         DC    A(@@LC32)
         DC    A(@@LC365)
         DC    A(@@LC366)
         DC    A(@@LC367)
         DC    A(@@LC32)
         DC    A(@@LC368)
         DC    A(@@LC369)
         DC    A(@@LC370)
         DC    A(@@LC32)
         DC    A(@@LC371)
         DC    A(@@LC372)
         DC    A(@@LC373)
         DC    A(@@LC32)
         DC    A(@@LC374)
         DC    A(@@LC375)
         DC    A(@@LC376)
         DC    A(@@LC32)
         DC    A(@@LC377)
         DC    A(@@LC378)
         DC    A(@@LC379)
         DC    A(@@LC32)
         DC    A(@@LC380)
         DC    A(@@LC381)
         DC    A(@@LC382)
         DC    A(@@LC32)
         DC    A(@@LC383)
         DC    A(@@LC384)
         DC    A(@@LC385)
         DC    A(@@LC32)
         DC    A(@@LC386)
         DC    A(@@LC387)
         DC    A(@@LC388)
         DC    A(@@LC32)
         DC    A(@@LC389)
         DC    A(@@LC32)
         DC    A(@@LC390)
         DC    A(@@LC32)
         DC    A(@@LC391)
         DC    A(@@LC392)
         DC    A(@@LC393)
         DC    A(@@LC32)
@@LC394  EQU   *
         DC    C'char-instructions'
         DC    X'0'
@@LC395  EQU   *
         DC    C'Generate char instructions'
         DC    X'0'
@@LC396  EQU   *
         DC    C'no-char-instructions'
         DC    X'0'
@@LC397  EQU   *
         DC    C'Do not generate char instructions'
         DC    X'0'
@@LC398  EQU   *
         DC    C'pickax'
         DC    X'0'
@@LC399  EQU   *
         DC    C'Experimental i370 PIC'
         DC    X'0'
@@LC400  EQU   *
         DC    C'no-pickax'
         DC    X'0'
@@LC401  EQU   *
         DC    C'Disable experimental i370 PIC'
         DC    X'0'
         DS    0F
@@9      EQU   *
         DC    A(@@LC394)
         DC    F'1'
         DC    A(@@LC395)
         DC    A(@@LC396)
         DC    F'-1'
         DC    A(@@LC397)
         DC    A(@@LC398)
         DC    F'2'
         DC    A(@@LC399)
         DC    A(@@LC400)
         DC    F'-2'
         DC    A(@@LC401)
         DC    A(@@LC32)
         DC    F'1'
         DC    F'0'
@@LC402  EQU   *
         DC    C'csect='
         DC    X'0'
@@LC403  EQU   *
         DC    C'Set CSECT name'
         DC    X'0'
         DS    0F
@@10     EQU   *
         DC    A(@@LC402)
         DC    V(MVS@CSEC)
         DC    A(@@LC403)
* X-var inhibit_warnings
         ENTRY INHIBIT@
* Program data area
         DS    0F
INHIBIT@ EQU   *
         DC    F'0'
* X-var warn_system_headers
         ENTRY WARN@SYS
         DS    0F
WARN@SYS EQU   *
         DC    F'0'
* X-var extra_warnings
         ENTRY EXTRA@WA
         DS    0F
EXTRA@WA EQU   *
         DC    F'0'
* X-var warnings_are_errors
         ENTRY WARNINGS
         DS    0F
WARNINGS EQU   *
         DC    F'0'
* X-var wrnddecl
         ENTRY WRNDDECL
         DS    0F
WRNDDECL EQU   *
         DC    F'1'
* Program text area
@@LC404  EQU   *
         DC    C'unused-function'
         DC    X'0'
@@LC405  EQU   *
         DC    C'Warn when a function is unused'
         DC    X'0'
@@LC406  EQU   *
         DC    C'unused-label'
         DC    X'0'
@@LC407  EQU   *
         DC    C'Warn when a label is unused'
         DC    X'0'
@@LC408  EQU   *
         DC    C'unused-parameter'
         DC    X'0'
@@LC409  EQU   *
         DC    C'Warn when a function parameter is unused'
         DC    X'0'
@@LC410  EQU   *
         DC    C'unused-variable'
         DC    X'0'
@@LC411  EQU   *
         DC    C'Warn when a variable is unused'
         DC    X'0'
@@LC412  EQU   *
         DC    C'unused-value'
         DC    X'0'
@@LC413  EQU   *
         DC    C'Warn when an expression value is unused'
         DC    X'0'
@@LC414  EQU   *
         DC    C'system-headers'
         DC    X'0'
@@LC415  EQU   *
         DC    C'Do not suppress warnings from system headers'
         DC    X'0'
@@LC416  EQU   *
         DC    C'error'
         DC    X'0'
@@LC417  EQU   *
         DC    C'Treat all warnings as errors'
         DC    X'0'
@@LC418  EQU   *
         DC    C'shadow'
         DC    X'0'
@@LC419  EQU   *
         DC    C'Warn when one local variable shadows another'
         DC    X'0'
@@LC420  EQU   *
         DC    C'switch'
         DC    X'0'
@@LC421  EQU   *
         DC    C'Warn about enumerated switches missing a specifi'
         DC    C'c case'
         DC    X'0'
@@LC422  EQU   *
         DC    C'aggregate-return'
         DC    X'0'
@@LC423  EQU   *
         DC    C'Warn about returning structures, unions or array'
         DC    C's'
         DC    X'0'
@@LC424  EQU   *
         DC    C'cast-align'
         DC    X'0'
@@LC425  EQU   *
         DC    C'Warn about pointer casts which increase alignmen'
         DC    C't'
         DC    X'0'
@@LC426  EQU   *
         DC    C'unreachable-code'
         DC    X'0'
@@LC427  EQU   *
         DC    C'Warn about code that will never be executed'
         DC    X'0'
@@LC428  EQU   *
         DC    C'uninitialized'
         DC    X'0'
@@LC429  EQU   *
         DC    C'Warn about uninitialized automatic variables'
         DC    X'0'
@@LC430  EQU   *
         DC    C'Warn when an inlined function cannot be inlined'
         DC    X'0'
@@LC431  EQU   *
         DC    C'packed'
         DC    X'0'
@@LC432  EQU   *
         DC    C'Warn when the packed attribute has no effect on '
         DC    C'struct layout'
         DC    X'0'
@@LC433  EQU   *
         DC    C'padded'
         DC    X'0'
@@LC434  EQU   *
         DC    C'Warn when padding is required to align struct me'
         DC    C'mbers'
         DC    X'0'
@@LC435  EQU   *
         DC    C'disabled-optimization'
         DC    X'0'
@@LC436  EQU   *
         DC    C'Warn when an optimization pass is disabled'
         DC    X'0'
@@LC437  EQU   *
         DC    C'deprecated-declarations'
         DC    X'0'
@@LC438  EQU   *
         DC    C'Warn about uses of __attribute__((deprecated)) d'
         DC    C'eclarations'
         DC    X'0'
@@LC439  EQU   *
         DC    C'missing-noreturn'
         DC    X'0'
@@LC440  EQU   *
         DC    C'Warn about functions which might be candidates f'
         DC    C'or attribute noreturn'
         DC    X'0'
         DS    0F
@@11     EQU   *
         DC    A(@@LC404)
         DC    A(WUN@FUNC)
         DC    F'1'
         DC    A(@@LC405)
         DC    A(@@LC406)
         DC    A(WARN@UNU)
         DC    F'1'
         DC    A(@@LC407)
         DC    A(@@LC408)
         DC    A(WUN@PARM)
         DC    F'1'
         DC    A(@@LC409)
         DC    A(@@LC410)
         DC    A(WU@VAR)
         DC    F'1'
         DC    A(@@LC411)
         DC    A(@@LC412)
         DC    A(WU@VAL)
         DC    F'1'
         DC    A(@@LC413)
         DC    A(@@LC414)
         DC    A(WARN@SYS)
         DC    F'1'
         DC    A(@@LC415)
         DC    A(@@LC416)
         DC    A(WARNINGS)
         DC    F'1'
         DC    A(@@LC417)
         DC    A(@@LC418)
         DC    A(WARN@SHA)
         DC    F'1'
         DC    A(@@LC419)
         DC    A(@@LC420)
         DC    A(WARN@SWI)
         DC    F'1'
         DC    A(@@LC421)
         DC    A(@@LC422)
         DC    A(WARN@AGG)
         DC    F'1'
         DC    A(@@LC423)
         DC    A(@@LC424)
         DC    A(WCALIGN)
         DC    F'1'
         DC    A(@@LC425)
         DC    A(@@LC426)
         DC    A(WARN@NOT)
         DC    F'1'
         DC    A(@@LC427)
         DC    A(@@LC428)
         DC    A(WARN@UNI)
         DC    F'1'
         DC    A(@@LC429)
         DC    A(@@LC98)
         DC    A(WARN@INL)
         DC    F'1'
         DC    A(@@LC430)
         DC    A(@@LC431)
         DC    A(WARN@PAC)
         DC    F'1'
         DC    A(@@LC432)
         DC    A(@@LC433)
         DC    A(WARN@PAD)
         DC    F'1'
         DC    A(@@LC434)
         DC    A(@@LC435)
         DC    A(WARN@DIS)
         DC    F'1'
         DC    A(@@LC436)
         DC    A(@@LC437)
         DC    A(WRNDDECL)
         DC    F'1'
         DC    A(@@LC438)
         DC    A(@@LC439)
         DC    A(WM@NORET)
         DC    F'1'
         DC    A(@@LC440)
         DS    0F
* X-func set_Wunused prologue
SET@WUNU PDPPRLG CINDEX=0,FRAME=88,BASER=12,ENTRY=YES
         B     @@FEN0
         LTORG
@@FEN0   EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG0    EQU   *
         LR    11,1
         L     10,=A(@@PGT0)
* Function set_Wunused code
         L     15,0(11)
         L     2,=A(WUN@FUNC)
         ST    15,0(2)
         L     2,=A(WARN@UNU)
         ST    15,0(2)
         LTR   15,15
         BNE   @@L2
         L     2,=A(WUN@PARM)
         ST    15,0(2)
         B     @@L3
@@L2     EQU   *
         L     3,=A(WUN@PARM)
         L     2,0(3)
         LTR   2,2
         BNE   @@L3
         MVC   0(4,3),=F'-1'
@@L3     EQU   *
         L     2,=A(WU@VAR)
         ST    15,0(2)
         L     2,=A(WU@VAL)
         ST    15,0(2)
* Function set_Wunused epilogue
         PDPEPIL
* Function set_Wunused literal pool
         DS    0F
         LTORG
* Function set_Wunused page table
         DS    0F
@@PGT0   EQU   *
         DC    A(@@PG0)
         DS    0F
* X-func set_fast_math_flags prologue
SET@FAST PDPPRLG CINDEX=1,FRAME=88,BASER=12,ENTRY=YES
         B     @@FEN1
         LTORG
@@FEN1   EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG1    EQU   *
         LR    11,1
         L     10,=A(@@PGT1)
* Function set_fast_math_flags code
         L     2,=A(FTRAPMAT)
         MVC   0(4,2),=F'0'
         L     2,=A(FLAG@UNS)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@ERR)
         MVC   0(4,2),=F'0'
* Function set_fast_math_flags epilogue
         PDPEPIL
* Function set_fast_math_flags literal pool
         DS    0F
         LTORG
* Function set_fast_math_flags page table
         DS    0F
@@PGT1   EQU   *
         DC    A(@@PG1)
         DS    0F
* X-func set_no_fast_math_flags prologue
SET@NO@F PDPPRLG CINDEX=2,FRAME=88,BASER=12,ENTRY=YES
         B     @@FEN2
         LTORG
@@FEN2   EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG2    EQU   *
         LR    11,1
         L     10,=A(@@PGT2)
* Function set_no_fast_math_flags code
         L     2,=A(FTRAPMAT)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@UNS)
         MVC   0(4,2),=F'0'
         L     2,=A(FLAG@ERR)
         MVC   0(4,2),=F'1'
* Function set_no_fast_math_flags epilogue
         PDPEPIL
* Function set_no_fast_math_flags literal pool
         DS    0F
         LTORG
* Function set_no_fast_math_flags page table
         DS    0F
@@PGT2   EQU   *
         DC    A(@@PG2)
* X-var rtdfile
         ENTRY RTDFILE
* Program data area
         DS    0F
RTDFILE  EQU   *
         DC    F'0'
* Program text area
@@LC441  EQU   *
         DC    C'invalid option `%s'''
         DC    X'0'
         DS    0F
* X-func read_integral_parameter prologue
READ@INT PDPPRLG CINDEX=3,FRAME=96,BASER=12,ENTRY=YES
         B     @@FEN3
         LTORG
@@FEN3   EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG3    EQU   *
         LR    11,1
         L     10,=A(@@PGT3)
* Function read_integral_parameter code
         L     4,0(11)
         L     5,4(11)
         LR    15,4
         IC    2,0(4)
         CLM   2,1,=XL1'00'
         BE    @@L9
@@L13    EQU   *
         SLR   2,2
         IC    2,0(15)
         MH    2,=H'2'
         L     3,=V(@SCH@IST)
         LH    2,0(2,3)
         N     2,=F'4'
         CH    2,=H'0'
         BE    @@L9
         A     15,=F'1'
         IC    2,0(15)
         CLM   2,1,=XL1'00'
         BNE   @@L13
@@L9     EQU   *
         IC    2,0(15)
         CLM   2,1,=XL1'00'
         BE    @@L14
         LTR   5,5
         BE    @@L15
         MVC   88(4,13),=A(@@LC441)
         ST    5,92(13)
         LA    1,88(,13)
         L     15,=V(ERROR)
         BALR  14,15
@@L15    EQU   *
         L     15,8(11)
         B     @@L7
@@L14    EQU   *
         ST    4,88(13)
         LA    1,88(,13)
         L     15,=V(ATOI)
         BALR  14,15
@@L7     EQU   *
* Function read_integral_parameter epilogue
         PDPEPIL
* Function read_integral_parameter literal pool
         DS    0F
         LTORG
* Function read_integral_parameter page table
         DS    0F
@@PGT3   EQU   *
         DC    A(@@PG3)
         DS    0F
* S-func decl_name prologue
@@12     PDPPRLG CINDEX=4,FRAME=88,BASER=12,ENTRY=NO
         B     @@FEN4
         LTORG
@@FEN4   EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG4    EQU   *
         LR    11,1
         L     10,=A(@@PGT4)
* Function decl_name code
         L     2,0(11)
         L     2,44(2)
         L     15,16(2)
* Function decl_name epilogue
         PDPEPIL
* Function decl_name literal pool
         DS    0F
         LTORG
* Function decl_name page table
         DS    0F
@@PGT4   EQU   *
         DC    A(@@PG4)
@@LC442  EQU   *
         DC    C'<stdin>'
         DC    X'0'
@@LC443  EQU   *
         DC    C'?'
         DC    X'0'
         DS    0F
* X-func do_abort prologue
DO@ABORT PDPPRLG CINDEX=5,FRAME=104,BASER=12,ENTRY=YES
         B     @@FEN5
         LTORG
@@FEN5   EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG5    EQU   *
         LR    11,1
         L     10,=A(@@PGT5)
* Function do_abort code
         MVC   88(4,13),=A(@@LC442)
         MVC   92(4,13),=F'1611'
         MVC   96(4,13),=A(@@LC443)
         LA    1,88(,13)
         L     15,=V(FANCY@AB)
         BALR  14,15
* Function do_abort epilogue
         PDPEPIL
* Function do_abort literal pool
         DS    0F
         LTORG
* Function do_abort page table
         DS    0F
@@PGT5   EQU   *
         DC    A(@@PG5)
         DS    0F
* X-func botch prologue
BOTCH    PDPPRLG CINDEX=6,FRAME=104,BASER=12,ENTRY=YES
         B     @@FEN6
         LTORG
@@FEN6   EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG6    EQU   *
         LR    11,1
         L     10,=A(@@PGT6)
* Function botch code
         MVC   88(4,13),=A(@@LC442)
         MVC   92(4,13),=F'1621'
         MVC   96(4,13),=A(@@LC443)
         LA    1,88(,13)
         L     15,=V(FANCY@AB)
         BALR  14,15
* Function botch epilogue
         PDPEPIL
* Function botch literal pool
         DS    0F
         LTORG
* Function botch page table
         DS    0F
@@PGT6   EQU   *
         DC    A(@@PG6)
         DS    0F
* X-func exact_log2_wide prologue
EXACT@LO PDPPRLG CINDEX=7,FRAME=88,BASER=12,ENTRY=YES
         B     @@FEN7
         LTORG
@@FEN7   EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG7    EQU   *
         LR    11,1
         L     10,=A(@@PGT7)
* Function exact_log2_wide code
         L     3,0(11)
         SLR   15,15
         LTR   3,3
         BE    @@L22
         LCR   2,3
         NR    2,3
         CLR   3,2
         BE    @@L21
@@L22    EQU   *
         L     15,=F'-1'
         B     @@L20
@@L21    EQU   *
         SRL   3,1
         LTR   3,3
         BE    @@L20
@@L26    EQU   *
         A     15,=F'1'
         SRL   3,1
         LTR   3,3
         BNE   @@L26
@@L20    EQU   *
* Function exact_log2_wide epilogue
         PDPEPIL
* Function exact_log2_wide literal pool
         DS    0F
         LTORG
* Function exact_log2_wide page table
         DS    0F
@@PGT7   EQU   *
         DC    A(@@PG7)
         DS    0F
* X-func floor_log2_wide prologue
FLOOR@LO PDPPRLG CINDEX=8,FRAME=88,BASER=12,ENTRY=YES
         B     @@FEN8
         LTORG
@@FEN8   EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG8    EQU   *
         LR    11,1
         L     10,=A(@@PGT8)
* Function floor_log2_wide code
         L     2,0(11)
         L     15,=F'-1'
         LTR   2,2
         BE    @@L35
@@L33    EQU   *
         A     15,=F'1'
         SRL   2,1
         LTR   2,2
         BNE   @@L33
@@L35    EQU   *
* Function floor_log2_wide epilogue
         PDPEPIL
* Function floor_log2_wide literal pool
         DS    0F
         LTORG
* Function floor_log2_wide page table
         DS    0F
@@PGT8   EQU   *
         DC    A(@@PG8)
         DS    0F
* S-func float_signal prologue
@@13     PDPPRLG CINDEX=9,FRAME=96,BASER=12,ENTRY=NO
         B     @@FEN9
         LTORG
@@FEN9   EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG9    EQU   *
         LR    11,1
         L     10,=A(@@PGT9)
* Function float_signal code
         L     3,=A(FLHLED)
         L     2,0(3)
         LTR   2,2
         BNE   @@L37
         MVC   88(4,13),0(11)
         LA    1,88(,13)
         L     15,=A(@@14)
         BALR  14,15
@@L37    EQU   *
         MVC   0(4,3),=F'0'
         MVC   88(4,13),=F'2'
         MVC   92(4,13),=A(@@13)
         LA    1,88(,13)
         L     15,=V(SIGNAL)
         BALR  14,15
         MVC   88(4,13),=A(FLHLER)
         MVC   92(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(LONGJMP)
         BALR  14,15
* Function float_signal epilogue
         PDPEPIL
* Function float_signal literal pool
         DS    0F
         LTORG
* Function float_signal page table
         DS    0F
@@PGT9   EQU   *
         DC    A(@@PG9)
         DS    0F
* S-func set_float_handler prologue
@@15     PDPPRLG CINDEX=10,FRAME=96,BASER=12,ENTRY=NO
         B     @@FEN10
         LTORG
@@FEN10  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG10   EQU   *
         LR    11,1
         L     10,=A(@@PGT10)
* Function set_float_handler code
         L     15,0(11)
         L     3,=A(FLHLED)
         LPR   2,15
         LCR   2,2
         SRL   2,31
         ST    2,0(3)
         LTR   15,15
         BE    @@L40
         L     2,=A(FLHLER)
         MVC   0(64,2),0(15)
@@L40    EQU   *
         L     2,0(3)
         LTR   2,2
         BE    @@L38
         L     3,=A(@@16)
         L     2,0(3)
         LTR   2,2
         BNE   @@L38
         MVC   88(4,13),=F'2'
         MVC   92(4,13),=A(@@13)
         LA    1,88(,13)
         L     15,=V(SIGNAL)
         BALR  14,15
         MVC   0(4,3),=F'1'
@@L38    EQU   *
* Function set_float_handler epilogue
         PDPEPIL
* Function set_float_handler literal pool
         DS    0F
         LTORG
* Function set_float_handler page table
         DS    0F
@@PGT10  EQU   *
         DC    A(@@PG10)
         DS    0F
* X-func do_float_handler prologue
DO@FLOAT PDPPRLG CINDEX=11,FRAME=160,BASER=12,ENTRY=YES
         B     @@FEN11
         LTORG
@@FEN11  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG11   EQU   *
         LR    11,1
         L     10,=A(@@PGT11)
* Function do_float_handler code
         LA    2,96(,13)
         ST    2,88(13)
         LA    1,88(,13)
         L     15,=A(@@15)
         BALR  14,15
         MVC   88(4,13),4(11)
         L     2,0(11)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         MVC   88(4,13),=F'0'
         LA    1,88(,13)
         L     15,=A(@@15)
         BALR  14,15
         LA    15,1(0,0)
* Function do_float_handler epilogue
         PDPEPIL
* Function do_float_handler literal pool
         DS    0F
         LTORG
* Function do_float_handler page table
         DS    0F
@@PGT11  EQU   *
         DC    A(@@PG11)
@@LC444  EQU   *
         DC    C'internal error: %s'
         DC    X'0'
         DS    0F
* S-func crash_signal prologue
@@14     PDPPRLG CINDEX=12,FRAME=96,BASER=12,ENTRY=NO
         B     @@FEN12
         LTORG
@@FEN12  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG12   EQU   *
         LR    11,1
         L     10,=A(@@PGT12)
* Function crash_signal code
         MVC   88(4,13),0(11)
         LA    1,88(,13)
         L     15,=V(STRSIGNA)
         BALR  14,15
         MVC   88(4,13),=A(@@LC444)
         ST    15,92(13)
         LA    1,88(,13)
         L     15,=V(INTERROR)
         BALR  14,15
* Function crash_signal epilogue
         PDPEPIL
* Function crash_signal literal pool
         DS    0F
         LTORG
* Function crash_signal page table
         DS    0F
@@PGT12  EQU   *
         DC    A(@@PG12)
         DS    0F
* X-func strip_off_ending prologue
STRIP@OF PDPPRLG CINDEX=13,FRAME=88,BASER=12,ENTRY=YES
         B     @@FEN13
         LTORG
@@FEN13  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG13   EQU   *
         LR    11,1
         L     10,=A(@@PGT13)
* Function strip_off_ending code
         L     5,0(11)
         L     4,4(11)
         LA    3,2(0,0)
         CR    4,3
         BNH   @@L44
@@L51    EQU   *
         LR    15,4
         SR    15,3
         IC    2,0(15,5)
         CLM   2,1,=XL1'4B'
         BE    @@L53
         A     3,=F'1'
         LA    2,5(0,0)
         CR    3,2
         BH    @@L44
         CR    4,3
         BH    @@L51
         B     @@L44
@@L53    EQU   *
         SLR   2,2
         STC   2,0(15,5)
@@L44    EQU   *
* Function strip_off_ending epilogue
         PDPEPIL
* Function strip_off_ending literal pool
         DS    0F
         LTORG
* Function strip_off_ending page table
         DS    0F
@@PGT13  EQU   *
         DC    A(@@PG13)
@@LC445  EQU   *
         DC    C'\%03o'
         DC    X'0'
         DS    0F
* X-func output_quoted_string prologue
OUTPUT@Q PDPPRLG CINDEX=14,FRAME=104,BASER=12,ENTRY=YES
         B     @@FEN14
         LTORG
@@FEN14  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG14   EQU   *
         LR    11,1
         L     10,=A(@@PGT14)
* Function output_quoted_string code
         L     6,0(11)
         L     5,4(11)
         MVC   88(4,13),=F'127'
         ST    6,92(13)
         LA    1,88(,13)
         L     15,=V(T@FPUTC)
         BALR  14,15
         IC    15,0(5)
         A     5,=F'1'
         CLM   15,1,=XL1'00'
         BE    @@L64
@@L62    EQU   *
         LR    4,15
         N     4,=XL4'000000FF'
         LR    3,4
         MH    3,=H'2'
         L     2,=V(@SCH@IST)
         LH    2,0(3,2)
         N     2,=F'16'
         CH    2,=H'0'
         BE    @@L58
         CLM   15,1,=XL1'7F'
         BE    @@L60
         CLM   15,1,=XL1'E0'
         BE    @@L60
@@L59    EQU   *
         ST    4,88(13)
         ST    6,92(13)
         LA    1,88(,13)
         L     15,=V(T@FPUTC)
         BALR  14,15
@@L55    EQU   *
         IC    15,0(5)
         A     5,=F'1'
         CLM   15,1,=XL1'00'
         BNE   @@L62
         B     @@L64
@@L60    EQU   *
         MVC   88(4,13),=F'224'
         ST    6,92(13)
         LA    1,88(,13)
         L     15,=V(T@FPUTC)
         BALR  14,15
         B     @@L59
@@L58    EQU   *
         ST    6,88(13)
         MVC   92(4,13),=A(@@LC445)
         ST    4,96(13)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
         B     @@L55
@@L64    EQU   *
         MVC   88(4,13),=F'127'
         ST    6,92(13)
         LA    1,88(,13)
         L     15,=V(T@FPUTC)
         BALR  14,15
* Function output_quoted_string epilogue
         PDPEPIL
* Function output_quoted_string literal pool
         DS    0F
         LTORG
* Function output_quoted_string page table
         DS    0F
@@PGT14  EQU   *
         DC    A(@@PG14)
@@LC446  EQU   *
         DC    X'5'
         DC    C'.file'
         DC    X'5'
         DC    X'0'
         DS    0F
* X-func ofdirect prologue
OFDIRECT PDPPRLG CINDEX=15,FRAME=96,BASER=12,ENTRY=YES
         B     @@FEN15
         LTORG
@@FEN15  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG15   EQU   *
         LR    11,1
         L     10,=A(@@PGT15)
* Function ofdirect code
         L     5,0(11)
         L     4,4(11)
         ST    4,88(13)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,4
         CLR   3,4
         BNH   @@L67
@@L70    EQU   *
         L     2,=F'-1'
         IC    2,0(2,3)
         CLM   2,1,=XL1'61'
         BE    @@L67
         BCTR  3,0
         CLR   3,4
         BH    @@L70
@@L67    EQU   *
         ST    5,88(13)
         MVC   92(4,13),=A(@@LC446)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
         ST    5,88(13)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=A(OUTPUT@Q)
         BALR  14,15
         MVC   88(4,13),=F'21'
         ST    5,92(13)
         LA    1,88(,13)
         L     15,=V(T@FPUTC)
         BALR  14,15
* Function ofdirect epilogue
         PDPEPIL
* Function ofdirect literal pool
         DS    0F
         LTORG
* Function ofdirect page table
         DS    0F
@@PGT15  EQU   *
         DC    A(@@PG15)
@@LC447  EQU   *
         DC    C'.%02d.'
         DC    X'0'
@@LC448  EQU   *
         DC    C'w'
         DC    X'0'
@@LC451  EQU   *
         DC    X'15'
         DC    C';; Function %s'
         DC    X'15'
         DC    X'15'
         DC    X'0'
@@LC450  EQU   *
         DC    C'can''t open %s'
         DC    X'0'
@@LC449  EQU   *
         DC    C'a'
         DC    X'0'
         DS    0F
* S-func open_dump_file prologue
@@17     PDPPRLG CINDEX=16,FRAME=120,BASER=12,ENTRY=NO
         B     @@FEN16
         LTORG
@@FEN16  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG16   EQU   *
         LR    11,1
         L     10,=A(@@PGT16)
* Function open_dump_file code
         L     5,0(11)
         L     7,4(11)
         L     3,=A(@@0)
         LR    4,5
         MH    4,=H'8'
         IC    2,6(4,3)
         SLR   15,15
         CLM   2,1,=XL1'00'
         BE    @@L72
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         L     2,=A(RTDFILE)
         L     2,0(2)
         LTR   2,2
         BNE   @@L80
@@L74    EQU   *
         LA    6,104(,13)
         ST    6,88(13)
         MVC   92(4,13),=A(@@LC447)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=V(SPRINTF)
         BALR  14,15
         IC    2,7(4,3)
         CLM   2,1,=XL1'00'
         BNE   @@L75
         L     2,=A(GRAPH@DU)
         L     2,0(2)
         LTR   2,2
         BE    @@L76
         IC    2,5(4,3)
         CLM   2,1,=XL1'00'
         BNE   @@L81
@@L76    EQU   *
         L     2,=A(@@0)
         LA    3,1(0,0)
         STC   3,7(4,2)
         L     4,=A(@@LC448)
@@L77    EQU   *
         L     2,=A(DUMP@BAS)
         MVC   88(4,13),0(2)
         ST    6,92(13)
         MH    5,=H'8'
         L     2,=A(@@0)
         L     5,0(5,2)
         ST    5,96(13)
         MVC   100(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(CONCAT)
         BALR  14,15
         LR    3,15
         ST    15,88(13)
         ST    4,92(13)
         LA    1,88(,13)
         L     15,=V(FOPEN)
         BALR  14,15
         L     4,=A(RTDFILE)
         ST    15,0(4)
         LTR   15,15
         BE    @@L82
@@L78    EQU   *
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(FREE)
         BALR  14,15
         LTR   7,7
         BE    @@L79
         ST    7,88(13)
         MVC   92(4,13),=F'2'
         L     2,=A(DECL@PRI)
         L     2,0(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         MVC   88(4,13),0(4)
         MVC   92(4,13),=A(@@LC451)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
@@L79    EQU   *
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    15,1(0,0)
         B     @@L72
@@L82    EQU   *
         MVC   88(4,13),=A(@@LC450)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=V(FATAL@IO)
         BALR  14,15
         B     @@L78
@@L81    EQU   *
         ST    6,88(13)
         L     3,0(4,3)
         ST    3,92(13)
         MVC   96(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(CONCAT)
         BALR  14,15
         LR    3,15
         L     2,=A(DUMP@BAS)
         MVC   88(4,13),0(2)
         ST    15,92(13)
         LA    1,88(,13)
         L     15,=V(CLEAN@GR)
         BALR  14,15
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(FREE)
         BALR  14,15
         B     @@L76
@@L75    EQU   *
         L     4,=A(@@LC449)
         B     @@L77
@@L80    EQU   *
         ST    2,88(13)
         LA    1,88(,13)
         L     15,=V(FCLOSE)
         BALR  14,15
         B     @@L74
@@L72    EQU   *
* Function open_dump_file epilogue
         PDPEPIL
* Function open_dump_file literal pool
         DS    0F
         LTORG
* Function open_dump_file page table
         DS    0F
@@PGT16  EQU   *
         DC    A(@@PG16)
         DS    0F
* S-func close_dump_file prologue
@@18     PDPPRLG CINDEX=17,FRAME=120,BASER=12,ENTRY=NO
         B     @@FEN17
         LTORG
@@FEN17  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG17   EQU   *
         LR    11,1
         L     10,=A(@@PGT17)
* Function close_dump_file code
         L     6,0(11)
         L     7,4(11)
         L     5,8(11)
         L     2,=A(RTDFILE)
         L     2,0(2)
         LTR   2,2
         BE    @@L83
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LTR   5,5
         BE    @@L85
         L     2,=A(GRAPH@DU)
         L     2,0(2)
         LTR   2,2
         BE    @@L85
         L     4,=A(@@0)
         LR    3,6
         MH    3,=H'8'
         IC    2,5(3,4)
         CLM   2,1,=XL1'00'
         BNE   @@L87
@@L85    EQU   *
         LTR   7,7
         BE    @@L86
         LTR   5,5
         BE    @@L86
         L     2,=A(RTDFILE)
         MVC   88(4,13),0(2)
         ST    5,92(13)
         LA    1,88(,13)
         LA    15,0(7)
         BALR  14,15
@@L86    EQU   *
         L     2,=A(RTDFILE)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FFLUSH)
         BALR  14,15
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FCLOSE)
         BALR  14,15
         MVC   0(4,2),=F'0'
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         B     @@L83
@@L87    EQU   *
         LA    2,104(,13)
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC447)
         ST    6,96(13)
         LA    1,88(,13)
         L     15,=V(SPRINTF)
         BALR  14,15
         ST    2,88(13)
         L     4,0(3,4)
         ST    4,92(13)
         MVC   96(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(CONCAT)
         BALR  14,15
         LR    3,15
         L     2,=A(DUMP@BAS)
         MVC   88(4,13),0(2)
         ST    15,92(13)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=V(PRRGWBB)
         BALR  14,15
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(FREE)
         BALR  14,15
         B     @@L85
@@L83    EQU   *
* Function close_dump_file epilogue
         PDPEPIL
* Function close_dump_file literal pool
         DS    0F
         LTORG
* Function close_dump_file page table
         DS    0F
@@PGT17  EQU   *
         DC    A(@@PG17)
         DS    0F
* X-func wrapup_global_declarations prologue
WRAPUP@G PDPPRLG CINDEX=18,FRAME=104,BASER=12,ENTRY=YES
         B     @@FEN18
         LTORG
@@FEN18  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG18   EQU   *
         LR    11,1
         L     10,=A(@@PGT18)
* Function wrapup_global_declarations code
         L     8,4(11)
         SLR   9,9
         CR    9,8
         BNL   @@L95
         L     4,0(11)
         LR    5,8
@@L94    EQU   *
         L     3,0(4)
         NC    28(4,3),=F'-8193'
         CLI   8(3),34
         BE    @@L125
@@L91    EQU   *
         A     4,=F'4'
         BCTR  5,0
         LTR   5,5
         BNE   @@L94
@@L95    EQU   *
         SLR   6,6
         LR    5,6
         CR    6,8
         BNL   @@L124
@@L119   EQU   *
         LR    2,5
         MH    2,=H'4'
         L     4,0(11)
         L     3,0(2,4)
         L     15,8(3)
         LR    2,15
         SRL   2,17
         N     2,=F'1'
         LTR   2,2
         BNE   @@L100
         L     2,28(3)
         SRL   2,23
         N     2,=F'1'
         LTR   2,2
         BNE   @@L100
         N     15,=F'-16769024'
         L     2,=F'570433536'
         CLR   15,2
         BE    @@L126
@@L104   EQU   *
         CLI   8(3),30
         BE    @@L127
@@L100   EQU   *
         A     5,=F'1'
         CR    5,8
         BL    @@L119
@@L124   EQU   *
         LTR   6,6
         BE    @@L97
         LA    9,1(0,0)
@@L97    EQU   *
         LTR   6,6
         BNE   @@L95
         B     @@L128
@@L127   EQU   *
         L     2,60(3)
         LTR   2,2
         BE    @@L100
         L     2,88(3)
         LTR   2,2
         BE    @@L100
         L     2,=A(FKINF)
         L     2,0(2)
         LTR   2,2
         BNE   @@L115
         L     2,8(3)
         SRL   2,12
         N     2,=F'1'
         LTR   2,2
         BE    @@L116
         L     2,28(3)
         SRL   2,5
         N     2,=F'1'
         LTR   2,2
         BE    @@L115
@@L116   EQU   *
         L     2,68(3)
         LTR   2,2
         BE    @@L129
@@L118   EQU   *
         L     2,68(3)
         L     2,8(2)
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         BE    @@L100
@@L115   EQU   *
         LA    6,1(0,0)
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(OUTPUT@I)
         BALR  14,15
         B     @@L100
@@L129   EQU   *
         ST    3,88(13)
         L     2,=V(LANG@SET)
         L     2,0(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         B     @@L118
@@L126   EQU   *
         LA    7,1(0,0)
         L     2,68(3)
         LTR   2,2
         BE    @@L130
@@L107   EQU   *
         L     2,68(3)
         L     15,8(2)
         SRL   15,13
         N     15,=F'1'
         LTR   15,15
         BNE   @@L108
         L     4,28(3)
         LR    2,4
         SRL   2,5
         N     2,=F'1'
         LTR   2,2
         BNE   @@L112
         L     2,8(3)
         N     2,=F'528384'
         L     15,=F'524288'
         CLR   2,15
         BE    @@L131
@@L108   EQU   *
         CLM   7,1,=XL1'00'
         BE    @@L104
         LA    6,1(0,0)
         ST    3,88(13)
         MVC   92(4,13),=F'0'
         ST    6,96(13)
         ST    6,100(13)
         LA    1,88(,13)
         L     15,=V(RO@DECL@)
         BALR  14,15
         B     @@L104
@@L131   EQU   *
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         BNE   @@L112
         L     2,=A(FKSCONST)
         L     2,0(2)
         LTR   2,2
         BE    @@L112
         SRL   4,9
         N     4,=F'1'
         LTR   4,4
         BE    @@L108
@@L112   EQU   *
         SLR   7,7
         B     @@L108
@@L130   EQU   *
         ST    3,88(13)
         L     2,=V(LANG@SET)
         L     2,0(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         B     @@L107
@@L125   EQU   *
         L     2,24(3)
         LTR   2,2
         BNE   @@L91
         L     2,=A(INCDECFI)
         L     2,0(2)
         LTR   2,2
         BE    @@L91
         ST    3,88(13)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         B     @@L91
@@L128   EQU   *
         LR    15,9
* Function wrapup_global_declarations epilogue
         PDPEPIL
* Function wrapup_global_declarations literal pool
         DS    0F
         LTORG
* Function wrapup_global_declarations page table
         DS    0F
@@PGT18  EQU   *
         DC    A(@@PG18)
@@LC454  EQU   *
         DC    C'`%s'' defined but not used'
         DC    X'0'
@@LC452  EQU   *
         DC    C'`%s'' used but never defined'
         DC    X'0'
@@LC453  EQU   *
         DC    C'`%s'' declared `static'' but never defined'
         DC    X'0'
         DS    0F
* X-func check_global_declarations prologue
CHECK@GL PDPPRLG CINDEX=19,FRAME=96,BASER=12,ENTRY=YES
         B     @@FEN19
         LTORG
@@FEN19  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG19   EQU   *
         LR    11,1
         L     10,=A(@@PGT19)
* Function check_global_declarations code
         L     6,0(11)
         L     5,4(11)
         SLR   4,4
         CR    4,5
         BNL   @@L152
@@L150   EQU   *
         LR    2,4
         MH    2,=H'4'
         L     3,0(2,6)
         L     2,8(3)
         N     2,=F'-16637952'
         L     7,=F'570433536'
         CLR   2,7
         BE    @@L153
@@L137   EQU   *
         CLI   8(3),30
         BE    @@L154
@@L138   EQU   *
         L     2,=A(WUN@FUNC)
         L     2,0(2)
         LTR   2,2
         BE    @@L148
         CLI   8(3),30
         BE    @@L155
@@L148   EQU   *
         L     2,=A(WU@VAR)
         L     2,0(2)
         LTR   2,2
         BE    @@L146
         L     2,8(3)
         N     2,=F'-16252928'
         L     7,=F'570425344'
         CLR   2,7
         BE    @@L147
@@L146   EQU   *
         MVC   88(4,13),=F'43'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         L     2,=A(DEBUG@HO)
         L     2,0(2)
         ST    3,88(13)
         L     2,64(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         MVC   88(4,13),=F'43'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         A     4,=F'1'
         CR    4,5
         BL    @@L150
         B     @@L152
@@L147   EQU   *
         L     15,28(3)
         LR    2,15
         N     2,=F'8421376'
         LTR   2,2
         BNE   @@L146
         L     2,8(3)
         N     2,=F'36864'
         LTR   2,2
         BNE   @@L146
         CLI   8(3),30
         BE    @@L149
         SRL   15,21
         N     15,=F'1'
         LTR   15,15
         BNE   @@L146
@@L149   EQU   *
         L     2,44(3)
         L     2,8(2)
         SRL   2,15
         N     2,=F'1'
         LTR   2,2
         BNE   @@L146
         ST    3,88(13)
         MVC   92(4,13),=A(@@LC454)
         LA    1,88(,13)
         L     15,=V(WARNWDEC)
         BALR  14,15
         B     @@L146
@@L155   EQU   *
         L     2,28(3)
         SRL   2,20
         N     2,=F'1'
         LTR   2,2
         BE    @@L147
         B     @@L148
@@L154   EQU   *
         L     2,=A(WUN@FUNC)
         L     2,0(2)
         LTR   2,2
         BNE   @@L139
         L     2,68(3)
         LTR   2,2
         BE    @@L156
@@L141   EQU   *
         L     2,68(3)
         L     2,8(2)
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         BE    @@L138
@@L139   EQU   *
         L     2,60(3)
         LTR   2,2
         BNE   @@L138
         L     2,28(3)
         N     2,=F'8389120'
         L     7,=F'8388608'
         CLR   2,7
         BNE   @@L138
         L     2,8(3)
         SRL   2,12
         N     2,=F'1'
         LTR   2,2
         BNE   @@L138
         L     2,68(3)
         LTR   2,2
         BE    @@L157
@@L144   EQU   *
         L     2,68(3)
         L     2,8(2)
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         BE    @@L142
         ST    3,88(13)
         MVC   92(4,13),=A(@@LC452)
         LA    1,88(,13)
         L     15,=V(PWWDECL)
         BALR  14,15
@@L145   EQU   *
         OC    8(4,3),=F'4096'
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(ASSEXT)
         BALR  14,15
         B     @@L138
@@L142   EQU   *
         ST    3,88(13)
         MVC   92(4,13),=A(@@LC453)
         LA    1,88(,13)
         L     15,=V(WARNWDEC)
         BALR  14,15
         B     @@L145
@@L157   EQU   *
         ST    3,88(13)
         L     2,=V(LANG@SET)
         L     2,0(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         B     @@L144
@@L156   EQU   *
         ST    3,88(13)
         L     2,=V(LANG@SET)
         L     2,0(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         B     @@L141
@@L153   EQU   *
         MVC   80(4,3),=F'0'
         B     @@L137
@@L152   EQU   *
* Function check_global_declarations epilogue
         PDPEPIL
* Function check_global_declarations literal pool
         DS    0F
         LTORG
* Function check_global_declarations page table
         DS    0F
@@PGT19  EQU   *
         DC    A(@@PG19)
         DS    0F
* X-func push_srcloc prologue
PUSH@SRC PDPPRLG CINDEX=20,FRAME=96,BASER=12,ENTRY=YES
         B     @@FEN20
         LTORG
@@FEN20  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG20   EQU   *
         LR    11,1
         L     10,=A(@@PGT20)
* Function push_srcloc code
         L     5,0(11)
         L     6,4(11)
         L     4,=A(INFSTK)
         L     3,0(4)
         LTR   3,3
         BE    @@L159
         L     2,=A(INPFNAME)
         MVC   0(4,3),0(2)
         L     2,=A(LINENO)
         MVC   8(4,3),0(2)
@@L159   EQU   *
         MVC   88(4,13),=F'16'
         LA    1,88(,13)
         L     15,=V(XMALLOC)
         BALR  14,15
         L     2,=A(INPFNAME)
         ST    5,0(2)
         ST    5,0(15)
         L     2,=A(LINENO)
         ST    6,0(2)
         ST    6,8(15)
         MVC   12(4,15),=F'0'
         MVC   4(4,15),0(4)
         ST    15,0(4)
         L     3,=A(INFSTICK)
         L     2,0(3)
         A     2,=F'1'
         ST    2,0(3)
* Function push_srcloc epilogue
         PDPEPIL
* Function push_srcloc literal pool
         DS    0F
         LTORG
* Function push_srcloc page table
         DS    0F
@@PGT20  EQU   *
         DC    A(@@PG20)
         DS    0F
* X-func pop_srcloc prologue
POP@SRCL PDPPRLG CINDEX=21,FRAME=104,BASER=12,ENTRY=YES
         B     @@FEN21
         LTORG
@@FEN21  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG21   EQU   *
         LR    11,1
         L     10,=A(@@PGT21)
* Function pop_srcloc code
         L     4,=A(INFSTK)
         L     2,0(4)
         MVC   0(4,4),4(2)
         ST    2,88(13)
         LA    1,88(,13)
         L     15,=V(FREE)
         BALR  14,15
         L     3,=A(INFSTICK)
         L     2,0(3)
         A     2,=F'1'
         ST    2,0(3)
         L     2,0(4)
         LTR   2,2
         BNE   @@L161
         MVC   88(4,13),=A(@@LC442)
         MVC   92(4,13),=F'2121'
         MVC   96(4,13),=A(@@LC443)
         LA    1,88(,13)
         L     15,=V(FANCY@AB)
         BALR  14,15
@@L161   EQU   *
         L     2,0(4)
         L     3,=A(INPFNAME)
         MVC   0(4,3),0(2)
         L     3,=A(LINENO)
         MVC   0(4,3),8(2)
* Function pop_srcloc epilogue
         PDPEPIL
* Function pop_srcloc literal pool
         DS    0F
         LTORG
* Function pop_srcloc page table
         DS    0F
@@PGT21  EQU   *
         DC    A(@@PG21)
@@LC455  EQU   *
         DC    X'5'
         DC    C'END'
         DC    X'5'
         DC    C'@@MAIN'
         DC    X'15'
         DC    X'0'
@@LC456  EQU   *
         DC    X'5'
         DC    C'END'
         DC    X'15'
         DC    X'0'
         DS    0F
* S-func compile_file prologue
@@19     PDPPRLG CINDEX=22,FRAME=104,BASER=12,ENTRY=NO
         B     @@FEN22
         LTORG
@@FEN22  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG22   EQU   *
         LR    11,1
         L     10,=A(@@PGT22)
* Function compile_file code
         L     2,=A(MAIN@INP)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(INIT@FIN)
         BALR  14,15
         L     2,=A(DUMP@BAS)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(INIT@BRA)
         BALR  14,15
         MVC   88(4,13),=F'9'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(YYPARSE)
         BALR  14,15
         L     2,=V(LANG@HOO)
         L     2,28(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         MVC   88(4,13),=F'9'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     2,=A(FLAG@SYN)
         L     6,0(2)
         LTR   6,6
         BNE   @@L162
         LA    1,88(,13)
         L     15,=V(GETDECLS)
         BALR  14,15
         LR    2,15
         ST    15,88(13)
         LA    1,88(,13)
         L     15,=V(LIST@LEN)
         BALR  14,15
         LR    4,15
         LR    3,15
         MH    3,=H'4'
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(XMALLOC)
         BALR  14,15
         LR    5,15
         CR    6,4
         BNL   @@L175
         LR    15,3
         AR    15,5
         A     15,=F'-4'
         LR    3,4
@@L168   EQU   *
         ST    2,0(15)
         A     15,=F'-4'
         BCTR  3,0
         L     2,0(2)
         LTR   3,3
         BNE   @@L168
@@L175   EQU   *
         ST    5,88(13)
         ST    4,92(13)
         LA    1,88(,13)
         L     15,=A(WRAPUP@G)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(OFSTPROF)
         BALR  14,15
         ST    5,88(13)
         ST    4,92(13)
         LA    1,88(,13)
         L     15,=A(CHECK@GL)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(FREE)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(WEAK@FIN)
         BALR  14,15
         MVC   88(4,13),=F'43'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         L     2,=A(DEBUG@HO)
         L     3,0(2)
         L     2,=A(MAIN@INP)
         MVC   88(4,13),0(2)
         L     2,4(3)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         MVC   88(4,13),=F'43'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(DW2@OUTP)
         BALR  14,15
         L     2,=A(DUMP@BAS)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(END@FINA)
         BALR  14,15
         L     2,=A(PROFAFLA)
         L     2,0(2)
         LTR   2,2
         BNE   @@L170
         L     2,=A(FLAG@TES)
         L     2,0(2)
         LTR   2,2
         BNE   @@L170
         L     2,=A(FBPROB)
         L     2,0(2)
         LTR   2,2
         BE    @@L169
@@L170   EQU   *
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'14'
         MVC   92(4,13),=F'0'
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(END@BRAN)
         BALR  14,15
         MVC   88(4,13),=F'14'
         MVC   92(4,13),=F'0'
         MVC   96(4,13),=F'0'
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
@@L169   EQU   *
         L     2,=V(MVS@GOTM)
         L     2,0(2)
         LTR   2,2
         BE    @@L171
         MVC   88(4,13),=A(@@LC455)
@@L176   EQU   *
         L     2,=A(ASM@OUT@)
         MVC   92(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(T@FPUTS)
         BALR  14,15
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         BNH   @@L162
         MVC   88(4,13),=F'16'
         MVC   92(4,13),=F'0'
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LTR   15,15
         BE    @@L162
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         L     2,=A(RTDFILE)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(DMPCTOTS)
         BALR  14,15
         MVC   88(4,13),=F'16'
         MVC   92(4,13),=F'0'
         MVC   96(4,13),=F'0'
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         B     @@L162
@@L171   EQU   *
         MVC   88(4,13),=A(@@LC456)
         B     @@L176
@@L162   EQU   *
* Function compile_file epilogue
         PDPEPIL
* Function compile_file literal pool
         DS    0F
         LTORG
* Function compile_file page table
         DS    0F
@@PGT22  EQU   *
         DC    A(@@PG22)
@@LC457  EQU   *
         DC    C'alias'
         DC    X'0'
@@LC458  EQU   *
         DC    C'invalid register name `%s'' for register variabl'
         DC    C'e'
         DC    X'0'
         DS    0F
* X-func ro_decl_comp prologue
RO@DECL@ PDPPRLG CINDEX=23,FRAME=104,BASER=12,ENTRY=YES
         B     @@FEN23
         LTORG
@@FEN23  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG23   EQU   *
         LR    11,1
         L     10,=A(@@PGT23)
* Function ro_decl_comp code
         L     4,0(11)
         L     5,4(11)
         L     7,8(11)
         L     6,12(11)
         MVC   88(4,13),=A(@@LC457)
         MVC   92(4,13),76(4)
         LA    1,88(,13)
         L     15,=V(LOOKUP@A)
         BALR  14,15
         LTR   15,15
         BE    @@L178
         L     2,16(15)
         L     15,16(2)
         MVC   88(4,13),20(15)
         LA    1,88(,13)
         L     15,=V(GETIDENT)
         BALR  14,15
         ST    4,88(13)
         ST    15,92(13)
         LA    1,88(,13)
         L     15,=V(ASSEMBLE)
         BALR  14,15
@@L178   EQU   *
         L     2,8(4)
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         BNE   @@L180
         L     2,28(4)
         LR    3,2
         SRL   3,23
         N     3,=F'1'
         LTR   3,3
         BNE   @@L180
         CLI   8(4),30
         BE    @@L180
         SRL   2,21
         N     2,=F'1'
         LTR   2,2
         BE    @@L177
         LTR   5,5
         BE    @@L177
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(DECODE@R)
         BALR  14,15
         LTR   15,15
         BL    @@L187
         ST    3,80(4)
         ST    4,88(13)
         ST    5,92(13)
         LA    1,88(,13)
         L     15,=V(MDDCLRTL)
         BALR  14,15
         B     @@L177
@@L187   EQU   *
         MVC   88(4,13),=A(@@LC458)
         ST    5,92(13)
         LA    1,88(,13)
         L     15,=V(ERROR)
         BALR  14,15
         NC    28(4,4),=F'-2097153'
         LTR   7,7
         BNE   @@L177
         ST    4,88(13)
         LA    1,88(,13)
         L     15,=V(EXPDCL)
         BALR  14,15
         B     @@L177
@@L180   EQU   *
         MVC   88(4,13),=F'11'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LTR   5,5
         BE    @@L181
         ST    4,88(13)
         ST    5,92(13)
         LA    1,88(,13)
         L     15,=V(MDDCLRTL)
         BALR  14,15
@@L181   EQU   *
         LTR   6,6
         BNE   @@L183
         L     2,28(4)
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         BNE   @@L182
@@L183   EQU   *
         ST    4,88(13)
         ST    7,92(13)
         ST    6,96(13)
         MVC   100(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(ASSVAR)
         BALR  14,15
@@L182   EQU   *
         MVC   88(4,13),=F'11'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
@@L177   EQU   *
* Function ro_decl_comp epilogue
         PDPEPIL
* Function ro_decl_comp literal pool
         DS    0F
         LTORG
* Function ro_decl_comp page table
         DS    0F
@@PGT23  EQU   *
         DC    A(@@PG23)
         DS    0F
* X-func ro_type_comp prologue
RO@TYPE@ PDPPRLG CINDEX=24,FRAME=96,BASER=12,ENTRY=YES
         B     @@FEN24
         LTORG
@@FEN24  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG24   EQU   *
         LR    11,1
         L     10,=A(@@PGT24)
* Function ro_type_comp code
         MVC   88(4,13),=F'43'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'43'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
* Function ro_type_comp epilogue
         PDPEPIL
* Function ro_type_comp literal pool
         DS    0F
         LTORG
* Function ro_type_comp page table
         DS    0F
@@PGT24  EQU   *
         DC    A(@@PG24)
@@LC460  EQU   *
         DC    C'crossjump disabled: %d > 1000 basic blocks and %'
         DC    C'd >= 20 edges/basic block'
         DC    X'0'
@@LC459  EQU   *
         DC    C';; (integrable)'
         DC    X'15'
         DC    X'15'
         DC    X'0'
         DS    0F
* X-func ro_comp prologue
RO@COMP  PDPPRLG CINDEX=25,FRAME=152,BASER=12,ENTRY=YES
         B     @@FEN25
         LTORG
@@FEN25  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG25   EQU   *
         LR    11,1
         L     10,=A(@@PGT25)
* Function ro_comp code
         SLR   2,2
         SLR   3,3
         ST    2,144(13)
         ST    3,4+144(13)
         L     7,0(11)
         SLR   4,4
         MVC   88(4,13),=F'44'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         L     2,=V(GENERATI)
         ST    4,0(2)
         LR    3,4
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         BNE   @@L192
         LA    3,1(0,0)
@@L192   EQU   *
         L     2,=V(CSE@NOT@)
         ST    3,0(2)
         L     3,=V(CFUN)
         L     2,0(3)
         L     2,224(2)
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         L     14,=A(@@L329)
         BER   14
@@L193   EQU   *
         L     12,0(,10)
         L     2,0(3)
         L     2,224(2)
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         L     14,=A(@@L330)
         BNER  14
@@L194   EQU   *
         L     12,0(,10)
         LA    1,88(,13)
         L     15,=V(INIT@FLO)
         BALR  14,15
         L     2,88(7)
         LTR   2,2
         BNE   @@L195
         LR    6,4
         L     2,=A(CF@DECL)
         L     2,0(2)
         L     15,48(2)
         LTR   15,15
         BE    @@L197
@@L204   EQU   *
         CLI   8(15),30
         L     14,=A(@@L331)
         BER   14
@@L200   EQU   *
         L     12,0(,10)
         SLR   2,2
         IC    2,8(15)
         L     3,=V(TCODTYPE)
         IC    2,0(3,2)
         CLM   2,1,=XL1'A3'
         BE    @@L197
         ST    15,88(13)
         LA    1,88(,13)
         L     15,=V(GET@CONT)
         BALR  14,15
         LTR   15,15
         BNE   @@L204
@@L197   EQU   *
         L     2,28(7)
         SRL   2,20
         N     2,=F'1'
         LTR   2,2
         BE    @@L207
         L     2,=A(FNOINL)
         L     2,0(2)
         LTR   2,2
         BE    @@L206
@@L207   EQU   *
         L     2,=A(FLINFNCS)
         L     2,0(2)
         LTR   2,2
         BE    @@L205
@@L206   EQU   *
         MVC   88(4,13),=F'12'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         ST    7,88(13)
         LA    1,88(,13)
         L     15,=V(FCANINL)
         BALR  14,15
         LR    3,15
         MVC   88(4,13),=F'12'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LTR   3,3
         L     14,=A(@@L332)
         BER   14
@@L209   EQU   *
         L     12,0(,10)
         L     2,=A(WARN@INL)
         L     2,0(2)
         LTR   2,2
         BE    @@L210
         L     2,28(7)
         SRL   2,20
         N     2,=F'1'
         LTR   2,2
         L     14,=A(@@L333)
         BNER  14
@@L210   EQU   *
         L     12,0(,10)
         MVC   64(4,7),=F'0'
         L     2,28(7)
         SRL   2,23
         N     2,=F'1'
         LTR   2,2
         BE    @@L205
@@L327   EQU   *
         L     12,0(,10)
         MVC   60(4,7),=F'0'
@@L201   EQU   *
         L     12,0(,10)
         L     2,=V(RL@COMP)
         MVC   0(4,2),=F'0'
         L     2,=V(FLOW2@CO)
         MVC   0(4,2),=F'0'
         L     2,=A(NO@NEW@P)
         MVC   0(4,2),=F'0'
         MVC   88(4,13),=F'42'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@INS)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(CLEAR@CO)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@TEM)
         BALR  14,15
         MVC   88(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(FREE@BAS)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         MVC   88(4,13),=F'42'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(IRECNOV)
         BALR  14,15
         L     3,=V(CFUN)
         MVC   88(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(FAFTPAR)
         BALR  14,15
         L     2,28(7)
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         L     14,=A(@@L321)
         BNER  14
         MVC   88(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(FAFTCOMP)
         BALR  14,15
         ST    2,88(7)
         L     14,=A(@@L321)
         BR    14
@@L205   EQU   *
         L     12,0(,10)
         LA    1,88(,13)
         L     15,=V(G@INS)
         BALR  14,15
         LR    5,15
         MVC   88(4,13),=F'0'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LTR   15,15
         BE    @@L213
         L     2,88(7)
         LTR   2,2
         L     14,=A(@@L334)
         BNER  14
@@L214   EQU   *
         L     12,0(,10)
         MVC   88(4,13),=F'0'
         MVC   92(4,13),=V(PRRTL)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
@@L213   EQU   *
         LA    1,88(,13)
         L     15,=V(CFERRANG)
         BALR  14,15
         LTR   6,6
         BNE   @@L216
         L     2,28(7)
         SRL   2,20
         N     2,=F'1'
         LTR   2,2
         BE    @@L215
         L     2,8(7)
         N     2,=F'2101248'
         LTR   2,2
         BNE   @@L217
         L     2,68(7)
         LTR   2,2
         L     14,=A(@@L335)
         BER   14
@@L219   EQU   *
         L     12,0(,10)
         L     2,68(7)
         L     2,8(2)
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         BNE   @@L217
         L     2,=A(FKINF)
         L     2,0(2)
         LTR   2,2
         BE    @@L216
@@L217   EQU   *
         L     2,28(7)
         SRL   2,23
         N     2,=F'1'
         LTR   2,2
         BE    @@L215
@@L216   EQU   *
         OC    28(4,7),=F'8192'
@@L215   EQU   *
         L     2,28(7)
         SRL   2,20
         N     2,=F'1'
         LTR   2,2
         L     14,=A(@@L336)
         BNER  14
@@L220   EQU   *
         L     12,0(,10)
         L     3,28(7)
         LR    2,3
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         BE    @@L221
         L     2,=A(WARN@RET)
         L     2,0(2)
         LTR   2,2
         BNE   @@L337
@@L222   EQU   *
         LA    1,88(,13)
         L     15,=V(NOTHROW@)
         BALR  14,15
         N     15,=XL4'000000FF'
         L     2,=V(CURFNOTH)
         ST    15,0(2)
         LTR   15,15
         BE    @@L223
         L     2,=A(CF@DECL)
         L     2,0(2)
         OC    8(4,2),=F'16384'
@@L223   EQU   *
         MVC   88(4,13),=F'12'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         ST    7,88(13)
         LA    1,88(,13)
         L     15,=V(SAVE@FOR)
         BALR  14,15
         MVC   88(4,13),=F'12'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     2,88(7)
         ST    6,176(2)
         B     @@L201
@@L337   EQU   *
         L     3,=A(OPTZE)
         L     4,0(3)
         MVC   0(4,3),=F'0'
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(REBUILD@)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FIND@EXC)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         L     2,=A(RTDFILE)
         MVC   96(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FIND@BAS)
         BALR  14,15
         MVC   88(4,13),=F'24'
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         ST    4,0(3)
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         B     @@L222
@@L221   EQU   *
         SRL   3,23
         N     3,=F'1'
         LTR   3,3
         BNE   @@L201
@@L195   EQU   *
         L     2,=A(CF@DECL)
         L     2,0(2)
         L     3,48(2)
         LTR   3,3
         BE    @@L324
@@L232   EQU   *
         CLI   8(3),30
         L     14,=A(@@L338)
         BER   14
@@L227   EQU   *
         L     12,0(,10)
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(GET@CONT)
         BALR  14,15
         LR    3,15
         LTR   15,15
         BNE   @@L232
@@L324   EQU   *
         L     2,28(7)
         SRL   2,20
         N     2,=F'1'
         LTR   2,2
         L     14,=A(@@L339)
         BNER  14
@@L233   EQU   *
         L     12,0(,10)
         LA    1,88(,13)
         L     15,=V(REMOVE@U)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(REORB)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(IFUNCFOR)
         BALR  14,15
         L     2,28(7)
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         BNE   @@L234
         OC    8(4,7),=F'131072'
@@L234   EQU   *
         L     2,=V(RTX@EQUA)
         MVC   0(4,2),=F'0'
         LA    1,88(,13)
         L     15,=V(G@INS)
         BALR  14,15
         ST    15,88(13)
         LA    1,88(,13)
         L     15,=V(PURGE@HA)
         BALR  14,15
         L     2,=A(RTDANDE)
         L     2,0(2)
         LTR   2,2
         BNE   @@L238
         L     2,=A(FLAG@SYN)
         L     2,0(2)
         LTR   2,2
         BE    @@L237
@@L238   EQU   *
         L     2,=A(WARN@RET)
         L     2,0(2)
         LTR   2,2
         BE    @@L201
@@L237   EQU   *
         L     2,=V(GLOBAL@D)
         L     3,0(2)
         L     2,44(3)
         LTR   2,2
         BNE   @@L201
         L     3,40(3)
         LTR   3,3
         BNE   @@L201
         L     2,=A(FLAG@OPT)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L340)
         BNER  14
@@L239   EQU   *
         L     12,0(,10)
         LA    1,88(,13)
         L     15,=V(FIND@EXC)
         BALR  14,15
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(DOING@EH)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L341)
         BNER  14
@@L240   EQU   *
         L     12,0(,10)
         LA    1,88(,13)
         L     15,=V(EMIT@INI)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(G@INS)
         BALR  14,15
         LR    5,15
         L     2,=A(CF@DECL)
         MVC   88(4,13),0(2)
         ST    15,92(13)
         LA    1,88(,13)
         L     15,=V(UNSARTL)
         BALR  14,15
         MVC   88(4,13),0(2)
         ST    5,92(13)
         LA    1,88(,13)
         L     15,=V(INSTANTI)
         BALR  14,15
         MVC   88(4,13),=F'3'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(EXPECTED)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         ST    3,96(13)
         LA    1,88(,13)
         L     15,=V(RSCAN)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(REBUILD@)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         L     6,=A(RTDFILE)
         MVC   96(4,13),0(6)
         LA    1,88(,13)
         L     15,=V(FIND@BAS)
         BALR  14,15
         L     4,=A(OPTZE)
         L     8,0(4)
         LPR   3,8
         BCTR  3,0
         SRL   3,31
         LA    2,17(0,0)
         SR    2,3
         ST    2,88(13)
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(COPY@LOO)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(PURGE@LI)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     2,=A(RTDANDE)
         L     2,0(2)
         LTR   2,2
         BNE   @@L244
         L     2,=A(FLAG@SYN)
         L     2,0(2)
         LTR   2,2
         BNE   @@L244
         L     2,28(7)
         SRL   2,13
         N     2,=F'1'
         LTR   2,2
         BE    @@L243
@@L244   EQU   *
         MVC   88(4,13),=F'3'
         MVC   92(4,13),=V(PRRTL)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         B     @@L201
@@L243   EQU   *
         L     2,0(4)
         LTR   2,2
         BNH   @@L245
         L     2,=A(FSSA)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L342)
         BNER  14
@@L245   EQU   *
         L     12,0(,10)
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         BNH   @@L248
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         L     2,=A(RTDFILE)
         MVC   96(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FIND@BAS)
         BALR  14,15
         L     2,=A(FLAG@THR)
         L     2,0(2)
         LA    3,81(0,0)
         LTR   2,2
         BNE   @@L250
         LA    3,17(0,0)
@@L250   EQU   *
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         MVC   88(4,13),=F'21'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(IF@CONVE)
         BALR  14,15
         MVC   88(4,13),=F'21'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         L     2,=A(@@7)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L343)
         BNER  14
@@L248   EQU   *
         L     12,0(,10)
         L     3,=A(RTDFILE)
         MVC   88(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(RENUMBER)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         MVC   88(4,13),=F'3'
         MVC   92(4,13),=V(PRRTL)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L252)
         BNHR  14
         MVC   88(4,13),=F'8'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         MVC   88(4,13),=F'14'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(RSCAN)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'0'
         MVC   100(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(CSE@MAIN)
         BALR  14,15
         LR    4,15
         SLR   3,3
         L     2,=A(@@6)
         L     2,0(2)
         LTR   2,2
         BNE   @@L253
         L     2,=A(@@5)
         L     2,0(2)
         LTR   2,2
         BNE   @@L253
         LA    3,1(0,0)
@@L253   EQU   *
         L     2,=V(CSE@NOT@)
         ST    3,0(2)
         LTR   4,4
         BNE   @@L255
         L     2,=A(OPTZE)
         L     2,0(2)
         LA    9,1(0,0)
         CR    2,9
         BNH   @@L254
@@L255   EQU   *
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(REBUILD@)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         L     2,=A(RTDFILE)
         MVC   96(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FIND@BAS)
         BALR  14,15
         MVC   88(4,13),=F'17'
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
@@L254   EQU   *
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(DELETE@T)
         BALR  14,15
         L     2,=A(@@7)
         L     2,0(2)
         LTR   2,2
         BNE   @@L257
         L     2,=A(FLAG@THR)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L256)
         BER   14
@@L257   EQU   *
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         L     2,=A(RTDFILE)
         MVC   96(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FIND@BAS)
         BALR  14,15
         L     2,=A(FLAG@THR)
         L     2,0(2)
         LA    3,81(0,0)
         LTR   2,2
         BNE   @@L259
         LA    3,17(0,0)
@@L259   EQU   *
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         L     2,=A(@@7)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L344)
         BNER  14
@@L260   EQU   *
         L     12,0(,10)
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
@@L256   EQU   *
         L     2,=A(RTDFILE)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(RENUMBER)
         BALR  14,15
         MVC   88(4,13),=F'14'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         MVC   88(4,13),=F'8'
         MVC   92(4,13),=V(PRRTL)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
@@L252   EQU   *
         MVC   88(4,13),=F'9'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(PURGE@AD)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(RSCAN)
         BALR  14,15
         MVC   88(4,13),=F'9'
         MVC   92(4,13),=V(PRRTL)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         L     2,=A(OPTZE)
         L     2,0(2)
         B     @@PGE25
         DS    0F
         LTORG
         DS    0F
@@PGE25  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG26   EQU   *
         LTR   2,2
         BNH   @@L261
         L     2,=A(@@5)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L345)
         BNER  14
@@L261   EQU   *
         L     12,4(,10)
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         BNH   @@L269
         MVC   88(4,13),=F'16'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'11'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         L     2,=A(FLAG@RER)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L346)
         BNER  14
@@L270   EQU   *
         L     12,4(,10)
         LA    1,88(,13)
         L     15,=V(CLNPBARR)
         BALR  14,15
         ST    5,88(13)
         L     2,=A(RTDFILE)
         MVC   92(4,13),0(2)
         L     2,=A(FUNRLOOP)
         L     2,0(2)
         LPR   2,2
         BCTR  2,0
         SRL   2,31
         LA    3,3(0,0)
         SR    3,2
         L     2,=A(FPREFL)
         L     2,0(2)
         LTR   2,2
         BE    @@L273
         O     3,=F'4'
@@L273   EQU   *
         L     12,4(,10)
         ST    3,96(13)
         LA    1,88(,13)
         L     15,=V(LOOP@OPT)
         BALR  14,15
         MVC   88(4,13),=F'11'
         MVC   92(4,13),=V(PRRTL)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'16'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
@@L269   EQU   *
         L     12,4(,10)
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         BNH   @@L274
         MVC   88(4,13),=F'17'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'12'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         L     2,=A(@@6)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L347)
         BNER  14
@@L275   EQU   *
         L     12,4(,10)
         MVC   88(4,13),=F'12'
         MVC   92(4,13),=V(PRRTL)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'17'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
@@L274   EQU   *
         L     12,4(,10)
         L     2,=V(CSE@NOT@)
         MVC   0(4,2),=F'1'
         LA    1,88(,13)
         L     15,=V(RCLASINI)
         BALR  14,15
         MVC   88(4,13),=F'19'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'13'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         L     2,=A(RTDFILE)
         MVC   96(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FIND@BAS)
         BALR  14,15
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         BE    @@L277
         LA    2,1(0,0)
@@L277   EQU   *
         L     12,4(,10)
         LR    3,2
         L     2,=A(FLAG@THR)
         L     2,0(2)
         LTR   2,2
         BE    @@L278
         O     3,=F'64'
@@L278   EQU   *
         L     12,4(,10)
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(CHECK@FU)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MARK@CON)
         BALR  14,15
         MVC   88(4,13),=F'13'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         L     2,=A(PROFAFLA)
         L     2,0(2)
         LTR   2,2
         BNE   @@L280
         L     2,=A(FLAG@TES)
         L     2,0(2)
         LTR   2,2
         BNE   @@L280
         L     2,=A(FBPROB)
         L     2,0(2)
         LTR   2,2
         BE    @@L279
@@L280   EQU   *
         L     12,4(,10)
         MVC   88(4,13),=F'18'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'14'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(BRANCH@P)
         BALR  14,15
         MVC   88(4,13),=F'14'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'18'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
@@L279   EQU   *
         L     12,4(,10)
         MVC   88(4,13),=F'15'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L348)
         BNER  14
@@L281   EQU   *
         L     12,4(,10)
         ST    5,88(13)
         L     2,=A(RTDFILE)
         MVC   92(4,13),0(2)
         MVC   96(4,13),=F'127'
         LA    1,88(,13)
         L     15,=V(LIFE@ANA)
         BALR  14,15
         MVC   88(4,13),=F'19'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     2,=A(NO@NEW@P)
         MVC   0(4,2),=F'1'
         L     2,=A(WARN@UNI)
         L     2,0(2)
         LTR   2,2
         BNE   @@L285
         L     2,=A(EXTRA@WA)
         L     2,0(2)
         LTR   2,2
         BE    @@L284
@@L285   EQU   *
         L     12,4(,10)
         MVC   88(4,13),60(7)
         LA    1,88(,13)
         L     15,=V(UNINITIA)
         BALR  14,15
         L     2,=A(EXTRA@WA)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L349)
         BNER  14
@@L284   EQU   *
         L     12,4(,10)
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L350)
         BNER  14
@@L287   EQU   *
         L     12,4(,10)
         MVC   88(4,13),=F'15'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         BNH   @@L289
         MVC   88(4,13),=F'20'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'16'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         LA    1,88(,13)
         L     15,=V(COMBINST)
         BALR  14,15
         LR    2,15
         MVC   88(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(PURGE@AL)
         BALR  14,15
         N     15,=XL4'000000FF'
         OR    15,2
         LTR   15,15
         L     14,=A(@@L351)
         BNER  14
@@L290   EQU   *
         L     12,4(,10)
         MVC   88(4,13),=F'16'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'20'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
@@L289   EQU   *
         L     12,4(,10)
         L     3,=A(OPTZE)
         L     2,0(3)
         LTR   2,2
         BNH   @@L291
         MVC   88(4,13),=F'21'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'17'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         L     2,=A(NO@NEW@P)
         MVC   0(4,2),=F'0'
         MVC   88(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(IF@CONVE)
         BALR  14,15
         MVC   0(4,2),=F'1'
         MVC   88(4,13),=F'17'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'21'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
@@L291   EQU   *
         L     12,4(,10)
         L     2,0(3)
         LTR   2,2
         BNH   @@L292
         L     2,=A(FLAG@REG)
         L     2,0(2)
         LTR   2,2
         BNE   @@L293
         L     2,=A(FLAG@EXP)
         L     2,0(2)
         LTR   2,2
         BE    @@L292
@@L293   EQU   *
         L     12,4(,10)
         MVC   88(4,13),=F'22'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'18'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         L     2,=A(RTDFILE)
         MVC   96(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(REGMOVE@)
         BALR  14,15
         MVC   88(4,13),=F'18'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'22'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
@@L292   EQU   *
         L     12,4(,10)
         MVC   88(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(SPLTAINS)
         BALR  14,15
         SLR   4,4
         MVC   88(4,13),=F'24'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'24'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(LEAF@FUN)
         BALR  14,15
         L     2,=V(CURFISLE)
         ST    15,0(2)
         MVC   88(4,13),=F'25'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'20'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         ST    5,88(13)
         LR    3,4
         L     2,=A(OPTZSZ)
         L     2,0(2)
         LTR   2,2
         BNE   @@L295
         LA    3,1(0,0)
@@L295   EQU   *
         L     12,4(,10)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=V(RECOMPUT)
         BALR  14,15
         L     2,=V(MAX@REGN)
         MVC   88(4,13),0(2)
         ST    4,92(13)
         MVC   96(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(ALLREGIN)
         BALR  14,15
         MVC   88(4,13),0(2)
         MVC   92(4,13),=F'4'
         LA    1,88(,13)
         L     15,=V(XCALLOC)
         BALR  14,15
         L     2,=V(REGEMLOC)
         ST    15,0(2)
         ST    15,88(13)
         LA    1,88(,13)
         L     15,=V(ALINVAL)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         L     3,=A(RTDFILE)
         MVC   96(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(RCLASS)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(LOCAL@AL)
         BALR  14,15
         LR    8,15
         MVC   88(4,13),=F'25'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     2,=A(@@0)
         IC    2,166(2)
         CLM   2,1,=XL1'00'
         L     14,=A(@@L352)
         BNER  14
@@L296   EQU   *
         L     12,4(,10)
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         MVC   88(4,13),=F'26'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'21'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L297)
         BER   14
         MVC   88(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(GLOBAL@A)
         BALR  14,15
@@L328   EQU   *
         L     12,4(,10)
         LR    4,15
         MVC   88(4,13),=F'26'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     2,=A(@@0)
         IC    2,174(2)
         CLM   2,1,=XL1'00'
         L     14,=A(@@L353)
         BNER  14
@@L299   EQU   *
         L     12,4(,10)
         LTR   4,4
         L     14,=A(@@L201)
         BNER  14
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         MVC   88(4,13),=F'22'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         L     6,=A(OPTZE)
         L     2,0(6)
         LTR   2,2
         BNH   @@L301
         MVC   88(4,13),=F'27'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(RLC@RGS)
         BALR  14,15
         MVC   88(4,13),=F'27'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
@@L301   EQU   *
         L     12,4(,10)
         LTR   8,8
         L     14,=A(@@L354)
         BNER  14
@@L302   EQU   *
         L     12,4(,10)
         MVC   88(4,13),=F'22'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'28'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'23'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         L     2,0(6)
         LTR   2,2
         BNH   @@L303
         ST    4,88(13)
         LA    1,88(,13)
         L     15,=V(SPLTAINS)
         BALR  14,15
@@L303   EQU   *
         L     12,4(,10)
         LR    15,4
         L     2,0(6)
         LTR   2,2
         BE    @@L304
         LA    15,1(0,0)
@@L304   EQU   *
         L     12,4(,10)
         ST    15,88(13)
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(THREAD@P)
         BALR  14,15
         LA    4,2(0,0)
         L     2,=V(N@BASIC@)
         L     3,0(2)
         LA    2,1000(0,0)
         CR    3,2
         BNH   @@L305
         L     2,=V(N@EDGES)
         MVC   144(4,13),0(2)
         L     8,144(13)
         L     9,4+144(13)
         SRDA  8,32
         DR    8,3
         ST    8,144(13)
         ST    9,4+144(13)
         LA    2,19(0,0)
         CR    9,2
         BNH   @@L305
         L     2,0(6)
         LTR   2,2
         BE    @@L306
         L     2,=A(WARN@DIS)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L355)
         BNER  14
@@L306   EQU   *
         L     12,4(,10)
         SLR   4,4
@@L305   EQU   *
         L     12,4(,10)
         L     3,=A(OPTZE)
         L     2,0(3)
         LTR   2,2
         L     14,=A(@@L356)
         BNER  14
@@L307   EQU   *
         L     12,4(,10)
         L     2,=V(FLOW2@CO)
         MVC   0(4,2),=F'1'
         MVC   88(4,13),=F'23'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'28'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     2,0(3)
         LTR   2,2
         BNH   @@L309
         L     3,=A(FRENREG)
         L     2,0(3)
         LTR   2,2
         BNE   @@L310
         L     2,=A(FLAG@CPR)
         L     2,0(2)
         LTR   2,2
         BE    @@L309
@@L310   EQU   *
         L     12,4(,10)
         MVC   88(4,13),=F'31'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'25'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         L     2,0(3)
         LTR   2,2
         L     14,=A(@@L357)
         BNER  14
@@L311   EQU   *
         L     12,4(,10)
         L     2,=A(FLAG@CPR)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L358)
         BNER  14
@@L312   EQU   *
         L     12,4(,10)
         MVC   88(4,13),=F'25'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'31'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
@@L309   EQU   *
         L     12,4(,10)
         L     3,=A(OPTZE)
         L     2,0(3)
         LTR   2,2
         BNH   @@L313
         MVC   88(4,13),=F'29'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'26'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         MVC   88(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(IF@CONVE)
         BALR  14,15
         MVC   88(4,13),=F'26'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'29'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
@@L313   EQU   *
         L     12,4(,10)
         L     2,0(3)
         LTR   2,2
         L     14,=A(@@L314)
         BNHR  14
         MVC   88(4,13),=F'35'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'29'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         MVC   88(4,13),=F'5'
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         L     2,=A(FLAG@REO)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L359)
         BNER  14
@@L315   EQU   *
         L     12,4(,10)
         MVC   88(4,13),=F'29'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'35'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
@@L314   EQU   *
         L     12,4(,10)
         B     @@PGE26
         DS    0F
         LTORG
         DS    0F
@@PGE26  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG27   EQU   *
         LA    1,88(,13)
         L     15,=V(CMPALGN)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(PURGE@LI)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(CLNPBARR)
         BALR  14,15
         MVC   88(4,13),=F'36'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(SPLTNOF)
         BALR  14,15
         MVC   88(4,13),=F'36'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(CTEHRRAN)
         BALR  14,15
         MVC   88(4,13),=F'36'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(G@INS)
         BALR  14,15
         ST    15,88(13)
         LA    1,88(,13)
         L     15,=V(SHRTBRAN)
         BALR  14,15
         MVC   88(4,13),=F'36'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(NOTHROW@)
         BALR  14,15
         N     15,=XL4'000000FF'
         L     2,=V(CURFNOTH)
         ST    15,0(2)
         LTR   15,15
         BE    @@L316
         L     2,=A(CF@DECL)
         L     2,0(2)
         OC    8(4,2),=F'16384'
@@L316   EQU   *
         L     12,8(,10)
         MVC   88(4,13),=F'42'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         L     3,80(7)
         LTR   3,3
         BE    @@L360
@@L317   EQU   *
         L     12,8(,10)
         LH    2,0(3)
         CLM   2,3,=H'66'
         BE    @@L318
         MVC   88(4,13),=A(@@LC442)
         MVC   92(4,13),=F'3514'
         MVC   96(4,13),=A(@@LC443)
         LA    1,88(,13)
         L     15,=V(FANCY@AB)
         BALR  14,15
@@L318   EQU   *
         L     12,8(,10)
         L     3,4(3)
         LH    2,0(3)
         CLM   2,3,=H'68'
         BE    @@L319
         MVC   88(4,13),=A(@@LC442)
         MVC   92(4,13),=F'3517'
         MVC   96(4,13),=A(@@LC443)
         LA    1,88(,13)
         L     15,=V(FANCY@AB)
         BALR  14,15
@@L319   EQU   *
         L     12,8(,10)
         L     3,4(3)
         ST    7,88(13)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=V(ASFUNC)
         BALR  14,15
         ST    5,88(13)
         L     4,=A(ASM@OUT@)
         MVC   92(4,13),0(4)
         L     2,=A(OPTZE)
         MVC   96(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FINAL@ST)
         BALR  14,15
         ST    5,88(13)
         MVC   92(4,13),0(4)
         MVC   96(4,13),0(2)
         MVC   100(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(FINAL)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FINAL@EN)
         BALR  14,15
         ST    7,88(13)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=V(ASSEF)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(OFXTABLE)
         BALR  14,15
         L     2,=A(QUIET@FL)
         L     2,0(2)
         LTR   2,2
         BE    @@L361
@@L320   EQU   *
         L     12,8(,10)
         MVC   88(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(FREE@BAS)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(REGSET@R)
         BALR  14,15
         MVC   88(4,13),=F'42'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         MVC   88(4,13),=F'43'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         L     2,=A(DEBUG@HO)
         L     2,0(2)
         ST    7,88(13)
         L     2,60(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         MVC   88(4,13),=F'43'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     14,=A(@@L201)
         BR    14
@@L361   EQU   *
         L     12,8(,10)
         MVC   88(4,13),0(4)
         LA    1,88(,13)
         L     15,=V(FFLUSH)
         BALR  14,15
         B     @@L320
@@L360   EQU   *
         L     12,8(,10)
         ST    7,88(13)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=V(MDDCLRTL)
         BALR  14,15
         L     3,80(7)
         B     @@L317
@@L359   EQU   *
         L     12,8(,10)
         LA    1,88(,13)
         L     15,=V(REORDER@)
         BALR  14,15
         MVC   88(4,13),=F'5'
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         L     14,=A(@@L315)
         BR    14
@@L358   EQU   *
         L     12,8(,10)
         LA    1,88(,13)
         L     15,=V(COPYPROP)
         BALR  14,15
         L     14,=A(@@L312)
         BR    14
@@L357   EQU   *
         L     12,8(,10)
         LA    1,88(,13)
         L     15,=V(REGRENAM)
         BALR  14,15
         L     14,=A(@@L311)
         BR    14
@@L356   EQU   *
         L     12,8(,10)
         O     4,=F'1'
         ST    4,88(13)
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         ST    5,88(13)
         L     2,=A(RTDFILE)
         MVC   92(4,13),0(2)
         MVC   96(4,13),=F'127'
         LA    1,88(,13)
         L     15,=V(LIFE@ANA)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         L     14,=A(@@L307)
         BR    14
@@L355   EQU   *
         L     12,8(,10)
         MVC   88(4,13),=A(@@LC460)
         ST    3,92(13)
         MVC   96(4,13),148(13)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         L     14,=A(@@L306)
         BR    14
@@L354   EQU   *
         L     12,8(,10)
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(REBUILD@)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     14,=A(@@L302)
         BR    14
@@L353   EQU   *
         L     12,8(,10)
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         L     2,=A(RTDFILE)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(DUMP@GLO)
         BALR  14,15
         MVC   88(4,13),=F'21'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     14,=A(@@L299)
         BR    14
@@L297   EQU   *
         L     12,8(,10)
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(BINSNCHN)
         BALR  14,15
         ST    5,88(13)
         ST    2,92(13)
         LA    1,88(,13)
         L     15,=V(RELOAD)
         BALR  14,15
         L     14,=A(@@L328)
         BR    14
@@L352   EQU   *
         L     12,8(,10)
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(DUMP@FLO)
         BALR  14,15
         MVC   88(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(DUMP@LOC)
         BALR  14,15
         MVC   88(4,13),=F'20'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'2'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     14,=A(@@L296)
         BR    14
@@L351   EQU   *
         L     12,8(,10)
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(REBUILD@)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         MVC   88(4,13),=F'33'
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         L     14,=A(@@L290)
         BR    14
@@L350   EQU   *
         L     12,8(,10)
         LA    1,88(,13)
         L     15,=V(I@UN@SUB)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L287)
         BER   14
         LA    1,88(,13)
         L     15,=V(G@INS)
         BALR  14,15
         LR    5,15
         ST    15,88(13)
         L     2,=A(RTDFILE)
         MVC   92(4,13),0(2)
         MVC   96(4,13),=F'7'
         LA    1,88(,13)
         L     15,=V(LIFE@ANA)
         BALR  14,15
         L     14,=A(@@L287)
         BR    14
@@L349   EQU   *
         L     12,8(,10)
         LA    1,88(,13)
         L     15,=V(SETJMP@A)
         BALR  14,15
         L     14,=A(@@L284)
         BR    14
@@L348   EQU   *
         L     12,8(,10)
         LA    3,104(,13)
         ST    3,88(13)
         MVC   92(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(FLSFIND)
         BALR  14,15
         L     2,=A(RTDFILE)
         L     2,0(2)
         LTR   2,2
         BNE   @@L362
@@L282   EQU   *
         L     12,8(,10)
         L     2,=A(FLAG@GUE)
         L     2,0(2)
         LTR   2,2
         BNE   @@L363
@@L283   EQU   *
         L     12,8(,10)
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(FLSFREE)
         BALR  14,15
         L     14,=A(@@L281)
         BR    14
@@L363   EQU   *
         L     12,8(,10)
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(ESTIMATE)
         BALR  14,15
         B     @@L283
@@L362   EQU   *
         L     12,8(,10)
         ST    3,88(13)
         ST    2,92(13)
         MVC   96(4,13),=F'0'
         MVC   100(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(FLSDUMP)
         BALR  14,15
         B     @@L282
@@L347   EQU   *
         L     12,8(,10)
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(DELETE@T)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(RSCAN)
         BALR  14,15
         MVC   88(4,13),=F'21'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         L     2,=A(RTDFILE)
         MVC   96(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FIND@BAS)
         BALR  14,15
         MVC   88(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         MVC   88(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(IF@CONVE)
         BALR  14,15
         MVC   88(4,13),=F'21'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(RSCAN)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'1'
         MVC   100(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(CSE@MAIN)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L275)
         BER   14
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(REBUILD@)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FIND@BAS)
         BALR  14,15
         MVC   88(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     14,=A(@@L275)
         BR    14
@@L346   EQU   *
         L     12,8(,10)
         LA    1,88(,13)
         L     15,=V(CLNPBARR)
         BALR  14,15
         ST    5,88(13)
         L     2,=A(RTDFILE)
         MVC   92(4,13),0(2)
         MVC   96(4,13),=F'8'
         LA    1,88(,13)
         L     15,=V(LOOP@OPT)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(DELETE@T)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(RSCAN)
         BALR  14,15
         L     14,=A(@@L270)
         BR    14
@@L345   EQU   *
         L     12,8(,10)
         SLR   6,6
         MVC   88(4,13),=F'15'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'10'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         L     8,=A(RTDFILE)
         MVC   96(4,13),0(8)
         LA    1,88(,13)
         L     15,=V(FIND@BAS)
         BALR  14,15
         MVC   88(4,13),=F'17'
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         ST    5,88(13)
         MVC   92(4,13),0(8)
         LA    1,88(,13)
         L     15,=V(GCSE@MAI)
         BALR  14,15
         LR    4,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(REBUILD@)
         BALR  14,15
         L     3,=A(FCSKIP)
         L     9,0(3)
         L     2,=A(FCFJUMP)
         MVC   136(4,13),0(2)
         ST    6,0(2)
         ST    6,0(3)
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         L     2,=A(FLAG@EXP)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L364)
         BNER  14
@@L262   EQU   *
         L     12,8(,10)
         LTR   4,4
         BNE   @@L268
         LTR   6,6
         BE    @@L326
@@L268   EQU   *
         L     12,8(,10)
         SLR   4,4
         LR    6,4
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(REBUILD@)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         ST    4,96(13)
         LA    1,88(,13)
         L     15,=V(DELETE@T)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         L     3,=A(RTDFILE)
         MVC   96(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(FIND@BAS)
         BALR  14,15
         MVC   88(4,13),=F'17'
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     2,=A(FLAG@EXP)
         L     2,0(2)
         LTR   2,2
         BNE   @@L365
@@L264   EQU   *
         L     12,8(,10)
         LTR   6,6
         BNE   @@L268
@@L326   EQU   *
         L     12,8(,10)
         MVC   88(4,13),=F'10'
         MVC   92(4,13),=V(PRRTL)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'15'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         L     2,=A(FCSKIP)
         ST    9,0(2)
         L     2,=A(FCFJUMP)
         MVC   0(4,2),136(13)
         L     14,=A(@@L261)
         BR    14
@@L365   EQU   *
         L     12,8(,10)
         MVC   88(4,13),=F'14'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(RSCAN)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         ST    4,96(13)
         MVC   100(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(CSE@MAIN)
         BALR  14,15
         LR    6,15
         MVC   88(4,13),=F'14'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         B     @@L264
@@L364   EQU   *
         L     12,8(,10)
         MVC   88(4,13),=F'14'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(RSCAN)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         ST    6,96(13)
         MVC   100(4,13),0(8)
         LA    1,88(,13)
         L     15,=V(CSE@MAIN)
         BALR  14,15
         LR    6,15
         MVC   88(4,13),=F'14'
         B     @@PGE27
         DS    0F
         LTORG
         DS    0F
@@PGE27  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG28   EQU   *
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         SLR   3,3
         L     2,=A(@@6)
         L     2,0(2)
         LTR   2,2
         BNE   @@L263
         LA    3,1(0,0)
@@L263   EQU   *
         L     12,12(,10)
         L     2,=V(CSE@NOT@)
         ST    3,0(2)
         L     14,=A(@@L262)
         BR    14
@@L344   EQU   *
         L     12,12(,10)
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(DELNPCHK)
         BALR  14,15
         L     14,=A(@@L260)
         BR    14
@@L343   EQU   *
         L     12,12(,10)
         ST    5,88(13)
         LA    1,88(,13)
         L     15,=V(DELNPCHK)
         BALR  14,15
         L     14,=A(@@L248)
         BR    14
@@L342   EQU   *
         L     12,12(,10)
         MVC   88(4,13),=F'38'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'4'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),0(6)
         LA    1,88(,13)
         L     15,=V(FIND@BAS)
         BALR  14,15
         MVC   88(4,13),=F'17'
         LA    1,88(,13)
         L     15,=V(CLNPCFG)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(CVTTOSSA)
         BALR  14,15
         MVC   88(4,13),=F'4'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'38'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     2,=A(FSSACCP)
         L     2,0(2)
         LTR   2,2
         BNE   @@L366
@@L246   EQU   *
         L     12,12(,10)
         L     2,=A(FSSADCE)
         L     2,0(2)
         LTR   2,2
         BNE   @@L367
@@L247   EQU   *
         L     12,12(,10)
         MVC   88(4,13),=F'41'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'7'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(CVTFRSSA)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(MXRGNM)
         BALR  14,15
         ST    5,88(13)
         ST    15,92(13)
         MVC   96(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(RSCAN)
         BALR  14,15
         MVC   88(4,13),=F'7'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'41'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(FREE@BB@)
         BALR  14,15
         L     14,=A(@@L245)
         BR    14
@@L367   EQU   *
         L     12,12(,10)
         MVC   88(4,13),=F'40'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'6'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(G@INS)
         BALR  14,15
         LR    5,15
         LA    1,88(,13)
         L     15,=V(SSA@ELIM)
         BALR  14,15
         MVC   88(4,13),=F'6'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'40'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         B     @@L247
@@L366   EQU   *
         L     12,12(,10)
         MVC   88(4,13),=F'39'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'5'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(SSA@CONS)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(G@INS)
         BALR  14,15
         MVC   88(4,13),=F'5'
         MVC   92(4,13),=V(PRRTLWBB)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'39'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         B     @@L246
@@L341   EQU   *
         L     12,12(,10)
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'2'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(F@EHGENE)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(G@INS)
         BALR  14,15
         MVC   88(4,13),=F'2'
         MVC   92(4,13),=V(PRRTL)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     14,=A(@@L240)
         BR    14
@@L340   EQU   *
         L     12,12(,10)
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         MVC   88(4,13),=F'1'
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=A(@@17)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(OPTSTRC)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(G@INS)
         BALR  14,15
         MVC   88(4,13),=F'1'
         MVC   92(4,13),=V(PRRTL)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=A(@@18)
         BALR  14,15
         MVC   88(4,13),=F'13'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         L     14,=A(@@L239)
         BR    14
@@L339   EQU   *
         L     12,12(,10)
         L     2,=A(DEBUG@HO)
         L     2,0(2)
         ST    7,88(13)
         L     2,72(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         L     14,=A(@@L233)
         BR    14
@@L338   EQU   *
         L     12,12(,10)
         L     2,68(3)
         LTR   2,2
         BE    @@L368
@@L231   EQU   *
         L     12,12(,10)
         L     2,68(3)
         OC    8(4,2),=F'8192'
         L     14,=A(@@L227)
         BR    14
@@L368   EQU   *
         L     12,12(,10)
         ST    3,88(13)
         L     2,=V(LANG@SET)
         L     2,0(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         B     @@L231
@@L336   EQU   *
         L     12,12(,10)
         L     2,=A(DEBUG@HO)
         L     2,0(2)
         ST    7,88(13)
         L     2,68(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         L     14,=A(@@L220)
         BR    14
@@L335   EQU   *
         L     12,12(,10)
         ST    7,88(13)
         L     2,=V(LANG@SET)
         L     2,0(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         L     14,=A(@@L219)
         BR    14
@@L334   EQU   *
         L     12,12(,10)
         L     2,=A(RTDFILE)
         MVC   88(4,13),0(2)
         MVC   92(4,13),=A(@@LC459)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
         L     14,=A(@@L214)
         BR    14
@@L333   EQU   *
         L     12,12(,10)
         ST    7,88(13)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=V(WARNWDEC)
         BALR  14,15
         L     14,=A(@@L210)
         BR    14
@@L332   EQU   *
         L     12,12(,10)
         L     2,=A(OPTZE)
         L     2,0(2)
         LTR   2,2
         L     14,=A(@@L209)
         BER   14
         OC    28(4,7),=F'1048576'
         LA    6,1(0,0)
         L     14,=A(@@L205)
         BR    14
@@L331   EQU   *
         L     12,12(,10)
         L     2,28(15)
         N     2,=F'9437184'
         L     3,=F'9437184'
         CLR   2,3
         L     14,=A(@@L200)
         BNER  14
         L     14,=A(@@L327)
         BR    14
@@L330   EQU   *
         L     12,12(,10)
         LA    1,88(,13)
         L     15,=V(REORB)
         BALR  14,15
         L     14,=A(@@L194)
         BR    14
@@L329   EQU   *
         L     12,12(,10)
         LA    1,88(,13)
         L     15,=V(IDENTIFY)
         BALR  14,15
         L     14,=A(@@L193)
         BR    14
@@L321   EQU   *
         L     12,12(,10)
         MVC   0(4,3),=F'0'
         LA    1,88(,13)
         L     15,=V(GGC@COLL)
         BALR  14,15
         MVC   88(4,13),=F'44'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
* Function ro_comp epilogue
         PDPEPIL
* Function ro_comp literal pool
         DS    0F
         LTORG
* Function ro_comp page table
         DS    0F
@@PGT25  EQU   *
         DC    A(@@PG25)
         DC    A(@@PG26)
         DC    A(@@PG27)
         DC    A(@@PG28)
@@LC461  EQU   *
         DC    C'  -ffixed-<register>      Mark <register> as bei'
         DC    C'ng unavailable to the compiler'
         DC    X'15'
         DC    X'0'
@@LC462  EQU   *
         DC    C'  -fcall-used-<register>  Mark <register> as bei'
         DC    C'ng corrupted by function calls'
         DC    X'15'
         DC    X'0'
@@LC463  EQU   *
         DC    C'  -fcall-saved-<register> Mark <register> as bei'
         DC    C'ng preserved across functions'
         DC    X'15'
         DC    X'0'
@@LC464  EQU   *
         DC    C'  -finline-limit=<number> Limits the size of inl'
         DC    C'ined functions to <number>'
         DC    X'15'
         DC    X'0'
@@LC465  EQU   *
         DC    C'  -fmessage-length=<number> Limits diagnostics m'
         DC    C'essages lengths to <number> characters per line.'
         DC    C'  0 suppresses line-wrapping'
         DC    X'15'
         DC    X'0'
@@LC466  EQU   *
         DC    C'  -fdiagnostics-show-location=Ýonce | every-line'
         DC    C'¨ Indicates how often source location informatio'
         DC    C'n should be emitted, as prefix, at the beginning'
         DC    C' of diagnostics when line-wrapping'
         DC    X'15'
         DC    X'0'
@@LC468  EQU   *
         DC    C'  -OÝnumber¨              Set optimization level'
         DC    C' to Ýnumber¨'
         DC    X'15'
         DC    X'0'
@@LC469  EQU   *
         DC    C'  -Os                     Optimize for space rat'
         DC    C'her than speed'
         DC    X'15'
         DC    X'0'
@@LC470  EQU   *
         DC    C'  --param %s=<value>%.*s%s'
         DC    X'15'
         DC    X'0'
@@LC471  EQU   *
         DC    C'                     '
         DC    X'0'
@@LC472  EQU   *
         DC    C'  -pedantic               Issue warnings needed '
         DC    C'by strict compliance to ISO C'
         DC    X'15'
         DC    X'0'
@@LC473  EQU   *
         DC    C'  -pedantic-errors        Like -pedantic except '
         DC    C'that errors are produced'
         DC    X'15'
         DC    X'0'
@@LC474  EQU   *
         DC    C'  -w                      Suppress warnings'
         DC    X'15'
         DC    X'0'
@@LC475  EQU   *
         DC    C'  -W                      Enable extra warnings'
         DC    X'15'
         DC    X'0'
@@LC477  EQU   *
         DC    C'  -Wunused                Enable unused warnings'
         DC    X'15'
         DC    X'0'
@@LC478  EQU   *
         DC    C'  -Wlarger-than-<number>  Warn if an object is l'
         DC    C'arger than <number> bytes'
         DC    X'15'
         DC    X'0'
@@LC479  EQU   *
         DC    C'  -p                      Enable function profil'
         DC    C'ing'
         DC    X'15'
         DC    X'0'
@@LC480  EQU   *
         DC    C'  -o <file>               Place output into <fil'
         DC    C'e> '
         DC    X'15'
         DC    X'0'
@@LC481  EQU   *
         DC    C'  -G <number>             Put global and static '
         DC    C'data smaller than <number>'
         DC    X'15'
         DC    C'                          bytes into a special s'
         DC    C'ection (on some targets)'
         DC    X'15'
         DC    X'0'
@@LC483  EQU   *
         DC    C'  -aux-info <file>        Emit declaration info '
         DC    C'into <file>'
         DC    X'15'
         DC    X'0'
@@LC484  EQU   *
         DC    C'  -quiet                  Do not display functio'
         DC    C'ns compiled or elapsed time'
         DC    X'15'
         DC    X'0'
@@LC485  EQU   *
         DC    C'  -version                Display the compiler'''
         DC    C's version'
         DC    X'15'
         DC    X'0'
@@LC486  EQU   *
         DC    C'  -dÝletters¨             Enable dumps from spec'
         DC    C'ific passes of the compiler'
         DC    X'15'
         DC    X'0'
@@LC487  EQU   *
         DC    C'  -dumpbase <file>        Base name to be used f'
         DC    C'or dumps from specific passes'
         DC    X'15'
         DC    X'0'
@@LC488  EQU   *
         DC    C'  --help                  Display this informati'
         DC    C'on'
         DC    X'15'
         DC    X'0'
@@LC489  EQU   *
         DC    C'language'
         DC    X'0'
@@LC490  EQU   *
         DC    X'15'
         DC    C'Language specific options:'
         DC    X'15'
         DC    X'0'
@@LC494  EQU   *
         DC    C'  %-23.23s %s'
         DC    X'15'
         DC    X'0'
@@LC492  EQU   *
         DC    X'15'
         DC    C'There are undocumented %s specific options as we'
         DC    C'll.'
         DC    X'15'
         DC    X'0'
@@LC493  EQU   *
         DC    X'15'
         DC    C' Options for %s:'
         DC    X'15'
         DC    X'0'
@@LC491  EQU   *
         DC    C'  %-23.23s Ýundocumented¨'
         DC    X'15'
         DC    X'0'
@@LC482  EQU   *
         DC    C'  -g%-21s %s'
         DC    X'15'
         DC    X'0'
@@LC476  EQU   *
         DC    C'  -W%-21s %s'
         DC    X'15'
         DC    X'0'
@@LC467  EQU   *
         DC    C'  -f%-21s %s'
         DC    X'15'
         DC    X'0'
         DS    0F
* S-func display_help prologue
@@20     PDPPRLG CINDEX=29,FRAME=112,BASER=12,ENTRY=NO
         B     @@FEN29
         LTORG
@@FEN29  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG29   EQU   *
         LR    11,1
         L     10,=A(@@PGT29)
* Function display_help code
         MVC   88(4,13),=A(@@LC461)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC462)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC463)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC464)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC465)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC466)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         LA    5,96(0,0)
         L     3,=A(@@4+1536)
@@L375   EQU   *
         L     15,12(3)
         LTR   15,15
         BE    @@L370
         IC    2,0(15)
         CLM   2,1,=XL1'00'
         BNE   @@L420
@@L370   EQU   *
         A     3,=F'-16'
         BCTR  5,0
         L     2,=F'-1'
         CLR   5,2
         BNE   @@L375
         MVC   88(4,13),=A(@@LC468)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC469)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         LA    5,5(0,0)
         LA    6,60(0,0)
@@L382   EQU   *
         L     7,=V(COMPILER)
         L     2,0(7)
         L     3,8(6,2)
         L     2,0(6,2)
         ST    2,88(13)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LA    4,21(0,0)
         SR    4,15
         LTR   3,3
         BE    @@L376
         IC    2,0(3)
         SLL   2,24
         SRA   2,24
         C     2,=F'0'
         BE    @@L376
         MVC   88(4,13),=A(@@LC470)
         L     2,0(7)
         L     2,0(6,2)
         ST    2,92(13)
         LR    2,4
         LA    4,1(0,0)
         CR    2,4
         BL    @@L421
@@L381   EQU   *
         ST    2,96(13)
         MVC   100(4,13),=A(@@LC471)
         ST    3,104(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
@@L376   EQU   *
         A     6,=F'-12'
         BCTR  5,0
         L     2,=F'-1'
         CLR   5,2
         BNE   @@L382
         MVC   88(4,13),=A(@@LC472)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC473)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC474)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC475)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         LA    5,18(0,0)
         L     3,=A(@@11+288)
@@L388   EQU   *
         L     15,12(3)
         LTR   15,15
         BE    @@L383
         IC    2,0(15)
         CLM   2,1,=XL1'00'
         BNE   @@L422
@@L383   EQU   *
         A     3,=F'-16'
         BCTR  5,0
         L     4,=F'-1'
         CLR   5,4
         BNE   @@L388
         MVC   88(4,13),=A(@@LC477)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC478)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC479)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC480)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC481)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         LA    5,2(0,0)
         L     3,=A(@@2+32)
@@L394   EQU   *
         L     2,12(3)
         LTR   2,2
         BNE   @@L423
@@L389   EQU   *
         A     3,=F'-16'
         BCTR  5,0
         L     2,=F'-1'
         CLR   5,2
         BNE   @@L394
         MVC   88(4,13),=A(@@LC483)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC484)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC485)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC486)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC487)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         MVC   88(4,13),=A(@@LC488)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         SLR   6,6
         L     8,=A(@@LC489)
         MVC   88(4,13),=A(@@LC490)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         LR    5,6
         L     7,=A(@@8)
@@L408   EQU   *
         L     3,4(7)
         L     4,0(7)
         LTR   3,3
         BE    @@L424
         IC    2,0(3)
         CLM   2,1,=XL1'00'
         BE    @@L398
         LTR   4,4
         BE    @@L425
         MVC   88(4,13),=A(@@LC494)
         ST    4,92(13)
         ST    3,96(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
@@L398   EQU   *
         A     7,=F'8'
         A     5,=F'1'
         LA    4,107(0,0)
         CLR   5,4
         BNH   @@L408
         LTR   6,6
         BE    @@L409
         MVC   88(4,13),=A(@@LC492)
         ST    8,92(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         B     @@L409
@@L425   EQU   *
         LTR   6,6
         BNE   @@L426
@@L406   EQU   *
         LR    6,4
         MVC   88(4,13),=A(@@LC493)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         LR    8,3
         B     @@L398
@@L426   EQU   *
         MVC   88(4,13),=A(@@LC492)
         ST    8,92(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         B     @@L406
@@L424   EQU   *
         LA    6,1(0,0)
         L     2,=A(EXTRA@WA)
         L     2,0(2)
         LTR   2,2
         BE    @@L398
         MVC   88(4,13),=A(@@LC491)
         ST    4,92(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         B     @@L398
@@L423   EQU   *
         MVC   88(4,13),=A(@@LC482)
         MVC   92(4,13),0(3)
         ST    2,96(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         B     @@L389
@@L422   EQU   *
         MVC   88(4,13),=A(@@LC476)
         MVC   92(4,13),0(3)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         B     @@L383
@@L421   EQU   *
         LR    2,4
         B     @@L381
@@L420   EQU   *
         MVC   88(4,13),=A(@@LC467)
         MVC   92(4,13),0(3)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         B     @@L370
@@L409   EQU   *
         LA    1,88(,13)
         L     15,=A(@@21)
         BALR  14,15
* Function display_help epilogue
         PDPEPIL
* Function display_help literal pool
         DS    0F
         LTORG
* Function display_help page table
         DS    0F
@@PGT29  EQU   *
         DC    A(@@PG29)
* Program data area
@@22     EQU   *
         DC    X'00'
* Program text area
@@LC495  EQU   *
         DC    X'15'
         DC    C'Target specific options:'
         DC    X'15'
         DC    X'0'
@@LC498  EQU   *
         DC    X'15'
         DC    C'There are undocumented target specific options a'
         DC    C's well.'
         DC    X'15'
         DC    X'0'
@@LC499  EQU   *
         DC    C'  They exist, but they are not documented.'
         DC    X'15'
         DC    X'0'
@@LC496  EQU   *
         DC    C'  -m%-23.23s Ýundocumented¨'
         DC    X'15'
         DC    X'0'
@@LC497  EQU   *
         DC    C'  -m%-23.23s %s'
         DC    X'15'
         DC    X'0'
         DS    0F
* S-func display_target_options prologue
@@21     PDPPRLG CINDEX=30,FRAME=104,BASER=12,ENTRY=NO
         B     @@FEN30
         LTORG
@@FEN30  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG30   EQU   *
         LR    11,1
         L     10,=A(@@PGT30)
* Function display_target_options code
         L     3,=A(@@22)
         IC    2,0(3)
         CLM   2,1,=XL1'00'
         BNE   @@L427
         MVI   0(3),1
         SLR   6,6
         LR    7,6
         MVC   88(4,13),=A(@@LC495)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         LA    5,4(0,0)
         LA    4,48(0,0)
@@L441   EQU   *
         L     2,=A(@@9)
         L     3,0(4,2)
         L     15,8(2,4)
         LTR   3,3
         BE    @@L430
         IC    2,0(3)
         CLM   2,1,=XL1'00'
         BE    @@L430
         LTR   15,15
         BE    @@L466
         IC    2,0(15)
         CLM   2,1,=XL1'00'
         BNE   @@L467
@@L430   EQU   *
         A     4,=F'-12'
         BCTR  5,0
         L     2,=F'-1'
         CLR   5,2
         BNE   @@L441
         L     2,=A(@@10)
         L     3,0(2)
         L     2,=A(@@10+8)
         L     15,0(2)
         LTR   3,3
         BE    @@L461
         IC    2,0(3)
         CLM   2,1,=XL1'00'
         BE    @@L461
         LTR   15,15
         BNE   @@L462
         LA    7,1(0,0)
         L     2,=A(EXTRA@WA)
         L     2,0(2)
         LTR   2,2
         BNE   @@L468
@@L461   EQU   *
         LTR   7,7
         BE    @@L427
         LTR   6,6
         BE    @@L455
         MVC   88(4,13),=A(@@LC498)
@@L465   EQU   *
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         B     @@L427
@@L455   EQU   *
         MVC   88(4,13),=A(@@LC499)
         B     @@L465
@@L468   EQU   *
         MVC   88(4,13),=A(@@LC496)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         B     @@L461
@@L462   EQU   *
         IC    2,0(15)
         CLM   2,1,=XL1'00'
         BE    @@L461
         MVC   88(4,13),=A(@@LC497)
         ST    3,92(13)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         AR    6,15
         B     @@L461
@@L467   EQU   *
         MVC   88(4,13),=A(@@LC497)
         ST    3,92(13)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         AR    6,15
         B     @@L430
@@L466   EQU   *
         LA    7,1(0,0)
         L     2,=A(EXTRA@WA)
         L     2,0(2)
         LTR   2,2
         BE    @@L430
         MVC   88(4,13),=A(@@LC496)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=V(PRINTF)
         BALR  14,15
         B     @@L430
@@L427   EQU   *
* Function display_target_options epilogue
         PDPEPIL
* Function display_target_options literal pool
         DS    0F
         LTORG
* Function display_target_options page table
         DS    0F
@@PGT30  EQU   *
         DC    A(@@PG30)
@@LC500  EQU   *
         DC    C'unrecognized gcc debugging option: %c'
         DC    X'0'
         DS    0F
* S-func decode_d_option prologue
@@23     PDPPRLG CINDEX=31,FRAME=96,BASER=12,ENTRY=NO
         B     @@FEN31
         LTORG
@@FEN31  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG31   EQU   *
         LR    11,1
         L     10,=A(@@PGT31)
* Function decode_d_option code
         L     7,0(11)
         IC    2,0(7)
         CLM   2,1,=XL1'00'
         BE    @@L499
@@L497   EQU   *
         SLR   4,4
         IC    4,0(7)
         LR    3,4
         A     3,=F'-129'
         A     7,=F'1'
         LA    2,86(0,0)
         CLR   3,2
         BH    @@L488
         MH    3,=H'4'
         L     2,=A(@@L496)
         L     14,0(3,2)
         BR    14
         DS    0F
         DS    0F
         DS    0F
         LTORG
         DS    0F
@@L496   EQU   *
         DC    A(@@L474)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L504)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L483)
         DC    A(@@L488)
         DC    A(@@L484)
         DC    A(@@L485)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L480)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L470)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L470)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L488)
         DC    A(@@L482)
@@L474   EQU   *
         SLR   15,15
@@L479   EQU   *
         LR    3,15
         MH    3,=H'8'
         L     2,=A(@@0)
         LA    4,1(0,0)
         STC   4,6(3,2)
         A     15,=F'1'
         LA    2,31(0,0)
         CR    15,2
         BNH   @@L479
@@L470   EQU   *
         IC    2,0(7)
         CLM   2,1,=XL1'00'
         BNE   @@L497
         B     @@L499
@@L504   EQU   *
         L     2,=A(FLAG@PRI)
@@L503   EQU   *
         MVC   0(4,2),=F'1'
         B     @@L470
@@L483   EQU   *
         L     2,=A(GRAPH@DU)
         B     @@L503
@@L484   EQU   *
         L     2,=A(RTDANDE)
         B     @@L503
@@L485   EQU   *
         MVC   88(4,13),=F'1'
         L     2,=V(LANG@HOO)
         L     2,72(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         B     @@L470
@@L480   EQU   *
         L     2,=A(FLAG@DEB)
         B     @@L503
@@L488   EQU   *
         SLR   5,5
         LR    15,5
@@L494   EQU   *
         L     6,=A(@@0)
         LR    3,15
         MH    3,=H'8'
         SLR   2,2
         IC    2,4(3,6)
         CR    4,2
         BE    @@L505
@@L491   EQU   *
         A     15,=F'1'
         LA    2,31(0,0)
         CR    15,2
         BNH   @@L494
         LTR   5,5
         BNE   @@L470
         MVC   88(4,13),=A(@@LC500)
         ST    4,92(13)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         B     @@L470
@@L505   EQU   *
         LA    2,1(0,0)
         STC   2,6(3,6)
         LA    5,1(0,0)
         B     @@L491
@@L482   EQU   *
         L     2,=A(FLGDRTL)
         MVC   0(4,2),=F'1'
         B     @@L504
@@L499   EQU   *
* Function decode_d_option epilogue
         PDPEPIL
* Function decode_d_option literal pool
         DS    0F
         LTORG
* Function decode_d_option page table
         DS    0F
@@PGT31  EQU   *
         DC    A(@@PG31)
@@LC501  EQU   *
         DC    C'fast-math'
         DC    X'0'
@@LC502  EQU   *
         DC    C'no-fast-math'
         DC    X'0'
@@LC503  EQU   *
         DC    C'inline-limit-'
         DC    X'0'
@@LC504  EQU   *
         DC    C'inline-limit='
         DC    X'0'
@@LC505  EQU   *
         DC    C'fixed-'
         DC    X'0'
@@LC506  EQU   *
         DC    C'call-used-'
         DC    X'0'
@@LC507  EQU   *
         DC    C'call-saved-'
         DC    X'0'
@@LC508  EQU   *
         DC    C'align-loops='
         DC    X'0'
@@LC509  EQU   *
         DC    C'align-functions='
         DC    X'0'
@@LC510  EQU   *
         DC    C'align-jumps='
         DC    X'0'
@@LC511  EQU   *
         DC    C'align-labels='
         DC    X'0'
@@LC512  EQU   *
         DC    C'stack-limit-register='
         DC    X'0'
@@LC513  EQU   *
         DC    C'unrecognized register name `%s'''
         DC    X'0'
@@LC514  EQU   *
         DC    C'stack-limit-symbol='
         DC    X'0'
@@LC515  EQU   *
         DC    C'message-length='
         DC    X'0'
@@LC516  EQU   *
         DC    C'diagnostics-show-location='
         DC    X'0'
@@LC517  EQU   *
         DC    C'once'
         DC    X'0'
@@LC518  EQU   *
         DC    C'every-line'
         DC    X'0'
@@LC519  EQU   *
         DC    C'unrecognized option `%s'''
         DC    X'0'
@@LC520  EQU   *
         DC    C'no-stack-limit'
         DC    X'0'
@@LC521  EQU   *
         DC    C'preprocessed'
         DC    X'0'
         DS    0F
* S-func decode_f_option prologue
@@24     PDPPRLG CINDEX=32,FRAME=104,BASER=12,ENTRY=NO
         B     @@FEN32
         LTORG
@@FEN32  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG32   EQU   *
         LR    11,1
         L     10,=A(@@PGT32)
* Function decode_f_option code
         L     2,0(11)
         LA    4,96(0,0)
@@L514   EQU   *
         ST    2,88(13)
         L     5,=A(@@4)
         LR    3,4
         MH    3,=H'16'
         L     6,0(3,5)
         ST    6,92(13)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L582)
         BER   14
         CLI   0(2),149
         L     14,=A(@@L591)
         BER   14
@@L507   EQU   *
         L     12,0(,10)
         BCTR  4,0
         L     3,=F'-1'
         CLR   4,3
         BNE   @@L514
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC501)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L515
         LA    1,88(,13)
         L     15,=A(SET@FAST)
         BALR  14,15
@@L516   EQU   *
         L     12,0(,10)
         LA    2,1(0,0)
         L     14,=A(@@L506)
         BR    14
@@L515   EQU   *
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC502)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L517
         LA    1,88(,13)
         L     15,=A(SET@NO@F)
         BALR  14,15
         B     @@L516
@@L517   EQU   *
         MVC   88(4,13),=A(@@LC503)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC503)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L592)
         BER   14
         SLR   3,3
@@L522   EQU   *
         L     12,0(,10)
         LTR   3,3
         BE    @@L593
@@L520   EQU   *
         ST    3,88(13)
         A     2,=F'-2'
         ST    2,92(13)
         L     2,=V(COMPILER)
         L     2,0(2)
         MVC   96(4,13),4(2)
         LA    1,88(,13)
         L     15,=A(READ@INT)
         BALR  14,15
         MVC   88(4,13),=A(@@LC36)
         ST    15,92(13)
         LA    1,88(,13)
         L     15,=V(SET@PARA)
         BALR  14,15
         B     @@L516
@@L593   EQU   *
         MVC   88(4,13),=A(@@LC504)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC504)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L594)
         BER   14
@@L524   EQU   *
         L     12,0(,10)
         LTR   3,3
         BNE   @@L520
         MVC   88(4,13),=A(@@LC505)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC505)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L595)
         BER   14
@@L528   EQU   *
         L     12,0(,10)
         LTR   3,3
         BE    @@L526
         ST    3,88(13)
         MVC   92(4,13),=F'1'
@@L587   EQU   *
         MVC   96(4,13),=F'1'
@@L586   EQU   *
         LA    1,88(,13)
         L     15,=V(FIX@REGI)
         BALR  14,15
         B     @@L516
@@L526   EQU   *
         MVC   88(4,13),=A(@@LC506)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC506)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L596)
         BER   14
@@L532   EQU   *
         L     12,0(,10)
         LTR   3,3
         BE    @@L530
         ST    3,88(13)
         MVC   92(4,13),=F'0'
         B     @@L587
@@L530   EQU   *
         MVC   88(4,13),=A(@@LC507)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC507)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L597)
         BER   14
@@L536   EQU   *
         L     12,0(,10)
         LTR   3,3
         BE    @@L534
         ST    3,88(13)
         MVC   92(4,13),=F'0'
         MVC   96(4,13),=F'0'
         B     @@L586
@@L534   EQU   *
         MVC   88(4,13),=A(@@LC508)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC508)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L598)
         BER   14
@@L540   EQU   *
         L     12,0(,10)
         LTR   3,3
         BE    @@L538
         ST    3,88(13)
         A     2,=F'-2'
         ST    2,92(13)
         L     2,=A(ALLOOP)
@@L590   EQU   *
         MVC   96(4,13),0(2)
         LA    1,88(,13)
         L     15,=A(READ@INT)
         BALR  14,15
@@L585   EQU   *
         ST    15,0(2)
         B     @@L516
@@L538   EQU   *
         MVC   88(4,13),=A(@@LC509)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC509)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L599)
         BER   14
@@L544   EQU   *
         L     12,0(,10)
         LTR   3,3
         BE    @@L542
         ST    3,88(13)
         A     2,=F'-2'
         ST    2,92(13)
         L     2,=A(ALFUNCS)
         B     @@L590
@@L542   EQU   *
         MVC   88(4,13),=A(@@LC510)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC510)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L600
@@L548   EQU   *
         L     12,0(,10)
         LTR   3,3
         BE    @@L546
         ST    3,88(13)
         A     2,=F'-2'
         ST    2,92(13)
         L     2,=A(ALJUMP)
         B     @@L590
@@L546   EQU   *
         MVC   88(4,13),=A(@@LC511)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC511)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L601
@@L552   EQU   *
         LTR   3,3
         BE    @@L550
         ST    3,88(13)
         A     2,=F'-2'
         ST    2,92(13)
         L     2,=A(ALLAB)
         B     @@L590
@@L550   EQU   *
         MVC   88(4,13),=A(@@LC512)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC512)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L602
@@L556   EQU   *
         LTR   3,3
         BE    @@L554
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(DECODE@R)
         BALR  14,15
         LTR   15,15
         BL    @@L603
         MVC   88(4,13),=F'4'
         ST    15,92(13)
         LA    1,88(,13)
         L     15,=V(GRREG)
         BALR  14,15
@@L583   EQU   *
         L     2,=A(STACK@LI)
         B     @@L585
@@L603   EQU   *
         MVC   88(4,13),=A(@@LC513)
         ST    3,92(13)
@@L584   EQU   *
         LA    1,88(,13)
         L     15,=V(ERROR)
         BALR  14,15
         B     @@L516
@@L554   EQU   *
         MVC   88(4,13),=A(@@LC514)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC514)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L604
@@L562   EQU   *
         LTR   3,3
         BE    @@L560
         ST    3,88(13)
         MVC   92(4,13),=F'-1'
         LA    1,88(,13)
         L     15,=V(G@ALLSTR)
         BALR  14,15
         MVC   88(4,13),=F'68'
         MVC   92(4,13),=F'4'
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(GRF@S)
         BALR  14,15
         B     @@L583
@@L560   EQU   *
         MVC   88(4,13),=A(@@LC515)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC515)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L605
@@L566   EQU   *
         LTR   3,3
         BE    @@L564
         ST    3,88(13)
         A     2,=F'-2'
         ST    2,92(13)
         L     2,=V(GLOBAL@D)
         L     3,0(2)
         MVC   96(4,13),8(3)
         LA    1,88(,13)
         L     15,=A(READ@INT)
         BALR  14,15
         MVC   88(4,13),0(2)
         ST    15,92(13)
         LA    1,88(,13)
         L     15,=V(OSETMAXL)
         BALR  14,15
         B     @@L516
@@L564   EQU   *
         MVC   88(4,13),=A(@@LC516)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC516)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L606
@@L570   EQU   *
         LTR   3,3
         BE    @@L568
         ST    3,88(13)
         MVC   92(4,13),=A(@@LC517)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L571
         L     2,=V(GLOBAL@D)
         L     2,0(2)
         ST    15,20(2)
         B     @@L516
@@L571   EQU   *
         ST    3,88(13)
         MVC   92(4,13),=A(@@LC518)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L573
         L     2,=V(GLOBAL@D)
         L     2,0(2)
         MVC   20(4,2),=F'2'
         B     @@L516
@@L573   EQU   *
         MVC   88(4,13),=A(@@LC519)
         A     2,=F'-2'
         ST    2,92(13)
         B     @@L584
@@L568   EQU   *
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC520)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L576
         L     2,=A(STACK@LI)
         ST    3,0(2)
         B     @@L516
@@L576   EQU   *
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC521)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LR    2,3
         LTR   15,15
         BNE   @@L506
         B     @@L516
@@L606   EQU   *
         MVC   88(4,13),=A(@@LC516)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L570
@@L605   EQU   *
         MVC   88(4,13),=A(@@LC515)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L566
@@L604   EQU   *
         MVC   88(4,13),=A(@@LC514)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L562
@@L602   EQU   *
         MVC   88(4,13),=A(@@LC512)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L556
@@L601   EQU   *
         MVC   88(4,13),=A(@@LC511)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L552
@@L600   EQU   *
         MVC   88(4,13),=A(@@LC510)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L548
@@L599   EQU   *
         MVC   88(4,13),=A(@@LC509)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L544
@@L598   EQU   *
         MVC   88(4,13),=A(@@LC508)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L540
@@L597   EQU   *
         MVC   88(4,13),=A(@@LC507)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L536
@@L596   EQU   *
         MVC   88(4,13),=A(@@LC506)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L532
@@L595   EQU   *
         MVC   88(4,13),=A(@@LC505)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L528
@@L594   EQU   *
         MVC   88(4,13),=A(@@LC504)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L524
@@L592   EQU   *
         MVC   88(4,13),=A(@@LC503)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L522
@@L591   EQU   *
         CLI   1(2),150
         BNE   @@L507
         CLI   2(2),96
         BNE   @@L507
         A     2,=F'3'
         ST    2,88(13)
         A     2,=F'-3'
         L     5,0(3,5)
         ST    5,92(13)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L507
         LR    2,3
         A     2,=A(@@4)
         L     3,4(2)
         L     2,8(2)
         LTR   2,2
         BNE   @@L513
         LA    15,1(0,0)
@@L513   EQU   *
         ST    15,0(3)
         B     @@L516
@@L582   EQU   *
         A     3,=A(@@4)
         L     2,4(3)
         MVC   0(4,2),8(3)
         B     @@L516
@@L506   EQU   *
         LR    15,2
* Function decode_f_option epilogue
         PDPEPIL
* Function decode_f_option literal pool
         DS    0F
         LTORG
* Function decode_f_option page table
         DS    0F
@@PGT32  EQU   *
         DC    A(@@PG32)
@@LC522  EQU   *
         DC    C'id-clash-'
         DC    X'0'
@@LC523  EQU   *
         DC    C'-Wid-clash-LEN is no longer supported'
         DC    X'0'
@@LC524  EQU   *
         DC    C'larger-than-'
         DC    X'0'
@@LC525  EQU   *
         DC    C'unused'
         DC    X'0'
@@LC526  EQU   *
         DC    C'no-unused'
         DC    X'0'
         DS    0F
* S-func decode_W_option prologue
@@25     PDPPRLG CINDEX=33,FRAME=104,BASER=12,ENTRY=NO
         B     @@FEN33
         LTORG
@@FEN33  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG33   EQU   *
         LR    11,1
         L     10,=A(@@PGT33)
* Function decode_W_option code
         L     2,0(11)
         LA    4,18(0,0)
@@L615   EQU   *
         ST    2,88(13)
         L     5,=A(@@11)
         LR    3,4
         MH    3,=H'16'
         L     6,0(3,5)
         ST    6,92(13)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L631
         CLI   0(2),149
         BE    @@L633
@@L608   EQU   *
         BCTR  4,0
         L     3,=F'-1'
         CLR   4,3
         BNE   @@L615
         MVC   88(4,13),=A(@@LC522)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC522)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L634
         SLR   3,3
@@L618   EQU   *
         LTR   3,3
         BE    @@L616
         MVC   88(4,13),=A(@@LC523)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
@@L619   EQU   *
         LA    15,1(0,0)
         B     @@L607
@@L616   EQU   *
         MVC   88(4,13),=A(@@LC524)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC524)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L635
@@L622   EQU   *
         LTR   3,3
         BE    @@L620
         ST    3,88(13)
         A     2,=F'-2'
         ST    2,92(13)
         MVC   96(4,13),=F'-1'
         LA    1,88(,13)
         L     15,=A(READ@INT)
         BALR  14,15
         L     2,=A(LARGER@T)
         ST    15,0(2)
         X     15,=F'-1'
         LPR   15,15
         LCR   15,15
         SRL   15,31
         L     2,=A(WARN@LAR)
         ST    15,0(2)
         B     @@L619
@@L620   EQU   *
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC525)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L625
         MVC   88(4,13),=F'1'
@@L632   EQU   *
         LA    1,88(,13)
         L     15,=A(SET@WUNU)
         BALR  14,15
         B     @@L619
@@L625   EQU   *
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC526)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L636
         LR    15,3
         B     @@L607
@@L636   EQU   *
         ST    3,88(13)
         B     @@L632
@@L635   EQU   *
         MVC   88(4,13),=A(@@LC524)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L622
@@L634   EQU   *
         MVC   88(4,13),=A(@@LC522)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         AR    3,2
         B     @@L618
@@L633   EQU   *
         CLI   1(2),150
         BNE   @@L608
         CLI   2(2),96
         BNE   @@L608
         A     2,=F'3'
         ST    2,88(13)
         A     2,=F'-3'
         L     5,0(3,5)
         ST    5,92(13)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L608
         LR    2,3
         A     2,=A(@@11)
         L     3,4(2)
         L     2,8(2)
         LTR   2,2
         BNE   @@L614
         LA    15,1(0,0)
@@L614   EQU   *
         ST    15,0(3)
         B     @@L619
@@L631   EQU   *
         A     3,=A(@@11)
         L     2,4(3)
         MVC   0(4,2),8(3)
         B     @@L619
@@L607   EQU   *
* Function decode_W_option epilogue
         PDPEPIL
* Function decode_W_option literal pool
         DS    0F
         LTORG
* Function decode_W_option page table
         DS    0F
@@PGT33  EQU   *
         DC    A(@@PG33)
* Program data area
         DS    0F
@@27     EQU   *
         DC    F'0'
         DS    0F
@@28     EQU   *
         DC    F'0'
         DS    0F
@@29     EQU   *
         DC    F'0'
* Program text area
@@LC527  EQU   *
         DC    C'none'
         DC    X'0'
@@LC528  EQU   *
         DC    C'stabs'
         DC    X'0'
@@LC529  EQU   *
         DC    C'coff'
         DC    X'0'
@@LC530  EQU   *
         DC    C'dwarf-1'
         DC    X'0'
@@LC531  EQU   *
         DC    C'dwarf-2'
         DC    X'0'
@@LC532  EQU   *
         DC    C'xcoff'
         DC    X'0'
@@LC533  EQU   *
         DC    C'vms'
         DC    X'0'
         DS    0F
@@30     EQU   *
         DC    A(@@LC527)
         DC    A(@@LC528)
         DC    A(@@LC529)
         DC    A(@@LC530)
         DC    A(@@LC531)
         DC    A(@@LC532)
         DC    A(@@LC533)
         DS    0F
@@31     EQU   *
         DC    F'3'
@@LC539  EQU   *
         DC    C'`%s'' ignored, conflicts with `-g%s'''
         DC    X'0'
@@LC537  EQU   *
         DC    C'ignoring option `%s'' due to invalid debug level'
         DC    C' specification'
         DC    X'0'
@@LC534  EQU   *
         DC    C'dwarf'
         DC    X'0'
@@LC535  EQU   *
         DC    C'use -gdwarf -g%d for DWARF v1, level %d'
         DC    X'0'
@@LC536  EQU   *
         DC    C'use -gdwarf-2   for DWARF v2'
         DC    X'0'
         DS    0F
* S-func decode_g_option prologue
@@26     PDPPRLG CINDEX=34,FRAME=104,BASER=12,ENTRY=NO
         B     @@FEN34
         LTORG
@@FEN34  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG34   EQU   *
         LR    11,1
         L     10,=A(@@PGT34)
* Function decode_g_option code
         L     5,0(11)
         L     6,=A(@@32)
         MVC   0(4,6),=A(@@2)
         L     2,=A(@@2)
         L     2,0(2)
         LTR   2,2
         BE    @@L639
@@L661   EQU   *
         L     2,0(6)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    4,15
         LTR   15,15
         BNE   @@L664
@@L643   EQU   *
         L     2,0(6)
         L     7,4(2)
         LR    6,5
         AR    6,4
         IC    15,0(6)
         CLM   15,1,=XL1'00'
         BE    @@L644
         LR    2,15
         N     2,=XL4'000000FF'
         MH    2,=H'2'
         L     3,=V(@SCH@IST)
         LH    2,0(2,3)
         N     2,=F'4'
         CH    2,=H'0'
         BNE   @@L644
@@L640   EQU   *
         L     2,=A(@@32)
         L     3,0(2)
         A     3,=F'16'
         ST    3,0(2)
         LR    6,2
         L     2,0(3)
         LTR   2,2
         BNE   @@L661
         B     @@L639
@@L644   EQU   *
         CLM   15,1,=XL1'00'
         BNE   @@L665
         L     3,=A(@@27)
         L     2,0(3)
         LTR   2,2
         BNE   @@L647
         LA    2,2(0,0)
@@L647   EQU   *
         ST    2,0(3)
@@L646   EQU   *
         LA    2,1(0,0)
         CR    4,2
         BNH   @@L648
         IC    2,0(6)
         CLM   2,1,=XL1'00'
         BNE   @@L666
@@L648   EQU   *
         L     6,=A(@@27)
         L     3,0(6)
         L     2,=A(@@31)
         CL    3,0(2)
         BH    @@L667
@@L650   EQU   *
         LTR   7,7
         BNE   @@L653
         LA    2,1(0,0)
         CR    4,2
         BH    @@L668
@@L653   EQU   *
         L     2,=A(@@29)
         L     2,0(2)
         LTR   2,2
         BE    @@L654
         L     2,=A(@@32)
         L     2,0(2)
         L     2,4(2)
         LTR   2,2
         BE    @@L654
         L     2,=A(@@28)
         L     3,0(2)
         CLR   7,3
         BE    @@L654
         MVC   88(4,13),=A(@@LC539)
         A     5,=F'-2'
         ST    5,92(13)
         MH    3,=H'4'
         L     2,=A(@@30)
         L     3,0(3,2)
         ST    3,96(13)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         B     @@L639
@@L654   EQU   *
         L     4,=A(@@29)
         L     2,0(4)
         LTR   2,2
         BE    @@L656
         L     2,=A(@@32)
         L     2,0(2)
         L     2,4(2)
         LTR   2,2
         BE    @@L657
@@L656   EQU   *
         L     2,=A(@@28)
         ST    7,0(2)
         SLR   3,3
         L     2,=A(@@32)
         L     2,0(2)
         L     2,4(2)
         LTR   2,2
         BE    @@L658
         LA    3,1(0,0)
@@L658   EQU   *
         ST    3,0(4)
@@L657   EQU   *
         L     2,=A(@@27)
         L     2,0(2)
         LTR   2,2
         BE    @@L659
         L     2,=A(@@28)
         L     3,0(2)
@@L660   EQU   *
         L     2,=A(WRITE@SY)
         ST    3,0(2)
         L     2,=A(@@32)
         L     3,0(2)
         L     2,=A(USE@GNU@)
         MVC   0(4,2),8(3)
         L     3,=A(@@27)
         L     2,=A(DEBUG@IN)
         MVC   0(4,2),0(3)
         B     @@L639
@@L659   EQU   *
         LR    3,2
         B     @@L660
@@L668   EQU   *
         ST    5,88(13)
         MVC   92(4,13),=A(@@LC34)
         ST    4,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         B     @@L653
@@L667   EQU   *
         MVC   88(4,13),=A(@@LC537)
         A     5,=F'-2'
         ST    5,92(13)
         A     5,=F'2'
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         L     2,=A(DEBUG@IN)
         MVC   0(4,6),0(2)
         B     @@L650
@@L666   EQU   *
         ST    5,88(13)
         MVC   92(4,13),=A(@@LC534)
         ST    4,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L648
         MVC   88(4,13),=A(@@LC535)
         L     2,=A(@@27)
         MVC   92(4,13),0(2)
         MVC   96(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(ERROR)
         BALR  14,15
         L     2,0(2)
         LA    3,2(0,0)
         CLR   2,3
         BNE   @@L648
         MVC   88(4,13),=A(@@LC536)
         LA    1,88(,13)
         L     15,=V(ERROR)
         BALR  14,15
         B     @@L648
@@L665   EQU   *
         ST    6,88(13)
         MVC   92(4,13),=F'0'
         L     2,=A(@@31)
         L     2,0(2)
         A     2,=F'1'
         ST    2,96(13)
         LA    1,88(,13)
         L     15,=A(READ@INT)
         BALR  14,15
         L     2,=A(@@27)
         ST    15,0(2)
         B     @@L646
@@L664   EQU   *
         ST    5,88(13)
         L     2,0(6)
         MVC   92(4,13),0(2)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L640
         B     @@L643
@@L639   EQU   *
         L     2,=A(@@32)
         L     2,0(2)
         L     2,0(2)
         LPR   15,2
         LCR   15,15
         SRL   15,31
* Function decode_g_option epilogue
         PDPEPIL
* Function decode_g_option literal pool
         DS    0F
         LTORG
* Function decode_g_option page table
         DS    0F
@@PGT34  EQU   *
         DC    A(@@PG34)
@@LC540  EQU   *
         DC    C'-help'
         DC    X'0'
@@LC541  EQU   *
         DC    C'-target-help'
         DC    X'0'
@@LC542  EQU   *
         DC    C'-version'
         DC    X'0'
@@LC543  EQU   *
         DC    C'-param'
         DC    X'0'
@@LC546  EQU   *
         DC    C'invalid parameter value `%s'''
         DC    X'0'
@@LC545  EQU   *
         DC    C'invalid --param option: %s'
         DC    X'0'
@@LC544  EQU   *
         DC    C'-param option missing argument'
         DC    X'0'
@@LC552  EQU   *
         DC    C'aux-info'
         DC    X'0'
@@LC547  EQU   *
         DC    C'dumpbase'
         DC    X'0'
@@LC548  EQU   *
         DC    C'pedantic'
         DC    X'0'
@@LC549  EQU   *
         DC    C'pedantic-errors'
         DC    X'0'
@@LC550  EQU   *
         DC    C'quiet'
         DC    X'0'
@@LC551  EQU   *
         DC    C'version'
         DC    X'0'
         DS    0F
* S-func independent_decode_option prologue
@@33     PDPPRLG CINDEX=35,FRAME=104,BASER=12,ENTRY=NO
         B     @@FEN35
         LTORG
@@FEN35  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG35   EQU   *
         LR    11,1
         L     10,=A(@@PGT35)
* Function independent_decode_option code
         L     5,0(11)
         L     6,4(11)
         L     4,0(6)
         IC    3,0(4)
         CLM   3,1,=XL1'60'
         BE    @@L735
@@L671   EQU   *
         SLR   15,15
         CLM   3,1,=XL1'4E'
         L     14,=A(@@L669)
         BER   14
         L     2,=A(@@34)
         ST    4,0(2)
@@L683   EQU   *
         L     12,0(,10)
         LA    15,1(0,0)
         L     14,=A(@@L669)
         BR    14
@@L735   EQU   *
         IC    2,1(4)
         CLM   2,1,=XL1'00'
         BE    @@L671
         A     4,=F'1'
         ST    4,88(13)
         MVC   92(4,13),=A(@@LC540)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L736)
         BER   14
@@L673   EQU   *
         L     12,0(,10)
         ST    4,88(13)
         MVC   92(4,13),=A(@@LC541)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L737)
         BER   14
@@L674   EQU   *
         L     12,0(,10)
         ST    4,88(13)
         MVC   92(4,13),=A(@@LC542)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         L     14,=A(@@L738)
         BER   14
@@L675   EQU   *
         L     12,0(,10)
         ST    4,88(13)
         MVC   92(4,13),=A(@@LC543)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LR    2,15
         LTR   15,15
         BNE   @@L676
         LA    3,1(0,0)
         CLR   5,3
         BE    @@L739
         L     4,4(6)
         ST    4,88(13)
         MVC   92(4,13),=F'126'
         LA    1,88(,13)
         L     15,=V(STRCHR)
         BALR  14,15
         LTR   15,15
         BE    @@L740
         STC   2,0(15)
         LR    3,15
         A     3,=F'1'
         ST    3,88(13)
         ST    2,92(13)
         MVC   96(4,13),=F'-1'
         LA    1,88(,13)
         L     15,=A(READ@INT)
         BALR  14,15
         L     2,=F'-1'
         CLR   15,2
         BE    @@L680
         ST    4,88(13)
         ST    15,92(13)
         LA    1,88(,13)
         L     15,=V(SET@PARA)
         BALR  14,15
@@L733   EQU   *
         LA    15,2(0,0)
         L     14,=A(@@L669)
         BR    14
@@L680   EQU   *
         MVC   88(4,13),=A(@@LC546)
         ST    3,92(13)
@@L731   EQU   *
         LA    1,88(,13)
         L     15,=V(ERROR)
         BALR  14,15
         B     @@L733
@@L740   EQU   *
         MVC   88(4,13),=A(@@LC545)
         ST    4,92(13)
         B     @@L731
@@L739   EQU   *
         MVC   88(4,13),=A(@@LC544)
         LA    1,88(,13)
         L     15,=V(ERROR)
         BALR  14,15
         B     @@L683
@@L676   EQU   *
         CLI   0(4),232
         L     14,=A(@@L741)
         BER   14
@@L682   EQU   *
         L     12,0(,10)
         SLR   3,3
         IC    3,0(4)
         A     3,=F'-129'
         LA    2,101(0,0)
         CLR   3,2
         BH    @@L714
         MH    3,=H'4'
         L     2,=A(@@L730)
         L     14,0(3,2)
         BR    14
         DS    0F
         DS    0F
         DS    0F
         LTORG
         DS    0F
@@L730   EQU   *
         DC    A(@@L713)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L689)
         DC    A(@@L714)
         DC    A(@@L687)
         DC    A(@@L688)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L686)
         DC    A(@@L714)
         DC    A(@@L721)
         DC    A(@@L693)
         DC    A(@@L700)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L703)
         DC    A(@@L706)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L724)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L683)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L714)
         DC    A(@@L709)
@@L686   EQU   *
         A     4,=F'1'
         ST    4,88(13)
         LA    1,88(,13)
         L     15,=A(@@36)
         BALR  14,15
         B     @@L683
@@L713   EQU   *
         ST    4,88(13)
         MVC   92(4,13),=A(@@LC552)
         MVC   96(4,13),=F'8'
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L714
         IC    2,8(4)
         CLM   2,1,=XL1'00'
         BNE   @@L715
         LA    2,1(0,0)
         CLR   5,2
         BE    @@L669
         L     2,=A(@@38)
         MVC   0(4,2),4(6)
         L     2,=A(FLAG@GEN)
         MVC   0(4,2),=F'1'
         B     @@L733
@@L715   EQU   *
         CLM   2,1,=XL1'7E'
         BNE   @@L669
         A     4,=F'9'
         L     2,=A(@@38)
         ST    4,0(2)
         L     2,=A(FLAG@GEN)
@@L732   EQU   *
         MVC   0(4,2),=F'1'
         B     @@L683
@@L714   EQU   *
         SLR   15,15
         B     @@L669
@@L689   EQU   *
         ST    4,88(13)
         MVC   92(4,13),=A(@@LC547)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L690
         LA    3,1(0,0)
         L     2,=A(DUMP@BAS)
         CLR   5,3
         BE    @@L669
@@L734   EQU   *
         MVC   0(4,2),4(6)
         B     @@L733
@@L690   EQU   *
         A     4,=F'1'
         ST    4,88(13)
         LA    1,88(,13)
         L     15,=A(@@23)
         BALR  14,15
         B     @@L683
@@L687   EQU   *
         A     4,=F'1'
         ST    4,88(13)
         LA    1,88(,13)
         L     15,=A(@@24)
         BALR  14,15
         B     @@L669
@@L688   EQU   *
         A     4,=F'1'
         ST    4,88(13)
         LA    1,88(,13)
         L     15,=A(@@26)
         BALR  14,15
         B     @@L669
@@L721   EQU   *
         IC    2,1(4)
         SLR   15,15
         CLM   2,1,=XL1'00'
         BNE   @@L669
         LA    3,1(0,0)
         CLR   5,3
         BE    @@L669
         L     2,=A(ASM@FILE)
         B     @@L734
@@L693   EQU   *
         ST    4,88(13)
         MVC   92(4,13),=A(@@LC548)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         L     2,=A(PEDNT)
         LTR   15,15
         BE    @@L732
         ST    4,88(13)
         MVC   92(4,13),=A(@@LC549)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L696
         L     2,=A(PEDNT)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@PED)
         B     @@L732
@@L696   EQU   *
         IC    2,1(4)
         CLM   2,1,=XL1'00'
         BNE   @@L714
         L     2,=A(PROFFLAG)
         B     @@L732
@@L700   EQU   *
         ST    4,88(13)
         MVC   92(4,13),=A(@@LC550)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         L     2,=A(QUIET@FL)
         LTR   15,15
         BE    @@L732
         B     @@L714
@@L703   EQU   *
         ST    4,88(13)
         MVC   92(4,13),=A(@@LC551)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         L     2,=A(@@37)
         LTR   15,15
         BE    @@L732
         B     @@L714
@@L706   EQU   *
         IC    2,1(4)
         CLM   2,1,=XL1'00'
         BNE   @@L714
         L     2,=A(INHIBIT@)
         B     @@L732
@@L724   EQU   *
         IC    2,1(4)
         CLM   2,1,=XL1'00'
         BNE   @@L725
         SLR   15,15
         LA    4,1(0,0)
         CLR   5,4
         BE    @@L669
         MVC   88(4,13),4(6)
         MVC   92(4,13),=F'0'
         MVC   96(4,13),=F'-1'
         LA    1,88(,13)
         L     15,=A(READ@INT)
         BALR  14,15
         LA    3,2(0,0)
@@L727   EQU   *
         L     2,=F'-1'
         CLR   15,2
         BE    @@L743
         L     2,=A(GSWSET)
         MVC   0(4,2),=F'1'
         L     2,=A(GSWVUE)
         ST    15,0(2)
@@L729   EQU   *
         LR    15,3
         B     @@L669
@@L743   EQU   *
         SLR   3,3
         B     @@L729
@@L725   EQU   *
         A     4,=F'1'
         ST    4,88(13)
         MVC   92(4,13),=F'0'
         MVC   96(4,13),=F'-1'
         LA    1,88(,13)
         L     15,=A(READ@INT)
         BALR  14,15
         LA    3,1(0,0)
         B     @@L727
@@L709   EQU   *
         IC    2,1(4)
         CLM   2,1,=XL1'00'
         BNE   @@L710
         L     2,=A(EXTRA@WA)
         MVC   0(4,2),=F'1'
         L     3,=A(WARN@UNI)
         L     2,0(3)
         LA    4,1(0,0)
         CLR   2,4
         BE    @@L683
         MVC   0(4,3),=F'2'
         B     @@L683
@@L710   EQU   *
         A     4,=F'1'
         ST    4,88(13)
         LA    1,88(,13)
         L     15,=A(@@25)
         BALR  14,15
         B     @@L669
@@L741   EQU   *
         A     4,=F'1'
         B     @@L682
@@L738   EQU   *
         LA    1,88(,13)
         L     15,=V(@@GTERR)
         BALR  14,15
         MVC   88(4,13),0(15)
         MVC   92(4,13),=A(@@LC32)
         LA    1,88(,13)
         L     15,=A(@@35)
         BALR  14,15
         L     2,=A(@@1)
         MVC   0(4,2),=F'1'
         B     @@L675
@@L737   EQU   *
         LA    1,88(,13)
         L     15,=A(@@21)
         BALR  14,15
         L     2,=A(@@1)
         MVC   0(4,2),=F'1'
         B     @@L674
@@L736   EQU   *
         LA    1,88(,13)
         L     15,=A(@@20)
         BALR  14,15
         L     2,=A(@@1)
         MVC   0(4,2),=F'1'
         B     @@L673
@@L669   EQU   *
* Function independent_decode_option epilogue
         PDPEPIL
* Function independent_decode_option literal pool
         DS    0F
         LTORG
* Function independent_decode_option page table
         DS    0F
@@PGT35  EQU   *
         DC    A(@@PG35)
         DS    0F
* S-func set_target_switch prologue
@@36     PDPPRLG CINDEX=36,FRAME=104,BASER=12,ENTRY=NO
         B     @@FEN36
         LTORG
@@FEN36  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG36   EQU   *
         LR    11,1
         L     10,=A(@@PGT36)
* Function set_target_switch code
         L     7,0(11)
         SLR   4,4
         LR    6,4
         L     5,=A(@@9+4)
         LR    3,4
@@L752   EQU   *
         L     2,=A(@@9)
         L     2,0(3,2)
         ST    2,88(13)
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L747
         L     15,0(5)
         LTR   15,15
         BL    @@L768
         L     2,=V(TARGET@F)
         O     15,0(2)
@@L767   EQU   *
         ST    15,0(2)
         LA    4,1(0,0)
@@L747   EQU   *
         A     5,=F'12'
         A     3,=F'12'
         A     6,=F'1'
         LA    2,4(0,0)
         CLR   6,2
         BNH   @@L752
         LTR   4,4
         BE    @@L769
@@L753   EQU   *
         LTR   4,4
         BNE   @@L744
         MVC   88(4,13),=A(@@LC441)
         ST    7,92(13)
         LA    1,88(,13)
         L     15,=V(ERROR)
         BALR  14,15
         B     @@L744
@@L769   EQU   *
         L     2,=A(@@10)
         L     3,0(4,2)
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         L     2,0(4,2)
         ST    2,88(13)
         ST    7,92(13)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L753
         L     2,=A(@@10+4)
         L     2,0(2)
         AR    3,7
         ST    3,0(2)
         LA    4,1(0,0)
         B     @@L753
@@L768   EQU   *
         L     2,=V(TARGET@F)
         BCTR  15,0
         N     15,0(2)
         B     @@L767
@@L744   EQU   *
* Function set_target_switch epilogue
         PDPEPIL
* Function set_target_switch literal pool
         DS    0F
         LTORG
* Function set_target_switch page table
         DS    0F
@@PGT36  EQU   *
         DC    A(@@PG36)
@@LC553  EQU   *
         DC    C'%s%s%s version %s (%s)'
         DC    X'15'
         DC    C'%s'
         DC    X'5'
         DC    C'compiled by GNU C version %s.'
         DC    X'15'
         DC    X'0'
@@LC554  EQU   *
         DC    C' '
         DC    X'0'
@@LC555  EQU   *
         DC    C'mvs'
         DC    X'0'
@@LC556  EQU   *
         DC    C'3.2.3 MVS V9.0'
         DC    X'0'
         DS    0F
* S-func print_version prologue
@@35     PDPPRLG CINDEX=37,FRAME=128,BASER=12,ENTRY=NO
         B     @@FEN37
         LTORG
@@FEN37  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG37   EQU   *
         LR    11,1
         L     10,=A(@@PGT37)
* Function print_version code
         L     3,4(11)
         MVC   88(4,13),0(11)
         MVC   92(4,13),=A(@@LC553)
         ST    3,96(13)
         IC    2,0(3)
         L     15,=A(@@LC554)
         CLM   2,1,=XL1'00'
         BNE   @@L772
         L     15,=A(@@LC32)
@@L772   EQU   *
         ST    15,100(13)
         L     2,=V(LANG@HOO)
         MVC   104(4,13),0(2)
         L     2,=V(VERSION@)
         MVC   108(4,13),0(2)
         MVC   112(4,13),=A(@@LC555)
         ST    3,116(13)
         MVC   120(4,13),=A(@@LC556)
         LA    1,88(,13)
         L     15,=V(FNOTICE)
         BALR  14,15
* Function print_version epilogue
         PDPEPIL
* Function print_version literal pool
         DS    0F
         LTORG
* Function print_version page table
         DS    0F
@@PGT37  EQU   *
         DC    A(@@PG37)
@@LC557  EQU   *
         DC    C'%s'
         DC    X'0'
@@LC558  EQU   *
         DC    C'%s%s%s'
         DC    X'0'
         DS    0F
* S-func print_single_switch prologue
@@39     PDPPRLG CINDEX=38,FRAME=112,BASER=12,ENTRY=NO
         B     @@FEN38
         LTORG
@@FEN38  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG38   EQU   *
         LR    11,1
         L     10,=A(@@PGT38)
* Function print_single_switch code
         L     5,0(11)
         L     3,4(11)
         L     6,12(11)
         L     9,16(11)
         L     7,24(11)
         L     8,28(11)
         ST    9,88(13)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    4,15
         ST    7,88(13)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         AR    4,15
         ST    8,88(13)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         AR    4,15
         LTR   3,3
         BE    @@L774
         LR    2,3
         AR    2,4
         C     2,8(11)
         BH    @@L776
@@L774   EQU   *
         LTR   3,3
         BNE   @@L775
         ST    5,88(13)
         MVC   92(4,13),=A(@@LC557)
         ST    6,96(13)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
         ST    6,88(13)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    3,15
         B     @@L775
@@L776   EQU   *
         ST    5,88(13)
         MVC   92(4,13),=A(@@LC557)
         MVC   96(4,13),20(11)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
         SLR   3,3
         B     @@L774
@@L775   EQU   *
         ST    5,88(13)
         MVC   92(4,13),=A(@@LC558)
         ST    9,96(13)
         ST    7,100(13)
         ST    8,104(13)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
         AR    4,3
         LR    15,4
* Function print_single_switch epilogue
         PDPEPIL
* Function print_single_switch literal pool
         DS    0F
         LTORG
* Function print_single_switch page table
         DS    0F
@@PGT38  EQU   *
         DC    A(@@PG38)
@@LC559  EQU   *
         DC    C'options passed: '
         DC    X'0'
@@LC562  EQU   *
         DC    C'options enabled: '
         DC    X'0'
@@LC565  EQU   *
         DC    C'-m%s'
         DC    X'0'
@@LC564  EQU   *
         DC    C'-m'
         DC    X'0'
@@LC563  EQU   *
         DC    C'-f'
         DC    X'0'
@@LC560  EQU   *
         DC    C'-o'
         DC    X'0'
@@LC561  EQU   *
         DC    C'-quiet'
         DC    X'0'
         DS    0F
* S-func print_switch_values prologue
@@40     PDPPRLG CINDEX=39,FRAME=392,BASER=12,ENTRY=NO
         B     @@FEN39
         LTORG
@@FEN39  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG39   EQU   *
         LR    11,1
         L     10,=A(@@PGT39)
* Function print_switch_values code
         L     9,0(11)
         L     4,4(11)
         L     7,12(11)
         L     8,20(11)
         ST    9,88(13)
         ST    4,92(13)
         MVC   96(4,13),8(11)
         ST    7,100(13)
         IC    2,0(7)
         L     3,=A(@@LC554)
         CLM   2,1,=XL1'00'
         BNE   @@L779
         L     3,=A(@@LC32)
@@L779   EQU   *
         ST    3,104(13)
         ST    8,108(13)
         MVC   112(4,13),=A(@@LC559)
         MVC   116(4,13),=A(@@LC32)
         LA    1,88(,13)
         L     15,=A(@@39)
         BALR  14,15
         LR    4,15
         L     2,=A(SAVAV)
         L     3,0(2)
         A     3,=F'4'
         L     2,0(3)
         LTR   2,2
         BE    @@L813
@@L790   EQU   *
         L     2,0(3)
         CLI   0(2),96
         BE    @@L823
@@L782   EQU   *
         A     3,=F'4'
         L     2,0(3)
         LTR   2,2
         BNE   @@L790
@@L813   EQU   *
         LTR   4,4
         BNH   @@L791
         ST    9,88(13)
         MVC   92(4,13),=A(@@LC557)
         ST    8,96(13)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
@@L791   EQU   *
         ST    9,88(13)
         MVC   92(4,13),=F'0'
         MVC   96(4,13),8(11)
         ST    7,100(13)
         IC    2,0(7)
         L     3,=A(@@LC554)
         CLM   2,1,=XL1'00'
         BNE   @@L793
         L     3,=A(@@LC32)
@@L793   EQU   *
         ST    3,104(13)
         ST    8,108(13)
         MVC   112(4,13),=A(@@LC562)
         MVC   116(4,13),=A(@@LC32)
         LA    1,88(,13)
         L     15,=A(@@39)
         BALR  14,15
         LR    4,15
         SLR   5,5
         L     3,=A(@@4)
@@L799   EQU   *
         L     2,4(3)
         L     2,0(2)
         CL    2,8(3)
         BE    @@L824
@@L796   EQU   *
         A     3,=F'16'
         A     5,=F'1'
         LA    2,96(0,0)
         CLR   5,2
         BNH   @@L799
         SLR   5,5
         L     3,=A(@@9)
         LR    6,5
@@L805   EQU   *
         L     2,=A(@@9)
         L     2,0(6,2)
         IC    2,0(2)
         SLL   2,24
         SRA   2,24
         C     2,=F'0'
         BE    @@L802
         MVC   384(4,13),4(3)
         L     15,384(13)
         LTR   15,15
         BNH   @@L802
         L     2,=V(TARGET@F)
         N     15,0(2)
         CL    15,384(13)
         BE    @@L825
@@L802   EQU   *
         A     3,=F'12'
         A     6,=F'12'
         A     5,=F'1'
         LA    15,4(0,0)
         CLR   5,15
         BNH   @@L805
         L     5,=A(@@10)
         L     3,4(5)
         L     2,0(3)
         LTR   2,2
         BE    @@L820
         LA    2,120(,13)
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC565)
         MVC   96(4,13),0(5)
         LA    1,88(,13)
         L     15,=V(SPRINTF)
         BALR  14,15
         ST    9,88(13)
         ST    4,92(13)
         MVC   96(4,13),8(11)
         ST    7,100(13)
         MVC   104(4,13),16(11)
         ST    8,108(13)
         ST    2,112(13)
         MVC   116(4,13),0(3)
         LA    1,88(,13)
         L     15,=A(@@39)
         BALR  14,15
         B     @@L820
@@L825   EQU   *
         ST    9,88(13)
         ST    4,92(13)
         MVC   96(4,13),8(11)
         ST    7,100(13)
         MVC   104(4,13),16(11)
         ST    8,108(13)
         MVC   112(4,13),=A(@@LC564)
         MVC   116(4,13),0(3)
         LA    1,88(,13)
         L     15,=A(@@39)
         BALR  14,15
         LR    4,15
         B     @@L802
@@L824   EQU   *
         ST    9,88(13)
         ST    4,92(13)
         MVC   96(4,13),8(11)
         ST    7,100(13)
         MVC   104(4,13),16(11)
         ST    8,108(13)
         MVC   112(4,13),=A(@@LC563)
         MVC   116(4,13),0(3)
         LA    1,88(,13)
         L     15,=A(@@39)
         BALR  14,15
         LR    4,15
         B     @@L796
@@L823   EQU   *
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC560)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L785
         L     2,4(3)
         LTR   2,2
         BE    @@L782
         A     3,=F'4'
         B     @@L782
@@L785   EQU   *
         MVC   88(4,13),0(3)
         MVC   92(4,13),=A(@@LC561)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L782
         MVC   88(4,13),0(3)
         MVC   92(4,13),=A(@@LC542)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L782
         L     2,0(3)
         CLI   1(2),132
         BE    @@L782
         ST    9,88(13)
         ST    4,92(13)
         MVC   96(4,13),8(11)
         ST    7,100(13)
         MVC   104(4,13),16(11)
         ST    8,108(13)
         MVC   112(4,13),0(3)
         MVC   116(4,13),=A(@@LC32)
         LA    1,88(,13)
         L     15,=A(@@39)
         BALR  14,15
         LR    4,15
         B     @@L782
@@L820   EQU   *
         ST    9,88(13)
         MVC   92(4,13),=A(@@LC557)
         ST    8,96(13)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
* Function print_switch_values epilogue
         PDPEPIL
* Function print_switch_values literal pool
         DS    0F
         LTORG
* Function print_switch_values page table
         DS    0F
@@PGT39  EQU   *
         DC    A(@@PG39)
@@LC567  EQU   *
         DC    C'-'
         DC    X'0'
@@LC570  EQU   *
         DC    X'5'
         DC    C'COPY'
         DC    X'5'
         DC    C'PDPTOP'
         DC    X'15'
         DC    X'0'
@@LC571  EQU   *
         DC    C'%s'
         DC    X'5'
         DC    C'CSECT'
         DC    X'15'
         DC    X'0'
@@LC572  EQU   *
         DC    C'*'
         DC    X'0'
@@LC573  EQU   *
         DC    X'15'
         DC    X'0'
@@LC574  EQU   *
         DC    C'%s'
         DC    X'15'
         DC    X'0'
@@LC569  EQU   *
         DC    C'/tmp'
         DC    X'0'
@@LC568  EQU   *
         DC    C'can''t open %s for writing'
         DC    X'0'
@@LC566  EQU   *
         DC    C'.s'
         DC    X'0'
         DS    0F
* S-func init_asm_output prologue
@@41     PDPPRLG CINDEX=40,FRAME=368,BASER=12,ENTRY=NO
         B     @@FEN40
         LTORG
@@FEN40  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG40   EQU   *
         LR    11,1
         L     10,=A(@@PGT40)
* Function init_asm_output code
         L     2,0(11)
         LTR   2,2
         BE    @@L860
@@L827   EQU   *
         L     3,=A(ASM@FILE)
         L     2,0(3)
         LTR   2,2
         BE    @@L861
@@L829   EQU   *
         L     3,=A(ASM@FILE)
         MVC   88(4,13),0(3)
         MVC   92(4,13),=A(@@LC567)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L830
         LA    1,88(,13)
         L     15,=V(@@GTOUT)
         BALR  14,15
         L     2,=A(ASM@OUT@)
         MVC   0(4,2),0(15)
@@L831   EQU   *
         L     2,=A(ASM@OUT@)
         L     2,0(2)
         LTR   2,2
         BE    @@L862
@@L828   EQU   *
         L     2,=A(FLAG@SYN)
         L     2,0(2)
         LTR   2,2
         BNE   @@L826
         L     2,=A(ASM@FILE)
         L     3,0(2)
         LTR   3,3
         BNE   @@L863
@@L834   EQU   *
         L     2,=A(MAIN@INP)
@@L859   EQU   *
         L     2,0(2)
         ST    2,88(13)
         MVC   92(4,13),=F'97'
         LA    1,88(,13)
         L     15,=V(STRRCHR)
         BALR  14,15
         LTR   15,15
         BE    @@L864
         A     15,=F'1'
@@L839   EQU   *
         CLI   0(15),109
         BE    @@L843
@@L856   EQU   *
         LA    6,112(,13)
         ST    6,88(13)
         ST    15,92(13)
         LA    1,88(,13)
         L     15,=V(STRCPY)
         BALR  14,15
         ST    6,88(13)
         MVC   92(4,13),=F'75'
         LA    1,88(,13)
         L     15,=V(STRCHR)
         BALR  14,15
         LTR   15,15
         BE    @@L844
         MVI   0(15),0
@@L844   EQU   *
         ST    6,88(13)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LA    3,7(0,0)
         CLR   15,3
         BNH   @@L845
         MVI   119(13),0
@@L845   EQU   *
         LR    15,6
         IC    2,0(6)
         CLM   2,1,=XL1'00'
         BE    @@L858
@@L852   EQU   *
         IC    5,0(15)
         LR    4,5
         N     4,=XL4'000000FF'
         LR    3,4
         MH    3,=H'2'
         L     2,=V(@SCH@IST)
         LH    2,0(3,2)
         N     2,=F'8'
         CH    2,=H'0'
         BE    @@L850
         L     2,=V(@SCH@TOU)
         IC    3,0(2,4)
@@L851   EQU   *
         STC   3,0(15)
         A     15,=F'1'
         IC    2,0(15)
         CLM   2,1,=XL1'00'
         BNE   @@L852
@@L858   EQU   *
         ST    6,88(13)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         A     15,=F'2'
         ST    15,88(13)
         LA    1,88(,13)
         L     15,=V(XMALLOC)
         BALR  14,15
         L     2,=V(MVS@MODU)
         ST    15,0(2)
         ST    15,88(13)
         ST    6,92(13)
         LA    1,88(,13)
         L     15,=V(STRCPY)
         BALR  14,15
         L     3,=A(ASM@OUT@)
         MVC   88(4,13),0(3)
         MVC   92(4,13),=A(@@LC570)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
         MVC   88(4,13),0(3)
         MVC   92(4,13),=A(@@LC571)
         L     2,=V(MVS@CSEC)
         L     2,0(2)
         LTR   2,2
         BNE   @@L853
         L     2,=A(@@LC32)
@@L853   EQU   *
         ST    2,96(13)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
         L     2,=A(FLAG@VER)
         L     2,0(2)
         LTR   2,2
         BE    @@L826
         MVC   88(4,13),0(3)
         MVC   92(4,13),=A(@@LC572)
         LA    1,88(,13)
         L     15,=A(@@35)
         BALR  14,15
         MVC   88(4,13),0(3)
         MVC   92(4,13),=F'0'
         MVC   96(4,13),=F'72'
         MVC   100(4,13),=A(@@LC572)
         MVC   104(4,13),=A(@@LC554)
         MVC   108(4,13),=A(@@LC573)
         LA    1,88(,13)
         L     15,=A(@@40)
         BALR  14,15
         MVC   88(4,13),0(3)
         MVC   92(4,13),=A(@@LC574)
         MVC   96(4,13),=A(@@LC572)
         LA    1,88(,13)
         L     15,=V(T@FPRINT)
         BALR  14,15
         B     @@L826
@@L850   EQU   *
         LR    3,5
         B     @@L851
@@L843   EQU   *
         A     15,=F'1'
         CLI   0(15),109
         BE    @@L843
         B     @@L856
@@L864   EQU   *
         LR    15,2
         B     @@L839
@@L863   EQU   *
         ST    3,88(13)
         MVC   92(4,13),=A(@@LC569)
         MVC   96(4,13),=F'4'
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L859
         B     @@L834
@@L862   EQU   *
         MVC   88(4,13),=A(@@LC568)
         L     2,=A(ASM@FILE)
         MVC   92(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FATAL@IO)
         BALR  14,15
         B     @@L828
@@L830   EQU   *
         L     2,=A(ASM@FILE)
         MVC   88(4,13),0(2)
         MVC   92(4,13),=A(@@LC448)
         LA    1,88(,13)
         L     15,=V(FOPEN)
         BALR  14,15
         L     2,=A(ASM@OUT@)
         ST    15,0(2)
         B     @@L831
@@L861   EQU   *
         L     5,=A(DUMP@BAS)
         MVC   88(4,13),0(5)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         LR    2,15
         A     2,=F'6'
         ST    2,88(13)
         A     2,=F'-6'
         LA    1,88(,13)
         L     15,=V(XMALLOC)
         BALR  14,15
         LR    3,15
         LR    4,2
         A     4,=F'1'
         LR    8,15
         LR    9,4
         L     6,0(5)
         LR    7,4
         MVCL  8,6
         ST    15,88(13)
         ST    2,92(13)
         LA    1,88(,13)
         L     15,=A(STRIP@OF)
         BALR  14,15
         ST    3,88(13)
         MVC   92(4,13),=A(@@LC566)
         LA    1,88(,13)
         L     15,=V(STRCAT)
         BALR  14,15
         L     2,=A(ASM@FILE)
         ST    3,0(2)
         B     @@L829
@@L860   EQU   *
         L     2,=A(ASM@FILE)
         L     2,0(2)
         LTR   2,2
         BNE   @@L827
         LA    1,88(,13)
         L     15,=V(@@GTOUT)
         BALR  14,15
         L     2,=A(ASM@OUT@)
         MVC   0(4,2),0(15)
         B     @@L828
@@L826   EQU   *
* Function init_asm_output epilogue
         PDPEPIL
* Function init_asm_output literal pool
         DS    0F
         LTORG
* Function init_asm_output page table
         DS    0F
@@PGT40  EQU   *
         DC    A(@@PG40)
         DS    0F
* S-func general_init prologue
@@42     PDPPRLG CINDEX=41,FRAME=96,BASER=12,ENTRY=NO
         B     @@FEN41
         LTORG
@@FEN41  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG41   EQU   *
         LR    11,1
         L     10,=A(@@PGT41)
* Function general_init code
         L     3,0(11)
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         AR    15,3
         CLR   15,3
         BE    @@L867
         L     4,=F'-1'
         IC    2,0(4,15)
         CLM   2,1,=XL1'61'
         BE    @@L867
@@L870   EQU   *
         BCTR  15,0
         CLR   15,3
         BE    @@L867
         IC    2,0(4,15)
         CLM   2,1,=XL1'61'
         BNE   @@L870
@@L867   EQU   *
         L     2,=A(PROGNAME)
         ST    15,0(2)
         ST    15,88(13)
         LA    1,88(,13)
         L     15,=V(XMALSPGN)
         BALR  14,15
         L     2,=V(GLOBAL@D)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(DIAGINIT)
         BALR  14,15
* Function general_init epilogue
         PDPEPIL
* Function general_init literal pool
         DS    0F
         LTORG
* Function general_init page table
         DS    0F
@@PGT41  EQU   *
         DC    A(@@PG41)
@@LC578  EQU   *
         DC    C'-Wuninitialized is not supported without -O'
         DC    X'0'
@@LC576  EQU   *
         DC    C'ignoring command line option ''%s'''
         DC    X'0'
@@LC577  EQU   *
         DC    C'(it is valid for %s but not the selected languag'
         DC    C'e)'
         DC    X'0'
@@LC538  EQU   *
         DC    C'`%s'': unknown or unsupported -g option'
         DC    X'0'
@@LC575  EQU   *
         DC    C'-O'
         DC    X'0'
         DS    0F
* S-func parse_options_and_default_flags prologue
@@43     PDPPRLG CINDEX=42,FRAME=104,BASER=12,ENTRY=NO
         B     @@FEN42
         LTORG
@@FEN42  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG42   EQU   *
         LR    11,1
         L     10,=A(@@PGT42)
* Function parse_options_and_default_flags code
         L     9,4(11)
         L     2,=A(SAVAC)
         MVC   0(4,2),0(11)
         L     2,=A(SAVAV)
         ST    9,0(2)
         LA    1,88(,13)
         L     15,=V(INREGSET)
         BALR  14,15
         MVC   88(4,13),=A(@@3)
         MVC   92(4,13),=F'6'
         LA    1,88(,13)
         L     15,=V(ADD@PARA)
         BALR  14,15
         L     2,=V(LANG@HOO)
         L     2,8(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         LA    5,1(0,0)
         C     5,0(11)
         BL    @@L883
@@L921   EQU   *
         L     2,=A(OPTZE)
         L     3,0(2)
         LTR   3,3
         BNE   @@L884
         L     2,=A(FLAG@MER)
         ST    3,0(2)
@@L884   EQU   *
         LTR   3,3
         BNH   @@L885
         L     2,=A(FLAG@DEF)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@THR)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@GUE)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@CPR)
         MVC   0(4,2),=F'1'
@@L885   EQU   *
         LA    2,1(0,0)
         CR    3,2
         BNH   @@L886
         L     2,=A(FLAG@OPT)
         MVC   0(4,2),=F'1'
         L     2,=A(FCFJUMP)
         MVC   0(4,2),=F'1'
         L     2,=A(FCSKIP)
         MVC   0(4,2),=F'1'
         L     2,=A(@@5)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@EXP)
         MVC   0(4,2),=F'1'
         L     2,=A(FSREDUCE)
         MVC   0(4,2),=F'1'
         L     2,=A(@@6)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@RER)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@CAL)
         MVC   0(4,2),=F'1'
         L     2,=A(FFMEM)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@PEE)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@REG)
         MVC   0(4,2),=F'1'
         L     2,=A(FSTRALIA)
         MVC   0(4,2),=F'1'
         L     2,=A(@@7)
         MVC   0(4,2),=F'1'
         L     2,=A(FLAG@REO)
         MVC   0(4,2),=F'1'
@@L886   EQU   *
         LA    4,2(0,0)
         CR    3,4
         BNH   @@L887
         L     2,=A(FLINFNCS)
         MVC   0(4,2),=F'1'
         L     2,=A(FRENREG)
         MVC   0(4,2),=F'1'
@@L887   EQU   *
         LA    2,1(0,0)
         CR    3,2
         BNH   @@L889
         L     2,=A(OPTZSZ)
         L     2,0(2)
         LTR   2,2
         BE    @@L888
@@L889   EQU   *
         L     2,=A(ALLOOP)
         MVC   0(4,2),=F'1'
         L     2,=A(ALJUMP)
         MVC   0(4,2),=F'1'
         L     2,=A(ALLAB)
         MVC   0(4,2),=F'1'
         L     2,=A(ALFUNCS)
         MVC   0(4,2),=F'1'
@@L888   EQU   *
         L     2,=A(FLSCHR)
         MVC   0(4,2),=F'0'
         L     2,=V(TARGET@F)
         MVC   0(4,2),=F'0'
         MVC   88(4,13),=A(@@LC32)
         LA    1,88(,13)
         L     15,=A(@@36)
         BALR  14,15
         LA    5,1(0,0)
         C     5,0(11)
         BL    @@L914
@@L923   EQU   *
         L     2,=A(FNOINL)
         L     3,0(2)
         LA    4,2(0,0)
         CLR   3,4
         BE    @@L926
         L     2,=A(FLAG@REA)
         ST    3,0(2)
@@L916   EQU   *
         L     2,=A(OPTZE)
         L     3,0(2)
         LTR   3,3
         BNE   @@L917
         L     2,=A(FNOINL)
         MVC   0(4,2),=F'1'
         L     2,=A(WARN@INL)
         ST    3,0(2)
         L     2,=A(WARN@UNI)
         L     2,0(2)
         LA    3,1(0,0)
         CLR   2,3
         BE    @@L927
@@L917   EQU   *
         L     3,=A(FLAG@REA)
         L     2,0(3)
         LA    4,2(0,0)
         CLR   2,4
         BNE   @@L919
         L     2,=A(FNOINL)
         MVC   0(4,3),0(2)
         B     @@L919
@@L927   EQU   *
         MVC   88(4,13),=A(@@LC578)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         B     @@L917
@@L926   EQU   *
         MVC   0(4,2),=F'0'
         B     @@L916
@@L914   EQU   *
         L     4,0(11)
         SR    4,5
         ST    4,88(13)
         LR    8,5
         MH    8,=H'4'
         LR    3,9
         AR    3,8
         ST    3,92(13)
         L     2,=V(LANG@HOO)
         L     2,12(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         LR    2,15
         LTR   15,15
         BL    @@L894
         ST    4,88(13)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=A(@@33)
         BALR  14,15
@@L895   EQU   *
         LTR   2,2
         BNE   @@L897
         LR    7,2
         LR    4,2
         L     6,=A(@@8+4)
         LTR   15,15
         BE    @@L907
@@L897   EQU   *
         CR    15,2
         BNL   @@L898
         LR    15,2
@@L898   EQU   *
         AR    5,15
@@L890   EQU   *
         C     5,0(11)
         BL    @@L914
         B     @@L923
@@L907   EQU   *
         LR    3,4
         MH    3,=H'8'
         L     2,=A(@@8)
         L     2,0(3,2)
         LTR   2,2
         BE    @@L928
         ST    2,88(13)
         LA    1,88(,13)
         L     15,=V(STRLEN)
         BALR  14,15
         L     3,0(8,9)
         ST    3,88(13)
         ST    2,92(13)
         ST    15,96(13)
         LA    1,88(,13)
         L     15,=V(STRNCMP)
         BALR  14,15
         LTR   15,15
         BE    @@L901
@@L902   EQU   *
         A     6,=F'8'
         A     4,=F'1'
         LA    2,107(0,0)
         CLR   4,2
         BNH   @@L907
@@L901   EQU   *
         LA    3,108(0,0)
         CLR   4,3
         BE    @@L908
         L     2,=A(EXTRA@WA)
         L     2,0(2)
         LTR   2,2
         BNE   @@L929
@@L911   EQU   *
         A     5,=F'1'
         B     @@L890
@@L929   EQU   *
         MVC   88(4,13),=A(@@LC576)
         LR    2,5
         MH    2,=H'4'
         L     2,0(2,9)
         ST    2,92(13)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         LTR   7,7
         BE    @@L911
         MVC   88(4,13),=A(@@LC577)
         ST    7,92(13)
@@L925   EQU   *
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         B     @@L911
@@L908   EQU   *
         LR    3,5
         MH    3,=H'4'
         L     2,0(3,9)
         CLI   0(2),96
         BE    @@L930
@@L912   EQU   *
         MVC   88(4,13),=A(@@LC519)
         L     3,0(3,9)
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=V(ERROR)
         BALR  14,15
         B     @@L911
@@L930   EQU   *
         CLI   1(2),135
         BNE   @@L912
         MVC   88(4,13),=A(@@LC538)
         A     2,=F'2'
         ST    2,92(13)
         B     @@L925
@@L928   EQU   *
         L     7,0(6)
         B     @@L902
@@L894   EQU   *
         LCR   2,15
         SLR   15,15
         B     @@L895
@@L883   EQU   *
         LR    2,5
         MH    2,=H'4'
         L     3,0(2,9)
         ST    3,88(13)
         MVC   92(4,13),=A(@@LC575)
         LA    1,88(,13)
         L     15,=V(STRCMP)
         BALR  14,15
         LTR   15,15
         BNE   @@L877
         L     2,=A(OPTZE)
         MVC   0(4,2),=F'1'
         L     2,=A(OPTZSZ)
         ST    15,0(2)
@@L875   EQU   *
         A     5,=F'1'
         C     5,0(11)
         BL    @@L883
         B     @@L921
@@L877   EQU   *
         L     2,0(2,9)
         CLI   0(2),96
         BNE   @@L875
         CLI   1(2),214
         BNE   @@L875
         LR    3,2
         A     3,=F'2'
         CLI   0(3),162
         BE    @@L931
@@L880   EQU   *
         ST    3,88(13)
         A     3,=F'-2'
         ST    3,92(13)
         MVC   96(4,13),=F'-1'
         LA    1,88(,13)
         L     15,=A(READ@INT)
         BALR  14,15
         L     4,=F'-1'
         CLR   15,4
         BE    @@L875
         L     2,=A(OPTZE)
         ST    15,0(2)
         L     2,=A(OPTZSZ)
         MVC   0(4,2),=F'0'
         B     @@L875
@@L931   EQU   *
         IC    2,1(3)
         CLM   2,1,=XL1'00'
         BNE   @@L880
         L     2,=A(OPTZSZ)
         MVC   0(4,2),=F'1'
         L     2,=A(OPTZE)
         MVC   0(4,2),=F'2'
         B     @@L875
@@L919   EQU   *
         L     2,=V(LANG@HOO)
         L     2,16(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
* Function parse_options_and_default_flags epilogue
         PDPEPIL
* Function parse_options_and_default_flags literal pool
         DS    0F
         LTORG
* Function parse_options_and_default_flags page table
         DS    0F
@@PGT42  EQU   *
         DC    A(@@PG42)
@@LC579  EQU   *
         DC    C'instruction scheduling not supported on this tar'
         DC    C'get machine'
         DC    X'0'
@@LC583  EQU   *
         DC    C'-f%sleading-underscore not supported on this tar'
         DC    C'get machine'
         DC    X'0'
@@LC584  EQU   *
         DC    C'no-'
         DC    X'0'
@@LC590  EQU   *
         DC    C'-ffunction-sections may affect debugging on some'
         DC    C' targets'
         DC    X'0'
@@LC589  EQU   *
         DC    C'-fprefetch-loop-arrays is not supported with -Os'
         DC    X'0'
@@LC588  EQU   *
         DC    C'-fprefetch-loop-arrays not supported for this ta'
         DC    C'rget'
         DC    X'0'
@@LC587  EQU   *
         DC    C'-ffunction-sections disabled; it makes profiling'
         DC    C' impossible'
         DC    X'0'
@@LC586  EQU   *
         DC    C'-fdata-sections not supported for this target'
         DC    X'0'
@@LC585  EQU   *
         DC    C'-ffunction-sections not supported for this targe'
         DC    C't'
         DC    X'0'
@@LC582  EQU   *
         DC    C'_'
         DC    X'0'
@@LC580  EQU   *
         DC    C'this target machine does not have delayed branch'
         DC    C'es'
         DC    X'0'
         DS    0F
* S-func process_options prologue
@@44     PDPPRLG CINDEX=43,FRAME=112,BASER=12,ENTRY=NO
         B     @@FEN43
         LTORG
@@FEN43  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG43   EQU   *
         LR    11,1
         L     10,=A(@@PGT43)
* Function process_options code
         LA    1,88(,13)
         L     15,=V(I370@OVE)
         BALR  14,15
         L     15,=A(ALLOOP)
         L     2,0(15)
         LTR   2,2
         L     14,=A(@@L973)
         BNHR  14
@@L933   EQU   *
         L     12,0(,10)
         L     3,=A(ALLOPMS)
         L     2,0(3)
         L     15,0(15)
         CR    2,15
         BH    @@L935
         LTR   15,15
         BNE   @@L934
@@L935   EQU   *
         LR    2,15
         BCTR  2,0
         ST    2,0(3)
@@L934   EQU   *
         L     2,=A(ALLOOP)
         L     2,0(2)
         SLL   2,1
         BCTR  2,0
         ST    2,88(13)
         LA    1,88(,13)
         L     15,=A(FLOOR@LO)
         BALR  14,15
         L     2,=A(ALLOPL)
         ST    15,0(2)
         L     15,=A(ALJUMP)
         L     2,0(15)
         LTR   2,2
         BNH   @@L974
@@L936   EQU   *
         L     3,=A(ALJMPMS)
         L     2,0(3)
         L     15,0(15)
         CR    2,15
         BH    @@L938
         LTR   15,15
         BNE   @@L937
@@L938   EQU   *
         LR    2,15
         BCTR  2,0
         ST    2,0(3)
@@L937   EQU   *
         L     2,=A(ALJUMP)
         L     2,0(2)
         SLL   2,1
         BCTR  2,0
         ST    2,88(13)
         LA    1,88(,13)
         L     15,=A(FLOOR@LO)
         BALR  14,15
         L     2,=A(ALJMPL)
         ST    15,0(2)
         L     3,=A(ALLAB)
         L     2,0(3)
         LTR   2,2
         BNH   @@L975
@@L939   EQU   *
         L     2,0(3)
         SLL   2,1
         BCTR  2,0
         ST    2,88(13)
         LA    1,88(,13)
         L     15,=A(FLOOR@LO)
         BALR  14,15
         L     2,=A(ALLABL)
         ST    15,0(2)
         L     4,=A(ALLABMS)
         L     2,0(4)
         L     15,0(3)
         CR    2,15
         BH    @@L941
         LTR   15,15
         BNE   @@L940
@@L941   EQU   *
         LR    2,15
         BCTR  2,0
         ST    2,0(4)
@@L940   EQU   *
         L     15,=A(ALFUNCS)
         L     2,0(15)
         LTR   2,2
         BNH   @@L976
@@L942   EQU   *
         L     2,0(15)
         SLL   2,1
         BCTR  2,0
         ST    2,88(13)
         LA    1,88(,13)
         L     15,=A(FLOOR@LO)
         BALR  14,15
         L     2,=A(ALFUNLOG)
         ST    15,0(2)
         L     2,=A(FUNRALOO)
         L     2,0(2)
         LTR   2,2
         BE    @@L943
         L     2,=A(FUNRLOOP)
         MVC   0(4,2),=F'1'
@@L943   EQU   *
         L     2,=A(FUNRLOOP)
         L     2,0(2)
         LTR   2,2
         BE    @@L944
         L     2,=A(FSREDUCE)
         MVC   0(4,2),=F'1'
         L     2,=A(@@6)
         MVC   0(4,2),=F'1'
@@L944   EQU   *
         L     2,=V(FLNCALXC)
         L     2,0(2)
         LTR   2,2
         BE    @@L945
         L     2,=A(FLAG@ASY)
         MVC   0(4,2),=F'1'
@@L945   EQU   *
         L     2,=A(FLAG@ASY)
         L     2,0(2)
         LTR   2,2
         BE    @@L946
         L     2,=A(FLAG@UNW)
         MVC   0(4,2),=F'1'
@@L946   EQU   *
         L     2,=A(FSINSN)
         L     2,0(2)
         LTR   2,2
         BNE   @@L948
         L     2,=A(FSCIAR)
         L     2,0(2)
         LTR   2,2
         BE    @@L947
@@L948   EQU   *
         MVC   88(4,13),=A(@@LC579)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
@@L947   EQU   *
         L     2,=A(FLAG@DEL)
         L     2,0(2)
         LTR   2,2
         BNE   @@L977
@@L950   EQU   *
         L     4,=A(USER@LAB)
         MVC   0(4,4),=A(@@LC32)
         L     2,=A(FLAG@LEA)
         L     15,0(2)
         L     2,=F'-1'
         CLR   15,2
         BE    @@L951
         L     3,=A(@@LC32)
         IC    2,0(3)
         CLM   2,1,=XL1'00'
         BE    @@L953
         CLM   2,1,=XL1'6D'
         BE    @@L978
@@L952   EQU   *
         MVC   88(4,13),=A(@@LC583)
         L     2,=A(FLAG@LEA)
         L     2,0(2)
         L     3,=A(@@LC32)
         LTR   2,2
         BNE   @@L958
         L     3,=A(@@LC584)
@@L958   EQU   *
         ST    3,92(13)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
@@L951   EQU   *
         L     2,=A(@@37)
         L     2,0(2)
         LTR   2,2
         BNE   @@L979
@@L959   EQU   *
         L     2,=A(QUIET@FL)
         L     2,0(2)
         LTR   2,2
         BE    @@L962
         L     2,=A(FLAG@DET)
         L     2,0(2)
         LTR   2,2
         BE    @@L961
@@L962   EQU   *
         L     2,=A(TIME@REP)
         MVC   0(4,2),=F'1'
@@L961   EQU   *
         L     2,=A(FLAG@SYN)
         L     2,0(2)
         LTR   2,2
         BE    @@L963
         L     2,=A(WRITE@SY)
         MVC   0(4,2),=F'0'
         L     2,=A(PROFFLAG)
         MVC   0(4,2),=F'0'
@@L963   EQU   *
         L     2,=A(FLAG@GEN)
         L     2,0(2)
         LTR   2,2
         BNE   @@L980
@@L964   EQU   *
         L     2,=V(TARGETM)
         IC    2,164(2)
         CLM   2,1,=XL1'00'
         BNE   @@L966
         L     3,=A(FLAG@FUN)
         L     2,0(3)
         LTR   2,2
         BNE   @@L981
@@L967   EQU   *
         L     3,=A(FLAG@DAT)
         L     2,0(3)
         LTR   2,2
         BNE   @@L982
@@L966   EQU   *
         L     3,=A(FLAG@FUN)
         L     2,0(3)
         LTR   2,2
         BE    @@L969
         L     2,=A(PROFFLAG)
         L     2,0(2)
         LTR   2,2
         BNE   @@L983
@@L969   EQU   *
         L     3,=A(FPREFL)
         L     2,0(3)
         LTR   2,2
         BNE   @@L984
@@L970   EQU   *
         L     2,0(3)
         LTR   2,2
         BE    @@L971
         L     2,=A(OPTZSZ)
         L     2,0(2)
         LTR   2,2
         BNE   @@L985
@@L971   EQU   *
         L     2,=A(FLAG@FUN)
         L     2,0(2)
         LTR   2,2
         BE    @@L932
         L     2,=A(WRITE@SY)
         L     2,0(2)
         LTR   2,2
         BE    @@L932
         MVC   88(4,13),=A(@@LC590)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         B     @@L932
@@L985   EQU   *
         MVC   88(4,13),=A(@@LC589)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         MVC   0(4,3),=F'0'
         B     @@L971
@@L984   EQU   *
         MVC   88(4,13),=A(@@LC588)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         MVC   0(4,3),=F'0'
         B     @@L970
@@L983   EQU   *
         MVC   88(4,13),=A(@@LC587)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         MVC   0(4,3),=F'0'
         B     @@L969
@@L982   EQU   *
         MVC   88(4,13),=A(@@LC586)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         MVC   0(4,3),=F'0'
         B     @@L966
@@L981   EQU   *
         MVC   88(4,13),=A(@@LC585)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         MVC   0(4,3),=F'0'
         B     @@L967
@@L980   EQU   *
         L     3,=A(@@38)
         MVC   88(4,13),0(3)
         MVC   92(4,13),=A(@@LC448)
         LA    1,88(,13)
         L     15,=V(FOPEN)
         BALR  14,15
         L     2,=A(AUX@INFO)
         ST    15,0(2)
         LTR   15,15
         BNE   @@L964
         MVC   88(4,13),=A(@@LC450)
         MVC   92(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(FATAL@IO)
         BALR  14,15
         B     @@L964
@@L979   EQU   *
         LA    1,88(,13)
         L     15,=V(@@GTERR)
         BALR  14,15
         MVC   88(4,13),0(15)
         MVC   92(4,13),=A(@@LC32)
         LA    1,88(,13)
         L     15,=A(@@35)
         BALR  14,15
         L     2,=A(QUIET@FL)
         L     2,0(2)
         LTR   2,2
         BNE   @@L959
         LA    1,88(,13)
         L     15,=V(@@GTERR)
         BALR  14,15
         MVC   88(4,13),0(15)
         ST    2,92(13)
         MVC   96(4,13),=F'72'
         MVC   100(4,13),=A(@@LC32)
         MVC   104(4,13),=A(@@LC554)
         MVC   108(4,13),=A(@@LC573)
         LA    1,88(,13)
         L     15,=A(@@40)
         BALR  14,15
         B     @@L959
@@L978   EQU   *
         IC    2,1(3)
         CLM   2,1,=XL1'00'
         BNE   @@L952
@@L953   EQU   *
         L     2,=A(@@LC582)
         LTR   15,15
         BNE   @@L955
         LR    2,3
@@L955   EQU   *
         ST    2,0(4)
         B     @@L951
@@L977   EQU   *
         MVC   88(4,13),=A(@@LC580)
         LA    1,88(,13)
         L     15,=V(WARNING)
         BALR  14,15
         B     @@L950
@@L976   EQU   *
         MVC   0(4,15),=F'1'
         B     @@L942
@@L975   EQU   *
         MVC   0(4,3),=F'1'
         B     @@L939
@@L974   EQU   *
         MVC   0(4,15),=F'1'
         B     @@L936
@@L973   EQU   *
         MVC   0(4,15),=F'1'
         B     @@L933
@@L932   EQU   *
* Function process_options epilogue
         PDPEPIL
* Function process_options literal pool
         DS    0F
         LTORG
* Function process_options page table
         DS    0F
@@PGT43  EQU   *
         DC    A(@@PG43)
         DS    0F
* S-func lang_independent_init prologue
@@45     PDPPRLG CINDEX=44,FRAME=96,BASER=12,ENTRY=NO
         B     @@FEN44
         LTORG
@@FEN44  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG44   EQU   *
         LR    11,1
         L     10,=A(@@PGT44)
* Function lang_independent_init code
         L     2,=A(DECL@PRI)
         MVC   0(4,2),=A(@@12)
         L     2,=A(LEEXPR)
         MVC   0(4,2),=A(DO@ABORT)
         L     2,=V(LANG@HOO)
         L     2,4(2)
         A     2,=F'-9'
         SRL   2,2
         L     3,=V(TCODLEN)
         ST    2,4(3)
         LA    1,88(,13)
         L     15,=V(INIT@GGC)
         BALR  14,15
         MVC   88(4,13),=A(STACK@LI)
         MVC   92(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(GARTXROO)
         BALR  14,15
         MVC   88(4,13),=A(CF@DECL)
         MVC   92(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(GATREER)
         BALR  14,15
         MVC   88(4,13),=A(CFFBL)
         MVC   92(4,13),=F'1'
         LA    1,88(,13)
         L     15,=V(GATREER)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@STR)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@OBS)
         BALR  14,15
         SLR   3,3
         L     2,=A(DEBUG@IN)
         L     2,0(2)
         A     2,=F'-2'
         LA    4,1(0,0)
         CLR   2,4
         BNH   @@L988
         L     2,=A(FLAG@TES)
         L     2,0(2)
         LTR   2,2
         BNE   @@L988
         L     2,=A(WARN@NOT)
         L     2,0(2)
         LTR   2,2
         BE    @@L987
@@L988   EQU   *
         LA    3,1(0,0)
@@L987   EQU   *
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(INIEMONC)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INREGS)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(IA@ONCE)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(ISTMT)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@LOO)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@REL)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(IFUNCONC)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@STO)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(IVARONCE)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(I@EX@CAC)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@DUM)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@EXP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INITEONC)
         BALR  14,15
         L     2,=A(FLAG@CAL)
         L     2,0(2)
         LTR   2,2
         BE    @@L989
         LA    1,88(,13)
         L     15,=V(INIT@CAL)
         BALR  14,15
@@L989   EQU   *
         LA    1,88(,13)
         L     15,=V(EXPAND@D)
         BALR  14,15
* Function lang_independent_init epilogue
         PDPEPIL
* Function lang_independent_init literal pool
         DS    0F
         LTORG
* Function lang_independent_init page table
         DS    0F
@@PGT44  EQU   *
         DC    A(@@PG44)
@@LC591  EQU   *
         DC    C'gccdump'
         DC    X'0'
         DS    0F
* S-func lang_dependent_init prologue
@@46     PDPPRLG CINDEX=45,FRAME=96,BASER=12,ENTRY=NO
         B     @@FEN45
         LTORG
@@FEN45  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG45   EQU   *
         LR    11,1
         L     10,=A(@@PGT45)
* Function lang_dependent_init code
         L     4,0(11)
         L     3,=A(DUMP@BAS)
         L     2,0(3)
         LTR   2,2
         BNE   @@L991
         LR    2,4
         LTR   4,4
         BE    @@L994
@@L992   EQU   *
         ST    2,0(3)
@@L991   EQU   *
         ST    4,88(13)
         L     2,=V(LANG@HOO)
         L     2,20(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         LTR   15,15
         BE    @@L990
         ST    15,88(13)
         MVC   92(4,13),=F'-1'
         LA    1,88(,13)
         L     15,=V(G@ALLSTR)
         BALR  14,15
         LR    4,15
         L     3,=A(INPFNAME)
         ST    15,0(3)
         L     2,=A(MAIN@INP)
         ST    15,0(2)
         ST    15,88(13)
         LA    1,88(,13)
         L     15,=A(@@41)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@EH)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@OPT)
         BALR  14,15
         MVC   88(4,13),0(3)
         MVC   92(4,13),=F'0'
         LA    1,88(,13)
         L     15,=A(PUSH@SRC)
         BALR  14,15
         MVC   88(4,13),=F'43'
         LA    1,88(,13)
         L     15,=V(TVPUSH)
         BALR  14,15
         L     2,=A(DEBUG@HO)
         L     2,0(2)
         ST    4,88(13)
         L     2,0(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
         MVC   88(4,13),=F'43'
         LA    1,88(,13)
         L     15,=V(TVPOP)
         BALR  14,15
         LA    15,1(0,0)
         B     @@L990
@@L994   EQU   *
         L     2,=A(@@LC591)
         B     @@L992
@@L990   EQU   *
* Function lang_dependent_init epilogue
         PDPEPIL
* Function lang_dependent_init literal pool
         DS    0F
         LTORG
* Function lang_dependent_init page table
         DS    0F
@@PGT45  EQU   *
         DC    A(@@PG45)
@@LC593  EQU   *
         DC    C'error closing %s'
         DC    X'0'
@@LC592  EQU   *
         DC    C'error writing to %s'
         DC    X'0'
         DS    0F
* S-func finalize prologue
@@47     PDPPRLG CINDEX=46,FRAME=120,BASER=12,ENTRY=NO
         B     @@FEN46
         LTORG
@@FEN46  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG46   EQU   *
         LR    11,1
         L     10,=A(@@PGT46)
* Function finalize code
         L     2,=A(FLAG@GEN)
         L     2,0(2)
         LTR   2,2
         BNE   @@L1010
@@L996   EQU   *
         L     3,=A(ASM@OUT@)
         L     2,0(3)
         LTR   2,2
         BE    @@L998
         L     2,104(2)
         LTR   2,2
         BNE   @@L1011
@@L999   EQU   *
         MVC   88(4,13),0(3)
         LA    1,88(,13)
         L     15,=V(FCLOSE)
         BALR  14,15
         LTR   15,15
         BNE   @@L1012
@@L998   EQU   *
         L     2,=A(GRAPH@DU)
         L     2,0(2)
         LTR   2,2
         BE    @@L1001
         SLR   5,5
@@L1007  EQU   *
         L     4,=A(@@0)
         LR    3,5
         MH    3,=H'8'
         IC    2,7(3,4)
         CLM   2,1,=XL1'00'
         BE    @@L1004
         IC    2,5(3,4)
         CLM   2,1,=XL1'00'
         BNE   @@L1013
@@L1004  EQU   *
         A     5,=F'1'
         LA    2,31(0,0)
         CR    5,2
         BNH   @@L1007
@@L1001  EQU   *
         L     2,=A(MEM@REPO)
         L     2,0(2)
         LTR   2,2
         BE    @@L1008
         LA    1,88(,13)
         L     15,=V(G@PRSTAT)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(STRINGPO)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(DUMP@TRE)
         BALR  14,15
         B     @@L1008
@@L1013  EQU   *
         LA    2,104(,13)
         ST    2,88(13)
         MVC   92(4,13),=A(@@LC447)
         ST    5,96(13)
         LA    1,88(,13)
         L     15,=V(SPRINTF)
         BALR  14,15
         ST    2,88(13)
         L     4,0(3,4)
         ST    4,92(13)
         MVC   96(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(CONCAT)
         BALR  14,15
         LR    3,15
         L     2,=A(DUMP@BAS)
         MVC   88(4,13),0(2)
         ST    15,92(13)
         LA    1,88(,13)
         L     15,=V(FINISH@G)
         BALR  14,15
         ST    3,88(13)
         LA    1,88(,13)
         L     15,=V(FREE)
         BALR  14,15
         B     @@L1004
@@L1012  EQU   *
         MVC   88(4,13),=A(@@LC593)
         L     2,=A(ASM@FILE)
         MVC   92(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FATAL@IO)
         BALR  14,15
         B     @@L998
@@L1011  EQU   *
         MVC   88(4,13),=A(@@LC592)
         L     2,=A(ASM@FILE)
         MVC   92(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FATAL@IO)
         BALR  14,15
         B     @@L999
@@L1010  EQU   *
         L     2,=A(AUX@INFO)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(FCLOSE)
         BALR  14,15
         L     2,=V(GLOBAL@D)
         L     2,0(2)
         L     2,44(2)
         LTR   2,2
         BE    @@L996
         L     2,=A(@@38)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=V(UNLINK)
         BALR  14,15
         B     @@L996
@@L1008  EQU   *
         LA    1,88(,13)
         L     15,=V(FREE@REG)
         BALR  14,15
         L     2,=V(LANG@HOO)
         L     2,24(2)
         LA    1,88(,13)
         LA    15,0(2)
         BALR  14,15
* Function finalize epilogue
         PDPEPIL
* Function finalize literal pool
         DS    0F
         LTORG
* Function finalize page table
         DS    0F
@@PGT46  EQU   *
         DC    A(@@PG46)
         DS    0F
* S-func do_compile prologue
@@48     PDPPRLG CINDEX=47,FRAME=96,BASER=12,ENTRY=NO
         B     @@FEN47
         LTORG
@@FEN47  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG47   EQU   *
         LR    11,1
         L     10,=A(@@PGT47)
* Function do_compile code
         LA    1,88(,13)
         L     15,=A(@@44)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(INIT@TIM)
         BALR  14,15
         MVC   88(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(TFSTART)
         BALR  14,15
         LA    1,88(,13)
         L     15,=A(@@45)
         BALR  14,15
         L     2,=A(@@34)
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=A(@@46)
         BALR  14,15
         LTR   15,15
         BE    @@L1015
         LA    1,88(,13)
         L     15,=A(@@19)
         BALR  14,15
@@L1015  EQU   *
         LA    1,88(,13)
         L     15,=A(@@47)
         BALR  14,15
         MVC   88(4,13),=F'0'
         LA    1,88(,13)
         L     15,=V(TVSTOP)
         BALR  14,15
         LA    1,88(,13)
         L     15,=V(@@GTERR)
         BALR  14,15
         MVC   88(4,13),0(15)
         LA    1,88(,13)
         L     15,=V(TVPRINT)
         BALR  14,15
* Function do_compile epilogue
         PDPEPIL
* Function do_compile literal pool
         DS    0F
         LTORG
* Function do_compile page table
         DS    0F
@@PGT47  EQU   *
         DC    A(@@PG47)
         DS    0F
* X-func toplev_main prologue
TOPLEV@M PDPPRLG CINDEX=48,FRAME=96,BASER=12,ENTRY=YES
         B     @@FEN48
         LTORG
@@FEN48  EQU   *
         DROP  12
         BALR  12,0
         USING *,12
@@PG48   EQU   *
         LR    11,1
         L     10,=A(@@PGT48)
* Function toplev_main code
         L     2,4(11)
         LA    1,88(,13)
         L     15,=V(HEX@INIT)
         BALR  14,15
         MVC   88(4,13),0(2)
         LA    1,88(,13)
         L     15,=A(@@42)
         BALR  14,15
         MVC   88(4,13),0(11)
         ST    2,92(13)
         LA    1,88(,13)
         L     15,=A(@@43)
         BALR  14,15
         L     2,=V(GLOBAL@D)
         L     2,0(2)
         L     2,44(2)
         LTR   2,2
         BNE   @@L1017
         L     2,=A(@@1)
         L     2,0(2)
         LTR   2,2
         BE    @@L1020
@@L1017  EQU   *
         L     2,=V(GLOBAL@D)
         L     15,0(2)
         L     2,44(15)
         LTR   2,2
         BNE   @@L1019
         L     2,40(15)
         LTR   2,2
         BE    @@L1016
@@L1019  EQU   *
         LA    2,12(0,0)
         B     @@L1016
@@L1020  EQU   *
         LA    1,88(,13)
         L     15,=A(@@48)
         BALR  14,15
         B     @@L1017
@@L1016  EQU   *
         LR    15,2
* Function toplev_main epilogue
         PDPEPIL
* Function toplev_main literal pool
         DS    0F
         LTORG
* Function toplev_main page table
         DS    0F
@@PGT48  EQU   *
         DC    A(@@PG48)
* X-var inpfname
         ENTRY INPFNAME
         DS    0F
INPFNAME EQU   *
         DC    4X'00'
* X-var main_input_filename
         ENTRY MAIN@INP
         DS    0F
MAIN@INP EQU   *
         DC    4X'00'
* X-var lineno
         ENTRY LINENO
         DS    0F
LINENO   EQU   *
         DC    4X'00'
* X-var infstk
         ENTRY INFSTK
         DS    0F
INFSTK   EQU   *
         DC    4X'00'
* X-var infstick
         ENTRY INFSTICK
         DS    0F
INFSTICK EQU   *
         DC    4X'00'
* X-var cf_decl
         ENTRY CF@DECL
         DS    0F
CF@DECL  EQU   *
         DC    4X'00'
* X-var cffbl
         ENTRY CFFBL
         DS    0F
CFFBL    EQU   *
         DC    4X'00'
* X-var decl_printable_name
         ENTRY DECL@PRI
         DS    0F
DECL@PRI EQU   *
         DC    4X'00'
* X-var no_new_pseudos
         ENTRY NO@NEW@P
         DS    0F
NO@NEW@P EQU   *
         DC    4X'00'
* X-var stack_limit_rtx
         ENTRY STACK@LI
         DS    0F
STACK@LI EQU   *
         DC    4X'00'
* X-var wun_func
         ENTRY WUN@FUNC
         DS    0F
WUN@FUNC EQU   *
         DC    4X'00'
* X-var warn_unused_label
         ENTRY WARN@UNU
         DS    0F
WARN@UNU EQU   *
         DC    4X'00'
* X-var wun_parm
         ENTRY WUN@PARM
         DS    0F
WUN@PARM EQU   *
         DC    4X'00'
* X-var wu_var
         ENTRY WU@VAR
         DS    0F
WU@VAR   EQU   *
         DC    4X'00'
* X-var wu_val
         ENTRY WU@VAL
         DS    0F
WU@VAL   EQU   *
         DC    4X'00'
* X-var warn_notreached
         ENTRY WARN@NOT
         DS    0F
WARN@NOT EQU   *
         DC    4X'00'
* X-var warn_inline
         ENTRY WARN@INL
         DS    0F
WARN@INL EQU   *
         DC    4X'00'
* X-var warn_uninitialized
         ENTRY WARN@UNI
         DS    0F
WARN@UNI EQU   *
         DC    4X'00'
* X-var warn_shadow
         ENTRY WARN@SHA
         DS    0F
WARN@SHA EQU   *
         DC    4X'00'
* X-var warn_switch
         ENTRY WARN@SWI
         DS    0F
WARN@SWI EQU   *
         DC    4X'00'
* X-var warn_return_type
         ENTRY WARN@RET
         DS    0F
WARN@RET EQU   *
         DC    4X'00'
* X-var wm_noret
         ENTRY WM@NORET
         DS    0F
WM@NORET EQU   *
         DC    4X'00'
* X-var wcalign
         ENTRY WCALIGN
         DS    0F
WCALIGN  EQU   *
         DC    4X'00'
* X-var warn_larger_than
         ENTRY WARN@LAR
         DS    0F
WARN@LAR EQU   *
         DC    4X'00'
* X-var larger_than_size
         ENTRY LARGER@T
         DS    0F
LARGER@T EQU   *
         DC    4X'00'
* X-var warn_aggregate_return
         ENTRY WARN@AGG
         DS    0F
WARN@AGG EQU   *
         DC    4X'00'
* X-var warn_packed
         ENTRY WARN@PAC
         DS    0F
WARN@PAC EQU   *
         DC    4X'00'
* X-var warn_padded
         ENTRY WARN@PAD
         DS    0F
WARN@PAD EQU   *
         DC    4X'00'
* X-var warn_disabled_optimization
         ENTRY WARN@DIS
         DS    0F
WARN@DIS EQU   *
         DC    4X'00'
* X-var flag_print_asm_name
         ENTRY FLAG@PRI
         DS    0F
FLAG@PRI EQU   *
         DC    4X'00'
* X-var flschr
         ENTRY FLSCHR
         DS    0F
FLSCHR   EQU   *
         DC    4X'00'
* X-var flag_short_enums
         ENTRY FLAG@SHO
         DS    0F
FLAG@SHO EQU   *
         DC    4X'00'
* X-var funrloop
         ENTRY FUNRLOOP
         DS    0F
FUNRLOOP EQU   *
         DC    4X'00'
* X-var funraloop
         ENTRY FUNRALOO
         DS    0F
FUNRALOO EQU   *
         DC    4X'00'
* X-var fprefl
         ENTRY FPREFL
         DS    0F
FPREFL   EQU   *
         DC    4X'00'
* X-var fcfjump
         ENTRY FCFJUMP
         DS    0F
FCFJUMP  EQU   *
         DC    4X'00'
* X-var fcskip
         ENTRY FCSKIP
         DS    0F
FCSKIP   EQU   *
         DC    4X'00'
* X-var flag_expensive_optimizations
         ENTRY FLAG@EXP
         DS    0F
FLAG@EXP EQU   *
         DC    4X'00'
* X-var fvolat
         ENTRY FVOLAT
         DS    0F
FVOLAT   EQU   *
         DC    4X'00'
* X-var fvolglob
         ENTRY FVOLGLOB
         DS    0F
FVOLGLOB EQU   *
         DC    4X'00'
* X-var fvolstat
         ENTRY FVOLSTAT
         DS    0F
FVOLSTAT EQU   *
         DC    4X'00'
* X-var flag_rerun_loop_opt
         ENTRY FLAG@RER
         DS    0F
FLAG@RER EQU   *
         DC    4X'00'
* X-var flinfncs
         ENTRY FLINFNCS
         DS    0F
FLINFNCS EQU   *
         DC    4X'00'
* X-var fkinf
         ENTRY FKINF
         DS    0F
FKINF    EQU   *
         DC    4X'00'
* X-var flag_shared_data
         ENTRY FLAG@SHA
         DS    0F
FLAG@SHA EQU   *
         DC    4X'00'
* X-var flag_single_precision_constant
         ENTRY FLAG@SIN
         DS    0F
FLAG@SIN EQU   *
         DC    4X'00'
* X-var flag_delayed_branch
         ENTRY FLAG@DEL
         DS    0F
FLAG@DEL EQU   *
         DC    4X'00'
* X-var fpretf
         ENTRY FPRETF
         DS    0F
FPRETF   EQU   *
         DC    4X'00'
* X-var flag_pic
         ENTRY FLAG@PIC
         DS    0F
FLAG@PIC EQU   *
         DC    4X'00'
* X-var flag_exceptions
         ENTRY FLAG@EXC
         DS    0F
FLAG@EXC EQU   *
         DC    4X'00'
* X-var fnocom
         ENTRY FNOCOM
         DS    0F
FNOCOM   EQU   *
         DC    4X'00'
* X-var flag_stack_check
         ENTRY FLAG@STA
         DS    0F
FLAG@STA EQU   *
         DC    4X'00'
* X-var gswvue
         ENTRY GSWVUE
         DS    0F
GSWVUE   EQU   *
         DC    4X'00'
* X-var gswset
         ENTRY GSWSET
         DS    0F
GSWSET   EQU   *
         DC    4X'00'
* X-var alloop
         ENTRY ALLOOP
         DS    0F
ALLOOP   EQU   *
         DC    4X'00'
* X-var allopl
         ENTRY ALLOPL
         DS    0F
ALLOPL   EQU   *
         DC    4X'00'
* X-var allopms
         ENTRY ALLOPMS
         DS    0F
ALLOPMS  EQU   *
         DC    4X'00'
* X-var aljump
         ENTRY ALJUMP
         DS    0F
ALJUMP   EQU   *
         DC    4X'00'
* X-var aljmpl
         ENTRY ALJMPL
         DS    0F
ALJMPL   EQU   *
         DC    4X'00'
* X-var aljmpms
         ENTRY ALJMPMS
         DS    0F
ALJMPMS  EQU   *
         DC    4X'00'
* X-var allab
         ENTRY ALLAB
         DS    0F
ALLAB    EQU   *
         DC    4X'00'
* X-var allabl
         ENTRY ALLABL
         DS    0F
ALLABL   EQU   *
         DC    4X'00'
* X-var allabms
         ENTRY ALLABMS
         DS    0F
ALLABMS  EQU   *
         DC    4X'00'
* X-var alfuncs
         ENTRY ALFUNCS
         DS    0F
ALFUNCS  EQU   *
         DC    4X'00'
* X-var alfunlog
         ENTRY ALFUNLOG
         DS    0F
ALFUNLOG EQU   *
         DC    4X'00'
* X-var force_align_functions_log
         ENTRY FORCE@AL
         DS    0F
FORCE@AL EQU   *
         DC    4X'00'
* X-var graph_dump_format
         ENTRY GRAPH@DU
         DS    0F
GRAPH@DU EQU   *
         DC    4X'00'
* X-var asm_out_file
         ENTRY ASM@OUT@
         DS    0F
ASM@OUT@ EQU   *
         DC    4X'00'
* X-var user_label_prefix
         ENTRY USER@LAB
         DS    0F
USER@LAB EQU   *
         DC    4X'00'
* X-var progname
         ENTRY PROGNAME
         DS    0F
PROGNAME EQU   *
         DC    4X'00'
* X-var dump_base_name
         ENTRY DUMP@BAS
         DS    0F
DUMP@BAS EQU   *
         DC    4X'00'
* X-var savac
         ENTRY SAVAC
         DS    0F
SAVAC    EQU   *
         DC    4X'00'
* X-var savav
         ENTRY SAVAV
         DS    0F
SAVAV    EQU   *
         DC    4X'00'
* X-var rtdande
         ENTRY RTDANDE
         DS    0F
RTDANDE  EQU   *
         DC    4X'00'
         DS    0F
@@37     EQU   *
         DC    4X'00'
         DS    0F
@@34     EQU   *
         DC    4X'00'
* X-var asm_file_name
         ENTRY ASM@FILE
         DS    0F
ASM@FILE EQU   *
         DC    4X'00'
* X-var flag_thread_jumps
         ENTRY FLAG@THR
         DS    0F
FLAG@THR EQU   *
         DC    4X'00'
         DS    0F
@@5      EQU   *
         DC    4X'00'
         DS    0F
@@7      EQU   *
         DC    4X'00'
         DS    0F
@@6      EQU   *
         DC    4X'00'
         DS    0F
@@38     EQU   *
         DC    4X'00'
         DS    0F
@@32     EQU   *
         DC    4X'00'
* X-var aux_info_file
         ENTRY AUX@INFO
         DS    0F
AUX@INFO EQU   *
         DC    4X'00'
         DS    0F
@@16     EQU   *
         DC    4X'00'
* X-var flhled
         ENTRY FLHLED
         DS    0F
FLHLED   EQU   *
         DC    4X'00'
* X-var flhler
         ENTRY FLHLER
         DS    0F
FLHLER   EQU   *
         DC    64X'00'
         END
