//T750KY   JOB  (317,04,E1500K),'RAEMSY',
//             CLASS=X,
//             MSGCLASS=T,
//             MSGLEVEL=(1,1),
//             NOTIFY=&SYSUID,
//             REGION=8M,
//             TIME=NOLIMIT
//*
//*MAIN SYSTEM=SYT
//*
//ASM      EXEC PGM=ASMA90,REGION=2048K,
//          PARM='NODECK,OBJECT,RENT'
//SYSIN     DD *
QTOD     TITLE '*** "QTOD" *** TSO COMMAND PROCESSOR &SYSDATE'
***********************************************************************
* QTOD                                                                *
* =====                                                               *
*                                                                     *
         EJECT
***********************************************************************
*     EQUATES                                                         *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8                      UNUSED
R9       EQU   9
R10      EQU   10                     BAL
R11      EQU   11                     STORAGE OBTAINED AREA
R12      EQU   12                     BASE #1
R13      EQU   13                     HIGHER SAVE-AREA
R14      EQU   14                     BAKR
R15      EQU   15                     RC
         EJECT
***********************************************************************
*     START                                                           *
***********************************************************************
QTOD     CSECT
QTOD     AMODE 31
QTOD     RMODE ANY
         SPACE 2
         BAKR  14,0                  ESTABLISH LINKAGE-CONVENTIONS
         LR    R12,R15               LOAD TEMPORARY BASE TO MY BASE
         USING QTOD,R12              TELL ASSEMBLER
         LR    R3,R1                 ESTABLISH CPPL'S  ADDRESSABILITY
GETSTOR  DS    0H
         STORAGE OBTAIN,LENGTH=LDWORK,LOC=BELOW ET WORKING STORAGE
         LR    R11,R1                ESTABLISH DSECT'S ADDRESSABILITY
         USING DWORK,R11             TELL ASSEMBLER
         BAL   R10,LOADCPPL          SAVE CPPL
         BAL   R10,CALLMAC           CONVERT TODSTAMP
         BAL   R10,PUTLBSNS          PRINT IT OUT
*
ENDIT    DS    0H
         STORAGE RELEASE,LENGTH=LDWORK,ADDR=(R11)  FREE OBTAINED STOR.
         XR    R15,R15               SET RC=0
         PR                          END QTOD + CLEANUP
*
***********************************************************************
*     SUBROUTINES                                                     *
***********************************************************************
*
LOADCPPL ST    R10,SAVE10
         USING CPPL,R3               GET THE ADDRESSES IN CPPL
         MVC   CPLCBUF,CPPLCBUF      MOVE COMM.-BUFFER ADDR TO MY AREA
         MVC   CPLUPT,CPPLUPT        MOVE USERPROFTAB ADDR TO MY AREA
         MVC   CPLPSCB,CPPLPSCB      MOVE PROT.STEP-CB ADDR TO MY AREA
         MVC   CPLECT,CPPLECT        MOVE ECT-ADDRESS TO MY AREA
         DROP  R3                    FREE CPPL
         L     R10,SAVE10
         BR    R10
*
*********************************************************************
* OBTAIN A TODSTAMP AND CALL THE TODPRINT-MACRO
*********************************************************************
*
CALLMAC  ST    R10,SAVE10          SAVE BACKPOINTER
         LA    R4,@MLWAREA         A(256-BYTE WORKAREA)
         STCK  TODDW               GET TOD-STAMP
         LA    R1,TODDW            A(TOD-STAMP)
         TODPRINT (R1),WORKAREA=(R4),                                  X
               OUTFORM='Date: WHOLEDAY, ANDAY of MONTH YEAR (MT/DD/YY YX
               EAR.JUL) Time: HH:MM:SS.STAMP(1)',                      X
               SHIFT=YES,                                              X
               CAPS=OFF            LET OUTPUT IN MIXED CASE
         LH    R2,0(R4)            LOAD LENGTH OF DATE/TIMESTAMP
         STH   R2,ALLMSGS
         BCTR  R2,0                SUBTRACT 1 FOR EXECUTE
         EX    R2,*+4              WRITE INTO ALLMSGS
         MVC   ALLMSGS+2(0),2(R4)
         L     R10,SAVE10
         BR    R10
*        LTORG
*
***********************************************************************
*     PUTLBSNS: DO THE PUTLINE-BUSINESS                               *
***********************************************************************
PUTLBSNS ST    R10,SAVE10
         STFSMODE ON,INITIAL=YES     CLEAR ....
         STFSMODE OFF                      .... SCREEN
         LA    R1,IOPLADS            LOAD DYNAMIC IOPL
         USING IOPL,R1               FILL IT
         L     R0,CPLUPT             LOAD DYN. USER'S PROFILE TABLE
         ST    R0,IOPLUPT            STORE IT IN THE IOPL
         L     R0,CPLECT             LOAD ADDRESS OF DYN. ECT
         ST    R0,IOPLECT            STORE IT IN THE IOPL
         LA    R0,ECBADS             LOAD ADDR OF MY ECB TO R3
         ST    R0,IOPLECB            STORE ADDRESS OF ECBADS IN IOPL
         MVC   @MLWAREA(L@PUTLIN),@PUTLIN
         MVC   DTEXTADS(LTEXTADS),TEXTADS   MOVE CONSTANT TO MY AREA
         LA    R2,ALLMSGS            POINT TO VARIABLE MSG-AREA
         XC    DTEXTADS(4),DTEXTADS  CLEAR LENGTH-COUNTER
PUTL010  DS    0H
         LH    R1,0(R2)              LENGTH OF CURRENT ENTRY INTO R5
         LTR   R1,R1                 IS IT ZERO ?
         BZ    PUTL020               (BE = YES, ALL WRITTEN)
PUTL015  LA    R1,4(,R1)             ADD 4 FOR PUTLINE-HEADER
         STH   R1,DTEXTADS           STORE INTO WORKAREA
         BCTR  R1,0                  SUBTRACT 1 FOR EXECUTE
         EX    R1,PUTLMVC1           DO THE EXECUTE
         PUTLINE PARM=@MLWAREA,      DO THE PUTLINE                    X
               OUTPUT=(DTEXTADS,TERM,SINGLE,DATA),MF=(E,IOPLADS)
         LH    R1,0(R2)              LOAD LENGTH OF MESSAGE
         LA    R1,2(,R1)             ADD LENGTH OF MSG-LENGTH
         AR    R2,R1                 ADD CORRECT LENGTH OF MSG-TEXT
         B     PUTL010               TRY NEXT MESSAGE
PUTL020  XR    R15,R15
         L     R10,SAVE10
         BR    R10
*        LTORG
*
PUTLMVC1 MVC   DTEXTADS+4(0),2(R2)
***********************************************************************
*     CONSTANTS                                                       *
***********************************************************************
*
TEXTADS  DC    H'132'
         DC    H'0'
         DC    CL132' '
LTEXTADS EQU   *-TEXTADS
*
***********************************************************************
*     MACRO LIST-FORM                                                 *
***********************************************************************
@PUTLIN  PUTLINE MF=L
L@PUTLIN EQU    *-@PUTLIN
*
***********************************************************************
*     COPY    SECTION                                                 *
***********************************************************************
***********************************************************************
*     WORKING SECTION                                                 *
***********************************************************************
*
DWORK    DSECT
@MLWAREA DS    XL256                  MF=L WORKAREA
@MACWORK DS    CL256
MWADDR   DS    A
*
SAVE10   DS    F
* @SRTESTM DS    F                      A(START SORT STATEMENT)
*
CPLCBUF  DS    F                      CPPL-WORKFIELDS
CPLUPT   DS    F
CPLPSCB  DS    F
CPLECT   DS    F
*
ECBADS   DS    F                      PUTLINE WORKFIELDS
IOPLADS  DS    4F
TODDW    DS    D
*
DTEXTADS DS    CL(LTEXTADS)           MSG-WORKFIELD
WORKMSG  DS    CL80
*
ALLMSGS  DS    4CL32000
LALLMSGS EQU   *-ALLMSGS
*
LDWORK   EQU   *-DWORK
*
         EJECT
*
         IKJCPPL
         IKJIOPL
         END   QTOD
/*
//SYSLIB    DD DISP=SHR,DSN=SA1T.T750K.CBTFILE.CNTL
//          DD DISP=SHR,DSN=SYS1.MACLIB
//          DD DISP=SHR,DSN=SYS1.MODGEN
//SYSLIN    DD DSN=&&OBJ,UNIT=SYSDA,DISP=(NEW,PASS),
//          SPACE=(3200,(200,50)),DCB=(RECFM=FB,BLKSIZE=3200,LRECL=80)
//SYSPRINT  DD SYSOUT=*,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=3990)
//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(5,3))
//SYSUT2    DD UNIT=SYSDA,SPACE=(CYL,(5,3))
//SYSUT3    DD UNIT=SYSDA,SPACE=(CYL,(5,3))
//*
//* =====================================================
//* ===== L I N K A G E   E D I T O R ===================
//* =====================================================
//LKED      EXEC PGM=HEWL,REGION=1024K,COND=(0,NE),
//             PARM='XREF,LIST,LET,REUS,RENT'
//SYSLMOD   DD DISP=SHR,DSN=SA1T.T750K.CBTFILE.LOAD
//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(10,3))
//SYSPRINT  DD SYSOUT=*
//SYSLIN    DD DSN=&&OBJ,DISP=(OLD,DELETE)
//          DD *
  NAME    QTOD(R)
/*
