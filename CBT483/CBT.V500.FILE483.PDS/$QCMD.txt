QCMD
====
QCMD lets you execute MVS-commands and trap the responses. The commands
can be entered either online in TSO or in batchmode. There is a Rexx-
interface provided, too, but not as sophisticated as with SYSCMD/GETMSG.
Anyway, using qcmd you do not have to define gazillions of OPERCMDS-
profiles to issue commands other than display.

Qcmd accepts 2 ways of entering commands:

  - TSO QCMD mvs_command_w/o_quotes
    This is the standard form. The mvscommand is issued and qcmd waits
    1 second for a response. the ouput is delivered in PUTLINE format.
      e.g. TSO QCMD D A,L or TSO QCMD CF CHP(xx),ONLINE,NOVARY

  - TSO QCMD CMD=(mvs_command_w/o_quotes),T=n,M=x
    T=n specifies the # of seconds to wait for a commandresponse
    M=x specifies the output-delivery: M=P (TSO Putline, default)
                                       M=V (build Array of Rexx-Vars)
                                       M=B (Both of the above)
      e.g. TSO QCMD CMD=(RO *ALL,F LLA,REFRESH),T=12
    To find the names of the rexx-vars created via IKJCT441, see doc
    in QCMC-Rexx procedure.

Qcmd accepts as "special" parameter "GET_REPLIES". This lists you all
open WTORs in your Sysplex and lets you easily extract the reply-ids.
Further description in QCMC, too.
QCMC is kind of a pseudo-console that interacts with qcmd and shows you
the output of a mvscommand in the way it appears on the console, but you
have ispf-functionalities like splitscreen and scrolling.

Requirements: QCMD needs APF-authorization and has to be put in the
              AUTHCMD-field of IKJTSOxx.
              QCMD should reside in a LNKLST-concatenated library

Limitations:  QCMD does not trap unsolicited messages. Some commands
              deliver more than one MDB as response (e.g. $DI command),
              so you sometimes will receive messages not belonging to
              the command issued.

Security:     QCMD has the same CMD-authority as the masterconsole.
              It is *highly* recommended to protect the use of it by
              RACF (see sample RDEF below)

              RDEF PROGRAM (QCM*) ADDMEM +
                   ('xxxx.yyyy.zzzz'/VOLSER/NOPADCHK) +
                   UACC(NONE) OWNER(wwww)

              The Id of the EMCS-Console is NOT the same as the Userid
              of the caller, the operator-id is QCMD01. if there is
              already a QCMD01-session active, the next free number is
              assigned to the operator. this lets you define the qcmd-
              operator more easily in your subsystems e.g. CICS, NEtview
              etc. to issue CEMT-commands using qcmd.

QCMDREPL is a sample batchjob that takes a bunch of DASD offline, re-
         initializes them using ICKDSF, answers the outstanding replies
         and varies them online afterwards. Nice if you get in some
         hundreds of new 3390s.
