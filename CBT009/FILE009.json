{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011037000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE009.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE009.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x07'", "DS1TRBAL": "b's\\x8c'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\x1d\\x00\\n\\x00\\x1d\\x00\\r\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04]\\x00\\x19\\x01\\x166\\x1f\\x01\\x166\\x1f\\x186\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf3@@@'", "ispf": {"version": "04.93", "flags": 0, "createdate": "2016-12-26T00:00:00", "modifydate": "2016-12-26T18:36:19", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-493"}, "text": "REGULAR CBT TAPE - VERSION 493    FILE:  009\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT493.FILE009\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 8 MEMBERS COUNTED; CUMULATIVE SIZE IS 785 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/26/16    18:36:19    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x87!o\\x00\\x87!o\\x12\\x04\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf0\\xf9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1987-08-04T00:00:00", "modifydate": "1987-08-04T12:04:00", "lines": 14, "newlines": 14, "modlines": 0, "user": "FILE009"}, "text": "THESE (2) RACF EXITS IN COMBINATION WITH THE ZAP ALSO ON THIS\nFILE COMPOSE OF A CAPABILITY TO IMPLEMENT RACF 1.7 TAPE DS\nPROTECTION IN 'WARNING' MODE.\n\n\nMEMBER          DESCRIPTION\n========        ========================================================\n\nACHKLIST        MACRO NEEDED FOR ASSEMBLY OF THE ICHRCX02 EXIT\nADEFLIST        MACRO NEEDED FOR ASSEMBLY OF THE ICHRDX01 EXIT\nICHRCX02        RACHECK POST EXIT FOR TAPE DATASET WARNING FEATURE\nICHRDX01        RACDEF PRE EXIT FOR TAPE DATASET WARNING FEATURE\nZAPDFP          ZAP FOR DFP TO PREVENT KICKDOWN OF TAPES IF WRITE-RING\n                   IS IN PLACE ON TAPE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE009": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04]\\x00\\x05\\x01\\x166\\x1f\\x01\\x166\\x1f\\x186\\x00\\x06\\x00\\x06\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf3@@@'", "ispf": {"version": "04.93", "flags": 0, "createdate": "2016-12-26T00:00:00", "modifydate": "2016-12-26T18:36:05", "lines": 6, "newlines": 6, "modlines": 0, "user": "CBT-493"}, "text": "//***FILE 009 IS FROM MR GENE LEW OF MCI OF ROCKVILLE, MARYLAND     *   FILE 009\n//*           AND CONTAINS A COPY OF THEIR RACF EXITS TO            *   FILE 009\n//*           IMPLEMENT RACF 1.7 TAPE DATASET PROTECTION IN         *   FILE 009\n//*           \"WARNING\" MODE.  THIS FILE IS IN IEBUPDTE SYSIN       *   FILE 009\n//*           FORMAT.                                               *   FILE 009\n//*                                                                 *   FILE 009\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ACHKLIST": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x87!o\\x00\\x87!o\\x12\\x04\\x009\\x009\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf0\\xf9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1987-08-04T00:00:00", "modifydate": "1987-08-04T12:04:00", "lines": 57, "newlines": 57, "modlines": 0, "user": "FILE009"}, "text": "         MACRO\n         ACHKLIST\n**********************************************************************\n*  DSECT NAME -                                                      *\n*     ACHKLIST                                                       *\n*  FUNCTION -                                                        *\n*     PROVIDE MAPPING FOR THE PARAMETER LIST PASSED TO THE RACHECK   *\n*     EXIT ROUTINES (ICHRCX01 AND ICHRCX02).  THIS DSECT WAS DERIVED *\n*     FROM THE 'SYSTEM PROGRAMMING LIBRARY: RESOURCE ACCESS CONTROL  *\n*     FACILITY (RACF)', PUBLICATION # SC28-1343.                     *\n**********************************************************************\nACHKLIST DSECT                     RACHECK PARAMETER LIST\nACHK@LEN DS    A                   ADDRESS OF FULLWORD LENGTH\nACHK@FG1 DS    A                   ADDRESS OF FLAG BYTE 1\nACHK@FG2 DS    A                   ADDRESS OF FLAG BYTE 2\nACHK@FG3 DS    A                   ADDRESS OF FLAG BYTE 3\nACHKTDST EQU   X'80'               DSTYPE=T\nACHKTDSM EQU   X'40'               DSTYPE=M\nACHKTENT EQU   X'20'               ENTITY=DSN; TAPE/DASD VOLSER SPEC\nACHKTPRF EQU   X'20'               PROFILE=PROFILE ADDR SPECIFIED\nACHKTRS1 EQU   X'18'               RESERVED\nACHKTGEN EQU   X'04'               GENERIC=YES SPECIFIED\nACHKTPVT EQU   X'02'               PRIVATE AREA PROFILE REQUESTED\nACHKTRS2 EQU   X'01'               RESERVED\nACHK@INS DS    A                   ADDRESS OF INSTALLATION PARAMETERS\nACHK@EOP DS    A                   ADDRESS OF ENTITY OR PROFILE\nACHK@CLS DS    A                   ADDRESS OF ENTITY CLASS NAME\nACHK@VOL DS    A                   ADDRESS OF VOLUME SERIAL NUMBER\nACHK@EDA DS    A                   ADDRESS OF ENTITY DATA\nACHK@WRK DS    A                   ADDRESS OF WORK AREA OR ZERO\nACHK@ABE DS    A                   ADDRESS OF RACF ABEND CODE\nACHK@RTC DS    A                   ADDRESS OF RACHECK RETURN CODE\nACHK@ACC DS    A                   ADDRESS OF ACCESS CODE:\nACHKAALT EQU   X'80'               ALTER ACCESS ALLOWED\nACHKACTL EQU   X'40'               CONTROL ACCESS ALLOWED\nACHKAUPD EQU   X'20'               UPDATE ACCESS ALLOWED\nACHKARD  EQU   X'10'               READ ACCESS ALLOWED\nACHKANON EQU   X'01'               NO ACCESS ALLOWED\nACHK@RLV DS    A                   ADDRESS OF RESOURCE LEVEL NUMBER\nACHK@OVL DS    A                   ADDRESS OF OLDVOL MULTI-VOLUME\nACHK@DNC DS    A                   ADDRESS OF NAMING CONVENTIONS\nACHK@APP DS    A                   ADDRESS OF APPL NAME\nACHK@ACE DS    A                   ADDRESS OF ACEE\nACHK@OWN DS    A                   ADDRESS OF OWNER IDENTIFIER\nACHK@LOG DS    A                   ADDRESS OF LOGGING CONTROL\nACHK@ALV DS    A                   ADDRESS OF ACCLVL VALUE\nACHK@ALP DS    A                   ADDRESS OF ACCLVL PARAMETER LIST\nACHK@FNO DS    A                   ADDRESS OF FILE SEQUENCE # FOR TAPE\nACHK@TFG DS    A                   ADDRESS OF TAPE FLAG BYTE\nACHK#TBL EQU   X'C0'               TAPELBL=BLP\nACHK#TNL EQU   X'C0'               TAPELBL=NL\nACHK#TSL EQU   X'C0'               TAPELBL=SL\nACHK#TRS EQU   X'3F'               RESERVED\nACHK@FG4 DS    A                   ADDRESS OF FOURTH FLAG BYTE\nACHK@REC DS    A                   ADDRESS OF RACHECK REASON CODE\nACHK@NID DS    A                   ADDRESS OF 'NOTIFY' USERID\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ADEFLIST": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x87!o\\x00\\x87!o\\x12\\x04\\x00N\\x00N\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf0\\xf9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1987-08-04T00:00:00", "modifydate": "1987-08-04T12:04:00", "lines": 78, "newlines": 78, "modlines": 0, "user": "FILE009"}, "text": "         MACRO\n         ADEFLIST\n**********************************************************************\n*  DSECT NAME -                                                      *\n*     ADEFLIST                                                       *\n*  FUNCTION -                                                        *\n*     PROVIDE MAPPING FOR THE PARAMETER LIST PASSED TO THE RACDEF    *\n*     EXIT ROUTINES (ICHRDX01 AND ICHRDX02).  THIS DSECT WAS DERIVED *\n*     FROM THE 'SYSTEM PROGRAMMING LIBRARY: RESOURCE ACCESS CONTROL  *\n*     FACILITY (RACF)', PUBLICATION # SC28-1343.                     *\n**********************************************************************\nADEFLIST DSECT                     RACDEF PARAMETER LIST\nADEF@LEN DS    A                   ADDRESS OF FULLWORD LENGTH\nADEF@FGF DS    A                   ADDRESS OF FUNCTIONAL FLAGS\nADEF@INS DS    A                   ADDRESS OF INSTALLATION PARAMETERS\nADEF@ENT DS    A                   ADDRESS OF ENTITY\nADEF@OON DS    A                   ADDRESS OF OLDVOL OR NEWNAME\nADEF@VOL DS    A                   ADDRESS OF VOLUME SERIAL NUMBER\nADEF@CLS DS    A                   ADDRESS OF ENTITY CLASS NAME\nADEF@MEN DS    A                   ADDRESS OF MODEL PROFILE NAME\nADEF@MVL DS    A                   ADDRESS OF MODEL PROFILE VOLSER\nADEF@FGM DS    A                   ADDRESS OF MODEL PROFILE FLAGS:\nADEFMMND EQU   X'80'                 IGNORE MENTITY NOT DEFINED\nADEFMADF EQU   X'40'                 ADD PROFILE TO CHAIN IF DEFINED\nADEFMARG EQU   X'20'                 ADD PROFILE TO CHAIN REGARDLESS\nADEFMAND EQU   X'10'                 ADD PROFLE TO CHAIN IF NOT DEFINED\nADEFMRES EQU   X'0F'                 RESERVED\nADEF@DNC DS    A                   ADDRESS OF NAMING CONVENTIONS\nADEF@FGP DS    A                   ADDRESS OF PROFILE OPTION FLAGS:\nADEFPUAC EQU   X'80'                 USE UACC VALUE FROM PROFILE\nADEFPLVL EQU   X'40'                 USE LEVEL VALUE FROM PROFILE\nADEFPOWN EQU   X'20'                 USE OWNER VALUE FROM PROFILE\nADEFPAUD EQU   X'10'                 USE AUDIT VALUE FROM PROFILE\nADEFPGAU EQU   X'08'                 USE GLOBALAUDIT VALUE FROM PROFILE\nADEFPINS EQU   X'04'                 USE INSTALLATION DATA FROM PROFILE\nADEFPACC EQU   X'02'                 USE ACCESS LIST FROM PROFILE\nADEFPWRN EQU   X'01'                 USE WARNING VALUE FROM INSTLN PROF\nADEF@INP DS    A                   ADDRESS OF INSTALLATION PROFILE\nADEF@ACE DS    A                   ADDRESS OF ACEE\nADEF@UNT DS    A                   ADDRESS OF UNIT INFORMATION\nADEF@ACC DS    A                   ADDRESS OF UACC VALUE FLAGS\nADEF@RLV DS    A                   ADDRESS OF RESOURCE LEVEL NUMBER\nADEF@AUD DS    A                   ADDRESS OF AUDIT FLAGS\nADEFQRDF EQU   X'00'                 AUDIT QUALIFIER FOR READ\nADEFQUPF EQU   X'01'                 AUDIT QUALIFIER FOR UPDATE\nADEFQCTF EQU   X'02'                 AUDIT QUALIFIER FOR CONTROL\nADEFQALF EQU   X'03'                 AUDIT QUALIFIER FOR ALTER\nADEFQRDS EQU   X'00'                 AUDIT QUALIFIER FOR READ\nADEFQUPS EQU   X'04'                 AUDIT QUALIFIER FOR UPDATE\nADEFQCTS EQU   X'08'                 AUDIT QUALIFIER FOR CONTROL\nADEFQALS EQU   X'0C'                 AUDIT QUALIFIER FOR ALTER\nADEF@OWN DS    A                   ADDRESS OF OWNER IDENTIFIER\nADEF@DAT DS    A                   ADDRESS OF DATA INFORMATION\nADEF@FG2 DS    A                   ADDRESS OF FLAG BYTE 2\nADEFRAC@ EQU   X'00'                 RACFIND WAS NOT SPECIFIED\nADEFRACN EQU   X'80'                 RACFIND=NO\nADEFRACY EQU   X'C0'                 RACFIND=YES\nADEFCKAU EQU   X'20'                 CHKAUTH=YES\nADEFTDST EQU   X'10'                 DSTYPE=TAPE\nADEFERSE EQU   X'08'                 ERASE=YES\nADEFMGEA EQU   X'04'                 MGENER=ASIS\nADEFMGEY EQU   X'04'                 MGENER=YES\nADEFWARN EQU   X'02'                 WARNING=YES\nADEFGENR EQU   X'01'                 GENERIC=YES\nADEF@ABE DS    A                   ADDRESS OF ABEND CODE\nADEF@REC DS    A                   ADDRESS OF REASON CODE\nADEF@RTC DS    A                   ADDRESS OF RETURN CODE\nADEF@WRK DS    A                   ADDRESS OF EXIT WORK AREA\nADEF@FG3 DS    A                   ADDRESS OF FLAG BYTE 3\nADEF@ALV DS    A                   ADDRESS OF ACCLVL VALUE\nADEF@ALP DS    A                   ADDRESS OF ACCLVL PARAMETER\nADEF@SLP DS    A                   ADDRESS OF SECLVL PARAMETER\nADEF@CTP DS    A                   ADDRESS OF CATEGORY PARAMETER\nADEF@FNO DS    A                   ADDRESS OF FILE SEQUENCE NUMBER\nADEF@SRP DS    A                   ADDRESS OF SECURITY RETENTION PERIOD\nADEF@NID DS    A                   ADDRESS OF 'NOTIFY' USERID\nADEF@MCL DS    A                   ADDRESS OF MODEL CLASS\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ICHRCX02": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x87!o\\x00\\x87!o\\x12\\x04\\x01@\\x01@\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf0\\xf9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1987-08-04T00:00:00", "modifydate": "1987-08-04T12:04:00", "lines": 320, "newlines": 320, "modlines": 0, "user": "FILE009"}, "text": "//**********************************************************************\n//**  RACF POST-PROCESSING EXIT FOR RACHECK (ICHRCX02)                **\n//**********************************************************************\n//UMOD000  EXEC PGM=GIMSMP,REGION=4096K\n//SMPCSI   DD DSN=SMP.GLOBAL.CSI,DISP=SHR\n//SMPOUT   DD SYSOUT=*\n//SMPRPT   DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SMPCNTL  DD *\n SET BDY(TARGET).\n RESTORE S(UMOD000).\n SET BDY(GLOBAL).\n REJECT S(UMOD000).\n RECEIVE SYSMODS.\n SET BDY(TARGET).\n APPLY S(UMOD000) ASSEM REDO COMPRESS(ALL).\n/*\n//SMP.SMPPTFIN DD DATA,DLM=$$\n++USERMOD(UMOD000).\n++VER (Z038)\n  FMID(HRF1702)\n  /*\n     THIS IS A POST PROCESSING EXIT FOR RACHECK(S) THAT ALLOWS\n     USERS W/\"AUDIT\" TO 'READ' ANYTHING ON THE SYSTEM(CLASS=DATASET),\n     REGARDLESS OF THEIR AUTHORITY WITHIN THE PROFILE FOR THE\n     RESOURCE.\n\n     CHECK FOR A USER CONNECTED TO GROUP, \"SUPERMAN\", THAT ALLOWS\n     THE USER TO BYPASS ALL RACHECKS FOR CLASS=DATASET.\n\n     IF THE ACCESS IS A 'TAPE' ACCESS, THEN ISSUE \"WARNING\" MESSAGES\n     WHILE STILL \"FAILING\" DASD ACCESS REQUESTS.\n\n                                                                  */.\n++JCLIN.\n//ICHRCX02 EXEC PGM=IEWL,PARM='XREF,LIST,LET,NCAL,RENT'\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(2,2))\n//SYSPRINT DD SYSOUT=*\n//SYSLMOD  DD DSN=SYS1.LPALIB,DISP=SHR\n//SYSLIN   DD *\n  NAME ICHRCX02(R)\n/*\n++SRC (ICHRCX02)\n    SYSLIB  (UMODSRC)\n    DISTLIB (AUMODSRC)\n    DISTMOD (ALPALIB).\nC02      TITLE 'ICHRCX02 -- RACHECK POST-PROCESSING EXIT ROUTINE'\n**********************************************************************\n*                                                                    *\n*  MODULE NAME -                                                     *\n*                                                                    *\n*     ICHRCX02 -- RACHECK POST-PROCESSING EXIT ROUTINE               *\n*                                                                    *\n*  FUNCTION -                                                        *\n*                                                                    *\n*     THIS EXIT ALLOWS:                                              *\n*                                                                    *\n*     -  USERS WITH THE 'AUDITOR' ATTRIBUTE ON A GLOBAL LEVEL        *\n*        'READ' ACCESS TO ALL DATASETS, REGARDLESS OF \"ACCESS\"       *\n*        AUTHORITY                                                   *\n*                                                                    *\n*     -  USERS WITH AN ACEE ANCHORED GROUP OF 'SUPERMAN'             *\n*        TO BYPASS RACHECK AUTHORIZATION APPROVAL                    *\n*                                                                    *\n*        PROVIDE WARNING FOR TAPEDS ACCESSES                         *\n*                                                                    *\n*                                                                    *\n*     ALL ACCESSES THAT ALLOWED THAT NORMALLY WOULD NOT BE           *\n*     ARE LOGGED.                                                    *\n*                                                                    *\n*  ATTRIBUTES -                                                      *\n*                                                                    *\n*     REENTRANT, LPA RESIDENT.                                       *\n*                                                                    *\n*  ENTRY CONDITIONS -                                                *\n*                                                                    *\n*     R1  - ADDRESS OF AREA DERIVED FROM PARAMETERS ON RACHECK MACRO *\n*                                                                    *\n*  EXIT CONDITIONS -                                                 *\n*                                                                    *\n*     R15 - CONTAINS A RETURN CODE:                                  *\n*        R15 = 0 - PROCESSING COMPLETE                               *\n*        R15 = 4 - RETRY RACHECK PROCESSING                          *\n*                                                                    *\n*  REGISTER USAGE -                                                  *\n*                                                                    *\n*     R13 - ADDRESS OF STANDARD SAVE AREA                            *\n*     R12 - BASE ADDRESS (ICHRCX02)                                  *\n*     R11 - ADDRESS OF PARAMETER AREA                                *\n*     R10 - ADDRESS OF COMMUNICATIONS VECTOR TABLE (CVT)             *\n*     R9  - ADDRESS OF RACF CVT (RCVT)                               *\n*     R8  - ADDRESS OF ACCESSOR ENVIRONMENT ELEMENT (ACEE)           *\n*     R7  - ADDRESS OF ADDRESS SPACE CONTROL BLOCK (ASCB)            *\n*     R6  - ADDRESS OF ADDRESS SPACE EXTENSION BLOCK (ASXB)          *\n*     R5  - WORK                                                     *\n*     R4  - WORK                                                     *\n*     R3  - WORK                                                     *\n*     R2  - WORK                                                     *\n*     R1  - WORK                                                     *\n*                                                                    *\n*  OPERATION -                                                       *\n*                                                                    *\n*     1.  IF RACF IS INACTIVE, ALLOW THE ACCESS REGARDLESS OF THE    *\n*          LEVEL AUTHORIZED, ISSUE A MESSAGE TO THE OPERATOR, AND    *\n*          EXIT.                                                     *\n*     2.  IF THE USER IS HAS AUDITOR AUTHORITY, ALLOW READ/ONLY      *\n*          ACCESS REGARDLESS OF ALLOWED ACCESS TO THE DATASET.       *\n*     3.  IF THE USER IS CONNECTED TO GROUP, 'SUPERMAN', THEN BYPASS *\n*          RACHECK AUTHORIZATION REGARDLESS OF AUTHORITY SPECIFIED.  *\n*     4.  IF THE USER HAS BEEN ALLOWED A LEVEL OF ACCESS WHICH HE    *\n*          DID NOT HAVE BEFORE THIS EXIT WAS CALLED, CAUSE RACF TO   *\n*          LOG THE ACCESS.                                           *\n*     5.  CHECK TO ALLOW ONLY BYPASS OF RACHECK FOR 'DATASET'        *\n*          CLASS.                                                    *\n*     6.  PROVIDE 'WARNING' FOR TAPEDS ACCESS                        *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n**********************************************************************\n         EJECT\n         USING SAVEAREA,R13\n         USING ICHRCX02,R12\n         USING ACHKLIST,R11\n         USING CVT,R10\n         USING RCVT,R9\n         USING ACEE,R8\n         USING ASCB,R7\n         USING ASXB,R6\n         USING RRPF,R3\n         USING PSA,R0\nICHRCX02 CSECT\nICHRCX02 AMODE 31                  SET ADDRESSING MODE TO 31-BIT\nICHRCX02 RMODE ANY                 SET RESIDENCY MODE TO ANY\n         SAVE  (14,12),,'ICHRCX02&SYSDATE.&SYSTIME'    SAVE REGISTERS\n         LR    R12,R15             ESTABLISH BASE REGISTER\n         LR    R11,R1              SAVE PARAMETER AREA ADDRESS\n         GETMAIN R,LV=WORKSIZE     OBTAIN A SAVE AREA\n         ST    R1,SAVENEW          FORWARD CHAIN\n         ST    R13,SAVEOLD-SAVEAREA(,R1)     BACK CHAIN\n         LR    R13,R1              SAVE SAVE AREA ADDRESS\n         L     R10,FLCCVT          GET ADDRESS OF CVT\n         L     R1,CVTTCBP          GET THE CURRENT TCB POINTER\n         L     R7,12(,R1)          GET THE CURRENT ASCB POINTER\n         ICM   R4,B'1111',ASCBJBNI GET JOBNAME PTR FOR JOBS\n         BNZ   GOTJOBNM            IF NOT ZERO, WE GOT JOBNAME\n         ICM   R4,B'1111',ASCBJBNS GET JOBNAME PTR FOR STC/TSU\nGOTJOBNM L     R3,ACHK@EOP         GET ENTITY OR PROFILE ADDRESS\n         L     R1,ACHK@FG3         GET THE ADDRESS OF FLAG 3\n         TM    0(R1),ACHKTPRF      PROFILE OR ENTITY GIVEN?\n         BZ    NOTPRO              NOT PROFILE, ENTITY\n         MVC   DSN,DSPDSNM         MOVE DSN IN FROM PROFILE\n         B     CHKRACF             CHECK TO SEE IF RACF IS ACTIVE\nNOTPRO   MVC   DSN,0(R3)           COPY OVER THE DSN\n         EJECT\nCHKRACF  L     R9,CVTRAC           GET THE RCVT ADDRESS\n         TM    RCVTSTAT,RCVTRNA    IS RACF ACTIVE?\n         BO    NORACF              NO, WARN OPERATOR\n         TM    RCVTFLGS,RCVTROFF   HAS RVARY INACT BEEN ISSUED?\n         BNZ   NORACF              YES, WARN OPERATOR\n         MVC   WTOLIST(WTOLISTL),WTOPROTO    MOVE IN SKELETON WTO\n         MVC   MSG1(MSG1LGTH),MSG1PRTO\n         MVC   MSG1DSN,DSN         MOVE DSN INTO MESSAGE\n         MVC   MSG1JOBN,0(R4)      MOVE JOBNAME INTO MESSAGE\n         MVC   WTOLIST+4(MSG1LGTH),MSG1\n         L     R1,ACHK@RTC         GET PTR TO REASON/RETURN CODE\n         ICM   R2,B'1111',0(R1)    PICK UP REASON/RETURN CODE\n         BZ    EXIT                ACCESS ALLOWED, EXIT\n         L     R8,ACHK@ACE         GET THE ACEE ADDRESS POINTER\n         ICM   R8,B'1111',0(R8)    DID RACF GIVE US AN ACEE?\n         BNZ   GOTACEE             YES, CHECK AUTHORITY\n         L     R6,ASCBASXB         GET THE ASXB ADDRESS\n         L     R8,ASXBSENV         GET THE ACEE ADDRESS\nGOTACEE  TM    ACEEFLG1,ACEEAUDT   DOES THE USER HAVE AUDITOR ATTR?\n         BNO   GROUPCHK            NO, GO SEE IF THIS IS 'SUPERMAN'\n         L     R1,ACHK@FG2         GET THE FLAG 2 ADDRESS\n         TM    0(R1),ACHKTRD       DID S/HE WANT READ ACCESS?\n         BNO   EXIT                NO, DISALLOW THE ACCESS\n         B     CLASSCHK            GO AROUND 'SUPERMAN'/TAPEDS CHECK\n*\nGROUPCHK CLC   ACEEGRPN(8),=CL8'SUPERMAN' USER CONNECTED TO 'SUPERMAN'?\n         BNE   TAPEDS              NO, GO CHECK IF TAPEDS PROTECT IS ON\n         B     CLASSCHK            YES, THIS IS 'SUPERMAN', CHECK CLASS\n*\nTAPEDS   TM    RCVTFLG1,RCVTTDSN   IS TAPEDS PROTECTION ON?\n         BNO   EXIT                NO, EXIT\n*                                  YES, TAPEDS PROTECTION IS ON,\n*                                     FIND OUT IF \"DSTYPE=T\"\n*\n         L     R1,ACHK@FG3         LOAD FLAG 3 ADDRESS\nTAPECHK  TM    0(R1),ACHKTDST      IS THIS A TAPEDS ACCESS?\n         BNO   EXIT                NO, EXIT\n*                                  YES, MAKE SURE 'CLASS=DATASET'\n*                                     & ISSUE WARNING MSGS\n*\nCLASSCHK L     R1,ACHK@CLS         GET THE CLASS POINTER\n         CLC   0(8,R1),DATASET     IS 'CLASS=DATASET'?\n         BNE   EXIT                NO, EXIT TO DISALLOW\n*\n         WTO   MF=(E,WTOLIST)      WRITE THE WARNING MESSAGE\n         L     R1,ACHK@RTC         GET THE REASON CODE ADDRESS\n         XC    0(4,R1),0(R1)       CLEAR THE REASON CODE\n         L     R1,ACHK@ABE         GET THE ABEND CODE ADDRESS\n         XC    0(4,R1),0(R1)       CLEAR THE ABEND CODE\n         L     R1,ACHK@LOG         GET THE LOGGING CONTROL ADDRESS\n         MVC   0(4,R1),=F'4'       UNCOND. LOG THIS ACCESS\n         L     R1,ACHK@ACC         GET AUTHORIZED ACCESS ADDRESS\n         CLI   0(R1),X'00'         IS THERE AN AUTHORIZATION?\n         BNE   CHKAUTH             YES, CREATE MSG SUMMARIZING ACTION\n         MVC   MSG1(MSG1LGTH),NOPROF    MOVE IN NO PROFILE MESSAGE\n         MVC   WTOLIST+4(MSG1LGTH),MSG1\n         B     WTOIT               WRITE NO PROFILE MESSAGE\nCHKAUTH  MVC   NOAUTH,NOAUTHP      MOVE IN SKELETON WTO\n         MVC   AUTH,=CL8'NONE'     ASSUME AUTHORIZATION TO BE NONE\n         TM    0(R1),ACHKAALT      IS AUTHORIZATION ALTER?\n         BNO   NOALT               NO, CHECK NEXT LEVEL\n         MVC   AUTH,=CL8'ALTER'    YES, INSERT INTO MESSAGE\nNOALT    TM    0(R1),ACHKACTL      IS AUTHORIZATION CONTROL?\n         BNO   NOCON               NO, CHECK NEXT LEVEL\n         MVC   AUTH,=CL8'CONTROL'  YES, INSERT INTO MESSAGE\nNOCON    TM    0(R1),ACHKAUPD      IS AUTHORIZATION UPDATE?\n         BNO   NOUPD               NO, CHECK NEXT LEVEL\n         MVC   AUTH,=CL8'UPDATE'   YES, INSERT INTO MESSAGE\nNOUPD    TM    0(R1),ACHKARD       IS AUTHORIZATION READ ONLY?\n         BNO   NOTRED              NO, MUST HAVE BEEN NONE\n         MVC   AUTH,=CL8'READ'     YES, INSERT INTO MESSAGE\nNOTRED   L     R1,ACHK@FG2         GET FLAG BYTE 2 ADDRESS\n         TM    0(R1),ACHKTALT      WAS THE REQUEST FOR ALTER?\n         BNO   NOALTR              NO, CHECK NEXT LEVEL\n         MVC   REQUEST,=CL8'ALTER' YES, INSERT INTO MESSAGE\nNOALTR   TM    0(R1),ACHKTCTL      WAS THE REQUEST FOR CONTROL?\n         BNO   NOCONR              NO, CHECK NEXT LEVEL\n         MVC   REQUEST,=CL8'CONTROL'    YES, INSERT INTO MESSAGE\nNOCONR   TM    0(R1),ACHKTUPD      WAS THE REQUEST FOR UPDATE?\n         BNO   NOUPDR              NO, CHECK NEXT LEVEL\n         MVC   REQUEST,=CL8'UPDATE'     YES, INSERT INTO MESSAGE\nNOUPDR   TM    0(R1),ACHKTRD       WAS THE REQUEST FOR READ ONLY?\n         BNO   WTOM                NO, THEN WHAT THE HECK\n         MVC   REQUEST,=CL8'READ'  YES, INSERT INTO MESSAGE\nWTOM     MVC   WTOLIST+4(MSG1LGTH),NOAUTH    MOVE IN SKELETON MESSAGE\nWTOIT    WTO   MF=(E,WTOLIST)      WRITE THE MESSAGE\n         B     EXIT                EXIT\nNORACF   WTO   '*** WARNING *** RACF NOT ACTIVE *** ACCESS ALLOWED'\n         L     R1,ACHK@ABE         GET ABEND CODE ADDRESS\n         XC    0(4,R1),0(R1)       CLEAR THE ABEND CODE\n         L     R1,ACHK@RTC         GET RETURN CODE ADDRESS\n         XC    0(4,R1),0(R1)       CLEAR THE RETURN CODE\n         EJECT\nEXIT     LR    R1,R13              SAVE SAVE AREA ADDRESS\n         L     R13,SAVEOLD         GET CALLER'S SAVE AREA\n         XC    SAVER15(4),SAVER15  CLEAR THE RETURN CODE\n         FREEMAIN R,A=(R1),LV=WORKSIZE  FREE OUR SAVE AREA\n         XC    SAVENEW,SAVENEW     CLEAR FORWARD CHAIN\n         RETURN (14,12)            EXIT\n         EJECT\nWTOPROTO WTO   '                                                       X\n                                                           ',MF=L,     X\n               ROUTCDE=(9,11)\nWTOLISTL EQU   *-WTOPROTO          LENGTH OF PROTOTYPE WTO LIST\nDATASET  DC    AL1(7),CL7'DATASET' DATASET CLASS LENGTH & NAME\nMSG1PRTO EQU   *\n         DC    C'ICHRCX02 -- JOB='\n         DC    CL8' '\n         DC    C', DSN='\nBLANKS   DC    CL69' '\nMSG1LGTH EQU   *-MSG1PRTO\nNOPROF   DC    CL99'ICHRCX02 ** WARNING ** NO RACF PROFILE -- ACCESS ALX\n               LOWED'\nNOAUTHP  DS    0CL99\n         DC    CL38'ICHRCX02 ** WARNING ** ACCESS INTENT ('\nREQUESTP DC    CL08' '\n         DC    CL21')    ACCESS ALLOWED ('\nAUTHP    DC    CL08' '\n         DC    CL03')  '\n         DC    CL21' '\n         LTORG\n         EJECT\n         REGS\n         EJECT\n         SAVEAREA\nWORKAREA EQU   *\nWTOLIST  WTO   '1234567890123456789012345678901234567890123456789012345X\n               67890123456789012345678901234567890123456789',MF=L,     X\n               ROUTCDE=(9,11)\nMSG1     EQU   *\n         DC    C'ICHRCX02 -- JOB='\nMSG1JOBN DC    CL8' '\n         DC    C', DSN='\nMSG1DSN  DC    CL44' '\n         ORG   MSG1\nNOAUTH   DS    0CL99\n         DC    CL38'ICHRCX02 ** WARNING ** ACCESS INTENT ('\nREQUEST  DC    CL08' '\n         DC    CL21')    ACCESS ALLOWED ('\nAUTH     DC    CL08' '\n         DC    CL03')  '\n         DS    CL21\n         ORG\nDSN      DS    CL44\nWORKSIZE EQU   *-SAVEAREA\n         EJECT\n         ACHKLIST\n         EJECT\n         ICHACHKL\n         EJECT\n         CVT   DSECT=YES,LIST=YES\n         EJECT\n         IHAPSA\n         EJECT\n         IHAASCB\n         EJECT\n         IHAASXB\n         EJECT\n         ICHPRCVT\n         EJECT\n         ICHRRPF\n         EJECT\n         IHAACEE\n         EJECT\n         END   ICHRCX02\n$$\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ICHRDX01": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x87!o\\x00\\x87!o\\x12\\x04\\x01\\x07\\x01\\x07\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf0\\xf9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1987-08-04T00:00:00", "modifydate": "1987-08-04T12:04:00", "lines": 263, "newlines": 263, "modlines": 0, "user": "FILE009"}, "text": "//**********************************************************************\n//**  RACDEF PRE-PROCESSING EXIT                                      **\n//**********************************************************************\n//UMOD000  EXEC PGM=GIMSMP,REGION=4096K\n//SMPCSI   DD DSN=SMP.GLOBAL.CSI,DISP=SHR\n//SMPOUT   DD SYSOUT=*\n//SMPRPT   DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SMPCNTL  DD *\n SET BDY(TARGET).\n RESTORE S(UMOD000).\n SET BDY(GLOBAL).\n REJECT S(UMOD000).\n RECEIVE SYSMODS.\n SET BDY(TARGET).\n APPLY S(UMOD000) ASSEM REDO COMPRESS(ALL).\n/*\n//SMP.SMPPTFIN DD DATA,DLM=$$\n++USERMOD(UMOD000).\n++VER (Z038)\n  FMID(HRF1702)\n  /*\n     THIS IS AN PRE-PROCESSING EXIT FOR RACDEF(S) THAT\n     COMPLIMENTS THE RACHECK EXIT, ICHRCX02, IN PROVIDING\n     TAPE DS PROTECTION IN WARNING MODE.\n     WHEN CREATING NEW TAPE DATASETS, RACDEF IS ENTERED,\n     THUS, TO PREVENT DISCRETE PROFILES FROM\n     BEING CREATED, RACDEF IS BYPASSED.  ADDITIONALLY, A\n     WARNING MESSAGE IS ISSUED FROM RACHECK.\n                                                                  */.\n++JCLIN.\n//ICHRDX01 EXEC PGM=IEWL,PARM='XREF,LIST,LET,NCAL,RENT'\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(2,2))\n//SYSPRINT DD SYSOUT=*\n//SYSLMOD  DD DSN=SYS1.LPALIB,DISP=SHR\n//SYSLIN   DD *\n  NAME ICHRDX01(R)\n/*\n++SRC (ICHRDX01)\n    SYSLIB  (UMODSRC)\n    DISTLIB (AUMODSRC)\n    DISTMOD (ALPALIB).\nD01      TITLE 'ICHRDX01 -- RACDEF PRE-PROCESSING EXIT ROUTINE'\n**********************************************************************\n*                                                                    *\n*  MODULE NAME -                                                     *\n*                                                                    *\n*     ICHRDX01 -- RACDEF PRE-PROCESSING EXIT ROUTINE                 *\n*                                                                    *\n*  FUNCTION -                                                        *\n*                                                                    *\n*     THIS EXIT ENFORCES THE USE OF GENERIC PROFILES FOR NEW DATA-   *\n*     SETS, BYPASSES RACDEF PROCESSING FOR TAPE DS WARNING MODE      *\n*                                                                    *\n*  ATTRIBUTES -                                                      *\n*                                                                    *\n*     REENTRANT, LPA RESIDENT.                                       *\n*                                                                    *\n*  REQUIREMENTS -                                                    *\n*                                                                    *\n*     MCI DEVELOPED MAPPING MACRO FOR RACDEF EXIT:  ADEFLIST         *\n*                                                                    *\n*  ENTRY CONDITIONS -                                                *\n*                                                                    *\n*     R1  - ADDRESS OF AREA DERIVED FROM PARAMETERS ON RACDEF MACRO  *\n*                                                                    *\n*  EXIT CONDITIONS -                                                 *\n*                                                                    *\n*     R15 - CONTAINS A RETURN CODE:                                  *\n*             0 - PROCESSING COMPLETE, RACDEF PROCESSING CONTINUES   *\n*             4 - REQUEST FAILED                                     *\n*             8 - PROCESSING COMPLETE, RACDEF TERMINATES             *\n*            12 - PROCESSING COMPLETE, BYPASS AUTHORIZATION CHECKS   *\n*                                                                    *\n*  REGISTER USAGE -                                                  *\n*                                                                    *\n*     R13 - ADDRESS OF STANDARD SAVE AREA                            *\n*     R12 - BASE ADDRESS (ICHRDX01)                                  *\n*     R11 - ADDRESS OF PARAMETER AREA                                *\n*     R10 - ADDRESS OF COMMUNICATIONS VECTOR TABLE (CVT)             *\n*     R9  - ADDRESS OF CURRENT TASK CONTROL BLOCK (TCB)              *\n*     R8  - ADDRESS OF ACCESSOR ENVIRONMENT ELEMENT (ACEE)           *\n*     R7  - ADDRESS OF RACF CVT (RCVT)                               *\n*     R6  - ADDRESS OF ADDRESS SPACE CONTROL BLOCK (ASCB)            *\n*     R5  - ADDRESS OF ADDRESS SPACE EXTENSION BLOCK (ASXB)          *\n*     R4  - ADDRESS OF CURRENT REQUEST BLOCK (RB)                    *\n*     R3  - ADDRESS OF CONTENTS DIRECTORY ENTRY (CDE)                *\n*     R1  - WORK                                                     *\n*     R0  - WORK                                                     *\n*                                                                    *\n*  OPERATION -                                                       *\n*                                                                    *\n*     1.  DETERMINE WHETHER OR NOT RACF IS ACTIVE.                   *\n*     2.  CHECK TO SEE IF REQUEST IS AGAINST CLASS(DATASET)          *\n*         IF IT IS CLASS(DATASET), THEN                              *\n*           CHECK IF 'TAPEDS' PROTECTION IS ON THEN                  *\n*             ISSUE A RACHECK SO THAT USER GETS 'WARNING' MSGS       *\n*             IRREGARDLESS OF AUTHORITY FROM RACHECK, ALLOW          *\n*             ACCESS SINCE IT IS 'WARN' MODE                         *\n*           IF 'TAPEDS' IS OFF, THEN EXIT                            *\n*           ELSE CONTINUE                                            *\n*     3.  SEARCH THE RB CHAIN FOR THE FIRST RB.  IF IT WAS A RACF    *\n*          COMMAND, EXIT NORMALLY TO ALLOW PROFILE MAINTENANCE.      *\n*     4.  OTHERWISE, BYPASS FURTHER RACDEF PROCESSING (WHICH, IN THE *\n*          CASE OF A NEWLY CREATED DATASET, FOR EXAMPLE, WILL CAUSE  *\n*          THE PROFILE NOT TO BE BUILT).                             *\n*                                                                    *\n*  CHANGE HISTORY -                                                  *\n*                                                                    *\n*                                                                    *\n**********************************************************************\n         EJECT\n         USING WORKAREA,R13\n         USING ICHRDX01,R12\n         USING ADEFLIST,R11\n         USING CVT,R10\n         USING TCB,R9\n         USING ACEE,R8\n         USING RCVT,R7\n         USING ASCB,R6\n         USING ASXB,R5\n         USING RBBASIC,R4\n         USING CDENTRY,R3\n         USING PSA,R0\nICHRDX01 CSECT\nICHRDX01 AMODE 31\nICHRDX01 RMODE ANY\n         SAVE  (14,12),,'ICHRDX01&SYSDATE.&SYSTIME'    SAVE REGISTERS\n         LR    R12,R15             ESTABLISH BASE REGISTER\n         LR    R11,R1              SAVE PARAMETER AREA ADDRESS\n         GETMAIN R,LV=SIZEWORK     OBTAIN A SAVE AREA\n         ST    R1,SAVENEW          FORWARD CHAIN\n         ST    R13,SAVEOLD-SAVEAREA(,R1)     BACKWARD CHAIN\n         LR    R13,R1              SAVE THE SAVE AREA POINTER\n         XR    R15,R15             ASSUME ZERO RETURN CODE\n         L     R10,FLCCVT          GET THE CVT ADDRESS\n         ICM   R7,B'1111',CVTRAC   IS THERE A RACF CVT?\n         BZ    EXIT                  NO, RACF IS NOT INSTALLED\n         TM    RCVTSTAT,RCVTRNA    IS RACF ACTIVE?\n         BO    EXIT                  NO, EXIT\n         TM    RCVTFLGS,RCVTROFF   HAS RVARY INACT BEEN ISSUED?\n         BO    EXIT                  YES, EXIT\n         L     R6,PSAAOLD          GET THE CURRENT ASCB ADDRESS\n         L     R9,PSATOLD          GET THE CURRENT TCB ADDRESS\n         L     R5,ASCBASXB         GET THE CURRENT ASXB ADDRESS\n         L     R1,ADEF@ACE         GET THE ACEE POINTER ADDRESS\n         ICM   R8,B'1111',0(R1)    DID RACF GIVE US AN ACEE?\n         BNZ   GOTACEE               YES, USE THAT ONE\n         ICM   R8,B'1111',ASXBSENV DOES THE USER HAVE AN ACEE?\n         BZ    EXIT                  NO, EXIT\nGOTACEE  TM    RCVTFLG1,RCVTTDSN   IS RACF TAPEDS PROTECTION ON?\n         BNO   EXIT                  NO, EXIT\n*                                    YES, CHECK 'DSTYPE'\n         L     R1,ADEF@FG2         LOAD FLAG BYTE 2 ADDRESS\nTAPECHK  TM    0(R1),ADEFTDST      DOES 'DSTYPE=TAPE'?\n         BNO   EXIT                  NO, EXIT\n*                                    YES, MAKE SURE 'CLASS=DATASET'\n         L     R1,ADEF@CLS         GET THE CLASS POINTER\n         CLC   0(8,R1),RACLASS     IS IT CLASS(DATASET)?\n         BNE   EXIT                  NO, EXIT\n         L     R1,TCBRBP           GET THE RB POINTER\nFINDRB   LR    R4,R1               COPY THE CURRENT RB POINTER\n         ICM   R1,B'0111',RBLINKB  GET THE PREVIOUS RB POINTER\n         CR    R1,R9               DOES IT POINT BACK TO THE TCB?\n         BNE   FINDRB                NO, CHECK THE NEXT RB\n         XR    R3,R3               CLEAR R3\n         ICM   R3,B'0111',RBCDE1   IS THERE A CDE FOR THIS RB?\n         BZ    BYPASS                NO, CAN'T FIGURE OUT WHO CALLED US\n         LA    R1,CMDTABLE         GET THE COMMAND TABLE ADDRESS\nCHECKCMD CLC   0(8,R1),TABLEEND    IS THIS END OF THE TABLE?\n         BE    CHKAUTH               YES, OR NOT A RACF COMMAND,\n*                                    GO ISSUE RACHECK FOR AUTHORIZATION\n         CLC   CDNAME(8),0(R1)     IS IT A RACF COMMAND?\n         BE    EXIT                  YES, EXIT\n         LA    R1,8(,R1)           POINT TO NEXT COMMAND IN TABLE\n         B     CHECKCMD            CHECK THE NEXT COMMAND\n*\n*  ISSUE RACHECK TO GET 'WARNING' MESSAGES TO THE USER, IF ANY\n*\nCHKAUTH  DS    0H\n         L     R1,ADEF@ENT         GET ENTITY ADDRESS\n         MVC   DSN,0(R1)           COPY OVER THE DATASET NAME\n         L     R1,ADEF@VOL         GET VOLUME ADDRESS\n         MVC   VOL,0(R1)           COPY OVER THE VOLUME SERIAL\n         MVC   AUTHCHK(LRACROUT),RACROUTL   INITIALIZE RACROUTE MACRO\n         RACROUTE REQUEST=AUTH,    RACHECK REQUEST                     X\n               CLASS=RACLASS,      CHECK FOR                           X\n               ATTR=ALTER,         ALTER                               X\n               ENTITY=DSN,         AUTHORITY                           X\n               VOLSER=VOL,         VOLUME OF DSN                       X\n               RELEASE=1.7,        SET RACF LEVEL TO 1.7               X\n               DSTYPE=T,           TAPE DS ACCESS REQUEST              X\n               WORKA=SAFWORK,      SAF WORK AREA                       X\n               MF=(E,AUTHCHK)\n*\n*  BYPASS RACDEF PROCESSING IRREGARDLESS OF THE RC FROM RACHECK\n*\nBYPASS   LA    R15,8               SET RETURN CODE TO BYPASS RACDEF\n         EJECT\nEXIT     LR    R1,R13              GET THE SAVE AREA POINTER\n         L     R13,SAVEOLD         GET CALLER'S SAVE AREA\n         ST    R15,SAVER15         SET RETURN CODE\n         FREEMAIN R,LV=SIZEWORK,A=(R1)  FREE OUR SAVE AREA\n         XC    SAVENEW(4),SAVENEW  CLEAR FORWARD CHAIN\n         RETURN (14,12)            RESTORE REGISTERS AND RETURN\n         EJECT\n*\n*    DATA AREAS\n*\n         DS    0D                  DOUBLE WORD ALIGN\nRACLASS  DC    AL1(L'RACLASSN)     CLASS NAME FOR RACROUTE\nRACLASSN DC    C'DATASET'          CLASS NAME FOR RACROUTE\nRACROUTL RACROUTE REQUEST=AUTH,WORKA=*-*,MF=L\nLRACROUT EQU   *-RACROUTL          LENGTH OF RACROUTE MACRO\nCMDTABLE DS    0CL8                RACF COMMAND TABLE\n         DC    CL8'AD'\n         DC    CL8'ADDSD'\n         DC    CL8'ALD'\n         DC    CL8'ALTDSD'\n         DC    CL8'DD'\n         DC    CL8'DELDSD'\nTABLEEND DC    8X'FF'\n         DS    0D\n         LTORG\n*\n*    DSECT FOR RACROUTE DYNAMIC AREAS\n*\nWORKAREA DSECT\n         SAVEAREA DSECT=NO\nSAFWORK  DS    CL512              SAF WORK AREA\n         DS    0D\nDSN      DS    CL44               DATASET NAME FOR RACROUTE\n         DS    0D\nVOL      DS    CL6                VOLUME SERIAL OF 'DSN'\n         DS    0D\nAUTHCHK  RACROUTE REQUEST=AUTH,MF=L,WORKA=*-*\nSIZEWORK EQU   *-WORKAREA         LENGTH OF DSECT\n*\n         EJECT\n         REGS\n         EJECT\n         ADEFLIST\n         EJECT\n         CVT   DSECT=YES,LIST=YES\n         EJECT\n         IHAPSA\n         EJECT\n         IHAACEE\n         EJECT\n         ICHPRCVT\n         EJECT\n         IHAASCB\n         EJECT\n         IHAASXB\n         EJECT\n         IHARB\n         EJECT\n         IHACDE\n         EJECT\n         IKJTCB LIST=YES\n         EJECT\n         END   ICHRDX01\n$$\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZAPDFP": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x87!o\\x00\\x87!o\\x12\\x04\\x00#\\x00#\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf0\\xf0\\xf9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1987-08-04T00:00:00", "modifydate": "1987-08-04T12:04:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "FILE009"}, "text": "//*-------------------------------------------------------------------*\n//*   USERMOD TO IGNORE THE \"WRITE-ENABLED\" ON TAPES FOR              *\n//*   RACF TAPEDS PROTECTION, SO THE TAPE WILL NOT KICK DOWN          *\n//*-------------------------------------------------------------------*\n//UMOD000  EXEC PGM=GIMSMP,REGION=4096K\n//SMPCSI   DD DSN=SMP.GLOBAL.CSI,DISP=SHR\n//SMPOUT   DD SYSOUT=*\n//SMPRPT   DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SMPCNTL  DD *\n SET BDY(TARGET).\n RESTORE S(UMOD000).\n SET BDY(GLOBAL).\n REJECT S(UMOD000).\n RECEIVE SYSMODS.\n SET BDY(TARGET).\n APPLY GROUP S(UMOD000) REDO.\n/*\n//SMP.SMPPTFIN DD DATA,DLM=$$\n++ USERMOD (UMOD000)\n   /*\n      THIS ZAP IGNORES THE EXISTENCE OF THE \"WRITE-ENABLED\"\n      IN TAPES(3420/3480) FOR RACF TAPEDS PROTECTION, SO\n      THAT MVS WILL NOT KICK DOWN A TAPE IF A \"WRITE ENABLED\"\n      IS DETECTED, EVEN THOUGH THE USER ONLY WANTS 'READ'.\n                                                               */.\n++ VER (Z038)\n   PRE(UY08699)\n   FMID(HDP2210) .\n++ ZAP (IFG0194F) .\n         NAME IFG0194A IFG0194F\n         VER  05C2 9180,41D6,4710,35E0\n         REP  05C6 47F0,35E0\n$$\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT009/FILE009.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT009", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}