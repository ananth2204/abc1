VATLSTxx (volume attribute list)

VATLSTxx contains one or more volume attribute lists that
predefine the mount and use attributes of direct access volumes.
The mount attribute determines the conditions under which a
volume can be demounted.  The use attribute controls the type of
requests for which a volume can be allocated.

The system programmer can predefine volume "mount" attributes as
permanently resident or reserved, and can predefine volume "use"
attributes as storage, public, or private.  Therefore, critical
direct access volumes can be controlled because the "mount" and
"use" attributes determine the type of data sets that can be
placed on a volume.  During allocation, data sets on volumes
marked permanently resident or reserved are selected first
because they require no serialization, thus minimizing processing
time.

You can ensure a faster initialization by specifying the volume
attribute list(s) efficiently.  Do not, for example, specify a
list at a given IPL that contains entries for volumes that will
not be mounted.  Un-mounted volumes require operator intervention
with resultant delay.

There are two ways to define the use and mount attributes for
DASD volumes.  You can define them in individual entries in the
VATLSTxx member, one volume to each entry, or you can use one
entry to define a group of volumes.  In this second way, you
specify generic volume serial numbers and device types for groups
of volumes.

Specifying generic values makes it easier for you to
maintain your VATLSTxx members.  Give one generic name to a group
of volumes mounted on devices that have the same device type and
the same mount and use attributes.  Specify an asterisk ("*") for
the device type when groups of volumes have the same volume
serial numbers, mount attributes, and use attributes, regardless
of the devices the volumes are mounted on.


For JES3, DEVICE and SETRES initialization statements, rather
than the VATLST, can be used to specify permanently-resident
volumes.  In a JES3 complex, you must assign the same mount
attribute to a volume mounted on every system in the complex.
For example, if you use the mount attribute of "permanently
resident" for the system residence volume on one system, you must
use the same use attribute on all the other systems.

If VATLST members are used for volumes resident on devices that
are shared among multiple systems, the mount attributes for a
specific volume must be the same on all systems.


VATLST Information in Common Storage
------ ----------- -- ------ -------

Not all VATLST information is kept in common storage after IPL
time.  The VATLSTxx member is processed by three system modules,
IEAVAP00, IEAVAP01, and IEAVAP02.  At IPL time, IEAVAP00 creates
a temporary VATTEMP area for keeping the IPL-relevant information.
IPL-relevant settings, such as the IPLUSE parameter from VATLSTxx,
are placed there; all the mounted UCB's are looked up, and mounted
with the required attributes.  After IPL time, the VATTEMP storage
area is FREEMAINed, and the VATDUSE storage member is populated
with all information relevant to mount attributes (etc.) that will
be in force after IPL time.

We have created a TSO command program called DVAT, which displays
the (permanently) displayable VATLST information from common storage.
You can find the DVAT command in this pds, in member VATLSTDV.  So
by seeing the code in DVAT, you can also see how the VATDUSE control
block is accessed by the system.

The structure of the VATDUSE control block is a little bit difficult
for me to figure out.  More about this follows:

The basic idea of the VATDUSE control block is that it has a header
and a table (or series of tables).  Each table entry is 16 bytes.
The number of table entries (I think) is at VATDUSE+x'20' for a
fullword, so you can use this number for a Branch and Count to go
through the table.

Layout of a VATDUSE table entry:

VOLSER or masked volser (6 bytes)

Device type (or masked device type) (1 byte) - usually UCBTBYT4
   for DASD, for example (x'0F' for 3390, x'0E' for 3380)

Mount attribute (Storage, Public, Private) (1 byte):
   (x'F2' for Private, x'F1' for Public, X'F0' for Storage)

Address of beginning of table section (4 bytes) - I think.

Count of table entries (of some sort - I don't know how they
   figure this) - 4 bytes.  It looks like the address at VATDUSE+x'20'.
   But I don't know why these counts are "repeated" so many times,
   or where the particular numbers come from, or what they stand for.


Code to Access the in-core VATDUSE Control Block
---- -- ------ --- ------- ------- ------- -----

GETVATD  DS    0H
         L     R3,16               CVT
         L     R3,X'128'(,R3)      POINT TO JESCT    (macro IEFJESCT)
         L     R3,X'78'(,R3)       POINT TO DACA     (macro IEFZB4IC)
         L     R3,X'0C'(,R3)       POINT TO VATDUSE


Sample Output from DVAT Command
------ ------ ---- ---- -------

               DISPLAY INCORE VATLST SETTINGS
               ------------------------------
   VATDUSE ADDRESS:  0C18B150
   DEFAULT SYSUSE :  PRIVATE
   VATLST FROM IPA:  (00,04)
   ---------------------------- (*PARMLIB  VATLST VOLUME SETTINGS*)
                                   ----------------------------
                                ( MAY BE OVERRIDDEN BY MOUNT CMDS )
                                ( NOT CHECKED AGAINST ONLINE UCBS )
     VOLMASK   ATTRIB    DEVTYP
   ----------------------------
     MVSRES    PRIVATE   3390
     MVSRS2    PRIVATE   3390
     WORKA*    STORAGE   3390
     WORKE1    STORAGE   3390
     WORK0*    STORAGE   3390
     PUB001    PUBLIC    3390
     WORK80    PRIVATE   3380
     CHUCK1    PUBLIC    3390




