IKJTSOxx (TSO/E commands and programs)

You can use IKJTSOxx to identify the commands and programs the
system is to use.    The IKJTSOxx member allows you to identify:

Authorized commands and programs.

Commands that a user cannot issue in the background.

APF-authorized programs that users may call through the TSO/E
service facility.

  If your installation is using the virtual lookaside facility
  (VLF) and plans to use the TSO/E VLFNOTE command, add VLFNOTE
  to this parmlib member as an authorized command, using the
  AUTHCMD NAME parameter in topic 61.5. See z/OS MVS Programming:
  Authorized Assembler Services Guide for information about when
  to use the VLFNOTE command.

  IKJTSOxx also allows you to specify the defaults for the TSO/E
  ALLOCATE, SEND, RECEIVE, TRANSMIT, CONSOLE, and TEST commands.

  By defining the SHR option on the ALLOCATE parameter, you can
  change the system default for the disposition of data sets from
  OLD to SHARE (SHR).

  The TRANSREC statement allows you to specify the
  characteristics for the data to be transmitted or received.

  The TEST parameter allows you to specify the
  installation-written test subcommands and the names of TSO/E
  commands that are to be allowed to execute under the TEST
  command. These commands are in addition to those allowed by
  default.

  Through the SEND statement, you can specify the data set into
  which the SEND command is to store messages. The system checks
  that named data set when the user issues the LISTBC command to
  retrieve stored messages. The SEND statement, with the
  MSGPROTECT keyword, also allows you to protect mail from being
  seen by users who do not meet security criteria. By itself,
  setting MSGPROTECT(ON) causes mail to be stored in a mail log
  named 'logname.userid', rather than 'userid.logname'.  By
  combining MSGPROTECT(ON) with RACF 1.9, you can request that
  the system compare the level of security of the mail received
  with the level of security of the recipient.    For information
  about setting up RACF 1.9 to work with MSGPROTECT(ON), see z/OS
  Security Server RACF Security Administrator's Guide.    To use
  IKJTSOxx, copy the default from SYS1.SAMPLIB(IKJTSO00) to
  SYS1.PARMLIB(IKJTSOxx). You can then update the member to meet
  the needs of your installation.

Control Block Information:

  This information is described by the IKJTPVT macro, which is
  internal to IBM only.  The location of the TPVT area is pointed
  to by the IKJTSVT macro which is in SYS1.MACLIB, but the details
  of what is there, have not officially been made public by IBM.

  However, you can find a description of the IKJTPVT macro in the
  SHOWMACS member of this pds.  As coded there, it is quite accurate,
  in our experience.

Address:  (code to get some of the information)

GETTPVT  DS    0H                  Get to the TPVT and its info.
         L     R2,16               Point to CVT
         L     R2,X'9C'(,R2)       Point to TSVT (TSO Vector Table)
         L     R2,X'4C'(,R2)       Point to TPVT (Parmlib Vector Table)
         ST    R2,SAVETPVT         Save TPVT address for later use
         L     R2,X'14'(,R2)       Point to CTLT control block
         ST    R2,SAVECTLT         Save CTLT address for later use
         L     R2,SAVETPVT         Load TPVT address back
         L     R2,X'34'(,R2)       Point to PLATCMD pointer
         LTR   R2,R2               Is there any?
         BZ    NOFCVE              No. Say so.
         ST    R2,SAVEFCVE         Yes. Store the FCVE pointer away.
         OI    PLATFLG,X'01'       Indicate that FCVE exists.
TRYPPVE  DS    0H
         L     R2,SAVETPVT         Load TPVT address back
         L     R2,X'40'(,R2)       Point to PLATPGM pointer
         LTR   R2,R2               Is there any?
         BZ    NOPPVE              No. Say so.
         ST    R2,SAVEPPVE         Yes. Store the PPVE pointer away.
         OI    PLATFLG,X'02'       Indicate that PPVE exists.
TRYPPVEE DS    0H
* ------
*    There doesn't seem to be a way to tell from an old INMXPARM
*    control block itself, that it is the old version.  So we use
*    the position of the active PARMLIB member name in the TPVT.
* ------
         L     R2,SAVETPVT         Load TPVT address back.
         CLC   =C'IKJ',7(R2)       Parmlib member name in old position?
         BNE   NEWSYSTM            No. It's a new TSO/E version
         OI    OLDFLAG,X'01'       Yes. Flag that the system is old.
NEWSYSTM DS    0H
* ------
*    We start scanning for PARMs here.

Image of Formatted IKJTPVT:

LOOK COMMAND - DISPLAY VIRTUAL MEMORY      DISPLAY ASID= 0051
ENTER CMD -
LAST CMD  - J+4C
                          0C12ED70  TPVT
 _ID     TPVT      _LEN    00DC  _VERS   03  _MEM    IKJTSO00
 _GEN    00000000  CTLT    0C18B1F0  CTLTLEN 0000003C  SEND    0C12E8D8
 ALPL    0C18E008  TEST    0C15A000  XPRMD   0C12E7D8  CONSOLE 0C179008
 FCVEC   00000000  HELP    0C143010  PPVEC   00000000
 DSNAM   SYS1.PARMLIB
 VOLSER  S23RES        SNAME   ADCD              USERID  **IPL**
 HHMMSS  13:11:38          YYMMDD  2013-12-09


Image of Unformatted IKJTPVT:

LOOK COMMAND - DISPLAY VIRTUAL MEMORY      DISPLAY ASID= 0051
ENTER CMD -
LAST CMD  - ONULL

0C12ED70   >E3D7E5E3  00DC0300  C9D2D1E3  E2D6F0F0 *>TPVT....IKJTSO00*
0C12ED80    00000000  0C18B1F0  0000003C  00000000  *.......0........*
0C12ED90    0C12E8D8  0C18E008  0C15A000  0C12E7D8  *..YQ..........XQ*
0C12EDA0    0C179008  00000000  00000000  0C143010  *................*
0C12EDB0    00000000  00000000  00000000  02000000  *................*
0C12EDC0    E2E8E2F1  4BD7C1D9  D4D3C9C2  40404040  *SYS1.PARMLIB    *
0C12EDD0    40404040  40404040  40404040  40404040  *                *
0C12EDE0    40404040  40404040  40404040  E2F2F3D9  *            S23R*
0C12EDF0    C5E20000  C1C4C3C4  40404040  5C5CC9D7  *ES..ADCD    **IP*
0C12EE00    D35C5C40  F1F37AF1  F17AF3F8  F2F0F1F3  *L** 13:11:382013*
0C12EE10    60F1F260  F0F90000  0001AD0E  20941311  *-12-09.......m..*
0C12EE20    38652013  12098002  00000000  00000000  *................*
0C12EE30    00000000  00000000  00000000  00000000  *................*
0C12EE40    00000000  00000000  00000000  0C12EE00  *................*
0C12EE50    C5D5C6D3  40000000  00000000            *ENFL .......    *


References:

 1.  Please see CBT File 731 for many further details, if you want to
     delve into this area.

 2.  Here is a layout for the (undocumented) TPVT control block:
     (from member SHOWMACS in this pds)

         MACRO
         IKJTPVT
TPVT     DSECT                         TSO PARMLIB vector table
TPVT_ID  DS    C'TPVT'           + 00  BLOCK ID
TPVT_LEN DS    H'220'              04  LENGTH OF TPVT          HTE26E2
****     DS    H'72'                   LENGTH OF TPVT          OLD
TPVT_VERS DS   FL1'3'              06  VERSION
TPVT_MEM1 DS  0C'IKJTSO00'     OLD 07  CURRENT PARMLIB MEMBER  HTE25E2
         DS    X                                               HTE26E2
TPVT_MEM DS    C'IKJTSO00'     NEW 08  CURRENT PARMLIB MEMBER  HTE26E2
TPVT_GEN DS    F                       PARMLIB generation count
TPVTCTLT DS    A(CTLT)             14  IKJCTLT
TPVTCTLT_LEN DS F'60'              18  length of CTLT
         DS    4X
TPVTSEND DS    V(SCB)              20  IKJEESCB   (SYS1.BRODCAST)
TPVTALPL DS    V(ALPL)             24  ALPL       (ALLOCATE defaults)
TPVTTEST DS    V(TPT)              28  TPT (TEST)
TPVTXPRMD DS   V(XPRM)             2C  INMXPARM   (XMIT)
TPVTCONSOLE DS V(CNPRM)            30  IKJCNPRM   (CONSOLE)
TPVTFCVEC DS   A,F                 34  FCVE       (Platform commands)
TPVTHELP DS    V(HCB)              3C  IKJEFHCB   (HELP)
TPVTPPVEC DS   A,F                 40  PPVE       (Platform programs)
           ORG  TPVT+X'50'
TPVTDSNAM  DS  CL44'SYS1.PARMLIB'  50  dsname                  HTE26E2
TPVTVOLSER DS  C'SYSCAT'           7C  volser                  HTE26E2
           DS  2X                                              HTE26E2
TPVTSNAME  DS  CL8'P390'           84  from system             HTE26E2
TPVTUSERID DS  CL8'SYSP08M'        8C  by userid               HTE26E2
TPVTHHMMSS DS  CL8'16:59:56'       94  at hh:mm:ss             HTE26E2
TPVTYYMMDD DS  C'1998-10-29'       9C  on yyyy-mm-dd           HTE26E2
           DS  X'0600,00000001,7490,16595156,19981029'         HTE26E2
         ORG   TPVT+X'DC'              end of TPVT             HTE26E2
         MEND


 3.  The CTLT control block points to the TSO authorization tables,
     which are the CSA copies of IKJEFTE2 (AUTHCMD), IKJEFTE8
     (AUTHPGM), IKJEFTAP (AUTHTSF), and IKJEFTNS (NOTBKGND).

*     IF R2 IS POINTING TO THE TPVT, THEN
         L     R2,X'14'(,R2)        CTLT

         MACRO
         IKJCTLT
CTLT     DSECT                         TSO/E Control Table
CTLT_ID  DS    C'CTLT'         +  0    BLOCK ID
CTLT_LEN DS    H'60'           +  4    LENGTH OF CTLT
CTLT_VERS DS   FL1'2'          +  5    version number
         DS    X               +  6    UNUSED
CTLTTE2  DS    A,F,H,H         +  8    IKJEFTE2  PTR,LEN,#ENT,ENT_LEN
CTLTTE8  DS    A,F,H,H         + 14    IKJEFTE8  PTR,LEN,#ENT,ENT_LEN
CTLTTNS  DS    A,F,H,H         + 20    IKJEFTNS  PTR,LEN,#ENT,ENT_LEN
CTLTTAP  DS    A,F,H,H         + 2C    IKJEFTAP  PTR,LEN,#ENT,ENT_LEN
CTLT_TABLE_BUILT_FLAGS DS X    + 38    tables built from IKJTSOxx
CTLTTE2_BUILT EQU X'80'
CTLTTE8_BUILT EQU X'40'
CTLTTNS_BUILT EQU X'20'
CTLTTAP_BUILT EQU X'10'
         MEND

 4.  Other control blocks chained off the TPVT are described above.
     You can check CBT File 731 for further details and programs
     which display and access this information.  Also see the
     descriptive macros in the SHOWMACS member of this pds, which
     start with IKJ**** .  These control blocks correspond with
     settings in the IKJTSOxx PARMLIB member.

