{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011952000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE414.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE414.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x05'", "DS1TRBAL": "b'\\x8c\\xc8'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\xf9\\x00\\x08\\x02\\xf9\\x00\\x0b\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00\\x11\\x01\\x13\\x05\\x0f\\x01\\x13\\x05\\x0f\\x12V\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-02-19T00:00:00", "modifydate": "2013-02-19T12:56:11", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-486"}, "text": "REGULAR CBT TAPE - VERSION 486    FILE:  414\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT486.FILE414\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 6 MEMBERS COUNTED; CUMULATIVE SIZE IS 765 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   02/19/13    12:56:11    UTC-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x01\\x05\\x7f\\x01\\x01\\x05\\x7f\\x18!\\x00R\\x00S\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-02-26T00:00:00", "modifydate": "2001-02-26T18:21:00", "lines": 82, "newlines": 83, "modlines": 0, "user": "WSBG"}, "text": "Golob, Sam\nFrom:   Garcia, Joe [Joe.Garcia@ANICO.com]\nSent:   Monday, February 26, 2001 3:40 PM\nTo:     sbgolob@attglobal.net\n\nSubject:        FW: Machine to ANSI\nFor your information as per Rick's suggestion.  Regards,\n\n\n                                   Joe Garcia Jr.\n            \\|/             Technical support\n        (@ @)            American National Ins. Co.\n ----oOO-(_)-OOo-------  (409) 766-6463\n                                   Joe.Garcia@ANICO.com\n\n\n-----Original Message-----\nFrom: Rick Fochtman [mailto:Rick.Fochtman@botcc.com]\nSent: Monday, February 26, 2001 7:06 AM\nTo: Garcia Joe\nSubject: Re: Machine to ANSI\n\n\nGot it.  Thanks.  I suggest you pass your updated version to Sam\nGolob also, and be sure to take credit for the changes.  :-)\n\n-----Original Message-----\n\"Garcia, Joe\" wrote:\n\n  Rick,  Attached you will find your program with the changes that\n  I made to accommodate our requirements.  My changes contain\n  ANI01 in columns 67-71.  Thought you might find it useful.\n\n  Regards,\n\n                                  Joe Garcia Jr.\n                                  Technical Support\n                                  American National Ins. Co.\n                                  (409) 766-6463\n                                  Joe.Garcia@ANICO.com\n\n  -----Original Message-----\n  From: Rick Fochtman [mailto:Rick.Fochtman@botcc.com]\n  Sent: Friday, February 23, 2001 7:11 AM\n  To: Garcia Joe\n  Subject: Re: Machine to ANSI\n\n  Looking into it.  I wrote it primarily because of ASM-H using\n  machine carriage controls.\n\n  -----Original Message-----\n  \"Garcia, Joe\" wrote:\n\n    Rick,\n\n    I down loaded the machine to ANSI control character utility.  I\n    am processing our print files and have run into a problem.  As\n    it turns out, we have some old programs that are generating\n    immediate machine carriage control codes.  Since this utility\n    discards immediate code lines, the converted to ANSI print\n    lines are printing without the same number of skips between the\n    print lines.  Example:\n\n\n            Machine converted to            ANSI\n              '8B'                                   'F1'\n              '09'                                   'F0'\n              '13'\n              '09'\n\n    Could you help me out with this problem?  I am not sure why\n    the immediate lines are discarded.  In the above example,\n    they are actually trying to overprint the lines.\n\n    Regards,\n\n                                    Joe Garcia Jr.\n                                    Technical Support\n                                    American National Ins. Co.\n                                    (409) 766-6463\n                                    Joe.Garcia@ANICO.com\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$README": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00\\x00\\x00\\x99'\\x1f\\x01\\x01\\x05\\x7f\\x168\\x00\\x10\\x00\\t\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1999-09-28T00:00:00", "modifydate": "2001-02-26T16:38:00", "lines": 16, "newlines": 9, "modlines": 0, "user": "WSBG"}, "text": "Subj: M-to-A Converter                                                  ZE=3 PTS\nDate: 8/23/99 12:12:41 PM !!!First Boot!!!\nFrom: Rick.Fochtman@botcc.com (Rick Fochtman)\n      rfochtman@ync.net\nTo: SBGOLOB@aol.com (Golob, Sam), sbgolob@attglobal.net (Golob, Sam)\n\nMachine control character to ANSI control character conversion\nprogram is attached, for print output.\n\nDDNAMES are SYSUT1 and SYSUT2.  Instructions for use are in the\n  source program comments, at the top.\n\n My UNLISTED phone number is (630) 719-1545 and I do have an\n answering machine.  I'm home MOST evenings except Thursday,\n after 6:00 pm Central time.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE414": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00T\\x01\\x13\\x05\\x0f\\x01\\x13\\x05\\x0f\\x12U\\x00\\x13\\x00\\x13\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-02-19T00:00:00", "modifydate": "2013-02-19T12:55:54", "lines": 19, "newlines": 19, "modlines": 0, "user": "CBT-486"}, "text": "//***FILE 414 is from Rick Fochtman of Chicago, Illinois and        *   FILE 414\n//*           contains a batch program to convert printout from     *   FILE 414\n//*           machine control characters to ANSI control            *   FILE 414\n//*           characters.                                           *   FILE 414\n//*                                                                 *   FILE 414\n//*           email:   sbgolob@cbttape.org     or                   *   FILE 414\n//*                    sbgolob@attglobal.net                        *   FILE 414\n//*                                                                 *   FILE 414\n//*           The REWRITE program has been updated by Joe Garcia,   *   FILE 414\n//*           to take care of some problems that Rick didn't        *   FILE 414\n//*           encounter.                                            *   FILE 414\n//*                                                                 *   FILE 414\n//*                     Joe Garcia Jr.                              *   FILE 414\n//*                     Technical support                           *   FILE 414\n//*                     American National Ins. Co.                  *   FILE 414\n//*                                                                 *   FILE 414\n//*           phone:    (409) 766-6463                              *   FILE 414\n//*           email:    Joe.Garcia@ANICO.com                        *   FILE 414\n//*                                                                 *   FILE 414\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REWRITE": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x05\\x7f\\x01\\x01\\x05\\x7f\\x18\\x05\\x01J\\x01J\\x00\\x00\\xd1\\xc7\\xc1\\xd9\\xc3\\xc9\\xc1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-02-26T00:00:00", "modifydate": "2001-02-26T18:05:00", "lines": 330, "newlines": 330, "modlines": 0, "user": "JGARCIA"}, "text": "//REWRITE JOB (A03,00142SPIZ),GARCIA,NOTIFY=CD9R06,MSGCLASS=T\n//ASM EXEC  ASMHCL\n//SYSIN DD *\nRWRT     TITLE 'CONVERT MACHINE TO ANSI CARRIAGE CONTROLS'\n*---------------------------------------------------------------------*\n*---     THIS PROGRAM READS IN A DATASET CONTAINING MACHINE        ---*\n*---     CARRIAGE CONTROLS AND WRITES AN EQUIVALENT DATASET        ---*\n*---     WITH ANSI CARRIAGE CONTROLS.                              ---*\n*---                                                               ---*\n*---     INPUT: DDNAME = SYSUT1.  IF SPANNED RECORDS ARE PRESENT   ---*\n*---      THE USER MUST SPECIFY BFTEK=A IN THE DCB ATTRIBUTES.     ---*\n*---                                                               ---*\n*---     OUTPUT: DDNAME = SYSUT2.  ALL CHARACTERISTICS ARE COPIED  ---*\n*---     EXCEPT THE CONTROL CHARACTER DESIGNATION, WHICH IS        ---*\n*---     SET TO DENOTE ANSI CARRIAGE CONTROLS.                     ---*\n*---                                                               ---*\n*---     PROGRAM ATTRIBUTES: NON-REENTRANT, NON-REUSABLE,          ---*\n*---     PROBLEM PROGRAM.                                          ---*\n*---------------------------------------------------------------------*\nREWRITE  CSECT\nR0       EQU   0                   R\nR1       EQU   1                    E\nR2       EQU   2                     G\nR3       EQU   3                      I\nR4       EQU   4                       S\nR5       EQU   5                        T\nR6       EQU   6                         E\nR7       EQU   7                          R\nR8       EQU   8\nR9       EQU   9                   E\nR10      EQU   10                   Q\nR11      EQU   11                    U\nR12      EQU   12                     A\nR13      EQU   13                      T\nR14      EQU   14                       E\nR15      EQU   15                        S\n*--------------------------------------------------------------------*\n*---     STANDARD NON-REENTRANT ENTRY LINKAGE.  NOTE THE USE OF   ---*\n*---     R13 AS SAVE AREA POINTER AS WELL AS PROGRAM BASE REG.    ---*\n*--------------------------------------------------------------------*\n         B     12(,R15)            BRANCH AROUND\n         DC    AL1(7),CL7'REWRITE'\n         STM   R14,R12,12(R13)     SAVE ENTRY REGS\n         BAL   R2,92(,R15)\n         USING *,R13\n         DS    18F\n         XC    0(72,R2),0(R2)\n         ST    R13,4(,R2)\n         ST    R2,8(,R13)\n         LR    R13,R2              LOAD PROGRAM BASE REGISTER\n*--------------------------------------------------------------------*\n*---     PREPARE DCB'S FOR READING AND WRITING THE APPROPRIATE    ---*\n*---     FILES.  IN DCB USES COMPLETION EXIT TO COPY THE          ---*\n*---     ATTRIBUTES FROM IN DCB TO THE OUT DCB.                   ---*\n*--------------------------------------------------------------------*\n         OPEN  (IN)                OPEN THE DCB'S\n         OPEN  (OUT,OUTPUT)        OPEN THE DCB'S\n*--------------------------------------------------------------------*\n*---     MAIN PROCESSING LOOP STARTS HERE.                        ---*\n*--------------------------------------------------------------------*\nL1       DS    0H\n         GET   IN                  READ A RECORD\n         LR    R2,R1               COPY ITS ADDRESS\n         TM    VFG,X'80'           VARIABLE VORMAT ??\n         BZ    NOTVIN              NOPE ---\n         LA    R3,4(,R2)           YES; POINT TO C.C. BYTE\n         B     CALLCNVT            GO CONVERT IT\nNOTVIN   DS    0H\n         LA    R3,0(,R2)           POINT TO NON-VB C.C.\nCALLCNVT DS    0H\n         CALL  CCCNVT,((3))        CONVERT THE CONTROL\n         STC   R0,SAVECC2          SAVE THE RESULT\n         MVC   0(1,R3),SAVECC1     COPY LAST C.C. INTO LINE\n         MVC   SAVECC1,SAVECC2     UPDATE MY SAVE-VALUE\n         LTR   R15,R15             SUPPRESS IT ??\n*        BNZ   L1                  YES ---\n         BNZ   CKIMMD              YES, SAVE R15                  ANI01\n         L     R11,SAVER15       NO, RESTORE PREVIOUS R15         ANI01\n         LTR   R11,R11           WAS IT AN IMMEDIATE CC?          ANI01\n         BZ    PUTX              NO, GO OUTPUT THE LINE           ANI01\n         CLI   0(R3),X'40'     IS CC SPACE 1?                     ANI01\n         BNE   CC2               NO, CHECK FOR SPACE2             ANI01\n         MVI   0(R3),X'F0'     YES, MAKE SPACE 2                  ANI01\n         B     PUTX              NOW GO PUTX LINE                 ANI01\nCC2      CLI   0(R3),X'F0'     IS CC SPACE 2?                     ANI01\n         BNE   PUTX              NO, LEAVE IT ALONE               ANI01\n         MVI   0(R3),X'60'     YES, MAKE SPACE 3                  ANI01\nPUTX     ST    R15,SAVER15      SAVE R15 FOR IMMEDIATE TEST       ANI01\n         PUTX  OUT,IN              NOPE; OUTPUT THE LINE\n         B     L1                  AND CONTINUE ---\nCKIMMD   ST    R15,SAVER15        SAVE R15 FOR IMMEDIATE TEST     ANI01\n         B     L1                  AND CONTINUE ---               ANI01\n*--------------------------------------------------------------------*\n*---     MAIN PROCESSING LOOP ENDS HERE.                          ---*\n*--------------------------------------------------------------------*\n*---     CLEAN UP FILES AND BUFFERS AND EXIT                      ---*\n*--------------------------------------------------------------------*\nENDIN    DS    0H\n         CLOSE (OUT,,IN)           CLOSE THE FILES\n         FREEPOOL IN               RELEASE THE\n         FREEPOOL OUT                BUFFER POOLS\n         L     R13,4(,R13)         LOAD BACK POINTER\n         LM    R14,R12,12(R13)     RESTORE THE REGS\n         LA    R15,0               COND CODE ALWAYS ZERO\n         BR    R14                 AND RETURN TO CALLER\n         SPACE 3\n*---------------------------------------------------------------------*\n*---     THIS LITTLE ROUTINE COPIES THE IMPORTANT ATTRIBUTES       ---*\n*---     FROM THE INPUT DCB TO THE OUTPUT DCB.  NOTE THAT WE ARE   ---*\n*---     PULLING A FAST ONE ON THE ASSEMBLER VIS-A-VIS USE OF      ---*\n*---     THE DCBD DSECT.  BE SURE YOU UNDERSTAND HOW THIS WORKS    ---*\n*---     BEFORE YOU TRY TO CHANGE IT!!                             ---*\n*---------------------------------------------------------------------*\nCOPYDCB  DS    0H\n         USING *,R15\n         LA    R2,0(,R1)           COPY INPUT DCB ADDRESS\n         LA    R3,OUT              LOAD OUTPUT DCB ADDRESS\n         USING IHADCB,R0           FAST ONE STARTS HERE\n         LH    R0,DCBLRECL(R2)     LOAD INPUT LRECL\n         STH   R0,DCBLRECL(R3)     STORE IN OUTPUT DCB\n         LH    R0,DCBBLKSI(R2)     LOAD INPUT BLKSIZE\n         STH   R0,DCBBLKSI(R3)     STORE IN OUTPUT DCB\n         IC    R0,DCBRECFM(R2)     INSERT RECORD FORMAT\n         STC   R0,DCBRECFM(R3)     STORE IN OUTPUT DCB\n         LA    R4,DCBRECFM(R3)     POINT TO OUTPUT RECFM\n         NI    0(R4),255-DCBRECCM  TURN OFF MACHINE CTL BIT\n         OI    0(R4),DCBRECCA      TURN ON ANSI-CTL BIT\n         TM    0(R4),DCBRECU       'U' FORMAT ??\n         BOR   R14                 YES; ALL DONE\n         TM    0(R4),DCBRECV       VARIABLE FORMAT ??\n         BZR   R14                 NOPE ---\n         OI    VFG,X'80'           YES; SET MY FLAG\n         BR    R14                 AND RETURN\n         DROP  R0,R15              ALL DONE WITH THESE\n         SPACE 3\nVFG      DC    X'00'               FLAG FOR VARIABLE FORMAT\nSAVECC1  DC    C'1'                INITIAL VALUE: NEW PAGE\nSAVECC2  DC    C' '                INITIAL VALUE: SINGLE SPACE\n         DS    0F                 FULLWORD BOUNDARY               ANI01\nSAVER15  DC    F'0'               SAVE R15                        ANI01\nIN       DCB   DSORG=PS,MACRF=GL,DDNAME=SYSUT1,EODAD=ENDIN,            X\n               EXLST=EXITS,BFTEK=A\nOUT      DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT2\nEXITS    DS    0F\n         DC    XL1'85',AL3(COPYDCB) COMPLETION EXIT TO COPY ATTRIBUTES\n         LTORG ,                   DISPLAY ANY LITERALS\n         DCBD  DSORG=QS\n         END\n         TITLE 'CCCNVT - CONVERT MACHINE TO ANSI CARRIAGE CONTROLS'\nCCCNVT   CSECT\n*---------------------------------------------------------------------*\n*---     THIS SUBROUTINE TAKES IN A SINGLE-CHARACTER MACHINE-CODE  ---*\n*---           CARRIAGE CONTROL AND RETURNS THE ANSI EQUIVALENT    ---*\n*---           IN R0.  A RETURN CODE OF 0 DENOTES THAT THE         ---*\n*---           LINE, CONTAINING THE MACHINE CODE CONTROL, IS TO    ---*\n*---           BE PRINTED AFTER TRANSLATION, WHILE A '4' RETURN    ---*\n*---           CODE INDICATES THAT THE CONTROL WAS AN IMMEDIATE    ---*\n*---           COMMAND AND THE CONTAINING LINE SHOULD BE           ---*\n*---           DISCARDED AFTER CARRIAGE CONTROL EXTRACTION AND     ---*\n*---           TRANSLATION.                                        ---*\n*---                                                               ---*\n*---     ATTRIBUTES: REENTRANT, REUSABLE, REFRESHABLE              ---*\n*---           (MAY BE LPALIB RESIDENT) STANDARD LINKAGE           ---*\n*---           CONVENTIONS ARE ADHERED TO THROUGHOUT.              ---*\n*---                                                               ---*\n*---     HERE ARE THE MACHINE-CODE CARRIAGE CONTROLS PROCESSED:    ---*\n*---                                                               ---*\n*---     01 - WRITE, NO SPACE                                      ---*\n*---     09 - WRITE, SPACE 1 LINE                                  ---*\n*---     0B - IMMEDIATE SPACE 1 LINE                               ---*\n*---     11 - WRITE, SPACE 2 LINES                                 ---*\n*---     13 - IMMEDIATE SPACE 2 LINES                              ---*\n*---     19 - WRITE, SPACE 3 LINES                                 ---*\n*---     1B - IMMEDIATE SPACE 3 LINES                              ---*\n*---     89 - WRITE, SKIP TO CHANNEL 1                             ---*\n*---     8B - IMMEDIATE SKIP TO CHANNEL 1                          ---*\n*---     91 - WRITE, SKIP TO CHANNEL 2                             ---*\n*---     93 - IMMEDIATE SKIP TO CHANNEL 2                          ---*\n*---     99 - WRITE, SKIP TO CHANNEL 3                             ---*\n*---     9B - IMMEDIATE SKIP TO CHANNEL 3                          ---*\n*---     A1 - WRITE, SKIP TO CHANNEL 4                             ---*\n*---     A3 - IMMEDIATE SKIP TO CHANNEL 4                          ---*\n*---     A9 - WRITE, SKIP TO CHANNEL 5                             ---*\n*---     AB - IMMEDIATE SKIP TO CHANNEL 5                          ---*\n*---     B1 - WRITE, SKIP TO CHANNEL 6                             ---*\n*---     B3 - IMMEDIATE SKIP TO CHANNEL 6                          ---*\n*---     B9 - WRITE, SKIP TO CHANNEL 7                             ---*\n*---     BB - IMMEDIATE SKIP TO CHANNEL 7                          ---*\n*---     C1 - WRITE, SKIP TO CHANNEL 8                             ---*\n*---     C3 - IMMEDIATE SKIP TO CHANNEL 8                          ---*\n*---     C9 - WRITE, SKIP TO CHANNEL 9                             ---*\n*---     CB - IMMEDIATE SKIP TO CHANNEL 9                          ---*\n*---     D1 - WRITE, SKIP TO CHANNEL 10                            ---*\n*---     D3 - IMMEDIATE SKIP TO CHANNEL 10                         ---*\n*---     D9 - WRITE, SKIP TO CHANNEL 11                            ---*\n*---     DB - IMMEDIATE SKIP TO CHANNEL 11                         ---*\n*---     E1 - WRITE, SKIP TO CHANNEL 12                            ---*\n*---     E3 - IMMEDIATE SKIP TO CHANNEL 12                         ---*\n*---                                                               ---*\n*---     ALL OTHERS ARE LEFT AS-IS.                                ---*\n*---------------------------------------------------------------------*\nR0       EQU   0                   R\nR1       EQU   1                    E\nR2       EQU   2                     G\nR3       EQU   3                      I\nR4       EQU   4                       S\nR5       EQU   5                        T\nR6       EQU   6                         E\nR7       EQU   7                          R\nR8       EQU   8\nR9       EQU   9                   E\nR10      EQU   10                   Q\nR11      EQU   11                    U\nR12      EQU   12                     A\nR13      EQU   13                      T\nR14      EQU   14                       E\nR15      EQU   15                        S\n         STM   R14,R12,12(R13)     SAVE THE ENTRY REGISTERS\n         LR    R12,R15             COPY THE E.P. ADDRESS\n         USING CCCNVT,R12          AND DECLARE THE BASE\n         L     R2,0(,R1)           LOAD THE CONTROL CHARACTER POINTER\n         LA    R3,0                CLEAR A WORK REGISTER\n         IC    R3,0(,R2)           AND INSERT THE CHARACTER\n         LA    R4,CCTAB(R3)        POINT INTO THE TABLE\n         IC    R3,0(,R4)           TRANSLATE IT\n         LA    R15,0               ASSUME WE PRINT THIS ONE\n         TM    0(R4),X'80'         SUPPRESS CODE ??E\n         BZ    *+8                 NOPE ---\n         LA    R15,4               YES; SET 4 RETURN CODE\n         N     R3,=A(X'7F')        REMOVE SUPPRESS CODE\n         CH    R3,=AL2(ANSILEN)    DO WE XLATE ??\n         BL    ICANSI              YES ---\n         IC    R0,0(,R2)           NOPE; RETURN ORIGINAL CODE\nENDIT    DS    0H\n         LM    R2,R12,28(R13)      RESTORE REGISTERS\n         BR    R14                 AND RETURN TO CALLER\nICANSI   DS    0H\n         IC    R0,ANSITAB(R3)      LOAD THE ANSI EQUIVALENT\n         B     ENDIT               AND RETURN TO CALLER\n         SPACE 3\n*---------------------------------------------------------------------*\n*---     THE FOLLOWING TRANSLATE TABLE DESCRIBES THE TRANSLATION   ---*\n*---     OF EACH CARRIAGE CONTROL. THE FORMAT OF EACH ENTRY IS     ---*\n*---     THIS:                                                     ---*\n*---                                                               ---*\n*---     B'1... ....'  --- SUPPRESS PRINT OF THIS LINE             ---*\n*---                                                               ---*\n*---     B'0... ....'  --- PRINT THIS LINE WITH THE TRANSLATED     ---*\n*---                       CONTROL FROM THE PREVIOUS LINE          ---*\n*---                                                               ---*\n*---     B'.XXX XXXX'  --- INDEX INTO ANSITAB FOR THE APPROPRIATE  ---*\n*---                       ANSI CARRIAGE CONTROL EQUIVALENT.       ---*\n*---                                                               ---*\n*---     NOTE THAT ALL NON-PROCESSED CARRIAGE CONTROLS HAVE        ---*\n*---     TRANSLATE VALUES OF 7F. THE ALGORITHM CHECKS THAT         ---*\n*---     THE TRANSLATED VALUE FALLS WITHIN THE LENGTH OF ANSITAB   ---*\n*---     SO THAT AN INVALID CONTROL IS REPLACED WITH ITSELF.       ---*\n*---------------------------------------------------------------------*\nCCTAB    DC    16X'7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F'\n         ORG   CCTAB+X'01'         WRITE WITHOUT SPACING\n         DC    AL1(0)\n         ORG   CCTAB+X'09'         WRITE AND SPACE 1 LINE\n         DC    AL1(1)\n         ORG   CCTAB+X'11'         WRITE AND SPACE 2 LINES\n         DC    AL1(2)\n         ORG   CCTAB+X'19'         WRITE AND SPACE 3 LINES\n         DC    AL1(3)\n         ORG   CCTAB+X'89'         WRITE AND SKIP TO CHANNEL 1\n         DC    AL1(4)\n         ORG   CCTAB+X'91'         WRITE AND SKIP TO CHANNEL 2\n         DC    AL1(5)\n         ORG   CCTAB+X'99'         WRITE AND SKIP TO CHANNEL 3\n         DC    AL1(6)\n         ORG   CCTAB+X'A1'         WRITE AND SKIP TO CHANNEL 4\n         DC    AL1(7)\n         ORG   CCTAB+X'A9'         WRITE AND SKIP TO CHANNEL 5\n         DC    AL1(8)\n         ORG   CCTAB+X'B1'         WRITE AND SKIP TO CHANNEL 6\n         DC    AL1(9)\n         ORG   CCTAB+X'B9'         WRITE AND SKIP TO CHANNEL 7\n         DC    AL1(10)\n         ORG   CCTAB+X'C1'         WRITE AND SKIP TO CHANNEL 8\n         DC    AL1(11)\n         ORG   CCTAB+X'C9'         WRITE AND SKIP TO CHANNEL 9\n         DC    AL1(12)\n         ORG   CCTAB+X'D1'         WRITE AND SKIP TO CHANNEL 10\n         DC    AL1(13)\n         ORG   CCTAB+X'D9'         WRITE AND SKIP TO CHANNEL 11\n         DC    AL1(14)\n         ORG   CCTAB+X'E1'         WRITE AND SKIP TO CHANNEL 12\n         DC    AL1(15)\n         ORG   CCTAB+X'0B'         IMMEDIATE SPACE 1 LINE\n         DC    AL1(128+01)\n         ORG   CCTAB+X'13'         IMMEDIATE SPACE 2 LINES\n         DC    AL1(128+02)\n         ORG   CCTAB+X'1B'         IMMEDIATE SPACE 3 LINES\n         DC    AL1(128+03)\n         ORG   CCTAB+X'8B'         IMMEDIATE SKIP TO CHANNEL 1\n         DC    AL1(128+04)\n         ORG   CCTAB+X'93'         IMMEDIATE SKIP TO CHANNEL 2\n         DC    AL1(128+05)\n         ORG   CCTAB+X'9B'         IMMEDIATE SKIP TO CHANNEL 3\n         DC    AL1(128+06)\n         ORG   CCTAB+X'A3'         IMMEDIATE SKIP TO CHANNEL 4\n         DC    AL1(128+07)\n         ORG   CCTAB+X'AB'         IMMEDIATE SKIP TO CHANNEL 5\n         DC    AL1(128+08)\n         ORG   CCTAB+X'B3'         IMMEDIATE SKIP TO CHANNEL 6\n         DC    AL1(128+09)\n         ORG   CCTAB+X'BB'         IMMEDIATE SKIP TO CHANNEL 7\n         DC    AL1(128+10)\n         ORG   CCTAB+X'C3'         IMMEDIATE SKIP TO CHANNEL 8\n         DC    AL1(128+11)\n         ORG   CCTAB+X'CB'         IMMEDIATE SKIP TO CHANNEL 9\n         DC    AL1(128+12)\n         ORG   CCTAB+X'D3'         IMMEDIATE SKIP TO CHANNEL 10\n         DC    AL1(128+13)\n         ORG   CCTAB+X'DB'         IMMEDIATE SKIP TO CHANNEL 11\n         DC    AL1(128+14)\n         ORG   CCTAB+X'E3'         IMMEDIATE SKIP TO CHANNEL 12\n         DC    AL1(128+15)\n         ORG   ,                   RE-ESTABLISH ORIGINS\nANSITAB  DC    C'+ 0-123456789ABC'\nANSILEN  EQU   *-ANSITAB\n         END\n//L.SYSLMOD DD DSN=CD9R06.PROG(REWRITE),DISP=SHR\n//\n//EX EXEC PGM=WTOMSG,PARM='THIS IS A TEST .............789'\n//STEPLIB DD DSN=CD9R06.PROG,DISP=SHR\n//SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REWRITEO": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x00\\x99'\\x1f\\x00\\x99'\\x1f\\x136\\x012\\x012\\x00\\x00\\xd6\\xd9\\xc9\\xc7\\xd5\\xc1\\xd3@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-09-28T00:00:00", "modifydate": "1999-09-28T13:36:00", "lines": 306, "newlines": 306, "modlines": 0, "user": "ORIGNAL"}, "text": "RWRT     TITLE 'CONVERT MACHINE TO ANSI CARRIAGE CONTROLS'\n*---------------------------------------------------------------------*\n*---     THIS PROGRAM READS IN A DATASET CONTAINING MACHINE        ---*\n*---     CARRIAGE CONTROLS AND WRITES AN EQUIVALENT DATASET        ---*\n*---     WITH ANSI CARRIAGE CONTROLS.                              ---*\n*---                                                               ---*\n*---     INPUT: DDNAME = SYSUT1.  IF SPANNED RECORDS ARE PRESENT   ---*\n*---      THE USER MUST SPECIFY BFTEK=A IN THE DCB ATTRIBUTES.     ---*\n*---                                                               ---*\n*---     OUTPUT: DDNAME = SYSUT2.  ALL CHARACTERISTICS ARE COPIED  ---*\n*---     EXCEPT THE CONTROL CHARACTER DESIGNATION, WHICH IS        ---*\n*---     SET TO DENOTE ANSI CARRIAGE CONTROLS.                     ---*\n*---                                                               ---*\n*---     PROGRAM ATTRIBUTES: NON-REENTRANT, NON-REUSABLE,          ---*\n*---     PROBLEM PROGRAM.                                          ---*\n*---------------------------------------------------------------------*\nREWRITE  CSECT\nR0       EQU   0                   R\nR1       EQU   1                    E\nR2       EQU   2                     G\nR3       EQU   3                      I\nR4       EQU   4                       S\nR5       EQU   5                        T\nR6       EQU   6                         E\nR7       EQU   7                          R\nR8       EQU   8\nR9       EQU   9                   E\nR10      EQU   10                   Q\nR11      EQU   11                    U\nR12      EQU   12                     A\nR13      EQU   13                      T\nR14      EQU   14                       E\nR15      EQU   15                        S\n*--------------------------------------------------------------------*\n*---     STANDARD NON-REENTRANT ENTRY LINKAGE.  NOTE THE USE OF   ---*\n*---     R13 AS SAVE AREA POINTER AS WELL AS PROGRAM BASE REG.    ---*\n*--------------------------------------------------------------------*\n         B     12(,R15)            BRANCH AROUND\n         DC    AL1(7),CL7'REWRITE'\n         STM   R14,R12,12(R13)     SAVE ENTRY REGS\n         BAL   R2,92(,R15)\n         USING *,R13\n         DS    18F\n         XC    0(72,R2),0(R2)\n         ST    R13,4(,R2)\n         ST    R2,8(,R13)\n         LR    R13,R2              LOAD PROGRAM BASE REGISTER\n*--------------------------------------------------------------------*\n*---     PREPARE DCB'S FOR READING AND WRITING THE APPROPRIATE    ---*\n*---     FILES.  IN DCB USES COMPLETION EXIT TO COPY THE          ---*\n*---     ATTRIBUTES FROM IN DCB TO THE OUT DCB.                   ---*\n*--------------------------------------------------------------------*\n         OPEN  (IN)                OPEN THE DCB'S\n         OPEN  (OUT,OUTPUT)        OPEN THE DCB'S\n*--------------------------------------------------------------------*\n*---     MAIN PROCESSING LOOP STARTS HERE.                        ---*\n*--------------------------------------------------------------------*\nL1       DS    0H\n         GET   IN                  READ A RECORD\n         LR    R2,R1               COPY ITS ADDRESS\n         TM    VFG,X'80'           VARIABLE VORMAT ??\n         BZ    NOTVIN              NOPE ---\n         LA    R3,4(,R2)           YES; POINT TO C.C. BYTE\n         B     CALLCNVT            GO CONVERT IT\nNOTVIN   DS    0H\n         LA    R3,0(,R2)           POINT TO NON-VB C.C.\nCALLCNVT DS    0H\n         CALL  CCCNVT,((3))        CONVERT THE CONTROL\n         STC   R0,SAVECC2          SAVE THE RESULT\n         MVC   0(1,R3),SAVECC1     COPY LAST C.C. INTO LINE\n         MVC   SAVECC1,SAVECC2     UPDATE MY SAVE-VALUE\n         LTR   R15,R15             SUPPRESS IT ??\n         BNZ   L1                  YES ---\n         PUTX  OUT,IN              NOPE; OUTPUT THE LINE\n         B     L1                  AND CONTINUE ---\n*--------------------------------------------------------------------*\n*---     MAIN PROCESSING LOOP ENDS HERE.                          ---*\n*--------------------------------------------------------------------*\n*---     CLEAN UP FILES AND BUFFERS AND EXIT                      ---*\n*--------------------------------------------------------------------*\nENDIN    DS    0H\n         CLOSE (OUT,,IN)           CLOSE THE FILES\n         FREEPOOL IN               RELEASE THE\n         FREEPOOL OUT                BUFFER POOLS\n         L     R13,4(,R13)         LOAD BACK POINTER\n         LM    R14,R12,12(R13)     RESTORE THE REGS\n         LA    R15,0               COND CODE ALWAYS ZERO\n         BR    R14                 AND RETURN TO CALLER\n         SPACE 3\n*---------------------------------------------------------------------*\n*---     THIS LITTLE ROUTINE COPIES THE IMPORTANT ATTRIBUTES       ---*\n*---     FROM THE INPUT DCB TO THE OUTPUT DCB.  NOTE THAT WE ARE   ---*\n*---     PULLING A FAST ONE ON THE ASSEMBLER VIS-A-VIS USE OF      ---*\n*---     THE DCBD DSECT.  BE SURE YOU UNDERSTAND HOW THIS WORKS    ---*\n*---     BEFORE YOU TRY TO CHANGE IT!!                             ---*\n*---------------------------------------------------------------------*\nCOPYDCB  DS    0H\n         USING *,R15\n         LA    R2,0(,R1)           COPY INPUT DCB ADDRESS\n         LA    R3,OUT              LOAD OUTPUT DCB ADDRESS\n         USING IHADCB,R0           FAST ONE STARTS HERE\n         LH    R0,DCBLRECL(R2)     LOAD INPUT LRECL\n         STH   R0,DCBLRECL(R3)     STORE IN OUTPUT DCB\n         LH    R0,DCBBLKSI(R2)     LOAD INPUT BLKSIZE\n         STH   R0,DCBBLKSI(R3)     STORE IN OUTPUT DCB\n         IC    R0,DCBRECFM(R2)     INSERT RECORD FORMAT\n         STC   R0,DCBRECFM(R3)     STORE IN OUTPUT DCB\n         LA    R4,DCBRECFM(R3)     POINT TO OUTPUT RECFM\n         NI    0(R4),255-DCBRECCM  TURN OFF MACHINE CTL BIT\n         OI    0(R4),DCBRECCA      TURN ON ANSI-CTL BIT\n         TM    0(R4),DCBRECU       'U' FORMAT ??\n         BOR   R14                 YES; ALL DONE\n         TM    0(R4),DCBRECV       VARIABLE FORMAT ??\n         BZR   R14                 NOPE ---\n         OI    VFG,X'80'           YES; SET MY FLAG\n         BR    R14                 AND RETURN\n         DROP  R0,R15              ALL DONE WITH THESE\n         SPACE 3\nVFG      DC    X'00'               FLAG FOR VARIABLE FORMAT\nSAVECC1  DC    C'1'                INITIAL VALUE: NEW PAGE\nSAVECC2  DC    C' '                INITIAL VALUE: SINGLE SPACE\nIN       DCB   DSORG=PS,MACRF=GL,DDNAME=SYSUT1,EODAD=ENDIN,            X\n               EXLST=EXITS,BFTEK=A\nOUT      DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT2\nEXITS    DS    0F\n         DC    XL1'85',AL3(COPYDCB) COMPLETION EXIT TO COPY ATTRIBUTES\n         LTORG ,                   DISPLAY ANY LITERALS\n         DCBD  DSORG=QS\n         END\n         TITLE 'CCCNVT - CONVERT MACHINE TO ANSI CARRIAGE CONTROLS'\nCCCNVT   CSECT\n*---------------------------------------------------------------------*\n*---     THIS SUBROUTINE TAKES IN A SINGLE-CHARACTER MACHINE-CODE  ---*\n*---           CARRIAGE CONTROL AND RETURNS THE ANSI EQUIVALENT    ---*\n*---           IN R0.  A RETURN CODE OF 0 DENOTES THAT THE         ---*\n*---           LINE, CONTAINING THE MACHINE CODE CONTROL, IS TO    ---*\n*---           BE PRINTED AFTER TRANSLATION, WHILE A '4' RETURN    ---*\n*---           CODE INDICATES THAT THE CONTROL WAS AN IMMEDIATE    ---*\n*---           COMMAND AND THE CONTAINING LINE SHOULD BE           ---*\n*---           DISCARDED AFTER CARRIAGE CONTROL EXTRACTION AND     ---*\n*---           TRANSLATION.                                        ---*\n*---                                                               ---*\n*---     ATTRIBUTES: REENTRANT, REUSABLE, REFRESHABLE              ---*\n*---           (MAY BE LPALIB RESIDENT) STANDARD LINKAGE           ---*\n*---           CONVENTIONS ARE ADHERED TO THROUGHOUT.              ---*\n*---                                                               ---*\n*---     HERE ARE THE MACHINE-CODE CARRIAGE CONTROLS PROCESSED:    ---*\n*---                                                               ---*\n*---     01 - WRITE, NO SPACE                                      ---*\n*---     09 - WRITE, SPACE 1 LINE                                  ---*\n*---     0B - IMMEDIATE SPACE 1 LINE                               ---*\n*---     11 - WRITE, SPACE 2 LINES                                 ---*\n*---     13 - IMMEDIATE SPACE 2 LINES                              ---*\n*---     19 - WRITE, SPACE 3 LINES                                 ---*\n*---     1B - IMMEDIATE SPACE 3 LINES                              ---*\n*---     89 - WRITE, SKIP TO CHANNEL 1                             ---*\n*---     8B - IMMEDIATE SKIP TO CHANNEL 1                          ---*\n*---     91 - WRITE, SKIP TO CHANNEL 2                             ---*\n*---     93 - IMMEDIATE SKIP TO CHANNEL 2                          ---*\n*---     99 - WRITE, SKIP TO CHANNEL 3                             ---*\n*---     9B - IMMEDIATE SKIP TO CHANNEL 3                          ---*\n*---     A1 - WRITE, SKIP TO CHANNEL 4                             ---*\n*---     A3 - IMMEDIATE SKIP TO CHANNEL 4                          ---*\n*---     A9 - WRITE, SKIP TO CHANNEL 5                             ---*\n*---     AB - IMMEDIATE SKIP TO CHANNEL 5                          ---*\n*---     B1 - WRITE, SKIP TO CHANNEL 6                             ---*\n*---     B3 - IMMEDIATE SKIP TO CHANNEL 6                          ---*\n*---     B9 - WRITE, SKIP TO CHANNEL 7                             ---*\n*---     BB - IMMEDIATE SKIP TO CHANNEL 7                          ---*\n*---     C1 - WRITE, SKIP TO CHANNEL 8                             ---*\n*---     C3 - IMMEDIATE SKIP TO CHANNEL 8                          ---*\n*---     C9 - WRITE, SKIP TO CHANNEL 9                             ---*\n*---     CB - IMMEDIATE SKIP TO CHANNEL 9                          ---*\n*---     D1 - WRITE, SKIP TO CHANNEL 10                            ---*\n*---     D3 - IMMEDIATE SKIP TO CHANNEL 10                         ---*\n*---     D9 - WRITE, SKIP TO CHANNEL 11                            ---*\n*---     DB - IMMEDIATE SKIP TO CHANNEL 11                         ---*\n*---     E1 - WRITE, SKIP TO CHANNEL 12                            ---*\n*---     E3 - IMMEDIATE SKIP TO CHANNEL 12                         ---*\n*---                                                               ---*\n*---     ALL OTHERS ARE LEFT AS-IS.                                ---*\n*---------------------------------------------------------------------*\nR0       EQU   0                   R\nR1       EQU   1                    E\nR2       EQU   2                     G\nR3       EQU   3                      I\nR4       EQU   4                       S\nR5       EQU   5                        T\nR6       EQU   6                         E\nR7       EQU   7                          R\nR8       EQU   8\nR9       EQU   9                   E\nR10      EQU   10                   Q\nR11      EQU   11                    U\nR12      EQU   12                     A\nR13      EQU   13                      T\nR14      EQU   14                       E\nR15      EQU   15                        S\n         STM   R14,R12,12(R13)     SAVE THE ENTRY REGISTERS\n         LR    R12,R15             COPY THE E.P. ADDRESS\n         USING CCCNVT,R12          AND DECLARE THE BASE\n         L     R2,0(,R1)           LOAD THE CONTROL CHARACTER POINTER\n         LA    R3,0                CLEAR A WORK REGISTER\n         IC    R3,0(,R2)           AND INSERT THE CHARACTER\n         LA    R4,CCTAB(R3)        POINT INTO THE TABLE\n         IC    R3,0(,R4)           TRANSLATE IT\n         LA    R15,0               ASSUME WE PRINT THIS ONE\n         TM    0(R4),X'80'         SUPPRESS CODE ??E\n         BZ    *+8                 NOPE ---\n         LA    R15,4               YES; SET 4 RETURN CODE\n         N     R3,=A(X'7F')        REMOVE SUPPRESS CODE\n         CH    R3,=AL2(ANSILEN)    DO WE XLATE ??\n         BL    ICANSI              YES ---\n         IC    R0,0(,R2)           NOPE; RETURN ORIGINAL CODE\nENDIT    DS    0H\n         LM    R2,R12,28(R13)      RESTORE REGISTERS\n         BR    R14                 AND RETURN TO CALLER\nICANSI   DS    0H\n         IC    R0,ANSITAB(R3)      LOAD THE ANSI EQUIVALENT\n         B     ENDIT               AND RETURN TO CALLER\n         SPACE 3\n*---------------------------------------------------------------------*\n*---     THE FOLLOWING TRANSLATE TABLE DESCRIBES THE TRANSLATION   ---*\n*---     OF EACH CARRIAGE CONTROL. THE FORMAT OF EACH ENTRY IS     ---*\n*---     THIS:                                                     ---*\n*---                                                               ---*\n*---     B'1... ....'  --- SUPPRESS PRINT OF THIS LINE             ---*\n*---                                                               ---*\n*---     B'0... ....'  --- PRINT THIS LINE WITH THE TRANSLATED     ---*\n*---                       CONTROL FROM THE PREVIOUS LINE          ---*\n*---                                                               ---*\n*---     B'.XXX XXXX'  --- INDEX INTO ANSITAB FOR THE APPROPRIATE  ---*\n*---                       ANSI CARRIAGE CONTROL EQUIVALENT.       ---*\n*---                                                               ---*\n*---     NOTE THAT ALL NON-PROCESSED CARRIAGE CONTROLS HAVE        ---*\n*---     TRANSLATE VALUES OF 7F. THE ALGORITHM CHECKS THAT         ---*\n*---     THE TRANSLATED VALUE FALLS WITHIN THE LENGTH OF ANSITAB   ---*\n*---     SO THAT AN INVALID CONTROL IS REPLACED WITH ITSELF.       ---*\n*---------------------------------------------------------------------*\nCCTAB    DC    16X'7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F'\n         ORG   CCTAB+X'01'         WRITE WITHOUT SPACING\n         DC    AL1(0)\n         ORG   CCTAB+X'09'         WRITE AND SPACE 1 LINE\n         DC    AL1(1)\n         ORG   CCTAB+X'11'         WRITE AND SPACE 2 LINES\n         DC    AL1(2)\n         ORG   CCTAB+X'19'         WRITE AND SPACE 3 LINES\n         DC    AL1(3)\n         ORG   CCTAB+X'89'         WRITE AND SKIP TO CHANNEL 1\n         DC    AL1(4)\n         ORG   CCTAB+X'91'         WRITE AND SKIP TO CHANNEL 2\n         DC    AL1(5)\n         ORG   CCTAB+X'99'         WRITE AND SKIP TO CHANNEL 3\n         DC    AL1(6)\n         ORG   CCTAB+X'A1'         WRITE AND SKIP TO CHANNEL 4\n         DC    AL1(7)\n         ORG   CCTAB+X'A9'         WRITE AND SKIP TO CHANNEL 5\n         DC    AL1(8)\n         ORG   CCTAB+X'B1'         WRITE AND SKIP TO CHANNEL 6\n         DC    AL1(9)\n         ORG   CCTAB+X'B9'         WRITE AND SKIP TO CHANNEL 7\n         DC    AL1(10)\n         ORG   CCTAB+X'C1'         WRITE AND SKIP TO CHANNEL 8\n         DC    AL1(11)\n         ORG   CCTAB+X'C9'         WRITE AND SKIP TO CHANNEL 9\n         DC    AL1(12)\n         ORG   CCTAB+X'D1'         WRITE AND SKIP TO CHANNEL 10\n         DC    AL1(13)\n         ORG   CCTAB+X'D9'         WRITE AND SKIP TO CHANNEL 11\n         DC    AL1(14)\n         ORG   CCTAB+X'E1'         WRITE AND SKIP TO CHANNEL 12\n         DC    AL1(15)\n         ORG   CCTAB+X'0B'         IMMEDIATE SPACE 1 LINE\n         DC    AL1(128+01)\n         ORG   CCTAB+X'13'         IMMEDIATE SPACE 2 LINES\n         DC    AL1(128+02)\n         ORG   CCTAB+X'1B'         IMMEDIATE SPACE 3 LINES\n         DC    AL1(128+03)\n         ORG   CCTAB+X'8B'         IMMEDIATE SKIP TO CHANNEL 1\n         DC    AL1(128+04)\n         ORG   CCTAB+X'93'         IMMEDIATE SKIP TO CHANNEL 2\n         DC    AL1(128+05)\n         ORG   CCTAB+X'9B'         IMMEDIATE SKIP TO CHANNEL 3\n         DC    AL1(128+06)\n         ORG   CCTAB+X'A3'         IMMEDIATE SKIP TO CHANNEL 4\n         DC    AL1(128+07)\n         ORG   CCTAB+X'AB'         IMMEDIATE SKIP TO CHANNEL 5\n         DC    AL1(128+08)\n         ORG   CCTAB+X'B3'         IMMEDIATE SKIP TO CHANNEL 6\n         DC    AL1(128+09)\n         ORG   CCTAB+X'BB'         IMMEDIATE SKIP TO CHANNEL 7\n         DC    AL1(128+10)\n         ORG   CCTAB+X'C3'         IMMEDIATE SKIP TO CHANNEL 8\n         DC    AL1(128+11)\n         ORG   CCTAB+X'CB'         IMMEDIATE SKIP TO CHANNEL 9\n         DC    AL1(128+12)\n         ORG   CCTAB+X'D3'         IMMEDIATE SKIP TO CHANNEL 10\n         DC    AL1(128+13)\n         ORG   CCTAB+X'DB'         IMMEDIATE SKIP TO CHANNEL 11\n         DC    AL1(128+14)\n         ORG   CCTAB+X'E3'         IMMEDIATE SKIP TO CHANNEL 12\n         DC    AL1(128+15)\n         ORG   ,                   RE-ESTABLISH ORIGINS\nANSITAB  DC    C'+ 0-123456789ABC'\nANSILEN  EQU   *-ANSITAB\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT414/FILE414.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT414", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}