{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012510000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE631.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE631.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x13'", "DS1TRBAL": "b'Ev'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\x90\\x00\\n\\x04\\x90\\x00\\x0c\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04<\\x00\\x00\\x01\\x03\\x14o\\x01\\x03\\x14o\\x12T\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf0@@@'", "ispf": {"version": "04.60", "flags": 0, "createdate": "2003-05-26T00:00:00", "modifydate": "2003-05-26T12:54:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-460"}, "text": "REGULAR CBT TAPE - VERSION 460    FILE:  631\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT460.FILE631\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    3120    PO\n\n   PDS117I 7 MEMBERS COUNTED; CUMULATIVE SIZE IS 328 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   05/26/03    12:54:33    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x03\\x14\\x1f\\x01\\x03\\x14\\x1f\\x10H\\x00\\x17\\x00\\x17\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-05-21T00:00:00", "modifydate": "2003-05-21T10:48:04", "lines": 23, "newlines": 23, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: CBT999 - SRCH Function\nDate: Wed, 21 May 2003 02:27:22 -0400\nFrom: Bob.Glover@fnf.com\nTo: sbgolob@cbttape.org\n\n  Sam - This is a NEW function. It was written by Lee Hayden, a\nfriend of mine. I gave him credit in the DOCINST member.\n\nYou do a 3.4 on any high level qualifier. Then \"SRCH\" line\ncommand. Then enter whatever variable or arg you want to search\n(up to 3 max) . It comes back with 0 to N lines, one line per hit\nin each member.\n\nYou can then either browse or edit any member by simply placing\nan 'S' or 'B' to browse, or an 'E' to edit.\n\nGood luck !\n\nBob Glover\nFidelity Information Systems Planning Group\nOfc (904) 854-5236\nFax (904) 854-4214\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$DOCINST": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x05\\x01\\x025\\x7f\\x01\\x03\\x14\\x1f\\x02\\x19\\x001\\x00\\x04\\x00\\x00\\xe3\\xe2\\xf0\\xf7\\xf1\\xf0@@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2002-12-23T00:00:00", "modifydate": "2003-05-21T02:19:05", "lines": 49, "newlines": 4, "modlines": 0, "user": "TS0710"}, "text": "FUNCTIONS - CBT file XXX\n* all components written by Lee Hayden\n================================================================================\n================================================================================\n================================================================================\n\nSRCH -  Search multiple datasets from 1 to 3 literals\n\nFormat of call : ISPF '=3.4' (ANY HLQ) and then a line command of \"SRCH\"\n\nContents of this CBT entry consist of :\n=====================================\n1. $DOCINST   - This document\n2. SRCH       - REXX that does the searching\n3. DB2SRCHW   - ISPF Panel that queries for literals\n4. STEMSRCH   - ISPF Panel that show the search results\n\nInstall Instructions\n====================\n1. Copy REXX 'SRCH' to an EXEC dataset. If 'SRCH' is already used,\n   change its name to something else.\n2. Copy both panels to an ISPF panel dataset.\n\nUSE Instructions\n================\nExamples of call\n\n1. \"=3.4\" and then HLQ of TS0710.JUN*\n2. Enter line command SRCH on dataset TS0710.JUNK\n3. You see the following :\n\n ---------------------------- Search TS0710.JUNK -----------------------------\n|                                                                             |\n|   Argument1  > SYS                                                          |\n|   Argument2  >                                                              |\n|   Argument3  >                                                              |\n|                                                                             |\n -----------------------------------------------------------------------------\n\n4. Enter search arg \"SYS\" and hit ENTER. Results appear for each line holding\n   the argument(s) entered. You can then either BROWSE or EDIT the member\n   by simply entering an \"S\" or \"E\" line command on the line in question.\n\n   _ PROG1     system documentation :\n   E PROG2     //SYSOUT   DD  SYSOUT=*\n   _ PROG2     //STEPLIB  DD  DSN=,\n   _ PROG3     * and step thru the index file,\n\n5. PF3 to exit the current search and start another.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE631": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04<\\x00\\x00\\x01\\x03\\x14o\\x01\\x03\\x14o\\x12T\\x00\\x11\\x00\\x11\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf0@@@'", "ispf": {"version": "04.60", "flags": 0, "createdate": "2003-05-26T00:00:00", "modifydate": "2003-05-26T12:54:00", "lines": 17, "newlines": 17, "modlines": 0, "user": "CBT-460"}, "text": "//***FILE 631 is from Lee Hayden and Bob Glover, and contains a     *   FILE 631\n//*           package to do string searches from an ISPF 3.4 list   *   FILE 631\n//*           of datasets.  The package consists of one REXX and    *   FILE 631\n//*           two panels.                                           *   FILE 631\n//*                                                                 *   FILE 631\n//*    Instructions:                                                *   FILE 631\n//*                                                                 *   FILE 631\n//*     You do a 3.4 on any high level qualifier.  Then \"SRCH\"      *   FILE 631\n//*     line command.  Then enter whatever variable or arg you      *   FILE 631\n//*     want to search (up to 3 max).  It comes back with 0 to      *   FILE 631\n//*     N lines, one line per hit in each member.                   *   FILE 631\n//*                                                                 *   FILE 631\n//*     You can then either browse or edit any member by simply     *   FILE 631\n//*     placing an 'S' or 'B' to browse, or an 'E' to edit.         *   FILE 631\n//*                                                                 *   FILE 631\n//*       email:  Bob.Glover@fnf.com                                *   FILE 631\n//*                                                                 *   FILE 631\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DB2SRCHW": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00A\\x00\\x96\\x03\\x1f\\x00\\x96\\x03\\x1f\\t5\\x00\\x13\\x00\\x13\\x00\\x00\\xe3\\xe2\\xf0\\xf8\\xf9\\xf7@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1996-01-31T00:00:00", "modifydate": "1996-01-31T09:35:41", "lines": 19, "newlines": 19, "modlines": 0, "user": "TS0897"}, "text": ")ATTR\n   \u00ac TYPE(text) intens(high) color(yellow)\n   @ TYPE(text) intens(high) color(green)\n   } TYPE(text) intens(high) color(yellow)\n)BODY window(68,10)\n+ _zcmd               +\n%                     +\n% Argument1  >_db2srch1               +\n% Argument2  >_db2srch2               +\n% Argument3  >_db2srch3               +\n%                     +\n%                     +\n+                     +\n)INIT\n  .CURSOR = db2srch1\n)PROC\n  ver (&db2srch1,nb)\n  vput (db2srch1,db2srch2,db2srch3) profile\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SRCH": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00S\\x01\\x03\\x14\\x0f\\x01\\x03\\x14\\x0f\\x156\\x00\\xb7\\x00\\xb1\\x00\\x00\\xe3\\xe2\\xf0\\xf7\\xf1\\xf0@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2003-05-20T00:00:00", "modifydate": "2003-05-20T15:36:53", "lines": 183, "newlines": 177, "modlines": 0, "user": "TS0710"}, "text": "/* REXX\n\n   Encapsulate PDS search to provide selective browse\n\n\n*/\nhitmax=500         /* max hits ceiling         */\n\n/*                */\n/* trace results  */\n\narg search_dsn\nif length(search_dsn)=0 then do\n   say \"Dataset name required\"\n   say \"Enter dataset name or press enter to quit\"\n   pull search_dsn\n   if length(search_dsn)=0 then exit\n   end\n\n\n/* Display popup window */\n\nsearch_dsn=strip(search_dsn,b,\"'\")     /* strip quotes if any */\n\nZWINTTL = 'Search '||search_dsn\n\nQloop:\n\nISPEXEC \"ADDPOP ROW(4) COLUMN(4)\"\nISPEXEC \"VGET (db2srch1,db2srch2,db2srch3) PROFILE\"\nISPEXEC \"DISPLAY PANEL(db2srchw)\"\n\nIF RC=8 THEN signal leave\n\nISPEXEC \"REMPOP\"\n\nsearch_arg1=strip(db2srch1,b,\"'\")     /* strip quotes if any */\nsearch_arg2=strip(db2srch2,b,\"'\")\nsearch_arg3=strip(db2srch3,b,\"'\")\n\nADDRESS TSO\n\n  stat=MSG(\"OFF\")      /* turn messages off */\n\n/* free datasets */\n\n  \"FREE FILE(OUTDD)\"\n  \"FREE FILE(NEWDD)\"\n  \"FREE FILE(SYSIN)\"\n\n/* set search argument sysin data adding quotes if needed */\n\n  drop inrec.\n  inrec.1='SRCHFOR '||\"'\"||search_arg1||\"'\"\n  if search_arg2>' ' then\n    inrec.2='SRCHFORC '||\"'\"||search_arg2||\"'\"\n  if search_arg3>' ' then\n    inrec.3='SRCHFORC '||\"'\"||search_arg3||\"'\"\n\n/* sysin input dsn */\n\n  \"ALLOC  F(SYSIN) NEW DELETE RECFM(F) BLKSIZE(80)\"\n  \"EXECIO * DISKW SYSIN (STEM INREC. FINIS\"\n\n/* output dsn */\n\n  rptdsn=SYSVAR(\"SYSUID\")||'.$$TEMP$$.TEMP.RPTOUT'\n  stat=MSG(\"OFF\")\n  \"DELETE \"rptdsn\n  \"ALLOC F(OUTDD) DA(\"rptdsn\")\",\n  \" NEW CYLINDERS CATALOG SPACE(3,2)\",\n  \" UNIT(SYSDA)\",\n  \" BLKSIZE(0) RECFM(F,B,A) LRECL(133)\"\n\n/* search dsn */\n\n  \"ALLOC FILE(NEWDD) DATASET('\"search_dsn\"') SHR REUSE\"\n\n/* run search */\n\n  \"CALL 'ISP.SISPLPA(ISRSUPC)' 'SRCHCMP,ANYC'  \"\n\n/* free datasets */\n\n  \"FREE FILE(OUTDD)\"\n  \"FREE FILE(NEWDD)\"\n  \"FREE FILE(SYSIN)\"\n\n/* allocate and proces report file */\n\n  \"ALLOC FILE(INDD) DA(\"rptdsn\") SHR\",\n\n  eof = 'no'                            /* initialize end-of-file  */\n  hit_count=0\n\n  do while eof = 'no'                   /* loop until eof          */\n     \"EXECIO 1 DISKR INDD (STEM ILINE.\" /* READ A LINE             */\n      if rc = 2 then                    /* if eof                  */\n        eof = 'yes'\n      else                              /* otherwise               */\n        do                              /* test for content        */\n          if pos('- STRING(S) FOUND -',iline.1) > 0\n            then do\n            cur_memb=substr(iline.1,3,8)\n            end\n          if datatype(substr(iline.1,5,4))='NUM'\n            then do\n            hit_count=hit_count+1\n            hit_stem.hit_count=cur_memb||' '||substr(iline.1,10,70)\n            member.hit_count=cur_memb\n            end\n          if hit_count > hitmax\n            then do\n            hit_count=hit_count+1\n            hit_stem.hit_count='  '\n            hit_count=hit_count+1\n            hit_stem.hit_count=,\n                ' ++++++ hit count > 'hitmax', be more specific',\n                'in your search ++++++'\n            hit_count=hit_count+1\n            hit_stem.hit_count=,\n                ' ++++++ You can change maximum hit ceiling by',\n                'altering tag \"hitmax\" ++++++'\n            hit_count=hit_count+1\n            hit_stem.hit_count=,\n                ' ++++++ If \"hitmax\" is changed, the OUTDD',\n                'alloc may have to increase ++++++'\n            hit_count=hit_count+1\n            hit_stem.hit_count='  '\n            eof = 'yes'\n            end\n        end\n    end\n\n  \"EXECIO 0 DISKR INDD (FINIS\"          /* Close INDD file         */\n  \"FREE FILE(INDD)\"\n\n   /* ------------------------------------------------------\n      done with call, display results in an ISPF table\n      ------------------------------------------------------ */\n\n   title1='Search results for ==>'||search_arg1\n   title2='   and ==>'||search_arg2||'  and ==>'||search_arg3\n   title3=' '\n\nMloop:\n\n   \"ISPEXEC TBCREATE stemsrch names(x, line) NOWRITE SHARE\"\n\n    do i=1 to hit_count\n      x='_'\n      line=hit_stem.i\n      \"ISPEXEC TBADD stemsrch\"\n    end\n\n   \"ISPEXEC TBTOP   stemsrch\"\n   \"ISPEXEC TBDISPL stemsrch PANEL(stemsrch) position(irownum)\"\n    rownum=irownum+0     /* make numeric */\n    if rownum>0 then member_name=strip(member.rownum)\n    action=x\n   \"ISPEXEC TBCLOSE stemsrch\"\n\n   found_mem=search_dsn||'('||member_name||')'\n   upper found_mem\n   if rownum>0 then do\n     if (action='E' | action='e')  then do\n       ADDRESS ISPEXEC \"EDIT DATASET('\"found_mem\"')\"\n       end\n      else do\n       ADDRESS ISPEXEC \"BROWSE DATASET('\"found_mem\"')\"\n       IF RC>0 THEN ADDRESS ISPEXEC \"SETMSG MSG(\"ZERRMSG\")\"\n       end\n   end\n\n  if rownum>0 then signal Mloop\n\n  stat=MSG(\"ON\")       /* turn messages back on */\n\n  signal Qloop\n\nleave:\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STEMSRCH": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15\\x00\\x02\\x00\\x96\\x03\\x1f\\x00\\x96\\x03/\\t\\x00\\x00\\x19\\x00\\x18\\x00\\x00\\xe3\\xe2\\xf0\\xf8\\xf9\\xf7@@@@'", "ispf": {"version": "01.21", "flags": 0, "createdate": "1996-01-31T00:00:00", "modifydate": "1996-02-01T09:00:02", "lines": 25, "newlines": 24, "modlines": 0, "user": "TS0897"}, "text": ")ATTR\n\u00a2 TYPE(TEXT) COLOR(GREEN) INTENS(LOW)\n@ TYPE(TEXT) COLOR(BLUE) INTENS(HIGH)\n% TYPE(TEXT) COLOR(WHITE) INTENS(HIGH)\n\u00ac TYPE(INPUT) COLOR(RED) INTENS(HIGH) CAPS(ON)\n$ TYPE(OUTPUT) COLOR(BLUE) INTENS(HIGH)\n? TYPE(TEXT) COLOR(TURQ) INTENS(HIGH)\n)BODY Expand(//)\n\u00a2\nCOMMAND ===>_ZCMD                                          \u00a2                  +\n\u00a2\n$title1\n$title2\n$Title3\n\u00a2--- Member\n\u00a2--- Name     Search Hit Text, Mark line with B or E, enter to Browse or Edit -\n\u00a2------------------------------------------------------------------------------\n)MODEL\n \u00acx $line\n)INIT\n  &ZCMD=' '\n)REINIT\n  &ZCMD=' '\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT631/FILE631.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT631", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}