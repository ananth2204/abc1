Internal sort routine

This subroutine may be called to perform an internal sort of a
table of fixed entries.  The entries may be up to 256 bytes in
length.  This module will perform the sort and return control to
the calling program.

COBOL calling procedure:

    CALL 'INTRSORT' USING TABLE1. SORT-PARMS.
01  TABLE1.
    05  ENTRIES  -----------
    05  ENTRIES  -----------
    05  ENTRIES  -----------
    05  ENTRIES  -----------
    05  ENTRIES  -----------
    05  ENTRIES  -----------
01  SORT-PARMS.
    05  NUMENTRIES        PIC S9(4) COMP VALUE +100.
    05  ENTRYLENGTH       PIC S9(4) COMP VALUE +20.
    05  KEYLENGTH         PIC S9(4) COMP VALUE +5.
    05  KEYDISP           PIC S9(4) COMP VALUE +9.
    05  SORTYPE           PIC X VALUE 'A' OR 'D'.

The SORT-PARMS definitions are: NUMENTRIES, the
number of entries in the table (binary value) - maximum value
256; ENTRYLENGTH, the length of the entries (binary value)
- maximum value 256; KEYLENGTH, the length of the sort
key (binary value) - maximum value 256; KEYDISP, the
displacement of the sort key (binary value) - first byte of table
is relative to 0; SORTYPE, one character - either A for
ascending, or D for descending.

Note: no edit is performed on any of the fields.


INTRSORT CSECT

         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R12      EQU   12
         SAVE  (14,12)
         BALR  R12,0
         USING *,R12
         USING PARMSIN,R1
         USING PARMFLDS,R2
         L     R2,SORTCTLS         LOAD SORT CONTROL FIELDS
         L     R2,0(R2)            FOR PL/I USERS
         L     R7,TABADDR          POINT R7 TO START OF TABLE
         L     R7,0(R7)            FOR PL/I USERS
         SR    R6,R6               ZERO R6
         LH    R6,NBRENTRS         LOAD NR OF TABLE ENTRIES
         SR    R9,R9               ZERO R9
         LH    R9,ENTRYLNG         LOAD LENGTH OF ENTRY
         MR    R8,R6               ENTRY LENGTH X NR. ENTRIES
         LH    R8,ENTRYLNG         LOAD ENTRY LENGTH
         AR    R9,R7               POINT R9 TO THE LAST
         SR    R9,R8                  ENTRY IN TABLE
SETXCLNG EQU   *   ...SET LENGTH FOR XC...
         BCTR  R8,0                SUBTRACT 1
         STC   R8,XC1+1            STORE THE LENGTH CODE IN EACH OF
         STC   R8,XC2+1               THE 3 "XC"
         STC   R8,XC3+1               INSTRUCTIONS
         LA    R8,1(0,R8)          BUMP ENTRY LENGTH BACK UP BY 1.
SETCLCLN EQU   *   ...SET LENGTH FOR CLC...
         SR    R3,R3               ZERO R3
         LH    R3,KEYLENGH         LOAD SORT KEY LENGTH
         BCTR  R3,0                SUBTRACT 1
         STC   R3,COMPARE+1        STORE LENGTH CODE IN CLC INSTR.
         MVC   COMPARE+3(1),KEYDISP+1  MOVE SORT KEY DISP.
         MVC   COMPARE+5(1),KEYDISP+1   INTO COMPARE INSTR.
SETBRNCH EQU   *   ...CHECK FOR ASCENDING OR DESCENDING...
         CLI   SORTYPE,C'A'        ASCENDING
         BNE   DESCEND               NO--BRANCH
         MVI   BRANCH+1,X'DO'      SET FOR ASCENDING
         B     STARTPT               GO SORT
DESCEND  EQU   *   ...SET DESCENDING SEQUENCE...
         MVI   BRANCH+1,X'BO'      SET FOR DESCENDING
         B     STARTPT               GO SORT
COMPARE  CLC   0(0,R5),0(R7)       COMPARE HI/LO TO NEXT ENTRY
BRANCH   BC    0,BUMPONE           BRANCH IF CURRENT IS STILL LO/HI
NEWONE   EQU   *   ...FOUND NEW ENTRY...
         LR    R5,R7               POINT R5 TO NEW LO/HI
BUMPONE  EQU   *   ...BUMP TO NEXT ENTRY...
         BXLE  R7,R8,COMPARE
         L     R7,SAVESTRT         RESTORE R7 TO NEXT ENTRY
         CR    R7,R5               WAS STARTING ENTRY LO/HI
         BE    NOMOVE                YES--BRANCH
XC1      XC    0(0,R5),0(R7)       SWITCH THE STARTING ENTRY
XC2      XC    0(0,R7),0(R5)        WITH THE LO/HI
XC3      XC    0(0,R5),0(R7)        FOUND IN THIS PASS
NOMOVE   EQU   *   ...DON'T MOVE ENTRY...
         LA    R7,0(R8,R7)         BUMP R7 TO NEXT STARTING POINT
STARTPT  EQU   *   ...SWITCH THE STARTING POINT...
         ST    R7,SAVESTRT         SAVE START ADDR OF THIS PASS
         BCT   R6,NEWONE           BRANCH IF MORE PASSES
THRU     EQU   *   ...ALL THRU. GO WEST ON 121...
         RETURN (14,12)
         EJECT
SAVESTRT DC    F'0'
PARMSIN  DSECT
TABADDR  DS    F                   ADDRESS OF TABLE TO BE SORTED
SORTCTLS DS    F                   ADDRESS OF SORT CONTROL PARMS
PARMFLDS DSECT
NBRENTRS DS    H
ENTRYLNG DS    H
KEYLENGH DS    H
KEYDISP  DS    H
SORTYPE  DS    CL1
         END

Jesse Joyner
Systems Programmer
Bank of Mississippi (USA)

