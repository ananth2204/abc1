'Super' directory of members in VSE libraries

Many times there is a need to determine in which library a
specific member resides, or how many copies of a member
exist in multiple libraries, or whether, in fact, there are
multiple copies of a member. The Librarian (LIBR) provided
with VSE is partially helpful in answering these questions, but
provides no comprehensive listing of all members in all
libraries. You must do individual LISTDIR commands on each
library, then scan each listing for the desired member.

The following two programs will provide a single
comprehensive, alphabetical '3-up' listing of all members in
multiple libraries with an indication of any duplications.

The first program is an Assembler program that CALLs the
Librarian through the Librarian call interface, which is
documented in the Diagnosis Reference: Librarian manual. The
program contains a list of LD commands at label
COMMANDS. This list should be modified as needed to
provide a list of libraries to be processed. This program will
execute an 'LD L=lib O=SH' command for each library in the
list in turn, and write the output print line to a sequential disk
file.

The second program is a COBOL program that reads the file
created by the first program, sorts the members into global
alphabetical sequence, and prints a report listing all members in
all libraries scanned.

An example of the output is shown in Figure 1.


LIBGET PROGRAM

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* PROGRAM: LIBGET                                                     *
*                                                                     *
* PURPOSE: INVOKES LIBR AND ISSUES SUCCESSIVE LISTDIRS, DIRECTING     *
*          THE OUTPUT TO A SEQUENTIAL FILE FOR PROCESSING BY SUPDIR.  *
*                                                                     *
* INPUT:   ADDRESS OF PARAMETER LIST IS PASSED TO LIBR.  CONTENT      *
*          OF THIS LIST IS EXPLAINED BELOW.                           *
*                                                                     *
* SPECIAL: WE LOAD LIBR INTO THE END OF THE PARTITION. THIS WILL      *
*          ALLOW GETVIS AND CDLOAD REQUESTS TO BE ISSUED WITHOUT      *
*          OVERLAYING THE LIBR CODE. 32K SHOULD BE ENOUGH FOR         *
*          THIS. IF YOUR PARTITION DEFAULT GETVIS IS KEPT SMALL,      *
*          YOU MAY NEED TO USE "EXEC TESTLIBR,SIZE=(TESTLIBR,32K)".   *
*                                                                     *
* INFO:    MACRO "REGEQU" GENERATES R0-R15 REGISTER EQUATES.          *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         PRINT NOGEN
LIBGET   START 0                   START OF PROGRAM
         BALR  R11,0               SETUP THE BASE
         USING *,R11               ADDRESS PROGRAM
         OPEN  SDISK
         COMRG ,                   GET COMREG ADDRESS
         L     R2,32(R1)           GET END OF PROGRAM STORAGE
         LA    R2,1(R2)            GET JUST PAST THIS
         S     R2,OFFSET           LIBR SHOULD BE AT THE TAIL END
         LOAD  LIBR,(R2)           NOW LOAD IT
         LR    R15,R1              SAVE ENTRY ADDRESS
         LA    R1,PARM             POINT TO PARMS
         BALR  R14,R15             CALL LIBR
         LR    R3,R15              SAVE THE RETURN CODE
         CLOSE SDISK
         EOJ   RC=(R3)             AND TERMINATE
* LIBR SYSLST EXIT ROUTINE
LSTEXIT  SAVE  (14,12)             SAVE INCOMING REGS
         BALR  R11,0               SETUP A NEW BASE
         USING *,R11               AND TELL THE ASSEMBLER
         ST    R13,SAVEAREA+4      SAVE SAVEAREA
         LA    R2,SAVEAREA         POINT TO SAVEAREA
         ST    R2,8(R13)           SAVE THE BACKPOINTER
         LR    R13,R2              AND USE THIS SAVEAREA
         PUT   SDISK,ALSTAREA
EXITLST  L     R13,SAVEAREA+4      REGAIN POINTER
         LM    R14,R12,12(R13)     REGAIN REGISTERS
         BR    R14                 RETURN TO LIBR
         DROP  R11
* OTHER EXIT ROUTINES
IPTEXIT  BR    R14                 RETURN TO LIBR
CONEXIT  BR    R14                 RETURN TO LIBR
PCHEXIT  BR    R14                 RETURN TO LIBR
* -------------------- DATA AREA ---------------------------*
         LTORG ,                   LITERAL POOL
         REGEQU
SAVEAREA DS    9D                  USER EXIT REGISTER SAVEAREA
OFFSET   DC    F'307200'           AREA FOR LIBR INSERTION
COMMANDS DC    AL2(CMDEND-*),XL6'00'  HEADER FIELD FOLLOWED BY DATA
         DC    CL80'LD L=PRD2 O=SH'
         DC    CL80'LD L=PRD1 O=SH'
         DC    CL80'LD L=IJSYSRS O=SH'
* NOTE: Add as many libraries as needed - use same format
*       as preceding lines.
         DC    CL80'/*'            THIS ENTRY IS *REQUIRED*
CMDEND   EQU   *                   USED FOR LENGTH CALCULATION
PARM     DC    X'80',AL3(LIBRPARM) LIBR PARM ADDRESS
         DS    0F                  ALIGNMENT
LIBRPARM DC    AL2(PARMEND-*)      LENGTH OF CONTROL BLOCK
         DC    XL6'00'             CALLER INFO WITH IBM FILE
         DC    AL4(IPTEXIT)        SYSIPT EXIT ROUTINE
         DC    AL4(COMMANDS)       ADDRESS OF COMMANDS
         DC    AL4(CONEXIT)        SYSLOG EXIT
         DC    AL4(LOGAREA)        ADDRESS OF SYSLOG DATA AREA
         DC    AL4(LSTEXIT)        SYSLST EXIT
ALSTOUT  DC    AL4(ALSTAREA)       ADDRESS OF SYSLST DATA AREA
         DC    AL4(PCHEXIT)        SYSPCH EXIT
         DC    AL4(PCHAREA)        ADDRESS OF SYSPCH DATA AREA
         DC    XL24'00'            FIELDS NOT USEFUL TO US
PARMEND  EQU   *                   USED FOR LENGTH CALCULATION
SDISK    DTFSD BLKSIZE=2428,                                           C
               DEVADDR=SYS020,                                         C
               IOAREA1=DSKAREA1,                                       C
               RECFORM=FIXBLK,                                         C
               RECSIZE=121,                                            C
               WORKA=YES,                                              C
               TYPEFLE=OUTPUT
DSKAREA1 DS    CL2428
ALSTAREA DS    CL133               WORK AREA FOR SYSLST EXIT
LOGAREA  DC    CL80' '             CONSOLE I/O AREA
PCHAREA  DC    CL80' '             SYSPCH I/O AREA
         END


SUPDIR PROGRAM

 IDENTIFICATION DIVISION.
 PROGRAM-ID.    SUPDIR
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SOURCE-COMPUTER.  IBM-4381.
 OBJECT-COMPUTER.  IBM-4381.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT IN-FILE ASSIGN TO SYS020-UT-3420-S-SDISK.
     SELECT SORT-FILE ASSIGN TO SYS001-UT-FBA1-S-SORTWK1.
     SELECT PRINT-FILE ASSIGN TO SYS012-UR-3203-S.
     EJECT
 DATA DIVISION.
 FILE SECTION.
 FD  IN-FILE
         BLOCK CONTAINS 20 RECORDS
         LABEL RECORDS STANDARD
         RECORDING MODE F.
 01  IN-REC.
     05 FILLER           PIC X(9).
     05 IDENT            PIC X(17).
     05 FILLER           PIC X(8).
     05 IDENT2           PIC X(11).
     05 LIBID            PIC X(16).
     05 FILLER           PIC X(60).
 01  DTL-REC.
     05 FILLER           PIC X(9).
     05 FILLER           OCCURS 3 INDEXED BY IN-FILE-IX.
         10 MN           PIC X(8).
         10 FILLER       PIC X.
         10 MT           PIC X(8).
         10 FILLER       PIC X(8).
     05 FILLER           PIC X(37).
 SD  SORT-FILE
         LABEL RECORDS STANDARD
         RECORDING MODE F
         RECORD CONTAINS 32 CHARACTERS.
 01  SORT-REC.
     05 SORT-KEY.
         10 SORT-MN      PIC X(8).
         10 SORT-MT      PIC X(8).
         10 SORT-LIB     PIC X(16).
 FD  PRINT-FILE
         LABEL RECORDS OMITTED
         RECORDING MODE F.
 01  PRINT-REC.
     05 FIELD1       PIC X(37).
     05 FILLER       PIC X(6).
     05 FIELD2       PIC X(37).
     05 FILLER       PIC X(6).
     05 FIELD3       PIC X(37).
 WORKING-STORAGE SECTION.
 01  MATRIX.
     05 PAGE-LAYOUT      OCCURS 50 INDEXED BY LINE-IX.
         10 FILLER           PIC X.
         10 DATA-FIELD       OCCURS 3 INDEXED BY COL-IX.
             15 MEMBER       PIC X(8).
             15 POINT        PIC X.
             15 MTYPE        PIC X(8).
             15 FILLER       PIC X.
             15 LIB          PIC X(16).
             15 FILLER       PIC X.
             15 DUPE         PIC X.
             15 FILLER       PIC X(7).
 01  FIELD-HDR       PIC X(37) VALUE
     '----MEMBER----    LIB.SUBLIB      DUP'.
 01  PAGE-HDR.
     05 FILLER       PIC X(54) VALUE SPACES.
     05 FILLER       PIC X(15) VALUE 'SUPER DIRECTORY'.
     05 FILLER       PIC X(11) VALUE SPACES.
     05 THIS-DATE    PIC X(8).
     05 FILLER       PIC XX.
     05 THIS-TIME    PIC 99B99B99.
     05 COLONS REDEFINES THIS-TIME PIC X OCCURS 8.
     05 FILLER       PIC X(16) VALUE SPACES.
     05 FILLER       PIC X(5) VALUE 'PAGE '.
     05 PG-COUNT     PIC Z(3)9.
 01  PG-COUNTER      PIC 9(4) COMP VALUE 1.
 01  DIR-FLAG        PIC X   VALUE 'Y'.
     88 DIR-REQ      VALUE 'Y'.
 01  EOF-FLAG        PIC X   VALUE 'N'.
     88 EOF      VALUE 'Y'.
 01  HOLD-LIB        PIC X(16).
 01  OLD-KEY.
     10 OLD-MN      PIC X(8).
     10 OLD-MT      PIC X(8).
     10 OLD-LIB     PIC X(16).
 PROCEDURE DIVISION.
 SORTING SECTION.
 001-START.
     SORT SORT-FILE ON ASCENDING KEY SORT-KEY
         INPUT PROCEDURE IS SORT-INPUT
         OUTPUT PROCEDURE IS PRINT-PROC.
     STOP RUN.
 SORT-INPUT SECTION.
 010-START.
     OPEN INPUT IN-FILE.
     PERFORM 015-GET-DATA UNTIL EOF.
     CLOSE IN-FILE.
     GO TO 099-EXIT.
 015-GET-DATA.
     IF DIR-REQ
         PERFORM 080-READ UNTIL EOF
             OR IDENT = 'DIRECTORY DISPLAY'.
     IF IDENT = 'DIRECTORY DISPLAY'
         PERFORM 050-PROCESS-DIR.
     IF EOF
         OR IDENT = SPACES
         OR IDENT = ALL '-'
         OR IDENT = 'L113I RETURN CODE'
         MOVE 'Y' TO DIR-FLAG
     ELSE
         PERFORM 030-PROCESS-DATA.
 030-PROCESS-DATA.
     PERFORM 035-BUILD-SORT-REC
         VARYING IN-FILE-IX FROM 1 BY 1
           UNTIL IN-FILE-IX = 4.
     PERFORM 080-READ.
 035-BUILD-SORT-REC.
     IF MN (IN-FILE-IX) NOT = SPACES
         MOVE MN (IN-FILE-IX) TO SORT-MN
         MOVE MT (IN-FILE-IX) TO SORT-MT
         MOVE HOLD-LIB TO SORT-LIB
         RELEASE SORT-REC.
 050-PROCESS-DIR.
     MOVE LIBID TO HOLD-LIB.
     PERFORM 080-READ 6 TIMES.
     MOVE 'N' TO DIR-FLAG.
 080-READ.
     READ IN-FILE AT END MOVE 'Y' TO EOF-FLAG.
     IF IDENT = '1S55I  LAST RETUR'
         MOVE 'Y' TO EOF-FLAG.
 099-EXIT. EXIT.
 PRINT-PROC SECTION.
 100-START.
     OPEN OUTPUT PRINT-FILE.
     MOVE 'N' TO EOF-FLAG.
     MOVE CURRENT-DATE TO THIS-DATE.
     MOVE TIME-OF-DAY TO THIS-TIME.
     MOVE ':' TO COLONS (3) COLONS (6).
     PERFORM 105-PRINT-REPORT UNTIL EOF.
     CLOSE PRINT-FILE.
     GO TO 199-EXIT.
 105-PRINT-REPORT.
     PERFORM 110-BUILD-PAGE VARYING COL-IX FROM 1 BY 1
         UNTIL COL-IX = 4 OR EOF.
     PERFORM 150-PRINT-PAGE.
 110-BUILD-PAGE.
     PERFORM 120-BUILD-LINE VARYING LINE-IX FROM 1 BY 1
         UNTIL LINE-IX = 51 OR EOF.
 120-BUILD-LINE.
     PERFORM 180-RETURN.
     IF NOT EOF
         PERFORM 130-MOVE-TO-PAGE.
 130-MOVE-TO-PAGE.
     MOVE SORT-MN TO MEMBER (COL-IX LINE-IX).
     MOVE SORT-MT TO MTYPE (COL-IX LINE-IX).
     MOVE SORT-LIB TO LIB (COL-IX LINE-IX).
     IF SORT-MN = OLD-MN AND SORT-MT = OLD-MT
         MOVE '*' TO DUPE (COL-IX LINE-IX).
     MOVE SORT-KEY TO OLD-KEY.
 150-PRINT-PAGE.
     MOVE PG-COUNTER TO PG-COUNT.
     ADD 1 TO PG-COUNTER.
     WRITE PRINT-REC FROM PAGE-HDR AFTER ADVANCING PAGE.
     MOVE SPACES TO PRINT-REC.
     MOVE FIELD-HDR TO FIELD1 FIELD2 FIELD3.
     WRITE PRINT-REC AFTER ADVANCING 2.
     MOVE SPACES TO PRINT-REC.
     WRITE PRINT-REC AFTER 1.
     PERFORM 160-PRINT-LINE VARYING LINE-IX FROM 1 BY 1
         UNTIL LINE-IX = 51.
     MOVE SPACES TO MATRIX.
 160-PRINT-LINE.
     WRITE PRINT-REC FROM PAGE-LAYOUT (LINE-IX) AFTER 1.
 180-RETURN.
     RETURN SORT-FILE AT END MOVE 'Y' TO EOF-FLAG.
 199-EXIT. EXIT.


SAMPLE JCL

* $$ JOB JNM=SUPERDIR,CLASS=c,DISP=D,PRI=3,LDEST=*
* $$ LST CLASS=c,DISP=D
// JOB SUPERDIR
// DLBL SDISK,'file.ident'
// EXTENT SYS020, as needed
// EXEC LIBGET
// ASSGN SYS012,SYSLST
* $$ LST LST=SYS012,CLASS=c
// DLBL SDISK,'file.ident'
// EXTENT SYS020, as needed
// EXEC SUPDIR
/&
* $$ EOJ

Frank A Braman
Senior Software Specialist
St Johnsbury Trucking Company (USA)    c St Johnsbury Trucking Company 1992

