Operator communication interrupt

It may sometimes be desirable to interrupt an executing
program in order to talk to it. For example, it might be useful
to be able to ask a long-running program "what record are you
currently working on?" or "how many pages have you printed
so far?". It might be useful to be able to tell the program to
issue a POWER SEGMENT command so that you can see
what has been printed so far. Or it might be useful to be able to
tell the program "please stop running after you save enough
information to allow restart later". The program might finish
printing the current page, save information necessary to restart,
and then end. Later, the program could be executed again with
a restart option which causes the program to read the save file
and continue from where it left off. It is easy enough for a
program to communicate with the operator by writing messages
to and reading messages from the system console; the trick is
knowing when the operator wants to communicate.

The Assembly language macro STXIT facilitates Operator
Communication Interrupts. An application program executes a
STXIT OC macro instruction which specifies the address of a
user routine in the program and a register save area. When the
console operator issues the command MSG Fx (where Fx is the
program's partition), normal instruction processing is
interrupted and control is given to the user routine specified by
the STXIT OC command. This routine does whatever it is
programmed to do and ends by executing an EXIT OC macro
instruction causing processing to continue from where the
program was interrupted.

It is seldom convenient for a program to begin communicating
with the operator at the instant the MSG Fx command is
issued. It is not uncommon, therefore, for STXIT OC routines
simply to set a switch indicating that an OC interrupt has
occurred and then exit. The application program periodically
checks the value in the switch. When the value changes, it
knows that it must communicate with the console operator. The
relocatable subroutine JHROCI shown below facilitates
operator communication interrupts in this way.

An application program CALLs JHROCI once, specifying a
one-byte field. JHROCI saves the address of the field, issues
the STCIT OC command naming OCI as the OC interrupt
routine and then RETURNs to the caller. Now, any time the
console operator issues the MSG Fx command, control is given
to the routine OCI which moves the character 'I' into the
caller's one-byte field and then exits. It is the application
program's responsibility to check the field occasionally to see
if an 'I' has been placed in it, and to act accordingly. After
handling the OC interrupt, the program can reset the value in
the field and continue processing. If the operator again issues
the MSG Fx command, the field will once again be changed to
the character 'I'. It is not necessary to CALL JHROCI a second
time because the STXIT OC remains in effect until the program
terminates. The following example shows how JHROCI might
be used by a COBOL program.

    77  OC-SWITCH               PIC X     VALUE SPACE.
    77  RESPONSE                PIC X(40) VALUE SPACES.
                  :
    PROCEDURE DIVISION.
         CALL 'JHROCI' USING OC-SWITCH.
                  :
    LOOP.
        IF OC-SWITCH IS EQUAL TO 'I'
           GO TO OC-INTERRUPT-ROUTINE.
        READ file
           AT END GO TO end-of-file-routine.
                  :
        do some processing
                  :
        GO TO LOOP.
                  :
    OC-INTERRUPT-ROUTINE.
        DISPLAY 'WHAT DO YOU WANT' UPON CONSOLE.
        ACCEPT RESPONSE FROM CONSOLE.
                  :
        handle communication with operator
        doing whatever is requested
                  :
        MOVE SPACE TO OC-SWITCH.
        GO TO LOOP.


JHROCI

         TITLE 'JHROCI - OPERATOR COMMUNICATION INTERRUPT'
         PUNCH '  CATALR JHROCI '
JHROCI   START 0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R12      EQU   12
R14      EQU   14
R15      EQU   15
         USING JHROCI,R15
         SAVE  (R14,R12)
         L     R2,0(,R1)     LOAD ADDRESS OF CALLER'S OC SWITCH
         ST    R2,SWADDR     SAVE OC SWITCH ADDRESS
         LA    R3,SAVEAREA   GET ADDR OF SAVE AREA FOR USE BY STXIT OC
         LA    R4,OCI        GET ADDR OF OC INTERRUPT ROUTINE
         STXIT OC,(R4),(R3)  SET OC STXIT
         RETURN (R14,R12)    RETURN TO CALLER
         DROP  R15
OCI      BALR  R2,0          ENTER HERE WHEN MSG FX OCCURS
         USING *,R2
         L     R3,SWADDR     GET ADDRESS OF OC SWITCH
         MVI   0(R3),C'I'    INDICATE MSG FX HAS OCCURED
         EXIT  OC
SWADDR   DC    F'0'          SAVE AREA FOR OC SWITCH ADDRESS
SAVEAREA DS    18F           SAVE AREA FOR OC INTERRUPT
         END


James E Holler
Little Blue Systems (USA)              c Little Blue Systems 1992

