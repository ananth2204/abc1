Print file segmentation for COBOL programs

This routine allows a user to alter the VSE/POWER spool file
options while the file is currently open. This routine is
extremely useful for splitting reports for various departments
and dispatching branch reports to remote locations.

The calling sequence for a COBOL program is:

CALL 'PWRSEG' USING record-name.

where record-name must have the following structure:

01  RECORD-NAME.
    03  LOGICAL-UNIT            PIC X(6).
    03  CLASS                   PIC X.
    03  COPIES                  PIC 99.
    03  FORM                    PIC X(4).
    03  FCB                     PIC X(8).
    03  DISPOSITION             PIC X.
    03  REMOTE-STATION          PIC 999.

LOGICAL-UNIT       is the programmer logical unit as
assigned at run time.  This field is mandatory.

CLASS      is the new class of the print file.

COPIES      is the number of copies to be printed.

FORM      is the new form number for the print file.

FCB      is the new FCB for the print file.

DISPOSITION       is the new disposition of the print file.

REMOTE-STATION      is the new remote station identifier for
the print file.

If any parameter value is not to be changed from the original
LST card, or from a previous call of this routine, then the field

must be set to spaces or zeros as appropriate.

The new LST card is displayed at the console.  The word
ERROR appears in columns 66 to 70 of the displayed LST card
if any errors were detected.

Assemble the source code for PWRSEG and catalogue the
relocatable module into a relocatable library.  The relocatable
library should be in the standard relocatable library searchlist,
so that the module may be included in the calling program at
link edit time.

         TITLE 'PWRSEG - POWER SEGMENTATION MODULE'
PWRSEG   CSECT
         USING PWRSEG,15
         SAVE  (14,12)
         LR    2,15                    R2 = BASE REGISTER
         USING PWRSEG,2
         DROP  15
         SPACE 2
*              SET UP ADDRESSABILITY
         SPACE 2
         L     3,0(0,1)                R3 = A(PARAMS)
         USING PWRPARMS,3              SET UP DSECT ADDRESS
         LA    4,PWRJECL               R4 = A(JECL STATEMENT)
         LA    4,13(4)                 POINT TO FIRST AVAILABLE BYTE
         MVI   0(4),64                 CLEAR LST CARD
         MVC   1(71-14,4),0(4)
         SPACE 2
*              VET AND SET UP LOGICAL UNIT
         SPACE 2
         CLC   PWRLST(3),=CL3'SYS'     PROGRAMMER LOGICAL UNIT ?
         BNE   PWR890                  NO
         CLC   PWRLST+3(3),=CL3'001'   LESS THAN 1 ?
         BL    PWR890                  YES
         CLC   PWRLST+3(3),=CL3'254'   GREATER THAN 254 ?
         BH    PWR890                  YES
         MVC   0(6,4),PWRLST           MOVE LOGICAL UNIT TO JECL
         LA    4,6(4)                  POINT TO NEXT AVAILABLE BYTE
         SPACE 2
*              VET AND SET UP CLASS
         SPACE 2
         CLI   PWRCLS,64               CLASS EQUAL TO SPACE ?
         BE    PWR300                  YES
         CLI   PWRCLS,C'A'             LESS THAN A ?
         BL    PWR300                  YES
         CLI   PWRCLS,C'Z'             GREATER THAN Z ?
         BH    PWR300                  YES
         MVC   0(7,4),=CL7',CLASS='    MOVE KEYWORD TO JECL
         LA    4,7(4)                  POINT TO NEXT AVAILABLE BYTE
         MVC   0(1,4),PWRCLS           MOVE CLASS TO JECL
         LA    4,1(4)                  POINT TO NEXT AVAILABLE BYTE
         SPACE 2
*              VET AND SET UP COPIES
         SPACE 2
PWR300   EQU   *
         CLC   PWRCPY,=CL2'01'         LESS THAN 1 ?
         BL    PWR400                  YES
         CLC   PWRCPY,=CL2'99'         GREATER THAN 99 ?
         BH    PWR400                  YES
         MVC   0(6,4),=CL6',COPY='     MOVE KEYWORD TO JECL
         LA    4,6(4)                  POINT TO NEXT AVAILABLE BYTE
         MVC   0(2,4),PWRCPY           MOVE COPIES TO JECL
         LA    4,2(4)                  POINT TO NEXT AVAILABLE BYTE
         SPACE 2
*              VET AND SET UP FORM NUMBER
         SPACE 2
PWR400   EQU   *
         CLC   PWRFNO,=CL4' '          FNO EQUAL TO SPACES ?
         BE    PWR500                  YES
         MVC   0(5,4),=CL5',FNO='      MOVE KEYWORD TO JECL
         LA    4,5(4)                  POINT TO NEXT AVAILABLE BYTE
         MVC   0(4,4),PWRFNO           MOVE FORM NUMBER TO JECL
         LA    4,4(4)                  POINT TO NEXT AVAILABLE BYTE
         SPACE 2
*              VET AND SET UP FCB
         SPACE 2
PWR500   EQU   *
         CLC   PWRFCB,=CL8' '          FCB EQUAL TO SPACES ?
         BE    PWR600                  YES
         MVC   0(5,4),=CL5',FCB='      MOVE KEYWORD TO JECL
         LA    4,5(4)                  POINT TO NEXT AVAILABLE BYTE
         MVC   0(8,4),PWRFCB           MOVE FCB TO JECL
         LA    4,8(4)                  POINT TO NEXT AVAILABLE BYTE
         SPACE 2
*              VET AND SET UP DISPOSITION
         SPACE 2
PWR600   EQU   *
         CLI   PWRDSP,64               DISP EQUAL TO SPACE ?
         BE    PWR700                  YES
         CLI   PWRDSP,C'D'             DISP EQUAL TO D ?
         BE    PWR610                  YES
         CLI   PWRDSP,C'H'             DISP EQUAL TO H ?
         BE    PWR610                  YES
         CLI   PWRDSP,C'K'             DISP EQUAL TO K ?
         BE    PWR610                  YES
         CLI   PWRDSP,C'L'             DISP EQUAL TO L ?
         BNE   PWR700                  NO
PWR610   EQU   *
         MVC   0(6,4),=CL6',DISP='     MOVE KEYWORD TO JECL
         LA    4,6(4)                  POINT TO NEXT AVAILABLE BYTE
         MVC   0(1,4),PWRDSP
         LA    4,1(4)                  POINT TO NEXT AVAILABLE BYTE
         SPACE 2
*              VET AND SET UP REMOTE STATION IDENTIFIER
         SPACE 2
PWR700   EQU   *
         CLC   PWRREM,=CL3'000'        IS PARAMETER PRESENT ?
         BE    PWR800                  NO
         MVC   0(8,4),=CL8',REMOTE='   MOVE KEYWORD TO JECL
         LA    4,8(4)                  POINT TO NEXT AVAILABLE BYTE
         MVC   0(3,4),PWRREM
         SPACE 2
*              ISSUE POWER SEGMENT
         SPACE 2
PWR800   EQU   *
         LA    5,1                     R5 = DEVICE CLASS
         STC   5,PWR810+4              STORE IN MACRO
         PACK  PWRWRK,PWRLST+3(3)      GET LOGICAL UNIT NUMBER
         CVB   5,PWRWRK
         STC   5,PWR810+5              STORE IN MACRO
PWR810   EQU   *
         SEGMENT DEVADDR=SYSLST,JECL=PWRJECL
         LTR   15,15                   ANY ERRORS ?
         BE    PWR900                  NO
PWR890   EQU   *
         MVC   PWRJECL+70-5(5),=CL5'ERROR' INFORM USER
         SPACE 2
*              RETURN TO CALLING ROUTINE
         SPACE 2
PWR900   EQU   *
         PUT   CONSOLE
         RETURN (14,12)
         SPACE 2
PWRWRK   DS    D
         SPACE 2
PWRJECL  DC    CL71'* $$ LST LST='
         SPACE 2
         LTORG
         SPACE 2
CONSOLE  DTFCN BLKSIZE=71,DEVADDR=SYSLOG,IOAREA1=PWRJECL,TYPEFLE=OUTPUT
PWRPARMS DSECT
PWRLST   DS    CL6                     LOGICAL UNIT
PWRCLS   DS    C                       CLASS
PWRCPY   DS    CL2                     COPY
PWRFNO   DS    CL4                     FORM NUMBER
PWRFCB   DS    CL8                     FCB
PWRDSP   DS    C                       DISPOSITION
PWRREM   DS    CL3                     REMOTE STATION IDENTIFIER
         END

M Nunan
Systems Programmer
Sage Computing  (South Africa)                         c Sage Computing 1991

