File block sizes and performance

Today's faster computers have more memory than ever before,
yet many of the programs that are running on them were
designed many years ago for slower computers with restrictions
on the amount of virtual storage that could be used.  However,
minor changes to these older systems can produce eye-catching
results.  In today's environment, using VM and VSE, virtual
storage constraint for batch can almost be erased, and programs
need to be altered to take advantage of this new unrestricted
use of virtual storage.  VSE works much better when it has to
do very little I/O.  For these two reasons, block sequential files
are critical for best resource utilization.

Inefficient blocking leads to wasted disk space.  An unblocked
file may use only 20% of a disk.  This means that if you buy a
single density 3380 with 2.5GB of storage only 0.5GB would
be used.  Placing 2.5GB of characters using an unblocked
format means buying five times the disk storage; paying five
times the amount needed for hardware maintenance; buying an
air conditioner capable of cooling five disks; and finally
enlarging your computer room to hold all five disks.  This
quickly adds up to real dollars.  Using a block size of under 4K
- a common block size in the early 1980s - may use only 55%
of the available disk space.  While this is better than not
blocking, it still means buying more than twice as much
hardware as is really needed.

Wasted disk space is not the only problem however, tapes are
also impacted by poor block sizes.  Between each block is an
inter-record gap.  If the block sizes are small, this gap may be
larger than the blocked data and the tape is under-utilized in the
same way that disks are.  This cannot be justified by the
argument that tapes are cheap; think of the time the operator
must take to mount and care for the many extra tapes generated
as a result of poor block sizes.

Wasted space is not the worst part of poorly blocked files.
Run-time may be impacted over tenfold.  If you find this hard
to believe, try a simple test.  Take a sequential file on disk with
about 10 000 records.  Use IDCAMS REPRO to copy it to a
tape, setting the block length equal to the file length for both
files.  Then redo the REPRO, but block the files as close to
32K as possible.  Assuming no other contention, the blocked
files should have been done much faster.  (Results are most
dramatic when the sequential file has a small record size.)  By
re-blocking files, jobs that ran in hours now run in minutes;
fewer disks and tapes are used; and finally, less total CPU time
is used because the CPU is not busy doing I/Os.

Perhaps the easiest place to start is with back-up tapes.  If your
shop is like most, file back-ups are run either before or after
the files are updated.  Since back-up tapes are usually created
from only one jobstream and read in by only one restore
jobstream, only these two jobstreams and/or programs need to
be changed to re-block this file that is probably used daily.
After back-up tapes, large disk files should then be blocked
higher.  This is much more involved since these files are likely
to be used in many jobstreams and programs.  However,
because they are used in many jobstreams the payback is much
greater in terms of less run-time and less disk space used.

A forgotten file is the POWER data file.  Recent enhancements
allow for better access to the POWER spool files by buffering
them and putting the buffers in memory.  By re-blocking the
POWER data file, significant gains in run time may be seen.
Tapes can be blocked up to 32 760 bytes (VSE systems could
really go seven bytes higher, but then the tapes could not be
read by MVS systems).  On disk, if a track is less than 32K in
size, try to use a block size as close to full track blocking as
possible.  If the track size is more than 32K try to pick a block
size that is close, but not over, one half the size of a track.
However, there is one word of caution: if your shop decides to
re-block the POWER files, too large a block size may actually
waste more disk space because the blocks would not be full.
Also check with all vendors that read POWER tapes, offloads,
such as micro-fiche vendors; some have restrictions on how
large the block size may be.

Kelvin J Menzel
Systems Programmer (USA)                         c K J Menzel 1991

