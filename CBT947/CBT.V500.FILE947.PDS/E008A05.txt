Which CPU?

We have two real CPUs that have been termed production and
test, although there is not literally a true separation of test and
production jobs. There are some jobs that must not run on a
certain machine. This program checks the CPU serial number
and cancels a job if it is not running on the correct CPU. It will
also display the CPU-id if the PARM is incorrect.

This program was intended for use in prodution JCL at our
shop to prevent operators from causing us more headaches!

Our hardware is made up of two IBM 4381-2 CPUs, and IBM
3380        DASD shared between the two processors.

* $$ JOB JNM=RPDPSMNT,CLASS=P,PROGR=BUBBA,USER=SYSTEMS,SYSID=2
* $$ LST DISP=H,CLASS=Z,JSEP=1,RBS=0,FNO=Z02D
// JOB RPDPSMNT
// OPTION JCANCEL,NODUMP                         CHKCPUID(ICCF31)
LIBDEF PHASE,CATALOG=USR1.SYS
// OPTION CATAL,SXREF,NORLD
 PHASE CHKCPUID,*
EXEC PGM=ASSEMBLY,SIZE=512K
         TITLE ' CHECK CPU-ID FOR TEST OR PRODUCTION'
CHKCPUID CSECT
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
         BALR  R2,R0
         BCTR  R2,R0
         BCTR  R2,R0
         USING CHKCPUID,R2
         SPACE
         TM    0(R1),X'80'         NULL PARM STRING ?
         BZ    DISPLAY             YES, SKIP
         L     R5,0(R1)            POINT TO PARM DATA
         SLL   R5,8                CLEAR HIGH
         SRL   R5,8                 ORDER BYTE
         MVC   PARM,2(R5)          SAVE PARM DATA
         BAL   R8,GETCPUID
         CLC   PARM,=C'PROD'
         BNE   *+4+6+4+4
         CLC   PROD,CPUID+1
         BNE   CANCEL
         B     EOJ
         CLC   PARM,=C'TEST'
         BNE   PARMERR
         CLC   TEST,CPUID+1
         BNE   CANCEL
         B     EOJ
         EJECT
GETCPUID LA    R10,10                  LENGTH
         EXTRACT ID=CPUID,AREA=CPUSTOR,LEN=(R10)
         MVC   CPUID(8),CPUSTOR
         BR    R8
         SPACE
PARMERR  MVC   ERR+6(4),PARM
         MVC   MSG,ERR
         LA    R1,PRINTER
         BAL   R8,EXCP
         MVC   MSG,MSG-1
         MVC   MSG(7),=C'CPU ID='
         BAL   R8,GETCPUID
         UNPK  MSG+7(9),CPUID(5)
         UNPK  MSG+15(9),CPUID+4(5)
         MVI   MSG+23,X'40'
         TR    MSG+7(16),TBL
         LA    R1,PRINTER
         BAL   R8,EXCP
         B     EOJ
         SPACE
DISPLAY  MVC   MSG,MSG-1
         MVC   MSG(11),=C'CPU ID''S   '
         LA    R1,PRINTER
         BAL   R8,EXCP
         MVC   MSG(11),PROD+3
         LA    R1,PRINTER
         BAL   R8,EXCP
         MVC   MSG(11),TEST+3
         LA    R1,PRINTER
         BAL   R8,EXCP
         B     EOJ
         EJECT
EXCP     SVC   0
         TM    2(R1),X'80'
         BO    0(R8)
         SVC   7
         SPACE 2
CANCEL   MVC   MSG+33(4),PARM
         LA    R1,CONSOLE
         BAL   R8,EXCP
         LA    R1,PRINTER
         BAL   R8,EXCP
         SR    R0,R0
         SVC   6
         SPACE
EOJ      SVC   14
         EJECT
         LTORG
         SPACE 2
         DS    D
CPUSTOR  DS    CL10
CPUID    DS    D
         SPACE
CONSOLE  CCB   SYSLOG,CCW1
         SPACE
PRINTER  CCB   SYSLST,CCW1
         SPACE
CCW1     CCW   X'09',MSG,X'00',45
         DC    X'40'
MSG      DC    CL45'WRONG CPU!   RUN THIS JOB ON THE XXXX MACHINE'
ERR      DC    CL45'PARM=''NULL'' IS INVALID                       '
         SPACE
TEST     DC    XL3'013273',CL11'TEST=013273'
PROD     DC    XL3'010713',CL11'PROD=010713'
PARM     DC    CL4'    '          PROD OR TEST
         SPACE
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
TBL      EQU   *-256
         SPACE
         END
/*
EXEC PGM=LNKEDT,SIZE=256K
EXEC PGM=CHKCPUID,SIZE=2K,PARM='OOPS'
/&


EXAMPLES

The first example shows the program's use with an invalid
PARM.  This will display the full CPU-id of the CPU that
executed CHKCPUID.

// JOB RPDPSMNT
// OPTION NODUMP,JCANCEL
EXEC PGM=CHKCPUID,SIZE=2K,PARM='OOPS'
PARM='OOPS' IS INVALID
CPU ID=0001327343810000

The second example shows the use of CHKCPUID without any
PARM.  This will display the serial number of each CPU.

EXEC PGM=CHKCPUID,SIZE=2K
CPU ID'S
PROD=010713
TEST=013273

The third example shows the use of the program to check the
CPU-id.

* $$ JOB JNM=RPDPSMNT,PRI=3,CLASS=P,PROGR=BUBBA,USER=SYSTEMS,SYSID=2
* $$ LST DISP=H,CLASS=Z,JSEP=1,FNO=Z02D,RBS=0,RBM=0
// JOB RPDPSMNT
// OPTION NODUMP,JCANCEL                         DPS090R(ICCF11)
/. STEP1     CATALOG DPS090R.J TO PWR.JCL AS OF 11-21-90
EXEC PGM=LIBR,SIZE=512K,PARM='MSHP'
ACCESS SUBLIB=PWR.JCL
CATALOG DPS090R.J                    REPLACE=YES
// OPTION NODUMP,JCANCEL                         DPS090R.J(PWR.JCL)
EXEC PGM=CHKCPUID,SIZE=2K,PARM='TEST'
*          NO BATCH JOBS SHOULD BE RUNNING ON EITHER CPU WHILE THIS
*          JOB IS PROCESSING !   THIS JOB IS NOT RESTARTABLE !
// PAUSE   IF THIS JOB CANCELS FOR ANY REASON, CALL SYSTEMS !!!!!!!
EXEC PGM=DATETIME,SIZE=AUTO,PARM='SYSLST'
/. STEP0   SCRATCH AND DELETE WORK FILES
EXEC PGM=TSIDMNT,SIZE=512K
CLOSE   'BGP.DPS.SORT.WORK.1'
SCRATCH 'BGP.DPS.SORT.WORK.1',VER=1
CLOSE   'BGP.DPS.SORT.WORK.2'
SCRATCH 'BGP.DPS.SORT.WORK.2',VER=1

Robert Payne
Systems Programmer
Millers Insurance Group (USA)                 c Millers Insurance Group 1992

