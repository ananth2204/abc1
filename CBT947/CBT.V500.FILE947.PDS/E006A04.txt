Get CPU-id for several applications

The following macro and B-transient is very useful to get the
CPU identification for applications that need this information to
sign a report or to determine the system they are running on.

It will help in situations where multiple guests run under VM,
or where multiple real processors may be in a network.

       MACRO
&NAME  GETCPUID &UNPK,&PACK,&LIST=
       LCLB  &POS
* WJK - GET CPU ID - V.1.0
       CNOP  0,4
       AIF   ('&NAME' EQ '').NONAME
&NAME  DC    0F'0'
.NONAME  ANOP
       BAL   0,WJK1&SYSNDX
       AIF   ('&UNPK' EQ '').NOUNPK
       DC    A(&UNPK)
       AGO   .PARM2
.NOUNPK  ANOP
       DC    A(0)
.PARM2  ANOP
       AIF   ('&PACK' EQ '').NOPACK
       DC    A(&PACK)
       AGO   .FETCH
.NOPACK  ANOP
       DC    A(0)
.FETCH  ANOP
WJK1&SYSNDX DS   0H
       LA    1,=C'$$BCPUID'
       SVC   2  FETCH TRANSIENT
.EXIT  ANOP
       MEXIT
.PARMERR ANOP
       MNOTE 8,'WRONG PARAMETER'
       MEND
$CPU  TITLE '$$BCPUID  -  TRANSIENT TO GET THE CPU-ID'
       PUNCH '   PHASE $$BCPUID,+0 '
       SPACE 3
$$BCPUID START 0
       USING *,R15
       DC    CL8'$$BCPUID'
       B     BEGIN
VERSION  DC    C' V.1.0 '
       DC    C'&UDATE '
       DC    C'&UTIME '
       DC    C'author: willi j. kuhn '
       SPACE 3

Editor's note: register equates go here.

     EJECT
BEGIN DS    0H
       LR    R2,R0                  SAVE PARAMETER ADDR
* GO TO SUPERVISOR-STATE BY FORCED PROGRAM CHECK INTERRUPT
       SR    R0,R0
       SVC   22    SEIZE THE SYSTEM
* NO INTERRUPT ARE ALLOWED
       MVC   PSWSV,X'68'         SAVE PROG NEW PSW
       BAL   R1,NEWADR
* ROUTINE EXECUTED IN SUPERVISOR-STATE
       MVC   X'68'(8,0),PSWSV    RESTORE PROG NEW PSW
       STIDP CPUID               FETCH CPU-ID
       SPACE
ENDSVST  MVI   FORCECHK,X'07'
       LPSW  X'28'(0)            RETURN TO PROBLEM-STATE
NEWADR  ST    R1,ADR             )MOVE USER ROUTINE ADR TO
       MVC   X'6D'(3,0),ADR+1    )NEW PROG PSW
FORCECHK DC    H'0'              )AND FORCE PROG.CHECK
* RELEASE SEIZURE
REL    LA    R0,X'FF'
       SVC   22                  RELEASE THE SYSTEM
* INTERRUPT ARE ALLOWED
       SPACE
       L     R1,0(R2)            GET 1ST PARAM ADDR
       LTR   R1,R1               TEST FOR ZERO
       BZ    PARM2               NOT REQUESTED
       SPACE
       UNPK  CPUIDU1,CPUID(5)   UNPACK CPU ID PART 1
       UNPK  CPUIDU2,CPUID+4(5)  AND PART 2
       MVC   0(8,R1),CPUIDU1     MOVE UNPACKED CPU ID PART1
       MVC   8(8,R1),CPUIDU2       AND PART2
       TR    0(16,R1),HEXTAB     TRANSLATE FOR PRINTABLE
       SPACE 2
PARM2  DS    0H
       L     R1,4(R2)            GET 2ND PARAM ADDR
       LTR   R1,R1               TEST FOR ZERO
       BZ    RETURN              NOT REQUESTED
       SPACE
       MVC   0(L'CPUID,R1),CPUID    MOVE UNCHANGED
       SPACE 3
* RETURN TO CALLING PROGRAM
RETURN  SVC   11
CPUIDU1  DS    CL9
CPUIDU2  DS    CL9
CPUID    DC    D'0'
PSWSV    DS    D
ADR      DS    A
HEXTAB   DC    240X'00'
       DC    C'0123456789ABCDEF'
       END

Willi Kuhn
Freelance Systems Programmer (Germany)            c Willi Kuhn 1992

