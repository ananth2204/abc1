Hardcopy job completion summary

To assist operations to quickly check job completions after a
given starting point, HARDSUMM was written. By running
the program, which reads the VSE hardcopy file, one can
quickly determine the final outcome of jobs without having to
manually scan the console backwards, with all of its many
messages.

The program prompts the operator for a starting date and time,
such as 11/20/92,00:00. It will then scan all hardcopy records
since midnight on that date until the current time (end-of-file).

Each time a '// JOB' message is read, an entry in an in-core
table is created. When the corresponding 'EOJ' and
'DURATION' messages are read, the entry is completed,
printed, and reset. Thus, the summary is in order by job
completion time, not starting time.

If a job is cancelled or abends, the message '1S78I' is read,
and the first four characters of the reason are printed instead of
a maximum return code. For example, 'PROGRAM ABEND'
would print as 'PROG', and 'CANCELLED BY OPERATOR'
would print as 'CANC'.

When end-of-file is reached, the in-core table is checked for
any non-blank entries left. These indicate jobs which started
within our record scan, but are still running. This can be
helpful, for example, if HARDSUMM is printed at change-of-
shift, so that the next operator can see, not only what has been
run, but also what is pending completion when they take over.

The hardcopy file system macros used should be self-
explanatory: the HCF is opened, backed up to the beginning,
and then read forward until the end. If you wish to look at the
macro source, punch their E-books (using ESERV) from the
IJSYSRS.SYSLIB sublibrary.

Please note that the layout for the HCF is for VSE/ESA 1.1.
My copy of VSE/AF (2.1) Diagnosis Reference: System
Utilities (LY33-9114-0), in the PRINTLOG chapter on page
J.02, shows a version of the file prior to adding the system date
to each record. By using DITTO to dump a few records, I was
able to determine the newest layout. Since our shop skipped
from VSE/SP 3.1.2 directly to VSE/ESA, it is possible that
VSE/SP Version 4 might use the newer format. The program
would still work, without the time information, with minor
changes for pre-ESA shops.

An example of the output is shown in Figure 1.


HARDSUMM PROGRAM

         PRINT NOGEN
* PROGRAM NAME: HARDSUMM                                             *
* SYSTEM:       VSE/ESA 1.1                                          *
* PURPOSE:      HARCOPY FILE SUMMARY OF JOB COMPLETIONS              *
* INPUT:        CONSOLE PROMPT FOR STARTING DATE AND TIME            *
*
R0       EQU   0                       WORK
R1       EQU   1                       WORK
R2       EQU   2                       WORK
R11      EQU   11                      JOB TABLE POINTER
R12      EQU   12                      PROGRAM BASE
R13      EQU   13                      STANDARD
R14      EQU   14                      STANDARD
R15      EQU   15                      STANDARD
JTABD    DSECT ,                       JOB TABLE LAYOUT
JNAME    DS    CL8
         DS    CL2
JPARTN   DS    CL2
         DS    CL2
JBDATE   DS    CL8
         DS    CL2
JBTIME   DS    CL5
         DS    CL2
JEDATE   DS    CL8
         DS    CL2
JETIME   DS    CL5
         DS    CL2
JDUR     DS    CL8
         DS    CL2
JMAXRC   DS    CL4
JTABLEN  EQU   *-JTABD                 LENGTH OF AN ENTRY
HARDSUMM CSECT ,
         STM   R14,R12,12(R13)         SAVE CALLER'S REGISTERS
         LR    R12,R15                 ESTABLISH BASE
         USING HARDSUMM,R12            (NOTIFY ASSEMBLER)
         USING JTABD,R11               (NOTIFY ASSEMBLER)
         ST    R13,SAVER13             HOLD CALLER'S SAVEAREA ADDR
         B     ASKSTART                ==> SKIP AHEAD
         DC    CL8'HARDSUMM'
         DC    CL8'07/16/92'
ASKSTART DS    0H
         MVI   CONCCW1,X'09'           MOD CCW OPERATION TO WRITE
         MVC   CONCCW1+6(2),=Y(PROLEN)         LENGTH
         MVC   CONCCW1+1(3),=AL3(PROMPT)       BUFFER ADDR
         EXCP  CONSOLE                 WRITE PROMPT TO CONSOLE
         WAIT  CONSOLE                 WAIT FOR I/O
GETREPLY DS    0H
         MVI   REPLY,C' '              INITIALIZE REPLY
         MVC   REPLY+1(REPLYLEN-1),REPLY    AREA TO BLANKS
         MVI   CONCCW1,X'0A'           MOD CCW OPERATION TO READ
         MVC   CONCCW1+6(2),=Y(REPLYLEN)       LENGTH
         MVC   CONCCW1+1(3),=AL3(REPLY)        BUFFER ADDR
         EXCP  CONSOLE                 READ REPLY FROM CONSOLE
         WAIT  CONSOLE                 WAIT FOR I/O
         MVC   PARMDATE,REPLY          PARM DATE MM/DD/YY
         MVC   PARMTIME,REPLY+9        PARM TIME HH:MM
PRTTITLE DS    0H
         MVC   PRTLINE(L'TITLE),TITLE  PRINT TITLE...
         EXCP  PRINTER
         WAIT  PRINTER
         MVC   PRTLINE(L'HDR),HDR      PRINT HEADER...
         EXCP  PRINTER
         WAIT  PRINTER
OPEN     DS    0H
         L     R1,=X'FF000000'         ENTER SUPERVISOR STATE...
         SVC   13
         POINTHCF READ,PRINTLOG,ALL,SAVE=SAVEAREA
         LTR   R15,R15                 CHECK OPEN
         BZ    BACKWARD
         MVC   RC,=H'1'                BAD OPEN, RC = 1
         B     EOJ                     ==> END
BACKWARD DS    0H
         ST    R1,HCFCB                SAVE THE FCB
         MODHCF (R1),BW                BACKWARD DIRECTION
         LTR   R15,R15                 OK ?
         BZ    TO@TOP                  ==> YES..CONTINUE
         MVC   RC,=H'2'                BAD MOD, RC = 2
         B     CLOSE                   ==> CLOSE AND END
TO@TOP   DS    0H
         L     R1,HCFCB                RESTORE POINTER
         SKIPHCF (R1),EOF              BACK UP TO BEGINNING OF FILE
         LTR   R15,R15                 OK ?
         BZ    FORWARD                 ==> YES..CONTINUE
         MVC   RC,=H'3'                BAD SKIP, RC = 3
         B     CLOSE                   ==> CLOSE AND END
FORWARD  DS    0H
         L     R1,HCFCB                RESTORE POINTER
         MODHCF (R1),FW                FORWARD DIRECTION
         LTR   R15,R15                 OK ?
         BZ    READ                    ==> YES..CONTINUE
         MVC   RC,=H'4'                BAD MOD, RC = 4
         B     CLOSE                   ==> CLOSE AND END
READ     DS    0H
         L     R1,HCFCB                POINT TO FCB
         LA    R0,HCFREC               POINT TO OUTPUT AREA
         READHCF (R1),(R0)             READ A RECORD
         LTR   R15,R15                 OK ?
         BZ    READOK                  ==> YES..CONTINUE
         CH    R15,=H'24'              EOF ?
         BE    ENDOFHCF                ==> YES..GO CLEAN UP
         MVC   RC,=H'5'                BAD READ, RC = 5
         B     CLOSE                   ==> CLOSE AND END
READOK   DS    0H
         MVC   PACKDATE(3),HCDATE      CONVERT DATE TO MM/DD/YY...
         MVI   PACKDATE+3,X'0F'
         UNPK  UNPKDATE,PACKDATE
         MVC   ZDATE+0(2),UNPKMON
         MVC   ZDATE+3(2),UNPKDAY
         MVC   ZDATE+6(2),UNPKYEAR
         LM    R0,R1,HCTIME            CONVERT TIME TO HH:MM...
         GETIME CLOCK=YES
         ST    R1,PACKTIME
         UNPK  UNPKTIME,PACKTIME
         MVC   ZTIME+0(2),UNPKHOUR
         MVC   ZTIME+3(2),UNPKMIN
         CLI   FNDSTRT,X'FF'           ALREADY FOUND STARTING POINT ?
         BE    CONT                    ==> YES..
         CLC   ZDATE,PARMDATE          FOUND BEGINNING DATE ?
         BNE   READ                    ==> NOT YET..
         CLC   ZTIME,PARMTIME          ON/AFTER BEGINNING TIME ?
         BL    READ                    ==> NOT YET..
         MVI   FNDSTRT,X'FF'           INDICATE WE'VE FOUND START
CONT     DS    0H
         CLC   HCTEXT+8(6),=C'// JOB'  JOB CARD ?
         BNE   CONT1                   ==> NO...
         LA    R11,JOBTAB              POINT TO JOB TABLE
SEEKMPTY DS    0H
         CLI   JNAME,C' '              EMPTY TABLE ENTRY ?
         BE    FNDEMPTY                ==> YES..USE IT
         LA    R11,JTABLEN(,R11)       NEXT TABLE ENTRY
         CLI   JNAME,X'FF'             END OF TABLE ?
         BNE   SEEKMPTY                ==> NO...LOOP
         MVC   RC,=H'6'                TABLE FULL, RC = 6
         B     CLOSE                   ==> CLOSE AND END
FNDEMPTY DS    0H
         LA    R1,HCTEXT+15            POINT TO JOBNAME IN HCF
         LA    R2,JNAME                POINT TO JOBNAME IN TABLE
BLDJNAME DS    0H
         CLI   0(R1),C' '              BLANK ?
         BE    BLDNMOK                 ==> DONE WITH NAME BUILD
         MVC   0(1,R2),0(R1)           MOVE ONE CHARACTER
         LA    R1,1(,R1)               NEXT INPUT CHARACTER
         LA    R2,1(,R2)               NEXT OUTPUT CHARACTER
         B     BLDJNAME                ==> AND LOOP
BLDNMOK  DS    0H
         MVC   JPARTN,HCTEXT+1         MOVE PARTITION TO TABLE
         MVC   JBDATE,ZDATE            MOVE START DATE TO TABLE
         MVC   JBTIME,ZTIME            MOVE START TIME TO TABLE
         B     READ                    ==> READ NEXT
CONT1    DS    0H
         CLC   HCTEXT+8(3),=C'EOJ'     EOJ ?
         BNE   CONT2                   ==> NO...
         LA    R11,JOBTAB              POINT TO JOB TABLE
SEEKJOB  DS    0H
         CLC   HCTEXT+12(8),JNAME      FOUND JOBNAME IN TABLE ?
         BE    FNDJOB                  ==> YES..USE IT
         LA    R11,JTABLEN(,R11)       NEXT TABLE ENTRY
         CLI   JNAME,X'FF'             END OF TABLE ?
         BNE   SEEKJOB                 ==> NO...LOOP
         LA    R11,EXTRA               USE EXTRA ENTRY INSTEAD
         MVC   JNAME,HCTEXT+12         MOVE JOBNAME
         MVC   JPARTN,HCTEXT+1         MOVE PARTITION
FNDJOB   DS    0H
         MVC   JEDATE,ZDATE            MOVE END DATE TO TABLE
         MVC   JETIME,ZTIME            MOVE END TIME TO TABLE
         MVC   JMAXRC,HCTEXT+38        MOVE MAX RETCODE TO TABLE
         CLC   JPARTN,TERMPART         WAS JOB TERMINATED ?
         BNE   READ                    ==> NO...DONE HERE
         MVC   JMAXRC,TERMTYPE         USE TYPE OF EVENT FOR MAXRC
         MVI   TERMPART,X'FF'          RESET TERMINATION FIELD
         B     READ                    ==> READ NEXT
CONT2    DS    0H
         CLC   HCTEXT+33(8),=C'DURATION'   EOJ CONTINUATION ?
         BNE   CONT3                   ==> NO...
         MVC   JDUR,HCTEXT+44          MOVE DURATION TO TABLE
         MVC   PRTLINE(JTABLEN),JTABD  MOVE ENTRY TO PRINT LINE
         EXCP  PRINTER                 WRITE TO SYSLST
         WAIT  PRINTER                 WAIT FOR I/O
         MVI   JTABD,C' '              MOVE BLANKS TO ENTRY...
         MVC   JTABD+1(JTABLEN-1),JTABD
         B     READ                    ==> READ ANOTHER
CONT3    DS    0H
         CLC   HCTEXT+8(5),=C'1S78I'   ABNORMAL TERMINATION ?
         BNE   READ                    ==> NO...SKIP IT
         MVC   TERMPART,HCTEXT+1       HOLD PARTITION
         MVC   TERMTYPE,HCTEXT+38      HOLD TYPE OF TERMINATION
         B     READ                    ==> READ NEXT
ENDOFHCF DS    0H
         LA    R11,JOBTAB              POINT TO JOB TABLE
CLRTABLE DS    0H
         CLI   JNAME,C' '              JOBNAME STILL IN TABLE ?
         BE    CLRNEXT                 ==> NO...LEAVE ALONE
         MVC   PRTLINE(JTABLEN),JTABD  MOVE ENTRY TO PRINT LINE
         EXCP  PRINTER                 WRITE TO SYSLST
         WAIT  PRINTER                 WAIT FOR I/O
CLRNEXT  DS    0H
         LA    R11,JTABLEN(,R11)       NEXT TABLE ENTRY
         CLI   JNAME,X'FF'             END OF TABLE ?
         BNE   CLRTABLE                ==> NO...CHECK NEXT ENTRY
CLOSE    DS    0H
         L     R1,HCFCB                CLOSE...
         CLOSEHCF (R1)
EOJ      DS    0H
         LH    R15,RC                  SET RETURN CODE.
         L     R13,SAVER13             POINT TO CALLER'S SAVEAREA
         L     R14,12(R13)             RESTORE CALLER'S REGISTERS
         LM    R0,R12,20(R13)            EXCEPT 13 AND 15
         BR    R14                     RETURN FROM WHENCE WE CAME
SAVEAREA DS   9D                       REQUIRED BY POINTHCF MACRO
SAVER13  DS    F                       SAVE ORIGINAL R13
HCFCB    DS    F                       FCB USED BY HCF MACROS
RC       DC    H'0'                    RETURN CODE
FNDSTRT  DC    X'00'                   STARTING POINT INDICATOR
PACKDATE DS    F
PACKTIME DS    F
UNPKDATE DS   0CL7
UNPKMON  DS    CL2
UNPKDAY  DS    CL2
UNPKYEAR DS    CL2
         DS    CL1
UNPKTIME DS   0CL6
UNPKHOUR DS    CL2
UNPKMIN  DS    CL2
         DS    CL2
ZDATE    DC    CL8'**/**/**'
ZTIME    DC    CL5'**:**'
         DS   0D                       FORCE ALIGNMENT FOR HCTIME
HCFREC   DS   0CL93
HCMTYPE  DS    X                       MSG TYPE
HCCTYPE  DS    X                       CONSOLE TYPE
HCORIG   DS    CL2                     ORIGIN "BG", "AR", ETC
         DS    X
HCDATE   DS    XL3                     DATE MMDDYY PACKED NO SIGN
HCTIME   DS    D                       TIME FROM STORE CLOCK
HCTEXT   DS    CL76                    TEXT
         DS    X
PRINTER  CCB   SYSLST,PRTCCW
PRTCCW   CCW   9,PRTLINE,X'00',L'PRTLINE
PRTLINE  DS    CL62
TITLE    DS   0CL62
         DC    CL25'JOBS BY COMPLETION SINCE '
PARMDATE DS    CL8
         DC    CL1' '
PARMTIME DS    CL5
         DC    CL23' '
HDR      DS   0CL62
         DC    CL31'JOBNAME   PN  START DATE/TIME  '
         DC    CL31'END DATE/TIME    DURATION  MXRC'
JOBTAB   DC  20CL62' '
         DC    X'FF'
EXTRA    DC    CL62' '
TERMPART DC    CL2' '
TERMTYPE DC    CL4' '
PROMPT   DC    C'ENTER START AS:  MM/DD/YY,HH:MM'
PROLEN   EQU   *-PROMPT
REPLY    DS    CL80
REPLYLEN EQU   *-REPLY
CONSOLE  CCB   SYSLOG,CONCCW1
CONCCW1  CCW   9,*,X'00',60
         LTORG ,
         END   HARDSUMM

Lawrence Holder
Senior Programmer/Analyst
University of Tennessee (USA)                              c UTMCC 1992


