Partition wait for a specified time

This program is designed to do nothing more than wait for a
specified time.  It can be used for any purpose.  It was written
as a result of the requirement for the production CICS system
to be started at 6:00 in the morning, when only a day and
evening shift are in operation.  This would allow operators to
leave jobs which used CICS files running, when leaving at
midnight, and set CICS to start in the early morning.

Because it may be necessary to start CICS at other times, for
example after a power failure, this program should be run as a
separate job step, thereby allowing the job step running this
program to be cancelled if required.

The program will wait, holding up the partition in which it is
running, until the time specified is reached for the first time.
In other words, if a time is specified which has already passed
today, it will stop the partition until that time tomorrow.  To
run the program, only the following JCL is required:

// EXEC M051,PARM='hh:mm'

where 'hh:mm' is the required time in hours and minutes.
(Note: use the 24 hour clock.)


MESSAGES

Normally, the following message will be displayed:

      M051*0* THIS PARTITION WILL RESTART AT HH:MM

In case of errors, a message prefixed by 'M051*n*' will be
issued, 'n' will indicate one of the following errors:

      1 - no 'PARM=' on the EXEC card
      2 - the parameter passed does not consist of five characters
      3 - missing ":"
      4 - hours invalid
      5 - minutes invalid.


TECHNICAL NOTES

The program is written in Assembler language, so should be
assembled and linked with the IJSYS01, IJSYS02, IJSYS03
and IJSYSLN work files available (these should be in your
partition standard labels), and SYS001, SYS002, SYS003 and
SYSLNK assigned.  A LIBDEF with a catalog destination
should be provided, along with an OPTION CATAL, followed
by a ' PHASE M051,*' card.

All macros used in the program are standard VSE macros.

The program uses physical I/O for communication with the
operator console, so the use of a simple CCB and CCW chain
for I/O can be examined.  Note that the EXCP macro writes the
message, and the following WAIT causes the program to wait
until the I/O is complete.

The simple use of Event Control Blocks (ECBs) can also be
examined; in this case the program uses a timer ECB (TECB).
The program calculates the number of seconds to go until the
time at which the program is to allow the partition to restart.
The SETIME macro is then passed this number of seconds in
register 3, associating the TECB with that time, and placing the
TECB address in register 1.  The WAIT macro issues an SVC
7, which will pause the program until the TECB is posted by
the system, ie after the number of seconds specified have
elapsed.

R1      EQU   1
R3      EQU   3
R7      EQU   7
R9      EQU   9
R11     EQU   11
R15     EQU   15
        EJECT
        PRINT NOGEN
M051    CSECT
        BALR  R11,0
        USING *,R11
        MVI   MSG+5,C'1'
        CR    R1,R15                  IF R1 = R15, THEN WE DONT HAVE
        BNE   A200                       A PARM CARD
        SPACE 4
A100    EQU   *
        LA    R1,LOGCCB               THERE IS SOME KIND OF ERROR
        EXCP  (1)
        WAIT  (1)
        CANCEL
        SPACE 4
A200    EQU   *
        L     R1,0(R1)
        MVI   MSG+5,C'2'
        CLC   0(2,R1),=H'5'           IS PARM LENGTH 5 ?
        BNE   A100
        MVI   MSG+5,C'3'
        CLI   4(R1),C':'
        BNE   A100
        MVI   MSG+5,C'4'
        MVC   OKMSG+39(5),2(R1)
        MVC   TWOCHAR,2(R1)           CONVERT HOURS TO BINARY
        CLI   TWOCHAR,C'0'
        BL    A100
        CLI   TWOCHAR,C'2'
        BH    A100
        CLI   TWOCHAR+1,C'0'
        BL    A100
        CLI   TWOCHAR+1,C'9'
        BH    A100
        BAL   R7,CONVERT
        CH    R9,=H'0'                CHECK VALID HOURS
        BL    A100
        CH    R9,=H'23'
        BH    A100
        MH    R9,=H'3600'             CONVERT HOURS TO SECONDS
        LR    R3,R9                   STORE TIME IN R3
        MVI   MSG+5,C'5'
        MVC   TWOCHAR,5(R1)           CONVERT MINUTES TO BINARY
        CLI   TWOCHAR,C'0'
        BL    A100
        CLI   TWOCHAR,C'5'
        BH    A100
        CLI   TWOCHAR+1,C'0'
        BL    A100
        CLI   TWOCHAR+1,C'9'
        BH    A100
        BAL   R7,CONVERT
        CH    R9,=H'0'                CHECK VALID MINUTES
        BL    A100
        CH    R9,=H'59'
        BH    A100
        MH    R9,=H'60'               CONVERT MINUTES TO SECONDS
        AR    R3,R9                      AND ADD TO HOURS
        GETIME BINARY
        CR    R3,R1                   NOW SEE IF TIME IS TOMORROW
        BH    *+8
        A     R3,=F'86400'            IT IS, SO ADD 24 HOURS
        SR    R3,R1                   NOW SET R3 TO REMAINING SECONDS
        LA    R1,OKCCB                MESSAGE TO OP - TIME OF RESTART
        EXCP  (1)
        WAIT  (1)
        SETIME (3),TECB
        WAIT  (1)
        EOJ
        SPACE 4
CONVERT EQU   *
        PACK  TWODEC,TWOCHAR
        CVB   R9,TWODEC
        BR    R7
        SPACE 4
TWODEC  DS    D
TWOCHAR DS    CL2
LOGCCB  CCB   SYSLOG,LOGCCW
LOGCCW  CCW   9,MSG,32,52
MSG     DC    C'M051*** A PARM= MUST BE PRESENT TIME IN HH:MM FORMAT'
OKCCB   CCB   SYSLOG,OKCCW
OKCCW   CCW   9,OKMSG,32,48
OKMSG   DC    C'M051*0* THIS PARTITION WILL RESTART AT HH:MM   '
TECB    TECB
        LTORG
        END

Robin Lynch
Software Support Manager (UK)                   c Robin Lynch 1991

