Checking correct date via IPL exit $SYSOPEN

We have encountered problems with operators not knowing the
correct date or miskeying it etc when IPLing.  This can cause
havoc with accounting.  The following IPL exit routine was
developed to prevent this problem.  Operators tend to know
what day of the week it is so the exit asks for it and validates
weekday against the system date.  You can still have a problem
if the transposition of day and month number produces the
same weekday.  If this bothers you then add a few instructions
to ask for the month in letters as well.

IPLE     TITLE 'IPL EXIT ROUTINE TO CHECK DAY ENTERED WITH DATE'
*********************************************************************
*       IPL EXIT                                                    *
*       PHASE NAME MUST BE $SYSOPEN AND MUST BE ON SYSRES TO BE     *
*       USED DURING IPL. ANY LIBRARY MAY BE USED FOR TESTING        *
*       THE ROUTINE BY EXECING IT FROM JCL.                         *
*       THE OPERATOR IS ASKED WHAT DAY OF THE WEEK HE THINKS IT IS. *
*       IF THIS DOES NOT TALLY WITH THE SYSTEM DATE WE KEEP ASKING. *
*       IF WE ARE RUNNING UNDER VM AND ARE DISCONNECTED THEN        *
*       OP. IS NOT ASKED, THE ASSUMPTION BEING THAT THE VIRTUAL     *
*       MACHINE CONSOLE IS THE VSE CONSOLE.                         *
*       THE ONLY NON-IBM VSE MACROS REQUIRED ARE ESUP, DIAG & REGEQU*
*       THE LOGICAL TRANSIENT $$BPSWFX IS CALLED BY ESUP.           *
*********************************************************************
$SYSOPEN CSECT
         USING *,R12                ADDRESSABILITY
         LR    R12,R15
         ST    R14,FRETURN         SAVE RETURN ADDR
         COMRG
         MVC   FSYSDATE,83(R1)     SAVE SYSTEM DATE  (YYDDD)
         ASYSCOM R1                GET SYSCOM ADDRESS
         L     R1,IJBRASLN-SYSCOM(R1)  GET ADDRESS OF CPUID
         CLI   0(R1),X'FF'         BRANCH IF
         BNE   FENTWEEK             NOT UNDER VM
*          IF THIS IS A DISCONNECTED MACHINE UNDER VM *
*          WE DO NOT WANT TO ASK FOR DAY OF WEEK      *
         ESUP IN                   GET INTO SUPV. MODE FOR DIAG.
         LA    R1,R1
         LNR   R1,R1               MINUS 1 MEANS FIND CONSOLE
         DIAG  R1,R2,X'24'         GET CONSOLE ADDRESS
         BC   12,WCONNECT          BRANCH IF THERE IS ONE (CONNECTED)
         ESUP OUT                  GET OUT OF SUPV. MODE
         B    EXIT                 UNDER VM AND DISCONNECTED SO
*                                  SKIP DAY OF WEEK ROUTINE

WCONNECT EQU  *
         ESUP OUT                  GET OUT OF SUPV. MODE
*                      * NATIVE OR CONNECTED UNDER VM SO *
*                      *  DO DAY OF WEEK ROUTINE         *
FENTWEEK EQU   *
         MVC   CONWK,FENTWKMS      DISPLAY 'ENTER WEEKDAY'
         LA    R1,L'FENTWKMS       MESSAGE
         BAL   R10,FPUT
         BAL   R10,FGET            AND READ REPLY
         LA    R1,FDAYTAB          USING TABLE OF 'DAYS'
FLOOKAGN EQU   *
         CLI   0(R1),X'FF'         CHECK
         BE    FENTWEEK            FOR
         CLC   0(3,R1),CONWK       VALID REPLY
         BE    FOUND               ELSE
         LA    R1,3(R1)            DISPLAY
         B     FLOOKAGN            'ENTER WEEKDAY' AGAIN
FOUND    EQU   *
         PACK  DWORD,FSYSDATE(2)   CONVERT YEARS
         CVB   R2,DWORD            TO BINARY
         PACK  DWORD,FSYSDATE+2(3) CONVERT DAYS
         CVB   R3,DWORD            TO BINARY
         LR    R5,R2
         BCTR  R2,R0               FIND NO. OF LEAP YEARS
         SRL   R2,2                  (YY-1)/4
         LA    R1,365              FIND DAYS EQUIVALENT OF YY
         MR    R4,R1                 (AS A MULTIPLE OF 365)
         AR    R5,R2               ADD TOGETHER
         AR    R5,R3               YY IN DAYS, DAYS AND LEAPS
         LA    R1,7                TAKE OUT ALL MULTIPLES
         DR    R4,R1               OF 7 TO FIND VALUE  0-6
         MH    R4,THREE            CALC DISPLACEMENT ON DAY TABLE
         LA    R1,FDAYTAB(R4)      FIND DAY CALCULATED AND
         CLC   0(3,R1),CONWK       COMPARE TO ONE ENTERED
         BNE   FWRONG
         MVC   CONWK,FDAYAGRE      IF EQUAL, DISPLAY
         LA    R1,L'FDAYAGRE        MESSAGE TO
         BAL   R10,FPUT              THAT EFFECT
EXIT     EQU   *
         SR    R15,R15             RETURN CODE IF BATCH TEST
         L     R14,FRETURN         EXIT
         BR    R14
FWRONG   EQU   *                   IF DAYS NOT EQUAL,
         MVC   CONWK,FDAYWRNG      DISPLAY MESSAGE
         LA    R1,L'FDAYWRNG        TO THIS EFFECT
         BAL   R10,FPUT              AND THEN ...
         B     FENTWEEK            ... KEEP ASKING
FPUT     DS    0H     CONSOLE OUTPUT ROUTINE,
         ST    R1,WRITCCW+4        PUT LENGTH IN CCW
         LA    R1,WRITCCW          SET UP WRITE COMMAND L
         ST    R1,FCCB+8            IN CCB
         LA    R1,FCCB               AND WRITE
         EXCP  (1)
         WAIT  (1)
         BR    R10                 RETURN
FGET     DS    0H     CONSOLE INPUT ROUTINE
         XC    CONWK,CONWK         CLEAR CONSOLE INPUT
         LA    R1,READCCW          SET UP READ COMMAND
         ST    R1,FCCB+8            IN CCB
         LA    R1,FCCB               AND READ
         EXCP  (1)
         WAIT  (1)
         TM    4(R1),X'01'         TEST IF CANCEL
         BNZ   FGET                YES, READ AGAIN
         OC    CONWK(L'FBLANKS),FBLANKS NO, SET REPLY TO UPPER
         BR    R10                       CASE AND RETURN
         DS    0D
FCCB     CCB   SYSLOG,WRITCCW
READCCW  CCW   X'0A',CONWK,X'20',3
WRITCCW  CCW   9,CONWK,X'20',L'CONWK
DWORD    DC    D'0'                     CONVERT TO BINARY FIELD
FRETURN  DC    F'0'                     RETURN ADDR SAVE AREA
FSYSDATE DS    CL5                      SYSTEM DATE SAVE AREA
FBLANKS  DC    CL10' '
CONWK    DC    CL50' '                  CONSOLE MESSAGE AREA
FENTWKMS DC    C'ENTER WEEKDAY - THREE LETTERS'
FDAYAGRE DC    C'WEEKDAY AGREES WITH TODAY''S DATE'
FDAYWRNG DC    C'WEEKDAY AND DATE DON''T AGREE'
FDAYTAB  DC    C'SUNMONTUEWEDTHUFRISAT'
         DC    X'FF'
THREE    DC    H'3'
         REGEQU
SYSCOM   SYSCOM
         END

The required logical transient is shown below.

PSWF     TITLE 'ALTER A PARTITION''S PSW TO SUPERVISOR TYPE'
******************************************************
*          USED BY ESUP MACRO.                       *
*          PHASE NAME MUST BE $$BPSWFX.              *
*          MUST BE ON SYSRES TO BE USED BY IPL EXIT. *
******************************************************
$$BPSWFX CSECT
         USING *,R15
         USING COMREG,R1
         USING SYSCOM,R3
         DC    CL8'$$BPSWFX'
         LR    R14,R0              SAVE ADDR. OF AREA PASSED BY USER
         COMRG
         ASYSCOM 3
         LH    R9,PIBPT            PIBTAB
         L     R9,8(R9)            PARTN. SAVE AREA (WHEN IN LTA)
         MVC   0(2,R14),8(R9)      SAVE START OF ORIGINAL PSW FOR USER
         MVC   8(2,R9),=X'040C'    MODIFY SAVED PSW, EC MODE
                                    DISABLED, PROT. KEY ZERO, SUP.STATE
         TM    IJBFLG06,IJBEMODE   IF MODE=E IN SUPVR.
         BZ    QEXIT                NO DAT IS DONE
         NI    8(R9),X'FF'-X'04'     SO TURN OFF TRANSLATION BIT
QEXIT    EQU   *
         SVC   11
         REGEQU
         MAPCOMR
SYSCOM   SYSCOM
         END

The following are the required macros:

         MACRO
&LBL     DIAG  &R1,&R2,&CODE
&LBL     DC    0H'0',X'83',AL.4(&R1,&R2),Y(&CODE)
         MEND

         MACRO
         REGEQU
* GENERAL PURPOSE REGISTERS
R0       EQU   0

Editor's note: registers 1 to 14 go here.

R15      EQU   15
         MEND

         MACRO
&NAME    ESUP  &IO
         GBLC  &ESPX
         GBLB  &ESPNFST
*    ESUP MACRO - GET INTO OR OUT OF SUPVR. MODE, KEY ZERO, DISABLED  *
&NAME    DS    0H
         AIF   (&ESPNFST).ESPNFST
&ESPX    SETC  '&SYSNDX'           FIRST TIME THIS ASSEMBLY
.ESPNFST ANOP
         AIF   ('&IO' EQ 'OUT').ESPOUT
         AIF   ('&IO' EQ 'IN').ESPIN
         MNOTE 9,'OPERAND INVALID'
         MEXIT
.ESPIN   ANOP
         AIF   (&ESPNFST).ESPA
         CNOP  4,8
         BAL   0,*+12
ESPS&ESPX DC   D'0'                SAVE PROBLEM PROGRAM PSW
         AGO   .ESPB
.ESPA    LA    0,ESPS&ESPX         POINT TO SAVE AREA FOR P.P. PSW
.ESPB    LA    1,=CL8'$$BPSWFX'    CALL TRANSIENT TO GET INTO
         SVC   2                    SUPVR MODE & PROT. KEY ZERO
         AGO   .ESPEXIT
.ESPOUT  ANOP
         AIF   (&ESPNFST).ESPC
         CNOP  4,8
         B     *+12
ESPS&ESPX DC   D'0'                SAVE PROBLEM PROGRAM PSW
.ESPC    LA    0,*+12
         ST    0,ESPS&ESPX+4
         LPSW  ESPS&ESPX           RETURN TO P.P. MODE & CORRECT KEY
.ESPEXIT ANOP
&ESPNFST SETB  1                   NO LONGER FIRST TIME
         MEND

John Illingworth
Chief Systems Programmer
Empire Stores Ltd (UK)                         c Empire Stores Ltd 1991
