Stacking the VSE console

In a VM/VSE environment a few VM/VSE interface routines exist:

o      VSECMD passes a VSE command from CMS to the VSE
      virtual machine

o      VSEMSG displays the VSE console

o      VSEREP passes a reply to a partition in which a program
      waits for it.

These programs are supplied by IBM, but for EXEC
programming there is no way to read the VSE console and use
this information in a program.  So, we made the VSESTACK
module, based on VSEMSG, which, as the name indicates,
stacks the output from the VSEMSG command, FIFO.  The
stacked lines can be read and used.

         MACRO
&LBL     STACK &LINE,&LENGTH,&ORDER
         LCLC  &ORD
         AIF   ('&LINE'(1,1) EQ '(').R1FORM
&LBL     CNOP  0,8
         AGO   .TWO
.R1FORM  ANOP
&LBL     CNOP  4,8
         STCM  &LINE(1),7,*+25
.TWO     AIF   ('&LENGTH'(1,1) EQ '(').R2FORM
         MVI   *+20,&LENGTH
         AGO   .THREE
.R2FORM  ANOP
         STC   &LENGTH(1),*+20
.THREE   BAL   R1,*+20
         DC    CL8'ATTN'
&ORD     SETC  '&ORDER'.'FIFO'
&ORD     SETC  '&ORD'(1,4)
         DC    CL4'&ORD'
         DC    AL1(0)
         AIF   ('&LINE'(1,1) EQ '(').ZERO
         DC    AL3(&LINE)
         AGO   .SVC
.ZERO    DC    AL3(0)
.SVC     SVC   202
         DC    AL4(1)
         MEND
         MACRO
&LBL     CLS
&LBL     CNOP  0,8
         STM   R1,R2,*+52              * SAVE REGISTERS 1 AND 2
         BAL   R1,*+12
         DC    CL8'CONWAIT'            * FINIS PENDING CONSOLE MSGS
         SVC   202                     * HANDLE BY CMS
         DC    AL4(1)
         LA    R2,009                  * CONSOLE ADDRESS
         BCR   0,0                     * NOP FOR ALIGNMENT
         BAL   R1,*+12
         DC    X'1900000020FF0001'     * CLEAR SCREEN CCW
         DIAG  R1,R2,X'0058'           * BY CP VIA DIAG 58
         LM    R1,R2,*+8               * RESTORE REGISTERS 1 AND 2
         B     *+12                    * CONTINUE AFTER SAVE PLACE
         DS    2F                      * SAVE PLACE FOR REGS 1 AND 2
         MEND
VSESTACK CSECT
         REGEQU
         STM   R14,R12,0(R13)
         BALR  R12,0
         USING *,R12
         B     START
         DC    C'NAME: STACK VSE CONSOLE, ASSEMBLED: '
         DC    C'&SYSDATE '
         DC    C'&SYSTIME'
         DC    C', AUTHOR: R.T. HEEMSKERK'
START    CLI   8(R1),X'FF'             * NO PARMS SUPPLIED ?
         BE    HELPINFO                * DISPLAY HELP INFORMATION
         CLI   8(R1),C'?'              * PARM '?'
         BE    HELPINFO
         CLC   8(4,R1),=C'HELP'        * PARM 'HELP' ?
         BE    HELPINFO
         LR    R6,R1                   * R6 IS PARAMETER POINTER
         MVC   AUTHPARM+8(8),8(R6)     * MOVE USERID INTO SPECIFIC
         MVC   AU2PARM+8(8),8(R6)
         MVI   AU2PARM+36,X'30'
         STCK  CLOCK                   * GET TOD CLOCK
         MVC   AU2PARM+4(4),CLOCK+3    * FOR SPECIAL IDENTIFICATION
         HNDEXT SET,EXTFLIH            * HANDLE EXTERNAL INTERR.
         LA    R2,AUTHPARM
         SR    R3,R3
         DIAG  R2,R3,X'0068'
         LTR   R3,R3
         BNZ   ERROR
AGAIN    LA    R2,AU2PARM
         SR    R3,R3
         STCTL R0,R0,CNTRL0
         OI    CNTRL0+3,1
         LCTL  R0,R0,CNTRL0
         DIAG  R2,R3,X'0068'
         LTR   R3,R3
         BNZ   ERROR2
         LPSW  PSWAIT
EXTFLIH  EQU   *
         USING *,R15
         MVC   PSWOLD+2(2),26(R0)
         MVC   96(4,R1),PSWOLD
         BR    R14
         DROP  R15
PSWOLD   DC    X'00040000'
PSWAIT   DS    0D
         DC    X'01060000'
         DC    A(CONTINUE)
CONTINUE CLC   PSWOLD+2(2),=X'4001'
         BNE   WRONGEXT
         TM    BUFFER,X'40'
         BNO   SUCCES
         SR    R11,R11
         IC    R11,BUFFER+35
         EX    R0,*(R11)
         B     ERRBUSY
         B     ERRLOGIC
         B     ERRLOGIC
         B     ERRLOGIC
         B     ERRLOGIC
         B     ERRLOGIC
         B     ERRLOGIC
         B     ERRINCPT
ERRBUSY  LINEDIT TEXT='DMSVSE004I TASK BUSY, PLEASE RESUBMIT'
         LA    R3,4
         B     UNAUTH
ERRINCPT LINEDIT TEXT='DMSVSE056E INCOMPATIBLE VERSIONS OF VMCF'
         LA    R3,56
         B     UNAUTH
WRONGEXT LINEDIT TEXT='DMSVSE060I PROCESSING SUSPENDED BY USER'
         LH    R3,PSWOLD+2
         B     UNAUTH
ERRLOGIC LINEDIT TEXT='DMSVSE020E PROGRAM LOGIC ERROR ..',             +
               SUB=(DEC,(R11))
         LA    R3,20
         B     UNAUTH
SUCCES   CLI   16(R6),X'FF'            * ONLY USERID SUPPLIED
         BE    ALL
         CLC   16(5,R6),=C'LAST '      *
         BE    DOLAST
         LA    R8,DATA                 * PARTITION SUPPLIED
         L     R9,=A(DATAEND)          * ELSE PARTITION SUPPLIED
LOOP2    CLC   383(2,R8),16(R6)
         BE    PARTFND
         CLC   17(2,R8),16(R6)
         BE    PARTFND
         CLC   200(2,R8),16(R6)
         BE    PARTFND
         LA    R8,732(R8)
         CLR   R8,R9
         BL    LOOP2
         WRTERM INVLINE,INVLENGT
         LA    R3,20
         B     UNAUTH
DOLAST   LA    R10,ANSWER
         SL    R10,ANSWER+4
         L     R6,ANSWER
         LA    R6,0(R6)
         ALR   R6,R10
         LR    R3,R6
NEXTENTR TM    0(R6),X'C0'
         BZ    NOENTRY
         LA    R4,118
         TM    0(R6),X'80'
         BO    LONG
         LA    R4,48
LONG     LA    R4,4(R6)
         STACK (R5),(R4)
NOENTRY  L     R6,0(R6)
         LA    R6,0(R6)
         ALR   R6,R10
         CLR   R6,R3
         BNE   NEXTENTR
         SR    R3,R3
         B     UNAUTH
PARTFND  LR    R6,R8
         BAL   R11,DISPLAY
         SR    R3,R3
         B     UNAUTH
ALL      LA    R10,17
         LA    R6,DATA
LOOP     BAL   R11,DISPLAY
         LA    R6,732(R6)
         BCT   R10,LOOP
         SR    R3,R3
UNAUTH   LA    R4,UNAUPARM
         XR    R5,R5
         DIAG  R4,R5,X'0068'
         STCTL R0,R0,CNTRL0
         NI    CNTRL0+3,254
         LCTL  R0,R0,CNTRL0
         HNDEXT CLR
THEEND   LR    R15,R3
         L     R14,0(R13)
         LM    R0,R12,8(R13)
         BR    R14
DISPLAY  TM    366(R6),X'40'
         BOR   R11
         ST    R6,REG6
         MVC   OWNER(8),=C'**NONE**'
         MVC   OWNER+9(11),SPACES
         CLC   374(8,R6),SPACES
         BE    DISPLINE
         MVC   OWNER(8),374(R6)
         MVC   OWNER+9(11),=C'ECHO='
         TM    366(R6),X'10'
         BO    DISPLINE
         MVC   ECHOTYPE(5),=C'REPLY'
         TM    366(R6),X'08'
         BO    DISPLINE
         MVC   ECHOTYPE(5),=CL5'YES'
         TM    366(R6),X'20'
         BO    DISPLINE
         MVC   ECHOTYPE(5),=CL5'NO'
DISPLINE STACK OWNLINE,OWNLENGT
         LA    R9,3
         LR    R5,R6
LOOP3    BAL   R6,DISPCONS
         LA    R5,183(R5)
         BCT   R9,LOOP3
         L     R6,REG6
         CLI   385(R6),C'-'
         BE    DISPWAIT
         CLI   385(R6),C'+'
         BNE   RETURN
DISPWAIT STACK WAITLINE,WAITLENG
RETURN   BR    R11
DISPCONS TM    0(R5),X'40'
         BOR   R6
         LA    R4,134(R5)
         LA    R7,111
READSPAC CLI   O(R4),C' '
         BNE   NOSPACE
         BCTR  R4,R0
         BCT   R7,READSPAC
NOSPACE  LA    R4,1(R7)
         SR    R8,R8
         LA    R7,BUFFER+7
         LA    R3,24(R5)
         MVC   BUFFER(7),17(R5)
MORE     CLI   0(R3),X'15'
         BNE   NOEOL
         LA    R3,1(R3)
         B     EOL
NOEOL    MVC   0(1,R7),0(R3)
         LA    R7,1(R7)
         LA    R8,1(R8)
         LA    R3,1(R3)
         CH    R8,=H'111'
         BE    EOL
         BCT   R4,MORE
EOL      LA    R8,7(R8)
         STACK BUFFER,(R8)
         MVC   BUFFER(80),SPACES
         SR    R8,R8
         LA    R7,BUFFER+7
         BCTR  R4,R0
         LTR   R4,R4
         BH    MORE
         BR    R6
HELPINFO CLS
         WRTERM HELP,HELPLENG,EDIT=LONG
         SR    R3,R3
         B     THEEND
HELP     DC    C'VSESTACK HELPINFO'
         DC    X'15'
         DC    C'-----------------'
         DC    X'1515'
         DC    C'This module will stack requested console information '
         DC    C'from a VSE machine.'
         DC    X'1515'
         DC    C'Format of the call:'
         DC    X'1515'
         DC    C'    VSESTACK vseid ÝLAST|BG|Fn¨'
         DC    X'1515'
         DC    C'Where:',X'15'
         DC    C'vseid is the id of the VSE machine,',X'15'
         DC    C'LAST  will stack the last 20 console messages,',X'15'
         DC    C'BG    the last 3 messages for the BG-partition,',X'15'
         DC    C'Fn    the last 3 messages for the Fn-partition.',X'15'
         DC    X'15'
         DC    C'Omitting the optional operands will result in '
         DC    C'stacking the last 3 messages',X'15'
         DC    C'for BG, Fn, and AR.',X'15'
         DC    C'One line info about the partition owner and '
         DC    C'ECHO-information will preceed',X'15'
         DC    C'partition messages (operand BG, Fn or no operands).'
         DC    X'1515'
HELPLENG EQU   *-HELP
ERROR    LINEDIT TEXT='VSE VMCF ERROR .... WHILE AUTHORIZING THIS USERI+
               D',SUB=(DEC,(R3))
         LA    R3,24
         B     UNAUTH
ERROR2   CH    R3,=H'5'
         BNE   CHCK8
         LINEDIT TEXT='VSE MACHINE NOT AVAILABLE FOR VMCF'
         LA    R3,44
         B     UNAUTH
CHCK8    CH    R3,=H'8'
         BNE   CHCK10
         STCK  CLOCK
         MVC   4(4,R7),CLOCK+3
         B     AGAIN
CHCK10   CH    R3,=H'10'
         BNZ   VCMFERR
         LINEDIT TEXT='DMSVSE048E VMCF MESSAGE LIMIT EXCEEDED, RETRY'
         LA    R3,48
         B     UNAUTH
VMCFERR  LINEDIT TEXT='DMSVSE052E VMCF ERROR ....',                    +
               SUB=(DEC,(R3))
         LA    R3,52
         B     UNAUTH
CLOCK    DS    D
BUFFER   DC    80C' '
CNTRL0   DS    F
REG6     DS    F
OWNLINE  DC    C'PARTITION OWNERID: '
OWNER    DC    9C' ',5C' '
ECHOTYPE DC    5C' '
OWNLENGT EQU   *-OWNLINE
WAITLINE DC    C'PARTITION WAITING REPLY'
WAITLENG EQU   *-WAITLINE
INVLINE  DC    C'PARTITION IS INVALID OR NO MESSAGES ARE BUFFERED'
INVLENGT EQU   *-INVLINE
SPACES   DC    CL80' '
         DS    0D
AUTHPARM DC    X'80000000'
         DC    4X'00',8C' '
         DC    A(BUFFER)
         DC    X'00000028'
         DC    16X'00'
UNAUPARM DC    X'00000001'
         DC    4X'00',8C' '
         DC    24X'00'
AU2PARM  DC    X'00000003'
         DC    4X'00',8C' '
         DC    A(AU2PARM)
         DC    X'00000028'
         DC    A(ANSWER)
         DC    X'0000'
         DC    H'12800',C'MSG     '
         LTORG
ANSWER   DC    A(0)
         DC    A(ANSWER)
DATA     DC    100CL128' '
DATAEND  EQU   *
         END

R T Heemskerk
Systems Programmer (The Netherlands)

