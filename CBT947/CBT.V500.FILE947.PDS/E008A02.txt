Using PDUMP from a high-level language program

The Assembly language macro PDUMP allows a program to
display current register contents and a range of storage on
SYSLST without cancelling the program, and can be a very
helpful tool during program development and testing. For
example, when a certain condition occurs, a program could use
PDUMP to display a record or an area of working storage, and
continue processing. The programmer needs to provide only
the start and end address of the area of storage to be displayed.
PDUMP prints that area on SYSLST in dump format. In an
Assembly language program, a 20-byte storage area could be
PDUMPed by coding the instruction:

      PDUMP  FIELD.FIELD+19

Since programs written in a high-level language such as
COBOL or RPG cannot call Assembly language macros
directly, a relocatable subroutine such as the following can be used.

         TITLE 'JHRPDUMP - ISSUE DOS PDUMP MACRO'
         PUNCH ' CATALR JHRPDUMP'
JHRPDUMP START  0
         USING  JHRPDUMP.15
         SAVE   (14,12)
         LM     1,2,0(1)
         PDUMP  (1),(2)
         RETURN (14,12)
         END

In a COBOL program, a portion of WORKING-STORAGE
might be dumped as illustrated below. The area displayed is
from the first byte of FIRST-FIELD to the first byte of LAST-FIELD.

WORKING-STORAGE SECTION.

77  FIRST-FIELD      PIC X(9).
77  COMP-3-DATA      PIC S9(5) COMP-3.
77  MORE-DATA        PIC X(20).
77  LAST-FIELD       PIC X(5).

PROCEDURE DIVISION.

    CALL 'JHRPDUMP' USING FIRST-FIELD LAST-FIELD.

PDUMP displays its output on SYSLST. If it is not desirable to
have a dump appear in the middle of the program's report
output, the program's printer file should be assigned to a
programmer logical unit other than SYSLST, for example
SYS005. SYS005 can then be assigned to a virtual printer
spooled by POWER, but not the printer SYSLST is assigned
to, and a separate POWER LST card can be coded for each
printer. For example:

* $$ LST CLASS=A,DISP=H
* $$ LST CLASS=A,DISP=H,LST=FFE
// ASSGN SYS005,FFE

James E Holler
Little Blue Systems (USA)                         c Little Blue Systems 1992

