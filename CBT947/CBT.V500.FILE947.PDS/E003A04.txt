Tape utility program

I wrote the following program primarily to enable me to check
the status of tape drives and the volumes mounted on them
from a terminal at my desk.  In addition, it allows commands
to (F) forward space one file, (B) back space one file, (R)
rewind to load point, and (U) unload a tape.  Executed
primarily from ICCF ($TM), it has saved many trips into the
computer room.  The program can also be executed from the
console via a pause, or by assigning it to an unused attention
routine command.  The program is currently running under
VSE/SP 2.1 with 3420-6 tape drives, but should work with any
model 3420 drive.  The only changes required for other tape
devices should be the channel program command codes, if any.
The program is currently capable of checking 16 tape drives,
but could accommodate more by expanding the assign release
table (RELTAB).

Figure 1 shows the possible responses from executing the
program.  One line is displayed per tape drive.  The device
CUU is listed first, and is obtained from the PUB table.  The
status of the drive, which is either available or owned, is
shown next.  If there is an assign made to a drive, that drive is
owned and no further checking is done for that unit.  The tape
status is then listed (ready/notrd).  If a tape is mounted and is
not currently assigned, the status will be ready.  The next field
in the display is the protect/unprotect indicator (ring in/out).
The density of the tape mounted is displayed next, followed by
load point status (load point/not load point).  The volume and
header records are read for those tapes at load point (LPT) that
are available to show the volume serial number, the file-id, and
file creation and expiration dates.  If the header and volume
records are read, the tape is rewound to load point so as not to
interfere with the tape being assigned.

To position a tape that is not currently owned enter the
command code (F,B,R, and U) followed by a space and the
CUU.  For example: B 380 would backspace the tape on 380
one file; or R 380 would rewind it to load point.  A response
with no data re-executes the program and provides a fresh
display.  To end the program, simply enter Q.

* $$ JOB JNM=TM,DISP=D,CLASS=0,PRI=5,USER='*WILL*'
* $$ LST CLASS=O,DISP=D,PRI=5
// JOB TM SE
// LIBDEF PHASE,CATALOG=USR1.PROD
// OPTION CATAL,ALIGN
 PHASE TM,*
// EXEC ASSEMBLY,SIZE=500K *
         PRINT   ON,NOGEN,DATA
*        PRINT   ON,GEN,DATA
*
*       THIS PROGRAM WILL:
*       1. LIST ALL TAPE DRIVES AND THEIR STATUS.
*       2. LIST THE HEADER INFORMATION FROM ANY TAPES AT LOAD POINT.
*       3. ACCEPT COMMANDS TO:  REWIND             (R)
*                               UNLOAD             (U)
*                               FORWARD SPACE FILE (F)
*                               BACK SPACE FILE    (B).
ASSIGN   ASPL  DSECT=YES
TM       START 0
         BALR  R12,0
         USING *,R12                LOAD BASE REGISTER
         XC    ASPL1,ASPL1          CLEAR PARAMETER LIST
         XC    TAPEINFO,TAPEINFO    CLEAR SENSE INFO
         XC    REPLY,REPLY          CLEAR REPLY INFO
         LA    R10,ASPL1            ESTABLISH ADDRESSABILITY
         USING ASSIGN,R10           TO PARM LIST
         LA    R11,RELTAB           POINT TO RELEASE TABLE
         ASYSCOM ,                  POINT TO SYSCOM
         L     R8,120(R1)           SET PUBOWN ADDRESS
         ST    R8,PUBOWN            SAVE PUBOWN ADDRESS
         COMRG ,                    GET COMREG ADDRESS
         LH    R9,64(R1)            SET ADDRESS OF PUB TABLE
         ST    R9,PUBTAB            SAVE PUB TABLE ADDRES
PUBCHECK EQU   *
         MVI   LOGMSG1,C' '         CLEAR MESSAGE LINE
         MVC   LOGMSG1+1(L'LOGMSG1),LOGMSG1
         MVC   WORK1(1),4(R9)       GET THE DEVICE TYPE
         NI    WORK1,X'F0'          REMOVE OTHER BITS
         CLI   WORK1,X'50'          IS DEVICE A TAPE UNIT
         BNE   BUMPUB               NO, GET ANOTHER
CHECKUP  EQU   *
         MVC   WORK2(2),0(R9)       GET CUU
         MVC   CUU(1),0(R9)         MOVE CHANNEL
         MVI   WORK2,X'00'          REMOVE CHANNEL
         LH    R4,WORK2
         SRL   R4,4                 REMOVE RIGHT NIBS
         STC   R4,CUU+1             MOVE UU
         NI    WORK2+1,X'0F'        REMOVE LEFT NIBS
         MVC   CUU+2(1),WORK2+1     AND MOVE
         TR    CUU(3),TABLE         TRANSLATE FOR DISPLAY
         TM    7(R9),X'F8'          IS TAPE UNIT?
         BM    TAPEUP               YES, PROCEED
         MVC   STATUS,=C'DOWN '     NO
         LA    R1,LOGCCB1           PUT LINE TO CONSOLE
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
         B     BUMPUB
TAPEUP   EQU   *
         LH    R5,0(R8)             SET PUBOWN FLAGS
         SLL   R5,20                STRIP OFF FIRST 4 BITS
         LTR   R5,R5                IS TAPE UNIT OWNED?
         BNZ   OWNED                YES GO DO MESSAGE
         MVC   STATUS,=C'AVAIL'     NO
         MVI   ASGFUNCT,ASGTPT      ASSGN TAPE TEMP
         LA    R10,ASPL1            ENSURE ADDRESSABILITY
         ASSIGN ASPL=(R10),SAVE=SAVEAREA
         LTR   R15,R15              ASSIGN OK
         BNZ   BADASG               NO
         MVC   TAPECCB1+7(1),ASGLUNDX    PUT SYSNO IN CCB
         MVC   HWORD,ASGLUNO        GET SYSNO
         NI    HWORD,B'00000000'    FOR RELEASE
         LH    R7,HWORD             MACRO
         CVD   R7,DWORD
         UNPK  DWORD,DWORD+6(2)
         MVC   0(3,R11),DWORD+5     MOVE SYSNO TO RELEASE TABLE
         LA    R11,3(R11)           BUMP RELEASE TABLE POINTER
* THIS IS WHERE TO CHECK FOR TAPE POSITIONING COMMANDS
         CLC   CUU,ICUU             DO WE WANT TO SPIN THIS TAPE
         BNE   SENSE                NOPE, GO AROUND
         CLI   ICOM,C'R'            DO WE WANT TO REWIND THIS TAPE
         BNE   NOREWIND             NOPE, GO AROUND
         MVI   TAPECCW1,X'07'       INDICATE REWIND
         LA    R1,TAPECCB1          GET READY TO REWIND
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
         B     SENSE                CONTINUE
NOREWIND EQU   *
         CLI   ICOM,C'U'            DO WE WANT TO UNLOAD THIS TAPE
         BNE   NOUNLD               NOPE, GO AROUND
         MVI   TAPECCW1,X'0F'       INDICATE UNLOAD
         LA    R1,TAPECCB1          GET READY TO EXCP
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
         B     SENSE                GO AROUND
NOUNLD   EQU   *
         CLI   ICOM,C'F'            DO WE WANT TO F-S-F
         BNE   NOFSF                NOPE, GO AROUND
         MVI   TAPECCW1,X'3F'       FORWARD SPACE FILE
         LA    R1,TAPECCB1          GET READY TO EXCP
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
         B     SENSE                GO AROUND
NOFSF    EQU   *
         CLI   ICOM,C'B'            DO WE WANT TO B-S-F
         BNE   SENSE                NOPE, GO AROUND
         MVI   TAPECCW1,X'2F'       BACK SPACE FILE
         LA    R1,TAPECCB1          GET READY TO EXCP
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
SENSE    EQU   *
         MVI   TAPECCW1,X'04'       SENSE
         LA    R1,TAPECCB1          GET READY TO EXCP
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
         TM    TAPEINFO+1,B'00001000'
         BO    LPT
         MVC   LPOINT,=C'NLP'
         B     MODECHEK
LPT      EQU   *
         MVC   LPOINT,=C'LPT'
MODECHEK EQU   *
         TM    TAPEINFO+6,B'00010000' CHECK TAPE MODE
         BO    HIDEN
         MVC   DENSITY,=C'1600'
         B     PROTCHEK
HIDEN    EQU   *
         MVC   DENSITY,=C'6250'
PROTCHEK EQU   *
         TM    TAPEINFO+1,B'00000010' CHECK FOR FILE PROTECT
         BO    PROT                 IT IS PROTECTED
         MVC   PROTECT,=C'UNP '
         B     RDYCHECK
PROT     EQU   *
         MVC   PROTECT,=C'PROT'
RDYCHECK EQU   *
         TM    TAPEINFO+1,B'01000000' IS TAPE READY
         BO    TAPERDY              YES
         MVC   READY,=C'NOTRD'
         B     LINEOUT
TAPERDY  EQU   *
         MVC   READY,=C'READY'
         TM    TAPEINFO+1,B'01001000'  CAN LABEL BE READ?
         BNO   LINEOUT              NO DONT TRY
         MVI   TAPECCW1,X'02'       READ FORWARD (VOL1)
         LA    R1,TAPECCB1          GET READY TO EXCP
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
         MVC   VOLSAVE,TAPEINFO     SAVE VOLUME 1 RECORD
         MVI   TAPECCW1,X'04'       SENSE
         LA    R1,TAPECCB1          GET READY TO EXCP
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
         TM    TAPEINFO+6,B'00010000' CHECK TAPE MODE
         BO    HIDEN2
         MVC   DENSITY,=C'1600'
         B     VOLCHECK
CP       EQU   *
         EXCP  (1)                  DO IT
         WAIT  (1)                  AND BE PATIENT
         BR    R6                   RETURN FROM WHERE YOU CAME
HIDEN2   EQU   *
         MVC   DENSITY,=C'6250'
VOLCHECK EQU   *
         CLC   VOLSAVE(3),=C'VOL'   CHECK FOR VOLUME LABEL
         BE    HASVOL               YEP GET IT
         MVC   VOLNO,=C'NO VOL'     NOPE
         B     REWIND
HASVOL   EQU   *
         MVC   VOLNO,VOLSAVE+4      GET VOLUME NO
         MVI   TAPECCW1,X'02'       READ FORWARD (HDR1)
         LA    R1,TAPECCB1          GET READY TO EXCP
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
         MVC   LBL,TAPEINFO+4       GET HDR LABEL
         MVC   CREDATE,TAPEINFO+42  GET CREATE DATE
         MVC   EXPDATE,TAPEINFO+48  GET EXP DATE
REWIND   EQU   *
         MVI   TAPECCW1,X'07'       INDICATE REWIND
         LA    R1,TAPECCB1          GET READY TO REWIND
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
LINEOUT  EQU   *
         XC    TAPEINFO,TAPEINFO    CLEAR SENSE INFO
         XC    ASPL1,ASPL1          CLEAR PARM LIST
         LA    R1,LOGCCB1           PUT LINE TO CONSOLE
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
         B     BUMPUB
OWNDED   EQU   *
         MVC   STATUS,=C'OWNED'
         LA    R1,LOGCCB1           PUT LINE TO CONSOLE
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
BUMPUB   EQU   *
         LA    R9,8(R9)             POINT TO NEXT ENTRY IN PUB TABLE
         LA    R8,2(R8)             POINT TO NEXT ENTRY IN PUBOWN TABLE
         CLI   0(R9),X'FF'          END OF PUB TABLE?
         BNZ   PUBCHECK
         MVC   REPLY,SPACES         CLEAR INPUT AREA
*        RELEASE (SYS099,SYS099)
         LA    1,=C'$$BRELSE'
         BAL   0,IJBZ0021
RELTAB   DC    C'099099099099099099099099099099099099099099099099'
IJBZ0021 SVC   2
         LA    R1,ASKCCB1           GET REPLY FROM CONSOLE
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
         CLI   REPLY,C'Q'           SEE IF THEY WANT TO QUIT
         BE    END                  YEP THEY'RE QUITTERS
         LA    R11,RELTAB           SET RELEASE TABLE ADDRESS
         L     R8,PUBOWN            SET PUBOWN ADDRESS
         L     R9,PUBTAB            SET ADDRESS OF PUB TABLE
         B     PUBCHECK
BADASG   EQU   *
         MVC   LOGMSG1,=C'BAD ASSIGN       '
         LA    R1,LOGCCB1           PUT LINE TO CONSOLE
         BAL   R6,CP                GO EXECUTE CHANNEL PROGRAM
END      EQU   *
         EOJ   RC=0                 TERMINATE PROGRAM
*
         REGS
ASPL1    DS    CL(ASGLNG)
SAVEAREA DS    18F                  SAVE AREA FOR ASSGN MACRO
LOGCCB1  CCB   SYSLOG,LOGCCW1
LOGCCW1  CCW   X'09',LOGMSG1,X'20',L'LOGMSG1
LOGMSG1  DS    0CL74
CUU      DS    CL3
         DC    C'  '
STATUS   DS    CL5
         DC    C'  '
READY    DS    CL5
         DC    C'  '
PROTECT  DS    CL4
         DC    C'  '
DENSITY  DS    CL4
         DC    C'  '
LPOINT   DS    CL3
         DC    C'  '
VOLNO    DS    CL6
         DC    C'  '
LBL      DS    CL17
         DC    C'  '
CREDATE  DS    CL5
         DC    C' '
EXPDATE  DS    CL5
SPACES   DC    CL80' '
ASKCCB1  CCB   SYSLOG,ASKCCW1
ASKCCW1  CCW   X'0A',REPLY,X'20',L'REPLY
TAPECCB1 CCB   SYS010,TAPECCW1
TAPECCW1 CCW   X'04',TAPEINFO,X'20',L'TAPEINFO
TAPEINFO DS    CL80
VOLSAVE  DS    CL80
REPLY    DS    0CL5
ICOM     DS    CL1
FILL     DS    CL1
ICUU     DS    CL3
PUBTAB   DS    F
PUBOWN   DS    F
WORK1    DS    C
WORK2    DS    H
HWORD    DS    H
DWORD    DS    D
TABLE    DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         LTORG
         END   TM
/*
// EXEC LNKEDT
/&
* $$ EOJ

Will Townsley
Systems Programmer
BCISD (USA)                               c BCISD 1991

