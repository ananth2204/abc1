DL/I HDAM database management

DL/I HDAM database management is a set of two COBOL
programs that are used to evaluate any DL/I HDAM database.
This is very useful when you need to calculate the size of the
database.

The first program, DLIRAPS, will read all the Control
Intervals (blocks) in a DL/I HDAM database and calculate the
number of root anchor points.  This value is specified in the
DBD control statement as the second parameter in
RMNAME=.  The input control card specifies the database
name and the new value that you want to specify for the root
anchor points.  This program will produce both a report and
card-image output showing each root anchor point and the total
number of records for each one.  The card output can be used
in a graphics program such as Lotus.

The second program, DLIRLEN, will read any DL/I HDAM
database and calculate the maximum number of bytes for a
database record. This value is specified in the DBD control
statement as the fourth parameter in RMNAME=.  The input
control card specifies the database segment name and the
length of each segment.  One control card is needed for each
segment on the database.  This program will produce both a
report and card-image output showing the maximum number of
bytes per HDAM database segment.  The card output can be
used in a graphics program such as Lotus.


DLIRAPS

       IDENTIFICATION DIVISION.
       PROGRAM-ID.   DLIRAPS.
       REMARKS.  THE PURPOSE OF THIS PROGRAM IS TO EVALUATE A DL/I
                HDAM DATABASE.  THIS PROGRAM WILL READ ALL THE CONTROL
                INTERVALS (BLOCKS) IN A DL/I HDAM DATABASE AND CALCULATE
                THE NUMBER OF ROOT ANCHOR POINTS.  THE DATABASE IS
                DEFINED AS A VSAM ENTRY SEQUENTIAL DATASET (ESDS).
                 FIRST, THE PROGRAM WILL READ A CONTROL CARD SPECIFYING
                THE MAXIMUM NUMBER OF ROOT ANCHOR POINTS IN THE DBDGEN
                RMNAME= PARAMETER.
                 NEXT, THE DL/I HDAM DATABASE IS READ AND THE TOTAL
                NUMBER OF ROOT ANCHOR POINTS PER CONTROL INTERVAL IS
                CALCULATED.  A COUNT OF THE TOTAL NUMBER OF ROOT ANCHOR
                POINTS IN EACH CONTROL INTERVAL IS ACCUMULATED AND IS
                DISPLAYED AT THE END OF THE PROGRAM.  IF A CONTROL
                INTERVAL DOES NOT HAVE ANY ROOT ANCHOR POINTS, THEN A
                COUNT IS ALSO ACCUMULATED AND DISPLAYED.
                 THE PUNCHED CARDS HAVE THE SAME INFORMATION AS THE
                PRINTOUT.  THESE CARDS CAN BE USED TO DOWNLOAD IT INTO
                A GRAPHICS PROGRAM SUCH AS LOTUS.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT CARD-FILE   ASSIGN SYS016-UR-2540R-S.
           SELECT DLIRAPS     ASSIGN SYS050-AS-DLIRAPS
               FILE STATUS IS FILE-STATUS1.
           SELECT PUNCH-FILE  ASSIGN SYS017-UR-2540P-S.
           SELECT PRINT-FILE  ASSIGN SYS018-UR-1403-S.
       DATA DIVISION.
       FILE SECTION.
       FD  CARD-FILE
               RECORDING MODE F
               RECORD CONTAINS 80 CHARACTERS
               LABEL RECORDS ARE OMITTED.
       01  CARD-REC                         PIC X(80).
       FD  DLIRAPS
           LABEL RECORDS ARE STANDARD.
       01                  FILLER           PIC X(4096).
       FD  PUNCH-FILE
               RECORDING MODE F
               RECORD CONTAINS 80 CHARACTERS
               LABEL RECORDS ARE OMITTED.
       01  PUN-REC                          PIC X(80).
       FD  PRINT-FILE
               RECORDING MODE F
               RECORD CONTAINS 133 CHARACTERS
               LABEL RECORDS ARE OMITTED
               DATA RECORD IS PRINT-REC.
       01  PRT-REC.
           03  PRT-CC                       PIC X.
           03              FILLER           PIC X(132).
       WORKING-STORAGE SECTION.
       77  PGM-ID                           PIC X(10)   VALUE 'DLIRAPS'.
       77  TIME-COMPILED                    PIC X(16)   VALUE      ' '.
       77  PAGE-CNT              COMP-3     PIC 999     VALUE        0.
       77  LINE-CNT              COMP-3     PIC S99     VALUE       +0.
       77  FILE-STATUS1                     PIC XX      VALUE      ' '.
       77  X                     COMP SYNC  PIC S9(4)   VALUE       +0.
       77  I                     COMP SYNC  PIC S9(4)   VALUE       +0.
       77  ID-Y                             PIC S9(4)   VALUE       +0.
       77  ZORRO                 COMP SYNC  PIC S9(4)   VALUE       +0.
       77  NUM-RAPS              COMP-3     PIC S9(9)   VALUE       +0.
       77  REC-IN                COMP-3     PIC S9(9)   VALUE       +0.
      *    DLI HDAM DATA BASE LAYOUT
       01  WORK-AREA.
           03  WA-FSAP.
               05  WA-FSAP1       COMP      PIC S9(4).
               05  WA-FSAP2       COMP      PIC S9(4).
           03  WA-RAPS OCCURS 200 TIMES DEPENDING ON X.
               05  WA-RAPS-ELE    COMP      PIC S9(8).
      *    CONTROL CARD SPECIFIES TOTAL NUMBER OF ROOT ANCHOR POINTS
       01  CONTROL-CARDS.
           03  CC-DB-NAME                   PIC X(9).
           03  CC-DB-RAPS                   PIC 999.
           03              FILLER           PIC X(68).
      *    TOTAL NUMBER OF ROOT ANCHOR POINTS PER CONTROL INTERVAL
      *    TABLE WILL HANDLE MAXIMUM OF 200 ROOT ANCHOR POINTS
       01  TABLE-RAPS-COUNT.
           03  TBL-COUNT OCCURS 200 TIMES INDEXED BY Y
                                            PIC S9(9) COMP-3.
       01  REPORT-TITLES.
           03  REPORT-TITLE-1               PIC X(44)    VALUE
                         '                        DLI HDAM RAPS COUNT '.
       01  HEAD-LINE-1.
           03              FILLER           PIC X(9) VALUE
                                                            '1DLIRAPS '.
           03              FILLER           PIC X(17) VALUE         ' '.
           03  HD-1-REPORT-TITLE            PIC X(44) VALUE         ' '.
           03              FILLER           PIC X(26) VALUE         ' '.
           03  HD-1-RUN-DATE                PIC X(8)  VALUE         ' '.
           03              FILLER           PIC X(8)  VALUE         ' '.
           03  HD-1-RUN-TIME                PIC X(8)  VALUE         ' '.
           03              FILLER           PIC X(5)  VALUE         ' '.
           03              FILLER           PIC X(5)  VALUE     'PAGE '.
           03  HD-1-PAGE-NO                 PIC ZZZ.
       01  HEAD-LINE-2.
           03              FILLER           PIC X(56)  VALUE
             '0  RAPS PER              NUMBER                         '.
           03              FILLER           PIC X(77)  VALUE        ' '.
       01  HEAD-LINE-3.
           03              FILLER           PIC X(56)  VALUE
             '      CI                 OF C/I                         '.
           03              FILLER           PIC X(77)  VALUE        ' '.
       01  DETL-LINE-1.
           03              FILLER           PIC XXX.
           03  DETL-SUB                     PIC Z(8).
           03              FILLER           PIC X(12).
           03  DETL-COUNT                   PIC Z(8).
           03              FILLER           PIC X(102).
       PROCEDURE DIVISION.
           MOVE WHEN-COMPILED TO TIME-COMPILED.
           DISPLAY 'BEGIN PROGRAM ' PGM-ID TIME-COMPILED UPON CONSOLE.
           MOVE SPACES          TO  WORK-AREA.
           SET Y                TO  ZORRO.
           MOVE CURRENT-DATE    TO  HD-1-RUN-DATE.
           MOVE TIME-OF-DAY     TO  HD-1-RUN-TIME.
       100-OPEN-FILES.
           OPEN INPUT  DLIRAPS.
           IF FILE-STATUS1 NOT = '00'
               DISPLAY 'OPEN ERROR ON DLIRAPS ' FILE-STATUS1
                                   GO TO 999-END-PROGRAM.
           OPEN INPUT CARD-FILE.
           OPEN OUTPUT PRINT-FILE.
           OPEN OUTPUT PUNCH-FILE.
       10-READ-CARDS.
           READ CARD-FILE INTO CONTROL-CARDS AT END
               DISPLAY 'MISSING OR INVALID CONTROL CARD' UPON CONSOLE
               DISPLAY 'MISSING OR INVALID CONTROL CARD'
               STOP RUN.
           MOVE CC-DB-RAPS  TO  X.
       20-INITIALIZE-TABLE.
           SET Y UP BY +1.
           IF Y > 201
                                   GO TO 100-READ-DLIRAPS.
           MOVE ZEROS  TO  TBL-COUNT (Y).
           GO TO 20-INITIALIZE-TABLE.
       100-READ-DLIRAPS.
           READ DLIRAPS INTO WORK-AREA AT END
                                   GO TO 999-END-PROGRAM.
      *    BYPASS DLI CONTROL RECORD
           ON 1
                                   GO TO 100-READ-DLIRAPS.
      *    BYPASS DLI BIT MAP
           IF WA-FSAP2  =  1
                                   GO TO 100-READ-DLIRAPS.
           ADD 1       TO  REC-IN.
           MOVE ZEROS  TO  NUM-RAPS.
           PERFORM 200-CALCULATE-RAPS  THRU  250-CALCULATE-EXIT
                                      VARYING I FROM 1 BY 1 UNTIL I > X.
           IF NUM-RAPS = ZEROS
               SET Y  TO  X
               SET Y  UP BY +1
               ADD 1  TO  TBL-COUNT (Y)
           ELSE
               SET Y  TO  NUM-RAPS
               ADD 1  TO  TBL-COUNT (Y).
           GO TO 100-READ-DLIRAPS.
       200-CALCULATE-RAPS.
      *    IF WA-RAPS-ELE IS NOT ZEROS, THEN IT'S A RAP
           IF WA-RAPS-ELE (I) NOT EQUAL ZEROS
               ADD 1 TO NUM-RAPS.
       250-CALCULATE-EXIT.
           EXIT.
       999-END-PROGRAM.
           PERFORM 1000-PRINT-HEADINGS THRU 1100-RETURN-EXIT.
           CLOSE DLIRAPS.
           CLOSE PRINT-FILE.
           CLOSE CARD-FILE.
           CLOSE PUNCH-FILE.
           DISPLAY 'TOTAL CI READ ' REC-IN UPON CONSOLE.
           DISPLAY 'END - DLIRAPS'         UPON CONSOLE.
           STOP RUN.
       1000-PRINT-HEADINGS.
           MOVE REPORT-TITLE-1  TO  HD-1-REPORT-TITLE.
           PERFORM 8010-PRINT-HEAD-1.
           PERFORM 8020-PRINT-HEAD-2.
           PERFORM 8030-PRINT-HEAD-3.
           MOVE SPACES TO DETL-LINE-1.
           PERFORM 8100-PRINT-DETAIL-LINE.
       1050-RETURN-ROUTINE.
           ADD 1 TO X.
           PERFORM 1200-PRINT-DETAIL THRU 1250-PRINT-DETAIL-EXIT
               VARYING Y FROM 1 BY 1 UNTIL Y > X.
       1100-RETURN-EXIT.
           EXIT.
       1200-PRINT-DETAIL.
           IF LINE-CNT > 52
               PERFORM 1000-PRINT-HEADINGS.
           MOVE ' '            TO  DETL-LINE-1.
           SET  ID-Y           TO  Y.
           MOVE ID-Y           TO  DETL-SUB.
           MOVE TBL-COUNT (Y)  TO  DETL-COUNT.
           ADD 1               TO  LINE-CNT.
           PERFORM 8100-PUNCH-DETAIL-LINE.
           PERFORM 8100-PRINT-DETAIL-LINE.
       1250-PRINT-DETAIL-EXIT.
           EXIT.
       MISC-RTNS SECTION.
       8010-PRINT-HEAD-1 SECTION.
           MOVE CURRENT-DATE  TO  HD-1-RUN-DATE.
           MOVE TIME-OF-DAY   TO  HD-1-RUN-TIME.
           ADD 1              TO  PAGE-CNT.
           MOVE PAGE-CNT      TO  HD-1-PAGE-NO.
           WRITE PRT-REC FROM HEAD-LINE-1  AFTER POSITIONING PRT-CC.
       8020-PRINT-HEAD-2 SECTION.
           WRITE PRT-REC FROM HEAD-LINE-2 AFTER POSITIONING PRT-CC.
       8030-PRINT-HEAD-3 SECTION.
           WRITE PRT-REC FROM HEAD-LINE-3 AFTER POSITIONING PRT-CC.
       8100-PRINT-DETAIL-LINE SECTION.
           WRITE PRT-REC FROM DETL-LINE-1 AFTER POSITIONING PRT-CC.
           MOVE SPACES   TO  DETL-LINE-1.
       8100-PUNCH-DETAIL-LINE SECTION.
           WRITE PUN-REC FROM DETL-LINE-1.


DLIRLEN

       IDENTIFICATION DIVISION.
       PROGRAM-ID.   DLIRLEN.
       REMARKS.  THE PURPOSE OF THIS PROGRAM IS TO EVALUATE A DL/I
                HDAM DATABASE.  THIS PROGRAM WILL READ ANY DL/I HDAM
                DATABASE AND CALCULATE THE MAXIMUM NUMBER OF BYTES IN A
                DATABASE SEGMENT.  THIS INFORMATION IS USEFUL IN
                DETERMINING THE VALUE TO USE FOR THE FOURTH PARAMETER
                OF RMNAME= IN THE DBD STATEMENT FOR AN HDAM DATABASE.
                  THIS PARAMETER SPECIFIES THE MAXIMUM NUMBER OF BYTES
               OF A DATABASE SEGMENT THAT CAN BE STORED IN THE ROOT
               ADDRESSABLE AREA IN A SERIES OF INSERTS UNBROKEN BY A
               CALL TO ANOTHER DATABASE RECORD.
                 FIRST, THE PROGRAM WILL READ CONTROL CARDS SPECIFYING
                THE SEGMENT NAME AND THE MAXIMUM NUMBER OF BYTES FOR
                THIS SEGMENT.
                 NEXT, THE DL/I HDAM DATABASE IS READ AND THE MAXIMUM
                NUMBER OF BYTES PER HDAM DATABASE SEGMENT IS CALCULATED
                AND A COUNT OF THE TOTAL NUMBER IS ACCUMULATED AND IS
                DISPLAYED AT THE END OF THE PROGRAM.
                 THE PUNCHED CARDS HAVE THE SAME INFORMATION AS THE
                PRINTOUT.  THESE CARDS CAN BE USED TO DOWNLOAD INTO
                A GRAPHICS PROGRAM SUCH AS LOTUS.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT  CARD-FILE  ASSIGN SYS016-UR-2540R-S.
           SELECT  PUNCH-FILE ASSIGN SYS017-UR-2540P-S.
           SELECT  PRINT-FILE ASSIGN SYS018-UR-1403-S.
       DATA DIVISION.
       FILE SECTION.
       FD  CARD-FILE
               RECORDING MODE F
               RECORD CONTAINS 80 CHARACTERS
               LABEL RECORDS ARE OMITTED.
       01  CARD-REC                         PIC X(80).
       FD  PUNCH-FILE
               RECORDING MODE F
               RECORD CONTAINS 80 CHARACTERS
               LABEL RECORDS ARE OMITTED.
       01  PUN-REC                          PIC X(80).
       FD  PRINT-FILE
               RECORDING MODE F
               RECORD CONTAINS 133 CHARACTERS
               LABEL RECORDS ARE OMITTED.
       01  PRT-REC.
           03  PRT-CC                       PIC X.
           03              FILLER           PIC X(132).
           EJECT
       WORKING-STORAGE SECTION.
       77  PGM-ID                           PIC X(10)   VALUE 'DLIRLEN'.
       77  TIME-COMPILED                    PIC X(16)   VALUE      ' '.
       77  LINE-CNT            COMP-3       PIC S99     VALUE      +99.
       77  PAGE-CNT            COMP-3       PIC 999     VALUE        0.
       77  SEGMENT-LENGTH-A    COMP-3       PIC S9(5)   VALUE       +0.
       77  SEGMENT-LENGTH-B    COMP-3       PIC S9(5)   VALUE       +0.
       77  HOLD-KEY                         PIC X(19)   VALUE      ' '.
       77  ZORRO               COMP SYNC    PIC S9(4)   VALUE       +0.
       77  ID-Y                             PIC S9(4)   VALUE       +0.
      *    CONTROL CARD SPECIFIES MAXIMUM LENGTH OF EACH SEGMENT
       01  CONTROL-CARDS.
           03  CC-SEGMENT-NAME              PIC X(9).
           03  CC-SEGMENT-LENGTH            PIC 999.
           03              FILLER           PIC X(68).
       01  TABLE-CARDS.
           03  TBL-SEGMENTS OCCURS 20 TIMES INDEXED BY X.
               05  TBL-SEG-NAME             PIC X(8).
               05  TBL-SEG-LENGTH    COMP-3 PIC S9(3).
      *    MAXIMUM NUMBER OF BYTES PER HDAM DATA BASE RECORD
      *    TABLE WILL HANDLE MAXIMUM OF 20 SEGMENTS PER DATA BASE
       01  TABLE-LENGTH.
           03  TBL-COUNT OCCURS 1001 TIMES INDEXED BY Y
                                            PIC S9(9) COMP-3.
       01  REPORT-TITLES.
           03  REPORT-TITLE-1               PIC X(50)    VALUE
                   ' COPICS DATA BASE MEDIUM RECORD LENGTH REPORT FOR '.
           03  REPORT-TITLE-2               PIC X(50)    VALUE
                   '                                                  '.
           03  REPORT-TITLE-3               PIC X(50)    VALUE
                   '                                                  '.
       01  HEAD-LINE-1.
           03              FILLER           PIC X(11) VALUE
                                                          '1  DLIRLEN-'.
           03  HD-1-RPT-NO                  PIC X     VALUE         ' '.
           03              FILLER           PIC X(10) VALUE         ' '.
           03  HD-1-REPORT-TITLE            PIC X(50) VALUE         ' '.
           03  HD-1-DBD-NAME                PIC X(18) VALUE         ' '.
           03              FILLER           PIC X(5)  VALUE     'DATE '.
           03  HD-1-RUN-DATE                PIC X(8)  VALUE         ' '.
           03              FILLER           PIC X(8)  VALUE
                                                             '   TIME '.
           03  HD-1-RUN-TIME                PIC XXBXXBXX.
           03              FILLER           PIC X(11) VALUE
                                                          '      PAGE '.
           03  HD-1-PAGE-NO                 PIC ZZZ.
       01  HEAD-LINE-2.
           03              FILLER           PIC X(55)  VALUE
              '0   MAXIMUM              NUMBER                        '.
           03              FILLER           PIC X(78)  VALUE
                              '                                       '.
       01  HEAD-LINE-3.
           03              FILLER           PIC X(55)  VALUE
              '    REC LEN              PER DB                        '.
           03              FILLER           PIC X(78)  VALUE
                              '                                       '.
       01  DETL-LINE-1.
           03              FILLER           PIC XXX.
           03  DETL-SUB                     PIC Z(8).
           03              FILLER           PIC X(12).
           03  DETL-COUNT                   PIC Z(8).
           03              FILLER           PIC X(102).
       01  FUNCTIONS       COPY FUNCTINS.
       01  SEGMENT-AREA                     PIC X(1000).

       LINKAGE SECTION.
       01  PCB1            COPY PCB1.
           EJECT
       PROCEDURE DIVISION.
           ENTRY 'DLITCBL' USING PCB1.
           MOVE WHEN-COMPILED TO TIME-COMPILED.
           DISPLAY 'BEGIN PROGRAM ' PGM-ID TIME-COMPILED UPON CONSOLE.
           MOVE HIGH-VALUES TO  TABLE-CARDS.
           MOVE ZEROS       TO  TABLE-LENGTH.
           SET X            TO  ZORRO.
           SET Y            TO  ZORRO.
           OPEN INPUT CARD-FILE OUTPUT PRINT-FILE PUNCH-FILE.
       10-READ-CARDS.
           READ CARD-FILE INTO CONTROL-CARDS AT END
                                   GO TO 20-INITIALIZE-TABLE.
           SET X UP BY +1.
           IF X > 20
               DISPLAY 'SEGMENT INPUT CARDS EXCEED 20' UPON CONSOLE
               DISPLAY 'SEGMENT INPUT CARDS EXCEED 20'
               DISPLAY 'INCREASE TABLE OCCURS        ' UPON CONSOLE
               DISPLAY 'INCREASE TABLE OCCURS        '
               GOBACK.
           MOVE CC-SEGMENT-NAME    TO  TBL-SEG-NAME   (X).
           MOVE CC-SEGMENT-LENGTH  TO  TBL-SEG-LENGTH (X).
           GO TO 10-READ-CARDS.
       20-INITIALIZE-TABLE.
           SET Y UP BY +1.
           IF Y > 1001
                                   GO TO 100-READ-SEGMENTS.
           MOVE ZEROS  TO  TBL-COUNT (Y).
           GO TO 20-INITIALIZE-TABLE.
       100-READ-SEGMENTS.
           CALL 'CBLTDLI' USING FUNC-GN  PCB1 SEGMENT-AREA.
           IF STATUS1 NOT EQUAL '  '
               IF STATUS1 = 'GB'
                                   GO TO 500-CALCULATE-LENGTH
               ELSE
                   IF STATUS1 = 'GA' OR 'GK'
                       NEXT SENTENCE
               ELSE
                   DISPLAY PCB1 ' - ' SEGMENT-AREA
                                   GO TO 500-CALCULATE-LENGTH.
      *    SEG-LEVEL1 SPECIFIES A NEW DATA BASE RECORD OR ROOT SEGMENT
           IF SEG-LEVEL1 = '01'
               PERFORM 500-CALCULATE-LENGTH THRU 550-CALCULATE-EXIT
               MOVE SEGMENT-AREA  TO  HOLD-KEY.
           PERFORM 200-SEARCH-SEGMENT  THRU  250-SEARCH-EXIT.
           GO TO 100-READ-SEGMENTS.
       200-SEARCH-SEGMENT.
      *    SEARCH TABLE IN ORDER TO FIND THE SEGMENT LENGTH
           SET X TO +1.
           SEARCH TBL-SEGMENTS AT END
                                   GO TO 250-SEARCH-EXIT
           WHEN TBL-SEGMENTS (X) = HIGH-VALUES
                                   GO TO 250-SEARCH-EXIT
           WHEN TBL-SEG-NAME (X) = SEG-NAME1
               ADD TBL-SEG-LENGTH (X)  TO  SEGMENT-LENGTH-A.
       250-SEARCH-EXIT.
           EXIT.
       500-CALCULATE-LENGTH.
      *    THE FOLLOWING COMPUTE STATEMENT IS USED TO SHOW THE TOTAL
      *    RECORD LENGTH ON ANY DATABASE UP TO 10000 BYTES. THE TOTAL
      *    NUMBER OF BYTES IS DIVIDED BY 10 IN ORDER TO KEEP THE OCCURS
      *    AT 1000 INSTEAD OF 10000.  IF THE TOTAL NUMBER OF BYTES IS
      *    GREATER THAN 10000, THEN 1 IS ADDED TO THE 1001 OCCURS.
           ON 1
                                   GO TO 550-CALCULATE-EXIT.
           COMPUTE SEGMENT-LENGTH-B = SEGMENT-LENGTH-A / 10.
           IF SEGMENT-LENGTH-B > 1000
               ADD 1 TO TBL-COUNT (1001)
               DISPLAY 'TOTAL RECORD LENGTH > 10000 KEY=' HOLD-KEY
                                  ' - SEGMENT LENGTH=' SEGMENT-LENGTH-A
           ELSE
               ADD 1 TO TBL-COUNT (SEGMENT-LENGTH-B).
           MOVE ZEROS  TO  SEGMENT-LENGTH-A.
       550-CALCULATE-EXIT.
           EXIT.
       999-END-PROGRAM.
           PERFORM 1000-PRINT-HEADINGS THRU 1100-RETURN-EXIT.
           CLOSE CARD-FILE PRINT-FILE PUNCH-FILE.
           DISPLAY 'END - DLIRLEN' UPON CONSOLE.
           GOBACK.
           STOP RUN.
       1000-PRINT-HEADINGS.
           MOVE REPORT-TITLE-1  TO  HD-1-REPORT-TITLE.
           MOVE DBD-NAME1       TO  HD-1-DBD-NAME.
           MOVE '1'             TO  HD-1-RPT-NO.
           PERFORM 8010-PRINT-HEAD-1.
           PERFORM 8020-PRINT-HEAD-2.
           PERFORM 8030-PRINT-HEAD-3.
           MOVE SPACES TO DETL-LINE-1.
           PERFORM 8100-PRINT-DETAIL-LINE.
       1050-RETURN-ROUTINE.
           PERFORM 1200-PRINT-DETAIL THRU 1250-PRINT-DETAIL-EXIT
               VARYING Y FROM 1 BY 1 UNTIL Y > 1001.
       1100-RETURN-EXIT.
           EXIT.
       1200-PRINT-DETAIL.
           IF LINE-CNT > 52
               PERFORM 1000-PRINT-HEADINGS.
           MOVE ' '            TO  DETL-LINE-1.
           SET ID-Y            TO  Y.
           MOVE ID-Y           TO  DETL-SUB.
           MOVE TBL-COUNT (Y)  TO  DETL-COUNT.
           ADD 1               TO  LINE-CNT.
           PERFORM 8100-PUNCH-DETAIL-LINE.
           PERFORM 8100-PRINT-DETAIL-LINE.
       1250-PRINT-DETAIL-EXIT.
           EXIT.
       MISC-RTNS SECTION.
       8010-PRINT-HEAD-1 SECTION.
           MOVE CURRENT-DATE  TO  HD-1-RUN-DATE.
           MOVE TIME-OF-DAY   TO  HD-1-RUN-TIME.
           EXAMINE HD-1-RUN-TIME REPLACING ALL ' ' BY '.'.
           ADD 1              TO  PAGE-CNT.
           MOVE PAGE-CNT      TO  HD-1-PAGE-NO.
           WRITE PRT-REC FROM HEAD-LINE-1  AFTER POSITIONING PRT-CC.
           MOVE ZEROS         TO  LINE-CNT.
       8020-PRINT-HEAD-2 SECTION.
           WRITE PRT-REC FROM HEAD-LINE-2 AFTER POSITIONING PRT-CC.
       8030-PRINT-HEAD-3 SECTION.
           WRITE PRT-REC FROM HEAD-LINE-3 AFTER POSITIONING PRT-CC.
       8100-PRINT-DETAIL-LINE SECTION.
           WRITE PRT-REC FROM DETL-LINE-1 AFTER POSITIONING PRT-CC.
           MOVE SPACES TO DETL-LINE-1.
       8100-PUNCH-DETAIL-LINE SECTION.
           WRITE PUN-REC FROM DETL-LINE-1.


DLIRAPS JCL

* $$ JOB JNM=DLIRAPS,CLASS=0,PRI=3,DISP=D
* $$ PUN PUN=02D,CLASS=T,DEST=(,1-8777),JSEP=0
* $$ LST LST=02E,CLASS=T,DEST=(,1-8777)
* $$ LST LST=02F,CLASS=T,DEST=(,1-8777)
// JOB DLIRAPS - CALCULATE DL/I HDAM DATABASE RAPS PER CI
// ASSGN SYSLST,02E
// ASSGN SYS018,02F
// LIBDEF *,SEARCH=(SHRLIB.DLI,SH1LIB.MFG)
// DLBL SYS4UC,'SYSWK4.USER.CAT',,VSAM
// DLBL DLIRAPS,'DLI.PLNGDB.HDAM.DATA',,VSAM,CAT=SYS4UC
// EXEC DLIRAPS,SIZE=200K
PLNGDB   020
/*
/&
* $$ EOJ


DLIRLEN JCL

* $$ JOB JNM=DLIRLEN,CLASS=0,PRI=3,DISP=D
* $$ PUN PUN=02D,CLASS=T,DEST=(,1-8777),JSEP=0
* $$ LST LST=02E,CLASS=T,DEST=(,1-8777)
* $$ LST LST=02F,CLASS=T,DEST=(,1-8777)
// JOB DLIRLEN - CALCULATE AVERAGE DL/I HDAM DATABASE RECORD LENGTH
// UPSI 00000010
// ASSGN SYSLST,02E
// ASSGN SYS018,02F
// LIBDEF *,SEARCH=(SHRLIB.DLI,SH1LIB.MFG)
// DLBL SYS4UC,'SYSWK4.USER.CAT',,VSAM
// DLBL DLIRAPS,'DLI.PLNGDB.HDAM.DATA',,VSAM,CAT=SYS4UC
// EXEC DLZRRC00,SIZE=400K
DLI,DLIRLEN,PLANPSB
PLNGID   025
GROSRQ   055
PLNORD   055
GROPTR   043
/*
/&
* $$ EOJ

Robert Ferro
Systems Programmer
Progress Lighting (USA)


