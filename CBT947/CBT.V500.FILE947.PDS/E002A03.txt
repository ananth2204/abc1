COBOL program interface to VSE/POWER

This routine offers the following facilities for COBOL
programs running under VSE:

o      Issue a VSE/POWER command
o      Submit a VSE/POWER job.

The routine accepts a complete VSE/POWER job stream, and
is therefore more flexible than using the DISP=I parameter on
the '* $$ PUN' statement.

The routine is called as follows:

CALL 'VSEPWR' USING record-name.

Where record-name must have the following structure:

01  RECORD-NAME.
    03  CODE                    PIC X.
    03  NUMBER                  PIC S9(4) COMP SYNC.
    03  CARD-1                  PIC X(80).
    .
    .
    .
    03  CARD-N                  PIC X(80).

Where:

o      CODE is 'C' if CARD-1 contains a VSE/POWER
      command or 'J' if CARD-1 to CARD-N contains a
      VSE/POWER job.

o      NUMBER is the number of cards in the job if CODE is 'J',
      NUMBER is not used if CODE is 'C'.

o      CARD-1 is the VSE/POWER command if CODE is 'C', or
      the first card of the VSE/POWER job if CODE is 'J'.  The
      second and subsequent cards of the VSE/POWER job must
      follow CARD-1.  Each card must be 80 characters.  The
      maximum number of cards in the VSE/POWER jobstream
      is 75.

Assemble the source code and catalogue the relocatable module
into a relocatable library.  The relocatable library should be in
the standard relocatable library searchlist, so that the module
may be included in the calling program at link edit time.

VSEPWR

         TITLE 'VSEPWR - POWER INTERFACE FOR BATCH PROGRAMS'
VSEPWR   CSECT
R0       EQU   0

Editor's note: registers 1 to 14 go here.

R15      EQU   15
VSEPWR   CSECT
         USING VSEPWR,R15              ESTABLISH ADDRESSABILITY
         SAVE  (14,12)
         LR    R3,R15                  R3 IS PROGRAM BASE
         DROP  R15
         USING VSEPWR,R3
         L     R4,0(0,R1)              R4 IS MESSAGE CONTROL BLOCK
         L     R4,0(R4)                FOR USE BY PL/I PROGRAMMERS
         USING COBREC,R4                    BASE
         CLI   COBCODE,C'C'            IS IT A COMMAND ?
         BE    PWRCMD1                 YES
         CLI   COBCODE,C'J'            IS IT A JOB ?
         BE    PWRJOB1                 YES
         B     PWREXIT
PWRCMD1  LA    10,PWRCMD1+4
         LA    R12,CTLSPL              POINT TO CONTROL SPL CTRL BLK
         USING SPLMAP,R12
         STCM  R12,7,SPMXECB+5         SAVE ADDRESS IN XECB
         XECBTAB TYPE=DEFINE,XECB=SPMXECB,ACCESS=XWAIT
         LTR   R15,R15                 ANY ERRORS
         BNZ   PWRWAIT                 YES - ASSUME BUSY
         MVC   FEEDBACK(80),COBCMD     MOVE COMMAND TO BUFFER
         CTLSPOOL SPL=(R12)            ISSUE COMMAND
         XECBTAB TYPE=DELETE,XECB=SPMXECB
         CLI   SPER,X'42'              ANY ERRORS
         BNE   PWRERR                  YES GO HANDLE IT
         B     PWREXIT
PWRJOB1  LH    R10,COBCRDS             GET NUMBER OF CARDS
         CH    R10,=H'75'              MORE THAN 75 ?
         BH    PWREXIT                 IGNORE
         CH    R10,=H'1'               LESS THAN 1 ?
         BL    PWREXIT                 IGNORE
         LA    R12,COBCMD              R12 = A(FIRST CARD)
         LA    R1,PWRJCL               R1 = A(FIRST POWER CARD)
PWRJOB2  LR    R15,R1                  R15 = A(CURRENT CARD)
         LA    R15,88(R15)             POINT TO NEXT CARD
         ST    R15,0(R1)               STORE IN PREVIOUS CARD
         MVC   8(80,R1),0(R12)         MOVE IN CARD
         LA    R12,80(R12)             POINT TO NEXT INPUT CARD
         LA    R1,88(R1)               POINT TO NEXT OUTPUT CARD
         BCT   R10,PWRJOB2             ANY MORE CARDS ?
         LA    R15,88
         SR    R1,R15                  POINT TO LAST CARD
         SLR   R15,R15
         ST    R15,0(R1)               SET LAST CARD
PWRJOB9  LA    10,PWRJOB9+4
         LA    R9,PWRJCL               R9 = A(JCL)
         LA    R12,PUTSPL              POINT TO PUTSPOOL SPL CONTROL
         USING SPLMAP,R12
         STCM  R12,7,ICRXECB+5         SAVE ADDRESS IN XECB
         XECBTAB TYPE=DEFINE,XECB=ICRXECB,ACCESS=XWAIT
         LTR   R15,R15                 ANY ERRORS
         BNZ   PWRWAIT                 YES = GO ASSUME BUSY
         PUTSPOOL SPL=(R12),CBUF=(R9)  STUFF JOB INTO READER
         XECBTAB TYPE=DELETE,XECB=ICRXECB
         CLI   SPER,0                  ANY ERRORS
         BNE   PWRERR                  YES - GO HANDLE
         B     PWREXIT                 NO - GO RETURN
PWRERR   DS    0H                      ADD ANY ERROR HANDLING HERE
         B     PWREXIT
PWRWAIT  DS    0H
         SETIME 5,TECB                 WAIT 5 SECONDS AND TRY AGAIN
         WAIT  TECB
         BR    R10
PWREXIT  EQU   *
         RETURN (14,12)
         SPACE 2
         LTORG
ICRXECB  DC    A(0,0)
SPMXECB  DC    A(0,0)
TECB     TECB
CTLSPL   SPL   TYPE=DEFINE,PBUF=FEEDBACK,PBUFL=320,REQ=COMMAND
PUTSPL   SPL   TYPE=DEFINE,PBUF=FEEDBACK,PBUFL=88
FEEDBACK DC    4CL88' '
         SPACE 2
PWRJCL   DC    75XL88'00'
         SPACE 2
COBREC   DSECT
COBCODE  DS    C
COBCRDS  DS    H
COBCMD   DC    CL80' '
         SPACE 2
SPLMAP   SPL   TYPE=MAP
         END

Michael Nunan
Systems Programmer
Sage Computing (South Africa)                   c Sage Computing 1991
