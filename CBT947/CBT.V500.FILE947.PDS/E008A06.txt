POWER queue manipulation

The purpose of this program is to create an output file from a
list in the POWER queue file, using cross-partition
communication with POWER/VSE. The input cards are:

      LSTIN=LISTNAME,NNNNN,CLASS=Q
      LINENO=NNNNNNNN
      STRING=/STRING/
      ESTRNG=/STRING/
      COUNT=NNNNNNNN
FILEOUT=DDNAME,BLKSIZE=NNNNN,LRECL=NNNNN,SYSNO=SYSNNN

LISTNAME is the input list name (required). NNNNN is the
jobnumber; the default is the first list with jobname. CLASS is
the list queue class; the default is 'Q'. LINENO is the line
number at which to start; the default is 1. STRING means start
writing when a line contains a specified string; the default is
none, and it must be enclosed in the same non-blank
characters. ESTRNG means stop writing when a line contains a
specified string; the default is none, and it must be enclosed in
the same non-blank characters. COUNT is the number of lines
to write. DDNAME is the output DDNAME on the DLBL
STMT (required). BLKSIZE=NNNNN specifies the blocksize
(default=80). LRECL=NNNNN specifies the record length
(default=80). SYSNO=SYSNNN is the SYS number assigned
in the extent and ASSGN statements; 'SYS' and leading zeroes
may be omitted; the default is SYS006. Specify 'fileout=print'
to print the output file.



NOTES

All keywords must begin in column 1, and the first keyword
must be LSTIN. If LINENO and STRING are specified, the
string searching starts from the line specified by LINENO. If
COUNT and ESTRNG are specified, writing stops when the
count is reached or ESTRNG is found, whichever comes first.
If this program is cancelled while processing, rerun the job
with LINENO=1 and COUNT=0 to reset everything. SYS004
must be assigned to a reader and SYS005 (messages) should be
assigned to a printer or ignored.


EXAMPLE

This job scans a listing containing CICS transaction dumps and
prints the dump for transaction P18A.

// JOB   SCANDUMP
// ASSGN SYS005,E
// ASSGN SYS004,00C
// EXEC SCANLIST
LSTIN=CICSDUMP,CLASS=Q
INFOMSG=N
LINENO=1
STRING=*TASK=P18A*
ESTRNG=/END OF CICS TRANSACTION DUMP/
/*
/&


POWQREAD

POWQREAD CSECT
         PRINT NOGEN
* PROGRAM NAME: POWQREAD                                              *
         LR    12,15                   BASE REGS ARE 12 & 10
         LA    10,4095(12)
         LA    10,1(10)
         USING POWQREAD,12,10
         OPEN  PRT                     OPEN PRINTER
         OPEN  CARD                    OPEN CARD INPUT
         LA    11,SPLEX                POWER SPOOL PARAMETER LIST
         USING SPL,11                  ADDRESSABILITY
         ST    11,SPMXECB+4            STORE ADDR IN CROSS PART ECB
*  DEFINE CROSS PARTITION ECB IN SUPERVISOR TABLE
         LA    9,DEFXECBM              ADDRESS OF ERROR MESSAGE
         SR    2,2                     R2 = RETRY COUNTER
DEFXECB  XECBTAB TYPE=DEFINE,XECB=SPMXECB,ACCESS=XWAIT  CONNECT XECB
         LTR   15,15                   OK ?
         BZ    GETCARD                 GET GET CARD INPUT
         LA    2,1(2)                  NO - BUMP RETRY COUNTER
         SETIME 1,TIMERECB             WAIT 1 SEC
         WAIT  TIMERECB
         C     2,RETRYLIM              > RETRY LIMIT (5) ?
         BH    ERROR                   YES WRITE ERROR & EXIT
         B     DEFXECB                 RETRY CONNECTION
*  PROCESS LSTIN= CARDS
GETCARD  GET   CARD                    GET INPUT CARD
         CLI   LINEIN,C'*'             CHECK IF CARD IS A COMMENT
         BE    GETCARD                 YES, IGNORE
         CLC   LINEIN(6),=CL6'LSTIN='  IS THE LSTIN CARD
         BE    PROCLSTC                YES PROCESS
         MVC   LINEO(L'NOTLSTM),NOTLSTM  NO WRITE ERROR MESSAGE
         BAL   7,SAYERROR             DISPLAY ON CONSOLE
         BAL   7,PUTLINE              WRITE TO LIST
         B     EOJ                    EXIT
PROCLSTC LA    2,LINEIN+6             POINT TO JOBNAME
         LA    3,JOBNAME              JOBNAME SAVE AREA
         LA    4,8                    MAX LEN
GETJNAME MVC   0(1,3),0(2)            MOVE IN ONE CHAR
         LA    2,1(,2)                BUMP POINTERS
         LA    3,1(,3)
         CLI   0(2),C' '              END OF CARD ?
         BE    GOTJNAME
         CLI   0(2),C','              END OF DDNAME ?
         BE    GOTJNAME
         BCT   4,GETJNAME             GET NEXT CHAR
GOTJNAME LA    2,1(,2)                POINT TO JOB NUMBER IF THERE
         LA    4,5                    MAX LEN
         LR    5,2                    SAVE START ADDR
         TM    0(2),X'F0'             IS IT NUMERIC ?
         BO    GETJNUM                YES
         LA    2,LINEIN+6             NO POINT TO START OF JOBNAME
         SR    5,2                    R5=LENGTH OF JOBNAME
         BCTR  5,0                    LESS ONE FOR EXECUTE
         B     NOJOBNO
GETJNUM  TM    0(2),X'F0'             CHECK NUMERIC
         BNO   GOTJNUM                NO GO TO END
         LA    2,1(2)                 BUMP
         BCT   4,GETJNUM
GOTJNUM  OI    SWITCH2,NUMGIVEN       INDICATE JOB NUM PROVIDED
         SR    2,5                    LENGTH OF JOBNUM
         LA    3,JOBNUM+5             END OF JOBNUM SAVE AREA
         SR    3,2                    GO BACK LENGTH
         BCTR  2,0                    LESS ONE FOR EXECUTE
         EX    2,MVCJNUM              MOVE IN JOB NUM
         LA    3,LINEIN+6             START OF DDNAME
         LA    2,1(,2)                PLUS ONE WE SUBTRACTED
         AR    5,2                    R5=END OF JOBNAME + JOBNUM
         SR    5,3                    R5=LENGTH    "      "
NOJOBNO  BCTR  5,0                    LESS ONE FOR EX
         EX    5,MVCJNJN              MOVE IN JOBNAME & NUMBER
         EX    5,MVCALT1              INTO POWER ALTER COMMAND 1
         EX    5,MVCALT2               & 2
         LA    2,ALTCM1+6             POINT TO END OF 'A LST,'
         AR    2,5                    POINT PAST JOBNAME + NUM
         TM    SWITCH2,NUMGIVEN       WAS JOB NUMBER SPECIFIED ?
         BO    *+12                   YES - SKIP NEXT TWO LINES
         ST    2,SAVENUMB             SAVE NUMBER FIELD IN ALT CMD ADDR
         LA    2,6(2)                 LEAVE A GAP FOR NUMBER
         MVC   1(7,2),=CL7',DISP=K'   MOVE IN DISP
         LA    2,7(,2)                POINT TO 'K'
         ST    2,ALTDISPB             SAVE ADDRESS FOR LATER
         LA    2,ALTCM2+6             SAME
         AR    2,5                         AGAIN
         TM    SWITCH2,NUMGIVEN       WAS JOB NUMBER SPECIFIED ?
         BO    *+12                   YES - SKIP NEXT TWO LINES
         ST    2,SAVENUMA             SAVE NUMBER FIELD IN ALT CMD ADDR
         LA    2,6(2)                 LEAVE A GAP FOR NUMBER
         MVC   1(7,2),=CL7',DISP=K'
         LA    2,7(,2)                POINT TO 'K'
         ST    2,ALTDISPA             SAVE ADDRESS FOR LATER
         LA    2,LINEIN+6             POINT TO START OD DDNAME
         LA    3,66                   MAX LEN
GETCLASS CLC   0(6,2),=CL6'CLASS='    SEARCH FOR A CLASS= STMT
         BE    GOTCLASS
         LA    2,1(2)
         BCT   3,GETCLASS
         B     *+10                   NOT FOUND, BRANCH PAST NEXT STMT
GOTCLASS MVC   JOBCLASS(1),6(2)       MOVE IN GIVEN JOBCLASS
         MVC   PBUF(6),=CL6'D LST,'   COMMAND INTO BUFFER
         BAL   6,POWCMD               EXEC COMMAND(ERRORS CHECKED THERE
         CLC   JOBCLASS(1),PBUF+54    CHECK POWCLASS=GIVEN CLASS
         BNE   WRGCLASS
         TM    SWITCH2,NUMGIVEN       WAS JOB NUMBER GIVEN ?
         BO    CHKUSER
         L     6,SAVENUMA             NO, HAVE TO GET IT OURSELVES
         MVI   1(6),C','              R6=ADDR OF NUM FIELD IN ALTER CMD
         MVC   2(5,6),PBUF+44         MOVE IN JOB NUM
         L     6,SAVENUMB             NO, HAVE TO GET IT OURSELVES
         MVI   1(6),C','              R6=ADDR OF NUM FIELD IN ALTER CMD
         MVC   2(5,6),PBUF+44         MOVE IN JOB NUM
CHKUSER  MVC   JOBNUM(5),PBUF+44      MOVE IN JOB NUM
         CLC   PBUF+78(4),=CL4' '     CHECK NO USER-ID ASSIGNED
         BE    CHKSTATS
         L     6,ALTDISPB                 ADDR OF K IN DISP=K FIELD
         MVC   1(11,6),=CL11',USER=LOCAL' ADD USER=LOCAL
         L     6,ALTDISPA                 DO SAME FOR SECOND ALTER
         MVC   1(6,6),=CL11',USER='       TO CHANGE BACK AT EOJ
         MVC   7(4,6),PBUF+78             INSERT CURRENT USER-ID
         OI    SWITCH,USERIDFN            SHOW USER-ID CHANGED TEMP
CHKSTATS BAL   6,STATUS                   CHECK STATUS OF LIST
         CLI   SPSQ,C'N'                  NOT THERE ?
         BNE   CHKALIST
WRGCLASS MVC   REQCLASS(1),JOBCLASS       MOVE IN GIVEN CLASS TO ERRMSG
         MVC   LINEO(L'NOTHERE+1),NOTHERE MOVE IN ERROR MSG
         BAL   7,SAYERROR                 DISPLAY ON CONSOLE
         BAL   7,PUTLINE                  WRITE TO LIST
         B     EOJ                        EXIT
CHKALIST CLI   SPSQ,C'L'                  IS ENTRY A LISTING ?
         BE    CHKDISP
         MVC   LINEO(L'NOTLIST),NOTLIST   TELL USER
         BAL   7,SAYERROR                         NOT A
         BAL   7,PUTLINE                                LISTING
         B     EOJ
CHKDISP  L     2,ALTDISPA             POINT TO DISP FIELD IN ALTER CMD
         MVC   0(1,2),SPQD            MOVE IN CURRENT DISP FOR LATER
         CLI   SPQD,C'L'              CURRENT DISP=L ?
         BNE   *+8
         OI    SWITCH2,DISPWASL       YES, NO NEED TO RESET AT EOJ
         CLI   SPQD,C'K'              ALREADY IN DISP=K ?
         BNE   ALTDISP
         TM    SWITCH,USERIDFN        DO WE WANT TO CHANGE USER-ID ?
         BNO   OPTIONS
ALTDISP  MVI   PBUF,C' '              CLEAR
         MVC   PBUF+1(131),PBUF             BUFFER
         MVC   PBUF(50),ALTCM1        MOVE IN ALTER COMMAND
         BAL   6,POWCMD               CHANGE TO DISP=K
         CLC   PBUF+35(2),=CL2'OK'    CHECK FOR POWER'S OK MESSAGE
         BE    OPTIONS
         MVC   LINEO(L'POWERRME),POWERRME  POWER DIDN'T APPROVE
         BAL   7,SAYERROR                  INFORM AND GO
         BAL   7,PUTLINE
         B     EOJ
*  PROCESS OTHER CARDS
OPTIONS  GET   CARD                     GET INPUT CARDS
         CLI   LINEIN,C'*'              CHECK IF CARD IS A COMMENT
         BE    OPTIONS                  YES, IGNORE
         CLC   LINEIN(7),=CL7'LINENO='
         BE    SETLINEN                 PROCESS LINENO CARD
         CLC   LINEIN(7),=CL7'STRING='
         BE    SETSTRNG                 PROCESS START STRING SEARCH
         CLC   LINEIN(7),=CL7'ESTRNG='
         BE    SETSTRNG                 PROCESS END STRING SEARCH
         CLC   LINEIN(6),=CL6'COUNT='
         BE    SETCOUNT                 PROCESS COUNT CARD
         CLC   LINEIN(8),=CL8'FILEOUT='
         BE    SETOUT                   PROCESS FILEOUT CARD
         MVC   LINEIN+30(29),=CL29'** CARD INVALID - RUN END **'
         MVC   LINEO(59),LINEIN         CARD NOT RECOGNIZED
         BAL   7,SAYERROR
         BAL   7,PUTLINE
         B     EOJ
*  GET A LISTING RECORD
GET      LA    2,JOBNAME                    JOB NAME IN R2
         PACK  DWORD(8),JOBNUM(5)
         CVB   3,DWORD                      JOB NUM IN R3
         SR    4,4
         ICM   4,B'0001',JOBCLASS           JOB CLASS IN R4
         MVI   PBUF,C' '                    CLEAR BUFFER
         MVC   PBUF+1(131),PBUF
         LA    9,GETM                       ERROR MSG JUST IN CASE
         TM    SWITCH,RESTART               WAS A RESTART REQUESTED ?
         BO    SETSTLIN                     YES - POSITION
         GETSPOOL SPL=(11),JOBN=(2),JNUM=(3),CLASS=(4),CC=YES
         LTR   15,15
         BNZ   ERROR
         LA    9,TESTSTAM                   ERROR MSG JUST IN CASE
TESTSTA  LA    4,SPMXECB                    ADDRESS OD RETURNED ECB
         TM    4(4),SPIA+SPPP+SPUE+SPPI     CHECK FOR ERROR
         BNZ   ERROR
         AP    LINESRD(5),=PL5'1'           BUMP LINES READ COUNTER
         TM    SWITCH,SEARCH                SEARCHING FOR A STRING ?
         BNO   *+8
         BAL   7,SCANBUF                    YES, SCAN LINE FOR STRING
         L     7,RECLEN                     LOAD OUTPUT RECLEN
         EX    7,PUTREC                     MOVE LINE TO OUTPUT AREA
         BAL   7,PUTOUT                     WRITE RECORD
         TM    SWITCH,ESEARCH               LOOKING FOR END STRING ?
         BNO   *+8
         BAL   7,SCANBUFE                   YES, SCAN LINE
         AP    LINECNT(5),=PL5'1'           BUMP LINES WRITTEN COUNTER
         TM    SWITCH,LIMIT                 WAS A COUNT LIMIT SET ?
         BNO   *+8
         BAL   7,CHKCOUNT                   CHECK COUNT NOT EXEEDED
TESTEOF  TM    SPER,SPLR                    END OF LIST ?
         BNO   GET                          NO - GET NEXT REC
*  EOJ ROUTINE
ENDLIST  TM   SWITCH,LIMIT                  EOJ DUE TO COUNT ?
         BNO  END
RESETDIS BAL  6,STATUS                      YES, RESET DISP=*
END      ED    LINESRDE(12),LINESRD         NUMBER OF LINES READ
         MVC   LINEO(LLINESRD),LINESRDM
         BAL   7,PUTLINE
         ED    LINESWTE(12),LINECNT         NUMBER OF LINES WRITTEN
         MVC   LINEO(LLINESWT),LINESWT
         BAL   7,PUTLINE
         TM    SWITCH,USERIDFN              WAS USER-ID CHANGED ?
         BO    RESTDISP                     YES - RESET IT
         TM    SWITCH2,DISPWASL             WAS INPUT DISP=L ?
         BO    EOJ                          YES, NO NEED TO RESET
RESTDISP MVI   PBUF,C' '                    CLEAR
         MVC   PBUF+1(131),PBUF                   BUFFER
         MVC   PBUF(50),ALTCM2              RESET DISP TO WHAT IT WAS
         BAL   6,POWCMD                     EXEC POWER ALTER COMMAND
EOJ      XECBTAB TYPE=DELETE,XECB=SPMXECB   DELETE CONNECTION
         TM   SWITCH,SEARCH                 DID WE FIND STRING ?
         BNO  TESTLINE
         MVC  LINEO(L'NOTFOUND),NOTFOUND    MENTION IT
         BAL   7,SAYERROR                   ON CONSOLE
         BAL  7,PUTLINE                     ON PAPER
TESTLINE TM   SWITCH,RESTART                EOF WHILE DOING A RESTART?
         BNO  READXTRA
         MVC  LINEO(L'TOOHIGH),TOOHIGH      YES RESTART > LINECOUNT
         BAL   7,SAYERROR
         BAL  7,PUTLINE
READXTRA TM   SWITCH,EOFENTRD
         BO   CLOSE
GOTOEOF  GET  CARD                          READ ANY EXCESS CARDS
         B    GOTOEOF                       CLOSE ENTERED BY EOF
CLOSE    CLOSE PRT
         CLOSE CARD
         TM    SWITCH,OUT2LIST
         BO    CHECKERR
         CLOSE OUT
CHECKERR TM    SWITCH,ERRFOUND              WAS AN ERROR ENCOUNTERED ?
         BNO   NORMEOJ                      NO, EXIT RC=0
         L     15,BADRC                     YES, LOAD RC
         EOJ   RC=(15)                      EXIT
NORMEOJ  EOJ   RC=0
*  LINE COUNTER CHECKER - ENTERED BY KEYWORD COUNT=
CHKCOUNT CP    LINECNT(5),PLIM(5)      LINE COUNT EXCEEDED ?
         BLR   7                       NO
         B     ENDLIST                 YES, CLOSE LIST
*  DETERMINE STATUS OF LIST
STATUS   LA    2,JOBNAME               LIST NAME
         PACK  DWORD(8),JOBNUM(5)      LIST NO.
         CVB   3,DWORD                 CONVERT TO BINARY
         LA    9,DISPSTAM              ADDRESS OF ERROR MESSAGE
         CTLSPOOL SPL=(11),REQ=STATUS,PBUF=PBUF,JOBN=(2),JNUM=(3)
         LTR   15,15                   OK ?
         BNZ   ERROR                   NO, LIST NOT AVAILABLE
         BR    6                       YES, RETURN
*  RESTART LIST AT LINE NUMBER - ENTERED BY KEYWORD LINENO=
SETSTLIN L     5,SLINE                 OTHER REGS SET AT LABEL GET
         GETSPOOL SPL=(11),JOBN=(2),JNUM=(3),CLASS=(4),LINENO=(5)
         LTR   15,15
         BNZ   ERROR
         NI    SWITCH,NRESTART         TURN OFF RESTART
         BCTR  5,0                     SUBTRACT 1 FROM R5
         CVD   5,DWORD                 CONVERT TO PRINTABLE
         MVC   LINESRD(5),DWORD+3      UPDATE LINES READ COUNTER
         LA    9,TESTSTAM              PREPARE AN ERROR MESSAGE
         B     TESTSTA
*  SCAN BUFFER FOR START STRING - ENTERED BY KEYWORD STRING=
SCANBUF  LA    2,SEARCHST              ADDRESS OF STRING
         LA    3,133                   MAX LENGTH
         L     4,STRNGLEN              LENGTH OF STRING
         LA    5,PBUF                  ADDRESS OF INPUT BUFFER
         SR    3,4                     MAX LEN-STRING LEN
SCAN     CLC   0(1,5),0(2)             DO FIRST CHARS MATCH ?
         BNE   SCANBUMP
         EX    4,COMPARE               YES, CHECK WHOLE STRING
         BE    GOTSTRNG
SCANBUMP LA    5,1(5)                  BUMP POINTER
         BCT   3,SCAN                  DO TILL BEYOND MATCH
         B     TESTEOF                 NO MATCH - CHECK EOF
GOTSTRNG NI    SWITCH,NSEARCH          GOT MATCH, TURN OFF INDICATOR
         ED    HITLINE(12),LINESRD     TELL USER
         MVC   LINEO(HITMSG),HITMES              IN
         MVC   HITLINE(12),HITLINES                 WHICH
         PUT   PRT                                        LINE
         MVI   LINEO,C' '              TIDY
         MVC   LINEO+1(131),LINEO           UP
         BR    7
*  SCAN BUFFER FOR END STRING - ENTERED BY KEYWORD ESTRNG=
SCANBUFE LA    2,SEARCHSE               STRING HERE
         LA    3,133                    MAX SEARCH LENGTH
         L     4,ESTRNGLN               LENGTH OF STRING
         LA    5,PBUF                   CURRENT LINE
         SR    3,4                      SEARCH LEN=133-STRING LEN
SCANE    CLC   0(1,5),0(2)              FIRST CHARACTER EQUAL ?
         BNE   SCANBUME                 NO, BUMP
         EX    4,COMPARE                YES, COMPARE WHOLE STRING
         BE    GOTSTRNE                 EQUAL ?
SCANBUME LA    5,1(5)                   NO NEXT CHARACTER
         BCT   3,SCANE                  CONTINUE SCAN
         BR    7                        END OF SCAN, RETURN
GOTSTRNE BAL   7,PUTLINE                GOT STRING, WRITE LINE
         NI    SWITCH,NSEARCHE          GOT STRING, TURN OF SEARCH
         ED    HITLINE(12),LINESRD      CURRENT LINE NUMBER IN LIST
         MVC   LINEO(HITMSG),HITMES     SAY WHERE WE FOUND THE STRING
         MVC   HITLINE(12),HITLINES
         BAL   7,PUTLINE                PRINT INFO MESSAGE
         B     RESETDIS                 CLOSE UP
*  PREPARE RESTART LINE NUMBER - ENTERED BY KEYWORD LINENO=
SETLINEN LA    2,LINEIN+7              POINT TO FIRST DIGIT
         XC    DWORD(8),DWORD          CLEAR WORK DWORD
         TM    0(2),X'F0'              CHECK NUMERIC
         BO    SETL2
         MVC   LINEO(L'NOTNUM),NOTNUM
         BAL   7,SAYERROR
         BAL   7,PUTLINE
         B     EOJ
SETL2    LR    3,2                     START OF LINENO
         LA    4,8                     MAX LENGTH
SETL3    LA    3,1(3)                  FIND END
         TM    0(3),X'F0'
         BNO   SETL4
         BCT   4,SETL3
SETL4    SR    3,2                     END - START =LENGTH
         LA    4,DWORD+8               END OF WORK DWORD
         SR    4,3                     BACK UP LENGTH
         BCTR  3,0                     LESS ONE FOR EXECUTE
         EX    3,MVCNUM                MOVE NUMBER TO DOUBLE WORD
         PACK  DWORD(8),DWORD(8)       CONVERT TO BINARY
         CVB   3,DWORD
         ST    3,SLINE                 STORE IT SAFE
         ED    RSLINE(12),DWORD+3      WRITE AN INFO MESSAGE
         MVC   LINEO(RESMSG),RESMES
         BAL   7,PUTLINE
         OI    SWITCH,RESTART
         B     OPTIONS
*  SET SCAN STRINGS - ENTERED BY KEYWORDS STRING= & ESTRNG=
SETSTRNG LA    2,LINEIN+7              POINT TO FIRST CHAR
         CLI   0(2),C' '               MAY NOT BE A BLANK
         BNE   SETS2
         MVC   LINEO(L'NOTUNIQ),NOTUNIQ
         BAL   7,SAYERROR
         BAL   7,PUTLINE
         B     EOJ
SETS2    CLC   LINEIN(5),=CL5'ESTRNG'  DOING ESTRNG OR STRING ?
         BNE   LOADSTRG                NO SET POINTER FOR STRING=
         LA    5,SEARCHSE              YES SET FOR ESTRNG=
         LA    6,ESTRNGLN              LENGTH
         OI    SWITCH,ESEARCH          TAKE A NOTE
         B     SETS2B
LOADSTRG LA    5,SEARCHST              ADDRESS OF STRING
         LA    6,STRNGLEN              LENGTH OF STRING
         OI    SWITCH,SEARCH           INDICATE WE'LL BE SEARCHING
SETS2B   MVC   UNIQ(1),0(2)            SAVE FIRST CHAR (DELIMITER)
         LA    2,1(2)                  FIRST CHAR OF STRING
         LR    3,2                     SAVE ADDR
         LA    4,62                    MAX LENGTH
SETS3    CLC   0(1,3),UNIQ             FOUND SECOND DELIMITER ?
         BE    SETS4
         MVC   0(1,5),0(3)             NO MOVE IN ONE CHAR
         LA    5,1(5)                  BUMP POINTERS
         LA    3,1(3)
         BCT   4,SETS3                 DO TO MAX
         MVC   LINEO(L'NOTUNIQ),NOTUNIQ NO DELIMITER FOUND
         BAL   7,SAYERROR              TELL THE MAN
         BAL   7,PUTLINE
         B     EOJ
SETS4    SR    3,2                     GOT DELIMITER
         BCTR  3,0                     LESS ONE FOR EXECUTE (LATER)
         ST    3,0(6)                  SAVE LENGTH
         MVC   LINEO(13),=CL13'SCAN STRING:/'  PREPARE MESSAGE
         SR    5,3                     POINT TO BEGIN OF STRING
         SH    5,=H'1'                 LESS ONE
         MVC   LINEO+13(60),0(5)       MOVE STRING TO INFO LINE
         LA    4,LINEO+13              POINT TO FIRST '/'
         AR    4,3                     ADD LENGTH
         LA    4,1(4)                  POINT 1 BEYOND END
         MVI   0(4),C'/'               MOVE IN A '/'
         BAL   7,PUTLINE               WRITE INFO MESSAGE
         B     OPTIONS
*  SET COUNT ROUTINE - ENTERED BY KEYWORD COUNT=
SETCOUNT LA    2,LINEIN+6              POINT TO FIRST DIGIT
         XC    DWORD(8),DWORD          CLEAR WORK DWORD
         TM    0(2),X'F0'              CHECK NUMERIC
         BO    SETC2
         MVC   NOTNUM(5),=CL5'COUNT'
         MVC   LINEO(L'NOTNUM),NOTNUM
         BAL   7,SAYERROR
         BAL   7,PUTLINE
         B     EOJ
SETC2    LR    3,2                     SAVE ADDR OF FIRST DIGIT
         LA    4,8                     MAX LENGTH
SETC3    LA    3,1(3)                  POINT TO NEXT DIGIT
         TM    0(3),X'F0'
         BNO   SETC4
         BCT   4,SETC3
SETC4    SR    3,2                     R3=LENGTH
         LA    4,DWORD+8               END OF DWORD
         SR    4,3                     BACK UP LENGTH
         BCTR  3,0                     LESS ONE FOR EXECUTE
         EX    3,MVCNUM                MOVE IN NUMBER
         PACK  PLIM(5),DWORD+3(5)      SET COUNT FIELD
         ED    LMLINE(12),PLIM         WRITE AN INFO MESSAGE
         MVC   LINEO(LIMMSG),LIMMES
         BAL   7,PUTLINE
         OI    SWITCH,LIMIT            TAKE A NOTE
         B     OPTIONS
*  ISSUE POWER COMMAND - COMMAND IS IN PBUF
POWCMD   LA    9,DISPLSTM              SET UP AN ERROR MESSAGE
         MVC   LINEO(15),=CL15'COMMAND ISSUED:' INFO MESSAGE
         BAL   7,PUTLINE
         MVC   LINEO(50),PBUF          PRINT COMMAND TEXT
         BAL   7,PUTLINE
         CTLSPOOL SPL=(11),REQ=COMMAND,PBUF=PBUF,QUEUE=LST
         LTR   15,15
         BNZ   ERROR
         MVC   LINEO(88),PBUF+28       PRINT POWER REPLY
         BAL   7,PUTLINE
         BR    6                       RETURN
*  ERROR ROUTINE
ERROR    LR    2,15                    SAVE R15 RC
         SLL   2,24                    GET RID OF LOW ORDER BITS
         SRL   2,24
         LA    4,RETCDE                ADDRESS TO PLACE PRINTABLE RC
         BAL   7,CONV                  CONVERT TO PRINTABLE
         SR    2,2                     CLEAR R2
         IC    2,SPMXECB+4             INSERT FEEDBACK CODES FROM ECB
         LA    4,ERCODE                ADDRESS TO PLACE IT
         BAL   7,CONV                  CONVERT TO PRINTABLE
         MVC   ERRORMSG(30),0(9)       WRITE ERROR MESSAGE
         MVC   LINEO(60),ERRORMSG
         BAL   7,SAYERROR
         BAL   7,PUTLINE
         OI    SWITCH,ERRFOUND         INDICATE ERROR
         B     EOJ
*  WRITE MESSAGE ON CONSOLE ROUTINE
SAYERROR TM    SWITCH,ERRFOUND         TEST IF ONE ERROR ALREADY DONE
         BOR   7                       YES, DON'T DEPRESS THE OPERATOR
         LA    1,CCB                   WRITE TO CONSOLE
         EXCP  (1)
         WAIT  (1)
         OI    SWITCH,ERRFOUND
         BR    7
CCB      CCB   SYSLOG,CCW
CCW      CCW   X'09',LINEO,X'20',50
*  CONVERT TO PRINTABLE - R4 = OUTPUT ADDRESS R2 CONTAINS CODE
CONV     SLDL  2,28                    R2=000000NN R3=NN000000
         STC   2,0(4)
         SRL   3,28                    R3=000000NN
         STC   3,1(4)
         TR    0(2,4),TRTAB            CONVERT TO PRINTABLE
         BR    7
*  EOF ROUTINE - CARDS
NOCARDS  TM    SWITCH,ERRFOUND         ENDING DUE TO AN ERROR?
         BO    CLOSE                   YES - NO MORE MESSAGES
         OI    SWITCH,EOFENTRD         INDICATE EOF ON CARD INPUT
         CLI   JOBNAME,X'40'           DID WE GET A JOBNAME CARD?
         BNE   CHKFILOD
         MVC   LINEO(L'NOCARDSM),NOCARDSM   NO TELL USER
         BAL   7,SAYERROR
         BAL   7,PUTLINE
         B     EOJ
CHKFILOD TM    SWITCH,FILEODUN         DID WE PROCESS A FILEOUT CARD?
         BO    GET
         MVC   LINEO(L'NOFILECD),NOFILECD  NO TELL USER
         BAL   7,SAYERROR
         BAL   7,PUTLINE
         B     EOJ
*  WRITE A MESSAGE ROUTINE
PUTLINE  PUT   PRT                     WRITE MESSAGE
         MVI   LINEO,C' '              CLEAR
         MVC   LINEO+1(131),LINEO           BUFFER
         MVI   CC,X'09'                WRITE 1 LINE CC
         BR    7
*  WRITE A RECORD ROUTINE
PUTOUT   TM    SWITCH2,OUT2LIST        IS OUTPUT FILE TO BE PRINTED ?
         BNO   PUTOUT2                 NO
         MVC   LINEO(132),PBUF         YES, COPY RECORD TO PRINT AREA
         MVC   CC(1),SPCC              COPY CARRIAGE CONTROL CHAR
         B     PUTLINE
PUTOUT2  PUT   OUT                     WRITE RECORD
         MVI   0(8),C' '               CLEAR BUFFER
         L     6,RECLEN                LENGTH OF BUFFER
         BCTR  6,0                     LESS ONE FOR EXECUTE
         EX    6,CLRBUF                CLEAR IT
         BR    7
CLRBUF   MVC   1(*-*,8),0(8)           DUMMY FOR EXECUTE
*  UPDATE OUTPUT DCB TO GIVEN VALUES AND OPEN IT - ENTERED BY FILEOUT=
SETOUT   CLC   LINEIN+8(5),=CL5'PRINT'  FILEOUT=PRINT ?
         BNE   SETOUT2                 NO
         OI    SWITCH2,OUT2LIST        YES, TAKE A NOTE
         OI    SWITCH,FILEODUN         INDICATE WE'VE DONE IT
         LA    8,LINEO
         B     OPTIONS
SETOUT2  LA    2,LINEIN+8              FIRST CHARACTER OF DDNAME
         CLI   0(2),C' '               CHECK NOT BLANK
         BE    INVALID
         TM    0(2),X'F0'              OR NUMERIC
         BO    INVALID
CREDCB1  LA    3,OUTDCB+X'1E'          POINT TO DDNAME IN DCB
         LA    4,7                     MAX LEN
CREDCB2  MVC   0(1,3),0(2)             MOVE IN GIVEN DDNAME
         LA    2,1(,2)
         LA    3,1(,3)
         CLI   0(2),C' '               UNTIL END OF CARD
         BE    CREDCBE
         CLI   0(2),C','               OR A COMMA
         BE    CREDCB4
         BCT   4,CREDCB2
CREDCB4  LA    2,1(,2)                 POINT TO NEXT OPERAND
         MVC   FERRMSG(7),=CL7'FILEOUT' PREPARE ERROR MESSAGE
         CLC   0(8,2),=CL8'BLKSIZE='    WHAT
         BE    PROCBSIZ
         CLC   0(6,2),=CL6'LRECL='          OPERAND
         BE    PROCLREC
         CLC   0(6,2),=CL6'SYSNO='                  ?
         BE    PROCSYSN
         B     INVALID                  NONE OF THE ABOVE - ERROR
*  PROCESS SYSNO= OPERAND OF FILEOUT= KEYWORD
PROCSYSN MVC   FERRMSG(7),=CL7'SYSNO'  INIT ERROR MESSAGE
         LA    2,6(,2)                 POINT PAST SYSNO=
         CLI   0(2),C' '               A BLANK ?
         BE    INVALID                 ERROR
         CLC   0(3,2),=CL3'SYS'        PRECEEDED BY 'SYS' ?
         BNE   *+8
         LA    2,3(2)                  YES - SKIP OVER
PROCSYS1 TM    0(2),X'F0'              CHECK NUMERIC
         BNO   INVALID
         XC    DWORD(8),DWORD          NULL WORK DWORD
         LR    5,2                     SAVE ADDRESS OF FIRST DIGIT
         LA    4,3                     MAX LEN
PROCSYS2 LA    2,1(2)                  POINT TO NEXT DIGIT
         TM    0(2),X'F0'
         BNO   PROCSYS3
         BCT   4,PROCSYS2
PROCSYS3 LR    3,2                     END ADDR IN R3
         SR    3,5                     R3 = LENGTH
         LA    4,DWORD+8               END OF DWORD
         SR    4,3                     BACK UP LENGTH
         BCTR  3,0                     LESS ONE FOR EXECUTE
         EX    3,MVCNUMB               MOVE SYS NUMBER
         PACK  DWORD(8),DWORD(8)       CONVERT TO BINARY
         CVB   5,DWORD
         STCM  5,1,OUTDCB+X'0F'        STORE IN OUT DCB
         CLI   0(2),C' '               END OF CARD ?
         BE    CREDCBE
         B     CREDCB4                 NO GET NEXT OPERAND
*  PROCESS BLKSIZE= OPERAND OF FILEOUT= KEYWORD
PROCBSIZ MVC   FERRMSG(7),=CL7'BLKSIZE' INIT ERROR MESSAGE
         LA    2,8(,2)                 POINT PAST 'BLKSIZE='
         CLI   0(2),C' '               CHECK NOT BLANK
         BE    INVALID
PROCBSI1 TM    0(2),X'F0'              CHECK NUMERIC
         BNO   INVALID
         XC    DWORD(8),DWORD          CLEAR DWORD
         LR    5,2                     SAVE ADDR
         LA    4,5                     MAX LEN
PROCBSI2 LA    2,1(2)                  NEXT DIGIT
         TM    0(2),X'F0'
         BNO   PROCBSI3
         BCT   4,PROCBSI2              DO TILL BE GET END
PROCBSI3 LR    3,2                     END IN R3
         SR    3,5                     R3=LENGTH
         LA    4,DWORD+8               END OF DWORD
         SR    4,3                     BACK UP LENGTH
         BCTR  3,0                     LESS ONE FOR EXECUTE
         EX    3,MVCNUMB
         PACK  DWORD(8),DWORD(8)
         CVB   5,DWORD
         ST    5,BLOKSIZE              SAVE FOR LATER
         BCTR  5,0                     LESS ONE IN DCB
         STH   5,OUTDCB+X'52'          STORE IN DCB
         LA    5,8(5)                  PLUS 8 BYTES FOR LIOCS
         LA    4,OUTDCB+X'68'          DCB NEEDS A FWORD WITH OUT DCB
         AR    5,4                     + LENGTH BLOKSIZE A(*+BLOKSIZE)
         ST    5,OUTDCB+X'68'          JUST ABOUT HERE
         CLI   0(2),C' '               END OF CARD  ?
         BE    CREDCBE
         B     CREDCB4                 NO - GO GET NEXT OPERAND
*  PROCESS LRECL= OPERAND OF FILEOUT= KEYWORD
PROCLREC MVC   FERRMSG(7),=CL7'LRECL'  INIT ERROR MESSAGE
         LA    2,6(,2)                 POINT PAST LRECL=
         CLI   0(2),C' '               CHECK NOT BLANK
         BE    INVALID
PROCLRE1 TM    0(2),X'F0'              CHECK NUMERIC
         BNO   INVALID
         XC    DWORD(8),DWORD          CLEAR DWORD
         LR    5,2                     SAVE START ADDR
         LA    4,5                     MAX LEN
PROCLRE2 LA    2,1(2)                  NEXT DIGIT
         TM    0(2),X'F0'              NUMERIC ?
         BNO   PROCLRE3                NO
         BCT   4,PROCLRE2
PROCLRE3 LR    3,2                     R3 = END ADDR
         SR    3,5                     R3 = LENGTH
         LA    4,DWORD+8               END OF DWORD
         SR    4,3                     BACK UP LENGTH
         BCTR  3,0                     LESS 1 FOR EX
         EX    3,MVCNUMB               NUM IN DWORD
         PACK  DWORD(8),DWORD(8)       CONVERT TO BINARY
         CVB   5,DWORD
         ST    5,RECLEN                SAVE FOR LATER
         STH   5,OUTDCB+X'4A'          STORE IN DCB
         ST    5,OUTDCB+X'64'          HERE TOO
         CLI   0(2),C' '               END OF CARD ?
         BE    CREDCBE
         B     CREDCB4
*  CHECK ALL WAS VAILD AND OPEN OUTPUT FILE
CREDCBE  L     2,BLOKSIZE            BLOCK SIZE
         L     3,BLOKSIZE
         L     5,RECLEN              RECORD LENGTH
         SRDA  2,32                  DIVIDE BLOKSIZE BY LRECL
         DR    2,5
         LTR   2,2                   ANY REMAINDER ?
         BZ    OPENOUT               NO - OK LRECL IS MULTIPLE OF BSIZE
         ST    2,BADRC               REMAINDER AS RC
         OI    SWITCH,ERRFOUND       INDICATE ERROR ENCOUNTERED
         LA   2,4                    LENGTH OF DATA TO CONVERT
         LA   8,RECLEN               ADDRESS   "     "     "
         BAL  6,CONVERT              CONVERT TO PRINTABLE
         MVC  LINEO+1(8),CONDATA     MOVE TO MESSAGE
         MVC  LINEO+10(8),=CL8'RECSIZE'
         BAL  7,PUTLINE              PRINT MESSAGE
         LA   2,4                    LENGTH
         LA   8,BLOKSIZE             ADDRESS
         BAL  6,CONVERT              CONVERT TO PRINTABLE
         MVC  LINEO+1(8),CONDATA
         MVC  LINEO+10(8),=CL8'BLKSIZE'
         BAL  7,PUTLINE                     PRINT
         MVC   LINEO(L'NOTMULT),NOTMULT     NO MULTIPLE MESSAGE
         BAL   7,SAYERROR               TELL OPERATOR
         BAL   7,PUTLINE                PRINT ERROR MESSAGE
         B     EOJ                      END
OPENOUT  OPEN  OUT                      OPEN FILEOUT
         OI    SWITCH,FILEODUN          INDICATE WE'VE DONE IT
         B     OPTIONS
CONVERT  MVI   CONDATA,C' '             CLEAR
         MVC   CONDATA+1(69),CONDATA          BUFFER
         LA    9,CONDATA                BUFFER ADDRESS
CONV1    SR    3,3                      CLEAR R3
         IC    3,0(8)                   INSERT 1 HEX CHAR
         AR    3,3                      DOUBLE FOR CHAR
         LA    4,CHARTAB                PRINTABLE HEX TAB
         AR    4,3                      +R3 = OFFSET IN TAB
         MVC   0(2,9),0(4)              MOVE INTO BUFFER
         LA    9,2(9)                   BUMP BUFFER
         LA    8,1(8)                   POINT TO NEX CHAR
         BCT   2,CONV1                  DO TO END
         BR    6                        RETURN
CONDATA  DC    CL80' '                  USED BY CONVERT ROUTINE
CHARTAB DC  C'000102030405060708090A0B0C0D0E0F'  HEX TO CHAR TRANSLATE
        DC  C'101112131415161718191A1B1C1D1E1F'  TABLE
        DC  C'202122232425262728292A2B2C2D2E2F'
        DC  C'303132333435363738393A3B3C3D3E3F'
        DC  C'404142434445464748494A4B4C4D4E4F'
        DC  C'505152535455565758595A5B5C5D5E5F'
        DC  C'606162636465666768696A6B6C6D6E6F'
        DC  C'707172737475767778797A7B7C7D7E7F'
        DC  C'808182838485868788898A8B8C8D8E8F'
        DC  C'909192939495969798999A9B9C9D9E9F'
        DC  C'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
        DC  C'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
        DC  C'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
        DC  C'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
        DC  C'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
        DC  C'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
*  ERROR PROCESSING FILEOUT= CARD
INVALID  MVC   LINEO(L'FERRMSG),FERRMSG       WRITE ERROR MESSAGE
         BAL   7,SAYERROR
         BAL   7,PUTLINE
         NI    SWITCH,NERRFOND             RESET FLAG SET BY SAYERROR
         MVC   LINEO(L'LINEIN),LINEIN         WRITE INPUT CARD
         BAL   7,SAYERROR
         BAL   7,PUTLINE
         NI    SWITCH,NERRFOND             RESET FLAG SET BY SAYERROR
         LA    3,LINEIN                       START OF INPUT CARD
         SR    2,3                            R2 = WHERE ERROR WAS
         LA    3,LINEO                        R2 = OFFSET IN INPUT CARD
         AR    2,3
         MVI   0(2),C'*'                      UNDERLINE ERROR
         BAL   7,SAYERROR                     WRITE IT
         BAL   7,PUTLINE
         B     ENDLIST
*  CONSTANTS
TRTAB    EQU   *-240                          TRANSLATE TABLE
         DC    C'0123456789ABCDEF'
MVCJNUM  MVC   0(*-*,3),0(5)                  DUMMY FOR EXECUTE
MVCJNJN  MVC   PBUF+6(*-*),LINEIN+6             "         "
MVCALT1  MVC   ALTCM1+6(*-*),LINEIN+6           "         "
MVCALT2  MVC   ALTCM2+6(*-*),LINEIN+6           "         "
MVCNUMB  MVC   0(*-*,4),0(5)                    "         "
COMPARE  CLC   0(*-*,5),0(2)                    "         "
MVCNUM   MVC   0(*-*,4),0(2)                    "         "
PUTREC   MVC   0(*-*,8),PBUF                    "         "
SWITCH   DC    X'00'
SEARCH   EQU   X'01'                   SEARCH FOR A START STRING
RESTART  EQU   X'02'                   RESTART REQUESTED
ESEARCH  EQU   X'08'                   SEARCH FOR END STRING
LIMIT    EQU   X'04'                   COUNT WAS SPECIFIED
FILEODUN EQU   X'10'                   FILEOUT CARD HAS BEEN PROCESSED
ERRFOUND EQU   X'20'                   ERROR DETECTED
EOFENTRD EQU   X'40'                   EOF ROUTINE HAS BEEN ENTERED
USERIDFN EQU   X'80'                   USER-ID WAS SPECIFIED IN LISTING
NRESTART EQU   X'FD'                   TURN OFF RESTART REQUEST
NSEARCH  EQU   X'FE'                   TURN OFF START STRING SEARCH
NSEARCHE EQU   X'F7'                   TURN OFF END STRING SEARCH
NERRFOND EQU   X'DF'                   TURN OFF ERROR FOUND
SWITCH2  DC    X'00'
DISPWASL EQU   X'01'                   INPUT DISP WAS L
NUMGIVEN EQU   X'02'                   JOB NUMBER WAS GIVEN
OUT2LIST EQU   X'02'                   OUTPUT FILE TO BE PRINTER
DWORD    DC    D'0'                    WORK DWORD
RECLEN   DC    1F'80'                  RECLENGTH DEFAULT 80
BLOKSIZE DC    1F'80'                  BLOKLEN
SYSNUM   DC    1F'6'                   DEFAULT SYSNO SYS006
FWORD    DC    1F'0'                   WORK FWORD
SAVENUMA DC    1F'0'                   ADDR OF NUM IN ALTER COMMAND
SAVENUMB DC    1F'0'                   ADDR OF NUM IN ALTER COMMAND
SPMXECB  DC    A(0,*-*)                ECBS
TIMERECB DC    A(0)
         DC    X'FF'                   END LIST
RETRYLIM DC    1F'5'                   RETRY LIMIT FOR DEFINE XECB
ALTDISPA DC    1F'0'                   ADDRESS OF NEW DISPOSITION
ALTDISPB DC    1F'0'                   ADDRESS OF OLD DISPOSITION
STRNGLEN DC    1F'0'                   LEN OF START STRING
ESTRNGLN DC   1F'0'                    LEN OF END STRING
SLINE    DC   1F'0'                    RESTART LINE NUMBER
BADRC    DC   1F'8'                    RESTART LINE NUMBER
LINECNT  DC   PL5'0'                   LINES WRITTEN COUNTER
LINESRD  DC   PL5'0'                   LINES READ COUNTER
PLIM     DC   PL5'0'                   LIMIT SET BY COUNT=
JOBNAME  DC   CL8' '                   JOB NAME
JOBNUM   DC   CL5'00000'               NUMBER
         DC   CL3' '
JOBCLASS DC   C'Q'                     CLASS
RC       DC   C' '                     RETURN CODE
UNIQ     DC   C' '                     SCAN STRING DELIMITER
SEARCHST DC   CL60' '                  STRINGS
SEARCHSE DC   CL60' '
ALTCM1   DC   CL50'A LST,'             POWER COMMANDS
ALTCM2   DC   CL50'A LST,'
PBUF     DC   CL132' '                 POWER - POWQREAD BUFFER
CC       DC   X'8B'                    CARRIAGE CONTROL CHARACTER
LINEO    DC   CL132' '                 OUTPUT LINE BUFFER
LINEIN   DC   CL80' '                  INPUT LINE BUFFER
ERRORMSG DC   CL30' '                  FILLED BY ERROR ROUTINE
         DC   C'XECB BYTES='
ERCODE   DC   CL5' '
         DC   CL4'R15='
RETCDE   DC   CL16' '
DEFXECBM DC   CL30'FUNCTION: DEFINE XECB '
DISPLSTM DC   CL30'FUNCTION: DISPLAY LIST '
DISPSTAM DC   CL30'FUNCTION: DISPLAY STATUS '
GETM     DC   CL30'FUNCTION: GET SPOOL ENTRY '
TESTSTAM DC   CL30'FUNCTION: VSE RETURN CODE '
NOTHERE  DC   C'SPECIFIED LIST NOT FOUND IN POWER LST CLASS '
REQCLASS DC   CL1' '
NOTLIST  DC   C'SPECIFIED NAME IS NOT A LISTING'
NOTLSTM  DC   C'FIRST CARD NOT ''LSTIN='''
NOFILECD DC   C'NO ''FILEOUT='' CARD READ'
NOCARDSM DC   C'CONTROL CARDS MISSING'
POWERRME DC   C'RUN ABORTED DUE TO POWER MESSAGE'
NOTUNIQ  DC   C'STRING DOES NOT START AND END WITH SAME NONBLANK CHAR'
NOTNUM   DC   C'START LINE NO. NOT NUMERIC'
NOTFOUND DC   C'STRING NOT FOUND'
TOOHIGH  DC   C'START LINE EXCEEDS RECORD COUNT'
LINESRDM DC   C'TOTAL NUMBER OF LINES READ '
LINESRDE DC   X'402020206B2020206B202120'
LLINESRD EQU  *-LINESRDM
LINESWT  DC   C'TOTAL NUMBER OF OUTPUT RECS'
LINESWTE DC   X'402020206B2020206B202120'
LLINESWT EQU  *-LINESWT
HITMES   DC   C'STRING FOUND IN RECORD NO. '
HITLINE  DC   X'402020206B2020206B202120'
HITMSG   EQU  *-HITMES
HITLINES DC   X'402020206B2020206B202120'
RESMES   DC   C'RESTART AT LINE NUMBER     '
RSLINE   DC   X'402020206B2020206B202120'
RESMSG   EQU  *-RESMES
LIMMES   DC   C'NUMBER OF LINES TO PRINT   '
LMLINE   DC   X'402020206B2020206B202120'
LIMMSG   EQU  *-LIMMES
FERRMSG  DC     C'FILEOUT  PARAMETER INVALID'
NOTMULT  DC     C'BLOCKSIZE IS NOT A MULTIPLE OF LRECL'
CARD     DTFCD DEVADDR=SYS004,BLKSIZE=80,                              C
               TYPEFLE=INPUT,IOAREA1=LINEIN,EOFADDR=NOCARDS
PRT      DTFPR DEVADDR=SYS005,IOAREA1=CC,BLKSIZE=133,CTLCHR=YES
OUT      DTFSD DEVADDR=SYS006,RECSIZE=80,BLKSIZE=88,                   C
               TYPEFLE=OUTPUT,RECFORM=FIXBLK,IOREG=(8)
OUTDCB   EQU   OUT-8
SPLEX    SPL  TYPE=DEFINE,PBUF=PBUF,PBUFL=132
SPL      SPL  TYPE=MAP
         END

R Keane
Systems Programmer (Germany)

