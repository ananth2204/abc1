{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013557000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE954.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE954.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x02'", "DS1TRBAL": "b'\\xcc\"'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xc0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xc0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\t\\xed\\x00\\x08\\t\\xed\\x00\\x0c\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04_\\x003\\x01\\x17\\to\\x01\\x17\\to\\x11\\x19\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf5@@@'", "ispf": {"version": "04.95", "flags": 0, "createdate": "2017-04-06T00:00:00", "modifydate": "2017-04-06T11:19:33", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-495"}, "text": "REGULAR CBT TAPE - VERSION 495    FILE:  954\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT495.FILE954\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    27920   PO\n\n   PDS117I 5 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,186 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   04/06/17    11:19:32    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE954": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04_\\x00\\x18\\x01\\x17\\to\\x01\\x17\\to\\x11\\x19\\x00\\x08\\x00\\x08\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf9\\xf5@@@'", "ispf": {"version": "04.95", "flags": 0, "createdate": "2017-04-06T00:00:00", "modifydate": "2017-04-06T11:19:18", "lines": 8, "newlines": 8, "modlines": 0, "user": "CBT-495"}, "text": "//***FILE 954 is a program to make a job, STC, or other address     *   FILE 954\n//*           space CANCELABLE, NON-CANCELABLE, FORCIBLE,           *   FILE 954\n//*           NON-FORCIBLE, and to override job timing limits,      *   FILE 954\n//*           and more.                                             *   FILE 954\n//*                                                                 *   FILE 954\n//*           email support:  sbgolob@cbttape.org                   *   FILE 954\n//*                           sbgolob@att.net                       *   FILE 954\n//*                                                                 *   FILE 954\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CSCF": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00$\\x01\\x17\\t/\\x01\\x17\\to\\x11\\x15\\x043\\x048\\x00\\x02\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2017-04-02T00:00:00", "modifydate": "2017-04-06T11:15:24", "lines": 1075, "newlines": 1080, "modlines": 2, "user": "SBGOLOB"}, "text": "         TITLE 'CHANGE SUSCEPTIBILITY TO CANCEL AND FORCE COMMANDS'\nCSCF   CSECT\nCSCF   AMODE 31\nCSCF   RMODE 24\n***********************************************************************\n*\n*\n* CSCF CAN MODIFY A USER'S CANCEL AND/OR FORCE COMMAND SUSCEPTIBLITY.\n* CSCF CAN ALSO MODIFY A USER'S SUSCEPTIBLITY TO S322/S522.\n*\n* SYNTAX :\n*\n*    CSCF  < JOBNAME( JOB-NAME | '*' ) >\n*          < ASID( DECIMAL-ASID | X'HEXADECIMAL-ASID' ) >\n*          < CANCEL | NOCANCEL >\n*          < FORCE  | NOFORCE  >\n*          < TIME   | NOTIME   >\n*          < WAITTIME( MMMM,SS ) >\n*          < CPUTIME(  MMMM,SS ) >\n*          < LIST >\n*\n*    ALIASES:\n*\n*         JOBNAME   - USERID\n*         NOCANCEL  - NCANCEL\n*         NOFORCE   - NFORCE\n*\n*         CANCEL    -  MAKE THE A/S CANCELABLE\n*         NOCANCEL  -  MAKE THE A/S NON-CANCELABLE\n*         FORCE     -  MAKE THE A/S FORCEABLE\n*         NOFORCE   -  MAKE THE A/S NON-FORCEABLE\n*         LIST      -  GIVE BEFORE AND AFTER IMAGES OF THE CB'S.\n*\n*   'CSCF' WITHOUT (NO)CANCEL, (NO)FORCE, (NO)TIME  GIVES THE STATUS\n*   'CSCF' WITHOUT 'JOBNAME' OR 'ASID' WORKS ON INVOKER'S A/S .\n*   'CSCF' WITH 'JOBNAME' AND 'ASID' REQUIRES A MATCH ON BOTH.\n*   'CSCF' WITH 'JOBNAME' BUT NOT 'ASID' UPDATES ONLY IF 'JOBNAME' IS\n*          UNIQUE.  OTHERWISE, IT ISSUES ERROR MESSAGE.\n*\n*   'CSCF CANCEL'  ASSUMES 'FORCE'   , UNLESS 'NOFORCE' IS SPECIFIED.\n*   'CSCF TIME'    ASSUMES 'FORCE'   , UNLESS 'NOFORCE' IS SPECIFIED.\n*   'CSCF NOFORCE' ASSUMES 'NOCANCEL', UNLESS 'CANCEL'  IS SPECIFIED.\n*   'CSCF NOFORCE' ASSUMES 'NOTIME',   UNLESS 'TIME'    IS SPECIFIED.\n*\n*   WARNING:  DO NOT LET AN A/S TERMINATE WHEN IT IS NON-FORCEABLE.\n*             ALWAYS RESET TO FORCEABLE BEFORE TSO LOGOFF.\n*\n*             INITIATED JOBS HAVE TWO CSCB'S, SO THE ONE WHICH\n*             ASCBJBNI POINTS TO IS USED, IF ASCBJBNI IS NON-ZERO.\n*\n*             IF ASCBJBNI IS ZERO, THEN ASCBCSCB IS USED TO FIND\n*             THE CSCB.  THIS MEANS YOU CAN ONLY UPDATE AN INIT'S\n*             CANCEL/NONCANCEL STATUS IF IT IS IDLE.\n*\n*   ASM SYSLIBS:  SYS1.MACLIB, SYS1.AMODGEN\n*\n*   BITS FLIPPED:  FORCE  - ASCBNOMT BIT OF ASCBFLG2 IN ASCB\n*                  CANCEL - CHCL BIT OF CHACT IN CSCB\n*                  TIME   - ASCBTOFF BIT OF ASCBRCTF IN ASCB\n*                  CPUTIME- ASCBJSTL WORD IN ASCB\n*                  WAITTIME-ASCBSWTL WORD IN ASCB\n*\n*   ASCBTOFF  CONTROLS WHETHER ANY TIMING (S322 OR S522) IS DONE.\n*             IF IT IS '1', THE JOB IS NOT TIMED, AND THE CPUTIME\n*             AND WAITTIME VALUES ARE IGNORED.  IF IT IS '0', THE\n*             CPUTIME AND WAITTIME ARE ENFORCED, SUBJECT TO THE SMF\n*             EXIT IEFUTL.\n*\n*\n***********************************************************************\n         SPACE\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         EJECT\n         SAVE (14,12),,' CSCF &SYSDATE &SYSTIME '\n         LR    R11,R15                 SET FIRST BASE REG\n         LA    R12,2048                SET UP ...\n         LA    R12,2048(R11,R12)       SECOND BASE REG\n         USING CSCF,R11,R12            ADDRESSABILITY\n         LR    R10,R1                  SAVE CPPL\n         USING CPPL,R10                ADDRESSABILITY FOR CPPL\n         L     R0,SASIZE               PUT SA SIZE IN R0\n         GETMAIN  RU,LV=(0)            GETMAIN THE SAVEAREA\n         ST    R1,8(,R13)              SAVE NEW SA ADDR IN PREV SA\n         ST    R13,4(,R1)              SAVE PREV SA PTR IN NEW SA\n         LR    R13,R1                  POINT R13 TO NEW SAVE AREA\n         USING SAVEARE1,R13            ADDRESSABILITY FOR SAVEAREA\n         LA    R0,8(,R13)              POINT PAST CALLER'S SA POINTER\n         L     R1,SASIZE               GET SAVEAREA SIZE\n         S     R1,=F'8'                DECREMENT LENGTH OF CLEAR\n         XR    R3,R3                   CLEAR R3 (SIZE), R2 IS IGNORED\n         XR    R2,R2                   CLEAR PAD BYTE\n         MVCL  R0,R2                   CLEAR SAVEAREA STORAGE\n         TITLE 'PARSE THE COMMAND'\n*\n* FILL IN THE PPL\n*\n         LA    R3,SAVEPPL              POINT R3 TO GETMAINED PPL\n         USING PPL,R3                  SET ADDRESSABILITY\n         MVC   PPLUPT,CPPLUPT          COPY UPT ADDRESS\n         MVC   PPLECT,CPPLECT          COPY ECT ADDRESS\n         LA    R1,SAVEECB              GET ECB ADDRESS\n         ST    R1,PPLECB               PUT IT IN PPL\n         LA    R1,SAVEPCL              GET PCL ADDRESS\n         ST    R1,PPLPCL               PUT IT IN PPL\n         LA    R0,SAVEPCL              SET TARGET ADDRESS IN GETM STOR\n         LA    R1,PCLLEN               SET PCL SIZE\n         L     R8,=A(IKJPCL)           GET PCL CSECT (TEMPLATE) ADDRESS\n         LA    R9,PCLLEN               GET PCL SIZE\n         MVCL  R0,R8                   COPY PCL TEMPLATE- KEEPS IT RENT\n         LA    R1,SAVEANSR             GET ANSWER ADDRESS\n         ST    R1,PPLANS               PUT IT IN PPL\n         MVC   PPLCBUF,CPPLCBUF        COPY ADDRESS OF COMMAND BUF\n         ST    R13,PPLUWA              ADDR OF SAVEAREA IN USER WORD\n*                                      TO PASS TO VALIDCK RTNS (IF ANY)\n* CALL PARSE ROUTINE\n*\n         CALLTSSR EP=IKJPARS,MF=(E,(R3)) PARSE\n         CLI   SAVEANSR,X'FF'          WAS PARSE GOOD?\n         BE    NOPARSE                 NO. LEAVE NOW.\n         L     R9,SAVEANSR             GET POINTER TO ANSWER AREA\n         USING IKJPARMD,R9             PROVIDE ADDRESSABILITY\n         TITLE 'SET UP DEFAULT ASID AND JOBNAME'\n*\n*        SAVE ASVT DATA\n*\n         L     R4,CVTPTR               GET CVT\n         USING CVT,R4                  SET ADDRESSABILITY\n         L     R4,CVTASVT              GET ASVT\n         USING ASVT,R4                 SET ADDRESSABILITY\n         MVC   SAVEMAXU,ASVTMAXU\n         LA    R1,ASVTENTY-4           BACK UP ONE ENTRY\n         ST    R1,SAVEENTY\n         DROP  R4\n*\n*        SET DEFAULT ASID TO WORK ON\n*\n         USING PSA,R0                  ADDRESSABILITY\n         L     R3,PSAAOLD              GET CURRENT ASCB\n         USING ASCB,R3                 SET ADDRESSABILITY\n         MVC   ANB+2(2),ASCBASID       COPY ASID TO BINARY\n         BAL   R8,CONVASID             CONVERT 'ANB' TO 'AN'\n         ICM   R1,15,ASCBJBNI          GET ADDRESS OF JOBNAME\n         BNZ   GOTUSER                 GOT HIM.\n         ICM   R1,15,ASCBJBNS          GET ADDRESS OF JOBNAME\n         BNZ   GOTUSER                 GOT HIM.\n         LA    R1,=CL8'UNKNOWN'        DON'T KNOW\nGOTUSER  MVC   JN,0(R1)                SET DEFAULT USER\n*\n*        CHECK FOR ASID KEYWORD\n*\n         XR    R1,R1                   CLEAR R1\n         ICM   R1,3,ASIDK              GET ORDINAL IKJNAME FOR ASID\n         BZ    NOASIDP                 NOT THERE. USE DEFAULTS.\n         OI    STATBYTE,ASIDBIT        SET ASID-KEYWORD-FOUND BIT.\n         L     R2,#ASID                GET ADDRESS OF FULLWORD\n         L     R2,0(,R2)               GET FULLWORD INTEG ASID\n         ST    R2,ANB                  SAVE IT\n         BAL   R8,CONVASID             CONVERT 'ANB' TO 'AN'\n         CLC   ANB,SAVEMAXU            IS IT HIGHER THAN MAX?\n         BNH   ASIDNHI                 NO. CONTINUE ON.\n         MVC   OUTAREA(ASIHMSGL),ASIHMSG  ASID TOO HIGH.\n         MVC   ANB,SAVEMAXU            MAX ASCB\n         BAL   R8,CONVASID             CONVERT 'ANB' TO 'AN'\n         MVC   OUTAREAT(4),AN          MOVE TO MESSAGE\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     SKIPSTS2                 ... AND LEAVE.\nASIDNHI  SLL   R2,2                    MULTIPLY BY 4\n         L     R1,SAVEENTY             RESTORE ASVTENTY ADDRESS\n         LA    R1,0(R2,R1)             OFFSET TO SPECIFIED ASCB POINTER\n         TM    0(R1),ASVTAVAI          IS IT AVAILABLE?\n         BO    ASIDAV                  YES, BAD ASCB, TELL HIM\n         XR    R3,R3\n         ICM   R3,7,1(R1)              NOW LOAD THE POINTER\n         BZ    ASIDAV                  BAD ASCB. (JUST BEING SAFE)\n         ICM   R1,15,ASCBJBNI          GET JOBNAME ADDRESS\n         BNZ   GOTJBN                  GOT ONE\n         ICM   R1,15,ASCBJBNS          GET STC TSO NAME ADDRESS\n         BNZ   GOTJBN                  GOT ONE\nASIDAV   MVC   OUTAREA(ASAVMSGL),ASAVMSG   NO JOB FOR ASID\n         MVC   OUTAREAT(4),AN          JOBNAME SPECIFIED\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     SKIPSTS2                  ... AND LEAVE.\nGOTJBN   MVC   JNA,0(R1)               COPY IT TO JNA\nNOASIDP  ICM   R1,3,JOBNAMEK           GET ORDINAL IKJNAME FOR JOBNAME\n         BZ    CKASCB                  NOT THERE. SKIP IT.\n         OI    STATBYTE,JOBBIT         SET JOBNAME BIT.\n         L     R2,#JOBNAME             GET ADDRESS OF JOBNAME\n         CLI   0(R2),C'*'              IS IT * ?\n         BE    CKASCB                  YES. LEAVE DEFAULT ALONE.\n         MVC   JN,=CL8' '              CLEAR JN\n         XR    R1,R1\n         ICM   R1,3,#JOBNAME+4         GET LENGTH OF PARM\n         BCTR  R1,0                    DECREMENT FOR MOVE\n         EX    R1,EXMVC                MOVE TO JN\nCKASCB   DS    0H\n         TM    STATBYTE,JOBBIT+ASIDBIT DID USER SPECIFY NOTHING?\n         BZ    VALASCB                 YES. USE DEFAULTS.\n         TM    STATBYTE,JOBBIT+ASIDBIT DID USER SPEC BOTH JOB AND ASID?\n         BNO   TESTJOB                 NO. CHECK FOR ONE OR THE OTHER\n         CLC   JN,JNA                  DO JOBNAMES AGREE ?\n         BE    VALASCB                 YES. ASCB VALIDATED.\n         MVC   OUTAREA(MMJNMSGL),MMJNMSG MISMATCH IN JOBNAMES.\n         MVC   OUTAREAT+5(4),AN        ASID REQUESTED\n         MVC   OUTAREAT+13(8),JNA      JOBNAME OF ABOVE ASID\n         MVC   OUTAREAT+27(8),JN       JOBNAME REQUESTED\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     SKIPSTS2                  ... AND LEAVE.\nEXMVC    MVC   JN(0),0(R2)             EXECUTED MOVE\nTESTJOB  DS    0H\n         TM    STATBYTE,JOBBIT         DID USER SPECIFY JOBNAME ONLY?\n         BO    SRCHCHN                 YES. GO FIND IT'S ASID\n         MVC   JN,JNA                  NO. USE JOBNAME OF ASID SPECFIED\n         B     VALASCB                 VALIDATED ASCB.\nSRCHCHN  DS    0H\n         L     R2,SAVEMAXU             MAX CHAIN LENGTH\n         L     R5,SAVEENTY             GET TOP ASCB ADDRESS\n         LA    R6,0                    SET HIT COUNTER TO 0\nLOOPCHN  DS    0H\n         LA    R5,4(,R5)               GET NEXT IN CHAIN\n         TM    0(R5),ASVTAVAI          IS IT AVAILABLE\n         BO    NEXTCHN                 NO. DO NEXT ONE\n         L     R3,0(,R5)               GET ASCB\n         ICM   R7,15,ASCBJBNI          ANY NAME?\n         BNZ   GOJBNI2                 NOT HERE\n         ICM   R7,15,ASCBJBNS          ANY NAME?\n         BZ    NEXTCHN                 NO. SKIP IT.\nGOJBNI2  CLC   JN,0(R7)                SAME NAME\n         BNE   NEXTCHN                 NO. TRY AGAIN.\n         LA    R6,1(R6)                INCREMENT HIT COUNTER\n         MVC   ANB+2(2),ASCBASID       MOVE IN ASID NUMBER TO BIN FIELD\n         ST    R3,SAVEASCB             SAVE THIS ASCB\nNEXTCHN  DS    0H\n         BCT   R2,LOOPCHN              TRY AGAIN\n         C     R6,=F'1'                HOW MANY JOBS WERE THERE?\n         BE    RESTASCB                   1  . GO DO IT.\n         BL    JOBNOTF                    0  . TELL HIM.\n         MVC   OUTAREA(MULTMSGL),MULTMSG >1 . TELL HIM.\n         MVC   OUTAREAT+9(8),JN\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     SKIPSTS2                  ... AND LEAVE.\nJOBNOTF  MVC   OUTAREA(NOJFMSGL),NOJFMSG NO JOBS FOUND.\n         MVC   OUTAREAT(8),JN\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     SKIPSTS2                  ... AND LEAVE.\nRESTASCB L     R3,SAVEASCB             RESTORE THE SAVED ASCB\nVALASCB  DS    0H\n*\n*        GOT ASCB\n*\n         BAL   R8,CONVASID             CONVERT 'ANB' TO 'AN'\n         L     R4,ASCBCSCB             GET CURRENT CSCB\n         USING CHAIN,R4                ADDRESSABILITY\n         ICM   R2,15,ASCBJBNI          ACTIVE BATCH JOB ?\n         BZ    GOTCSCB                 NO. USE ASCBCSCB\n         LA    R1,CHKEY-CHAIN          ASCBJBNI POINTS TO CHKEY IN CSCB\n         SR    R2,R1                   WE WANT, SO GET START OF CSCB.\n         CLC   =CL4'CSCB',CHRES4-CHAIN(R2)  EYECATCHER OK?\n         BNE   GOTCSCB                 NO. USE ASCBCSCB\n         LR    R4,R2                   YES. USE CSCB AT ASCBJBNI\nGOTCSCB  DS    0H\n*\n*        DO STATUS DISPLAY\n*\n         MVC   OUTAREA(STATBL),STATB   MOVE MESSAGE TEMPLATE\n         MVC   OUTAREAT(8),JN\n         MVC   OUTAREAT+14(4),AN\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         BAL   R8,PUTCANM\n         BAL   R8,PUTFORM\n         BAL   R8,PUTTIME\n         BAL   R8,PUTTIMEV             TIMEOUT VALUES\n*\n*        CHECK FOR CHANGE REQUEST\n*\n         XR    R1,R1                   CLEAR R1\n         ICM   R1,3,CANCELK            GET ORDINAL IKJNAME FOR CANCEL\n         BZ    SKIPCAN                 NOT THERE. SKIP IT.\n         OI    EXCLBYTE,CANBIT         SET CANCEL BIT\nSKIPCAN  ICM   R1,3,NCANCELK           GET ORDINAL IKJNAME FOR NOCANCEL\n         BZ    SKIPNCAN                NOT THERE. SKIP IT.\n         OI    EXCLBYTE,NCANBIT        SET NOCANCEL BIT\nSKIPNCAN DS    0H\n         ICM   R1,3,FORCEK             GET ORDINAL IKJNAME FOR FORCE\n         BZ    SKIPFOR                 NOT THERE. SKIP IT.\n         OI    EXCLBYTE,FORBIT         SET FORCE  BIT\nSKIPFOR  ICM   R1,3,NFORCEK            GET ORDINAL IKJNAME FOR NOFORCE\n         BZ    SKIPNFOR                NOT THERE. SKIP IT.\n         OI    EXCLBYTE,NFORBIT        SET NOFORCE  BIT\nSKIPNFOR DS    0H\n         ICM   R1,3,TIMEK              GET ORDINAL IKJNAME FOR TIME\n         BZ    SKIPTIM                 NOT THERE. SKIP IT.\n         OI    EXCLBYTE,TIMBIT         SET TIME   BIT\nSKIPTIM  ICM   R1,3,NTIMEK             GET ORDINAL IKJNAME FOR NOTIME\n         BZ    SKIPNTIM                NOT THERE. SKIP IT.\n         OI    EXCLBYTE,NTIMBIT        SET NOTIME   BIT\nSKIPNTIM DS    0H\n         ICM   R1,3,CPUK               GET ORDINAL IKJNAME FOR CPUTIME\n         BZ    SKIPCPU                 NOT THERE. SKIP IT.\n         OI    EXCLBYTE,CPUBIT         SET CPU BIT\n         L     R1,#CMM                 GET ADDRESS OF 1ST PDE\n         MVC   MMB,0(R1)               SAVE MINUTES\n         CLC   MMB,=F'1439'            IS IT HIGHER THAN MAX?\n         MVI   OUTAREA+CPUBMSGL-1,C'1' SET ERROR NUMBER\n         BH    CPUBAD                  YES. GO DO ERROR MSG.\n         L     R1,#CSS                 GET ADDRESS OF 2ND PDE\n         MVC   SSB,0(R1)               SAVE SECONDS\n         CLC   SSB,=F'59'              IS IT HIGHER THAN MAX?\n         MVI   OUTAREA+CPUBMSGL-1,C'2' SET ERROR NUMBER\n         BH    CPUBAD                  YES. GO DO ERROR MSG.\n         CLC   MMB(8),=XL8'0'          IS IT 0?\n         MVI   OUTAREA+CPUBMSGL-1,C'3' SET ERROR NUMBER\n         BE    CPUBAD                  YES. GO DO ERROR MSG.\n         LA    R1,CPUTIME              POINT TO OUTPUT WORD\n         BAL   R8,CONVTUS              CONVERT MMSS TO 2**20 MICROSEC\n         B     SKIPCPU                 NO. SKIP ERROR MESSAGE.\nCPUBAD   MVC   OUTAREA(CPUBMSGL-1),CPUBMSG  CPU TIME INVALID\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     SKIPSTS2                 ... AND LEAVE.\nSKIPCPU  DS    0H\n         ICM   R1,3,WAITK              GET ORDINAL IKJNAME FOR WAITTIME\n         BZ    SKIPWAIT                NOT THERE. SKIP IT.\n         OI    EXCLBYTE,WAITBIT        SET WAIT BIT\n         L     R1,#WMM                 GET ADDRESS OF 1ST PDE\n         MVC   MMB,0(R1)               SAVE MINUTES\n         CLC   MMB,=F'1439'            IS IT HIGHER THAN MAX?\n         MVI   OUTAREA+WATBMSGL-1,C'1' SET ERROR NUMBER\n         BH    WAITBAD                 YES. GO DO ERROR MSG.\n         L     R1,#WSS                 GET ADDRESS OF 2ND PDE\n         MVC   SSB,0(R1)               SAVE SECONDS\n         CLC   SSB,=F'59'              IS IT HIGHER THAN MAX?\n         MVI   OUTAREA+WATBMSGL-1,C'2' SET ERROR NUMBER\n         BH    WAITBAD                 YES. GO DO ERROR MSG.\n         CLC   MMB(8),=XL8'0'          IS IT 0?\n         MVI   OUTAREA+WATBMSGL-1,C'3' SET ERROR NUMBER\n         BE    WAITBAD                 YES. GO DO ERROR MSG.\n         LA    R1,WAITTIME             POINT TO OUTPUT WORD\n         BAL   R8,CONVTUS              CONVERT MMSS TO 2**20 MICROSEC\n         B     SKIPWAIT                BYPASS ERROR MSG\nWAITBAD  MVC   OUTAREA(WATBMSGL-1),WATBMSG  WAIT TIME INVALID\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     SKIPSTS2                 ... AND LEAVE.\nSKIPWAIT DS    0H\n         NC    AUTHBYTS,AUTHBYTS       ANY AUTH REQUESTS?\n         BZ    CSCFEND                 NO. JUST STATUS REQUEST.\n         BAL   R8,TESTAUTH             SEE IF USER IS ALLOWED.\n         BZ    TESTNOFC                YES. GO TO IT.\n         MVC   OUTAREA(AUTHMSGL),AUTHMSG  NO. ISSUE AUTH MESSAGE.\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     CSCFEND                  ... AND END NOW.\n*\n* TEST FOR ASSUMED NOFORCE / CANCEL\n*\nTESTNOFC TM    EXCLBYTE,CANBIT+NFORBIT USER ASKED CANCEL OR NOFORCE?\n         BNM   ENDNOFC                 BOTH OR NEITHER. DON'T WORRY.\n         TM    EXCLBYTE,CANBIT         USER ASKED CANCEL ?\n         BZ    TRYFOR1                 NO. RATHER NOFORCE.\n         OI    EXCLBYTE,FORBIT         ASSUME FORCEABLE TOO.\n         B     ENDNOFC                 END THIS CHECK\nTRYFOR1  OI    EXCLBYTE,NCANBIT        ASSUME NONCANCELABLE TOO.\nENDNOFC  DS    0H\n*\n* TEST FOR ASSUMED NOFORCE / TIMED\n*\nTESTNOFT TM    EXCLBYTE,TIMBIT+NFORBIT USER ASKED TIMED OR NOFORCE?\n         BNM   ENDNOFT                 BOTH OR NEITHER. DON'T WORRY.\n         TM    EXCLBYTE,TIMBIT         USER ASKED TIMED?\n         BZ    TRYFOR2                 NO. RATHER NOFORCE.\n         OI    EXCLBYTE,FORBIT         ASSUME FORCEABLE TOO.\n         B     ENDNOFT                 END THIS CHECK\nTRYFOR2  OI    EXCLBYTE,NTIMBIT        ASSUME NOT TIMED TOO.\nENDNOFT  DS    0H\n*\n* TEST FOR CANCEL / NOCANCEL\n*\n         TM    EXCLBYTE,CANBIT+NCANBIT CAN/NCAN OPTIONS SPECIFIED?\n         BZ    CANSKIP                 NONE. SKIP THIS SECTION\n         BO    CANNUTS                 BOTH. USER IS NUTS.\n         BAL   R8,GETHOT               GET INTO SUP STATE,KEY ZERO.\n         LTR   R15,R15                 ANY PROBLEMS?\n         BZ    DOENQ1                  NO. DO IT.\n         MVC   OUTAREA(MODECANL),MODECAN  NO. ISSUE MODECAN MESSAGE.\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     CANSKIP                  ... AND END NOW.\nDOENQ1   DS    0H\n         ENQ   ,MF=(E,ENQLIST)         ENQUEUE WITH SMC\n         LTR   R15,R15                 HOW DID WE DO ?\n         BZ    CANENQ0                 ENQ OK.\n         L     R15,0(,R15)             GET 1ST RC\n         LTR   R15,R15                 IS IT 0 ?\n         BZ    CANENQ0                 ENQ OK.\n         SRL   R15,2                   DIVIDE BY 4\n         BCTR  R15,0                   DECREMENT BY 1\n         SLL   R15,5                   MULTIPLY BY 32\n         LA    R15,ENQMSGS(R15)        INDEX INTO STACK OF ENQ MESSAGES\n         MVC   OUTAREAT(32),0(R15)     MOVE IN MESSAGE\n         MVC   OUTAREAL,=H'36'         MOVE IN LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\nCANNOGO  NI    EXCLBYTE,255-CANBIT-NCANBIT  CAN'T FLIP THOSE BITS\nCANENQ0  DS    0H\n         TM    EXCLBYTE,CANBIT         CANCEL OPTION SPECIFIED?\n         BZ    CANCAN                  NO. SKIP THIS.\n         OI    CHACT,CHCL              TURN  ON CANCELABLE BIT\n         OI    STATBYTE,CHGBIT         TURN  ON CHANGE BIT\n         B     CANDONE\nCANCAN   DS    0H\n         TM    EXCLBYTE,NCANBIT        NOCANCEL OPTION SPECIFIED?\n         BZ    CANDONE                 NO. SKIP THIS.\n         NI    CHACT,255-CHCL          TURN OFF CANCELABLE BIT\n         OI    STATBYTE,CHGBIT         TURN  ON CHANGE BIT\n         B     CANDONE\nCANDONE  DS    0H\n         DEQ   ,MF=(E,DEQLIST)\n         BAL   R8,GETCOLD              COOL OFF\n         B     CANSKIP\nCANNUTS  DS    0H\n         MVC   OUTAREA(CANMSGL),CANMSG  WRITE THE PROBLEM OUT\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     CSCFEND                   ... AND LEAVE.\nCANSKIP  DS    0H\n*\n* TEST FOR FORCE  / NOFORCE\n*\n         TM    EXCLBYTE,FORBIT+NFORBIT FOR/NFOR OPTIONS SPECIFIED?\n         BZ    FORSKIP                 NONE. SKIP THIS SECTION\n         BO    FORNUTS                 BOTH. USER IS NUTS.\n         BAL   R8,GETHOT               GET INTO SUP STATE,KEY ZERO.\n         LTR   R15,R15                 ANY PROBLEMS?\n         BZ    OBLOCK                  NO. DO IT.\n         MVC   OUTAREA(MODEFORL),MODEFOR  NO. ISSUE MODEFOR MESSAGE.\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     FORSKIP                  ... AND END NOW.\nOBLOCK   DS    0H\n         SETLOCK OBTAIN,TYPE=DISP,REGS=USE,MODE=COND,                XXX\n               RELATED=(CSCF(FORDONE))\n         C     R15,=F'8'               DID WE GET IT ?\n         BE    OBLOCK                  NO. TRY AGAIN.\n         BL    GOTLOCK                 YES. GO TO IT.\n         BAL   R8,GETCOLD              COOL OFF\n         MVC   OUTAREA(FORMSG2L),FORMSG2  WRITE THE PROBLEM OUT\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     FORSKIP                 SKIP THE REST.\nGOTLOCK  DS    0H\n         INTSECT SET,TYPE=GLOBAL       SERIALIZE ASCBFLG2\n         TM    EXCLBYTE,FORBIT         WANT IT FORCEABLE?\n         BZ    FORFOR                  NO. TRY NEXT OPTION\n         NI    ASCBFLG2,255-ASCBNOMT   MAKE IT FORCEABLE\n         OI    STATBYTE,CHGBIT         TURN  ON CHANGE BIT\n         B     FORDONE\nFORFOR   TM    EXCLBYTE,NFORBIT        WANT IT NON-FORCEABLE?\n         BZ    FORDONE                 NO. TRY NEXT OPTION\n         OI    ASCBFLG2,ASCBNOMT       MAKE IT NON-FORCEABLE\n         OI    STATBYTE,CHGBIT         TURN  ON CHANGE BIT\nFORDONE  DS    0H\n         INTSECT RESET,TYPE=GLOBAL\n         SETLOCK RELEASE,TYPE=DISP,REGS=USE,                         XXX\n               RELATED=(CSCF(OBLOCK))\n         BAL   R8,GETCOLD              COOL OFF\n         B     FORSKIP\nFORNUTS  DS    0H\n         MVC   OUTAREA(FORMSGL),FORMSG  WRITE THE PROBLEM OUT\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     CSCFEND\nFORSKIP  DS    0H\n*\n* TEST FOR TIME / NOTIME\n*\n         TM    EXCLBYTE,TIMBIT+NTIMBIT TIM/NTIM OPTIONS SPECIFIED?\n         BZ    TIMSKIP                 NONE. SKIP THIS SECTION\n         BO    TIMNUTS                 BOTH. USER IS NUTS.\n         BAL   R8,GETHOT               GET INTO SUP STATE,KEY ZERO.\n         LTR   R15,R15                 ANY PROBLEMS?\n         BZ    CKTIME                  NO. DO IT.\n         MVC   OUTAREA(MODETIML),MODETIM  NO. ISSUE MODETIM MESSAGE.\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     TIMSKIP                  ... AND END NOW.\nCKTIME   TM    EXCLBYTE,TIMBIT         WANT IT TIMED?\n         BZ    TIMTIM                  NO. TRY NEXT OPTION\n         NI    ASCBRCTF,255-ASCBTOFF   MAKE IT TIMED.\n         OI    STATBYTE,CHGBIT         TURN  ON CHANGE BIT\n         B     TIMDONE\nTIMTIM   TM    EXCLBYTE,NTIMBIT        WANT IT NOT TIMED?\n         BZ    TIMDONE                 NO. TRY NEXT OPTION\n         OI    ASCBRCTF,ASCBTOFF       MAKE IT NOT TIMED.\n         OI    STATBYTE,CHGBIT         TURN  ON CHANGE BIT\nTIMDONE  DS    0H\n         BAL   R8,GETCOLD              COOL OFF\n         B     TIMSKIP\nTIMNUTS  DS    0H\n         MVC   OUTAREA(TIMMSGL),TIMMSG  WRITE THE PROBLEM OUT\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     CSCFEND\nTIMSKIP  DS    0H\n*\n* TEST FOR CPUTIME\n*\n         TM    EXCLBYTE,CPUBIT         CPU TIME TO BE SET?\n         BZ    CPUSKIP                 NONE. SKIP THIS SECTION\n         BAL   R8,GETHOT               GET INTO SUP STATE,KEY ZERO.\n         LTR   R15,R15                 ANY PROBLEMS?\n         BZ    CKCPU                   NO. DO IT.\n         MVC   OUTAREA(MODECPUL),MODECPU  NO. ISSUE MODECPU MESSAGE.\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     CPUSKIP                  ... AND END NOW.\nCKCPU    DS    0H\n         MVC   ASCBJSTL,CPUTIME        MOVE NEW CPU TIME IN.\n         OI    STATBYTE,CHGBIT         TURN  ON CHANGE BIT\n         BAL   R8,GETCOLD              COOL OFF\nCPUSKIP  DS    0H\n*\n* TEST FOR WAITTIME\n*\n         TM    EXCLBYTE,WAITBIT        WAIT TIME TO BE SET?\n         BZ    WATSKIP                 NONE. SKIP THIS SECTION\n         BAL   R8,GETHOT               GET INTO SUP STATE,KEY ZERO.\n         LTR   R15,R15                 ANY PROBLEMS?\n         BZ    CKWAT                   NO. DO IT.\n         MVC   OUTAREA(MODEWATL),MODEWAT  NO. ISSUE MODEWAT MESSAGE.\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     WATSKIP                  ... AND END NOW.\nCKWAT    DS    0H\n         MVC   ASCBSWTL,WAITTIME       MOVE NEW WAIT TIME IN.\n         OI    STATBYTE,CHGBIT         TURN  ON CHANGE BIT\n         BAL   R8,GETCOLD              COOL OFF\nWATSKIP  DS    0H\nCSCFEND  DS    0H\n*\n*        DO STATUS DISPLAY\n*\n         TM    STATBYTE,CHGBIT         DID STATUS CHANGE?\n         BZ    SKIPSTS2                NO. SKIP IT.\n         MVI   OUTAREAT,C' '           BLANK LINE\n         MVC   OUTAREAL,=H'5'          LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         MVC   OUTAREA(STATBL),STATB   MOVE MESSAGE TEMPLATE\n         MVC   OUTAREAT(8),JN\n         MVC   OUTAREAT+14(4),AN\n         MVC   OUTAREAT+20(6),=CL6'AFTER'\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         BAL   R8,PUTCANM\n         BAL   R8,PUTFORM\n         BAL   R8,PUTTIME\n         BAL   R8,PUTTIMEV             TIMEOUT VALUES\nSKIPSTS2 DS    0H\n         TITLE 'CLEAN UP AND EXIT '\n*\n*        FREE STORAGE AND EXIT\n*\n         IKJRLSA SAVEANSR              RELEASE PARSE STORAGE\nNOPARSE  L     R0,SASIZE               GET SIZE OF FREEMAIN\n         L     R5,SAVERC               GET RETURN CODE FROM SAVE AREA\n         LR    R1,R13                  POINT TO GETMAINED STORAGE\n         L     R13,4(,R13)             RESTORE CALLERS SAVE AREA\n         FREEMAIN RU,LV=(0),A=(1)      RELEASE SAVE AREA\n         LR    R15,R5                  SET RETURN CODE\n         RETURN (14,12),,RC=(15)\n*\n* END OF MAINLINE PROGRAM\n*\n*\n         TITLE 'SUBROUTINES'\n*  SUBROUTINE TO GET INTO SUPERVISOR STATE, KEY 0\n*  LINKAGE : R8\n*\nGETHOT   DS    0H                      GET HOT\n         TESTAUTH FCTN=1,RBLEVEL=1     ARE WE APF AUTHORIZED ?\n         LTR   R15,R15                 CHECK RETURN CODE.\n         BNZR  R8                      IF NOT, DON'T DO MODESET.\n         MODESET KEY=ZERO,MODE=SUP     CHANGE STATE AND KEY.\n         XR    R15,R15                 CLEAR R15. JUST IN CASE.\n         BR    R8                      GO BACK TO CALLER\n*\n*  SUBROUTINE TO GET INTO PROBLEM STATE, KEY 8\n*  LINKAGE : R8\n*\nGETCOLD  DS    0H                      GET COLD\n         MODESET KEY=NZERO,MODE=PROB   CHANGE STATE AND KEY\n         BR    R8                      GO BACK TO CALLER\n*\n*  SUBROUTINE TO SEE IF USER IS ALLOWED TO CHANGE THE ASCB AND CSCB.\n*  SET CC 0 IF ALLOWED.\n*  LINKAGE : R8\n*\nTESTAUTH DS    0H\n         B     GOODGUY                 PERMIT EVERYBODY\n         L     R6,CPPLPSCB             GET PSCB ADDRESS\n         USING PSCB,R6                 ADDRESSABILITY\n         TM    PSCBATR1,PSCBCTRL       IS THERE OPER AUTHORITY?\n         BZ    NOTAUTH                 NO. PROHIBIT.\n         CLC   =C'SY',PSCBUSER         'SY' SYSPROG?\n         BE    GOODGUY                 YES. RETURN AND ALLOW.\n         CLC   =C'TP',PSCBUSER         'TP' SYSPROG?\n         BE    GOODGUY                 YES. RETURN AND ALLOW.\n         CLC   =C'SR',PSCBUSER         'SRM' SYSPROG?\n         BE    GOODGUY                 YES. RETURN AND ALLOW.\n         CLC   =C'OP',PSCBUSER         OPERATOR?\n         BE    NOCFT                   YES. NOT CANCEL, FORCE, OR TIME\n         CLC   =C'TS',PSCBUSER         TECH SUPPORT?\n         BE    NOCFT                   YES. NOT CANCEL, FORCE, OR TIME\nNOTAUTH  LTR   R12,R12                 SET CC \u00ac0\n         BR    R8                      RETURN\nNOCFT    NI    EXCLBYTE,WAITBIT+CPUBIT ONLY PERMITTED AUTHORITIES.\nGOODGUY  SR    R0,R0                   SET CC 0\n         BR    R8                      RETURN\n         DROP  R6\n*\n*  CONVERT ASID IN 'ANB' TO CHAR AND PUT IN 'AN'.  R0 USED.\n*  LINKAGE : R8\n*\nCONVASID L     R0,ANB                  GET BINARY ASID\n         CVD   R0,DW                   CONVERT TO NUMERIC\n         MVC   DW2,=X'4020202020202120' EDIT MASK\n         ED    DW2,DW+4                 EDIT\n         MVC   AN,DW2+4                 MOVE TO 'AN'\n         BR    R8                      RETURN\n*\n*  CONVERT BINARY NUMBER AT W1 TO ZONE DECIMAL AND PUT IN W2. R0 USED.\n*  ONLY LAST 4 DIGITS USED.\n*  LINKAGE : R7\n*\nCONV2ZD  L     R0,W1                   GET BINARY NUMBER\n         CVD   R0,DW                   CONVERT TO NUMERIC\n         MVC   DW2,=X'4020202020202120' EDIT MASK\n         ED    DW2,DW+4                 EDIT\n         MVC   W2,DW2+4                 MOVE TO W2\n         BR    R7                      RETURN\n*\n*  CONVERT ZD NUMBER AT W1 TO BINARY AND PUT IN W2. R0 USED.\n*  LINKAGE : R2\n*\nCONV2BI  PACK  DW,W1                   GET ZD NUMBER\n         CVB   R0,DW                   CONVERT TO BINARY\n         ST    R0,W2                    MOVE TO W2\n         BR    R7                      RETURN\n*\n*  SUBROUTINE TO PUTLINE CSCB CHACT IF \"LIST\" OPTION SPECIFIED.\n*  ALSO WILL PUTLINE CURRENT \"CANCELABLE\" OR \"NON-CANCELABLE\" STATUS.\n*  LINKAGE : R8\n*\nPUTCANM  DS    0H\n         TM    CHACT,CHCL              IS IT CANCELLABLE?\n         BZ    CM1                     NO. GO TO NON-CAN MSG.\n         MVC   OUTAREAT(10),=CL10'CANCELABLE'\n         MVC   OUTAREAL,=H'14'         LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     CM11                    RETURN\nCM1      DS    0H\n         MVC   OUTAREAT(14),=CL14'NON-CANCELABLE'\n         MVC   OUTAREAL,=H'18'         LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\nCM11     DS    0H\n         XR    R1,R1                   CLEAR R1\n         ICM   R1,3,LISTK              WAS LIST SPECIFIED?\n         BZ    SKIPLST1                NOT THERE. SKIP IT.\n         STCM  R4,15,OUTAREAT+8\n         STCM  R4,15,OUTAREAT+12\n         TR    OUTAREAT+8(4),TABLEHI   TRANSLATE\n         TR    OUTAREAT+12(4),TABLELO  TRANSLATE\n         MVC   OUTAREAT+0(1),OUTAREAT+8\n         MVC   OUTAREAT+1(1),OUTAREAT+12\n         MVC   OUTAREAT+2(1),OUTAREAT+9\n         MVC   OUTAREAT+3(1),OUTAREAT+13\n         MVC   OUTAREAT+4(1),OUTAREAT+10\n         MVC   OUTAREAT+5(1),OUTAREAT+14\n         MVC   OUTAREAT+6(1),OUTAREAT+11\n         MVC   OUTAREAT+7(1),OUTAREAT+15\n         MVC   OUTAREAL,=H'12'         LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         MVC   OUTAREAT(15),=CL15'CSCB   V  CHACT'\n         MVC   OUTAREAL,=H'19'         LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         MVC   OUTAREAT(184),0(R4)     MOVE TEXT IN\n         MVC   OUTAREAL,=H'83'         REDUCED LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         TR    OUTAREAT(184),TABLEHI   TRANSLATE\n         MVC   OUTAREAL,=H'83'         REDUCED LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         MVC   OUTAREAT(184),0(R4)     MOVE TEXT IN\n         TR    OUTAREAT(184),TABLELO   TRANSLATE\n         MVC   OUTAREAL,=H'83'         LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\nSKIPLST1 BR    R8\n*\n*  SUBROUTINE TO PUTLINE ASCBFLG2 IF \"LIST\" OPTION SPECIFIED.\n*  ALSO WILL PUTLINE CURRENT \"FORCEABLE\" OR \"NON-FORCEABLE\" STATUS.\n*  LINKAGE : R8\n*\nPUTFORM  DS    0H\n         TM    ASCBFLG2,ASCBNOMT       IS IT FORCEABLE ?\n         BO    CM2                     NO. GO TO NON-FOR MSG.\n         MVC   OUTAREAT(9),=CL9'FORCEABLE'\n         MVC   OUTAREAL,=H'13'\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     CM22\nCM2      DS    0H\n         MVC   OUTAREAT(13),=CL13'NON-FORCEABLE'\n         MVC   OUTAREAL,=H'17'\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\nCM22     DS    0H\n         XR    R1,R1                   CLEAR R1\n         ICM   R1,3,LISTK              WAS LIST SPECIFIED?\n         BZ    SKIPLST2                NOT THERE. SKIP IT.\n         MVC   OUTAREAT(16),=CL16'ASCB ASCBFLG2  V'\n         MVC   OUTAREAL,=H'20'         LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         MVC   OUTAREAT,100(R3)        MOVE TEXT IN\n         MVC   OUTAREAL,=H'83'         REDUCED LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         TR    OUTAREAT,TABLEHI        TRANSLATE\n         MVC   OUTAREAL,=H'83'         REDUCED LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         MVC   OUTAREAT,100(R3)        MOVE TEXT IN\n         TR    OUTAREAT,TABLELO        TRANSLATE\n         MVC   OUTAREAL,=H'83'         REDUCED LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\nSKIPLST2 BR    R8\n*\n*  SUBROUTINE TO PUTLINE CURRENT ASCBJSTL (CPU TIME LIMIT FOR JOBSTEP)\n*              AND ALSO CURRENT ASCBSWTL (WAIT TIME LIMIT FOR JOBSTEP)\n*  LINKAGE : R8\n*\nPUTTIMEV DS    0H\n         MVC   OUTAREA(TIMEMSGL),TIMEMSG  CPU TIME FIRST\n         MVC   OUTAREAT+4(4),=C'CPU '  'CPU ' EYECATCHER\n         L     R15,ASCBJSTL            POINT TO CPU TIME\n         LA    R1,1                    CALC 2**20\n         SLL   R1,20\n         MR    R14,R1                  MULTIPLY\n         D     R14,=F'100000'          DIVIDE BY A MILLION/10\n         XR    R14,R14                 CLEAR R14\n         LA    R15,5(,R15)             ADD 5 TO ROUND\n         D     R14,=F'10'              DIVIDE BY 10 TO GET SECONDS\n         XR    R14,R14                 CLEAR R14\n         D     R14,=F'60'              DIVIDE BY 60\n         ST    R14,SSB                 SAVE SECONDS\n         ST    R15,MMB                 SAVE MINUTES\n         MVC   W1,MMB                  MINUTES\n         BAL   R7,CONV2ZD              CONVERT TO ZONED DECIMAL\n         MVC   OUTAREAT+16(4),W2       PUT IN MESSAGE\n         MVC   W1,SSB                  SECONDS\n         BAL   R7,CONV2ZD              CONVERT TO ZONED DECIMAL\n         MVC   OUTAREAT+30(4),W2       MOVE TO MESSAGE\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         MVC   OUTAREAT+4(4),=C'WAIT'  'WAIT' EYECATCHER\n         L     R15,ASCBSWTL            POINT TO WAIT TIME\n         LA    R1,1                    CALC 2**20\n         SLL   R1,20\n         MR    R14,R1                  MULTIPLY\n         D     R14,=F'100000'          DIVIDE BY A MILLION/10\n         XR    R14,R14                 CLEAR R14\n         LA    R15,5(,R15)             ADD 5 TO ROUND\n         D     R14,=F'10'              DIVIDE BY 10 TO GET SECONDS\n         XR    R14,R14                 CLEAR R14\n         D     R14,=F'60'              DIVIDE BY 60 TO GET MINUTES\n         ST    R14,SSB                 SAVE SECONDS\n         ST    R15,MMB                 SAVE MINUTES\n         MVC   W1,MMB                  MINUTES\n         BAL   R7,CONV2ZD              CONVERT TO ZONED DECIMAL\n         MVC   OUTAREAT+16(4),W2       PUT IN MESSAGE\n         MVC   W1,SSB                  SECONDS\n         BAL   R7,CONV2ZD              CONVERT TO ZONED DECIMAL\n         MVC   OUTAREAT+30(4),W2       MOVE TO MESSAGE\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         BR    R8\n*\n*  SUBROUTINE TO CONVERT THE MINUTES AND SECONDS IN MMB AND SSB INTO\n*              TIMER UNITS AND PUT THE VALUE AT THE WORD POINTED BY R1\n*  LINKAGE : R8\n*\nCONVTUS  DS    0H\n         L     R15,MMB                 GET MINUTES\n         M     R14,=F'60'              MULTIPLY TO GET SECONDS\n         A     R15,SSB                 ADD SECONDS\n         M     R14,=F'10'              MULTIPLY BY 10\n         A     R15,=F'5'               ADD 5 TO ROUND IT\n         M     R14,=F'100000'          MULTIPLY BY 100000\n         LR    R0,R1                   SAVE R1\n         LA    R1,1                    CALC 2**20\n         SLL   R1,20\n         DR    R14,R1                  DIVIDE TO GET TU\n         LR    R1,R0                   RESTORE R1\n         ST    R15,0(,R1)              SET ANSWER\n         BR    R8                      RETURN\n*\n*  SUBROUTINE TO PUTLINE ASCBRCTF IF \"LIST\" OPTION SPECIFIED.\n*  ALSO WILL PUTLINE CURRENT \"TIMED\" OR \"NOT TIMED\" STATUS.\n*  LINKAGE : R8\n*\nPUTTIME  DS    0H\n         TM    ASCBRCTF,ASCBTOFF       IS ASCB BEING TIMED?\n         BO    TO2                     NO. GO TO \"NOT TIMED\" MSG.\n         MVC   OUTAREAT(5),=CL5'TIMED'\n         MVC   OUTAREAL,=H'9'\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         B     TO22\nTO2      DS    0H\n         MVC   OUTAREAT(26),=CL26'NOT-TIMED, BUT IF IT WERE,'\n         MVC   OUTAREAL,=H'30'\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\nTO22     DS    0H\n         XR    R1,R1                   CLEAR R1\n         ICM   R1,3,LISTK              WAS LIST SPECIFIED?\n         BZ    SKIPLST3                NOT THERE. SKIP IT.\n         MVC   OUTAREAT(16),=CL16'ASCB ASCBRCTF  V'\n         MVC   OUTAREAL,=H'20'         LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         MVC   OUTAREAT,87(R3)         MOVE TEXT IN\n         MVC   OUTAREAL,=H'83'         REDUCED LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         TR    OUTAREAT,TABLEHI        TRANSLATE\n         MVC   OUTAREAL,=H'83'         REDUCED LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\n         MVC   OUTAREAT,87(R3)         MOVE TEXT IN\n         TR    OUTAREAT,TABLELO        TRANSLATE\n         MVC   OUTAREAL,=H'83'         REDUCED LENGTH\n         BAL   R14,PUTLSUB             DO THE PUTLINE ...\nSKIPLST3 BR    R8\n*\n*  SUBROUTINE TO PUTLINE WHAT'S IN OUTAREA.\n*  USES SAVEARE2 AS SAVE AREA.\n*  LINKAGE : R14\n*\nPUTLSUB  SAVE (14,12)\n         LA    R1,SAVEARE2             POINT TO NEW SAVE AREA\n         ST    R1,8(,R13)              SAVE NEW SA ADDR IN PREV SA\n         ST    R13,4(,R1)              SAVE PREV SA PTR IN NEW SA\n         LR    R13,R1                  POINT R13 TO NEW SAVE AREA\n         USING SAVEARE2,R13            ADDRESSABILITY FOR SAVEARE2\n         MVC   PL1(PL1L),PL1C          MOVE PARM LIST\n         L     R1,CPPLUPT              GET UPT ADDRESS\n         ST    R1,IOPL+0               SAVE IT IN IOPL\n         L     R1,CPPLECT              GET ECT ADDRESS\n         ST    R1,IOPL+4               SAVE IT IN IOPL\n         LA    R1,SAVEECB              GET ECB ADDRESS\n         ST    R1,IOPL+8               SAVE IT IN IOPL\n         PUTLINE PARM=PL1,                                             X\n               OUTPUT=(OUTAREA,TERM,SINGLE,DATA),                      X\n               MF=(E,IOPL)           IOPL+12 WILL BE FILLED IN BY MACRO\n*\n         L     R13,4(,R13)             POINT TO OLD SAVE AREA\n         USING SAVEARE1,R13            ADDRESSABILITY FOR SAVEARE1\n         RETURN (14,12),,RC=(15)\n*\n         TITLE 'CONSTANTS AND LITERALS '\n*\n* MESSAGE TEMPLATES FOR PUTLINE\n*\nMMJNMSG  DC    Y(MMJNMSGL,0)\n         DC    C'ASID AAAA IS JJJJJJJJ, NOT JJJJJJJJ. NO ACTION TAKEN.'\nMMJNMSGL EQU   *-MMJNMSG\nMULTMSG  DC    Y(MULTMSGL,0)\n         DC    C'MULTIPLE JJJJJJJJ JOBS FOUND. NO ACTION TAKEN. '\n         DC    C'USE ASID PARAMETER.'\nMULTMSGL EQU   *-MULTMSG\nNOJFMSG  DC    Y(NOJFMSGL,0)\n         DC    C'JJJJJJJJ JOB NOT FOUND. NO ACTION TAKEN.'\nNOJFMSGL EQU   *-NOJFMSG\nASIHMSG  DC    Y(ASIHMSGL,0)\n         DC    C'AAAA IS THE MAXIMUM ASID. NO ACTION TAKEN.'\nASIHMSGL EQU   *-ASIHMSG\nCPUBMSG  DC    Y(CPUBMSGL,0)\n       DC C'CPU TIME NOT IN RANGE (0,1) - (1439,59). NO ACTION TAKEN. '\nCPUBMSGL EQU   *-CPUBMSG\nTIMEMSG  DC    Y(TIMEMSGL,0)\n         DC    C'MAX      TIME -      MINUTES,      SECONDS '\nTIMEMSGL EQU   *-TIMEMSG\nWATBMSG  DC    Y(WATBMSGL,0)\n     DC  C'WAIT TIME NOT IN RANGE (0,1) - (1439,59). NO ACTION TAKEN. '\nWATBMSGL EQU   *-WATBMSG\nASAVMSG  DC    Y(ASAVMSGL,0)\n         DC    C'AAAA IS AN UNASSIGNED ASID. NO ACTION TAKEN.'\nASAVMSGL EQU   *-ASAVMSG\nCANMSG   DC    Y(CANMSGL,0)\n         DC    C'\"CANCEL\" AND \"NOCANCEL\" ARE MUTUALLY EXCLUSIVE.       X\n               NO ACTION TAKEN.'\nCANMSGL  EQU   *-CANMSG\nFORMSG   DC    Y(FORMSGL,0)\n         DC    C'\"FORCE\" AND \"NOFORCE\" ARE MUTUALLY EXCLUSIVE.         X\n               NO ACTION TAKEN.'\nFORMSGL  EQU   *-FORMSG\nFORMSG2  DC    Y(FORMSG2L,0)\n         DC    C'SETLOCK OBTAIN TYPE=DISP ENCOUNTERED A LEVEL ERROR.   X\n               NO ACTION TAKEN.'\nFORMSG2L EQU   *-FORMSG2\nTIMMSG   DC    Y(TIMMSGL,0)\n         DC    C'\"TIME\" AND \"NOTIME\" ARE MUTUALLY EXCLUSIVE.           X\n               NO ACTION TAKEN.'\nTIMMSGL  EQU   *-TIMMSG\nAUTHMSG  DC    Y(AUTHMSGL,0)\n         DC    C'YOU DO NOT HAVE ADEQUATE AUTHORITY FOR ONE OR MORE OPTX\n               IONS. NO ACTION TAKEN.'\nAUTHMSGL EQU   *-AUTHMSG\nMODECAN  DC    Y(MODECANL,0)\n         DC    C'CANCEL/NOCANCEL OPTIONS REQUIRE THAT CSCF BE AUTHORIZEX\n               D. NO ACTION TAKEN.'\nMODECANL EQU   *-MODECAN\nMODEFOR  DC    Y(MODEFORL,0)\n         DC    C'FORCE/NOFORCE OPTIONS REQUIRE THAT CSCF BE AUTHORIZED.X\n                NO ACTION TAKEN.'\nMODEFORL EQU   *-MODEFOR\nMODETIM  DC    Y(MODETIML,0)\n         DC    C'TIME/NOTIME OPTIONS REQUIRE THAT CSCF BE AUTHORIZED. NX\n               O ACTION TAKEN.'\nMODETIML EQU   *-MODETIM\nMODECPU  DC    Y(MODECPUL,0)\n         DC    C'CPUTIME OPTION REQUIRES THAT CSCF BE AUTHORIZED. NO ACX\n               TION TAKEN.'\nMODECPUL EQU   *-MODECPU\nMODEWAT  DC    Y(MODEWATL,0)\n         DC    C'WAITTIME OPTION REQUIRES THAT CSCF BE AUTHORIZED. NO AX\n               CTION TAKEN.'\nMODEWATL EQU   *-MODEWAT\nSTATB    DC    Y(STATBL,0)\n         DC    C'JJJJJJJJ ASID(    ) BEFORE :  '\nSTATBL   EQU   *-STATB\nENQMSGS  DC    CL32'ENQ RC=4, RESOURCE IN USE'\n         DC    CL32'ENQ RC=8, RESOURCE ALREADY OWNED'\n         DC    CL32'ENQ RC=C, UNKNOWN RETURN CODE'\n         DC    CL32'ENQ RC=10, UNKNOWN RETURN CODE'\n         DC    CL32'ENQ RC=14, PRIOR REQ FAILED TOO'\n         DC    CL32'ENQ RC=18, TOO MANY ENQS IN A/S'\n*\n         DS    0D\n*\n* CONSTANTS\n*\nTABLELO  DC    16CL16'0123456789ABCDEF'\nTABLEHI  DC    16C'0',16C'1',16C'2',16C'3',16C'4',16C'5',16C'6',16C'7'\n         DC    16C'8',16C'9',16C'A',16C'B',16C'C',16C'D',16C'E',16C'F'\nSASIZE   DC    A(GETLEN)               SAVEAREA SIZE\nQNAME    DC    CL8'SYSIEFSD'           CSCB SERIALIZATION DESCRIBED ..\nRNAME    DC    C'Q10'                   ... IN DEBUG HANDBOOK\nPL1C     PUTLINE MF=L\nPL1L     EQU   *-PL1C\nENQLIST  ENQ   (QNAME,RNAME,E,L'RNAME,SYSTEM),SMC=STEP,MF=L\nENQLISTL EQU   *-ENQLIST\nDEQLIST  DEQ   (QNAME,RNAME,L'RNAME,SYSTEM),RMC=STEP,MF=L\nDEQLISTL EQU   *-DEQLIST\n         TITLE 'LTORG CONSTANTS'\n         LTORG\n         TITLE 'PARSE MACROS'\nIKJPCL   IKJPARM\nCANCELK  IKJKEYWD\nCANCEL   IKJNAME 'CANCEL'\nNCANCELK IKJKEYWD\nNCANCEL  IKJNAME 'NOCANCEL',ALIAS='NCANCEL'\nFORCEK   IKJKEYWD\nFORCE    IKJNAME 'FORCE'\nNFORCEK  IKJKEYWD\nNFORCE   IKJNAME 'NOFORCE',ALIAS='NFORCE'\nTIMEK    IKJKEYWD\nTIME     IKJNAME 'TIME'\nNTIMEK   IKJKEYWD\nNTIME    IKJNAME 'NOTIME'\nLISTK    IKJKEYWD\nLIST     IKJNAME 'LIST'\nJOBNAMEK IKJKEYWD\nJOBNAME  IKJNAME 'JOBNAME',ALIAS=('USERID'),SUBFLD=@JOBNAME\nASIDK    IKJKEYWD\nASID     IKJNAME 'ASID',SUBFLD=@ASID\nCPUK     IKJKEYWD\nCPU      IKJNAME 'CPUTIME',SUBFLD=@CPU\nWAITK    IKJKEYWD\nWAIT     IKJNAME 'WAITTIME',SUBFLD=@WAIT\n@JOBNAME IKJSUBF\n#JOBNAME IKJIDENT 'JOBNAME',ASTERISK,MAXLNTH=8,                        X\n               FIRST=ALPHA,OTHER=ALPHANUM,                             X\n               PROMPT='JOBNAME OR USERID',                             X\n               HELP=('NAME OF JOB, STC OR TSO USER. \"*\" IS ALLOWED.')\n@ASID    IKJSUBF\n#ASID    IKJIDENT 'ASID',INTEG,                                        X\n               PROMPT='DECIMAL OR HEX ASID',                           X\n               HELP=('FORMS: DECIMAL \"NNNN...\"  OR HEX \"X''XXXX...''\"',X\n               'BINARY FORM (YES!) IS ALLOWED TOO - \"B''BBBB...''\"')\n@CPU     IKJSUBF\n#CMM     IKJIDENT 'CPU MINUTES',INTEG,MAXLNTH=4,                       X\n               PROMPT='NEW CPU MINUTES (1-1439)'                       X\n               HELP=('CPU MINUTES TO LIMIT THE JOB TO (1-1439)')\n#CSS     IKJIDENT 'CPU SECONDS',INTEG,MAXLNTH=2,DEFAULT='0',           X\n               HELP=('THE NEW CPU SECONDS TO LIMIT THE JOB TO (1-59)')\n@WAIT    IKJSUBF\n#WMM     IKJIDENT 'WAIT MINUTES',INTEG,MAXLNTH=4,                      X\n               PROMPT='NEW WAIT MINUTES (1-1439)'                      X\n               HELP=('WAIT MINUTES TO LIMIT THE JOB TO (1-1439)')\n#WSS     IKJIDENT 'WAIT SECONDS',INTEG,MAXLNTH=2,DEFAULT='0',          X\n               HELP=('THE NEW WAIT SECONDS TO LIMIT THE JOB TO (1-59)')\n         IKJENDP\nIKJPCL   CSECT ,\nPCLLEN   EQU   *-IKJPCL\nCSCF   CSECT ,\n         TITLE 'DSECTS'\n         IKJCPPL\n         IKJPPL\nPPLLEN   EQU   *-PPL          LENGTH OF PPL\n         PRINT NOGEN\n         CVT   PREFIX=NO,DSECT=YES\n         TITLE 'SAVE AREA AND WORK AREA DSECT'\nSAVEAREA DSECT\nSAVEARE1 DS    18F            MAIN RTN SAVE AREA\nSAVEARE2 DS    18F            SUBROUTINE SAVE AREA\nJN       DS    D              JOBNAME FROM PARSE\nJNA      DS    D              JOBNAME FROM ASCB OF ASID PARSED\nDW       DS    D              WORK DOUBLE WORD\nDW2      DS    D              WORK DOUBLE WORD\nSAVEANSR DS    F              PARSE ANSWER AREA POINTER\nSAVEECB  DS    F              DUMB ECB FOR PARSE\nSAVERC   DS    F              RETURN CODE\nANB      DS    F              ASID NUMBER BINARY\nAN       DS    F              ASID NUMBER CHARACTER\nSAVEMAXU DS    F              SAVE COPY OF ASVTMAXU\nSAVEENTY DS    F              SAVE COPY OF ASVTENTY ADDRESS\nSAVEASCB DS    F              SAVE COPY OF ASCB FOR JOBNAME\nMMB      DS    F              ASID NUMBER CHARACTER\nSSB      DS    F              ASID NUMBER CHARACTER\nCPUTIME  DS    F              CPU IN TIME 2**20 MICROSECONDS\nWAITTIME DS    F              WAIT TIME IN 2**20 MICROSECONDS\nW1       DS    F              WORK WORD\nW2       DS    F              WORK WORD\nSAVEPPL  DS    CL(PPLLEN)     STORAGE COPY OF PPL\nSAVEPCL  DS    CL(PCLLEN)     STORAGE COPY OF PCL\nPL1      PUTLINE MF=L\nIOPL     DS    4F\n*\nOUTAREA  DS    0F\nOUTAREAL DS    H\nOUTAREAF DS    H\nOUTAREAT DS    CL256\n         EJECT\n         DS    0F\n*\n* START OF AUTHORIZED FUNCTION BYTES\n*\nAUTHBYTS DS    0CL1\nEXCLBYTE DS    XL1\nCANBIT   EQU   B'10000000'             CANCEL   REQUESTED\nNCANBIT  EQU   B'01000000'             NOCANCEL REQUESTED\nFORBIT   EQU   B'00100000'             FORCE    REQUESTED\nNFORBIT  EQU   B'00010000'             NOFORCE  REQUESTED\nTIMBIT   EQU   B'00001000'             TIME     REQUESTED\nNTIMBIT  EQU   B'00000100'             NOTIME   REQUESTED\nCPUBIT   EQU   B'00000010'             NEW CPU TIME REQUESTED\nWAITBIT  EQU   B'00000001'             NEW WAIT TIME REQUESTED\n*\n* END OF AUTHORIZED FUNCTION BYTES\n*\nSTATBYTE DS    XL1\nCHGBIT   EQU   B'10000000'             CONTROL BLOCK WAS CHANGED\nASIDBIT  EQU   B'01000000'             ASID SPECIFIED\nJOBBIT   EQU   B'00100000'             JOBNAME SPECIFIED\n*\nGETLEN   EQU   *-SAVEAREA\n         TITLE 'DSECTS'\n         PRINT NOGEN\n         DSECT\n         IHAASVT\n         IHAASCB\n         IHAPSA\n         IKJPSCB\n         IEECHAIN\n         IHASVT ,         /* REQ'D BY INTSECT MACRO */\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CSCF$": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x00@\\x01\\x01\\x05O\\x01\\x17\\t/ #\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "2001-02-23T00:00:00", "modifydate": "2017-04-02T20:23:40", "lines": 28, "newlines": 28, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB\n//         DD DISP=SHR,DSN=SYS1.MODGEN\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.B.ASM(CSCF)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//SYSLMOD  DD  DISP=SHR,DSN=SYS1.W$$.LINKLIB\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n SETCODE AC(1)\n SETSSI  CB495222\n NAME    CSCF(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CSCF#": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00@\\x01\\x17\\to\\x01\\x17\\x13\\x1f\\x15\\t\\x00?\\x00>\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2017-04-06T00:00:00", "modifydate": "2017-05-11T15:09:40", "lines": 63, "newlines": 62, "modlines": 0, "user": "SBGOLOB"}, "text": ")F FUNCTION-\n\nCSCF CAN MODIFY A USER'S CANCEL AND/OR FORCE COMMAND SUSCEPTIBLITY.\nCSCF CAN ALSO MODIFY A USER'S SUSCEPTIBLITY TO S322/S522.\n\n)X SYNTAX-\n\n   CSCF  < JOBNAME( JOB-NAME | '*' ) >\n         < ASID( DECIMAL-ASID | X'HEXADECIMAL-ASID' ) >\n         < CANCEL | NOCANCEL >\n         < FORCE  | NOFORCE  >\n         < TIME   | NOTIME   >\n         < WAITTIME( MMMM,SS ) >\n         < CPUTIME(  MMMM,SS ) >\n         < LIST >\n\n   ALIASES:\n\n        JOBNAME   - USERID\n        NOCANCEL  - NCANCEL\n        NOFORCE   - NFORCE\n\n        CANCEL    -  MAKE THE A/S CANCELABLE\n        NOCANCEL  -  MAKE THE A/S NON-CANCELABLE\n        FORCE     -  MAKE THE A/S FORCEABLE     (uses MEMTERM bit)\n        NOFORCE   -  MAKE THE A/S NON-FORCEABLE (uses MEMTERM bit)\n        LIST      -  GIVE BEFORE AND AFTER IMAGES OF THE CB'S.\n\n  'CSCF' WITHOUT (NO)CANCEL, (NO)FORCE, (NO)TIME  GIVES THE STATUS\n  'CSCF' WITHOUT 'JOBNAME' OR 'ASID' WORKS ON INVOKER'S A/S .\n  'CSCF' WITH 'JOBNAME' AND 'ASID' REQUIRES A MATCH ON BOTH.\n  'CSCF' WITH 'JOBNAME' BUT NOT 'ASID' UPDATES ONLY IF 'JOBNAME' IS\n         UNIQUE.  OTHERWISE, IT ISSUES ERROR MESSAGE.\n\n  'CSCF CANCEL'  ASSUMES 'FORCE'   , UNLESS 'NOFORCE' IS SPECIFIED.\n  'CSCF TIME'    ASSUMES 'FORCE'   , UNLESS 'NOFORCE' IS SPECIFIED.\n  'CSCF NOFORCE' ASSUMES 'NOCANCEL', UNLESS 'CANCEL'  IS SPECIFIED.\n  'CSCF NOFORCE' ASSUMES 'NOTIME',   UNLESS 'TIME'    IS SPECIFIED.\n\n  WARNING:  DO NOT LET AN A/S TERMINATE WHEN IT IS NON-FORCEABLE.\n            ALWAYS RESET TO FORCEABLE BEFORE TSO LOGOFF.\n\n            INITIATED JOBS HAVE TWO CSCB'S, SO THE ONE WHICH\n            ASCBJBNI POINTS TO IS USED, IF ASCBJBNI IS NON-ZERO.\n\n            IF ASCBJBNI IS ZERO, THEN ASCBCSCB IS USED TO FIND\n            THE CSCB.  THIS MEANS YOU CAN ONLY UPDATE AN INIT'S\n            CANCEL/NONCANCEL STATUS IF IT IS IDLE.\n\n  ASM SYSLIBS:  SYS1.MACLIB, SYS1.AMODGEN\n\n  BITS FLIPPED:  FORCE  - ASCBNOMT BIT OF ASCBFLG2 IN ASCB\n                 CANCEL - CHCL BIT OF CHACT IN CSCB\n                 TIME   - ASCBTOFF BIT OF ASCBRCTF IN ASCB\n                 CPUTIME- ASCBJSTL WORD IN ASCB\n                 WAITTIME-ASCBSWTL WORD IN ASCB\n\n  ASCBTOFF  CONTROLS WHETHER ANY TIMING (S322 OR S522) IS DONE.\n            IF IT IS '1', THE JOB IS NOT TIMED, AND THE CPUTIME\n            AND WAITTIME VALUES ARE IGNORED.  IF IT IS '0', THE\n            CPUTIME AND WAITTIME ARE ENFORCED, SUBJECT TO THE SMF\n            EXIT IEFUTL.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT954/FILE954.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT954", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}