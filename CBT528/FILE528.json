{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012257000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE528.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE528.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x11'", "DS1TRBAL": "b'\\x00\\xee'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xea\\x00\\x04\\x03\\xea\\x00\\x06\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00T\\x01\\x13\\x00\\x1f\\x01\\x13\\x00\\x1f\\x12&\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-01-01T00:00:00", "modifydate": "2013-01-01T12:26:54", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-486"}, "text": "REGULAR CBT TAPE - VERSION 486    FILE:  528\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT486.FILE528\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 4 MEMBERS COUNTED; CUMULATIVE SIZE IS 558 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   01/01/13    12:26:54    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE528": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00F\\x01\\x13\\x00\\x1f\\x01\\x13\\x00\\x1f\\x12&\\x00\\x06\\x00\\x06\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-01-01T00:00:00", "modifydate": "2013-01-01T12:26:46", "lines": 6, "newlines": 6, "modlines": 0, "user": "CBT-486"}, "text": "//***FILE 528 is from John McKown and contains a REXX exec to       *   FILE 528\n//*           parse a LISTCAT listing and produce source statements *   FILE 528\n//*           to IDCAMS to recatalog the items.                     *   FILE 528\n//*                                                                 *   FILE 528\n//*       email:   \"McKown, John\" <john.archie.mckown@GMAIL.com>    *   FILE 528\n//*                                                                 *   FILE 528\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DEFINES": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x01!O\\x01\\x01!O\\x14'\\x01\\xdc\\x01\\xdc\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-08-02T00:00:00", "modifydate": "2001-08-02T14:27:00", "lines": 476, "newlines": 476, "modlines": 0, "user": "SBGOLOB"}, "text": "/* REXX PROGRAM TO GENERATE IDCAMS DEFINE */\nTRACE E\nDEFINED = \"\"\nRESTARTS = 0\nDO FOREVER;\n   EXITCODE = @MAIN()\n   IF EXITCODE = 0 THEN LEAVE\n   RESTARTS = RESTARTS+1\n   IF RESTARTS > 3 THEN LEAVE\n   SAY '************ RESTART ***********'\n   ADDRESS ATTACH \"IDCAMS\"\n   IF RC <> 0 THEN LEAVE\nEND;\nEXIT EXITCODE\n@MAIN:PROCEDURE\nTYPE.1 = 'CLUSTER'\nTYPE.2 = 'PATH'\nTYPE.3 = 'AIX'\nBLANKS = COPIES(' ',80)\nDEFCL.= ''\nREF.0 = 0\nDEF.='*NO*'\nOFFSET6 = '$'\nDO FOREVER\n   \"EXECIO 1 DISKR IDCAMS\"\n   IF RC <> 0 THEN LEAVE\n   PARSE PULL RECORD\n   TEST = LEFT(RECORD,7)\n   IF TEST = '1IDCAMS' THEN ITERATE;\n   RECORD=SUBSTR(RECORD,2); /* STRIP OUT THE CARRIAGE */\n   OFFSET = VERIFY(RECORD,' '); /* FIND LOCATION OF 1ST NON-BLANK */\n   IF OFFSET = 0 THEN ITERATE; /* IGNORE BLANK LINE */\n   CALL @NODASH;\n   TOCALL = 'CALL @OFFSET'OFFSET\n   CALL @DOCALL\nEND;\nCALL @DUMPIT\n\"EXECIO 0 DISKR IDCAMS (FINIS\"\n\"EXECIO 0 DISKW DEFINES (FINIS\"\nEXITCODE = 0\nDO I = 1 TO REF.0\n   A = REF.I\n   IF DEF.A = '*YES*' THEN ITERATE\n   CARD = \" LISTC ENT('\"A\"') OUTFILE(IDCAMSO) ALL\"\n   PUSH CARD\n   \"EXECIO 1 DISKW SYSIN\"\n   SAY 'NOT FOUND \"'A'\"'\n   EXITCODE=8\nEND\nIF EXITCODE <> 0 THEN \"EXECIO 0 DISKW SYSIN(FINIS\"\nRETURN EXITCODE;\n@DOCALL:\n   SIGNAL ON SYNTAX\n   INTERPRET TOCALL\n   SIGNAL OFF SYNTAX\n   RETURN;\n@OFFSET1:\n@OFFSET4:\n   SIGNAL OFF SYNTAX\n  PARSE VAR RECORD VARNAME VARDATA\n  VARNAME = LEFT(VARNAME,LENGTH(VARNAME)-1)\n  TOCALL = 'CALL @'VARNAME\n  SIGNAL @DOCALL\n  RETURN;\n@CLUSTER:\n@AIX:\n@PATH:\n   SIGNAL OFF SYNTAX\n  CALL @DUMPIT;\n  DROP DEFCL.\n  DEFCL.=''\n  DEFCL.$TYPE = VARNAME\n  DEFCL.VARNAME = VARDATA\n  COMP = $COMP\n  OFFSET6 = '$'\n  RETURN;\n@DATA:\n@INDEX:\n   SIGNAL OFF SYNTAX\n  COMP = SPACE(VARNAME,0);\n  DEFCL.COMP = SPACE(VARDATA,0);\n  RETURN;\n@OFFSET6:\n   SIGNAL OFF SYNTAX\n  PARSE VAR RECORD FUNCTION REST\n  OFFSET6 = SPACE(FUNCTION,0)\n  RETURN;\n@OFFSET8:\n   SIGNAL OFF SYNTAX\n  DO WHILE LENGTH(RECORD) > 0\n     PARSE VAR RECORD VARNAME RECORD\n     VARNAME = SPACE(VARNAME,0)\n     IF RIGHT(VARNAME,1) = '^'\n     THEN DO;\n          PARSE VAR RECORD VALUE RECORD\n          VALUE = SPACE(VALUE,0)\n          VARNAME = LEFT(VARNAME,LENGTH(VARNAME)-1)\n          C = DEFCL.COMP.VARNAME VALUE\n          DEFCL.COMP.VARNAME = STRIP(C)\n          END;\n     ELSE DEFCL.COMP.$KEYWORD = DEFCL.COMP.$KEYWORD VARNAME' '\n  END;\n  RETURN;\n@NODASH:\n   SIGNAL OFF SYNTAX\n  TRECORD = RECORD\n  TEMP1 = ''\n  FDASH = POS('--',TRECORD)\n  DO WHILE FDASH <> 0\n     TEMP1 = TEMP1 LEFT(TRECORD,FDASH-1)\n     TEMP1 = STRIP(TEMP1,'T')'^ '\n     TRECORD = SUBSTR(TRECORD,FDASH)\n     FDASH = VERIFY(TRECORD,'-'); /* FIND NON-DASH */\n     IF FDASH =0 THEN ITERATE;\n     TRECORD = SUBSTR(TRECORD,FDASH)\n     FDASH = POS('--',TRECORD)\n  END;\n  TEMP1 = TEMP1 TRECORD\n  RECORD = SPACE(TEMP1,1)\nRETURN;\n@DUMP:\n   SIGNAL OFF SYNTAX\n  ARG NAME\n  VALUE = VALUE(NAME)\nRETURN;\n@DUMPIT:\n   SIGNAL OFF SYNTAX\n  CARD = ' '\n  CALL @OUTCARD\n  A=DEFCL.$TYPE\n  A=DEFCL.A\n  DEF.A = '*YES*'\n  DO I=1 TO 3\n     A = TYPE.I\n     B = STRIP(DEFCL.$COMP.A)\n     DO WHILE LENGTH(B) > 0\n        PARSE VAR B DATA B\n        B=STRIP(B)\n        I = REF.0+1\n        REF.0 = I\n        REF.I = DATA\n     END\n  END\n  TOCALL = 'CALL @1'DEFCL.$TYPE\n  SIGNAL @DOCALL\nRETURN;\n@1PATH:\n   SIGNAL OFF SYNTAX\n  PATH = 'PATH'\n  CARD = 'DEL 'DEFCL.PATH' PATH'\n  CALL @OUTCARD\n  CARD = 'DEF PATH(-'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,6)'NAME('DEFCL.PATH') -'\n  CALL @OUTCARD\n  AIX='AIX'\n  CARD = LEFT(BLANKS,6)'PATHENTRY('DEFCL.$COMP.AIX') -'\n  CALL @OUTCARD\n  IF POS(' NOUPDATE ',DEFCL.$COMP.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'NOUPDATE -'\n       CALL @OUTCARD\n       END\n  ELSE CARD = LEFT(BLANKS,4)')'\n  CALL @OUTCARD\nRETURN;\n@1CLUSTER:\n   SIGNAL OFF SYNTAX\n  CLUSTER = 'CLUSTER'\n  DATA = 'DATA'\n  INDEX = 'INDEX'\n  BUFSPACE='BUFSPACE'\n  VOLSER='VOLSER'\n  DEFCL.DATA.$KEYWORD = DEFCL.DATA.$KEYWORD' '\n  DEFCL.INDEX.$KEYWORD = DEFCL.INDEX.$KEYWORD' '\n  CARD = 'DEL 'DEFCL.CLUSTER' CLUSTER'\n  CALL @OUTCARD\n  CARD = 'DEF CLUSTER( -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,6)'NAME('DEFCL.CLUSTER') -'\n  CALL @OUTCARD\n  IF DEFCL.DATA.VOLSER = DEFCL.INDEX.VOLSER\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'VOLUMES('DEFCL.DATA.VOLSER') -'\n       CALL @OUTCARD\n       DEFCL.DATA.VOLSER = ''\n       DEFCL.INDEX.VOLSER = ''\n       END;\n  CARD = LEFT(BLANKS,6)'BUFFERSPACE('DEFCL.DATA.BUFSPACE') -'\n  CALL @OUTCARD\n  TEMP1 ='FREESPACE-%CI'\n  TEMP2 ='FREESPACE-%CA'\n  TEMP1 = SPACE(DEFCL.DATA.TEMP1,0)\n  TEMP2 = SPACE(DEFCL.DATA.TEMP2,0)\n  IF TEMP1 <> 0 | TEMP2 <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'FREESPACE('TEMP1 TEMP2') -'\n       CALL @OUTCARD;\n       END;\n  RKP = 'RKP'\n  KEYLEN = 'KEYLEN'\n  IF KEYLEN <> 0\n  THEN DO;\n       A = SPACE(DEFCL.DATA.KEYLEN,0)\n       B = SPACE(DEFCL.DATA.RKP,0)\n       CARD = LEFT(BLANKS,6)'KEYS('A B') -'\n       CALL @OUTCARD;\n       END;\n  MAXLRECL = 'MAXLRECL'\n  AVGLRECL = 'AVGLRECL'\n  A = SPACE(DEFCL.DATA.AVGLRECL,0)\n  B = SPACE(DEFCL.DATA.MAXLRECL,0)\n  CARD = LEFT(BLANKS,6)'RECORDSIZE('A B') -'\n  CALL @OUTCARD\n  PARSE VAR DEFCL.DATA.$KEYWORD . 'SHROPTNS(' SHRX ')' .\n  CARD = LEFT(BLANKS,6)'SHAREOPTIONS('SHRX') -'\n  CALL @OUTCARD\n  IF POS(' REPLICATE ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'REPLICATE -'\n       CALL @OUTCARD;\n       END;\n  IF POS(' IMBED ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'IMBED -'\n       CALL @OUTCARD;\n       END;\n  IF POS(' NONINDEXED ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'NONINDEXED -'\n       CALL @OUTCARD;\n       END;\n  IF POS(' NUMBERED ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'NUMBERED -'\n       CALL @OUTCARD\n       END\n  IF POS(' ORDERED ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'ORDERED -'\n       CALL @OUTCARD\n       END\n  IF POS(' REPLICATE ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'REPLICATE -'\n       CALL @OUTCARD\n       END\n  IF POS(' REUSE ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'REUSE -'\n       CALL @OUTCARD\n       END\n  IF POS(' SPANNED ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'SPANNED -'\n       CALL @OUTCARD\n       END\n  IF POS(' SPEED ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'SPEED -'\n       CALL @OUTCARD\n       END\n  IF POS(' WRITECHK ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'WRITECHECK -'\n       CALL @OUTCARD\n       END\n  CARD = LEFT(BLANKS,4)') -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,4)'DATA( -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,6)'NAME('DEFCL.DATA') -'\n  CALL @OUTCARD\n  IF DEFCL.DATA.VOLSER <> ''\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'VOLUMES('DEFCL.DATA.VOLSER') -'\n       CALL @OUTCARD\n       END;\n  CISIZE='CISIZE'\n  CARD = LEFT(BLANKS,6)'CONTROLINTERVALSIZE('DEFCL.DATA.CISIZE') -'\n  CALL @OUTCARD\n  SPRI='SPACE-PRI'\n  SSEC='SPACE-SEC'\n  STYPE='SPACE-TYPE'\n  A = SPACE(DEFCL.DATA.SPRI,0)\n  B = SPACE(DEFCL.DATA.SSEC,0)\n  C = SPACE(DEFCL.DATA.STYPE,0)\n  CARD = LEFT(BLANKS,6) || C'('A B') -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,4)')'\n  IF POS(' INDEXED ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN CARD = CARD'-'\n  ELSE DO;\n       CALL @OUTCARD\n       RETURN;\n       END;\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,4)'INDEX( -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,6)'NAME('DEFCL.INDEX')-'\n  CALL @OUTCARD\n  IF DEFCL.INDEX.VOLSER <> ''\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'VOLUMES('DEFCL.INDEX.VOLSER') -'\n       CALL @OUTCARD\n       END;\n  CISIZE='CISIZE'\n  CARD = LEFT(BLANKS,6)'CONTROLINTERVALSIZE('DEFCL.INDEX.CISIZE') -'\n  CALL @OUTCARD\n  SPRI='SPACE-PRI'\n  SSEC='SPACE-SEC'\n  STYPE='SPACE-TYPE'\n  A = SPACE(DEFCL.INDEX.SPRI,0)\n  B = SPACE(DEFCL.INDEX.SSEC,0)\n  C = SPACE(DEFCL.INDEX.STYPE,0)\n  CARD = LEFT(BLANKS,6) || C'('A B') -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,4)')'\n  CALL @OUTCARD\nRETURN;\n@1AIX:\n   SIGNAL OFF SYNTAX\n  CLUSTER = 'CLUSTER'\n  AIX = 'AIX'\n  DATA = 'DATA'\n  INDEX = 'INDEX'\n  BUFSPACE='BUFSPACE'\n  VOLSER='VOLSER'\n  DEFCL.DATA.$KEYWORD = DEFCL.DATA.$KEYWORD' '\n  DEFCL.INDEX.$KEYWORD = DEFCL.INDEX.$KEYWORD' '\n  CARD = 'DEL 'DEFCL.AIX' AIX'\n  CALL @OUTCARD\n  CARD = 'DEF ALTERNATEINDEX (-'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,6)'NAME('DEFCL.AIX') -'\n  CALL @OUTCARD\n  SIGNAL ON NOVALUE\n  CARD = LEFT(BLANKS,6)'RELATE('DEFCL.$COMP.CLUSTER') -'\n  SIGNAL OFF NOVALUE\n  CALL @OUTCARD\n  IF DEFCL.DATA.VOLSER = DEFCL.INDEX.VOLSER\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'VOLUMES('DEFCL.DATA.VOLSER') -'\n       CALL @OUTCARD\n       DEFCL.DATA.VOLSER = ''\n       DEFCL.INDEX.VOLSER = ''\n       END;\n  CARD = LEFT(BLANKS,6)'BUFFERSPACE('DEFCL.DATA.BUFSPACE') -'\n  CALL @OUTCARD\n  TEMP1 ='FREESPACE-%CI'\n  TEMP2 ='FREESPACE-%CA'\n  TEMP1 = DEFCL.DATA.TEMP1; TEMP2 = DEFCL.DATA.TEMP2\n  IF TEMP1 <> 0 | TEMP2 <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'FREESPACE('TEMP1 TEMP2') -'\n       CALL @OUTCARD;\n       END;\n  AXRKP = 'AXRKP'\n  KEYLEN = 'KEYLEN'\n  IF KEYLEN <> 0\n  THEN DO;\n       A = SPACE(DEFCL.DATA.KEYLEN,0)\n       B = SPACE(DEFCL.DATA.AXRKP,0)\n       CARD = LEFT(BLANKS,6)'KEYS('A B') -'\n       CALL @OUTCARD;\n       END;\n  MAXLRECL = 'MAXLRECL'\n  AVGLRECL = 'AVGLRECL'\n  A = SPACE(DEFCL.DATA.AVGLRECL,0)\n  B = SPACE(DEFCL.DATA.MAXLRECL,0)\n  CARD = LEFT(BLANKS,6)'RECORDSIZE('A B') -'\n  CALL @OUTCARD\n  IF POS(' ERASE ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'ERASE -'\n       CALL @OUTCARD;\n       END;\n  IF POS(' IMBED ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'IMBED -'\n       CALL @OUTCARD;\n       END;\n  IF POS(' ORDERED ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'ORDERED -'\n       CALL @OUTCARD\n       END\n  IF POS(' REPLICATE ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'REPLICATE -'\n       CALL @OUTCARD\n       END\n  IF POS(' REUSE ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'REUSE -'\n       CALL @OUTCARD\n       END\n  IF POS(' SPEED ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'SPEED -'\n       CALL @OUTCARD\n       END\n  IF POS(' UNIQUEKEY ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'UNIQUEKEY -'\n       CALL @OUTCARD\n       END\n  IF POS(' NOUPGRADE ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'NOUPGRADE -'\n       CALL @OUTCARD\n       END\n  IF POS(' WRITECHK ',DEFCL.DATA.$KEYWORD) <> 0\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'WRITECHECK -'\n       CALL @OUTCARD\n       END\n  CARD = LEFT(BLANKS,4)') -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,4)'DATA( -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,6)'NAME('DEFCL.DATA') -'\n  CALL @OUTCARD\n  IF DEFCL.DATA.VOLSER <> ''\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'VOLUMES('DEFCL.DATA.VOLSER') -'\n       CALL @OUTCARD\n       END;\n  CISIZE='CISIZE'\n  CARD = LEFT(BLANKS,6)'CONTROLINTERVALSIZE('DEFCL.DATA.CISIZE') -'\n  CALL @OUTCARD\n  SPRI='SPACE-PRI'\n  SSEC='SPACE-SEC'\n  STYPE='SPACE-TYPE'\n  A = SPACE(DEFCL.DATA.SPRI,0)\n  B = SPACE(DEFCL.DATA.SSEC,0)\n  C = SPACE(DEFCL.DATA.STYPE,0)\n  CARD = LEFT(BLANKS,6) || C'('A B') -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,4)') -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,4)'INDEX( -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,6)'NAME('DEFCL.INDEX')-'\n  CALL @OUTCARD\n  IF DEFCL.INDEX.VOLSER <> ''\n  THEN DO;\n       CARD = LEFT(BLANKS,6)'VOLUMES('DEFCL.INDEX.VOLSER') -'\n       CALL @OUTCARD\n       END;\n  CISIZE='CISIZE'\n  CARD = LEFT(BLANKS,6)'CONTROLINTERVALSIZE('DEFCL.INDEX.CISIZE') -'\n  CALL @OUTCARD\n  SPRI='SPACE-PRI'\n  SSEC='SPACE-SEC'\n  STYPE='SPACE-TYPE'\n  A = SPACE(DEFCL.INDEX.SPRI,0)\n  B = SPACE(DEFCL.INDEX.SSEC,0)\n  C = SPACE(DEFCL.INDEX.STYPE,0)\n  CARD = LEFT(BLANKS,6) || C'('A B') -'\n  CALL @OUTCARD\n  CARD = LEFT(BLANKS,4)')'\n  CALL @OUTCARD\nRETURN;\n@OUTCARD:\n   SIGNAL OFF SYNTAX\n  PUSH CARD\n  \"EXECIO 1 DISKW DEFINES\"\nRETURN;\nNOVALUE:\n  SAY SIGL\n  SAY SOURCELINE(SIGL)\n  SAY ERRORTEXT(RC)\n  EXIT\nSYNTAX:\n  RETURN;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DEFINES$": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x01!O\\x01\\x01!O\\x14'\\x00@\\x00@\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-08-02T00:00:00", "modifydate": "2001-08-02T14:27:00", "lines": 64, "newlines": 64, "modlines": 0, "user": "SBGOLOB"}, "text": "//TSH009B  JOB (H00000I),'DEFINES',\n//         CLASS=C,\n//         MSGCLASS=X,\n//         NOTIFY=TSH009\n//STEP000  EXEC  PGM=IDCAMS\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n DEL TSH009.IDCAMS.DEFINES\n DEL TSH009.IDCAMS.DEFINES NVSAM NOSCRATCH\n DEL TSH009.IDCAMS.LISTING\n DEL TSH009.IDCAMS.LISTING NVSAM NOSCRATCH\n SET MAXCC=0\n/*\n//*\n//STEP010  EXEC  PGM=IDCAMS\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n LISTC ENT(PRITV.PR.GCR05KSD) ALL OUTFILE(LISTING)\n//LISTING  DD  DSN=TSH009.IDCAMS.LISTING,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=TESTDA,\n//             SPACE=(TRK,(20,10),RLSE),\n//             DCB=(RECFM=VBA,LRECL=137,BLKSIZE=23000)\n//*\n//STEP020  EXEC  PGM=IRXJCL,\n//             REGION=4096K,\n//             PARM='DEFINES'\n//SYSTSPRT DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//IDCAMS   DD  DSN=TSH009.IDCAMS.LISTING,\n//             DISP=SHR\n//IDCAMSO  DD  DSN=*.IDCAMS,\n//             DISP=MOD\n//DEFINES  DD  DSN=TSH009.IDCAMS.DEFINES,\n//             DISP=(NEW,CATLG,DELETE),\n//             UNIT=TESTDA,\n//             SPACE=(TRK,(20,30),RLSE),\n//             DCB=(SYS1.MACLIB,DSORG=PS)\n//SYSIN    DD  DSN=&&SYSIN,\n//             DISP=(NEW,DELETE,DELETE),\n//             UNIT=WORKDA,\n//             SPACE=(TRK,(20,30),RLSE),\n//             DCB=(SYS1.MACLIB,DSORG=PS)\n//SYSUDUMP DD  SYSOUT=*\n//SYSEXEC  DD  DSN=TSH009.REXX.EXEC,\n//             DISP=SHR\n//         DD  DSN=SYS1.LI.CLIST.CNTL,\n//             DISP=SHR\n//SYSTSIN  DD  *\n/*\n//*\n//STEP030  EXEC  PGM=IEBGENER\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DUMMY\n//SYSUT1   DD  DSN=TSH009.IDCAMS.DEFINES,\n//             DISP=SHR\n//SYSUT2   DD  SYSOUT=*\n//*\n//STEP040  EXEC  PGM=IEBGENER\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DUMMY\n//SYSUT1   DD  DSN=TSH009.IDCAMS.LISTING,\n//             DISP=SHR\n//SYSUT2   DD  SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT528/FILE528.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT528", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}