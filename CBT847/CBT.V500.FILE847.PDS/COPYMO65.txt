*          DATA SET CBT990     AT LEVEL 065 AS OF 08/12/03               00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                 00002
**************************************************************           00003
**************************************************************           00004
**                                                          **           00005
**                                                          **           00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **           00007
**                                                          **           00008
**                      Revised by Sam Golob.               **           00009
**                                                          **           00010
**                                                          **           00011
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **           00012
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **           00013
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **           00014
**                                                          **           00015
**     This has been revised, with the many new functions   **           00016
**     that have been added to COPYMODS.  Besides copying   **           00017
**     tapes, COPYMODS can read and measure tapes, as well  **           00018
**     as altering the copied tapes in many ways, such as   **           00019
**     stripping the labels or leading tape marks off.      **           00020
**     The VOLSER and OWNER can be altered in the copied    **           00021
**     tapes, and all labels can also be altered, through   **           00022
**     a process of dumping the labels to a FB-80 file      **           00023
**     (LABLDUMP option), editing the labels, stripping     **           00024
**     the labels in a copy operation (STRIP option), and   **           00025
**     splicing all the labels back in another copy         **           00026
**     operation (LABADDIN option).  COPYMODS can also      **           00027
**     INIT tapes, as many as 16 at a time.  No input tape  **           00028
**     is needed for an INIT operation (INITVOLS option).   **           00029
**                                                          **           00030
**     The different COPYMODS parms or options can be used  **           00031
**     in combination with each other, as long as they      **           00032
**     don't contradict each other.  In certain cases, the  **           00033
**     use of one option will cause the automatic turn-off  **           00034
**     of one or more other options that contradict with    **           00035
**     it.  This "adjustment" is done by the COPYMODS       **           00036
**     program just after it receives the options settings  **           00037
**     back from the PARMCHEK program.  For example, if     **           00038
**     both LABLDUMP and LABADDIN (which contradict each    **           00039
**     other) are set, COPYMODS will make a judgment that   **           00040
**     LABADDIN takes precedence, so it will turn off both  **           00041
**     the LABLDUMP and READ (read only) options.  On the   **           00042
**     other hand, the STRIP and LABLDUMP options do not    **           00043
**     contradict each other.  So in that case, when STRIP  **           00044
**     and LABLDUMP are both set, COPYMODS will dump all    **           00045
**     the labels from the input tape to the LABLDUMP file, **           00046
**     while at the same time, it will strip them from the  **           00047
**     tape copies.  To get the exact effect you want from  **           00048
**     a COPYMODS run, just be very careful to code the     **           00049
**     correct combination of options.  Look at the OPTIONS **           00050
**     report before you mount the tapes.  (The OPTIONS     **           00051
**     report in //SYSPRINT will be complete before the     **           00052
**     tapes are mounted.)                                  **           00053
**                                                          **           00054
**     Up to 132 bytes of the beginning n records of each   **           00055
**     tape file can be dumped in Hex, similarly to the     **           00056
**     way TAPESCAN does it (HEXPRT option).                **           00057
**                                                          **           00058
**     See the "New Features" section below for some more   **           00059
**     details.  See the #MANUAL member of the install pds  **           00060
**     (CBT Tape File 229) for even more details.           **           00061
**                                                          **           00062
**  METHOD: COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S     **           00063
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **           00064
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **           00065
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **           00066
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **           00067
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **           00068
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **           00069
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **           00070
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **           00071
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **           00072
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **           00073
**    PARTICULAR OUTPUT TAPE.                               **           00074
**                                                          **           00075
**  COPYMODS has some optional DD's which will be used      **           00076
**    if they are present.  These following DD's are used   **           00077
**    by the PARMCHEK program, when COPYMODS is executed.   **           00078
**                                                          **           00079
**  //SYSIN    - Extra space to enter PARM keywords.        **           00080
**               Also, the only place to enter the          **           00081
**               "quantity" keywords, which start in        **           00082
**               column 1 of a SYSIN card.                  **           00083
**                                                          **           00084
**         OUTVOLALL=volser      (up to 6 characters)       **           00085
**         TAPEOWNER=owner name  (up to 10 characters)      **           00086
**         FILELIMIT=nnn         (numeric)                  **           00087
**         LABELIMIT=nnn         (numeric)                  **           00088
**         PRINTRCDS=nnn         (numeric)                  **           00089
**                                                          **           00090
**  //PARMREPT - Diagnostic output from the PARMCHEK        **           00091
**               program.  LRECL=133,RECFM=FBA.             **           00092
**                                                          **           00093
**    In addition, the COPYMODS program itself has some     **           00094
**    extra DD's, which are required if the appropriate     **           00095
**    options are set:                                      **           00096
**                                                          **           00097
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **           00098
**               receive the images of all tape labels      **           00099
**               read, together with some control cards     **           00100
**               that COPYMODS generates.  This DD name     **           00101
**               is necessary if the LABLDUMP option is     **           00102
**               in effect.                                 **           00103
**                                                          **           00104
**  //LABADDIN - An FB-80 file, or member of a pds, which   **           00105
**               contains the set of labels to be spliced   **           00106
**               into an NL tape to create an SL tape.      **           00107
**               This DD name is necessary if the LABADDIN  **           00108
**               option of COPYMODS is in effect.  Usually  **           00109
**               the LABADDIN file is a previous result of  **           00110
**               a LABLDUMP operation, or it is an altered  **           00111
**               or edited version of a previously created  **           00112
**               LABLDUMP file.                             **
**                                                          **
**  This program has to be assembled with PARM=BATCH in     **           00113
**    the Assembler EXEC parms.  The entire PARMCHEK        **           00114
**    program has to be included in the assembly, because   **           00115
**    PARMCHEK has to be fitted to the current level of     **           00116
**    the COPYMODS program.                                 **           00117
**                                                          **           00118
**************************************************************           00119
**                                                          **           00120
**  REQUIRED DD NAMES (used by the COPYMODS program):       **           00121
**                                                          **           00122
**  //IN       -  Points to the Input Tape.  Only not       **           00123
**                required in a tape init operation, if     **           00124
**                the INITVOLS option is in effect.         **           00125
**                Otherwise, //IN is always required.       **           00126
**                                                          **           00127
**  //OUT1 thru - Any of these 16 DD names can be coded.    **           00128
**  //OUT16       These are for the output tapes.  These    **           00129
**                are not required if the READ (readonly)   **           00130
**                option is in effect.  Any one of these    **           00131
**                16 possible DD names may be coded, even   **           00132
**                if some numbers have been skipped.  For   **           00133
**                instance, if you have one output tape,    **           00134
**                it may be defined by //OUT13.  It is      **           00135
**                not necessary to code //OUT1.             **           00136
**                                                          **           00137
**  //SYSPRINT  - The output dataset to contain all the     **           00138
**                COPYMODS operation information that was   **           00139
**                called for by the various options set,    **           00140
**                including the OPTIONS display itself.     **           00141
**                This dataset should be LRECL=133,         **           00142
**                RECFM=FBA.                                **           00143
**                                                          **           00144
**************************************************************           00145
**                                                          **           00146
**  PROGRAM STRUCTURE:                                      **           00147
**                                                          **           00148
**  This program is no longer a single CSECT as it was in   **           00149
**    the old days.  There are now the following CSECTs,    **           00150
**    which should all be assembled together:               **           00151
**                                                          **           00152
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **           00153
**                                                          **           00154
**   COPYMODS - The main processing module, which contains  **           00155
**              most of the tape copy/reading processing.   **           00156
**                                                          **           00157
**   TRTCSECT - The translate tables for Hex printing of    **           00158
**              tape records.                               **           00159
**                                                          **           00160
**   COPYMOPT - The separate routine which reads the PARM   **           00161
**              bits that have been set, and which prints   **           00162
**              a report in SYSPRINT showing the options    **           00163
**              that are in effect.                         **           00164
**                                                          **           00165
**   PARMCHEK - All the PARM and SYSIN input processing is  **           00166
**              done here.  PARM bits are passed back to    **           00167
**              COPYMODS in R1, the User Area is passed     **           00168
**              back to COPYMODS in R2.                     **           00169
**                                                          **           00170
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **           00171
**              program, this table contains all the option **           00172
**              bit meanings and their default settings.    **           00173
**                                                          **           00174
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **           00175
**  but they must be coordinated, and at the same level, so **           00176
**  to be safe, they should always be assembled together.   **           00177
**                                                          **           00178
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **           00179
**                                                          **           00180
**  GENERAL OUTLINE OF PROGRAM CALLS                        **           00181
**  ------- ------- -- ------- -----                        **           00182
**                                                          **           00183
**  COPYMODS is the first program to get control.  The      **           00184
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **           00185
**  and the entry locations are stored in fullwords for     **           00186
**  later use.                                              **           00187
**                                                          **           00188
**  PARMCHEK is immediately called, and it opens //SYSIN    **           00189
**  if that ddname is present.  If //PARMREPT is present,   **           00190
**  it is also used by the PARMCHEK program.                **           00191
**                                                          **           00192
**  After PARMCHEK has returned all parm bit settings to    **           00193
**  COPYMODS and all user-quantities, the settings are      **           00194
**  examined by COPYMODS and inconsistent settings are      **           00195
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **           00196
**  has to be turned off, because only one of these can be  **           00197
**  done in one run.  These inconsistencies are all fixed,  **           00198
**  and then COPYMODS processing starts.                    **           00199
**                                                          **           00200
**  COPYMOPT is called to display all the options that have **           00201
**  been set, if the OPTION parm has been set.  This is     **           00202
**  done to //SYSPRINT.  If any adjustments of options have **           00203
**  been made, you can see the final result in the SYSPRINT **           00204
**  report that has been produced by COPYMOPT.              **           00205
**                                                          **           00206
**  A significant note is, that the PARMREPT contains the   **           00207
**  options as they have been set by the PARMCHEK program,  **           00208
**  with no alteration.  The COPYMOPT call, which produces  **           00209
**  the OPTIONS display in //SYSPRINT, occurs after the     **           00210
**  adjustments for inconsistent parm settings has been     **           00211
**  made by COPYMODS, so you can see the effect of those    **           00212
**  adjustments by comparing these two reports against      **           00213
**  each other.                                             **           00214
**                                                          **           00215
**  After that, COPYMODS does its things, depending on the  **           00216
**  options that have been set.  Most of the processing is  **           00217
**  done in the COPYMODS csect, except for the HEXPRT       **           00218
**  option, where the translation tables are in the         **           00219
**  TRTCSECT csect.                                         **           00220
**                                                          **           00221
**************************************************************           00222
**                                                          **           00223
**  NEW FEATURES ADDED BY SAM GOLOB:                        **           00224
**                                                          **           00225
**                                                          **           00226
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **           00227
**                                                          **           00228
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **           00229
**                                                          **           00230
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **           00231
**       BE CORRECTLY COPIED.                               **           00232
**                                                          **           00233
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **           00234
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **           00235
**       FOUND ON THE INPUT TAPE.                           **           00236
**                                                          **           00237
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **           00238
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **           00239
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **           00240
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **           00241
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **           00242
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **           00243
**       MAIN SOURCE CODE.                                  **           00244
**                                                          **           00245
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **           00246
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **           00247
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **           00248
**       INVOKE THIS ACTION.                                **           00249
**                                                          **           00250
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **           00251
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **           00252
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **           00253
**                                                          **           00254
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **           00255
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **           00256
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **           00257
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **           00258
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **           00259
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **           00260
**                                                          **           00261
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **           00262
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **           00263
**                                                          **           00264
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **           00265
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **           00266
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **           00267
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **           00268
**       SERVICE.                                           **           00269
**                                                          **           00270
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **           00271
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **           00272
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **           00273
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **           00274
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **           00275
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **           00276
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **           00277
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **           00278
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **           00279
**                                                          **           00280
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **           00281
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **           00282
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **           00283
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **           00284
**                                                          **           00285
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **           00286
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **           00287
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **           00288
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **           00289
**                                                          **           00290
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **           00291
**       TAPEOWNER=xxxxxxxxxx                               **           00292
**       FILELIMIT=nnnn                                     **           00293
**       LABELIMIT=nnnn                                     **           00294
**       PRINTRCDS=nnnn                                     **           00295
**         or                                               **           00296
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **           00297
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **           00298
**                                                          **           00299
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **           00300
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **           00301
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **           00302
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **           00303
**                                                          **           00304
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **           00305
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **           00306
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **           00307
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **           00308
**       IN THE EXTERNAL LABEL DATASET.                     **           00309
**                                                          **           00310
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **           00311
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **           00312
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **           00313
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **           00314
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **           00315
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **           00316
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **           00317
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **           00318
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **           00319
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **           00320
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **           00321
**                                                          **           00322
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **           00323
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **           00324
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **           00325
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **           00326
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **           00327
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **           00328
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **           00329
**       DATA FILE HAS BEEN WRITTEN.                        **           00330
**                                                          **           00331
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **           00332
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **           00333
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **           00334
**       EXTERNAL LABEL DATASET.                            **           00335
**                                                          **           00336
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **           00337
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **           00338
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **           00339
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **           00340
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **           00341
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **           00342
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **           00343
**       THE HDR2.                                          **           00344
**                                                          **           00345
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **           00346
**       INPUT TAPE.  USE A PARM OF INITVOLS.               **           00347
**                                                          **           00348
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **           00349
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **           00350
**       IN A SYSIN CARD.                                   **           00351
**                                                          **           00352
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **           00353
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **           00354
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **           00355
**       IS INTERPRETED AS SL FILES.  IF NOT, THEN IT IS    **           00356
**       INTERPRETED AS NL.                                 **           00357
**                                                          **           00358
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **           00359
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **           00360
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **           00361
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **           00362
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **           00363
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **           00364
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **           00365
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **           00366
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **           00367
**       BYTE TOTALS COMING FROM DATA FILES.                **           00368
**                                                          **           00369
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **           00370
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **           00371
**       TO PRINT THEM.)                                    **           00372
**                                                          **           00373
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **           00374
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **           00375
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **           00376
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).                 **           00377
**                                                          **           00378
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **           00379
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **           00380
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **           00381
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **           00382
**       DATA BLOCKS ON THE TAPE.                           **           00383
**                                                          **           00384
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **           00385
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **           00386
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **           00387
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **           00388
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **           00389
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **           00390
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **           00391
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **           00392
**       THESE WILL STILL BE STRIPPED OFF.  IF FILE         **           00393
**       LIMITING IS IN EFFECT, THEN THE INPUT TAPE IS      **           00394
**       ASSUMED TO BE SL, AND THE NUMBER CODED IN THE      **           00395
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **           00396
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **           00397
**       INPUT TAPE.                                        **           00398
**                                                          **           00399
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **           00400
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **           00401
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **           00402
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **           00403
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **           00404
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **           00405
**                                                          **           00406
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **           00407
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **           00408
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **           00409
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **           00410
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **           00411
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **           00412
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **           00413
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **           00414
**                                                          **           00415
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **           00416
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **           00417
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **           00418
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **           00419
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **           00420
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **           00421
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **           00422
**                                                          **           00423
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **           00424
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **           00425
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **           00426
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **           00427
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **           00428
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **           00429
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **           00430
**                                                          **           00431
**************************************************************           00432
         EJECT                                                           00433
**************************************************************           00434
**  CHANGE LOG:                                             **           00435
**                                                          **           00436
** LEVEL 003                                                **           00437
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS        SBG 03/00 **           00438
**                                                          **           00439
** LEVEL 004                                                **           00440
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER   SBG 03/00 **           00441
**             A HEADER LABEL.  THIS MEANS AN SL  SBG 03/00 **           00442
**             FILE WITHOUT ANY DATA IN IT.  AND  SBG 03/00 **           00443
**             IF THIS IS THE CASE, DON'T STOP    SBG 03/00 **           00444
**             COPYING FILES.                     SBG 03/00 **           00445
**                                                          **           00446
** LEVEL 005                                                **           00447
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE     SBG 03/00 **           00448
**             R12,R11.                           SBG 03/00 **           00449
**                                                          **           00450
** LEVEL 006                                                **           00451
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP   SBG 03/00 **           00452
**             TO 16 OUTPUT TAPES FROM OUT1 TO    SBG 03/00 **           00453
**             OUT16.                             SBG 03/00 **           00454
**                                                          **           00455
** LEVEL 007 AND 008                                        **           00456
**  03/14/00 - CLEANED UP SPELLING ON ERROR       SBG 03/00 **           00457
**             MESSAGES AND FIXED DOCUMENTATION.  SBG 03/00 **           00458
**             ADDED EYECATCHERS COSMETICALLY.    SBG 03/00 **           00459
**                                                          **           00460
** LEVEL 009                                                **           00461
**  03/21/00 - STOP AFTER INITTED MVS TAPE        SBG 03/00 **           00462
**                                                          **           00463
** LEVEL 010                                                **           00464
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS  SBG 03/00 **           00465
**             FOR BLOCK SIZES FROM 32K TO 64K.   SBG 03/00 **           00466
**                                                          **           00467
**             I MADE AN ATTEMPT TO COPY DOS/VSE  SBG 03/00 **           00468
**             TAPES THAT HAVE LEADING TAPE       SBG 03/00 **           00469
**             MARKS.  THERE IS A CHOICE TO       SBG 03/00 **           00470
**             EITHER COPY ALL THE LEADING        SBG 03/00 **           00471
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO SBG 03/00 **           00472
**             DISCARD THEM ALL.  YOU USE A PARM  SBG 03/00 **           00473
**             OF LTMSKIP TO DISCARD LEADING      SBG 03/00 **           00474
**             TAPEMARKS, AND ANY OTHER PARM, OR  SBG 03/00 **           00475
**             NO PARM, WILL CAUSE THE PROGRAM TO SBG 03/00 **           00476
**             COPY THEM TO THE OUTPUT TAPES.     SBG 03/00 **           00477
**                                                          **           00478
** LEVEL 011                                                **           00479
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE  SBG 03/00 **           00480
**             BY ENDING THE JOB NORMALLY AFTER   SBG 03/00 **           00481
**             ONE TAPEMARK.                      SBG 03/00 **           00482
**                                                SBG 03/00 **           00483
**             IF VOL1 LABEL IS DETECTED, THEN    SBG 03/00 **           00484
**             PUT OUT A MESSAGE SAYING SO, AND   SBG 03/00 **           00485
**             INDICATING THE VOLSER THAT WAS     SBG 03/00 **           00486
**             FOUND.  THIS PROGRAM WAS WRITTEN   SBG 03/00 **           00487
**             ORIGINALLY WITH THE INTENT OF      SBG 03/00 **           00488
**             HANDLING NL TAPES, SO THAT THE     SBG 03/00 **           00489
**             CONDITIONS WHICH RESULT FROM       SBG 03/00 **           00490
**             HAVING SL TAPES, HAD TO BE         SBG 03/00 **           00491
**             ACCOUNTED FOR LATER.               SBG 03/00 **           00492
**                                                          **           00493
** LEVEL 012                                                **           00494
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2       SBG 04/00 **           00495
**             HAVING ONLY ONE TAPE MARK AFTER              **           00496
**             THEM.                                        **           00497
**                                                          **           00498
** LEVEL 013                                                **           00499
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD    SBG 04/00 **           00500
**             LABEL TYPES, AND THE SETTING OF              **           00501
**             FLAGS TO INDICATE EACH TYPE.                 **           00502
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **           00503
**             MOVE NON-LABEL-RELATED FLAGS OUT             **           00504
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **           00505
**             EASY PRINTING OF LABEL CONTENTS,             **           00506
**             BUT NO EXTRA PRINTING IS DONE AT             **           00507
**             THIS LEVEL.                                  **           00508
**                                                          **           00509
** LEVEL 014                                                **           00510
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN      SBG 05/00 **           00511
**             PARM SCANNER THAT IS EASY TO                 **           00512
**             MODIFY, AND TO SUPPLY SYNONYMS               **           00513
**             FOR THE PARMS.  ADDED SUPPORT,               **           00514
**             VIA THE LBLINFO PARM, TO PRINT               **           00515
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **           00516
**             EOV2 LABEL INFORMATION, IF IT IS             **           00517
**             FOUND ON THE INPUT TAPE.  THAT IS,           **           00518
**             IF THE INPUT TAPE IS SL.                     **           00519
**                                                          **           00520
**             FOR A LIST OF PERMISSIBLE PARMS,             **           00521
**             SEE LABEL PARMTABL.                          **           00522
**                                                          **           00523
** LEVEL 015                                                **           00524
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00525
**             TO TURN OFF A PARM FLAG AS WELL AS           **           00526
**             THE ABILITY TO TURN IT ON. INCREASED         **           00527
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **           00528
**             BYTE.                                        **           00529
**                                                          **           00530
** LEVEL 016                                                **           00531
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00532
**             TO SET ANY PARM SETTING AS A                 **           00533
**             DEFAULT.  A SETTING FOR A DEFAULT            **           00534
**             ENTRY THAT IS LATER IN THE TABLE,            **           00535
**             WILL OVERRIDE A SETTING FOR A                **           00536
**             DEFAULT THAT WAS SET EARLIER IN THE          **           00537
**             TABLE.  SETTING A PARM EXPLICITLY            **           00538
**             IN THE JCL, WILL OVERRIDE ANY                **           00539
**             DEFAULT SETTING FOR THAT PARM.               **           00540
**                                                          **           00541
** LEVEL 017                                                **           00542
**  05/11/00 - USED THE PARM SCANNER TO MAKE A    SBG 05/00 **           00543
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **           00544
**             KINDS OF TAPE LABELS.  IF YOU WANT           **           00545
**             ALL OF THEM, YOU JUST HAVE A PARM            **           00546
**             THAT THROWS ALL OF THE FLAGS.  ALL           **           00547
**             OF THIS IS CODED IN PARMTABL AND             **           00548
**             THE FLAGS ARE USED IN PRTXXX1 AND            **           00549
**             PRTXXX2.                                     **           00550
**                                                          **           00551
** LEVEL 018                                                **           00552
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE  SBG 05/00 **           00553
**             VOLSER OF THE COPIED TAPES, TO               **           00554
**             MATCH THE VOLSER INDICATED IN THE            **           00555
**             OUTXX DD NAMES.  THIS IS DONE WITH           **           00556
**             THE CHGVOL PARM KEYWORD.  THIS               **           00557
**             ACTION ONLY OCCURS IF THE INPUT              **           00558
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **           00559
**             DETECTED.  THE COPIED VOL1 LABEL             **           00560
**             IS ALTERED BEFORE THE WRITE.                 **           00561
**                                                          **           00562
** LEVEL 019                                                **           00563
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1    SBG 06/00 **           00564
**             AND EOV2 LABELS THAT ARE IN THE              **           00565
**             MIDDLE OF A TAPE.  OF COURSE THIS            **           00566
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **           00567
**             CAN HAPPEN WHEN YOU COPY FILES               **           00568
**             WITH THE COPYFILE PROGRAM, FROM              **           00569
**             THE END OF ONE TAPE, TO THE                  **           00570
**             BEGINNING OR THE MIDDLE OF                   **           00571
**             ANOTHER.  COPYFILE HAS NOT BEEN              **           00572
**             FIXED AS YET NOT TO DO THIS, BUT IT          **           00573
**             COPIES THE EOV LABELS AS IS.  THIS           **           00574
**             NEW OPTION IS CALLED EOVCHG OR               **           00575
**             EOV2EOF; THE EOV LABELS ARE                  **           00576
**             CHANGED (IN THE COPIED TAPES) TO             **           00577
**             EOF, AND A MESSAGE IS WRITTEN THAT           **           00578
**             REPORTS THIS FACT.                           **           00579
**                                                          **           00580
** LEVEL 020                                                **           00581
**  06/29/00 - ADDED THE PARM OF READ OR READONLY SBG 06/00 **           00582
**             TO ALLOW A RUN OF COPYMODS THAT              **           00583
**             JUST READS THE INPUT TAPE, AND DOES          **           00584
**             NOT MAKE COPIES.                             **           00585
**                                                          **           00586
** LEVEL 021                                                **           00587
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY     SBG 07/00 **           00588
**             IEHINITTED TAPES.                            **           00589
**                                                          **           00590
** LEVEL 022                                                **           00591
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD SBG 09/00 **           00592
**             LABELS FROM A TAPE, TO AN FB-80              **           00593
**             OUTPUT FILE.  PARM IS LABLDUMP.              **           00594
**                                                          **           00595
** LEVEL 023                                      SBG 09/00 **           00596
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **           00597
**             ONLY IMPLEMENTATION SO FAR IS TO             **           00598
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **           00599
**             SAME VALUE, BUT NOT NECESSARILY TO           **           00600
**             WHAT IS IN THE OUTX  DD CARD.  IN            **           00601
**             ORDER TO USE THE FACILITY, YOU HAVE          **           00602
**             TO CODE                                      **           00603
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **           00604
**             OF THE SYSIN CARD FILE.  IF THERE            **           00605
**             ARE NO VALID OUTVOLALL= CARDS IN             **           00606
**             SYSIN, THEN THE EFFECT IS THE SAME           **           00607
**             AS CODING CHGVOL.                            **           00608
**                                                          **           00609
**             FIXED LABEL DUMP OPTION SO THAT THE          **           00610
**             DUMPED LABELS HAVE CONTROL CARDS             **           00611
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **           00612
**             FUNCTION IN LEVEL 24 NEEDS THESE             **           00613
**             CONTROL CARDS.                               **           00614
**                                                          **           00615
** LEVEL 024                                      SBG 09/00 **           00616
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **           00617
**             OUTPUT COPIES FROM NL INPUT AND A            **           00618
**             SET OF LABELS CREATED BY LABLDUMP.           **           00619
**             CHANGED THE DCB NAMES AND DD CARDS           **           00620
**             AND OPTION NAMES FOR LABEL DUMP AND          **           00621
**             RESTORE.                                     **           00622
**                                                          **           00623
**             CHANGED PROGRAM INITIALIZATION TO            **           00624
**             A STANDARD FORM.  GOT RID OF PRIME           **           00625
**             AND TERME MACROS.  HAVE 5 BASE               **           00626
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **           00627
**                                                          **           00628
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **           00629
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **           00630
**             LABELS ON AN SL TAPE, AND WON'T              **           00631
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **           00632
**             TAPE IS SL, ACCIDENTALLY.                    **           00633
**                                                          **           00634
** LEVEL 025                                      SBG 09/00 **           00635
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **           00636
**             SYSIN AND SEARCH FOR ALL PARMS.              **           00637
**                                                          **           00638
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **           00639
**             BE USED.                                     **           00640
**                                                          **           00641
**             ANY CARD IN SYSIN WHICH IS NOT A             **           00642
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **           00643
**                TAPEOWNER=xxxxxxxxxx                      **           00644
**                FILELIMIT=nnnn                            **           00645
**                LABELIMIT=nnnn                            **           00646
**                PRINTRCDS=nnnn                            **           00647
**                  or                                      **           00648
**                OUTVOLALL=volser ,                        **           00649
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **           00650
**             AND ANY PARM THAT IS CODED IN THE            **           00651
**             PARM TABLE, CAN BE CODED IN SYSIN,           **           00652
**             AND IT WILL OVERRIDE THE PARM IN             **           00653
**             THE EXEC CARD (SINCE SYSIN IS                **           00654
**             SCANNED LATER IN THE PROCESSING).            **           00655
**                                                          **           00656
**             INCLUDED A BLOCK COUNT CORRECTION AS         **           00657
**             DEFAULT, WHEN WRITING STANDARD LABELS        **           00658
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **           00659
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **           00660
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **           00661
**                                                          **           00662
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **           00663
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **           00664
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **           00665
**             THE CONTENTS OF STANDARD LABELS FOUND        **           00666
**             WHEN COPYING AN INPUT TAPE.                  **           00667
**                                                          **           00668
** LEVEL 026                                      SBG 09/00 **           00669
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00670
**             RESPECT CHGVOL AND OUTVOLALL= .              **           00671
**                                                          **           00672
** LEVEL 027                                      SBG 09/00 **           00673
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00674
**             BE ABLE TO DO EOV2EOF PROCESSING             **           00675
**                                                          **           00676
** LEVEL 028                                      SBG 09/00 **           00677
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **           00678
**             STANDARD USER LABEL SUPPORT.                 **           00679
**                                                          **           00680
** LEVEL 029                                      SBG 09/00 **           00681
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **           00682
**             STANDARD USER LABELS.                        **           00683
**                                                          **           00684
** LEVEL 030                                      SBG 09/00 **           00685
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **           00686
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **           00687
**             OUTPUT TAPES, DURING THE COPY.               **           00688
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **           00689
**                                                          **           00690
**             FIXED THE EYECATCHERS A BIT.                 **           00691
**                                                          **           00692
**             AGAIN FIXED COPY OF INITTED TAPES.           **           00693
**                                                          **           00694
** LEVEL 031                                      SBG 09/00 **           00695
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **           00696
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **           00697
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **           00698
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **           00699
**                                                          **           00700
** LEVEL 032                                      SBG 10/00 **           00701
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **           00702
**             LABADDIN PROCESSING WHEN THERE ARE           **           00703
**             MORE LABELS IN THE EXTERNAL LABEL            **           00704
**             DATASET, THAN THERE ARE NL FILES             **           00705
**             IN THE INPUT TAPE.  DEFAULT IS TO            **           00706
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **           00707
**             SAYS TO STOP AT THE END OF NL FILES          **           00708
**             AND NOT WRITE NULL SL FILES TO               **           00709
**             CORRESPOND TO THE EXTRA EXTERNAL             **           00710
**             LABELS.                                      **           00711
**                                                          **           00712
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **           00713
**             OF WRITING AN EXTRA HEADER LABEL SET,        **           00714
**             AND THEN BACKING OVER IT AND CLOSING.        **           00715
**                                                          **           00716
** LEVEL 033                                      SBG 10/00 **           00717
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **           00718
**             PROCESSING WHEN THE LAST LABEL SET           **           00719
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **           00720
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **           00721
**             A HDR2 LABEL IN THE LAST LABEL SET,          **           00722
**             AND COPYMODS (WITH LBLFIX ON) WILL           **           00723
**             ACT AS IF AN ENDOFLABELHEADER CARD           **           00724
**             WERE THERE (SO IT WRITES A TAPEMARK          **           00725
**             AND THE DATA AND A TAPEMARK), AND IT         **           00726
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **           00727
**             PLUS THE MEASURED BLOCK COUNTS FROM          **           00728
**             THE DATA FILE.  AN EOF2 IS COPIED            **           00729
**             FROM THE EXISTING HDR2 AND EOF IS            **           00730
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **           00731
**             THE END.                                     **           00732
**                                                          **           00733
** LEVEL 034                                      SBG 10/00 **           00734
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **           00735
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **           00736
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **           00737
**             THE CLOSE.  THIS LETS THE CLOSE DO           **           00738
**             THE REWIND, AND LEAVES THE WRITTEN           **           00739
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **           00740
**             THAT WAS INCOMPLETELY WRITTEN IS             **           00741
**             NOT ERASED.                                  **           00742
**                                                          **           00743
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **           00744
**             CONDITION IS FLAGGED WITH A PROPER           **           00745
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **           00746
**             FOR THAT DRIVE IS BYPASSED.                  **           00747
**                                                          **           00748
**             THIS PROBLEM HAS EXISTED SINCE THE           **           00749
**             FIRST VERSION OF THIS PROGRAM.               **           00750
**                                                          **           00751
**             CAREFUL TO FLAG ALL THE EXTRA DD             **           00752
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **           00753
**             THESE ARE THE OPENDFLG SETTINGS.             **           00754
**                                                          **           00755
** LEVEL 035                                      SBG 10/00 **           00756
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **           00757
**             TAPES, BY NOT REUSING THE WRITE              **           00758
**             IOB WITHOUT REFRESHING THE PARTS             **           00759
**             THAT ARE USED BY IOS.  THIS IS THE           **           00760
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **           00761
**                                                          **           00762
**             LABLDUMP OF AN IEHINITTED TAPE               **           00763
**             PRODUCES AN ENDOFLABELHEADERINIT             **           00764
**             CARD, IN ANTICIPATION OF CREATING            **           00765
**             A TAPE INITIALIZATION ROUTINE FROM           **           00766
**             EXTERNAL LABELS.  (INITVOLS IN THE           **           00767
**             NEXT LEVEL, IS BETTER.)                      **           00768
**                                                          **           00769
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **           00770
**                                                          **           00771
** LEVEL 036                                      SBG 10/00 **           00772
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **           00773
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **           00774
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **           00775
**             ALSO CHANGE TAPE OWNER INFORMATION           **           00776
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **           00777
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **           00778
**                                                          **           00779
**             TO INIT TAPES WITH NO INPUT TAPE,            **           00780
**             USE A PARM OF INITVOLS.                      **           00781
**                                                          **           00782
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **           00783
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **           00784
**                                                          **           00785
**             CONSOLIDATED CHGVOL CODE INTO A              **           00786
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **           00787
**                                                          **           00788
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **           00789
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **           00790
**             STEPPING ON EACH OTHER.                      **           00791
**                                                          **           00792
** LEVEL 037                                      SBG 10/00 **           00793
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **           00794
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **           00795
**             NL TAPES ON THE INPUT TAPE.  IF THE          **           00796
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **           00797
**             IS MULTIPLIED BY 3, AND THE BIGGER           **           00798
**             VALUE IS USED.                               **           00799
**                                                          **           00800
**             COPYMODS WILL ONLY COPY INPUT TAPE           **           00801
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **           00802
**             VALUE, IF THERE IS ONE.                      **           00803
**                                                          **           00804
**             INTERNALLY, THE FILELIMIT= KEYWORD           **           00805
**             SETS THE PARM VALUE OF LIMFILE OR            **           00806
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **           00807
**             THE PROGRAM ACTION.                          **           00808
**                                                          **           00809
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **           00810
**             PROGRAM COUNTS BYTES READ FROM THE           **           00811
**             INPUT TAPE FILES, AND TOTALS THEM AT         **           00812
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **           00813
**             THIS ACTION.                                 **           00814
**                                                          **           00815
** LEVEL 038                                      SBG 11/00 **           00816
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **           00817
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **           00818
**             RUNNING BYTE TOTALS AS WELL AS THE           **           00819
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **           00820
**             FILES.                                       **           00821
**                                                          **           00822
** LEVEL 039                                      SBG 11/00 **           00823
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **           00824
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **           00825
**             THEREFORE WE HAVE PARMFLG1 THRU              **           00826
**             PARMFLG5 TO USE AS OPTION BYTES.             **           00827
**                                                          **           00828
** LEVEL 040                                      SBG 11/00 **           00829
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **           00830
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **           00831
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **           00832
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **           00833
**             AND I WANT TO BE ABLE TO MATCH THEIR         **           00834
**             COUNT, SO A USER WILL BE ABLE TO             **           00835
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **           00836
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **           00837
**                                                          **           00838
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **           00839
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **           00840
**             NOT INITTING TAPES, YOU DON'T GET AN         **           00841
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **           00842
**             WHAT TO DO.                                  **           00843
**                                                          **           00844
** LEVEL 041                                      SBG 11/00 **           00845
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **           00846
**             OF LABEL SETS IN THE LABADDIN FILE           **           00847
**             THAT COPYMODS WILL PROCESS.  EVEN            **           00848
**             IF THE LABADDIN FILE CONTAINS MANY           **           00849
**             LABEL SETS, THE NUMBER PROCESSED WILL        **           00850
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **           00851
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **           00852
**                                                          **           00853
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **           00854
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **           00855
**             THE LABADDIN FILE, AND CONSIDERS THE         **           00856
**             FILE TO END AFTER NNN OF THEM.               **           00857
**                                                          **           00858
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **           00859
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **           00860
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **           00861
**             THIS CHOPS PROCESSING OFF TOO SOON           **           00862
**             WHEN EOV LABELS ARE PRESENT.                 **           00863
**                                                          **           00864
** LEVEL 042                                      SBG 11/00 **           00865
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **           00866
**             BAL R7, AND USED R6 AS SIXTH BASE            **           00867
**             REGISTER.                                    **           00868
**                                                          **           00869
** LEVEL 043                                      SBG 11/00 **           00870
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **           00871
**             "OPTION" PARAMETER.  CALL IS TO A            **           00872
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **           00873
**             PROGRAM COPYMOPT SHOULD BE BATCH             **           00874
**             ASSEMBLED AND LINKEDITED WITH                **           00875
**             THE COPYMODS PROGRAM.                        **           00876
**                                                          **           00877
**             CHANGED THE WORDING OF SOME OF THE           **           00878
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **           00879
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **           00880
**                                                          **           00881
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **           00882
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **           00883
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **           00884
**             LABADDIN WAS IN EFFECT.                      **           00885
**                                                          **           00886
** LEVEL 044                                      SBG 12/00 **           00887
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **           00888
**                                                          **           00889
** LEVEL 045                                      SBG 12/00 **           00890
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **           00891
**             COMPLETION OF THE COPY. SUPPWTO.             **           00892
**                                                          **           00893
** LEVEL 046                                      SBG 12/00 **           00894
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **           00895
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **           00896
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **           00897
**             TO HI ORDER FIELD WHEN DOING BLOCK           **           00898
**             COUNT CORRECTION.                            **           00899
**                                                          **           00900
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **           00901
**                                                          **           00902
** LEVEL 047                                      SBG 12/00 **           00903
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **           00904
**             DUMP OF TAPES WHICH CONTAIN LARGE            **           00905
**             NUMBERS OF DATA RECORDS.  IF THE             **           00906
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **           00907
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **           00908
**                                                          **           00909
** LEVEL 048                                      SBG 05/02 **           00910
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **           00911
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **           00912
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **           00913
**             IS THERE IN THE JCL, THEN OPEN IT.           **           00914
**                                                          **           00915
** LEVEL 049                                      SBG 05/02 **           00916
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **           00917
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **           00918
**             BYTE COUNTS AND DATA BYTE COUNTS,            **           00919
**             INSTEAD OF TOTAL BYTE COUNTS.                **           00920
**                                                          **           00921
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE   SBG 10/02 **           00922
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **           00923
**             EACH LABEL.  IT DOES NOT MATTER              **           00924
**             WHERE THE LABELS ARE, IN THE INPUT           **           00925
**             TAPE--THEY WILL BE STRIPPED OFF THE          **           00926
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **           00927
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **           00928
**             NUMBER IS MULTIPLIED BY 3, AND THE           **           00929
**             COPYING IS CUT OFF AFTER 3*nnn,              **           00930
**             TREATED AS BLP, ON THE INPUT TAPE.           **           00931
**                                                          **           00932
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **           00933
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **           00934
**             COPYMODS TRIES TO DETECT WHETHER THE         **           00935
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **           00936
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **           00937
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **           00938
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **           00939
**             WE CAN NOW FORCE THE nnn TO BE               **           00940
**             INTERPRETED AS NL USING THE NLLIM            **           00941
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **           00942
**             INTERPRETED AS 3*nnn USING THE SLLIM         **           00943
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **           00944
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **           00945
**             OTHER KEYWORD IS ALSO CODED.                 **           00946
**                                                          **           00947
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **           00948
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **           00949
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **           00950
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **           00951
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **           00952
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **           00953
**             DURING THE WRITE OF THE TAPE MARK.           **           00954
**                                                          **           00955
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **           00956
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **           00957
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **           00958
**             BEFORE ISSUING ABEND 069.                    **           00959
**                                                          **           00960
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **           00961
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **           00962
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **           00963
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **           00964
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **           00965
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **           00966
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **           00967
**             SYSPRINT DATASET.                            **           00968
**                                                          **           00969
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **           00970
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **           00971
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **           00972
**                                                          **           00973
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **           00974
**             OF THE MAIN CSECT.                           **           00975
**                                                          **           00976
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **           00977
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **           00978
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **           00979
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **           00980
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **           00981
**             PARM SCAN IN DETAIL.                         **           00982
**                                                          **           00983
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **           00984
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **           00985
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **           00986
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **           00987
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **           00988
**                                                          **           00989
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **           00990
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **           00991
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **           00992
**             PROGRAM AND NOT BY COPYMODS.                 **           00993
**                                                          **           00994
**             QUANTITIES YIELDED BY THE PARMCHEK PROGRAM   **           00995
**             ARE PASSED BACK TO COPYMODS IN R2, TO THE    **           00996
**             USER AREA THAT COMES AFTER THE STRTVALU      **           00997
**             LABEL.  IN BOTH PROGRAMS, COPYMODS AND       **           00998
**             PARMCHEK, THE CODE FROM THE STRTVALU TO THE  **           00999
**             ENDVALUE LABELS HAS TO BE IDENTICAL AND      **           01000
**             MATCHING, IN ALL ITS LABELS AND QUANTITIES.  **           01001
**                                                          **           01002
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **           01003
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **           01004
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **           01005
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **           01006
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **           01007
**             TAPES--TO FIGURE OUT HOW SHORT....           **           01008
**                                                          **           01009
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **           01010
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **           01011
**             POSSIBLE.                                    **           01012
**                                                          **           01013
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **           01014
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **           01015
**             IN ERROR.                                    **           01016
**                                                          **           01017
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **           01018
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **           01019
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **           01020
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **           01021
**                                                          **           01022
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **           01023
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **           01024
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **           01025
**                                                          **           01026
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **           01027
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **           01028
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **           01029
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **           01030
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **           01031
**             PROGRAM.                                     **           01032
**                                                          **           01033
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **           01034
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **           01035
**                                                          **           01036
** LEVEL 062 - FIX DOC A BIT MORE.                          **           01037
**             TEN PARM BITS INSTEAD OF FIVE.               **           01038
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK      **           01039
**                                                          **           01040
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **           01041
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **           01042
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **           01043
**             OCCURRED, WITHOUT ISSUING A WTOR.            **           01044
**                                                          **           01045
** LEVEL 064 - Return Code adjustments.                     **           01046
**                                                          **           01047
** LEVEL 065 - REWIND Tapes before initting in INITVOLS     **
**             processing.                                  **
**             HEXPRT now works for INITVOLS.               **
**             HEXPRT now prints the external labels in a   **
**             LABADDIN operation.                          **
**             TAPEOWNER= is now honored for an INITVOLS    **
**             operation (this fixes a bug).                **
**             Number for FILELIMIT=nnn is now filled in,   **
**             in the message, when the EBCDIC value        **
**             exists.                                      **
**             Fix another bug--Tape Owner not altered--    **
**             now use the value of tape owner passed from  **
**             the PARMCHEK program.                        **
**                                                          **
**************************************************************           01048
**************************************************************           01049
         MACRO                                                           01050
&NAME    HEX   &TO,&LEN,&FROM                                            01051
&NAME    DS    0H                                                        01052
         ST    R4,SAV4HEX                                                01053
         STM   15,1,HEXSAVE                                              01054
         LA    1,&FROM                                                   01055
         LA    0,&LEN                                                    01056
         LA    15,&TO                                                    01057
         BAL   4,HEX                                                     01058
         L     R4,SAV4HEX                                                01059
         LM    15,1,HEXSAVE                                              01060
         MEND                                                            01061
         EJECT                                                           01062
         YREGS                                                           01063
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                01064
         GBLA  &HEXDFLA                                                  01065
* ------------------------------------------------------------------ *   01066
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   01067
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   01068
* ------------------------------------------------------------------ *   01069
&HEXDFLA SETA  4                                                         01070
&HEXDFLC SETC  '&HEXDFLA'                                                01071
COPYMODS CSECT                                                           01072
         USING *,R15                                          SBG 03/00  01073
         B     EYECATCH                                       SBG 03/00  01074
         DC    C'HEX DUMP '                                              01075
HEXDFLCC DC    C'&HEXDFLC'                                               01076
         DC    C' RECORDS '                                              01077
HEXDFLL  EQU   L'HEXDFLCC                                                01078
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 01079
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  01080
         DC    C'COPYMODS Level 065 '                         SBG 03/00  01081
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  01082
         DC    C'SYSIN IN PARMCHEK PGM'                                  01083
SAVEAREA DC    18F'0'                                                    01084
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  01085
         SAVE  (14,12)                                                   01086
         LR    R5,R1          SAVE PARM POINTER                          01087
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   01088
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          01089
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         01090
         LR    R13,R1               NEW SAVE AREA ADDRESS                01091
         DROP  R15                                                       01092
* -----                       SET UP SIX BASE REGISTERS                  01093
         USING COPYMODS,R12,R11,R10,R9,R8,R6                             01094
         LR    R12,R15                                                   01095
         LA    R11,4095(,R12)                                            01096
         LA    R11,1(,R11)                                               01097
         LA    R10,4095(,R11)                                            01098
         LA    R10,1(,R10)                                               01099
         LA    R9,4095(,R10)                                             01100
         LA    R9,1(,R9)                                                 01101
         LA    R8,4095(,R9)                                              01102
         LA    R8,1(,R8)                                                 01103
         LA    R6,4095(,R8)                                              01104
         LA    R6,1(,R6)                                                 01105
         LR    R1,R5          RESTORE PARM POINTER                       01106
         ST    R1,PARMSTRT    PRESERVE PARM POINTER WHERE IT CAN         01107
*                             BE PASSED TO THE PARMCHEK PROGRAM.         01108
         L     R1,0(,R1)                                                 01109
         LH    R5,0(,R1)      SAVE PARM LENGTH, AND                      01110
         ST    R5,PARMSLEN    PRESERVE IT AS A FULLWORD                  01111
         MVC   SAVMSLEN,PARMSLEN     KEEP IT SAFE - DOUBLE SURE          01112
         L     R0,=V(TRTCSECT)       SAVE HEX TRANSLATE TABLE POINTER    01113
         ST    R0,SAVTRTCS           AND STORE IT FOR LATER USE.         01114
* ----------------------------------------------------------------- *    01115
*                                                                   *    01116
*  CALLING THE PARMCHEK PROGRAM REQUIRES:                           *    01117
*                                                                   *    01118
*     INPUT:   R2 POINTS TO STRTVALU, WHERE PARM INFORMATION IS     *    01119
*              ALREADY PRESERVED IN THE PARMSLEN AND PARMSTRT       *    01120
*              FIELDS.                                              *    01121
*                                                                   *    01122
*     OUTPUT:  R1 POINTS TO PARMCHEK'S PARMFLGS, ALREADY ALL        *    01123
*              FILLED IN.                                           *    01124
*                                                                   *    01125
*              R2 POINTS TO PARMCHEK'S USER AREA STARTING WITH      *    01126
*              STRTVALU, FILLED IN WITH USER INFORMATION FROM       *    01127
*              THE PARM SCAN.                                       *    01128
*                                                                   *    01129
*     AFTER THE PARMCHEK PROGRAM RETURNS CONTROL TO COPYMODS,       *    01130
*     ITS PARMFLGS AND STRTVALU AREAS ARE COPIED OVER INTO THE      *    01131
*     CORRESPONDING AREAS IN THE COPYMODS PROGRAM.                  *    01132
*                                                                   *    01133
*     PARMCHEK'S USER AREA STARTING WITH LABEL STRTVALU HAS TO      *    01134
*     EXACTLY MATCH COPYMODS' USER AREA STARTING WITH STRTVALU.     *    01135
*                                                                   *    01136
* ------------------------------------------------------------------*    01137
*    NOW DO IT.  CALL THE PARMCHEK PROGRAM AND GET THE RETURNS.     *    01138
* ------------------------------------------------------------------*    01139
         L     R0,=V(PARMCHEK)                                           01140
         ST    R0,ENTRYPT                                                01141
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM      01142
         LA    R2,STRTVALU        USER AREA ADDRESS TO BE PASSED.        01143
         BALR  R14,R15                 DO CALL                           01144
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS     01145
         ST    R2,USERSAVE             ADDRESS OF RETURNED USER AREA     01146
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS      01147
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK     01148
* ----------------------------------------------------------------- *    01149
* ----------------------------------------------------------------- *    01150
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *    01151
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *    01152
* ----------------------------------------------------------------- *    01153
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON         01154
         TM    PARMFLG1,X'20'   ARE WE SKIPPING LTM'S?        SBG 04/00  01155
         BZ    COPYLTMS         NO. WE'RE COPYING THEM.       SBG 04/00  01156
*                               YES. WE'RE SKIPPING THEM, SO  SBG 04/00  01157
         MVC   LTMRPTI,SKIPPED  MOVE INDICATOR TO REPORT      SBG 03/00  01158
         B     SKIPLTMS         AND DO OTHER INITIALIZATION   SBG 03/00  01159
COPYLTMS MVC   LTMRPTI,COPIED   MOVE INDICATOR TO REPORT      SBG 03/00  01160
SKIPLTMS DS    0H                                             SBG 06/00  01161
* ----- * ----- * ------                                                 01162
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?                01163
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                    01164
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                    01165
NONOEXNL DS    0H                                                        01166
* ----- * ----- * ------                                                 01167
* ----- * ----- * ------ *------                                         01168
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                            01169
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                    01170
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON              01171
NOCUMSEP DS    0H                                                        01172
* ----- * ----- * ------ *------                                         01173
* ----- * -----                                                          01174
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                        01175
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                    01176
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON        01177
NOCUMTOT DS    0H                                                        01178
* ----- * -----                                                          01179
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR              01180
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *      01181
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?           01182
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.           01183
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP            01184
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO       01185
*                                      BECAUSE WE'RE COPYING TO SL.      01186
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS             01187
CANLBDMP DS    0H                                                        01188
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *    01189
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                          01190
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS             01191
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                   01192
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                    01193
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01194
NOLBDQUI DS    0H                                                        01195
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *    01196
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *     01197
         TM    PARMFLG4,X'02'      IS STRIP ON?                          01198
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS         01199
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01200
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF                01201
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF                01202
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                            01203
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                           01204
NOSTRADJ DS    0H                  END of the STRIP adjustments          01205
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *     01206
* ----------------------------------------------------------------- *    01207
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *    01208
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *    01209
* ----------------------------------------------------------------- *    01210
* --                                                             -- *    01211
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?             01212
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM        01213
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                    01214
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED          01215
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               01216
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 01217
         BZ    NOOPTRP1          NO. DON'T CALL IT                       01218
         BALR  R14,R15           CALL SUBPROGRAM                         01219
NOOPTRP1 LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                 01220
NOOPTRPT DS    0H                                                        01221
*  -------------------------------------------------------------- *      01222
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL  SBG 06/00  01223
         RDJFCB IN                                                       01224
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL        01225
         MVC   SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01226
         MVC   READOMSG+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01227
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST   01228
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA             SBG 03/00  01229
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                 01230
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET SBG 03/00  01231
         SPACE 3                                                         01232
OPENSYSP DS    0H                                                        01233
*                                                                        01234
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                               01235
*                                                                        01236
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01237
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01238
         BO    OPENS      YES--SKIP ALL THE TIOT FOR OUT DD'S SBG 06/00  01239
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01240
         L     R2,16          R2=CVT                                     01241
         L     R2,0(,R2)      R2=TCB WORDS                               01242
         L     R2,4(,R2)      R2=MY TCB                                  01243
         L     R2,12(,R2)     R2=TIOT                                    01244
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                          01245
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                             01246
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES        01247
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                    01248
         BNE   TIOT1          NO                                         01249
         OI    FLAG1,OP1      SHOW IT                                    01250
         STM   R14,R3,SAV14T03                                    TEST   01251
         RDJFCB OUT1                                                     01252
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL              01253
         MVC   VOLDD,DDOUT1                                              01254
         LM    R14,R3,SAV14T03                                    TEST   01255
         B     TIOTNEXT       CONTINUE                                   01256
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                    01257
         BNE   TIOT2          NO                                         01258
         OI    FLAG1,OP2      SHOW IT                                    01259
         STM   R14,R3,SAV14T03                                    TEST   01260
         RDJFCB OUT2                                                     01261
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL              01262
         MVC   VOLDD,DDOUT2                                              01263
         LM    R14,R3,SAV14T03                                    TEST   01264
         B     TIOTNEXT       CONTINUE                                   01265
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                    01266
         BNE   TIOT3          NO                                         01267
         OI    FLAG1,OP3      SHOW IT                                    01268
         STM   R14,R3,SAV14T03                                    TEST   01269
         RDJFCB OUT3                                                     01270
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL              01271
         MVC   VOLDD,DDOUT3                                              01272
         LM    R14,R3,SAV14T03                                    TEST   01273
         B     TIOTNEXT       CONTINUE                                   01274
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                    01275
         BNE   TIOT4          NO                                         01276
         OI    FLAG1,OP4      SHOW IT                                    01277
         STM   R14,R3,SAV14T03                                    TEST   01278
         RDJFCB OUT4                                                     01279
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL              01280
         MVC   VOLDD,DDOUT4                                              01281
         LM    R14,R3,SAV14T03                                    TEST   01282
         B     TIOTNEXT       CONTINUE                                   01283
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                    01284
         BNE   TIOT5          NO                                         01285
         OI    FLAG1,OP5      SHOW IT                                    01286
         STM   R14,R3,SAV14T03                                    TEST   01287
         RDJFCB OUT5                                                     01288
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL              01289
         MVC   VOLDD,DDOUT5                                              01290
         LM    R14,R3,SAV14T03                                    TEST   01291
         B     TIOTNEXT       CONTINUE                                   01292
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                    01293
         BNE   TIOT6          NO                                         01294
         OI    FLAG1,OP6      SHOW IT                                    01295
         STM   R14,R3,SAV14T03                                    TEST   01296
         RDJFCB OUT6                                                     01297
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL              01298
         MVC   VOLDD,DDOUT6                                              01299
         LM    R14,R3,SAV14T03                                    TEST   01300
         B     TIOTNEXT       CONTINUE                                   01301
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                    01302
         BNE   TIOT7          NO                                         01303
         OI    FLAG1,OP7      SHOW IT                                    01304
         STM   R14,R3,SAV14T03                                    TEST   01305
         RDJFCB OUT7                                                     01306
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL              01307
         MVC   VOLDD,DDOUT7                                              01308
         LM    R14,R3,SAV14T03                                    TEST   01309
         B     TIOTNEXT       CONTINUE                                   01310
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                    01311
         BNE   TIOT8          NO                                         01312
         OI    FLAG1,OP8      SHOW IT                                    01313
         STM   R14,R3,SAV14T03                                    TEST   01314
         RDJFCB OUT8                                                     01315
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL              01316
         MVC   VOLDD,DDOUT8                                              01317
         LM    R14,R3,SAV14T03                                    TEST   01318
         B     TIOTNEXT       CONTINUE                                   01319
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                    01320
         BNE   TIOT9          NO                                         01321
         OI    FLAG2,OP9      SHOW IT                                    01322
         STM   R14,R3,SAV14T03                                    TEST   01323
         RDJFCB OUT9                                                     01324
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL              01325
         MVC   VOLDD,DDOUT9                                              01326
         LM    R14,R3,SAV14T03                                    TEST   01327
         B     TIOTNEXT       CONTINUE                                   01328
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                  01329
         BNE   TIOT10         NO                                         01330
         OI    FLAG2,OP10     SHOW IT                                    01331
         STM   R14,R3,SAV14T03                                    TEST   01332
         RDJFCB OUT10                                                    01333
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL             01334
         MVC   VOLDD,DDOUT10                                             01335
         LM    R14,R3,SAV14T03                                    TEST   01336
         B     TIOTNEXT       CONTINUE                                   01337
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                  01338
         BNE   TIOT11         NO                                         01339
         OI    FLAG2,OP11     SHOW IT                                    01340
         STM   R14,R3,SAV14T03                                    TEST   01341
         RDJFCB OUT11                                                    01342
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL             01343
         MVC   VOLDD,DDOUT11                                             01344
         LM    R14,R3,SAV14T03                                    TEST   01345
         B     TIOTNEXT       CONTINUE                                   01346
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                  01347
         BNE   TIOT12         NO                                         01348
         OI    FLAG2,OP12     SHOW IT                                    01349
         STM   R14,R3,SAV14T03                                    TEST   01350
         RDJFCB OUT12                                                    01351
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL             01352
         MVC   VOLDD,DDOUT12                                             01353
         LM    R14,R3,SAV14T03                                    TEST   01354
         B     TIOTNEXT       CONTINUE                                   01355
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                  01356
         BNE   TIOT13         NO                                         01357
         OI    FLAG2,OP13     SHOW IT                                    01358
         STM   R14,R3,SAV14T03                                    TEST   01359
         RDJFCB OUT13                                                    01360
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL             01361
         MVC   VOLDD,DDOUT13                                             01362
         LM    R14,R3,SAV14T03                                    TEST   01363
         B     TIOTNEXT       CONTINUE                                   01364
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                  01365
         BNE   TIOT14         NO                                         01366
         OI    FLAG2,OP14     SHOW IT                                    01367
         STM   R14,R3,SAV14T03                                    TEST   01368
         RDJFCB OUT14                                                    01369
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL             01370
         MVC   VOLDD,DDOUT14                                             01371
         LM    R14,R3,SAV14T03                                    TEST   01372
         B     TIOTNEXT       CONTINUE                                   01373
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                  01374
         BNE   TIOT15         NO                                         01375
         OI    FLAG2,OP15     SHOW IT                                    01376
         STM   R14,R3,SAV14T03                                    TEST   01377
         RDJFCB OUT15                                                    01378
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL             01379
         MVC   VOLDD,DDOUT15                                             01380
         LM    R14,R3,SAV14T03                                    TEST   01381
         B     TIOTNEXT       CONTINUE                                   01382
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                  01383
         BNE   TIOTNEXT       NO                                         01384
         OI    FLAG2,OP16     SHOW IT                                    01385
         STM   R14,R3,SAV14T03                                    TEST   01386
         RDJFCB OUT16                                                    01387
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL             01388
         MVC   VOLDD,DDOUT16                                             01389
         LM    R14,R3,SAV14T03                                    TEST   01390
         B     TIOTNEXT       CONTINUE                                   01391
TIOTNEXT SR    R3,R3                                                     01392
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                      01393
         AR    R2,R3          R2=NEXT DD ENTRY                           01394
         B     TIOTLOOP       GO CHECK IT                                01395
*  ---------------------------------------------------------  SBG 09/00  01396
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*    01397
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                        01398
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.      01399
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?           01400
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                    01401
         MVC   VOLALL,VOLSTG     PROPAGATE VOLSER TO ALL OUTPUTS         01402
NOVOLOV  DS    0H                                                        01403
*  ---------------------------------------------------------  SBG 09/00  01404
         SPACE 3                                                         01405
*  -----------------------------------------------------------------  *  01406
*                                                                        01407
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY           01408
*                                                                        01409
*  -----------------------------------------------------------------  *  01410
OPENS    DS    0H               START OPENING FILES                      01411
         OPEN  (SYSPRINT,OUTPUT)                                         01412
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                        01413
         BO    OPENMOVE                                                  01414
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.     01415
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  01416
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00  01417
         OPEN  (LABLDUMP,OUTPUT)                              SBG 09/00  01418
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                   01419
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.         01420
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.            01421
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME              01422
NOLBLDD  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01423
         MVC   LINE(133),LDMPMSG   DISPLAY MISSING DD MESSAGE            01424
         PUT   SYSPRINT,LINE                                             01425
         OI    ENDITFLG,X'01'   FLAG THAT LABLDUMP NOT OPEN.             01426
OPNLABIN TM    PARMFLG2,X'80'   DO WE NEED LABADDIN?                     01427
         BZ    CHKENDIT         NO. SEE IF ANYTHING ELSE IS BAD          01428
         OPEN  (LABADDIN,INPUT)                                          01429
         TM    LABADDIN+48,X'10'     IS THE DD OPEN  ?                   01430
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE               01431
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.            01432
         B     CHKENDIT        GO CHECK IF WE HAVE TO END.               01433
NOLABIN  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01434
         MVC   LINE(133),NLABMSG   DISPLAY MISSING DD MESSAGE            01435
         PUT   SYSPRINT,LINE                                             01436
         OI    ENDITFLG,X'04'   FLAG THAT LABADDIN NOT OPEN.             01437
CHKENDIT TM    ENDITFLG,X'07'   CHECK IF WE HAVE TO END                  01438
         BZ    OPENIN           NOTHING WRONG.  GO ON.                   01439
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?     01440
         CLOSE (SYSPRINT)                                                01441
         TM    OPENDFLG,X'01'   IS LABLDUMP DD OPEN?                     01442
         BZ    TRYCLABN         NO.  TRY IF SYSIN IS OPEN.               01443
         NI    OPENDFLG,FF-X'01'   MARK FILE AS CLOSED                   01444
         CLOSE (LABLDUMP)                                                01445
TRYCLABN TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01446
         BZ    REALYEND         NO.  GET OUT.                            01447
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01448
         CLOSE (LABADDIN)                                                01449
REALYEND B     THEEND                                                    01450
         EJECT                                                           01451
OPENIN   OPEN  (IN,INPUT)                                                01452
         TM    IN+48,X'10'                                               01453
         BO    INISOPEN                                                  01454
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *         01455
         TM    PARMFLG3,X'01'       INITTING TAPES?                      01456
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01457
*                                   BYPASS MESSAGE.                      01458
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   01459
         MVC   LINE(133),INNOTOPN   MOVE IN MESSAGE TEXT                 01460
         PUT   SYSPRINT,LINE        PUT OUT MESSAGE                      01461
         B     ENDEM                GO TO CLOSE FILES, AND OUT.          01462
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *         01463
INISOPEN DS    0H                                                        01464
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?              01465
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO              01466
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01467
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?                01468
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN          01469
* ----                                                                   01470
OPENINCK DS    0H                                                        01471
         LA    R2,IN              POINT TO IN DCB                        01472
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                  01473
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                   01474
         EXCP  REWIOB                                                    01475
         WAIT  ECB=REWECB                                                01476
         MVC   INECB,=F'0'        INITIALIZE IN'S ECB                    01477
         EXCP  INIOB                                                     01478
         WAIT  ECB=INECB                                                 01479
         CLC   INAREA(4),=C'VOL1' IS THE TAPE IBM SL ?                   01480
         BNE   RESETIN            NO. JUST REWIND TO REPOSITION.         01481
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL              01482
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?              01483
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN    01484
****** ------ BELOW ------ SL FILE NUMBERS.                              01485
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?           01486
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                 01487
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?      01488
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG      01489
**** ----- >>>>>   Force file limiting by SL   - - -  below              01490
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim   01491
         BZ    NOSLFLIM              Not set, bypass code for it         01492
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number          01493
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01494
         MVC   LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning     01495
         MVC   LINE(133),LINE-1      Clear message line                  01496
         MVC   LINE(133),FORCESLM    Say you'll force limiting by SL     01497
         PUT   SYSPRINT,LINE         Write msg                           01498
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?     01499
         BNO   SLLIMRES              No. only SLLIM. So go on.           01500
         MVC   LINE(133),LINE-1      Clear message line                  01501
         MVC   LINE(133),TWOFORCE    Say you'll force limiting by SL     01502
         PUT   SYSPRINT,LINE         Write msg                           01503
SLLIMRES DS    0H                                                        01504
         B     RESETIN                                                   01505
NOSLFLIM DS    0H                                                        01506
**** ----- >>>>>   Force file limiting by SL   - - -  above              01507
**** ----- >>>>>   Force file limiting by NL   - - -  below              01508
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim   01509
         BZ    NONLFLIM              Not set, bypass code for it         01510
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number          01511
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01512
         MVC   LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning     01513
         MVC   LINE(133),LINE-1      Clear message line                  01514
         MVC   LINE(133),FORCENLM    Say you'll force limiting by NL     01515
         PUT   SYSPRINT,LINE         Write msg                           01516
         B     RESETIN                                                   01517
NONLFLIM DS    0H                                                        01518
**** ----- >>>>>   Force file limiting by NL   - - -  above              01519
* -- > Strip test                                                        01520
         TM    PARMFLG4,X'02'        Are we stripping labels?            01521
         BZ    OPENINXW              No. Bypass this section.            01522
         TM    PARMFLG3,X'02'        Are we limiting files also?         01523
         BO    OPENINXW              Yes. Use SL number.                 01524
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.   01525
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01526
         MVC   LIMFMSG+68(2),=C'SL'  But indicate that input is SL       01527
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01528
OPENINXW DS    0H                                                        01529
* -- > Strip test                                                        01530
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL    01531
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01532
         MVC   LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE    01533
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01534
OPENINXX DS    0H                                                        01535
****** ------ ABOVE ------ SL FILE NUMBERS.                              01536
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.     01537
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01538
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01539
         PUT   SYSPRINT,LINE      WRITE MSG                              01540
RESETLAD TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01541
         BZ    RESETEND         NO.  GET OUT.                            01542
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01543
         CLOSE (LABADDIN)                                                01544
RESETEND CLOSE (IN)                                                      01545
         B     THEEND                                                    01546
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.     01547
RESETIN  DS    0H                                                        01548
         MVC   REWECB,=F'0'                                              01549
         EXCP  REWIOB                                                    01550
         WAIT  ECB=REWECB                                                01551
NOINITOP DS    0H                                                        01552
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01553
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.            01554
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.             01555
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA                01556
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01557
         BNZ   NOLBLDD                  IF NOT, FLAG                     01558
         ST    R7,SAVE7REG              SAVE R7                          01559
         LA    R7,LBLJFCB               POINT TO JFCB AREA               01560
         USING JFCBLK,R7                MAP THE AREA                     01561
         MVC   LDMPOUTM+38(44),JFCBDSNM                                  01562
         MVC   LDMPOUTM+89(8),JFCBELNM                                   01563
         MVC   LDMPOUTM+105(6),JFCBVOLS                                  01564
         MVC   LINE(133),LINE-1                                          01565
         MVC   LINE(133),LDMPOUTM                                        01566
         PUT   SYSPRINT,LINE                                             01567
         DROP  R7                                                        01568
         L     R7,SAVE7REG              RESTORE R7                       01569
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.         SBG 09/00  01570
         TM    PARMFLG2,X'80'     TEST IF LABLDUMP IS NEEDED.            01571
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.             01572
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA                01573
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01574
         BNZ   NOLABIN                  IF NOT, FLAG                     01575
         ST    R7,SAVE7REG              SAVE R7                          01576
         LA    R7,LBNJFCB               POINT TO JFCB AREA               01577
         USING JFCBLK,R7                MAP THE AREA                     01578
         MVC   LDMPINMS+38(44),JFCBDSNM                                  01579
         MVC   LDMPINMS+89(8),JFCBELNM                                   01580
         MVC   LDMPINMS+105(6),JFCBVOLS                                  01581
         MVC   LINE(133),LINE-1                                          01582
         MVC   LINE(133),LDMPINMS                                        01583
         PUT   SYSPRINT,LINE                                             01584
         DROP  R7                                                        01585
         L     R7,SAVE7REG              RESTORE R7                       01586
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.         SBG 09/00  01587
* --- READ ONLY CODE ------------------ BELOW --------------- SBG 06/00  01588
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01589
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.    SBG 06/00  01590
*                         OTHERWISE PUT INITIAL READONLY MSG  SBG 06/00  01591
         MVC   LINE(133),READOMSG    MOVE READ-ONLY MESSAGE   SBG 06/00  01592
         PUT   SYSPRINT,LINE  WRITE INITIAL MESSAGE SHOWING READONLY     01593
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01594
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01595
         BZ    NOLIMFMR         NO, SKIP MESSAGE                         01596
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01597
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01598
         PUT   SYSPRINT,LINE                                             01599
NOLIMFMR DS    0H                                                        01600
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01601
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01602
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01603
         BZ    N1LIMHEX         NO, SKIP MESSAGE                         01604
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01605
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01606
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01607
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01608
         B     N1LIMPRT             AND PRINT IT                         01609
N1LIMDEF DS    0H                                                        01610
         MVC   LIMPMSG+11(10),PRTCHAR                                    01611
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01612
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                         01613
N1LIMHEX DS    0H                                                        01614
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01615
         B     READIN                                         SBG 06/00  01616
* --- READ ONLY CODE ------------------ ABOVE --------------- SBG 06/00  01617
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE    01618
*                             THIS ALSO MOVES FLAG2 TO FLAG4  SBG 03/00  01619
*  ---------------------------------------------------------  SBG 03/00  01620
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01621
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01622
         BZ    NOLIMHEX         NO, SKIP MESSAGE                         01623
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01624
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01625
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01626
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01627
         B     NOLIMPRT             AND PRINT IT                         01628
NOLIMDEF DS    0H                                                        01629
         MVC   LIMPMSG+11(10),PRTCHAR                                    01630
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01631
NOLIMPRT PUT   SYSPRINT,LINE                                             01632
NOLIMHEX DS    0H                                                        01633
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01634
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                         01635
         BZ    OPENOINT                                                  01636
         MVC   INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN          01637
         B     NOCORPRT                                                  01638
OPENOINT DS    0H                                                        01639
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01640
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT      01641
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE              01642
         ST    R7,SAVE7REG                                               01643
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE       01644
         L     R7,SAVE7REG                                               01645
NOCORPRT DS    0H                                                        01646
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01647
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01648
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01649
         BZ    NOLIMFMS         NO, SKIP MESSAGE                         01650
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01651
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01652
         PUT   SYSPRINT,LINE                                             01653
NOLIMFMS DS    0H                                                        01654
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01655
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   01656
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?           01657
         BZ    NOLIMLMR         NO, SKIP MESSAGE                         01658
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01659
         MVC   LIMLMSG+11(10),LABCHAR                                    01660
         MVC   LINE(133),LIMLMSG    MOVE MESSAGE TEXT IN                 01661
         PUT   SYSPRINT,LINE                                             01662
NOLIMLMR DS    0H                                                        01663
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   01664
**** ---- >>> Message that labels are being stripped <<< ---- below ***  01665
         TM    PARMFLG4,X'02'     Are labels being stripped?             01666
         BZ    NOSTRMSG                                                  01667
         MVC   LINE(133),LINE-1   Clear message line                     01668
         MVC   LINE(133),STRPMSG  Show we're stripping labels            01669
         PUT   SYSPRINT,LINE                                             01670
NOSTRMSG DS    0H                                                        01671
**** ---- >>> Message that labels are being stripped <<< ---- above ***  01672
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                          01673
         BZ    OPEN1          NO                                         01674
         OPEN  (OUT1,OUTPUT)                                             01675
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                          01676
         BZ    OPEN2          NO                                         01677
         OPEN  (OUT2,OUTPUT)                                             01678
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                          01679
         BZ    OPEN3          NO                                         01680
         OPEN  (OUT3,OUTPUT)                                             01681
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                          01682
         BZ    OPEN4          NO                                         01683
         OPEN  (OUT4,OUTPUT)                                             01684
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                          01685
         BZ    OPEN5          NO                                         01686
         OPEN  (OUT5,OUTPUT)                                             01687
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                          01688
         BZ    OPEN6          NO                                         01689
         OPEN  (OUT6,OUTPUT)                                             01690
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                          01691
         BZ    OPEN7          NO                                         01692
         OPEN  (OUT7,OUTPUT)                                             01693
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                          01694
         BZ    OPEN8          NO                                         01695
         OPEN  (OUT8,OUTPUT)                                             01696
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                          01697
         BZ    OPEN9          NO                                         01698
         OPEN  (OUT9,OUTPUT)                                             01699
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                         01700
         BZ    OPEN10         NO                                         01701
         OPEN  (OUT10,OUTPUT)                                            01702
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                         01703
         BZ    OPEN11         NO                                         01704
         OPEN  (OUT11,OUTPUT)                                            01705
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                         01706
         BZ    OPEN12         NO                                         01707
         OPEN  (OUT12,OUTPUT)                                            01708
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                         01709
         BZ    OPEN13         NO                                         01710
         OPEN  (OUT13,OUTPUT)                                            01711
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                         01712
         BZ    OPEN14         NO                                         01713
         OPEN  (OUT14,OUTPUT)                                            01714
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                         01715
         BZ    OPEN15         NO                                         01716
         OPEN  (OUT15,OUTPUT)                                            01717
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                         01718
         BZ    READIN         NO                                         01719
         OPEN  (OUT16,OUTPUT)                                            01720
         EJECT                                                           01721
* --------------------------------------------------------- *            01722
*                                                           *            01723
*  READ INPUT                                               *            01724
*                                                           *            01725
* --------------------------------------------------------- *            01726
*                                                           *            01727
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *            01728
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *            01729
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *            01730
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *            01731
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *            01732
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *            01733
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *            01734
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*            01735
*                                                           *            01736
* --------------------------------------------------------- *            01737
READIN   DS    0H                                                        01738
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                   01739
         BO    TLITWRIT                                                  01740
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR  SBG 03/00  01741
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                     01742
         MVI   INECB,X'00'    INITIALIZE ECB                             01743
* ------------------------------------------------------------------ *   01744
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *   01745
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *   01746
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *   01747
* ------------------------------------------------------------------ *   01748
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                  01749
         BZ    NONLSL0        NO. IGNORE THIS CODE                       01750
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN          01751
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE           01752
NONLSL0  DS    0H                                                        01753
* ----------------------------------------------------------- SBG 09/00  01754
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE               01755
***** --------------- LIMITING FILES ------------------ ***** BELOW *    01756
         TM    PARMFLG3,X'02'     LIMITING FILES?                        01757
         BZ    INOLIMIT           NO - BYPASS THIS CODE                  01758
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?               01759
         BZ    INOLIMIT           NOT YET - JUST GO ON                   01760
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE     01761
*                                 AND DON'T DO MORE READS OF INPUT TAPE  01762
INOLIMIT DS    0H                                                        01763
***** --------------- LIMITING FILES ------------------ ***** ABOVE *    01764
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *    01765
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                  01766
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS     01767
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK     01768
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                     01769
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ      01770
         L     R7,SAVE7RG3        RESTORE R7                             01771
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                     01772
NOLBDADJ DS    0H                                                        01773
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *    01774
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01775
*                                                                        01776
*       Since there is a possibility that the WRITE will                 01777
*       not work for one of the output ddnames, we have                  01778
*       to save the total bytes successfully moved to the                01779
*       currently open output tapes.  Also file count for                01780
*       this tape, and block count for this file.                        01781
*                                                                        01782
         MVC   PRVBY,TOTBY        Total bytes before this READ           01783
         MVC   FILECNTP,FILECNT   Total file count before this READ      01784
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ     01785
*                                                                        01786
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01787
         EXCP  INIOB          READ                                       01788
         WAIT  ECB=INECB      WAIT FOR READ                              01789
         TM    INCSW+4,X'01'  WAS TM READ?                               01790
         BO    READIN1        YES                                        01791
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                01792
         BNE   INERR          NO -- ERROR                                01793
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                    01794
*        LH    R2,INCCW+6     R2=READ LENGTH                  SBG 03/00  01795
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY    SBG 03/00  01796
         MVC   HALFWORK(2),INCCW+6   READ LENGTH              SBG 03/00  01797
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER     SBG 03/00  01798
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT          SBG 03/00  01799
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT      SBG 03/00  01800
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER     SBG 03/00  01801
         SR    R2,R3          R2=ACTUAL LENGTH READ                      01802
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED              01803
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01804
         ST    R7,TOTB7REG        Save BAL Register                      01805
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01806
         LA    R3,TOTBY           POINT REGISTER TO LABEL COUNTER        01807
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              01808
         L     R7,TOTB7REG        Restore BAL Register                   01809
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01810
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*             01811
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                     01812
         BZ    NPRTHEX           NO. SKIP THIS CODE.                     01813
         ST    R7,R7HXPRT        SAVE R7.                                01814
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.            01815
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT             01816
         BCTR  R1,0              LOWER BY ONE                            01817
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS               01818
         L     R7,R7HXPRT        RESTORE R7.                             01819
NPRTHEX  DS    0H                                                        01820
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*             01821
         NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG               01822
**** ----  BYTE COUNTS ---- BELOW                                        01823
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                     01824
         BZ    INNOBYTE       NO, SKIP INCREMENT                         01825
         LA    R3,DBIN        POINT REGISTER TO COUNTER                  01826
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                  01827
INNOBYTE DS    0H                                                        01828
**** ----  BYTE COUNTS ---- ABOVE                                        01829
         NI    DATFLAG,FF-X'10'  SHOW REAL DATA HAS BEEN READ SBG 03/00  01830
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01831
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST? SBG 03/00  01832
         BNE   READGO1        NO. SKIP THIS PROCESSING.       SBG 03/00  01833
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ    SBG 03/00  01834
         BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL       SBG 04/00  01835
*                             FORMATS, AND SET FLAGS          SBG 04/00  01836
*                             ACCORDINGLY.  OPTIONALLY        SBG 04/00  01837
*                             PRINT LABEL INFO FOUND.         SBG 04/00  01838
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW              01839
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?                01840
         BZ    LBLNOCNT                                                  01841
         TM    ISLBLFLG,X'01'     WAS LAST INPUT RECORD A LABEL?         01842
         BZ    LBLNOCNT                                                  01843
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01844
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER        01845
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              01846
LBLNOCNT DS    0H                                                        01847
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW              01848
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               01849
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING        01850
****-->>                below  -  Test of LRECL=80 and not a label
         ST    R2,SAVER2A         Save contents of R2
         L     R2,BYTESMVD        Get size of this record.
         C     R2,=F'80'          80 bytes exactly in record?
         BNE   YSTRPFLG           No. Not an exception.
         TM    ISLBLFLG,X'03'     Was last input record a label?         02508
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.
YSTRPFLG DS    0H
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING              02517
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.
         L     R2,SAVER2A
****-->>                above  -  Test of LRECL=80 and not a label
         B     READGO1            AND CONTINUE READ PROCESSING           01852
SAVER2A  DC    F'0'
STRNOSKP DS    0H                                                        01853
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE              01854
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE              01855
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01856
*                                                             SBG 04/00  01857
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01858
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                  01859
         BZ    READGO1            NO. WE CAN GO ON.                      01860
         TM    ISLBLFLG,X'01'     DID WE JUST READ A LABEL?              01861
         BZ    READGO1            NO DON'T CHECK FOR SL                  01862
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01863
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01864
         PUT   SYSPRINT,LINE      WRITE MSG                              01865
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01866
         CLOSE (LABADDIN)                                                01867
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            01868
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01869
         EJECT                                                           01870
*  ----------------------------------------------------------------  *   01871
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   01872
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE       01873
*                           INPUT IS FROM THE EXTERNAL LABEL FILE        01874
*  ----------------------------------------------------------------  *   01875
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?               01876
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.               01877
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****        01878
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?             01879
         BZ    STILTAPE                                                  01880
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?        01881
         BZ    STILTAPE                                                  01882
         B     WRTTAPMK                                                  01883
STILTAPE DS    0H                                                        01884
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****        01885
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?    01886
         BZ    DOTHEGET             NO. DO THE FILE GETS.                01887
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                 01888
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA    01889
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.          01890
DOTHEGET DS    0H                                                        01891
*** ---                                                                  01892
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?              01893
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                   01894
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?               01895
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                 01896
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.   01897
DOGETALW DS    0H                                                        01898
*** ---                                                                  01899
         GET   LABADDIN,EXTLBLIN                                         01900
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                    01901
         BE    INEXTLAB         IF IT IS, IGNORE IT.                     01902
*------------------------------------> Hex Print Limit - Below
         TM    PARMFLG5,X'20'          HEX PRINT ON?
         BZ    NOHXPREX                NO. DON'T ADJUST LIMIT
         CLC   =C'----ENDOFLABEL',EXTLBLIN     End of a label file?
         BNE   NOHXPREX                        No. Don't reset count.
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF
NOHXPREX DS    0H
*------------------------------------> Hex Print Limit - Above
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                        01903
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE        01904
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                        01905
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS           01906
* ---------------------------------  EOV2EOF  BELOW  ------------- *     01907
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                     01908
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT            01909
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER          01910
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD     01911
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER               01912
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?      01913
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT             01914
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER             01915
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.           01916
NTRALEOV DS    0H                                                        01917
* ---------------------------------  EOV2EOF  ABOVE  ------------- *     01918
*
INEXTALL DS    0H            All allowed EXTLBLIN cards go thru here.
*
* ------     Hex Print records from External Labels    ----  below
         TM    PARMFLG5,X'20'       ARE WE DOING HEX PRINT?
         BZ    EXTNOPRT             NO, SO BYPASS THIS
         ST    R7,R7HXPRT           SAVE R7.
         BAL   R7,HEXPRNEX          PRINT CURRENT RECORD IN HEX.
         L     R1,BCTLIMIT          LOAD REGISTER FOR DECREMENT
         BCTR  R1,0                 LOWER BY ONE
         ST    R1,BCTLIMIT          PUT IT BACK FOR NEXT PASS
         L     R7,R7HXPRT           RESTORE R7.
EXTNOPRT DS    0H
* ------     Hex Print records from External Labels    ----  above
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                  01919
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS            01920
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS    01921
         B     GOTVOL01             PROCESS THE VOL1                     01922
NLABVOL1 DS    0H                                                        01923
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW                01924
         CLC   EXTLBLIN(4),=C'HDR1'                                      01925
         BNE   NLABHDR1                                                  01926
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN              01927
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    01928
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                      01929
         B     ENDIBMSL                                                  01930
NLABHDR1 DS    0H                                                        01931
         CLC   EXTLBLIN(4),=C'HDR2'                                      01932
         BNE   NLABHDR2                                                  01933
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN              01934
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    01935
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                      01936
         B     ENDIBMSL                                                  01937
NLABHDR2 DS    0H                                                        01938
***** ----- *****                                                        01939
         CLC   EXTLBLIN(4),=C'EOF1'                                      01940
         BNE   NLABEOF1                                                  01941
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN              01942
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01943
         B     ENDIBMSL                                                  01944
NLABEOF1 DS    0H                                                        01945
         CLC   EXTLBLIN(4),=C'EOF2'                                      01946
         BNE   NLABEOF2                                                  01947
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN              01948
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01949
         B     ENDIBMSL                                                  01950
NLABEOF2 DS    0H                                                        01951
***** ----- *****                                                        01952
         CLC   EXTLBLIN(4),=C'EOV1'                                      01953
         BNE   NLABEOV1                                                  01954
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN             01955
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01956
         B     ENDIBMSL                                                  01957
NLABEOV1 DS    0H                                                        01958
         CLC   EXTLBLIN(4),=C'EOV2'                                      01959
         BNE   NLABEOV2                                                  01960
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN             01961
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01962
         B     ENDIBMSL                                                  01963
NLABEOV2 DS    0H                                                        01964
ENDIBMSL DS    0H                                                        01965
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE                01966
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                   01967
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW              01968
* -------------- EOF2EOV BELOW ----------------- *                       01969
ISITEOV  DS    0H                                                        01970
         CLC   EXTLBLIN(3),=C'EOV'                                       01971
         BNE   NOEOF2V                                                   01972
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                01973
         BZ    NOEOF2V                                                   01974
         MVC   EXTLBLIN(3),=C'EOF'                                       01975
NOEOF2V  DS    0H                                                        01976
* -------------- EOF2EOV ABOVE ----------------- *                       01977
* ----------                                                             01978
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?      01979
         BZ    BLNOCORR             NO. SKIP THIS.                       01980
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                       01981
         BE    CORBLKCT                                                  01982
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                       01983
         BE    CORBLKCT                                                  01984
BLNOCORR B     EOFOREOV                                                  01985
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW          01986
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?                01987
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.         01988
         TM    PARMFLG3,X'80'       FIXING LABELS?                       01989
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING       01990
MAKEEOF2 DS    0H                                                        01991
         MVC   EXTLBLIN(80),HDR2SAV                                      01992
         MVC   EXTLBLIN(3),=C'EOF'                                       01993
NOMKEOF2 DS    0H                                                        01994
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE          01995
* ----------                                                             01996
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                         01997
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET          01998
**** ---- ****                                                           01999
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                  02000
         BNE   NOTLUHL                                                   02001
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS     02002
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS  02003
NOTLUHL  DS    0H                                                        02004
**** ---- ****                                                           02005
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                 02006
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.             02007
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD         02008
ENDHEADR DS    0H                                                        02009
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD   02010
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE  02011
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER             02012
*** -----                                                                02013
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE            02014
         BZ    NOEODFL1                                                  02015
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK     02016
         B     ENDTRAIL                                                  02017
NOEODFL1 DS    0H                                                        02018
*** -----                                                                02019
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME            02020
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA         02021
ENDTRAIL DS    0H                                                        02022
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS         02023
         A     R0,=F'1'         ADD 1 TO COUNT                           02024
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                  02025
*** ---                                                                  02026
         TM    PARMFLG4,X'10'       LIMITING LABELS?                     02027
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.              02028
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?      02029
         BL    ENDNOLIM             NOT YET. GET OUT.                    02030
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.       02031
ENDNOLIM DS    0H                                                        02032
*** ---                                                                  02033
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                  02034
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN     02035
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD  02036
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS              02037
         B     WRTTAPMK                                                  02038
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02039
CORBLKCT DS    0H                                                        02040
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED     02041
         BZ    NOCORBLK          NO. BYPASS.                             02042
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED   02043
         BZ    NOCORBLK          NO. BYPASS.                             02044
*** ---  FIXING LABELS  --- ***                                          02045
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                 02046
         BZ    NOFIXL1           NO. DON'T FIX.                          02047
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?               02048
         BO    NOFIXL1           YES. DON'T CREATE ONE.                  02049
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1            02050
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL              02051
NOFIXL1  DS    0H                                                        02052
*** ---  FIXING LABELS  --- ***                                          02053
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT      02054
         STM   R2,R3,SAVE2TO3                                            02055
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD     02056
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    02057
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 02058
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        02059
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              02060
         LM    R2,R3,SAVE2TO3                                            02061
NOCORBLK B     EOFOREOV                                                  02062
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02063
GOTVOL01 DS    0H                                                        02064
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT    02065
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"         02066
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                        02067
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?              02068
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT         02069
         MVC   VOLNEW(6),VOLSTG        OVERLAY NEW VOLSER FOR ALL OUTS   02070
NOOVLALL DS    0H                                                        02071
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                        02072
         B     WRTLABEL                                                  02073
WRTLABEL OI    WRLBLFLG,X'01'                                            02074
* --------------- PRINT LABEL TO BE WRITTEN ------------------- *        02075
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN       02076
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM          02077
TRYPXXX0 DS    0H                                                        02078
         CLC   EXTLBLIN(4),=C'VOL1'                                      02079
         BNE   TRYPUSER                                                  02080
         MVI   LINE-1,C' '                                    SBG 09/00  02081
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 09/00  02082
         MVC   VOL1SER(6),LINE       CLEAR FIELD TO BLANKS    SBG 09/00  02083
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL   SBG 09/00  02084
         MVC   VOL1OWNR(10),LINE     CLEAR FIELD TO BLANKS    SBG 09/00  02085
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION   SBG 09/00  02086
         MVC   LINE(133),VOL1LBL  INDICATE THAT VOL1 FOUND    SBG 09/00  02087
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 09/00  02088
         B     NOPRTEXT                                                  02089
TRYPUSER DS    0H                                                        02090
         CLC   EXTLBLIN(3),=C'UHL'     USER HEADER LABEL?                02091
         BE    PUSERPR                 YES.  PRINT ENTIRE LABEL.         02092
         CLC   EXTLBLIN(3),=C'UTL'     USER TRAILER LABEL?               02093
         BE    PUSERPR                 YES.  PRINT ENTIRE LABEL.         02094
         B     TRYPXXX1                                                  02095
PUSERPR  ST    R3,SAVE3REG                                               02096
         LA    R3,EXTLBLIN                                               02097
         BAL   R7,PRTUSER     PRINT LABEL INFO                           02098
         L     R3,SAVE3REG                                               02099
         B     NOPRTEXT                                                  02100
TRYPXXX1 CLC   EXTLBLIN(4),=C'HDR1'                                      02101
         BE    PXXX1PR                                                   02102
         CLC   EXTLBLIN(4),=C'EOF1'                                      02103
         BE    PXXX1PR                                                   02104
         CLC   EXTLBLIN(4),=C'EOV1'                                      02105
         BE    PXXX1PR                                                   02106
         B     TRYPXXX2                                                  02107
PXXX1PR  ST    R3,SAVE3REG                                               02108
         LA    R3,EXTLBLIN                                               02109
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           02110
         L     R3,SAVE3REG                                               02111
         B     NOPRTEXT                                                  02112
TRYPXXX2 CLC   EXTLBLIN(4),=C'HDR2'                                      02113
         BE    PXXX2PR                                                   02114
         CLC   EXTLBLIN(4),=C'EOF2'                                      02115
         BE    PXXX2PR                                                   02116
         CLC   EXTLBLIN(4),=C'EOV2'                                      02117
         BE    PXXX2PR                                                   02118
         B     NOPRTEXT                                                  02119
PXXX2PR  ST    R3,SAVE3REG                                               02120
         LA    R3,EXTLBLIN                                               02121
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           02122
         L     R3,SAVE3REG                                               02123
NOPRTEXT DS    0H             DON'T PRINT EXTERNAL LABEL ON REPORT       02124
* --------------- PRINT LABEL TO BE WRITTEN ------------------- *        02125
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02126
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE          02127
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                    02128
         B     WRITE1         WRITE LABEL RECORD                         02129
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE             02130
WRTTAPMK DS    0H                                                        02131
*** ----------------                                                     02132
         TM    INEODFLG,X'02'                                            02133
         BZ    NOEODNOW                                                  02134
         TM    WRLBLFLG,X'04'                                            02135
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR  02136
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?       02137
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.                02138
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS        02139
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR   02140
NOEODNOW DS    0H                                                        02141
*** ----------------                                                     02142
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                           02143
         B     WRITE1         WRITE TAPE MARK                            02144
* ------------------ SPECIAL ROUTINES ------------------------------- *  02145
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD    02146
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN         02147
         B     READIN             AND GO BACK WHERE YOU STARTED          02148
* ------------------ SPECIAL ROUTINES ------------------------------- *  02149
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS   02150
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                    02151
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02152
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                    02153
         BZ    NOFIXLBL          NO. DON'T TRY IT.                       02154
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING    02155
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                  02156
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE              02157
         B     CLOSMALL          FINISHED, GET OUT.                      02158
NOFIXLBL DS    0H                                                        02159
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02160
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN       02161
         B     READIN2        WRITE OUTPUTS AND FINISH                   02162
* ------------------------------------------------------------------- *  02163
*                                                                        02164
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                           02165
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                        02166
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                      02167
*      ALREADY.                                                          02168
*                                                                        02169
* ------------------ SPECIAL ROUTINES ------------------------------- *  02170
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02171
         EJECT                                                           02172
READGO1  DS    0H                                                        02173
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW          02174
         TM    PARMFLG3,X'04'  COUNTING BYTES?                           02175
         BZ    READNCNT                                                  02176
         TM    ISLBLFLG,X'01'  LAST READ A LABEL?                        02177
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE        02178
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02179
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY      02180
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02181
READNCNT DS    0H                                                        02182
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE          02183
**---->            LABEL STRIPPING CODE          BELOW                   02184
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02185
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING        02186
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW       02187
         BZ    RDNOSTRP           NO IT WASN'T                           02188
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.   02189
RDNOSTRP DS    0H                                                        02190
**---->            LABEL STRIPPING CODE          ABOVE                   02191
         STH   R2,OUTCCW+6    STORE FOR WRITE                 SBG 03/00  02192
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER        02193
         ST    R7,STOR7REG                                               02194
         L     R7,BLOKCNT                                                02195
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS              02196
         ST    R7,BLOKCNT                                                02197
         L     R7,STOR7REG                                               02198
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *       02199
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                   02200
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT           02201
         OI    FLAG2A,EOV       YES. WRITE AND GET OUT OF PROGRAM.       02202
NOINITT1 DS    0H                                                        02203
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *       02204
         B     WRITE1         CONTINUE                                   02205
*                                                             SBG 04/00  02206
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02207
READIN1  DS    0H             COME HERE IF TM WAS READ        SBG 04/00  02208
* ------------------------- ADD LABEL TO NL CODE ----------- *           02209
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                 02210
         BZ    NONLSL1          NO.  BYPASS.                             02211
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS            02212
*** ---                                                                  02213
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?         02214
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.    02215
*                               DO NOT COLLECT 200 DOLLARS.              02216
*** ---                                                                  02217
NONLSL1  DS    0H                                                        02218
* ------------------------- ADD LABEL TO NL CODE ----------- *           02219
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02220
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?         02221
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.        02222
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?        02223
         BO    WRCTLHDR         YES. PUT IT OUT.                         02224
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?        02225
         BO    WRCTLEOF         YES. PUT IT OUT.                         02226
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?        02227
         BO    WRCTLEOV         YES. PUT IT OUT.                         02228
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.       02229
WRCTLHDR DS    0H                                                        02230
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02231
         MVC   LLINE(80),LABELITH   MARK END OF LABEL         SBG 09/00  02232
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02233
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02234
WRCTLEOF DS    0H                                                        02235
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02236
         MVC   LLINE(80),LABELITR   MARK END OF LABEL         SBG 09/00  02237
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02238
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02239
WRCTLEOV DS    0H                                                        02240
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02241
         MVC   LLINE(80),LABELITV   MARK END OF LABEL         SBG 09/00  02242
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02243
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02244
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE          02245
NOCNTLWR DS    0H                                                        02246
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02247
         TM    DATFLAG,X'10'  NO DATA READ YET?               SBG 03/00  02248
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY  SBG 03/00  02249
         CLC   LTMRPTI,SKIPPED   WE SKIP LEADING TAPEMARKS?   SBG 03/00  02250
         BNE   RDNOSKIP                                       SBG 03/00  02251
         MVI   LINE-1,C' '                                    SBG 03/00  02252
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02253
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM SKIPPED  SBG 03/00  02254
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  02255
         B     READIN         DO ANOTHER READ                 SBG 03/00  02256
RDNOSKIP DS    0H                                             SBG 03/00  02257
         MVI   LINE-1,C' '                                    SBG 03/00  02258
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02259
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM COPIED   SBG 03/00  02260
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  02261
         B     MARKFILE                                       SBG 03/00  02262
READINGO DS    0H                                             SBG 04/00  02263
*------------------------------------> HEX PRINT LIMIT - BELOW           02264
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02265
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT            02266
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02267
NOHXPRST DS    0H                                                        02268
*------------------------------------> HEX PRINT LIMIT - ABOVE           02269
         ST    R7,STOR7REG                                               02270
         L     R7,FILECNT                                                02271
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  02272
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02273
         UNPK  FILEDONE+6(5),DWORD+5(3)  UNPACK FILE NUMBER              02274
         ST    R7,FILECNT                                                02275
         L     R7,BLOKCNT                                                02276
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             02277
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02278
         UNPK  FILEDONE+21(7),DWORD+4(4)  UNPACK BLOCK COUNT             02279
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS            02280
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    02281
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02282
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02283
         BZ    MARKNCNT           NO-SKIP ROUTINE                        02284
         MVC   FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                   02285
         MVC   FILECONT,=C'CONTAINING'                                   02286
         L     R4,DBINH           LOAD REG WITH HI ORDER                 02287
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             02288
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           02289
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  02290
         L     R4,DBINL           LOAD REG WITH LOW ORDER                02291
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            02292
         AP    QWORD,DWORD        AND ADD IT IN                          02293
         ED    FILEBYTE,QWORD+6   DISPLAY COUNT IN LINE                  02294
** ----                                                                  02295
         LM    R4,R5,TOTBYTES                                            02296
         A     R5,DBINL            LOW ORDER COUNT                       02297
         BNO   MARKNOVR            B IF NO OVERFLOW                      02298
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02299
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02300
MARKNOVR DS    0H                                                        02301
         A     R4,DBINH            HIGH ORDER                            02302
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL               02303
** ----                                                                  02304
         TM    ISLBLFLG,X'01'      CAME FROM READING LABELS?             02305
         BZ    MARKISNL            NO. DON'T ADD TOTALS                  02306
         LM    R4,R5,LABBYTES                                            02307
         A     R5,LABINL           LOW ORDER COUNT                       02308
         BNO   MARKNOVL            B IF NO OVERFLOW                      02309
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02310
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02311
MARKNOVL DS    0H                                                        02312
         A     R4,LABINH           HIGH ORDER                            02313
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL               02314
* - >                                                                    02315
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02316
         BZ    NOSEPLBL                                                  02317
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02318
         MVC   FILECUMT,=C'CUM LABEL:'                                   02319
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                   02320
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02321
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02322
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02323
         CVD   R5,DWORD          LOW ORDER WORD                          02324
         AP    QWORD,DWORD       AND ADD IT IN                           02325
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02326
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02327
NOSEPLBL DS    0H                                                        02328
* - >                                                                    02329
         B     MARKNOLB                                                  02330
MARKISNL DS    0H                                                        02331
         TM    ISLBLFLG,X'01'      CAME FROM READING LABELS?             02332
         BO    MARKNOLB                                                  02333
         LM    R4,R5,FILBYTES                                            02334
         A     R5,DBINFL           LOW ORDER COUNT                       02335
         BNO   MARKNOVF            B IF NO OVERFLOW                      02336
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02337
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02338
MARKNOVF DS    0H                                                        02339
         A     R4,DBINFH           HIGH ORDER                            02340
         STM   R4,R5,FILBYTES                                            02341
* - >                                                                    02342
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02343
         BZ    NOSEPDAT                                                  02344
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02345
         MVC   FILECUMT,=C'CUM DATA :'                                   02346
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                   02347
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02348
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02349
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02350
         CVD   R5,DWORD          LOW ORDER WORD                          02351
         AP    QWORD,DWORD       AND ADD IT IN                           02352
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02353
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02354
NOSEPDAT DS    0H                                                        02355
* - >                                                                    02356
MARKNOLB DS    0H                                                        02357
** ----                                                                  02358
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?                02359
         BZ    MARKNCN2           NO-SKIP ROUTINE                        02360
* - >                                                                    02361
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02362
         MVC   FILECUMT,=C'CUM TOTAL:'                                   02363
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                   02364
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02365
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02366
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02367
         CVD   R5,DWORD          LOW ORDER WORD                          02368
         AP    QWORD,DWORD       AND ADD IT IN                           02369
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02370
* - >                                                                    02371
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE                02372
MARKNCNT DS    0H                                                        02373
         MVC   FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02374
MARKNCN2 MVC   FILETBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02375
MARKNCNE DS    0H                                                        02376
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02377
         PUT   SYSPRINT,FILEDONE  WRITE IT                               02378
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02379
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02380
         BZ    MARKNTOT           NO-SKIP ROUTINE                        02381
         MVC   FILECONT,=C'          '                                   02382
         MVC   FILECUMT,=C'          '                                   02383
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE              02384
         ST    R4,DBINH            ZERO BYTE COUNT                       02385
         ST    R4,DBINL            ZERO BYTE COUNT                       02386
         ST    R4,LABINH           ZERO BYTE COUNT                       02387
         ST    R4,LABINL           ZERO BYTE COUNT                       02388
         ST    R4,DBINFH           ZERO BYTE COUNT                       02389
         ST    R4,DBINFL           ZERO BYTE COUNT                       02390
MARKNTOT DS    0H                                                        02391
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02392
MARKFILE DS    0H                                                        02393
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE              02394
         ST    R7,BLOKCNT                                                02395
         L     R7,FILECNT                                                02396
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                       02397
         ST    R7,FILECNT                                                02398
         L     R7,STOR7REG                                               02399
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?        SBG 03/00  02400
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK     SBG 03/00  02401
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                          02402
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES             02403
         BZ    MARKFILA          NO - SKIP THIS CODE                     02404
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?     02405
         BNL   MARKFILA          NO - NO RESTRICTIONS                    02406
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA     02407
MARKFILA DS    0H                                                        02408
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                          02409
         TM    PARMFLG4,X'02'   Stripping labels?                        02410
         BZ    MARKSTRX         no - bypass strip-related code           02411
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?                02412
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                  02413
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.     02414
         B     READIN           YES. SKIP WRITING THE T.M. TOO           02415
MARKSTRX DS    0H                                                        02416
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK      SBG 04/00  02417
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?     SBG 04/00  02418
         BZ    MARKGO         NO. TEST FOR 2ND TM             SBG 04/00  02419
         B     READIN2        YES. WRITE TO OUTPUTS & END     SBG 04/00  02420
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                           02421
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS SBG 03/00  02422
NOLBL    MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM      SBG 03/00  02423
         B     WRITE1         GO WRITE TM TO OUTPUTS                     02424
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02425
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2      SBG 03/00  02426
         BZ    INEODATA       NOT EITHER. END AS USUAL.       SBG 03/00  02427
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ SBG 03/00  02428
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG  SBG 03/00  02429
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02430
*                                                             SBG 04/00  02431
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02432
INEODATA DS    0H                                                        02433
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE       02434
*                                                                        02435
READIN2  DS    0H                                                        02436
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02437
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?      02438
         BZ    READ2GO           NO. BYPASS THIS CODE.                   02439
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA  02440
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS           02441
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?              02442
         BZ    NOEXTMK           NO                                      02443
         B     WRTTAPMK                                                  02444
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?           02445
         BZ    READ2GO           NO. BYPASS REST OF CODE.                02446
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.          02447
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                    02448
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS    02449
         B     READIN            DON'T WRITE FINAL TAPE MARK YET         02450
READ2STP DS    0H                                                        02451
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS            02452
READ2GO  DS    0H                                                        02453
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02454
         OI    FLAG2A,EOV     INDICATE EOV ON INPUT                      02455
* --- >>>  ------------------ below -------- Skip writing last T.M.      02456
* -------------------------------------------------------------- *       02457
*            When stripping labels, somehow an extra             *       02458
*            tape mark gets written.  This is a kludge           *       02459
*            to correct that.....                                *       02460
* -------------------------------------------------------------- *       02461
         TM    PARMFLG4,X'02'    Stripping Labels?                       02462
         BZ    READ2GNS          No. don't skip writing last t.m.        02463
*        MVC   LINE(133),LINE-1       CLEAR LINE                         02464
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1              02465
*        PUT   SYSPRINT,LINE                                             02466
         B     WRITE17           Do not write the extra tape mark        02467
READ2GNS DS    0H                                                        02468
* --- >>>  ------------------ above -------- Skip writing last T.M.      02469
         B     WRITE1                                                    02470
         SPACE 3                                                         02471
* -------------------- Code for Initting Tapes ---------->>>>> below
TLITWRIT DS    0H                                                        02472
         TM    PARMFLG3,X'01'                                            02473
         BZ    TLITWRIE                                                  02474
TLITREW1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?
         BO    TLITREW2                YES. SET WRITE CCW BACK.
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.
TLITREW2 DS    0H                      ALREADY DID THE REWIND.
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02475
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          02476
TLITSKP1 DS    0H                                                        02477
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              02478
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1        02479
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     02480
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          02481
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     02482
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          02483
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1    02484
         MVC   EXTLBLIN+41(10),TAPEOWN   And the Tape Owner if any
* --> Hex printing - below
         TM    PARMFLG5,X'20'          Is Hex Printing On?
         BZ    NPRHINT1                No. Bypass it.
         ST    R7,R7HXPRT              Save BAL register.
         BAL   R7,HEXPRNEX             Hex print from external labels.
         L     R7,R7HXPRT              Restore BAL register.
NPRHINT1 DS    0H
* --> Hex printing - above
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02485
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        02486
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        02487
TLITSKP2 DS    0H                                                        02488
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    02489
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     02490
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1    02491
* --> Hex printing - below
         TM    PARMFLG5,X'20'          Is Hex Printing On?
         BZ    NPRHINT2                No. Bypass it.
         ST    R7,R7HXPRT              Save BAL register.
         BAL   R7,HEXPRNEX             Hex print from external labels.
         L     R7,R7HXPRT              Restore BAL register.
NPRHINT2 DS    0H
* --> Hex printing - above
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02492
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             02493
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    02494
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     02495
TLITWRIE DS    0H                                                        02496
* -------------------- Code for Initting Tapes ---------->>>>> above
*                                                                        02497
*  WRITE TO OUTPUT TAPES                                                 02498
*                                                                        02499
WRITE1   DS    0H                                             SBG 06/00  02500
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?              02501
         BNE   WRNOTPMK         No. Don't touch bytes to be moved        02502
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved              02503
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.        02504
WRNOTPMK DS    0H                                                        02505
* --- READ ONLY CODE ------------------------------- BELOW -- SBG 06/00  02506
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02507
         BO    WRITE17    YES--NO WRITES - ONLY READS         SBG 06/00  02508
* --- READ ONLY CODE ------------------------------- ABOVE -- SBG 06/00  02509
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                    02510
         BZ    WRITE2         NO                                         02511
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER     02512
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE  02513
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02514
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02515
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                  02516
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02517
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02518
         EXCP  OUTIOB         WRITE IT                                   02519
         WAIT  ECB=OUTECB     WAIT FOR IT                                02520
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02521
         BNE   OUTERR         NO - ERROR                                 02522
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                    02523
         BZ    WRITE3         NO                                         02524
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER     02525
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE  02526
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02527
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02528
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                  02529
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02530
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02531
         EXCP  OUTIOB         WRITE IT                                   02532
         WAIT  ECB=OUTECB     WAIT FOR IT                                02533
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02534
         BNE   OUTERR         NO - ERROR                                 02535
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                    02536
         BZ    WRITE4         NO                                         02537
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER     02538
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE  02539
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02540
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02541
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                  02542
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02543
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02544
         EXCP  OUTIOB         WRITE IT                                   02545
         WAIT  ECB=OUTECB     WAIT FOR IT                                02546
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02547
         BNE   OUTERR         NO - ERROR                                 02548
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                    02549
         BZ    WRITE5         NO                                         02550
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER     02551
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE  02552
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02553
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02554
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                  02555
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02556
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02557
         EXCP  OUTIOB         WRITE IT                                   02558
         WAIT  ECB=OUTECB     WAIT FOR IT                                02559
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02560
         BNE   OUTERR         NO - ERROR                                 02561
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                    02562
         BZ    WRITE6         NO                                         02563
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER     02564
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE  02565
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02566
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02567
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                  02568
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02569
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02570
         EXCP  OUTIOB         WRITE IT                                   02571
         WAIT  ECB=OUTECB     WAIT FOR IT                                02572
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02573
         BNE   OUTERR         NO - ERROR                                 02574
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                    02575
         BZ    WRITE7         NO                                         02576
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER     02577
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE  02578
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02579
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02580
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                  02581
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02582
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02583
         EXCP  OUTIOB         WRITE IT                                   02584
         WAIT  ECB=OUTECB     WAIT FOR IT                                02585
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02586
         BNE   OUTERR         NO - ERROR                                 02587
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                    02588
         BZ    WRITE8         NO                                         02589
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER     02590
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE  02591
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02592
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02593
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                  02594
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02595
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02596
         EXCP  OUTIOB         WRITE IT                                   02597
         WAIT  ECB=OUTECB     WAIT FOR IT                                02598
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02599
         BNE   OUTERR         NO - ERROR                                 02600
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                    02601
         BZ    WRITE9         NO                                         02602
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER     02603
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE  02604
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02605
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02606
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                  02607
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02608
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02609
         EXCP  OUTIOB         WRITE IT                                   02610
         WAIT  ECB=OUTECB     WAIT FOR IT                                02611
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02612
         BNE   OUTERR         NO - ERROR                                 02613
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                    02614
         BZ    WRITE10        NO                                         02615
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER     02616
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE  02617
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02618
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02619
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                  02620
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02621
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02622
         EXCP  OUTIOB         WRITE IT                                   02623
         WAIT  ECB=OUTECB     WAIT FOR IT                                02624
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02625
         BNE   OUTERR         NO - ERROR                                 02626
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                    02627
         BZ    WRITE11        NO                                         02628
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER     02629
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE  02630
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02631
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02632
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                  02633
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02634
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02635
         EXCP  OUTIOB         WRITE IT                                   02636
         WAIT  ECB=OUTECB     WAIT FOR IT                                02637
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02638
         BNE   OUTERR         NO - ERROR                                 02639
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                    02640
         BZ    WRITE12        NO                                         02641
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER     02642
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE  02643
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02644
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02645
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                  02646
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02647
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02648
         EXCP  OUTIOB         WRITE IT                                   02649
         WAIT  ECB=OUTECB     WAIT FOR IT                                02650
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02651
         BNE   OUTERR         NO - ERROR                                 02652
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                    02653
         BZ    WRITE13        NO                                         02654
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER     02655
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE  02656
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02657
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02658
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                  02659
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02660
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02661
         EXCP  OUTIOB         WRITE IT                                   02662
         WAIT  ECB=OUTECB     WAIT FOR IT                                02663
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02664
         BNE   OUTERR         NO - ERROR                                 02665
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                    02666
         BZ    WRITE14        NO                                         02667
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER     02668
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE  02669
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02670
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02671
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                  02672
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02673
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02674
         EXCP  OUTIOB         WRITE IT                                   02675
         WAIT  ECB=OUTECB     WAIT FOR IT                                02676
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02677
         BNE   OUTERR         NO - ERROR                                 02678
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                    02679
         BZ    WRITE15        NO                                         02680
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER     02681
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE  02682
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02683
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02684
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                  02685
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02686
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02687
         EXCP  OUTIOB         WRITE IT                                   02688
         WAIT  ECB=OUTECB     WAIT FOR IT                                02689
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02690
         BNE   OUTERR         NO - ERROR                                 02691
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                    02692
         BZ    WRITE16        NO                                         02693
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER     02694
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE  02695
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02696
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02697
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                  02698
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02699
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02700
         EXCP  OUTIOB         WRITE IT                                   02701
         WAIT  ECB=OUTECB     WAIT FOR IT                                02702
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02703
         BNE   OUTERR         NO - ERROR                                 02704
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                    02705
         BZ    WRITE17        NO                                         02706
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER     02707
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE  02708
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02709
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02710
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                  02711
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02712
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02713
         EXCP  OUTIOB         WRITE IT                                   02714
         WAIT  ECB=OUTECB     WAIT FOR IT                                02715
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02716
         BNE   OUTERR         NO - ERROR                                 02717
WRITE17  DS    0H                                                        02718
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?               02719
         BNE   WR17NTPM       No. Don't correct bytes moved field        02720
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field    02721
WR17NTPM DS    0H                                                        02722
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                         02723
         BO    ENDINPUT       YES. CLOSE.                                02724
         TM    FLAG2A,EOV     END OF INPUT?                              02725
         BO    ENDINPUT       YES - QUIT                                 02726
         B     READIN         NO - LOOP                                  02727
         SPACE 3                                                         02728
*                                                                        02729
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                             02730
*                                                                        02731
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                                02732
         BZ    INERR1         NO - ASSUME DATA CHECK                     02733
         MVC   LINE(133),INEQC  SET ERROR MESSAGE                        02734
         MVC   INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR        02735
         B     INERR2         CONTINUE                                   02736
INERR1   MVC   LINE(133),INDCK  SET ERROR MESSAGE                        02737
         MVC   INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR        02738
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                        02739
         MVI   INECB,X'00'    RESET ECB                                  02740
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X 02741
               6,INECB,ROUTCDE=(3)                                       02742
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE       02743
*                             WHO CARES WHAT THE REPLY IS                02744
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                      02745
         B     CLOSMALL                                                  02746
*        ABEND 69             QUIT                                       02747
         SPACE 3                                                         02748
*                                                                        02749
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY      02750
*                                                                        02751
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG       02752
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE                      02753
         TM    OUTCSW+4,X'02' UNIT CHECK?                                02754
         BO    OUTERUC        YES. HANDLE IT.                            02755
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                   02756
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                     02757
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION       02758
         MVC   LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE       02759
         B     OUTERR2            GO FILL IN REST OF THE INFO            02760
OUTERUC  MVC   LINE(133),OUTEQC  SET ERROR MESSAGE                       02761
         B     OUTERR2        CONTINUE                                   02762
OUTERR1  MVC   LINE(133),OUTDCK  SET ERROR MESSAGE                       02763
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                             02764
         L     R5,16          R5=CVT                                     02765
         L     R5,0(,R5)      R5=TCB WORDS                               02766
         L     R5,4(,R5)      R5=MY TCB                                  02767
         L     R5,12(,R5)     R5=TIOT                                    02768
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT              02769
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                  02770
         MVC   SAVDDN(5),4(R4)   Save DDNAME                             02771
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                     02772
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE           02773
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE                02774
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE                     02775
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB                 02776
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY          02777
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE       02778
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                 02779
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO                       02780
         MVC   SAVELINE(133),LINE                                        02781
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              02782
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.      02783
         MVC   LINE(133),LINE-1      CLEAR LINE                          02784
         MVC   LINE(133),OUTCOUNT    How much was copied?                02785
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE   02786
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE              02787
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE        02788
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE              02789
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ        02790
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP      02791
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  02792
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02793
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                 02794
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ       02795
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ          02796
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             02797
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02798
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS            02799
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    02800
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE           02801
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ        02802
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                 02803
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             02804
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           02805
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  02806
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER                02807
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            02808
         AP    QWORD,DWORD        AND ADD IT IN                          02809
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN               02810
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE              02811
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              02812
* ---- >    WTO on a Unit Exception   < ---- Below                       02813
         TM    PARMFLG5,X'40'   Do we WTO on a Unit Exception?           02814
         BO    OUTERR2A         Yes. WTO anyway, as of old.              02815
* ---- >    WTO on a Unit Exception   < ---- Above                       02816
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY           02817
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE             02818
*                               THIS IS A SEMI-NORMAL CONDITION          02819
*                               AND WHY INVOLVE THE OPERATOR?            02820
OUTERR2A MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR    02821
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                  02822
OUTERR4  DS    0H                                                        02823
         OI    OUTERFLG,X'01'    SHOW THIS WTOR WAS ISSUED               02824
         WTOR  '                                                       X 02825
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)       02826
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                 02827
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                           02828
         BNE   OUTERR3        NO - TRY AGAIN                             02829
* ------------------------------------------------------------------- *  02830
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   *  02831
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             *  02832
* ------------------------------------------------------------------- *  02833
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB              02834
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                 02835
*                             DON'T BOTHER WAITING FOR REWIND            02836
* ------------------------------------------------------------------- *  02837
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR           02838
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                        02839
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02840
         BNE   OUTERR5        NO                                         02841
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02842
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                 02843
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                        02844
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02845
         BNE   OUTERR6        NO                                         02846
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02847
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                 02848
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                        02849
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02850
         BNE   OUTERR7        NO                                         02851
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02852
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                 02853
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                        02854
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02855
         BNE   OUTERR8        NO                                         02856
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02857
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                 02858
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                        02859
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02860
         BNE   OUTERR9        NO                                         02861
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02862
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                 02863
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                        02864
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02865
         BNE   OUTERR10       NO                                         02866
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02867
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                 02868
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                        02869
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02870
         BNE   OUTERR11       NO                                         02871
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02872
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                 02873
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                        02874
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02875
         BNE   OUTERR12       NO                                         02876
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02877
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                 02878
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                        02879
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02880
         BNE   OUTERR13       NO                                         02881
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02882
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                 02883
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                       02884
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02885
         BNE   OUTERR14       NO                                         02886
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02887
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                 02888
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                       02889
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02890
         BNE   OUTERR15       NO                                         02891
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02892
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                 02893
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                       02894
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02895
         BNE   OUTERR16       NO                                         02896
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02897
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                 02898
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                       02899
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02900
         BNE   OUTERR17       NO                                         02901
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02902
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                 02903
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                       02904
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02905
         BNE   OUTERR18       NO                                         02906
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02907
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                 02908
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                       02909
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02910
         BNE   OUTERR19       NO                                         02911
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02912
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                 02913
*                             THEN IT MUST BE OUTPUT 16                  02914
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02915
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                 02916
         SPACE 3                                                         02917
*                                                                        02918
*  END OF INPUT -- FINISH UP                                             02919
*                                                                        02920
ENDINPUT DS    0H                                                        02921
         SPACE 3                                                         02922
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  02923
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02924
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE       SBG 06/00  02925
         MVC   LINE(133),SUCCESSR    MOVE READ-ONLY MESSAGE   SBG 06/00  02926
         B     ENDIN16          WRITE OUT MESSAGE             SBG 06/00  02927
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  02928
ENDIN0   MVC   LINE(133),SUCCESS  MOVE MESSAGE TO LINE                   02929
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                       02930
         BO    ENDIN1         YES - CONTINUE                             02931
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                   02932
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                       02933
         BO    ENDIN2         YES - CONTINUE                             02934
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                 02935
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                       02936
         BO    ENDIN3         YES - CONTINUE                             02937
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                 02938
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                       02939
         BO    ENDIN4         YES - CONTINUE                             02940
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                 02941
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                       02942
         BO    ENDIN5         YES - CONTINUE                             02943
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                  02944
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                       02945
         BO    ENDIN6         YES - CONTINUE                             02946
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                   02947
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                       02948
         BO    ENDIN7         YES - CONTINUE                             02949
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                   02950
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                        02951
         BO    ENDIN8         YES - CONTINUE                             02952
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                   02953
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                        02954
         BO    ENDIN9         YES - CONTINUE                             02955
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                   02956
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                        02957
         BO    ENDIN10        YES - CONTINUE                             02958
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                   02959
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                        02960
         BO    ENDIN11        YES - CONTINUE                             02961
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                   02962
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                        02963
         BO    ENDIN12        YES - CONTINUE                             02964
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                   02965
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                        02966
         BO    ENDIN13        YES - CONTINUE                             02967
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                   02968
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                        02969
         BO    ENDIN14        YES - CONTINUE                             02970
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                   02971
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                        02972
         BO    ENDIN15        YES - CONTINUE                             02973
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                   02974
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                        02975
         BO    ENDIN16        YES - CONTINUE                             02976
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                  02977
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                   02978
         SPACE 3                                                         02979
*                                                                        02980
*  CLOSE ALL FILES                                                       02981
*                                                                        02982
CLOSMALL DS    0H                                                        02983
*        B     OUTERR        REMOVE - REMOVE - REMOVE                    02984
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *              02985
         TM    PARMFLG3,X'04'    COUNTING BYTES?                         02986
         BZ    ENDINTOT          NO - SKIP ROUTINE                       02987
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES               02988
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02989
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02990
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02991
         CVD   R5,DWORD          LOW ORDER WORD                          02992
         AP    QWORD,DWORD       AND ADD IT IN                           02993
         ED    TOTBPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              02994
         PUT   SYSPRINT,TOTBLINE                                         02995
         MVI   LINE,C' '                                                 02996
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          02997
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS     02998
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02999
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03000
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03001
         CVD   R5,DWORD          LOW ORDER WORD                          03002
         AP    QWORD,DWORD       AND ADD IT IN                           03003
         ED    TOTLPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              03004
         PUT   SYSPRINT,TOTLLINE                                         03005
         MVI   LINE,C' '                                                 03006
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03007
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES      03008
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03009
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03010
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03011
         CVD   R5,DWORD          LOW ORDER WORD                          03012
         AP    QWORD,DWORD       AND ADD IT IN                           03013
         ED    TOTWPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              03014
         PUT   SYSPRINT,TOTWLINE                                         03015
         MVI   LINE,C' '                                                 03016
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03017
ENDINTOT DS    0H                                                        03018
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *              03019
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - *  03020
         TM    LBLFLAG,X'08'  HAVE WE COPIED AN INITTED TAPE?            03021
         BZ    NOINITT3       NOPE. DON'T REPORT IT EITHER.              03022
         MVI   LINE-1,C' '                                               03023
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           03024
         MVC   INITSER(6),INVOLUME  MOVE IN VOLSER FROM VOL1             03025
         MVC   LINE(133),INITMSG MSG-WE'RE DOING INITTED TAPE            03026
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03027
NOINITT3 DS    0H                                                        03028
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - *  03029
         TM    PARMFLG3,X'01'   INIT ONLY?                               03030
         BO    NOCLOSIN                                                  03031
         CLOSE (IN)                                                      03032
NOCLOSIN DS    0H                                                        03033
         CLOSE (SYSPRINT)                                                03034
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  03035
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE          SBG 09/00  03036
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    03037
         CLOSE (LABLDUMP)                                                03038
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE            03039
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                        03040
         BZ    NOLABACL         NO. NO FILE TO CLOSE                     03041
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                        03042
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                     03043
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    03044
         CLOSE (LABADDIN)                                                03045
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE        03046
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03047
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03048
         BO    THEEND     YES. ONLY CLOSE INPUT AND SYSPRINT. SBG 06/00  03049
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03050
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                             03051
         BZ    CLOSE1         NO                                         03052
         CLOSE (OUT1)         CLOSE OUTPUT 1                             03053
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                             03054
         BZ    CLOSE2         NO                                         03055
         CLOSE (OUT2)         CLOSE OUTPUT 2                             03056
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                             03057
         BZ    CLOSE3         NO                                         03058
         CLOSE (OUT3)         CLOSE OUTPUT 3                             03059
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                             03060
         BZ    CLOSE4         NO                                         03061
         CLOSE (OUT4)         CLOSE OUTPUT 4                             03062
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                             03063
         BZ    CLOSE5         NO                                         03064
         CLOSE (OUT5)         CLOSE OUTPUT 5                             03065
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                             03066
         BZ    CLOSE6         NO                                         03067
         CLOSE (OUT6)         CLOSE OUTPUT 6                             03068
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                             03069
         BZ    CLOSE7         NO                                         03070
         CLOSE (OUT7)         CLOSE OUTPUT 7                             03071
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                             03072
         BZ    CLOSE8         NO                                         03073
         CLOSE (OUT8)         CLOSE OUTPUT 8                             03074
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                             03075
         BZ    CLOSE9         NO                                         03076
         CLOSE (OUT9)         CLOSE OUTPUT 9                             03077
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                            03078
         BZ    CLOSE10        NO                                         03079
         CLOSE (OUT10)        CLOSE OUTPUT 10                            03080
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                            03081
         BZ    CLOSE11        NO                                         03082
         CLOSE (OUT11)        CLOSE OUTPUT 11                            03083
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                            03084
         BZ    CLOSE12        NO                                         03085
         CLOSE (OUT12)        CLOSE OUTPUT 12                            03086
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                            03087
         BZ    CLOSE13        NO                                         03088
         CLOSE (OUT13)        CLOSE OUTPUT 13                            03089
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                            03090
         BZ    CLOSE14        NO                                         03091
         CLOSE (OUT14)        CLOSE OUTPUT 14                            03092
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                            03093
         BZ    CLOSE15        NO                                         03094
         CLOSE (OUT15)        CLOSE OUTPUT 15                            03095
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                            03096
         BZ    THEEND         NO                                         03097
         CLOSE (OUT16)        CLOSE OUTPUT 16                            03098
         SPACE 3                                                         03099
*                                                                        03100
*  Test for ABEND 069 first.  Did we come from an Input Error?           03101
*                                                                        03102
         TM    ABENDFLG,X'01'    Is ABEND flag on?                       03103
         BZ    THEEND            No.  End normally.                      03104
         ABEND 69                QUIT                                    03105
*                                                                        03106
*  THE END                                                               03107
*                                                                        03108
THEEND   DS    0H                                                        03109
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                 03110
         BO    THEEND0           YES WE DO.  Issue RC = 0.               03111
         MVC   WTOCBT+16(41),FILEDONE                                    03112
WTOCBT   WTO   'CBT990                                              '    03113
THEENDS  DS    0H                                                        03114
         TM    OUTERFLG,X'01'   WTOR ISSUED AT LEAST ONCE?               03115
         BO    THEEND16         Yes, issue RC = 16                       03116
         TM    FLAG2A,ERR       WAS THERE AN ERROR?                      03117
         BO    THEEND8          Yes, issue RC = 8                        03118
         B     THEEND0          Otherwise, issue RC = 0                  03119
THEEND16 DS    0H                                                        03120
         L     R13,4(,R13)                                               03121
         MVC   16(4,R13),=F'16'         Return code 16    in R15         03122
         B     THEEND2                                                   03123
THEEND8  DS    0H                                                        03124
         L     R13,4(,R13)                                               03125
         MVC   16(4,R13),=F'8'          Return code 8     in R15         03126
         B     THEEND2                                                   03127
THEEND0  DS    0H                                                        03128
         L     R13,4(,R13)                                               03129
         MVC   16(4,R13),=F'0'          Return code 0     in R15         03130
THEEND2  DS    0H                                                        03131
         LM    R14,R12,12(R13)                                           03132
         BR    R14                                                       03133
         EJECT                                                           03134
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *      03135
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03136
*    BAL REGISTER IS R4.                                                 03137
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03138
HEX      DS    0H                                                        03139
         MVC   1(1,R15),0(R1)        Move byte                           03140
         UNPK  0(3,R15),1(2,R15)     Unpack                              03141
         TR    0(2,R15),HEXTAB-240                                       03142
         LA    R15,2(,R15)           Increment output pointer            03143
         LA    R1,1(,R1)             Increment input pointer             03144
         BCT   R0,HEX                Decrement length, then loop         03145
         MVI   0(R15),C' '           Blank the trailing byte             03146
         BR    R4                    Return to caller                    03147
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     03148
         SPACE                                                           03149
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03150
*    BAL REGISTER IS R7.                                      SBG 04/00  03151
* --------------------------------------------------------- * SBG 04/00  03152
LABELCHK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS   SBG 04/00  03153
*                         AND SET LABEL FLAGS, ACCORDINGLY,   SBG 04/00  03154
*                         IN THE LBLFLAG BYTE.                SBG 04/00  03155
*              X'01'    HDR1 HAS BEEN SEEN                    SBG 03/00  03156
*              X'02'    HDR2 HAS BEEN SEEN                    SBG 03/00  03157
*              X'04'    VOL1 HAS BEEN SEEN                    SBG 03/00  03158
*              X'08'    HDR1 IS FROM AN INITTED TAPE          SBG 03/00  03159
*              X'10'    EOF1 HAS BEEN SEEN                    SBG 04/00  03160
*              X'20'    EOF2 HAS BEEN SEEN                    SBG 04/00  03161
*              X'40'    EOV1 HAS BEEN SEEN                    SBG 04/00  03162
*              X'80'    EOV2 HAS BEEN SEEN                    SBG 04/00  03163
* --------------------------------------------------------- * SBG 04/00  03164
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *            03165
* -                                                       - *            03166
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *            03167
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *            03168
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *            03169
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *            03170
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *            03171
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *            03172
* --------------------------------------------------------- *            03173
         NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG AT START      03174
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?          SBG 04/00  03175
         BE    CVOL1                PROCESS THE VOL1          SBG 04/00  03176
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?          SBG 04/00  03177
         BE    CHDR1                PROCESS HDR1              SBG 04/00  03178
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?             SBG 04/00  03179
         BE    CHDR2                PROCESS HDR2              SBG 04/00  03180
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?            SBG 04/00  03181
         BE    CEOF1                PROCESS EOF1              SBG 04/00  03182
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?            SBG 04/00  03183
         BE    CEOF2                PROCESS EOF2              SBG 04/00  03184
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?            SBG 04/00  03185
         BE    CEOV1                PROCESS EOV1              SBG 04/00  03186
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?            SBG 04/00  03187
         BE    CEOV2                PROCESS EOV2              SBG 04/00  03188
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL? SBG 04/00  03189
         BE    CUHL                 PROCESS UHL               SBG 04/00  03190
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?    04/00  03191
         BE    CUTL                 PROCESS UTL               SBG 04/00  03192
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL    SBG 04/00  03193
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------  SBG 05/00  03194
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03195
         BO    CVOL1NPR              YES. JUST TURN ON ISLABEL FLAG      03196
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW          03197
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03198
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                    03199
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1      03200
CLRIDRCV DS    0H                                                        03201
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE          03202
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE SBG 03/00  03203
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE  SBG 03/00  03204
* ---------------- LABEL ADDING CODE ---------------------- * SBG 09/00  03205
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                03206
         BZ    CVOLNPRB             NO. WE CAN GO ON.                    03207
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     03208
         MVC   LINE(133),NOLABSL   DISPLAY NO SL ON SL MSG               03209
         PUT   SYSPRINT,LINE        WRITE MSG                            03210
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  03211
         CLOSE (LABADDIN)                                                03212
CVOL1OUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            03213
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.          03214
* ---------------- LABEL ADDING CODE ---------------------- * SBG 09/00  03215
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03216
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03217
         BZ    CVOL1ND              NO. SKIP PUTTING OUT      SBG 09/00  03218
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03219
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03220
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03221
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03222
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03223
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.            SBG 03/00  03224
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?         SBG 05/00  03225
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND  SBG 05/00  03226
         MVI   LINE-1,C' '                                    SBG 03/00  03227
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  03228
         MVC   VOL1SER(6),LINE       CLEAR FIELD TO BLANKS    SBG 04/00  03229
         MVC   VOL1SER(6),INVOLUME   REPORT VOLUME SERIAL     SBG 03/00  03230
         MVC   VOL1OWNR(10),LINE     CLEAR FIELD TO BLANKS    SBG 04/00  03231
         MVC   VOL1OWNR(10),INAREA+41   OWNER INFORMATION     SBG 04/00  03232
         MVC   LINE(133),VOL1LBL  INDICATE THAT VOL1 FOUND    SBG 04/00  03233
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 03/00  03234
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03235
         B     LABCHEND                                       SBG 04/00  03236
CHDR1    DS    0H                                             SBG 04/00  03237
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03238
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG      03239
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS         SBG 07/00  03240
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.            SBG 03/00  03241
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03242
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03243
         BZ    CHDR1ND              NO. SKIP PUTTING OUT      SBG 09/00  03244
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03245
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03246
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03247
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03248
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03249
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?   SBG 03/00  03250
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET  SBG 03/00  03251
* ---------------- LABEL DUMPING CODE --------------------- *            03252
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03253
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      03254
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03255
         MVC   LLINE(80),LABELITI   MOVE IN ENDOFHDRINIT                 03256
         PUT   LABLDUMP,LLINE       WRITE OUT ENDOFLABELHEADERINIT       03257
CHDR1NDM DS    0H                                                        03258
* ---------------- LABEL DUMPING CODE --------------------- *            03259
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE   SBG 03/00  03260
         NOP   CHDR1Z         DON'T PRINT LABEL INFO          SBG 05/00  03261
CHDR1A   TM    PARMFLG1,X'02' DO WE PRINT LABELS?             SBG 05/00  03262
         BZ    CHDR1Z         NO. DON'T PRINT.                SBG 05/00  03263
         ST    R3,SAVE3REG                                               03264
         LA    R3,INAREA                                                 03265
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03266
         BAL   R7,PRTXXX1     PRINT LABEL INFO                SBG 05/00  03267
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03268
         L     R3,SAVE3REG                                               03269
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03270
         B     LABCHEND                                       SBG 04/00  03271
CHDR2    DS    0H                                             SBG 04/00  03272
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03273
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG      03274
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW          03275
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03276
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                    03277
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03278
         BNE   CLRIDRH2                                                  03279
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03280
CLRIDRH2 DS    0H                                                        03281
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE          03282
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2 SBG 07/00  03283
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.            SBG 03/00  03284
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03285
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03286
         BZ    CHDR2ND              NO. SKIP PUTTING OUT      SBG 09/00  03287
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03288
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03289
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03290
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           03291
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03292
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03293
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?           SBG 05/00  03294
         BZ    CHDR2Z           NO.                           SBG 05/00  03295
         ST    R3,SAVE3REG                                               03296
         LA    R3,INAREA                                                 03297
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03298
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03299
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03300
         L     R3,SAVE3REG                                               03301
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03302
         B     LABCHEND                                       SBG 04/00  03303
CEOF1    DS    0H                                             SBG 04/00  03304
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03305
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG      03306
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1      SBG 04/00  03307
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.            SBG 03/00  03308
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03309
BCTCEOF1 DS    0H                                                        03310
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          03311
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                  03312
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         03313
         STM   R2,R3,SAVE2TO3                                            03314
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     03315
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    03316
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 03317
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        03318
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              03319
         LM    R2,R3,SAVE2TO3                                            03320
BCTCEOFX DS    0H                                                        03321
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03322
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03323
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03324
         BZ    CEOF1ND              NO. SKIP PUTTING OUT      SBG 09/00  03325
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03326
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03327
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03328
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03329
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03330
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?           SBG 05/00  03331
         BZ    CEOF1Z           NO.                           SBG 05/00  03332
         ST    R3,SAVE3REG                                               03333
         LA    R3,INAREA                                                 03334
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03335
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           03336
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03337
         L     R3,SAVE3REG                                               03338
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03339
         B     LABCHEND                                       SBG 04/00  03340
CEOF2    DS    0H                                             SBG 04/00  03341
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03342
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG      03343
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          03344
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03345
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                    03346
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03347
         BNE   CLRIDRF2                                                  03348
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03349
CLRIDRF2 DS    0H                                                        03350
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          03351
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2      SBG 04/00  03352
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.            SBG 03/00  03353
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03354
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03355
         BZ    CEOF2ND              NO. SKIP PUTTING OUT      SBG 09/00  03356
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03357
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03358
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03359
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           03360
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03361
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03362
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?           SBG 05/00  03363
         BZ    CEOF2Z           NO.                           SBG 05/00  03364
         ST    R3,SAVE3REG                                               03365
         LA    R3,INAREA                                                 03366
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03367
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03368
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03369
         L     R3,SAVE3REG                                               03370
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03371
         B     LABCHEND                                       SBG 04/00  03372
CEOV1    DS    0H                                             SBG 04/00  03373
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03374
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG      03375
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1      SBG 04/00  03376
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?              SBG 06/00  03377
         BZ    CEOVN1         NO, PROCESS ORDINARILY          SBG 06/00  03378
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN         SBG 03/00  03379
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                            03380
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY      SBG 06/00  03381
         MVI   LINE-1,C' '                                    SBG 03/00  03382
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  03383
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE             SBG 06/00  03384
         PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.    SBG 06/00  03385
         B     CEOVY1                                         SBG 06/00  03386
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.            SBG 03/00  03387
CEOVY1   DS    0H                                             SBG 09/00  03388
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03389
BCTCEOV1 DS    0H                                                        03390
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          03391
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                  03392
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         03393
         STM   R2,R3,SAVE2TO3                                            03394
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     03395
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    03396
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 03397
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        03398
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              03399
         LM    R2,R3,SAVE2TO3                                            03400
BCTCEOVX DS    0H                                                        03401
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03402
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03403
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03404
         BZ    CEOV1ND              NO. SKIP PUTTING OUT      SBG 09/00  03405
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03406
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03407
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03408
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03409
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03410
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?           SBG 05/00  03411
         BZ    CEOV1Z           NO.                           SBG 05/00  03412
         ST    R3,SAVE3REG                                               03413
         LA    R3,INAREA                                                 03414
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03415
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           03416
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03417
         L     R3,SAVE3REG                                               03418
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03419
         B     LABCHEND                                       SBG 04/00  03420
CEOV2    DS    0H                                             SBG 04/00  03421
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03422
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG      03423
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          03424
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03425
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                    03426
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03427
         BNE   CLRIDRV2                                                  03428
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03429
CLRIDRV2 DS    0H                                                        03430
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          03431
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2      SBG 04/00  03432
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?              SBG 06/00  03433
         BZ    CEOVN2         NO, PROCESS ORDINARILY          SBG 06/00  03434
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN         SBG 03/00  03435
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                            03436
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY      SBG 06/00  03437
         B     CEOVY2                                         SBG 06/00  03438
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.            SBG 03/00  03439
CEOVY2   DS    0H                                             SBG 09/00  03440
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03441
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03442
         BZ    CEOV2ND              NO. SKIP PUTTING OUT      SBG 09/00  03443
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03444
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03445
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03446
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                   03447
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2        03448
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           03449
         B     CEOV2ND              AND GET OUT                          03450
CEOV2F   DS    0H                                                        03451
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           03452
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03453
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03454
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?           SBG 05/00  03455
         BZ    CEOV2Z           NO.                           SBG 05/00  03456
         ST    R3,SAVE3REG                                               03457
         LA    R3,INAREA                                                 03458
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03459
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03460
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03461
         L     R3,SAVE3REG                                               03462
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03463
         B     LABCHEND                                       SBG 04/00  03464
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *            03465
CUHL     DS    0H             HANDLE USER HEADER LABELS                  03466
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03467
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG      03468
         ST    R3,SAVE3REG                                               03469
         LA    R3,INAREA                                                 03470
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03471
         BAL   R7,PRTUSER     PRINT LABEL INFO                           03472
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03473
         L     R3,SAVE3REG                                               03474
* ---------------- LABEL DUMPING CODE --------------------- *            03475
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03476
         BZ    CUHLEN               NO. SKIP PUTTING OUT                 03477
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03478
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO                   03479
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                       03480
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE            03481
* ---------------- LABEL DUMPING CODE --------------------- *            03482
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              03483
         B     LABCHEND                                                  03484
CUTL     DS    0H             HANDLE USER TRAILER LABELS                 03485
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03486
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG      03487
         ST    R3,SAVE3REG                                               03488
         LA    R3,INAREA                                                 03489
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03490
         BAL   R7,PRTUSER     PRINT LABEL INFO                           03491
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03492
         L     R3,SAVE3REG                                               03493
* ---------------- LABEL DUMPING CODE --------------------- *            03494
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03495
         BZ    CUTLEN               NO. SKIP PUTTING OUT                 03496
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03497
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO                   03498
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                       03499
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE            03500
* ---------------- LABEL DUMPING CODE --------------------- *            03501
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              03502
         B     LABCHEND                                                  03503
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *            03504
NOTLABEL NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG    SBG 04/00  03505
LABCHEND BR    R7                                             SBG 04/00  03506
* --------------------------------------------------------- * SBG 05/00  03507
*    BAL REGISTER IS R7.                                      SBG 05/00  03508
* --------------------------------------------------------- * SBG 05/00  03509
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS   SBG 04/00  03510
*                         ALTERED.                                       03511
         MVI   LINE-1,C' '                                               03512
         MVC   LINE,LINE-1           CLEAR OUTPUT LINE                   03513
         MVC   VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG           03514
         MVC   VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG           03515
         MVC   VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                 03516
         MVC   VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                 03517
* ----                                                                   03518
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS?  03519
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS             03520
         MVC   VOLALT+35(6),VOLSTG   MOVE NEW VOLSER VALUE TO MSG        03521
INDVVOLS DS    0H                                                        03522
* ----                                                                   03523
         MVC   VOLDDN(5),LINE        CLEAR FIELD                         03524
         MVC   VOLDDN(5),VOLDD       MOVE DD NAME IN                     03525
         MVC   LINE(133),VOLALT      MOVE MESSAGE TO PRT                 03526
         PUT   SYSPRINT,LINE         WRITE MESSAGE                       03527
         BR    R7                    RETURN TO CALLER                    03528
* --------------------------------------------------------- * SBG 04/00  03529
*    BAL REGISTER IS R7.                                      SBG 04/00  03530
* --------------------------------------------------------- * SBG 04/00  03531
PRTXXX1  DS    0H                                             SBG 05/00  03532
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03533
         MVI   LINE-1,C' '                                    SBG 05/00  03534
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03535
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03536
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03537
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL     SBG 05/00  03538
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03539
         MVC   XXX1DSN(17),4(R3)     DATASET NAME             SBG 05/00  03540
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03541
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER  SBG 05/00  03542
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03543
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER   SBG 05/00  03544
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03545
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS   SBG 05/00  03546
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS               03547
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS         03548
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03549
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS   SBG 05/00  03550
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03551
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS   SBG 05/00  03552
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03553
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03554
PRTXXX1R BR    R7                                             SBG 05/00  03555
* --------------------------------------------------------- * SBG 04/00  03556
*    BAL REGISTER IS R7.                                      SBG 04/00  03557
* --------------------------------------------------------- * SBG 04/00  03558
PRTXXX2  DS    0H                                             SBG 05/00  03559
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03560
         MVI   LINE-1,C' '                                    SBG 05/00  03561
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03562
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03563
         MVC   XXX2RFM(1),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03564
         MVC   XXX2RFM(1),4(R3)      RECFM                    SBG 05/00  03565
         MVC   XXX2BKL(5),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03566
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH             SBG 05/00  03567
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03568
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH            SBG 05/00  03569
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03570
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY             SBG 05/00  03571
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03572
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME           SBG 05/00  03573
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03574
         CLI   34(R3),C'P'           INDICATE IDRC?           SBG 05/00  03575
         BNE   PRX2NOI               NO. SAY NO               SBG 05/00  03576
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION        SBG 05/00  03577
         B     PRX2MOV                                        SBG 04/00  03578
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                             SBG 04/00  03579
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03580
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03581
PRTXXX2R BR    R7                                             SBG 05/00  03582
* --------------------------------------------------------- * SBG 04/00  03583
*    BAL REGISTER IS R7.                                      SBG 04/00  03584
* --------------------------------------------------------- * SBG 04/00  03585
PRTUSER  DS    0H                                             SBG 05/00  03586
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03587
         MVI   LINE-1,C' '                                    SBG 05/00  03588
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03589
         MVI   USERLBL-1,C' '                                            03590
         MVC   USERLBL(133),USERLBL-1                                    03591
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE          03592
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE                03593
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03594
PRTUSERR BR    R7                                                        03595
* --------------------------------------------------------- *            03596
*    BAL REGISTER IS R7.                                                 03597
* --------------------------------------------------------- *            03598
PRTBLCNT DS    0H                                                        03599
         MVI   LINE-1,C' '                                               03600
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           03601
         MVC   LINE(133),BLKCNTMS    MESSAGE TO PRINT LINE               03602
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03603
PRTBLCNE BR    R7                                                        03604
* --------------------------------------------------------- *            03605
*    BAL REGISTER IS R7.                                                 03606
* --------------------------------------------------------- *            03607
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS         03608
         ST    R7,SAVE7REG                                               03609
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                  03610
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET    03611
         MVC   OUTCCWPT(4),=A(BACKCCW)                                   03612
BACKEXT1 L     R7,SAVE7REG                                               03613
BACKEXTE BR    R7                                                        03614
* --------------------------------------------------------- *            03615
*    BAL REGISTER IS R7.                                                 03616
* --------------------------------------------------------- *            03617
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS       03618
         ST    R7,SAVE7REG                                               03619
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03620
         BZ    CLEARSV1                 NO. BYPASS CLEAR                 03621
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                 03622
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                          03623
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                       03624
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                       03625
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                    03626
CLEARSV1 L     R7,SAVE7REG                                               03627
CLEARSVE BR    R7                                                        03628
* --------------------------------------------------------- *            03629
*    BAL REGISTER IS R7.                                                 03630
* --------------------------------------------------------- *            03631
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE       03632
         ST    R7,SAVE7REG                                               03633
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03634
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION           03635
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *   03636
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2          03637
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX      03638
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?           03639
         BZ    FIXALL3                                                   03640
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?              03641
         BZ    FIXLAST2                                                  03642
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                       03643
         BZ    FIXLAST1                                                  03644
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR       03645
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *   03646
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2              03647
         L     R7,SAVE7REG                                               03648
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG    03649
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                    03650
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                           03651
         L     R7,SAVE7REG                                               03652
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE   03653
FIXLAST1 DS    0H               REPLACE EOF2                             03654
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                           03655
         L     R7,SAVE7REG                                               03656
         B     ADDEOF2          CREATE THE EOF2                          03657
FIXEXTL1 DS    0H                                                        03658
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                      03659
         L     R7,SAVE7REG                                               03660
FIXEXTLE BR    R7                                                        03661
* --------------------------------------------------------- *            03662
*    BAL REGISTER IS R7.                                                 03663
* --------------------------------------------------------- *            03664
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT      03665
*                             IOS USES DURING EXCP PROCESSING.           03666
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.    03667
* ------------------------------------------------------------------- *  03668
         MVC   OUTIOB(4),IOB01                                           03669
         MVC   OUTCSW(8),FUL2ZERO                                        03670
         MVC   OUTDCBPT(4),FUL2ZERO                                      03671
         MVC   OUTDCBPT+4(4),FUL2ZERO                                    03672
         MVC   OUTDCBPT+8(4),IOB02                                       03673
CLEARIOE BR    R7                                                        03674
* --------------------------------------------------------- *            03675
*    BAL REGISTER IS R7.                                                 03676
* --------------------------------------------------------- *            03677
CHANGVOL DS    0H             PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL  03678
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03679
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?    03680
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                  03681
         TM    LBLFLAG,X'04'  ARE WE WRITING A VOL1 LABEL?    SBG 05/00  03682
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03683
         TM    LBLFLAG,X'03'  IS THIS A HDR1 OR A HDR2?                  03684
         BNZ   CHANGVOE       NO. DON'T ATTEMPT TO CHANGE THIS.          03685
         TM    PARMFLG2,X'41' ARE WE CHANGING OUTPUT VOLSERS? SBG 05/00  03686
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03687
         MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                       03688
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03689
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION        03690
         CLI   TAPEOWN,C' '   IS THERE A TAPEOWNER VALUE                 03691
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE   03692
         MVC   INAREA+41(10),TAPEOWN     MOVE TAPE OWNER INFO IF ANY     03693
         MVC   LINE(133),LINE-1                                          03694
         MVC   OWNRTID(10),LINE          CLEAR FIELD                     03695
         MVC   OWNRTID(10),TAPEOWN       MOVE OWNER INFO INTO MSG        03696
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03697
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03698
         MVC   LINE(133),OWNRMSG                                         03699
         PUT   SYSPRINT,LINE                                             03700
CHNOTOWN DS    0H                                                        03701
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS      03702
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS             03703
CHEXTLAB DS    0H                                                        03704
         TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?        03705
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN             03706
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03707
         BO    CHNOZAPV            YES, SKIP SECOND WRITE                03708
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                   03709
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                 03710
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?               03711
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.           03712
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?       03713
         BZ    CHNOZAPV            NO. BYPASS.                           03714
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    03715
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03716
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION        03717
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       03718
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE           03719
         MVC   EXTLBLIN+41(10),TAPEOWN    CHANGE TAPE OWNER TOO          03720
         MVC   LINE(133),LINE-1                                          03721
         MVC   OWNRTID(10),LINE          CLEAR FIELD                     03722
         MVC   OWNRTID(10),TAPEOWN       MOVE OWNER INFO INTO MSG        03723
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03724
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03725
         MVC   LINE(133),OWNRMSG                                         03726
         PUT   SYSPRINT,LINE                                             03727
CHNOZAPV DS    0H                                                        03728
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS             03729
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03730
         BO    CHGWRIT             YES, SKIP SECOND WRITE                03731
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03732
         BO    CHGPRINT            YES, PRINT.                           03733
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       03734
         BO    CHGPRINT            YES, PRINT                            03735
         B     CHGWRIT                                                   03736
CHGPRINT DS    0H                                                        03737
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  03738
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03739
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   03740
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03741
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   03742
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            03743
         ST    R7,SAVE7RG1                                               03744
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  03745
         L     R7,SAVE7RG1                                               03746
CHGWRIT  DS    0H                                             SBG 05/00  03747
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03748
CHANGVOE BR    R7                  END OF ROUTINE - RETURN               03749
         SPACE 3                                                         03750
* --------------------------------------------------------- *            03751
*    BAL REGISTER IS R7.                                                 03752
* --------------------------------------------------------- *            03753
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                  03754
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED          03755
* --------------------------------------------------------- *            03756
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE             03757
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER               03758
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER               03759
         AR    R5,R2               ADD TO BYTE COUNT                     03760
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH              03761
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD           03762
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                   03763
ADDCNOOV DS    0H                                                        03764
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE        03765
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE        03766
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN               03767
* --------------------------------------------------------- *            03768
*    BAL REGISTER IS R7.                                                 03769
* --------------------------------------------------------- *            03770
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            03771
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              03772
* --------------------------------------------------------- *            03773
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          03774
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03775
         BE    MOVEHI09                                                  03776
         MVC   0(4,R3),0(R2)                                             03777
         B     MOVEHIEN                                                  03778
         LA    R2,1(,R2)                                                 03779
         LA    R3,1(,R3)                                                 03780
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03781
         BE    MOVEHI08                                                  03782
         MVC   0(3,R3),0(R2)                                             03783
         B     MOVEHIEN                                                  03784
         LA    R2,1(,R2)                                                 03785
         LA    R3,1(,R3)                                                 03786
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03787
         BE    MOVEHI07                                                  03788
         MVC   0(2,R3),0(R2)                                             03789
         B     MOVEHIEN                                                  03790
         LA    R2,1(,R2)                                                 03791
         LA    R3,1(,R3)                                                 03792
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03793
         BE    MOVEHIEN                                                  03794
         MVC   0(1,R3),0(R2)                                             03795
MOVEHIEN BR    R7                                                        03796
* --------------------------------------------------------- *            03797
*    BAL REGISTER IS R7.                                                 03798
* --------------------------------------------------------- *            03799
****                                                                     03800
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                             03801
****                                                                     03802
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                 03803
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                    03804
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,      03805
****                      THEN BACK SPACE FILE OVER TAPE MARK.           03806
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR         03807
****                                                                     03808
* --------------------------------------------------------- *            03809
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO     03810
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03811
         EXCP  INIOB          READ                                       03812
         WAIT  ECB=INECB      WAIT FOR READ                              03813
         TM    INCSW+4,X'01'  WAS TM READ?                               03814
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.               03815
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                03816
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                  03817
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03818
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                         03819
         L     R2,FULLWORK           LOAD FULLWORD LENGTH                03820
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03821
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                 03822
         L     R3,FULLWORK           LOAD FULLWORD LENGTH                03823
         SR    R2,R3                 R2=ACTUAL LENGTH READ               03824
         NI    ISLBLFLG,FF-X'01'     TURN OFF "ISLABEL" FLAG             03825
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?           03826
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE      03827
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                          03828
         BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE             03829
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                       03830
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?          03831
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS         03832
*                             NORMALLY WITHOUT CHANGING ANYTHING.        03833
*                             BUT IF IT IS A DATA FILE,                  03834
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE   03835
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK          03836
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03837
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.            03838
         EXCP  INIOB          DO THIS EXCP                               03839
         WAIT  ECB=INECB      WAIT FOR READ                              03840
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03841
         BNE   LBDQINER       NO -- ERROR                                03842
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03843
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03844
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR             03845
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR     03846
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE         03847
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03848
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ      03849
         EXCP  INIOB          DO THIS EXCP                               03850
         WAIT  ECB=INECB      WAIT FOR READ                              03851
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03852
         BNE   LBDQINER       NO -- ERROR                                03853
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03854
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03855
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE          03856
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03857
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE     03858
         EXCP  INIOB          DO THIS EXCP                               03859
         WAIT  ECB=INECB      WAIT FOR READ                              03860
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03861
         BNE   LBDQINER       NO -- ERROR                                03862
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03863
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03864
LBDQREND BR    R7                                                        03865
* --------------------------------------------------------- *            03866
*    BAL REGISTER IS R7.                                                 03867
* --------------------------------------------------------- *            03868
****                                                                     03869
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.        03870
****                                                                     03871
* --------------------------------------------------------- *            03872
HEXPRINT DS    0H                Hex Print from Tape Data (INAREA)       03873
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 03874
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 03875
         NI    HEXEXFLG,FF-X'01' Turn off External Label Input Flag.
         ST    R5,R5HXPRT        Save register.                          03876
         L     R5,SAVTRTCS       Point to translation table CSECT.       03877
         USING TRTCSECT,R5                                               03878
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               03879
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            03880
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        03881
         B     HEXPRNXX          Bypass Hex Print from external labels
*
HEXPRNEX DS    0H                Hex Print from External Label Input
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.
         OI    HEXEXFLG,X'01'    Turn on External Label Input Flag.
         ST    R5,R5HXPRT        Save register.
         L     R5,SAVTRTCS       Point to translation table CSECT.
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.
         L     R2,=F'80'         We know to print exactly 80 bytes.
         B     MOVESIZ1          Now go print them.
*
HEXPRNXX DS    0H
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT      03882
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?           03883
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.           03884
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                   03885
MOVESIZ1 DS    0H                                                        03886
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                03887
         BCTR  R2,0                ONE LESS FOR EXECUTE                  03888
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03889
         EX    R2,MOVRULER         PUT IN HEX RULER                      03890
         PUT   SYSPRINT,LINE                                             03891
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03892
         TM    HEXEXFLG,X'01'      Printing from External Label Input?
         BO    HEXEX001            Yes. Move the data from EXTLBLIN.
         EX    R2,MOVDATIN         No. Move the record from INAREA.      03893
         B     HEXEN001            and continue to print.
HEXEX001 EX    R2,MOVDATEX         Move data from EXTLBLIN.
HEXEN001 EX    R2,PRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      03894
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03895
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        03896
         PUT   SYSPRINT,LINE                                             03897
         TM    HEXEXFLG,X'01'      Printing from External Label Input?
         BO    HEXEX002            Yes. Move the data from EXTLBLIN.
         EX    R2,MOVDATIN         No. Move the record from INAREA.      03898
         B     HEXEN002            and continue to print.
HEXEX002 EX    R2,MOVDATEX         Move data from EXTLBLIN.
HEXEN002 EX    R2,PRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       03899
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03900
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        03901
         PUT   SYSPRINT,LINE                                             03902
         TM    HEXEXFLG,X'01'      Printing from External Label Input?
         BO    HEXEX003            Yes. Move the data from EXTLBLIN.
         EX    R2,MOVDATIN         No. Move the record from INAREA.      03903
         B     HEXEN003            and continue to print.
HEXEX003 EX    R2,MOVDATEX         Move data from EXTLBLIN.
HEXEN003 EX    R2,PRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        03904
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03905
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        03906
         PUT   SYSPRINT,LINE                                             03907
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK      03908
         B     HEXPREND                                                  03909
MOVDATEX MVC   HEXPRTWK(*-*),EXTLBLIN     ***  EXECUTED  ***             03910
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***             03910
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             03911
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             03912
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             03913
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             03914
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             03915
HEXPREND DS    0H                                                        03916
         L     R2,BYTESMVD         RESTORE R2 FOR LATER USE              03917
NOHEXPRO DS    0H                                                        03918
         L     R5,R5HXPRT                                                03919
         DROP  R5                                                        03920
         BR    R7             RETURN TO CALLER                           03921
* --------------------------------------------------------- *            03922
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - - SBG 04/00  03923
         EJECT                                                           03924
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - *  03925
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED            03926
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO           03927
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT  03928
FUL2ZERO DC    2F'0'                                                     03929
IOB01    DC    X'02000000'                                               03930
IOB02    DC    X'00010000'                                               03931
PL4NO3   DC    PL4'3'                                                    03932
BLOKCNTP DC    F'0'                                                      03933
FILECNTP DC    F'1'                                                      03934
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES       03935
TOTBYH   DC    F'0'                                                      03936
TOTBYL   DC    F'0'                                                      03937
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES  03938
PRVBYH   DC    F'0'                                                      03939
PRVBYL   DC    F'0'                                                      03940
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE        03941
DBINFH   DC    F'0'                                                      03942
DBINFL   DC    F'0'                                                      03943
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL       03944
DBINH    DC    F'0'                                                      03945
DBINL    DC    F'0'                                                      03946
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS      03947
LABINH   DC    F'0'                                                      03948
LABINL   DC    F'0'                                                      03949
WORKA    DC    D'0'                                                      03950
WORKL    DC    D'0'                                                      03951
WORKP    DC    D'0'                                                      03952
SAV01MLT DC    D'0'                                                      03953
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     03954
HEXSAVE  DS    3F                    Register save for HEX macro         03955
BLOKCNT  DC    F'0'                                                      03956
FILECNT  DC    F'1'                                                      03957
LABELCNT DC    F'0'                                                      03958
SAVUNIT  DC    CL4' '                                                    03959
         DC    CL1' '         Need this to absorb blank from HEX macro   03960
SAVDDN   DC    CL5' '                                                    03961
SAVVOLSR DC    CL6' '                                                    03962
SAVBYTES DC    X'0000'                                                   03963
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE       03964
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT      03965
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT     03966
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                        03967
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT  03968
INITRWFL DC    X'00'          FLAG SHOWING OUTPUT TAPES REWOUND IN INIT
*              X'01'          OUTPUT TAPES HAVE BEEN REWOUND
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL         03969
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE       03970
*              X'01'          TAPE IS SL                                 03971
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   03972
HEXEXFLG DC    X'00'          Hex printing from INAREA.
*              X'01'          Hex printing from EXTLBLIN.
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS      03973
*              X'00'          WE ARE NOW WRITING DATA FROM THE           03974
*                             INPUT TAPE. X'01' IS OFF.                  03975
*              X'01'          WE ARE NOW WRITING LABELS FROM THE         03976
*                             EXTERNAL FILE                              03977
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK          03978
*              X'04'          WE CAME FROM THE ENDHEADR LABEL            03979
*              X'08'          WE CAME FROM THE LBLINEND LABEL            03980
*                             THIS MEANS EOF OF THE LABADDIN FILE        03981
*              X'10'          FINISHED FIXING LABELS                     03982
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       03983
*              X'00'          DATA IS NOT A LABEL                        03984
*              X'01'          DATA IS A LABEL                            03985
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               03986
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             03987
*              X'02'          BECAUSE OF SYSIN    DD MISSING             03988
*              X'04'          BECAUSE OF LABADDIN DD MISSING             03989
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                03990
*              X'01'          LABLDUMP DD IS OPEN                        03991
*              X'02'          SYSIN    DD IS OPEN                        03992
*              X'04'          LABADDIN DD IS OPEN                        03993
OUTERFLG DC    X'00'          FLAG IF WTOR ISSUED BECAUSE OF AN ERROR    03994
*              X'01'          ERROR WAS PRESENT                          03995
OUTBYT   DS    0F                                                        03996
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER        03997
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE             03998
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY)  03999
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS        04000
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES         04001
TWO31    DC    P'2147483648'       2 TO THE 31ST                         04002
INVOLUME DC    CL6'      '                                    SBG 03/00  04004
         DC    C'      '                                                 04005
         DC    C'0'                                                      04006
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      04007
         DC    C'0'                                                      04008
BLKCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      04009
         DC    C'      '                                                 04010
DWORD    DC    D'0'                                                      04011
QWORD    DS    PL16                                                      04012
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1        SBG 03/00  04013
         CNOP  0,8                                                       04014
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'              SBG 03/00  04015
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'              SBG 03/00  04016
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'FFFF'              SBG 03/00  04017
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04018
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE 2 FILES   04019
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE ONE FILE  04020
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04021
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE BLOCK     04022
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04023
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE BLOCK     04024
         DC    X'3F',AL3(INAREA),X'6000',X'FFFF'     FWD SPACE FILE      04025
         DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACK OVER T.M.      04026
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04027
INECB    DC    F'0'                                                      04028
INIOB    DC    X'02000000'                                               04029
         DC    A(INECB)                                                  04030
INCSW    DC    2F'0'                                                     04031
INCCWPT  DC    A(INCCW)                                                  04032
         DC    A(IN)                                                     04033
         DC    F'0'                                                      04034
         DC    X'00010000'                                               04035
OUTECB   DC    F'0'                                                      04036
OUTIOB   DC    X'02000000'                                               04037
         DC    A(OUTECB)                                                 04038
OUTCSW   DC    2F'0'                                                     04039
OUTCCWPT DC    A(OUTCCW)                                                 04040
OUTDCBPT DC    A(OUT1)                                                   04041
         DC    F'0'                                                      04042
         DC    X'00010000'                                               04043
REWECB   DC    F'0'                                                      04044
REWIOB   DC    X'02000000'                                               04045
         DC    A(REWECB)                                                 04046
REWCSW   DC    2F'0'                                                     04047
REWCCWPT DC    A(REWCCW)                                                 04048
REWDCBPT DC    A(OUT1)                                                   04049
         DC    F'0'                                                      04050
         DC    X'00010000'                                               04051
         SPACE 3                                                         04052
DDOCHG   DC    C'     '                                                  04053
DDOUT1   DC    C'OUT1 '                                                  04054
DDOUT2   DC    C'OUT2 '                                                  04055
DDOUT3   DC    C'OUT3 '                                                  04056
DDOUT4   DC    C'OUT4 '                                                  04057
DDOUT5   DC    C'OUT5 '                                                  04058
DDOUT6   DC    C'OUT6 '                                                  04059
DDOUT7   DC    C'OUT7 '                                                  04060
DDOUT8   DC    C'OUT8 '                                                  04061
DDOUT9   DC    C'OUT9 '                                                  04062
DDOUT10  DC    C'OUT10'                                                  04063
DDOUT11  DC    C'OUT11'                                                  04064
DDOUT12  DC    C'OUT12'                                                  04065
DDOUT13  DC    C'OUT13'                                                  04066
DDOUT14  DC    C'OUT14'                                                  04067
DDOUT15  DC    C'OUT15'                                                  04068
DDOUT16  DC    C'OUT16'                                                  04069
FLAGLIT  DC    C' - FLAGS - '                                            04070
* --------------------------                                             04071
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     04072
*              X'01'          WE ARE IN A HDR GROUP                      04073
*              X'02'          WE ARE IN A EOF GROUP                      04074
*              X'04'          WE ARE IN A EOV GROUP                      04075
* --------------------------                                             04076
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE      04077
FLAG1    DC    X'00'                                                     04078
OP1      EQU   X'80'                                                     04079
OP2      EQU   X'40'                                                     04080
OP3      EQU   X'20'                                                     04081
OP4      EQU   X'10'                                                     04082
OP5      EQU   X'08'                                                     04083
OP6      EQU   X'04'                                                     04084
OP7      EQU   X'02'                                                     04085
OP8      EQU   X'01'                                                     04086
FLAG2    DC    X'00'                                                     04087
OP9      EQU   X'80'                                                     04088
OP10     EQU   X'40'                                                     04089
OP11     EQU   X'20'                                                     04090
OP12     EQU   X'10'                                                     04091
OP13     EQU   X'08'                                                     04092
OP14     EQU   X'04'                                                     04093
OP15     EQU   X'02'                                                     04094
OP16     EQU   X'01'                                                     04095
FLAG2A   DC    X'00'                                          SBG 03/00  04096
ERR      EQU   X'02'                                                     04097
EOV      EQU   X'01'                                                     04098
FF       EQU   X'FF'                                                     04099
FLAG3    DC    X'00'                                                     04100
FLAG4    DC    X'00'                                                     04101
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE     SBG 03/00  04102
L80FLAG  DC    X'00'                                          SBG 03/00  04103
*              X'01'    LAST DATA WAS 80 BYTE RECORD          SBG 03/00  04104
* ---------- *                                                           04105
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                      04106
*              x'01'    Yes.                                             04107
* ---------- *                                                           04108
LBLFLAG  DC    X'00'    FLAG WHEN TAPE LABELS ARE BEING READ IN          04109
*              X'01'    HDR1 HAS BEEN SEEN                    SBG 03/00  04110
*              X'02'    HDR2 HAS BEEN SEEN                    SBG 03/00  04111
*              X'04'    VOL1 HAS BEEN SEEN                    SBG 03/00  04112
*              X'08'    HDR1 IS FROM AN INITTED TAPE          SBG 03/00  04113
*              X'10'    EOF1 HAS BEEN SEEN                    SBG 04/00  04114
*              X'20'    EOF2 HAS BEEN SEEN                    SBG 04/00  04115
*              X'40'    EOV1 HAS BEEN SEEN                    SBG 04/00  04116
*              X'80'    EOV2 HAS BEEN SEEN                    SBG 04/00  04117
* ---------- *                                                           04118
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN   04119
*              X'01'    HDR1 HAS BEEN READ IN                            04120
*              X'02'    HDR2 HAS BEEN READ IN                            04121
*              X'04'    VOL1 HAS BEEN READ IN                            04122
*              X'08'    UHL  HAS BEEN READ IN                            04123
*              X'10'    EOF1 HAS BEEN READ IN                            04124
*              X'20'    EOF2 HAS BEEN READ IN                            04125
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN           04126
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN           04127
* ---------- *                                                           04128
STRIPFLG DC    X'00'                                                     04129
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.    04130
DATFLAG  DC    X'00'                                          SBG 03/00  04131
*              X'10'    NO REAL DATA HAS BEEN READ YET        SBG 03/00  04132
* --------------------------------------------------------- * SBG 04/00  04133
VOLDD    DC    C'     '                                                  04134
STOR7REG DS    F                                                         04135
TOTB7REG DS    F                                                         04136
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST       04137
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST       04138
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04139
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                        04140
         SPACE 3                                                         04141
LABELITH DC    CL80'----ENDOFLABELHEADER '                               04142
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            04143
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               04144
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            04145
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *   04146
VOL1LABL DS    0CL80                                                     04147
VOL1LIT  DC    CL4'VOL1'                                                 04148
VOL1SERL DC    CL6' '                                                    04149
VOL1FIL1 DC    CL31' '                                                   04150
VOL1ONER DC    CL10' '                                                   04151
VOL1FIL2 DC    CL29' '                                                   04152
* ------------------------ INITIALIZATION OF VOLUMES --------------- *   04153
HDR1INIT DS    0CL80                                                     04154
HDR1ILIT DC    CL4'HDR1'                                                 04155
HDR1IFIL DC    76C'0'                                                    04156
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *   04157
TOTWLINE DC    C' TOTAL BYTES WITHOUT LABELS: '                          04158
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04159
         DC    CL78' '                                                   04160
TOTLLINE DC    C' TOTAL BYTES IN TAPE LABELS: '                          04161
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04162
         DC    CL78' '                                                   04163
TOTBLINE DC    C' TOTAL BYTES READ ON INPUT : '                          04164
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04165
         DC    CL78' '                                                   04166
BLKCNTMS DC    C' BLOCK COUNTS IN EOF1 AND EOV1 ARE BEING CORRECTED FO'  04167
         DC    C'R TAPE COPY OPERATION '                                 04168
         DC    CL58' '                                                   04169
INNOTOPN DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM'  04170
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE '  04171
         DC    C'A PARM OF INITVOLS.'                                    04172
         DC    CL8' '                                                    04173
LDMPOUTM DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               '  04174
         DC    C'                             MEMBER=         VOLUME= '  04175
         DC    C'                          '                             04176
LDMPINMS DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               '  04177
         DC    C'                             MEMBER=         VOLUME= '  04178
         DC    C'                          '                             04179
LDMPMSG  DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L'  04180
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04181
         DC    C' MULTIPLE OF 80           '                             04182
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04183
         DC    C' IS TREATED AS NL.                                   '  04184
         DC    CL27' '                                                   04185
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04186
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  04187
         DC    CL27' '                                                   04188
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  04189
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  04190
         DC    CL27' '                                                   04191
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 04192
         DC    CL6'&HEXDFLM'                                             04193
         DC    C' RECORDS WILL'                                          04194
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  04195
         DC    C'SYSIN.'                                                 04196
         DC    CL17' '                                                   04197
STRPMSG  DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS '  04198
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP'  04199
         DC    C'UT TAPES.                 '                             04200
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S'  04201
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04202
         DC    C' MULTIPLE OF 80           '                             04203
NLABMSG  DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C'  04204
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL '  04205
         DC    C'IMAGES.                   '                             04206
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  04207
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  04208
         DC    C'                           '                            04209
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ'  04210
         DC    C'ing a Tape Mark right now.                           '  04211
         DC    C'                          '                             04212
FORCENLM DC    C' *** File Limiting by NL file numbers has been forced'  04213
         DC    C'.  Divide by 3 for the SL file number ***            '  04214
         DC    C'                          '                             04215
FORCESLM DC    C' *** File Limiting by SL file numbers has been forced'  04216
         DC    C'.  Multiply by 3 for the NL file number ***          '  04217
         DC    C'                          '                             04218
TWOFORCE DC    C' *** File Limiting by SL and NL file numbers both spe'  04219
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no'  04220
         DC    C't code PARM=SLLIM.        '                             04221
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '         04222
         DC    C'TERMINATED '                                            04223
         DC    76C'*'                                                    04224
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '    04225
         DC    82C'*'                                                    04226
VOLALT   DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'   SBG 03/00  04227
         DC    C' FOR DDNAME '                                           04228
VOLDDN   DC    C'     '                                                  04229
VOLFILL  DC    75C' '                    VOL1 CHANGE MESSAGE  SBG 03/00  04230
OWNRMSG  DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                 04231
OWNRTID  DC    C'          '                                             04232
OWNRLIT1 DC    C' FOR DDNAME '                                           04233
OWNRDDO  DC    C'     '                                                  04234
OWNRFIL2 DC    68C' '                                                    04235
LTMRPT   DC    C' LEADING TAPE MARK WAS '                     SBG 03/00  04236
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED  SBG 03/00  04237
         DC    103C' '                                        SBG 03/00  04238
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '  SBG 06/00  04239
         DC    C'EOV2EOF PARM OR OPTION'                      SBG 06/00  04240
         DC    69C' '                                         SBG 06/00  04241
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                           04242
INITMSG  DC    C' INITTED TAPE HAS BEEN '                                04243
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                           04244
INITSER  DC    C'      '                                      SBG 03/00  04245
INITBLNK DC    76C' '                                         SBG 03/00  04246
VOL1LBL  DC    C' VOL1 LABEL HAS BEEN DETECTED - VOLSER = '   SBG 03/00  04247
VOL1SER  DC    C'      '                                      SBG 03/00  04248
VOL1OWNT DC    C'     OWNER = '                               SBG 04/00  04249
VOL1OWNR DC    C'          '                                  SBG 04/00  04250
VOL1BLNK DC    63C' '                                         SBG 03/00  04251
         DC    C' '                                                      04252
USERLBL  DC    81C' '                                         SBG 03/00  04253
         DC    52C' '                                                    04254
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                       SBG 05/00  04255
XXX1VOL  DC    C'      '                                      SBG 05/00  04256
XXX1DSNL DC    C' DSN='                                       SBG 05/00  04257
XXX1DSN  DC    C'                 '                           SBG 05/00  04258
XXX1DSQL DC    C' DS SEQ #: '                                 SBG 05/00  04259
XXX1DSQ  DC    C'    '                                        SBG 05/00  04260
XXX1VSQL DC    C' VOL SEQ #: '                                SBG 05/00  04261
XXX1VSQ  DC    C'    '                                        SBG 05/00  04262
XXX1BLCL DC    C' BLK CNT: '                                  SBG 05/00  04263
XXX1BLCH DC    C'    '                                        SBG 05/00  04264
XXX1BLC  DC    C'      '                                      SBG 05/00  04265
XXX1CRDL DC    C' CRDATE: '                                   SBG 05/00  04266
XXX1CRD  DC    C'      '                                      SBG 05/00  04267
XXX1EXDL DC    C' EXDATE: '                                   SBG 05/00  04268
XXX1EXD  DC    C'      '                                      SBG 05/00  04269
XXX1BLNK DC    30C' '                                         SBG 03/00  04270
XXX2LBL  DC    C' XXX2 LABEL: RECFM= '                        SBG 05/00  04271
XXX2RFM  DC    C' '                                           SBG 05/00  04272
XXX2BKLL DC    C'   BLOCK LENGTH: '                           SBG 05/00  04273
XXX2BKL  DC    C'     '                                       SBG 05/00  04274
XXX2RCLL DC    C'   RECORD LENGTH: '                          SBG 05/00  04275
XXX2RCL  DC    C'     '                                       SBG 05/00  04276
XXX2TDNL DC    C'  TAPE DEN: '                                SBG 05/00  04277
XXX2TDN  DC    C' '                                           SBG 05/00  04278
XXX2JSTL DC    C'   JOB/JOB STEP: '                           SBG 05/00  04279
XXX2JST  DC    C'                 '                           SBG 05/00  04280
XXX2IDRL DC    C'   IDRC? '                                   SBG 05/00  04281
XXX2IDR  DC    C'   '                                         SBG 05/00  04282
XXX2BLNK DC    8C' '                                          SBG 03/00  04283
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '        04284
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '               04285
OUTCFCNT DC    C'XXXXXXXXXX'                                             04286
         DC    C'  Bytes:'                                               04287
OUTCBCNT DC    CL26' '                                                   04288
         DC    C' '                                                      04289
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '        04290
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04291
         DC    40C'*'                                                    04292
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '        04293
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04294
         DC    40C'*'                                                    04295
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '        04296
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04297
         DC    40C'*'                                                    04298
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'               04299
FILEPBYT DS    0CL44                                                     04300
FILEDFL1 DC    C' '                                                      04301
FILECONT DC    C'          '                                             04302
FILEDFL2 DC    C' '                                                      04303
FILEBYTE DC    C' 9,999,999,999,999,999,999'                             04304
         DC    C' BYTES'                                                 04305
FILETBYT DS    0CL44                                                     04306
FILEDFL3 DC    C'    '                                                   04307
FILECUMT DC    C'          '                                             04308
FILEDFL4 DC    C' '                                                      04309
FILETBYE DC    C' 9,999,999,999,999,999,999'                             04310
         DC    8C' '                                                     04311
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'     04312
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'     04313
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                      04314
         DC    C'       '          BLANKS FOR COVERING UP     SBG 03/00  04315
READOMSG DC    C'0THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX 04316
               LSER: XXXXXX '                                 SBG 06/00  04317
         DC    66C' '                                         SBG 06/00  04318
SUCCESSR DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX 04319
               ERIAL XXXXXX '                                 SBG 06/00  04320
         DC    66C' '                                         SBG 06/00  04321
         DC    C' '                                                      04322
HEXPRTWK DC    CL133' '                                                  04323
         DC    C' '                                                      04324
LINE     DC    CL133' '                                                  04325
         DC    C' '                                                      04326
SAVELINE DC    CL133' '                                                  04327
LINE44   DC    CL44' '                                                   04328
RULERHEX DS    0CL132                                                    04329
         DC    C'----+----1----+----2----+----3----+----4----+----5--'   04330
         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  04331
         DC    C'----1----+----2----+----3----+----4'                    04332
REPLY    DC    C'      '                                                 04333
COPIED   DC    C'COPIED '                                     SBG 03/00  04334
SKIPPED  DC    C'SKIPPED'                                     SBG 03/00  04335
FULLWORK DS    0F                                             SBG 03/00  04336
         DC    H'0'                                           SBG 03/00  04337
HALFWORK DC    H'0'                HALFWORD WORK AREA         SBG 03/00  04338
         DC    2F'0'               FILLER                     SBG 05/00  04339
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     04340
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW    04341
* --------------------------------------------------------- * SBG 05/00  04342
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                04343
PARMFLG1 DC    X'00'                                                     04344
*              X'DE'    LABEL INFORMATION WILL BE PRINTED                04345
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED               04346
PARMFLG2 DC    X'00'                                                     04347
PARMFLG3 DC    X'00'                                                     04348
PARMFLG4 DC    X'00'                                                     04349
PARMFLG5 DC    X'00'                                                     04350
PARMFLG6 DC    X'00'                                                     04351
PARMFLG7 DC    X'00'                                                     04352
PARMFLG8 DC    X'00'                                                     04353
PARMFLG9 DC    X'00'                                                     04354
PARMFLGA DC    X'00'                                                     04355
PARMFLLN EQU   *-PARMFLGS                                                04356
* --------------------------------------------------------- * SBG 05/00  04357
         DS    0F                                                        04358
STRTVALU DS    0CL(ENDVALUE)                                             04359
         DC    A(ENDVALUE)                                               04360
PARMSLEN DC    F'0'                LENGTH OF PARMS                       04361
*                                  Upon entry to PARMCHEK, contains      04362
*                                  the PARM address from COPYMODS,       04363
*                                  which gets overlaid.                  04364
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       04365
*                                  Upon entry to PARMCHEK, contains      04366
*                                  the PARM address from COPYMODS,       04367
*                                  which gets overlaid.                  04368
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               04369
*                                  Upon entry to PARMCHEK, contains      04370
*                                  the PARM length from COPYMODS,        04371
*                                  which gets overlaid.                  04372
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04373
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04374
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04375
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   04376
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04377
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04378
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04379
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04380
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04381
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 04382
         DC    CL7' '              FILLER                                04383
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            04384
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04385
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          04386
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  04387
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      04388
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         04389
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         04390
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         04391
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       04392
TAPEOWN  DC    CL10' '                                                   04393
OVERFLAG DC    X'00'                                                     04394
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               04395
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    04396
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         04397
LIMCHAR  DC    CL10' '                                                   04398
LABCHAR  DC    CL10' '                                                   04399
PRTCHAR  DC    CL10' '                                                   04400
ENDVALUE EQU   (*-PARMSLEN)+4                                            04401
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04402
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE    04403
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     04404
* --------------------------------------------------------- *            04405
*              FORMAT OF PARM TABLE                                      04406
*              ONE ENTRY IS 20 BYTES                                     04407
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               04408
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 04409
*                               X'00' SAYS TURN FLAG ON                  04410
*                               X'10' SET ENTRY AS A DEFAULT             04411
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               04412
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                04413
*                                WHICH ALLOWS FOR 80 PARMS               04414
*                                THAT DON'T HAVE TO BE                   04415
*                                SEPARATED BY A COMMA.                   04416
PBYTES   EQU   10               NUMBER OF PARM SWITCH BYTES              04417
* --------------------------------------------------------- *            04418
EFFS     DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'               04419
* --------------------------------------------------------- *            04420
         SPACE 3                                                         04421
         LTORG                                                           04422
         SPACE 3                                                         04423
         DS    0D                                             SBG 09/00  04424
LBNEXLST DC    X'87',AL3(LBNJFCB)                                        04425
LBNJFCB  DC    44F'0'                                                    04426
         DS    0D                                             SBG 09/00  04427
LBLEXLST DC    X'87',AL3(LBLJFCB)                                        04428
LBLJFCB  DC    44F'0'                                                    04429
         DS    0D                                             SBG 05/00  04430
OUTEXLST DC    X'87',AL3(OUTJFCB)                                        04431
OUTJFCB  DC    44F'0'                                                    04432
         DS    0D                                             SBG 06/00  04433
INEXLST  DC    X'87',AL3(INJFCB)                              SBG 06/00  04434
INJFCB   DC    44F'0'                                         SBG 06/00  04435
         SPACE 3                                                         04436
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           04437
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           04438
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           04439
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             04440
VOLCHG   DC    C'      '                                                 04441
VOLSTG   DC    C'      '    CARD VOLUME NAME - TO OVERLAY OTHERS         04442
VOLALL   DS    0CL96         16 X 6                                      04443
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04444
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04445
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04446
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04447
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04448
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04449
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04450
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04451
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04452
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04453
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04454
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04455
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04456
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04457
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04458
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04459
* --------------------------------------------------------- * SBG 05/00  04460
         SPACE 3                                                         04461
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X 04462
               EXLST=INEXLST                                             04463
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X 04464
               EXLST=OUTEXLST                                            04465
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X 04466
               EXLST=OUTEXLST                                            04467
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X 04468
               EXLST=OUTEXLST                                            04469
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X 04470
               EXLST=OUTEXLST                                            04471
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X 04472
               EXLST=OUTEXLST                                            04473
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X 04474
               EXLST=OUTEXLST                                            04475
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X 04476
               EXLST=OUTEXLST                                            04477
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X 04478
               EXLST=OUTEXLST                                            04479
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X 04480
               EXLST=OUTEXLST                                            04481
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X 04482
               EXLST=OUTEXLST                                            04483
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X 04484
               EXLST=OUTEXLST                                            04485
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X 04486
               EXLST=OUTEXLST                                            04487
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X 04488
               EXLST=OUTEXLST                                            04489
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X 04490
               EXLST=OUTEXLST                                            04491
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X 04492
               EXLST=OUTEXLST                                            04493
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X 04494
               EXLST=OUTEXLST                                            04495
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04496
               BLKSIZE=133                                               04497
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X 04498
               EXLST=LBLEXLST                                            04499
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X 04500
               EXLST=LBNEXLST,EODAD=LBLINEND                             04501
         DC    C' '              BLANK FOR CLEARING AREA      SBG 09/00  04502
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP   SBG 09/00  04503
SAVE2TO3 DC    2F'0'                                                     04504
SAVE3REG DC    F'0'                                                      04505
SAVE7BA1 DC    F'0'                                                      04506
SAVE7REG DC    F'0'                                                      04507
SAVE7BAL DC    F'0'                                                      04508
SAVE7RG1 DC    F'0'                                                      04509
SAVE7RG2 DC    F'0'                                                      04510
SAVE7RG3 DC    F'0'                                                      04511
SAVE7RG4 DC    F'0'                                                      04512
R5HXPRT  DC    F'0'                                                      04513
R7HXPRT  DC    F'0'                                                      04514
SAVTRTCS DC    F'0'                                                      04515
ENTRYPT  DC    F'0'                                                      04516
PARMSAVE DC    F'0'                                                      04517
PARMADDR DC    F'0'                                                      04518
USERSAVE DC    F'0'                                                      04519
         DC    CL4' '                                                    04520
HDR1SAV  DC    CL80' '                                                   04521
HDR2SAV  DC    CL80' '                                                   04522
UHL1SAV  DC    CL80' '                                                   04523
UHL2SAV  DC    CL80' '                                                   04524
UHL3SAV  DC    CL80' '                                                   04525
UHL4SAV  DC    CL80' '                                                   04526
UHL5SAV  DC    CL80' '                                                   04527
UHL6SAV  DC    CL80' '                                                   04528
UHL7SAV  DC    CL80' '                                                   04529
UHL8SAV  DC    CL80' '                                                   04530
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          04531
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 04532
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  04533
TRTCSECT CSECT                                                           04534
TRTBL0   DS    0D                                                        04535
         DC    XL16'40404040404040404040404040404040'                    04536
         DC    XL16'40404040404040404040404040404040'                    04537
         DC    XL16'40404040404040404040404040404040'                    04538
         DC    XL16'40404040404040404040404040404040'                    04539
         DC    XL16'404040404040404040404A4B4C4D4E4F'                    04540
         DC    XL16'504040404040404040405A5B5C5D5E5F'                    04541
         DC    XL16'606140404040404040406A6B6C6D6E6F'                    04542
         DC    XL16'404040404040404040407A7B7C7D7E7F'                    04543
         DC    XL16'40818283848586878889404040404040'                    04544
         DC    XL16'40919293949596979899404040404040'                    04545
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    04546
         DC    XL16'40404040404040404040404040404040'                    04547
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    04548
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    04549
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    04550
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    04551
TRTBL1   DS    0D                                                        04552
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    04553
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    04554
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    04555
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    04556
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    04557
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    04558
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    04559
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    04560
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    04561
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    04562
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    04563
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    04564
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    04565
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    04566
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    04567
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    04568
TRTBL2   DS    0D                                                        04569
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04570
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04571
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04572
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04573
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04574
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04575
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04576
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04577
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04578
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04579
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04580
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04581
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04582
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04583
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04584
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04585
         EJECT                                                           04586
JFCBLK   DSECT                                                           04587
         IEFJFCBN LIST=YES                                               04588
COPYMODS CSECT                                                           04589
INAREA   DS    CL65535                                        SBG 03/00  04590
#PAN$AUD CSECT                                                           04591
$PAN#AUD DC    CL30'LEVEL 065 COPYMODS  08/12/03 '                       04592
         END                                                             04593
*          DATA SET COPYMOPT   AT LEVEL 065 AS OF 08/12/03               04594
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                 04595
**************************************************************           04596
**************************************************************           04597
**                                                          **           04598
**                                                          **           04599
**  MODULE: COPYMOPT                                        **           04600
**                                                          **           04601
**                                                          **           04602
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **           04603
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **           04604
**            PROGRAM.                                      **           04605
**                                                          **           04606
**                                                          **           04607
**************************************************************           04608
**************************************************************           04609
         EJECT                                                           04610
         YREGS                                                           04611
COPYMOPT CSECT                                                           04612
         USING *,R15                                          SBG 03/00  04613
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.     04614
         B     EYECATCH                                       SBG 03/00  04615
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  04616
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '   04617
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  04618
SAVEAREA DC    18F'0'                                                    04619
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  04620
         SAVE  (14,12)                                                   04621
         LR    R5,R1          SAVE PASSED QUANTITY                       04622
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   04623
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          04624
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         04625
         LR    R13,R1               NEW SAVE AREA ADDRESS                04626
         DROP  R15                                                       04627
* -----                       SET UP TWO BASE REGISTERS                  04628
         USING COPYMOPT,R12,R11                                          04629
         LR    R12,R15                                                   04630
         LA    R11,4095(,R12)                                            04631
         LA    R11,1(,R11)                                               04632
         LR    R1,R5          RESTORE PARM POINTER                       04633
OPTMOVE  DS    0H                                                        04634
         MVC   PARMTBIN(10),0(R1)     MOVE PARMS INTO THIS PGM           04635
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM       04636
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM       04637
         OPEN  (SYSPRINT,OUTPUT)                                         04638
         MVC   LINE(133),LINE-1       CLEAR LINE                         04639
         MVC   LINE(133),DISPLINH                                        04640
         PUT   SYSPRINT,LINE                                             04641
         MVC   LINE(133),LINE-1       CLEAR LINE                         04642
         MVC   LINE(133),DISPLINO                                        04643
         PUT   SYSPRINT,LINE                                             04644
         MVC   LINE(133),LINE-1       CLEAR LINE                         04645
         PUT   SYSPRINT,LINE                                             04646
         BAL   R7,FILLOPTS                                               04647
         MVC   LINE(133),LINE-1       CLEAR LINE                         04648
         MVC   LINE(133),DISPOP02                                        04649
         PUT   SYSPRINT,LINE                                             04650
         MVC   LINE(133),LINE-1       CLEAR LINE                         04651
         MVC   LINE(133),DISPOP01                                        04652
         PUT   SYSPRINT,LINE                                             04653
         MVC   LINE(133),LINE-1       CLEAR LINE                         04654
         MVC   LINE(133),DISPOP03                                        04655
         PUT   SYSPRINT,LINE                                             04656
         MVC   LINE(133),LINE-1       CLEAR LINE                         04657
         PUT   SYSPRINT,LINE                                             04658
         CLOSE (SYSPRINT)                                                04659
* ----------------------------------------------------------------- *    04660
THEEND   EQU   *                                                         04661
THEEND1  DS    0H                                                        04662
         L     R13,4(,R13)                                               04663
         RETURN (14,12),RC=0                                             04664
         EJECT                                                           04665
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *    04666
* ----------------------------------------------------------------- *    04667
*    BAL REGISTER IS R7.                                            *    04668
* ------------------------------------------------------------------*    04669
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT            04670
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE        04671
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE        04672
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION     04673
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                  04674
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                        04675
         BE    FILOPEND                                                  04676
         MVC   PARMWORK(10),0(R3)     MOVE BYTES TO BE TESTED            04677
         NC    PARMWORK(10),PARMTBIN  CHECK IF BYTE IS ON                04678
         BZ    FILLZER                                                   04679
         MVC   0(10,R2),10(R3)        MOVE OPTION TO DISPLAY - BIT ON    04680
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04681
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04682
         BCT   R4,FILLOOP             LOOP BACK                          04683
         B     FILNEXTB                                                  04684
FILLZER  DS    0H                                                        04685
         MVC   0(10,R2),20(R3)        MOVE OPTION TO DISPLAY - BIT OFF   04686
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04687
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04688
         BCT   R4,FILLOOP             LOOP BACK                          04689
FILNEXTB DS    0H                                                        04690
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                  04691
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE      04692
         PUT   SYSPRINT,LINE                                             04693
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE    04694
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE     04695
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP     04696
FILOPEND BR    R7                                                        04697
* ----------------------------------------------------------------- *    04698
* ----------  CONSTANTS  ------------------------------------------ *    04699
         LTORG                                                           04700
         DS    0F                                                        04701
PARMTBIN DC    X'00000000000000000000'                                   04702
PARMWORK DC    X'00000000000000000000'                                   04703
PARMZERO DC    X'00000000000000000000'                                   04704
OPTABLE  DS    0D                                                        04705
         DC    X'20000000000000000000',C'LTMSKIP   ',C'LTMCOPY   '       04706
OPTENTLN EQU   *-OPTABLE                                                 04707
         DC    X'01000000000000000000',C'BLKCNT    ',C'NOBLKCNT  '       04708
         DC    X'02000000000000000000',C'HDR1      ',C'NOHDR1    '       04709
         DC    X'04000000000000000000',C'HDR2      ',C'NOHDR2    '       04710
         DC    X'08000000000000000000',C'EOF1      ',C'NOEOF1    '       04711
         DC    X'10000000000000000000',C'EOF2      ',C'NOEOF2    '       04712
         DC    X'40000000000000000000',C'EOV1      ',C'NOEOV1    '       04713
         DC    X'80000000000000000000',C'EOV2      ',C'NOEOV2    '       04714
         DC    X'00100000000000000000',C'LABLDUMP  ',C'NOLABLDU  '       04715
         DC    X'00200000000000000000',C'SYSIN     ',C'NOSYSIN   '       04716
         DC    X'00400000000000000000',C'OUTVOL ***',C'NOOUTVOL  '       04717
         DC    X'00800000000000000000',C'LABADDIN  ',C'NOLABADD  '       04718
         DC    X'00010000000000000000',C'CHGVOL    ',C'NOCHGVOL  '       04719
         DC    X'00020000000000000000',C'VOLLBL    ',C'NOVOLLBL  '       04720
         DC    X'00040000000000000000',C'EOVCHG    ',C'NOEOVCHG  '       04721
         DC    X'00080000000000000000',C'READONLY  ',C'WRITE     '       04722
         DC    X'00001000000000000000',C'PRADDLBL  ',C'NOPRADDL  '       04723
         DC    X'00002000000000000000',C'CORRBLKS  ',C'NOCORRBL  '       04724
         DC    X'00004000000000000000',C'NOEXNULL  ',C'EXNULL    '       04725
         DC    X'00008000000000000000',C'LBLFIX    ',C'NOLBLFIX  '       04726
         DC    X'00000100000000000000',C'INITVOLS  ',C'          '       04727
         DC    X'00000200000000000000',C'LIMFILE **',C'NOLIMFIL  '       04728
         DC    X'00000400000000000000',C'BYTES     ',C'NOBYTES   '       04729
         DC    X'00000800000000000000',C'CUMTOT    ',C'NOCUMTOT  '       04730
         DC    X'00000010000000000000',C'LIMLABEL *',C'NOLIMLAB  '       04731
         DC    X'00000020000000000000',C'OPTION    ',C'NOOPTION  '       04732
         DC    X'00000040000000000000',C'SUPPWTO   ',C'NOSUPPWT  '       04733
         DC    X'00000080000000000000',C'LBDQUICK  ',C'NOLBDQUI  '       04734
         DC    X'00000001000000000000',C'CUMSEP    ',C'NOCUMSEP  '       04735
         DC    X'00000002000000000000',C'STRIP     ',C'NOSTRIP   '       04736
         DC    X'00000004000000000000',C'NLLIM     ',C'NONLLIM   '       04737
         DC    X'00000008000000000000',C'SLLIM     ',C'NOSLLIM   '       04738
         DC    X'00000000100000000000',C'IDRCOFF   ',C'NOIDRCOF  '       04739
HXPRT    DC    X'00000000200000000000',C'HEXPRT    ',C'NOHEXPRT  '       04740
         DC    X'00000000400000000000',C'UNEXWTO   ',C'NOUNEXWT  '       04741
         DC    X'00000000800000000000',C'          ',C'          '       04742
         DC    X'00000000010000000000',C'          ',C'          '       04743
         DC    X'00000000020000000000',C'          ',C'          '       04744
         DC    X'00000000040000000000',C'          ',C'          '       04745
         DC    X'00000000080000000000',C'          ',C'          '       04746
         DC    X'00000000001000000000',C'          ',C'          '       04747
         DC    X'00000000002000000000',C'          ',C'          '       04748
         DC    X'00000000004000000000',C'          ',C'          '       04749
         DC    X'00000000008000000000',C'          ',C'          '       04750
         DC    X'00000000000100000000',C'          ',C'          '       04751
         DC    X'00000000000200000000',C'          ',C'          '       04752
         DC    X'00000000000400000000',C'          ',C'          '       04753
         DC    X'00000000000800000000',C'          ',C'          '       04754
         DC    X'00000000000010000000',C'          ',C'          '       04755
         DC    X'00000000000020000000',C'          ',C'          '       04756
         DC    X'00000000000040000000',C'          ',C'          '       04757
         DC    X'00000000000080000000',C'          ',C'          '       04758
         DC    X'00000000000001000000',C'          ',C'          '       04759
         DC    X'00000000000002000000',C'          ',C'          '       04760
         DC    X'00000000000004000000',C'          ',C'          '       04761
         DC    X'00000000000008000000',C'          ',C'          '       04762
         DC    X'00000000000000100000',C'          ',C'          '       04763
         DC    X'00000000000000200000',C'          ',C'          '       04764
         DC    X'00000000000000400000',C'          ',C'          '       04765
         DC    X'00000000000000800000',C'          ',C'          '       04766
         DC    X'00000000000000010000',C'          ',C'          '       04767
         DC    X'00000000000000020000',C'          ',C'          '       04768
         DC    X'00000000000000040000',C'          ',C'          '       04769
         DC    X'00000000000000080000',C'          ',C'          '       04770
         DC    X'00000000000000001000',C'          ',C'          '       04771
         DC    X'00000000000000002000',C'          ',C'          '       04772
         DC    X'00000000000000004000',C'          ',C'          '       04773
         DC    X'00000000000000008000',C'          ',C'          '       04774
         DC    X'00000000000000000100',C'          ',C'          '       04775
         DC    X'00000000000000000200',C'          ',C'          '       04776
         DC    X'00000000000000000400',C'          ',C'          '       04777
         DC    X'00000000000000000800',C'          ',C'          '       04778
         DC    X'00000000000000000010',C'          ',C'          '       04779
         DC    X'00000000000000000020',C'          ',C'          '       04780
         DC    X'00000000000000000040',C'          ',C'          '       04781
         DC    X'00000000000000000080',C'          ',C'          '       04782
         DC    X'00000000000000000001',C'          ',C'          '       04783
         DC    X'00000000000000000002',C'          ',C'          '       04784
         DC    X'00000000000000000004',C'          ',C'          '       04785
         DC    X'00000000000000000008',C'          ',C'          '       04786
         DC    X'FFFFFFFFFFFFFFFFFFFF'                                   04787
*  -----                                                                 04788
DISPAREA DS    0D                                                        04789
DISPLINH DS    0CL133                                                    04790
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - '  04791
         DC    C'LEVEL 065 - OPTIONS DISPLAY                          '  04792
         DC    27C' '                                                    04793
DISPLINO DS    0CL133                                                    04794
         DC    C'-    OPTIONS IN EFFECT:                              '  04795
         DC    C'                                                     '  04796
         DC    27C' '                                                    04797
DISPOP01 DS    0CL133                                                    04798
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE'  04799
         DC    C'LIMIT=   SYSIN CARD                                  '  04800
         DC    27C' '                                                    04801
DISPOP02 DS    0CL133                                                    04802
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE'  04803
         DC    C'LIMIT=   SYSIN CARD                                  '  04804
         DC    27C' '                                                    04805
DISPOP03 DS    0CL133                                                    04806
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE'  04807
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 '  04808
         DC    27C' '                                                    04809
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04810
               BLKSIZE=133                                               04811
         DC    C' '                                                      04812
LINE     DS    CL133                                                     04813
DISPLIN1 DS    0CL133                                                    04814
         DC    C'0    '                                                  04815
DISPL1A  DC    8CL12' '                                                  04816
         DC    32C' '                                                    04817
DISPLIN2 DS    0CL133                                                    04818
         DC    C'     '                                                  04819
DISPL2A  DC    8CL12' '                                                  04820
         DC    32C' '                                                    04821
DISPLIN3 DS    0CL133                                                    04822
         DC    C'     '                                                  04823
DISPL3A  DC    8CL12' '                                                  04824
         DC    32C' '                                                    04825
DISPLIN4 DS    0CL133                                                    04826
         DC    C'     '                                                  04827
DISPL4A  DC    8CL12' '                                                  04828
         DC    32C' '                                                    04829
DISPLIN5 DS    0CL133                                                    04830
         DC    C'     '                                                  04831
DISPL5A  DC    8CL12' '                                                  04832
         DC    32C' '                                                    04833
DISPLIN6 DS    0CL133                                                    04834
         DC    C'     '                                                  04835
DISPL6A  DC    8CL12' '                                                  04836
         DC    32C' '                                                    04837
DISPLIN7 DS    0CL133                                                    04838
         DC    C'     '                                                  04839
DISPL7A  DC    8CL12' '                                                  04840
         DC    32C' '                                                    04841
DISPLIN8 DS    0CL133                                                    04842
         DC    C'     '                                                  04843
DISPL8A  DC    8CL12' '                                                  04844
         DC    32C' '                                                    04845
DISPLIN9 DS    0CL133                                                    04846
         DC    C'     '                                                  04847
DISPL9A  DC    8CL12' '                                                  04848
         DC    32C' '                                                    04849
DISPLINA DS    0CL133                                                    04850
         DC    C'     '                                                  04851
DISPLAA  DC    8CL12' '                                                  04852
         DC    32C' '                                                    04853
         SPACE 3                                                         04854
         EJECT                                                           04855
@PAN$AUD CSECT                                                           04856
$PAN#AUD DC    CL30'LEVEL 065 COPYMOPT  08/12/03 '                       04857
         END                                                             04858
*          PARM CHECKER        AT LEVEL 1.5 AS OF 08/12/03               04859
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                       04860
**************************************************************           04861
**************************************************************           04862
**                                                          **           04863
**                                                          **           04864
**  MODULE:   PARMCHEK - Set option bits, based on          **           04865
**                       keywords coded in PARM and/or      **           04866
**                       SYSIN.                             **           04867
**                                                          **           04868
**  AUTHOR:   Sam Golob                                     **           04869
**                                                          **           04870
**  PURPOSE:  This program converts keywords in a PARM      **           04871
**            field or in SYSIN, into bit settings that     **           04872
**            a program can use, to control options in      **           04873
**            its execution.                                **           04874
**                                                          **           04875
**            This program can be run as a subroutine       **           04876
**            which is called, to set up to 10 bytes of     **           04877
**            bits, up to 80 bits in all, based on the      **           04878
**            settings of keywords in a table.              **           04879
**                                                          **           04880
**            This routine makes it easy to put a lot of    **           04881
**            options into a program.  If you want to       **           04882
**            add options, or use other words in PARM or    **           04883
**            SYSIN to call the same options, all you       **           04884
**            have to do, is to change or add entries in    **           04885
**            a table.  There is no extra coding to be      **           04886
**            done.                                         **           04887
**                                                          **           04888
**            Keywords in the PARM or SYSIN areas do not    **           04889
**            have to be delimited by commas or spaces or   **           04890
**            anything else.  Although for clarity, I'd     **           04891
**            certainly recommend that you put commas or    **           04892
**            spaces between the PARM field keywords.       **           04893
**            Therefore, I'd also advise that when you      **           04894
**            design keywords to put into the table to      **           04895
**            designate options, that you make them         **           04896
**            significantly different from each other.      **           04897
**            There is a length field in the table,         **           04898
**            however, which gives you some more control    **           04899
**            in this area.                                 **           04900
**                                                          **           04901
**            From a calling program, it would be possible  **           04902
**            to call PARMCHEK twice, against two different **           04903
**            tables, to set 20 bytes of options, instead   **           04904
**            of 10 bytes of options, and so forth...       **           04905
**                                                          **           04906
**            This gives you the opportunity of having      **           04907
**            a tremendous number of options, set by        **           04908
**            keywords, in your program, without using      **           04909
**            up valuable "base register space" for such    **           04910
**            coding.                                       **           04911
**                                                          **           04912
**                                                          **           04913
**  METHOD:   Bits, in the 10 bytes of PARMFLGS, are set,   **           04914
**            from a table, based on assembled defaults.    **           04915
**            These default settings are then overridden    **           04916
**            from a scan of words in the PARM field of     **           04917
**            the EXEC card.                                **           04918
**                                                          **           04919
**            If a SYSIN DD card is present, its cards      **           04920
**            are scanned against the table entries, to     **           04921
**            further override the bit settings which       **           04922
**            have already been done by the defaults and    **           04923
**            the PARM field.                               **           04924
**                                                          **           04925
**            The main purpose of this routine is to set    **           04926
**            bits from words.  However, if you need some   **           04927
**            keywords with values, such as (for example)   **           04928
**            FILELIMIT=69  in your program, you may use    **           04929
**            the "user code" section of this program       **           04930
**            to code that stuff in, so that these special  **           04931
**            keywords can be coded in SYSIN.               **           04932
**                                                          **           04933
**            Two sample keywords expecting number values:  **           04934
**            FILELIMIT=nnn  or                             **           04935
**            LABELIMIT=mmm                                 **           04936
**            have been coded here, just to illustrate      **           04937
**            how the user coding might work.               **           04938
**                                                          **           04939
**            Search order is:  Defaults, then PARM in      **           04940
**            the EXEC card, then SYSIN.                    **           04941
**                                                          **           04942
**            As coded here, the FILELIMIT= and             **           04943
**            LABELIMIT= keywords in SYSIN have to be in    **           04944
**            column 1 of the SYSIN cards, and if these     **           04945
**            "special keywords" are present in a card,     **           04946
**            the rest of that card is not scanned for      **           04947
**            the table keywords.                           **           04948
**                                                          **           04949
**            As coded here, the PARMTABL is a separate     **           04950
**            CSECT, addressable by V-CONs from the         **           04951
**            PARMCHEK CSECT.                               **           04952
**                                                          **           04953
**            It would probably be best to invoke the       **           04954
**            PARMCHEK program as a separate CSECT which    **           04955
**            is linkedited with the calling program,       **           04956
**            but it may be LOADed and BALR 14,15 'ed to,   **           04957
**            and run as a separate program.  (See the      **           04958
**            PARMDRVR program that is included in this     **           04959
**            package, as a sample.)                        **           04960
**                                                          **           04961
**    Input:  A fullword containing the address of the      **           04962
**            saved Register 1 from the calling program,    **           04963
**            which points to its parms.                    **           04964
**                                                          **           04965
**            A table containing parms, which is coded      **           04966
**            according to the following rules, and which   **           04967
**            has entries of 20 bytes apiece.               **           04968
**                                                          **           04969
**      FORMAT OF THE PARM TABLE                            **           04970
**                                                          **           04971
**        ONE ENTRY IS 20 BYTES                             **           04972
**                                                          **           04973
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **           04974
**                         (This is the word which          **           04975
**                          controls the bit settings.)     **           04976
**                         (up to and including 8 bytes)    **           04977
**                                                          **           04978
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **           04979
**                         X'00' says turn bit flag(s) ON   **           04980
**                         X'10' set entry as a DEFAULT     **           04981
**                                                          **           04982
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **           04983
**                         (This is the word searched on,   **           04984
**                          in the EXEC PARM and SYSIN      **           04985
**                          areas.)                         **           04986
**                                                          **           04987
**          NEXT 10 BYTES: FLAG BIT settings controlled by  **           04988
**                          this keyword.                   **           04989
**                                                          **           04990
**                         These are the bits which the     **           04991
**                          keyword will flip on (or off).  **           04992
**                                                          **           04993
**                         You may control multiple bits    **           04994
**                          using one keyword.  All bits    **           04995
**                          controlled by this keyword      **           04996
**                          are coded in this entry field.  **           04997
**                                                          **           04998
**          The table is ended by an entry of X'FF's.       **           04999
**                                                          **           05000
**                                                          **           05001
**    Output:  R1 points to a 10-byte area containing the   **           05002
**             80 switch settings.                          **           05003
**                                                          **           05004
**             Sample code to use PARMCHEK output:          **           05005
**                                                          **           05006
**                      ST    R1,PARMADDR                   **           05007
**                      USING PARMFLGS,R1                   **           05008
**             *                                            **           05009
**             PARMFLGS DSECT                               **           05010
**             PARMFLG1 DS    X                             **           05011
**             PARMFLG2 DS    X                             **           05012
**             PARMFLG3 DS    X                             **           05013
**             PARMFLG4 DS    X                             **           05014
**             PARMFLG5 DS    X                             **           05015
**             PARMFLG6 DS    X                             **           05016
**             PARMFLG7 DS    X                             **           05017
**             PARMFLG8 DS    X                             **           05018
**             PARMFLG9 DS    X                             **           05019
**             PARMFLGA DS    X                             **           05020
**                                                          **           05021
**               then ....                                  **           05022
**                                                          **           05023
**                      TM    PARMFLG2,X'04'                **           05024
**                      BZ    some location                 **           05025
**                        ....                              **           05026
**                                                          **           05027
**             R2 points to the address of a data area      **           05028
**             containing values generated by this          **           05029
**             program.  It's address is at label STRTVALU  **           05030
**             and its length is in the first fullword      **           05031
**             at STRTVALU.                                 **           05032
**                                                          **           05033
**             R2 is accessed in a similar manner to R1.    **           05034
**             See the PARMDRVR program for an example      **           05035
**             illustrating one way in which PARMCHEK       **           05036
**             may be called.                               **           05037
**                                                          **           05038
**                                                          **           05039
**************************************************************           05040
         EJECT                                                           05041
**************************************************************           05042
**                                                          **           05043
**  CHANGE LOG:                                             **           05044
**                                                          **           05045
**    Version 1.1 - Separate Parm Table into different      **           05046
**       CSECT.  Detailed reporting in PARMREPT ddname.     **           05047
**                                                          **           05048
**    Version 1.2 - Uppercase keyword before comparing      **           05049
**       against the table entries.  This assumes you       **           05050
**       will code your table with all uppercase keyword    **           05051
**       entries.                                           **           05052
**                                                          **           05053
**    Version 1.3 - Option for requiring commas or spaces   **           05054
**       as delimiters between parms.  Comment out one      **           05055
**       instruction to require delimiters.                 **           05056
**                                                          **           05057
**    Version 1.4 - Fitted to COPYMODS Level 061.           **           05058
**                                                          **           05059
**    Version 1.5 - Fitted to COPYMODS Level 065.           **           05060
**                  Ten parm bits instead of five.          **           05061
**                                                          **           05062
**************************************************************           05063
**************************************************************           05064
         EJECT                                                           05065
**************************************************************           05066
*  ---------------------------------------------------------------  *    05067
*    This macro is used to display hex values in a printed report.       05068
*  ---------------------------------------------------------------  *    05069
         MACRO                                                           05070
&NAME    HEX   &TO,&LEN,&FROM                                            05071
&NAME    DS    0H                                                        05072
         ST    R4,SAV4HEX                                                05073
         STM   15,1,HEXSAVE                                              05074
         LA    1,&FROM                                                   05075
         LA    0,&LEN                                                    05076
         LA    15,&TO                                                    05077
         BAL   4,HEX                                                     05078
         L     R4,SAV4HEX                                                05079
         LM    15,1,HEXSAVE                                              05080
         MEND                                                            05081
         SPACE                                                           05082
**************************************************************           05083
         GBLC  &LLEV                                                     05084
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                05085
         GBLA  &HEXDFLA                                                  05086
&LLEV    SETC  '1.5 '                                                    05087
         YREGS                                                           05088
* ------------------------------------------------------------------ *   05089
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   05090
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   05091
* ------------------------------------------------------------------ *   05092
         ENTRY CARDREAD                                                  05093
         ENTRY PARMCHEK                                                  05094
&HEXDFLA SETA  4                                                         05095
&HEXDFLC SETC  '&HEXDFLA'                                                05096
PARMCHEK CSECT                                                           05097
         USING *,R15                                                     05098
         B     EYECATCH                                                  05099
         DC    C'HEX DUMP '                                              05100
HEXDFLCC DC    C'&HEXDFLC'                                               05101
         DC    C' RECORDS '                                              05102
HEXDFLL  EQU   L'HEXDFLCC                                                05103
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 05104
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05105
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '                05106
         DC    C' - '                                                    05107
         DC    C'PARM INPUT IN SYSIN '                                   05108
         DC    C' - '                                                    05109
         DC    C'LEVEL '                                                 05110
SYSLEV   DC    C'&LLEV'                                                  05111
         DC    C' - '                                                    05112
SYSDAT   DC    C'&SYSDATE'                                               05113
         DC    C'  ',C'&SYSTIME ',C'--- '                                05114
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05115
SAVEAREA DC    18F'0'                                                    05116
EYECATCH DS    0D             ENSURE ALIGNMENT                           05117
         SAVE  (14,12)                                                   05118
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   05119
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          05120
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         05121
         LR    R13,R1               NEW SAVE AREA ADDRESS                05122
         DROP  R15                                                       05123
* -----                       SET UP BASE REGISTERS                      05124
         USING PARMCHEK,R12,R11,R10                                      05125
         LR    R12,R15                                                   05126
         LA    R11,4095(,R12)                                            05127
         LA    R11,1(,R11)                                               05128
         LA    R10,4095(,R11)                                            05129
         LA    R10,1(,R10)                                               05130
*                                                                        05131
* ----->   GET PARMS THAT COPYMODS WAS CALLED WITH.                      05132
*                                                                        05133
         LR    R6,R2          SAVE USER AREA POINTER                     05134
         L     R6,PARMSTRT-STRTVALU(,R6)   SAVED ORIGINAL PARMS          05135
         LR    R1,R6          RESTORE PARM POINTER                       05136
         ST    R1,PARMSAVE                                               05137
* ----------------------------------------------------------------- *    05138
TIOTSCAN DS    0H             Determine the presence of Optional         05139
*                             DDNAMES:  SYSIN AND PARMREPT.              05140
* ----->                      OPEN them if there is JCL for them.        05141
* ----------------------------------------------------------------- *    05142
         L     R5,16          R5=CVT                                     05143
         L     R5,0(,R5)      R5=TCB WORDS                               05144
         L     R5,4(,R5)      R5=MY TCB                                  05145
         L     R5,12(,R5)     R5=TIOT                                    05146
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          05147
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             05148
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        05149
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?               05150
         BNE   TIOTSYSN       NO                                         05151
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD         05152
         B     TIOTNEXT       CONTINUE                                   05153
TIOTSYSN CLC   4(8,R5),SYSIN+40                                          05154
         BNE   TIOTNEXT                                                  05155
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         05156
         B     TIOTNEXT                                                  05157
TIOTNEXT SR    R3,R3                                                     05158
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      05159
         AR    R5,R3          R5=NEXT DD ENTRY                           05160
         B     TIOTLOOP       GO CHECK IT                                05161
TIOTSEND DS    0H                                                        05162
***********************************************************************  05163
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  05164
***********************************************************************  05165
         STM   R14,R2,SAVE1402                                           05166
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             05167
         OI    DATE+4,X'0F'                                              05168
         UNPK  DATED,DATE                                                05169
         OI    TIME+3,X'0F'                                              05170
         UNPK  TIMED,TIME                                                05171
*                          FILL HEADDATE AREA WITH INFO TO REUSE         05172
         MVC   HEADDATE(2),DATED                                         05173
         MVI   HEADDATE+2,C'/'                                           05174
         MVC   HEADDATE+3(2),DATED+2                                     05175
         MVI   HEADDATE+5,C'/'                                           05176
         MVC   HEADDATE+6(4),DATED+4                                     05177
         MVC   HEADDATE+12(2),TIMED                                      05178
         MVI   HEADDATE+14,C':'                                          05179
         MVC   HEADDATE+15(2),TIMED+2                                    05180
         MVI   HEADDATE+17,C':'                                          05181
         MVC   HEADDATE+18(2),TIMED+4                                    05182
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         05183
         LM    R14,R2,SAVE1402                                           05184
***********************************************************************  05185
         MVC   LEVDATE(8),SYSDAT                                         05186
***********************************************************************  05187
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND             05188
* ----------------------------------------------------------------- *    05189
INITCONS DS    0H                                                        05190
         ZAP   TOTMLCNT,=P'0'                                            05191
* ----------------------------------------------------------------- *    05192
CHEKPRNT DS    0H                                                        05193
         TM    FLAGSYST,X'01'                                            05194
         BZ    CHEKPREN                                                  05195
         OPEN  (PARMREPT,OUTPUT)                                         05196
         OI    OPENDFLG,X'01'                                            05197
         MVC   PRTLINE,PRTLINE-1                                         05198
         MVC   PRTLINE,MESSAGE1                                          05199
         PUT   PARMREPT,MESSAGE1                                         05200
         MVC   PRTLINE,PRTLINE-1                                         05201
         PUT   PARMREPT,PRTLINE                                          05202
CHEKPREN DS    0H                                                        05203
* ----------------------------------------------------------------- *    05204
* --------------------------------------------------------- *            05205
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                     05206
*                         PRESENCE OR ABSENCE.                           05207
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                  05208
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                         05209
         L     R1,0(,R1)      Get PARM field                             05210
         LH    R5,0(,R1)      SAVE PARM LENGTH                           05211
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                       05212
         MVC   SAVMSLEN,PARMSLEN                                         05213
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05214
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS                05215
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE               05216
         LA    R1,0           USE R1 TO MEASURE LENGTH READ              05217
* -----------------------------------------------------------            05218
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE               05219
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                               05220
* -----------------------------------------------------------            05221
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE               05222
         CLI   0(R2),X'FF'    END OF PARM TABLE?                         05223
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.            05224
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                   05225
         BO    PARMDSET       YES, GO SET IT.                            05226
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05227
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                 05228
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                  05229
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..                05230
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.        05231
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05232
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                  05233
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK            05234
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES              05235
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF        05236
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05237
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE             05238
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER               05239
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05240
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE               05241
* ----------------------------------------------------------------- *    05242
SCANPARM DS    0H                                                        05243
         ST    R7,SAVE7BA0                                               05244
         ZAP   PARMLCNT,=P'0'                                            05245
         ZAP   PARMHITS,=P'0'                                            05246
         MVC   PARMSLEN,SAVMSLEN                                         05247
         BAL   R7,PARMLOOP      Now check the PARM field                 05248
         MVC   SAVPHITS,PARMHITS                                         05249
         MVC   SAVCHRCT,PRMCHRCT                                         05250
         MVC   SAVELCNT,PARMLCNT                                         05251
         AP    TOTMHITS,PARMHITS                                         05252
         AP    TOTMLCNT,PARMLCNT                                         05253
         L     R7,SAVE7BA0                                               05254
* ----------------------------------------------------------------- *    05255
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                   05256
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING             05257
         OPEN  (SYSIN,INPUT)                                             05258
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                   05259
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE               05260
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN                05261
         B     OPNSYSNE           AND CONTINUE PROCESSING.               05262
NOSYSIN  DS    0H                                                        05263
         B     CARDREND                                                  05264
OPNSYSNE DS    0H                                                        05265
* ----------------------------------------------------------------- *    05266
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT               05267
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.         05268
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                        05269
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.       05270
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS        05271
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05272
*              Insert User Code Here for Keywords                        05273
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05274
         GET   SYSIN,CARDIN                                              05275
*                                                                        05276
* -- >>              <-- Intercept any keywords you want in SYSIN -->    05277
* -- >>              <--    before you start the table scan       -->    05278
*                                                                        05279
         CLC   =C'OUTVOLALL=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05280
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD           05281
         CLC   =C'TAPEOWNER=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05282
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD           05283
         CLC   =C'FILELIMIT=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05284
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD           05285
         CLC   =C'LABELIMIT=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05286
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD           05287
         CLC   =C'PRINTRCDS=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05288
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD           05289
         CLC   =C'/*',CARDIN                                             05290
         BE    SYSINEND                                                  05291
*                                                                        05292
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05293
* ----         Resume Checking SYSIN in PARM Table                       05294
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05295
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL        05296
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                         05297
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD    05298
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH             05299
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE        05300
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                  05301
         L     R1,TOTCHRCT                                               05302
         A     R1,PRMCHRCT                                               05303
         ST    R1,TOTCHRCT                                               05304
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN          05305
         ZAP   PARMHITS,=P'0'                                            05306
         ZAP   PARMLCNT,=P'0'                                            05307
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                 05308
         AP    TOTMHITS,PARMHITS                                         05309
         AP    TOTMLCNT,PARMLCNT                                         05310
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                      05311
         B     CARDREAD        GET ANOTHER CARD                          05312
* ----                                                                   05313
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05314
*              Handle User Code Here for Keywords                        05315
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05316
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?        05317
         BE    CARDREAD                 YES. IGNORE CARD                 05318
         MVC   VOLSTG1(6),CARDIN+10                                      05319
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05320
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER   05321
         B     CARDREAD          GET ANOTHER CARD                        05322
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?        05323
         BE    CARDREAD                 YES. IGNORE CARD                 05324
         MVC   TAPEOWN(10),CARDIN+10                                     05325
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05326
         B     CARDREAD                                                  05327
FILELGET DS    0H                                                        05328
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05329
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05330
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05331
         BL    CARDREAD          YES. IGNORE.                            05332
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05333
         BH    CARDREAD          YES. IGNORE.                            05334
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON                05335
         LA    R15,CARDIN+10     STARTING ADDRESS                        05336
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05337
FILELNUM DS    0H                                                        05338
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05339
         C     R15,=A(CARDIN+71) END OF CARD?                            05340
         BH    FILELGNM          YES, GET NUMBER                         05341
         CLI   0(R15),C' '       BLANK HERE?                             05342
         BE    FILELGNM          YES, GET NUMBER                         05343
         B     FILELNUM          NO. STEP UP ONE PLACE                   05344
FILELGNM DS    0H                                                        05345
         SR    R15,R1            HOW BIG IS THE NUMBER                   05346
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05347
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            05348
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA         05349
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA       05350
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05351
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE           05352
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES               05353
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05354
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE           05355
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS       05356
FILELCLG DS    0H                                                        05357
         B     CARDREAD                                                  05358
LABELGET DS    0H                                                        05359
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05360
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05361
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05362
         BL    CARDREAD          YES. IGNORE.                            05363
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05364
         BH    CARDREAD          YES. IGNORE.                            05365
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON               05366
         LA    R15,CARDIN+10     STARTING ADDRESS                        05367
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05368
LABELNUM DS    0H                                                        05369
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05370
         C     R15,=A(CARDIN+71) END OF CARD?                            05371
         BH    LABELGNM          YES, GET NUMBER                         05372
         CLI   0(R15),C' '       BLANK HERE?                             05373
         BE    LABELGNM          YES, GET NUMBER                         05374
         B     LABELNUM          NO. STEP UP ONE PLACE                   05375
LABELGNM DS    0H                                                        05376
         SR    R15,R1            HOW BIG IS THE NUMBER                   05377
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05378
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA            05379
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA         05380
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA            05381
         CVB   R0,WORKL          CONVERT IT TO BINARY                    05382
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE           05383
LABELCLG DS    0H                                                        05384
         B     CARDREAD                                                  05385
PRINTGET DS    0H                                                        05386
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05387
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05388
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05389
         BL    CARDREAD          YES. IGNORE.                            05390
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05391
         BH    CARDREAD          YES. IGNORE.                            05392
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ         05393
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                    05394
         LA    R15,CARDIN+10     STARTING ADDRESS                        05395
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05396
PRINTNUM DS    0H                                                        05397
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05398
         C     R15,=A(CARDIN+71) END OF CARD?                            05399
         BH    PRINTGNM          YES, GET NUMBER                         05400
         CLI   0(R15),C' '       BLANK HERE?                             05401
         BE    PRINTGNM          YES, GET NUMBER                         05402
         B     PRINTNUM          NO. STEP UP ONE PLACE                   05403
PRINTGNM DS    0H                                                        05404
         SR    R15,R1            HOW BIG IS THE NUMBER                   05405
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05406
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA            05407
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA         05408
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA            05409
         CVB   R0,WORKP          CONVERT IT TO BINARY                    05410
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE           05411
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER            05412
PRINTCLG DS    0H                                                        05413
         B     CARDREAD                                                  05414
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05415
*              End of User Code Here for Keywords                        05416
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05417
CHECKEND DS    0H                                                        05418
* -----------------------------------------------------------            05419
SYSINEND DS    0H                                                        05420
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                     05421
         BZ    CARNOSYS         NO. Flag SYSIN option as OFF.            05422
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05423
         OI    PARMFLG2,X'20'   Mark PARMS that SYSIN is on.             05424
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05425
         L     R1,TOTCHRCT                                               05426
         A     R1,PRMCHRCT         Final totals for last card            05427
         ST    R1,TOTCHRCT                                               05428
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED             05429
         CLOSE (SYSIN)                                                   05430
         B     CARDREND                                                  05431
CARNOSYS DS    0H                                                        05432
         NI    PARMFLG2,FF-X'20'   Turn SYSIN off in PARM flags.         05433
CARDREND DS    0H                                                        05434
         BAL   R7,SUMMREPT                                               05435
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                     05436
         BZ    PARMRPEN         NO.  GET OUT.                            05437
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED             05438
         CLOSE (PARMREPT)                                                05439
PARMRPEN DS    0H                                                        05440
THEEND   DS    0H                                                        05441
         L     R13,4(,R13)                                               05442
         MVC   16(4,R13),=F'0'          Return code 0     in R15         05443
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1          05444
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2          05445
         LM    R14,R12,12(R13)                                           05446
         BR    R14                                                       05447
* -----------------------------------------------------------            05448
*        S U B R O U T I N E S                                           05449
* -----------------------------------------------------------            05450
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.              05451
* -----------------------------------------------------------            05452
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                     05453
         BNL   PARMFIN        YES - GET OUT                              05454
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE         05455
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING            05456
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                         05457
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                   05458
*        ------------------------------------------------------------    05459
*--->                    code to require a delimiter (space, etc)        05460
*                        to enable, comment out the next instruction     05461
*        ------------------------------------------------------------    05462
         B     PRMNODLM         comment this line to require delimiter   05463
         TM    PRMFDFLG,X'01'                                            05464
         BO    PRMNFND                                                   05465
PRMNODLM DS    0H                                                        05466
*--->                                                                    05467
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE              05468
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                 05469
         BCTR  R5,0           ONE LESS FOR EXECUTE                       05470
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE       05471
*                                                                        05472
*   If you want to require parm comparisons as case sensitive,           05473
*    then comment out the following instruction....                      05474
*                                                                        05475
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM       05476
*                                                                        05477
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM     05478
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION                05479
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                          05480
         B     BOPPTBL        INNER LOOP                                 05481
*                                                                        05482
PRMNFND  DS    0H                                                        05483
*--->                 below - Parm Found flagging to require delimiter   05484
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters   05485
         BE    PRMFDOFF                                                  05486
         CLI   0(R4),C','                                                05487
         BE    PRMFDOFF                                                  05488
         B     PRMFDEND                                                  05489
PRMFDOFF DS    0H                                                        05490
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag         05491
PRMFDEND DS    0H                                                        05492
*--->                 above - Parm Found flagging to require delimiter   05493
*                                                                        05494
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                       05495
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                  05496
*                                                                        05497
         B     PARMLOOP       TRY AGAIN                                  05498
*                                                                        05499
PRMFOUND DS    0H                                                        05500
*                                                                        05501
*--->                 below - Parm Found flagging to require delimiter   05502
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                 05503
*--->                 above - Parm Found flagging to require delimiter   05504
PRMNOSEP DS    0H                                                        05505
         AP    PARMHITS,=P'1'    COUNT PARM HITS                         05506
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND            05507
         TM    1(R2),X'01'         PARM ON OR OFF?                       05508
         BO    PARMOFF             OFF                                   05509
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND     05510
         B     PARMGO                        AND GO ON                   05511
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK           05512
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS              05513
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF        05514
PARMGO   DS    0H                                                        05515
         XR    R5,R5          Clear Work Reg befor IC                    05516
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE             05517
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                  05518
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                   05519
         B     PARMLOOP       LOOK FOR MORE PARMS                        05520
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --              05521
*                             COUNT FOR DEBUGGING                        05522
PRMCHEND DS    0H                                                        05523
         BR    R7                                                        05524
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                    05525
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                    05526
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                    05527
* --------------------------------------------------------- *            05528
SUMMREPT DS    0H                  Print details of PARMREPT             05529
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                  05530
         BZ    SUMMREND            No. Bypass this routine.              05531
         MVC   PRTLINE,PRTLINE-1                                         05532
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                        05533
         HEX   PRTLINE+27,1,PARMFLG1                                     05534
         HEX   PRTLINE+30,1,PARMFLG2                                     05535
         HEX   PRTLINE+33,1,PARMFLG3                                     05536
         HEX   PRTLINE+36,1,PARMFLG4                                     05537
         HEX   PRTLINE+39,1,PARMFLG5                                     05538
         HEX   PRTLINE+42,1,PARMFLG6                                     05539
         HEX   PRTLINE+45,1,PARMFLG7                                     05540
         HEX   PRTLINE+48,1,PARMFLG8                                     05541
         HEX   PRTLINE+51,1,PARMFLG9                                     05542
         HEX   PRTLINE+54,1,PARMFLGA                                     05543
         PUT   PARMREPT,PRTLINE                                          05544
         MVC   PRTLINE,PRTLINE-1                                         05545
         PUT   PARMREPT,PRTLINE                                          05546
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first.  05547
         MVC   PRTLINE+4(12),=C'User Area : '                            05548
         HEX   PRTLINE+16,48,STRTVALU                                    05549
         PUT   PARMREPT,PRTLINE                                          05550
         MVC   PRTLINE,PRTLINE-1                                         05551
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                          05552
         HEX   PRTLINE+16,48,STRTVALU+48                                 05553
         PUT   PARMREPT,PRTLINE                                          05554
         MVC   PRTLINE,PRTLINE-1                                         05555
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                          05556
         HEX   PRTLINE+16,48,STRTVALU+96                                 05557
         PUT   PARMREPT,PRTLINE                                          05558
         MVC   PRTLINE,PRTLINE-1                                         05559
         MVC   PRTLINE+4(12),=C'UA + x''90'': '                          05560
         HEX   PRTLINE+16,20,STRTVALU+144                                05561
         PUT   PARMREPT,PRTLINE                                          05562
         MVC   PRTLINE,PRTLINE-1                                         05563
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                  05564
         HEX   PRTLINE+30,4,STRTVALU                                     05565
         MVC   PRTLINE+42(6),=C'Hex   '                                  05566
         PUT   PARMREPT,PRTLINE                                          05567
         MVC   PRTLINE,PRTLINE-1                                         05568
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                  05569
         HEX   PRTLINE+30,4,PARMSLEN                                     05570
         MVC   PRTLINE+42(6),=C'Hex   '                                  05571
         PUT   PARMREPT,PRTLINE                                          05572
         MVC   PRTLINE,PRTLINE-1                                         05573
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                  05574
         HEX   PRTLINE+30,4,SAVMSLEN                                     05575
         MVC   PRTLINE+42(6),=C'Hex   '                                  05576
         PUT   PARMREPT,PRTLINE                                          05577
         MVC   PRTLINE,PRTLINE-1                                         05578
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                  05579
         HEX   PRTLINE+30,4,PARMSTRT                                     05580
         MVC   PRTLINE+42(6),=C'Hex   '                                  05581
         PUT   PARMREPT,PRTLINE                                          05582
         MVC   PRTLINE,PRTLINE-1                                         05583
         MVC   PRTLINE+4(22),=C'Last Character Count :'                  05584
         HEX   PRTLINE+30,4,PRMCHRCT                                     05585
         MVC   PRTLINE+42(6),=C'Hex   '                                  05586
         PUT   PARMREPT,PRTLINE                                          05587
         MVC   PRTLINE,PRTLINE-1                                         05588
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                  05589
         HEX   PRTLINE+30,4,SAVCHRCT                                     05590
         MVC   PRTLINE+42(6),=C'Hex   '                                  05591
         PUT   PARMREPT,PRTLINE                                          05592
         MVC   PRTLINE,PRTLINE-1                                         05593
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                  05594
         HEX   PRTLINE+30,4,TOTCHRCT                                     05595
         MVC   PRTLINE+42(6),=C'Hex   '                                  05596
         PUT   PARMREPT,PRTLINE                                          05597
         MVC   PRTLINE,PRTLINE-1                                         05598
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                  05599
         HEX   PRTLINE+30,4,SAVPHITS                                     05600
         MVC   PRTLINE+42(6),=C'Packed'                                  05601
         PUT   PARMREPT,PRTLINE                                          05602
         MVC   PRTLINE,PRTLINE-1                                         05603
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                  05604
         HEX   PRTLINE+30,4,PARMHITS                                     05605
         MVC   PRTLINE+42(6),=C'Packed'                                  05606
         PUT   PARMREPT,PRTLINE                                          05607
         MVC   PRTLINE,PRTLINE-1                                         05608
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                  05609
         HEX   PRTLINE+30,4,TOTMHITS                                     05610
         MVC   PRTLINE+42(6),=C'Packed'                                  05611
         PUT   PARMREPT,PRTLINE                                          05612
         MVC   PRTLINE,PRTLINE-1                                         05613
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                  05614
         HEX   PRTLINE+30,4,SAVELCNT                                     05615
         MVC   PRTLINE+42(6),=C'Packed'                                  05616
         PUT   PARMREPT,PRTLINE                                          05617
         MVC   PRTLINE,PRTLINE-1                                         05618
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                  05619
         HEX   PRTLINE+30,4,PARMLCNT                                     05620
         MVC   PRTLINE+42(6),=C'Packed'                                  05621
         PUT   PARMREPT,PRTLINE                                          05622
         MVC   PRTLINE,PRTLINE-1                                         05623
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                  05624
         HEX   PRTLINE+30,4,TOTMLCNT                                     05625
         MVC   PRTLINE+42(6),=C'Packed'                                  05626
         PUT   PARMREPT,PRTLINE                                          05627
         MVC   PRTLINE,PRTLINE-1                                         05628
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                  05629
         HEX   PRTLINE+30,20,PARMTENT                                    05630
         PUT   PARMREPT,PRTLINE                                          05631
SUMMREND DS    0H                                                        05632
         BR    R7                                                        05633
* --------------------------------------------------------- *            05634
* --------------------------------------------------------- *            05635
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                    05636
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                    05637
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                    05638
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                    05639
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                    05640
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                    05641
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                    05642
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                    05643
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                    05644
         EJECT                                                           05645
* --------------------------------------------------------- *            05646
WORKA    DC    D'0'                                                      05647
WORKL    DC    D'0'                                                      05648
WORKP    DC    D'0'                                                      05649
PL4NO3   DC    PL4'3'                                                    05650
FF       EQU   X'FF'                                                     05651
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05652
         DC    C' IS TREATED AS NL.                                   '  05653
         DC    CL27' '                                                   05654
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05655
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  05656
         DC    CL27' '                                                   05657
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  05658
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  05659
         DC    CL27' '                                                   05660
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 05661
         DC    CL6'&HEXDFLM'                                             05662
         DC    C' RECORDS WILL'                                          05663
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  05664
         DC    C'SYSIN.'                                                 05665
         DC    CL17' '                                                   05666
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     05667
* --------------------------------------------------------- *            05668
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                05669
PARMFLG1 DC    X'00'                                                     05670
PARMFLG2 DC    X'00'                                                     05671
PARMFLG3 DC    X'00'                                                     05672
PARMFLG4 DC    X'00'                                                     05673
PARMFLG5 DC    X'00'                                                     05674
PARMFLG6 DC    X'00'                                                     05675
PARMFLG7 DC    X'00'                                                     05676
PARMFLG8 DC    X'00'                                                     05677
PARMFLG9 DC    X'00'                                                     05678
PARMFLGA DC    X'00'                                                     05679
* --------------------------------------------------------- *            05680
         DS    0F                                                        05681
STRTVALU DS    0CL(ENDVALUE)                                             05682
         DC    A(ENDVALUE)                                               05683
PARMSLEN DC    F'0'                LENGTH OF PARMS                       05684
*                                  Upon entry, this field contains       05685
*                                  the PARM address from COPYMODS,       05686
*                                  which gets overlaid by PARMCHEK.      05687
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       05688
*                                  Upon entry, this field contains       05689
*                                  the PARM address from COPYMODS,       05690
*                                  which gets overlaid by PARMCHEK.      05691
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               05692
*                                  Upon entry, this field contains       05693
*                                  the PARM length from COPYMODS,        05694
*                                  which gets overlaid by PARMCHEK.      05695
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05696
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05697
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05698
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   05699
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05700
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05701
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05702
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05703
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05704
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 05705
         DC    CL7' '              FILLER                                05706
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            05707
*  -----    User Stuff                                                   05708
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          05709
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  05710
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      05711
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         05712
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         05713
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         05714
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       05715
TAPEOWN  DC    CL10' '                                                   05716
OVERFLAG DC    X'00'                                                     05717
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               05718
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    05719
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         05720
LIMCHAR  DC    CL10' '                                                   05721
LABCHAR  DC    CL10' '                                                   05722
PRTCHAR  DC    CL10' '                                                   05723
ENDVALUE EQU   (*-PARMSLEN)+4                                            05724
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     05725
* --------------------------------------------------------- *            05726
*              FORMAT OF PARM TABLE                                      05727
*              ONE ENTRY IS 20 BYTES                                     05728
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               05729
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 05730
*                               X'00' SAYS TURN FLAG ON                  05731
*                               X'10' SET ENTRY AS A DEFAULT             05732
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               05733
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                05734
*                                WHICH ALLOWS FOR 80 PARMS               05735
*                                THAT DON'T HAVE TO BE                   05736
*                                SEPARATED BY A COMMA.                   05737
PBYTES   EQU   10               Number of bytes of parm switches         05738
PTELEN   EQU   20               Length of each table entry               05739
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes  05740
EFFS     DC    20X'FF'          X'FF' bytes for XORing                   05741
* --------------------------------------------------------- *            05742
PARMTABL CSECT                                                           05743
         DC    X'07',X'00',C'LTMSKIP ',X'20000000000000000000'           05744
         DC    X'07',X'00',C'SKIPLTM ',X'20000000000000000000'           05745
         DC    X'07',X'11',C'COPYLTM ',X'20000000000000000000'           05746
         DC    X'07',X'01',C'LTMCOPY ',X'20000000000000000000'           05747
         DC    X'07',X'00',C'LBLINFO ',X'DE000000000000000000'           05748
         DC    X'06',X'00',C'PRINTL  ',X'DE000000000000000000'           05749
         DC    X'06',X'00',C'LABELS  ',X'DE000000000000000000'           05750
         DC    X'06',X'01',C'NOLABL  ',X'DE000000000000000000'           05751
         DC    X'07',X'11',C'NOLABEL ',X'DE000000000000000000'           05752
         DC    X'04',X'00',C'HDR1    ',X'02000000000000000000'           05753
         DC    X'06',X'01',C'NOHDR1  ',X'02000000000000000000'           05754
         DC    X'04',X'00',C'HDR2    ',X'04000000000000000000'           05755
         DC    X'06',X'01',C'NOHDR2  ',X'04000000000000000000'           05756
         DC    X'04',X'00',C'EOF1    ',X'08000000000000000000'           05757
         DC    X'06',X'01',C'NOEOF1  ',X'08000000000000000000'           05758
         DC    X'04',X'00',C'EOF2    ',X'10000000000000000000'           05759
         DC    X'06',X'01',C'NOEOF2  ',X'10000000000000000000'           05760
         DC    X'04',X'00',C'EOV1    ',X'40000000000000000000'           05761
         DC    X'06',X'01',C'NOEOV1  ',X'40000000000000000000'           05762
         DC    X'04',X'00',C'EOV2    ',X'80000000000000000000'           05763
         DC    X'06',X'01',C'NOEOV2  ',X'80000000000000000000'           05764
         DC    X'04',X'00',C'HDRS    ',X'06000000000000000000'           05765
         DC    X'06',X'01',C'NOHDRS  ',X'06000000000000000000'           05766
         DC    X'04',X'00',C'EOFS    ',X'18000000000000000000'           05767
         DC    X'06',X'01',C'NOEOFS  ',X'18000000000000000000'           05768
         DC    X'04',X'00',C'EOVS    ',X'C0000000000000000000'           05769
         DC    X'06',X'01',C'NOEOVS  ',X'C0000000000000000000'           05770
         DC    X'06',X'00',C'CHGVOL  ',X'00010000000000000000'           05771
         DC    X'08',X'11',C'NOCHGVOL',X'00010000000000000000'           05772
         DC    X'06',X'00',C'JCLVOL  ',X'00010000000000000000'           05773
         DC    X'08',X'01',C'NOJCLVOL',X'00010000000000000000'           05774
         DC    X'06',X'00',C'NEWVOL  ',X'00010000000000000000'           05775
         DC    X'08',X'01',C'NONEWVOL',X'00010000000000000000'           05776
         DC    X'06',X'10',C'VOLLBL  ',X'00020000000000000000'           05777
         DC    X'08',X'01',C'NOVOLLBL',X'00020000000000000000'           05778
         DC    X'07',X'00',C'EOV2EOF ',X'00040000000000000000'           05779
         DC    X'08',X'00',C'EOVTOEOF',X'00040000000000000000'           05780
         DC    X'06',X'00',C'EOVCHG  ',X'00040000000000000000'           05781
         DC    X'08',X'11',C'NOEOVCHG',X'00040000000000000000'           05782
         DC    X'04',X'00',C'READ    ',X'00080000000000000000'           05783
         DC    X'08',X'00',C'READONLY',X'00080000000000000000'           05784
         DC    X'07',X'00',C'NOWRITE ',X'00080000000000000000'           05785
         DC    X'07',X'11',C'WRITE   ',X'00080000000000000000'           05786
         DC    X'08',X'00',C'LABLDUMP',X'00100000000000000000'           05787
         DC    X'08',X'11',C'NOLABLDU',X'00100000000000000000'           05788
         DC    X'05',X'00',C'SYSIN   ',X'00200000000000000000'           05789
         DC    X'07',X'11',C'NOSYSIN ',X'00200000000000000000'           05790
         DC    X'06',X'00',C'OUTVOL  ',X'00400000000000000000'           05791
         DC    X'08',X'00',C'NOOUTVOL',X'00400000000000000000'           05792
         DC    X'08',X'00',C'LABADDIN',X'00808000000000000000'           05793
         DC    X'08',X'01',C'NOLABADD',X'00800000000000000000'           05794
         DC    X'06',X'10',C'BLKCNT  ',X'01000000000000000000'           05795
         DC    X'08',X'01',C'NOBLKCNT',X'01000000000000000000'           05796
         DC    X'08',X'00',C'PRADDLBL',X'00001000000000000000'           05797
         DC    X'08',X'01',C'NOPRADDL',X'00001000000000000000'           05798
         DC    X'08',X'00',C'CORRBLKS',X'00002000000000000000'           05799
         DC    X'08',X'01',C'NOCORRBL',X'00002000000000000000'           05800
         DC    X'08',X'00',C'NOEXNULL',X'00004000000000000000'           05801
         DC    X'08',X'00',C'NOSLNULL',X'00004000000000000000'           05802
         DC    X'06',X'11',C'EXNULL  ',X'00004000000000000000'           05803
         DC    X'06',X'01',C'SLNULL  ',X'00004000000000000000'           05804
         DC    X'06',X'00',C'LBLFIX  ',X'00008000000000000000'           05805
         DC    X'08',X'01',C'NOLBLFIX',X'00008000000000000000'           05806
         DC    X'08',X'00',C'INITVOLS',X'00010100000000000000'           05807
         DC    X'08',X'00',C'INITTAPE',X'00010100000000000000'           05808
         DC    X'07',X'00',C'LIMFILE ',X'00000200000000000000'           05809
         DC    X'07',X'00',C'FILELIM ',X'00000200000000000000'           05810
         DC    X'08',X'01',C'NOLIMFIL',X'00000200000000000000'           05811
         DC    X'05',X'00',C'BYTES   ',X'00000400000000000000'           05812
         DC    X'07',X'01',C'NOBYTES ',X'00000400000000000000'           05813
         DC    X'06',X'00',C'CUMTOT  ',X'00000800000000000000'           05814
         DC    X'08',X'01',C'NOCUMTOT',X'00000800000000000000'           05815
         DC    X'08',X'00',C'LIMLABEL',X'00000010000000000000'           05816
         DC    X'08',X'01',C'NOLIMLAB',X'00000010000000000000'           05817
         DC    X'06',X'10',C'OPTION  ',X'00000020000000000000'           05818
         DC    X'08',X'01',C'NOOPTION',X'00000020000000000000'           05819
         DC    X'07',X'00',C'SUPPWTO ',X'00000040000000000000'           05820
         DC    X'08',X'11',C'NOSUPPWT',X'00000040000000000000'           05821
         DC    X'08',X'00',C'LBDQUICK',X'00000080000000000000'           05822
         DC    X'08',X'01',C'NOLBDQUI',X'00000080000000000000'           05823
         DC    X'06',X'00',C'CUMSEP  ',X'00000001000000000000'           05824
         DC    X'08',X'01',C'NOCUMSEP',X'00000001000000000000'           05825
         DC    X'05',X'00',C'STRIP   ',X'00000002000000000000'           05826
         DC    X'07',X'11',C'NOSTRIP ',X'00000002000000000000'           05827
         DC    X'05',X'00',C'NLLIM   ',X'00000004000000000000'           05828
         DC    X'07',X'01',C'NONLLIM ',X'00000004000000000000'           05829
         DC    X'05',X'00',C'SLLIM   ',X'00000008000000000000'           05830
         DC    X'07',X'01',C'NOSLLIM ',X'00000008000000000000'           05831
         DC    X'07',X'00',C'IDRCOFF ',X'00000000100000000000'           05832
         DC    X'08',X'01',C'NOIDRCOF',X'00000000100000000000'           05833
         DC    X'06',X'00',C'HEXPRT  ',X'00000000200000000000'           05834
         DC    X'08',X'01',C'NOHEXPRT',X'00000000200000000000'           05835
         DC    X'07',X'10',C'UNEXWTO ',X'00000000400000000000'           05836
         DC    X'08',X'01',C'NOUNEXWT',X'00000000400000000000'           05837
         DC    X'FFFFFFFFFFFFFFFF'                                       05838
* --------------------------------------------------------- *            05839
PARMCHEK CSECT                                                           05840
         SPACE 3                                                         05841
         LTORG                                                           05842
         SPACE 3                                                         05843
         DS    0D                                                        05844
* --------------------------------------------------------- *            05845
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR - 05846
               COPYMODS LVL-065'                                         05847
* --------------------------------------------------------- *            05848
         SPACE 3                                                         05849
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X 05850
               EODAD=SYSINEND                                            05851
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA     05852
* --------------------------------------------------------- *            05853
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05854
HEX      DS    0H                                                        05855
         MVC   1(1,R15),0(R1)        Move byte                           05856
         UNPK  0(3,R15),1(2,R15)     Unpack                              05857
         TR    0(2,R15),HEXTAB-240                                       05858
         LA    R15,2(,R15)           Increment output pointer            05859
         LA    R1,1(,R1)             Increment input pointer             05860
         BCT   R0,HEX                Decrement length, then loop         05861
         MVI   0(R15),C' '           Blank the trailing byte             05862
         BR    R4                    Return to caller                    05863
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     05864
         SPACE                                                           05865
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05866
HEXSAVE  DS    3F                    Register save for HEX macro         05867
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05868
* --------------------------------------------------------- *            05869
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT             05870
*              X'01'          PARMREPT DD IS PRESENT                     05871
*              X'02'          SYSIN    DD IS PRESENT                     05872
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                05873
*              X'01'          PARMREPT DD IS OPEN                        05874
*              X'02'          SYSIN    DD IS OPEN                        05875
* --------------------------------------------------------- *            05876
         SPACE 3                                                         05877
PARMSAVE DC    F'0'                                                      05878
SAV4HEX  DC    F'0'                                                      05879
SAVE2TO3 DC    2F'0'                                                     05880
SAVE3REG DC    F'0'                                                      05881
SAVE7BA0 DC    F'0'                                                      05882
SAVE7BA1 DC    F'0'                                                      05883
PARMWORK DC    CL8' '                                                    05884
UPCASEOR DC    CL8' '                                                    05885
         DC    CL4' '                                                    05886
*    ------------------------ >   Constants for Date and Time - below    05887
SAVE1402 DS    6F                 Extra fullword for safety              05888
TIMED    DS    CL7                                                       05889
DATED    DS    CL9                                                       05890
DATETIME DS    4F                                                        05891
         ORG   DATETIME                                                  05892
TIME     DS    CL4                                                       05893
         DS    CL4                                                       05894
DATE     DS    CL5                                                       05895
         DS    CL3                                                       05896
HEADDLIT DS    0CL31              Literal for headings - date and time   05897
         DC    CL6'Today:'                                               05898
         DC    CL2' '                                                    05899
HEADDATE DC    CL23' '                                                   05900
LEVELLIT DS    0CL21              Level number display for headings      05901
         DC    CL6'Level '                                               05902
LEVELL   DC    CL4'&LLEV'                                                05903
         DC    CL2' ('                                                   05904
LEVDATE  DC    CL8' '             Assembly date for this program         05905
         DC    CL1')'                                                    05906
*    ------------------------ >   Constants for Date and Time - above    05907
*    --------------- >            Output line buffers - below            05908
PRMFDFLG DC    X'00'              Parm Found Flag                        05909
*              X'01'              Parm has been found in this record     05910
         DC    CL3' '                                                    05911
         DC    C' '                                                      05912
LINE     DC    CL133' '                                                  05913
         DC    C' '                                                      05914
CNTLINE  DC    CL133' '                                                  05915
         DC    C' '                                                      05916
OUTLINE  DC    CL133' '                                                  05917
         DC    C' '                                                      05918
PRTLINE  DC    CL133' '                                                  05919
         DC    CL80' '            Padding                                05920
*    --------------- >            Output line buffers - above            05921
*                                                                        05922
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                  05923
         END                                                             05924
