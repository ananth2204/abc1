*          DATA SET CBT990     AT LEVEL 082 AS OF 02/19/11               00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                 00002
**************************************************************           00003
**************************************************************           00004
**                                                          **           00005
**                                                          **           00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **           00007
**                                                          **           00008
**           Extensively revised by Sam Golob.              **           00009
**                                                          **           00010
**      (See the documentation in the code, below.)         **           00011
**                                                          **           00012
**  ** ================================================ **  **           00013
**  **  Defaults have purposely been left, so the       **  **           00014
**  **  output will resemble that of the original       **  **           00015
**  **  program version.  And all of your original JCL  **  **           00016
**  **  will still work.  However the list of "options  **  **           00017
**  **  in effect" will be printed in //SYSPRINT by     **  **           00018
**  **  default.  It will give you an idea about what   **  **           00019
**  **  kind of things are really possible to do,       **  **           00020
**  **  using this program.  IBM SL, and ASCII SL,      **  **           00021
**  **  are extensively supported.  So are 64K blocks.  **  **           00022
**  ** ================================================ **  **           00023
**  **  Options in COPYMODS may be coded in the PARM    **  **           00024
**  **  of the EXEC card or, more conveniently, in      **  **           00025
**  **  a separate //SYSIN DD card, which is automati-  **  **           00026
**  **  cally recognized if it is present in the JCL.   **  **           00027
**  ** ================================================ **  **           00028
**  **  Assembly time defaults can be changed by        **  **           00029
**  **  altering the (extremely flexible) PARMTABL.     **  **           00030
**  ** ================================================ **  **           00031
**                                                          **           00032
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **           00033
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **           00034
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **           00035
**                                                          **           00036
**     This has been revised, with the many new functions   **           00037
**     that have been added to COPYMODS.  Besides copying   **           00038
**     tapes, COPYMODS can read and measure tapes, as well  **           00039
**     as altering the copied tapes in many ways, such as   **           00040
**     stripping the labels or leading tape marks off.      **           00041
**     The VOLSER and OWNER can be altered in the copied    **           00042
**     tapes, and all labels can also be altered, through   **           00043
**     a process of dumping the labels to a FB-80 file      **           00044
**     (LABLDUMP option), editing the labels, stripping     **           00045
**     the labels in a copy operation (STRIP option), and   **           00046
**     splicing all the labels back in another copy         **           00047
**     operation (LABADDIN option).  COPYMODS can also      **           00048
**     INIT tapes, as many as 16 at a time.  No input tape  **           00049
**     is needed for an INIT operation (INITVOLS option).   **           00050
**                                                          **           00051
**     To see all the COPYMODS options, look at label       **           00052
**     PARMTABL in the PARMCHEK CSECT.  To see the keyword  **           00053
**     parms for SYSIN, see the code a few lines after the  **           00054
**     label CARDREAD in the PARMCHEK CSECT.                **           00055
**                                                          **           00056
**     The different COPYMODS parms or options can be used  **           00057
**     in combination with each other, as long as they      **           00058
**     don't contradict each other.  In certain cases, the  **           00059
**     use of one option will cause the automatic turn-off  **           00060
**     of one or more other options that contradict with    **           00061
**     it.  This "adjustment" is done by the COPYMODS       **           00062
**     program just after it receives the options settings  **           00063
**     back from the PARMCHEK program.  For example, if     **           00064
**     both LABLDUMP and LABADDIN (which contradict each    **           00065
**     other) are set, COPYMODS will make a judgment that   **           00066
**     LABADDIN takes precedence, so it will turn off both  **           00067
**     the LABLDUMP and READ (read only) options.  On the   **           00068
**     other hand, the STRIP and LABLDUMP options do not    **           00069
**     contradict each other.  So in that case, when STRIP  **           00070
**     and LABLDUMP are both set, COPYMODS will dump all    **           00071
**     the labels from the input tape to the LABLDUMP file, **           00072
**     while at the same time, it will strip them from the  **           00073
**     tape copies.  To get the exact effect you want from  **           00074
**     a COPYMODS run, just be very careful to code the     **           00075
**     correct combination of options.  Look at the OPTIONS **           00076
**     report before you mount the tapes.  (The OPTIONS     **           00077
**     report in //SYSPRINT will be complete before the     **           00078
**     tapes are mounted.)  To see the exact effect of      **           00079
**     the COPYMODS option correction, code the CODEDPRM    **           00080
**     option to obtain a comparison report of the options  **           00081
**     before COPYMODS correction has been done.            **           00082
**                                                          **           00083
**     Up to 132 bytes of the beginning n records of each   **           00084
**     tape file can be dumped in Hex, similarly to the     **           00085
**     way TAPESCAN does it (HEXPRT option).  Interpreta-   **           00086
**     tion of the printables in this hex dump can be       **           00087
**     either EBCDIC (default) or ASCII.  EBCDIC and ASCII  **           00088
**     are COPYMODS PARM or SYSIN keywords also.            **           00089
**                                                          **           00090
**     Support for ASCII tapes (ANSI/ISO Levels 3 and 4)    **           00091
**     has been added.  COPYMODS can init ASCII tapes       **           00092
**     with the INASC3 and INASC4 keywords.  Additionally,  **           00093
**     the other functions of COPYMODS such as LABLDUMP,    **           00094
**     LABADDIN, and READ work for ASCII tapes.  The HEXPRT **           00095
**     option with the ASCII keyword allows you to print    **           00096
**     tape records in hex, with an ASCII interpretation    **           00097
**     of the printables.  EOV2EOF works for ASCII tapes.   **           00098
**                                                          **           00099
**     COPYMODS will automatically read past any number     **           00100
**     of leading tape marks on a tape, and will copy       **           00101
**     any real data that is after them.  The leading       **           00102
**     tape marks can be included in the copied tapes       **           00103
**     (option LTMCOPY - default) or they can be skipped    **           00104
**     from the copied tapes and left off, so the real      **           00105
**     data will be at the beginning of the copied tapes    **           00106
**     (option LTMSKIP).                                    **           00107
**                                                          **           00108
**     See the "New Features" section below for some more   **           00109
**     details.  See the #MANUAL member of the install pds  **           00110
**     (CBT Tape File 229) for even more details.           **           00111
**                                                          **           00112
**  METHOD:  COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S    **           00113
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **           00114
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **           00115
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **           00116
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **           00117
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **           00118
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **           00119
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **           00120
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **           00121
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **           00122
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **           00123
**    PARTICULAR OUTPUT TAPE.                               **           00124
**                                                          **           00125
**    Any output DD names from //OUT1 thru //OUT16 may be   **           00126
**    coded in the execution JCL for COPYMODS, so that up   **           00127
**    to 16 output tapes may be created.  But, if none      **           00128
**    of these DD names is present, COPYMODS will force     **           00129
**    PARM=READ automatically, and it will issue a          **           00130
**    special message to //SYSPRINT saying that it did so.  **           00131
**                                                          **           00132
**  COPYMODS has some optional DD's which will be used      **           00133
**    if they are present.  These following DD's are used   **           00134
**    by the PARMCHEK program, when COPYMODS is executed.   **           00135
**                                                          **           00136
**  //SYSIN    - Extra space to enter PARM keywords.        **           00137
**               Also, the only place to enter the          **           00138
**               "quantity" keywords, which start in        **           00139
**               column 1 of a SYSIN card.                  **           00140
**                                                          **           00141
**         OUTVOLALL=volser      (up to 6 characters)       **           00142
**         TAPEOWNER=owner name  (up to 10 characters)      **           00143
**         FILELIMIT=nnn         (numeric)                  **           00144
**         LABELIMIT=nnn         (numeric)                  **           00145
**         PRINTRCDS=nnn         (numeric)                  **           00146
**                                                          **           00147
**  //PARMREPT - Diagnostic output from the PARMCHEK        **           00148
**               program.  LRECL=133,RECFM=FBA.             **           00149
**                                                          **           00150
**    In addition, the COPYMODS program itself has some     **           00151
**    extra DD's, which are required if the appropriate     **           00152
**    options are set:                                      **           00153
**                                                          **           00154
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **           00155
**               receive the images of all tape labels      **           00156
**               read, together with some control cards     **           00157
**               that COPYMODS generates.  This DD name     **           00158
**               is necessary if the LABLDUMP option is     **           00159
**               in effect.                                 **           00160
**                                                          **           00161
**  //LABADDIN - An FB-80 file, or member of a pds, which   **           00162
**               contains the set of labels to be spliced   **           00163
**               into an NL tape to create an SL tape.      **           00164
**               This DD name is necessary if the LABADDIN  **           00165
**               option of COPYMODS is in effect.  Usually  **           00166
**               the LABADDIN file is a previous result of  **           00167
**               a LABLDUMP operation, or it is an altered  **           00168
**               or edited version of a previously created  **           00169
**               LABLDUMP file.                             **           00170
**                                                          **           00171
**  This program has to be assembled with PARM=BATCH in     **           00172
**    the Assembler EXEC parms.  The entire PARMCHEK        **           00173
**    program has to be included in the assembly, because   **           00174
**    PARMCHEK has to be fitted to the current level of     **           00175
**    the COPYMODS program.                                 **           00176
**                                                          **           00177
**************************************************************           00178
**                                                          **           00179
**  REQUIRED DD NAMES (used by the COPYMODS program):       **           00180
**                                                          **           00181
**  //IN       -  Points to the Input Tape.  Only not       **           00182
**                required in a tape init operation, if     **           00183
**                the INITVOLS option is in effect.         **           00184
**                Otherwise, //IN is always required.       **           00185
**                                                          **           00186
**  //OUT1 thru - Any of these 16 DD names can be coded.    **           00187
**  //OUT16       These are for the output tapes.  These    **           00188
**                are not required if the READ (readonly)   **           00189
**                option is in effect.  Any one of these    **           00190
**                16 possible DD names may be coded, even   **           00191
**                if some numbers have been skipped.  For   **           00192
**                instance, if you have one output tape,    **           00193
**                it may be defined by //OUT13.  It is      **           00194
**                not necessary to code //OUT1.             **           00195
**                                                          **           00196
**  //SYSPRINT  - The output dataset to contain all the     **           00197
**                COPYMODS operation information that was   **           00198
**                called for by the various options set,    **           00199
**                including the OPTIONS display itself.     **           00200
**                This dataset should be LRECL=133,         **           00201
**                RECFM=FBA.                                **           00202
**                                                          **           00203
**************************************************************           00204
**                                                          **           00205
**  PROGRAM STRUCTURE:                                      **           00206
**                                                          **           00207
**  This program is no longer a single CSECT as it was in   **           00208
**    the old days.  There are now the following CSECTs,    **           00209
**    which should all be assembled together:               **           00210
**                                                          **           00211
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **           00212
**                                                          **           00213
**   COPYMODS - The main processing module, which contains  **           00214
**              most of the tape copy/reading processing.   **           00215
**                                                          **           00216
**   TRTCSECT - The translate tables for Hex printing of    **           00217
**              tape records, and for ASCII translation.    **           00218
**                                                          **           00219
**   COPYMOPT - The separate routine which reads the PARM   **           00220
**              bits that have been set, and which prints   **           00221
**              a report in SYSPRINT showing the options    **           00222
**              that are in effect.                         **           00223
**                                                          **           00224
**   PARMCHEK - All the PARM and SYSIN input processing is  **           00225
**              done here.  PARM bits are passed back to    **           00226
**              COPYMODS in R1, the User Area is passed     **           00227
**              back to COPYMODS in R2.                     **           00228
**                                                          **           00229
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **           00230
**              program, this table contains all the option **           00231
**              bit meanings and their default settings.    **           00232
**                                                          **           00233
**   LABELCHK - Now a separate CSECT to check whether a     **           00234
**              record read by COPYMODS is part of a set    **           00235
**              of label records or not.                    **           00236
**                                                          **           00237
**   PRINTLBL - A separate CSECT to interpret all tape      **           00238
**              label contents in a report line.            **           00239
**                                                          **           00240
**   MSGCSECT - Contains all the texts of the messages      **           00241
**              used by the COPYMODS CSECT.  Addressed      **           00242
**              by two new macros:  MVFMS which does        **           00243
**              operations on fields in the messages, and   **           00244
**              PTMS, which prints a message to SYSPRINT.   **           00245
**                                                          **           00246
**              Two new macros, ADRSMS and DROPMS, now can  **           00247
**              be used to address this area, and save      **           00248
**              a lot of addressability space, because      **           00249
**              normal assembler instructions can be used   **           00250
**              in between them, and the addressability     **           00251
**              will not be redundantly repeated.  The      **           00252
**              new PTMSN macro is PTMS without the         **           00253
**              addressability built in, to put in between  **           00254
**              ADRSMS and DROPMS.                          **           00255
**                                                          **           00256
**   FOOTAGE  - Code to calculate footage on a tape, as     **           00257
**              though the data were on a 6250 bpi reel.    **           00258
**              This code came from Florida Power Company   **           00259
**              SS0104 Tapemap program.  Used by the        **           00260
**              FOOTAGE keyword.                            **           00261
**                                                          **           00262
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **           00263
**  but they must be coordinated, and at the same level, so **           00264
**  to be safe, they should always be assembled together.   **           00265
**  The LABELCHK program has the same status.  It must be   **           00266
**  assembled together with the COPYMODS program.  Same     **           00267
**  with the PRINTLBL program and the FOOTAGE program.      **           00268
**                                                          **           00269
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **           00270
**                                                          **           00271
**  GENERAL OUTLINE OF PROGRAM CALLS                        **           00272
**  ------- ------- -- ------- -----                        **           00273
**                                                          **           00274
**  COPYMODS is the first program to get control.  The      **           00275
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **           00276
**  and the entry locations are stored in fullwords for     **           00277
**  later use.  Same for PRINTLBL and FOOTAGE entry points. **           00278
**                                                          **           00279
**  PARMCHEK is immediately called, and it opens //SYSIN    **           00280
**  if that ddname is present.  If //PARMREPT is present,   **           00281
**  it is also used by the PARMCHEK program.                **           00282
**                                                          **           00283
**  After PARMCHEK has returned all parm bit settings to    **           00284
**  COPYMODS and all user-quantities, the settings are      **           00285
**  examined by COPYMODS and inconsistent settings are      **           00286
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **           00287
**  has to be turned off, because only one of these can be  **           00288
**  done in one run.  These inconsistencies are all fixed,  **           00289
**  and then COPYMODS processing starts.                    **           00290
**                                                          **           00291
**  (To examine the effect of the COPYMODS parm correction, **           00292
**  code the CODEDPRM option to obtain a "before and after" **           00293
**  option comparison report.)                              **           00294
**                                                          **           00295
**  COPYMOPT is called to display all the options that have **           00296
**  been set, if the OPTION parm has been set.  This is     **           00297
**  done to //SYSPRINT.  If any adjustments of options have **           00298
**  been made, you can see the final result in the SYSPRINT **           00299
**  report that has been produced by COPYMOPT.              **           00300
**                                                          **           00301
**  A PARM of CODEDPRM causes COPYMOPT to be called twice,  **           00302
**  once with the corrected parm bits, and the second time, **           00303
**  using the saved original parm bits, as returned by the  **           00304
**  PARMCHEK program.                                       **           00305
**                                                          **           00306
**  The //SYSPRINT DD is opened and closed by COPYMOPT,     **           00307
**  and opened again by COPYMODS.  This allows SYSPRINT     **           00308
**  to be viewed under SDSF before the tapes are mounted,   **           00309
**  so you can see the OPTIONS report(s) there.             **           00310
**                                                          **           00311
**  A significant note is, that the PARMREPT contains the   **           00312
**  options as they have been set by the PARMCHEK program,  **           00313
**  with no alteration.  The COPYMOPT call, which produces  **           00314
**  the OPTIONS display in //SYSPRINT, occurs after the     **           00315
**  adjustments for inconsistent parm settings has been     **           00316
**  made by COPYMODS.  If you want to see the effect of     **           00317
**  these adjustments, code the CODEDPRM keyword to obtain  **           00318
**  a comparison report showing the original options as     **           00319
**  originally coded.                                       **           00320
**                                                          **           00321
**  After that, COPYMODS does its things, depending on the  **           00322
**  options that have been set.  Most of the processing is  **           00323
**  done in the COPYMODS csect, except for the HEXPRT       **           00324
**  option, where the translation tables are in the         **           00325
**  TRTCSECT csect.                                         **           00326
**                                                          **           00327
**  The LABELCHK program is called whenever an 80-byte      **           00328
**  record is read, to see whether that record is part of   **           00329
**  a set of tape labels.                                   **           00330
**                                                          **           00331
**  Whenver a label is to be interpreted to SYSPRINT, the   **           00332
**  PRINTLBL program is called.                             **           00333
**                                                          **           00334
**  If the FOOTAGE keyword is used, the FOOTAGE program     **           00335
**  is called at approximately the end of each file read    **           00336
**  from the input tape.  FOOTAGE is driven by the contents **           00337
**  of fields in a workarea, which, in the COPYMODS CSECT,  **           00338
**  is at label LABELTYP.  Most of the fields in this       **           00339
**  workarea are fed from the end-of-file routine, after    **           00340
**  label MARKFILE, and from the EXCP READs, near label     **           00341
**  INFROMIN, and the BYTESCOP field of number of bytes     **           00342
**  moved by the latest EXCP READ.                          **           00343
**                                                          **           00344
**************************************************************           00345
**                                                          **           00346
**  NEW FEATURES ADDED BY SAM GOLOB:                        **           00347
**                                                          **           00348
**  (Also please see the individual Level nnn changes, as   **           00349
**   listed in this code, below, for more information.)     **           00350
**                                                          **           00351
**   It is recommended that you view the PARMTABL entries   **           00352
**   and look at the supplied #MANUAL member in the         **           00353
**   distribution pds, CBT File 229, for even more info.    **           00354
**                                                          **           00355
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **           00356
**                                                          **           00357
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **           00358
**                                                          **           00359
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **           00360
**       BE CORRECTLY COPIED.                               **           00361
**                                                          **           00362
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **           00363
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **           00364
**       FOUND ON THE INPUT TAPE.                           **           00365
**                                                          **           00366
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **           00367
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **           00368
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **           00369
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **           00370
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **           00371
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **           00372
**       MAIN SOURCE CODE.                                  **           00373
**                                                          **           00374
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **           00375
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **           00376
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **           00377
**       INVOKE THIS ACTION.                                **           00378
**                                                          **           00379
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **           00380
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **           00381
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **           00382
**                                                          **           00383
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **           00384
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **           00385
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **           00386
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **           00387
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **           00388
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **           00389
**                                                          **           00390
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **           00391
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **           00392
**                                                          **           00393
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **           00394
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **           00395
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **           00396
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **           00397
**       SERVICE.                                           **           00398
**                                                          **           00399
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **           00400
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **           00401
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **           00402
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **           00403
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **           00404
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **           00405
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **           00406
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **           00407
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **           00408
**                                                          **           00409
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **           00410
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **           00411
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **           00412
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **           00413
**                                                          **           00414
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **           00415
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **           00416
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **           00417
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **           00418
**                                                          **           00419
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **           00420
**       TAPEOWNER=xxxxxxxxxx                               **           00421
**       FILELIMIT=nnnn                                     **           00422
**       LABELIMIT=nnnn                                     **           00423
**       PRINTRCDS=nnnn                                     **           00424
**         or                                               **           00425
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **           00426
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **           00427
**                                                          **           00428
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **           00429
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **           00430
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **           00431
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **           00432
**                                                          **           00433
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **           00434
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **           00435
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **           00436
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **           00437
**       IN THE EXTERNAL LABEL DATASET.                     **           00438
**                                                          **           00439
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **           00440
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **           00441
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **           00442
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **           00443
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **           00444
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **           00445
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **           00446
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **           00447
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **           00448
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **           00449
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **           00450
**                                                          **           00451
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **           00452
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **           00453
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **           00454
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **           00455
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **           00456
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **           00457
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **           00458
**       DATA FILE HAS BEEN WRITTEN.                        **           00459
**                                                          **           00460
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **           00461
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **           00462
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **           00463
**       EXTERNAL LABEL DATASET.                            **           00464
**                                                          **           00465
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **           00466
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **           00467
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **           00468
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **           00469
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **           00470
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **           00471
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **           00472
**       THE HDR2.                                          **           00473
**                                                          **           00474
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **           00475
**       INPUT TAPE.  USE A PARM OF INITVOLS.  ASCII TAPES  **           00476
**       ARE INITTED WITH A PARM OF EITHER INASC3 OR        **           00477
**       INASC4, FOR ASCII LEVEL 3 AND ASCII LEVEL 4        **           00478
**       RESPECTIVELY.  A PARM OF INASCII DEFAULTS TO       **           00479
**       ASCII LEVEL 3.                                     **           00480
**                                                          **           00481
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **           00482
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **           00483
**       IN A SYSIN CARD.  14 CHARACTER TAPE OWNERS ARE     **           00484
**       SUPPORTED FOR ASCII TAPES.  IBM SL TAPES HAVE      **           00485
**       10 CHARACTERS IN THE TAPE OWNER FIELD.             **           00486
**                                                          **           00487
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **           00488
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **           00489
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **           00490
**       IS INTERPRETED AS SL FILES, AND MULTIPLIED BY 3.   **           00491
**       IF NOT, THEN IT IS INTERPRETED AS NL.  SL          **           00492
**       INTERPRETATION OF FILE NUMBERS CAN BE FORCED,      **           00493
**       USING THE SLLIM PARM KEYWORD.  NL INTERPRETATION   **           00494
**       IS FORCED USING THE NLLIM PARM KEYWORD.            **           00495
**                                                          **           00496
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **           00497
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **           00498
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **           00499
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **           00500
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **           00501
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **           00502
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **           00503
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **           00504
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **           00505
**       BYTE TOTALS COMING FROM DATA FILES.                **           00506
**                                                          **           00507
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **           00508
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **           00509
**       TO PRINT THEM.)                                    **           00510
**                                                          **           00511
**       IF YOU ARE CONFUSED THAT THE OPTION REPORT DOES    **           00512
**       NOT SEEM TO REFLECT THE OPTION KEYWORDS YOU ARE    **           00513
**       CODING IN YOUR JCL, PLEASE BE AWARE THAT COPYMODS  **           00514
**       DOES SOME OPTION ADJUSTMENTS TO RESOLVE APPARENT   **           00515
**       INCONSISTENCIES WITH THE PARM SETTINGS.  TO GET    **           00516
**       A "BEFORE AND AFTER" REPORT FOR THIS ACTION, CODE  **           00517
**       THE "CODEDPRM" PARM KEYWORD.                       **           00518
**                                                          **           00519
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **           00520
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **           00521
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **           00522
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).  IF A TAPE      **           00523
**       FILE (EBCDIC SL TAPES ONLY) HAS MORE THAN 1        **           00524
**       MILLION BLOCKS IN IT, THEN THIS FIELD IS USED.     **           00525
**       OTHERWISE IT IS BLANKS.                            **           00526
**                                                          **           00527
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **           00528
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **           00529
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **           00530
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **           00531
**       DATA BLOCKS ON THE TAPE.                           **           00532
**                                                          **           00533
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **           00534
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **           00535
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **           00536
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **           00537
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **           00538
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **           00539
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **           00540
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **           00541
**       THESE WILL STILL BE CORRECTLY STRIPPED OFF.  IF    **           00542
**       FILE LIMITING IS IN EFFECT, THEN THE INPUT TAPE    **           00543
**       IS ASSUMED TO BE SL, AND THE NUMBER CODED IN THE   **           00544
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **           00545
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **           00546
**       INPUT TAPE.                                        **           00547
**                                                          **           00548
**       FOR PARM=STRIP OPERATIONS, COPYMODS USES THE       **           00549
**       LABELCHK ROUTINE TO DETERMINE IF A TAPE FILE IS    **           00550
**       REALLY A LABEL, SO IT WILL STRIP OFF A LABEL FILE  **           00551
**       WHEREVER IT OCCURS.  THIS IS NOT LIKE THE COPYSLNL **           00552
**       PROGRAM, WHICH ASSUMES THAT EACH DATA FILE IS      **           00553
**       SANDWICHED BETWEEN TWO LABEL FILES, AND WHICH      **           00554
**       DOES THE STRIPPING BY "COUNTING" AND NOT BY        **           00555
**       "FEELING".                                         **           00556
**                                                          **           00557
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **           00558
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **           00559
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **           00560
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **           00561
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **           00562
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **           00563
**                                                          **           00564
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **           00565
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **           00566
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **           00567
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **           00568
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **           00569
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **           00570
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **           00571
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **           00572
**                                                          **           00573
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **           00574
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **           00575
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **           00576
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **           00577
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **           00578
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **           00579
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **           00580
**                                                          **           00581
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **           00582
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **           00583
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **           00584
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **           00585
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **           00586
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **           00587
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **           00588
**                                                          **           00589
**  28.  SUPPORT FOR ANSI/ISO (ASCII) TAPES.  LEVELS 3 AND  **           00590
**       4 ARE SUPPORTED.  COPYMODS CAN INIT ASCII TAPES    **           00591
**       (KEYWORDS INASC3 AND INASC4), AND CAN PERFORM      **           00592
**       ALL ITS FUNCTIONALITY ON THEM.  14 CHARACTER TAPE  **           00593
**       OWNER FIELD IS SUPPORTED FOR ASCII TAPES, AS WELL  **           00594
**       AS MOST OF THE OTHER DIFFERENCES BETWEEN ASCII     **           00595
**       LABEL FORMATS AND IBM (EBCDIC) LABEL FORMATS.      **           00596
**                                                          **           00597
**  29.  SECURITY INDICATORS IN TAPE LABELS CAN BE TURNED   **           00598
**       OFF IN THE COPIED TAPES USING THE SECOFF KEYWORD.  **           00599
**       THESE INDICATORS (TURNED OFF) ARE:                 **           00600
**        ASCII SPACE IN BYTE 11 OF ASCII VOL1 LABEL.       **           00601
**        ASCII SPACE IN BYTE 54 OF ASCII XXX1 LABELS.      **           00602
**        EBCDIC 0 IN BYTE 54 OF IBM XXX1 LABELS.           **           00603
**       IF THESE HAD BEEN ANYTHING OTHER THAN THE ABOVE,   **           00604
**       THE SECOFF KEYWORD WILL CAUSE THEM TO BE RESET     **           00605
**       AS ABOVE, TO INDICATE NO DATASET PROTECTION.       **           00606
**                                                          **           00607
**       RACF OR OTHER SECURITY MAY OVERRIDE THESE LABEL    **           00608
**       SECURITY INDICATORS, BUT WE HAVE THE ABILITY TO    **           00609
**       COMPLETELY TURN THEM OFF AT THE TAPE LABEL LEVEL.  **           00610
**       THE NOSECOFF KEYWORD NULLIFIES THE EFFECT OF THE   **           00611
**       SECOFF KEYWORD.                                    **           00612
**                                                          **           00613
**  30.  COPYMODS CAN TRANSPARENTLY (WITH NO FURTHER EFFORT **           00614
**       ON THE PROGRAMMER'S PART) READ PAST LEADING TAPE   **           00615
**       MARKS ON THE INPUT TAPE.  THESE MAY BE EITHER      **           00616
**       COPIED TO THE OUTPUT TAPES (KEYWORD LTMCOPY) OR    **           00617
**       NOT COPIED TO THE OUTPUT TAPES (KEYWORD LTMSKIP).  **           00618
**       MORE EXTENSIVE "LTM SERVICE" HAS BEEN BUILT INTO   **           00619
**       THIS PROGRAM.                                      **           00620
**                                                          **           00621
**  31.  COPYMODS CAN DISPLAY 6250 BPI FOOTAGES FOR THE     **           00622
**       FILES ON THE TAPE, USING THE FOOTAGE KEYWORD.      **           00623
**       FOOTAGE CALCULATIONS FOR EACH FILE, AS WELL AS     **           00624
**       FOOTAGE FOR THE ENTIRE TAPE, UP TO THE CURRENT     **           00625
**       FILE, ARE DISPLAYED.                               **           00626
**                                                          **           00627
**  32.  COPYMODS WILL DISPLAY MINIMUM AND MAXIMUM BLOCK    **           00628
**       SIZES FOR EACH TAPE FILE READ, WHEN THE MINMAX     **           00629
**       OPTION IS CODED.                                   **           00630
**                                                          **           00631
**  33.  COPYMODS CAN OPTIONALLY SHOW THE SIZE OF EACH      **
**       TAPE DATA BLOCK (TECHNICALLY CALLED A "RECORD")    **
**       ON THE TAPE, USING THE RECSIZE OPTION.  AS CODED   **
**       CURRENTLY, RECSIZE CAN PRODUCE A LOT OF SYSPRINT   **
**       OUTPUT, SINCE IT PRODUCES ONE LINE PER TAPE DATA   **
**       BLOCK.  THE RECSIZE OPTION DISPLAYS DETAILS,       **
**       WHICH THE MINMAX OPTION SUMMARIZES.  IF RECSIZE    **
**       IS CODED, THEN THE MINMAX OPTION IS FORCED ON.     **
**                                                          **
**************************************************************           00632
         EJECT                                                           00633
**************************************************************           00634
**  CHANGE LOG:                                             **           00635
**                                                          **           00636
** LEVEL 003                                                **           00637
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS                * **           00638
**                                                          **           00639
** LEVEL 004                                                **           00640
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER           * **           00641
**             A HEADER LABEL.  THIS MEANS AN SL          * **           00642
**             FILE WITHOUT ANY DATA IN IT.  AND          * **           00643
**             IF THIS IS THE CASE, DON'T STOP            * **           00644
**             COPYING FILES.                             * **           00645
**                                                          **           00646
** LEVEL 005                                                **           00647
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE             * **           00648
**             R12,R11.                                   * **           00649
**                                                          **           00650
** LEVEL 006                                                **           00651
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP           * **           00652
**             TO 16 OUTPUT TAPES FROM OUT1 TO            * **           00653
**             OUT16.                                     * **           00654
**                                                          **           00655
** LEVEL 007 AND 008                                        **           00656
**  03/14/00 - CLEANED UP SPELLING ON ERROR               * **           00657
**             MESSAGES AND FIXED DOCUMENTATION.          * **           00658
**             ADDED EYECATCHERS COSMETICALLY.            * **           00659
**                                                          **           00660
** LEVEL 009                                                **           00661
**  03/21/00 - STOP AFTER INITTED MVS TAPE                * **           00662
**                                                          **           00663
** LEVEL 010                                                **           00664
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS          * **           00665
**             FOR BLOCK SIZES FROM 32K TO 64K.           * **           00666
**                                                          **           00667
**             I MADE AN ATTEMPT TO COPY DOS/VSE          * **           00668
**             TAPES THAT HAVE LEADING TAPE               * **           00669
**             MARKS.  THERE IS A CHOICE TO               * **           00670
**             EITHER COPY ALL THE LEADING                * **           00671
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO         * **           00672
**             DISCARD THEM ALL.  YOU USE A PARM          * **           00673
**             OF LTMSKIP TO DISCARD LEADING              * **           00674
**             TAPEMARKS, AND ANY OTHER PARM, OR          * **           00675
**             NO PARM, WILL CAUSE THE PROGRAM TO         * **           00676
**             COPY THEM TO THE OUTPUT TAPES.             * **           00677
**                                                          **           00678
** LEVEL 011                                                **           00679
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE          * **           00680
**             BY ENDING THE JOB NORMALLY AFTER           * **           00681
**             ONE TAPEMARK.                              * **           00682
**                                                        * **           00683
**             IF VOL1 LABEL IS DETECTED, THEN            * **           00684
**             PUT OUT A MESSAGE SAYING SO, AND           * **           00685
**             INDICATING THE VOLSER THAT WAS             * **           00686
**             FOUND.  THIS PROGRAM WAS WRITTEN           * **           00687
**             ORIGINALLY WITH THE INTENT OF              * **           00688
**             HANDLING NL TAPES, SO THAT THE             * **           00689
**             CONDITIONS WHICH RESULT FROM               * **           00690
**             HAVING SL TAPES, HAD TO BE                 * **           00691
**             ACCOUNTED FOR LATER.                       * **           00692
**                                                          **           00693
** LEVEL 012                                                **           00694
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2               * **           00695
**             HAVING ONLY ONE TAPE MARK AFTER              **           00696
**             THEM.                                        **           00697
**                                                          **           00698
** LEVEL 013                                                **           00699
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD            * **           00700
**             LABEL TYPES, AND THE SETTING OF              **           00701
**             FLAGS TO INDICATE EACH TYPE.                 **           00702
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **           00703
**             MOVE NON-LABEL-RELATED FLAGS OUT             **           00704
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **           00705
**             EASY PRINTING OF LABEL CONTENTS,             **           00706
**             BUT NO EXTRA PRINTING IS DONE AT             **           00707
**             THIS LEVEL.                                  **           00708
**                                                          **           00709
** LEVEL 014                                                **           00710
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN              * **           00711
**             PARM SCANNER THAT IS EASY TO                 **           00712
**             MODIFY, AND TO SUPPLY SYNONYMS               **           00713
**             FOR THE PARMS.  ADDED SUPPORT,               **           00714
**             VIA THE LBLINFO PARM, TO PRINT               **           00715
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **           00716
**             EOV2 LABEL INFORMATION, IF IT IS             **           00717
**             FOUND ON THE INPUT TAPE.  THAT IS,           **           00718
**             IF THE INPUT TAPE IS SL.                     **           00719
**                                                          **           00720
**             FOR A LIST OF PERMISSIBLE PARMS,             **           00721
**             SEE LABEL PARMTABL.                          **           00722
**                                                          **           00723
** LEVEL 015                                                **           00724
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY          * **           00725
**             TO TURN OFF A PARM FLAG AS WELL AS           **           00726
**             THE ABILITY TO TURN IT ON. INCREASED         **           00727
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **           00728
**             BYTE.                                        **           00729
**                                                          **           00730
** LEVEL 016                                                **           00731
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY          * **           00732
**             TO SET ANY PARM SETTING AS A                 **           00733
**             DEFAULT.  A SETTING FOR A DEFAULT            **           00734
**             ENTRY THAT IS LATER IN THE TABLE,            **           00735
**             WILL OVERRIDE A SETTING FOR A                **           00736
**             DEFAULT THAT WAS SET EARLIER IN THE          **           00737
**             TABLE.  SETTING A PARM EXPLICITLY            **           00738
**             IN THE JCL, WILL OVERRIDE ANY                **           00739
**             DEFAULT SETTING FOR THAT PARM.               **           00740
**                                                          **           00741
** LEVEL 017                                                **           00742
**  05/11/00 - USED THE PARM SCANNER TO MAKE A            * **           00743
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **           00744
**             KINDS OF TAPE LABELS.  IF YOU WANT           **           00745
**             ALL OF THEM, YOU JUST HAVE A PARM            **           00746
**             THAT THROWS ALL OF THE FLAGS.  ALL           **           00747
**             OF THIS IS CODED IN PARMTABL AND             **           00748
**             THE FLAGS ARE USED IN PRTXXX1 AND            **           00749
**             PRTXXX2.                                     **           00750
**                                                          **           00751
** LEVEL 018                                                **           00752
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE          * **           00753
**             VOLSER OF THE COPIED TAPES, TO               **           00754
**             MATCH THE VOLSER INDICATED IN THE            **           00755
**             OUTXX DD NAMES.  THIS IS DONE WITH           **           00756
**             THE CHGVOL PARM KEYWORD.  THIS               **           00757
**             ACTION ONLY OCCURS IF THE INPUT              **           00758
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **           00759
**             DETECTED.  THE COPIED VOL1 LABEL             **           00760
**             IS ALTERED BEFORE THE WRITE.                 **           00761
**                                                          **           00762
** LEVEL 019                                                **           00763
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1            * **           00764
**             AND EOV2 LABELS THAT ARE IN THE              **           00765
**             MIDDLE OF A TAPE.  OF COURSE THIS            **           00766
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **           00767
**             CAN HAPPEN WHEN YOU COPY FILES               **           00768
**             WITH THE COPYFILE PROGRAM, FROM              **           00769
**             THE END OF ONE TAPE, TO THE                  **           00770
**             BEGINNING OR THE MIDDLE OF                   **           00771
**             ANOTHER.  COPYFILE HAS NOT BEEN              **           00772
**             FIXED AS YET NOT TO DO THIS, BUT IT          **           00773
**             COPIES THE EOV LABELS AS IS.  THIS           **           00774
**             NEW OPTION IS CALLED EOVCHG OR               **           00775
**             EOV2EOF; THE EOV LABELS ARE                  **           00776
**             CHANGED (IN THE COPIED TAPES) TO             **           00777
**             EOF, AND A MESSAGE IS WRITTEN THAT           **           00778
**             REPORTS THIS FACT.                           **           00779
**                                                          **           00780
** LEVEL 020                                                **           00781
**  06/29/00 - ADDED THE PARM OF READ OR READONLY         * **           00782
**             TO ALLOW A RUN OF COPYMODS THAT              **           00783
**             JUST READS THE INPUT TAPE, AND DOES          **           00784
**             NOT MAKE COPIES.                             **           00785
**                                                          **           00786
** LEVEL 021                                                **           00787
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY             * **           00788
**             IEHINITTED TAPES.                            **           00789
**                                                          **           00790
** LEVEL 022                                                **           00791
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD         * **           00792
**             LABELS FROM A TAPE, TO AN FB-80              **           00793
**             OUTPUT FILE.  PARM IS LABLDUMP.              **           00794
**                                                          **           00795
** LEVEL 023                                              * **           00796
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **           00797
**             ONLY IMPLEMENTATION SO FAR IS TO             **           00798
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **           00799
**             SAME VALUE, BUT NOT NECESSARILY TO           **           00800
**             WHAT IS IN THE OUTX  DD CARD.  IN            **           00801
**             ORDER TO USE THE FACILITY, YOU HAVE          **           00802
**             TO CODE                                      **           00803
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **           00804
**             OF THE SYSIN CARD FILE.  IF THERE            **           00805
**             ARE NO VALID OUTVOLALL= CARDS IN             **           00806
**             SYSIN, THEN THE EFFECT IS THE SAME           **           00807
**             AS CODING CHGVOL.                            **           00808
**                                                          **           00809
**             FIXED LABEL DUMP OPTION SO THAT THE          **           00810
**             DUMPED LABELS HAVE CONTROL CARDS             **           00811
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **           00812
**             FUNCTION IN LEVEL 24 NEEDS THESE             **           00813
**             CONTROL CARDS.                               **           00814
**                                                          **           00815
** LEVEL 024                                              * **           00816
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **           00817
**             OUTPUT COPIES FROM NL INPUT AND A            **           00818
**             SET OF LABELS CREATED BY LABLDUMP.           **           00819
**             CHANGED THE DCB NAMES AND DD CARDS           **           00820
**             AND OPTION NAMES FOR LABEL DUMP AND          **           00821
**             RESTORE.                                     **           00822
**                                                          **           00823
**             CHANGED PROGRAM INITIALIZATION TO            **           00824
**             A STANDARD FORM.  GOT RID OF PRIME           **           00825
**             AND TERME MACROS.  HAVE 5 BASE               **           00826
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **           00827
**                                                          **           00828
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **           00829
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **           00830
**             LABELS ON AN SL TAPE, AND WON'T              **           00831
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **           00832
**             TAPE IS SL, ACCIDENTALLY.                    **           00833
**                                                          **           00834
** LEVEL 025                                              * **           00835
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **           00836
**             SYSIN AND SEARCH FOR ALL PARMS.              **           00837
**                                                          **           00838
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **           00839
**             BE USED.                                     **           00840
**                                                          **           00841
**             ANY CARD IN SYSIN WHICH IS NOT A             **           00842
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **           00843
**                TAPEOWNER=xxxxxxxxxx                      **           00844
**                FILELIMIT=nnnn                            **           00845
**                LABELIMIT=nnnn                            **           00846
**                PRINTRCDS=nnnn                            **           00847
**                  or                                      **           00848
**                OUTVOLALL=volser ,                        **           00849
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **           00850
**             AND ANY PARM THAT IS CODED IN THE            **           00851
**             PARM TABLE, CAN BE CODED IN SYSIN,           **           00852
**             AND IT WILL OVERRIDE THE PARM IN             **           00853
**             THE EXEC CARD (SINCE SYSIN IS                **           00854
**             SCANNED LATER IN THE PROCESSING).            **           00855
**                                                          **           00856
**             INCLUDED A BLOCK COUNT CORRECTION AS         **           00857
**             DEFAULT, WHEN WRITING STANDARD LABELS        **           00858
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **           00859
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **           00860
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **           00861
**                                                          **           00862
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **           00863
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **           00864
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **           00865
**             THE CONTENTS OF STANDARD LABELS FOUND        **           00866
**             WHEN COPYING AN INPUT TAPE.                  **           00867
**                                                          **           00868
** LEVEL 026                                              * **           00869
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00870
**             RESPECT CHGVOL AND OUTVOLALL= .              **           00871
**                                                          **           00872
** LEVEL 027                                              * **           00873
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00874
**             BE ABLE TO DO EOV2EOF PROCESSING             **           00875
**                                                          **           00876
** LEVEL 028                                              * **           00877
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **           00878
**             STANDARD USER LABEL SUPPORT.                 **           00879
**                                                          **           00880
** LEVEL 029                                              * **           00881
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **           00882
**             STANDARD USER LABELS.                        **           00883
**                                                          **           00884
** LEVEL 030                                              * **           00885
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **           00886
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **           00887
**             OUTPUT TAPES, DURING THE COPY.               **           00888
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **           00889
**                                                          **           00890
**             FIXED THE EYECATCHERS A BIT.                 **           00891
**                                                          **           00892
**             AGAIN FIXED COPY OF INITTED TAPES.           **           00893
**                                                          **           00894
** LEVEL 031                                              * **           00895
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **           00896
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **           00897
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **           00898
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **           00899
**                                                          **           00900
** LEVEL 032                                              * **           00901
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **           00902
**             LABADDIN PROCESSING WHEN THERE ARE           **           00903
**             MORE LABELS IN THE EXTERNAL LABEL            **           00904
**             DATASET, THAN THERE ARE NL FILES             **           00905
**             IN THE INPUT TAPE.  DEFAULT IS TO            **           00906
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **           00907
**             SAYS TO STOP AT THE END OF NL FILES          **           00908
**             AND NOT WRITE NULL SL FILES TO               **           00909
**             CORRESPOND TO THE EXTRA EXTERNAL             **           00910
**             LABELS.                                      **           00911
**                                                          **           00912
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **           00913
**             OF WRITING AN EXTRA HEADER LABEL SET,        **           00914
**             AND THEN BACKING OVER IT AND CLOSING.        **           00915
**                                                          **           00916
** LEVEL 033                                              * **           00917
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **           00918
**             PROCESSING WHEN THE LAST LABEL SET           **           00919
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **           00920
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **           00921
**             A HDR2 LABEL IN THE LAST LABEL SET,          **           00922
**             AND COPYMODS (WITH LBLFIX ON) WILL           **           00923
**             ACT AS IF AN ENDOFLABELHEADER CARD           **           00924
**             WERE THERE (SO IT WRITES A TAPEMARK          **           00925
**             AND THE DATA AND A TAPEMARK), AND IT         **           00926
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **           00927
**             PLUS THE MEASURED BLOCK COUNTS FROM          **           00928
**             THE DATA FILE.  AN EOF2 IS COPIED            **           00929
**             FROM THE EXISTING HDR2 AND EOF IS            **           00930
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **           00931
**             THE END.                                     **           00932
**                                                          **           00933
** LEVEL 034                                              * **           00934
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **           00935
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **           00936
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **           00937
**             THE CLOSE.  THIS LETS THE CLOSE DO           **           00938
**             THE REWIND, AND LEAVES THE WRITTEN           **           00939
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **           00940
**             THAT WAS INCOMPLETELY WRITTEN IS             **           00941
**             NOT ERASED.                                  **           00942
**                                                          **           00943
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **           00944
**             CONDITION IS FLAGGED WITH A PROPER           **           00945
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **           00946
**             FOR THAT DRIVE IS BYPASSED.                  **           00947
**                                                          **           00948
**             THIS PROBLEM HAS EXISTED SINCE THE           **           00949
**             FIRST VERSION OF THIS PROGRAM.               **           00950
**                                                          **           00951
**             CAREFUL TO FLAG ALL THE EXTRA DD             **           00952
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **           00953
**             THESE ARE THE OPENDFLG SETTINGS.             **           00954
**                                                          **           00955
** LEVEL 035                                              * **           00956
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **           00957
**             TAPES, BY NOT REUSING THE WRITE              **           00958
**             IOB WITHOUT REFRESHING THE PARTS             **           00959
**             THAT ARE USED BY IOS.  THIS IS THE           **           00960
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **           00961
**                                                          **           00962
**             LABLDUMP OF AN IEHINITTED TAPE               **           00963
**             PRODUCES AN ENDOFLABELHEADERINIT             **           00964
**             CARD, IN ANTICIPATION OF CREATING            **           00965
**             A TAPE INITIALIZATION ROUTINE FROM           **           00966
**             EXTERNAL LABELS.  (INITVOLS IN THE           **           00967
**             NEXT LEVEL, IS BETTER.)                      **           00968
**                                                          **           00969
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **           00970
**                                                          **           00971
** LEVEL 036                                              * **           00972
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **           00973
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **           00974
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **           00975
**             ALSO CHANGE TAPE OWNER INFORMATION           **           00976
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **           00977
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **           00978
**                                                          **           00979
**             TO INIT TAPES WITH NO INPUT TAPE,            **           00980
**             USE A PARM OF INITVOLS.                      **           00981
**                                                          **           00982
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **           00983
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **           00984
**                                                          **           00985
**             CONSOLIDATED CHGVOL CODE INTO A              **           00986
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **           00987
**                                                          **           00988
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **           00989
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **           00990
**             STEPPING ON EACH OTHER.                      **           00991
**                                                          **           00992
** LEVEL 037                                              * **           00993
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **           00994
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **           00995
**             NL TAPES ON THE INPUT TAPE.  IF THE          **           00996
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **           00997
**             IS MULTIPLIED BY 3, AND THE BIGGER           **           00998
**             VALUE IS USED.                               **           00999
**                                                          **           01000
**             COPYMODS WILL ONLY COPY INPUT TAPE           **           01001
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **           01002
**             VALUE, IF THERE IS ONE.                      **           01003
**                                                          **           01004
**             INTERNALLY, THE FILELIMIT= KEYWORD           **           01005
**             SETS THE PARM VALUE OF LIMFILE OR            **           01006
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **           01007
**             THE PROGRAM ACTION.                          **           01008
**                                                          **           01009
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **           01010
**             PROGRAM COUNTS BYTES READ FROM THE           **           01011
**             INPUT TAPE FILES, AND TOTALS THEM AT         **           01012
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **           01013
**             THIS ACTION.                                 **           01014
**                                                          **           01015
** LEVEL 038                                              * **           01016
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **           01017
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **           01018
**             RUNNING BYTE TOTALS AS WELL AS THE           **           01019
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **           01020
**             FILES.                                       **           01021
**                                                          **           01022
** LEVEL 039                                              * **           01023
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **           01024
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **           01025
**             THEREFORE WE HAVE PARMFLG1 THRU              **           01026
**             PARMFLG5 TO USE AS OPTION BYTES.             **           01027
**                                                          **           01028
** LEVEL 040                                              * **           01029
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **           01030
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **           01031
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **           01032
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **           01033
**             AND I WANT TO BE ABLE TO MATCH THEIR         **           01034
**             COUNT, SO A USER WILL BE ABLE TO             **           01035
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **           01036
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **           01037
**                                                          **           01038
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **           01039
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **           01040
**             NOT INITTING TAPES, YOU DON'T GET AN         **           01041
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **           01042
**             WHAT TO DO.                                  **           01043
**                                                          **           01044
** LEVEL 041                                              * **           01045
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **           01046
**             OF LABEL SETS IN THE LABADDIN FILE           **           01047
**             THAT COPYMODS WILL PROCESS.  EVEN            **           01048
**             IF THE LABADDIN FILE CONTAINS MANY           **           01049
**             LABEL SETS, THE NUMBER PROCESSED WILL        **           01050
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **           01051
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **           01052
**                                                          **           01053
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **           01054
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **           01055
**             THE LABADDIN FILE, AND CONSIDERS THE         **           01056
**             FILE TO END AFTER NNN OF THEM.               **           01057
**                                                          **           01058
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **           01059
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **           01060
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **           01061
**             THIS CHOPS PROCESSING OFF TOO SOON           **           01062
**             WHEN EOV LABELS ARE PRESENT.                 **           01063
**                                                          **           01064
** LEVEL 042                                              * **           01065
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **           01066
**             BAL R7, AND USED R6 AS SIXTH BASE            **           01067
**             REGISTER.                                    **           01068
**                                                          **           01069
** LEVEL 043                                              * **           01070
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **           01071
**             "OPTION" PARAMETER.  CALL IS TO A            **           01072
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **           01073
**             PROGRAM COPYMOPT SHOULD BE BATCH             **           01074
**             ASSEMBLED AND LINKEDITED WITH                **           01075
**             THE COPYMODS PROGRAM.                        **           01076
**                                                          **           01077
**             CHANGED THE WORDING OF SOME OF THE           **           01078
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **           01079
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **           01080
**                                                          **           01081
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **           01082
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **           01083
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **           01084
**             LABADDIN WAS IN EFFECT.                      **           01085
**                                                          **           01086
** LEVEL 044                                              * **           01087
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **           01088
**                                                          **           01089
** LEVEL 045                                              * **           01090
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **           01091
**             COMPLETION OF THE COPY. SUPPWTO.             **           01092
**                                                          **           01093
** LEVEL 046                                              * **           01094
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **           01095
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **           01096
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **           01097
**             TO HI ORDER FIELD WHEN DOING BLOCK           **           01098
**             COUNT CORRECTION.                            **           01099
**                                                          **           01100
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **           01101
**                                                          **           01102
** LEVEL 047                                              * **           01103
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **           01104
**             DUMP OF TAPES WHICH CONTAIN LARGE            **           01105
**             NUMBERS OF DATA RECORDS.  IF THE             **           01106
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **           01107
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **           01108
**                                                          **           01109
** LEVEL 048                                              * **           01110
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **           01111
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **           01112
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **           01113
**             IS THERE IN THE JCL, THEN OPEN IT.           **           01114
**                                                          **           01115
** LEVEL 049                                              * **           01116
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **           01117
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **           01118
**             BYTE COUNTS AND DATA BYTE COUNTS,            **           01119
**             INSTEAD OF TOTAL BYTE COUNTS.                **           01120
**                                                          **           01121
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE           * **           01122
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **           01123
**             EACH LABEL.  IT DOES NOT MATTER              **           01124
**             WHERE THE LABELS ARE, IN THE INPUT           **           01125
**             TAPE--THEY WILL BE STRIPPED OFF THE          **           01126
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **           01127
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **           01128
**             NUMBER IS MULTIPLIED BY 3, AND THE           **           01129
**             COPYING IS CUT OFF AFTER 3*nnn,              **           01130
**             TREATED AS BLP, ON THE INPUT TAPE.           **           01131
**                                                          **           01132
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **           01133
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **           01134
**             COPYMODS TRIES TO DETECT WHETHER THE         **           01135
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **           01136
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **           01137
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **           01138
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **           01139
**             WE CAN NOW FORCE THE nnn TO BE               **           01140
**             INTERPRETED AS NL USING THE NLLIM            **           01141
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **           01142
**             INTERPRETED AS 3*nnn USING THE SLLIM         **           01143
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **           01144
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **           01145
**             OTHER KEYWORD IS ALSO CODED.                 **           01146
**                                                          **           01147
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **           01148
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **           01149
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **           01150
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **           01151
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **           01152
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **           01153
**             DURING THE WRITE OF THE TAPE MARK.           **           01154
**                                                          **           01155
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **           01156
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **           01157
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **           01158
**             BEFORE ISSUING ABEND 069.                    **           01159
**                                                          **           01160
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **           01161
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **           01162
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **           01163
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **           01164
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **           01165
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **           01166
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **           01167
**             SYSPRINT DATASET.                            **           01168
**                                                          **           01169
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **           01170
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **           01171
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **           01172
**                                                          **           01173
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **           01174
**             OF THE MAIN CSECT.                           **           01175
**                                                          **           01176
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **           01177
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **           01178
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **           01179
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **           01180
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **           01181
**             PARM SCAN IN DETAIL.                         **           01182
**                                                          **           01183
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **           01184
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **           01185
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **           01186
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **           01187
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **           01188
**                                                          **           01189
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **           01190
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **           01191
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **           01192
**             PROGRAM AND NOT BY COPYMODS.                 **           01193
**                                                          **           01194
**             COPYMODS CALLS PARMCHEK, AND UPON RETURN,    **           01195
**             PARMCHEK RETURNS THE ADDRESSES OF TWO AREAS. **           01196
**             R1 CONTAINS THE ADDRESS OF THE PARMFLGS      **           01197
**             FIELD WITHIN THE PARMCHEK PROGRAM CODE,      **           01198
**             AND R2 CONTAINS THE ADDRESS OF THE STRTVALU  **           01199
**             FIELD IN THE PARMCHEK PROGRAM.  COPYMODS     **           01200
**             COPIES THIS DATA INTO THE CORRESPONDING      **           01201
**             FIELDS IN ITS OWN CODE, WHICH THEREFORE      **           01202
**             MUST MATCH THAT SAME CODE IN THE PARMCHEK    **           01203
**             PROGRAM.                                     **           01204
**                                                          **           01205
**             THUS, ON RETURN FROM THE PARMCHEK PROGRAM,   **           01206
**             COPYMODS HAS ACCESS TO ALL THE PARM BIT      **           01207
**             SETTINGS, AND TO ALL THE QUANTITIES RETURNED **           01208
**             FROM THE PARMCHEK PROGRAM ACTION INTO THE    **           01209
**             USER FIELD AREA.                             **           01210
**                                                          **           01211
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **           01212
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **           01213
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **           01214
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **           01215
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **           01216
**             TAPES--TO FIGURE OUT HOW SHORT....           **           01217
**                                                          **           01218
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **           01219
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **           01220
**             POSSIBLE.                                    **           01221
**                                                          **           01222
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **           01223
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **           01224
**             IN ERROR.                                    **           01225
**                                                          **           01226
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **           01227
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **           01228
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **           01229
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **           01230
**                                                          **           01231
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **           01232
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **           01233
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **           01234
**                                                          **           01235
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **           01236
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **           01237
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **           01238
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **           01239
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **           01240
**             PROGRAM.                                     **           01241
**                                                          **           01242
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **           01243
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **           01244
**                                                          **           01245
** LEVEL 062 - FIX DOC A BIT MORE.                          **           01246
**             TEN PARM BITS INSTEAD OF FIVE.               **           01247
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK.     **           01248
**                                                          **           01249
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **           01250
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **           01251
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **           01252
**             OCCURRED, WITHOUT ISSUING A WTOR.            **           01253
**                                                          **           01254
** LEVEL 064 - Return Code adjustments.                     **           01255
**                                                          **           01256
** LEVEL 065 - REWIND Tapes before initting in INITVOLS     **           01257
**             processing.                                  **           01258
**             HEXPRT now works for INITVOLS.               **           01259
**             HEXPRT now prints the external labels in a   **           01260
**             LABADDIN operation.                          **           01261
**             TAPEOWNER= is now honored for an INITVOLS    **           01262
**             operation (this fixes a bug).                **           01263
**             Number for FILELIMIT=nnn is now filled in,   **           01264
**             in the message, when the EBCDIC value        **           01265
**             exists.                                      **           01266
**             Fix another bug--Tape Owner not altered--    **           01267
**             now use the value of tape owner passed from  **           01268
**             the PARMCHEK program.                        **           01269
**                                                          **           01270
** LEVEL 066 - Cosmetic changes.                            **           01271
**             Save original PARM pointer in COPYMODS       **           01272
**             csect itself.  (It got lost after PARMCHEK   **           01273
**             call.)                                       **           01274
**                                                          **           01275
** LEVEL 067 - Introduce ability to INIT ASCII tapes        **           01276
**             (ISO/ANSI) Level 3 or Level 4, with the      **           01277
**             INASC3 or INASC4 keywords.  You can control  **           01278
**             if the HEXPRT is interpreted in EBCDIC or    **           01279
**             ASCII using the ASCII or the EBCDIC          **           01280
**             keywords.  For an ASCII tape init, ASCII     **           01281
**             print interpretation is turned on by         **           01282
**             default.  If you are initting an ASCII       **           01283
**             tape using the INASCII keyword, a Level 3    **           01284
**             ASCII tape will be created.                  **           01285
**                                                          **           01286
**             ASCII Level 4 is only supported in MVS at    **           01287
**             the OS/390 2.4 level and higher.             **           01288
**                                                          **           01289
** LEVEL 068 - Split off label checking routine into a      **           01290
**             separate program, LABELCHK, which is         **           01291
**             assembled with COPYMODS together.            **           01292
**                                                          **           01293
** LEVEL 069 - More ASCII label detection support.          **           01294
**             LABLDUMP now works for ASCII tapes.  The     **           01295
**             control cards in the LABLDUMP DD name have   **           01296
**             been translated into ASCII, the same as the  **           01297
**             labels and the data.  PARM=STRIP now works   **           01298
**             for ASCII tapes.                             **           01299
**                                                          **           01300
**             Fixed a bug where OUTVOLALL didn't work      **           01301
**             for volumes other than VOLUME1.              **           01302
**                                                          **           01303
** LEVEL 070 - More ASCII label detection support.          **           01304
**             LABADDIN works for ASCII tapes now.          **           01305
**             BLKCNT option fixed to convert corrected     **           01306
**             block counts to ASCII when necessary.        **           01307
**             EOVTOEOF now works for ASCII and IBM tapes,  **           01308
**             because a call to LABELCHK now returns the   **           01309
**             altered copy of INAREA to the main program.  **           01310
**             A parm of EOV2 now requires a space after    **           01311
**             it, so as not to interfere with EOV2EOF.     **           01312
**                                                          **           01313
** LEVEL 071 - PRINT LABELS support for ASCII tapes.        **           01314
**                                                          **           01315
**             LBI support for XXX2 print of label          **           01316
**             contents.  Big blocksizes are printed        **           01317
**             in the XXX2 print message if they exist      **           01318
**             in the labels.  This is for IBM labels.      **           01319
**                                                          **           01320
**             Support 14-character tape owner for          **           01321
**             ANSI/ISO (ASCII) tapes.                      **           01322
**                                                          **           01323
**             Other cosmetic changes and many bug fixes.   **           01324
**                                                          **           01325
** LEVEL 072 - Separate all label print operations into a   **           01326
**             call to a separate CSECT called PRINTLBL.    **           01327
**             Now there is a unified label print routine   **           01328
**             for both EXTLBLIN and INAREA label input.    **           01329
**                                                          **           01330
** LEVEL 073 - Separate messages into their own CSECT.      **           01331
**             Address with PTMS macro, and special setup.  **           01332
**             Assembler instructions which access fields   **           01333
**             in the MSGCSECT CSECT are created with the   **           01334
**             new MVFMS macro.                             **           01335
**                                                          **           01336
** LEVEL 074 - Fix LTM service and reporting.               **           01337
**                                                          **           01338
** LEVEL 075 - Implement SECOFF (security indicators in     **           01339
**             labels turned off in the copied tapes).      **           01340
**             Involves VOL1 (byte 11) for ASCII tapes.     **           01341
**             XXX1 (byte 54) which is turned to C'0' for   **           01342
**             EBCDIC (IBM) tapes, and which is turned to   **           01343
**             ASCII space (X'20') for ASCII tapes.         **           01344
**                                                          **           01345
** LEVEL 076 - Implement FOOTAGE keyword to measure each    **           01346
**             tape file approximately, giving a 6250 bpi   **           01347
**             footage calculation.  This code originally   **           01348
**             came from the SS0104 tape mapping program    **           01349
**             from the Florida Power Corporation.          **           01350
**             Cumulative footages for the entire tape up   **           01351
**             to the current file, are also displayed.     **           01352
**                                                          **           01353
**             Introduced the FOOTDIAG keyword, to print    **           01354
**             diagnostics in the footage calculation.      **           01355
**             Most of the FOOTAGE workarea fields are      **           01356
**             displayed.                                   **           01357
**                                                          **           01358
** LEVEL 077 - Save addressability space by replacing       **           01359
**             multiple MVFMS invocations with ADRSMS and   **           01360
**             DROPMS macros, to get addressability to      **           01361
**             MSGCSECT, and keep it for a while.  Also     **           01362
**             further reduced the program size by making   **           01363
**             a PTMSN macro that doesn't re-do the         **           01364
**             addressability that PTMS does.  This is for  **           01365
**             putting in between a ADRSMS and a DROPMS.    **           01366
**                                                          **           01367
** LEVEL 078   Add CODEDPRM option to report PARM options   **           01368
**             before they were adjusted by COPYMODS.       **           01369
**                                                          **           01370
**             There was no way to turn off the INITVOLS    **           01371
**             option with a parm.  So I coded the NOINITVO **           01372
**             option, to turn off the INITVOLS option      **           01373
**             bit.  So tape init will only be in effect    **           01374
**             if INITVOLS is explicitly coded.  Report     **           01375
**             NOINITVO in the options report, if this      **           01376
**             option is set off.  Remember that coding     **           01377
**             the INITVOLS keyword also turns on the       **           01378
**             CHGVOL option, so that the JCL volser gets   **           01379
**             propagated into the newly initiated tape.    **           01380
**             Coding NOINITVO only turns off the INITVOLS  **           01381
**             parm bit, and not the CHGVOL bit, as this    **           01382
**             should be the proper way to do it.           **           01383
**                                                          **           01384
**             If no //OUTn DD cards are coded in the JCL,  **           01385
**             COPYMODS would have run through the WRITEs   **           01386
**             without writing, and it would look like a    **           01387
**             normal run.  The logical fix would be to     **           01388
**             force READONLY on, and say in a message      **           01389
**             that you have done so. (That's what I did.)  **           01390
**                                                          **           01391
** LEVEL 079   Added MINMAX option to report largest and    **           01392
**             smallest block sizes for each file read.     **           01393
**                                                          **           01394
** LEVEL 080   Added RECSIZE option to report individual    **
**             size of tape blocks, one at a time.  This    **
**             option produces one record in SYSPRINT for   **
**             each tape data block because it is reporting **
**             that block's size.  So this option should    **
**             not be a default since it makes a lot of     **
**             output.  Shows details of the MINMAX         **
**             display, so RECSIZE implies MINMAX.  If      **
**             RECSIZE is coded, MINMAX is switched on.     **
**                                                          **
**             Got rid of "SBG MM/YY" type comments.        **
**                                                          **
** LEVEL 081   Fix problem in PARM=STRIP code where a       **
**             label image in the middle of tape data was   **
**             stripped off.                                **
**                                                          **
** LEVEL 082   Fix problem in PARM=STRIP code where an      **
**             80-byte tape block would cause no tape mark  **
**             to be written at the end of the current      **
**             file.  Made STRIP diagnostics a separate     **
**             parm called DGSTRI and NODGSTRI.             **
**                                                          **
**************************************************************           01395
**************************************************************           01396
         MACRO                                                           01397
.* ----------------------------------------------------------------- *   01398
.*  Establish addressability to fields in MSGCSECT.                  *   01399
.* ----------------------------------------------------------------- *   01400
&NAME    ADRSMS                                                          01401
*                                         Operate with a message field   01402
         STM   R4,R5,SAV45MSG             Store work registers           01403
         USING MSGCSECT,R5,R4             Address MSGCSECT               01404
         L     R5,=V(MSGCSECT)            Load CSECT entry               01405
         LA    R4,4095(,R5)               Second base                    01406
         LA    R4,1(,R4)                    completed                    01407
         MEND                                                            01408
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01409
         MACRO                                                           01410
.* ----------------------------------------------------------------- *   01411
.*  DROP addressability to fields in MSGCSECT.                       *   01412
.* ----------------------------------------------------------------- *   01413
&NAME    DROPMS                                                          01414
         LM    R4,R5,SAV45MSG             Restore work registers         01415
         DROP  R5,R4                      And tell that they're gone     01416
         MEND                                                            01417
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01418
         MACRO                                                           01419
.* ----------------------------------------------------------------- *   01420
.*  Print a message to SYSPRINT from a 133-character message line    *   01421
.*  that is in the MSGCSECT CSECT.  Addressability established.      *   01422
.* ----------------------------------------------------------------- *   01423
&NAME    PTMSN &MSGLINE                                                  01424
*                                 Print a message line to SYSPRINT       01425
*                                 with MSGCSECT addressability there     01426
         MVI   LINE-1,X'40'               Move in blank                  01427
         MVC   LINE(133),LINE-1           And blank line                 01428
         MVC   LINE(133),&MSGLINE         Move message to line & print   01429
         PUT   SYSPRINT,LINE                                             01430
         MEND                                                            01431
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01432
         MACRO                                                           01433
.* ----------------------------------------------------------------- *   01434
.*  Print a message to SYSPRINT from a 133-character message line    *   01435
.*  that is in the MSGCSECT CSECT.                                   *   01436
.* ----------------------------------------------------------------- *   01437
&NAME    PTMS  &MSGLINE                                                  01438
*                                   Print a message line to SYSPRINT     01439
         STM   R4,R5,SAV45MSG             Store work registers           01440
         USING MSGCSECT,R5,R4             Address MSGCSECT               01441
         L     R5,=V(MSGCSECT)            Load CSECT entry               01442
         LA    R4,4095(,R5)               Second base                    01443
         LA    R4,1(,R4)                    completed                    01444
         MVI   LINE-1,X'40'               Move in blank                  01445
         MVC   LINE(133),LINE-1           And blank line                 01446
         MVC   LINE(133),&MSGLINE         Move message to line & print   01447
         PUT   SYSPRINT,LINE                                             01448
         LM    R4,R5,SAV45MSG             Restore work registers         01449
         DROP  R5,R4                      And tell that they're gone     01450
         MEND                                                            01451
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01452
         MACRO                                                           01453
.* ----------------------------------------------------------------- *   01454
.*  Perform an instruction with one or more operands from MSGCSECT.  *   01455
.* ----------------------------------------------------------------- *   01456
&NAME    MVFMS &OPERA,&OPERB,&OPC=MVC                                    01457
*                                         Operate with a message field   01458
         STM   R4,R5,SAV45MSG             Store work registers           01459
         USING MSGCSECT,R5,R4             Address MSGCSECT               01460
         L     R5,=V(MSGCSECT)            Load CSECT entry               01461
         LA    R4,4095(,R5)               Second base                    01462
         LA    R4,1(,R4)                    completed                    01463
         &OPC  &OPERA,&OPERB              &OPC operation w/msg field     01464
         LM    R4,R5,SAV45MSG             Restore work registers         01465
         DROP  R5,R4                      And tell that they're gone     01466
         MEND                                                            01467
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01468
         MACRO                                                           01469
&NAME    HEX   &TO,&LEN,&FROM                                            01470
&NAME    DS    0H                                                        01471
         ST    R4,SAV4HEX                                                01472
         STM   R15,R1,HEXSAVE                                            01473
         LA    R1,&FROM                                                  01474
         LA    R0,&LEN                                                   01475
         LA    R15,&TO                                                   01476
         BAL   R4,HEX                                                    01477
         L     R4,SAV4HEX                                                01478
         LM    R15,R1,HEXSAVE                                            01479
         MEND                                                            01480
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01481
         EJECT                                                           01482
         YREGS                                                           01483
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                01484
         GBLA  &HEXDFLA                                                  01485
* ------------------------------------------------------------------ *   01486
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   01487
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   01488
* ------------------------------------------------------------------ *   01489
&HEXDFLA SETA  4                                                         01490
&HEXDFLC SETC  '&HEXDFLA'                                                01491
COPYMODS CSECT                                                           01492
         USING *,R15                                                  *  01493
         B     EYECATCH                                               *  01494
         DC    C'HEX DUMP '                                              01495
HEXDFLCC DC    C'&HEXDFLC'                                               01496
         DC    C' RECORDS '                                              01497
HEXDFLL  EQU   L'HEXDFLCC                                                01498
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 01499
         DC    C'--- '            MAKE EYECATCHER VISIBLE             *  01500
         DC    C'COPYMODS Level 082 '                                 *  01501
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '                 *  01502
         DC    C'SYSIN IN PARMCHEK PGM'                                  01503
SAVEAREA DC    18F'0'                                                    01504
EYECATCH DS    0D             ENSURE ALIGNMENT                        *  01505
         SAVE  (14,12)                                                   01506
         LR    R5,R1          SAVE PARM POINTER                          01507
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   01508
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          01509
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         01510
         LR    R13,R1               NEW SAVE AREA ADDRESS                01511
         DROP  R15                                                       01512
* -----                       SET UP SIX BASE REGISTERS                  01513
         USING COPYMODS,R12,R11,R10,R9,R8,R6                             01514
         LR    R12,R15                                                   01515
         LA    R11,4095(,R12)                                            01516
         LA    R11,1(,R11)                                               01517
         LA    R10,4095(,R11)                                            01518
         LA    R10,1(,R10)                                               01519
         LA    R9,4095(,R10)                                             01520
         LA    R9,1(,R9)                                                 01521
         LA    R8,4095(,R9)                                              01522
         LA    R8,1(,R8)                                                 01523
         LA    R6,4095(,R8)                                              01524
         LA    R6,1(,R6)                                                 01525
         LR    R1,R5          RESTORE PARM POINTER                       01526
         ST    R1,PARMSTRT    PRESERVE PARM POINTER WHERE IT CAN         01527
*                             BE PASSED TO THE PARMCHEK PROGRAM.         01528
         ST    R1,PARMSAVE    And store the PARM pointer into this       01529
*                             program too, so it doesn't get lost.       01530
         L     R1,0(,R1)                                                 01531
         LH    R5,0(,R1)      SAVE PARM LENGTH, AND                      01532
         ST    R5,PARMSLEN    PRESERVE IT AS A FULLWORD                  01533
         MVC   SAVMSLEN,PARMSLEN     KEEP IT SAFE - DOUBLE SURE          01534
         L     R0,=V(TRTCSECT)       SAVE HEX TRANSLATE TABLE POINTER    01535
         ST    R0,SAVTRTCS           AND STORE IT FOR LATER USE.         01536
         L     R0,=V(LABELCHK)       Entry point of called LABELCHK pgm  01537
         ST    R0,LABCHENT           Save entry point for calling later  01538
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm  01539
         ST    R0,PRTLBENT           Save entry point for calling later  01540
         L     R0,=V(FOOTAGE)        Entry point of called FOOTAGE pgm   01541
         ST    R0,FOOTGENT           Save entry point for calling later  01542
*   Initialization for 6250 footage calculations ---- below              01543
         MVI   LABELTYP,C'N'         Assume NL for footage calculations  01544
         MVI   DENSITY,C'4'          Assume 6250 density for footage     01545
         MVC   FILENO,=H'1'          Start with first file               01546
         XC    BLKSZE,BLKSZE         Zero                                01547
         XC    NUMBLKS,NUMBLKS         These                             01548
         XC    USERLBLS,USERLBLS         Fields                          01549
         XC    CUMTOTAL,CUMTOTAL           Initially                     01550
         XC    BLKSZWRK,BLKSZWRK                                         01551
         MVC   FILEFT,=C'        '                                       01552
         MVC   REELFT,=C'        '                                       01553
*   Initialization for 6250 footage calculations ---- above              01554
* --- >   Initialize max and min blocksize calculation  < --- * below    01555
         MVC   MAXBLK,=F'0'                 Start small                  01556
         MVC   MINBLK,=F'268435455'         Start big                    01557
* --- >   Initialize max and min blocksize calculation  < --- * above    01558
* ----------------------------------------------------------------- *    01559
*                                                                   *    01560
*  CALLING THE PARMCHEK PROGRAM REQUIRES:                           *    01561
*                                                                   *    01562
*     INPUT:   R2 POINTS TO STRTVALU, WHERE PARM INFORMATION IS     *    01563
*              ALREADY PRESERVED IN THE PARMSLEN AND PARMSTRT       *    01564
*              FIELDS.                                              *    01565
*                                                                   *    01566
*     OUTPUT:  R1 POINTS TO PARMCHEK'S PARMFLGS, ALREADY ALL        *    01567
*              FILLED IN.                                           *    01568
*                                                                   *    01569
*              R2 POINTS TO PARMCHEK'S USER AREA STARTING WITH      *    01570
*              STRTVALU, FILLED IN WITH USER INFORMATION FROM       *    01571
*              THE PARM SCAN.                                       *    01572
*                                                                   *    01573
*     AFTER THE PARMCHEK PROGRAM RETURNS CONTROL TO COPYMODS,       *    01574
*     ITS PARMFLGS AND STRTVALU AREAS ARE COPIED OVER INTO THE      *    01575
*     CORRESPONDING AREAS IN THE COPYMODS PROGRAM.                  *    01576
*                                                                   *    01577
*     PARMCHEK'S USER AREA STARTING WITH LABEL STRTVALU HAS TO      *    01578
*     EXACTLY MATCH COPYMODS' USER AREA STARTING WITH STRTVALU.     *    01579
*                                                                   *    01580
* ------------------------------------------------------------------*    01581
*    NOW DO IT.  CALL THE PARMCHEK PROGRAM AND GET THE RETURNS.     *    01582
* ------------------------------------------------------------------*    01583
         L     R0,=V(PARMCHEK)                                           01584
         ST    R0,ENTRYPT                                                01585
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM      01586
         LA    R2,STRTVALU        USER AREA ADDRESS TO BE PASSED.        01587
         BALR  R14,R15                 DO CALL                           01588
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS     01589
         ST    R2,USERSAVE             ADDRESS OF RETURNED USER AREA     01590
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS      01591
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK     01592
* -- >  After PARMS gotten...........                                    01593
         MVC   PARMCOPY(PARMFLLN),0(R1)   Preserve unchanged parms.      01594
         MVC   VOLSTG(6),VOLSTG1          Stage OUTVOLALL volume name    01595
         TM    PARMFLG5,X'04'                                            01596
         BO    LTMNUMB0                                                  01597
         MVC   LTMCNTR(4),=F'0'           Init LTM count fullword        01598
         B     LTMNUMB1                                                  01599
LTMNUMB0 DS    0H                                                        01600
         MVC   LTMCNTR(4),LTMNUMB         Init LTM count fullword        01601
LTMNUMB1 DS    0H                                                        01602
         ZAP   LTMCOUNT,=P'0'             Init LTM ascending counter     01603
         MVC   LTMBINAD,=F'0'             Init LTM binary counter        01604
* ----------------------------------------------------------------- *    01605
* ----------------------------------------------------------------- *    01606
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *    01607
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *    01608
* ----------------------------------------------------------------- *    01609
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON         01610
SKIPLTMS DS    0H                                                     *  01611
* ------- >> ------- >>                                                  01612
         TM    PARMFLG5,X'01'      INITTING ASCII TYPE 3?                01613
         BZ    NOASCII4            NO. DON'T ADJUST.                     01614
         NI    PARMFLG5,FF-X'02'   YES, TURN OFF ASCII TYPE 4.           01615
NOASCII4 DS    0H                                                        01616
* ------- >> ------- >>                                                  01617
* ----- * ----- * ------                                                 01618
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?                01619
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                    01620
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                    01621
NONOEXNL DS    0H                                                        01622
* ----- * ----- * ------                                                 01623
* ----- * ----- * ------ *------                                         01624
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                            01625
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                    01626
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON              01627
NOCUMSEP DS    0H                                                        01628
* ----- * ----- * ------ *------                                         01629
* ----- * -----                                                          01630
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                        01631
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                    01632
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON        01633
NOCUMTOT DS    0H                                                        01634
* ----- * -----                                                          01635
         TM    PARMFLG6,X'80'   Do we want an options comparison?        01636
         BZ    NOCODDPR         No. Don't force OPTIONS on.              01637
         OI    PARMFLG4,X'20'   Make sure OPTIONS is also on.            01638
NOCODDPR DS    0H                                                        01639
* ----- * -----                                                          01640
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR              01641
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *      01642
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?           01643
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.           01644
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP            01645
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO       01646
*                                      BECAUSE WE'RE COPYING TO SL.      01647
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS             01648
CANLBDMP DS    0H                                                        01649
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *    01650
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                          01651
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS             01652
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                   01653
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                    01654
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01655
NOLBDQUI DS    0H                                                        01656
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *    01657
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *     01658
         TM    PARMFLG4,X'02'      IS STRIP ON?                          01659
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS         01660
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01661
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF                01662
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF                01663
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                            01664
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                           01665
         NI    PARMFLG5,FF-X'03'   INIT ASCII OFF                        01666
NOSTRADJ DS    0H                  END of the STRIP adjustments          01667
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *     01668
         TM    PARMFLG2,X'08'      IS THIS RUN READ-ONLY?                01669
         BZ    SKIXLTMS            NO. DON'T CHANGE INDICATOR            01670
         MVFMS LTMRPTI,READDD      INDICATE LTM'S HAVE BEEN READ         01671
SKIXLTMS DS    0H                                                        01672
** - * - * - >>>>   RECSIZE  implies  MINMAX   -   below
*  Explanation:  If you're already displaying the size of each tape
*                block, you might as well summarize the largest and
*                smallest block size found in that file.
** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         TM    PARMFLG6,X'02'      Displaying individual block sizes?
         BZ    NOMMXADJ            NO. Skip this code.
         OI    PARMFLG6,X'01'      YES. Summarize largest and smallest
NOMMXADJ DS    0H
** - * - * - >>>>   RECSIZE  implies  MINMAX   -   above
* ----------------------------------------------------------------- *    01673
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *    01674
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *    01675
* ----------------------------------------------------------------- *    01676
* --                                                             -- *    01677
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?             01678
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM        01679
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                    01680
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED          01681
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               01682
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 01683
         BZ    NOOPTRP1          NO. DON'T CALL IT                       01684
         BALR  R14,R15           CALL SUBPROGRAM                         01685
         TM    PARMFLG6,X'80'    IS CODEDPRM CODED?                      01686
         BZ    NOOPTRP2          NO. DON'T PRINT CODED OPTIONS.          01687
NOOPTRP1 DS    0H                                                        01688
         LA    R1,PARMCOPY       POINT TO QUANTITY TO BE PASSED          01689
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               01690
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 01691
         BZ    NOOPTRP2          NO. DON'T CALL IT                       01692
         BALR  R14,R15           CALL SUBPROGRAM                         01693
NOOPTRP2 DS    0H                                                        01694
         LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                 01695
NOOPTRPT DS    0H                                                        01696
*  -------------------------------------------------------------- *      01697
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL          *  01698
         RDJFCB IN                                                       01699
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL        01700
         ADRSMS                                                          01701
         MVC   SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG         *  01702
         MVC   READOMSG+60(6),INJFCB+118   COPY TO READ MESSG         *  01703
         DROPMS                                                          01704
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST   01705
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA                     *  01706
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                 01707
         MVC   FILNOSAW,=C'00001'  One more than FILNOSAV, for blk size
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET            01708
         SPACE 3                                                         01709
OPENSYSP DS    0H                                                        01710
*                                                                        01711
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                               01712
*                                                                        01713
* --- READ ONLY CODE ---------------------------------------- *          01714
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        *          01715
         BO    OPENS      YES--SKIP ALL THE TIOT FOR OUT DD'S *          01716
* --- READ ONLY CODE ---------------------------------------- *          01717
         L     R2,16          R2=CVT                                     01718
         L     R2,0(,R2)      R2=TCB WORDS                               01719
         L     R2,4(,R2)      R2=MY TCB                                  01720
         L     R2,12(,R2)     R2=TIOT                                    01721
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                          01722
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                             01723
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES        01724
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                    01725
         BNE   TIOT1          NO                                         01726
         OI    FLAG1,OP1      SHOW IT                                    01727
         STM   R14,R3,SAV14T03                                    TEST   01728
         RDJFCB OUT1                                                     01729
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL              01730
         MVC   VOLDD,DDOUT1                                              01731
         LM    R14,R3,SAV14T03                                    TEST   01732
         B     TIOTNEXT       CONTINUE                                   01733
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                    01734
         BNE   TIOT2          NO                                         01735
         OI    FLAG1,OP2      SHOW IT                                    01736
         STM   R14,R3,SAV14T03                                    TEST   01737
         RDJFCB OUT2                                                     01738
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL              01739
         MVC   VOLDD,DDOUT2                                              01740
         LM    R14,R3,SAV14T03                                    TEST   01741
         B     TIOTNEXT       CONTINUE                                   01742
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                    01743
         BNE   TIOT3          NO                                         01744
         OI    FLAG1,OP3      SHOW IT                                    01745
         STM   R14,R3,SAV14T03                                    TEST   01746
         RDJFCB OUT3                                                     01747
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL              01748
         MVC   VOLDD,DDOUT3                                              01749
         LM    R14,R3,SAV14T03                                    TEST   01750
         B     TIOTNEXT       CONTINUE                                   01751
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                    01752
         BNE   TIOT4          NO                                         01753
         OI    FLAG1,OP4      SHOW IT                                    01754
         STM   R14,R3,SAV14T03                                    TEST   01755
         RDJFCB OUT4                                                     01756
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL              01757
         MVC   VOLDD,DDOUT4                                              01758
         LM    R14,R3,SAV14T03                                    TEST   01759
         B     TIOTNEXT       CONTINUE                                   01760
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                    01761
         BNE   TIOT5          NO                                         01762
         OI    FLAG1,OP5      SHOW IT                                    01763
         STM   R14,R3,SAV14T03                                    TEST   01764
         RDJFCB OUT5                                                     01765
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL              01766
         MVC   VOLDD,DDOUT5                                              01767
         LM    R14,R3,SAV14T03                                    TEST   01768
         B     TIOTNEXT       CONTINUE                                   01769
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                    01770
         BNE   TIOT6          NO                                         01771
         OI    FLAG1,OP6      SHOW IT                                    01772
         STM   R14,R3,SAV14T03                                    TEST   01773
         RDJFCB OUT6                                                     01774
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL              01775
         MVC   VOLDD,DDOUT6                                              01776
         LM    R14,R3,SAV14T03                                    TEST   01777
         B     TIOTNEXT       CONTINUE                                   01778
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                    01779
         BNE   TIOT7          NO                                         01780
         OI    FLAG1,OP7      SHOW IT                                    01781
         STM   R14,R3,SAV14T03                                    TEST   01782
         RDJFCB OUT7                                                     01783
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL              01784
         MVC   VOLDD,DDOUT7                                              01785
         LM    R14,R3,SAV14T03                                    TEST   01786
         B     TIOTNEXT       CONTINUE                                   01787
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                    01788
         BNE   TIOT8          NO                                         01789
         OI    FLAG1,OP8      SHOW IT                                    01790
         STM   R14,R3,SAV14T03                                    TEST   01791
         RDJFCB OUT8                                                     01792
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL              01793
         MVC   VOLDD,DDOUT8                                              01794
         LM    R14,R3,SAV14T03                                    TEST   01795
         B     TIOTNEXT       CONTINUE                                   01796
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                    01797
         BNE   TIOT9          NO                                         01798
         OI    FLAG2,OP9      SHOW IT                                    01799
         STM   R14,R3,SAV14T03                                    TEST   01800
         RDJFCB OUT9                                                     01801
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL              01802
         MVC   VOLDD,DDOUT9                                              01803
         LM    R14,R3,SAV14T03                                    TEST   01804
         B     TIOTNEXT       CONTINUE                                   01805
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                  01806
         BNE   TIOT10         NO                                         01807
         OI    FLAG2,OP10     SHOW IT                                    01808
         STM   R14,R3,SAV14T03                                    TEST   01809
         RDJFCB OUT10                                                    01810
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL             01811
         MVC   VOLDD,DDOUT10                                             01812
         LM    R14,R3,SAV14T03                                    TEST   01813
         B     TIOTNEXT       CONTINUE                                   01814
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                  01815
         BNE   TIOT11         NO                                         01816
         OI    FLAG2,OP11     SHOW IT                                    01817
         STM   R14,R3,SAV14T03                                    TEST   01818
         RDJFCB OUT11                                                    01819
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL             01820
         MVC   VOLDD,DDOUT11                                             01821
         LM    R14,R3,SAV14T03                                    TEST   01822
         B     TIOTNEXT       CONTINUE                                   01823
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                  01824
         BNE   TIOT12         NO                                         01825
         OI    FLAG2,OP12     SHOW IT                                    01826
         STM   R14,R3,SAV14T03                                    TEST   01827
         RDJFCB OUT12                                                    01828
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL             01829
         MVC   VOLDD,DDOUT12                                             01830
         LM    R14,R3,SAV14T03                                    TEST   01831
         B     TIOTNEXT       CONTINUE                                   01832
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                  01833
         BNE   TIOT13         NO                                         01834
         OI    FLAG2,OP13     SHOW IT                                    01835
         STM   R14,R3,SAV14T03                                    TEST   01836
         RDJFCB OUT13                                                    01837
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL             01838
         MVC   VOLDD,DDOUT13                                             01839
         LM    R14,R3,SAV14T03                                    TEST   01840
         B     TIOTNEXT       CONTINUE                                   01841
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                  01842
         BNE   TIOT14         NO                                         01843
         OI    FLAG2,OP14     SHOW IT                                    01844
         STM   R14,R3,SAV14T03                                    TEST   01845
         RDJFCB OUT14                                                    01846
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL             01847
         MVC   VOLDD,DDOUT14                                             01848
         LM    R14,R3,SAV14T03                                    TEST   01849
         B     TIOTNEXT       CONTINUE                                   01850
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                  01851
         BNE   TIOT15         NO                                         01852
         OI    FLAG2,OP15     SHOW IT                                    01853
         STM   R14,R3,SAV14T03                                    TEST   01854
         RDJFCB OUT15                                                    01855
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL             01856
         MVC   VOLDD,DDOUT15                                             01857
         LM    R14,R3,SAV14T03                                    TEST   01858
         B     TIOTNEXT       CONTINUE                                   01859
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                  01860
         BNE   TIOTNEXT       NO                                         01861
         OI    FLAG2,OP16     SHOW IT                                    01862
         STM   R14,R3,SAV14T03                                    TEST   01863
         RDJFCB OUT16                                                    01864
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL             01865
         MVC   VOLDD,DDOUT16                                             01866
         LM    R14,R3,SAV14T03                                    TEST   01867
         B     TIOTNEXT       CONTINUE                                   01868
TIOTNEXT SR    R3,R3                                                     01869
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                      01870
         AR    R2,R3          R2=NEXT DD ENTRY                           01871
         B     TIOTLOOP       GO CHECK IT                                01872
*  ---------------------------------------------------------          *  01873
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*    01874
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                        01875
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.      01876
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?           01877
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                    01878
         MVC   VOLUME1(6),VOLSTG1            PROPAGATE VOLSER            01879
         MVC   VOLUME2(VOLALLLN-6),VOLUME1                               01880
NOVOLOV  DS    0H                                                        01881
         CLC   FLAG1(2),=X'0000' No output files open?                   01882
         BNE   OPENS                                                     01883
         OI    PARMFLG2,X'08'    Force READONLY                          01884
         OI    NOUTSFLG,X'01'    Show we were here                       01885
         B     OPENS             Go OPEN files.                          01886
*  ---------------------------------------------------------          *  01887
         SPACE 3                                                         01888
*  -----------------------------------------------------------------  *  01889
*                                                                        01890
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY           01891
*                                                                        01892
*  -----------------------------------------------------------------  *  01893
OPENS    DS    0H               START OPENING FILES                      01894
         OPEN  (SYSPRINT,OUTPUT)                                         01895
*-- + -- + -- >>    below       READONLY forced because no OUTnn DD      01896
         TM    NOUTSFLG,X'01'                                            01897
         BZ    HASOUTPT                                                  01898
         ADRSMS                                                          01899
         PTMSN FORCREAD                                                  01900
         DROPMS                                                          01901
HASOUTPT DS    0H                                                        01902
*-- + -- + -- >>    above       READONLY forced because no OUTnn DD      01903
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                        01904
         BO    OPENMOVE                                                  01905
         TM    PARMFLG5,X'01'    INIT ASCII TAPES?                       01906
         BO    OPENMOVE                                                  01907
         TM    PARMFLG5,X'02'    INIT ASCII TAPES?                       01908
         BO    OPENMOVE                                                  01909
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.     01910
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?                    *  01911
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00  01912
         OPEN  (LABLDUMP,OUTPUT)                                      *  01913
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                   01914
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.         01915
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.            01916
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME              01917
NOLBLDD  DS    0H                                                        01918
         PTMS  LDMPMSG            DISPLAY MISSING DD MESSAGE             01919
         OI    ENDITFLG,X'01'     FLAG THAT LABLDUMP NOT OPEN.           01920
OPNLABIN TM    PARMFLG2,X'80'     DO WE NEED LABADDIN?                   01921
         BZ    CHKENDIT           NO. SEE IF ANYTHING ELSE IS BAD        01922
         OPEN  (LABADDIN,INPUT)                                          01923
         TM    LABADDIN+48,X'10'  IS THE DD OPEN  ?                      01924
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE               01925
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.            01926
         B     CHKENDIT           GO CHECK IF WE HAVE TO END.            01927
NOLABIN  DS    0H                                                        01928
         PTMS  NLABMSG            DISPLAY MISSING DD MESSAGE             01929
         OI    ENDITFLG,X'04'     FLAG THAT LABADDIN NOT OPEN.           01930
CHKENDIT TM    ENDITFLG,X'07'     CHECK IF WE HAVE TO END                01931
         BZ    OPENIN             NOTHING WRONG.  GO ON.                 01932
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?     01933
         CLOSE (SYSPRINT)                                                01934
         TM    OPENDFLG,X'01'     IS LABLDUMP DD OPEN?                   01935
         BZ    TRYCLABN           NO. TRY IF SYSIN IS OPEN.              01936
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    01937
         CLOSE (LABLDUMP)                                                01938
TRYCLABN TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                   01939
         BZ    REALYEND           NO. GET OUT.                           01940
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01941
         CLOSE (LABADDIN)                                                01942
REALYEND B     THEEND                                                    01943
         EJECT                                                           01944
OPENIN   OPEN  (IN,INPUT)                                                01945
         TM    IN+48,X'10'                                               01946
         BO    INISOPEN                                                  01947
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *         01948
         TM    PARMFLG3,X'01'       INITTING TAPES?                      01949
         BO    INISOPEN             OK. //IN DD is not needed.           01950
         TM    PARMFLG5,X'01'       INITTING ASCII TAPES?                01951
         BO    INISOPEN             OK. //IN DD is not needed.           01952
         TM    PARMFLG5,X'02'       INITTING ASCII TAPES?                01953
         BO    INISOPEN             OK. //IN DD is not needed.           01954
** --- >>>   //IN DD is really needed, but is not OPEN.                  01955
         PTMS  INNOTOPN             Print message that //IN not open.    01956
         B     ENDEM                Go to CLOSE files, and get out.      01957
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *         01958
INISOPEN DS    0H                                                        01959
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?              01960
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO              01961
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01962
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?                01963
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN          01964
* ----                                                                   01965
OPENINCK DS    0H                                                        01966
         OI    DATFLAG,X'20'      Initialize "no data read yet" flag.    01967
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.     01968
         MVC   LTMBINAD,=F'0'                                            01969
         LA    R2,IN              POINT TO IN DCB                        01970
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                  01971
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                   01972
         EXCP  REWIOB                                                    01973
         WAIT  ECB=REWECB                                                01974
OPINREAD DS    0H                                                        01975
         TM    DATFLAG,X'20'      Still no legitimate data read?         01976
         BZ    OPINCHEK           Legitimate data. Look for VOL1.        01977
         MVC   INECB,=F'0'        Initialize IN's ECB                    01978
         EXCP  INIOB                                                     01979
         WAIT  ECB=INECB                                                 01980
* ->->->       Break in to bypass LTMs    ->->->   below                 01981
         TM    INCSW+4,X'01'      Was a tape mark read?                  01982
         BZ    OPINCHEK           No. This is legitimate data.           01983
         AP    LTMCOUNT,=P'1'     Add 1 to Tape Mark count.              01984
         L     R0,LTMBINAD                                               01985
         A     R0,=F'1'                                                  01986
         ST    R0,LTMBINAD                                               01987
         ADRSMS                                                          01988
         MVC   LTMRPTI,PASSED     Report tape mark was passed.           01989
         MVC   LTMRNUM(11),LTMCTPAT             Edit pattern             01990
         ED    LTMRNUM(11),LTMCOUNT+1           Put count in message     01991
         PTMSN LTMRPT             Report leading TM passed.              01992
         DROPMS                                                          01993
         B     OPINREAD           Do another read until real data found  01994
* ->->->       Break in to bypass LTMs    ->->->   above                 01995
OPINCHEK DS    0H                                                        01996
         NI    DATFLAG,FF-X'20'   Show legitimate data read now.         01997
         OI    DATFLAG,X'40'      Show we came thru here.                01998
         CLC   INAREA(4),=C'VOL1' Is the tape IBM SL ?                   01999
         BE    OPENINSL                 Yes, turn on SL flag.            02000
         CLC   INAREA(4),=X'564F4C31'   ASCII VOL1 ?                     02001
         BE    OPENINSL                 Yes, turn on SL flag.            02002
         B     RESETIN            No. Just rewind to reposition.         02003
OPENINSL DS    0H                                                        02004
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL              02005
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?              02006
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN    02007
****** ------ BELOW ------ SL FILE NUMBERS.                              02008
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?           02009
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                 02010
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?      02011
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG      02012
**** ----- >>>>>   Force file limiting by SL   - - -  below              02013
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim   02014
         BZ    NOSLFLIM              Not set, bypass code for it         02015
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number          02016
         L     R0,LTGFILE                                                02017
         A     R0,LTMBINAD                                               02018
         ST    R0,LTGFILE                                                02019
         ADRSMS                                                          02020
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      02021
         MVC   LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning     02022
         PTMSN FORCESLM              Say you'll force limiting by SL     02023
         DROPMS                                                          02024
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?     02025
         BNO   SLLIMRES              No. only SLLIM. So go on.           02026
         PTMS  TWOFORCE              Say you'll force limiting by SL     02027
SLLIMRES DS    0H                                                        02028
         B     RESETIN                                                   02029
NOSLFLIM DS    0H                                                        02030
**** ----- >>>>>   Force file limiting by SL   - - -  above              02031
**** ----- >>>>>   Force file limiting by NL   - - -  below              02032
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim   02033
         BZ    NONLFLIM              Not set, bypass code for it         02034
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number          02035
         L     R0,LTGFILE                                                02036
         A     R0,LTMBINAD                                               02037
         ST    R0,LTGFILE                                                02038
         ADRSMS                                                          02039
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      02040
         MVC   LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning     02041
         PTMSN FORCENLM              Say you'll force limiting by NL     02042
         DROPMS                                                          02043
         B     RESETIN                                                   02044
NONLFLIM DS    0H                                                        02045
**** ----- >>>>>   Force file limiting by NL   - - -  above              02046
* -- > Strip test                                                        02047
         TM    PARMFLG4,X'02'        Are we stripping labels?            02048
         BZ    OPENINXW              No. Bypass this section.            02049
         TM    PARMFLG3,X'02'        Are we limiting files also?         02050
         BO    OPENINXW              Yes. Use SL number.                 02051
* --- >>   Diagnostics for stripping   << --- *   below
         TM    PARMFLG6,X'04'
         BZ    DGSTRI0B
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE(10),=C'STRIPFLG: '
         HEX   LINE+10,1,STRIPFLG
         MVI   LINE+15,C'B'
         MVC   LINE+20(10),=C'ISLBLFLG: '
         HEX   LINE+30,1,ISLBLFLG
         MVC   LINE+40(10),=C'LBLFLAG:  '
         HEX   LINE+50,1,LBLFLAG
         PUT   SYSPRINT,LINE
DGSTRI0B DS    0H
* --- >>   Diagnostics for stripping   << --- *   above
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.   02052
         L     R0,LTGFILE                                                02053
         A     R0,LTMBINAD                                               02054
         ST    R0,LTGFILE                                                02055
         ADRSMS                                                          02056
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      02057
         MVC   LIMFMSG+68(2),=C'SL'  But indicate that input is SL       02058
         DROPMS                                                          02059
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    02060
OPENINXW DS    0H                                                        02061
* -- > Strip test                                                        02062
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL    02063
         L     R0,LTGFILE                                                02064
         A     R0,LTMBINAD                                               02065
         ST    R0,LTGFILE                                                02066
         ADRSMS                                                          02067
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      02068
         MVC   LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE    02069
         DROPMS                                                          02070
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    02071
OPENINXX DS    0H                                                        02072
****** ------ ABOVE ------ SL FILE NUMBERS.                              02073
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.     02074
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG                02075
RESETLAD TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                   02076
         BZ    RESETEND           NO. GET OUT.                           02077
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    02078
         CLOSE (LABADDIN)                                                02079
RESETEND CLOSE (IN)                                                      02080
         B     THEEND                                                    02081
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.     02082
RESETIN  DS    0H                                                        02083
         TM    PARMFLG2,X'80'     Came here for LABADDIN?                02084
         BZ    RESETSLD           No. Do complete rewind.                02085
         MVC   LTMCNTR(4),LTMBINAD                                       02086
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.     02087
         MVC   LTMBINAD,=F'0'     Binary counter to add to filecount.    02088
         OI    RESLTMWF,X'01'                                            02089
         LA    R2,IN              POINT TO IN DCB                        02090
         ST    R2,BKBDCBPT        TELL IOB TO BACKSPACE ONLY ONE BLOCK   02091
         MVC   BK1BECB,=F'0'                                             02092
         EXCP  BK1BIOB                                                   02093
         WAIT  ECB=BK1BECB                                               02094
         B     NOLBLDMP                                                  02095
RESETSLD DS    0H                                                        02096
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.     02097
         MVC   LTMBINAD,=F'0'     Binary counter to add to filecount.    02098
         MVC   REWECB,=F'0'                                              02099
         EXCP  REWIOB                                                    02100
         WAIT  ECB=REWECB                                                02101
NOINITOP DS    0H                                                        02102
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   02103
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.            02104
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.             02105
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA                02106
         LTR   R15,R15                  DDNAME SHOULD BE THERE           02107
         BNZ   NOLBLDD                  IF NOT, FLAG                     02108
         ST    R7,SAVE7REG              SAVE R7                          02109
         LA    R7,LBLJFCB               POINT TO JFCB AREA               02110
         USING JFCBLK,R7                MAP THE AREA                     02111
         ADRSMS                                                          02112
         MVC   LDMPOUTM+38(44),JFCBDSNM                                  02113
         MVC   LDMPOUTM+89(8),JFCBELNM                                   02114
         MVC   LDMPOUTM+105(6),JFCBVOLS                                  02115
         PTMSN LDMPOUTM                                                  02116
         DROPMS                                                          02117
         DROP  R7                                                        02118
         L     R7,SAVE7REG              RESTORE R7                       02119
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.                 *  02120
         TM    PARMFLG2,X'80'     TEST IF LABADDIN IS NEEDED.            02121
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.             02122
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA                02123
         LTR   R15,R15                  DDNAME SHOULD BE THERE           02124
         BNZ   NOLABIN                  IF NOT, FLAG                     02125
         ST    R7,SAVE7REG              SAVE R7                          02126
         LA    R7,LBNJFCB               POINT TO JFCB AREA               02127
         USING JFCBLK,R7                MAP THE AREA                     02128
         ADRSMS                                                          02129
         MVC   LDMPINMS+38(44),JFCBDSNM                                  02130
         MVC   LDMPINMS+89(8),JFCBELNM                                   02131
         MVC   LDMPINMS+105(6),JFCBVOLS                                  02132
         PTMSN LDMPINMS                                                  02133
         DROPMS                                                          02134
         DROP  R7                                                        02135
         L     R7,SAVE7REG              RESTORE R7                       02136
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.                 *  02137
* --- READ ONLY CODE ------------------ BELOW ---------------         *  02138
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                *  02139
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.            *  02140
*                         OTHERWISE PUT INITIAL READONLY MSG          *  02141
         PTMS  READOMSG              MOVE READ-ONLY MESSAGE              02142
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    02143
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            02144
         BZ    NOLIMFMR         NO, SKIP MESSAGE                         02145
         ADRSMS                                                          02146
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      02147
         PTMSN LIMFMSG                  MOVE MESSAGE TEXT IN             02148
         DROPMS                                                          02149
NOLIMFMR DS    0H                                                        02150
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    02151
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  02152
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          02153
         BZ    N1LIMHEX         NO, SKIP MESSAGE                         02154
         MVC   LINE,LINE-1      CLEAR MSG LINE                           02155
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             02156
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.           02157
         MVFMS LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 02158
         B     N1LIMPRT             AND PRINT IT                         02159
N1LIMDEF DS    0H                                                        02160
         ADRSMS                                                          02161
         MVC   LIMPMSG+11(10),PRTCHAR                                    02162
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 02163
         DROPMS                                                          02164
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                         02165
N1LIMHEX DS    0H                                                        02166
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  02167
         B     READIN                                                 *  02168
* --- READ ONLY CODE ------------------ ABOVE ---------------         *  02169
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE    02170
*                             THIS ALSO MOVES FLAG2 TO FLAG4          *  02171
*  ---------------------------------------------------------          *  02172
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  02173
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          02174
         BZ    NOLIMHEX         NO, SKIP MESSAGE                         02175
         MVC   LINE,LINE-1      CLEAR MSG LINE                           02176
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             02177
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.           02178
         MVFMS LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 02179
         B     NOLIMPRT             AND PRINT IT                         02180
NOLIMDEF DS    0H                                                        02181
         ADRSMS                                                          02182
         MVC   LIMPMSG+11(10),PRTCHAR                                    02183
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 02184
         DROPMS                                                          02185
NOLIMPRT PUT   SYSPRINT,LINE                                             02186
NOLIMHEX DS    0H                                                        02187
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  02188
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                         02189
         BO    INITEBCD                                                  02190
         TM    PARMFLG5,X'01'   INIT ASCII TAPE LEVEL 3?                 02191
         BO    INITAS3                                                   02192
         TM    PARMFLG5,X'02'   INIT ASCII TAPE LEVEL 4?                 02193
         BO    INITAS4                                                   02194
         B     OPENOINT                                                  02195
INITEBCD DS    0H                                                        02196
         MVFMS INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN          02197
         B     NOCORPRT                                                  02198
INITAS3  DS    0H                                                        02199
         ADRSMS                                                          02200
         MVC   INITMSG,INITASC3     MOVE APPROPRIATE MESSAGE IN          02201
         MVC   INITCOPD,INITCREA                                         02202
         DROPMS                                                          02203
         B     NOCORPRT                                                  02204
INITAS4  DS    0H                                                        02205
         ADRSMS                                                          02206
         MVC   INITMSG,INITASC4     MOVE APPROPRIATE MESSAGE IN          02207
         MVC   INITCOPD,INITCREA                                         02208
         DROPMS                                                          02209
         B     NOCORPRT                                                  02210
OPENOINT DS    0H                                                        02211
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    02212
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT      02213
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE              02214
         ST    R7,SAVE7REG                                               02215
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE       02216
         L     R7,SAVE7REG                                               02217
NOCORPRT DS    0H                                                        02218
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    02219
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    02220
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            02221
         BZ    NOLIMFMS         NO, SKIP MESSAGE                         02222
         ADRSMS                                                          02223
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      02224
         PTMSN LIMFMSG          MOVE MESSAGE TEXT IN                     02225
         DROPMS                                                          02226
NOLIMFMS DS    0H                                                        02227
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    02228
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   02229
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?           02230
         BZ    NOLIMLMR         NO, SKIP MESSAGE                         02231
         ADRSMS                                                          02232
         MVC   LIMLMSG+11(10),LABCHAR                                    02233
         PTMSN LIMLMSG          MOVE MESSAGE TEXT IN                     02234
         DROPMS                                                          02235
NOLIMLMR DS    0H                                                        02236
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   02237
         TM    PARMFLG5,X'04'       WRITE LTMS ENABLED?                  02238
         BZ    NOLTMSG0             NO. DON'T PRINT MESSAGE.             02239
         ADRSMS                                                          02240
         MVC   LTMWMSG+11(10),LTMCHAR                                    02241
         MVC   LINE(133),LTMWMSG    MOVE MESSAGE TEXT IN                 02242
         DROPMS                                                          02243
         PUT   SYSPRINT,LINE        AND PRINT IT                         02244
NOLTMSG0 DS    0H                                                        02245
**** ---- >>> Message that labels are being stripped <<< ---- below ***  02246
         TM    PARMFLG4,X'02'     Are labels being stripped?             02247
         BZ    NOSTRMSG                                                  02248
         PTMS  STRPMSG            Show we're stripping labels            02249
NOSTRMSG DS    0H                                                        02250
**** ---- >>> Message that labels are being stripped <<< ---- above ***  02251
OPEN0    DS    0H                                                        02252
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                          02253
         BZ    OPEN1          NO                                         02254
         OPEN  (OUT1,OUTPUT)                                             02255
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                          02256
         BZ    OPEN2          NO                                         02257
         OPEN  (OUT2,OUTPUT)                                             02258
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                          02259
         BZ    OPEN3          NO                                         02260
         OPEN  (OUT3,OUTPUT)                                             02261
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                          02262
         BZ    OPEN4          NO                                         02263
         OPEN  (OUT4,OUTPUT)                                             02264
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                          02265
         BZ    OPEN5          NO                                         02266
         OPEN  (OUT5,OUTPUT)                                             02267
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                          02268
         BZ    OPEN6          NO                                         02269
         OPEN  (OUT6,OUTPUT)                                             02270
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                          02271
         BZ    OPEN7          NO                                         02272
         OPEN  (OUT7,OUTPUT)                                             02273
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                          02274
         BZ    OPEN8          NO                                         02275
         OPEN  (OUT8,OUTPUT)                                             02276
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                          02277
         BZ    OPEN9          NO                                         02278
         OPEN  (OUT9,OUTPUT)                                             02279
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                         02280
         BZ    OPEN10         NO                                         02281
         OPEN  (OUT10,OUTPUT)                                            02282
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                         02283
         BZ    OPEN11         NO                                         02284
         OPEN  (OUT11,OUTPUT)                                            02285
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                         02286
         BZ    OPEN12         NO                                         02287
         OPEN  (OUT12,OUTPUT)                                            02288
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                         02289
         BZ    OPEN13         NO                                         02290
         OPEN  (OUT13,OUTPUT)                                            02291
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                         02292
         BZ    OPEN14         NO                                         02293
         OPEN  (OUT14,OUTPUT)                                            02294
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                         02295
         BZ    OPEN15         NO                                         02296
         OPEN  (OUT15,OUTPUT)                                            02297
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                         02298
         BZ    READIN         NO                                         02299
         OPEN  (OUT16,OUTPUT)                                            02300
         EJECT                                                           02301
* --------------------------------------------------------- *            02302
*                                                           *            02303
*  READ INPUT                                               *            02304
*                                                           *            02305
* --------------------------------------------------------- *            02306
*                                                           *            02307
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *            02308
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *            02309
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *            02310
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *            02311
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *            02312
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *            02313
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *            02314
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*            02315
*                                                           *            02316
* --------------------------------------------------------- *            02317
READIN   DS    0H                                                        02318
*---------------------------- Write Leading Tapemarks ----- below -->    02319
         TM    PARMFLG1,X'20'       Is LTMSKIP on?                       02320
         BO    NOWRLTMS             Yes. Don't manufacture passed LTMs.  02321
         TM    RESLTMWF,X'01'       Come from RESETIN for LABADDIN?      02322
         BO    READWLTM             Yes. Manufacture LTMs if any.        02323
         TM    PARMFLG5,X'08'       Set to write leading tapemarks?      02324
         BZ    NOWRLTMS             No. Only regular processing.         02325
READWLTM DS    0H                                                        02326
         L     R1,LTMCNTR           Check descending LTM counter         02327
*                                   Previously initialized to LTMNUMB    02328
         C     R1,=F'0'             Is it zero now?                      02329
         BE    NOWRLTMS             Yes. No more writing LTMs.           02330
         AP    LTMCOUNT,=P'1'                                            02331
         L     R0,LTMBINAD                                               02332
         A     R0,=F'1'                                                  02333
         ST    R0,LTMBINAD                                               02334
         BCTR  R1,0                 Not yet 0. Lower it by one.          02335
         ST    R1,LTMCNTR           And store it away for next pass.     02336
* --- >>   Diagnostics for tape mark writing << --- * below
         TM    PARMFLG6,X'04'
         BZ    DGSTRI01
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE(10),=C'STRIPFLG: '
         HEX   LINE+10,1,STRIPFLG
         MVI   LINE+15,C'1'
         MVC   LINE+20(10),=C'ISLBLFLG: '
         HEX   LINE+30,1,ISLBLFLG
         MVC   LINE+40(32),=C'We are writing a Tape Mark now!!'
         PUT   SYSPRINT,LINE
DGSTRI01 DS    0H
* --- >>   Diagnostics for tape mark writing << --- * above
         MVI   OUTCCW,X'1F'         Load tape mark CCW opcode.           02337
         MVC   OUTCCW+6(2),=X'0001'    Put 1 in bytes field, and         02338
         ADRSMS                                                          02339
         MVC   LTMRNUM(11),LTMCTPAT                                      02340
         ED    LTMRNUM(11),LTMCOUNT+1                                    02341
         MVC   LTMRPTI,WRITTEN      Report tape mark written.            02342
         PTMSN LTMRPT               Write report line.                   02343
         DROPMS                                                          02344
         B     WRITE1               Write the tape mark to outputs.      02345
NOWRLTMS DS    0H                                                        02346
*---------------------------- Write Leading Tapemarks ----- above -->    02347
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                   02348
         BO    TLITWRIT                                                  02349
         TM    PARMFLG5,X'01'     INITTING ASCII TAPE LEVEL 3?           02350
         BO    TLITASCI                                                  02351
         TM    PARMFLG5,X'02'     INITTING ASCII TAPE LEVEL 4?           02352
         BO    TLITASCI                                                  02353
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR          *  02354
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                     02355
         MVI   INECB,X'00'    INITIALIZE ECB                             02356
* ------------------------------------------------------------------ *   02357
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *   02358
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *   02359
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *   02360
* ------------------------------------------------------------------ *   02361
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                  02362
         BZ    NONLSL0        NO. IGNORE THIS CODE                       02363
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN          02364
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE           02365
NONLSL0  DS    0H                                                        02366
* -----------------------------------------------------------         *  02367
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE               02368
***** --------------- LIMITING FILES ------------------ ***** BELOW *    02369
         TM    PARMFLG3,X'02'     LIMITING FILES?                        02370
         BZ    INOLIMIT           NO - BYPASS THIS CODE                  02371
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?               02372
         BZ    INOLIMIT           NOT YET - JUST GO ON                   02373
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE     02374
*                                 AND DON'T DO MORE READS OF INPUT TAPE  02375
INOLIMIT DS    0H                                                        02376
***** --------------- LIMITING FILES ------------------ ***** ABOVE *    02377
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *    02378
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                  02379
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS     02380
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK     02381
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                     02382
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ      02383
         L     R7,SAVE7RG3        RESTORE R7                             02384
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                     02385
NOLBDADJ DS    0H                                                        02386
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *    02387
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         02388
*                                                                        02389
*       Since there is a possibility that the WRITE will                 02390
*       not work for one of the output ddnames, we have                  02391
*       to save the total bytes successfully moved to the                02392
*       currently open output tapes.  Also file count for                02393
*       this tape, and block count for this file.                        02394
*                                                                        02395
         MVC   PRVBY,TOTBY        Total bytes before this READ           02396
         MVC   FILECNTP,FILECNT   Total file count before this READ      02397
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ     02398
*                                                                        02399
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         02400
         EXCP  INIOB          READ                                       02401
         WAIT  ECB=INECB      WAIT FOR READ                              02402
* -- >  Display Tape Mark Reads  -  BELOW
         TM    INCSW+4,X'01'  WAS TM READ?                               02403
*        BO    READIN1        YES                                        02404
         BO    SHOWTMRD
         B     NOTMREAD
SHOWTMRD DS    0H
         TM    PARMFLG6,X'04'
         BZ    DGSTRI0R
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE+1(31),=C'A Tape Mark has been read !!    1'
         PUT   SYSPRINT,LINE
DGSTRI0R DS    0H
         B     READIN1
NOTMREAD DS    0H
* -- >  Display Tape Mark Reads  -  ABOVE
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                02405
         BNE   INERR          NO -- ERROR                                02406
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                    02407
*        LH    R2,INCCW+6     R2=READ LENGTH                          *  02408
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY            *  02409
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                      *  02410
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER             *  02411
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT                  *  02412
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT              *  02413
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER             *  02414
         SR    R2,R3          R2=ACTUAL LENGTH READ                      02415
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED              02416
         MVC   BYTESCOH(2),=H'0'  Make sure upper halfword is X'0000'    02417
*                                                                        02418
*  The BYTESMVD field is now a fullword that should contain the number   02419
*  of bytes moved by the currently executed EXCP READ.                   02420
*                                                                        02421
* ->->-> -----------  FOOTAGE REPORTING  -----  below  ----- ***         02422
         TM    PARMFLG6,X'20'     Reporting footages?                    02423
         BZ    NOFEET01           No. Don't execute this code            02424
         MVC   BLKSZWRK(4),BYTESMVD   No longer dependent on R2.         02425
*        ST    R2,BLKSZWRK        Fullword arithmetic, save count        02426
         CLC   BLKSZE,BLKSZWRK    Compare to what was there before       02427
         BNL   NOFEET01           Prev BLKSZE not higher than current?   02428
         MVC   BLKSZE,BLKSZWRK    Less, replace with current blocksize   02429
NOFEET01 DS    0H                                                        02430
* ->->-> -----------  FOOTAGE REPORTING  -----  above  ----- ***         02431
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - below   02432
         TM    PARMFLG6,X'01'     Are we reporting Max-Min blocksizes?   02433
         BZ    NOMNMXRP           No. Skip all this code.                02434
         ST    R1,SAVE1RG1        Yes. Start by saving work reg.         02435
         L     R1,BYTESMVD        Load it with number of bytes moved.    02436
         C     R1,MAXBLK          Bigger than previous maximum?          02437
         BNH   TRYMINBK           No. Don't adjust maxmimum.             02438
         ST    R1,MAXBLK          Yes. Set new maximum.                  02439
TRYMINBK DS    0H                                                        02440
         C     R1,MINBLK          Smaller than previous minimum?         02441
         BNL   TRYNOMOR           No. Don't adjust minimum.              02442
         ST    R1,MINBLK          Yes. Reduce minimum to current quant.  02443
TRYNOMOR DS    0H                                                        02444
         L     R1,SAVE1RG1        Restore work register.                 02445
NOMNMXRP DS    0H                                                        02446
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - above   02447
         NI    DATFLAG,FF-X'10'    SHOW REAL DATA HAS BEEN READ          02448
         NI    ISLBLFLG,FF-X'03'   NOT A LABEL UNTIL PROVEN SO           02449
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         02450
         ST    R7,TOTB7REG        Save BAL Register                      02451
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02452
         LA    R3,TOTBY           POINT REGISTER TO TOTALS COUNTER       02453
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS BLOCK              02454
         L     R7,TOTB7REG        Restore BAL Register                   02455
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         02456
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*             02457
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                     02458
         BZ    NPRTHEX           NO. SKIP THIS CODE.                     02459
         ST    R7,R7HXPRT        SAVE R7.                                02460
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.            02461
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT             02462
         BCTR  R1,0              LOWER BY ONE                            02463
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS               02464
         L     R7,R7HXPRT        RESTORE R7.                             02465
NPRTHEX  DS    0H                                                        02466
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*             02467
**** ----  BYTE COUNTS ---- BELOW                                        02468
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                     02469
         BZ    INNOBYTE       NO, SKIP INCREMENT                         02470
         L     R2,BYTESMVD    LOAD FULLWORD OF BYTES MOVED               02471
         LA    R3,DBIN        POINT REGISTER TO COUNTER                  02472
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                  02473
INNOBYTE DS    0H                                                        02474
**** ----  BYTE COUNTS ---- ABOVE                                        02475
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.              *  02476
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST?         *  02477
         BNE   READGO1        NO. SKIP THIS PROCESSING.               *  02478
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ            *  02479
* ------------------------------------------------------------------*    02480
*    Call the LABELCHK program and get the returns.                 *    02481
* ------------------------------------------------------------------*    02482
         L     R15,LABCHENT       Get entry point of called program      02483
         STM   R1,R3,SAVE13LC     Save R1 and R2 and R3.                 02484
         LA    R1,PARMFLGS        Point R1 to parm flags.                02485
         LA    R2,LCHKPASS        Point R2 to user area to be passed.    02486
         L     R3,=A(INAREA)      Point R3 to address of INAREA.         02487
         BALR  R14,R15                 Do CALL.                          02488
         ST    R2,SAVELBCK             Address of returned user area     02489
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.    02490
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.           02491
*                                 A call to LABCHECK overlays INAREA,    02492
*                                 so if a LABCHECK routine alters        02493
*                                 a label, the alteration will be        02494
*                                 written out to the output tapes.       02495
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA     02496
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    02497
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?   02498
         BO    CLOSMALL           Yes. Close all files and finish up.    02499
* ------------------------------------------------------------------*    02500
*        BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL               *  02501
*                             FORMATS, AND SET FLAGS                  *  02502
*                             ACCORDINGLY.  OPTIONALLY                *  02503
*                             PRINT LABEL INFO FOUND.                 *  02504
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW              02505
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?                02506
         BZ    LBLNOCNT                                                  02507
         TM    ISLBLFLG,X'03'     WAS LAST INPUT RECORD A LABEL?         02508
         BZ    LBLNOCNT                                                  02509
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02510
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER        02511
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02512
LBLNOCNT DS    0H                                                        02513
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW              02514
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02515
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING        02516
****-->>                below  -  Test of LRECL=80 and not a label
         ST    R2,SAVER2A         Save contents of R2
         L     R2,BYTESMVD        Get size of this record.
         C     R2,=F'80'          80 bytes exactly in record?
         BNE   YSTRPFLG           No. Not an exception.
         TM    ISLBLFLG,X'03'     Was last input record a label?         02508
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.
YSTRPFLG DS    0H
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING              02517
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.
         L     R2,SAVER2A
****-->>                above  -  Test of LRECL=80 and not a label
         B     READGO1            AND CONTINUE READ PROCESSING           02518
STRNOSKP DS    0H                                                        02519
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE              02520
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE              02521
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.              *  02522
*                                                                     *  02523
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.              *  02524
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                  02525
         BZ    READGO1            NO. WE CAN GO ON.                      02526
         TM    ISLBLFLG,X'03'     DID WE JUST READ A LABEL?              02527
         BZ    READGO1            NO DON'T CHECK FOR SL                  02528
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG                02529
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    02530
         CLOSE (LABADDIN)                                                02531
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            02532
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.              *  02533
         EJECT                                                           02534
*  ----------------------------------------------------------------  *   02535
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02536
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE       02537
*                           INPUT IS FROM THE EXTERNAL LABEL FILE        02538
*  ----------------------------------------------------------------  *   02539
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?               02540
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.               02541
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****        02542
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?             02543
         BZ    STILTAPE                                                  02544
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?        02545
         BZ    STILTAPE                                                  02546
         B     WRTTAPMK                                                  02547
STILTAPE DS    0H                                                        02548
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****        02549
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?    02550
         BZ    DOTHEGET             NO. DO THE FILE GETS.                02551
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                 02552
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA    02553
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.          02554
DOTHEGET DS    0H                                                        02555
*** ---                                                                  02556
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?              02557
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                   02558
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?               02559
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                 02560
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.   02561
DOGETALW DS    0H                                                        02562
*** ---                                                                  02563
         GET   LABADDIN,EXTLBLIN                                         02564
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                    02565
         BE    INEXTLAB         IF IT IS, IGNORE IT.                     02566
*------------------------------------> Hex Print Limit - Below           02567
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02568
         BZ    NOHXPREX                NO. DON'T ADJUST LIMIT            02569
         CLC   =X'2D2D2D2D454E444F464C4142454C',EXTLBLIN  ASCII eol?     02570
         BE    NOHXPRAX                          Yes. Reset count.       02571
         CLC   =C'----ENDOFLABEL',EXTLBLIN     End of a label file?      02572
         BNE   NOHXPREX                        No. Don't reset count.    02573
NOHXPRAX DS    0H                                                        02574
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02575
NOHXPREX DS    0H                                                        02576
*------------------------------------> Hex Print Limit - Above           02577
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                        02578
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE        02579
         CLC   =X'2D2D2D2D454E444F464C4142454C484541444552',EXTLBLIN     02580
         BE    ENDHEADR       ASCII ----ENDOFLABELHEADER                 02581
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                        02582
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS           02583
         CLC   =X'2D2D2D2D454E444F464C4142454C545241494C4552',EXTLBLIN   02584
         BE    ENDTRAIL       ASCII ----ENDOFLABELTRAILER                02585
* ---------------------------------  EOV2EOF  BELOW  ------------- *     02586
      CLC =X'2D2D2D2D454E444F464C4142454C545241494C4552454F56',EXTLBLIN  02587
         BE    TRAIXEOV       ASCII ----ENDOFLABELTRAILEREOV             02588
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                     02589
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT            02590
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER          02591
TRAIXEOV DS    0H                                                        02592
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD     02593
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER               02594
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?      02595
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT             02596
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER             02597
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.           02598
NTRALEOV DS    0H                                                        02599
* ---------------------------------  EOV2EOF  ABOVE  ------------- *     02600
*                                                                        02601
INEXTALL DS    0H            All allowed EXTLBLIN cards go thru here.    02602
*                                                                        02603
* ------     Hex Print records from External Labels    ----  below       02604
         TM    PARMFLG5,X'20'       ARE WE DOING HEX PRINT?              02605
         BZ    EXTNOPRT             NO, SO BYPASS THIS                   02606
         ST    R7,R7HXPRT           SAVE R7.                             02607
         BAL   R7,HEXPRNEX          PRINT CURRENT RECORD IN HEX.         02608
         L     R1,BCTLIMIT          LOAD REGISTER FOR DECREMENT          02609
         BCTR  R1,0                 LOWER BY ONE                         02610
         ST    R1,BCTLIMIT          PUT IT BACK FOR NEXT PASS            02611
         L     R7,R7HXPRT           RESTORE R7.                          02612
EXTNOPRT DS    0H                                                        02613
* ------     Hex Print records from External Labels    ----  above       02614
* -- >                                                                   02615
ASCIITST DS    0H                                                        02616
         CLI   EXTLBLIN,X'56'              ASCII V                       02617
         BE    ISASCIIG                                                  02618
         CLI   EXTLBLIN,X'45'              ASCII E                       02619
         BE    ISASCIIG                                                  02620
         CLI   EXTLBLIN,X'48'              ASCII H                       02621
         BE    ISASCIIG                                                  02622
         CLI   EXTLBLIN,X'55'              ASCII U                       02623
         BE    ISASCIIG                                                  02624
         CLI   EXTLBLIN,X'2D'              ASCII DASH                    02625
         BE    ISASCIIG                                                  02626
         B     ISNTASCI                                                  02627
ISASCIIG DS    0H                                                        02628
         OI    ASCIIFLG,X'01'              ASSUME ASCII                  02629
         OI    EXASCFLG,X'01'              ASSUME ASCII                  02630
         B     ASCIITSE                                                  02631
ISNTASCI DS    0H                                                        02632
         NI    ASCIIFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC    02633
         NI    EXASCFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC    02634
ASCIITSE DS    0H                                                        02635
* -- >                                                                   02636
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1?                   02637
         BE    NASCVOL1                    YES. TREAT AS A VOL1.         02638
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                  02639
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS            02640
NASCVOL1 DS    0H                                                        02641
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS    02642
*** --- >>  Security off?  -  below                                      02643
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  02644
         BZ    NOSECV01             No. Don't affect these fields.       02645
         TM    ASCIIFLG,X'01'       Only turn off security if ASCII.     02646
         BO    NOSECV01             Otherwise, no security byte here.    02647
         MVI   EXTLBLIN+10,X'20'    Move in ASCII blank.                 02648
NOSECV01 DS    0H                                                        02649
*** --- >>  Security off?  -  above                                      02650
         B     GOTVOL01             PROCESS THE VOL1                     02651
NLABVOL1 DS    0H                                                        02652
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW                02653
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1?                   02654
         BE    NASCHDR1                    YES. TREAT AS A HDR1.         02655
         CLC   EXTLBLIN(4),=C'HDR1'                                      02656
         BNE   NLABHDR1                                                  02657
NASCHDR1 DS    0H                                                        02658
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN              02659
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02660
*** --- >>  Security off?  -  below                                      02661
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  02662
         BZ    NOSCEHE2             No. Don't affect these fields.       02663
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?         02664
         BO    NOSCEHA1             Yes, turn off appropriate security.  02665
         B     NOSCEHE1             Otherwise do it in EBCDIC.           02666
NOSCEHA1 DS    0H                                                        02667
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                 02668
         B     NOSCEHE2                                                  02669
NOSCEHE1 DS    0H                                                        02670
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                 02671
NOSCEHE2 DS    0H                                                        02672
*** --- >>  Security off?  -  above                                      02673
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                      02674
         B     ENDIBMSL                                                  02675
NLABHDR1 DS    0H                                                        02676
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2?                   02677
         BE    NASCHDR2                    YES. TREAT AS A HDR2.         02678
         CLC   EXTLBLIN(4),=C'HDR2'                                      02679
         BNE   NLABHDR2                                                  02680
NASCHDR2 DS    0H                                                        02681
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN              02682
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02683
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                      02684
         B     ENDIBMSL                                                  02685
NLABHDR2 DS    0H                                                        02686
***** ----- *****                                                        02687
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1?                   02688
         BE    NASCEOF1                    YES. TREAT AS A EOF1.         02689
         CLC   EXTLBLIN(4),=C'EOF1'                                      02690
         BNE   NLABEOF1                                                  02691
NASCEOF1 DS    0H                                                        02692
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN              02693
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02694
*** --- >>  Security off?  -  below                                      02695
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  02696
         BZ    NOSCEEE2             No. Don't affect these fields.       02697
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?         02698
         BO    NOSCEEA1             Yes, turn off appropriate security.  02699
         B     NOSCEEE1             Otherwise do it in EBCDIC.           02700
NOSCEEA1 DS    0H                                                        02701
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                 02702
         B     NOSCEEE2                                                  02703
NOSCEEE1 DS    0H                                                        02704
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                 02705
NOSCEEE2 DS    0H                                                        02706
*** --- >>  Security off?  -  above                                      02707
         B     ENDIBMSL                                                  02708
NLABEOF1 DS    0H                                                        02709
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2?                   02710
         BE    NASCEOF2                    YES. TREAT AS A EOF2.         02711
         CLC   EXTLBLIN(4),=C'EOF2'                                      02712
         BNE   NLABEOF2                                                  02713
NASCEOF2 DS    0H                                                        02714
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN              02715
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02716
         B     ENDIBMSL                                                  02717
NLABEOF2 DS    0H                                                        02718
***** ----- *****                                                        02719
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1?                   02720
         BE    NASCEOV1                    YES. TREAT AS A EOV1.         02721
         CLC   EXTLBLIN(4),=C'EOV1'                                      02722
         BNE   NLABEOV1                                                  02723
NASCEOV1 DS    0H                                                        02724
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN             02725
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02726
*** --- >>  Security off?  -  below                                      02727
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  02728
         BZ    NOSCEVE2             No. Don't affect these fields.       02729
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?         02730
         BO    NOSCEVA1             Yes, turn off appropriate security.  02731
         B     NOSCEVE1             Otherwise do it in EBCDIC.           02732
NOSCEVA1 DS    0H                                                        02733
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                 02734
         B     NOSCEVE2                                                  02735
NOSCEVE1 DS    0H                                                        02736
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                 02737
NOSCEVE2 DS    0H                                                        02738
*** --- >>  Security off?  -  above                                      02739
         B     ENDIBMSL                                                  02740
NLABEOV1 DS    0H                                                        02741
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2?                   02742
         BE    NASCEOV2                    YES. TREAT AS A EOV2.         02743
         CLC   EXTLBLIN(4),=C'EOV2'                                      02744
         BNE   NLABEOV2                                                  02745
NASCEOV2 DS    0H                                                        02746
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN             02747
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02748
         B     ENDIBMSL                                                  02749
NLABEOV2 DS    0H                                                        02750
ENDIBMSL DS    0H                                                        02751
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE                02752
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                   02753
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW              02754
         CLC   EXTLBLIN(3),=X'484452'     ASCII HDR?                     02755
         BE    WRTLABEL                   TREAT SAME AS EBCDIC HDR       02756
* -------------- EOV2EOF BELOW ----------------- *                       02757
ISITEOV  DS    0H                                                        02758
         CLC   EXTLBLIN(3),=X'454F56'     ASCII EOV?                     02759
         BE    ISASCEOV                   TREAT AS ASCII EOV             02760
         CLC   EXTLBLIN(3),=C'EOV'                                       02761
         BNE   NOEOF2V                                                   02762
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                02763
         BZ    NOEOF2V                                                   02764
         MVC   EXTLBLIN(3),=C'EOF'                                       02765
         PTMS  EOVCHG                     MOVE IN MESSAGE                02766
         B     NOEOF2V                                                   02767
ISASCEOV DS    0H                                                        02768
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                02769
         BZ    NOEOF2V                                                   02770
         MVC   EXTLBLIN(3),=X'454F46'     PUT IN ASCII EOF INSTEAD       02771
         PTMS  EOVCHG                     MOVE IN MESSAGE                02772
NOEOF2V  DS    0H                                                        02773
* -------------- EOV2EOF ABOVE ----------------- *                       02774
* ----------                                                             02775
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?      02776
         BZ    BLNOCORR             NO. SKIP THIS.                       02777
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                       02778
         BE    CORBLKCT                                                  02779
         CLC   EXTLBLIN(4),=X'454F4631'  DO ON ASCII EOF1                02780
         BE    CORBLKCT                                                  02781
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                       02782
         BE    CORBLKCT                                                  02783
         CLC   EXTLBLIN(4),=X'454F5631'  DO ON ASCII EOV1                02784
         BE    CORBLKCT                                                  02785
BLNOCORR B     EOFOREOV                                                  02786
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW          02787
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?                02788
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.         02789
         TM    PARMFLG3,X'80'       FIXING LABELS?                       02790
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING       02791
         MVC   EXTLBLIN(80),HDR2SAV                                      02792
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDR?                    02793
         BNE   MAKEEOF2                                                  02794
         MVC   EXTLBLIN(3),=X'454F46'      REPLACE IT WITH ASCII EOF.    02795
         B     NOMKEOF2                                                  02796
MAKEEOF2 DS    0H                                                        02797
         MVC   EXTLBLIN(3),=C'EOF'                                       02798
NOMKEOF2 DS    0H                                                        02799
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE          02800
* ----------                                                             02801
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                         02802
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET          02803
         CLC   EXTLBLIN(2),=X'454F'                                      02804
         BE    WRTLABEL                                                  02805
**** ---- ****                                                           02806
         CLC   EXTLBLIN(3),=X'55484C'                                    02807
         BE    ISASUHL                                                   02808
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                  02809
         BNE   NOTLUHL                                                   02810
ISASUHL  DS    0H                                                        02811
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS     02812
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS  02813
NOTLUHL  DS    0H                                                        02814
**** ---- ****                                                           02815
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                 02816
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.             02817
         CLC   EXTLBLIN(3),=X'55544C'     ASCII UTL.                     02818
         BE    WRTLABEL                                                  02819
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD         02820
ENDHEADR DS    0H                                                        02821
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD   02822
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE  02823
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER             02824
*** -----                                                                02825
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE            02826
         BZ    NOEODFL1                                                  02827
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK     02828
         B     ENDTRAIL                                                  02829
NOEODFL1 DS    0H                                                        02830
*** -----                                                                02831
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME            02832
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA         02833
ENDTRAIL DS    0H                                                        02834
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS         02835
         A     R0,=F'1'         ADD 1 TO COUNT                           02836
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                  02837
*** ---                                                                  02838
         TM    PARMFLG4,X'10'       LIMITING LABELS?                     02839
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.              02840
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?      02841
         BL    ENDNOLIM             NOT YET. GET OUT.                    02842
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.       02843
ENDNOLIM DS    0H                                                        02844
*** ---                                                                  02845
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                  02846
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN     02847
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD  02848
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS              02849
         B     WRTTAPMK                                                  02850
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02851
CORBLKCT DS    0H                                                        02852
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED     02853
         BZ    NOCORBLK          NO. BYPASS.                             02854
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED   02855
         BZ    NOCORBLK          NO. BYPASS.                             02856
*** ---  FIXING LABELS  --- ***                                          02857
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                 02858
         BZ    NOFIXL1           NO. DON'T FIX.                          02859
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?               02860
         BO    NOFIXL1           YES. DON'T CREATE ONE.                  02861
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1            02862
         CLC   EXTLBLIN(4),=X'48445231'   ASCII HDR1?                    02863
         BNE   NOTASCHD                   NO.                            02864
         MVC   EXTLBLIN(3),=X'454F46'     YES. MOVE IN ASCII EOF         02865
         B     NOFIXL1                    AND GET OUT.                   02866
NOTASCHD DS    0H                                                        02867
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL              02868
NOFIXL1  DS    0H                                                        02869
*** ---  FIXING LABELS  --- ***                                          02870
         CLC   EXTLBLIN(4),=X'454F5631'   ASCII EOV1?                    02871
         BE    NOFIXL1A                                                  02872
         CLC   EXTLBLIN(4),=X'454F4631'   ASCII EOF1?                    02873
         BNE   NOFIXL1B                                                  02874
NOFIXL1A DS    0H                                                        02875
         ST    R5,R5HXPRT              Save register.                    02876
         L     R5,SAVTRTCS             Point to translation table CSECT  02877
         USING TRTCSECT,R5                                               02878
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   02879
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          02880
         L     R5,R5HXPRT              Restore R5                        02881
         DROP  R5                                                        02882
         MVC   EXTLBLIN+54(6),BLKCNASC+4                                 02883
         B     NOFIXL2                      AND NOT THE EBCDIC ONE       02884
NOFIXL1B DS    0H                                                        02885
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT      02886
NOFIXL2  DS    0H                                                        02887
         STM   R2,R3,SAVE2TO3                                            02888
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD     02889
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    02890
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 02891
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        02892
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              02893
         LM    R2,R3,SAVE2TO3                                            02894
NOCORBLK B     EOFOREOV                                                  02895
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02896
GOTVOL01 DS    0H                                                        02897
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT    02898
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"         02899
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                        02900
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?              02901
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT         02902
         MVC   VOLNEW(6),VOLSTG1       OVERLAY NEW VOLSER FOR ALL OUTS   02903
NOOVLALL DS    0H                                                        02904
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                        02905
         B     WRTLABEL                                                  02906
WRTLABEL OI    WRLBLFLG,X'01'                                            02907
* --------------- PRINT LABEL TO BE WRITTEN ------ below ------ *        02908
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN       02909
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM          02910
* ----------------------------------------------------------------- *    02911
         L     R15,PRTLBENT       Get entry point of called program      02912
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                       02913
         LA    R1,PARMFLGS        Point R1 to parm flags.                02914
         L     R3,=A(EXTLBLIN)    Point R3 to address of input area.     02915
         BALR  R14,R15                 Do CALL.                          02916
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.     02917
*        MVC   EXTLBLIN(80),0(R3)      Overlay 80 bytes of EXTLBLIN      02918
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    02919
* ----------------------------------------------------------------- *    02920
NOPRTEXT DS    0H             Don't print external label on report       02921
* --------------- PRINT LABEL TO BE WRITTEN ------ above ------ *        02922
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02923
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE          02924
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                    02925
         B     WRITE1         WRITE LABEL RECORD                         02926
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE             02927
WRTTAPMK DS    0H                                                        02928
*** ----------------                                                     02929
         TM    INEODFLG,X'02'                                            02930
         BZ    NOEODNOW                                                  02931
         TM    WRLBLFLG,X'04'                                            02932
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR  02933
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?       02934
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.                02935
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS        02936
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR   02937
NOEODNOW DS    0H                                                        02938
*** ----------------                                                     02939
* --- >>   Diagnostics for tape mark writing << --- * below
         TM    PARMFLG6,X'04'
         BZ    DGSTRI02
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE(10),=C'STRIPFLG: '
         HEX   LINE+10,1,STRIPFLG
         MVI   LINE+15,C'2'
         MVC   LINE+20(10),=C'ISLBLFLG: '
         HEX   LINE+30,1,ISLBLFLG
         MVC   LINE+40(32),=C'We are writing a Tape Mark now!!'
         PUT   SYSPRINT,LINE
DGSTRI02 DS    0H
* --- >>   Diagnostics for tape mark writing << --- * above
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                           02940
         B     WRITE1         WRITE TAPE MARK                            02941
* ------------------ SPECIAL ROUTINES ------------------------------- *  02942
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD    02943
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN         02944
         B     READIN             AND GO BACK WHERE YOU STARTED          02945
* ------------------ SPECIAL ROUTINES ------------------------------- *  02946
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS   02947
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                    02948
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02949
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                    02950
         BZ    NOFIXLBL          NO. DON'T TRY IT.                       02951
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING    02952
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                  02953
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE              02954
         B     CLOSMALL          FINISHED, GET OUT.                      02955
NOFIXLBL DS    0H                                                        02956
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02957
* --- >>   Diagnostics for tape mark writing << --- * below
         TM    PARMFLG6,X'04'
         BZ    DGSTRI03
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE(10),=C'STRIPFLG: '
         HEX   LINE+10,1,STRIPFLG
         MVI   LINE+15,C'3'
         MVC   LINE+20(10),=C'ISLBLFLG: '
         HEX   LINE+30,1,ISLBLFLG
         MVC   LINE+40(32),=C'We are writing a Tape Mark now!!'
         PUT   SYSPRINT,LINE
DGSTRI03 DS    0H
* --- >>   Diagnostics for tape mark writing << --- * above
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN       02958
         B     READIN2        WRITE OUTPUTS AND FINISH                   02959
* ------------------------------------------------------------------- *  02960
*                                                                        02961
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                           02962
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                        02963
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                      02964
*      ALREADY.                                                          02965
*                                                                        02966
* ------------------ SPECIAL ROUTINES ------------------------------- *  02967
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02968
         EJECT                                                           02969
READGO1  DS    0H                                                        02970
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW          02971
         TM    PARMFLG3,X'04'  COUNTING BYTES?                           02972
         BZ    READNCNT                                                  02973
         TM    ISLBLFLG,X'03'  LAST READ A LABEL?                        02974
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE        02975
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02976
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY      02977
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02978
READNCNT DS    0H                                                        02979
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE          02980
**---->            LABEL STRIPPING CODE          BELOW                   02981
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02982
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING        02983
* --- >>   Diagnostics for stripping   << --- *   below
         TM    PARMFLG6,X'04'
         BZ    DGSTRI0A
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE(10),=C'STRIPFLG: '
         HEX   LINE+10,1,STRIPFLG
         MVI   LINE+15,C'A'
         MVC   LINE+20(10),=C'ISLBLFLG: '
         HEX   LINE+30,1,ISLBLFLG
         MVC   LINE+40(10),=C'LBLFLAG:  '
         HEX   LINE+50,1,LBLFLAG
         PUT   SYSPRINT,LINE
DGSTRI0A DS    0H
* --- >>   Diagnostics for stripping   << --- *   above
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW       02984
         BZ    RDNOSTRP           NO IT WASN'T                           02985
         TM    ISLBLFLG,X'03'     LAST READ A LABEL?
         BZ    RDNOSTRP           NO. DON'T STRIP ANYTHING.
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.   02986
RDNOSTRP DS    0H                                                        02987
**---->            LABEL STRIPPING CODE          ABOVE                   02988
         STH   R2,OUTCCW+6    STORE FOR WRITE                         *  02989
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER        02990
         ST    R7,STOR7REG                                               02991
         L     R7,BLOKCNT                                                02992
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS              02993
         ST    R7,BLOKCNT                                                02994
         L     R7,STOR7REG                                               02995
* - * - * ------ >   RECSIZE Reporting of Individual Blocks - below
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* Output of this option looks like:
*  File 00002 Record number: 0000000140 Size of record: 0000032720
*  File 00002 Record number: 0000000141 Size of record: 0000032720
*  File 00002 Record number: 0000000142 Size of record: 0000006400
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         TM    PARMFLG6,X'02'   Are we reporting individual blk sizes?
         BZ    NORCSIZ1         No. Don't do this routine.
         ST    R7,SAVE7RG7      Save BAL register
         BAL   R7,CLRCSZMS      Clear data fields from message
         L     R7,SAVE7RG7      Restore BAL register
         ST    R7,STOR7REG      Save register for safety
         L     R7,BLOKCNT       Get current block count
         CVD   R7,DWORD         CONVERT BLOCK COUNT TO DECIMAL
         L     R7,STOR7REG      Restore register
         OI    DWORD+7,X'0F'    MAKE SIGN READABLE
         MVC   BLKCNTRN,BLKCNTRN-1        INITIALIZE TO ZEROS
         UNPK  BLKCNTRN(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT
         ST    R7,STOR7REG      Save register for safety
         L     R7,BYTESMVD      Get current block size
         CVD   R7,DWORD         CONVERT BYTES MOVED TO DECIMAL
         L     R7,STOR7REG      Restore register
         OI    DWORD+7,X'0F'    MAKE SIGN READABLE
         MVC   BMOVEDRN,BMOVEDRN-1        INITIALIZE TO ZEROS
         UNPK  BMOVEDRN(10),DWORD+2(6)    SAVE 10 DIGITS OF BLKSIZE
         ADRSMS
         MVC   RECSZFNM(5),FILNOSAW       Move File number to message
         MVC   RECSZRCD(10),BLKCNTRN      Move Record number for file
         MVC   RECSZSIZ(10),BMOVEDRN      Move Block Size (byte count)
         PTMSN RECSZMSG
         DROPMS
NORCSIZ1 DS    0H
* - * - * ------ >   RECSIZE Reporting of Individual Blocks - above
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *       02996
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                   02997
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT           02998
         B     READINGO         CONTINUE REPORTING FILE END AND WRITE.   02999
NOINITT1 DS    0H                                                        03000
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *       03001
         B     WRITE1           CONTINUE                                 03002
*                                                                     *  03003
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED           *  03004
READIN1  DS    0H             COME HERE IF TM WAS READ                *  03005
**** ------------------- Leading Tape Marks ------- below                03006
         TM    DATFLAG,X'10'    Has any real data been read?             03007
         BZ    NOSKLTME         Yes, bypass this entire routine.         03008
         TM    PARMFLG1,X'20'   Are we skipping LTMs?                    03009
         BZ    NOSKLTMO         PARM is off, we copy them.               03010
         AP    LTMCOUNT,=P'1'   Increment counter                        03011
         L     R0,LTMBINAD      Increment binary counter                 03012
         A     R0,=F'1'                                                  03013
         ST    R0,LTMBINAD                                               03014
         ADRSMS                                                          03015
         MVC   LTMRNUM(11),LTMCTPAT             Edit pattern             03016
         ED    LTMRNUM(11),LTMCOUNT+1           Put number in report     03017
         MVC   LTMRPTI,SKIPPED      Report tape mark skipped.            03018
         PTMSN LTMRPT               Write report line.                   03019
         DROPMS                                                          03020
         B     READIN           Skip this tapemark.                      03021
NOSKLTMO DS    0H                                                        03022
         TM    PARMFLG2,X'08'       Is this run READ only?               03023
         BO    NOSKLTMR                                                  03024
         MVFMS LTMRPTI,COPIED       Report tape mark copied.             03025
         B     NOSKLTME                                                  03026
NOSKLTMR DS    0H                                                        03027
         MVFMS LTMRPTI,READDD       Report tape mark read.               03028
NOSKLTME DS    0H                                                        03029
**** ------------------- Leading Tape Marks ------- above                03030
* ------------------------- ADD LABEL TO NL CODE ----------- *           03031
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                 03032
         BZ    NONLSL1          NO.  BYPASS.                             03033
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS            03034
*** ---                                                                  03035
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?         03036
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.    03037
*                               DO NOT COLLECT 200 DOLLARS.              03038
*** ---                                                                  03039
NONLSL1  DS    0H                                                        03040
* ------------------------- ADD LABEL TO NL CODE ----------- *           03041
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  03042
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?         03043
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.        03044
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?        03045
         BO    WRCTLHDR         YES. PUT IT OUT.                         03046
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?        03047
         BO    WRCTLEOF         YES. PUT IT OUT.                         03048
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?        03049
         BO    WRCTLEOV         YES. PUT IT OUT.                         03050
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.       03051
WRCTLHDR DS    0H                                                        03052
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                 *  03053
         MVC   LLINE(80),LABELITH   MARK END OF LABEL                 *  03054
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             03055
         BZ    WRCTLAS1         No. Don't translate the control card.    03056
         ST    R5,R5HXPRT       Yes.   Save register.                    03057
         L     R5,SAVTRTCS             Point to translation table CSECT  03058
         USING TRTCSECT,R5                                               03059
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     03060
         L     R5,R5HXPRT              Restore R5                        03061
         DROP  R5                                                        03062
WRCTLAS1 DS    0H                   Branch here if don't use ASCII.      03063
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                    *  03064
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          03065
WRCTLEOF DS    0H                                                        03066
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                 *  03067
         MVC   LLINE(80),LABELITR   MARK END OF LABEL                 *  03068
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             03069
         BZ    WRCTLAS2         No. Don't translate the control card.    03070
         ST    R5,R5HXPRT       Yes.   Save register.                    03071
         L     R5,SAVTRTCS             Point to translation table CSECT  03072
         USING TRTCSECT,R5                                               03073
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     03074
         L     R5,R5HXPRT              Restore R5                        03075
         DROP  R5                                                        03076
WRCTLAS2 DS    0H                   Branch here if don't use ASCII.      03077
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                    *  03078
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          03079
WRCTLEOV DS    0H                                                        03080
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                 *  03081
         MVC   LLINE(80),LABELITV   MARK END OF LABEL                 *  03082
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             03083
         BZ    WRCTLAS4         No. Don't translate the control card.    03084
         ST    R5,R5HXPRT       Yes.   Save register.                    03085
         L     R5,SAVTRTCS             Point to translation table CSECT  03086
         USING TRTCSECT,R5                                               03087
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     03088
         L     R5,R5HXPRT              Restore R5                        03089
         DROP  R5                                                        03090
WRCTLAS4 DS    0H                   Branch here if don't use ASCII.      03091
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                    *  03092
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          03093
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE          03094
NOCNTLWR DS    0H                                                        03095
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  03096
         TM    DATFLAG,X'10'  NO DATA READ YET?                       *  03097
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY          *  03098
         MVFMS LTMRPTI,SKIPPED,OPC=CLC   WE SKIP LEADING TAPEMARKS?      03099
         BNE   RDNOSKIP                                               *  03100
         AP    LTMCOUNT,=P'1'                                            03101
         L     R0,LTMBINAD                                               03102
         A     R0,=F'1'                                                  03103
         ST    R0,LTMBINAD                                               03104
         ADRSMS                                                          03105
         MVC   LTMRNUM(11),LTMCTPAT                                      03106
         ED    LTMRNUM(11),LTMCOUNT+1                                    03107
         PTMSN LTMRPT            INDICATE LEADING TM SKIPPED             03108
         DROPMS                                                          03109
         B     READIN         DO ANOTHER READ                         *  03110
RDNOSKIP DS    0H                                                     *  03111
         AP    LTMCOUNT,=P'1'                                            03112
         L     R0,LTMBINAD                                               03113
         A     R0,=F'1'                                                  03114
         ST    R0,LTMBINAD                                               03115
         ADRSMS                                                          03116
         MVC   LTMRNUM(11),LTMCTPAT                                      03117
         ED    LTMRNUM(11),LTMCOUNT+1                                    03118
         PTMSN LTMRPT            INDICATE LEADING TM COPIED           *  03119
         DROPMS                                                          03120
         B     MARKFILE                                               *  03121
READINGO DS    0H                                                     *  03122
*------------------------------------> HEX PRINT LIMIT - BELOW           03123
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     03124
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT            03125
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           03126
NOHXPRST DS    0H                                                        03127
*------------------------------------> HEX PRINT LIMIT - ABOVE           03128
         ST    R7,STOR7REG                                               03129
         L     R7,FILECNT                                                03130
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL          *  03131
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03132
         ADRSMS                                                          03133
         UNPK  FILEDONE+6(5),DWORD+5(3)    UNPACK FILE NUMBER            03134
         MVC   FILNOSAV(5),FILEDONE+6      SAVE DISPLAY NUMBER           03135
         DROPMS                                                          03136
         ST    R7,FILECNT                                                03137
         STH   R7,FILENO      Save File number for FOOTAGE routine       03138
         A     R7,=F'1'       Save one more than current file number
         CVD   R7,DWORD
         OI    DWORD+7,X'0F'
         UNPK  FILNOSAW(5),DWORD+5(3)
         L     R7,BLOKCNT                                                03139
         ST    R7,NUMBLKS     Save Block Count for FOOTAGE routine       03140
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             03141
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03142
         MVFMS FILEDONE+21(7),DWORD+4(4),OPC=UNPK  UNPACK BLOCK COUNT    03143
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS            03144
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    03145
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        03146
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        03147
         BZ    MARKNCNT           NO-SKIP ROUTINE                        03148
         ADRSMS                                                          03149
         MVC   FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                   03150
         MVC   FILECONT,=C'CONTAINING'                                   03151
         DROPMS                                                          03152
         L     R4,DBINH           LOAD REG WITH HI ORDER                 03153
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             03154
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           03155
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  03156
         L     R4,DBINL           LOAD REG WITH LOW ORDER                03157
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            03158
         AP    QWORD,DWORD        AND ADD IT IN                          03159
         MVFMS FILEBYTE,QWORD+6,OPC=ED   DISPLAY COUNT IN LINE           03160
** ----                                                                  03161
         LM    R4,R5,TOTBYTES                                            03162
         A     R5,DBINL            LOW ORDER COUNT                       03163
         BNO   MARKNOVR            B IF NO OVERFLOW                      03164
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  03165
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   03166
MARKNOVR DS    0H                                                        03167
         A     R4,DBINH            HIGH ORDER                            03168
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL               03169
** ----                                                                  03170
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?             03171
         BZ    MARKISNL            NO. DON'T ADD TOTALS                  03172
         LM    R4,R5,LABBYTES                                            03173
         A     R5,LABINL           LOW ORDER COUNT                       03174
         BNO   MARKNOVL            B IF NO OVERFLOW                      03175
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  03176
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   03177
MARKNOVL DS    0H                                                        03178
         A     R4,LABINH           HIGH ORDER                            03179
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL               03180
* - >                                                                    03181
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          03182
         BZ    NOSEPLBL                                                  03183
         ADRSMS                                                          03184
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   03185
         MVC   FILECUMT,=C'CUM LABEL:'                                   03186
         DROPMS                                                          03187
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                   03188
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03189
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03190
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03191
         CVD   R5,DWORD          LOW ORDER WORD                          03192
         AP    QWORD,DWORD       AND ADD IT IN                           03193
         MVFMS FILETBYE,QWORD+6,OPC=ED  MAKE NUMBER DISPLAYABLE          03194
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        03195
NOSEPLBL DS    0H                                                        03196
* - >                                                                    03197
         B     MARKNOLB                                                  03198
MARKISNL DS    0H                                                        03199
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?             03200
         BO    MARKNOLB                                                  03201
         LM    R4,R5,FILBYTES                                            03202
         A     R5,DBINFL           LOW ORDER COUNT                       03203
         BNO   MARKNOVF            B IF NO OVERFLOW                      03204
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  03205
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   03206
MARKNOVF DS    0H                                                        03207
         A     R4,DBINFH           HIGH ORDER                            03208
         STM   R4,R5,FILBYTES                                            03209
* - >                                                                    03210
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          03211
         BZ    NOSEPDAT                                                  03212
         ADRSMS                                                          03213
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   03214
         MVC   FILECUMT,=C'CUM DATA :'                                   03215
         DROPMS                                                          03216
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                   03217
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03218
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03219
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03220
         CVD   R5,DWORD          LOW ORDER WORD                          03221
         AP    QWORD,DWORD       AND ADD IT IN                           03222
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         03223
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        03224
NOSEPDAT DS    0H                                                        03225
* - >                                                                    03226
MARKNOLB DS    0H                                                        03227
** ----                                                                  03228
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?                03229
         BZ    MARKNCN2           NO-SKIP ROUTINE                        03230
* - >                                                                    03231
         ADRSMS                                                          03232
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   03233
         MVC   FILECUMT,=C'CUM TOTAL:'                                   03234
         DROPMS                                                          03235
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                   03236
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03237
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03238
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03239
         CVD   R5,DWORD          LOW ORDER WORD                          03240
         AP    QWORD,DWORD       AND ADD IT IN                           03241
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         03242
* - >                                                                    03243
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE                03244
MARKNCNT DS    0H                                                        03245
         MVFMS FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      03246
MARKNCN2 DS    0H                                                        03247
         MVFMS FILETBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      03248
MARKNCNE DS    0H                                                        03249
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        03250
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - below   03251
* Output of this option looks like:                                 *
*  File 00002 Min Blksize:     6400 Max Blksize:    32720           *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         TM    PARMFLG6,X'01'               Reporting Min-Max blksize?   03252
         BZ    XMINMAX                      No. Skip all this code.      03253
         STM   R1,R5,SAVE1TO5               Save regs                    03254
         L     R1,MINBLK                    Minimum blksize for file     03255
         XC    DWORD,DWORD                  Clear DWORD to zeros.        03256
         CVD   R1,DWORD                     Convert to decimal.          03257
         OI    DWORD+7,X'0F'                Make sign readable.          03258
         ADRSMS                                                          03259
*        UNPK  MNMXMIN+1(7),DWORD+4(4)      Display number in message    03260
         MVC   MNMXMIN(8),MXPATTRN                                       03261
         ED    MNMXMIN+1(8),DWORD+4                                      03262
         DROPMS                                                          03263
         L     R1,MAXBLK                    Maximum blksize for file     03264
         XC    DWORD,DWORD                  Clear DWORD to zeros.        03265
         CVD   R1,DWORD                     Convert to decimal.          03266
         OI    DWORD+7,X'0F'                Make sign readable.          03267
         ADRSMS                                                          03268
*        UNPK  MNMXMAX+1(7),DWORD+4(4)      Display number in message    03269
         MVC   MNMXMAX(8),MXPATTRN                                       03270
         ED    MNMXMAX+1(8),DWORD+4                                      03271
         MVC   MNMXFNUM(5),FILNOSAV         Display saved file number    03272
         CLC   MNMXMIN+1(7),=C'8435455'     End of input tape?           03273
         BNE   NOPRMSXE                     No. Print msg unchanged.     03274
         MVC   MNMXMIN+1(7),=C'0000000'     Make message reasonable.     03275
         B     NOPRMSXF                     And don't even print it.     03276
NOPRMSXE DS    0H                                                        03277
         PTMSN MNMXMSG1                     Print message                03278
NOPRMSXF DS    0H                                                        03279
         DROPMS                                                          03280
         LM    R1,R5,SAVE1TO5               Restore work regs            03281
XMINMAX  B     XMINMAX1                                                  03282
MXPATTRN DC    X'4020202020202120'          8 bytes of pattern           03283
XMINMAX1 DS    0H                                                        03284
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - above   03285
         PTMS  FILEDONE            WRITE IT                              03286
         TM    LBLFLAG,X'08'       INITTED HDR1 SEEN?                    03287
         BO    WRITE1              YES. GO DIRECTLY TO WRITE IT.         03288
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        03289
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        03290
         BZ    MARKNTOT           NO-SKIP ROUTINE                        03291
         ADRSMS                                                          03292
         MVC   FILECONT,=C'          '                                   03293
         MVC   FILECUMT,=C'          '                                   03294
         DROPMS                                                          03295
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE              03296
         ST    R4,DBINH            ZERO BYTE COUNT                       03297
         ST    R4,DBINL            ZERO BYTE COUNT                       03298
         ST    R4,LABINH           ZERO BYTE COUNT                       03299
         ST    R4,LABINL           ZERO BYTE COUNT                       03300
         ST    R4,DBINFH           ZERO BYTE COUNT                       03301
         ST    R4,DBINFL           ZERO BYTE COUNT                       03302
MARKNTOT DS    0H                                                        03303
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        03304
MARKFILE DS    0H                                                        03305
* -- >      Max - Min reporting    -   below                             03306
         TM    PARMFLG6,X'01'               MINMAX on?                   03307
         BZ    NOMXMNRS                     No. No reset necessary.      03308
         MVC   MAXBLK,=F'0'                 Start small - RESET MAX      03309
         MVC   MINBLK,=F'268435455'         Start big   - RESET MIN      03310
NOMXMNRS DS    0H                                                        03311
* -- >      Max - Min reporting    -   above                             03312
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE              03313
         ST    R7,BLOKCNT                                                03314
         L     R7,FILECNT                                                03315
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                       03316
         ST    R7,FILECNT                                                03317
         L     R7,STOR7REG                                               03318
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?                *  03319
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK             *  03320
*                                                                        03321
* ->->-> -----------  FOOTAGE REPORTING  -----  below  ----- ***         03322
         TM    PARMFLG6,X'20'     Reporting footages?                    03323
         BZ    NOFEET02           No. Don't execute this code            03324
         LA    R1,LABELTYP        Point to footage work area             03325
         L     R15,FOOTGENT       Load entry point for FOOTAGE routine   03326
         BALR  R14,R15            Call FOOTAGE                           03327
*                                 FOOTAGE workarea has now been updated  03328
         ST    R7,SAVE7RG6                                               03329
         LA    R7,0                                                      03330
         LH    R7,FILENO                                                 03331
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL             03332
         L     R7,SAVE7RG6                                               03333
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03334
         ADRSMS                                                          03335
         UNPK  FOOTMNUM(5),DWORD+5(3)           UNPACK FILE              03336
         MVC   FOOTMFT,FILEFT                                            03337
         MVC   FOOTMCFT,REELFT                                           03338
         DROPMS                                                          03339
*  TEST TEST TEST TEST TEST TEST - below                                 03340
FEETDIAG DS    0H                                                        03341
         TM    PARMFLG6,X'40'     Diagnostics wanted?                    03342
         BZ    NOFEETDI           Not requested. Skip printing them.     03343
         STM   R4,R5,SAV45MSG     Register save                          03344
         USING MSGCSECT,R5,R4                                            03345
         L     R5,=V(MSGCSECT)          Load Messages CSECT              03346
         LA    R4,4095(,R5)             Addressability                   03347
         LA    R4,1(,R4)                                                 03348
         HEX   FOOTMFIL+2,2,FILENO      File Number from FOOTAGE block   03349
         HEX   FOOTMFIL+8,4,BLKSZE      Block Size  from FOOTAGE block   03350
         HEX   FOOTMFIL+18,4,NUMBLKS    Block Count from FOOTAGE block   03351
         HEX   FOOTMFIL+28,4,CUMTOTAL   Running Total in FOOTAGE block   03352
         MVC   FOOTMFIL+37(10),FILEFT                                    03353
         MVC   FOOTMFIL+47(10),REELFT                                    03354
         LM    R4,R5,SAV45MSG     Register restore                       03355
         DROP  R5,R4                                                     03356
NOFEETDI DS    0H                                                        03357
*  TEST TEST TEST TEST TEST TEST - above                                 03358
         ADRSMS                                                          03359
         CLC   FILEDONE+21(7),=C'0000000'                                03360
         BE    NOLASTFT                                                  03361
         PTMSN FOOTMSG1                                                  03362
NOLASTFT DS    0H                                                        03363
         DROPMS                                                          03364
         XC    BLKSZE,BLKSZE  Set max block size to 0 in footage block   03365
NOFEET02 DS    0H                                                        03366
* ->->-> -----------  FOOTAGE REPORTING  -----  above  ----- ***         03367
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                          03368
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES             03369
         BZ    MARKFILA          NO - SKIP THIS CODE                     03370
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?     03371
         BNL   MARKFILA          NO - NO RESTRICTIONS                    03372
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA     03373
MARKFILA DS    0H                                                        03374
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                          03375
         TM    PARMFLG4,X'02'   Stripping labels?                        03376
         BZ    MARKSTRX         no - bypass strip-related code           03377
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?                03378
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                  03379
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.     03380
         B     READIN           YES. SKIP WRITING THE T.M. TOO           03381
MARKSTRX DS    0H                                                        03382
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK              *  03383
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?             *  03384
         BZ    MARKGO         NO. TEST FOR 2ND TM                     *  03385
         B     READIN2        YES. WRITE TO OUTPUTS & END             *  03386
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                           03387
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS         *  03388
NOLBL    DS    0H
* --- >>   Diagnostics for tape mark writing << --- * below
         TM    PARMFLG6,X'04'
         BZ    DGSTRI04
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVC   LINE(10),=C'STRIPFLG: '
         HEX   LINE+10,1,STRIPFLG
         MVI   LINE+15,C'4'
         MVC   LINE+20(10),=C'ISLBLFLG: '
         HEX   LINE+30,1,ISLBLFLG
         MVC   LINE+40(10),=C'LBLFLAG:  '
         HEX   LINE+50,1,LBLFLAG
         MVC   LINE+55(32),=C'We are writing a Tape Mark now!!'
         PUT   SYSPRINT,LINE
DGSTRI04 DS    0H
* --- >>   Diagnostics for tape mark writing << --- * above
         MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM              *  03389
         B     WRITE1         GO WRITE TM TO OUTPUTS                     03390
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS.         *  03391
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2              *  03392
         BZ    INEODATA       NOT EITHER. END AS USUAL.               *  03393
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ         *  03394
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG          *  03395
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS.         *  03396
*                                                                     *  03397
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED           *  03398
INEODATA DS    0H                                                        03399
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE       03400
*                                                                        03401
READIN2  DS    0H                                                        03402
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       03403
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?      03404
         BZ    READ2GO           NO. BYPASS THIS CODE.                   03405
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA  03406
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS           03407
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?              03408
         BZ    NOEXTMK           NO                                      03409
         B     WRTTAPMK                                                  03410
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?           03411
         BZ    READ2GO           NO. BYPASS REST OF CODE.                03412
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.          03413
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                    03414
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS    03415
         B     READIN            DON'T WRITE FINAL TAPE MARK YET         03416
READ2STP DS    0H                                                        03417
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS            03418
READ2GO  DS    0H                                                        03419
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       03420
         OI    FLAG2A,EOV        INDICATE EOV ON INPUT                   03421
* --- >>>  ------------------ below -------- Skip writing last T.M.      03422
* -------------------------------------------------------------- *       03423
*            When stripping labels, somehow an extra             *       03424
*            tape mark gets written.  This is a kludge           *       03425
*            to correct that.....                                *       03426
* -------------------------------------------------------------- *       03427
         TM    PARMFLG4,X'02'    Stripping Labels?                       03428
         BZ    READ2GNS          No. don't skip writing last t.m.        03429
*        MVC   LINE(133),LINE-1       CLEAR LINE                         03430
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1              03431
*        PUT   SYSPRINT,LINE                                             03432
         B     WRITE17           Do not write the extra tape mark        03433
READ2GNS DS    0H                                                        03434
* --- >>>  ------------------ above -------- Skip writing last T.M.      03435
         B     WRITE1                                                    03436
         SPACE 3                                                         03437
* -------------------- Code for Initting Tapes ---------->>>>> below     03438
TLITWRIT DS    0H                                                        03439
         TM    PARMFLG3,X'01'                                            03440
         BZ    TLITWRIE                                                  03441
TLITREW1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    03442
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         03443
         BO    TLITREW2                YES. SET WRITE CCW BACK.          03444
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        03445
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               03446
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    03447
TLITREW2 DS    0H                      ALREADY DID THE REWIND.           03448
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  03449
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            03450
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          03451
TLITSKP1 DS    0H                                                        03452
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              03453
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1        03454
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     03455
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          03456
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     03457
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          03458
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1    03459
         MVC   EXTLBLIN+41(10),TAPEOWN   And the Tape Owner if any       03460
* --> Hex printing - below                                               03461
         TM    PARMFLG5,X'20'          Is Hex Printing On?               03462
         BZ    NPRHINT1                No. Bypass it.                    03463
         ST    R7,R7HXPRT              Save BAL register.                03464
         BAL   R7,HEXPRNEX             Hex print from external labels.   03465
         L     R7,R7HXPRT              Restore BAL register.             03466
NPRHINT1 DS    0H                                                        03467
* --> Hex printing - above                                               03468
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       03469
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        03470
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        03471
TLITSKP2 DS    0H                                                        03472
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    03473
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     03474
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1    03475
* --> Hex printing - below                                               03476
         TM    PARMFLG5,X'20'          Is Hex Printing On?               03477
         BZ    NPRHINT2                No. Bypass it.                    03478
         ST    R7,R7HXPRT              Save BAL register.                03479
         BAL   R7,HEXPRNEX             Hex print from external labels.   03480
         L     R7,R7HXPRT              Restore BAL register.             03481
NPRHINT2 DS    0H                                                        03482
* --> Hex printing - above                                               03483
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       03484
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             03485
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    03486
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     03487
TLITWRIE DS    0H                                                        03488
* -------------------- Code for Initting Tapes ---------->>>>> above     03489
* -------------------- Code for Initting ASCII Tapes ---->>>>> below     03490
TLITASCI DS    0H               INIT ASCII TAPES.                        03491
         TM    PARMFLG5,X'03'   Are we initting any type of ASCII tape?  03492
         BZ    TLITASCE         No. Bypass this code.                    03493
TLITRAS1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    03494
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         03495
         BO    TLITRAS2                YES. SET WRITE CCW BACK.          03496
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        03497
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               03498
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    03499
TLITRAS2 DS    0H                      ALREADY DID THE REWIND.           03500
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  03501
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            03502
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          03503
TLITSKA1 DS    0H                                                        03504
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              03505
         BO    TLITSKA2                GO TO SECOND PASS FOR HDR1        03506
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     03507
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          03508
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     03509
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          03510
         MVC   EXTLBLIN(80),AVOL1LAB   STUFF THE INPUT AREA WITH VOL1    03511
         MVC   EXTLBLIN+37(14),TAPEOWN   And the Tape Owner if any       03512
* --> Hex printing - below                                               03513
         TM    PARMFLG5,X'20'          Is Hex Printing On?               03514
         BZ    NPRHINA1                No. Bypass it.                    03515
*           Temporary ASCII translation is done here.           *        03516
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           03517
         ST    R5,R5HXPRT              Save register.                    03518
         L     R5,SAVTRTCS             Point to translation table CSECT  03519
         USING TRTCSECT,R5                                               03520
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  03521
         ST    R7,R7HXPRT              Save BAL register.                03522
         BAL   R7,HEXPRNEX             Hex print from external labels.   03523
         L     R7,R7HXPRT              Restore BAL register.             03524
         L     R5,R5HXPRT              Restore R5                        03525
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       03526
         DROP  R5                                                        03527
NPRHINA1 DS    0H                                                        03528
* --> Hex printing - above                                               03529
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       03530
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        03531
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        03532
TLITSKA2 DS    0H                                                        03533
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    03534
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     03535
         MVC   EXTLBLIN(80),AHDR1INI   STUFF THE INPUT AREA WITH HDR1    03536
* --------------------------------------------------------------*        03537
*           Note:  The real ASCII translation is                *        03538
*                  done in the CHANGVOL routine that            *        03539
*                  gets executed just before each               *        03540
*                  output write.  Please note that              *        03541
*                  INASC3 and INASC4 imply CHGVOL.              *        03542
* --------------------------------------------------------------*        03543
* --> Hex printing - below                                               03544
         TM    PARMFLG5,X'20'          Is Hex Printing On?               03545
         BZ    NPRHINA2                No. Bypass it.                    03546
*           Temporary ASCII translation is done here.           *        03547
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           03548
         ST    R5,R5HXPRT              Save register.                    03549
         L     R5,SAVTRTCS             Point to translation table CSECT  03550
         USING TRTCSECT,R5                                               03551
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  03552
         ST    R7,R7HXPRT              Save BAL register.                03553
         BAL   R7,HEXPRNEX             Hex print from external labels.   03554
         L     R7,R7HXPRT              Restore BAL register.             03555
         L     R5,R5HXPRT              Restore R5                        03556
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       03557
         DROP  R5                                                        03558
NPRHINA2 DS    0H                                                        03559
* --> Hex printing - above                                               03560
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       03561
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             03562
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    03563
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     03564
TLITASCE DS    0H                                                        03565
* -------------------- Code for Initting ASCII Tapes ---->>>>> above     03566
*                                                                        03567
*  WRITE TO OUTPUT TAPES                                                 03568
*                                                                        03569
WRITE1   DS    0H                                                     *  03570
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?              03571
         BNE   WRNOTPMK         No. Don't touch bytes to be moved        03572
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved              03573
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.        03574
WRNOTPMK DS    0H                                                        03575
* --- READ ONLY CODE ------------------------------- BELOW --         *  03576
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                *  03577
         BO    WRITE17    YES--NO WRITES - ONLY READS                 *  03578
* --- READ ONLY CODE ------------------------------- ABOVE --         *  03579
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                    03580
         BZ    WRITE2         NO                                         03581
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER     03582
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE  03583
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03584
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03585
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                  03586
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03587
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03588
         EXCP  OUTIOB         WRITE IT                                   03589
         WAIT  ECB=OUTECB     WAIT FOR IT                                03590
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03591
         BNE   OUTERR         NO - ERROR                                 03592
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                    03593
         BZ    WRITE3         NO                                         03594
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER     03595
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE  03596
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03597
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03598
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                  03599
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03600
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03601
         EXCP  OUTIOB         WRITE IT                                   03602
         WAIT  ECB=OUTECB     WAIT FOR IT                                03603
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03604
         BNE   OUTERR         NO - ERROR                                 03605
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                    03606
         BZ    WRITE4         NO                                         03607
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER     03608
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE  03609
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03610
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03611
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                  03612
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03613
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03614
         EXCP  OUTIOB         WRITE IT                                   03615
         WAIT  ECB=OUTECB     WAIT FOR IT                                03616
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03617
         BNE   OUTERR         NO - ERROR                                 03618
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                    03619
         BZ    WRITE5         NO                                         03620
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER     03621
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE  03622
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03623
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03624
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                  03625
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03626
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03627
         EXCP  OUTIOB         WRITE IT                                   03628
         WAIT  ECB=OUTECB     WAIT FOR IT                                03629
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03630
         BNE   OUTERR         NO - ERROR                                 03631
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                    03632
         BZ    WRITE6         NO                                         03633
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER     03634
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE  03635
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03636
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03637
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                  03638
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03639
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03640
         EXCP  OUTIOB         WRITE IT                                   03641
         WAIT  ECB=OUTECB     WAIT FOR IT                                03642
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03643
         BNE   OUTERR         NO - ERROR                                 03644
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                    03645
         BZ    WRITE7         NO                                         03646
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER     03647
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE  03648
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03649
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03650
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                  03651
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03652
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03653
         EXCP  OUTIOB         WRITE IT                                   03654
         WAIT  ECB=OUTECB     WAIT FOR IT                                03655
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03656
         BNE   OUTERR         NO - ERROR                                 03657
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                    03658
         BZ    WRITE8         NO                                         03659
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER     03660
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE  03661
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03662
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03663
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                  03664
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03665
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03666
         EXCP  OUTIOB         WRITE IT                                   03667
         WAIT  ECB=OUTECB     WAIT FOR IT                                03668
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03669
         BNE   OUTERR         NO - ERROR                                 03670
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                    03671
         BZ    WRITE9         NO                                         03672
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER     03673
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE  03674
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03675
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03676
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                  03677
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03678
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03679
         EXCP  OUTIOB         WRITE IT                                   03680
         WAIT  ECB=OUTECB     WAIT FOR IT                                03681
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03682
         BNE   OUTERR         NO - ERROR                                 03683
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                    03684
         BZ    WRITE10        NO                                         03685
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER     03686
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE  03687
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03688
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03689
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                  03690
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03691
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03692
         EXCP  OUTIOB         WRITE IT                                   03693
         WAIT  ECB=OUTECB     WAIT FOR IT                                03694
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03695
         BNE   OUTERR         NO - ERROR                                 03696
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                    03697
         BZ    WRITE11        NO                                         03698
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER     03699
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE  03700
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03701
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03702
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                  03703
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03704
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03705
         EXCP  OUTIOB         WRITE IT                                   03706
         WAIT  ECB=OUTECB     WAIT FOR IT                                03707
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03708
         BNE   OUTERR         NO - ERROR                                 03709
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                    03710
         BZ    WRITE12        NO                                         03711
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER     03712
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE  03713
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03714
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03715
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                  03716
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03717
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03718
         EXCP  OUTIOB         WRITE IT                                   03719
         WAIT  ECB=OUTECB     WAIT FOR IT                                03720
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03721
         BNE   OUTERR         NO - ERROR                                 03722
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                    03723
         BZ    WRITE13        NO                                         03724
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER     03725
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE  03726
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03727
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03728
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                  03729
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03730
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03731
         EXCP  OUTIOB         WRITE IT                                   03732
         WAIT  ECB=OUTECB     WAIT FOR IT                                03733
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03734
         BNE   OUTERR         NO - ERROR                                 03735
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                    03736
         BZ    WRITE14        NO                                         03737
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER     03738
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE  03739
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03740
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03741
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                  03742
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03743
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03744
         EXCP  OUTIOB         WRITE IT                                   03745
         WAIT  ECB=OUTECB     WAIT FOR IT                                03746
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03747
         BNE   OUTERR         NO - ERROR                                 03748
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                    03749
         BZ    WRITE15        NO                                         03750
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER     03751
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE  03752
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03753
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03754
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                  03755
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03756
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03757
         EXCP  OUTIOB         WRITE IT                                   03758
         WAIT  ECB=OUTECB     WAIT FOR IT                                03759
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03760
         BNE   OUTERR         NO - ERROR                                 03761
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                    03762
         BZ    WRITE16        NO                                         03763
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER     03764
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE  03765
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03766
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03767
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                  03768
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03769
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03770
         EXCP  OUTIOB         WRITE IT                                   03771
         WAIT  ECB=OUTECB     WAIT FOR IT                                03772
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03773
         BNE   OUTERR         NO - ERROR                                 03774
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                    03775
         BZ    WRITE17        NO                                         03776
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER     03777
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE  03778
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03779
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03780
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                  03781
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03782
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03783
         EXCP  OUTIOB         WRITE IT                                   03784
         WAIT  ECB=OUTECB     WAIT FOR IT                                03785
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03786
         BNE   OUTERR         NO - ERROR                                 03787
WRITE17  DS    0H                                                        03788
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?               03789
         BNE   WR17NTPM       No. Don't correct bytes moved field        03790
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field    03791
WR17NTPM DS    0H                                                        03792
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                         03793
         BO    ENDINPUT       YES. CLOSE.                                03794
         TM    FLAG2A,EOV     END OF INPUT?                              03795
         BO    ENDINPUT       YES - QUIT                                 03796
         B     READIN         NO - LOOP                                  03797
         SPACE 3                                                         03798
*                                                                        03799
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                             03800
*                                                                        03801
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                                03802
         BZ    INERR1         NO - ASSUME DATA CHECK                     03803
         ADRSMS                                                          03804
         MVC   LINE(133),INEQC  SET ERROR MESSAGE                        03805
         MVC   INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR        03806
         DROPMS                                                          03807
         B     INERR2         CONTINUE                                   03808
INERR1   DS    0H                                                        03809
         ADRSMS                                                          03810
         MVC   LINE(133),INDCK  SET ERROR MESSAGE                        03811
         MVC   INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR        03812
         DROPMS                                                          03813
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                        03814
         MVI   INECB,X'00'    RESET ECB                                  03815
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X 03816
               6,INECB,ROUTCDE=(3)                                       03817
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE       03818
*                             WHO CARES WHAT THE REPLY IS                03819
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                      03820
         B     CLOSMALL                                                  03821
*        ABEND 69             QUIT                                       03822
         SPACE 3                                                         03823
*                                                                        03824
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY      03825
*                                                                        03826
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG       03827
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE                      03828
         TM    OUTCSW+4,X'02' UNIT CHECK?                                03829
         BO    OUTERUC        YES. HANDLE IT.                            03830
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                   03831
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                     03832
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION       03833
         MVFMS LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE       03834
         B     OUTERR2            GO FILL IN REST OF THE INFO            03835
OUTERUC  DS    0H                                                        03836
         MVFMS LINE(133),OUTEQC  SET ERROR MESSAGE                       03837
         B     OUTERR2        CONTINUE                                   03838
OUTERR1  DS    0H                                                        03839
         MVFMS LINE(133),OUTDCK  SET ERROR MESSAGE                       03840
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                             03841
         L     R5,16          R5=CVT                                     03842
         L     R5,0(,R5)      R5=TCB WORDS                               03843
         L     R5,4(,R5)      R5=MY TCB                                  03844
         L     R5,12(,R5)     R5=TIOT                                    03845
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT              03846
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                  03847
         MVC   SAVDDN(5),4(R4)   Save DDNAME                             03848
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                     03849
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE           03850
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE                03851
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE                     03852
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB                 03853
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY          03854
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE       03855
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                 03856
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO                       03857
         MVC   SAVELINE(133),LINE                                        03858
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03859
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.      03860
         MVC   LINE(133),LINE-1      CLEAR LINE                          03861
         MVFMS LINE(133),OUTCOUNT    How much was copied?                03862
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE   03863
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE              03864
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE        03865
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE              03866
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ        03867
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP      03868
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL          *  03869
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03870
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                 03871
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ       03872
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ          03873
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             03874
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03875
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS            03876
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    03877
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE           03878
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ        03879
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                 03880
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             03881
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           03882
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  03883
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER                03884
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            03885
         AP    QWORD,DWORD        AND ADD IT IN                          03886
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN               03887
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE              03888
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03889
* ---- >    WTO on a Unit Exception   < ---- Below                       03890
         TM    PARMFLG5,X'40'   Do we WTO on a Unit Exception?           03891
         BO    OUTERR2A         Yes. WTO anyway, as of old.              03892
* ---- >    WTO on a Unit Exception   < ---- Above                       03893
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY           03894
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE             03895
*                               THIS IS A SEMI-NORMAL CONDITION          03896
*                               AND WHY INVOLVE THE OPERATOR?            03897
OUTERR2A MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR    03898
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                  03899
OUTERR4  DS    0H                                                        03900
         OI    OUTERFLG,X'01'    SHOW THIS WTOR WAS ISSUED               03901
         WTOR  '                                                       X 03902
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)       03903
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                 03904
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                           03905
         BNE   OUTERR3        NO - TRY AGAIN                             03906
* ------------------------------------------------------------------- *  03907
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   *  03908
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             *  03909
* ------------------------------------------------------------------- *  03910
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB              03911
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                 03912
*                             DON'T BOTHER WAITING FOR REWIND            03913
* ------------------------------------------------------------------- *  03914
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR           03915
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                        03916
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03917
         BNE   OUTERR5        NO                                         03918
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03919
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                 03920
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                        03921
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03922
         BNE   OUTERR6        NO                                         03923
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03924
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                 03925
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                        03926
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03927
         BNE   OUTERR7        NO                                         03928
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03929
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                 03930
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                        03931
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03932
         BNE   OUTERR8        NO                                         03933
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03934
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                 03935
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                        03936
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03937
         BNE   OUTERR9        NO                                         03938
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03939
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                 03940
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                        03941
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03942
         BNE   OUTERR10       NO                                         03943
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03944
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                 03945
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                        03946
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03947
         BNE   OUTERR11       NO                                         03948
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03949
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                 03950
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                        03951
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03952
         BNE   OUTERR12       NO                                         03953
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03954
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                 03955
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                        03956
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03957
         BNE   OUTERR13       NO                                         03958
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03959
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                 03960
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                       03961
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03962
         BNE   OUTERR14       NO                                         03963
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03964
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                 03965
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                       03966
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03967
         BNE   OUTERR15       NO                                         03968
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03969
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                 03970
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                       03971
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03972
         BNE   OUTERR16       NO                                         03973
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03974
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                 03975
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                       03976
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03977
         BNE   OUTERR17       NO                                         03978
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03979
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                 03980
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                       03981
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03982
         BNE   OUTERR18       NO                                         03983
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03984
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                 03985
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                       03986
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03987
         BNE   OUTERR19       NO                                         03988
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03989
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                 03990
*                             THEN IT MUST BE OUTPUT 16                  03991
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03992
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                 03993
         SPACE 3                                                         03994
*                                                                        03995
*  END OF INPUT -- FINISH UP                                             03996
*                                                                        03997
ENDINPUT DS    0H                                                        03998
         SPACE 3                                                         03999
* --- READ ONLY CODE ----------------------------------------         *  04000
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                *  04001
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE               *  04002
         MVFMS LINE(133),SUCCESSR    MOVE READ-ONLY MESSAGE           *  04003
         B     ENDIN16          WRITE OUT MESSAGE                     *  04004
* --- READ ONLY CODE ----------------------------------------         *  04005
ENDIN0   DS    0H                                                        04006
         MVFMS LINE(133),SUCCESS  MOVE MESSAGE TO LINE                   04007
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                       04008
         BO    ENDIN1         YES - CONTINUE                             04009
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                   04010
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                       04011
         BO    ENDIN2         YES - CONTINUE                             04012
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                 04013
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                       04014
         BO    ENDIN3         YES - CONTINUE                             04015
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                 04016
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                       04017
         BO    ENDIN4         YES - CONTINUE                             04018
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                 04019
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                       04020
         BO    ENDIN5         YES - CONTINUE                             04021
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                  04022
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                       04023
         BO    ENDIN6         YES - CONTINUE                             04024
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                   04025
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                       04026
         BO    ENDIN7         YES - CONTINUE                             04027
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                   04028
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                        04029
         BO    ENDIN8         YES - CONTINUE                             04030
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                   04031
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                        04032
         BO    ENDIN9         YES - CONTINUE                             04033
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                   04034
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                        04035
         BO    ENDIN10        YES - CONTINUE                             04036
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                   04037
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                        04038
         BO    ENDIN11        YES - CONTINUE                             04039
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                   04040
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                        04041
         BO    ENDIN12        YES - CONTINUE                             04042
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                   04043
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                        04044
         BO    ENDIN13        YES - CONTINUE                             04045
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                   04046
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                        04047
         BO    ENDIN14        YES - CONTINUE                             04048
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                   04049
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                        04050
         BO    ENDIN15        YES - CONTINUE                             04051
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                   04052
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                        04053
         BO    ENDIN16        YES - CONTINUE                             04054
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                  04055
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                   04056
         SPACE 3                                                         04057
*                                                                        04058
*  CLOSE ALL FILES                                                       04059
*                                                                        04060
CLOSMALL DS    0H                                                        04061
*        B     OUTERR        REMOVE - REMOVE - REMOVE                    04062
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *              04063
         TM    PARMFLG3,X'04'    COUNTING BYTES?                         04064
         BZ    ENDINTOT          NO - SKIP ROUTINE                       04065
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES               04066
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           04067
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        04068
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   04069
         CVD   R5,DWORD          LOW ORDER WORD                          04070
         AP    QWORD,DWORD       AND ADD IT IN                           04071
         ADRSMS                                                          04072
         ED    TOTBPATT,QWORD+6          MAKE NUMBER DISPLAYABLE         04073
         PTMSN TOTBLINE                                                  04074
         DROPMS                                                          04075
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS     04076
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           04077
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        04078
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   04079
         CVD   R5,DWORD          LOW ORDER WORD                          04080
         AP    QWORD,DWORD       AND ADD IT IN                           04081
         ADRSMS                                                          04082
         ED    TOTLPATT,QWORD+6          MAKE NUMBER DISPLAYABLE         04083
         PTMSN TOTLLINE                                                  04084
         DROPMS                                                          04085
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES      04086
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           04087
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        04088
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   04089
         CVD   R5,DWORD          LOW ORDER WORD                          04090
         AP    QWORD,DWORD       AND ADD IT IN                           04091
         ADRSMS                                                          04092
         ED    TOTWPATT,QWORD+6          MAKE NUMBER DISPLAYABLE         04093
         PTMSN TOTWLINE                                                  04094
         DROPMS                                                          04095
         MVI   LINE,C' '                                                 04096
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          04097
ENDINTOT DS    0H                                                        04098
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *              04099
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - *  04100
         TM    LBLFLAG,X'08'         HAVE WE COPIED AN INITTED TAPE?     04101
         BZ    NOINITT3              NOPE. DON'T REPORT IT EITHER.       04102
         TM    PARMFLG2,X'08'        IS THIS RUN READ-ONLY?              04103
         BO    NOINITT3              YES. DON'T PRINT COPY MESSAGE       04104
         ADRSMS                                                          04105
         MVC   INITSER(6),INVOLUME   MOVE IN VOLSER FROM VOL1            04106
         PTMSN INITMSG               MSG-WE'RE DOING INITTED TAPE        04107
         DROPMS                                                          04108
NOINITT3 DS    0H                                                        04109
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - *  04110
         TM    PARMFLG3,X'01'   INIT ONLY?                               04111
         BO    NOCLOSIN                                                  04112
         TM    PARMFLG5,X'01'   INIT ASCII LEVEL 3?                      04113
         BO    NOCLOSIN                                                  04114
         TM    PARMFLG5,X'02'   INIT ASCII LEVEL 4?                      04115
         BO    NOCLOSIN                                                  04116
         CLOSE (IN)                                                      04117
NOCLOSIN DS    0H                                                        04118
         CLOSE (SYSPRINT)                                                04119
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?                    *  04120
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE                  *  04121
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    04122
         CLOSE (LABLDUMP)                                                04123
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE            04124
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                        04125
         BZ    NOLABACL         NO. NO FILE TO CLOSE                     04126
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                        04127
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                     04128
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    04129
         CLOSE (LABADDIN)                                                04130
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE        04131
* --- READ ONLY CODE ----------------------------------------         *  04132
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                *  04133
         BO    THEEND     YES. ONLY CLOSE INPUT AND SYSPRINT.         *  04134
* --- READ ONLY CODE ----------------------------------------         *  04135
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                             04136
         BZ    CLOSE1         NO                                         04137
         CLOSE (OUT1)         CLOSE OUTPUT 1                             04138
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                             04139
         BZ    CLOSE2         NO                                         04140
         CLOSE (OUT2)         CLOSE OUTPUT 2                             04141
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                             04142
         BZ    CLOSE3         NO                                         04143
         CLOSE (OUT3)         CLOSE OUTPUT 3                             04144
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                             04145
         BZ    CLOSE4         NO                                         04146
         CLOSE (OUT4)         CLOSE OUTPUT 4                             04147
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                             04148
         BZ    CLOSE5         NO                                         04149
         CLOSE (OUT5)         CLOSE OUTPUT 5                             04150
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                             04151
         BZ    CLOSE6         NO                                         04152
         CLOSE (OUT6)         CLOSE OUTPUT 6                             04153
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                             04154
         BZ    CLOSE7         NO                                         04155
         CLOSE (OUT7)         CLOSE OUTPUT 7                             04156
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                             04157
         BZ    CLOSE8         NO                                         04158
         CLOSE (OUT8)         CLOSE OUTPUT 8                             04159
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                             04160
         BZ    CLOSE9         NO                                         04161
         CLOSE (OUT9)         CLOSE OUTPUT 9                             04162
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                            04163
         BZ    CLOSE10        NO                                         04164
         CLOSE (OUT10)        CLOSE OUTPUT 10                            04165
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                            04166
         BZ    CLOSE11        NO                                         04167
         CLOSE (OUT11)        CLOSE OUTPUT 11                            04168
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                            04169
         BZ    CLOSE12        NO                                         04170
         CLOSE (OUT12)        CLOSE OUTPUT 12                            04171
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                            04172
         BZ    CLOSE13        NO                                         04173
         CLOSE (OUT13)        CLOSE OUTPUT 13                            04174
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                            04175
         BZ    CLOSE14        NO                                         04176
         CLOSE (OUT14)        CLOSE OUTPUT 14                            04177
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                            04178
         BZ    CLOSE15        NO                                         04179
         CLOSE (OUT15)        CLOSE OUTPUT 15                            04180
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                            04181
         BZ    THEEND         NO                                         04182
         CLOSE (OUT16)        CLOSE OUTPUT 16                            04183
         SPACE 3                                                         04184
*                                                                        04185
*  Test for ABEND 069 first.  Did we come from an Input Error?           04186
*                                                                        04187
         TM    ABENDFLG,X'01'    Is ABEND flag on?                       04188
         BZ    THEEND            No.  End normally.                      04189
         ABEND 69                QUIT                                    04190
*                                                                        04191
*  THE END                                                               04192
*                                                                        04193
THEEND   DS    0H                                                        04194
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                 04195
         BO    THEEND0           YES WE DO.  Issue RC = 0.               04196
         MVFMS WTOCBT+16(41),FILEDONE                                    04197
WTOCBT   WTO   'CBT990                                              '    04198
THEENDS  DS    0H                                                        04199
         TM    OUTERFLG,X'01'   WTOR ISSUED AT LEAST ONCE?               04200
         BO    THEEND16         Yes, issue RC = 16                       04201
         TM    FLAG2A,ERR       WAS THERE AN ERROR?                      04202
         BO    THEEND8          Yes, issue RC = 8                        04203
         B     THEEND0          Otherwise, issue RC = 0                  04204
THEEND16 DS    0H                                                        04205
         L     R13,4(,R13)                                               04206
         MVC   16(4,R13),=F'16'         Return code 16    in R15         04207
         B     THEEND2                                                   04208
THEEND8  DS    0H                                                        04209
         L     R13,4(,R13)                                               04210
         MVC   16(4,R13),=F'8'          Return code 8     in R15         04211
         B     THEEND2                                                   04212
THEEND0  DS    0H                                                        04213
         L     R13,4(,R13)                                               04214
         MVC   16(4,R13),=F'0'          Return code 0     in R15         04215
THEEND2  DS    0H                                                        04216
         LM    R14,R12,12(R13)                                           04217
         BR    R14                                                       04218
         EJECT                                                           04219
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *      04220
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      04221
*    BAL REGISTER IS R4.                                                 04222
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      04223
HEX      DS    0H                                                        04224
         MVC   1(1,R15),0(R1)        Move byte                           04225
         UNPK  0(3,R15),1(2,R15)     Unpack                              04226
         TR    0(2,R15),HEXTAB-240                                       04227
         LA    R15,2(,R15)           Increment output pointer            04228
         LA    R1,1(,R1)             Increment input pointer             04229
         BCT   R0,HEX                Decrement length, then loop         04230
         MVI   0(R15),C' '           Blank the trailing byte             04231
         BR    R4                    Return to caller                    04232
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     04233
         SPACE                                                           04234
* --------------------------------------------------------- *
*    BAL REGISTER IS R7.
* --------------------------------------------------------- *
CLRCSZMS DS    0H                Clear data fields from RECSZMSG
         ADRSMS
         MVI   RECSZFNM,X'40'
         MVC   RECSZFNM+1(4),RECSZFNM
         MVI   RECSZRCD,C'0'
         MVC   RECSZRCD+1(9),RECSZRCD
         MVI   RECSZSIZ,C'0'
         MVC   RECSZSIZ+1(9),RECSZSIZ
         DROPMS
         BR    R7
* --------------------------------------------------------- *            04235
*    BAL REGISTER IS R7.                                                 04236
* --------------------------------------------------------- *            04237
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS              04238
*                         ALTERED.                                       04239
         ADRSMS                                                          04240
         MVC   VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG           04241
         MVC   VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG           04242
         MVC   VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                 04243
         MVC   VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                 04244
* ----                                                                   04245
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS?  04246
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS             04247
         MVC   VOLALT+35(6),VOLSTG1  MOVE NEW VOLSER VALUE TO MSG        04248
INDVVOLS DS    0H                                                        04249
* ----                                                                   04250
         MVC   VOLDDN(5),LINE        CLEAR FIELD                         04251
         MVC   VOLDDN(5),VOLDD       MOVE DD NAME IN                     04252
         PTMSN VOLALT                MOVE MESSAGE TO PRT                 04253
         DROPMS                                                          04254
         BR    R7                    RETURN TO CALLER                    04255
* --------------------------------------------------------- *            04256
*    BAL REGISTER IS R7.                                                 04257
* --------------------------------------------------------- *            04258
PRTBLCNT DS    0H                                                        04259
         PTMS  BLKCNTMS              MESSAGE TO PRINT LINE               04260
PRTBLCNE BR    R7                                                        04261
* --------------------------------------------------------- *            04262
*    BAL REGISTER IS R7.                                                 04263
* --------------------------------------------------------- *            04264
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS         04265
         ST    R7,SAVE7REG                                               04266
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                  04267
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET    04268
         MVC   OUTCCWPT(4),=A(BACKCCW)                                   04269
BACKEXT1 L     R7,SAVE7REG                                               04270
BACKEXTE BR    R7                                                        04271
* --------------------------------------------------------- *            04272
*    BAL REGISTER IS R7.                                                 04273
* --------------------------------------------------------- *            04274
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS       04275
         ST    R7,SAVE7REG                                               04276
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         04277
         BZ    CLEARSV1                 NO. BYPASS CLEAR                 04278
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                 04279
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                          04280
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                       04281
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                       04282
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                    04283
CLEARSV1 L     R7,SAVE7REG                                               04284
CLEARSVE BR    R7                                                        04285
* --------------------------------------------------------- *            04286
*    BAL REGISTER IS R7.                                                 04287
* --------------------------------------------------------- *            04288
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE       04289
         ST    R7,SAVE7REG                                               04290
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         04291
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION           04292
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *   04293
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2          04294
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX      04295
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?           04296
         BZ    FIXALL3                                                   04297
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?              04298
         BZ    FIXLAST2                                                  04299
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                       04300
         BZ    FIXLAST1                                                  04301
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR       04302
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *   04303
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2              04304
         L     R7,SAVE7REG                                               04305
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG    04306
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                    04307
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                           04308
         L     R7,SAVE7REG                                               04309
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE   04310
FIXLAST1 DS    0H               REPLACE EOF2                             04311
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                           04312
         L     R7,SAVE7REG                                               04313
         B     ADDEOF2          CREATE THE EOF2                          04314
FIXEXTL1 DS    0H                                                        04315
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                      04316
         L     R7,SAVE7REG                                               04317
FIXEXTLE BR    R7                                                        04318
* --------------------------------------------------------- *            04319
*    BAL REGISTER IS R7.                                                 04320
* --------------------------------------------------------- *            04321
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT      04322
*                             IOS USES DURING EXCP PROCESSING.           04323
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.    04324
* ------------------------------------------------------------------- *  04325
         MVC   OUTIOB(4),IOB01                                           04326
         MVC   OUTCSW(8),FUL2ZERO                                        04327
         MVC   OUTDCBPT(4),FUL2ZERO                                      04328
         MVC   OUTDCBPT+4(4),FUL2ZERO                                    04329
         MVC   OUTDCBPT+8(4),IOB02                                       04330
CLEARIOE BR    R7                                                        04331
* --------------------------------------------------------- *            04332
*    BAL REGISTER IS R7.                                                 04333
* --------------------------------------------------------- *            04334
CHANGVOL DS    0H             PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL  04335
* ----------------------------------  PROCESS CHGVOL KEYWORD          *  04336
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?    04337
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                  04338
         TM    LBLFLAG,X'04'  ARE WE WRITING A VOL1 LABEL?            *  04339
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                04340
         TM    LBLFLAG,X'03'  IS THIS A HDR1 OR A HDR2?                  04341
         BNZ   CHANGVOE       NO. DON'T ATTEMPT TO CHANGE THIS.          04342
         TM    PARMFLG2,X'41' ARE WE CHANGING OUTPUT VOLSERS?         *  04343
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                04344
* -- >>                                                                  04345
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              04346
         BZ    CHEBCVID             NO. NO TRANSLATION OF VOLSER         04347
         ST    R5,R5HXPRT           Save register.                       04348
         L     R5,SAVTRTCS          Point to translation table CSECT.    04349
         USING TRTCSECT,R5                                               04350
         MVC   VOLASC(6),VOLCHG                                          04351
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.           04352
         DROP  R5                                                        04353
         MVC   INAREA+4(6),VOLASC   Use ASCII volser to replace          04354
         B     CHASCVID             And not the EBCDIC one.              04355
CHEBCVID MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                       04356
CHASCVID DS    0H                                                        04357
* -- >>                                                                  04358
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  04359
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION        04360
         CLI   TAPEOWN,C' '   IS THERE A TAPEOWNER VALUE                 04361
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE   04362
* -- >>                                                                  04363
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              04364
         BZ    CHEBCTOW             NO. NO TRANSLATION OF VOLSER         04365
         ST    R5,R5HXPRT           Save register.                       04366
         L     R5,SAVTRTCS          Point to translation table CSECT.    04367
         USING TRTCSECT,R5                                               04368
         MVC   TAPEOASC(14),TAPEOWN                                      04369
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.      04370
         DROP  R5                                                        04371
         MVC   INAREA+37(14),TAPEOASC    ASCII ownerid to replace        04372
         B     CHASCTOW                  And not the EBCDIC one.         04373
CHEBCTOW DS    0H                                                        04374
         MVC   INAREA+41(10),TAPEOWN     Move EBCDIC tape owner          04375
CHASCTOW DS    0H                                                        04376
* -- >>                                                                  04377
         MVC   LINE(133),LINE-1                                          04378
         ADRSMS                                                          04379
         MVC   OWNRTID(14),LINE          CLEAR FIELD                     04380
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        04381
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     04382
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     04383
         PTMSN OWNRMSG                                                   04384
         DROPMS                                                          04385
CHNOTOWN DS    0H                                                        04386
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS      04387
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS             04388
CHEXTLAB DS    0H                                                        04389
         TM    PARMFLG5,X'03'      ARE WE INITTING ASCII TAPES?          04390
         BZ    CHEXTGO1            NO. DO ORDINARY PROCESSING            04391
         B     CHANGASC            YES. GO TO SPECIAL ROUTINE.           04392
CHEXTGO1 TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?        04393
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN             04394
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           04395
         BO    CHNOZAPV            YES, SKIP SECOND WRITE                04396
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                   04397
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                 04398
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?               04399
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.           04400
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?       04401
         BZ    CHNOZAPV            NO. BYPASS.                           04402
* -- >>                                                                  04403
         TM    ASCIIFLG,X'01'                                            04404
         BO    CHASCVE1                                                  04405
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              04406
         BZ    CHEBCVEX             NO. NO TRANSLATION OF VOLSER         04407
CHASCVE1 DS    0H                                                        04408
         ST    R5,R5HXPRT           Save register.                       04409
         L     R5,SAVTRTCS          Point to translation table CSECT.    04410
         USING TRTCSECT,R5                                               04411
         MVC   VOLASC(6),VOLCHG                                          04412
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.           04413
         DROP  R5                                                        04414
         MVC   EXTLBLIN+4(6),VOLASC Use ASCII volser to replace          04415
         B     CHASCVEX             And not the EBCDIC one.              04416
CHEBCVEX MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    04417
CHASCVEX DS    0H                                                        04418
* -- >>                                                                  04419
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  04420
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION        04421
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       04422
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE           04423
* -- >>                                                                  04424
         TM    ASCIIFLG,X'01'                                            04425
         BO    CHASCVE2                                                  04426
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              04427
         BZ    CHEBCTEX             NO. NO TRANSLATION OF VOLSER         04428
CHASCVE2 DS    0H                                                        04429
         ST    R5,R5HXPRT           Save register.                       04430
         L     R5,SAVTRTCS          Point to translation table CSECT.    04431
         USING TRTCSECT,R5                                               04432
         MVC   TAPEOASC(14),TAPEOWN                                      04433
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.      04434
         DROP  R5                                                        04435
         MVC   EXTLBLIN+37(14),TAPEOASC  ASCII ownerid to replace        04436
         B     CHASCTEX                  And not the EBCDIC one.         04437
CHEBCTEX DS    0H                                                        04438
         MVC   EXTLBLIN+41(10),TAPEOWN   Move EBCDIC tape owner          04439
CHASCTEX DS    0H                                                        04440
* -- >>                                                                  04441
         MVC   LINE(133),LINE-1                                          04442
         ADRSMS                                                          04443
         MVC   OWNRTID(14),LINE          CLEAR FIELD                     04444
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        04445
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     04446
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     04447
         PTMSN OWNRMSG                                                   04448
         DROPMS                                                          04449
CHNOZAPV DS    0H                                                        04450
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS             04451
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           04452
         BO    CHGWRIT             YES, SKIP SECOND WRITE                04453
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             04454
         BO    CHGPRINT            YES, PRINT.                           04455
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       04456
         BO    CHGPRINT            YES, PRINT                            04457
         B     CHGWRIT                                                   04458
CHGPRINT DS    0H                                                        04459
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  04460
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        04461
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   04462
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        04463
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   04464
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            04465
         TM    EXASCFLG,X'01'                                            04466
         BZ    CHGPRANT                                                  04467
         ST    R5,R5HXPRT        Save register.                          04468
         L     R5,SAVTRTCS       Point to translation table CSECT.       04469
         USING TRTCSECT,R5                                               04470
         TR    VOLORIG(6),TRTA2E   Translate VOLSER to EBCDIC            04471
         ST    R7,SAVE7RG5                                               04472
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED         *  04473
         L     R7,SAVE7RG5                                               04474
         TR    VOLORIG(6),TRTE2A   Translate VOLSER to ASCII             04475
         L     R5,R5HXPRT        Restore register.                       04476
         DROP  R5                                                        04477
         B     CHGWRIT                                                   04478
CHGPRANT DS    0H                                                        04479
         ST    R7,SAVE7RG5                                               04480
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED         *  04481
         L     R7,SAVE7RG5                                               04482
CHGWRIT  DS    0H                                                     *  04483
* ----------------------------------  PROCESS CHGVOL KEYWORD          *  04484
CHANGVOE BR    R7                  END OF ROUTINE - RETURN               04485
         SPACE 3                                                         04486
CHANGASC DS    0H             PROCESS CHANGE VOLUME INFO TO INIT ASCII   04487
* ----------------------------------  PROCESS CHGVOL KEYWORD          *  04488
*    X'01' OF WRITE LABEL FLAG IS ASSUMED TO BE ON AT THIS POINT.        04489
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       04490
CHASCLAB DS    0H                                                        04491
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           04492
         BO    CHNOASCV            YES, SKIP SECOND WRITE                04493
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    04494
         MVC   EXTLBLIN(4),AVOL1LIT                                      04495
         TM    PARMFLG5,X'01'      INITTING ASCII LEVEL 3?               04496
         BO    CHASCLX1            YES. KEEP LEVEL 3 INDICATOR.          04497
         MVI   AVOL1LVL,C'4'       NO. INSERT LEVEL 4 INDICATOR.         04498
CHASCLX1 DS    0H                                                        04499
         MVC   EXTLBLIN+79(1),AVOL1LVL   MOVE IN SYSTEM LEVEL FOR ANSI   04500
         TM    PARMFLG2,X'40'      IS OUTVOL PARM IN EFFECT              04501
         BZ    CHNOASCV            NO. DON'T CHANGE OWNER INFORMATION    04502
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       04503
         BE    CHNOASCV            NO INFO-THEREFORE NO CHANGE           04504
         MVC   EXTLBLIN+37(14),TAPEOWN    CHANGE TAPE OWNER TOO          04505
         MVC   LINE(133),LINE-1                                          04506
         ADRSMS                                                          04507
         MVC   OWNRTID(14),LINE          CLEAR FIELD                     04508
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        04509
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     04510
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     04511
         PTMSN OWNRMSG                                                   04512
         DROPMS                                                          04513
CHNOASCV DS    0H                                                        04514
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       04515
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           04516
         BO    CHGWRASX            YES, SKIP SECOND WRITE                04517
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             04518
         BO    CHGASPRT            YES, PRINT.                           04519
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       04520
         BO    CHGASPRT            YES, PRINT                            04521
         B     CHGWRAS                                                   04522
CHGASPRT DS    0H                                                        04523
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  04524
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        04525
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   04526
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        04527
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   04528
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            04529
         ST    R7,SAVE7RG5                                               04530
         BAL   R7,VOL1PRT          PRINT MESSAGE THAT VOLSER CHANGED     04531
         L     R7,SAVE7RG5                                               04532
         B     CHGWRAS                                                   04533
CHGWRASX DS    0H                                                        04534
         MVC   EXTLBLIN+60(20),AHDR1OSC     Refresh IBMZLA literal       04535
         MVC   EXTLBLIN+4(23),AHDR1ID1      Refresh Dummy Fileid etc.    04536
CHGWRAS  DS    0H                                                        04537
         ST    R5,R5HXPRT        Save register.                          04538
         L     R5,SAVTRTCS       Point to translation table CSECT.       04539
         USING TRTCSECT,R5                                               04540
         TR    EXTLBLIN(80),TRTE2A   Translate entire label to ASCII.    04541
         DROP  R5                                                        04542
         L     R5,R5HXPRT        Restore register.                       04543
CHASCEND BR    R7                  END OF ROUTINE - RETURN               04544
         SPACE 3                                                         04545
* --------------------------------------------------------- *            04546
*    BAL REGISTER IS R7.                                                 04547
* --------------------------------------------------------- *            04548
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                  04549
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED          04550
* --------------------------------------------------------- *            04551
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE             04552
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER               04553
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER               04554
         AR    R5,R2               ADD TO BYTE COUNT                     04555
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH              04556
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD           04557
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                   04558
ADDCNOOV DS    0H                                                        04559
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE        04560
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE        04561
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN               04562
* --------------------------------------------------------- *            04563
*    BAL REGISTER IS R7.                                                 04564
* --------------------------------------------------------- *            04565
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            04566
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              04567
* --------------------------------------------------------- *            04568
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          04569
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04570
         BE    MOVEHI09                                                  04571
         MVC   0(4,R3),0(R2)                                             04572
         B     MOVEHIEN                                                  04573
         LA    R2,1(,R2)                                                 04574
         LA    R3,1(,R3)                                                 04575
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04576
         BE    MOVEHI08                                                  04577
         MVC   0(3,R3),0(R2)                                             04578
         B     MOVEHIEN                                                  04579
         LA    R2,1(,R2)                                                 04580
         LA    R3,1(,R3)                                                 04581
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04582
         BE    MOVEHI07                                                  04583
         MVC   0(2,R3),0(R2)                                             04584
         B     MOVEHIEN                                                  04585
         LA    R2,1(,R2)                                                 04586
         LA    R3,1(,R3)                                                 04587
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04588
         BE    MOVEHIEN                                                  04589
         MVC   0(1,R3),0(R2)                                             04590
MOVEHIEN BR    R7                                                        04591
* --------------------------------------------------------- *            04592
*    BAL REGISTER IS R7.                                                 04593
* --------------------------------------------------------- *            04594
****                                                                     04595
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                             04596
****                                                                     04597
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                 04598
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                    04599
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,      04600
****                      THEN BACK SPACE FILE OVER TAPE MARK.           04601
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR         04602
****                                                                     04603
* --------------------------------------------------------- *            04604
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO     04605
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04606
         EXCP  INIOB          READ                                       04607
         WAIT  ECB=INECB      WAIT FOR READ                              04608
         TM    INCSW+4,X'01'  WAS TM READ?                               04609
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.               04610
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                04611
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                  04612
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               04613
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                         04614
         L     R2,FULLWORK           LOAD FULLWORD LENGTH                04615
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               04616
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                 04617
         L     R3,FULLWORK           LOAD FULLWORD LENGTH                04618
         SR    R2,R3                 R2=ACTUAL LENGTH READ               04619
         NI    ISLBLFLG,FF-X'03'     TURN OFF "ISLABEL" FLAGS            04620
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?           04621
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE      04622
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                          04623
* ------------------------------------------------------------------*    04624
*    Call the LABELCHK program and get the returns.                 *    04625
* ------------------------------------------------------------------*    04626
         L     R15,LABCHENT       Get entry point of called program      04627
         STM   R1,R3,SAVE13LC     Save R1 and R2.                        04628
         LA    R1,PARMFLGS        Point R1 to parm flags.                04629
         LA    R2,LCHKPASS        Point R2 to user area to be passed.    04630
         L     R3,=A(INAREA)      Point R3 to address of INAREA.         04631
         BALR  R14,R15                 Do CALL.                          04632
         ST    R2,SAVELBCK             Address of returned user area     04633
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.    04634
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.           04635
*                                 A call to LABCHECK overlays INAREA,    04636
*                                 so if a LABCHECK routine alters        04637
*                                 a label, the alteration will be        04638
*                                 written out to the output tapes.       04639
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA     04640
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    04641
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?   04642
         BO    CLOSMALL           Yes. Close all files and finish up.    04643
* ------------------------------------------------------------------*    04644
*        BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE             04645
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                       04646
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?          04647
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS         04648
         TM    ISLBLFLG,X'02'                                            04649
         BO    LBDQLABL                                                  04650
*                             NORMALLY WITHOUT CHANGING ANYTHING.        04651
*                             BUT IF IT IS A DATA FILE,                  04652
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE   04653
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK          04654
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04655
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.            04656
         EXCP  INIOB          DO THIS EXCP                               04657
         WAIT  ECB=INECB      WAIT FOR READ                              04658
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04659
         BNE   LBDQINER       NO -- ERROR                                04660
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04661
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04662
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR             04663
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR     04664
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE         04665
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04666
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ      04667
         EXCP  INIOB          DO THIS EXCP                               04668
         WAIT  ECB=INECB      WAIT FOR READ                              04669
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04670
         BNE   LBDQINER       NO -- ERROR                                04671
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04672
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04673
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE          04674
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04675
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE     04676
         EXCP  INIOB          DO THIS EXCP                               04677
         WAIT  ECB=INECB      WAIT FOR READ                              04678
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04679
         BNE   LBDQINER       NO -- ERROR                                04680
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04681
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04682
LBDQREND BR    R7                                                        04683
* --------------------------------------------------------- *            04684
*    BAL REGISTER IS R7.                                                 04685
* --------------------------------------------------------- *            04686
****                                                                     04687
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.        04688
****                                                                     04689
* --------------------------------------------------------- *            04690
HEXPRINT DS    0H                Hex Print from Tape Data (INAREA)       04691
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 04692
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 04693
         NI    HEXEXFLG,FF-X'01' Turn off External Label Input Flag.     04694
         ST    R5,R5HXPRT        Save register.                          04695
         L     R5,SAVTRTCS       Point to translation table CSECT.       04696
         USING TRTCSECT,R5                                               04697
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               04698
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            04699
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        04700
         B     HEXPRNXX          Bypass Hex Print from external labels   04701
*                                                                        04702
HEXPRNEX DS    0H                Hex Print from External Label Input     04703
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 04704
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 04705
         OI    HEXEXFLG,X'01'    Turn on External Label Input Flag.      04706
         ST    R5,R5HXPRT        Save register.                          04707
         L     R5,SAVTRTCS       Point to translation table CSECT.       04708
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               04709
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            04710
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        04711
         L     R2,=F'80'         We know to print exactly 80 bytes.      04712
         B     MOVESIZ1          Now go print them.                      04713
*                                                                        04714
HEXPRNXX DS    0H                                                        04715
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT      04716
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?           04717
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.           04718
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                   04719
MOVESIZ1 DS    0H                                                        04720
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                04721
         BCTR  R2,0                ONE LESS FOR EXECUTE                  04722
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04723
         EX    R2,MOVRULER         PUT IN HEX RULER                      04724
         PUT   SYSPRINT,LINE                                             04725
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04726
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04727
         BO    HEXEX001            Yes. Move the data from EXTLBLIN.     04728
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04729
         B     HEXEN000            and continue to print.                04730
HEXEX001 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04731
HEXEN000 DS    0H                                                        04732
         TM    PARMFLG5,X'80'      Is ASCII on?                          04733
         BZ    HEXEN001            No. Use EBCDIC printables.            04734
         EX    R2,PRHEXAS          Yes. Use ASCII printables.            04735
         B     HEXENSK1                                                  04736
HEXEN001 DS    0H                                                        04737
         EX    R2,PRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      04738
HEXENSK1 DS    0H                                                        04739
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04740
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        04741
         PUT   SYSPRINT,LINE                                             04742
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04743
         BO    HEXEX002            Yes. Move the data from EXTLBLIN.     04744
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04745
         B     HEXEN002            and continue to print.                04746
HEXEX002 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04747
HEXEN002 EX    R2,PRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04748
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04749
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04750
         PUT   SYSPRINT,LINE                                             04751
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04752
         BO    HEXEX003            Yes. Move the data from EXTLBLIN.     04753
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04754
         B     HEXEN003            and continue to print.                04755
HEXEX003 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04756
HEXEN003 EX    R2,PRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04757
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04758
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04759
         PUT   SYSPRINT,LINE                                             04760
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK      04761
         B     HEXPREND                                                  04762
MOVDATEX MVC   HEXPRTWK(*-*),EXTLBLIN     ***  EXECUTED  ***             04763
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***             04764
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             04765
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             04766
PRHEXAS  TR    HEXPRTWK(*-*),TRTASPRT     ***  EXECUTED  ***             04767
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             04768
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             04769
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             04770
HEXPREND DS    0H                                                        04771
         L     R2,BYTESMVD         RESTORE R2 FOR LATER USE              04772
NOHEXPRO DS    0H                                                        04773
         L     R5,R5HXPRT                                                04774
         DROP  R5                                                        04775
         BR    R7             RETURN TO CALLER                           04776
* --------------------------------------------------------- *            04777
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - -         *  04778
         EJECT                                                           04779
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - *  04780
SAVE1TO5 DC    5F'0'                                                     04781
SAVE1RG1 DC    F'0'                                                      04782
SAVER2A  DC    F'0'
MAXBLK   DC    F'0'           Maximum Blocksize for file                 04783
MINBLK   DC    F'0'           Minimum Blocksize for file                 04784
FILNOSAV DC    CL5' '                                                    04785
FILNOSAW DC    CL5' '         One more than FILNOSAV                     04785
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED            04786
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO           04787
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT  04788
FUL2ZERO DC    2F'0'                                                     04789
IOB01    DC    X'02000000'                                               04790
IOB02    DC    X'00010000'                                               04791
PL4NO3   DC    PL4'3'                                                    04792
BLOKCNTP DC    F'0'                                                      04793
FILECNTP DC    F'1'                                                      04794
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES       04795
TOTBYH   DC    F'0'                                                      04796
TOTBYL   DC    F'0'                                                      04797
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES  04798
PRVBYH   DC    F'0'                                                      04799
PRVBYL   DC    F'0'                                                      04800
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE        04801
DBINFH   DC    F'0'                                                      04802
DBINFL   DC    F'0'                                                      04803
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL       04804
DBINH    DC    F'0'                                                      04805
DBINL    DC    F'0'                                                      04806
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS      04807
LABINH   DC    F'0'                                                      04808
LABINL   DC    F'0'                                                      04809
WORKA    DC    D'0'                                                      04810
WORKL    DC    D'0'                                                      04811
WORKP    DC    D'0'                                                      04812
SAV01MLT DC    D'0'                                                      04813
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     04814
HEXSAVE  DS    3F                    Register save for HEX macro         04815
BLOKCNT  DC    F'0'                                                      04816
FILECNT  DC    F'1'                                                      04817
LABELCNT DC    F'0'                                                      04818
SAVUNIT  DC    CL4' '                                                    04819
         DC    CL1' '         Need this to absorb blank from HEX macro   04820
SAVDDN   DC    CL5' '                                                    04821
SAVVOLSR DC    CL6' '                                                    04822
         DC    C'0'
BLKCNTRN DC    C'0000000000'  SAVE RUNNING BLOCK COUNT FOR DATA FILES
         DC    C'0'
BMOVEDRN DC    C'0000000000'  SAVE RUNNING BLOCK COUNT FOR DATA FILES
SAVBYTES DC    X'0000'                                                   04823
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE       04824
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT      04825
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT     04826
NOUTSFLG DC    X'00'          NO OUTxx DDs were coded in JCL             04827
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                        04828
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT  04829
INITRWFL DC    X'00'          FLAG SHOWING OUTPUT TAPES REWOUND IN INIT  04830
*              X'01'          OUTPUT TAPES HAVE BEEN REWOUND             04831
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL         04832
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE       04833
*              X'01'          TAPE IS SL                                 04834
HEXEXFLG DC    X'00'          Hex printing from INAREA.                  04835
*              X'01'          Hex printing from EXTLBLIN.                04836
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS      04837
*              X'00'          WE ARE NOW WRITING DATA FROM THE           04838
*                             INPUT TAPE. X'01' IS OFF.                  04839
*              X'01'          WE ARE NOW WRITING LABELS FROM THE         04840
*                             EXTERNAL FILE                              04841
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK          04842
*              X'04'          WE CAME FROM THE ENDHEADR LABEL            04843
*              X'08'          WE CAME FROM THE LBLINEND LABEL            04844
*                             THIS MEANS EOF OF THE LABADDIN FILE        04845
*              X'10'          FINISHED FIXING LABELS                     04846
RESLTMWF DC    X'00'                                                     04847
*              X'01'          CAME FROM RESETIN FOR LABADDIN             04848
**** ----- LABELCHK -------------------->>>>  Passed area, below         04849
*                                                                        04850
LCHKPASS DS    0H                                                        04851
*                                                                        04852
INAREAX  DC    CL80' '        Read labels into here.                     04853
         DC    CL40' '        Padding for possible overflow.             04854
* --------------------------------------------------------- *            04855
*                                                                        04856
*                                                                        04857
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       04858
*              X'00'          DATA IS NOT A LABEL                        04859
*              X'01'          DATA IS A LABEL                            04860
*              X'02'          DATA IS AN ASCII LABEL                     04861
*                                                                        04862
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               04863
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             04864
*              X'02'          BECAUSE OF SYSIN    DD MISSING             04865
*              X'04'          BECAUSE OF LABADDIN DD MISSING             04866
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                04867
*              X'01'          LABLDUMP DD IS OPEN                        04868
*              X'02'          SYSIN    DD IS OPEN                        04869
*              X'04'          LABADDIN DD IS OPEN                        04870
L80FLAG  DC    X'00'                                                     04871
*              X'01'          LAST DATA WAS 80 BYTE RECORD               04872
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN    04873
*              X'01'          HDR1 HAS BEEN SEEN                         04874
*              X'02'          HDR2 HAS BEEN SEEN                         04875
*              X'04'          VOL1 HAS BEEN SEEN                         04876
*              X'08'          HDR1 IS FROM AN INITTED TAPE               04877
*              X'10'          EOF1 HAS BEEN SEEN                         04878
*              X'20'          EOF2 HAS BEEN SEEN                         04879
*              X'40'          EOV1 HAS BEEN SEEN                         04880
*              X'80'          EOV2 HAS BEEN SEEN                         04881
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                    04882
EXASCFLG DC    X'00'          External Label is ASCII if X'01'           04883
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   04884
LABADFLG DC    X'00'          If X'01' then close LABADDIN file          04885
CLOSMFLG DC    X'00'          If X'01' then close all open files         04886
* --------------------------                                             04887
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     04888
*              X'01'          WE ARE IN A HDR GROUP                      04889
*              X'02'          WE ARE IN A EOF GROUP                      04890
*              X'04'          WE ARE IN A EOV GROUP                      04891
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND    04892
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL    04893
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES       04894
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII     04895
* ---------- *                                                           04896
* --------------------------------------------------------- *            04897
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE        04898
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           04899
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           04900
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           04901
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             04902
VOLCHG   DC    C'      '                                                 04903
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS        04904
VOLASC   DC    C'      '     ASCII VOLUME                                04905
LCHKPASE EQU   *-LCHKPASS                                                04906
**** ----- LABELCHK -------------------->>>>  Passed area, above         04907
OUTERFLG DC    X'00'          FLAG IF WTOR ISSUED BECAUSE OF AN ERROR    04908
*              X'01'          ERROR WAS PRESENT                          04909
OUTBYT   DS    0F                                                        04910
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER        04911
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE             04912
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY)  04913
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS        04914
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES         04915
LTMCNTR  DC    F'0'                                                      04916
LTMBINAD DC    F'0'                                                      04917
LTMCOUNT DC    PL6'0'                                                    04918
TWO31    DC    P'2147483648'       2 TO THE 31ST                         04919
         DC    C'      '                                                 04920
         DC    C'0'                                                      04921
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      04922
         DC    C'      '                                                 04923
DWORD    DC    D'0'                                                      04924
QWORD    DS    PL16                                                      04925
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1                *  04926
ZEROA23  DC    23X'30'        TEST FOR IEHINITTED ASCII HDR1             04927
         CNOP  0,8                                                       04928
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'                         04929
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'                         04930
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'0001'                         04931
         DC    X'03',AL3(INAREA),X'2000',X'0001'                         04932
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE 2 FILES   04933
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE ONE FILE  04934
         DC    X'03',AL3(INAREA),X'2000',X'0001'                         04935
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK     04936
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04937
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK     04938
         DC    X'3F',AL3(INAREA),X'6000',X'0001'     FWD SPACE FILE      04939
         DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACK OVER T.M.      04940
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04941
INECB    DC    F'0'                                                      04942
INIOB    DC    X'02000000'                                               04943
         DC    A(INECB)                                                  04944
INCSW    DC    2F'0'                                                     04945
INCCWPT  DC    A(INCCW)                                                  04946
         DC    A(IN)                                                     04947
         DC    F'0'                                                      04948
         DC    X'00010000'                                               04949
OUTECB   DC    F'0'                                                      04950
OUTIOB   DC    X'02000000'                                               04951
         DC    A(OUTECB)                                                 04952
OUTCSW   DC    2F'0'                                                     04953
OUTCCWPT DC    A(OUTCCW)                                                 04954
OUTDCBPT DC    A(OUT1)                                                   04955
         DC    F'0'                                                      04956
         DC    X'00010000'                                               04957
REWECB   DC    F'0'                                                      04958
REWIOB   DC    X'02000000'                                               04959
         DC    A(REWECB)                                                 04960
REWCSW   DC    2F'0'                                                     04961
REWCCWPT DC    A(REWCCW)                                                 04962
REWDCBPT DC    A(OUT1)                                                   04963
         DC    F'0'                                                      04964
         DC    X'00010000'                                               04965
BK1BECB  DC    F'0'                                                      04966
BK1BIOB  DC    X'02000000'                                               04967
         DC    A(BK1BECB)                                                04968
BK1BCSW  DC    2F'0'                                                     04969
BKBCCWPT DC    A(BK1BCCW)                                                04970
BKBDCBPT DC    A(IN)                                                     04971
         DC    F'0'                                                      04972
         DC    X'00010000'                                               04973
         SPACE 3                                                         04974
DDOCHG   DC    C'     '                                                  04975
DDOUT1   DC    C'OUT1 '                                                  04976
DDOUT2   DC    C'OUT2 '                                                  04977
DDOUT3   DC    C'OUT3 '                                                  04978
DDOUT4   DC    C'OUT4 '                                                  04979
DDOUT5   DC    C'OUT5 '                                                  04980
DDOUT6   DC    C'OUT6 '                                                  04981
DDOUT7   DC    C'OUT7 '                                                  04982
DDOUT8   DC    C'OUT8 '                                                  04983
DDOUT9   DC    C'OUT9 '                                                  04984
DDOUT10  DC    C'OUT10'                                                  04985
DDOUT11  DC    C'OUT11'                                                  04986
DDOUT12  DC    C'OUT12'                                                  04987
DDOUT13  DC    C'OUT13'                                                  04988
DDOUT14  DC    C'OUT14'                                                  04989
DDOUT15  DC    C'OUT15'                                                  04990
DDOUT16  DC    C'OUT16'                                                  04991
FLAGLIT  DC    C' - FLAGS - '                                            04992
* --------------------------                                             04993
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE      04994
FLAG1    DC    X'00'                                                     04995
OP1      EQU   X'80'                                                     04996
OP2      EQU   X'40'                                                     04997
OP3      EQU   X'20'                                                     04998
OP4      EQU   X'10'                                                     04999
OP5      EQU   X'08'                                                     05000
OP6      EQU   X'04'                                                     05001
OP7      EQU   X'02'                                                     05002
OP8      EQU   X'01'                                                     05003
FLAG2    DC    X'00'                                                     05004
OP9      EQU   X'80'                                                     05005
OP10     EQU   X'40'                                                     05006
OP11     EQU   X'20'                                                     05007
OP12     EQU   X'10'                                                     05008
OP13     EQU   X'08'                                                     05009
OP14     EQU   X'04'                                                     05010
OP15     EQU   X'02'                                                     05011
OP16     EQU   X'01'                                                     05012
FLAG2A   DC    X'00'                                                  *  05013
ERR      EQU   X'02'                                                     05014
EOV      EQU   X'01'                                                     05015
EOVSOON  EQU   X'01'         X'01' IS INITIAL SETTING.                   05016
FF       EQU   X'FF'                                                     05017
FLAG3    DC    X'00'                                                     05018
FLAG4    DC    X'00'                                                     05019
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE             *  05020
* ---------- *                                                           05021
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                      05022
*              x'01'    Yes.                                             05023
* ---------- *                                                           05024
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN   05025
*              X'01'    HDR1 HAS BEEN READ IN                            05026
*              X'02'    HDR2 HAS BEEN READ IN                            05027
*              X'04'    VOL1 HAS BEEN READ IN                            05028
*              X'08'    UHL  HAS BEEN READ IN                            05029
*              X'10'    EOF1 HAS BEEN READ IN                            05030
*              X'20'    EOF2 HAS BEEN READ IN                            05031
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN           05032
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN           05033
* ---------- *                                                           05034
STRIPFLG DC    X'00'                                                     05035
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.    05036
DATFLAG  DC    X'00'                                                  *  05037
*              X'10'    NO REAL DATA HAS BEEN READ YET                *  05038
* --------------------------------------------------------- *         *  05039
VOLDD    DC    C'     '                                                  05040
STOR7REG DS    F                                                         05041
TOTB7REG DS    F                                                         05042
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST       05043
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST       05044
SAVE13LC DC    3F'0'                                                     05045
SAV45MSG DC    2F'0'                                                     05046
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   05047
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                        05048
         SPACE 3                                                         05049
LABELITH DC    CL80'----ENDOFLABELHEADER '                               05050
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            05051
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               05052
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            05053
LTMCTPAT DC    X'4020202020202020202120'                                 05054
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *   05055
VOL1LABL DS    0CL80                                                     05056
VOL1LIT  DC    CL4'VOL1'                                                 05057
VOL1SERL DC    CL6' '                                                    05058
VOL1FIL1 DC    CL31' '                                                   05059
VOL1ONER DC    CL10' '                                                   05060
VOL1FIL2 DC    CL29' '                                                   05061
* ------------------------ INITIALIZATION OF VOLUMES --------------- *   05062
HDR1INIT DS    0CL80                                                     05063
HDR1ILIT DC    CL4'HDR1'                                                 05064
HDR1IFIL DC    76C'0'                                                    05065
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   05066
AVOL1LAB DS    0CL80                                                     05067
AVOL1LIT DC    CL4'VOL1'                                                 05068
AVOL1SER DC    CL6' '                                                    05069
AVOL1ACC DC    CL1' '                                                    05070
AVOL1RS1 DC    CL13' '                                                   05071
AVOL1IMP DC    CL13' '                                                   05072
AVOL1OWN DC    CL14' '                                                   05073
AVOL1RS2 DC    CL28' '                                                   05074
AVOL1LVL DC    CL1'3'                                                    05075
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   05076
AHDR1INI DS    0CL80                                                     05077
AHDR1LIT DC    CL4'HDR1'                                                 05078
AHDR1ID1 DC    23C'0'                                                    05079
AHDR1FSN DC    CL4'0001'                                                 05080
AHDR1FSQ DC    CL4'0001'                                                 05081
AHDR1GNM DC    CL4'0001'                                                 05082
AHDR1VNM DC    CL2'00'                                                   05083
AHDR1CRD DC    CL6' 00000'                                               05084
AHDR1EXD DC    CL6' 00000'                                               05085
AHDR1ACC DC    CL1' '                                                    05086
AHDR1BKC DC    CL6'000000'                                               05087
AHDR1OSC DC    CL20'IBMZLA '                                             05088
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *   05089
MSGCSECT CSECT                                                           05090
TOTWLINE DC    C' TOTAL BYTES WITHOUT LABELS: '                          05091
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   05092
         DC    CL78' '                                                   05093
TOTLLINE DC    C' TOTAL BYTES IN TAPE LABELS: '                          05094
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   05095
         DC    CL78' '                                                   05096
TOTBLINE DC    C' TOTAL BYTES READ ON INPUT : '                          05097
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   05098
         DC    CL78' '                                                   05099
BLKCNTMS DC    C' BLOCK COUNTS in EOF1 and EOV1 are being corrected fo'  05100
         DC    C'r TAPE COPY operation, when outputs are SL.'            05101
         DC    CL37' '                                                   05102
INNOTOPN DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM'  05103
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE '  05104
         DC    C'A PARM OF INITVOLS.'                                    05105
         DC    CL8' '                                                    05106
LDMPOUTM DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               '  05107
         DC    C'                             MEMBER=         VOLUME= '  05108
         DC    C'                          '                             05109
LDMPINMS DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               '  05110
         DC    C'                             MEMBER=         VOLUME= '  05111
         DC    C'                          '                             05112
LDMPMSG  DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L'  05113
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  05114
         DC    C' MULTIPLE OF 80           '                             05115
LTMWMSG  DC    C' WRITELTMS=           HAS BEEN CODED IN SYSIN. THIS N'  05116
         DC    C'UMBER OF LEADING TAPE MARKS WILL BE WRITTEN TO OUTPUT'  05117
         DC    C' TAPES. '                                               05118
         DC    CL19' '                                                   05119
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05120
         DC    C' IS TREATED AS NL.                                   '  05121
         DC    CL27' '                                                   05122
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05123
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  05124
         DC    CL27' '                                                   05125
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  05126
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  05127
         DC    CL27' '                                                   05128
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 05129
         DC    CL6'&HEXDFLM'                                             05130
         DC    C' RECORDS WILL'                                          05131
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  05132
         DC    C'SYSIN.'                                                 05133
         DC    CL17' '                                                   05134
STRPMSG  DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS '  05135
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP'  05136
         DC    C'UT TAPES.                 '                             05137
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S'  05138
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  05139
         DC    C' MULTIPLE OF 80           '                             05140
NLABMSG  DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C'  05141
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL '  05142
         DC    C'IMAGES.                   '                             05143
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  05144
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  05145
         DC    C'                           '                            05146
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ'  05147
         DC    C'ing a Tape Mark right now.                           '  05148
         DC    C'                           '                            05149
FORCENLM DC    C' *** File Limiting by NL file numbers has been forced'  05150
         DC    C'.  Divide by 3 for the SL file number ***            '  05151
         DC    C'                           '                            05152
FORCESLM DC    C' *** File Limiting by SL file numbers has been forced'  05153
         DC    C'.  Multiply by 3 for the NL file number ***          '  05154
         DC    C'                           '                            05155
TWOFORCE DC    C' *** File Limiting by SL and NL file numbers both spe'  05156
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no'  05157
         DC    C't code PARM=SLLIM.         '                            05158
FORCREAD DC    C' Option READONLY has been forced by not having any OU'  05159
         DC    C'Txx DDNAMES coded in the JCL.                        '  05160
         DC    C'                           '                            05161
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '         05162
         DC    C'TERMINATED '                                            05163
         DC    76C'*'                                                    05164
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '    05165
         DC    82C'*'                                                    05166
VOLALT   DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'           *  05167
         DC    C' FOR DDNAME '                                           05168
VOLDDN   DC    C'     '                                                  05169
VOLFILL  DC    75C' '                    VOL1 CHANGE MESSAGE          *  05170
OWNRMSG  DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                 05171
OWNRTID  DC    C'          '                                             05172
OWNRTIDE DC    C'    '                                                   05173
OWNRLIT1 DC    C' FOR DDNAME '                                           05174
OWNRDDO  DC    C'     '                                                  05175
OWNRFIL2 DC    64C' '                                                    05176
LTMRPT   DC    C' LEADING TAPE MARK WAS '                             *  05177
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED          *  05178
         DC    C'  '                                                     05179
         DC    C'LTM Number ='                                           05180
LTMRNUM  DC    C'           '                                            05181
         DC    78C' '                                                    05182
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '          *  05183
         DC    C'EOV2EOF PARM OR OPTION'                              *  05184
         DC    69C' '                                                 *  05185
INITASC3 DC    C' ASCII TAPE INIT LVL 3 '                                05186
INITASC4 DC    C' ASCII TAPE INIT LVL 4 '                                05187
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                           05188
INITMSG  DC    C' INITTED TAPE HAS BEEN '                                05189
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                           05190
INITSER  DC    C'      '                                              *  05191
INITBLNK DC    76C' '                                                 *  05192
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '        05193
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '               05194
OUTCFCNT DC    C'XXXXXXXXXX'                                             05195
         DC    C'  Bytes:'                                               05196
OUTCBCNT DC    CL26' '                                                   05197
         DC    C' '                                                      05198
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '        05199
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         05200
         DC    40C'*'                                                    05201
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '        05202
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         05203
         DC    40C'*'                                                    05204
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '        05205
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         05206
         DC    40C'*'                                                    05207
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'               05208
FILEPBYT DS    0CL44                                                     05209
FILEDFL1 DC    C' '                                                      05210
FILECONT DC    C'          '                                             05211
FILEDFL2 DC    C' '                                                      05212
FILEBYTE DC    C' 9,999,999,999,999,999,999'                             05213
         DC    C' BYTES'                                                 05214
FILETBYT DS    0CL44                                                     05215
FILEDFL3 DC    C'    '                                                   05216
FILECUMT DC    C'          '                                             05217
FILEDFL4 DC    C' '                                                      05218
FILETBYE DC    C' 9,999,999,999,999,999,999'                             05219
         DC    8C' '                                                     05220
FOOTMSG1 DS    0CL133                                                    05221
         DC    C' File '                                                 05222
FOOTMNUM DC    C'     '                                                  05223
         DC    C' Ft @ 6250: '                                           05224
FOOTMFT  DC    C'          '                                             05225
         DC    C' Cumulative Feet for this Tape: '                       05226
FOOTMCFT DC    C'          '                                             05227
FOOTMFIL DC    58C' '                                                    05228
MNMXMSG1 DS    0CL133                                                    05229
         DC    C' File '                                                 05230
MNMXFNUM DC    C'     '                                                  05231
         DC    C' Min Blksize: '                                         05232
MNMXMIN  DC    C'        '                                               05233
         DC    C' Max Blksize: '                                         05234
MNMXMAX  DC    C'        '                                               05235
         DC    78C' '                                                    05236
RECSZMSG DS    0CL133                                                    05229
         DC    C' File '                                                 05230
RECSZFNM DC    C'     '                                                  05231
         DC    C' Record number: '                                       05232
RECSZRCD DC    C'          '                                             05231
         DC    C' Size of record: '                                      05232
RECSZSIZ DC    C'          '                                             05231
         DC    69C' '                                                    05236
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'     05237
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'     05238
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                      05239
         DC    C'       '          BLANKS FOR COVERING UP             *  05240
READOMSG DC    C'0THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX 05241
               LSER: XXXXXX '                                         *  05242
         DC    66C' '                                                 *  05243
SUCCESSR DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX 05244
               ERIAL XXXXXX '                                         *  05245
         DC    66C' '                                                 *  05246
         DC    C' '                                                      05247
COPYMODS CSECT                                                           05248
HEXPRTWK DC    CL133' '                                                  05249
         DC    C' '                                                      05250
LINE     DC    CL133' '                                                  05251
         DC    C' '                                                      05252
SAVELINE DC    CL133' '                                                  05253
LINE44   DC    CL44' '                                                   05254
RULERHEX DS    0CL132                                                    05255
         DC    C'----+----1----+----2----+----3----+----4----+----5--'   05256
         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  05257
         DC    C'----1----+----2----+----3----+----4'                    05258
REPLY    DC    C'      '                                                 05259
COPIED   DC    C'COPIED '                                             *  05260
SKIPPED  DC    C'SKIPPED'                                             *  05261
WRITTEN  DC    C'WRITTEN'                                                05262
READDD   DC    C'READ   '                                                05263
PASSED   DC    C'PASSED '                                                05264
FULLWORK DS    0F                                                     *  05265
         DC    H'0'                                                   *  05266
HALFWORK DC    H'0'                HALFWORD WORK AREA                 *  05267
         DC    2F'0'               FILLER                             *  05268
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     05269
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW    05270
* --------------------------------------------------------- *         *  05271
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                05272
PARMFLG1 DC    X'00'                                                     05273
*              X'DE'    LABEL INFORMATION WILL BE PRINTED                05274
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED               05275
PARMFLG2 DC    X'00'                                                     05276
PARMFLG3 DC    X'00'                                                     05277
PARMFLG4 DC    X'00'                                                     05278
PARMFLG5 DC    X'00'                                                     05279
PARMFLG6 DC    X'00'                                                     05280
PARMFLG7 DC    X'00'                                                     05281
PARMFLG8 DC    X'00'                                                     05282
PARMFLG9 DC    X'00'                                                     05283
PARMFLGA DC    X'00'                                                     05284
PARMFLLN EQU   *-PARMFLGS                                                05285
PARMCOPY DS    XL10                Copy of options before correction     05286
* --------------------------------------------------------- *         *  05287
         DS    0F                                                        05288
STRTVALU DS    0CL(ENDVALUE)                                             05289
         DC    A(ENDVALUE)                                               05290
PARMSLEN DC    F'0'                LENGTH OF PARMS                       05291
*                                  Upon entry to PARMCHEK, contains      05292
*                                  the PARM address from COPYMODS,       05293
*                                  which gets overlaid.                  05294
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       05295
*                                  Upon entry to PARMCHEK, contains      05296
*                                  the PARM address from COPYMODS,       05297
*                                  which gets overlaid.                  05298
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               05299
*                                  Upon entry to PARMCHEK, contains      05300
*                                  the PARM length from COPYMODS,        05301
*                                  which gets overlaid.                  05302
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05303
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05304
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05305
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   05306
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05307
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05308
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05309
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05310
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05311
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 05312
         DC    CL7' '              FILLER                                05313
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            05314
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     05315
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          05316
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  05317
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      05318
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         05319
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         05320
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         05321
LTMNUMB  DC    F'0'           NUMBER OF LEADING T.M. TO BE WRITTEN       05322
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       05323
TAPEOWN  DC    CL10' '                                                   05324
TAPEOEXT DC    CL4' '                                                    05325
TAPEOASC DC    CL14' '                                                   05326
OVERFLAG DC    X'00'                                                     05327
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               05328
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    05329
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         05330
LIMCHAR  DC    CL10' '                                                   05331
LABCHAR  DC    CL10' '                                                   05332
PRTCHAR  DC    CL10' '                                                   05333
LTMCHAR  DC    CL10' '                                                   05334
ENDVALUE EQU   (*-PARMSLEN)+4                                            05335
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     05336
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE    05337
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     05338
* --------------------------------------------------------- *            05339
*              FORMAT OF PARM TABLE                                      05340
*              ONE ENTRY IS 20 BYTES                                     05341
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               05342
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 05343
*                               X'00' SAYS TURN FLAG ON                  05344
*                               X'10' SET ENTRY AS A DEFAULT             05345
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               05346
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                05347
*                                WHICH ALLOWS FOR 80 PARMS               05348
*                                THAT DON'T HAVE TO BE                   05349
*                                SEPARATED BY A COMMA.                   05350
PBYTES   EQU   10               NUMBER OF PARM SWITCH BYTES              05351
* --------------------------------------------------------- *            05352
EFFS     DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'               05353
* --------------------------------------------------------- *            05354
         SPACE 3                                                         05355
         LTORG                                                           05356
         SPACE 3                                                         05357
         DS    0D                                                     *  05358
LBNEXLST DC    X'87',AL3(LBNJFCB)                                        05359
LBNJFCB  DC    44F'0'                                                    05360
         DS    0D                                                     *  05361
LBLEXLST DC    X'87',AL3(LBLJFCB)                                        05362
LBLJFCB  DC    44F'0'                                                    05363
         DS    0D                                                     *  05364
OUTEXLST DC    X'87',AL3(OUTJFCB)                                        05365
OUTJFCB  DC    44F'0'                                                    05366
         DS    0D                                                     *  05367
INEXLST  DC    X'87',AL3(INJFCB)                                      *  05368
INJFCB   DC    44F'0'                                                 *  05369
         SPACE 3                                                         05370
VOLALL   DS    0CL96         16 X 6                                      05371
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05372
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05373
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05374
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05375
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05376
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05377
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05378
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05379
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05380
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05381
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05382
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05383
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05384
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05385
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05386
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05387
VOLALLLN EQU   *-VOLALL                                                  05388
* --------------------------------------------------------- *         *  05389
         SPACE 3                                                         05390
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X 05391
               EXLST=INEXLST                                             05392
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X 05393
               EXLST=OUTEXLST                                            05394
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X 05395
               EXLST=OUTEXLST                                            05396
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X 05397
               EXLST=OUTEXLST                                            05398
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X 05399
               EXLST=OUTEXLST                                            05400
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X 05401
               EXLST=OUTEXLST                                            05402
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X 05403
               EXLST=OUTEXLST                                            05404
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X 05405
               EXLST=OUTEXLST                                            05406
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X 05407
               EXLST=OUTEXLST                                            05408
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X 05409
               EXLST=OUTEXLST                                            05410
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X 05411
               EXLST=OUTEXLST                                            05412
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X 05413
               EXLST=OUTEXLST                                            05414
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X 05415
               EXLST=OUTEXLST                                            05416
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X 05417
               EXLST=OUTEXLST                                            05418
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X 05419
               EXLST=OUTEXLST                                            05420
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X 05421
               EXLST=OUTEXLST                                            05422
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X 05423
               EXLST=OUTEXLST                                            05424
         ENTRY SYSPRINT                                                  05425
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05426
               BLKSIZE=133                                               05427
         ENTRY LABLDUMP                                                  05428
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X 05429
               EXLST=LBLEXLST                                            05430
         ENTRY LABADDIN                                                  05431
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X 05432
               EXLST=LBNEXLST,EODAD=LBLINEND                             05433
         DC    C' '              BLANK FOR CLEARING AREA              *  05434
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP           *  05435
SAVE2TO3 DC    2F'0'                                                     05436
SAVE3REG DC    F'0'                                                      05437
SAVE7BA1 DC    F'0'                                                      05438
SAVE7REG DC    F'0'                                                      05439
SAVE7BAL DC    F'0'                                                      05440
SAVE7RG1 DC    F'0'                                                      05441
SAVE7RG2 DC    F'0'                                                      05442
SAVE7RG3 DC    F'0'                                                      05443
SAVE7RG4 DC    F'0'                                                      05444
SAVE7RG5 DC    F'0'                                                      05445
SAVE7RG6 DC    F'0'                                                      05446
SAVE7RG7 DC    F'0'                                                      05446
R5HXPRT  DC    F'0'                                                      05447
R7HXPRT  DC    F'0'                                                      05448
SAVTRTCS DC    F'0'                                                      05449
ENTRYPT  DC    F'0'                                                      05450
LABCHENT DC    F'0'                                                      05451
PRTLBENT DC    F'0'                                                      05452
FOOTGENT DC    F'0'                                                      05453
PARMSAVE DC    F'0'                                                      05454
PARMADDR DC    F'0'                                                      05455
USERSAVE DC    F'0'                                                      05456
SAVELBCK DC    F'0'                                                      05457
         DC    CL4' '                                                    05458
HDR1SAV  DC    CL80' '                                                   05459
HDR2SAV  DC    CL80' '                                                   05460
UHL1SAV  DC    CL80' '                                                   05461
UHL2SAV  DC    CL80' '                                                   05462
UHL3SAV  DC    CL80' '                                                   05463
UHL4SAV  DC    CL80' '                                                   05464
UHL5SAV  DC    CL80' '                                                   05465
UHL6SAV  DC    CL80' '                                                   05466
UHL7SAV  DC    CL80' '                                                   05467
UHL8SAV  DC    CL80' '                                                   05468
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          05469
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                      05470
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 05471
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA             *  05472
*--------FOLLOWING IS A WORK AREA FOR FOOTAGE ROUTINE                    05473
*   This area must match the FOOTWORK DSECT in the FOOTAGE routine.      05474
LABELTYP DS    C                       LABEL TYPE                        05475
DENSITY  DS    C                       DENSITY CODE                      05476
FILENO   DS    H                       FILE SEQUENCE NUMBER IN BINARY    05477
BLKSZE   DS    F                       BLOCK SIZE IN BINARY              05478
NUMBLKS  DS    F                       NUMBER OF BLOCKS IN BINARY        05479
USERLBLS DS    F                       USER LABELS IN BINARY             05480
CUMTOTAL DS    F                       CUMULATIVE REEL TOTAL             05481
FILEFT   DS    CL10                    FILE FOOTAGE IN EBCDIC            05482
REELFT   DS    CL10                    REEL FOOTABE IN EBCDIC            05483
*--------END OF FOOTAGE ROUTINE PARAMETERS                               05484
BLKSZWRK DS    F          Work area to calculate maximum BLKSZE          05485
TRTCSECT CSECT                                                           05486
* ------------------------------------------------------------------- *  05487
*   You have to make sure to keep the TRTDSECT that is in LABELCHK    *  05488
*   (and possibly other places) in synchronization with this CSECT.   *  05489
* ------------------------------------------------------------------- *  05490
TRTBL0   DS    0D                                                        05491
         DC    XL16'40404040404040404040404040404040'                    05492
         DC    XL16'40404040404040404040404040404040'                    05493
         DC    XL16'40404040404040404040404040404040'                    05494
         DC    XL16'40404040404040404040404040404040'                    05495
         DC    XL16'404040404040404040404A4B4C4D4E4F'                    05496
         DC    XL16'504040404040404040405A5B5C5D5E5F'                    05497
         DC    XL16'606140404040404040406A6B6C6D6E6F'                    05498
         DC    XL16'404040404040404040407A7B7C7D7E7F'                    05499
         DC    XL16'40818283848586878889404040404040'                    05500
         DC    XL16'40919293949596979899404040404040'                    05501
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    05502
         DC    XL16'40404040404040404040404040404040'                    05503
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    05504
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    05505
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    05506
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    05507
TRTBL1   DS    0D                                                        05508
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    05509
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    05510
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    05511
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    05512
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    05513
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    05514
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    05515
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    05516
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    05517
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    05518
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    05519
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    05520
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    05521
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    05522
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    05523
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    05524
TRTBL2   DS    0D                                                        05525
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05526
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05527
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05528
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05529
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05530
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05531
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05532
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05533
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05534
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05535
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05536
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05537
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05538
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05539
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05540
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05541
TRTE2A   DS    0D                                                        05542
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    05543
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    05544
         DC    XL16'202122232425262728292A2B2C2D2E2F'                    05545
         DC    XL16'303132333435363738393A3B3C3D3E3F'                    05546
         DC    XL16'20414243444546474849A22E3C282B7C'                    05547
         DC    XL16'2651525354555657585921242A293B5E'                    05548
         DC    XL16'2D2F6263646566676869A62C255F3E3F'                    05549
         DC    XL16'707172737475767778603A2340273D22'                    05550
         DC    XL16'806162636465666768698ABBF0FDFEB1'                    05551
         DC    XL16'906A6B6C6D6E6F7071729ABAE6B8C6A4'                    05552
         DC    XL16'B57E737475767778797AAABFD05BDEAE'                    05553
         DC    XL16'ACA3A5B7A9A7B6BCBDBEBAA8AF5DB4D7'                    05554
         DC    XL16'7B414243444546474849CACBCCCDCECF'                    05555
         DC    XL16'7D4A4B4C4D4E4F505152DADBDCDDDEDF'                    05556
         DC    XL16'5CF7535455565758595AEAEBECEDEEEF'                    05557
         DC    XL16'30313233343536373839FAFBFCFDFEFF'                    05558
TRTA2E   DS    0D                                                        05559
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    05560
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    05561
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    05562
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    05563
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    05564
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    05565
         DC    XL16'79818283848586878889919293949596'                    05566
         DC    XL16'979899A2A3A4A5A6A7A8A9C04FD0A17F'                    05567
         DC    XL16'808182838485868788898A8B8C8D8E8F'                    05568
         DC    XL16'909192939495969798999A9B9C9D9E9F'                    05569
         DC    XL16'A0A14AB19FB26AB5BBB4AAABB0ADAFBC'                    05570
         DC    XL16'B08FB2B3BEA0B6B39DB99BB8B7B8B9AB'                    05571
         DC    XL16'C0C1C2C3C4C59EC7C8C9CACBCCCDCECF'                    05572
         DC    XL16'ACD1D2D3D4D5D6BFD8D9DADBDCDDAEDF'                    05573
         DC    XL16'E0E1E2E3E4E59CE7E8E9EAEBECEDEEEF'                    05574
         DC    XL16'8CF1F2F3F4F5F6E1F8F9FAFBFC8D8EFF'                    05575
TRTASPRT DS    0D                                                        05576
         DC    XL16'40404040404040404040404040404040'                    05577
         DC    XL16'40404040404040404040404040404040'                    05578
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    05579
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    05580
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    05581
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    05582
         DC    XL16'40818283848586878889919293949596'                    05583
         DC    XL16'979899A2A3A4A5A6A7A8A94D4F5DA17F'                    05584
         DC    XL16'40404040404040404040404040404040'                    05585
         DC    XL16'40404040404040404040404040404040'                    05586
         DC    XL16'40404040404040404040404040404040'                    05587
         DC    XL16'40404040404040404040404040404040'                    05588
         DC    XL16'40404040404040404040404040404040'                    05589
         DC    XL16'40404040404040404040404040404040'                    05590
         DC    XL16'40404040404040404040404040404040'                    05591
         DC    XL16'40404040404040404040404040404040'                    05592
         EJECT                                                           05593
JFCBLK   DSECT                                                           05594
         IEFJFCBN LIST=YES                                               05595
COPYMODS CSECT                                                           05596
INAREA   DS    CL65535                                                *  05597
#PAN$AUD CSECT                                                           05598
$PAN#AUD DC    CL30'LEVEL 082 COPYMODS  02/19/11 '                       05599
         END                                                             05600
*          PRINT OPTION LIST   AT LEVEL 082 AS OF 02/19/11               05601
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                 05602
**************************************************************           05603
**************************************************************           05604
**                                                          **           05605
**                                                          **           05606
**  MODULE: COPYMOPT                                        **           05607
**                                                          **           05608
**                                                          **           05609
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **           05610
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **           05611
**            PROGRAM.                                      **           05612
**                                                          **           05613
**                                                          **           05614
**  Technique Note:  A separate SYSPRINT DCB is coded here  **           05615
**            in this CSECT, besides the SYSPRINT DCB       **           05616
**            that was coded in the main COPYMODS CSECT.    **           05617
**            The SYSPRINT DCB that is here, is OPENed      **           05618
**            and CLOSEd by this CSECT before COPYMODS'     **           05619
**            SYSPRINT DCB is OPENed for the first time.    **           05620
**            This gives a "DISP=MOD" effect for the        **           05621
**            //SYSPRINT DD name, and it also allows SDSF   **           05622
**            or any other spool browser program to show    **           05623
**            the options in effect in SYSPRINT, before     **           05624
**            any tapes have been mounted yet.              **           05625
**                                                          **           05626
**************************************************************           05627
**************************************************************           05628
         EJECT                                                           05629
         YREGS                                                           05630
COPYMOPT CSECT                                                           05631
         USING *,R15                                                  *  05632
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.     05633
         B     EYECATCH                                               *  05634
         DC    C'--- '            MAKE EYECATCHER VISIBLE             *  05635
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '   05636
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '                 *  05637
SAVEAREA DC    18F'0'                                                    05638
EYECATCH DS    0D             ENSURE ALIGNMENT                        *  05639
         SAVE  (14,12)                                                   05640
         LR    R5,R1          SAVE PASSED QUANTITY                       05641
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   05642
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          05643
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         05644
         LR    R13,R1               NEW SAVE AREA ADDRESS                05645
         DROP  R15                                                       05646
* -----                       SET UP TWO BASE REGISTERS                  05647
         USING COPYMOPT,R12,R11                                          05648
         LR    R12,R15                                                   05649
         LA    R11,4095(,R12)                                            05650
         LA    R11,1(,R11)                                               05651
         LR    R1,R5          RESTORE PARM POINTER                       05652
OPTMOVE  DS    0H                                                        05653
         MVC   PARMTBIN(10),0(R1)     MOVE PARMS INTO THIS PGM           05654
         TM    TWICEFLG,X'02'         Second call to program?            05655
         BO    OPTMOVEO               Don't move ten bytes past....      05656
         MVC   PARMTCPY(10),10(R1)    Move original parms if first call  05657
         MVC   PARMFSAV(10),0(R1)     And save changed parms             05658
         OI    TWICEFLG,X'02'         Show original parms moved already  05659
OPTMOVEO DS    0H                                                        05660
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM       05661
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM       05662
         OPEN  (SYSPRINT,OUTPUT)                                         05663
         TM    TWICEFLG,X'01'         Is this the second time here?      05664
         BZ    WRITORIG               No. Write the original headers.    05665
         TM    PARMTBIN+5,X'80'       Is CODEDPRM coded?                 05666
         BO    NOWRTHDR               Yes. Write different headers.      05667
WRITORIG DS    0H                     Write original OPTIONS headers.    05668
         OI    TWICEFLG,X'01'         Show we were here once already.    05669
         MVC   LINE(133),LINE-1       CLEAR LINE                         05670
         MVC   LINE(133),DISPLINH     Write original header 1.           05671
         PUT   SYSPRINT,LINE                                             05672
         MVC   LINE(133),LINE-1       CLEAR LINE                         05673
         MVC   LINE(133),DISPLINO     Write original header 2.           05674
         PUT   SYSPRINT,LINE                                             05675
         B     YSWRTHDR                                                  05676
NOWRTHDR DS    0H                     Write CODEDPRM different headers.  05677
         MVC   LINE(133),LINE-1       CLEAR LINE                         05678
         MVC   LINE(133),DISPNCOR     Write "before correction" hdr 1.   05679
         PUT   SYSPRINT,LINE                                             05680
         MVC   LINE(133),LINE-1       CLEAR LINE                         05681
         MVC   LINE(133),DISPNCRO     Write "before correction" hdr 2.   05682
         PUT   SYSPRINT,LINE                                             05683
YSWRTHDR DS    0H                                                        05684
         MVC   LINE(133),LINE-1       CLEAR LINE                         05685
         PUT   SYSPRINT,LINE                                             05686
         BAL   R7,FILLOPTS                                               05687
         MVC   LINE(133),LINE-1       CLEAR LINE                         05688
         MVC   LINE(133),DISPOP02                                        05689
         PUT   SYSPRINT,LINE                                             05690
         MVC   LINE(133),LINE-1       CLEAR LINE                         05691
         MVC   LINE(133),DISPOP01                                        05692
         PUT   SYSPRINT,LINE                                             05693
         MVC   LINE(133),LINE-1       CLEAR LINE                         05694
         MVC   LINE(133),DISPOP03                                        05695
         PUT   SYSPRINT,LINE                                             05696
         TM    TWICEFLG,X'04'         Don't do changed report on         05697
         BO    PARMGHNC                second call.                      05698
         CLC   PARMFSAV(10),PARMTCPY  COMPARE TO SEE IF PARMS CHANGED    05699
         BNE   PARMCHGD               Not equal, report that.            05700
         MVC   LINE(133),LINE-1       CLEAR LINE                         05701
         MVC   LINE(133),DISPSHNC     Display that parms not changed     05702
         PUT   SYSPRINT,LINE                                             05703
         B     PARMGHNC               And go on with other print lines   05704
PARMCHGD DS    0H                     Parms have changed                 05705
         MVC   LINE(133),LINE-1       CLEAR LINE                         05706
         MVC   LINE(133),DISPSHCR     Display that parms have changed    05707
         PUT   SYSPRINT,LINE                                             05708
PARMGHNC DS    0H                     Go on with other print lines       05709
         MVC   LINE(133),LINE-1       CLEAR LINE                         05710
         MVC   LINE(133),DISPHEXM                                        05711
         PUT   SYSPRINT,LINE                                             05712
         MVC   LINE(133),LINE-1       CLEAR LINE                         05713
         PUT   SYSPRINT,LINE                                             05714
         CLOSE (SYSPRINT)                                                05715
* ----------------------------------------------------------------- *    05716
THEEND   EQU   *                                                         05717
         TM    TWICEFLG,X'04'         Second call, unconditionally?      05718
         BO    OPTMOVE2               Yes. No need to set flag.          05719
         OI    TWICEFLG,X'04'         No. Set flag for next time.        05720
OPTMOVE2 DS    0H                                                        05721
THEEND1  DS    0H                                                        05722
         L     R13,4(,R13)                                               05723
         RETURN (14,12),RC=0                                             05724
         EJECT                                                           05725
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *    05726
* ----------------------------------------------------------------- *    05727
*    BAL REGISTER IS R7.                                            *    05728
* ------------------------------------------------------------------*    05729
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT            05730
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE        05731
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE        05732
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION     05733
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                  05734
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                        05735
         BE    FILOPEND                                                  05736
         MVC   PARMWORK(10),0(R3)     MOVE BYTES TO BE TESTED            05737
         NC    PARMWORK(10),PARMTBIN  CHECK IF BYTE IS ON                05738
         BZ    FILLZER                                                   05739
         MVC   0(10,R2),10(R3)        MOVE OPTION TO DISPLAY - BIT ON    05740
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           05741
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          05742
         BCT   R4,FILLOOP             LOOP BACK                          05743
         B     FILNEXTB                                                  05744
FILLZER  DS    0H                                                        05745
         MVC   0(10,R2),20(R3)        MOVE OPTION TO DISPLAY - BIT OFF   05746
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           05747
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          05748
         BCT   R4,FILLOOP             LOOP BACK                          05749
FILNEXTB DS    0H                                                        05750
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                  05751
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE      05752
         PUT   SYSPRINT,LINE                                             05753
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE    05754
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE     05755
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP     05756
FILOPEND BR    R7                                                        05757
* ----------------------------------------------------------------- *    05758
* ----------  CONSTANTS  ------------------------------------------ *    05759
         LTORG                                                           05760
         DS    0F                                                        05761
PARMTBIN DC    X'00000000000000000000'                                   05762
PARMTCPY DC    X'00000000000000000000'                                   05763
PARMFSAV DC    X'00000000000000000000'                                   05764
PARMWORK DC    X'00000000000000000000'                                   05765
PARMZERO DC    X'00000000000000000000'                                   05766
OPTABLE  DS    0D                                                        05767
         DC    X'20000000000000000000',C'LTMSKIP   ',C'LTMCOPY   '       05768
OPTENTLN EQU   *-OPTABLE                                                 05769
         DC    X'01000000000000000000',C'BLKCNT    ',C'NOBLKCNT  '       05770
         DC    X'02000000000000000000',C'HDR1      ',C'NOHDR1    '       05771
         DC    X'04000000000000000000',C'HDR2      ',C'NOHDR2    '       05772
         DC    X'08000000000000000000',C'EOF1      ',C'NOEOF1    '       05773
         DC    X'10000000000000000000',C'EOF2      ',C'NOEOF2    '       05774
         DC    X'40000000000000000000',C'EOV1      ',C'NOEOV1    '       05775
         DC    X'80000000000000000000',C'EOV2      ',C'NOEOV2    '       05776
         DC    X'00100000000000000000',C'LABLDUMP  ',C'NOLABLDU  '       05777
         DC    X'00200000000000000000',C'SYSIN     ',C'NOSYSIN   '       05778
         DC    X'00400000000000000000',C'OUTVOL ***',C'NOOUTVOL  '       05779
         DC    X'00800000000000000000',C'LABADDIN  ',C'NOLABADD  '       05780
         DC    X'00010000000000000000',C'CHGVOL    ',C'NOCHGVOL  '       05781
         DC    X'00020000000000000000',C'VOLLBL    ',C'NOVOLLBL  '       05782
         DC    X'00040000000000000000',C'EOVCHG    ',C'NOEOVCHG  '       05783
         DC    X'00080000000000000000',C'READONLY  ',C'WRITE     '       05784
         DC    X'00001000000000000000',C'PRADDLBL  ',C'NOPRADDL  '       05785
         DC    X'00002000000000000000',C'CORRBLKS  ',C'NOCORRBL  '       05786
         DC    X'00004000000000000000',C'NOEXNULL  ',C'EXNULL    '       05787
         DC    X'00008000000000000000',C'LBLFIX    ',C'NOLBLFIX  '       05788
         DC    X'00000100000000000000',C'INITVOLS  ',C'NOINITVO  '       05789
         DC    X'00000200000000000000',C'LIMFILE **',C'NOLIMFIL  '       05790
         DC    X'00000400000000000000',C'BYTES     ',C'NOBYTES   '       05791
         DC    X'00000800000000000000',C'CUMTOT    ',C'NOCUMTOT  '       05792
         DC    X'00000010000000000000',C'LIMLABEL *',C'NOLIMLAB  '       05793
         DC    X'00000020000000000000',C'OPTION    ',C'NOOPTION  '       05794
         DC    X'00000040000000000000',C'SUPPWTO   ',C'NOSUPPWT  '       05795
         DC    X'00000080000000000000',C'LBDQUICK  ',C'NOLBDQUI  '       05796
         DC    X'00000001000000000000',C'CUMSEP    ',C'NOCUMSEP  '       05797
         DC    X'00000002000000000000',C'STRIP     ',C'NOSTRIP   '       05798
         DC    X'00000004000000000000',C'NLLIM     ',C'NONLLIM   '       05799
         DC    X'00000008000000000000',C'SLLIM     ',C'NOSLLIM   '       05800
         DC    X'00000000100000000000',C'IDRCOFF   ',C'NOIDRCOF  '       05801
HXPRT    DC    X'00000000200000000000',C'HEXPRT    ',C'NOHEXPRT  '       05802
         DC    X'00000000400000000000',C'UNEXWTO   ',C'NOUNEXWT  '       05803
         DC    X'00000000800000000000',C'ASCII     ',C'EBCDIC    '       05804
         DC    X'00000000010000000000',C'INASC3    ',C'NOINASC3  '       05805
         DC    X'00000000020000000000',C'INASC4    ',C'NOINASC4  '       05806
         DC    X'00000000040000000000',C'          ',C'NOENABLT  '       05807
         DC    X'00000000080000000000',C'WRTLTM    ',C'          '       05808
         DC    X'00000000001000000000',C'SECOFF    ',C'NOSECOFF  '       05809
         DC    X'00000000002000000000',C'FOOTAGE   ',C'NOFOOTAGE '       05810
         DC    X'00000000004000000000',C'FOOTDIAG  ',C'NOFOOTDI  '       05811
         DC    X'00000000008000000000',C'CODEDPRM  ',C'NOCODEDP  '       05812
         DC    X'00000000000100000000',C'MINMAX    ',C'NOMINMAX  '       05813
         DC    X'00000000000200000000',C'RECSIZE   ',C'NORECSIZ  '       05814
         DC    X'00000000000400000000',C'DGSTRI    ',C'NODGSTRI  '       05815
         DC    X'00000000000800000000',C'          ',C'          '       05816
         DC    X'00000000000010000000',C'          ',C'          '       05817
         DC    X'00000000000020000000',C'          ',C'          '       05818
         DC    X'00000000000040000000',C'          ',C'          '       05819
         DC    X'00000000000080000000',C'          ',C'          '       05820
         DC    X'00000000000001000000',C'          ',C'          '       05821
         DC    X'00000000000002000000',C'          ',C'          '       05822
         DC    X'00000000000004000000',C'          ',C'          '       05823
         DC    X'00000000000008000000',C'          ',C'          '       05824
         DC    X'00000000000000100000',C'          ',C'          '       05825
         DC    X'00000000000000200000',C'          ',C'          '       05826
         DC    X'00000000000000400000',C'          ',C'          '       05827
         DC    X'00000000000000800000',C'          ',C'          '       05828
         DC    X'00000000000000010000',C'          ',C'          '       05829
         DC    X'00000000000000020000',C'          ',C'          '       05830
         DC    X'00000000000000040000',C'          ',C'          '       05831
         DC    X'00000000000000080000',C'          ',C'          '       05832
         DC    X'00000000000000001000',C'          ',C'          '       05833
         DC    X'00000000000000002000',C'          ',C'          '       05834
         DC    X'00000000000000004000',C'          ',C'          '       05835
         DC    X'00000000000000008000',C'          ',C'          '       05836
         DC    X'00000000000000000100',C'          ',C'          '       05837
         DC    X'00000000000000000200',C'          ',C'          '       05838
         DC    X'00000000000000000400',C'          ',C'          '       05839
         DC    X'00000000000000000800',C'          ',C'          '       05840
         DC    X'00000000000000000010',C'          ',C'          '       05841
         DC    X'00000000000000000020',C'          ',C'          '       05842
         DC    X'00000000000000000040',C'          ',C'          '       05843
         DC    X'00000000000000000080',C'          ',C'          '       05844
         DC    X'00000000000000000001',C'          ',C'          '       05845
         DC    X'00000000000000000002',C'          ',C'          '       05846
         DC    X'00000000000000000004',C'          ',C'          '       05847
         DC    X'00000000000000000008',C'          ',C'          '       05848
         DC    X'FFFFFFFFFFFFFFFFFFFF'                                   05849
*  -----                                                                 05850
TWICEFLG DC    X'00'     X'00' shows first invocation of this program.   05851
DISPAREA DS    0D                                                        05852
DISPSHNC DS    0CL133                                                    05853
         DC    C'     COPYMODS has not had to correct any of the optio'  05854
         DC    C'ns as coded in the JCL.                              '  05855
         DC    27C' '                                                    05856
DISPSHCR DS    0CL133                                                    05857
         DC    C'     COPYMODS attempts to keep the options consistent'  05858
         DC    C' and has changed some options. For a comparison repor'  05859
         DC    C't, code the CODEDPRM parm. '                            05860
DISPNCOR DS    0CL133                                                    05861
         DC    C'-    CODED PARMS BEFORE BEING CORRECTED BY THE COPYMO'  05862
         DC    C'DS PROGRAM  -  List of Uncorrected Options           '  05863
         DC    27C' '                                                    05864
DISPNCRO DS    0CL133                                                    05865
         DC    C'     OPTIONS:  As coded in the JCL and interpreted by'  05866
         DC    C' the PARMCHEK routine --                             '  05867
         DC    27C' '                                                    05868
DISPLINH DS    0CL133                                                    05869
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - '  05870
         DC    C'LEVEL 082 - OPTIONS DISPLAY                          '  05871
         DC    27C' '                                                    05872
DISPLINO DS    0CL133                                                    05873
         DC    C'-    OPTIONS IN EFFECT:                              '  05874
         DC    C'                                                     '  05875
         DC    27C' '                                                    05876
DISPOP01 DS    0CL133                                                    05877
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE'  05878
         DC    C'LIMIT=   SYSIN CARD                                  '  05879
         DC    27C' '                                                    05880
DISPOP02 DS    0CL133                                                    05881
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE'  05882
         DC    C'LIMIT=   SYSIN CARD                                  '  05883
         DC    27C' '                                                    05884
DISPOP03 DS    0CL133                                                    05885
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE'  05886
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 '  05887
         DC    27C' '                                                    05888
DISPHEXM DC    C'0NOTE - The HEXPRT option displays only original reco'  05889
         DC    C'rds before they have been changed by the COPYMODS pro'  05890
         DC    C'gram.                     '                             05891
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05892
               BLKSIZE=133                                               05893
         DC    C' '                                                      05894
LINE     DS    CL133                                                     05895
DISPLIN1 DS    0CL133                                                    05896
         DC    C'0    '                                                  05897
DISPL1A  DC    8CL12' '                                                  05898
         DC    32C' '                                                    05899
DISPLIN2 DS    0CL133                                                    05900
         DC    C'     '                                                  05901
DISPL2A  DC    8CL12' '                                                  05902
         DC    32C' '                                                    05903
DISPLIN3 DS    0CL133                                                    05904
         DC    C'     '                                                  05905
DISPL3A  DC    8CL12' '                                                  05906
         DC    32C' '                                                    05907
DISPLIN4 DS    0CL133                                                    05908
         DC    C'     '                                                  05909
DISPL4A  DC    8CL12' '                                                  05910
         DC    32C' '                                                    05911
DISPLIN5 DS    0CL133                                                    05912
         DC    C'     '                                                  05913
DISPL5A  DC    8CL12' '                                                  05914
         DC    32C' '                                                    05915
DISPLIN6 DS    0CL133                                                    05916
         DC    C'     '                                                  05917
DISPL6A  DC    8CL12' '                                                  05918
         DC    32C' '                                                    05919
DISPLIN7 DS    0CL133                                                    05920
         DC    C'     '                                                  05921
DISPL7A  DC    8CL12' '                                                  05922
         DC    32C' '                                                    05923
DISPLIN8 DS    0CL133                                                    05924
         DC    C'     '                                                  05925
DISPL8A  DC    8CL12' '                                                  05926
         DC    32C' '                                                    05927
DISPLIN9 DS    0CL133                                                    05928
         DC    C'     '                                                  05929
DISPL9A  DC    8CL12' '                                                  05930
         DC    32C' '                                                    05931
DISPLINA DS    0CL133                                                    05932
         DC    C'     '                                                  05933
DISPLAA  DC    8CL12' '                                                  05934
         DC    32C' '                                                    05935
         SPACE 3                                                         05936
         EJECT                                                           05937
@PAN$AUD CSECT                                                           05938
$PAN#AUD DC    CL30'LEVEL 082 COPYMOPT  02/19/11 '                       05939
         END                                                             05940
*          PARM CHECKER        AT LEVEL 1.6 AS OF 03/13/05               05941
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                       05942
**************************************************************           05943
**************************************************************           05944
**                                                          **           05945
**                                                          **           05946
**  MODULE:   PARMCHEK - Set option bits, based on          **           05947
**                       keywords coded in PARM and/or      **           05948
**                       SYSIN.                             **           05949
**                                                          **           05950
**  AUTHOR:   Sam Golob                                     **           05951
**                                                          **           05952
**  PURPOSE:  This program converts keywords in a PARM      **           05953
**            field or in SYSIN, into bit settings that     **           05954
**            a program can use, to control options in      **           05955
**            its execution.                                **           05956
**                                                          **           05957
**            This program can be run as a subroutine       **           05958
**            which is called, to set up to 10 bytes of     **           05959
**            bits, up to 80 bits in all, based on the      **           05960
**            settings of keywords in a table.              **           05961
**                                                          **           05962
**            This routine makes it easy to put a lot of    **           05963
**            options into a program.  If you want to       **           05964
**            add options, or use other words in PARM or    **           05965
**            SYSIN to call the same options, all you       **           05966
**            have to do, is to change or add entries in    **           05967
**            a table.  There is no extra coding to be      **           05968
**            done.                                         **           05969
**                                                          **           05970
**            Keywords in the PARM or SYSIN areas do not    **           05971
**            have to be delimited by commas or spaces or   **           05972
**            anything else.  Although for clarity, I'd     **           05973
**            certainly recommend that you put commas or    **           05974
**            spaces between the PARM field keywords.       **           05975
**            Therefore, I'd also advise that when you      **           05976
**            design keywords to put into the table to      **           05977
**            designate options, that you make them         **           05978
**            significantly different from each other.      **           05979
**            There is a length field in the table,         **           05980
**            however, which gives you some more control    **           05981
**            in this area.                                 **           05982
**                                                          **           05983
**            From a calling program, it would be possible  **           05984
**            to call PARMCHEK twice, against two different **           05985
**            tables, to set 20 bytes of options, instead   **           05986
**            of 10 bytes of options, and so forth...       **           05987
**                                                          **           05988
**            This gives you the opportunity of having      **           05989
**            a tremendous number of options, set by        **           05990
**            keywords, in your program, without using      **           05991
**            up valuable "base register space" for such    **           05992
**            coding.                                       **           05993
**                                                          **           05994
**                                                          **           05995
**  METHOD:   Bits, in the 10 bytes of PARMFLGS, are set,   **           05996
**            from a table, based on assembled defaults.    **           05997
**            These default settings are then overridden    **           05998
**            from a scan of words in the PARM field of     **           05999
**            the EXEC card.                                **           06000
**                                                          **           06001
**            If a SYSIN DD card is present, its cards      **           06002
**            are scanned against the table entries, to     **           06003
**            further override the bit settings which       **           06004
**            have already been done by the defaults and    **           06005
**            the PARM field.                               **           06006
**                                                          **           06007
**            The main purpose of this routine is to set    **           06008
**            bits from words.  However, if you need some   **           06009
**            keywords with values, such as (for example)   **           06010
**            FILELIMIT=69  in your program, you may use    **           06011
**            the "user code" section of this program       **           06012
**            to code that stuff in, so that these special  **           06013
**            keywords can be coded in SYSIN.               **           06014
**                                                          **           06015
**            Two sample keywords expecting number values:  **           06016
**            FILELIMIT=nnn  or                             **           06017
**            LABELIMIT=mmm                                 **           06018
**            have been coded here, just to illustrate      **           06019
**            how the user coding might work.               **           06020
**                                                          **           06021
**            Search order is:  Defaults, then PARM in      **           06022
**            the EXEC card, then SYSIN.                    **           06023
**                                                          **           06024
**            As coded here, the FILELIMIT= and             **           06025
**            LABELIMIT= keywords in SYSIN have to be in    **           06026
**            column 1 of the SYSIN cards, and if these     **           06027
**            "special keywords" are present in a card,     **           06028
**            the rest of that card is not scanned for      **           06029
**            the table keywords.                           **           06030
**                                                          **           06031
**            As coded here, the PARMTABL is a separate     **           06032
**            CSECT, addressable by V-CONs from the         **           06033
**            PARMCHEK CSECT.                               **           06034
**                                                          **           06035
**            It would probably be best to invoke the       **           06036
**            PARMCHEK program as a separate CSECT which    **           06037
**            is linkedited with the calling program,       **           06038
**            but it may be LOADed and BALR 14,15 'ed to,   **           06039
**            and run as a separate program.  (See the      **           06040
**            PARMDRVR program that is included in this     **           06041
**            package, as a sample.)                        **           06042
**                                                          **           06043
**    Input:  A fullword containing the address of the      **           06044
**            saved Register 1 from the calling program,    **           06045
**            which points to its parms.                    **           06046
**                                                          **           06047
**            A table containing parms, which is coded      **           06048
**            according to the following rules, and which   **           06049
**            has entries of 20 bytes apiece.               **           06050
**                                                          **           06051
**      FORMAT OF THE PARM TABLE                            **           06052
**                                                          **           06053
**        ONE ENTRY IS 20 BYTES                             **           06054
**                                                          **           06055
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **           06056
**                         (This is the word which          **           06057
**                          controls the bit settings.)     **           06058
**                         (up to and including 8 bytes)    **           06059
**                                                          **           06060
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **           06061
**                         X'00' says turn bit flag(s) ON   **           06062
**                         X'10' set entry as a DEFAULT     **           06063
**                                                          **           06064
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **           06065
**                         (This is the word searched on,   **           06066
**                          in the EXEC PARM and SYSIN      **           06067
**                          areas.)                         **           06068
**                                                          **           06069
**          NEXT 10 BYTES: FLAG BIT settings controlled by  **           06070
**                          this keyword.                   **           06071
**                                                          **           06072
**                         These are the bits which the     **           06073
**                          keyword will flip on (or off).  **           06074
**                                                          **           06075
**                         You may control multiple bits    **           06076
**                          using one keyword.  All bits    **           06077
**                          controlled by this keyword      **           06078
**                          are coded in this entry field.  **           06079
**                                                          **           06080
**          The table is ended by an entry of X'FF's.       **           06081
**                                                          **           06082
**                                                          **           06083
**    Output:  R1 points to a 10-byte area containing the   **           06084
**             80 switch settings.                          **           06085
**                                                          **           06086
**             Sample code to use PARMCHEK output:          **           06087
**                                                          **           06088
**                      ST    R1,PARMADDR                   **           06089
**                      USING PARMFLGS,R1                   **           06090
**             *                                            **           06091
**             PARMFLGS DSECT                               **           06092
**             PARMFLG1 DS    X                             **           06093
**             PARMFLG2 DS    X                             **           06094
**             PARMFLG3 DS    X                             **           06095
**             PARMFLG4 DS    X                             **           06096
**             PARMFLG5 DS    X                             **           06097
**             PARMFLG6 DS    X                             **           06098
**             PARMFLG7 DS    X                             **           06099
**             PARMFLG8 DS    X                             **           06100
**             PARMFLG9 DS    X                             **           06101
**             PARMFLGA DS    X                             **           06102
**                                                          **           06103
**               then ....                                  **           06104
**                                                          **           06105
**                      TM    PARMFLG2,X'04'                **           06106
**                      BZ    some location                 **           06107
**                        ....                              **           06108
**                                                          **           06109
**             R2 points to the address of a data area      **           06110
**             containing values generated by this          **           06111
**             program.  It's address is at label STRTVALU  **           06112
**             and its length is in the first fullword      **           06113
**             at STRTVALU.                                 **           06114
**                                                          **           06115
**             R2 is accessed in a similar manner to R1.    **           06116
**             See the PARMDRVR program for an example      **           06117
**             illustrating one way in which PARMCHEK       **           06118
**             may be called.                               **           06119
**                                                          **           06120
**                                                          **           06121
**************************************************************           06122
         EJECT                                                           06123
**************************************************************           06124
**                                                          **           06125
**  CHANGE LOG:                                             **           06126
**                                                          **           06127
**    Version 1.1 - Separate Parm Table into different      **           06128
**       CSECT.  Detailed reporting in PARMREPT ddname.     **           06129
**                                                          **           06130
**    Version 1.2 - Uppercase keyword before comparing      **           06131
**       against the table entries.  This assumes you       **           06132
**       will code your table with all uppercase keyword    **           06133
**       entries.                                           **           06134
**                                                          **           06135
**    Version 1.3 - Option for requiring commas or spaces   **           06136
**       as delimiters between parms.  Comment out one      **           06137
**       instruction to require delimiters.                 **           06138
**                                                          **           06139
**    Version 1.4 - Fitted to COPYMODS Level 061.           **           06140
**                                                          **           06141
**    Version 1.5 - Fitted to COPYMODS Level 082.           **           06142
**                  Ten parm bits instead of five.          **           06143
**                                                          **           06144
**    Version 1.6 - Allow lowercase in SYSIN keywords.      **           06145
**                                                          **           06146
**                                                          **           06147
**************************************************************           06148
**************************************************************           06149
         EJECT                                                           06150
**************************************************************           06151
*  ---------------------------------------------------------------  *    06152
*    This macro is used to display hex values in a printed report.       06153
*  ---------------------------------------------------------------  *    06154
         MACRO                                                           06155
&NAME    HEX   &TO,&LEN,&FROM                                            06156
&NAME    DS    0H                                                        06157
         ST    R4,SAV4HEX                                                06158
         STM   R15,R1,HEXSAVE                                            06159
         LA    R1,&FROM                                                  06160
         LA    R0,&LEN                                                   06161
         LA    R15,&TO                                                   06162
         BAL   R4,HEX                                                    06163
         L     R4,SAV4HEX                                                06164
         LM    R15,R1,HEXSAVE                                            06165
         MEND                                                            06166
         SPACE                                                           06167
**************************************************************           06168
         GBLC  &LLEV                                                     06169
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                06170
         GBLA  &HEXDFLA                                                  06171
&LLEV    SETC  '1.6 '                                                    06172
         YREGS                                                           06173
* ------------------------------------------------------------------ *   06174
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   06175
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   06176
* ------------------------------------------------------------------ *   06177
         ENTRY CARDREAD                                                  06178
         ENTRY PARMCHEK                                                  06179
&HEXDFLA SETA  4                                                         06180
&HEXDFLC SETC  '&HEXDFLA'                                                06181
PARMCHEK CSECT                                                           06182
         USING *,R15                                                     06183
         B     EYECATCH                                                  06184
         DC    C'HEX DUMP '                                              06185
HEXDFLCC DC    C'&HEXDFLC'                                               06186
         DC    C' RECORDS '                                              06187
HEXDFLL  EQU   L'HEXDFLCC                                                06188
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 06189
         DC    C'--- '            MAKE EYECATCHER VISIBLE                06190
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '                06191
         DC    C' - '                                                    06192
         DC    C'PARM INPUT IN SYSIN '                                   06193
         DC    C' - '                                                    06194
         DC    C'LEVEL '                                                 06195
SYSLEV   DC    C'&LLEV'                                                  06196
         DC    C' - '                                                    06197
SYSDAT   DC    C'&SYSDATE'                                               06198
         DC    C'  ',C'&SYSTIME ',C'--- '                                06199
         DC    C'--- '            MAKE EYECATCHER VISIBLE                06200
SAVEAREA DC    18F'0'                                                    06201
EYECATCH DS    0D             ENSURE ALIGNMENT                           06202
         SAVE  (14,12)                                                   06203
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   06204
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          06205
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         06206
         LR    R13,R1               NEW SAVE AREA ADDRESS                06207
         DROP  R15                                                       06208
* -----                       SET UP BASE REGISTERS                      06209
         USING PARMCHEK,R12,R11,R10                                      06210
         LR    R12,R15                                                   06211
         LA    R11,4095(,R12)                                            06212
         LA    R11,1(,R11)                                               06213
         LA    R10,4095(,R11)                                            06214
         LA    R10,1(,R10)                                               06215
*                                                                        06216
* ----->   GET PARMS THAT COPYMODS WAS CALLED WITH.                      06217
*                                                                        06218
         LR    R6,R2          SAVE USER AREA POINTER                     06219
         L     R6,PARMSTRT-STRTVALU(,R6)   SAVED ORIGINAL PARMS          06220
         LR    R1,R6          RESTORE PARM POINTER                       06221
         ST    R1,PARMSAVE                                               06222
* ----------------------------------------------------------------- *    06223
TIOTSCAN DS    0H             Determine the presence of Optional         06224
*                             DDNAMES:  SYSIN AND PARMREPT.              06225
* ----->                      OPEN them if there is JCL for them.        06226
* ----------------------------------------------------------------- *    06227
         L     R5,16          R5=CVT                                     06228
         L     R5,0(,R5)      R5=TCB WORDS                               06229
         L     R5,4(,R5)      R5=MY TCB                                  06230
         L     R5,12(,R5)     R5=TIOT                                    06231
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06232
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06233
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06234
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?               06235
         BNE   TIOTSYSN       NO                                         06236
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD         06237
         B     TIOTNEXT       CONTINUE                                   06238
TIOTSYSN CLC   4(8,R5),SYSIN+40                                          06239
         BNE   TIOTNEXT                                                  06240
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         06241
         B     TIOTNEXT                                                  06242
TIOTNEXT SR    R3,R3                                                     06243
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06244
         AR    R5,R3          R5=NEXT DD ENTRY                           06245
         B     TIOTLOOP       GO CHECK IT                                06246
TIOTSEND DS    0H                                                        06247
***********************************************************************  06248
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  06249
***********************************************************************  06250
         STM   R14,R2,SAVE1402                                           06251
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             06252
         OI    DATE+4,X'0F'                                              06253
         UNPK  DATED,DATE                                                06254
         OI    TIME+3,X'0F'                                              06255
         UNPK  TIMED,TIME                                                06256
*                          FILL HEADDATE AREA WITH INFO TO REUSE         06257
         MVC   HEADDATE(2),DATED                                         06258
         MVI   HEADDATE+2,C'/'                                           06259
         MVC   HEADDATE+3(2),DATED+2                                     06260
         MVI   HEADDATE+5,C'/'                                           06261
         MVC   HEADDATE+6(4),DATED+4                                     06262
         MVC   HEADDATE+12(2),TIMED                                      06263
         MVI   HEADDATE+14,C':'                                          06264
         MVC   HEADDATE+15(2),TIMED+2                                    06265
         MVI   HEADDATE+17,C':'                                          06266
         MVC   HEADDATE+18(2),TIMED+4                                    06267
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         06268
         LM    R14,R2,SAVE1402                                           06269
***********************************************************************  06270
         MVC   LEVDATE(8),SYSDAT                                         06271
***********************************************************************  06272
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND             06273
* ----------------------------------------------------------------- *    06274
INITCONS DS    0H                                                        06275
         ZAP   TOTMLCNT,=P'0'                                            06276
* ----------------------------------------------------------------- *    06277
CHEKPRNT DS    0H                                                        06278
         TM    FLAGSYST,X'01'                                            06279
         BZ    CHEKPREN                                                  06280
         OPEN  (PARMREPT,OUTPUT)                                         06281
         OI    OPENDFLG,X'01'                                            06282
         MVC   PRTLINE,PRTLINE-1                                         06283
         MVC   PRTLINE,MESSAGE1                                          06284
         PUT   PARMREPT,MESSAGE1                                         06285
         MVC   PRTLINE,PRTLINE-1                                         06286
         PUT   PARMREPT,PRTLINE                                          06287
CHEKPREN DS    0H                                                        06288
* ----------------------------------------------------------------- *    06289
* --------------------------------------------------------- *            06290
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                     06291
*                         PRESENCE OR ABSENCE.                           06292
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                  06293
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                         06294
         L     R1,0(,R1)      Get PARM field                             06295
         LH    R5,0(,R1)      SAVE PARM LENGTH                           06296
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                       06297
         MVC   SAVMSLEN,PARMSLEN                                         06298
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 06299
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS                06300
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE               06301
         LA    R1,0           USE R1 TO MEASURE LENGTH READ              06302
* -----------------------------------------------------------            06303
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE               06304
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                               06305
* -----------------------------------------------------------            06306
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE               06307
         CLI   0(R2),X'FF'    END OF PARM TABLE?                         06308
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.            06309
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                   06310
         BO    PARMDSET       YES, GO SET IT.                            06311
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               06312
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                 06313
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                  06314
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..                06315
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.        06316
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               06317
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                  06318
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK            06319
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES              06320
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF        06321
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               06322
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE             06323
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER               06324
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 06325
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE               06326
* ----------------------------------------------------------------- *    06327
SCANPARM DS    0H                                                        06328
         ST    R7,SAVE7BA0                                               06329
         ZAP   PARMLCNT,=P'0'                                            06330
         ZAP   PARMHITS,=P'0'                                            06331
         MVC   PARMSLEN,SAVMSLEN                                         06332
         BAL   R7,PARMLOOP      Now check the PARM field                 06333
         MVC   SAVPHITS,PARMHITS                                         06334
         MVC   SAVCHRCT,PRMCHRCT                                         06335
         MVC   SAVELCNT,PARMLCNT                                         06336
         AP    TOTMHITS,PARMHITS                                         06337
         AP    TOTMLCNT,PARMLCNT                                         06338
         L     R7,SAVE7BA0                                               06339
* ----------------------------------------------------------------- *    06340
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                   06341
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING             06342
         OPEN  (SYSIN,INPUT)                                             06343
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                   06344
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE               06345
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN                06346
         B     OPNSYSNE           AND CONTINUE PROCESSING.               06347
NOSYSIN  DS    0H                                                        06348
         B     CARDREND                                                  06349
OPNSYSNE DS    0H                                                        06350
* ----------------------------------------------------------------- *    06351
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT               06352
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.         06353
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                        06354
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.       06355
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS        06356
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06357
*              Insert User Code Here for Keywords                        06358
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06359
         GET   SYSIN,CARDIN                                              06360
*                                                                        06361
* -- >>              <-- Intercept any keywords you want in SYSIN -->    06362
* -- >>              <--    before you start the table scan       -->    06363
*                                                                        06364
* ----------------------------------------------------------------- *    06365
         MVI   CARDWORK,X'40'           CLEAR CARD WORKAREA TO BLANKS    06366
         MVC   CARDWORK+1(79),CARDWORK                                   06367
         MVC   CARDWORK(80),CARDIN      MOVE CARD IMAGE TO WORKAREA      06368
         OC    CARDWORK(80),CARDBLNK    UPPERCASE                        06369
* ----------------------------------------------------------------- *    06370
*      CARDWORK now contains an uppercased version of CARDIN.            06371
* ----------------------------------------------------------------- *    06372
         CLC   =C'OUTVOLALL=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06373
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD           06374
         CLC   =C'TAPEOWNER=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06375
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD           06376
         CLC   =C'FILELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06377
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD           06378
         CLC   =C'LABELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06379
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD           06380
         CLC   =C'PRINTRCDS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06381
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD           06382
         CLC   =C'WRITELTMS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06383
         BE    LTMNMGET          PROCESS THIS CARD FOR KEYWORD           06384
         CLC   =C'/*',CARDIN                                             06385
         BE    SYSINEND                                                  06386
*                                                                        06387
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06388
* ----         Resume Checking SYSIN in PARM Table                       06389
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06390
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL        06391
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                         06392
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD    06393
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH             06394
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE        06395
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                  06396
         L     R1,TOTCHRCT                                               06397
         A     R1,PRMCHRCT                                               06398
         ST    R1,TOTCHRCT                                               06399
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN          06400
         ZAP   PARMHITS,=P'0'                                            06401
         ZAP   PARMLCNT,=P'0'                                            06402
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                 06403
         AP    TOTMHITS,PARMHITS                                         06404
         AP    TOTMLCNT,PARMLCNT                                         06405
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                      06406
         B     CARDREAD        GET ANOTHER CARD                          06407
* ----                                                                   06408
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06409
*              Handle User Code Here for Keywords                        06410
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06411
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?        06412
         BE    CARDREAD                 YES. IGNORE CARD                 06413
         MVC   VOLSTG1(6),CARDIN+10                                      06414
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      06415
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER   06416
         B     CARDREAD          GET ANOTHER CARD                        06417
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?        06418
         BE    CARDREAD                 YES. IGNORE CARD                 06419
         MVC   TAPEOWN(14),CARDIN+10                                     06420
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      06421
         B     CARDREAD                                                  06422
FILELGET DS    0H                                                        06423
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            06424
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 06425
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      06426
         BL    CARDREAD          YES. IGNORE.                            06427
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          06428
         BH    CARDREAD          YES. IGNORE.                            06429
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON                06430
         LA    R15,CARDIN+10     STARTING ADDRESS                        06431
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               06432
FILELNUM DS    0H                                                        06433
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  06434
         C     R15,=A(CARDIN+71) END OF CARD?                            06435
         BH    FILELGNM          YES, GET NUMBER                         06436
         CLI   0(R15),C' '       BLANK HERE?                             06437
         BE    FILELGNM          YES, GET NUMBER                         06438
         B     FILELNUM          NO. STEP UP ONE PLACE                   06439
FILELGNM DS    0H                                                        06440
         SR    R15,R1            HOW BIG IS THE NUMBER                   06441
         BCTR  R15,0             LOWER IT FOR EXECUTE                    06442
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            06443
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA         06444
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA       06445
         CVB   R0,WORKA          CONVERT IT TO BINARY                    06446
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE           06447
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES               06448
         CVB   R0,WORKA          CONVERT IT TO BINARY                    06449
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE           06450
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS       06451
FILELCLG DS    0H                                                        06452
         B     CARDREAD                                                  06453
LABELGET DS    0H                                                        06454
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            06455
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 06456
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      06457
         BL    CARDREAD          YES. IGNORE.                            06458
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          06459
         BH    CARDREAD          YES. IGNORE.                            06460
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON               06461
         LA    R15,CARDIN+10     STARTING ADDRESS                        06462
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               06463
LABELNUM DS    0H                                                        06464
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  06465
         C     R15,=A(CARDIN+71) END OF CARD?                            06466
         BH    LABELGNM          YES, GET NUMBER                         06467
         CLI   0(R15),C' '       BLANK HERE?                             06468
         BE    LABELGNM          YES, GET NUMBER                         06469
         B     LABELNUM          NO. STEP UP ONE PLACE                   06470
LABELGNM DS    0H                                                        06471
         SR    R15,R1            HOW BIG IS THE NUMBER                   06472
         BCTR  R15,0             LOWER IT FOR EXECUTE                    06473
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA            06474
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA         06475
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA            06476
         CVB   R0,WORKL          CONVERT IT TO BINARY                    06477
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE           06478
LABELCLG DS    0H                                                        06479
         B     CARDREAD                                                  06480
PRINTGET DS    0H                                                        06481
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            06482
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 06483
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      06484
         BL    CARDREAD          YES. IGNORE.                            06485
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          06486
         BH    CARDREAD          YES. IGNORE.                            06487
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ         06488
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                    06489
         LA    R15,CARDIN+10     STARTING ADDRESS                        06490
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               06491
PRINTNUM DS    0H                                                        06492
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  06493
         C     R15,=A(CARDIN+71) END OF CARD?                            06494
         BH    PRINTGNM          YES, GET NUMBER                         06495
         CLI   0(R15),C' '       BLANK HERE?                             06496
         BE    PRINTGNM          YES, GET NUMBER                         06497
         B     PRINTNUM          NO. STEP UP ONE PLACE                   06498
PRINTGNM DS    0H                                                        06499
         SR    R15,R1            HOW BIG IS THE NUMBER                   06500
         BCTR  R15,0             LOWER IT FOR EXECUTE                    06501
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA            06502
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA         06503
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA            06504
         CVB   R0,WORKP          CONVERT IT TO BINARY                    06505
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE           06506
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER            06507
PRINTCLG DS    0H                                                        06508
         B     CARDREAD                                                  06509
LTMNMGET DS    0H                                                        06510
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            06511
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 06512
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      06513
         BL    CARDREAD          YES. IGNORE.                            06514
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          06515
         BH    CARDREAD          YES. IGNORE.                            06516
         OI    PARMFLG5,X'08'    SET WRTLTM OPTION ON                    06517
         LA    R15,CARDIN+10     STARTING ADDRESS                        06518
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               06519
LTMNMNUM DS    0H                                                        06520
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  06521
         C     R15,=A(CARDIN+71) END OF CARD?                            06522
         BH    LTMNMGNM          YES, GET NUMBER                         06523
         CLI   0(R15),C' '       BLANK HERE?                             06524
         BE    LTMNMGNM          YES, GET NUMBER                         06525
         B     LTMNMNUM          NO. STEP UP ONE PLACE                   06526
LTMNMGNM DS    0H                                                        06527
         SR    R15,R1            HOW BIG IS THE NUMBER                   06528
         BCTR  R15,0             LOWER IT FOR EXECUTE                    06529
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            06530
         EX    R15,MVLTMNUM      COPY THE NUMBER TO MESSAGE AREA         06531
         EX    R15,MVLTMCHR      COPY THE NUMBER TO USER PASS AREA       06532
         CVB   R0,WORKA          CONVERT IT TO BINARY                    06533
         ST    R0,LTMNUMB        STORE THE VALUE FOR LATER USE           06534
LTMNMCLG DS    0H                                                        06535
         B     CARDREAD                                                  06536
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06537
*              End of User Code Here for Keywords                        06538
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06539
CHECKEND DS    0H                                                        06540
* -----------------------------------------------------------            06541
SYSINEND DS    0H                                                        06542
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                     06543
         BZ    CARNOSYS         NO. Flag SYSIN option as OFF.            06544
* ------- Correct Error - SYSIN not shown if not coded explicitly.       06545
         OI    PARMFLG2,X'20'   Mark PARMS that SYSIN is on.             06546
* ------- Correct Error - SYSIN not shown if not coded explicitly.       06547
         L     R1,TOTCHRCT                                               06548
         A     R1,PRMCHRCT         Final totals for last card            06549
         ST    R1,TOTCHRCT                                               06550
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED             06551
         CLOSE (SYSIN)                                                   06552
         B     CARDREND                                                  06553
CARNOSYS DS    0H                                                        06554
         NI    PARMFLG2,FF-X'20'   Turn SYSIN off in PARM flags.         06555
CARDREND DS    0H                                                        06556
         BAL   R7,SUMMREPT                                               06557
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                     06558
         BZ    PARMRPEN         NO.  GET OUT.                            06559
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED             06560
         CLOSE (PARMREPT)                                                06561
PARMRPEN DS    0H                                                        06562
THEEND   DS    0H                                                        06563
         L     R13,4(,R13)                                               06564
         MVC   16(4,R13),=F'0'          Return code 0     in R15         06565
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1          06566
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2          06567
         LM    R14,R12,12(R13)                                           06568
         BR    R14                                                       06569
* -----------------------------------------------------------            06570
*        S U B R O U T I N E S                                           06571
* -----------------------------------------------------------            06572
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.              06573
* -----------------------------------------------------------            06574
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                     06575
         BNL   PARMFIN        YES - GET OUT                              06576
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE         06577
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING            06578
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                         06579
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                   06580
*        ------------------------------------------------------------    06581
*--->                    code to require a delimiter (space, etc)        06582
*                        to enable, comment out the next instruction     06583
*        ------------------------------------------------------------    06584
         B     PRMNODLM         comment this line to require delimiter   06585
         TM    PRMFDFLG,X'01'                                            06586
         BO    PRMNFND                                                   06587
PRMNODLM DS    0H                                                        06588
*--->                                                                    06589
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE              06590
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                 06591
         BCTR  R5,0           ONE LESS FOR EXECUTE                       06592
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE       06593
*                                                                        06594
*   If you want to require parm comparisons as case sensitive,           06595
*    then comment out the following instruction....                      06596
*                                                                        06597
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM       06598
*                                                                        06599
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM     06600
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION                06601
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                          06602
         B     BOPPTBL        INNER LOOP                                 06603
*                                                                        06604
PRMNFND  DS    0H                                                        06605
*--->                 below - Parm Found flagging to require delimiter   06606
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters   06607
         BE    PRMFDOFF                                                  06608
         CLI   0(R4),C','                                                06609
         BE    PRMFDOFF                                                  06610
         B     PRMFDEND                                                  06611
PRMFDOFF DS    0H                                                        06612
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag         06613
PRMFDEND DS    0H                                                        06614
*--->                 above - Parm Found flagging to require delimiter   06615
*                                                                        06616
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                       06617
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                  06618
*                                                                        06619
         B     PARMLOOP       TRY AGAIN                                  06620
*                                                                        06621
PRMFOUND DS    0H                                                        06622
*                                                                        06623
*--->                 below - Parm Found flagging to require delimiter   06624
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                 06625
*--->                 above - Parm Found flagging to require delimiter   06626
PRMNOSEP DS    0H                                                        06627
         AP    PARMHITS,=P'1'    COUNT PARM HITS                         06628
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND            06629
         TM    1(R2),X'01'         PARM ON OR OFF?                       06630
         BO    PARMOFF             OFF                                   06631
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND     06632
         B     PARMGO                        AND GO ON                   06633
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK           06634
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS              06635
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF        06636
PARMGO   DS    0H                                                        06637
         XR    R5,R5          Clear Work Reg befor IC                    06638
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE             06639
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                  06640
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                   06641
         B     PARMLOOP       LOOK FOR MORE PARMS                        06642
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --              06643
*                             COUNT FOR DEBUGGING                        06644
PRMCHEND DS    0H                                                        06645
         BR    R7                                                        06646
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                    06647
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                    06648
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                    06649
* --------------------------------------------------------- *            06650
SUMMREPT DS    0H                  Print details of PARMREPT             06651
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                  06652
         BZ    SUMMREND            No. Bypass this routine.              06653
         MVC   PRTLINE,PRTLINE-1                                         06654
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                        06655
         HEX   PRTLINE+27,1,PARMFLG1                                     06656
         HEX   PRTLINE+30,1,PARMFLG2                                     06657
         HEX   PRTLINE+33,1,PARMFLG3                                     06658
         HEX   PRTLINE+36,1,PARMFLG4                                     06659
         HEX   PRTLINE+39,1,PARMFLG5                                     06660
         HEX   PRTLINE+42,1,PARMFLG6                                     06661
         HEX   PRTLINE+45,1,PARMFLG7                                     06662
         HEX   PRTLINE+48,1,PARMFLG8                                     06663
         HEX   PRTLINE+51,1,PARMFLG9                                     06664
         HEX   PRTLINE+54,1,PARMFLGA                                     06665
         PUT   PARMREPT,PRTLINE                                          06666
         MVC   PRTLINE,PRTLINE-1                                         06667
         PUT   PARMREPT,PRTLINE                                          06668
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first.  06669
         MVC   PRTLINE+4(12),=C'User Area : '                            06670
         HEX   PRTLINE+16,48,STRTVALU                                    06671
         PUT   PARMREPT,PRTLINE                                          06672
         MVC   PRTLINE,PRTLINE-1                                         06673
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                          06674
         HEX   PRTLINE+16,48,STRTVALU+48                                 06675
         PUT   PARMREPT,PRTLINE                                          06676
         MVC   PRTLINE,PRTLINE-1                                         06677
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                          06678
         HEX   PRTLINE+16,48,STRTVALU+96                                 06679
         PUT   PARMREPT,PRTLINE                                          06680
         MVC   PRTLINE,PRTLINE-1                                         06681
         MVC   PRTLINE+4(12),=C'UA + x''90'': '                          06682
         HEX   PRTLINE+16,38,STRTVALU+144                                06683
         PUT   PARMREPT,PRTLINE                                          06684
         MVC   PRTLINE,PRTLINE-1                                         06685
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                  06686
         HEX   PRTLINE+30,4,STRTVALU                                     06687
         MVC   PRTLINE+42(6),=C'Hex   '                                  06688
         PUT   PARMREPT,PRTLINE                                          06689
         MVC   PRTLINE,PRTLINE-1                                         06690
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                  06691
         HEX   PRTLINE+30,4,PARMSLEN                                     06692
         MVC   PRTLINE+42(6),=C'Hex   '                                  06693
         PUT   PARMREPT,PRTLINE                                          06694
         MVC   PRTLINE,PRTLINE-1                                         06695
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                  06696
         HEX   PRTLINE+30,4,SAVMSLEN                                     06697
         MVC   PRTLINE+42(6),=C'Hex   '                                  06698
         PUT   PARMREPT,PRTLINE                                          06699
         MVC   PRTLINE,PRTLINE-1                                         06700
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                  06701
         HEX   PRTLINE+30,4,PARMSTRT                                     06702
         MVC   PRTLINE+42(6),=C'Hex   '                                  06703
         PUT   PARMREPT,PRTLINE                                          06704
         MVC   PRTLINE,PRTLINE-1                                         06705
         MVC   PRTLINE+4(22),=C'Last Character Count :'                  06706
         HEX   PRTLINE+30,4,PRMCHRCT                                     06707
         MVC   PRTLINE+42(6),=C'Hex   '                                  06708
         PUT   PARMREPT,PRTLINE                                          06709
         MVC   PRTLINE,PRTLINE-1                                         06710
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                  06711
         HEX   PRTLINE+30,4,SAVCHRCT                                     06712
         MVC   PRTLINE+42(6),=C'Hex   '                                  06713
         PUT   PARMREPT,PRTLINE                                          06714
         MVC   PRTLINE,PRTLINE-1                                         06715
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                  06716
         HEX   PRTLINE+30,4,TOTCHRCT                                     06717
         MVC   PRTLINE+42(6),=C'Hex   '                                  06718
         PUT   PARMREPT,PRTLINE                                          06719
         MVC   PRTLINE,PRTLINE-1                                         06720
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                  06721
         HEX   PRTLINE+30,4,SAVPHITS                                     06722
         MVC   PRTLINE+42(6),=C'Packed'                                  06723
         PUT   PARMREPT,PRTLINE                                          06724
         MVC   PRTLINE,PRTLINE-1                                         06725
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                  06726
         HEX   PRTLINE+30,4,PARMHITS                                     06727
         MVC   PRTLINE+42(6),=C'Packed'                                  06728
         PUT   PARMREPT,PRTLINE                                          06729
         MVC   PRTLINE,PRTLINE-1                                         06730
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                  06731
         HEX   PRTLINE+30,4,TOTMHITS                                     06732
         MVC   PRTLINE+42(6),=C'Packed'                                  06733
         PUT   PARMREPT,PRTLINE                                          06734
         MVC   PRTLINE,PRTLINE-1                                         06735
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                  06736
         HEX   PRTLINE+30,4,SAVELCNT                                     06737
         MVC   PRTLINE+42(6),=C'Packed'                                  06738
         PUT   PARMREPT,PRTLINE                                          06739
         MVC   PRTLINE,PRTLINE-1                                         06740
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                  06741
         HEX   PRTLINE+30,4,PARMLCNT                                     06742
         MVC   PRTLINE+42(6),=C'Packed'                                  06743
         PUT   PARMREPT,PRTLINE                                          06744
         MVC   PRTLINE,PRTLINE-1                                         06745
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                  06746
         HEX   PRTLINE+30,4,TOTMLCNT                                     06747
         MVC   PRTLINE+42(6),=C'Packed'                                  06748
         PUT   PARMREPT,PRTLINE                                          06749
         MVC   PRTLINE,PRTLINE-1                                         06750
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                  06751
         HEX   PRTLINE+30,20,PARMTENT                                    06752
         PUT   PARMREPT,PRTLINE                                          06753
SUMMREND DS    0H                                                        06754
         BR    R7                                                        06755
* --------------------------------------------------------- *            06756
* --------------------------------------------------------- *            06757
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                    06758
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                    06759
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                    06760
MVLTMNUM MVC   LTMWMSG+11(0),0(R1)   <<< EXECUTED >>>                    06761
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                    06762
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                    06763
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                    06764
MVLTMCHR MVC   LTMCHAR(0),0(R1)      <<< EXECUTED >>>                    06765
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                    06766
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                    06767
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                    06768
         LTORG                                                           06769
         EJECT                                                           06770
* --------------------------------------------------------- *            06771
WORKA    DC    D'0'                                                      06772
WORKL    DC    D'0'                                                      06773
WORKP    DC    D'0'                                                      06774
PL4NO3   DC    PL4'3'                                                    06775
FF       EQU   X'FF'                                                     06776
LTMWMSG  DC    C' WRITELTMS=           HAS BEEN CODED IN SYSIN. THIS N'  06777
         DC    C'UMBER OF LEADING TAPE MARKS WILL BE WRITTEN TO OUTPUT'  06778
         DC    C'S.'                                                     06779
         DC    CL25' '                                                   06780
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  06781
         DC    C' IS TREATED AS NL.                                   '  06782
         DC    CL27' '                                                   06783
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  06784
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  06785
         DC    CL27' '                                                   06786
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  06787
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  06788
         DC    CL27' '                                                   06789
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 06790
         DC    CL6'&HEXDFLM'                                             06791
         DC    C' RECORDS WILL'                                          06792
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  06793
         DC    C'SYSIN.'                                                 06794
         DC    CL17' '                                                   06795
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     06796
* --------------------------------------------------------- *            06797
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                06798
PARMFLG1 DC    X'00'                                                     06799
PARMFLG2 DC    X'00'                                                     06800
PARMFLG3 DC    X'00'                                                     06801
PARMFLG4 DC    X'00'                                                     06802
PARMFLG5 DC    X'00'                                                     06803
PARMFLG6 DC    X'00'                                                     06804
PARMFLG7 DC    X'00'                                                     06805
PARMFLG8 DC    X'00'                                                     06806
PARMFLG9 DC    X'00'                                                     06807
PARMFLGA DC    X'00'                                                     06808
PARMCOPY DS    XL10                Copy of options before correction     06809
* --------------------------------------------------------- *            06810
         DS    0F                                                        06811
STRTVALU DS    0CL(ENDVALUE)                                             06812
         DC    A(ENDVALUE)                                               06813
PARMSLEN DC    F'0'                LENGTH OF PARMS                       06814
*                                  Upon entry, this field contains       06815
*                                  the PARM address from COPYMODS,       06816
*                                  which gets overlaid by PARMCHEK.      06817
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       06818
*                                  Upon entry, this field contains       06819
*                                  the PARM address from COPYMODS,       06820
*                                  which gets overlaid by PARMCHEK.      06821
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               06822
*                                  Upon entry, this field contains       06823
*                                  the PARM length from COPYMODS,        06824
*                                  which gets overlaid by PARMCHEK.      06825
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06826
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06827
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06828
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   06829
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   06830
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   06831
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06832
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06833
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06834
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 06835
         DC    CL7' '              FILLER                                06836
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            06837
*  -----    User Stuff                                                   06838
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          06839
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  06840
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      06841
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         06842
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         06843
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         06844
LTMNUMB  DC    F'0'           NUMBER OF LEADING T.M. TO BE WRITTEN       06845
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       06846
TAPEOWN  DC    CL10' '                                                   06847
TAPEOEXT DC    CL4' '                                                    06848
TAPEOASC DC    CL14' '                                                   06849
OVERFLAG DC    X'00'                                                     06850
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               06851
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    06852
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         06853
LIMCHAR  DC    CL10' '                                                   06854
LABCHAR  DC    CL10' '                                                   06855
PRTCHAR  DC    CL10' '                                                   06856
LTMCHAR  DC    CL10' '                                                   06857
ENDVALUE EQU   (*-PARMSLEN)+4                                            06858
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     06859
* --------------------------------------------------------- *            06860
*              FORMAT OF PARM TABLE                                      06861
*              ONE ENTRY IS 20 BYTES                                     06862
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               06863
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 06864
*                               X'00' SAYS TURN FLAG ON                  06865
*                               X'10' SET ENTRY AS A DEFAULT             06866
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               06867
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                06868
*                                WHICH ALLOWS FOR 80 PARMS               06869
*                                THAT DON'T HAVE TO BE                   06870
*                                SEPARATED BY A COMMA.                   06871
PBYTES   EQU   10               Number of bytes of parm switches         06872
PTELEN   EQU   20               Length of each table entry               06873
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes  06874
EFFS     DC    20X'FF'          X'FF' bytes for XORing                   06875
* --------------------------------------------------------- *            06876
PARMTABL CSECT                                                           06877
         DC    X'07',X'00',C'LTMSKIP ',X'20000000000000000000'           06878
         DC    X'07',X'00',C'SKIPLTM ',X'20000000000000000000'           06879
         DC    X'07',X'11',C'COPYLTM ',X'20000000000000000000'           06880
         DC    X'07',X'01',C'LTMCOPY ',X'20000000000000000000'           06881
         DC    X'07',X'00',C'LBLINFO ',X'DE000000000000000000'           06882
         DC    X'06',X'00',C'PRINTL  ',X'DE000000000000000000'           06883
         DC    X'06',X'00',C'LABELS  ',X'DE000000000000000000'           06884
         DC    X'06',X'01',C'NOLABL  ',X'DE000000000000000000'           06885
         DC    X'07',X'11',C'NOLABEL ',X'DE000000000000000000'           06886
         DC    X'04',X'00',C'HDR1    ',X'02000000000000000000'           06887
         DC    X'06',X'01',C'NOHDR1  ',X'02000000000000000000'           06888
         DC    X'04',X'00',C'HDR2    ',X'04000000000000000000'           06889
         DC    X'06',X'01',C'NOHDR2  ',X'04000000000000000000'           06890
         DC    X'04',X'00',C'EOF1    ',X'08000000000000000000'           06891
         DC    X'06',X'01',C'NOEOF1  ',X'08000000000000000000'           06892
         DC    X'04',X'00',C'EOF2    ',X'10000000000000000000'           06893
         DC    X'06',X'01',C'NOEOF2  ',X'10000000000000000000'           06894
         DC    X'04',X'00',C'EOV1    ',X'40000000000000000000'           06895
         DC    X'06',X'01',C'NOEOV1  ',X'40000000000000000000'           06896
         DC    X'05',X'00',C'EOV2    ',X'80000000000000000000' + space   06897
         DC    X'06',X'01',C'NOEOV2  ',X'80000000000000000000'           06898
         DC    X'04',X'00',C'HDRS    ',X'06000000000000000000'           06899
         DC    X'06',X'01',C'NOHDRS  ',X'06000000000000000000'           06900
         DC    X'04',X'00',C'EOFS    ',X'18000000000000000000'           06901
         DC    X'06',X'01',C'NOEOFS  ',X'18000000000000000000'           06902
         DC    X'04',X'00',C'EOVS    ',X'C0000000000000000000'           06903
         DC    X'06',X'01',C'NOEOVS  ',X'C0000000000000000000'           06904
         DC    X'06',X'00',C'CHGVOL  ',X'00010000000000000000'           06905
         DC    X'08',X'11',C'NOCHGVOL',X'00010000000000000000'           06906
         DC    X'06',X'00',C'JCLVOL  ',X'00010000000000000000'           06907
         DC    X'08',X'01',C'NOJCLVOL',X'00010000000000000000'           06908
         DC    X'06',X'00',C'NEWVOL  ',X'00010000000000000000'           06909
         DC    X'08',X'01',C'NONEWVOL',X'00010000000000000000'           06910
         DC    X'06',X'10',C'VOLLBL  ',X'00020000000000000000'           06911
         DC    X'08',X'01',C'NOVOLLBL',X'00020000000000000000'           06912
         DC    X'07',X'00',C'EOV2EOF ',X'00040000000000000000'           06913
         DC    X'08',X'00',C'EOVTOEOF',X'00040000000000000000'           06914
         DC    X'06',X'00',C'EOVCHG  ',X'00040000000000000000'           06915
         DC    X'08',X'11',C'NOEOVCHG',X'00040000000000000000'           06916
         DC    X'04',X'00',C'READ    ',X'00080000000000000000'           06917
         DC    X'08',X'00',C'READONLY',X'00080000000000000000'           06918
         DC    X'07',X'00',C'NOWRITE ',X'00080000000000000000'           06919
         DC    X'07',X'11',C'WRITE   ',X'00080000000000000000'           06920
         DC    X'08',X'00',C'LABLDUMP',X'00100000000000000000'           06921
         DC    X'08',X'11',C'NOLABLDU',X'00100000000000000000'           06922
         DC    X'05',X'00',C'SYSIN   ',X'00200000000000000000'           06923
         DC    X'07',X'11',C'NOSYSIN ',X'00200000000000000000'           06924
         DC    X'06',X'00',C'OUTVOL  ',X'00400000000000000000'           06925
         DC    X'08',X'01',C'NOOUTVOL',X'00400000000000000000'           06926
         DC    X'08',X'00',C'LABADDIN',X'00808000000000000000'           06927
         DC    X'08',X'01',C'NOLABADD',X'00800000000000000000'           06928
         DC    X'06',X'10',C'BLKCNT  ',X'01000000000000000000'           06929
         DC    X'08',X'01',C'NOBLKCNT',X'01000000000000000000'           06930
         DC    X'08',X'00',C'PRADDLBL',X'00001000000000000000'           06931
         DC    X'08',X'01',C'NOPRADDL',X'00001000000000000000'           06932
         DC    X'08',X'10',C'CORRBLKS',X'00002000000000000000'           06933
         DC    X'08',X'01',C'NOCORRBL',X'00002000000000000000'           06934
         DC    X'08',X'00',C'NOEXNULL',X'00004000000000000000'           06935
         DC    X'08',X'00',C'NOSLNULL',X'00004000000000000000'           06936
         DC    X'06',X'11',C'EXNULL  ',X'00004000000000000000'           06937
         DC    X'06',X'01',C'SLNULL  ',X'00004000000000000000'           06938
         DC    X'06',X'00',C'LBLFIX  ',X'00008000000000000000'           06939
         DC    X'08',X'01',C'NOLBLFIX',X'00008000000000000000'           06940
         DC    X'08',X'00',C'INITVOLS',X'00010100000000000000'           06941
         DC    X'08',X'00',C'INITTAPE',X'00010100000000000000'           06942
         DC    X'08',X'11',C'NOINITVO',X'00000100000000000000'           06943
         DC    X'07',X'00',C'LIMFILE ',X'00000200000000000000'           06944
         DC    X'07',X'00',C'FILELIM ',X'00000200000000000000'           06945
         DC    X'08',X'01',C'NOLIMFIL',X'00000200000000000000'           06946
         DC    X'05',X'00',C'BYTES   ',X'00000400000000000000'           06947
         DC    X'07',X'01',C'NOBYTES ',X'00000400000000000000'           06948
         DC    X'06',X'00',C'CUMTOT  ',X'00000800000000000000'           06949
         DC    X'08',X'01',C'NOCUMTOT',X'00000800000000000000'           06950
         DC    X'08',X'00',C'LIMLABEL',X'00000010000000000000'           06951
         DC    X'08',X'01',C'NOLIMLAB',X'00000010000000000000'           06952
         DC    X'06',X'10',C'OPTION  ',X'00000020000000000000'           06953
         DC    X'08',X'01',C'NOOPTION',X'00000020000000000000'           06954
         DC    X'07',X'00',C'SUPPWTO ',X'00000040000000000000'           06955
         DC    X'08',X'11',C'NOSUPPWT',X'00000040000000000000'           06956
         DC    X'08',X'00',C'LBDQUICK',X'00000080000000000000'           06957
         DC    X'08',X'01',C'NOLBDQUI',X'00000080000000000000'           06958
         DC    X'06',X'00',C'CUMSEP  ',X'00000001000000000000'           06959
         DC    X'08',X'01',C'NOCUMSEP',X'00000001000000000000'           06960
         DC    X'05',X'00',C'STRIP   ',X'00000002000000000000'           06961
         DC    X'07',X'11',C'NOSTRIP ',X'00000002000000000000'           06962
         DC    X'05',X'00',C'NLLIM   ',X'00000004000000000000'           06963
         DC    X'07',X'01',C'NONLLIM ',X'00000004000000000000'           06964
         DC    X'05',X'00',C'SLLIM   ',X'00000008000000000000'           06965
         DC    X'07',X'01',C'NOSLLIM ',X'00000008000000000000'           06966
         DC    X'07',X'00',C'IDRCOFF ',X'00000000100000000000'           06967
         DC    X'08',X'01',C'NOIDRCOF',X'00000000100000000000'           06968
         DC    X'06',X'00',C'HEXPRT  ',X'00000000200000000000'           06969
         DC    X'08',X'01',C'NOHEXPRT',X'00000000200000000000'           06970
         DC    X'07',X'10',C'UNEXWTO ',X'00000000400000000000'           06971
         DC    X'08',X'01',C'NOUNEXWT',X'00000000400000000000'           06972
         DC    X'06',X'00',C'INASC3  ',X'00010000810000000000'           06973
         DC    X'07',X'00',C'INASCII ',X'00010000810000000000'           06974
         DC    X'08',X'01',C'NOINASC3',X'00000000810000000000'           06975
         DC    X'06',X'00',C'INASC4  ',X'00010000820000000000'           06976
         DC    X'08',X'01',C'NOINASC4',X'00000000820000000000'           06977
         DC    X'05',X'00',C'ASCII   ',X'00000000800000000000'           06978
         DC    X'07',X'01',C'NOASCII ',X'00000000800000000000'           06979
         DC    X'06',X'01',C'EBCDIC  ',X'00000000800000000000'           06980
         DC    X'08',X'00',C'ENABLTMW',X'00000000040000000000'           06981
         DC    X'08',X'01',C'NOENABLT',X'00000000040000000000'           06982
         DC    X'06',X'00',C'WRTLTM  ',X'00000000080000000000'           06983
         DC    X'08',X'11',C'NOWRTLTM',X'00000000080000000000'           06984
         DC    X'06',X'00',C'SECOFF  ',X'00000000001000000000'           06985
         DC    X'08',X'01',C'NOSECOFF',X'00000000001000000000'           06986
         DC    X'07',X'00',C'FOOTAGE ',X'00000000002000000000'           06987
         DC    X'08',X'01',C'NOFOOTAG',X'00000000002000000000'           06988
         DC    X'08',X'00',C'FOOTDIAG',X'00000000004000000000'           06989
         DC    X'08',X'11',C'NOFOOTDI',X'00000000004000000000'           06990
         DC    X'08',X'00',C'CODEDPRM',X'00000000008000000000'           06991
         DC    X'08',X'11',C'NOCODEDP',X'00000000008000000000'           06992
         DC    X'06',X'00',C'MINMAX  ',X'00000000000100000000'           06993
         DC    X'08',X'01',C'NOMINMAX',X'00000000000100000000'           06994
         DC    X'07',X'00',C'RECSIZE ',X'00000000000200000000'           06993
         DC    X'08',X'01',C'NORECSIZ',X'00000000000200000000'           06994
         DC    X'06',X'00',C'DGSTRI  ',X'00000000000400000000'           06993
         DC    X'08',X'11',C'NODGSTRI',X'00000000000400000000'           06994
         DC    X'FFFFFFFFFFFFFFFF'                                       06995
* --------------------------------------------------------- *            06996
PARMCHEK CSECT                                                           06997
         SPACE 3                                                         06998
         LTORG                                                           06999
         SPACE 3                                                         07000
         DS    0D                                                        07001
* --------------------------------------------------------- *            07002
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR - 07003
               COPYMODS LVL-082'                                         07004
* --------------------------------------------------------- *            07005
         SPACE 3                                                         07006
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X 07007
               EODAD=SYSINEND                                            07008
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA     07009
* --------------------------------------------------------- *            07010
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07011
HEX      DS    0H                                                        07012
         MVC   1(1,R15),0(R1)        Move byte                           07013
         UNPK  0(3,R15),1(2,R15)     Unpack                              07014
         TR    0(2,R15),HEXTAB-240                                       07015
         LA    R15,2(,R15)           Increment output pointer            07016
         LA    R1,1(,R1)             Increment input pointer             07017
         BCT   R0,HEX                Decrement length, then loop         07018
         MVI   0(R15),C' '           Blank the trailing byte             07019
         BR    R4                    Return to caller                    07020
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     07021
         SPACE                                                           07022
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07023
HEXSAVE  DS    3F                    Register save for HEX macro         07024
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07025
* --------------------------------------------------------- *            07026
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT             07027
*              X'01'          PARMREPT DD IS PRESENT                     07028
*              X'02'          SYSIN    DD IS PRESENT                     07029
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                07030
*              X'01'          PARMREPT DD IS OPEN                        07031
*              X'02'          SYSIN    DD IS OPEN                        07032
* --------------------------------------------------------- *            07033
         SPACE 3                                                         07034
PARMSAVE DC    F'0'                                                      07035
SAV4HEX  DC    F'0'                                                      07036
SAVE2TO3 DC    2F'0'                                                     07037
SAVE3REG DC    F'0'                                                      07038
SAVE7BA0 DC    F'0'                                                      07039
SAVE7BA1 DC    F'0'                                                      07040
PARMWORK DC    CL8' '                                                    07041
UPCASEOR DC    CL8' '                                                    07042
         DC    CL4' '                                                    07043
*    ------------------------ >   Constants for Date and Time - below    07044
SAVE1402 DS    6F                 Extra fullword for safety              07045
TIMED    DS    CL7                                                       07046
DATED    DS    CL9                                                       07047
DATETIME DS    4F                                                        07048
         ORG   DATETIME                                                  07049
TIME     DS    CL4                                                       07050
         DS    CL4                                                       07051
DATE     DS    CL5                                                       07052
         DS    CL3                                                       07053
HEADDLIT DS    0CL31              Literal for headings - date and time   07054
         DC    CL6'Today:'                                               07055
         DC    CL2' '                                                    07056
HEADDATE DC    CL23' '                                                   07057
LEVELLIT DS    0CL21              Level number display for headings      07058
         DC    CL6'Level '                                               07059
LEVELL   DC    CL4'&LLEV'                                                07060
         DC    CL2' ('                                                   07061
LEVDATE  DC    CL8' '             Assembly date for this program         07062
         DC    CL1')'                                                    07063
*    ------------------------ >   Constants for Date and Time - above    07064
*    --------------- >            Output line buffers - below            07065
PRMFDFLG DC    X'00'              Parm Found Flag                        07066
*              X'01'              Parm has been found in this record     07067
         DC    CL3' '                                                    07068
         DC    C' '                                                      07069
LINE     DC    CL133' '                                                  07070
         DC    C' '                                                      07071
CNTLINE  DC    CL133' '                                                  07072
         DC    C' '                                                      07073
OUTLINE  DC    CL133' '                                                  07074
         DC    C' '                                                      07075
PRTLINE  DC    CL133' '                                                  07076
         DC    CL80' '            Padding                                07077
*    --------------- >            Output line buffers - above            07078
*                                                                        07079
CARDBLNK DC    CL80' '            BLANK CARD IMAGE                       07080
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                  07081
CARDWORK DC    CL80' '            SYSIN CARD WORK AREA                   07082
         END                                                             07083
*         LABEL CHECKER        AT LEVEL 1.1 AS OF 03/13/05               07084
   TITLE 'LABELCHK -- SET PARM BITS USING A TABLE'                       07085
**************************************************************           07086
**************************************************************           07087
**                                                          **           07088
**                                                          **           07089
**  MODULE:   LABELCHK - Check tape files to see if they    **           07090
**                       are tape labels.                   **           07091
**                                                          **           07092
**  AUTHOR:   Sam Golob                                     **           07093
**                                                          **           07094
**  PURPOSE:  This is a subroutine for programs which read  **           07095
**            tapes under BLP, so that tape label files     **           07096
**            would appear as ordinary files to the calling **           07097
**            program.  As file contents are passed to      **           07098
**            this program, LABELCHK detects whether they   **           07099
**            are tape labels, and tells the caller what    **           07100
**            type of labels they are.  If labels need to   **           07101
**            be interpreted, the PRINTLBL program is       **           07102
**            called.                                       **           07103
**                                                          **           07104
**  METHOD:   Label headers (usually the first 4 bytes)     **           07105
**            are scanned, and if a match to a known label  **           07106
**            type is found, then that type of label is     **           07107
**            processed appropriately.                      **           07108
**                                                          **           07109
**  Flags Set:  The principal flag set by this routine is   **           07110
**            the ISLABEL byte:                             **           07111
**                                                          **           07112
**   Setting of ISLABEL:   X'01'  - record is an IBM        **           07113
**                                  standard label          **           07114
**                                                          **           07115
**                         X'02'  - record is an ANSI/ISO   **           07116
**                                  (ASCII) standard label  **           07117
**                                                          **           07118
**                         X'00'  - the tested record is    **           07119
**                                  not a tape label        **           07120
**                                                          **           07121
**   Other flags and quantities are also set by this        **           07122
**   routine.  They are passed back to the caller in the    **           07123
**   LCHKPASS user area, in register 2.  Sometimes the      **           07124
**   PARMFLGS are changed.  These are passed back to the    **           07125
**   caller in register 1.  Sometimes the INAREA (record    **           07126
**   input area, usually containing a label image) is       **           07127
**   changed.  The altered label image is passed back to    **           07128
**   the caller in register 3.  At present, 80 bytes are    **           07129
**   passed back in register 3.                             **           07130
**                                                          **           07131
**************************************************************           07132
         EJECT                                                           07133
**************************************************************           07134
**                                                          **           07135
**  CHANGE LOG:                                             **           07136
**                                                          **           07137
**    Version 1.0 - Base program to detect IBM tape labels. **           07138
**                                                          **           07139
**    Version 1.1 - Support ANSI/ISO (ASCII) tape labels.   **           07140
**                                                          **           07141
**                                                          **           07142
**************************************************************           07143
**************************************************************           07144
         EJECT                                                           07145
**************************************************************           07146
*  ---------------------------------------------------------------  *    07147
*    This macro is used to display hex values in a printed report.       07148
*  ---------------------------------------------------------------  *    07149
         MACRO                                                           07150
&NAME    HEX   &TO,&LEN,&FROM                                            07151
&NAME    DS    0H                                                        07152
         ST    R4,SAV4HEX                                                07153
         STM   R15,R1,HEXSAVE                                            07154
         LA    R1,&FROM                                                  07155
         LA    R0,&LEN                                                   07156
         LA    R15,&TO                                                   07157
         BAL   R4,HEX                                                    07158
         L     R4,SAV4HEX                                                07159
         LM    R15,R1,HEXSAVE                                            07160
         MEND                                                            07161
         SPACE                                                           07162
**************************************************************           07163
         GBLC  &LLEV                                                     07164
&LLEV    SETC  '1.1 '                                                    07165
         YREGS                                                           07166
         ENTRY LABELCHK                                                  07167
LABELCHK CSECT                                                           07168
         USING *,R15                                                     07169
         B     EYECATCH                                                  07170
         DC    C'--- '            MAKE EYECATCHER VISIBLE                07171
         DC    C'LABELCHK - CHECK TAPE FILES IF THEY ARE LABELS'         07172
         DC    C' - '                                                    07173
         DC    C'LEVEL '                                                 07174
SYSLEV   DC    C'&LLEV'                                                  07175
         DC    C' - '                                                    07176
SYSDAT   DC    C'&SYSDATE'                                               07177
         DC    C'  ',C'&SYSTIME ',C'--- '                                07178
         DC    C'Copyright (c) 2003 by Sam Golob '                       07179
         DC    C'--- '              MAKE EYECATCHER VISIBLE              07180
SAVEAREA DC    18F'0'                                                    07181
EYECATCH DS    0D                   ENSURE ALIGNMENT                     07182
         SAVE  (14,12)                                                   07183
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM     07184
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   07185
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          07186
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         07187
         LR    R13,R1               NEW SAVE AREA ADDRESS                07188
         DROP  R15                                                       07189
* -----                             SET UP BASE REGISTERS                07190
         USING LABELCHK,R12,R11,R10,R9                                   07191
         LR    R12,R15                                                   07192
         LA    R11,4095(,R12)                                            07193
         LA    R11,1(,R11)                                               07194
         LA    R10,4095(,R11)                                            07195
         LA    R10,1(,R10)                                               07196
         LA    R9,4095(,R10)                                             07197
         LA    R9,1(,R9)                                                 07198
         LR    R1,R5                RESTORE REGISTER 1 INPUT             07199
* ----------------------------------------------------------------- *    07200
         ST    R1,PARMSAVE          Address of parm flags in caller      07201
         ST    R2,USERSAVE          Address of user area in caller       07202
         ST    R3,INARSAVE          Address of INAREA in caller          07203
* ----------------------------------------------------------------- *    07204
***********************************************************************  07205
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  07206
***********************************************************************  07207
         STM   R14,R2,SAVE1402                                           07208
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             07209
         OI    DATE+4,X'0F'                                              07210
         UNPK  DATED,DATE                                                07211
         OI    TIME+3,X'0F'                                              07212
         UNPK  TIMED,TIME                                                07213
*                          FILL HEADDATE AREA WITH INFO TO REUSE         07214
         MVC   HEADDATE(2),DATED                                         07215
         MVI   HEADDATE+2,C'/'                                           07216
         MVC   HEADDATE+3(2),DATED+2                                     07217
         MVI   HEADDATE+5,C'/'                                           07218
         MVC   HEADDATE+6(4),DATED+4                                     07219
         MVC   HEADDATE+12(2),TIMED                                      07220
         MVI   HEADDATE+14,C':'                                          07221
         MVC   HEADDATE+15(2),TIMED+2                                    07222
         MVI   HEADDATE+17,C':'                                          07223
         MVC   HEADDATE+18(2),TIMED+4                                    07224
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         07225
         LM    R14,R2,SAVE1402                                           07226
***********************************************************************  07227
         MVC   LEVDATE(8),SYSDAT                                         07228
***********************************************************************  07229
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND TITLES      07230
* ----------------------------------------------------------------- *    07231
INITCONS DS    0H                    Initialize necessary quantities.    07232
         MVI   LINE-1,X'40'          Make sure the print line is blank.  07233
         MVC   LINE,LINE-1                                               07234
         L     R0,SYSPRINV           SYSPRINT DCB address in caller      07235
         ST    R0,SYSPRDCB             store for the program's use       07236
         L     R0,LABLDUMV           LABLDUMP DCB address in caller      07237
         ST    R0,LABLDDCB             store for the program's use       07238
         L     R0,LABADDIV           LABADDIN DCB address in caller      07239
         ST    R0,LABADDCB             store for the program's use       07240
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer    07241
         ST    R0,SAVTRTCS             store it for later use            07242
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm  07243
         ST    R0,PRTLBENT           Save entry point for calling later  07244
* ----------------------------------------------------------------*      07245
PROCESS  DS    0H                    First copy over passed areas.       07246
* ----------------------------------------------------------------*      07247
         L     R1,PARMSAVE              Point to caller's parm flags     07248
         MVC   PARMFLGS(PARMFLLN),0(R1) Copy them into our program.      07249
         L     R2,USERSAVE              Point to caller's user area.     07250
         MVC   LCHKPASS(LCHKPASE),0(R2) Copy his user area to ours.      07251
         L     R3,INARSAVE              Point to INAREA in caller.       07252
         MVC   INAREA(80),0(R3)         Copy caller's INAREA to ours.    07253
* ----------------------------------------------------------------*      07254
*   Then execute this entire program as a called subroutine.      *      07255
* ----------------------------------------------------------------*      07256
         BAL   R7,LABLCHEK                                               07257
* ----------------------------------------------------------------*      07258
*                                                                        07259
         B     THEEND                                                    07260
LBLINEND DS    0H                                                        07261
         OI    LBLINENF,X'01'                                            07262
THEEND   DS    0H                                                        07263
         L     R13,4(,R13)                                               07264
         MVC   16(4,R13),=F'0'          Return code 0     in R15         07265
* - - - - - - - - - - - - - Pass addresses of our passed areas back.     07266
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1    07267
         MVC   28(4,R13),=A(LCHKPASS)   Address of our user area in R2   07268
         MVC   32(4,R13),=A(INAREA)     Address of our INAREA in R3      07269
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07270
         LM    R14,R12,12(R13)                                           07271
         BR    R14                                                       07272
         EJECT                                                           07273
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07274
*    BAL REGISTER IS R7.                                                 07275
* --------------------------------------------------------- *            07276
LABLCHEK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS              07277
*                         AND SET LABEL FLAGS, ACCORDINGLY,              07278
*                         IN THE LBLFLAG BYTE.                           07279
* --------------------------------------------------------- *            07280
*     The type of labels last seen on the input tape                     07281
*     are generally flagged by bits in the LBLFLAG byte.                 07282
*     These bit settings are set by this program as                      07283
*     follows:   (These are for both IBM and ASCII labels)               07284
* --------------------------------------------------------- *            07285
*              X'01'    HDR1 HAS BEEN SEEN                               07286
*              X'02'    HDR2 HAS BEEN SEEN                               07287
*              X'04'    VOL1 HAS BEEN SEEN                               07288
*              X'08'    HDR1 IS FROM AN INITTED TAPE                     07289
*              X'10'    EOF1 HAS BEEN SEEN                               07290
*              X'20'    EOF2 HAS BEEN SEEN                               07291
*              X'40'    EOV1 HAS BEEN SEEN                               07292
*              X'80'    EOV2 HAS BEEN SEEN                               07293
* --------------------------------------------------------- *            07294
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *            07295
* -                                                       - *            07296
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *            07297
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *            07298
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *            07299
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *            07300
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *            07301
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *            07302
* --------------------------------------------------------- *            07303
*                                                           *            07304
*   Beginning of processing:                                *            07305
*                                                           *            07306
*     Check the input record (that has been copied to       *            07307
*     INAREA) for each possible type of label, and direct   *            07308
*     the processing to the appropriate routine, if a       *            07309
*     label type has been found.                            *            07310
*                                                           *            07311
*     If an input record does not fit any of these          *            07312
*     criteria, it is not considered a tape label.          *            07313
*                                                           *            07314
* --------------------------------------------------------- *            07315
         NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG AT START      07316
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?                     07317
         BE    CVOL1                PROCESS THE VOL1                     07318
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?                     07319
         BE    CHDR1                PROCESS HDR1                         07320
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?                        07321
         BE    CHDR2                PROCESS HDR2                         07322
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?                       07323
         BE    CEOF1                PROCESS EOF1                         07324
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?                       07325
         BE    CEOF2                PROCESS EOF2                         07326
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?                       07327
         BE    CEOV1                PROCESS EOV1                         07328
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?                       07329
         BE    CEOV2                PROCESS EOV2                         07330
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL?            07331
         BE    CUHL                 PROCESS UHL                          07332
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?           07333
         BE    CUTL                 PROCESS UTL                          07334
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                         07335
         BE    ASC                     PROCESS ALL VOL TYPES             07336
         CLC   INAREA(3),=X'484452'   ASCII HDR?                         07337
         BE    ASC                     PROCESS ALL HDR TYPES             07338
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                         07339
         BE    ASC                     PROCESS ALL EOF TYPES             07340
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                         07341
         BE    ASC                     PROCESS ALL EOV TYPES             07342
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)     07343
         BE    ASC                     PROCESS ALL UVL TYPES             07344
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)     07345
         BE    ASC                     PROCESS ALL UHL TYPES             07346
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)    07347
         BE    ASC                     PROCESS ALL UTL TYPES             07348
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL or ASCII AL   07349
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------             07350
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07351
         BO    CVOL1NPR             YES. JUST TURN ON ISLABEL FLAG       07352
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW          07353
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   07354
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                    07355
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1      07356
CLRIDRCV DS    0H                                                        07357
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE          07358
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE            07359
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE             07360
* ---------------- LABEL ADDING CODE ---------------------- *            07361
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                07362
         BZ    CVOLNPRB             NO. WE CAN GO ON.                    07363
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   07364
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG              07365
         ST    R6,SAVER6                                                 07366
         L     R6,SYSPRDCB                                               07367
         PUT   (6),LINE                                                  07368
         L     R6,SAVER6                                                 07369
*        PUT   SYSPRINT,LINE        WRITE MSG                            07370
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  07371
*        CLOSE (LABADDIN)                                                07372
         OI    LABADFLG,X'01'                                            07373
CVOL1OUT DS    0H                 CLOSE OTHER FILES AND SCRAM            07374
         OI    CLOSMFLG,X'01'                                            07375
         B     THEEND                                                    07376
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.          07377
* ---------------- LABEL ADDING CODE ---------------------- *            07378
* ---------------- LABEL DUMPING CODE --------------------- *            07379
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07380
         BZ    CVOL1ND              NO. SKIP PUTTING OUT                 07381
         ST    R7,SAVE7LDM          Save BAL register.                   07382
         LA    R4,INAREA            Point to area to be dumped.          07383
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07384
         L     R7,SAVE7LDM          Restore BAL register.                07385
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE            07386
* ---------------- LABEL DUMPING CODE --------------------- *            07387
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.                       07388
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?                    07389
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND             07390
*                                                                        07391
* ------ Call PRINTLBL routine to print this label.....   below          07392
         ST    R7,SAVE7BA2        Save BAL register.                     07393
         BAL   R7,PRNTLABL        Print the current label.               07394
         L     R7,SAVE7BA2                                               07395
* ------ Call PRINTLBL routine to print this label.....   above          07396
*                                                                        07397
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07398
         B     LABCHEND                                                  07399
CHDR1    DS    0H                                                        07400
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07401
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG      07402
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS, INITTED HDR       07403
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.                       07404
* ---------------- LABEL DUMPING CODE --------------------- *            07405
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07406
         BZ    CHDR1ND              NO. SKIP PUTTING OUT                 07407
         ST    R7,SAVE7LDM          Save BAL register.                   07408
         LA    R4,INAREA            Point to area to be dumped.          07409
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07410
         L     R7,SAVE7LDM          Restore BAL register.                07411
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE            07412
* ---------------- LABEL DUMPING CODE --------------------- *            07413
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?              07414
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET             07415
* ---------------- LABEL DUMPING CODE --------------------- *            07416
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07417
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      07418
         ST    R7,SAVE7LDM          Save BAL register.                   07419
         ST    R4,SAVE4LDM                                               07420
         LA    R4,LABELITI          Point to area to be dumped.          07421
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07422
         L     R4,SAVE4LDM                                               07423
         L     R7,SAVE7LDM          Restore BAL register.                07424
CHDR1NDM DS    0H                                                        07425
* ---------------- LABEL DUMPING CODE --------------------- *            07426
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE              07427
CHDR1A   DS    0H                                                        07428
*** --- >>  Security off?  -  below                                      07429
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07430
         BZ    NOSECCH1             No. Don't affect these fields.       07431
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                 07432
NOSECCH1 DS    0H                                                        07433
*** --- >>  Security off?  -  above                                      07434
         TM    PARMFLG1,X'02' DO WE PRINT LABELS?                        07435
         BZ    CHDR1Z         NO. DON'T PRINT.                           07436
*                                                                        07437
* ------ Call PRINTLBL routine to print this label.....   below          07438
         ST    R7,SAVE7BA2        Save BAL register.                     07439
         BAL   R7,PRNTLABL        Print the current label.               07440
         L     R7,SAVE7BA2                                               07441
* ------ Call PRINTLBL routine to print this label.....   above          07442
*                                                                        07443
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07444
         B     LABCHEND                                                  07445
CHDR2    DS    0H                                                        07446
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07447
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG      07448
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW          07449
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   07450
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                    07451
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             07452
         BNE   CLRIDRH2                                                  07453
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      07454
CLRIDRH2 DS    0H                                                        07455
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE          07456
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2            07457
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.                       07458
* ---------------- LABEL DUMPING CODE --------------------- *            07459
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07460
         BZ    CHDR2ND              NO. SKIP PUTTING OUT                 07461
         ST    R7,SAVE7LDM          Save BAL register.                   07462
         LA    R4,INAREA            Point to area to be dumped.          07463
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07464
         L     R7,SAVE7LDM          Restore BAL register.                07465
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           07466
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE            07467
* ---------------- LABEL DUMPING CODE --------------------- *            07468
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?                      07469
         BZ    CHDR2Z           NO.                                      07470
*                                                                        07471
* ------ Call PRINTLBL routine to print this label.....   below          07472
         ST    R7,SAVE7BA2        Save BAL register.                     07473
         BAL   R7,PRNTLABL        Print the current label.               07474
         L     R7,SAVE7BA2                                               07475
* ------ Call PRINTLBL routine to print this label.....   above          07476
*                                                                        07477
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07478
         B     LABCHEND                                                  07479
CEOF1    DS    0H                                                        07480
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07481
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG      07482
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1                 07483
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.                       07484
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07485
BCTCEOF1 DS    0H                                                        07486
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          07487
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                  07488
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         07489
         STM   R2,R3,SAVE2TO3                                            07490
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     07491
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    07492
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 07493
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        07494
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              07495
         LM    R2,R3,SAVE2TO3                                            07496
BCTCEOFX DS    0H                                                        07497
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07498
* ---------------- LABEL DUMPING CODE --------------------- *            07499
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07500
         BZ    CEOF1ND              NO. SKIP PUTTING OUT                 07501
         ST    R7,SAVE7LDM          Save BAL register.                   07502
         LA    R4,INAREA            Point to area to be dumped.          07503
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07504
         L     R7,SAVE7LDM          Restore BAL register.                07505
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE            07506
* ---------------- LABEL DUMPING CODE --------------------- *            07507
CEOF1A   DS    0H                                                        07508
*** --- >>  Security off?  -  below                                      07509
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07510
         BZ    NOSECCF1             No. Don't affect these fields.       07511
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                 07512
NOSECCF1 DS    0H                                                        07513
*** --- >>  Security off?  -  above                                      07514
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?                      07515
         BZ    CEOF1Z           NO.                                      07516
*                                                                        07517
* ------ Call PRINTLBL routine to print this label.....   below          07518
         ST    R7,SAVE7BA2        Save BAL register.                     07519
         BAL   R7,PRNTLABL        Print the current label.               07520
         L     R7,SAVE7BA2                                               07521
* ------ Call PRINTLBL routine to print this label.....   above          07522
*                                                                        07523
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07524
         B     LABCHEND                                                  07525
CEOF2    DS    0H                                                        07526
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07527
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG      07528
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          07529
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   07530
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                    07531
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             07532
         BNE   CLRIDRF2                                                  07533
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      07534
CLRIDRF2 DS    0H                                                        07535
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          07536
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2                 07537
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.                       07538
* ---------------- LABEL DUMPING CODE --------------------- *            07539
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07540
         BZ    CEOF2ND              NO. SKIP PUTTING OUT                 07541
         ST    R7,SAVE7LDM          Save BAL register.                   07542
         LA    R4,INAREA            Point to area to be dumped.          07543
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07544
         L     R7,SAVE7LDM          Restore BAL register.                07545
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           07546
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE            07547
* ---------------- LABEL DUMPING CODE --------------------- *            07548
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?                      07549
         BZ    CEOF2Z           NO.                                      07550
*                                                                        07551
* ------ Call PRINTLBL routine to print this label.....   below          07552
         ST    R7,SAVE7BA2        Save BAL register.                     07553
         BAL   R7,PRNTLABL        Print the current label.               07554
         L     R7,SAVE7BA2                                               07555
* ------ Call PRINTLBL routine to print this label.....   above          07556
*                                                                        07557
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07558
         B     LABCHEND                                                  07559
CEOV1    DS    0H                                                        07560
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07561
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG      07562
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                 07563
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         07564
         BZ    CEOVN1         NO, PROCESS ORDINARILY                     07565
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                    07566
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                            07567
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                 07568
         MVI   LINE-1,C' '                                               07569
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           07570
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE                        07571
         ST    R6,SAVER6                                                 07572
         L     R6,SYSPRDCB                                               07573
         PUT   (6),LINE                                                  07574
         L     R6,SAVER6                                                 07575
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.               07576
         B     CEOVY1                                                    07577
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                       07578
CEOVY1   DS    0H                                                        07579
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07580
BCTCEOV1 DS    0H                                                        07581
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          07582
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                  07583
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         07584
         STM   R2,R3,SAVE2TO3                                            07585
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     07586
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    07587
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 07588
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        07589
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              07590
         LM    R2,R3,SAVE2TO3                                            07591
BCTCEOVX DS    0H                                                        07592
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07593
* ---------------- LABEL DUMPING CODE --------------------- *            07594
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07595
         BZ    CEOV1ND              NO. SKIP PUTTING OUT                 07596
         ST    R7,SAVE7LDM          Save BAL register.                   07597
         LA    R4,INAREA            Point to area to be dumped.          07598
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07599
         L     R7,SAVE7LDM          Restore BAL register.                07600
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE            07601
* ---------------- LABEL DUMPING CODE --------------------- *            07602
CEOV1A   DS    0H                                                        07603
*** --- >>  Security off?  -  below                                      07604
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07605
         BZ    NOSECCV1             No. Don't affect these fields.       07606
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                 07607
NOSECCV1 DS    0H                                                        07608
*** --- >>  Security off?  -  above                                      07609
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?                      07610
         BZ    CEOV1Z           NO.                                      07611
*                                                                        07612
* ------ Call PRINTLBL routine to print this label.....   below          07613
         ST    R7,SAVE7BA2        Save BAL register.                     07614
         BAL   R7,PRNTLABL        Print the current label.               07615
         L     R7,SAVE7BA2                                               07616
* ------ Call PRINTLBL routine to print this label.....   above          07617
*                                                                        07618
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07619
         B     LABCHEND                                                  07620
CEOV2    DS    0H                                                        07621
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07622
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG      07623
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          07624
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   07625
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                    07626
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             07627
         BNE   CLRIDRV2                                                  07628
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      07629
CLRIDRV2 DS    0H                                                        07630
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          07631
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2                 07632
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         07633
         BZ    CEOVN2         NO, PROCESS ORDINARILY                     07634
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN                    07635
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                            07636
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                 07637
         B     CEOVY2                                                    07638
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.                       07639
CEOVY2   DS    0H                                                        07640
* ---------------- LABEL DUMPING CODE --------------------- *            07641
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07642
         BZ    CEOV2ND              NO. SKIP PUTTING OUT                 07643
         ST    R7,SAVE7LDM          Save BAL register.                   07644
         LA    R4,INAREA            Point to area to be dumped.          07645
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07646
         L     R7,SAVE7LDM          Restore BAL register.                07647
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                   07648
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2        07649
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           07650
         B     CEOV2ND              AND GET OUT                          07651
CEOV2F   DS    0H                                                        07652
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           07653
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE            07654
* ---------------- LABEL DUMPING CODE --------------------- *            07655
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?                      07656
         BZ    CEOV2Z           NO.                                      07657
*                                                                        07658
* ------ Call PRINTLBL routine to print this label.....   below          07659
         ST    R7,SAVE7BA2        Save BAL register.                     07660
         BAL   R7,PRNTLABL        Print the current label.               07661
         L     R7,SAVE7BA2                                               07662
* ------ Call PRINTLBL routine to print this label.....   above          07663
*                                                                        07664
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07665
         B     LABCHEND                                                  07666
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *            07667
CUHL     DS    0H             HANDLE USER HEADER LABELS                  07668
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07669
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG      07670
*                                                                        07671
* ------ Call PRINTLBL routine to print this label.....   below          07672
         ST    R7,SAVE7BA2        Save BAL register.                     07673
         BAL   R7,PRNTLABL        Print the current label.               07674
         L     R7,SAVE7BA2                                               07675
* ------ Call PRINTLBL routine to print this label.....   above          07676
*                                                                        07677
* ---------------- LABEL DUMPING CODE --------------------- *            07678
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07679
         BZ    CUHLEN               NO. SKIP PUTTING OUT                 07680
         ST    R7,SAVE7LDM          Save BAL register.                   07681
         LA    R4,INAREA            Point to area to be dumped.          07682
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07683
         L     R7,SAVE7LDM          Restore BAL register.                07684
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE            07685
* ---------------- LABEL DUMPING CODE --------------------- *            07686
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07687
         B     LABCHEND                                                  07688
CUTL     DS    0H             HANDLE USER TRAILER LABELS                 07689
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07690
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG      07691
*                                                                        07692
* ------ Call PRINTLBL routine to print this label.....   below          07693
         ST    R7,SAVE7BA2        Save BAL register.                     07694
         BAL   R7,PRNTLABL        Print the current label.               07695
         L     R7,SAVE7BA2                                               07696
* ------ Call PRINTLBL routine to print this label.....   above          07697
*                                                                        07698
* ---------------- LABEL DUMPING CODE --------------------- *            07699
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07700
         BZ    CUTLEN               NO. SKIP PUTTING OUT                 07701
         ST    R7,SAVE7LDM          Save BAL register.                   07702
         LA    R4,INAREA            Point to area to be dumped.          07703
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07704
         L     R7,SAVE7LDM          Restore BAL register.                07705
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE            07706
* ---------------- LABEL DUMPING CODE --------------------- *            07707
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07708
         B     LABCHEND                                                  07709
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *            07710
         EJECT                                                           07711
* ----------------  ASCII   Labels  ----------------------- *            07712
* --------------------------------------------------------- *            07713
*  ANSI/ISO label rules are a bit more relaxed than IBM     *            07714
*  label rules.  VOLx, HDRx, EOFx, EOVx, UVLx, UHLx, and    *            07715
*  UTLx are all considered labels, with a lot of latitude   *            07716
*  as to what the "x" is.  Therefore, for ASCII tape        *            07717
*  labels, we check the first 3 characters in each label    *            07718
*  category, and then further subdivide within that         *            07719
*  category if necessary.                                   *            07720
* --------------------------------------------------------- *            07721
ASC      DS    0H                   ALL ASCII LABEL CANDIDATES HERE      07722
*                                                                        07723
*        Common ASCII preparation routines......                         07724
*                                                                        07725
         OI    ASCIIFLG,X'01'       Say we're working in ASCII           07726
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation    07727
         OI    ISLBLFLG,X'02'       Mark this record as an ASCII label   07728
*                                   This is being done early for ASCII   07729
*                                                                        07730
* -- >  Make an EBCDIC version of this label in the INASCI field.        07731
         ST    R5,R5HXPRT              Save register.                    07732
         L     R5,SAVTRTCS             Point to translation table CSECT  07733
         USING TRTDSECT,R5                                               07734
         MVC   INASCI(80),INAREA       Move LABEL area to workarea       07735
         TR    INASCI(80),TRTA2E       Translate to EBCDIC for print     07736
         L     R5,R5HXPRT              Restore R5                        07737
         DROP  R5                                                        07738
* -- >                                                                   07739
* ----------------------------------------------------- *                07740
* --   Again pick which type of ASCII label we have     *                07741
* ----------------------------------------------------- *                07742
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                         07743
         BE    ASCVOL                  PROCESS ALL VOL TYPES             07744
         CLC   INAREA(3),=X'484452'   ASCII HDR?                         07745
         BE    ASCHDR                  PROCESS ALL HDR TYPES             07746
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                         07747
         BE    ASCEOF                  PROCESS ALL EOF TYPES             07748
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                         07749
         BE    ASCEOV                  PROCESS ALL EOV TYPES             07750
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)     07751
         BE    ASCUVL                  PROCESS ALL UVL TYPES             07752
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)     07753
         BE    ASCUHL                  PROCESS ALL UHL TYPES             07754
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)    07755
         BE    ASCUTL                  PROCESS ALL UTL TYPES             07756
* ----------------------------------                                     07757
ASCVOL   DS    0H                                                        07758
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07759
         BO    ASCVOLLB              YES. JUST TURN ON ISLABEL FLAG      07760
* ---------------- LABEL ADDING CODE ---------------------- *            07761
*       Forbid adding new labels to an already AL tape.     *            07762
* --------------------------------------------------------- *            07763
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                07764
         BZ    ASCVOLNS             NO. WE CAN GO ON.                    07765
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   07766
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG              07767
         ST    R6,SAVER6                                                 07768
         L     R6,SYSPRDCB                                               07769
         PUT   (6),LINE                                                  07770
         L     R6,SAVER6                                                 07771
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  07772
*        CLOSE (LABADDIN)                                                07773
         OI    LABADFLG,X'01'                                            07774
         OI    CLOSMFLG,X'01'                                            07775
         B     THEEND                                                    07776
ASCVOLNS DS    0H                   NOT ADDING SL ONTO SL TAPE.          07777
* ---------------- LABEL ADDING CODE ---------------------- *            07778
* ---------------- LABEL DUMPING CODE ------ below -------- *            07779
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07780
         BZ    AVOL1ND              NO. SKIP PUTTING OUT                 07781
         ST    R7,SAVE7LDM          Save BAL register.                   07782
         LA    R4,INAREA            Point to area to be dumped.          07783
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07784
         L     R7,SAVE7LDM          Restore BAL register.                07785
AVOL1ND  DS    0H                   END OF LABEL DUMPING CODE            07786
* ---------------- LABEL DUMPING CODE ------ above -------- *            07787
* --------------------------------------------------------- *            07788
*  At this point, we specifically check for a VOL1 label.   *            07789
* --------------------------------------------------------- *            07790
         CLI   INAREA+3,X'31'       Is the VOL label a VOL1?             07791
         BNE   ASCVOLLB             No. Just mark as an ASCII label.     07792
         OI    LBLFLAG,X'04'        Flag VOL1 seen.                      07793
         MVC   VOLORIG(6),INASCI+4     Save EBCDIC volser if there       07794
         MVC   INVOLUME(6),INASCI+4    Send to message too               07795
*** --- >>  Security off?  -  below                                      07796
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07797
         BZ    NOSECF01             No. Don't affect these fields.       07798
         MVI   INAREA+10,X'20'      Move in ASCII blank.                 07799
NOSECF01 DS    0H                                                        07800
*** --- >>  Security off?  -  above                                      07801
* --- >>>    VOL1  Label Printing   -----   below                        07802
         TM    PARMFLG2,X'02'          Printing Volume Labels?           07803
         BZ    ASCVOLLB                No. Skip this code.               07804
*                                                                        07805
* ------ Call PRINTLBL routine to print this label.....   below          07806
         ST    R7,SAVE7BA2        Save BAL register.                     07807
         BAL   R7,PRNTLABL        Print the current label.               07808
         L     R7,SAVE7BA2                                               07809
* ------ Call PRINTLBL routine to print this label.....   above          07810
*                                                                        07811
* --- >>>    VOL1  Label Printing   -----   above                        07812
ASCVOLLB DS    0H                                                        07813
ASCVOLE  DS    0H                                                        07814
         B     LABCHEND                                                  07815
*                                                                        07816
ASCHDR   DS    0H                                                        07817
         CLI   INAREA+3,X'31'       Is ASCII number field a 1?           07818
         BE    ASCHDR1                                                   07819
         CLI   INAREA+3,X'32'       Is ASCII number field a 2?           07820
         BE    ASCHDR2                                                   07821
         B     ASCHDRO                                                   07822
ASCHDR1  DS    0H                   ASCII Header 1                       07823
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07824
         BO    ASCHDR1Z             YES. OUT WITH ISLABEL MARKED.        07825
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF, INITTED HDR       07826
         OI    LBLFLAG,X'01'        FLAG HDR1 SEEN.                      07827
* ---------------- LABEL DUMPING CODE --------------------- *            07828
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07829
         BZ    AHDR1ND              NO. SKIP PUTTING OUT                 07830
         ST    R7,SAVE7LDM          Save BAL register.                   07831
         LA    R4,INAREA            Point to area to be dumped.          07832
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07833
         L     R7,SAVE7LDM          Restore BAL register.                07834
AHDR1ND  DS    0H                   END OF LABEL DUMPING CODE            07835
* ---------------- LABEL DUMPING CODE --------------------- *            07836
         CLC   INAREA+4(23),ZEROA23   WAS TAPE JUST INITTED?             07837
         BNE   CASC1A                 NO. THIS IS A HDR1 FOR DATASET     07838
* ---------------- LABEL DUMPING CODE --------------------- *            07839
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07840
         BZ    CASC1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      07841
         ST    R7,SAVE7LDM          Save BAL register.                   07842
         ST    R4,SAVE4LDM                                               07843
         OI    ATRNLFLG,X'01'       Order the line translated to ASCII.  07844
         LA    R4,LABELITI          Point to area to be dumped.          07845
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07846
         L     R4,SAVE4LDM                                               07847
         L     R7,SAVE7LDM          Restore BAL register.                07848
         NI    ATRNLFLG,FF-X'01'    Reinit the flag bit.                 07849
CASC1NDM DS    0H                                                        07850
* ---------------- LABEL DUMPING CODE --------------------- *            07851
         OI    LBLFLAG,X'08'        Show initted header label found.     07852
CASC1A   DS    0H                                                        07853
*** --- >>  Security off?  -  below                                      07854
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07855
         BZ    NOSECAH1             No. Don't affect these fields.       07856
         MVI   INAREA+53,X'20'      Move in ASCII blank.                 07857
NOSECAH1 DS    0H                                                        07858
*** --- >>  Security off?  -  above                                      07859
* --- >      Print  Labels     - -   below                               07860
         TM    PARMFLG1,X'02'          DO WE PRINT LABELS?               07861
         BZ    ASCHDR1Z                NO. DON'T PRINT.                  07862
*                                                                        07863
* ------ Call PRINTLBL routine to print this label.....   below          07864
         ST    R7,SAVE7BA2        Save BAL register.                     07865
         BAL   R7,PRNTLABL        Print the current label.               07866
         L     R7,SAVE7BA2                                               07867
* ------ Call PRINTLBL routine to print this label.....   above          07868
*                                                                        07869
ASCHDR1Z DS    0H                                                        07870
* --- >      Print  Labels     - -   above                               07871
         B     LABCHEND                                                  07872
ASCHDR2  DS    0H                   ASCII Header 2                       07873
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07874
         BO    ASCHDR2Z             YES. MARKED AS LABEL AND GET OUT.    07875
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF FLAGS IF HDR2      07876
         OI    LBLFLAG,X'02'        YES. FLAG HDR2 SEEN.                 07877
* ---------------- LABEL DUMPING CODE --------------------- *            07878
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07879
         BZ    AHDR2ND              NO. SKIP PUTTING OUT                 07880
         ST    R7,SAVE7LDM          Save BAL register.                   07881
         LA    R4,INAREA            Point to area to be dumped.          07882
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07883
         L     R7,SAVE7LDM          Restore BAL register.                07884
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           07885
AHDR2ND  DS    0H                   END OF LABEL DUMPING CODE            07886
* ---------------- LABEL DUMPING CODE --------------------- *            07887
ASCHDR2A DS    0H                                                        07888
* --- >      Print  Labels     - -   below                               07889
         TM    PARMFLG1,X'04'          DO WE PRINT LABELS?               07890
         BZ    ASCHDR2Z                NO. DON'T PRINT.                  07891
*                                                                        07892
* ------ Call PRINTLBL routine to print this label.....   below          07893
         ST    R7,SAVE7BA2        Save BAL register.                     07894
         BAL   R7,PRNTLABL        Print the current label.               07895
         L     R7,SAVE7BA2                                               07896
* ------ Call PRINTLBL routine to print this label.....   above          07897
*                                                                        07898
ASCHDR2Z DS    0H                                                        07899
* --- >      Print  Labels     - -   above                               07900
         B     LABCHEND                                                  07901
ASCHDRO  DS    0H                    ASCII Other header labels           07902
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07903
         BO    ASCHDRE               YES. GET OUT WITH LABEL INDICATED.  07904
*                                                                        07905
* ------ Call PRINTLBL routine to print this label.....   below          07906
         ST    R7,SAVE7BA2        Save BAL register.                     07907
         BAL   R7,PRNTLABL        Print the current label.               07908
         L     R7,SAVE7BA2                                               07909
* ------ Call PRINTLBL routine to print this label.....   above          07910
*                                                                        07911
* ---------------- LABEL DUMPING CODE --------------------- *            07912
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07913
         BZ    AHDROND              NO. SKIP PUTTING OUT                 07914
         ST    R7,SAVE7LDM          Save BAL register.                   07915
         LA    R4,INAREA            Point to area to be dumped.          07916
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07917
         L     R7,SAVE7LDM          Restore BAL register.                07918
AHDROND  DS    0H                   END OF LABEL DUMPING CODE            07919
* ---------------- LABEL DUMPING CODE --------------------- *            07920
ASCHDRE  DS    0H                                                        07921
         B     LABCHEND                                                  07922
ASCEOF   DS    0H                                                        07923
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?          07924
         BE    ASCEOF1                                                   07925
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?          07926
         BE    ASCEOF2                                                   07927
         B     ASCEOFO                                                   07928
ASCEOF1  DS    0H                    ASCII EOF 1                         07929
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07930
         BO    ASCEOF1Z              YES. GET OUT WITH LABEL INDICATED.  07931
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOF1          07932
         OI    LBLFLAG,X'10'         FLAG EOF1 SEEN.                     07933
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07934
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          07935
         BO    ASCBLKF1             YES. PLUG IN CORRECTED VALUE.        07936
         TM    PARMFLG1,X'01'          Is block count correction on?     07937
         BZ    NOTASCEF                No-don't plug in corrected value  07938
ASCBLKF1 DS    0H                                                        07939
         ST    R5,R5HXPRT              Save register.                    07940
         L     R5,SAVTRTCS             Point to translation table CSECT  07941
         USING TRTDSECT,R5                                               07942
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   07943
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          07944
         L     R5,R5HXPRT              Restore R5                        07945
         DROP  R5                                                        07946
         MVC   INAREA+54(6),BLKCNASC+4                                   07947
NOTASCEF DS    0H                                                        07948
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07949
* ---------------- LABEL DUMPING CODE --------------------- *            07950
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07951
         BZ    AEOF1ND              NO. SKIP PUTTING OUT                 07952
         ST    R7,SAVE7LDM          Save BAL register.                   07953
         LA    R4,INAREA            Point to area to be dumped.          07954
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07955
         L     R7,SAVE7LDM          Restore BAL register.                07956
AEOF1ND  DS    0H                   END OF LABEL DUMPING CODE            07957
* ---------------- LABEL DUMPING CODE --------------------- *            07958
*** --- >>  Security off?  -  below                                      07959
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07960
         BZ    NOSECAF1             No. Don't affect these fields.       07961
         MVI   INAREA+53,X'20'      Move in ASCII blank.                 07962
NOSECAF1 DS    0H                                                        07963
*** --- >>  Security off?  -  above                                      07964
ASCEOF1A DS    0H                                                        07965
* --- >      Print  Labels     - -   below                               07966
         TM    PARMFLG1,X'08'          DO WE PRINT LABELS?               07967
         BZ    ASCEOF1Z                NO. DON'T PRINT.                  07968
*                                                                        07969
* ------ Call PRINTLBL routine to print this label.....   below          07970
         ST    R7,SAVE7BA2        Save BAL register.                     07971
         BAL   R7,PRNTLABL        Print the current label.               07972
         L     R7,SAVE7BA2                                               07973
* ------ Call PRINTLBL routine to print this label.....   above          07974
*                                                                        07975
ASCEOF1Z DS    0H                                                        07976
* --- >      Print  Labels     - -   above                               07977
         B     LABCHEND                                                  07978
ASCEOF2  DS    0H                   ASCII EOF 2                          07979
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07980
         BO    ASCEOF2Z             YES. JUST TURN ON ISLABEL FLAG       07981
         NI    LBLFLAG,X'F8'        TURN OFF HDR FLAGS IF EOF2           07982
         OI    LBLFLAG,X'20'        YES. FLAG EOF2 SEEN.                 07983
* ---------------- LABEL DUMPING CODE --------------------- *            07984
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07985
         BZ    AEOF2ND              NO. SKIP PUTTING OUT                 07986
         ST    R7,SAVE7LDM          Save BAL register.                   07987
         LA    R4,INAREA            Point to area to be dumped.          07988
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07989
         L     R7,SAVE7LDM          Restore BAL register.                07990
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           07991
AEOF2ND  DS    0H                   END OF LABEL DUMPING CODE            07992
* ---------------- LABEL DUMPING CODE --------------------- *            07993
ASCEOF2A DS    0H                                                        07994
* --- >      Print  Labels     - -   below                               07995
         TM    PARMFLG1,X'10'          DO WE PRINT LABELS?               07996
         BZ    ASCEOF2Z                NO. DON'T PRINT.                  07997
*                                                                        07998
* ------ Call PRINTLBL routine to print this label.....   below          07999
         ST    R7,SAVE7BA2        Save BAL register.                     08000
         BAL   R7,PRNTLABL        Print the current label.               08001
         L     R7,SAVE7BA2                                               08002
* ------ Call PRINTLBL routine to print this label.....   above          08003
*                                                                        08004
ASCEOF2Z DS    0H                                                        08005
* --- >      Print  Labels     - -   above                               08006
         B     LABCHEND                                                  08007
ASCEOFO  DS    0H                    ASCII Other EOF labels              08008
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08009
         BO    ASCEOFE               YES. GET OUT WITH LABEL INDICATED.  08010
*                                                                        08011
* ------ Call PRINTLBL routine to print this label.....   below          08012
         ST    R7,SAVE7BA2        Save BAL register.                     08013
         BAL   R7,PRNTLABL        Print the current label.               08014
         L     R7,SAVE7BA2                                               08015
* ------ Call PRINTLBL routine to print this label.....   above          08016
*                                                                        08017
* ---------------- LABEL DUMPING CODE --------------------- *            08018
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08019
         BZ    AEOFOND              NO. SKIP PUTTING OUT                 08020
         ST    R7,SAVE7LDM          Save BAL register.                   08021
         LA    R4,INAREA            Point to area to be dumped.          08022
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08023
         L     R7,SAVE7LDM          Restore BAL register.                08024
AEOFOND  DS    0H                   END OF LABEL DUMPING CODE            08025
* ---------------- LABEL DUMPING CODE --------------------- *            08026
ASCEOFE  DS    0H                                                        08027
         B     LABCHEND                                                  08028
ASCEOV   DS    0H                                                        08029
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?          08030
         BE    ASCEOV1                                                   08031
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?          08032
         BE    ASCEOV2                                                   08033
         B     ASCEOVO                                                   08034
ASCEOV1  DS    0H                    ASCII EOV 1                         08035
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08036
         BO    ASCEOV1Z              YES. JUST TURN ON ISLABEL FLAG      08037
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                 08038
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         08039
         BZ    ASCEOVN1       NO, PROCESS ORDINARILY                     08040
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                    08041
         NI    LBLFLAG,FF-X'40'      UNFLAG EOV1                         08042
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF                   08043
         MVI   LINE-1,C' '                                               08044
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           08045
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE                        08046
         ST    R6,SAVER6                                                 08047
         L     R6,SYSPRDCB                                               08048
         PUT   (6),LINE                                                  08049
         L     R6,SAVER6                                                 08050
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.               08051
         B     ASCEOVY1                                                  08052
ASCEOVN1 OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                       08053
ASCEOVY1 DS    0H                                                        08054
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            08055
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          08056
         BO    ASCBLKV1             YES. PLUG IN CORRECTED VALUE.        08057
         TM    PARMFLG1,X'01'          Is block count correction on?     08058
         BZ    NOTASCEV                No-don't plug in corrected value  08059
ASCBLKV1 DS    0H                                                        08060
         ST    R5,R5HXPRT              Save register.                    08061
         L     R5,SAVTRTCS             Point to translation table CSECT  08062
         USING TRTDSECT,R5                                               08063
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   08064
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          08065
         L     R5,R5HXPRT              Restore R5                        08066
         DROP  R5                                                        08067
         MVC   INAREA+54(6),BLKCNASC+4                                   08068
NOTASCEV DS    0H                                                        08069
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            08070
* ---------------- LABEL DUMPING CODE --------------------- *            08071
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08072
         BZ    AEOV1ND              NO. SKIP PUTTING OUT                 08073
         ST    R7,SAVE7LDM          Save BAL register.                   08074
         LA    R4,INAREA            Point to area to be dumped.          08075
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08076
         L     R7,SAVE7LDM          Restore BAL register.                08077
AEOV1ND  DS    0H                   END OF LABEL DUMPING CODE            08078
* ---------------- LABEL DUMPING CODE --------------------- *            08079
*** --- >>  Security off?  -  below                                      08080
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  08081
         BZ    NOSECAV1             No. Don't affect these fields.       08082
         MVI   INAREA+53,X'20'      Move in ASCII blank.                 08083
NOSECAV1 DS    0H                                                        08084
*** --- >>  Security off?  -  above                                      08085
* --- >      Print  Labels     - -   below                               08086
         TM    PARMFLG1,X'40'          DO WE PRINT LABELS?               08087
         BZ    ASCEOV1Z                NO. DON'T PRINT.                  08088
*                                                                        08089
* ------ Call PRINTLBL routine to print this label.....   below          08090
         ST    R7,SAVE7BA2        Save BAL register.                     08091
         BAL   R7,PRNTLABL        Print the current label.               08092
         L     R7,SAVE7BA2                                               08093
* ------ Call PRINTLBL routine to print this label.....   above          08094
*                                                                        08095
ASCEOV1Z DS    0H                                                        08096
* --- >      Print  Labels     - -   above                               08097
         B     LABCHEND                                                  08098
ASCEOV2  DS    0H                    ASCII EOV 2                         08099
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08100
         BO    ASCEOV2Z              YES. INDICATE LABEL AND GET OUT.    08101
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOV2          08102
         TM    PARMFLG2,X'04'        CHANGE EOV TO EOF?                  08103
         BZ    ASCEOVN2              NO, PROCESS ORDINARILY              08104
         OI    LBLFLAG,X'20'         INSTEAD, FLAG EOF2 SEEN             08105
         NI    LBLFLAG,FF-X'80'      UNFLAG EOV2                         08106
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF.                  08107
         OI    EOLGFLAG,X'02'        INDICATE EOF2 SEEN ON TAPE          08108
         B     ASCEOVY2                                                  08109
ASCEOVN2 OI    LBLFLAG,X'80'         YES. FLAG EOV2 SEEN.                08110
         OI    EOLGFLAG,X'04'        INDICATE EOV2 SEEN ON TAPE          08111
ASCEOVY2 DS    0H                                                        08112
* ---------------- LABEL DUMPING CODE --------------------- *            08113
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08114
         BZ    AEOV2ND              NO. SKIP PUTTING OUT                 08115
         ST    R7,SAVE7LDM          Save BAL register.                   08116
         LA    R4,INAREA            Point to area to be dumped.          08117
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08118
         L     R7,SAVE7LDM          Restore BAL register.                08119
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           08120
AEOV2ND  DS    0H                   END OF LABEL DUMPING CODE            08121
* ---------------- LABEL DUMPING CODE --------------------- *            08122
ASCEOV2N DS    0H                                                        08123
* --- >      Print  Labels     - -   below                               08124
         TM    PARMFLG1,X'80'          DO WE PRINT LABELS?               08125
         BZ    ASCEOV2Z                NO. DON'T PRINT.                  08126
*                                                                        08127
* ------ Call PRINTLBL routine to print this label.....   below          08128
         ST    R7,SAVE7BA2        Save BAL register.                     08129
         BAL   R7,PRNTLABL        Print the current label.               08130
         L     R7,SAVE7BA2                                               08131
* ------ Call PRINTLBL routine to print this label.....   above          08132
*                                                                        08133
ASCEOV2Z DS    0H                                                        08134
* --- >      Print  Labels     - -   above                               08135
         B     LABCHEND                                                  08136
ASCEOVO  DS    0H                    ASCII Other EOV labels              08137
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08138
         BO    ASCEOVE               YES. GET OUT WITH LABEL INDICATED.  08139
*                                                                        08140
* ------ Call PRINTLBL routine to print this label.....   below          08141
         ST    R7,SAVE7BA2        Save BAL register.                     08142
         BAL   R7,PRNTLABL        Print the current label.               08143
         L     R7,SAVE7BA2                                               08144
* ------ Call PRINTLBL routine to print this label.....   above          08145
*                                                                        08146
* ---------------- LABEL DUMPING CODE --------------------- *            08147
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08148
         BZ    AEOVOND              NO. SKIP PUTTING OUT                 08149
         ST    R7,SAVE7LDM          Save BAL register.                   08150
         LA    R4,INAREA            Point to area to be dumped.          08151
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08152
         L     R7,SAVE7LDM          Restore BAL register.                08153
AEOVOND  DS    0H                   END OF LABEL DUMPING CODE            08154
* ---------------- LABEL DUMPING CODE --------------------- *            08155
ASCEOVE  DS    0H                                                        08156
         B     LABCHEND                                                  08157
ASCUVL   DS    0H                                                        08158
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08159
         BO    ASCUVLE               YES. JUST TURN ON ISLABEL FLAG      08160
*                                                                        08161
* ------ Call PRINTLBL routine to print this label.....   below          08162
         ST    R7,SAVE7BA2        Save BAL register.                     08163
         BAL   R7,PRNTLABL        Print the current label.               08164
         L     R7,SAVE7BA2                                               08165
* ------ Call PRINTLBL routine to print this label.....   above          08166
*                                                                        08167
* ---------------- LABEL DUMPING CODE --------------------- *            08168
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08169
         BZ    AUVLEND              NO. SKIP PUTTING OUT                 08170
         ST    R7,SAVE7LDM          Save BAL register.                   08171
         LA    R4,INAREA            Point to area to be dumped.          08172
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08173
         L     R7,SAVE7LDM          Restore BAL register.                08174
AUVLEND  DS    0H                   END OF LABEL DUMPING CODE            08175
* ---------------- LABEL DUMPING CODE --------------------- *            08176
ASCUVLE  DS    0H                                                        08177
         B     LABCHEND                                                  08178
ASCUHL   DS    0H                                                        08179
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08180
         BO    ASCUHLE               YES. JUST TURN ON ISLABEL FLAG      08181
*                                                                        08182
* ------ Call PRINTLBL routine to print this label.....   below          08183
         ST    R7,SAVE7BA2        Save BAL register.                     08184
         BAL   R7,PRNTLABL        Print the current label.               08185
         L     R7,SAVE7BA2                                               08186
* ------ Call PRINTLBL routine to print this label.....   above          08187
*                                                                        08188
* ---------------- LABEL DUMPING CODE --------------------- *            08189
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08190
         BZ    AUHLEND              NO. SKIP PUTTING OUT                 08191
         ST    R7,SAVE7LDM          Save BAL register.                   08192
         LA    R4,INAREA            Point to area to be dumped.          08193
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08194
         L     R7,SAVE7LDM          Restore BAL register.                08195
AUHLEND  DS    0H                   END OF LABEL DUMPING CODE            08196
* ---------------- LABEL DUMPING CODE --------------------- *            08197
ASCUHLE  DS    0H                                                        08198
         B     LABCHEND                                                  08199
ASCUTL   DS    0H                                                        08200
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08201
         BO    ASCUTLE               YES. JUST TURN ON ISLABEL FLAG      08202
*                                                                        08203
* ------ Call PRINTLBL routine to print this label.....   below          08204
         ST    R7,SAVE7BA2        Save BAL register.                     08205
         BAL   R7,PRNTLABL        Print the current label.               08206
         L     R7,SAVE7BA2                                               08207
* ------ Call PRINTLBL routine to print this label.....   above          08208
*                                                                        08209
* ---------------- LABEL DUMPING CODE --------------------- *            08210
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08211
         BZ    AUTLEND              NO. SKIP PUTTING OUT                 08212
         ST    R7,SAVE7LDM          Save BAL register.                   08213
         LA    R4,INAREA            Point to area to be dumped.          08214
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08215
         L     R7,SAVE7LDM          Restore BAL register.                08216
AUTLEND  DS    0H                   END OF LABEL DUMPING CODE            08217
* ---------------- LABEL DUMPING CODE --------------------- *            08218
ASCUTLE  DS    0H                                                        08219
         B     LABCHEND                                                  08220
NOTLABEL NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG               08221
LABCHEND DS    0H                                                        08222
         BR    R7                                                        08223
* --------------------------------------------------------- *            08224
*    BAL REGISTER IS R7.                                                 08225
* --------------------------------------------------------- *            08226
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            08227
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              08228
* --------------------------------------------------------- *            08229
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          08230
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        08231
         BE    MOVEHI09                                                  08232
         MVC   0(4,R3),0(R2)                                             08233
         B     MOVEHIEN                                                  08234
         LA    R2,1(,R2)                                                 08235
         LA    R3,1(,R3)                                                 08236
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        08237
         BE    MOVEHI08                                                  08238
         MVC   0(3,R3),0(R2)                                             08239
         B     MOVEHIEN                                                  08240
         LA    R2,1(,R2)                                                 08241
         LA    R3,1(,R3)                                                 08242
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        08243
         BE    MOVEHI07                                                  08244
         MVC   0(2,R3),0(R2)                                             08245
         B     MOVEHIEN                                                  08246
         LA    R2,1(,R2)                                                 08247
         LA    R3,1(,R3)                                                 08248
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        08249
         BE    MOVEHIEN                                                  08250
         MVC   0(1,R3),0(R2)                                             08251
MOVEHIEN BR    R7                                                        08252
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08253
*    BAL REGISTER IS R7.                                                 08254
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08255
*              Upon entry, R4 points to the 80-byte record               08256
*              to be dumped into the LABLDUMP DD.                        08257
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08258
DUMLABRC DS    0H                                                        08259
         TM    PARMFLG2,X'10'       Are we dumping labels?               08260
         BZ    DUMLABRN             No. Skip putting out.                08261
         MVC   LLINE,LLINE-1        Clear output area in EBCDIC.         08262
         MVC   LLINE(80),0(R4)      Move in record info to line.         08263
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             08264
         BZ    NOASCIID             No. Don't translate label bytes.     08265
         MVI   LLINE,X'20'                  Clear to ASCII blanks        08266
         MVC   LLINE+1(L'LLINE-1),LLINE                                  08267
         MVC   LLINE(80),0(R4)      Move in record info to line.         08268
         ST    R5,SAVE5LDM          Save register.                       08269
         L     R5,SAVTRTCS          Point to translation table CSECT     08270
         USING TRTDSECT,R5          Map it.                              08271
         TM    ATRNLFLG,X'01'       Is this record to be translated?     08272
         BZ    ANOTRANS             No. Dump it as is.                   08273
         TR    LLINE(80),TRTE2A     Translate label dump area to ASCII   08274
ANOTRANS DS    0H                                                        08275
         L     R5,SAVE5LDM          Restore register.                    08276
         DROP  R5                                                        08277
NOASCIID DS    0H                                                        08278
         ST    R6,SAVER6            Prepare to write record. Save reg.   08279
         L     R6,LABLDDCB          Point to LABLDUMP DCB.               08280
         PUT   (6),LLINE                                                 08281
         L     R6,SAVER6            Restore register.                    08282
*        PUT   LABLDUMP,LLINE       Write out label info.                08283
DUMLABRN DS    0H                                                        08284
         BR    R7                                                        08285
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08286
*    BAL REGISTER IS R4.                                                 08287
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08288
HEX      DS    0H                                                        08289
         MVC   1(1,R15),0(R1)        Move byte                           08290
         UNPK  0(3,R15),1(2,R15)     Unpack                              08291
         TR    0(2,R15),HEXTAB-240                                       08292
         LA    R15,2(,R15)           Increment output pointer            08293
         LA    R1,1(,R1)             Increment input pointer             08294
         BCT   R0,HEX                Decrement length, then loop         08295
         MVI   0(R15),C' '           Blank the trailing byte             08296
         BR    R4                    Return to caller                    08297
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     08298
         SPACE                                                           08299
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08300
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08301
*    BAL REGISTER IS R7.                                                 08302
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08303
PRNTLABL DS    0H                                                        08304
*                                                                        08305
* ------ Call PRINTLBL routine to print this label.....   below          08306
         L     R15,PRTLBENT       Get entry point of called program      08307
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                       08308
         LA    R1,PARMFLGS        Point R1 to parm flags.                08309
         L     R3,=A(INAREA)      Point R3 to address of input area.     08310
         BALR  R14,R15                 Do CALL.                          08311
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.     08312
*        MVC   INAREA(80),0(R3)        Overlay 80 bytes of INAREA        08313
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    08314
* ------ Call PRINTLBL routine to print this label.....   above          08315
*                                                                        08316
         BR    R7                                                        08317
* --------------------------------------------------------- *            08318
* ---        C O N S T A N T S                          --- *            08319
* --------------------------------------------------------- *            08320
*    ------------------------ >   Constants for Date and Time - below    08321
SAVE1402 DS    6F                 Extra fullword for safety              08322
TIMED    DS    CL7                                                       08323
DATED    DS    CL9                                                       08324
DATETIME DS    4F                                                        08325
         ORG   DATETIME                                                  08326
TIME     DS    CL4                                                       08327
         DS    CL4                                                       08328
DATE     DS    CL5                                                       08329
         DS    CL3                                                       08330
HEADDLIT DS    0CL31              Literal for headings - date and time   08331
         DC    CL6'Today:'                                               08332
         DC    CL2' '                                                    08333
HEADDATE DC    CL23' '                                                   08334
LEVELLIT DS    0CL21              Level number display for headings      08335
         DC    CL6'Level '                                               08336
LEVELL   DC    CL4'&LLEV'                                                08337
         DC    CL2' ('                                                   08338
LEVDATE  DC    CL8' '             Assembly date for this program         08339
         DC    CL1')'                                                    08340
*    ------------------------ >   Constants for Date and Time - above    08341
         LTORG                                                           08342
FF       EQU   X'FF'                                                     08343
LABELITH DC    CL80'----ENDOFLABELHEADER '                               08344
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            08345
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               08346
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            08347
MESSAGE1 DC    CL133'1LABELCHK - TAPE LABEL CHECKING AND PRINTING PROGR- 08348
               AM              '                                         08349
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '             08350
         DC    C'EOV2EOF PARM OR OPTION'                                 08351
         DC    69C' '                                                    08352
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  08353
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  08354
         DC    C'                           '                            08355
         DC    C'0'                                                      08356
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                    08357
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1              08358
* --------------------------------------------------------- *            08359
         DC    C' '                                                      08360
LINE     DC    CL133' '                                                  08361
* ---------------------  Register Save Areas  ---------------->>>        08362
SYSPRINV DC    V(SYSPRINT)                                               08363
LABLDUMV DC    V(LABLDUMP)                                               08364
LABADDIV DC    V(LABADDIN)                                               08365
SAVTRTCS DC    F'0'                                                      08366
PRTLBENT DC    F'0'                                                      08367
PARMSAVE DC    F'0'                                                      08368
USERSAVE DC    F'0'                                                      08369
INARSAVE DC    F'0'                                                      08370
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     08371
HEXSAVE  DS    3F                    Register save for HEX macro         08372
SAVE2TO3 DC    2F'0'                                                     08373
SAVER6   DC    F'0'                                                      08374
SAVE3REG DC    F'0'                                                      08375
SAVE7BA1 DC    F'0'                                                      08376
SAVE7BA2 DC    F'0'                                                      08377
SAVE7REG DC    F'0'                                                      08378
SAVE7BAL DC    F'0'                                                      08379
SAVE4LDM DC    F'0'                                                      08380
SAVE5LDM DC    F'0'                                                      08381
R5HXPRT  DC    F'0'                                                      08382
SAVE7LDM DC    F'0'                                                      08383
SAVE7RG1 DC    F'0'                                                      08384
SAVE7RG2 DC    F'0'                                                      08385
SAVE7RG3 DC    F'0'                                                      08386
SAVE7RG4 DC    F'0'                                                      08387
SAVE7RG5 DC    F'0'                                                      08388
SAVE13LC DC    3F'0'                                                     08389
* ---------- *           Save V(CON)s to DCBs                            08390
SYSPRDCB DC    F'0'                                                      08391
LABLDDCB DC    F'0'                                                      08392
LABADDCB DC    F'0'                                                      08393
* ---------- *                                                           08394
         DC    C' '          BLANK FOR CLEARING AREA                     08395
LLINE    DC    CL80' '       OUTPUT AREA FOR LABEL DUMP                  08396
INASCI   DC    CL80' '       Read labels from here.                      08397
INAREA   DC    CL80' '       Read labels from here.                      08398
         DC    CL40' '       Padding for possible overflow.              08399
* ---------- *                                                           08400
**** ----------------------------------->>>>  Passed area, below         08401
* --------------------------------------------------------- *            08402
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS           08403
PARMFLG1 DC    X'00'                                                     08404
PARMFLG2 DC    X'00'                                                     08405
PARMFLG3 DC    X'00'                                                     08406
PARMFLG4 DC    X'00'                                                     08407
PARMFLG5 DC    X'00'                                                     08408
PARMFLG6 DC    X'00'                                                     08409
PARMFLG7 DC    X'00'                                                     08410
PARMFLG8 DC    X'00'                                                     08411
PARMFLG9 DC    X'00'                                                     08412
PARMFLGA DC    X'00'                                                     08413
PARMFLLN EQU   *-PARMFLGS                                                08414
PARMCOPY DS    XL10           Copy of options before correction          08415
* --------------------------------------------------------- *            08416
**** ----- LABELCHK -------------------->>>>  Passed area, below         08417
*                                                                        08418
LCHKPASS DS    0H                                                        08419
*                                                                        08420
INAREAX  DC    CL80' '        Read labels into here.                     08421
         DC    CL40' '        Padding for possible overflow.             08422
* --------------------------------------------------------- *            08423
*                                                                        08424
*                                                                        08425
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       08426
*              X'00'          DATA IS NOT A LABEL                        08427
*              X'01'          DATA IS A LABEL                            08428
*              X'02'          DATA IS AN ASCII LABEL                     08429
*                                                                        08430
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               08431
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             08432
*              X'02'          BECAUSE OF SYSIN    DD MISSING             08433
*              X'04'          BECAUSE OF LABADDIN DD MISSING             08434
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                08435
*              X'01'          LABLDUMP DD IS OPEN                        08436
*              X'02'          SYSIN    DD IS OPEN                        08437
*              X'04'          LABADDIN DD IS OPEN                        08438
L80FLAG  DC    X'00'                                                     08439
*              X'01'          LAST DATA WAS 80 BYTE RECORD               08440
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN    08441
*              X'01'          HDR1 HAS BEEN SEEN                         08442
*              X'02'          HDR2 HAS BEEN SEEN                         08443
*              X'04'          VOL1 HAS BEEN SEEN                         08444
*              X'08'          HDR1 IS FROM AN INITTED TAPE               08445
*              X'10'          EOF1 HAS BEEN SEEN                         08446
*              X'20'          EOF2 HAS BEEN SEEN                         08447
*              X'40'          EOV1 HAS BEEN SEEN                         08448
*              X'80'          EOV2 HAS BEEN SEEN                         08449
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                    08450
EXASCFLG DC    X'00'          External Label is ASCII if X'01'           08451
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   08452
LABADFLG DC    X'00'          If X'01' then close LABADDIN file          08453
CLOSMFLG DC    X'00'          If X'01' then close all open files         08454
* --------------------------                                             08455
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     08456
*              X'01'          WE ARE IN A HDR GROUP                      08457
*              X'02'          WE ARE IN A EOF GROUP                      08458
*              X'04'          WE ARE IN A EOV GROUP                      08459
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND    08460
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL    08461
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES       08462
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII     08463
* ---------- *                                                           08464
* --------------------------------------------------------- *            08465
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE        08466
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           08467
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           08468
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           08469
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             08470
VOLCHG   DC    C'      '                                                 08471
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS        08472
VOLASC   DC    C'      '     ASCII VOLUME                                08473
LCHKPASE EQU   *-LCHKPASS                                                08474
**** ----- LABELCHK -------------------->>>>  Passed area, above         08475
** ---------------------------------------------------------------- **   08476
TRTDSECT DSECT                 Displacements must match TRTCSECT.        08477
TRTBL0   DS    256X                                                      08478
TRTBL1   DS    256X                                                      08479
TRTBL2   DS    256X                                                      08480
TRTE2A   DS    256X                                                      08481
TRTA2E   DS    256X                                                      08482
TRTASPRT DS    256X                                                      08483
** ---------------------------------------------------------------- **   08484
         END                                                             08485
*         LABEL PRINTER        AT LEVEL 1.1 AS OF 03/13/05               08486
   TITLE 'PRINTLBL -- PRINT TAPE LABELS OF DIFFERENT TYPES'              08487
         GBLC  &LLEV                                                     08488
&LLEV    SETC  '1.1 '                                                    08489
         YREGS                                                           08490
         ENTRY PRINTLBL                                                  08491
PRINTLBL CSECT                                                           08492
         USING *,R15                                                     08493
         B     EYECATCH                                                  08494
         DC    C'--- '            MAKE EYECATCHER VISIBLE                08495
         DC    C'PRINTLBL - PRINT TAPE FILES IF THEY ARE LABELS'         08496
         DC    C' - '                                                    08497
         DC    C'LEVEL '                                                 08498
SYSLEV   DC    C'&LLEV'                                                  08499
         DC    C' - '                                                    08500
SYSDAT   DC    C'&SYSDATE'                                               08501
         DC    C'  ',C'&SYSTIME ',C'--- '                                08502
         DC    C'Copyright (c) 2003 by Sam Golob '                       08503
         DC    C'--- '              MAKE EYECATCHER VISIBLE              08504
SAVEAREA DC    18F'0'                                                    08505
EYECATCH DS    0D                   ENSURE ALIGNMENT                     08506
         SAVE  (14,12)                                                   08507
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM     08508
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   08509
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          08510
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         08511
         LR    R13,R1               NEW SAVE AREA ADDRESS                08512
         DROP  R15                                                       08513
* -----                             SET UP BASE REGISTERS                08514
         USING PRINTLBL,R12,R11,R10,R9                                   08515
         LR    R12,R15                                                   08516
         LA    R11,4095(,R12)                                            08517
         LA    R11,1(,R11)                                               08518
         LA    R10,4095(,R11)                                            08519
         LA    R10,1(,R10)                                               08520
         LA    R9,4095(,R10)                                             08521
         LA    R9,1(,R9)                                                 08522
         LR    R1,R5                RESTORE REGISTER 1 INPUT             08523
* ----------------------------------------------------------------- *    08524
         ST    R1,PARMSAVE          Address of parm flags in caller      08525
         ST    R3,INARSAVE          Address of input area in caller      08526
* ----------------------------------------------------------------- *    08527
INITCONS DS    0H                    Initialize necessary quantities.    08528
         MVI   LINE-1,X'40'          Make sure the print line is blank.  08529
         MVC   LINE,LINE-1                                               08530
         L     R0,SYSPRINV           SYSPRINT DCB address in caller      08531
         ST    R0,SYSPRDCB             store for the program's use       08532
         L     R0,LABLDUMV           LABLDUMP DCB address in caller      08533
         ST    R0,LABLDDCB             store for the program's use       08534
         L     R0,LABADDIV           LABADDIN DCB address in caller      08535
         ST    R0,LABADDCB             store for the program's use       08536
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer    08537
         ST    R0,SAVTRTCS             store it for later use            08538
         MVC   EXTLBLIN(80),0(R3)    Copy label input area to ours.      08539
         MVC   PARMFLGS(PARMFLLN),0(R1)   Copy input parms to our pgm.   08540
* ----------------------------------------------------------------- *    08541
WHATLBL  DS    0H                                                        08542
         CLC   EXTLBLIN(4),=C'VOL1'                                      08543
         BE    WHATLBLE                                                  08544
         CLC   EXTLBLIN(4),=C'HDR1'                                      08545
         BE    WHATLBLE                                                  08546
         CLC   EXTLBLIN(4),=C'EOF1'                                      08547
         BE    WHATLBLE                                                  08548
         CLC   EXTLBLIN(4),=C'EOV1'                                      08549
         BE    WHATLBLE                                                  08550
         CLC   EXTLBLIN(4),=C'HDR2'                                      08551
         BE    WHATLBLE                                                  08552
         CLC   EXTLBLIN(4),=C'EOF2'                                      08553
         BE    WHATLBLE                                                  08554
         CLC   EXTLBLIN(4),=C'EOV2'                                      08555
         BE    WHATLBLE                                                  08556
         CLC   EXTLBLIN(3),=C'UHL'                                       08557
         BE    WHATLBLE                                                  08558
         CLC   EXTLBLIN(3),=C'UTL'                                       08559
         BE    WHATLBLE                                                  08560
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                    08561
         BE    WHATLBLA                                                  08562
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                    08563
         BE    WHATLBLA                                                  08564
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                    08565
         BE    WHATLBLA                                                  08566
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                    08567
         BE    WHATLBLA                                                  08568
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                    08569
         BE    WHATLBLA                                                  08570
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                    08571
         BE    WHATLBLA                                                  08572
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                    08573
         BE    WHATLBLA                                                  08574
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                    08575
         BE    WHATLBLA                                                  08576
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                    08577
         BE    WHATLBLA                                                  08578
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                    08579
         BE    WHATLBLA                                                  08580
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                    08581
         BE    WHATLBLA                                                  08582
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                    08583
         BE    WHATLBLA                                                  08584
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                    08585
         BE    WHATLBLA                                                  08586
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                    08587
         BE    WHATLBLA                                                  08588
         B     NOPRTEXT                    Not a label format            08589
*                                                                        08590
WHATLBLE DS    0H                          EBCDIC Labels                 08591
*                                          Go to appropriate routine     08592
         CLC   EXTLBLIN(4),=C'VOL1'                                      08593
         BE    PXTVOL1                                                   08594
         CLC   EXTLBLIN(4),=C'HDR1'                                      08595
         BE    PXT1PR                                                    08596
         CLC   EXTLBLIN(4),=C'EOF1'                                      08597
         BE    PXT1PR                                                    08598
         CLC   EXTLBLIN(4),=C'EOV1'                                      08599
         BE    PXT1PR                                                    08600
         CLC   EXTLBLIN(4),=C'HDR2'                                      08601
         BE    PXT2PR                                                    08602
         CLC   EXTLBLIN(4),=C'EOF2'                                      08603
         BE    PXT2PR                                                    08604
         CLC   EXTLBLIN(4),=C'EOV2'                                      08605
         BE    PXT2PR                                                    08606
         CLC   EXTLBLIN(3),=C'UHL'                                       08607
         BE    PXTUSE                                                    08608
         CLC   EXTLBLIN(3),=C'UTL'                                       08609
         BE    PXTUSE                                                    08610
         B     NOPRTEXT                    Not a label format            08611
WHATLBLA DS    0H                          ASCII  Labels                 08612
*                                                                        08613
*        Common ASCII preparation routines......                         08614
*                                                                        08615
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation    08616
*                                                                        08617
* -- >  Make an EBCDIC version of this label in the EXTLBLWK field.      08618
         ST    R5,R5HXPRT              Save register.                    08619
         L     R5,SAVTRTCS             Point to translation table CSECT  08620
         USING TRTDSECT,R5                                               08621
         MVC   EXTLBLWK(80),EXTLBLIN   Move LABEL area to workarea       08622
         TR    EXTLBLWK(80),TRTA2E     Translate to EBCDIC for print     08623
         L     R5,R5HXPRT              Restore R5                        08624
         DROP  R5                                                        08625
* -- >                                                                   08626
*                                                                        08627
*        ASCII preparations done......                                   08628
*                                          Go to appropriate routine     08629
*                                                                        08630
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                    08631
         BE    PXTVOL1A                                                  08632
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                    08633
         BE    PXT1PRA                                                   08634
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                    08635
         BE    PXT1PRA                                                   08636
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                    08637
         BE    PXT1PRA                                                   08638
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                    08639
         BE    PXT2PRA                                                   08640
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                    08641
         BE    PXT2PRA                                                   08642
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                    08643
         BE    PXT2PRA                                                   08644
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                    08645
         BE    PXTUSEA                                                   08646
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                    08647
         BE    PXTUSEA                                                   08648
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                    08649
         BE    PXTUSEA                                                   08650
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                    08651
         BE    PXTUSEA                                                   08652
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                    08653
         BE    PXTUSEA                                                   08654
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                    08655
         BE    PXTUSEA                                                   08656
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                    08657
         BE    PXTUSEA                                                   08658
         B     NOPRTEXT                    Not a label format            08659
* ----------------------------------------------------------------- *    08660
*                                                                   *    08661
*   Various Label Printing Routines follow at this point.           *    08662
*                                                                   *    08663
* ----------------------------------------------------------------- *    08664
PXTVOL1  DS    0H                      Print EBCDIC VOL1 Label           08665
         MVI   LINE-1,C' '                                               08666
         MVC   LINE,LINE-1             CLEAR PRINT LINE                  08667
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS             08668
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL              08669
         MVC   VOL1OWNR(10),LINE       CLEAR FIELD TO BLANKS             08670
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION              08671
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND          08672
         ST    R6,SAVER6                                                 08673
         L     R6,SYSPRDCB                                               08674
         PUT   (6),LINE                                                  08675
         L     R6,SAVER6                                                 08676
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER         08677
         B     NOPRTEXT                                                  08678
PXTVOL1A DS    0H                      Print ASCII  VOL1 Label           08679
         MVI   LINE-1,C' '                                               08680
         MVC   LINE,LINE-1             CLEAR PRINT LINE                  08681
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS             08682
         MVC   VOL1SER(6),EXTLBLWK+4   REPORT VOLUME SERIAL              08683
         MVC   VOL1OWNR(14),LINE       CLEAR FIELD TO BLANKS             08684
         MVC   VOL1OWNR(14),EXTLBLWK+37   OWNER INFORMATION              08685
         MVC   VOL1LBL+78(15),=C'ANSI/ISO LEVEL '   Level 1, 3, or 4     08686
         MVC   VOL1LBL+93(1),EXTLBLWK+79  Copy Level into message        08687
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND          08688
         ST    R6,SAVER6                                                 08689
         L     R6,SYSPRDCB                                               08690
         PUT   (6),LINE                                                  08691
         L     R6,SAVER6                                                 08692
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER         08693
         B     NOPRTEXT                                                  08694
PXT1PR   DS    0H                      Print EBCDIC xxx1 Label           08695
         ST    R3,SAVE3REG                                               08696
         LA    R3,EXTLBLIN                                               08697
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08698
         BAL   R7,PRTXXX1              PRINT XXX1 LABEL FORMAT           08699
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08700
         L     R3,SAVE3REG                                               08701
         B     NOPRTEXT                                                  08702
PXT1PRA  DS    0H                      Print ASCII  xxx1 Label           08703
         ST    R3,SAVE3REG                                               08704
         LA    R3,EXTLBLWK             Point to label area to print      08705
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08706
         BAL   R7,PRTXXX1              PRINT LABEL INFO                  08707
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08708
         L     R3,SAVE3REG                                               08709
         B     NOPRTEXT                                                  08710
PXT2PR   DS    0H                      Print EBCDIC xxx2 Label           08711
         ST    R3,SAVE3REG                                               08712
         LA    R3,EXTLBLIN             Point to label area to print      08713
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08714
         BAL   R7,PRTXXX2              PRINT LABEL INFO                  08715
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08716
         L     R3,SAVE3REG                                               08717
         B     NOPRTEXT                                                  08718
PXT2PRA  DS    0H                      Print ASCII  xxx2 Label           08719
         ST    R3,SAVE3REG                                               08720
         LA    R3,EXTLBLWK             Point to label area to print      08721
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08722
         BAL   R7,PRTAXX2              PRINT LABEL INFO                  08723
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08724
         L     R3,SAVE3REG                                               08725
         B     NOPRTEXT                                                  08726
PXTUSE   DS    0H                      Print EBCDIC USER Label           08727
         ST    R3,SAVE3REG                                               08728
         LA    R3,EXTLBLIN             Point to label area to print      08729
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08730
         BAL   R7,PRTUSER              PRINT LABEL INFO                  08731
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08732
         L     R3,SAVE3REG                                               08733
         B     NOPRTEXT                                                  08734
PXTUSEA  DS    0H                      Print ASCII  USER Label           08735
         ST    R3,SAVE3REG                                               08736
         LA    R3,EXTLBLWK             Point to label area to print      08737
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08738
         BAL   R7,PRTUSER              PRINT LABEL INFO                  08739
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08740
         L     R3,SAVE3REG                                               08741
         B     NOPRTEXT                                                  08742
* ----------------------------------------------------------------- *    08743
NOPRTEXT DS    0H             Don't print external label on report       08744
* ----------------------------------------------------------------- *    08745
THEEND   DS    0H                                                        08746
         L     R13,4(,R13)                                               08747
         MVC   16(4,R13),=F'0'          Return code 0     in R15         08748
* - - - - - - - - - - - - - Pass addresses of our passed areas back.     08749
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1    08750
         MVC   32(4,R13),=A(EXTLBLIN)   Address of our EXTLBLIN in R3    08751
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08752
         LM    R14,R12,12(R13)                                           08753
         BR    R14                                                       08754
         EJECT                                                           08755
* --------------------------------------------------------- *            08756
*    BAL REGISTER IS R7.                                                 08757
* --------------------------------------------------------- *            08758
PRTXXX1  DS    0H            Print HDR1, EOF1, EOV1 - EBCDIC & ASCII     08759
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          08760
         MVI   LINE-1,C' '                                               08761
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           08762
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG            08763
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS               08764
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL                08765
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS               08766
         MVC   XXX1DSN(17),4(R3)     DATASET NAME                        08767
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS               08768
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER             08769
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS               08770
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER              08771
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS               08772
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS              08773
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS               08774
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS         08775
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS               08776
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS              08777
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS               08778
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS              08779
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE                08780
         ST    R6,SAVER6                                                 08781
         L     R6,SYSPRDCB                                               08782
         PUT   (6),LINE                                                  08783
         L     R6,SAVER6                                                 08784
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  08785
PRTXXX1R BR    R7                                                        08786
* --------------------------------------------------------- *            08787
*    BAL REGISTER IS R7.                                                 08788
* --------------------------------------------------------- *            08789
PRTXXX2  DS    0H                 Print HDR2, EOF2, EOV2 - EBCDIC        08790
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          08791
         MVI   LINE-1,C' '                                               08792
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           08793
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG            08794
         MVC   XXX2RFM(3),LINE       CLEAR FIELD TO BLANKS               08795
         MVC   XXX2RFM(1),4(R3)      RECFM                               08796
         MVC   XXX2RFM+1(1),38(R3)   Block Attribute                     08797
         MVC   XXX2RFM+2(1),36(R3)   Control Character                   08798
         MVC   XXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS               08799
         CLC   =C'00000',5(R3)       Is Block Length 00000?              08800
         BNE   PRX2NLBI              No. No LBI. Print what's here.      08801
         CLI   70(R3),X'40'          Is first LBI field a blank?         08802
         BNE   PRX2NLBI              No LBI field either. Print zeros.   08803
         MVC   XXX2BKLE(10),70(R3)   Move LBI field to blksize display   08804
         B     PRX2LBI               And not the old blksize field.      08805
PRX2NLBI DS    0H                                                        08806
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH                        08807
PRX2LBI  DS    0H                                                        08808
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS               08809
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH                       08810
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS               08811
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY                        08812
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS               08813
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME                      08814
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS               08815
         CLI   34(R3),C'P'           INDICATE IDRC?                      08816
         BNE   PRX2NOI               NO. SAY NO                          08817
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION                   08818
         B     PRX2MOV                                                   08819
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                                        08820
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE                08821
         ST    R6,SAVER6                                                 08822
         L     R6,SYSPRDCB                                               08823
         PUT   (6),LINE                                                  08824
         L     R6,SAVER6                                                 08825
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  08826
PRTXXX2R BR    R7                                                        08827
* --------------------------------------------------------- *            08828
*    BAL REGISTER IS R7.                                                 08829
* --------------------------------------------------------- *            08830
PRTAXX2  DS    0H                 Print HDR2, EOF2, EOV2 - ASCII         08831
*                                                                        08832
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED, TRANSLATED TO EBCDIC.    08833
*                                                                        08834
         MVI   LINE-1,C' '                                               08835
         MVC   LINE,LINE-1           CLEAR PRINT LINE                    08836
         MVC   AXX2LBL+1(4),0(R3)    MOVE LABEL TYPE TO MESSAGE          08837
         MVC   AXX2RFM(3),LINE       CLEAR FIELD TO BLANKS               08838
         MVC   AXX2RFM(1),4(R3)      RECFM                               08839
         MVC   AXX2RFM+1(1),38(R3)   Block Attribute                     08840
         MVC   AXX2RFM+2(1),36(R3)   Control Character                   08841
         MVC   AXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS               08842
         MVC   AXX2BKL(5),5(R3)      BLOCK LENGTH                        08843
         MVC   AXX2RCL(5),LINE       CLEAR FIELD TO BLANKS               08844
         MVC   AXX2RCL(5),10(R3)     RECORD LENGTH                       08845
         MVC   AXX2TDN(1),LINE       CLEAR FIELD TO BLANKS               08846
         MVC   AXX2TDN(1),15(R3)     TAPE DENSITY                        08847
         MVC   AXX2JST(17),LINE      CLEAR FIELD TO BLANKS               08848
         MVC   AXX2JST(17),17(R3)     JOB/STEP NAME                      08849
         MVC   AXX2CCS(5),LINE       CLEAR FIELD TO BLANKS               08850
         MVC   AXX2CCS(5),39(R3)      CCSID IDENTIFIER                   08851
PRA2MOV  MVC   LINE(133),AXX2LBL     MOVE INFO TO PRINT LINE             08852
         ST    R6,SAVER6                                                 08853
         L     R6,SYSPRDCB                                               08854
         PUT   (6),LINE                                                  08855
         L     R6,SAVER6                                                 08856
*        PUT   SYSPRINT,LINE         PRINT ASCII XXX2 LABEL              08857
PRTAXX2R BR    R7                                                        08858
* --------------------------------------------------------- *            08859
*    BAL REGISTER IS R7.                                                 08860
* --------------------------------------------------------- *            08861
PRTUSER  DS    0H                                                        08862
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          08863
         MVI   LINE-1,C' '                                               08864
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           08865
         MVI   USERLBL-1,C' '                                            08866
         MVC   USERLBL(133),USERLBL-1                                    08867
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE          08868
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE                08869
         ST    R6,SAVER6                                                 08870
         L     R6,SYSPRDCB                                               08871
         PUT   (6),LINE                                                  08872
         L     R6,SAVER6                                                 08873
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  08874
PRTUSERR BR    R7                                                        08875
* ----------------------------------------------------------------- *    08876
* ---               C  O  N  S  T  A  N  T  S                   --- *    08877
* ----------------------------------------------------------------- *    08878
         LTORG                                                           08879
FF       EQU   X'FF'                                                     08880
LABELITH DC    CL80'----ENDOFLABELHEADER '                               08881
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            08882
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               08883
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            08884
         DC    C'0'                                                      08885
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                    08886
         DC    X'30'                                                     08887
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1              08888
* --------------------------------------------------------- *            08889
         DC    C' '                                                      08890
LINE     DC    CL133' '                                                  08891
* ---------------------  Register Save Areas  ---------------->>>        08892
SYSPRINV DC    V(SYSPRINT)                                               08893
LABLDUMV DC    V(LABLDUMP)                                               08894
LABADDIV DC    V(LABADDIN)                                               08895
SAVTRTCS DC    F'0'                                                      08896
SYSPRDCB DC    F'0'                                                      08897
LABLDDCB DC    F'0'                                                      08898
LABADDCB DC    F'0'                                                      08899
SAVER6   DC    F'0'                                                      08900
SAVE3REG DC    F'0'                                                      08901
SAVE7BA1 DC    F'0'                                                      08902
SAVE7REG DC    F'0'                                                      08903
SAVE7BAL DC    F'0'                                                      08904
SAVE4LDM DC    F'0'                                                      08905
SAVE5LDM DC    F'0'                                                      08906
R5HXPRT  DC    F'0'                                                      08907
SAVE7LDM DC    F'0'                                                      08908
SAVE7RG1 DC    F'0'                                                      08909
SAVE7RG2 DC    F'0'                                                      08910
SAVE7RG3 DC    F'0'                                                      08911
SAVE7RG4 DC    F'0'                                                      08912
* ----------------------------------------------------------------- *    08913
** -------------------- >>>>>   ASCII & IBM  VOL1 LABEL PRINT - BELOW    08914
VOL1LBL  DC    C' VOL1 LABEL HAS BEEN DETECTED - VOLSER = '              08915
VOL1SER  DC    C'      '                                                 08916
VOL1OWNT DC    C'     OWNER = '                                          08917
VOL1OWNR DC    C'          '                                             08918
VOL1OWNE DC    C'    '                                                   08919
VOL1BLNK DC    59C' '                                                    08920
         DC    C' '                                                      08921
** -------------------- >>>>>   ASCII & IBM  USER LABEL PRINT - BELOW    08922
USERLBL  DC    81C' '                                                    08923
         DC    52C' '                                                    08924
** -------------------- >>>>>   ASCII & IBM  XXX1 LABEL PRINT - BELOW    08925
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                                  08926
XXX1VOL  DC    C'      '                                                 08927
XXX1DSNL DC    C' DSN='                                                  08928
XXX1DSN  DC    C'                 '                                      08929
XXX1DSQL DC    C' DS SEQ #: '                                            08930
XXX1DSQ  DC    C'    '                                                   08931
XXX1VSQL DC    C' VOL SEQ #: '                                           08932
XXX1VSQ  DC    C'    '                                                   08933
XXX1BLCL DC    C' BLK CNT: '                                             08934
XXX1BLCH DC    C'    '                                                   08935
XXX1BLC  DC    C'      '                                                 08936
XXX1CRDL DC    C' CRDATE: '                                              08937
XXX1CRD  DC    C'      '                                                 08938
XXX1EXDL DC    C' EXDATE: '                                              08939
XXX1EXD  DC    C'      '                                                 08940
XXX1BLNK DC    30C' '                                                    08941
** -------------------- >>>>>           IBM  XXX2 LABEL PRINT - BELOW    08942
XXX2LBL  DC    C' XXX2 LABEL: RECFM='                                    08943
XXX2RFM  DC    C' '                                                      08944
XXX2BKLL DC    C'    BLOCK LENGTH: '                                     08945
XXX2BKLE DS    0CL10                                                     08946
XXX2BKL  DC    C'     '                                                  08947
         DC    C'     '                                                  08948
XXX2RCLL DC    C'   RECORD LENGTH: '                                     08949
XXX2RCL  DC    C'     '                                                  08950
XXX2TDNL DC    C'  TAPE DEN: '                                           08951
XXX2TDN  DC    C' '                                                      08952
XXX2JSTL DC    C'   JOB/JOB STEP: '                                      08953
XXX2JST  DC    C'                 '                                      08954
XXX2IDRL DC    C'   IDRC? '                                              08955
XXX2IDR  DC    C'   '                                                    08956
XXX2BLNK DC    8C' '                                                     08957
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - BELOW    08958
AXX2LBL  DC    C' XXX2 LABEL: RECFM='                                    08959
AXX2RFM  DC    C' '                                                      08960
AXX2BKLL DC    C'    BLOCK LENGTH: '                                     08961
AXX2BKLE DS    0CL10                                                     08962
AXX2BKL  DC    C'     '                                                  08963
         DC    C'     '                                                  08964
AXX2RCLL DC    C'   RECORD LENGTH: '                                     08965
AXX2RCL  DC    C'     '                                                  08966
AXX2TDNL DC    C'  TAPE DEN: '                                           08967
AXX2TDN  DC    C' '                                                      08968
AXX2JSTL DC    C'   JOB/JOB STEP: '                                      08969
AXX2JST  DC    C'                 '                                      08970
AXX2CCSL DC    C'   CCSID '                                              08971
AXX2CCS  DC    C'     '                                                  08972
AXX2BLNK DC    6C' '                                                     08973
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - ABOVE    08974
* --------------------------------------------------------- *            08975
* ----------------------------------------------------------------- *    08976
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          08977
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                      08978
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 08979
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA             *  08980
PARMSAVE DC    F'0'                                                      08981
USERSAVE DC    F'0'                                                      08982
INARSAVE DC    F'0'                                                      08983
** ---------------------------------------------------------------- **   08984
**** ----------------------------------->>>>  Passed area, below         08985
* --------------------------------------------------------- *            08986
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS           08987
PARMFLG1 DC    X'00'                                                     08988
PARMFLG2 DC    X'00'                                                     08989
PARMFLG3 DC    X'00'                                                     08990
PARMFLG4 DC    X'00'                                                     08991
PARMFLG5 DC    X'00'                                                     08992
PARMFLG6 DC    X'00'                                                     08993
PARMFLG7 DC    X'00'                                                     08994
PARMFLG8 DC    X'00'                                                     08995
PARMFLG9 DC    X'00'                                                     08996
PARMFLGA DC    X'00'                                                     08997
PARMFLLN EQU   *-PARMFLGS                                                08998
PARMCOPY DS    XL10           Copy of options before correction          08999
* --------------------------------------------------------- *            09000
TRTDSECT DSECT                 Displacements must match TRTCSECT.        09001
TRTBL0   DS    256X                                                      09002
TRTBL1   DS    256X                                                      09003
TRTBL2   DS    256X                                                      09004
TRTE2A   DS    256X                                                      09005
TRTA2E   DS    256X                                                      09006
TRTASPRT DS    256X                                                      09007
** ---------------------------------------------------------------- **   09008
         END                                                             09009
         TITLE 'FOOTAGE CALCULATION AS IF THE TAPE WERE 6250 BPI'        09010
         YREGS                                                           09011
***********************************************************************  09012
*                                                                     *  09013
* NAME             FOOTAGE                                            *  09014
*                                                                     *  09015
* PURPOSE          Footage calculations on modern 3590 or 3490        *  09016
*                  cartridges don't mean much.  In order to give      *  09017
*                  us a much better idea of the true size of the      *  09018
*                  data on a tape, it would give us a better          *  09019
*                  picture to imagine that the data would reside      *  09020
*                  on a (very long) 6250 bpi tape reel.  Of course,   *  09021
*                  it might be too much data for an actual reel,      *  09022
*                  but we would get a good uniform picture of the     *  09023
*                  actual data size.                                  *  09024
*                                                                     *  09025
* FUNCTION         Calculate 6250 bpi footage for the last file       *  09026
*                  read, and accumulate total 6250 bpi footage        *  09027
*                  for the entire tape, up to the last file read.     *  09028
*                                                                     *  09029
* Calling FOOTAGE from COPYMODS -                                     *  09030
*                                                                     *  09031
*                  Register 1 passes the address of a workarea        *  09032
*                  within the COPYMODS program.  The FOOTWORK         *  09033
*                  DSECT describes the labels in this workarea.       *  09034
*                  The contents of the workarea contains all the      *  09035
*                  input information necessary for the FOOTAGE        *  09036
*                  routine.                                           *  09037
*                                                                     *  09038
*                  COPYMODS provides FOOTAGE with initial values,     *  09039
*                  in the workarea.  FOOTAGE uses these values,       *  09040
*                  and recalculates the footages (for the file, and   *  09041
*                  for the entire tape, up to here), based on block   *  09042
*                  sizes, etc. that were provided in the workarea.    *  09043
*                  FOOTAGE then changes the two footage measurement   *  09044
*                  values in the workarea, along with possibly other  *  09045
*                  workarea changes, and then returns control back    *  09046
*                  to COPYMODS.                                       *  09047
*                                                                     *  09048
* DESCRIPTION      FOOTAGE IS CALLED FROM THE COPYMODS READIN CODE    *  09049
*                  & IS PROVIDED WITH A WORK AREA.  THE FOOTAGE FOR   *  09050
*                  THE FILE (BASED ON BLKSIZE, NUMBER OF BLOCKS,      *  09051
*                  AND 6250 BPI TAPE DENSITY IS CALCULATED AND MOVED  *  09052
*                  INTO THE OUTPUT AREA.  TOTAL REEL LENGTH IS ALSO   *  09053
*                  CALCULATED AND MOVED INTO THE OUTPUT AREA.         *  09054
*                                                                     *  09055
* PARAMETERS       FOOTAGE IS PASSED THE ADDRESS OF A WORK AREA       *  09056
*                  WHICH CONTAINS INPUT DATA AND IS UPDATED BY        *  09057
*                  FOOTAGE.  THE WORK AREA INCLUDES -                 *  09058
*                                                                     *  09059
*                  TAPE LABEL TYPE INDICATOR (ALWAYS NON-LABELLED)    *  09060
*                  DENSITY CODE (ALWAYS 4)                            *  09061
*                  RECORD LENGTH                                      *  09062
*                  NUMBER OF RECORDS                                  *  09063
*                  NUMBER OF USER LABELS                              *  09064
*                  CUMULATIVE REEL COUNT   (UPDATED)                  *  09065
*                  FILE FOOTAGE IN EBCDIC  (UPDATED)                  *  09066
*                  REEL FOOTAGE IN EBCDIC  (UPDATED)                  *  09067
*                                                                     *  09068
* REGISTER USAGE   R0  - LINKAGE                                      *  09069
*                  R1  - LINKAGE                                      *  09070
*                  R2  - POINTER TO DENSITY CONSTANTS                 *  09071
*                  R3  - NOT USED                                     *  09072
*                  R4  - FOOTAGE CALCULATION WORK                     *  09073
*                  R5  - FOOTAGE CALCULATION WORK                     *  09074
*                  R6  - NOT USED                                     *  09075
*                  R7  - NOT USED                                     *  09076
*                  R8  - NOT USED                                     *  09077
*                  R9  - NOT USED                                     *  09078
*                  R10 - NOT USED                                     *  09079
*                  R11 - WORK AREA POINTER                            *  09080
*                  R12 - PROGRAM BASE                                 *  09081
*                  R13 - SAVE AREA                                    *  09082
*                  R14 - LINKAGE                                      *  09083
*                  R15 - LINKAGE                                      *  09084
*                                                                     *  09085
***********************************************************************  09086
         TITLE 'ENTRY CODING'                                            09087
FOOTAGE  CSECT                                                           09088
         USING FOOTAGE,R15              DEFINE BASE REGISTER             09089
         B     JUMPID                   BRANCH AROUND ID                 09090
         DC    AL1(28)                  IDENTIFIER LENGTH                09091
         DC    CL8'FOOTAGE'             CSECT NAME                       09092
         DC    CL1' '                   SPACER                           09093
         DC    CL8'&SYSDATE'            DATE OF ASSEMBLY                 09094
         DC    CL1' '                   SPACER                           09095
         DC    CL8'&SYSTIME'            TIME OF ASSEMBLY                 09096
         DC    CL1' '                   SPACER                           09097
JUMPID   DS    0H                                                        09098
         STM   R14,R12,12(R13)          SAVE REGISTERS                   09099
         LR    R12,R15                  LOAD BASE ADDRESS                09100
         DROP  R15                      DISCONTINUE R15 BASE             09101
         USING FOOTAGE,R12              DEFINE BASE REGISTERS            09102
         LR    R15,R13                  SAVE OLD SAVEAREA ADDR           09103
         BAL   R13,JUMPSAVE             LOAD SAVEAREA ADDR               09104
         DC    18F'0'                   SAVE AREA                        09105
JUMPSAVE DS    0H                                                        09106
         ST    R15,4(,R13)              CHAIN SAVE AREAS                 09107
         ST    R13,8(,R15)                                               09108
         LR    R11,R1                   LOAD WORK AREA ADDRESS           09109
         USING FOOTWORK,R11             WORK AREA ADDRESSABILITY         09110
         B     CALC6250        ONLY CALCULATE AS 6250 FOR ALL TAPES.     09111
         TITLE 'FOOTAGE CALCULATIONS FOR 6250 BPI, GCR'                  09112
***********************************************************************  09113
*                                                                     *  09114
*        FOOTAGE CALCULATIONS FOR 6250 BPI, GCR                       *  09115
*                                                                     *  09116
*        FULL REEL COUNT = 260,409,600                                *  09117
*                                                                     *  09118
***********************************************************************  09119
         SPACE                                                           09120
CALC6250 SR    R4,R4                   CLEAR FOR DIVIDE                  09121
         L     R5,BLKSZE               LOAD BLOCKSIZE                    09122
         D     R4,=F'1106'             DIVIDE BY 1106                    09123
         LR    R1,R4                   SAVE REMAINDER                    09124
         M     R4,=F'1600'             FOR EVERY 1106, 1580 + 20 RESYNC  09125
         SR    R0,R0                                                     09126
         D     R0,=F'7'                7 BYTE GROUPS                     09127
         LA    R1,1(R1)                ADD 1 TO QUOTIENT                 09128
         MH    R1,=H'10'               FOR EVERY 7, YOU GET 10           09129
         AR    R5,R1                   ADD IT TO TOTAL                   09130
         A     R5,=F'2898'             ADD 2898 FOR IBG AND CONTROL      09131
         M     R4,NUMBLKS              MULTIPLY BY NUMBER OF BLOCKS      09132
         CLI   LABELTYP,C'S'           TEST FOR STANDARD LABELS          09133
         BNE   SAVE6250                                                  09134
         L     R1,USERLBLS             LOAD USER LABEL COUNT             09135
         LA    R1,2(R1)                ADD 2 FOR STANDARD LABELS         09136
         MH    R1,=H'6036'             MULTIPLY BY 6036                  09137
         AR    R5,R1                   ADD TO TOTAL                      09138
         CLC   =H'1',FILENO            TEST FOR FIRST FILE               09139
         BNE   SAVE6250                                                  09140
         A     R5,=F'3018'             ADD 3018 FOR VOL LABEL            09141
SAVE6250 LA    R2,DATA6250             ADDRESS OF 6250 BPI CONSTANTS     09142
         TITLE 'CONVERT THE BIT COUNTS TO FEET AND EDIT'                 09143
***********************************************************************  09144
*                                                                     *  09145
*        CONVERT THE BIT COUNTS TO FEET AND EDIT                      *  09146
*                                                                     *  09147
***********************************************************************  09148
         SPACE                                                           09149
FOOTEDIT LR    R1,R5                   COPY                              09150
         A     R1,CUMTOTAL             ADD PREVIOUS TOTAL                09151
         ST    R1,CUMTOTAL             STORE NEW TOTAL                   09152
         A     R5,0(,R2)               ROUND OFF                         09153
         D     R4,4(,R2)               DIVIDE BY (BPI/10)*12             09154
         CVD   R5,PACKDEC              CONVERT TO DECIMAL                09155
         MVC   FILEFT,=X'40402020202021204B20'  MOVE IN MASK             09156
         ED    FILEFT,PACKDEC+4        EDIT IT                           09157
         LR    R5,R1                   COPY CUMULATIVE TOTAL             09158
         SR    R4,R4                                                     09159
         A     R5,0(,R2)               ROUND OFF                         09160
         D     R4,4(,R2)               DIVIDE BY (BPI/10)*12             09161
         CVD   R5,PACKDEC              CONVERT TO DECIMAL                09162
         MVC   REELFT,=X'40402020202021204B20'  MOVE IN MASK             09163
         ED    REELFT,PACKDEC+4                                          09164
         DROP  R11                                                       09165
FOOTRTRN L     R13,4(,R13)              RESTORE OLD SAVEAREA             09166
         MVC   16(4,R13),=F'0'          RETURN CODE 0     IN R15         09167
         LM    R14,R12,12(R13)                                           09168
         BR    R14                      RETURN                           09169
         TITLE 'DATA AREAS'                                              09170
***********************************************************************  09171
*                                                                     *  09172
*        DATA AREAS                                                   *  09173
*                                                                     *  09174
***********************************************************************  09175
         SPACE                                                           09176
         LTORG                                                           09177
         SPACE                                                           09178
DATA6250 DC    F'5425'                                                   09179
         DC    F'10850'                9042/10*12 (BITS PER FOOT/10)     09180
PACKDEC  DS    D                                                         09181
*--------FOLLOWING IS A WORK AREA FOR FOOTAGE ROUTINE                    09182
*   THIS DSECT MUST MATCH THE LABELTYP WORK AREA IN COPYMODS.            09183
FOOTWORK DSECT                                                           09184
LABELTYP DS    C                       LABEL TYPE                        09185
DENSITY  DS    C                       DENSITY CODE                      09186
FILENO   DS    H                       FILE SEQUENCE NUMBER IN BINARY    09187
BLKSZE   DS    F                       BLOCK SIZE IN BINARY              09188
NUMBLKS  DS    F                       NUMBER OF BLOCKS IN BINARY        09189
USERLBLS DS    F                       USER LABELS IN BINARY             09190
CUMTOTAL DS    F                       CUMULATIVE REEL TOTAL             09191
FILEFT   DS    CL10                    FILE FOOTAGE IN EBCDIC            09192
REELFT   DS    CL10                    REEL FOOTABE IN EBCDIC            09193
*--------END OF FOOTAGE ROUTINE PARAMETERS                               09194
         END                                                             09195
