*          DATA SET CBT990     AT LEVEL 064 AS OF 08/07/03               00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                 00002
**************************************************************           00003
**************************************************************           00004
**                                                          **           00005
**                                                          **           00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **           00007
**                                                          **           00008
**                      Revised by Sam Golob.               **           00009
**                                                          **           00010
**                                                          **           00011
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **           00012
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **           00013
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **           00014
**                                                          **           00015
**     This has been revised, with the many new functions   **           00016
**     that have been added to COPYMODS.  Besides copying   **           00017
**     tapes, COPYMODS can read and measure tapes, as well  **           00018
**     as altering the copied tapes in many ways, such as   **           00019
**     stripping the labels or leading tape marks off.      **           00020
**     The VOLSER and OWNER can be altered in the copied    **           00021
**     tapes, and all labels can also be altered, through   **           00022
**     a process of dumping the labels to a FB-80 file      **           00023
**     (LABLDUMP option), editing the labels, stripping     **           00024
**     the labels in a copy operation (STRIP option), and   **           00025
**     splicing all the labels back in another copy         **           00026
**     operation (LABADDIN option).  COPYMODS can also      **           00027
**     INIT tapes, as many as 16 at a time.  No input tape  **           00028
**     is needed for an INIT operation (INITVOLS option).   **           00029
**                                                          **           00030
**     The different COPYMODS parms or options can be used  **
**     in combination with each other, as long as they      **
**     don't contradict each other.  In certain cases, the  **
**     use of one option will cause the automatic turn-off  **
**     of one or more other options that contradict with    **
**     it.  This "adjustment" is done by the COPYMODS       **
**     program just after it receives the options settings  **
**     back from the PARMCHEK program.  For example, if     **
**     both LABLDUMP and LABADDIN (which contradict each    **
**     other) are set, COPYMODS will make a judgment that   **
**     LABADDIN takes precedence, so it will turn off both  **
**     the LABLDUMP and READ (read only) options.  On the   **
**     other hand, the STRIP and LABLDUMP options do not    **
**     contradict each other.  So in that case, when STRIP  **
**     and LABLDUMP are both set, COPYMODS will dump all    **
**     the labels from the input tape to the LABLDUMP file, **
**     while at the same time, it will strip them from the  **
**     tape copies.  To get the exact effect you want from  **
**     a COPYMODS run, just be very careful to code the     **
**     correct combination of options.  Look at the OPTIONS **
**     report before you mount the tapes.  (The OPTIONS     **
**     report in //SYSPRINT will be complete before the     **
**     tapes are mounted.)                                  **
**                                                          **
**     Up to 132 bytes of the beginning n records of each   **           00031
**     tape file can be dumped in Hex, similarly to the     **           00032
**     way TAPESCAN does it (HEXPRT option).                **           00033
**                                                          **           00034
**     See the "New Features" section below for some more   **           00035
**     details.  See the #MANUAL member of the install pds  **           00036
**     (CBT Tape File 229) for even more details.           **           00037
**                                                          **           00038
**  METHOD: COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S     **           00039
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **           00040
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **           00041
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **           00042
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **           00042
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **           00042
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **           00043
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **           00044
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **           00045
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **           00046
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **           00047
**    PARTICULAR OUTPUT TAPE.                               **           00048
**                                                          **           00050
**  COPYMODS has some optional DD's which will be used      **           00051
**    if they are present.  These following DD's are used   **           00052
**    by the PARMCHEK program, when COPYMODS is executed.   **           00053
**                                                          **           00054
**  //SYSIN    - Extra space to enter PARM keywords.        **           00055
**               Also, the only place to enter the          **           00056
**               "quantity" keywords, which start in        **           00057
**               column 1 of a SYSIN card.                  **           00058
**                                                          **           00059
**         OUTVOLALL=volser      (up to 6 characters)       **           00060
**         TAPEOWNER=owner name  (up to 10 characters)      **           00061
**         FILELIMIT=nnn         (numeric)                  **           00062
**         LABELIMIT=nnn         (numeric)                  **           00063
**         PRINTRCDS=nnn         (numeric)                  **           00064
**                                                          **           00065
**  //PARMREPT - Diagnostic output from the PARMCHEK        **           00066
**               program.  LRECL=133,RECFM=FBA.             **           00067
**                                                          **           00068
**    In addition, the COPYMODS program itself has some     **           00069
**    extra DD's, which are required if the appropriate     **           00070
**    options are set:                                      **           00071
**                                                          **           00072
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **           00073
**               receive the images of all tape labels      **           00074
**               read, together with some control cards     **           00075
**               that COPYMODS generates.  This DD name     **           00076
**               is necessary if the LABLDUMP option is     **           00077
**               in effect.                                 **           00078
**                                                          **           00079
**  //LABADDIN - An FB-80 file, or member of a pds, which   **           00080
**               contains the set of labels to be spliced   **           00081
**               into an NL tape to create an SL tape.      **           00082
**               This DD name is necessary if the LABADDIN  **           00083
**               option of COPYMODS is in effect.  Usually  **           00084
**               the LABADDIN file is a previous result of  **           00085
**               a LABLDUMP operation.                      **           00086
**                                                          **           00087
**  This program has to be assembled with PARM=BATCH in     **           00088
**    the Assembler EXEC parms.  The entire PARMCHEK        **           00089
**    program has to be included in the assembly, because   **           00090
**    PARMCHEK has to be fitted to the current level of     **           00091
**    the COPYMODS program.                                 **           00092
**                                                          **           00093
**************************************************************           00094
**                                                          **           00095
**  REQUIRED DD NAMES (used by the COPYMODS program):       **           00096
**                                                          **           00097
**  //IN       -  Points to the Input Tape.  Only not       **           00098
**                required in a tape init operation, if     **           00099
**                the INITVOLS option is in effect.         **           00100
**                Otherwise, //IN is always required.       **           00101
**                                                          **           00102
**  //OUT1 thru - Any of these 16 DD names can be coded.    **           00103
**  //OUT16       These are for the output tapes.  These    **           00104
**                are not required if the READ (readonly)   **           00105
**                option is in effect.  Any one of these    **           00106
**                16 possible DD names may be coded, even   **           00107
**                if some numbers have been skipped.  For   **           00108
**                instance, if you have one output tape,    **           00109
**                it may be defined by //OUT13.  It is      **           00110
**                not necessary to code //OUT1.             **           00111
**                                                          **           00112
**  //SYSPRINT  - The output dataset to contain all the     **           00112
**                COPYMODS operation information that was   **           00112
**                called for by the various options set,    **           00112
**                including the OPTIONS display itself.     **           00112
**                This dataset should be LRECL=133,         **           00112
**                RECFM=FBA.                                **           00112
**                                                          **           00112
**************************************************************           00113
**                                                          **           00114
**  PROGRAM STRUCTURE:                                      **           00115
**                                                          **           00116
**  This program is no longer a single CSECT as it was in   **           00117
**    the old days.  There are now the following CSECTs,    **           00118
**    which should all be assembled together:               **           00119
**                                                          **           00120
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **           00121
**                                                          **           00122
**   COPYMODS - The main processing module, which contains  **           00123
**              most of the tape copy/reading processing.   **           00124
**                                                          **           00125
**   TRTCSECT - The translate tables for Hex printing of    **           00126
**              tape records.                               **           00127
**                                                          **           00128
**   COPYMOPT - The separate routine which reads the PARM   **           00129
**              bits that have been set, and which prints   **           00130
**              a report in SYSPRINT showing the options    **           00131
**              that are in effect.                         **           00132
**                                                          **           00133
**   PARMCHEK - All the PARM and SYSIN input processing is  **           00134
**              done here.  PARM bits are passed back to    **           00135
**              COPYMODS in R1, the User Area is passed     **           00136
**              back to COPYMODS in R2.                     **           00137
**                                                          **           00138
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **           00139
**              program, this table contains all the option **           00140
**              bit meanings and their default settings.    **           00141
**                                                          **           00142
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **           00143
**  but they must be coordinated, and at the same level, so **           00144
**  to be safe, they should always be assembled together.   **           00145
**                                                          **           00146
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **           00147
**                                                          **           00148
**  GENERAL OUTLINE OF PROGRAM CALLS                        **           00149
**  ------- ------- -- ------- -----                        **           00150
**                                                          **           00151
**  COPYMODS is the first program to get control.  The      **           00152
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **           00153
**  and the entry locations are stored in fullwords for     **           00154
**  later use.                                              **           00155
**                                                          **           00156
**  PARMCHEK is immediately called, and it opens //SYSIN    **           00157
**  if that ddname is present.  If //PARMREPT is present,   **           00158
**  it is also used by the PARMCHEK program.                **           00159
**                                                          **           00160
**  After PARMCHEK has returned all parm bit settings to    **           00161
**  COPYMODS and all user-quantities, the settings are      **           00162
**  examined by COPYMODS and inconsistent settings are      **           00163
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **           00164
**  has to be turned off, because only one of these can be  **           00165
**  done in one run.  These inconsistencies are all fixed,  **           00166
**  and then COPYMODS processing starts.                    **           00167
**                                                          **           00168
**  COPYMOPT is called to display all the options that have **           00169
**  been set, if the OPTION parm has been set.  This is     **           00170
**  done to //SYSPRINT.  If any adjustments of options have **           00171
**  been made, you can see the final result in the SYSPRINT **           00172
**  report that has been produced by COPYMOPT.              **           00173
**                                                          **           00174
**  A significant note is, that the PARMREPT contains the   **           00174
**  options as they have been set by the PARMCHEK program,  **           00174
**  with no alteration.  The COPYMOPT call, which produces  **           00174
**  the OPTIONS display in //SYSPRINT, occurs after the     **           00174
**  adjustments for inconsistent parm settings has been     **           00174
**  made by COPYMODS, so you can see the effect of those    **           00174
**  adjustments by comparing these two reports against      **           00174
**  each other.                                             **           00174
**                                                          **           00174
**  After that, COPYMODS does its things, depending on the  **           00175
**  options that have been set.  Most of the processing is  **           00175
**  done in the COPYMODS csect, except for the HEXPRT       **           00176
**  option, where the translation tables are in the         **           00177
**  TRTCSECT csect.                                         **           00178
**                                                          **           00179
**************************************************************           00180
**                                                          **           00181
**  NEW FEATURES ADDED BY SAM GOLOB:                        **           00182
**                                                          **           00183
**                                                          **           00184
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **           00185
**                                                          **           00186
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **           00187
**                                                          **           00188
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **           00189
**       BE CORRECTLY COPIED.                               **           00190
**                                                          **           00191
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **           00192
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **           00193
**       FOUND ON THE INPUT TAPE.                           **           00194
**                                                          **           00195
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **           00196
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **           00197
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **           00198
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **           00199
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **           00200
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **           00201
**       MAIN SOURCE CODE.                                  **           00202
**                                                          **           00203
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **           00204
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **           00205
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **           00206
**       INVOKE THIS ACTION.                                **           00207
**                                                          **           00208
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **           00209
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **           00210
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **           00211
**                                                          **           00212
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **           00213
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **           00214
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **           00215
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **           00216
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **           00217
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **           00218
**                                                          **           00219
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **           00220
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **           00221
**                                                          **           00222
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **           00223
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **           00224
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **           00225
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **           00226
**       SERVICE.                                           **           00227
**                                                          **           00228
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **           00229
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **           00230
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **           00231
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **           00232
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **           00233
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **           00234
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **           00235
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **           00236
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **           00237
**                                                          **           00238
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **           00239
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **           00240
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **           00241
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **           00242
**                                                          **           00243
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **           00244
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **           00245
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **           00246
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **           00247
**                                                          **           00248
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **           00249
**       TAPEOWNER=xxxxxxxxxx                               **           00250
**       FILELIMIT=nnnn                                     **           00251
**       LABELIMIT=nnnn                                     **           00252
**       PRINTRCDS=nnnn                                     **           00253
**         or                                               **           00254
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **           00255
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **           00256
**                                                          **           00257
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **           00258
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **           00259
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **           00260
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **           00261
**                                                          **           00262
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **           00263
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **           00264
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **           00265
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **           00266
**       IN THE EXTERNAL LABEL DATASET.                     **           00267
**                                                          **           00268
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **           00269
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **           00270
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **           00271
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **           00272
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **           00273
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **           00274
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **           00275
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **           00276
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **           00277
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **           00278
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **           00279
**                                                          **           00280
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **           00281
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **           00282
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **           00283
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **           00284
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **           00285
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **           00286
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **           00287
**       DATA FILE HAS BEEN WRITTEN.                        **           00288
**                                                          **           00289
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **           00290
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **           00291
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **           00292
**       EXTERNAL LABEL DATASET.                            **           00293
**                                                          **           00294
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **           00295
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **           00296
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **           00297
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **           00298
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **           00299
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **           00300
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **           00301
**       THE HDR2.                                          **           00302
**                                                          **           00303
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **           00304
**       INPUT TAPE.  USE A PARM OF INITVOLS.               **           00305
**                                                          **           00306
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **           00307
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **           00308
**       IN A SYSIN CARD.                                   **           00309
**                                                          **           00310
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **           00311
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **           00312
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **           00313
**       IS INTERPRETED AS SL FILES.  IF NOT, THEN IT IS    **           00314
**       INTERPRETED AS NL.                                 **           00315
**                                                          **           00316
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **           00317
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **           00318
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **           00319
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **           00320
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **           00321
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **           00322
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **           00323
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **           00324
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **           00325
**       BYTE TOTALS COMING FROM DATA FILES.                **           00326
**                                                          **           00327
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **           00328
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **           00329
**       TO PRINT THEM.)                                    **           00330
**                                                          **           00331
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **           00332
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **           00333
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **           00334
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).                 **           00335
**                                                          **           00336
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **           00337
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **           00338
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **           00339
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **           00340
**       DATA BLOCKS ON THE TAPE.                           **           00341
**                                                          **           00342
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **           00343
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **           00344
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **           00345
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **           00346
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **           00347
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **           00348
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **           00349
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **           00350
**       THESE WILL STILL BE STRIPPED OFF.  IF FILE         **           00351
**       LIMITING IS IN EFFECT, THEN THE INPUT TAPE IS      **           00352
**       ASSUMED TO BE SL, AND THE NUMBER CODED IN THE      **           00353
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **           00354
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **           00355
**       INPUT TAPE.                                        **           00356
**                                                          **           00357
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **           00358
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **           00359
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **           00360
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **           00361
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **           00362
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **           00363
**                                                          **           00364
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **           00365
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **           00366
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **           00367
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **           00368
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **           00369
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **           00370
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **           00371
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **           00372
**                                                          **           00373
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **           00374
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **           00375
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **           00376
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **           00377
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **           00378
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **           00379
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **           00380
**                                                          **           00381
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **           00382
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **           00383
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **           00384
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **           00385
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **           00386
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **           00387
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **           00388
**                                                          **           00389
**************************************************************           00390
         EJECT                                                           00391
**************************************************************           00392
**  CHANGE LOG:                                             **           00393
**                                                          **           00394
** LEVEL 003                                                **           00395
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS        SBG 03/00 **           00396
**                                                          **           00397
** LEVEL 004                                                **           00398
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER   SBG 03/00 **           00399
**             A HEADER LABEL.  THIS MEANS AN SL  SBG 03/00 **           00400
**             FILE WITHOUT ANY DATA IN IT.  AND  SBG 03/00 **           00401
**             IF THIS IS THE CASE, DON'T STOP    SBG 03/00 **           00402
**             COPYING FILES.                     SBG 03/00 **           00403
**                                                          **           00404
** LEVEL 005                                                **           00405
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE     SBG 03/00 **           00406
**             R12,R11.                           SBG 03/00 **           00407
**                                                          **           00408
** LEVEL 006                                                **           00409
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP   SBG 03/00 **           00410
**             TO 16 OUTPUT TAPES FROM OUT1 TO    SBG 03/00 **           00411
**             OUT16.                             SBG 03/00 **           00412
**                                                          **           00413
** LEVEL 007 AND 008                                        **           00414
**  03/14/00 - CLEANED UP SPELLING ON ERROR       SBG 03/00 **           00415
**             MESSAGES AND FIXED DOCUMENTATION.  SBG 03/00 **           00416
**             ADDED EYECATCHERS COSMETICALLY.    SBG 03/00 **           00417
**                                                          **           00418
** LEVEL 009                                                **           00419
**  03/21/00 - STOP AFTER INITTED MVS TAPE        SBG 03/00 **           00420
**                                                          **           00421
** LEVEL 010                                                **           00422
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS  SBG 03/00 **           00423
**             FOR BLOCK SIZES FROM 32K TO 64K.   SBG 03/00 **           00424
**                                                          **           00425
**             I MADE AN ATTEMPT TO COPY DOS/VSE  SBG 03/00 **           00426
**             TAPES THAT HAVE LEADING TAPE       SBG 03/00 **           00427
**             MARKS.  THERE IS A CHOICE TO       SBG 03/00 **           00428
**             EITHER COPY ALL THE LEADING        SBG 03/00 **           00429
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO SBG 03/00 **           00430
**             DISCARD THEM ALL.  YOU USE A PARM  SBG 03/00 **           00431
**             OF LTMSKIP TO DISCARD LEADING      SBG 03/00 **           00432
**             TAPEMARKS, AND ANY OTHER PARM, OR  SBG 03/00 **           00433
**             NO PARM, WILL CAUSE THE PROGRAM TO SBG 03/00 **           00434
**             COPY THEM TO THE OUTPUT TAPES.     SBG 03/00 **           00435
**                                                          **           00436
** LEVEL 011                                                **           00437
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE  SBG 03/00 **           00438
**             BY ENDING THE JOB NORMALLY AFTER   SBG 03/00 **           00439
**             ONE TAPEMARK.                      SBG 03/00 **           00440
**                                                SBG 03/00 **           00441
**             IF VOL1 LABEL IS DETECTED, THEN    SBG 03/00 **           00442
**             PUT OUT A MESSAGE SAYING SO, AND   SBG 03/00 **           00443
**             INDICATING THE VOLSER THAT WAS     SBG 03/00 **           00444
**             FOUND.  THIS PROGRAM WAS WRITTEN   SBG 03/00 **           00445
**             ORIGINALLY WITH THE INTENT OF      SBG 03/00 **           00446
**             HANDLING NL TAPES, SO THAT THE     SBG 03/00 **           00447
**             CONDITIONS WHICH RESULT FROM       SBG 03/00 **           00448
**             HAVING SL TAPES, HAD TO BE         SBG 03/00 **           00449
**             ACCOUNTED FOR LATER.               SBG 03/00 **           00450
**                                                          **           00451
** LEVEL 012                                                **           00452
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2       SBG 04/00 **           00453
**             HAVING ONLY ONE TAPE MARK AFTER              **           00454
**             THEM.                                        **           00455
**                                                          **           00456
** LEVEL 013                                                **           00457
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD    SBG 04/00 **           00458
**             LABEL TYPES, AND THE SETTING OF              **           00459
**             FLAGS TO INDICATE EACH TYPE.                 **           00460
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **           00461
**             MOVE NON-LABEL-RELATED FLAGS OUT             **           00462
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **           00463
**             EASY PRINTING OF LABEL CONTENTS,             **           00464
**             BUT NO EXTRA PRINTING IS DONE AT             **           00465
**             THIS LEVEL.                                  **           00466
**                                                          **           00467
** LEVEL 014                                                **           00468
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN      SBG 05/00 **           00469
**             PARM SCANNER THAT IS EASY TO                 **           00470
**             MODIFY, AND TO SUPPLY SYNONYMS               **           00471
**             FOR THE PARMS.  ADDED SUPPORT,               **           00472
**             VIA THE LBLINFO PARM, TO PRINT               **           00473
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **           00474
**             EOV2 LABEL INFORMATION, IF IT IS             **           00475
**             FOUND ON THE INPUT TAPE.  THAT IS,           **           00476
**             IF THE INPUT TAPE IS SL.                     **           00477
**                                                          **           00478
**             FOR A LIST OF PERMISSIBLE PARMS,             **           00479
**             SEE LABEL PARMTABL.                          **           00480
**                                                          **           00481
** LEVEL 015                                                **           00482
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00483
**             TO TURN OFF A PARM FLAG AS WELL AS           **           00484
**             THE ABILITY TO TURN IT ON. INCREASED         **           00485
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **           00486
**             BYTE.                                        **           00487
**                                                          **           00488
** LEVEL 016                                                **           00489
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00490
**             TO SET ANY PARM SETTING AS A                 **           00491
**             DEFAULT.  A SETTING FOR A DEFAULT            **           00492
**             ENTRY THAT IS LATER IN THE TABLE,            **           00493
**             WILL OVERRIDE A SETTING FOR A                **           00494
**             DEFAULT THAT WAS SET EARLIER IN THE          **           00495
**             TABLE.  SETTING A PARM EXPLICITLY            **           00496
**             IN THE JCL, WILL OVERRIDE ANY                **           00497
**             DEFAULT SETTING FOR THAT PARM.               **           00498
**                                                          **           00499
** LEVEL 017                                                **           00500
**  05/11/00 - USED THE PARM SCANNER TO MAKE A    SBG 05/00 **           00501
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **           00502
**             KINDS OF TAPE LABELS.  IF YOU WANT           **           00503
**             ALL OF THEM, YOU JUST HAVE A PARM            **           00504
**             THAT THROWS ALL OF THE FLAGS.  ALL           **           00505
**             OF THIS IS CODED IN PARMTABL AND             **           00506
**             THE FLAGS ARE USED IN PRTXXX1 AND            **           00507
**             PRTXXX2.                                     **           00508
**                                                          **           00509
** LEVEL 018                                                **           00510
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE  SBG 05/00 **           00511
**             VOLSER OF THE COPIED TAPES, TO               **           00512
**             MATCH THE VOLSER INDICATED IN THE            **           00513
**             OUTXX DD NAMES.  THIS IS DONE WITH           **           00514
**             THE CHGVOL PARM KEYWORD.  THIS               **           00515
**             ACTION ONLY OCCURS IF THE INPUT              **           00516
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **           00517
**             DETECTED.  THE COPIED VOL1 LABEL             **           00518
**             IS ALTERED BEFORE THE WRITE.                 **           00519
**                                                          **           00520
** LEVEL 019                                                **           00521
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1    SBG 06/00 **           00522
**             AND EOV2 LABELS THAT ARE IN THE              **           00523
**             MIDDLE OF A TAPE.  OF COURSE THIS            **           00524
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **           00525
**             CAN HAPPEN WHEN YOU COPY FILES               **           00526
**             WITH THE COPYFILE PROGRAM, FROM              **           00527
**             THE END OF ONE TAPE, TO THE                  **           00528
**             BEGINNING OR THE MIDDLE OF                   **           00529
**             ANOTHER.  COPYFILE HAS NOT BEEN              **           00530
**             FIXED AS YET NOT TO DO THIS, BUT IT          **           00531
**             COPIES THE EOV LABELS AS IS.  THIS           **           00532
**             NEW OPTION IS CALLED EOVCHG OR               **           00533
**             EOV2EOF; THE EOV LABELS ARE                  **           00534
**             CHANGED (IN THE COPIED TAPES) TO             **           00535
**             EOF, AND A MESSAGE IS WRITTEN THAT           **           00536
**             REPORTS THIS FACT.                           **           00537
**                                                          **           00538
** LEVEL 020                                                **           00539
**  06/29/00 - ADDED THE PARM OF READ OR READONLY SBG 06/00 **           00540
**             TO ALLOW A RUN OF COPYMODS THAT              **           00541
**             JUST READS THE INPUT TAPE, AND DOES          **           00542
**             NOT MAKE COPIES.                             **           00543
**                                                          **           00544
** LEVEL 021                                                **           00545
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY     SBG 07/00 **           00546
**             IEHINITTED TAPES.                            **           00547
**                                                          **           00548
** LEVEL 022                                                **           00549
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD SBG 09/00 **           00550
**             LABELS FROM A TAPE, TO AN FB-80              **           00551
**             OUTPUT FILE.  PARM IS LABLDUMP.              **           00552
**                                                          **           00553
** LEVEL 023                                      SBG 09/00 **           00554
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **           00555
**             ONLY IMPLEMENTATION SO FAR IS TO             **           00556
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **           00557
**             SAME VALUE, BUT NOT NECESSARILY TO           **           00558
**             WHAT IS IN THE OUTX  DD CARD.  IN            **           00559
**             ORDER TO USE THE FACILITY, YOU HAVE          **           00560
**             TO CODE                                      **           00561
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **           00562
**             OF THE SYSIN CARD FILE.  IF THERE            **           00563
**             ARE NO VALID OUTVOLALL= CARDS IN             **           00564
**             SYSIN, THEN THE EFFECT IS THE SAME           **           00565
**             AS CODING CHGVOL.                            **           00566
**                                                          **           00567
**             FIXED LABEL DUMP OPTION SO THAT THE          **           00568
**             DUMPED LABELS HAVE CONTROL CARDS             **           00569
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **           00570
**             FUNCTION IN LEVEL 24 NEEDS THESE             **           00571
**             CONTROL CARDS.                               **           00572
**                                                          **           00573
** LEVEL 024                                      SBG 09/00 **           00574
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **           00575
**             OUTPUT COPIES FROM NL INPUT AND A            **           00576
**             SET OF LABELS CREATED BY LABLDUMP.           **           00577
**             CHANGED THE DCB NAMES AND DD CARDS           **           00578
**             AND OPTION NAMES FOR LABEL DUMP AND          **           00579
**             RESTORE.                                     **           00580
**                                                          **           00581
**             CHANGED PROGRAM INITIALIZATION TO            **           00582
**             A STANDARD FORM.  GOT RID OF PRIME           **           00583
**             AND TERME MACROS.  HAVE 5 BASE               **           00584
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **           00585
**                                                          **           00586
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **           00587
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **           00588
**             LABELS ON AN SL TAPE, AND WON'T              **           00589
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **           00590
**             TAPE IS SL, ACCIDENTALLY.                    **           00591
**                                                          **           00592
** LEVEL 025                                      SBG 09/00 **           00593
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **           00594
**             SYSIN AND SEARCH FOR ALL PARMS.              **           00595
**                                                          **           00596
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **           00597
**             BE USED.                                     **           00598
**                                                          **           00599
**             ANY CARD IN SYSIN WHICH IS NOT A             **           00600
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **           00601
**                TAPEOWNER=xxxxxxxxxx                      **           00602
**                FILELIMIT=nnnn                            **           00603
**                LABELIMIT=nnnn                            **           00604
**                PRINTRCDS=nnnn                            **           00605
**                  or                                      **           00606
**                OUTVOLALL=volser ,                        **           00607
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **           00608
**             AND ANY PARM THAT IS CODED IN THE            **           00609
**             PARM TABLE, CAN BE CODED IN SYSIN,           **           00610
**             AND IT WILL OVERRIDE THE PARM IN             **           00611
**             THE EXEC CARD (SINCE SYSIN IS                **           00612
**             SCANNED LATER IN THE PROCESSING).            **           00613
**                                                          **           00614
**             INCLUDED A BLOCK COUNT CORRECTION AS         **           00615
**             DEFAULT, WHEN WRITING STANDARD LABELS        **           00616
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **           00617
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **           00618
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **           00619
**                                                          **           00620
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **           00621
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **           00622
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **           00623
**             THE CONTENTS OF STANDARD LABELS FOUND        **           00624
**             WHEN COPYING AN INPUT TAPE.                  **           00625
**                                                          **           00626
** LEVEL 026                                      SBG 09/00 **           00627
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00628
**             RESPECT CHGVOL AND OUTVOLALL= .              **           00629
**                                                          **           00630
** LEVEL 027                                      SBG 09/00 **           00631
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00632
**             BE ABLE TO DO EOV2EOF PROCESSING             **           00633
**                                                          **           00634
** LEVEL 028                                      SBG 09/00 **           00635
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **           00636
**             STANDARD USER LABEL SUPPORT.                 **           00637
**                                                          **           00638
** LEVEL 029                                      SBG 09/00 **           00639
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **           00640
**             STANDARD USER LABELS.                        **           00641
**                                                          **           00642
** LEVEL 030                                      SBG 09/00 **           00643
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **           00644
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **           00645
**             OUTPUT TAPES, DURING THE COPY.               **           00646
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **           00647
**                                                          **           00648
**             FIXED THE EYECATCHERS A BIT.                 **           00649
**                                                          **           00650
**             AGAIN FIXED COPY OF INITTED TAPES.           **           00651
**                                                          **           00652
** LEVEL 031                                      SBG 09/00 **           00653
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **           00654
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **           00655
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **           00656
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **           00657
**                                                          **           00658
** LEVEL 032                                      SBG 10/00 **           00659
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **           00660
**             LABADDIN PROCESSING WHEN THERE ARE           **           00661
**             MORE LABELS IN THE EXTERNAL LABEL            **           00662
**             DATASET, THAN THERE ARE NL FILES             **           00663
**             IN THE INPUT TAPE.  DEFAULT IS TO            **           00664
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **           00665
**             SAYS TO STOP AT THE END OF NL FILES          **           00666
**             AND NOT WRITE NULL SL FILES TO               **           00667
**             CORRESPOND TO THE EXTRA EXTERNAL             **           00668
**             LABELS.                                      **           00669
**                                                          **           00670
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **           00671
**             OF WRITING AN EXTRA HEADER LABEL SET,        **           00672
**             AND THEN BACKING OVER IT AND CLOSING.        **           00673
**                                                          **           00674
** LEVEL 033                                      SBG 10/00 **           00675
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **           00676
**             PROCESSING WHEN THE LAST LABEL SET           **           00677
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **           00678
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **           00679
**             A HDR2 LABEL IN THE LAST LABEL SET,          **           00680
**             AND COPYMODS (WITH LBLFIX ON) WILL           **           00681
**             ACT AS IF AN ENDOFLABELHEADER CARD           **           00682
**             WERE THERE (SO IT WRITES A TAPEMARK          **           00683
**             AND THE DATA AND A TAPEMARK), AND IT         **           00684
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **           00685
**             PLUS THE MEASURED BLOCK COUNTS FROM          **           00686
**             THE DATA FILE.  AN EOF2 IS COPIED            **           00687
**             FROM THE EXISTING HDR2 AND EOF IS            **           00688
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **           00689
**             THE END.                                     **           00690
**                                                          **           00691
** LEVEL 034                                      SBG 10/00 **           00692
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **           00693
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **           00694
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **           00695
**             THE CLOSE.  THIS LETS THE CLOSE DO           **           00696
**             THE REWIND, AND LEAVES THE WRITTEN           **           00697
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **           00698
**             THAT WAS INCOMPLETELY WRITTEN IS             **           00699
**             NOT ERASED.                                  **           00700
**                                                          **           00701
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **           00702
**             CONDITION IS FLAGGED WITH A PROPER           **           00703
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **           00704
**             FOR THAT DRIVE IS BYPASSED.                  **           00705
**                                                          **           00706
**             THIS PROBLEM HAS EXISTED SINCE THE           **           00707
**             FIRST VERSION OF THIS PROGRAM.               **           00708
**                                                          **           00709
**             CAREFUL TO FLAG ALL THE EXTRA DD             **           00710
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **           00711
**             THESE ARE THE OPENDFLG SETTINGS.             **           00712
**                                                          **           00713
** LEVEL 035                                      SBG 10/00 **           00714
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **           00715
**             TAPES, BY NOT REUSING THE WRITE              **           00716
**             IOB WITHOUT REFRESHING THE PARTS             **           00717
**             THAT ARE USED BY IOS.  THIS IS THE           **           00718
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **           00719
**                                                          **           00720
**             LABLDUMP OF AN IEHINITTED TAPE               **           00721
**             PRODUCES AN ENDOFLABELHEADERINIT             **           00722
**             CARD, IN ANTICIPATION OF CREATING            **           00723
**             A TAPE INITIALIZATION ROUTINE FROM           **           00724
**             EXTERNAL LABELS.  (INITVOLS IN THE           **           00725
**             NEXT LEVEL, IS BETTER.)                      **           00726
**                                                          **           00727
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **           00728
**                                                          **           00729
** LEVEL 036                                      SBG 10/00 **           00730
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **           00731
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **           00732
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **           00733
**             ALSO CHANGE TAPE OWNER INFORMATION           **           00734
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **           00735
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **           00736
**                                                          **           00737
**             TO INIT TAPES WITH NO INPUT TAPE,            **           00738
**             USE A PARM OF INITVOLS.                      **           00739
**                                                          **           00740
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **           00741
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **           00742
**                                                          **           00743
**             CONSOLIDATED CHGVOL CODE INTO A              **           00744
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **           00745
**                                                          **           00746
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **           00747
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **           00748
**             STEPPING ON EACH OTHER.                      **           00749
**                                                          **           00750
** LEVEL 037                                      SBG 10/00 **           00751
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **           00752
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **           00753
**             NL TAPES ON THE INPUT TAPE.  IF THE          **           00754
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **           00755
**             IS MULTIPLIED BY 3, AND THE BIGGER           **           00756
**             VALUE IS USED.                               **           00757
**                                                          **           00758
**             COPYMODS WILL ONLY COPY INPUT TAPE           **           00759
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **           00760
**             VALUE, IF THERE IS ONE.                      **           00761
**                                                          **           00762
**             INTERNALLY, THE FILELIMIT= KEYWORD           **           00763
**             SETS THE PARM VALUE OF LIMFILE OR            **           00764
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **           00765
**             THE PROGRAM ACTION.                          **           00766
**                                                          **           00767
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **           00768
**             PROGRAM COUNTS BYTES READ FROM THE           **           00769
**             INPUT TAPE FILES, AND TOTALS THEM AT         **           00770
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **           00771
**             THIS ACTION.                                 **           00772
**                                                          **           00773
** LEVEL 038                                      SBG 11/00 **           00774
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **           00775
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **           00776
**             RUNNING BYTE TOTALS AS WELL AS THE           **           00777
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **           00778
**             FILES.                                       **           00779
**                                                          **           00780
** LEVEL 039                                      SBG 11/00 **           00781
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **           00782
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **           00783
**             THEREFORE WE HAVE PARMFLG1 THRU              **           00784
**             PARMFLG5 TO USE AS OPTION BYTES.             **           00785
**                                                          **           00786
** LEVEL 040                                      SBG 11/00 **           00787
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **           00788
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **           00789
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **           00790
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **           00791
**             AND I WANT TO BE ABLE TO MATCH THEIR         **           00792
**             COUNT, SO A USER WILL BE ABLE TO             **           00793
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **           00794
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **           00795
**                                                          **           00796
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **           00797
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **           00798
**             NOT INITTING TAPES, YOU DON'T GET AN         **           00799
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **           00800
**             WHAT TO DO.                                  **           00801
**                                                          **           00802
** LEVEL 041                                      SBG 11/00 **           00803
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **           00804
**             OF LABEL SETS IN THE LABADDIN FILE           **           00805
**             THAT COPYMODS WILL PROCESS.  EVEN            **           00806
**             IF THE LABADDIN FILE CONTAINS MANY           **           00807
**             LABEL SETS, THE NUMBER PROCESSED WILL        **           00808
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **           00809
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **           00810
**                                                          **           00811
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **           00812
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **           00813
**             THE LABADDIN FILE, AND CONSIDERS THE         **           00814
**             FILE TO END AFTER NNN OF THEM.               **           00815
**                                                          **           00816
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **           00817
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **           00818
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **           00819
**             THIS CHOPS PROCESSING OFF TOO SOON           **           00820
**             WHEN EOV LABELS ARE PRESENT.                 **           00821
**                                                          **           00822
** LEVEL 042                                      SBG 11/00 **           00823
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **           00824
**             BAL R7, AND USED R6 AS SIXTH BASE            **           00825
**             REGISTER.                                    **           00826
**                                                          **           00827
** LEVEL 043                                      SBG 11/00 **           00828
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **           00829
**             "OPTION" PARAMETER.  CALL IS TO A            **           00830
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **           00831
**             PROGRAM COPYMOPT SHOULD BE BATCH             **           00832
**             ASSEMBLED AND LINKEDITED WITH                **           00833
**             THE COPYMODS PROGRAM.                        **           00834
**                                                          **           00835
**             CHANGED THE WORDING OF SOME OF THE           **           00836
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **           00837
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **           00838
**                                                          **           00839
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **           00840
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **           00841
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **           00842
**             LABADDIN WAS IN EFFECT.                      **           00843
**                                                          **           00844
** LEVEL 044                                      SBG 12/00 **           00845
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **           00846
**                                                          **           00847
** LEVEL 045                                      SBG 12/00 **           00848
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **           00849
**             COMPLETION OF THE COPY. SUPPWTO.             **           00850
**                                                          **           00851
** LEVEL 046                                      SBG 12/00 **           00852
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **           00853
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **           00854
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **           00855
**             TO HI ORDER FIELD WHEN DOING BLOCK           **           00856
**             COUNT CORRECTION.                            **           00857
**                                                          **           00858
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **           00859
**                                                          **           00860
** LEVEL 047                                      SBG 12/00 **           00861
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **           00862
**             DUMP OF TAPES WHICH CONTAIN LARGE            **           00863
**             NUMBERS OF DATA RECORDS.  IF THE             **           00864
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **           00865
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **           00866
**                                                          **           00867
** LEVEL 048                                      SBG 05/02 **           00868
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **           00869
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **           00870
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **           00871
**             IS THERE IN THE JCL, THEN OPEN IT.           **           00872
**                                                          **           00873
** LEVEL 049                                      SBG 05/02 **           00874
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **           00875
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **           00876
**             BYTE COUNTS AND DATA BYTE COUNTS,            **           00877
**             INSTEAD OF TOTAL BYTE COUNTS.                **           00878
**                                                          **           00879
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE   SBG 10/02 **           00880
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **           00881
**             EACH LABEL.  IT DOES NOT MATTER              **           00882
**             WHERE THE LABELS ARE, IN THE INPUT           **           00883
**             TAPE--THEY WILL BE STRIPPED OFF THE          **           00884
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **           00885
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **           00886
**             NUMBER IS MULTIPLIED BY 3, AND THE           **           00887
**             COPYING IS CUT OFF AFTER 3*nnn,              **           00888
**             TREATED AS BLP, ON THE INPUT TAPE.           **           00889
**                                                          **           00890
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **           00891
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **           00892
**             COPYMODS TRIES TO DETECT WHETHER THE         **           00893
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **           00894
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **           00895
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **           00896
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **           00897
**             WE CAN NOW FORCE THE nnn TO BE               **           00898
**             INTERPRETED AS NL USING THE NLLIM            **           00899
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **           00900
**             INTERPRETED AS 3*nnn USING THE SLLIM         **           00901
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **           00902
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **           00903
**             OTHER KEYWORD IS ALSO CODED.                 **           00904
**                                                          **           00905
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **           00906
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **           00907
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **           00908
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **           00909
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **           00910
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **           00911
**             DURING THE WRITE OF THE TAPE MARK.           **           00912
**                                                          **           00913
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **           00914
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **           00915
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **           00916
**             BEFORE ISSUING ABEND 069.                    **           00917
**                                                          **           00918
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **           00919
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **           00920
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **           00921
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **           00922
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **           00923
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **           00924
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **           00925
**             SYSPRINT DATASET.                            **           00926
**                                                          **           00927
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **           00928
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **           00929
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **           00930
**                                                          **           00931
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **           00932
**             OF THE MAIN CSECT.                           **           00933
**                                                          **           00934
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **           00935
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **           00936
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **           00937
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **           00938
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **           00939
**             PARM SCAN IN DETAIL.                         **           00940
**                                                          **           00941
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **           00942
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **           00943
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **           00944
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **           00945
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **           00946
**                                                          **           00947
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **           00948
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **           00949
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **           00950
**             PROGRAM AND NOT BY COPYMODS.                 **           00951
**                                                          **           00952
**             QUANTITIES YIELDED BY THE PARMCHEK PROGRAM   **           00953
**             ARE PASSED BACK TO COPYMODS IN R2, TO THE    **           00954
**             USER AREA THAT COMES AFTER THE STRTVALU      **           00955
**             LABEL.  IN BOTH PROGRAMS, COPYMODS AND       **           00956
**             PARMCHEK, THE CODE FROM THE STRTVALU TO THE  **           00957
**             ENDVALUE LABELS HAS TO BE IDENTICAL AND      **           00958
**             MATCHING, IN ALL ITS LABELS AND QUANTITIES.  **           00959
**                                                          **           00960
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **           00961
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **           00962
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **           00963
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **           00964
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **           00965
**             TAPES--TO FIGURE OUT HOW SHORT....           **           00966
**                                                          **           00967
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **           00968
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **           00969
**             POSSIBLE.                                    **           00970
**                                                          **           00971
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **           00972
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **           00973
**             IN ERROR.                                    **           00974
**                                                          **           00975
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **           00976
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **           00977
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **           00978
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **           00979
**                                                          **           00980
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **           00981
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **           00982
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **           00983
**                                                          **           00984
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **           00985
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **           00986
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **           00987
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **           00988
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **           00989
**             PROGRAM.                                     **           00990
**                                                          **           00991
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **           00992
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **           00993
**                                                          **           00994
** LEVEL 062 - FIX DOC A BIT MORE.                          **           00981
**             TEN PARM BITS INSTEAD OF FIVE.               **           00994
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK      **           00994
**                                                          **           00994
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **           00981
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **           00994
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **           00994
**             OCCURRED, WITHOUT ISSUING A WTOR.            **           00994
**                                                          **           00994
** LEVEL 064 - Return Code adjustments.                     **           00981
**                                                          **           00994
**************************************************************           00995
**************************************************************           00996
         MACRO                                                           00997
&NAME    HEX   &TO,&LEN,&FROM                                            00998
&NAME    DS    0H                                                        00999
         ST    R4,SAV4HEX                                                01000
         STM   15,1,HEXSAVE                                              01001
         LA    1,&FROM                                                   01002
         LA    0,&LEN                                                    01003
         LA    15,&TO                                                    01004
         BAL   4,HEX                                                     01005
         L     R4,SAV4HEX                                                01006
         LM    15,1,HEXSAVE                                              01007
         MEND                                                            01008
         EJECT                                                           01009
         YREGS                                                           01010
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                01011
         GBLA  &HEXDFLA                                                  01012
* ------------------------------------------------------------------ *   01013
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   01014
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   01015
* ------------------------------------------------------------------ *   01016
&HEXDFLA SETA  4                                                         01017
&HEXDFLC SETC  '&HEXDFLA'                                                01018
COPYMODS CSECT                                                           01019
         USING *,R15                                          SBG 03/00  01020
         B     EYECATCH                                       SBG 03/00  01021
         DC    C'HEX DUMP '                                              01022
HEXDFLCC DC    C'&HEXDFLC'                                               01023
         DC    C' RECORDS '                                              01024
HEXDFLL  EQU   L'HEXDFLCC                                                01025
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 01026
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  01027
         DC    C'COPYMODS Level 064 '                         SBG 03/00  01028
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  01029
         DC    C'SYSIN IN PARMCHEK PGM'                                  01030
SAVEAREA DC    18F'0'                                                    01031
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  01032
         SAVE  (14,12)                                                   01033
         LR    R5,R1          SAVE PARM POINTER                          01034
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   01035
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          01036
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         01037
         LR    R13,R1               NEW SAVE AREA ADDRESS                01038
         DROP  R15                                                       01039
* -----                       SET UP SIX BASE REGISTERS                  01040
         USING COPYMODS,R12,R11,R10,R9,R8,R6                             01041
         LR    R12,R15                                                   01042
         LA    R11,4095(,R12)                                            01043
         LA    R11,1(,R11)                                               01044
         LA    R10,4095(,R11)                                            01045
         LA    R10,1(,R10)                                               01046
         LA    R9,4095(,R10)                                             01047
         LA    R9,1(,R9)                                                 01048
         LA    R8,4095(,R9)                                              01049
         LA    R8,1(,R8)                                                 01050
         LA    R6,4095(,R8)                                              01051
         LA    R6,1(,R6)                                                 01052
         LR    R1,R5          RESTORE PARM POINTER                       01053
         ST    R1,PARMSTRT    PRESERVE PARM POINTER WHERE IT CAN         01054
*                             BE PASSED TO THE PARMCHEK PROGRAM.         01055
         L     R1,0(,R1)                                                 01056
         LH    R5,0(,R1)      SAVE PARM LENGTH, AND                      01057
         ST    R5,PARMSLEN    PRESERVE IT AS A FULLWORD                  01058
         MVC   SAVMSLEN,PARMSLEN     KEEP IT SAFE - DOUBLE SURE          01059
         L     R0,=V(TRTCSECT)       SAVE HEX TRANSLATE TABLE POINTER    01060
         ST    R0,SAVTRTCS           AND STORE IT FOR LATER USE.         01061
* ----------------------------------------------------------------- *    01062
*                                                                   *    01063
*  CALLING THE PARMCHEK PROGRAM REQUIRES:                           *    01064
*                                                                   *    01065
*     INPUT:   R2 POINTS TO STRTVALU, WHERE PARM INFORMATION IS     *    01066
*              ALREADY PRESERVED IN THE PARMSLEN AND PARMSTRT       *    01067
*              FIELDS.                                              *    01068
*                                                                   *    01069
*     OUTPUT:  R1 POINTS TO PARMCHEK'S PARMFLGS, ALREADY ALL        *    01070
*              FILLED IN.                                           *    01071
*                                                                   *    01072
*              R2 POINTS TO PARMCHEK'S USER AREA STARTING WITH      *    01073
*              STRTVALU, FILLED IN WITH USER INFORMATION FROM       *    01074
*              THE PARM SCAN.                                       *    01075
*                                                                   *    01076
*     AFTER THE PARMCHEK PROGRAM RETURNS CONTROL TO COPYMODS,       *    01077
*     ITS PARMFLGS AND STRTVALU AREAS ARE COPIED OVER INTO THE      *    01078
*     CORRESPONDING AREAS IN THE COPYMODS PROGRAM.                  *    01079
*                                                                   *    01080
*     PARMCHEK'S USER AREA STARTING WITH LABEL STRTVALU HAS TO      *    01081
*     EXACTLY MATCH COPYMODS' USER AREA STARTING WITH STRTVALU.     *    01082
*                                                                   *    01083
* ------------------------------------------------------------------*    01084
*    NOW DO IT.  CALL THE PARMCHEK PROGRAM AND GET THE RETURNS.     *    01085
* ------------------------------------------------------------------*    01086
         L     R0,=V(PARMCHEK)                                           01087
         ST    R0,ENTRYPT                                                01088
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM      01089
         LA    R2,STRTVALU        USER AREA ADDRESS TO BE PASSED.        01090
         BALR  R14,R15                 DO CALL                           01091
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS     01092
         ST    R2,USERSAVE             ADDRESS OF RETURNED USER AREA     01093
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS      01094
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK     01095
* ----------------------------------------------------------------- *    01096
* ----------------------------------------------------------------- *    01097
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *    01098
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *    01099
* ----------------------------------------------------------------- *    01100
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON         01101
         TM    PARMFLG1,X'20'   ARE WE SKIPPING LTM'S?        SBG 04/00  01102
         BZ    COPYLTMS         NO. WE'RE COPYING THEM.       SBG 04/00  01103
*                               YES. WE'RE SKIPPING THEM, SO  SBG 04/00  01104
         MVC   LTMRPTI,SKIPPED  MOVE INDICATOR TO REPORT      SBG 03/00  01105
         B     SKIPLTMS         AND DO OTHER INITIALIZATION   SBG 03/00  01106
COPYLTMS MVC   LTMRPTI,COPIED   MOVE INDICATOR TO REPORT      SBG 03/00  01107
SKIPLTMS DS    0H                                             SBG 06/00  01108
* ----- * ----- * ------                                                 01109
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?                01110
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                    01111
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                    01112
NONOEXNL DS    0H                                                        01113
* ----- * ----- * ------                                                 01114
* ----- * ----- * ------ *------                                         01115
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                            01116
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                    01117
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON              01118
NOCUMSEP DS    0H                                                        01119
* ----- * ----- * ------ *------                                         01120
* ----- * -----                                                          01121
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                        01122
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                    01123
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON        01124
NOCUMTOT DS    0H                                                        01125
* ----- * -----                                                          01126
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR              01127
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *      01128
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?           01129
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.           01130
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP            01131
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO       01132
*                                      BECAUSE WE'RE COPYING TO SL.      01133
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS             01134
CANLBDMP DS    0H                                                        01135
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *    01136
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                          01137
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS             01138
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                   01139
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                    01140
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01141
NOLBDQUI DS    0H                                                        01142
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *    01143
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *     01144
         TM    PARMFLG4,X'02'      IS STRIP ON?                          01145
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS         01146
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01147
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF                01148
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF                01149
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                            01150
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                           01151
NOSTRADJ DS    0H                  END of the STRIP adjustments          01152
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *     01153
* ----------------------------------------------------------------- *    01154
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *    01155
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *    01156
* ----------------------------------------------------------------- *    01157
* --                                                             -- *    01158
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?             01159
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM        01160
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                    01161
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED          01162
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               01163
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 01164
         BZ    NOOPTRP1          NO. DON'T CALL IT                       01165
         BALR  R14,R15           CALL SUBPROGRAM                         01166
NOOPTRP1 LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                 01167
NOOPTRPT DS    0H                                                        01168
*  -------------------------------------------------------------- *      01169
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL  SBG 06/00  01170
         RDJFCB IN                                                       01171
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL        01172
         MVC   SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01173
         MVC   READOMSG+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01174
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST   01175
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA             SBG 03/00  01176
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                 01177
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET SBG 03/00  01178
         SPACE 3                                                         01179
OPENSYSP DS    0H                                                        01180
*                                                                        01181
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                               01182
*                                                                        01183
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01184
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01185
         BO    OPENS      YES--SKIP ALL THE TIOT FOR OUT DD'S SBG 06/00  01186
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01187
         L     R2,16          R2=CVT                                     01188
         L     R2,0(,R2)      R2=TCB WORDS                               01189
         L     R2,4(,R2)      R2=MY TCB                                  01190
         L     R2,12(,R2)     R2=TIOT                                    01191
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                          01192
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                             01193
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES        01194
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                    01195
         BNE   TIOT1          NO                                         01196
         OI    FLAG1,OP1      SHOW IT                                    01197
         STM   R14,R3,SAV14T03                                    TEST   01198
         RDJFCB OUT1                                                     01199
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL              01200
         MVC   VOLDD,DDOUT1                                              01201
         LM    R14,R3,SAV14T03                                    TEST   01202
         B     TIOTNEXT       CONTINUE                                   01203
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                    01204
         BNE   TIOT2          NO                                         01205
         OI    FLAG1,OP2      SHOW IT                                    01206
         STM   R14,R3,SAV14T03                                    TEST   01207
         RDJFCB OUT2                                                     01208
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL              01209
         MVC   VOLDD,DDOUT2                                              01210
         LM    R14,R3,SAV14T03                                    TEST   01211
         B     TIOTNEXT       CONTINUE                                   01212
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                    01213
         BNE   TIOT3          NO                                         01214
         OI    FLAG1,OP3      SHOW IT                                    01215
         STM   R14,R3,SAV14T03                                    TEST   01216
         RDJFCB OUT3                                                     01217
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL              01218
         MVC   VOLDD,DDOUT3                                              01219
         LM    R14,R3,SAV14T03                                    TEST   01220
         B     TIOTNEXT       CONTINUE                                   01221
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                    01222
         BNE   TIOT4          NO                                         01223
         OI    FLAG1,OP4      SHOW IT                                    01224
         STM   R14,R3,SAV14T03                                    TEST   01225
         RDJFCB OUT4                                                     01226
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL              01227
         MVC   VOLDD,DDOUT4                                              01228
         LM    R14,R3,SAV14T03                                    TEST   01229
         B     TIOTNEXT       CONTINUE                                   01230
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                    01231
         BNE   TIOT5          NO                                         01232
         OI    FLAG1,OP5      SHOW IT                                    01233
         STM   R14,R3,SAV14T03                                    TEST   01234
         RDJFCB OUT5                                                     01235
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL              01236
         MVC   VOLDD,DDOUT5                                              01237
         LM    R14,R3,SAV14T03                                    TEST   01238
         B     TIOTNEXT       CONTINUE                                   01239
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                    01240
         BNE   TIOT6          NO                                         01241
         OI    FLAG1,OP6      SHOW IT                                    01242
         STM   R14,R3,SAV14T03                                    TEST   01243
         RDJFCB OUT6                                                     01244
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL              01245
         MVC   VOLDD,DDOUT6                                              01246
         LM    R14,R3,SAV14T03                                    TEST   01247
         B     TIOTNEXT       CONTINUE                                   01248
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                    01249
         BNE   TIOT7          NO                                         01250
         OI    FLAG1,OP7      SHOW IT                                    01251
         STM   R14,R3,SAV14T03                                    TEST   01252
         RDJFCB OUT7                                                     01253
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL              01254
         MVC   VOLDD,DDOUT7                                              01255
         LM    R14,R3,SAV14T03                                    TEST   01256
         B     TIOTNEXT       CONTINUE                                   01257
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                    01258
         BNE   TIOT8          NO                                         01259
         OI    FLAG1,OP8      SHOW IT                                    01260
         STM   R14,R3,SAV14T03                                    TEST   01261
         RDJFCB OUT8                                                     01262
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL              01263
         MVC   VOLDD,DDOUT8                                              01264
         LM    R14,R3,SAV14T03                                    TEST   01265
         B     TIOTNEXT       CONTINUE                                   01266
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                    01267
         BNE   TIOT9          NO                                         01268
         OI    FLAG2,OP9      SHOW IT                                    01269
         STM   R14,R3,SAV14T03                                    TEST   01270
         RDJFCB OUT9                                                     01271
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL              01272
         MVC   VOLDD,DDOUT9                                              01273
         LM    R14,R3,SAV14T03                                    TEST   01274
         B     TIOTNEXT       CONTINUE                                   01275
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                  01276
         BNE   TIOT10         NO                                         01277
         OI    FLAG2,OP10     SHOW IT                                    01278
         STM   R14,R3,SAV14T03                                    TEST   01279
         RDJFCB OUT10                                                    01280
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL             01281
         MVC   VOLDD,DDOUT10                                             01282
         LM    R14,R3,SAV14T03                                    TEST   01283
         B     TIOTNEXT       CONTINUE                                   01284
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                  01285
         BNE   TIOT11         NO                                         01286
         OI    FLAG2,OP11     SHOW IT                                    01287
         STM   R14,R3,SAV14T03                                    TEST   01288
         RDJFCB OUT11                                                    01289
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL             01290
         MVC   VOLDD,DDOUT11                                             01291
         LM    R14,R3,SAV14T03                                    TEST   01292
         B     TIOTNEXT       CONTINUE                                   01293
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                  01294
         BNE   TIOT12         NO                                         01295
         OI    FLAG2,OP12     SHOW IT                                    01296
         STM   R14,R3,SAV14T03                                    TEST   01297
         RDJFCB OUT12                                                    01298
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL             01299
         MVC   VOLDD,DDOUT12                                             01300
         LM    R14,R3,SAV14T03                                    TEST   01301
         B     TIOTNEXT       CONTINUE                                   01302
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                  01303
         BNE   TIOT13         NO                                         01304
         OI    FLAG2,OP13     SHOW IT                                    01305
         STM   R14,R3,SAV14T03                                    TEST   01306
         RDJFCB OUT13                                                    01307
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL             01308
         MVC   VOLDD,DDOUT13                                             01309
         LM    R14,R3,SAV14T03                                    TEST   01310
         B     TIOTNEXT       CONTINUE                                   01311
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                  01312
         BNE   TIOT14         NO                                         01313
         OI    FLAG2,OP14     SHOW IT                                    01314
         STM   R14,R3,SAV14T03                                    TEST   01315
         RDJFCB OUT14                                                    01316
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL             01317
         MVC   VOLDD,DDOUT14                                             01318
         LM    R14,R3,SAV14T03                                    TEST   01319
         B     TIOTNEXT       CONTINUE                                   01320
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                  01321
         BNE   TIOT15         NO                                         01322
         OI    FLAG2,OP15     SHOW IT                                    01323
         STM   R14,R3,SAV14T03                                    TEST   01324
         RDJFCB OUT15                                                    01325
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL             01326
         MVC   VOLDD,DDOUT15                                             01327
         LM    R14,R3,SAV14T03                                    TEST   01328
         B     TIOTNEXT       CONTINUE                                   01329
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                  01330
         BNE   TIOTNEXT       NO                                         01331
         OI    FLAG2,OP16     SHOW IT                                    01332
         STM   R14,R3,SAV14T03                                    TEST   01333
         RDJFCB OUT16                                                    01334
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL             01335
         MVC   VOLDD,DDOUT16                                             01336
         LM    R14,R3,SAV14T03                                    TEST   01337
         B     TIOTNEXT       CONTINUE                                   01338
TIOTNEXT SR    R3,R3                                                     01339
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                      01340
         AR    R2,R3          R2=NEXT DD ENTRY                           01341
         B     TIOTLOOP       GO CHECK IT                                01342
*  ---------------------------------------------------------  SBG 09/00  01343
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*    01344
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                        01345
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.      01346
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?           01347
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                    01348
         MVC   VOLALL,VOLSTG     PROPAGATE VOLSER TO ALL OUTPUTS         01349
NOVOLOV  DS    0H                                                        01350
*  ---------------------------------------------------------  SBG 09/00  01351
         SPACE 3                                                         01352
*  -----------------------------------------------------------------  *  01353
*                                                                        01354
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY           01355
*                                                                        01356
*  -----------------------------------------------------------------  *  01357
OPENS    DS    0H               START OPENING FILES                      01358
         OPEN  (SYSPRINT,OUTPUT)                                         01359
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                        01360
         BO    OPENMOVE                                                  01361
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.     01362
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  01363
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00  01364
         OPEN  (LABLDUMP,OUTPUT)                              SBG 09/00  01365
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                   01366
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.         01367
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.            01368
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME              01369
NOLBLDD  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01370
         MVC   LINE(133),LDMPMSG   DISPLAY MISSING DD MESSAGE            01371
         PUT   SYSPRINT,LINE                                             01372
         OI    ENDITFLG,X'01'   FLAG THAT LABLDUMP NOT OPEN.             01373
OPNLABIN TM    PARMFLG2,X'80'   DO WE NEED LABADDIN?                     01374
         BZ    CHKENDIT         NO. SEE IF ANYTHING ELSE IS BAD          01375
         OPEN  (LABADDIN,INPUT)                                          01376
         TM    LABADDIN+48,X'10'     IS THE DD OPEN  ?                   01377
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE               01378
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.            01379
         B     CHKENDIT        GO CHECK IF WE HAVE TO END.               01380
NOLABIN  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01381
         MVC   LINE(133),NLABMSG   DISPLAY MISSING DD MESSAGE            01382
         PUT   SYSPRINT,LINE                                             01383
         OI    ENDITFLG,X'04'   FLAG THAT LABADDIN NOT OPEN.             01384
CHKENDIT TM    ENDITFLG,X'07'   CHECK IF WE HAVE TO END                  01385
         BZ    OPENIN           NOTHING WRONG.  GO ON.                   01386
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?     01387
         CLOSE (SYSPRINT)                                                01388
         TM    OPENDFLG,X'01'   IS LABLDUMP DD OPEN?                     01389
         BZ    TRYCLABN         NO.  TRY IF SYSIN IS OPEN.               01390
         NI    OPENDFLG,FF-X'01'   MARK FILE AS CLOSED                   01391
         CLOSE (LABLDUMP)                                                01392
TRYCLABN TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01393
         BZ    REALYEND         NO.  GET OUT.                            01394
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01395
         CLOSE (LABADDIN)                                                01396
REALYEND B     THEEND                                                    01397
         EJECT                                                           01398
OPENIN   OPEN  (IN,INPUT)                                                01399
         TM    IN+48,X'10'                                               01400
         BO    INISOPEN                                                  01401
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *         01402
         TM    PARMFLG3,X'01'       INITTING TAPES?                      01403
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01404
*                                   BYPASS MESSAGE.                      01405
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   01406
         MVC   LINE(133),INNOTOPN   MOVE IN MESSAGE TEXT                 01407
         PUT   SYSPRINT,LINE        PUT OUT MESSAGE                      01408
         B     ENDEM                GO TO CLOSE FILES, AND OUT.          01409
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *         01410
INISOPEN DS    0H                                                        01411
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?              01412
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO              01413
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01414
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?                01415
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN          01416
* ----                                                                   01417
OPENINCK DS    0H                                                        01418
         LA    R2,IN              POINT TO IN DCB                        01419
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                  01420
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                   01421
         EXCP  REWIOB                                                    01422
         WAIT  ECB=REWECB                                                01423
         MVC   INECB,=F'0'        INITIALIZE IN'S ECB                    01424
         EXCP  INIOB                                                     01425
         WAIT  ECB=INECB                                                 01426
         CLC   INAREA(4),=C'VOL1' IS THE TAPE IBM SL ?                   01427
         BNE   RESETIN            NO. JUST REWIND TO REPOSITION.         01428
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL              01429
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?              01430
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN    01431
****** ------ BELOW ------ SL FILE NUMBERS.                              01432
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?           01433
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                 01434
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?      01435
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG      01436
**** ----- >>>>>   Force file limiting by SL   - - -  below              01437
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim   01438
         BZ    NOSLFLIM              Not set, bypass code for it         01439
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number          01440
         MVC   LIMFMSG+11(10),LIMCHAR                                    01441
         MVC   LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning     01442
         MVC   LINE(133),LINE-1      Clear message line                  01443
         MVC   LINE(133),FORCESLM    Say you'll force limiting by SL     01444
         PUT   SYSPRINT,LINE         Write msg                           01445
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?     01446
         BNO   SLLIMRES              No. only SLLIM. So go on.           01447
         MVC   LINE(133),LINE-1      Clear message line                  01448
         MVC   LINE(133),TWOFORCE    Say you'll force limiting by SL     01449
         PUT   SYSPRINT,LINE         Write msg                           01450
SLLIMRES DS    0H                                                        01451
         B     RESETIN                                                   01452
NOSLFLIM DS    0H                                                        01453
**** ----- >>>>>   Force file limiting by SL   - - -  above              01454
**** ----- >>>>>   Force file limiting by NL   - - -  below              01455
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim   01456
         BZ    NONLFLIM              Not set, bypass code for it         01457
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number          01458
         MVC   LIMFMSG+11(10),LIMCHAR                                    01459
         MVC   LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning     01460
         MVC   LINE(133),LINE-1      Clear message line                  01461
         MVC   LINE(133),FORCENLM    Say you'll force limiting by NL     01462
         PUT   SYSPRINT,LINE         Write msg                           01463
         B     RESETIN                                                   01464
NONLFLIM DS    0H                                                        01465
**** ----- >>>>>   Force file limiting by NL   - - -  above              01466
* -- > Strip test                                                        01467
         TM    PARMFLG4,X'02'        Are we stripping labels?            01468
         BZ    OPENINXW              No. Bypass this section.            01469
         TM    PARMFLG3,X'02'        Are we limiting files also?         01470
         BO    OPENINXW              Yes. Use SL number.                 01471
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.   01472
         MVC   LIMFMSG+11(10),LIMCHAR                                    01473
         MVC   LIMFMSG+68(2),=C'SL'  But indicate that input is SL       01474
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01475
OPENINXW DS    0H                                                        01476
* -- > Strip test                                                        01477
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL    01478
         MVC   LIMFMSG+11(10),LIMCHAR                                    01479
         MVC   LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE    01480
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01481
OPENINXX DS    0H                                                        01482
****** ------ ABOVE ------ SL FILE NUMBERS.                              01483
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.     01484
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01485
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01486
         PUT   SYSPRINT,LINE      WRITE MSG                              01487
RESETLAD TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01488
         BZ    RESETEND         NO.  GET OUT.                            01489
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01490
         CLOSE (LABADDIN)                                                01491
RESETEND CLOSE (IN)                                                      01492
         B     THEEND                                                    01493
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.     01494
RESETIN  DS    0H                                                        01495
         MVC   REWECB,=F'0'                                              01496
         EXCP  REWIOB                                                    01497
         WAIT  ECB=REWECB                                                01498
NOINITOP DS    0H                                                        01499
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01500
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.            01501
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.             01502
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA                01503
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01504
         BNZ   NOLBLDD                  IF NOT, FLAG                     01505
         ST    R7,SAVE7REG              SAVE R7                          01506
         LA    R7,LBLJFCB               POINT TO JFCB AREA               01507
         USING JFCBLK,R7                MAP THE AREA                     01508
         MVC   LDMPOUTM+38(44),JFCBDSNM                                  01509
         MVC   LDMPOUTM+89(8),JFCBELNM                                   01510
         MVC   LDMPOUTM+105(6),JFCBVOLS                                  01511
         MVC   LINE(133),LINE-1                                          01512
         MVC   LINE(133),LDMPOUTM                                        01513
         PUT   SYSPRINT,LINE                                             01514
         DROP  R7                                                        01515
         L     R7,SAVE7REG              RESTORE R7                       01516
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.         SBG 09/00  01517
         TM    PARMFLG2,X'80'     TEST IF LABLDUMP IS NEEDED.            01518
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.             01519
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA                01520
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01521
         BNZ   NOLABIN                  IF NOT, FLAG                     01522
         ST    R7,SAVE7REG              SAVE R7                          01523
         LA    R7,LBNJFCB               POINT TO JFCB AREA               01524
         USING JFCBLK,R7                MAP THE AREA                     01525
         MVC   LDMPINMS+38(44),JFCBDSNM                                  01526
         MVC   LDMPINMS+89(8),JFCBELNM                                   01527
         MVC   LDMPINMS+105(6),JFCBVOLS                                  01528
         MVC   LINE(133),LINE-1                                          01529
         MVC   LINE(133),LDMPINMS                                        01530
         PUT   SYSPRINT,LINE                                             01531
         DROP  R7                                                        01532
         L     R7,SAVE7REG              RESTORE R7                       01533
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.         SBG 09/00  01534
* --- READ ONLY CODE ------------------ BELOW --------------- SBG 06/00  01535
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01536
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.    SBG 06/00  01537
*                         OTHERWISE PUT INITIAL READONLY MSG  SBG 06/00  01538
         MVC   LINE(133),READOMSG    MOVE READ-ONLY MESSAGE   SBG 06/00  01539
         PUT   SYSPRINT,LINE  WRITE INITIAL MESSAGE SHOWING READONLY     01540
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01541
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01542
         BZ    NOLIMFMR         NO, SKIP MESSAGE                         01543
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01544
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01545
         PUT   SYSPRINT,LINE                                             01546
NOLIMFMR DS    0H                                                        01547
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01548
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01549
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01550
         BZ    N1LIMHEX         NO, SKIP MESSAGE                         01551
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01552
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01553
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01554
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01555
         B     N1LIMPRT             AND PRINT IT                         01556
N1LIMDEF DS    0H                                                        01557
         MVC   LIMPMSG+11(10),PRTCHAR                                    01558
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01559
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                         01560
N1LIMHEX DS    0H                                                        01561
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01562
         B     READIN                                         SBG 06/00  01563
* --- READ ONLY CODE ------------------ ABOVE --------------- SBG 06/00  01564
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE    01565
*                             THIS ALSO MOVES FLAG2 TO FLAG4  SBG 03/00  01566
*  ---------------------------------------------------------  SBG 03/00  01567
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01568
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01569
         BZ    NOLIMHEX         NO, SKIP MESSAGE                         01570
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01571
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01572
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01573
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01574
         B     NOLIMPRT             AND PRINT IT                         01575
NOLIMDEF DS    0H                                                        01576
         MVC   LIMPMSG+11(10),PRTCHAR                                    01577
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01578
NOLIMPRT PUT   SYSPRINT,LINE                                             01579
NOLIMHEX DS    0H                                                        01580
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01581
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                         01582
         BZ    OPENOINT                                                  01583
         MVC   INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN          01584
         B     NOCORPRT                                                  01585
OPENOINT DS    0H                                                        01586
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01587
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT      01588
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE              01589
         ST    R7,SAVE7REG                                               01590
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE       01591
         L     R7,SAVE7REG                                               01592
NOCORPRT DS    0H                                                        01593
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01594
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01595
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01596
         BZ    NOLIMFMS         NO, SKIP MESSAGE                         01597
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01598
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01599
         PUT   SYSPRINT,LINE                                             01600
NOLIMFMS DS    0H                                                        01601
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01602
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   01603
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?           01604
         BZ    NOLIMLMR         NO, SKIP MESSAGE                         01605
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01606
         MVC   LIMLMSG+11(10),LABCHAR                                    01607
         MVC   LINE(133),LIMLMSG    MOVE MESSAGE TEXT IN                 01608
         PUT   SYSPRINT,LINE                                             01609
NOLIMLMR DS    0H                                                        01610
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   01611
**** ---- >>> Message that labels are being stripped <<< ---- below ***  01612
         TM    PARMFLG4,X'02'     Are labels being stripped?             01613
         BZ    NOSTRMSG                                                  01614
         MVC   LINE(133),LINE-1   Clear message line                     01615
         MVC   LINE(133),STRPMSG  Show we're stripping labels            01616
         PUT   SYSPRINT,LINE                                             01617
NOSTRMSG DS    0H                                                        01618
**** ---- >>> Message that labels are being stripped <<< ---- above ***  01619
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                          01620
         BZ    OPEN1          NO                                         01621
         OPEN  (OUT1,OUTPUT)                                             01622
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                          01623
         BZ    OPEN2          NO                                         01624
         OPEN  (OUT2,OUTPUT)                                             01625
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                          01626
         BZ    OPEN3          NO                                         01627
         OPEN  (OUT3,OUTPUT)                                             01628
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                          01629
         BZ    OPEN4          NO                                         01630
         OPEN  (OUT4,OUTPUT)                                             01631
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                          01632
         BZ    OPEN5          NO                                         01633
         OPEN  (OUT5,OUTPUT)                                             01634
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                          01635
         BZ    OPEN6          NO                                         01636
         OPEN  (OUT6,OUTPUT)                                             01637
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                          01638
         BZ    OPEN7          NO                                         01639
         OPEN  (OUT7,OUTPUT)                                             01640
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                          01641
         BZ    OPEN8          NO                                         01642
         OPEN  (OUT8,OUTPUT)                                             01643
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                          01644
         BZ    OPEN9          NO                                         01645
         OPEN  (OUT9,OUTPUT)                                             01646
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                         01647
         BZ    OPEN10         NO                                         01648
         OPEN  (OUT10,OUTPUT)                                            01649
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                         01650
         BZ    OPEN11         NO                                         01651
         OPEN  (OUT11,OUTPUT)                                            01652
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                         01653
         BZ    OPEN12         NO                                         01654
         OPEN  (OUT12,OUTPUT)                                            01655
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                         01656
         BZ    OPEN13         NO                                         01657
         OPEN  (OUT13,OUTPUT)                                            01658
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                         01659
         BZ    OPEN14         NO                                         01660
         OPEN  (OUT14,OUTPUT)                                            01661
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                         01662
         BZ    OPEN15         NO                                         01663
         OPEN  (OUT15,OUTPUT)                                            01664
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                         01665
         BZ    READIN         NO                                         01666
         OPEN  (OUT16,OUTPUT)                                            01667
         EJECT                                                           01668
* --------------------------------------------------------- *            01669
*                                                           *            01670
*  READ INPUT                                               *            01671
*                                                           *            01672
* --------------------------------------------------------- *            01673
*                                                           *            01674
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *            01675
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *            01676
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *            01677
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *            01678
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *            01679
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *            01680
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *            01681
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*            01682
*                                                           *            01683
* --------------------------------------------------------- *            01684
READIN   DS    0H                                                        01685
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                   01686
         BO    TLITWRIT                                                  01687
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR  SBG 03/00  01688
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                     01689
         MVI   INECB,X'00'    INITIALIZE ECB                             01690
* ------------------------------------------------------------------ *   01691
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *   01692
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *   01693
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *   01694
* ------------------------------------------------------------------ *   01695
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                  01696
         BZ    NONLSL0        NO. IGNORE THIS CODE                       01697
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN          01698
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE           01699
NONLSL0  DS    0H                                                        01700
* ----------------------------------------------------------- SBG 09/00  01701
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE               01702
***** --------------- LIMITING FILES ------------------ ***** BELOW *    01703
         TM    PARMFLG3,X'02'     LIMITING FILES?                        01704
         BZ    INOLIMIT           NO - BYPASS THIS CODE                  01705
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?               01706
         BZ    INOLIMIT           NOT YET - JUST GO ON                   01707
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE     01708
*                                 AND DON'T DO MORE READS OF INPUT TAPE  01709
INOLIMIT DS    0H                                                        01710
***** --------------- LIMITING FILES ------------------ ***** ABOVE *    01711
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *    01712
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                  01713
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS     01714
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK     01715
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                     01716
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ      01717
         L     R7,SAVE7RG3        RESTORE R7                             01718
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                     01719
NOLBDADJ DS    0H                                                        01720
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *    01721
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01722
*                                                                        01723
*       Since there is a possibility that the WRITE will                 01724
*       not work for one of the output ddnames, we have                  01725
*       to save the total bytes successfully moved to the                01726
*       currently open output tapes.  Also file count for                01727
*       this tape, and block count for this file.                        01728
*                                                                        01729
         MVC   PRVBY,TOTBY        Total bytes before this READ           01730
         MVC   FILECNTP,FILECNT   Total file count before this READ      01731
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ     01732
*                                                                        01733
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01734
         EXCP  INIOB          READ                                       01735
         WAIT  ECB=INECB      WAIT FOR READ                              01736
         TM    INCSW+4,X'01'  WAS TM READ?                               01737
         BO    READIN1        YES                                        01738
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                01739
         BNE   INERR          NO -- ERROR                                01740
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                    01741
*        LH    R2,INCCW+6     R2=READ LENGTH                  SBG 03/00  01742
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY    SBG 03/00  01743
         MVC   HALFWORK(2),INCCW+6   READ LENGTH              SBG 03/00  01744
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER     SBG 03/00  01745
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT          SBG 03/00  01746
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT      SBG 03/00  01747
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER     SBG 03/00  01748
         SR    R2,R3          R2=ACTUAL LENGTH READ                      01749
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED              01750
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01751
         ST    R7,TOTB7REG        Save BAL Register                      01752
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01753
         LA    R3,TOTBY           POINT REGISTER TO LABEL COUNTER        01754
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              01755
         L     R7,TOTB7REG        Restore BAL Register                   01756
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01757
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*             01758
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                     01759
         BZ    NPRTHEX           NO. SKIP THIS CODE.                     01760
         ST    R7,R7HXPRT        SAVE R7.                                01761
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.            01762
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT             01763
         BCTR  R1,0              LOWER BY ONE                            01764
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS               01765
         L     R7,R7HXPRT        RESTORE R7.                             01766
NPRTHEX  DS    0H                                                        01767
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*             01768
         NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG               01769
**** ----  BYTE COUNTS ---- BELOW                                        01770
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                     01771
         BZ    INNOBYTE       NO, SKIP INCREMENT                         01772
         LA    R3,DBIN        POINT REGISTER TO COUNTER                  01773
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                  01774
INNOBYTE DS    0H                                                        01775
**** ----  BYTE COUNTS ---- ABOVE                                        01776
         NI    DATFLAG,FF-X'10'  SHOW REAL DATA HAS BEEN READ SBG 03/00  01777
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01778
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST? SBG 03/00  01779
         BNE   READGO1        NO. SKIP THIS PROCESSING.       SBG 03/00  01780
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ    SBG 03/00  01781
         BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL       SBG 04/00  01782
*                             FORMATS, AND SET FLAGS          SBG 04/00  01783
*                             ACCORDINGLY.  OPTIONALLY        SBG 04/00  01784
*                             PRINT LABEL INFO FOUND.         SBG 04/00  01785
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW              01786
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?                01787
         BZ    LBLNOCNT                                                  01788
         TM    ISLBLFLG,X'01'     WAS LAST INPUT RECORD A LABEL?         01789
         BZ    LBLNOCNT                                                  01790
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01791
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER        01792
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              01793
LBLNOCNT DS    0H                                                        01794
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW              01795
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               01796
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING        01797
****-->>                below  -  Test of LRECL=80 and not a label
         ST    R2,SAVER2A         Save contents of R2
         L     R2,BYTESMVD        Get size of this record.
         C     R2,=F'80'          80 bytes exactly in record?
         BNE   YSTRPFLG           No. Not an exception.
         TM    ISLBLFLG,X'03'     Was last input record a label?         02508
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.
YSTRPFLG DS    0H
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING              02517
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.
         L     R2,SAVER2A
****-->>                above  -  Test of LRECL=80 and not a label
         B     READGO1            AND CONTINUE READ PROCESSING           01799
SAVER2A  DC    F'0'
STRNOSKP DS    0H                                                        01800
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE              01801
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE              01802
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01803
*                                                             SBG 04/00  01804
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01805
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                  01806
         BZ    READGO1            NO. WE CAN GO ON.                      01807
         TM    ISLBLFLG,X'01'     DID WE JUST READ A LABEL?              01808
         BZ    READGO1            NO DON'T CHECK FOR SL                  01809
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01810
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01811
         PUT   SYSPRINT,LINE      WRITE MSG                              01812
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01813
         CLOSE (LABADDIN)                                                01814
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            01815
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01816
         EJECT                                                           01817
*  ----------------------------------------------------------------  *   01818
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   01819
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE       01820
*                           INPUT IS FROM THE EXTERNAL LABEL FILE        01821
*  ----------------------------------------------------------------  *   01822
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?               01823
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.               01824
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****        01825
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?             01826
         BZ    STILTAPE                                                  01827
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?        01828
         BZ    STILTAPE                                                  01829
         B     WRTTAPMK                                                  01830
STILTAPE DS    0H                                                        01831
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****        01832
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?    01833
         BZ    DOTHEGET             NO. DO THE FILE GETS.                01834
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                 01835
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA    01836
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.          01837
DOTHEGET DS    0H                                                        01838
*** ---                                                                  01839
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?              01840
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                   01841
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?               01842
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                 01843
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.   01844
DOGETALW DS    0H                                                        01845
*** ---                                                                  01846
         GET   LABADDIN,EXTLBLIN                                         01847
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                    01848
         BE    INEXTLAB         IF IT IS, IGNORE IT.                     01849
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                        01850
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE        01851
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                        01852
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS           01853
* ---------------------------------  EOV2EOF  BELOW  ------------- *     01854
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                     01855
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT            01856
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER          01857
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD     01858
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER               01859
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?      01860
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT             01861
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER             01862
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.           01863
NTRALEOV DS    0H                                                        01864
* ---------------------------------  EOV2EOF  ABOVE  ------------- *     01865
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                  01866
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS            01867
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS    01868
         B     GOTVOL01             PROCESS THE VOL1                     01869
NLABVOL1 DS    0H                                                        01870
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW                01871
         CLC   EXTLBLIN(4),=C'HDR1'                                      01872
         BNE   NLABHDR1                                                  01873
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN              01874
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    01875
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                      01876
         B     ENDIBMSL                                                  01877
NLABHDR1 DS    0H                                                        01878
         CLC   EXTLBLIN(4),=C'HDR2'                                      01879
         BNE   NLABHDR2                                                  01880
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN              01881
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    01882
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                      01883
         B     ENDIBMSL                                                  01884
NLABHDR2 DS    0H                                                        01885
***** ----- *****                                                        01886
         CLC   EXTLBLIN(4),=C'EOF1'                                      01887
         BNE   NLABEOF1                                                  01888
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN              01889
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01890
         B     ENDIBMSL                                                  01891
NLABEOF1 DS    0H                                                        01892
         CLC   EXTLBLIN(4),=C'EOF2'                                      01893
         BNE   NLABEOF2                                                  01894
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN              01895
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01896
         B     ENDIBMSL                                                  01897
NLABEOF2 DS    0H                                                        01898
***** ----- *****                                                        01899
         CLC   EXTLBLIN(4),=C'EOV1'                                      01900
         BNE   NLABEOV1                                                  01901
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN             01902
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01903
         B     ENDIBMSL                                                  01904
NLABEOV1 DS    0H                                                        01905
         CLC   EXTLBLIN(4),=C'EOV2'                                      01906
         BNE   NLABEOV2                                                  01907
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN             01908
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01909
         B     ENDIBMSL                                                  01910
NLABEOV2 DS    0H                                                        01911
ENDIBMSL DS    0H                                                        01912
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE                01913
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                   01914
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW              01915
* -------------- EOF2EOV BELOW ----------------- *                       01916
ISITEOV  DS    0H                                                        01917
         CLC   EXTLBLIN(3),=C'EOV'                                       01918
         BNE   NOEOF2V                                                   01919
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                01920
         BZ    NOEOF2V                                                   01921
         MVC   EXTLBLIN(3),=C'EOF'                                       01922
NOEOF2V  DS    0H                                                        01923
* -------------- EOF2EOV ABOVE ----------------- *                       01924
* ----------                                                             01925
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?      01926
         BZ    BLNOCORR             NO. SKIP THIS.                       01927
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                       01928
         BE    CORBLKCT                                                  01929
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                       01930
         BE    CORBLKCT                                                  01931
BLNOCORR B     EOFOREOV                                                  01932
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW          01933
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?                01934
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.         01935
         TM    PARMFLG3,X'80'       FIXING LABELS?                       01936
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING       01937
MAKEEOF2 DS    0H                                                        01938
         MVC   EXTLBLIN(80),HDR2SAV                                      01939
         MVC   EXTLBLIN(3),=C'EOF'                                       01940
NOMKEOF2 DS    0H                                                        01941
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE          01942
* ----------                                                             01943
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                         01944
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET          01945
**** ---- ****                                                           01946
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                  01947
         BNE   NOTLUHL                                                   01948
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS     01949
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS  01950
NOTLUHL  DS    0H                                                        01951
**** ---- ****                                                           01952
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                 01953
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.             01954
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD         01955
ENDHEADR DS    0H                                                        01956
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD   01957
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE  01958
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER             01959
*** -----                                                                01960
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE            01961
         BZ    NOEODFL1                                                  01962
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK     01963
         B     ENDTRAIL                                                  01964
NOEODFL1 DS    0H                                                        01965
*** -----                                                                01966
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME            01967
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA         01968
ENDTRAIL DS    0H                                                        01969
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS         01970
         A     R0,=F'1'         ADD 1 TO COUNT                           01971
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                  01972
*** ---                                                                  01973
         TM    PARMFLG4,X'10'       LIMITING LABELS?                     01974
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.              01975
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?      01976
         BL    ENDNOLIM             NOT YET. GET OUT.                    01977
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.       01978
ENDNOLIM DS    0H                                                        01979
*** ---                                                                  01980
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                  01981
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN     01982
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD  01983
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS              01984
         B     WRTTAPMK                                                  01985
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    01986
CORBLKCT DS    0H                                                        01987
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED     01988
         BZ    NOCORBLK          NO. BYPASS.                             01989
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED   01990
         BZ    NOCORBLK          NO. BYPASS.                             01991
*** ---  FIXING LABELS  --- ***                                          01992
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                 01993
         BZ    NOFIXL1           NO. DON'T FIX.                          01994
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?               01995
         BO    NOFIXL1           YES. DON'T CREATE ONE.                  01996
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1            01997
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL              01998
NOFIXL1  DS    0H                                                        01999
*** ---  FIXING LABELS  --- ***                                          02000
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT      02001
         STM   R2,R3,SAVE2TO3                                            02002
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD     02003
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    02004
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 02005
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        02006
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              02007
         LM    R2,R3,SAVE2TO3                                            02008
NOCORBLK B     EOFOREOV                                                  02009
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02010
GOTVOL01 DS    0H                                                        02011
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT    02012
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"         02013
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                        02014
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?              02015
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT         02016
         MVC   VOLNEW(6),VOLSTG        OVERLAY NEW VOLSER FOR ALL OUTS   02017
NOOVLALL DS    0H                                                        02018
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                        02019
         B     WRTLABEL                                                  02020
WRTLABEL OI    WRLBLFLG,X'01'                                            02021
* --------------- PRINT LABEL TO BE WRITTEN ------------------- *        02022
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN       02023
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM          02024
TRYPXXX0 DS    0H                                                        02025
         CLC   EXTLBLIN(4),=C'VOL1'                                      02026
         BNE   TRYPUSER                                                  02027
         MVI   LINE-1,C' '                                    SBG 09/00  02028
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 09/00  02029
         MVC   VOL1SER(6),LINE       CLEAR FIELD TO BLANKS    SBG 09/00  02030
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL   SBG 09/00  02031
         MVC   VOL1OWNR(10),LINE     CLEAR FIELD TO BLANKS    SBG 09/00  02032
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION   SBG 09/00  02033
         MVC   LINE(133),VOL1LBL  INDICATE THAT VOL1 FOUND    SBG 09/00  02034
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 09/00  02035
         B     NOPRTEXT                                                  02036
TRYPUSER DS    0H                                                        02037
         CLC   EXTLBLIN(3),=C'UHL'     USER HEADER LABEL?                02038
         BE    PUSERPR                 YES.  PRINT ENTIRE LABEL.         02039
         CLC   EXTLBLIN(3),=C'UTL'     USER TRAILER LABEL?               02040
         BE    PUSERPR                 YES.  PRINT ENTIRE LABEL.         02041
         B     TRYPXXX1                                                  02042
PUSERPR  ST    R3,SAVE3REG                                               02043
         LA    R3,EXTLBLIN                                               02044
         BAL   R7,PRTUSER     PRINT LABEL INFO                           02045
         L     R3,SAVE3REG                                               02046
         B     NOPRTEXT                                                  02047
TRYPXXX1 CLC   EXTLBLIN(4),=C'HDR1'                                      02048
         BE    PXXX1PR                                                   02049
         CLC   EXTLBLIN(4),=C'EOF1'                                      02050
         BE    PXXX1PR                                                   02051
         CLC   EXTLBLIN(4),=C'EOV1'                                      02052
         BE    PXXX1PR                                                   02053
         B     TRYPXXX2                                                  02054
PXXX1PR  ST    R3,SAVE3REG                                               02055
         LA    R3,EXTLBLIN                                               02056
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           02057
         L     R3,SAVE3REG                                               02058
         B     NOPRTEXT                                                  02059
TRYPXXX2 CLC   EXTLBLIN(4),=C'HDR2'                                      02060
         BE    PXXX2PR                                                   02061
         CLC   EXTLBLIN(4),=C'EOF2'                                      02062
         BE    PXXX2PR                                                   02063
         CLC   EXTLBLIN(4),=C'EOV2'                                      02064
         BE    PXXX2PR                                                   02065
         B     NOPRTEXT                                                  02066
PXXX2PR  ST    R3,SAVE3REG                                               02067
         LA    R3,EXTLBLIN                                               02068
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           02069
         L     R3,SAVE3REG                                               02070
NOPRTEXT DS    0H             DON'T PRINT EXTERNAL LABEL ON REPORT       02071
* --------------- PRINT LABEL TO BE WRITTEN ------------------- *        02072
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02073
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE          02074
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                    02075
         B     WRITE1         WRITE LABEL RECORD                         02076
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE             02077
WRTTAPMK DS    0H                                                        02078
*** ----------------                                                     02079
         TM    INEODFLG,X'02'                                            02080
         BZ    NOEODNOW                                                  02081
         TM    WRLBLFLG,X'04'                                            02082
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR  02083
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?       02084
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.                02085
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS        02086
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR   02087
NOEODNOW DS    0H                                                        02088
*** ----------------                                                     02089
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                           02090
         B     WRITE1         WRITE TAPE MARK                            02091
* ------------------ SPECIAL ROUTINES ------------------------------- *  02092
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD    02093
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN         02094
         B     READIN             AND GO BACK WHERE YOU STARTED          02095
* ------------------ SPECIAL ROUTINES ------------------------------- *  02096
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS   02097
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                    02098
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02099
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                    02100
         BZ    NOFIXLBL          NO. DON'T TRY IT.                       02101
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING    02102
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                  02103
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE              02104
         B     CLOSMALL          FINISHED, GET OUT.                      02105
NOFIXLBL DS    0H                                                        02106
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02107
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN       02108
         B     READIN2        WRITE OUTPUTS AND FINISH                   02109
* ------------------------------------------------------------------- *  02110
*                                                                        02111
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                           02112
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                        02113
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                      02114
*      ALREADY.                                                          02115
*                                                                        02116
* ------------------ SPECIAL ROUTINES ------------------------------- *  02117
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02118
         EJECT                                                           02119
READGO1  DS    0H                                                        02120
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW          02121
         TM    PARMFLG3,X'04'  COUNTING BYTES?                           02122
         BZ    READNCNT                                                  02123
         TM    ISLBLFLG,X'01'  LAST READ A LABEL?                        02124
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE        02125
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02126
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY      02127
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02128
READNCNT DS    0H                                                        02129
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE          02130
**---->            LABEL STRIPPING CODE          BELOW                   02131
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02132
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING        02133
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW       02134
         BZ    RDNOSTRP           NO IT WASN'T                           02135
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.   02136
RDNOSTRP DS    0H                                                        02137
**---->            LABEL STRIPPING CODE          ABOVE                   02138
         STH   R2,OUTCCW+6    STORE FOR WRITE                 SBG 03/00  02139
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER        02140
         ST    R7,STOR7REG                                               02141
         L     R7,BLOKCNT                                                02142
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS              02143
         ST    R7,BLOKCNT                                                02144
         L     R7,STOR7REG                                               02145
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *       02146
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                   02147
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT           02148
         OI    FLAG2A,EOV       YES. WRITE AND GET OUT OF PROGRAM.       02149
NOINITT1 DS    0H                                                        02150
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *       02151
         B     WRITE1         CONTINUE                                   02152
*                                                             SBG 04/00  02153
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02154
READIN1  DS    0H             COME HERE IF TM WAS READ        SBG 04/00  02155
* ------------------------- ADD LABEL TO NL CODE ----------- *           02156
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                 02157
         BZ    NONLSL1          NO.  BYPASS.                             02158
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS            02159
*** ---                                                                  02160
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?         02161
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.    02162
*                               DO NOT COLLECT 200 DOLLARS.              02163
*** ---                                                                  02164
NONLSL1  DS    0H                                                        02165
* ------------------------- ADD LABEL TO NL CODE ----------- *           02166
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02167
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?         02168
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.        02169
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?        02170
         BO    WRCTLHDR         YES. PUT IT OUT.                         02171
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?        02172
         BO    WRCTLEOF         YES. PUT IT OUT.                         02173
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?        02174
         BO    WRCTLEOV         YES. PUT IT OUT.                         02175
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.       02176
WRCTLHDR DS    0H                                                        02177
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02178
         MVC   LLINE(80),LABELITH   MARK END OF LABEL         SBG 09/00  02179
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02180
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02181
WRCTLEOF DS    0H                                                        02182
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02183
         MVC   LLINE(80),LABELITR   MARK END OF LABEL         SBG 09/00  02184
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02185
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02186
WRCTLEOV DS    0H                                                        02187
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02188
         MVC   LLINE(80),LABELITV   MARK END OF LABEL         SBG 09/00  02189
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02190
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02191
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE          02192
NOCNTLWR DS    0H                                                        02193
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02194
         TM    DATFLAG,X'10'  NO DATA READ YET?               SBG 03/00  02195
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY  SBG 03/00  02196
         CLC   LTMRPTI,SKIPPED   WE SKIP LEADING TAPEMARKS?   SBG 03/00  02197
         BNE   RDNOSKIP                                       SBG 03/00  02198
         MVI   LINE-1,C' '                                    SBG 03/00  02199
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02200
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM SKIPPED  SBG 03/00  02201
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  02202
         B     READIN         DO ANOTHER READ                 SBG 03/00  02203
RDNOSKIP DS    0H                                             SBG 03/00  02204
         MVI   LINE-1,C' '                                    SBG 03/00  02205
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02206
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM COPIED   SBG 03/00  02207
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  02208
         B     MARKFILE                                       SBG 03/00  02209
READINGO DS    0H                                             SBG 04/00  02210
*------------------------------------> HEX PRINT LIMIT - BELOW           02211
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02212
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT            02213
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02214
NOHXPRST DS    0H                                                        02215
*------------------------------------> HEX PRINT LIMIT - ABOVE           02216
         ST    R7,STOR7REG                                               02217
         L     R7,FILECNT                                                02218
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  02219
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02220
         UNPK  FILEDONE+6(5),DWORD+5(3)  UNPACK FILE NUMBER              02221
         ST    R7,FILECNT                                                02222
         L     R7,BLOKCNT                                                02223
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             02224
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02225
         UNPK  FILEDONE+21(7),DWORD+4(4)  UNPACK BLOCK COUNT             02226
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS            02227
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    02228
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02229
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02230
         BZ    MARKNCNT           NO-SKIP ROUTINE                        02231
         MVC   FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                   02232
         MVC   FILECONT,=C'CONTAINING'                                   02233
         L     R4,DBINH           LOAD REG WITH HI ORDER                 02234
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             02235
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           02236
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  02237
         L     R4,DBINL           LOAD REG WITH LOW ORDER                02238
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            02239
         AP    QWORD,DWORD        AND ADD IT IN                          02240
         ED    FILEBYTE,QWORD+6   DISPLAY COUNT IN LINE                  02241
** ----                                                                  02242
         LM    R4,R5,TOTBYTES                                            02243
         A     R5,DBINL            LOW ORDER COUNT                       02244
         BNO   MARKNOVR            B IF NO OVERFLOW                      02245
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02246
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02247
MARKNOVR DS    0H                                                        02248
         A     R4,DBINH            HIGH ORDER                            02249
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL               02250
** ----                                                                  02251
         TM    ISLBLFLG,X'01'      CAME FROM READING LABELS?             02252
         BZ    MARKISNL            NO. DON'T ADD TOTALS                  02253
         LM    R4,R5,LABBYTES                                            02254
         A     R5,LABINL           LOW ORDER COUNT                       02255
         BNO   MARKNOVL            B IF NO OVERFLOW                      02256
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02257
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02258
MARKNOVL DS    0H                                                        02259
         A     R4,LABINH           HIGH ORDER                            02260
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL               02261
* - >                                                                    02262
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02263
         BZ    NOSEPLBL                                                  02264
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02265
         MVC   FILECUMT,=C'CUM LABEL:'                                   02266
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                   02267
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02268
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02269
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02270
         CVD   R5,DWORD          LOW ORDER WORD                          02271
         AP    QWORD,DWORD       AND ADD IT IN                           02272
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02273
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02274
NOSEPLBL DS    0H                                                        02275
* - >                                                                    02276
         B     MARKNOLB                                                  02277
MARKISNL DS    0H                                                        02278
         TM    ISLBLFLG,X'01'      CAME FROM READING LABELS?             02279
         BO    MARKNOLB                                                  02280
         LM    R4,R5,FILBYTES                                            02281
         A     R5,DBINFL           LOW ORDER COUNT                       02282
         BNO   MARKNOVF            B IF NO OVERFLOW                      02283
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02284
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02285
MARKNOVF DS    0H                                                        02286
         A     R4,DBINFH           HIGH ORDER                            02287
         STM   R4,R5,FILBYTES                                            02288
* - >                                                                    02289
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02290
         BZ    NOSEPDAT                                                  02291
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02292
         MVC   FILECUMT,=C'CUM DATA :'                                   02293
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                   02294
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02295
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02296
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02297
         CVD   R5,DWORD          LOW ORDER WORD                          02298
         AP    QWORD,DWORD       AND ADD IT IN                           02299
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02300
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02301
NOSEPDAT DS    0H                                                        02302
* - >                                                                    02303
MARKNOLB DS    0H                                                        02304
** ----                                                                  02305
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?                02306
         BZ    MARKNCN2           NO-SKIP ROUTINE                        02307
* - >                                                                    02308
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02309
         MVC   FILECUMT,=C'CUM TOTAL:'                                   02310
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                   02311
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02312
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02313
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02314
         CVD   R5,DWORD          LOW ORDER WORD                          02315
         AP    QWORD,DWORD       AND ADD IT IN                           02316
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02317
* - >                                                                    02318
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE                02319
MARKNCNT DS    0H                                                        02320
         MVC   FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02321
MARKNCN2 MVC   FILETBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02322
MARKNCNE DS    0H                                                        02323
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02324
         PUT   SYSPRINT,FILEDONE  WRITE IT                               02325
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02326
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02327
         BZ    MARKNTOT           NO-SKIP ROUTINE                        02328
         MVC   FILECONT,=C'          '                                   02329
         MVC   FILECUMT,=C'          '                                   02330
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE              02331
         ST    R4,DBINH            ZERO BYTE COUNT                       02332
         ST    R4,DBINL            ZERO BYTE COUNT                       02333
         ST    R4,LABINH           ZERO BYTE COUNT                       02334
         ST    R4,LABINL           ZERO BYTE COUNT                       02335
         ST    R4,DBINFH           ZERO BYTE COUNT                       02336
         ST    R4,DBINFL           ZERO BYTE COUNT                       02337
MARKNTOT DS    0H                                                        02338
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02339
MARKFILE DS    0H                                                        02340
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE              02341
         ST    R7,BLOKCNT                                                02342
         L     R7,FILECNT                                                02343
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                       02344
         ST    R7,FILECNT                                                02345
         L     R7,STOR7REG                                               02346
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?        SBG 03/00  02347
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK     SBG 03/00  02348
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                          02349
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES             02350
         BZ    MARKFILA          NO - SKIP THIS CODE                     02351
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?     02352
         BNL   MARKFILA          NO - NO RESTRICTIONS                    02353
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA     02354
MARKFILA DS    0H                                                        02355
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                          02356
         TM    PARMFLG4,X'02'   Stripping labels?                        02357
         BZ    MARKSTRX         no - bypass strip-related code           02358
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?                02359
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                  02360
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.     02361
         B     READIN           YES. SKIP WRITING THE T.M. TOO           02362
MARKSTRX DS    0H                                                        02363
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK      SBG 04/00  02364
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?     SBG 04/00  02365
         BZ    MARKGO         NO. TEST FOR 2ND TM             SBG 04/00  02366
         B     READIN2        YES. WRITE TO OUTPUTS & END     SBG 04/00  02367
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                           02368
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS SBG 03/00  02369
NOLBL    MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM      SBG 03/00  02370
         B     WRITE1         GO WRITE TM TO OUTPUTS                     02371
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02372
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2      SBG 03/00  02373
         BZ    INEODATA       NOT EITHER. END AS USUAL.       SBG 03/00  02374
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ SBG 03/00  02375
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG  SBG 03/00  02376
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02377
*                                                             SBG 04/00  02378
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02379
INEODATA DS    0H                                                        02380
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE       02381
*                                                                        02382
READIN2  DS    0H                                                        02383
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02384
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?      02385
         BZ    READ2GO           NO. BYPASS THIS CODE.                   02386
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA  02387
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS           02388
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?              02389
         BZ    NOEXTMK           NO                                      02390
         B     WRTTAPMK                                                  02391
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?           02392
         BZ    READ2GO           NO. BYPASS REST OF CODE.                02393
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.          02394
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                    02395
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS    02396
         B     READIN            DON'T WRITE FINAL TAPE MARK YET         02397
READ2STP DS    0H                                                        02398
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS            02399
READ2GO  DS    0H                                                        02400
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02401
         OI    FLAG2A,EOV     INDICATE EOV ON INPUT                      02402
* --- >>>  ------------------ below -------- Skip writing last T.M.      02403
* -------------------------------------------------------------- *       02404
*            When stripping labels, somehow an extra             *       02405
*            tape mark gets written.  This is a kludge           *       02406
*            to correct that.....                                *       02407
* -------------------------------------------------------------- *       02408
         TM    PARMFLG4,X'02'    Stripping Labels?                       02409
         BZ    READ2GNS          No. don't skip writing last t.m.        02410
*        MVC   LINE(133),LINE-1       CLEAR LINE                         02411
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1              02412
*        PUT   SYSPRINT,LINE                                             02413
         B     WRITE17           Do not write the extra tape mark        02414
READ2GNS DS    0H                                                        02415
* --- >>>  ------------------ above -------- Skip writing last T.M.      02416
         B     WRITE1                                                    02417
         SPACE 3                                                         02418
TLITWRIT DS    0H                                                        02419
         TM    PARMFLG3,X'01'                                            02420
         BZ    TLITWRIE                                                  02421
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02422
         OI    WRLBLFLG,X'01'                                            02423
TLITSKP1 DS    0H                                                        02424
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              02425
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1        02426
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     02427
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          02428
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     02429
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          02430
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1    02431
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02432
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        02433
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        02434
TLITSKP2 DS    0H                                                        02435
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    02436
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     02437
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1    02438
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02439
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             02440
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    02441
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     02442
TLITWRIE DS    0H                                                        02443
*                                                                        02444
*  WRITE TO OUTPUT TAPES                                                 02445
*                                                                        02446
WRITE1   DS    0H                                             SBG 06/00  02447
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?              02448
         BNE   WRNOTPMK         No. Don't touch bytes to be moved        02449
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved              02450
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.        02451
WRNOTPMK DS    0H                                                        02452
* --- READ ONLY CODE ------------------------------- BELOW -- SBG 06/00  02453
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02454
         BO    WRITE17    YES--NO WRITES - ONLY READS         SBG 06/00  02455
* --- READ ONLY CODE ------------------------------- ABOVE -- SBG 06/00  02456
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                    02457
         BZ    WRITE2         NO                                         02458
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER     02459
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE  02460
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02461
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02462
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                  02463
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02464
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02465
         EXCP  OUTIOB         WRITE IT                                   02466
         WAIT  ECB=OUTECB     WAIT FOR IT                                02467
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02468
         BNE   OUTERR         NO - ERROR                                 02469
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                    02470
         BZ    WRITE3         NO                                         02471
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER     02472
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE  02473
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02474
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02475
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                  02476
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02477
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02478
         EXCP  OUTIOB         WRITE IT                                   02479
         WAIT  ECB=OUTECB     WAIT FOR IT                                02480
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02481
         BNE   OUTERR         NO - ERROR                                 02482
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                    02483
         BZ    WRITE4         NO                                         02484
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER     02485
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE  02486
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02487
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02488
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                  02489
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02490
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02491
         EXCP  OUTIOB         WRITE IT                                   02492
         WAIT  ECB=OUTECB     WAIT FOR IT                                02493
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02494
         BNE   OUTERR         NO - ERROR                                 02495
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                    02496
         BZ    WRITE5         NO                                         02497
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER     02498
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE  02499
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02500
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02501
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                  02502
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02503
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02504
         EXCP  OUTIOB         WRITE IT                                   02505
         WAIT  ECB=OUTECB     WAIT FOR IT                                02506
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02507
         BNE   OUTERR         NO - ERROR                                 02508
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                    02509
         BZ    WRITE6         NO                                         02510
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER     02511
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE  02512
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02513
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02514
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                  02515
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02516
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02517
         EXCP  OUTIOB         WRITE IT                                   02518
         WAIT  ECB=OUTECB     WAIT FOR IT                                02519
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02520
         BNE   OUTERR         NO - ERROR                                 02521
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                    02522
         BZ    WRITE7         NO                                         02523
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER     02524
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE  02525
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02526
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02527
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                  02528
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02529
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02530
         EXCP  OUTIOB         WRITE IT                                   02531
         WAIT  ECB=OUTECB     WAIT FOR IT                                02532
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02533
         BNE   OUTERR         NO - ERROR                                 02534
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                    02535
         BZ    WRITE8         NO                                         02536
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER     02537
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE  02538
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02539
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02540
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                  02541
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02542
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02543
         EXCP  OUTIOB         WRITE IT                                   02544
         WAIT  ECB=OUTECB     WAIT FOR IT                                02545
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02546
         BNE   OUTERR         NO - ERROR                                 02547
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                    02548
         BZ    WRITE9         NO                                         02549
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER     02550
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE  02551
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02552
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02553
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                  02554
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02555
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02556
         EXCP  OUTIOB         WRITE IT                                   02557
         WAIT  ECB=OUTECB     WAIT FOR IT                                02558
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02559
         BNE   OUTERR         NO - ERROR                                 02560
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                    02561
         BZ    WRITE10        NO                                         02562
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER     02563
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE  02564
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02565
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02566
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                  02567
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02568
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02569
         EXCP  OUTIOB         WRITE IT                                   02570
         WAIT  ECB=OUTECB     WAIT FOR IT                                02571
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02572
         BNE   OUTERR         NO - ERROR                                 02573
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                    02574
         BZ    WRITE11        NO                                         02575
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER     02576
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE  02577
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02578
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02579
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                  02580
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02581
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02582
         EXCP  OUTIOB         WRITE IT                                   02583
         WAIT  ECB=OUTECB     WAIT FOR IT                                02584
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02585
         BNE   OUTERR         NO - ERROR                                 02586
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                    02587
         BZ    WRITE12        NO                                         02588
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER     02589
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE  02590
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02591
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02592
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                  02593
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02594
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02595
         EXCP  OUTIOB         WRITE IT                                   02596
         WAIT  ECB=OUTECB     WAIT FOR IT                                02597
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02598
         BNE   OUTERR         NO - ERROR                                 02599
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                    02600
         BZ    WRITE13        NO                                         02601
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER     02602
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE  02603
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02604
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02605
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                  02606
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02607
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02608
         EXCP  OUTIOB         WRITE IT                                   02609
         WAIT  ECB=OUTECB     WAIT FOR IT                                02610
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02611
         BNE   OUTERR         NO - ERROR                                 02612
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                    02613
         BZ    WRITE14        NO                                         02614
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER     02615
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE  02616
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02617
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02618
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                  02619
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02620
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02621
         EXCP  OUTIOB         WRITE IT                                   02622
         WAIT  ECB=OUTECB     WAIT FOR IT                                02623
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02624
         BNE   OUTERR         NO - ERROR                                 02625
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                    02626
         BZ    WRITE15        NO                                         02627
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER     02628
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE  02629
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02630
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02631
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                  02632
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02633
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02634
         EXCP  OUTIOB         WRITE IT                                   02635
         WAIT  ECB=OUTECB     WAIT FOR IT                                02636
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02637
         BNE   OUTERR         NO - ERROR                                 02638
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                    02639
         BZ    WRITE16        NO                                         02640
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER     02641
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE  02642
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02643
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02644
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                  02645
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02646
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02647
         EXCP  OUTIOB         WRITE IT                                   02648
         WAIT  ECB=OUTECB     WAIT FOR IT                                02649
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02650
         BNE   OUTERR         NO - ERROR                                 02651
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                    02652
         BZ    WRITE17        NO                                         02653
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER     02654
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE  02655
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02656
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02657
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                  02658
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02659
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02660
         EXCP  OUTIOB         WRITE IT                                   02661
         WAIT  ECB=OUTECB     WAIT FOR IT                                02662
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02663
         BNE   OUTERR         NO - ERROR                                 02664
WRITE17  DS    0H                                                        02665
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?               02666
         BNE   WR17NTPM       No. Don't correct bytes moved field        02667
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field    02668
WR17NTPM DS    0H                                                        02669
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                         02670
         BO    ENDINPUT       YES. CLOSE.                                02671
         TM    FLAG2A,EOV     END OF INPUT?                              02672
         BO    ENDINPUT       YES - QUIT                                 02673
         B     READIN         NO - LOOP                                  02674
         SPACE 3                                                         02675
*                                                                        02676
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                             02677
*                                                                        02678
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                                02679
         BZ    INERR1         NO - ASSUME DATA CHECK                     02680
         MVC   LINE(133),INEQC  SET ERROR MESSAGE                        02681
         MVC   INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR        02682
         B     INERR2         CONTINUE                                   02683
INERR1   MVC   LINE(133),INDCK  SET ERROR MESSAGE                        02684
         MVC   INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR        02685
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                        02686
         MVI   INECB,X'00'    RESET ECB                                  02687
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X 02688
               6,INECB,ROUTCDE=(3)                                       02689
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE       02690
*                             WHO CARES WHAT THE REPLY IS                02691
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                      02692
         B     CLOSMALL                                                  02693
*        ABEND 69             QUIT                                       02694
         SPACE 3                                                         02695
*                                                                        02696
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY      02697
*                                                                        02698
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG       02699
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE                      02700
         TM    OUTCSW+4,X'02' UNIT CHECK?                                02701
         BO    OUTERUC        YES. HANDLE IT.                            02702
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                   02703
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                     02704
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION       02705
         MVC   LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE       02706
         B     OUTERR2            GO FILL IN REST OF THE INFO            02707
OUTERUC  MVC   LINE(133),OUTEQC  SET ERROR MESSAGE                       02708
         B     OUTERR2        CONTINUE                                   02709
OUTERR1  MVC   LINE(133),OUTDCK  SET ERROR MESSAGE                       02710
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                             02711
         L     R5,16          R5=CVT                                     02712
         L     R5,0(,R5)      R5=TCB WORDS                               02713
         L     R5,4(,R5)      R5=MY TCB                                  02714
         L     R5,12(,R5)     R5=TIOT                                    02715
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT              02716
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                  02717
         MVC   SAVDDN(5),4(R4)   Save DDNAME                             02718
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                     02719
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE           02720
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE                02721
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE                     02722
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB                 02723
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY          02724
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE       02725
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                 02726
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO                       02727
         MVC   SAVELINE(133),LINE                                        02728
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              02729
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.      02730
         MVC   LINE(133),LINE-1      CLEAR LINE                          02731
         MVC   LINE(133),OUTCOUNT    How much was copied?                02732
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE   02733
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE              02734
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE        02735
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE              02736
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ        02737
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP      02738
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  02739
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02740
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                 02741
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ       02742
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ          02743
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             02744
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02745
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS            02746
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    02747
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE           02748
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ        02749
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                 02750
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             02751
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           02752
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  02753
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER                02754
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            02755
         AP    QWORD,DWORD        AND ADD IT IN                          02756
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN               02757
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE              02758
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              02759
* ---- >    WTO on a Unit Exception   < ---- Below                       02760
         TM    PARMFLG5,X'40'   Do we WTO on a Unit Exception?           02761
         BO    OUTERR2A         Yes. WTO anyway, as of old.              02762
* ---- >    WTO on a Unit Exception   < ---- Above                       02763
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY           02764
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE             02765
*                               THIS IS A SEMI-NORMAL CONDITION          02766
*                               AND WHY INVOLVE THE OPERATOR?            02767
OUTERR2A MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR    02768
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                  02769
OUTERR4  DS    0H                                                        02770
         OI    OUTERFLG,X'01'    SHOW THIS WTOR WAS ISSUED
         WTOR  '                                                       X 02770
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)       02771
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                 02772
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                           02773
         BNE   OUTERR3        NO - TRY AGAIN                             02774
* ------------------------------------------------------------------- *  02775
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   *  02776
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             *  02777
* ------------------------------------------------------------------- *  02778
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB              02779
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                 02780
*                             DON'T BOTHER WAITING FOR REWIND            02781
* ------------------------------------------------------------------- *  02782
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR           02783
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                        02784
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02785
         BNE   OUTERR5        NO                                         02786
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02787
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                 02788
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                        02789
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02790
         BNE   OUTERR6        NO                                         02791
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02792
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                 02793
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                        02794
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02795
         BNE   OUTERR7        NO                                         02796
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02797
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                 02798
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                        02799
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02800
         BNE   OUTERR8        NO                                         02801
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02802
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                 02803
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                        02804
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02805
         BNE   OUTERR9        NO                                         02806
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02807
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                 02808
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                        02809
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02810
         BNE   OUTERR10       NO                                         02811
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02812
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                 02813
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                        02814
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02815
         BNE   OUTERR11       NO                                         02816
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02817
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                 02818
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                        02819
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02820
         BNE   OUTERR12       NO                                         02821
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02822
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                 02823
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                        02824
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02825
         BNE   OUTERR13       NO                                         02826
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02827
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                 02828
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                       02829
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02830
         BNE   OUTERR14       NO                                         02831
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02832
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                 02833
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                       02834
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02835
         BNE   OUTERR15       NO                                         02836
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02837
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                 02838
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                       02839
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02840
         BNE   OUTERR16       NO                                         02841
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02842
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                 02843
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                       02844
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02845
         BNE   OUTERR17       NO                                         02846
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02847
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                 02848
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                       02849
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02850
         BNE   OUTERR18       NO                                         02851
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02852
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                 02853
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                       02854
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02855
         BNE   OUTERR19       NO                                         02856
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02857
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                 02858
*                             THEN IT MUST BE OUTPUT 16                  02859
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02860
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                 02861
         SPACE 3                                                         02862
*                                                                        02863
*  END OF INPUT -- FINISH UP                                             02864
*                                                                        02865
ENDINPUT DS    0H                                                        02866
         SPACE 3                                                         02867
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  02868
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02869
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE       SBG 06/00  02870
         MVC   LINE(133),SUCCESSR    MOVE READ-ONLY MESSAGE   SBG 06/00  02871
         B     ENDIN16          WRITE OUT MESSAGE             SBG 06/00  02872
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  02873
ENDIN0   MVC   LINE(133),SUCCESS  MOVE MESSAGE TO LINE                   02874
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                       02875
         BO    ENDIN1         YES - CONTINUE                             02876
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                   02877
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                       02878
         BO    ENDIN2         YES - CONTINUE                             02879
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                 02880
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                       02881
         BO    ENDIN3         YES - CONTINUE                             02882
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                 02883
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                       02884
         BO    ENDIN4         YES - CONTINUE                             02885
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                 02886
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                       02887
         BO    ENDIN5         YES - CONTINUE                             02888
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                  02889
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                       02890
         BO    ENDIN6         YES - CONTINUE                             02891
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                   02892
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                       02893
         BO    ENDIN7         YES - CONTINUE                             02894
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                   02895
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                        02896
         BO    ENDIN8         YES - CONTINUE                             02897
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                   02898
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                        02899
         BO    ENDIN9         YES - CONTINUE                             02900
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                   02901
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                        02902
         BO    ENDIN10        YES - CONTINUE                             02903
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                   02904
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                        02905
         BO    ENDIN11        YES - CONTINUE                             02906
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                   02907
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                        02908
         BO    ENDIN12        YES - CONTINUE                             02909
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                   02910
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                        02911
         BO    ENDIN13        YES - CONTINUE                             02912
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                   02913
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                        02914
         BO    ENDIN14        YES - CONTINUE                             02915
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                   02916
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                        02917
         BO    ENDIN15        YES - CONTINUE                             02918
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                   02919
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                        02920
         BO    ENDIN16        YES - CONTINUE                             02921
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                  02922
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                   02923
         SPACE 3                                                         02924
*                                                                        02925
*  CLOSE ALL FILES                                                       02926
*                                                                        02927
CLOSMALL DS    0H                                                        02928
*        B     OUTERR        REMOVE - REMOVE - REMOVE                    02929
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *              02930
         TM    PARMFLG3,X'04'    COUNTING BYTES?                         02931
         BZ    ENDINTOT          NO - SKIP ROUTINE                       02932
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES               02933
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02934
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02935
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02936
         CVD   R5,DWORD          LOW ORDER WORD                          02937
         AP    QWORD,DWORD       AND ADD IT IN                           02938
         ED    TOTBPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              02939
         PUT   SYSPRINT,TOTBLINE                                         02940
         MVI   LINE,C' '                                                 02941
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          02942
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS     02943
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02944
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02945
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02946
         CVD   R5,DWORD          LOW ORDER WORD                          02947
         AP    QWORD,DWORD       AND ADD IT IN                           02948
         ED    TOTLPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              02949
         PUT   SYSPRINT,TOTLLINE                                         02950
         MVI   LINE,C' '                                                 02951
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          02952
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES      02953
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02954
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02955
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02956
         CVD   R5,DWORD          LOW ORDER WORD                          02957
         AP    QWORD,DWORD       AND ADD IT IN                           02958
         ED    TOTWPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              02959
         PUT   SYSPRINT,TOTWLINE                                         02960
         MVI   LINE,C' '                                                 02961
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          02962
ENDINTOT DS    0H                                                        02963
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *              02964
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - *  02965
         TM    LBLFLAG,X'08'  HAVE WE COPIED AN INITTED TAPE?            02966
         BZ    NOINITT3       NOPE. DON'T REPORT IT EITHER.              02967
         MVI   LINE-1,C' '                                               02968
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           02969
         MVC   INITSER(6),INVOLUME  MOVE IN VOLSER FROM VOL1             02970
         MVC   LINE(133),INITMSG MSG-WE'RE DOING INITTED TAPE            02971
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              02972
NOINITT3 DS    0H                                                        02973
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - *  02974
         TM    PARMFLG3,X'01'   INIT ONLY?                               02975
         BO    NOCLOSIN                                                  02976
         CLOSE (IN)                                                      02977
NOCLOSIN DS    0H                                                        02978
         CLOSE (SYSPRINT)                                                02979
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  02980
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE          SBG 09/00  02981
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    02982
         CLOSE (LABLDUMP)                                                02983
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE            02984
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                        02985
         BZ    NOLABACL         NO. NO FILE TO CLOSE                     02986
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                        02987
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                     02988
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    02989
         CLOSE (LABADDIN)                                                02990
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE        02991
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  02992
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02993
         BO    THEEND     YES. ONLY CLOSE INPUT AND SYSPRINT. SBG 06/00  02994
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  02995
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                             02996
         BZ    CLOSE1         NO                                         02997
         CLOSE (OUT1)         CLOSE OUTPUT 1                             02998
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                             02999
         BZ    CLOSE2         NO                                         03000
         CLOSE (OUT2)         CLOSE OUTPUT 2                             03001
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                             03002
         BZ    CLOSE3         NO                                         03003
         CLOSE (OUT3)         CLOSE OUTPUT 3                             03004
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                             03005
         BZ    CLOSE4         NO                                         03006
         CLOSE (OUT4)         CLOSE OUTPUT 4                             03007
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                             03008
         BZ    CLOSE5         NO                                         03009
         CLOSE (OUT5)         CLOSE OUTPUT 5                             03010
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                             03011
         BZ    CLOSE6         NO                                         03012
         CLOSE (OUT6)         CLOSE OUTPUT 6                             03013
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                             03014
         BZ    CLOSE7         NO                                         03015
         CLOSE (OUT7)         CLOSE OUTPUT 7                             03016
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                             03017
         BZ    CLOSE8         NO                                         03018
         CLOSE (OUT8)         CLOSE OUTPUT 8                             03019
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                             03020
         BZ    CLOSE9         NO                                         03021
         CLOSE (OUT9)         CLOSE OUTPUT 9                             03022
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                            03023
         BZ    CLOSE10        NO                                         03024
         CLOSE (OUT10)        CLOSE OUTPUT 10                            03025
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                            03026
         BZ    CLOSE11        NO                                         03027
         CLOSE (OUT11)        CLOSE OUTPUT 11                            03028
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                            03029
         BZ    CLOSE12        NO                                         03030
         CLOSE (OUT12)        CLOSE OUTPUT 12                            03031
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                            03032
         BZ    CLOSE13        NO                                         03033
         CLOSE (OUT13)        CLOSE OUTPUT 13                            03034
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                            03035
         BZ    CLOSE14        NO                                         03036
         CLOSE (OUT14)        CLOSE OUTPUT 14                            03037
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                            03038
         BZ    CLOSE15        NO                                         03039
         CLOSE (OUT15)        CLOSE OUTPUT 15                            03040
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                            03041
         BZ    THEEND         NO                                         03042
         CLOSE (OUT16)        CLOSE OUTPUT 16                            03043
         SPACE 3                                                         03044
*                                                                        03045
*  Test for ABEND 069 first.  Did we come from an Input Error?           03046
*                                                                        03047
         TM    ABENDFLG,X'01'    Is ABEND flag on?                       03048
         BZ    THEEND            No.  End normally.                      03049
         ABEND 69                QUIT                                    03050
*                                                                        03051
*  THE END                                                               03052
*                                                                        03053
THEEND   DS    0H                                                        03054
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                 03055
         BO    THEEND0           YES WE DO.  Issue RC = 0.               03056
         MVC   WTOCBT+16(41),FILEDONE                                    03057
WTOCBT   WTO   'CBT990                                              '    03058
THEENDS  DS    0H                                                        03064
         TM    OUTERFLG,X'01'   WTOR ISSUED AT LEAST ONCE?
         BO    THEEND16         Yes, issue RC = 16
         TM    FLAG2A,ERR       WAS THERE AN ERROR?                      03060
         BO    THEEND8          Yes, issue RC = 8
         B     THEEND0          Otherwise, issue RC = 0
THEEND16 DS    0H                                                        03064
         L     R13,4(,R13)                                               03065
         MVC   16(4,R13),=F'16'         Return code 16    in R15         05293
         B     THEEND2
THEEND8  DS    0H                                                        03064
         L     R13,4(,R13)                                               03065
         MVC   16(4,R13),=F'8'          Return code 8     in R15         05293
         B     THEEND2
THEEND0  DS    0H                                                        03064
         L     R13,4(,R13)                                               03065
         MVC   16(4,R13),=F'0'          Return code 0     in R15         05293
THEEND2  DS    0H                                                        03064
         LM    R14,R12,12(R13)                                           05296
         BR    R14                                                       05297
         EJECT                                                           03067
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *      03068
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03069
*    BAL REGISTER IS R4.                                                 03070
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03071
HEX      DS    0H                                                        03072
         MVC   1(1,R15),0(R1)        Move byte                           03073
         UNPK  0(3,R15),1(2,R15)     Unpack                              03074
         TR    0(2,R15),HEXTAB-240                                       03075
         LA    R15,2(,R15)           Increment output pointer            03076
         LA    R1,1(,R1)             Increment input pointer             03077
         BCT   R0,HEX                Decrement length, then loop         03078
         MVI   0(R15),C' '           Blank the trailing byte             03079
         BR    R4                    Return to caller                    03080
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     03081
         SPACE                                                           03082
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03083
*    BAL REGISTER IS R7.                                      SBG 04/00  03084
* --------------------------------------------------------- * SBG 04/00  03085
LABELCHK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS   SBG 04/00  03086
*                         AND SET LABEL FLAGS, ACCORDINGLY,   SBG 04/00  03087
*                         IN THE LBLFLAG BYTE.                SBG 04/00  03088
*              X'01'    HDR1 HAS BEEN SEEN                    SBG 03/00  03089
*              X'02'    HDR2 HAS BEEN SEEN                    SBG 03/00  03090
*              X'04'    VOL1 HAS BEEN SEEN                    SBG 03/00  03091
*              X'08'    HDR1 IS FROM AN INITTED TAPE          SBG 03/00  03092
*              X'10'    EOF1 HAS BEEN SEEN                    SBG 04/00  03093
*              X'20'    EOF2 HAS BEEN SEEN                    SBG 04/00  03094
*              X'40'    EOV1 HAS BEEN SEEN                    SBG 04/00  03095
*              X'80'    EOV2 HAS BEEN SEEN                    SBG 04/00  03096
* --------------------------------------------------------- * SBG 04/00  03097
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *            03098
* -                                                       - *            03099
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *            03100
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *            03101
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *            03102
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *            03103
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *            03104
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *            03105
* --------------------------------------------------------- *            03106
         NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG AT START      03107
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?          SBG 04/00  03108
         BE    CVOL1                PROCESS THE VOL1          SBG 04/00  03109
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?          SBG 04/00  03110
         BE    CHDR1                PROCESS HDR1              SBG 04/00  03111
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?             SBG 04/00  03112
         BE    CHDR2                PROCESS HDR2              SBG 04/00  03113
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?            SBG 04/00  03114
         BE    CEOF1                PROCESS EOF1              SBG 04/00  03115
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?            SBG 04/00  03116
         BE    CEOF2                PROCESS EOF2              SBG 04/00  03117
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?            SBG 04/00  03118
         BE    CEOV1                PROCESS EOV1              SBG 04/00  03119
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?            SBG 04/00  03120
         BE    CEOV2                PROCESS EOV2              SBG 04/00  03121
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL? SBG 04/00  03122
         BE    CUHL                 PROCESS UHL               SBG 04/00  03123
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?    04/00  03124
         BE    CUTL                 PROCESS UTL               SBG 04/00  03125
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL    SBG 04/00  03126
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------  SBG 05/00  03127
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03128
         BO    CVOL1NPR              YES. JUST TURN ON ISLABEL FLAG      03129
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW          03130
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03131
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                    03132
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1      03133
CLRIDRCV DS    0H                                                        03134
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE          03135
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE SBG 03/00  03136
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE  SBG 03/00  03137
* ---------------- LABEL ADDING CODE ---------------------- * SBG 09/00  03138
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                03139
         BZ    CVOLNPRB             NO. WE CAN GO ON.                    03140
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     03141
         MVC   LINE(133),NOLABSL   DISPLAY NO SL ON SL MSG               03142
         PUT   SYSPRINT,LINE        WRITE MSG                            03143
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  03144
         CLOSE (LABADDIN)                                                03145
CVOL1OUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            03146
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.          03147
* ---------------- LABEL ADDING CODE ---------------------- * SBG 09/00  03148
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03149
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03150
         BZ    CVOL1ND              NO. SKIP PUTTING OUT      SBG 09/00  03151
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03152
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03153
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03154
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03155
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03156
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.            SBG 03/00  03157
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?         SBG 05/00  03158
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND  SBG 05/00  03159
         MVI   LINE-1,C' '                                    SBG 03/00  03160
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  03161
         MVC   VOL1SER(6),LINE       CLEAR FIELD TO BLANKS    SBG 04/00  03162
         MVC   VOL1SER(6),INVOLUME   REPORT VOLUME SERIAL     SBG 03/00  03163
         MVC   VOL1OWNR(10),LINE     CLEAR FIELD TO BLANKS    SBG 04/00  03164
         MVC   VOL1OWNR(10),INAREA+41   OWNER INFORMATION     SBG 04/00  03165
         MVC   LINE(133),VOL1LBL  INDICATE THAT VOL1 FOUND    SBG 04/00  03166
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 03/00  03167
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03168
         B     LABCHEND                                       SBG 04/00  03169
CHDR1    DS    0H                                             SBG 04/00  03170
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03171
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG      03172
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS         SBG 07/00  03173
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.            SBG 03/00  03174
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03175
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03176
         BZ    CHDR1ND              NO. SKIP PUTTING OUT      SBG 09/00  03177
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03178
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03179
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03180
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03181
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03182
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?   SBG 03/00  03183
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET  SBG 03/00  03184
* ---------------- LABEL DUMPING CODE --------------------- *            03185
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03186
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      03187
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03188
         MVC   LLINE(80),LABELITI   MOVE IN ENDOFHDRINIT                 03189
         PUT   LABLDUMP,LLINE       WRITE OUT ENDOFLABELHEADERINIT       03190
CHDR1NDM DS    0H                                                        03191
* ---------------- LABEL DUMPING CODE --------------------- *            03192
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE   SBG 03/00  03193
         NOP   CHDR1Z         DON'T PRINT LABEL INFO          SBG 05/00  03194
CHDR1A   TM    PARMFLG1,X'02' DO WE PRINT LABELS?             SBG 05/00  03195
         BZ    CHDR1Z         NO. DON'T PRINT.                SBG 05/00  03196
         ST    R3,SAVE3REG                                               03197
         LA    R3,INAREA                                                 03198
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03199
         BAL   R7,PRTXXX1     PRINT LABEL INFO                SBG 05/00  03200
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03201
         L     R3,SAVE3REG                                               03202
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03203
         B     LABCHEND                                       SBG 04/00  03204
CHDR2    DS    0H                                             SBG 04/00  03205
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03206
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG      03207
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW          03208
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03209
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                    03210
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03211
         BNE   CLRIDRH2                                                  03212
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03213
CLRIDRH2 DS    0H                                                        03214
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE          03215
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2 SBG 07/00  03216
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.            SBG 03/00  03217
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03218
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03219
         BZ    CHDR2ND              NO. SKIP PUTTING OUT      SBG 09/00  03220
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03221
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03222
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03223
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           03224
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03225
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03226
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?           SBG 05/00  03227
         BZ    CHDR2Z           NO.                           SBG 05/00  03228
         ST    R3,SAVE3REG                                               03229
         LA    R3,INAREA                                                 03230
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03231
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03232
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03233
         L     R3,SAVE3REG                                               03234
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03235
         B     LABCHEND                                       SBG 04/00  03236
CEOF1    DS    0H                                             SBG 04/00  03237
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03238
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG      03239
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1      SBG 04/00  03240
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.            SBG 03/00  03241
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03242
BCTCEOF1 DS    0H                                                        03243
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          03244
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                  03245
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         03246
         STM   R2,R3,SAVE2TO3                                            03247
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     03248
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    03249
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 03250
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        03251
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              03252
         LM    R2,R3,SAVE2TO3                                            03253
BCTCEOFX DS    0H                                                        03254
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03255
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03256
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03257
         BZ    CEOF1ND              NO. SKIP PUTTING OUT      SBG 09/00  03258
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03259
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03260
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03261
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03262
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03263
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?           SBG 05/00  03264
         BZ    CEOF1Z           NO.                           SBG 05/00  03265
         ST    R3,SAVE3REG                                               03266
         LA    R3,INAREA                                                 03267
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03268
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           03269
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03270
         L     R3,SAVE3REG                                               03271
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03272
         B     LABCHEND                                       SBG 04/00  03273
CEOF2    DS    0H                                             SBG 04/00  03274
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03275
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG      03276
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          03277
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03278
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                    03279
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03280
         BNE   CLRIDRF2                                                  03281
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03282
CLRIDRF2 DS    0H                                                        03283
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          03284
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2      SBG 04/00  03285
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.            SBG 03/00  03286
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03287
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03288
         BZ    CEOF2ND              NO. SKIP PUTTING OUT      SBG 09/00  03289
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03290
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03291
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03292
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           03293
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03294
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03295
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?           SBG 05/00  03296
         BZ    CEOF2Z           NO.                           SBG 05/00  03297
         ST    R3,SAVE3REG                                               03298
         LA    R3,INAREA                                                 03299
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03300
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03301
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03302
         L     R3,SAVE3REG                                               03303
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03304
         B     LABCHEND                                       SBG 04/00  03305
CEOV1    DS    0H                                             SBG 04/00  03306
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03307
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG      03308
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1      SBG 04/00  03309
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?              SBG 06/00  03310
         BZ    CEOVN1         NO, PROCESS ORDINARILY          SBG 06/00  03311
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN         SBG 03/00  03312
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                            03313
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY      SBG 06/00  03314
         MVI   LINE-1,C' '                                    SBG 03/00  03315
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  03316
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE             SBG 06/00  03317
         PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.    SBG 06/00  03318
         B     CEOVY1                                         SBG 06/00  03319
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.            SBG 03/00  03320
CEOVY1   DS    0H                                             SBG 09/00  03321
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03322
BCTCEOV1 DS    0H                                                        03323
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          03324
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                  03325
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         03326
         STM   R2,R3,SAVE2TO3                                            03327
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     03328
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    03329
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 03330
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        03331
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              03332
         LM    R2,R3,SAVE2TO3                                            03333
BCTCEOVX DS    0H                                                        03334
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03335
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03336
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03337
         BZ    CEOV1ND              NO. SKIP PUTTING OUT      SBG 09/00  03338
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03339
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03340
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03341
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03342
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03343
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?           SBG 05/00  03344
         BZ    CEOV1Z           NO.                           SBG 05/00  03345
         ST    R3,SAVE3REG                                               03346
         LA    R3,INAREA                                                 03347
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03348
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           03349
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03350
         L     R3,SAVE3REG                                               03351
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03352
         B     LABCHEND                                       SBG 04/00  03353
CEOV2    DS    0H                                             SBG 04/00  03354
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03355
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG      03356
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          03357
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03358
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                    03359
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03360
         BNE   CLRIDRV2                                                  03361
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03362
CLRIDRV2 DS    0H                                                        03363
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          03364
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2      SBG 04/00  03365
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?              SBG 06/00  03366
         BZ    CEOVN2         NO, PROCESS ORDINARILY          SBG 06/00  03367
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN         SBG 03/00  03368
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                            03369
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY      SBG 06/00  03370
         B     CEOVY2                                         SBG 06/00  03371
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.            SBG 03/00  03372
CEOVY2   DS    0H                                             SBG 09/00  03373
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03374
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03375
         BZ    CEOV2ND              NO. SKIP PUTTING OUT      SBG 09/00  03376
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03377
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03378
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03379
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                   03380
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2        03381
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           03382
         B     CEOV2ND              AND GET OUT                          03383
CEOV2F   DS    0H                                                        03384
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           03385
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03386
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03387
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?           SBG 05/00  03388
         BZ    CEOV2Z           NO.                           SBG 05/00  03389
         ST    R3,SAVE3REG                                               03390
         LA    R3,INAREA                                                 03391
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03392
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03393
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03394
         L     R3,SAVE3REG                                               03395
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03396
         B     LABCHEND                                       SBG 04/00  03397
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *            03398
CUHL     DS    0H             HANDLE USER HEADER LABELS                  03399
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03400
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG      03401
         ST    R3,SAVE3REG                                               03402
         LA    R3,INAREA                                                 03403
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03404
         BAL   R7,PRTUSER     PRINT LABEL INFO                           03405
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03406
         L     R3,SAVE3REG                                               03407
* ---------------- LABEL DUMPING CODE --------------------- *            03408
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03409
         BZ    CUHLEN               NO. SKIP PUTTING OUT                 03410
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03411
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO                   03412
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                       03413
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE            03414
* ---------------- LABEL DUMPING CODE --------------------- *            03415
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              03416
         B     LABCHEND                                                  03417
CUTL     DS    0H             HANDLE USER TRAILER LABELS                 03418
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03419
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG      03420
         ST    R3,SAVE3REG                                               03421
         LA    R3,INAREA                                                 03422
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03423
         BAL   R7,PRTUSER     PRINT LABEL INFO                           03424
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03425
         L     R3,SAVE3REG                                               03426
* ---------------- LABEL DUMPING CODE --------------------- *            03427
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03428
         BZ    CUTLEN               NO. SKIP PUTTING OUT                 03429
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03430
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO                   03431
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                       03432
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE            03433
* ---------------- LABEL DUMPING CODE --------------------- *            03434
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              03435
         B     LABCHEND                                                  03436
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *            03437
NOTLABEL NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG    SBG 04/00  03438
LABCHEND BR    R7                                             SBG 04/00  03439
* --------------------------------------------------------- * SBG 05/00  03440
*    BAL REGISTER IS R7.                                      SBG 05/00  03441
* --------------------------------------------------------- * SBG 05/00  03442
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS   SBG 04/00  03443
*                         ALTERED.                                       03444
         MVI   LINE-1,C' '                                               03445
         MVC   LINE,LINE-1           CLEAR OUTPUT LINE                   03446
         MVC   VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG           03447
         MVC   VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG           03448
         MVC   VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                 03449
         MVC   VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                 03450
* ----                                                                   03451
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS?  03452
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS             03453
         MVC   VOLALT+35(6),VOLSTG   MOVE NEW VOLSER VALUE TO MSG        03454
INDVVOLS DS    0H                                                        03455
* ----                                                                   03456
         MVC   VOLDDN(5),LINE        CLEAR FIELD                         03457
         MVC   VOLDDN(5),VOLDD       MOVE DD NAME IN                     03458
         MVC   LINE(133),VOLALT      MOVE MESSAGE TO PRT                 03459
         PUT   SYSPRINT,LINE         WRITE MESSAGE                       03460
         BR    R7                    RETURN TO CALLER                    03461
* --------------------------------------------------------- * SBG 04/00  03462
*    BAL REGISTER IS R7.                                      SBG 04/00  03463
* --------------------------------------------------------- * SBG 04/00  03464
PRTXXX1  DS    0H                                             SBG 05/00  03465
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03466
         MVI   LINE-1,C' '                                    SBG 05/00  03467
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03468
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03469
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03470
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL     SBG 05/00  03471
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03472
         MVC   XXX1DSN(17),4(R3)     DATASET NAME             SBG 05/00  03473
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03474
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER  SBG 05/00  03475
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03476
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER   SBG 05/00  03477
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03478
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS   SBG 05/00  03479
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS               03480
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS         03481
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03482
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS   SBG 05/00  03483
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03484
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS   SBG 05/00  03485
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03486
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03487
PRTXXX1R BR    R7                                             SBG 05/00  03488
* --------------------------------------------------------- * SBG 04/00  03489
*    BAL REGISTER IS R7.                                      SBG 04/00  03490
* --------------------------------------------------------- * SBG 04/00  03491
PRTXXX2  DS    0H                                             SBG 05/00  03492
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03493
         MVI   LINE-1,C' '                                    SBG 05/00  03494
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03495
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03496
         MVC   XXX2RFM(1),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03497
         MVC   XXX2RFM(1),4(R3)      RECFM                    SBG 05/00  03498
         MVC   XXX2BKL(5),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03499
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH             SBG 05/00  03500
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03501
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH            SBG 05/00  03502
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03503
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY             SBG 05/00  03504
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03505
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME           SBG 05/00  03506
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03507
         CLI   34(R3),C'P'           INDICATE IDRC?           SBG 05/00  03508
         BNE   PRX2NOI               NO. SAY NO               SBG 05/00  03509
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION        SBG 05/00  03510
         B     PRX2MOV                                        SBG 04/00  03511
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                             SBG 04/00  03512
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03513
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03514
PRTXXX2R BR    R7                                             SBG 05/00  03515
* --------------------------------------------------------- * SBG 04/00  03516
*    BAL REGISTER IS R7.                                      SBG 04/00  03517
* --------------------------------------------------------- * SBG 04/00  03518
PRTUSER  DS    0H                                             SBG 05/00  03519
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03520
         MVI   LINE-1,C' '                                    SBG 05/00  03521
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03522
         MVI   USERLBL-1,C' '                                            03523
         MVC   USERLBL(133),USERLBL-1                                    03524
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE          03525
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE                03526
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03527
PRTUSERR BR    R7                                                        03528
* --------------------------------------------------------- *            03529
*    BAL REGISTER IS R7.                                                 03530
* --------------------------------------------------------- *            03531
PRTBLCNT DS    0H                                                        03532
         MVI   LINE-1,C' '                                               03533
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           03534
         MVC   LINE(133),BLKCNTMS    MESSAGE TO PRINT LINE               03535
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03536
PRTBLCNE BR    R7                                                        03537
* --------------------------------------------------------- *            03538
*    BAL REGISTER IS R7.                                                 03539
* --------------------------------------------------------- *            03540
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS         03541
         ST    R7,SAVE7REG                                               03542
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                  03543
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET    03544
         MVC   OUTCCWPT(4),=A(BACKCCW)                                   03545
BACKEXT1 L     R7,SAVE7REG                                               03546
BACKEXTE BR    R7                                                        03547
* --------------------------------------------------------- *            03548
*    BAL REGISTER IS R7.                                                 03549
* --------------------------------------------------------- *            03550
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS       03551
         ST    R7,SAVE7REG                                               03552
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03553
         BZ    CLEARSV1                 NO. BYPASS CLEAR                 03554
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                 03555
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                          03556
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                       03557
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                       03558
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                    03559
CLEARSV1 L     R7,SAVE7REG                                               03560
CLEARSVE BR    R7                                                        03561
* --------------------------------------------------------- *            03562
*    BAL REGISTER IS R7.                                                 03563
* --------------------------------------------------------- *            03564
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE       03565
         ST    R7,SAVE7REG                                               03566
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03567
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION           03568
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *   03569
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2          03570
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX      03571
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?           03572
         BZ    FIXALL3                                                   03573
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?              03574
         BZ    FIXLAST2                                                  03575
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                       03576
         BZ    FIXLAST1                                                  03577
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR       03578
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *   03579
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2              03580
         L     R7,SAVE7REG                                               03581
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG    03582
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                    03583
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                           03584
         L     R7,SAVE7REG                                               03585
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE   03586
FIXLAST1 DS    0H               REPLACE EOF2                             03587
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                           03588
         L     R7,SAVE7REG                                               03589
         B     ADDEOF2          CREATE THE EOF2                          03590
FIXEXTL1 DS    0H                                                        03591
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                      03592
         L     R7,SAVE7REG                                               03593
FIXEXTLE BR    R7                                                        03594
* --------------------------------------------------------- *            03595
*    BAL REGISTER IS R7.                                                 03596
* --------------------------------------------------------- *            03597
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT      03598
*                             IOS USES DURING EXCP PROCESSING.           03599
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.    03600
* ------------------------------------------------------------------- *  03601
         MVC   OUTIOB(4),IOB01                                           03602
         MVC   OUTCSW(8),FUL2ZERO                                        03603
         MVC   OUTDCBPT(4),FUL2ZERO                                      03604
         MVC   OUTDCBPT+4(4),FUL2ZERO                                    03605
         MVC   OUTDCBPT+8(4),IOB02                                       03606
CLEARIOE BR    R7                                                        03607
* --------------------------------------------------------- *            03608
*    BAL REGISTER IS R7.                                                 03609
* --------------------------------------------------------- *            03610
CHANGVOL DS    0H             PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL  03611
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03612
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?    03613
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                  03614
         TM    LBLFLAG,X'04'  ARE WE WRITING A VOL1 LABEL?    SBG 05/00  03615
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03616
         TM    LBLFLAG,X'03'  IS THIS A HDR1 OR A HDR2?                  03617
         BNZ   CHANGVOE       NO. DON'T ATTEMPT TO CHANGE THIS.          03618
         TM    PARMFLG2,X'41' ARE WE CHANGING OUTPUT VOLSERS? SBG 05/00  03619
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03620
         MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                       03621
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03622
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION        03623
         CLI   TAPEOWNR,C' '  IS THERE A TAPEOWNER VALUE                 03624
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE   03625
         MVC   INAREA+41(10),TAPEOWNR    MOVE TAPE OWNER INFO IF ANY     03626
         MVC   LINE(133),LINE-1                                          03627
         MVC   OWNRTID(10),LINE          CLEAR FIELD                     03628
         MVC   OWNRTID(10),TAPEOWNR      MOVE OWNER INFO INTO MSG        03629
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03630
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03631
         MVC   LINE(133),OWNRMSG                                         03632
         PUT   SYSPRINT,LINE                                             03633
CHNOTOWN DS    0H                                                        03634
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS      03635
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS             03636
CHEXTLAB DS    0H                                                        03637
         TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?        03638
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN             03639
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03640
         BO    CHNOZAPV            YES, SKIP SECOND WRITE                03641
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                   03642
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                 03643
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?               03644
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.           03645
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?       03646
         BZ    CHNOZAPV            NO. BYPASS.                           03647
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    03648
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03649
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION        03650
         CLI   TAPEOWNR,C' '       IS THERE ANY CHANGE IN TAPEOWNR?      03651
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE           03652
         MVC   EXTLBLIN+41(10),TAPEOWNR   CHANGE TAPE OWNER TOO          03653
         MVC   LINE(133),LINE-1                                          03654
         MVC   OWNRTID(10),LINE          CLEAR FIELD                     03655
         MVC   OWNRTID(10),TAPEOWNR      MOVE OWNER INFO INTO MSG        03656
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03657
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03658
         MVC   LINE(133),OWNRMSG                                         03659
         PUT   SYSPRINT,LINE                                             03660
CHNOZAPV DS    0H                                                        03661
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS             03662
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03663
         BO    CHGWRIT             YES, SKIP SECOND WRITE                03664
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03665
         BO    CHGPRINT            YES, PRINT.                           03666
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       03667
         BO    CHGPRINT            YES, PRINT                            03668
         B     CHGWRIT                                                   03669
CHGPRINT DS    0H                                                        03670
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  03671
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03672
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   03673
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03674
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   03675
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            03676
         ST    R7,SAVE7RG1                                               03677
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  03678
         L     R7,SAVE7RG1                                               03679
CHGWRIT  DS    0H                                             SBG 05/00  03680
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03681
CHANGVOE BR    R7                  END OF ROUTINE - RETURN               03682
         SPACE 3                                                         03683
* --------------------------------------------------------- *            03684
*    BAL REGISTER IS R7.                                                 03685
* --------------------------------------------------------- *            03686
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                  03687
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED          03688
* --------------------------------------------------------- *            03689
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE             03690
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER               03691
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER               03692
         AR    R5,R2               ADD TO BYTE COUNT                     03693
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH              03694
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD           03695
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                   03696
ADDCNOOV DS    0H                                                        03697
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE        03698
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE        03699
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN               03700
* --------------------------------------------------------- *            03701
*    BAL REGISTER IS R7.                                                 03702
* --------------------------------------------------------- *            03703
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            03704
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              03705
* --------------------------------------------------------- *            03706
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          03707
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03708
         BE    MOVEHI09                                                  03709
         MVC   0(4,R3),0(R2)                                             03710
         B     MOVEHIEN                                                  03711
         LA    R2,1(,R2)                                                 03712
         LA    R3,1(,R3)                                                 03713
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03714
         BE    MOVEHI08                                                  03715
         MVC   0(3,R3),0(R2)                                             03716
         B     MOVEHIEN                                                  03717
         LA    R2,1(,R2)                                                 03718
         LA    R3,1(,R3)                                                 03719
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03720
         BE    MOVEHI07                                                  03721
         MVC   0(2,R3),0(R2)                                             03722
         B     MOVEHIEN                                                  03723
         LA    R2,1(,R2)                                                 03724
         LA    R3,1(,R3)                                                 03725
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03726
         BE    MOVEHIEN                                                  03727
         MVC   0(1,R3),0(R2)                                             03728
MOVEHIEN BR    R7                                                        03729
* --------------------------------------------------------- *            03730
*    BAL REGISTER IS R7.                                                 03731
* --------------------------------------------------------- *            03732
****                                                                     03733
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                             03734
****                                                                     03735
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                 03736
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                    03737
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,      03738
****                      THEN BACK SPACE FILE OVER TAPE MARK.           03739
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR         03740
****                                                                     03741
* --------------------------------------------------------- *            03742
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO     03743
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03744
         EXCP  INIOB          READ                                       03745
         WAIT  ECB=INECB      WAIT FOR READ                              03746
         TM    INCSW+4,X'01'  WAS TM READ?                               03747
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.               03748
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                03749
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                  03750
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03751
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                         03752
         L     R2,FULLWORK           LOAD FULLWORD LENGTH                03753
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03754
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                 03755
         L     R3,FULLWORK           LOAD FULLWORD LENGTH                03756
         SR    R2,R3                 R2=ACTUAL LENGTH READ               03757
         NI    ISLBLFLG,FF-X'01'     TURN OFF "ISLABEL" FLAG             03758
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?           03759
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE      03760
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                          03761
         BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE             03762
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                       03763
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?          03764
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS         03765
*                             NORMALLY WITHOUT CHANGING ANYTHING.        03766
*                             BUT IF IT IS A DATA FILE,                  03767
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE   03768
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK          03769
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03770
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.            03771
         EXCP  INIOB          DO THIS EXCP                               03772
         WAIT  ECB=INECB      WAIT FOR READ                              03773
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03774
         BNE   LBDQINER       NO -- ERROR                                03775
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03776
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03777
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR             03778
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR     03779
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE         03780
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03781
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ      03782
         EXCP  INIOB          DO THIS EXCP                               03783
         WAIT  ECB=INECB      WAIT FOR READ                              03784
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03785
         BNE   LBDQINER       NO -- ERROR                                03786
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03787
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03788
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE          03789
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03790
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE     03791
         EXCP  INIOB          DO THIS EXCP                               03792
         WAIT  ECB=INECB      WAIT FOR READ                              03793
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03794
         BNE   LBDQINER       NO -- ERROR                                03795
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03796
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03797
LBDQREND BR    R7                                                        03798
* --------------------------------------------------------- *            03799
*    BAL REGISTER IS R7.                                                 03800
* --------------------------------------------------------- *            03801
****                                                                     03802
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.        03803
****                                                                     03804
* --------------------------------------------------------- *            03805
HEXPRINT DS    0H                                                        03806
         TM    PARMFLG5,X'20' ARE WE DOING HEX PRINT?                    03807
         BZ    NOHEXPRO       NO. DON'T DO THIS CODE.                    03808
         ST    R5,R5HXPRT                                                03809
         L     R5,SAVTRTCS                                               03810
         USING TRTCSECT,R5                                               03811
         L     R0,BCTLIMIT    LOAD REGISTER FOR COMPARE                  03812
         C     R0,=F'0'       HAVE WE PRINTED ALL WE SAID?               03813
         BNH   NOHEXPRO       YES. DON'T EXECUTE THIS ROUTINE.           03814
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT      03815
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?           03816
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.           03817
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                   03818
MOVESIZ1 DS    0H                                                        03819
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                03820
         BCTR  R2,0           ONE LESS FOR EXECUTE                       03821
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03822
         EX    R2,MOVRULER    PUT IN HEX RULER                           03823
         PUT   SYSPRINT,LINE                                             03824
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03825
         EX    R2,MOVDATIN    MOVE RECORD TO WORK AREA                   03826
         EX    R2,PRHEXL0     TRANSLATE TO REMOVE UNPRINTABLES           03827
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03828
         EX    R2,MOVTOLIN    MOVE TRANSLATED DATA TO OUTPUT             03829
         PUT   SYSPRINT,LINE                                             03830
         EX    R2,MOVDATIN    MOVE RECORD TO WORK AREA                   03831
         EX    R2,PRHEXL1     TRANSLATE TO PRINT FIRST NIBBLE            03832
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03833
         EX    R2,MOVTOLIN    MOVE 1ST HALF OF HEX TO OUTPUT             03834
         PUT   SYSPRINT,LINE                                             03835
         EX    R2,MOVDATIN    MOVE RECORD TO WORK AREA                   03836
         EX    R2,PRHEXL2     TRANSLATE TO PRINT LAST NIBBLE             03837
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03838
         EX    R2,MOVTOLIN    MOVE 2ND HALF OF HEX TO OUTPUT             03839
         PUT   SYSPRINT,LINE                                             03840
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK      03841
         B     HEXPREND                                                  03842
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***             03843
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             03844
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             03845
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             03846
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             03847
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             03848
HEXPREND DS    0H                                                        03849
         L     R2,BYTESMVD    RESTORE R2 FOR LATER USE                   03850
NOHEXPRO DS    0H                                                        03851
         L     R5,R5HXPRT                                                03852
         DROP  R5                                                        03853
         BR    R7             RETURN TO CALLER                           03854
* --------------------------------------------------------- *            03855
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - - SBG 04/00  03856
         EJECT                                                           03857
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - *  03858
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED            03859
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO           03860
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT  03861
FUL2ZERO DC    2F'0'                                                     03862
IOB01    DC    X'02000000'                                               03863
IOB02    DC    X'00010000'                                               03864
PL4NO3   DC    PL4'3'                                                    03865
BLOKCNTP DC    F'0'                                                      03866
FILECNTP DC    F'1'                                                      03867
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES       03868
TOTBYH   DC    F'0'                                                      03869
TOTBYL   DC    F'0'                                                      03870
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES  03871
PRVBYH   DC    F'0'                                                      03872
PRVBYL   DC    F'0'                                                      03873
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE        03874
DBINFH   DC    F'0'                                                      03875
DBINFL   DC    F'0'                                                      03876
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL       03877
DBINH    DC    F'0'                                                      03878
DBINL    DC    F'0'                                                      03879
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS      03880
LABINH   DC    F'0'                                                      03881
LABINL   DC    F'0'                                                      03882
WORKA    DC    D'0'                                                      03883
WORKL    DC    D'0'                                                      03884
WORKP    DC    D'0'                                                      03885
SAV01MLT DC    D'0'                                                      03886
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     03887
HEXSAVE  DS    3F                    Register save for HEX macro         03888
BLOKCNT  DC    F'0'                                                      03889
FILECNT  DC    F'1'                                                      03890
LABELCNT DC    F'0'                                                      03891
SAVUNIT  DC    CL4' '                                                    03892
         DC    CL1' '         Need this to absorb blank from HEX macro   03893
SAVDDN   DC    CL5' '                                                    03894
SAVVOLSR DC    CL6' '                                                    03895
SAVBYTES DC    X'0000'                                                   03896
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE       03897
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT      03898
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT     03899
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                        03900
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT  03901
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL         03902
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE       03903
*              X'01'          TAPE IS SL                                 03904
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   03905
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS      03906
*              X'00'          WE ARE NOW WRITING DATA FROM THE           03907
*                             INPUT TAPE. X'01' IS OFF.                  03908
*              X'01'          WE ARE NOW WRITING LABELS FROM THE         03909
*                             EXTERNAL FILE                              03910
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK          03911
*              X'04'          WE CAME FROM THE ENDHEADR LABEL            03912
*              X'08'          WE CAME FROM THE LBLINEND LABEL            03913
*                             THIS MEANS EOF OF THE LABADDIN FILE        03914
*              X'10'          FINISHED FIXING LABELS                     03915
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       03916
*              X'00'          DATA IS NOT A LABEL                        03917
*              X'01'          DATA IS A LABEL                            03918
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               03919
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             03920
*              X'02'          BECAUSE OF SYSIN    DD MISSING             03921
*              X'04'          BECAUSE OF LABADDIN DD MISSING             03922
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                03923
*              X'01'          LABLDUMP DD IS OPEN                        03924
*              X'02'          SYSIN    DD IS OPEN                        03925
*              X'04'          LABADDIN DD IS OPEN                        03926
OUTERFLG DC    X'00'          FLAG IF WTOR ISSUED BECAUSE OF AN ERROR    03923
*              X'01'          ERROR WAS PRESENT                          03924
OUTBYT   DS    0F                                                        03927
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER        03928
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE             03929
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY)  03930
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS        03931
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES         03932
TWO31    DC    P'2147483648'       2 TO THE 31ST                         03933
TAPEOWNR DC    CL10' '                                                   03934
INVOLUME DC    CL6'      '                                    SBG 03/00  03935
         DC    C'      '                                                 03936
         DC    C'0'                                                      03937
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      03938
         DC    C'0'                                                      03939
BLKCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      03940
         DC    C'      '                                                 03941
DWORD    DC    D'0'                                                      03942
QWORD    DS    PL16                                                      03943
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1        SBG 03/00  03944
         CNOP  0,8                                                       03945
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'              SBG 03/00  03946
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'              SBG 03/00  03947
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'FFFF'              SBG 03/00  03948
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         03949
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE 2 FILES   03950
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE ONE FILE  03951
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         03952
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE BLOCK     03953
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         03954
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE BLOCK     03955
         DC    X'3F',AL3(INAREA),X'6000',X'FFFF'     FWD SPACE FILE      03956
         DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACK OVER T.M.      03957
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         03958
INECB    DC    F'0'                                                      03959
INIOB    DC    X'02000000'                                               03960
         DC    A(INECB)                                                  03961
INCSW    DC    2F'0'                                                     03962
INCCWPT  DC    A(INCCW)                                                  03963
         DC    A(IN)                                                     03964
         DC    F'0'                                                      03965
         DC    X'00010000'                                               03966
OUTECB   DC    F'0'                                                      03967
OUTIOB   DC    X'02000000'                                               03968
         DC    A(OUTECB)                                                 03969
OUTCSW   DC    2F'0'                                                     03970
OUTCCWPT DC    A(OUTCCW)                                                 03971
OUTDCBPT DC    A(OUT1)                                                   03972
         DC    F'0'                                                      03973
         DC    X'00010000'                                               03974
REWECB   DC    F'0'                                                      03975
REWIOB   DC    X'02000000'                                               03976
         DC    A(REWECB)                                                 03977
REWCSW   DC    2F'0'                                                     03978
         DC    A(REWCCW)                                                 03979
REWDCBPT DC    A(OUT1)                                                   03980
         DC    F'0'                                                      03981
         DC    X'00010000'                                               03982
         SPACE 3                                                         03983
DDOCHG   DC    C'     '                                                  03984
DDOUT1   DC    C'OUT1 '                                                  03985
DDOUT2   DC    C'OUT2 '                                                  03986
DDOUT3   DC    C'OUT3 '                                                  03987
DDOUT4   DC    C'OUT4 '                                                  03988
DDOUT5   DC    C'OUT5 '                                                  03989
DDOUT6   DC    C'OUT6 '                                                  03990
DDOUT7   DC    C'OUT7 '                                                  03991
DDOUT8   DC    C'OUT8 '                                                  03992
DDOUT9   DC    C'OUT9 '                                                  03993
DDOUT10  DC    C'OUT10'                                                  03994
DDOUT11  DC    C'OUT11'                                                  03995
DDOUT12  DC    C'OUT12'                                                  03996
DDOUT13  DC    C'OUT13'                                                  03997
DDOUT14  DC    C'OUT14'                                                  03998
DDOUT15  DC    C'OUT15'                                                  03999
DDOUT16  DC    C'OUT16'                                                  04000
FLAGLIT  DC    C' - FLAGS - '                                            04001
* --------------------------                                             04002
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     04003
*              X'01'          WE ARE IN A HDR GROUP                      04004
*              X'02'          WE ARE IN A EOF GROUP                      04005
*              X'04'          WE ARE IN A EOV GROUP                      04006
* --------------------------                                             04007
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE      04008
FLAG1    DC    X'00'                                                     04009
OP1      EQU   X'80'                                                     04010
OP2      EQU   X'40'                                                     04011
OP3      EQU   X'20'                                                     04012
OP4      EQU   X'10'                                                     04013
OP5      EQU   X'08'                                                     04014
OP6      EQU   X'04'                                                     04015
OP7      EQU   X'02'                                                     04016
OP8      EQU   X'01'                                                     04017
FLAG2    DC    X'00'                                                     04018
OP9      EQU   X'80'                                                     04019
OP10     EQU   X'40'                                                     04020
OP11     EQU   X'20'                                                     04021
OP12     EQU   X'10'                                                     04022
OP13     EQU   X'08'                                                     04023
OP14     EQU   X'04'                                                     04024
OP15     EQU   X'02'                                                     04025
OP16     EQU   X'01'                                                     04026
FLAG2A   DC    X'00'                                          SBG 03/00  04027
ERR      EQU   X'02'                                                     04028
EOV      EQU   X'01'                                                     04029
FF       EQU   X'FF'                                                     04030
FLAG3    DC    X'00'                                                     04031
FLAG4    DC    X'00'                                                     04032
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE     SBG 03/00  04033
L80FLAG  DC    X'00'                                          SBG 03/00  04034
*              X'01'    LAST DATA WAS 80 BYTE RECORD          SBG 03/00  04035
* ---------- *                                                           04036
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                      04037
*              x'01'    Yes.                                             04038
* ---------- *                                                           04039
LBLFLAG  DC    X'00'    FLAG WHEN TAPE LABELS ARE BEING READ IN          04040
*              X'01'    HDR1 HAS BEEN SEEN                    SBG 03/00  04041
*              X'02'    HDR2 HAS BEEN SEEN                    SBG 03/00  04042
*              X'04'    VOL1 HAS BEEN SEEN                    SBG 03/00  04043
*              X'08'    HDR1 IS FROM AN INITTED TAPE          SBG 03/00  04044
*              X'10'    EOF1 HAS BEEN SEEN                    SBG 04/00  04045
*              X'20'    EOF2 HAS BEEN SEEN                    SBG 04/00  04046
*              X'40'    EOV1 HAS BEEN SEEN                    SBG 04/00  04047
*              X'80'    EOV2 HAS BEEN SEEN                    SBG 04/00  04048
* ---------- *                                                           04049
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN   04050
*              X'01'    HDR1 HAS BEEN READ IN                            04051
*              X'02'    HDR2 HAS BEEN READ IN                            04052
*              X'04'    VOL1 HAS BEEN READ IN                            04053
*              X'08'    UHL  HAS BEEN READ IN                            04054
*              X'10'    EOF1 HAS BEEN READ IN                            04055
*              X'20'    EOF2 HAS BEEN READ IN                            04056
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN           04057
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN           04058
* ---------- *                                                           04059
STRIPFLG DC    X'00'                                                     04060
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.    04061
DATFLAG  DC    X'00'                                          SBG 03/00  04062
*              X'10'    NO REAL DATA HAS BEEN READ YET        SBG 03/00  04063
* --------------------------------------------------------- * SBG 04/00  04064
VOLDD    DC    C'     '                                                  04065
STOR7REG DS    F                                                         04066
TOTB7REG DS    F                                                         04067
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST       04068
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST       04069
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04070
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                        04071
         SPACE 3                                                         04072
LABELITH DC    CL80'----ENDOFLABELHEADER '                               04073
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            04074
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               04075
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            04076
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *   04077
VOL1LABL DS    0CL80                                                     04078
VOL1LIT  DC    CL4'VOL1'                                                 04079
VOL1SERL DC    CL6' '                                                    04080
VOL1FIL1 DC    CL31' '                                                   04081
VOL1ONER DC    CL10' '                                                   04082
VOL1FIL2 DC    CL29' '                                                   04083
* ------------------------ INITIALIZATION OF VOLUMES --------------- *   04084
HDR1INIT DS    0CL80                                                     04085
HDR1ILIT DC    CL4'HDR1'                                                 04086
HDR1IFIL DC    76C'0'                                                    04087
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *   04088
TOTWLINE DC    C' TOTAL BYTES WITHOUT LABELS: '                          04089
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04090
         DC    CL78' '                                                   04091
TOTLLINE DC    C' TOTAL BYTES IN TAPE LABELS: '                          04092
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04093
         DC    CL78' '                                                   04094
TOTBLINE DC    C' TOTAL BYTES READ ON INPUT : '                          04095
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04096
         DC    CL78' '                                                   04097
BLKCNTMS DC    C' BLOCK COUNTS IN EOF1 AND EOV1 ARE BEING CORRECTED FO'  04098
         DC    C'R TAPE COPY OPERATION '                                 04099
         DC    CL58' '                                                   04100
INNOTOPN DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM'  04101
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE '  04102
         DC    C'A PARM OF INITVOLS.'                                    04103
         DC    CL8' '                                                    04104
LDMPOUTM DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               '  04105
         DC    C'                             MEMBER=         VOLUME= '  04106
         DC    C'                          '                             04107
LDMPINMS DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               '  04108
         DC    C'                             MEMBER=         VOLUME= '  04109
         DC    C'                          '                             04110
LDMPMSG  DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L'  04111
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04112
         DC    C' MULTIPLE OF 80           '                             04113
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04114
         DC    C' IS TREATED AS NL.                                   '  04115
         DC    CL27' '                                                   04116
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04117
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  04118
         DC    CL27' '                                                   04119
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  04120
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  04121
         DC    CL27' '                                                   04122
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 04123
         DC    CL6'&HEXDFLM'                                             04124
         DC    C' RECORDS WILL'                                          04125
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  04126
         DC    C'SYSIN.'                                                 04127
         DC    CL17' '                                                   04128
STRPMSG  DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS '  04129
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP'  04130
         DC    C'UT TAPES.                 '                             04131
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S'  04132
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04133
         DC    C' MULTIPLE OF 80           '                             04134
NLABMSG  DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C'  04135
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL '  04136
         DC    C'IMAGES.                   '                             04137
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  04138
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  04139
         DC    C'                           '                            04140
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ'  04141
         DC    C'ing a Tape Mark right now.                           '  04142
         DC    C'                          '                             04143
FORCENLM DC    C' *** File Limiting by NL file numbers has been forced'  04144
         DC    C'.  Divide by 3 for the SL file number ***            '  04145
         DC    C'                          '                             04146
FORCESLM DC    C' *** File Limiting by SL file numbers has been forced'  04147
         DC    C'.  Multiply by 3 for the NL file number ***          '  04148
         DC    C'                          '                             04149
TWOFORCE DC    C' *** File Limiting by SL and NL file numbers both spe'  04150
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no'  04151
         DC    C't code PARM=SLLIM.        '                             04152
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '         04153
         DC    C'TERMINATED '                                            04154
         DC    76C'*'                                                    04155
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '    04156
         DC    82C'*'                                                    04157
VOLALT   DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'   SBG 03/00  04158
         DC    C' FOR DDNAME '                                           04159
VOLDDN   DC    C'     '                                                  04160
VOLFILL  DC    75C' '                    VOL1 CHANGE MESSAGE  SBG 03/00  04161
OWNRMSG  DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                 04162
OWNRTID  DC    C'          '                                             04163
OWNRLIT1 DC    C' FOR DDNAME '                                           04164
OWNRDDO  DC    C'     '                                                  04165
OWNRFIL2 DC    68C' '                                                    04166
LTMRPT   DC    C' LEADING TAPE MARK WAS '                     SBG 03/00  04167
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED  SBG 03/00  04168
         DC    103C' '                                        SBG 03/00  04169
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '  SBG 06/00  04170
         DC    C'EOV2EOF PARM OR OPTION'                      SBG 06/00  04171
         DC    69C' '                                         SBG 06/00  04172
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                           04173
INITMSG  DC    C' INITTED TAPE HAS BEEN '                                04174
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                           04175
INITSER  DC    C'      '                                      SBG 03/00  04176
INITBLNK DC    76C' '                                         SBG 03/00  04177
VOL1LBL  DC    C' VOL1 LABEL HAS BEEN DETECTED - VOLSER = '   SBG 03/00  04178
VOL1SER  DC    C'      '                                      SBG 03/00  04179
VOL1OWNT DC    C'     OWNER = '                               SBG 04/00  04180
VOL1OWNR DC    C'          '                                  SBG 04/00  04181
VOL1BLNK DC    63C' '                                         SBG 03/00  04182
         DC    C' '                                                      04183
USERLBL  DC    81C' '                                         SBG 03/00  04184
         DC    52C' '                                                    04185
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                       SBG 05/00  04186
XXX1VOL  DC    C'      '                                      SBG 05/00  04187
XXX1DSNL DC    C' DSN='                                       SBG 05/00  04188
XXX1DSN  DC    C'                 '                           SBG 05/00  04189
XXX1DSQL DC    C' DS SEQ #: '                                 SBG 05/00  04190
XXX1DSQ  DC    C'    '                                        SBG 05/00  04191
XXX1VSQL DC    C' VOL SEQ #: '                                SBG 05/00  04192
XXX1VSQ  DC    C'    '                                        SBG 05/00  04193
XXX1BLCL DC    C' BLK CNT: '                                  SBG 05/00  04194
XXX1BLCH DC    C'    '                                        SBG 05/00  04195
XXX1BLC  DC    C'      '                                      SBG 05/00  04196
XXX1CRDL DC    C' CRDATE: '                                   SBG 05/00  04197
XXX1CRD  DC    C'      '                                      SBG 05/00  04198
XXX1EXDL DC    C' EXDATE: '                                   SBG 05/00  04199
XXX1EXD  DC    C'      '                                      SBG 05/00  04200
XXX1BLNK DC    30C' '                                         SBG 03/00  04201
XXX2LBL  DC    C' XXX2 LABEL: RECFM= '                        SBG 05/00  04202
XXX2RFM  DC    C' '                                           SBG 05/00  04203
XXX2BKLL DC    C'   BLOCK LENGTH: '                           SBG 05/00  04204
XXX2BKL  DC    C'     '                                       SBG 05/00  04205
XXX2RCLL DC    C'   RECORD LENGTH: '                          SBG 05/00  04206
XXX2RCL  DC    C'     '                                       SBG 05/00  04207
XXX2TDNL DC    C'  TAPE DEN: '                                SBG 05/00  04208
XXX2TDN  DC    C' '                                           SBG 05/00  04209
XXX2JSTL DC    C'   JOB/JOB STEP: '                           SBG 05/00  04210
XXX2JST  DC    C'                 '                           SBG 05/00  04211
XXX2IDRL DC    C'   IDRC? '                                   SBG 05/00  04212
XXX2IDR  DC    C'   '                                         SBG 05/00  04213
XXX2BLNK DC    8C' '                                          SBG 03/00  04214
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '        04215
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '               04216
OUTCFCNT DC    C'XXXXXXXXXX'                                             04217
         DC    C'  Bytes:'                                               04218
OUTCBCNT DC    CL26' '                                                   04219
         DC    C' '                                                      04220
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '        04221
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04222
         DC    40C'*'                                                    04223
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '        04224
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04225
         DC    40C'*'                                                    04226
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '        04227
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04228
         DC    40C'*'                                                    04229
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'               04230
FILEPBYT DS    0CL44                                                     04231
FILEDFL1 DC    C' '                                                      04232
FILECONT DC    C'          '                                             04233
FILEDFL2 DC    C' '                                                      04234
FILEBYTE DC    C' 9,999,999,999,999,999,999'                             04235
         DC    C' BYTES'                                                 04236
FILETBYT DS    0CL44                                                     04237
FILEDFL3 DC    C'    '                                                   04238
FILECUMT DC    C'          '                                             04239
FILEDFL4 DC    C' '                                                      04240
FILETBYE DC    C' 9,999,999,999,999,999,999'                             04241
         DC    8C' '                                                     04242
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'     04243
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'     04244
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                      04245
         DC    C'       '          BLANKS FOR COVERING UP     SBG 03/00  04246
READOMSG DC    C'0THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX 04247
               LSER: XXXXXX '                                 SBG 06/00  04248
         DC    66C' '                                         SBG 06/00  04249
SUCCESSR DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX 04250
               ERIAL XXXXXX '                                 SBG 06/00  04251
         DC    66C' '                                         SBG 06/00  04252
         DC    C' '                                                      04253
HEXPRTWK DC    CL133' '                                                  04254
         DC    C' '                                                      04255
LINE     DC    CL133' '                                                  04256
         DC    C' '                                                      04257
SAVELINE DC    CL133' '                                                  04258
LINE44   DC    CL44' '                                                   04259
RULERHEX DS    0CL132                                                    04260
         DC    C'----+----1----+----2----+----3----+----4----+----5--'   04261
         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  04262
         DC    C'----1----+----2----+----3----+----4'                    04263
REPLY    DC    C'      '                                                 04264
COPIED   DC    C'COPIED '                                     SBG 03/00  04265
SKIPPED  DC    C'SKIPPED'                                     SBG 03/00  04266
FULLWORK DS    0F                                             SBG 03/00  04267
         DC    H'0'                                           SBG 03/00  04268
HALFWORK DC    H'0'                HALFWORD WORK AREA         SBG 03/00  04269
         DC    2F'0'               FILLER                     SBG 05/00  04270
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     04283
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW    04271
* --------------------------------------------------------- * SBG 05/00  04272
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                04273
PARMFLG1 DC    X'00'                                                     04274
*              X'DE'    LABEL INFORMATION WILL BE PRINTED                04275
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED               04276
PARMFLG2 DC    X'00'                                                     04277
PARMFLG3 DC    X'00'                                                     04278
PARMFLG4 DC    X'00'                                                     04279
PARMFLG5 DC    X'00'                                                     04280
PARMFLG6 DC    X'00'
PARMFLG7 DC    X'00'
PARMFLG8 DC    X'00'
PARMFLG9 DC    X'00'
PARMFLGA DC    X'00'
PARMFLLN EQU   *-PARMFLGS                                                04281
* --------------------------------------------------------- * SBG 05/00  04282
         DS    0F                                                        05517
STRTVALU DS    0CL(ENDVALUE)                                             05518
         DC    A(ENDVALUE)                                               05519
PARMSLEN DC    F'0'                LENGTH OF PARMS                       05520
*                                  Upon entry to PARMCHEK, contains
*                                  the PARM address from COPYMODS,
*                                  which gets overlaid.
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       05521
*                                  Upon entry to PARMCHEK, contains
*                                  the PARM address from COPYMODS,
*                                  which gets overlaid.
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               05522
*                                  Upon entry to PARMCHEK, contains
*                                  the PARM length from COPYMODS,
*                                  which gets overlaid.
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05523
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05524
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05525
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   05526
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05527
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05528
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05529
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05530
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05531
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 05532
         DC    CL7' '              FILLER                                05533
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            05534
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04302
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          05536
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  05537
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      05538
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         05539
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         05540
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         05541
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       05542
TAPEOWN  DC    CL10' '                                                   05543
OVERFLAG DC    X'00'                                                     05544
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               05545
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    05546
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         05547
LIMCHAR  DC    CL10' '                                                   05548
LABCHAR  DC    CL10' '                                                   05549
PRTCHAR  DC    CL10' '                                                   05550
ENDVALUE EQU   (*-PARMSLEN)+4                                            05551
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04302
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE    04319
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     04320
* --------------------------------------------------------- *            04321
*              FORMAT OF PARM TABLE                                      04322
*              ONE ENTRY IS 20 BYTES                                     04323
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               04324
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 04325
*                               X'00' SAYS TURN FLAG ON                  04326
*                               X'10' SET ENTRY AS A DEFAULT             04327
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               04328
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                04329
*                                WHICH ALLOWS FOR 80 PARMS               04330
*                                THAT DON'T HAVE TO BE                   04331
*                                SEPARATED BY A COMMA.                   04332
PBYTES   EQU   10               NUMBER OF PARM SWITCH BYTES              04333
* --------------------------------------------------------- *            04334
EFFS     DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'               04335
* --------------------------------------------------------- *            04336
         SPACE 3                                                         04337
         LTORG                                                           04338
         SPACE 3                                                         04339
         DS    0D                                             SBG 09/00  04340
LBNEXLST DC    X'87',AL3(LBNJFCB)                                        04341
LBNJFCB  DC    44F'0'                                                    04342
         DS    0D                                             SBG 09/00  04343
LBLEXLST DC    X'87',AL3(LBLJFCB)                                        04344
LBLJFCB  DC    44F'0'                                                    04345
         DS    0D                                             SBG 05/00  04346
OUTEXLST DC    X'87',AL3(OUTJFCB)                                        04347
OUTJFCB  DC    44F'0'                                                    04348
         DS    0D                                             SBG 06/00  04349
INEXLST  DC    X'87',AL3(INJFCB)                              SBG 06/00  04350
INJFCB   DC    44F'0'                                         SBG 06/00  04351
         SPACE 3                                                         04352
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           04353
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           04354
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           04355
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             04356
VOLCHG   DC    C'      '                                                 04357
VOLSTG   DC    C'      '    CARD VOLUME NAME - TO OVERLAY OTHERS         04358
VOLALL   DS    0CL96         16 X 6                                      04359
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04360
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04361
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04362
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04363
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04364
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04365
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04366
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04367
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04368
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04369
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04370
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04371
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04372
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04373
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04374
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04375
* --------------------------------------------------------- * SBG 05/00  04376
         SPACE 3                                                         04377
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X 04378
               EXLST=INEXLST                                             04379
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X 04380
               EXLST=OUTEXLST                                            04381
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X 04382
               EXLST=OUTEXLST                                            04383
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X 04384
               EXLST=OUTEXLST                                            04385
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X 04386
               EXLST=OUTEXLST                                            04387
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X 04388
               EXLST=OUTEXLST                                            04389
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X 04390
               EXLST=OUTEXLST                                            04391
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X 04392
               EXLST=OUTEXLST                                            04393
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X 04394
               EXLST=OUTEXLST                                            04395
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X 04396
               EXLST=OUTEXLST                                            04397
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X 04398
               EXLST=OUTEXLST                                            04399
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X 04400
               EXLST=OUTEXLST                                            04401
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X 04402
               EXLST=OUTEXLST                                            04403
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X 04404
               EXLST=OUTEXLST                                            04405
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X 04406
               EXLST=OUTEXLST                                            04407
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X 04408
               EXLST=OUTEXLST                                            04409
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X 04410
               EXLST=OUTEXLST                                            04411
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04412
               BLKSIZE=133                                               04413
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X 04414
               EXLST=LBLEXLST                                            04415
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X 04416
               EXLST=LBNEXLST,EODAD=LBLINEND                             04417
         DC    C' '              BLANK FOR CLEARING AREA      SBG 09/00  04418
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP   SBG 09/00  04419
SAVE2TO3 DC    2F'0'                                                     04420
SAVE3REG DC    F'0'                                                      04421
SAVE7BA1 DC    F'0'                                                      04422
SAVE7REG DC    F'0'                                                      04423
SAVE7BAL DC    F'0'                                                      04424
SAVE7RG1 DC    F'0'                                                      04425
SAVE7RG2 DC    F'0'                                                      04426
SAVE7RG3 DC    F'0'                                                      04427
SAVE7RG4 DC    F'0'                                                      04428
R5HXPRT  DC    F'0'                                                      04429
R7HXPRT  DC    F'0'                                                      04430
SAVTRTCS DC    F'0'                                                      04431
ENTRYPT  DC    F'0'                                                      04432
PARMSAVE DC    F'0'                                                      04433
PARMADDR DC    F'0'                                                      04434
USERSAVE DC    F'0'                                                      04435
         DC    CL4' '                                                    04436
HDR1SAV  DC    CL80' '                                                   04437
HDR2SAV  DC    CL80' '                                                   04438
UHL1SAV  DC    CL80' '                                                   04439
UHL2SAV  DC    CL80' '                                                   04440
UHL3SAV  DC    CL80' '                                                   04441
UHL4SAV  DC    CL80' '                                                   04442
UHL5SAV  DC    CL80' '                                                   04443
UHL6SAV  DC    CL80' '                                                   04444
UHL7SAV  DC    CL80' '                                                   04445
UHL8SAV  DC    CL80' '                                                   04446
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          04447
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 04448
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  04449
TRTCSECT CSECT                                                           04450
TRTBL0   DS    0D                                                        04451
         DC    XL16'40404040404040404040404040404040'                    04452
         DC    XL16'40404040404040404040404040404040'                    04453
         DC    XL16'40404040404040404040404040404040'                    04454
         DC    XL16'40404040404040404040404040404040'                    04455
         DC    XL16'404040404040404040404A4B4C4D4E4F'                    04456
         DC    XL16'504040404040404040405A5B5C5D5E5F'                    04457
         DC    XL16'606140404040404040406A6B6C6D6E6F'                    04458
         DC    XL16'404040404040404040407A7B7C7D7E7F'                    04459
         DC    XL16'40818283848586878889404040404040'                    04460
         DC    XL16'40919293949596979899404040404040'                    04461
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    04462
         DC    XL16'40404040404040404040404040404040'                    04463
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    04464
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    04465
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    04466
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    04467
TRTBL1   DS    0D                                                        04468
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    04469
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    04470
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    04471
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    04472
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    04473
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    04474
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    04475
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    04476
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    04477
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    04478
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    04479
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    04480
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    04481
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    04482
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    04483
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    04484
TRTBL2   DS    0D                                                        04485
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04486
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04487
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04488
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04489
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04490
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04491
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04492
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04493
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04494
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04495
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04496
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04497
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04498
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04499
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04500
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04501
         EJECT                                                           04502
JFCBLK   DSECT                                                           04503
         IEFJFCBN LIST=YES                                               04504
COPYMODS CSECT                                                           04505
INAREA   DS    CL65535                                        SBG 03/00  04506
#PAN$AUD CSECT                                                           04507
$PAN#AUD DC    CL30'LEVEL 064 COPYMODS  08/07/03 '                       04508
         END                                                             04509
*          DATA SET COPYMOPT   AT LEVEL 064 AS OF 08/07/03               04510
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                 04511
**************************************************************           04512
**************************************************************           04513
**                                                          **           04514
**                                                          **           04515
**  MODULE: COPYMOPT                                        **           04516
**                                                          **           04517
**                                                          **           04518
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **           04519
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **           04520
**            PROGRAM.                                      **           04521
**                                                          **           04522
**                                                          **           04523
**************************************************************           04524
**************************************************************           04525
         EJECT                                                           04526
         YREGS                                                           04527
COPYMOPT CSECT                                                           04528
         USING *,R15                                          SBG 03/00  04529
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.     04530
         B     EYECATCH                                       SBG 03/00  04531
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  04532
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '   04533
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  04534
SAVEAREA DC    18F'0'                                                    04535
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  04536
         SAVE  (14,12)                                                   04537
         LR    R5,R1          SAVE PASSED QUANTITY                       04538
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   04539
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          04540
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         04541
         LR    R13,R1               NEW SAVE AREA ADDRESS                04542
         DROP  R15                                                       04543
* -----                       SET UP TWO BASE REGISTERS                  04544
         USING COPYMOPT,R12,R11                                          04545
         LR    R12,R15                                                   04546
         LA    R11,4095(,R12)                                            04547
         LA    R11,1(,R11)                                               04548
         LR    R1,R5          RESTORE PARM POINTER                       04549
OPTMOVE  DS    0H                                                        04550
         MVC   PARMTBIN(10),0(R1)     MOVE PARMS INTO THIS PGM           04551
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM       04552
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM       04553
         OPEN  (SYSPRINT,OUTPUT)                                         04554
         MVC   LINE(133),LINE-1       CLEAR LINE                         04555
         MVC   LINE(133),DISPLINH                                        04556
         PUT   SYSPRINT,LINE                                             04557
         MVC   LINE(133),LINE-1       CLEAR LINE                         04558
         MVC   LINE(133),DISPLINO                                        04559
         PUT   SYSPRINT,LINE                                             04560
         MVC   LINE(133),LINE-1       CLEAR LINE                         04561
         PUT   SYSPRINT,LINE                                             04562
         BAL   R7,FILLOPTS                                               04563
         MVC   LINE(133),LINE-1       CLEAR LINE                         04564
         MVC   LINE(133),DISPOP02                                        04565
         PUT   SYSPRINT,LINE                                             04566
         MVC   LINE(133),LINE-1       CLEAR LINE                         04567
         MVC   LINE(133),DISPOP01                                        04568
         PUT   SYSPRINT,LINE                                             04569
         MVC   LINE(133),LINE-1       CLEAR LINE                         04570
         MVC   LINE(133),DISPOP03                                        04571
         PUT   SYSPRINT,LINE                                             04572
         MVC   LINE(133),LINE-1       CLEAR LINE                         04570
         PUT   SYSPRINT,LINE                                             04569
         CLOSE (SYSPRINT)                                                04573
* ----------------------------------------------------------------- *    04574
THEEND   EQU   *                                                         04575
THEEND1  DS    0H                                                        04576
         L     R13,4(,R13)                                               04577
         RETURN (14,12),RC=0                                             04578
         EJECT                                                           04579
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *    04580
* ----------------------------------------------------------------- *    04581
*    BAL REGISTER IS R7.                                            *    04582
* ------------------------------------------------------------------*    04583
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT            04584
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE        04585
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE        04586
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION     04587
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                  04588
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                        04589
         BE    FILOPEND                                                  04590
         MVC   PARMWORK(10),0(R3)     MOVE BYTES TO BE TESTED            04591
         NC    PARMWORK(10),PARMTBIN  CHECK IF BYTE IS ON                04592
         BZ    FILLZER                                                   04593
         MVC   0(10,R2),10(R3)        MOVE OPTION TO DISPLAY - BIT ON    04594
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04595
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04596
         BCT   R4,FILLOOP             LOOP BACK                          04597
         B     FILNEXTB                                                  04598
FILLZER  DS    0H                                                        04599
         MVC   0(10,R2),20(R3)        MOVE OPTION TO DISPLAY - BIT OFF   04600
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04601
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04602
         BCT   R4,FILLOOP             LOOP BACK                          04603
FILNEXTB DS    0H                                                        04604
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                  04605
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE      04606
         PUT   SYSPRINT,LINE                                             04607
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE    04608
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE     04609
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP     04610
FILOPEND BR    R7                                                        04611
* ----------------------------------------------------------------- *    04612
* ----------  CONSTANTS  ------------------------------------------ *    04613
         LTORG                                                           04614
         DS    0F                                                        04615
PARMTBIN DC    X'00000000000000000000'                                   04616
PARMWORK DC    X'00000000000000000000'                                   04617
PARMZERO DC    X'00000000000000000000'                                   04618
OPTABLE  DS    0D                                                        04619
         DC    X'20000000000000000000',C'LTMSKIP   ',C'LTMCOPY   '       04620
OPTENTLN EQU   *-OPTABLE                                                 04621
         DC    X'01000000000000000000',C'BLKCNT    ',C'NOBLKCNT  '       04622
         DC    X'02000000000000000000',C'HDR1      ',C'NOHDR1    '       04623
         DC    X'04000000000000000000',C'HDR2      ',C'NOHDR2    '       04624
         DC    X'08000000000000000000',C'EOF1      ',C'NOEOF1    '       04625
         DC    X'10000000000000000000',C'EOF2      ',C'NOEOF2    '       04626
         DC    X'40000000000000000000',C'EOV1      ',C'NOEOV1    '       04627
         DC    X'80000000000000000000',C'EOV2      ',C'NOEOV2    '       04628
         DC    X'00100000000000000000',C'LABLDUMP  ',C'NOLABLDU  '       04629
         DC    X'00200000000000000000',C'SYSIN     ',C'NOSYSIN   '       04630
         DC    X'00400000000000000000',C'OUTVOL ***',C'NOOUTVOL  '       04631
         DC    X'00800000000000000000',C'LABADDIN  ',C'NOLABADD  '       04632
         DC    X'00010000000000000000',C'CHGVOL    ',C'NOCHGVOL  '       04633
         DC    X'00020000000000000000',C'VOLLBL    ',C'NOVOLLBL  '       04634
         DC    X'00040000000000000000',C'EOVCHG    ',C'NOEOVCHG  '       04635
         DC    X'00080000000000000000',C'READONLY  ',C'WRITE     '       04636
         DC    X'00001000000000000000',C'PRADDLBL  ',C'NOPRADDL  '       04637
         DC    X'00002000000000000000',C'CORRBLKS  ',C'NOCORRBL  '       04638
         DC    X'00004000000000000000',C'NOEXNULL  ',C'EXNULL    '       04639
         DC    X'00008000000000000000',C'LBLFIX    ',C'NOLBLFIX  '       04640
         DC    X'00000100000000000000',C'INITVOLS  ',C'          '       04641
         DC    X'00000200000000000000',C'LIMFILE **',C'NOLIMFIL  '       04642
         DC    X'00000400000000000000',C'BYTES     ',C'NOBYTES   '       04643
         DC    X'00000800000000000000',C'CUMTOT    ',C'NOCUMTOT  '       04644
         DC    X'00000010000000000000',C'LIMLABEL *',C'NOLIMLAB  '       04645
         DC    X'00000020000000000000',C'OPTION    ',C'NOOPTION  '       04646
         DC    X'00000040000000000000',C'SUPPWTO   ',C'NOSUPPWT  '       04647
         DC    X'00000080000000000000',C'LBDQUICK  ',C'NOLBDQUI  '       04648
         DC    X'00000001000000000000',C'CUMSEP    ',C'NOCUMSEP  '       04649
         DC    X'00000002000000000000',C'STRIP     ',C'NOSTRIP   '       04650
         DC    X'00000004000000000000',C'NLLIM     ',C'NONLLIM   '       04651
         DC    X'00000008000000000000',C'SLLIM     ',C'NOSLLIM   '       04652
         DC    X'00000000100000000000',C'IDRCOFF   ',C'NOIDRCOF  '       04653
HXPRT    DC    X'00000000200000000000',C'HEXPRT    ',C'NOHEXPRT  '       04654
         DC    X'00000000400000000000',C'UNEXWTO   ',C'NOUNEXWT  '       04655
         DC    X'00000000800000000000',C'          ',C'          '       04656
         DC    X'00000000010000000000',C'          ',C'          '       04657
         DC    X'00000000020000000000',C'          ',C'          '       04658
         DC    X'00000000040000000000',C'          ',C'          '       04659
         DC    X'00000000080000000000',C'          ',C'          '       04660
         DC    X'00000000001000000000',C'          ',C'          '
         DC    X'00000000002000000000',C'          ',C'          '
         DC    X'00000000004000000000',C'          ',C'          '
         DC    X'00000000008000000000',C'          ',C'          '
         DC    X'00000000000100000000',C'          ',C'          '
         DC    X'00000000000200000000',C'          ',C'          '
         DC    X'00000000000400000000',C'          ',C'          '
         DC    X'00000000000800000000',C'          ',C'          '
         DC    X'00000000000010000000',C'          ',C'          '
         DC    X'00000000000020000000',C'          ',C'          '
         DC    X'00000000000040000000',C'          ',C'          '
         DC    X'00000000000080000000',C'          ',C'          '
         DC    X'00000000000001000000',C'          ',C'          '
         DC    X'00000000000002000000',C'          ',C'          '
         DC    X'00000000000004000000',C'          ',C'          '
         DC    X'00000000000008000000',C'          ',C'          '
         DC    X'00000000000000100000',C'          ',C'          '
         DC    X'00000000000000200000',C'          ',C'          '
         DC    X'00000000000000400000',C'          ',C'          '
         DC    X'00000000000000800000',C'          ',C'          '
         DC    X'00000000000000010000',C'          ',C'          '
         DC    X'00000000000000020000',C'          ',C'          '
         DC    X'00000000000000040000',C'          ',C'          '
         DC    X'00000000000000080000',C'          ',C'          '
         DC    X'00000000000000001000',C'          ',C'          '
         DC    X'00000000000000002000',C'          ',C'          '
         DC    X'00000000000000004000',C'          ',C'          '
         DC    X'00000000000000008000',C'          ',C'          '
         DC    X'00000000000000000100',C'          ',C'          '
         DC    X'00000000000000000200',C'          ',C'          '
         DC    X'00000000000000000400',C'          ',C'          '
         DC    X'00000000000000000800',C'          ',C'          '
         DC    X'00000000000000000010',C'          ',C'          '
         DC    X'00000000000000000020',C'          ',C'          '
         DC    X'00000000000000000040',C'          ',C'          '
         DC    X'00000000000000000080',C'          ',C'          '
         DC    X'00000000000000000001',C'          ',C'          '
         DC    X'00000000000000000002',C'          ',C'          '
         DC    X'00000000000000000004',C'          ',C'          '
         DC    X'00000000000000000008',C'          ',C'          '
         DC    X'FFFFFFFFFFFFFFFFFFFF'                                   04661
*  -----                                                                 04666
DISPAREA DS    0D                                                        04667
DISPLINH DS    0CL133                                                    04668
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - '  04669
         DC    C'LEVEL 064 - OPTIONS DISPLAY                          '  04670
         DC    27C' '                                                    04671
DISPLINO DS    0CL133                                                    04672
         DC    C'-    OPTIONS IN EFFECT:                              '  04673
         DC    C'                                                     '  04674
         DC    27C' '                                                    04675
DISPOP01 DS    0CL133                                                    04676
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE'  04677
         DC    C'LIMIT=   SYSIN CARD                                  '  04678
         DC    27C' '                                                    04679
DISPOP02 DS    0CL133                                                    04680
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE'  04681
         DC    C'LIMIT=   SYSIN CARD                                  '  04682
         DC    27C' '                                                    04683
DISPOP03 DS    0CL133                                                    04684
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE'  04685
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 '  04686
         DC    27C' '                                                    04687
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04688
               BLKSIZE=133                                               04689
         DC    C' '                                                      04690
LINE     DS    CL133                                                     04691
DISPLIN1 DS    0CL133                                                    04692
         DC    C'0    '                                                  04693
DISPL1A  DC    8CL12' '                                                  04694
         DC    32C' '                                                    04695
DISPLIN2 DS    0CL133                                                    04696
         DC    C'     '                                                  04697
DISPL2A  DC    8CL12' '                                                  04698
         DC    32C' '                                                    04699
DISPLIN3 DS    0CL133                                                    04700
         DC    C'     '                                                  04701
DISPL3A  DC    8CL12' '                                                  04702
         DC    32C' '                                                    04703
DISPLIN4 DS    0CL133                                                    04704
         DC    C'     '                                                  04705
DISPL4A  DC    8CL12' '                                                  04706
         DC    32C' '                                                    04707
DISPLIN5 DS    0CL133                                                    04708
         DC    C'     '                                                  04709
DISPL5A  DC    8CL12' '                                                  04710
         DC    32C' '                                                    04711
DISPLIN6 DS    0CL133                                                    04708
         DC    C'     '                                                  04709
DISPL6A  DC    8CL12' '                                                  04710
         DC    32C' '                                                    04711
DISPLIN7 DS    0CL133                                                    04708
         DC    C'     '                                                  04709
DISPL7A  DC    8CL12' '                                                  04710
         DC    32C' '                                                    04711
DISPLIN8 DS    0CL133                                                    04708
         DC    C'     '                                                  04709
DISPL8A  DC    8CL12' '                                                  04710
         DC    32C' '                                                    04711
DISPLIN9 DS    0CL133                                                    04708
         DC    C'     '                                                  04709
DISPL9A  DC    8CL12' '                                                  04710
         DC    32C' '                                                    04711
DISPLINA DS    0CL133                                                    04708
         DC    C'     '                                                  04709
DISPLAA  DC    8CL12' '                                                  04710
         DC    32C' '                                                    04711
         SPACE 3                                                         04712
         EJECT                                                           04713
@PAN$AUD CSECT                                                           04714
$PAN#AUD DC    CL30'LEVEL 064 COPYMOPT  08/07/03 '                       04715
         END                                                             04716
*          PARM CHECKER        AT LEVEL 1.5 AS OF 08/07/03               04717
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                       04718
**************************************************************           04719
**************************************************************           04720
**                                                          **           04721
**                                                          **           04722
**  MODULE:   PARMCHEK - Set option bits, based on          **           04723
**                       keywords coded in PARM and/or      **           04724
**                       SYSIN.                             **           04725
**                                                          **           04726
**  AUTHOR:   Sam Golob                                     **           04727
**                                                          **           04728
**  PURPOSE:  This program converts keywords in a PARM      **           04729
**            field or in SYSIN, into bit settings that     **           04730
**            a program can use, to control options in      **           04731
**            its execution.                                **           04732
**                                                          **           04733
**            This program can be run as a subroutine       **           04734
**            which is called, to set up to 10 bytes of     **           04735
**            bits, up to 80 bits in all, based on the      **           04736
**            settings of keywords in a table.              **           04737
**                                                          **           04738
**            This routine makes it easy to put a lot of    **           04739
**            options into a program.  If you want to       **           04740
**            add options, or use other words in PARM or    **           04741
**            SYSIN to call the same options, all you       **           04742
**            have to do, is to change or add entries in    **           04743
**            a table.  There is no extra coding to be      **           04744
**            done.                                         **           04745
**                                                          **           04746
**            Keywords in the PARM or SYSIN areas do not    **           04747
**            have to be delimited by commas or spaces or   **           04748
**            anything else.  Although for clarity, I'd     **           04749
**            certainly recommend that you put commas or    **           04750
**            spaces between the PARM field keywords.       **           04751
**            Therefore, I'd also advise that when you      **           04752
**            design keywords to put into the table to      **           04753
**            designate options, that you make them         **           04754
**            significantly different from each other.      **           04755
**            There is a length field in the table,         **           04756
**            however, which gives you some more control    **           04757
**            in this area.                                 **           04758
**                                                          **           04759
**            From a calling program, it would be possible  **           04760
**            to call PARMCHEK twice, against two different **           04761
**            tables, to set 20 bytes of options, instead   **           04762
**            of 10 bytes of options, and so forth...       **           04763
**                                                          **           04764
**            This gives you the opportunity of having      **           04765
**            a tremendous number of options, set by        **           04766
**            keywords, in your program, without using      **           04767
**            up valuable "base register space" for such    **           04768
**            coding.                                       **           04769
**                                                          **           04770
**                                                          **           04771
**  METHOD:   Bits, in the 10 bytes of PARMFLGS, are set,   **           04772
**            from a table, based on assembled defaults.    **           04773
**            These default settings are then overridden    **           04774
**            from a scan of words in the PARM field of     **           04775
**            the EXEC card.                                **           04776
**                                                          **           04777
**            If a SYSIN DD card is present, its cards      **           04778
**            are scanned against the table entries, to     **           04779
**            further override the bit settings which       **           04780
**            have already been done by the defaults and    **           04781
**            the PARM field.                               **           04782
**                                                          **           04783
**            The main purpose of this routine is to set    **           04784
**            bits from words.  However, if you need some   **           04785
**            keywords with values, such as (for example)   **           04786
**            FILELIMIT=69  in your program, you may use    **           04787
**            the "user code" section of this program       **           04788
**            to code that stuff in, so that these special  **           04789
**            keywords can be coded in SYSIN.               **           04790
**                                                          **           04791
**            Two sample keywords expecting number values:  **           04792
**            FILELIMIT=nnn  or                             **           04793
**            LABELIMIT=mmm                                 **           04794
**            have been coded here, just to illustrate      **           04795
**            how the user coding might work.               **           04796
**                                                          **           04797
**            Search order is:  Defaults, then PARM in      **           04798
**            the EXEC card, then SYSIN.                    **           04799
**                                                          **           04800
**            As coded here, the FILELIMIT= and             **           04801
**            LABELIMIT= keywords in SYSIN have to be in    **           04802
**            column 1 of the SYSIN cards, and if these     **           04803
**            "special keywords" are present in a card,     **           04804
**            the rest of that card is not scanned for      **           04805
**            the table keywords.                           **           04806
**                                                          **           04807
**            As coded here, the PARMTABL is a separate     **           04808
**            CSECT, addressable by V-CONs from the         **           04809
**            PARMCHEK CSECT.                               **           04810
**                                                          **           04811
**            It would probably be best to invoke the       **           04812
**            PARMCHEK program as a separate CSECT which    **           04813
**            is linkedited with the calling program,       **           04814
**            but it may be LOADed and BALR 14,15 'ed to,   **           04815
**            and run as a separate program.  (See the      **           04816
**            PARMDRVR program that is included in this     **           04817
**            package, as a sample.)                        **           04818
**                                                          **           04819
**    Input:  A fullword containing the address of the      **           04820
**            saved Register 1 from the calling program,    **           04821
**            which points to its parms.                    **           04822
**                                                          **           04823
**            A table containing parms, which is coded      **           04824
**            according to the following rules, and which   **           04825
**            has entries of 20 bytes apiece.               **           04826
**                                                          **           04827
**      FORMAT OF THE PARM TABLE                            **           04828
**                                                          **           04829
**        ONE ENTRY IS 20 BYTES                             **           04830
**                                                          **           04831
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **           04832
**                         (This is the word which          **           04833
**                          controls the bit settings.)     **           04834
**                         (up to and including 8 bytes)    **           04835
**                                                          **           04836
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **           04837
**                         X'00' says turn bit flag(s) ON   **           04838
**                         X'10' set entry as a DEFAULT     **           04839
**                                                          **           04840
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **           04841
**                         (This is the word searched on,   **           04842
**                          in the EXEC PARM and SYSIN      **           04843
**                          areas.)                         **           04844
**                                                          **           04845
**          NEXT 10 BYTES: FLAG BIT settings controlled by  **           04846
**                          this keyword.                   **           04847
**                                                          **           04848
**                         These are the bits which the     **           04849
**                          keyword will flip on (or off).  **           04850
**                                                          **           04851
**                         You may control multiple bits    **           04852
**                          using one keyword.  All bits    **           04853
**                          controlled by this keyword      **           04854
**                          are coded in this entry field.  **           04855
**                                                          **           04856
**          The table is ended by an entry of X'FF's.       **           04857
**                                                          **           04858
**                                                          **           04859
**    Output:  R1 points to a 10-byte area containing the   **           04860
**             80 switch settings.                          **           04861
**                                                          **           04862
**             Sample code to use PARMCHEK output:          **           04863
**                                                          **           04864
**                      ST    R1,PARMADDR                   **           04865
**                      USING PARMFLGS,R1                   **           04866
**             *                                            **           04867
**             PARMFLGS DSECT                               **           04868
**             PARMFLG1 DS    X                             **           04869
**             PARMFLG2 DS    X                             **           04870
**             PARMFLG3 DS    X                             **           04871
**             PARMFLG4 DS    X                             **           04872
**             PARMFLG5 DS    X                             **           04873
**             PARMFLG6 DS    X                             **
**             PARMFLG7 DS    X                             **
**             PARMFLG8 DS    X                             **
**             PARMFLG9 DS    X                             **
**             PARMFLGA DS    X                             **
**                                                          **           04874
**               then ....                                  **           04875
**                                                          **           04876
**                      TM    PARMFLG2,X'04'                **           04877
**                      BZ    some location                 **           04878
**                        ....                              **           04879
**                                                          **           04880
**             R2 points to the address of a data area      **           04881
**             containing values generated by this          **           04882
**             program.  It's address is at label STRTVALU  **           04883
**             and its length is in the first fullword      **           04884
**             at STRTVALU.                                 **           04885
**                                                          **           04886
**             R2 is accessed in a similar manner to R1.    **           04887
**             See the PARMDRVR program for an example      **           04888
**             illustrating one way in which PARMCHEK       **           04889
**             may be called.                               **           04890
**                                                          **           04891
**                                                          **           04892
**************************************************************           04893
         EJECT                                                           04894
**************************************************************           04895
**                                                          **           04896
**  CHANGE LOG:                                             **           04897
**                                                          **           04898
**    Version 1.1 - Separate Parm Table into different      **           04899
**       CSECT.  Detailed reporting in PARMREPT ddname.     **           04900
**                                                          **           04901
**    Version 1.2 - Uppercase keyword before comparing      **           04902
**       against the table entries.  This assumes you       **           04903
**       will code your table with all uppercase keyword    **           04904
**       entries.                                           **           04905
**                                                          **           04906
**    Version 1.3 - Option for requiring commas or spaces   **           04907
**       as delimiters between parms.  Comment out one      **           04908
**       instruction to require delimiters.                 **           04909
**                                                          **           04910
**    Version 1.4 - Fitted to COPYMODS Level 061.           **           04911
**                                                          **           04912
**    Version 1.5 - Fitted to COPYMODS Level 064.           **           04911
**                  Ten parm bits instead of five.          **           04912
**                                                          **           04912
**************************************************************           04913
**************************************************************           04914
         EJECT                                                           04915
**************************************************************           04916
*  ---------------------------------------------------------------  *    04917
*    This macro is used to display hex values in a printed report.       04918
*  ---------------------------------------------------------------  *    04919
         MACRO                                                           04920
&NAME    HEX   &TO,&LEN,&FROM                                            04921
&NAME    DS    0H                                                        04922
         ST    R4,SAV4HEX                                                04923
         STM   15,1,HEXSAVE                                              04924
         LA    1,&FROM                                                   04925
         LA    0,&LEN                                                    04926
         LA    15,&TO                                                    04927
         BAL   4,HEX                                                     04928
         L     R4,SAV4HEX                                                04929
         LM    15,1,HEXSAVE                                              04930
         MEND                                                            04931
         SPACE                                                           04932
**************************************************************           04933
         GBLC  &LLEV                                                     04934
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                04935
         GBLA  &HEXDFLA                                                  04936
&LLEV    SETC  '1.5 '                                                    04937
         YREGS                                                           04938
* ------------------------------------------------------------------ *   04939
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   04940
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   04941
* ------------------------------------------------------------------ *   04942
         ENTRY CARDREAD                                                  04943
         ENTRY PARMCHEK                                                  04944
&HEXDFLA SETA  4                                                         04945
&HEXDFLC SETC  '&HEXDFLA'                                                04946
PARMCHEK CSECT                                                           04947
         USING *,R15                                                     04948
         B     EYECATCH                                                  04949
         DC    C'HEX DUMP '                                              04950
HEXDFLCC DC    C'&HEXDFLC'                                               04951
         DC    C' RECORDS '                                              04952
HEXDFLL  EQU   L'HEXDFLCC                                                04953
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 04954
         DC    C'--- '            MAKE EYECATCHER VISIBLE                04955
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '                04956
         DC    C' - '                                                    04957
         DC    C'PARM INPUT IN SYSIN '                                   04958
         DC    C' - '                                                    04959
         DC    C'LEVEL '                                                 04960
SYSLEV   DC    C'&LLEV'                                                  04961
         DC    C' - '                                                    04962
SYSDAT   DC    C'&SYSDATE'                                               04963
         DC    C'  ',C'&SYSTIME ',C'--- '                                04964
         DC    C'--- '            MAKE EYECATCHER VISIBLE                04965
SAVEAREA DC    18F'0'                                                    04966
EYECATCH DS    0D             ENSURE ALIGNMENT                           04967
         SAVE  (14,12)                                                   04968
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   04969
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          04970
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         04971
         LR    R13,R1               NEW SAVE AREA ADDRESS                04972
         DROP  R15                                                       04973
* -----                       SET UP BASE REGISTERS                      04974
         USING PARMCHEK,R12,R11,R10                                      04975
         LR    R12,R15                                                   04976
         LA    R11,4095(,R12)                                            04977
         LA    R11,1(,R11)                                               04978
         LA    R10,4095(,R11)                                            04979
         LA    R10,1(,R10)                                               04980
*                                                                        04981
* ----->   GET PARMS THAT COPYMODS WAS CALLED WITH.                      04982
*                                                                        04983
         LR    R6,R2          SAVE USER AREA POINTER                     04984
         L     R6,PARMSTRT-STRTVALU(,R6)   SAVED ORIGINAL PARMS          04985
         LR    R1,R6          RESTORE PARM POINTER                       04986
         ST    R1,PARMSAVE                                               04987
* ----------------------------------------------------------------- *    04988
TIOTSCAN DS    0H             Determine the presence of Optional         04989
*                             DDNAMES:  SYSIN AND PARMREPT.              04990
* ----->                      OPEN them if there is JCL for them.        04991
* ----------------------------------------------------------------- *    04992
         L     R5,16          R5=CVT                                     04993
         L     R5,0(,R5)      R5=TCB WORDS                               04994
         L     R5,4(,R5)      R5=MY TCB                                  04995
         L     R5,12(,R5)     R5=TIOT                                    04996
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          04997
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             04998
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        04999
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?               05000
         BNE   TIOTSYSN       NO                                         05001
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD         05002
         B     TIOTNEXT       CONTINUE                                   05003
TIOTSYSN CLC   4(8,R5),SYSIN+40                                          05004
         BNE   TIOTNEXT                                                  05005
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         05006
         B     TIOTNEXT                                                  05007
TIOTNEXT SR    R3,R3                                                     05008
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      05009
         AR    R5,R3          R5=NEXT DD ENTRY                           05010
         B     TIOTLOOP       GO CHECK IT                                05011
TIOTSEND DS    0H                                                        05012
***********************************************************************  05013
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  05014
***********************************************************************  05015
         STM   R14,R2,SAVE1402                                           05016
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             05017
         OI    DATE+4,X'0F'                                              05018
         UNPK  DATED,DATE                                                05019
         OI    TIME+3,X'0F'                                              05020
         UNPK  TIMED,TIME                                                05021
*                          FILL HEADDATE AREA WITH INFO TO REUSE         05022
         MVC   HEADDATE(2),DATED                                         05023
         MVI   HEADDATE+2,C'/'                                           05024
         MVC   HEADDATE+3(2),DATED+2                                     05025
         MVI   HEADDATE+5,C'/'                                           05026
         MVC   HEADDATE+6(4),DATED+4                                     05027
         MVC   HEADDATE+12(2),TIMED                                      05028
         MVI   HEADDATE+14,C':'                                          05029
         MVC   HEADDATE+15(2),TIMED+2                                    05030
         MVI   HEADDATE+17,C':'                                          05031
         MVC   HEADDATE+18(2),TIMED+4                                    05032
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         05033
         LM    R14,R2,SAVE1402                                           05034
***********************************************************************  05035
         MVC   LEVDATE(8),SYSDAT                                         05036
***********************************************************************  05037
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND             05038
* ----------------------------------------------------------------- *    05039
INITCONS DS    0H                                                        05040
         ZAP   TOTMLCNT,=P'0'                                            05041
* ----------------------------------------------------------------- *    05042
CHEKPRNT DS    0H                                                        05043
         TM    FLAGSYST,X'01'                                            05044
         BZ    CHEKPREN                                                  05045
         OPEN  (PARMREPT,OUTPUT)                                         05046
         OI    OPENDFLG,X'01'                                            05047
         MVC   PRTLINE,PRTLINE-1                                         05048
         MVC   PRTLINE,MESSAGE1                                          05049
         PUT   PARMREPT,MESSAGE1                                         05050
         MVC   PRTLINE,PRTLINE-1                                         05051
         PUT   PARMREPT,PRTLINE                                          05052
CHEKPREN DS    0H                                                        05053
* ----------------------------------------------------------------- *    05054
* --------------------------------------------------------- *            05055
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                     05056
*                         PRESENCE OR ABSENCE.                           05057
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                  05058
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                         05059
         L     R1,0(,R1)      Get PARM field                             05060
         LH    R5,0(,R1)      SAVE PARM LENGTH                           05061
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                       05062
         MVC   SAVMSLEN,PARMSLEN                                         05063
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05064
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS                05065
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE               05066
         LA    R1,0           USE R1 TO MEASURE LENGTH READ              05067
* -----------------------------------------------------------            05068
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE               05069
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                               05070
* -----------------------------------------------------------            05071
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE               05072
         CLI   0(R2),X'FF'    END OF PARM TABLE?                         05073
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.            05074
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                   05075
         BO    PARMDSET       YES, GO SET IT.                            05076
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05077
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                 05078
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                  05079
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..                05080
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.        05081
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05082
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                  05083
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK            05084
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES              05085
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF        05086
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05087
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE             05088
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER               05089
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05090
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE               05091
* ----------------------------------------------------------------- *    05092
SCANPARM DS    0H                                                        05093
         ST    R7,SAVE7BA0                                               05094
         ZAP   PARMLCNT,=P'0'                                            05095
         ZAP   PARMHITS,=P'0'                                            05096
         MVC   PARMSLEN,SAVMSLEN                                         05097
         BAL   R7,PARMLOOP      Now check the PARM field                 05098
         MVC   SAVPHITS,PARMHITS                                         05099
         MVC   SAVCHRCT,PRMCHRCT                                         05100
         MVC   SAVELCNT,PARMLCNT                                         05101
         AP    TOTMHITS,PARMHITS                                         05102
         AP    TOTMLCNT,PARMLCNT                                         05103
         L     R7,SAVE7BA0                                               05104
* ----------------------------------------------------------------- *    05105
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                   05106
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING             05107
         OPEN  (SYSIN,INPUT)                                             05108
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                   05109
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE               05110
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN                05111
         B     OPNSYSNE           AND CONTINUE PROCESSING.               05112
NOSYSIN  DS    0H                                                        05113
         B     CARDREND                                                  05114
OPNSYSNE DS    0H                                                        05115
* ----------------------------------------------------------------- *    05116
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT               05117
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.         05118
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                        05119
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.       05120
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS        05121
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05122
*              Insert User Code Here for Keywords                        05123
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05124
         GET   SYSIN,CARDIN                                              05125
*                                                                        05126
* -- >>              <-- Intercept any keywords you want in SYSIN -->    05127
* -- >>              <--    before you start the table scan       -->    05128
*                                                                        05129
         CLC   =C'OUTVOLALL=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05130
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD           05131
         CLC   =C'TAPEOWNER=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05132
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD           05133
         CLC   =C'FILELIMIT=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05134
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD           05135
         CLC   =C'LABELIMIT=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05136
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD           05137
         CLC   =C'PRINTRCDS=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05138
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD           05139
         CLC   =C'/*',CARDIN                                             05140
         BE    SYSINEND                                                  05141
*                                                                        05142
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05143
* ----         Resume Checking SYSIN in PARM Table                       05144
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05145
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL        05146
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                         05147
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD    05148
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH             05149
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE        05150
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                  05151
         L     R1,TOTCHRCT                                               05152
         A     R1,PRMCHRCT                                               05153
         ST    R1,TOTCHRCT                                               05154
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN          05155
         ZAP   PARMHITS,=P'0'                                            05156
         ZAP   PARMLCNT,=P'0'                                            05157
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                 05158
         AP    TOTMHITS,PARMHITS                                         05159
         AP    TOTMLCNT,PARMLCNT                                         05160
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                      05161
         B     CARDREAD        GET ANOTHER CARD                          05162
* ----                                                                   05163
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05164
*              Handle User Code Here for Keywords                        05165
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05166
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?        05167
         BE    CARDREAD                 YES. IGNORE CARD                 05168
         MVC   VOLSTG1(6),CARDIN+10                                      05169
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05170
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER   05171
         B     CARDREAD          GET ANOTHER CARD                        05172
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?        05173
         BE    CARDREAD                 YES. IGNORE CARD                 05174
         MVC   TAPEOWN(10),CARDIN+10                                     05175
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05176
         B     CARDREAD                                                  05177
FILELGET DS    0H                                                        05178
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05179
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05180
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05181
         BL    CARDREAD          YES. IGNORE.                            05182
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05183
         BH    CARDREAD          YES. IGNORE.                            05184
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON                05185
         LA    R15,CARDIN+10     STARTING ADDRESS                        05186
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05187
FILELNUM DS    0H                                                        05188
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05189
         C     R15,=A(CARDIN+71) END OF CARD?                            05190
         BH    FILELGNM          YES, GET NUMBER                         05191
         CLI   0(R15),C' '       BLANK HERE?                             05192
         BE    FILELGNM          YES, GET NUMBER                         05193
         B     FILELNUM          NO. STEP UP ONE PLACE                   05194
FILELGNM DS    0H                                                        05195
         SR    R15,R1            HOW BIG IS THE NUMBER                   05196
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05197
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            05198
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA         05199
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA       05200
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05201
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE           05202
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES               05203
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05204
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE           05205
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS       05206
FILELCLG DS    0H                                                        05207
         B     CARDREAD                                                  05208
LABELGET DS    0H                                                        05209
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05210
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05211
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05212
         BL    CARDREAD          YES. IGNORE.                            05213
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05214
         BH    CARDREAD          YES. IGNORE.                            05215
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON               05216
         LA    R15,CARDIN+10     STARTING ADDRESS                        05217
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05218
LABELNUM DS    0H                                                        05219
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05220
         C     R15,=A(CARDIN+71) END OF CARD?                            05221
         BH    LABELGNM          YES, GET NUMBER                         05222
         CLI   0(R15),C' '       BLANK HERE?                             05223
         BE    LABELGNM          YES, GET NUMBER                         05224
         B     LABELNUM          NO. STEP UP ONE PLACE                   05225
LABELGNM DS    0H                                                        05226
         SR    R15,R1            HOW BIG IS THE NUMBER                   05227
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05228
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA            05229
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA         05230
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA            05231
         CVB   R0,WORKL          CONVERT IT TO BINARY                    05232
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE           05233
LABELCLG DS    0H                                                        05234
         B     CARDREAD                                                  05235
PRINTGET DS    0H                                                        05236
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05237
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05238
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05239
         BL    CARDREAD          YES. IGNORE.                            05240
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05241
         BH    CARDREAD          YES. IGNORE.                            05242
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ         05243
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                    05244
         LA    R15,CARDIN+10     STARTING ADDRESS                        05245
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05246
PRINTNUM DS    0H                                                        05247
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05248
         C     R15,=A(CARDIN+71) END OF CARD?                            05249
         BH    PRINTGNM          YES, GET NUMBER                         05250
         CLI   0(R15),C' '       BLANK HERE?                             05251
         BE    PRINTGNM          YES, GET NUMBER                         05252
         B     PRINTNUM          NO. STEP UP ONE PLACE                   05253
PRINTGNM DS    0H                                                        05254
         SR    R15,R1            HOW BIG IS THE NUMBER                   05255
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05256
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA            05257
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA         05258
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA            05259
         CVB   R0,WORKP          CONVERT IT TO BINARY                    05260
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE           05261
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER            05262
PRINTCLG DS    0H                                                        05263
         B     CARDREAD                                                  05264
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05265
*              End of User Code Here for Keywords                        05266
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05267
CHECKEND DS    0H                                                        05268
* -----------------------------------------------------------            05269
SYSINEND DS    0H                                                        05270
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                     05271
         BZ    CARNOSYS         NO. Flag SYSIN option as OFF.            05272
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05273
         OI    PARMFLG2,X'20'   Mark PARMS that SYSIN is on.             05274
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05275
         L     R1,TOTCHRCT                                               05276
         A     R1,PRMCHRCT         Final totals for last card            05277
         ST    R1,TOTCHRCT                                               05278
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED             05279
         CLOSE (SYSIN)                                                   05280
         B     CARDREND                                                  05281
CARNOSYS DS    0H                                                        05282
         NI    PARMFLG2,FF-X'20'   Turn SYSIN off in PARM flags.         05283
CARDREND DS    0H                                                        05284
         BAL   R7,SUMMREPT                                               05285
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                     05286
         BZ    PARMRPEN         NO.  GET OUT.                            05287
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED             05288
         CLOSE (PARMREPT)                                                05289
PARMRPEN DS    0H                                                        05290
THEEND   DS    0H                                                        05291
         L     R13,4(,R13)                                               05292
         MVC   16(4,R13),=F'0'          Return code 0     in R15         05293
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1          05294
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2          05295
         LM    R14,R12,12(R13)                                           05296
         BR    R14                                                       05297
* -----------------------------------------------------------            05298
*        S U B R O U T I N E S                                           05299
* -----------------------------------------------------------            05300
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.              05301
* -----------------------------------------------------------            05302
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                     05303
         BNL   PARMFIN        YES - GET OUT                              05304
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE         05305
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING            05306
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                         05307
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                   05308
*        ------------------------------------------------------------    05309
*--->                    code to require a delimiter (space, etc)        05310
*                        to enable, comment out the next instruction     05311
*        ------------------------------------------------------------    05312
         B     PRMNODLM         comment this line to require delimiter   05313
         TM    PRMFDFLG,X'01'                                            05314
         BO    PRMNFND                                                   05315
PRMNODLM DS    0H                                                        05316
*--->                                                                    05317
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE              05318
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                 05319
         BCTR  R5,0           ONE LESS FOR EXECUTE                       05320
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE       05321
*                                                                        05322
*   If you want to require parm comparisons as case sensitive,           05323
*    then comment out the following instruction....                      05324
*                                                                        05325
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM       05326
*                                                                        05327
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM     05328
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION                05329
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                          05330
         B     BOPPTBL        INNER LOOP                                 05331
*                                                                        05332
PRMNFND  DS    0H                                                        05333
*--->                 below - Parm Found flagging to require delimiter   05334
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters   05335
         BE    PRMFDOFF                                                  05336
         CLI   0(R4),C','                                                05337
         BE    PRMFDOFF                                                  05338
         B     PRMFDEND                                                  05339
PRMFDOFF DS    0H                                                        05340
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag         05341
PRMFDEND DS    0H                                                        05342
*--->                 above - Parm Found flagging to require delimiter   05343
*                                                                        05344
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                       05345
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                  05346
*                                                                        05347
         B     PARMLOOP       TRY AGAIN                                  05348
*                                                                        05349
PRMFOUND DS    0H                                                        05350
*                                                                        05351
*--->                 below - Parm Found flagging to require delimiter   05352
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                 05353
*--->                 above - Parm Found flagging to require delimiter   05354
PRMNOSEP DS    0H                                                        05355
         AP    PARMHITS,=P'1'    COUNT PARM HITS                         05356
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND            05357
         TM    1(R2),X'01'         PARM ON OR OFF?                       05358
         BO    PARMOFF             OFF                                   05359
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND     05360
         B     PARMGO                        AND GO ON                   05361
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK           05362
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS              05363
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF        05364
PARMGO   DS    0H                                                        05365
         XR    R5,R5          Clear Work Reg befor IC                    05366
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE             05367
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                  05368
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                   05369
         B     PARMLOOP       LOOK FOR MORE PARMS                        05370
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --              05371
*                             COUNT FOR DEBUGGING                        05372
PRMCHEND DS    0H                                                        05373
         BR    R7                                                        05374
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                    05375
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                    05376
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                    05377
* --------------------------------------------------------- *            05378
SUMMREPT DS    0H                  Print details of PARMREPT             05379
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                  05380
         BZ    SUMMREND            No. Bypass this routine.              05381
         MVC   PRTLINE,PRTLINE-1                                         05382
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                        05383
         HEX   PRTLINE+27,1,PARMFLG1                                     05384
         HEX   PRTLINE+30,1,PARMFLG2                                     05385
         HEX   PRTLINE+33,1,PARMFLG3                                     05386
         HEX   PRTLINE+36,1,PARMFLG4                                     05387
         HEX   PRTLINE+39,1,PARMFLG5                                     05388
         HEX   PRTLINE+42,1,PARMFLG6
         HEX   PRTLINE+45,1,PARMFLG7
         HEX   PRTLINE+48,1,PARMFLG8
         HEX   PRTLINE+51,1,PARMFLG9
         HEX   PRTLINE+54,1,PARMFLGA
         PUT   PARMREPT,PRTLINE                                          05389
         MVC   PRTLINE,PRTLINE-1                                         05390
         PUT   PARMREPT,PRTLINE                                          05391
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first.  05392
         MVC   PRTLINE+4(12),=C'User Area : '                            05393
         HEX   PRTLINE+16,48,STRTVALU                                    05394
         PUT   PARMREPT,PRTLINE                                          05395
         MVC   PRTLINE,PRTLINE-1                                         05396
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                          05397
         HEX   PRTLINE+16,48,STRTVALU+48                                 05398
         PUT   PARMREPT,PRTLINE                                          05399
         MVC   PRTLINE,PRTLINE-1                                         05400
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                          05401
         HEX   PRTLINE+16,48,STRTVALU+96                                 05402
         PUT   PARMREPT,PRTLINE                                          05403
         MVC   PRTLINE,PRTLINE-1                                         05400
         MVC   PRTLINE+4(12),=C'UA + x''90'': '                          05401
         HEX   PRTLINE+16,20,STRTVALU+144                                05402
         PUT   PARMREPT,PRTLINE                                          05403
         MVC   PRTLINE,PRTLINE-1                                         05404
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                  05405
         HEX   PRTLINE+30,4,STRTVALU                                     05406
         MVC   PRTLINE+42(6),=C'Hex   '                                  05407
         PUT   PARMREPT,PRTLINE                                          05408
         MVC   PRTLINE,PRTLINE-1                                         05409
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                  05410
         HEX   PRTLINE+30,4,PARMSLEN                                     05411
         MVC   PRTLINE+42(6),=C'Hex   '                                  05412
         PUT   PARMREPT,PRTLINE                                          05413
         MVC   PRTLINE,PRTLINE-1                                         05414
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                  05415
         HEX   PRTLINE+30,4,SAVMSLEN                                     05416
         MVC   PRTLINE+42(6),=C'Hex   '                                  05417
         PUT   PARMREPT,PRTLINE                                          05418
         MVC   PRTLINE,PRTLINE-1                                         05419
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                  05420
         HEX   PRTLINE+30,4,PARMSTRT                                     05421
         MVC   PRTLINE+42(6),=C'Hex   '                                  05422
         PUT   PARMREPT,PRTLINE                                          05423
         MVC   PRTLINE,PRTLINE-1                                         05424
         MVC   PRTLINE+4(22),=C'Last Character Count :'                  05425
         HEX   PRTLINE+30,4,PRMCHRCT                                     05426
         MVC   PRTLINE+42(6),=C'Hex   '                                  05427
         PUT   PARMREPT,PRTLINE                                          05428
         MVC   PRTLINE,PRTLINE-1                                         05429
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                  05430
         HEX   PRTLINE+30,4,SAVCHRCT                                     05431
         MVC   PRTLINE+42(6),=C'Hex   '                                  05432
         PUT   PARMREPT,PRTLINE                                          05433
         MVC   PRTLINE,PRTLINE-1                                         05434
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                  05435
         HEX   PRTLINE+30,4,TOTCHRCT                                     05436
         MVC   PRTLINE+42(6),=C'Hex   '                                  05437
         PUT   PARMREPT,PRTLINE                                          05438
         MVC   PRTLINE,PRTLINE-1                                         05439
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                  05440
         HEX   PRTLINE+30,4,SAVPHITS                                     05441
         MVC   PRTLINE+42(6),=C'Packed'                                  05442
         PUT   PARMREPT,PRTLINE                                          05443
         MVC   PRTLINE,PRTLINE-1                                         05444
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                  05445
         HEX   PRTLINE+30,4,PARMHITS                                     05446
         MVC   PRTLINE+42(6),=C'Packed'                                  05447
         PUT   PARMREPT,PRTLINE                                          05448
         MVC   PRTLINE,PRTLINE-1                                         05449
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                  05450
         HEX   PRTLINE+30,4,TOTMHITS                                     05451
         MVC   PRTLINE+42(6),=C'Packed'                                  05452
         PUT   PARMREPT,PRTLINE                                          05453
         MVC   PRTLINE,PRTLINE-1                                         05454
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                  05455
         HEX   PRTLINE+30,4,SAVELCNT                                     05456
         MVC   PRTLINE+42(6),=C'Packed'                                  05457
         PUT   PARMREPT,PRTLINE                                          05458
         MVC   PRTLINE,PRTLINE-1                                         05459
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                  05460
         HEX   PRTLINE+30,4,PARMLCNT                                     05461
         MVC   PRTLINE+42(6),=C'Packed'                                  05462
         PUT   PARMREPT,PRTLINE                                          05463
         MVC   PRTLINE,PRTLINE-1                                         05464
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                  05465
         HEX   PRTLINE+30,4,TOTMLCNT                                     05466
         MVC   PRTLINE+42(6),=C'Packed'                                  05467
         PUT   PARMREPT,PRTLINE                                          05468
         MVC   PRTLINE,PRTLINE-1                                         05469
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                  05470
         HEX   PRTLINE+30,20,PARMTENT                                    05471
         PUT   PARMREPT,PRTLINE                                          05472
SUMMREND DS    0H                                                        05473
         BR    R7                                                        05474
* --------------------------------------------------------- *            05475
* --------------------------------------------------------- *            05476
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                    05477
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                    05478
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                    05479
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                    05480
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                    05481
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                    05482
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                    05483
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                    05484
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                    05485
         EJECT                                                           05486
* --------------------------------------------------------- *            05487
WORKA    DC    D'0'                                                      05488
WORKL    DC    D'0'                                                      05489
WORKP    DC    D'0'                                                      05490
PL4NO3   DC    PL4'3'                                                    05491
FF       EQU   X'FF'                                                     05492
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05493
         DC    C' IS TREATED AS NL.                                   '  05494
         DC    CL27' '                                                   05495
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05496
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  05497
         DC    CL27' '                                                   05498
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  05499
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  05500
         DC    CL27' '                                                   05501
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 05502
         DC    CL6'&HEXDFLM'                                             05503
         DC    C' RECORDS WILL'                                          05504
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  05505
         DC    C'SYSIN.'                                                 05506
         DC    CL17' '                                                   05507
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     05516
* --------------------------------------------------------- *            05508
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                05509
PARMFLG1 DC    X'00'                                                     05510
PARMFLG2 DC    X'00'                                                     05511
PARMFLG3 DC    X'00'                                                     05512
PARMFLG4 DC    X'00'                                                     05513
PARMFLG5 DC    X'00'                                                     05514
PARMFLG6 DC    X'00'
PARMFLG7 DC    X'00'
PARMFLG8 DC    X'00'
PARMFLG9 DC    X'00'
PARMFLGA DC    X'00'
* --------------------------------------------------------- *            05515
         DS    0F                                                        05517
STRTVALU DS    0CL(ENDVALUE)                                             05518
         DC    A(ENDVALUE)                                               05519
PARMSLEN DC    F'0'                LENGTH OF PARMS                       05520
*                                  Upon entry, this field contains
*                                  the PARM address from COPYMODS,
*                                  which gets overlaid by PARMCHEK.
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       05521
*                                  Upon entry, this field contains
*                                  the PARM address from COPYMODS,
*                                  which gets overlaid by PARMCHEK.
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               05522
*                                  Upon entry, this field contains
*                                  the PARM length from COPYMODS,
*                                  which gets overlaid by PARMCHEK.
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05523
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05524
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05525
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   05526
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05527
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05528
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05529
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05530
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05531
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 05532
         DC    CL7' '              FILLER                                05533
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            05534
*  -----    User Stuff                                                   05535
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          05536
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  05537
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      05538
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         05539
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         05540
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         05541
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       05542
TAPEOWN  DC    CL10' '                                                   05543
OVERFLAG DC    X'00'                                                     05544
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               05545
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    05546
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         05547
LIMCHAR  DC    CL10' '                                                   05548
LABCHAR  DC    CL10' '                                                   05549
PRTCHAR  DC    CL10' '                                                   05550
ENDVALUE EQU   (*-PARMSLEN)+4                                            05551
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     05552
* --------------------------------------------------------- *            05553
*              FORMAT OF PARM TABLE                                      05554
*              ONE ENTRY IS 20 BYTES                                     05555
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               05556
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 05557
*                               X'00' SAYS TURN FLAG ON                  05558
*                               X'10' SET ENTRY AS A DEFAULT             05559
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               05560
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                05561
*                                WHICH ALLOWS FOR 80 PARMS               05562
*                                THAT DON'T HAVE TO BE                   05563
*                                SEPARATED BY A COMMA.                   05564
PBYTES   EQU   10               Number of bytes of parm switches         05565
PTELEN   EQU   20               Length of each table entry               05566
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes  05567
EFFS     DC    20X'FF'          X'FF' bytes for XORing                   05568
* --------------------------------------------------------- *            05569
PARMTABL CSECT                                                           05570
         DC    X'07',X'00',C'LTMSKIP ',X'20000000000000000000'           05571
         DC    X'07',X'00',C'SKIPLTM ',X'20000000000000000000'           05572
         DC    X'07',X'11',C'COPYLTM ',X'20000000000000000000'           05573
         DC    X'07',X'01',C'LTMCOPY ',X'20000000000000000000'           05574
         DC    X'07',X'00',C'LBLINFO ',X'DE000000000000000000'           05575
         DC    X'06',X'00',C'PRINTL  ',X'DE000000000000000000'           05576
         DC    X'06',X'00',C'LABELS  ',X'DE000000000000000000'           05577
         DC    X'06',X'01',C'NOLABL  ',X'DE000000000000000000'           05578
         DC    X'07',X'11',C'NOLABEL ',X'DE000000000000000000'           05579
         DC    X'04',X'00',C'HDR1    ',X'02000000000000000000'           05580
         DC    X'06',X'01',C'NOHDR1  ',X'02000000000000000000'           05581
         DC    X'04',X'00',C'HDR2    ',X'04000000000000000000'           05582
         DC    X'06',X'01',C'NOHDR2  ',X'04000000000000000000'           05583
         DC    X'04',X'00',C'EOF1    ',X'08000000000000000000'           05584
         DC    X'06',X'01',C'NOEOF1  ',X'08000000000000000000'           05585
         DC    X'04',X'00',C'EOF2    ',X'10000000000000000000'           05586
         DC    X'06',X'01',C'NOEOF2  ',X'10000000000000000000'           05587
         DC    X'04',X'00',C'EOV1    ',X'40000000000000000000'           05588
         DC    X'06',X'01',C'NOEOV1  ',X'40000000000000000000'           05589
         DC    X'04',X'00',C'EOV2    ',X'80000000000000000000'           05590
         DC    X'06',X'01',C'NOEOV2  ',X'80000000000000000000'           05591
         DC    X'04',X'00',C'HDRS    ',X'06000000000000000000'           05592
         DC    X'06',X'01',C'NOHDRS  ',X'06000000000000000000'           05593
         DC    X'04',X'00',C'EOFS    ',X'18000000000000000000'           05594
         DC    X'06',X'01',C'NOEOFS  ',X'18000000000000000000'           05595
         DC    X'04',X'00',C'EOVS    ',X'C0000000000000000000'           05596
         DC    X'06',X'01',C'NOEOVS  ',X'C0000000000000000000'           05597
         DC    X'06',X'00',C'CHGVOL  ',X'00010000000000000000'           05598
         DC    X'08',X'11',C'NOCHGVOL',X'00010000000000000000'           05599
         DC    X'06',X'00',C'JCLVOL  ',X'00010000000000000000'           05600
         DC    X'08',X'01',C'NOJCLVOL',X'00010000000000000000'           05601
         DC    X'06',X'00',C'NEWVOL  ',X'00010000000000000000'           05602
         DC    X'08',X'01',C'NONEWVOL',X'00010000000000000000'           05603
         DC    X'06',X'10',C'VOLLBL  ',X'00020000000000000000'           05604
         DC    X'08',X'01',C'NOVOLLBL',X'00020000000000000000'           05605
         DC    X'07',X'00',C'EOV2EOF ',X'00040000000000000000'           05606
         DC    X'08',X'00',C'EOVTOEOF',X'00040000000000000000'           05607
         DC    X'06',X'00',C'EOVCHG  ',X'00040000000000000000'           05608
         DC    X'08',X'11',C'NOEOVCHG',X'00040000000000000000'           05609
         DC    X'04',X'00',C'READ    ',X'00080000000000000000'           05610
         DC    X'08',X'00',C'READONLY',X'00080000000000000000'           05611
         DC    X'07',X'00',C'NOWRITE ',X'00080000000000000000'           05612
         DC    X'07',X'11',C'WRITE   ',X'00080000000000000000'           05613
         DC    X'08',X'00',C'LABLDUMP',X'00100000000000000000'           05614
         DC    X'08',X'11',C'NOLABLDU',X'00100000000000000000'           05615
         DC    X'05',X'00',C'SYSIN   ',X'00200000000000000000'           05616
         DC    X'07',X'11',C'NOSYSIN ',X'00200000000000000000'           05617
         DC    X'06',X'00',C'OUTVOL  ',X'00400000000000000000'           05618
         DC    X'08',X'00',C'NOOUTVOL',X'00400000000000000000'           05619
         DC    X'08',X'00',C'LABADDIN',X'00808000000000000000'           05620
         DC    X'08',X'01',C'NOLABADD',X'00800000000000000000'           05621
         DC    X'06',X'10',C'BLKCNT  ',X'01000000000000000000'           05622
         DC    X'08',X'01',C'NOBLKCNT',X'01000000000000000000'           05623
         DC    X'08',X'00',C'PRADDLBL',X'00001000000000000000'           05624
         DC    X'08',X'01',C'NOPRADDL',X'00001000000000000000'           05625
         DC    X'08',X'00',C'CORRBLKS',X'00002000000000000000'           05626
         DC    X'08',X'01',C'NOCORRBL',X'00002000000000000000'           05627
         DC    X'08',X'00',C'NOEXNULL',X'00004000000000000000'           05628
         DC    X'08',X'00',C'NOSLNULL',X'00004000000000000000'           05629
         DC    X'06',X'11',C'EXNULL  ',X'00004000000000000000'           05630
         DC    X'06',X'01',C'SLNULL  ',X'00004000000000000000'           05631
         DC    X'06',X'00',C'LBLFIX  ',X'00008000000000000000'           05632
         DC    X'08',X'01',C'NOLBLFIX',X'00008000000000000000'           05633
         DC    X'08',X'00',C'INITVOLS',X'00010100000000000000'           05634
         DC    X'08',X'00',C'INITTAPE',X'00010100000000000000'           05635
         DC    X'07',X'00',C'LIMFILE ',X'00000200000000000000'           05636
         DC    X'07',X'00',C'FILELIM ',X'00000200000000000000'           05637
         DC    X'08',X'01',C'NOLIMFIL',X'00000200000000000000'           05638
         DC    X'05',X'00',C'BYTES   ',X'00000400000000000000'           05639
         DC    X'07',X'01',C'NOBYTES ',X'00000400000000000000'           05640
         DC    X'06',X'00',C'CUMTOT  ',X'00000800000000000000'           05641
         DC    X'08',X'01',C'NOCUMTOT',X'00000800000000000000'           05642
         DC    X'08',X'00',C'LIMLABEL',X'00000010000000000000'           05643
         DC    X'08',X'01',C'NOLIMLAB',X'00000010000000000000'           05644
         DC    X'06',X'10',C'OPTION  ',X'00000020000000000000'           05645
         DC    X'08',X'01',C'NOOPTION',X'00000020000000000000'           05646
         DC    X'07',X'00',C'SUPPWTO ',X'00000040000000000000'           05647
         DC    X'08',X'11',C'NOSUPPWT',X'00000040000000000000'           05648
         DC    X'08',X'00',C'LBDQUICK',X'00000080000000000000'           05649
         DC    X'08',X'01',C'NOLBDQUI',X'00000080000000000000'           05650
         DC    X'06',X'00',C'CUMSEP  ',X'00000001000000000000'           05651
         DC    X'08',X'01',C'NOCUMSEP',X'00000001000000000000'           05652
         DC    X'05',X'00',C'STRIP   ',X'00000002000000000000'           05653
         DC    X'07',X'11',C'NOSTRIP ',X'00000002000000000000'           05654
         DC    X'05',X'00',C'NLLIM   ',X'00000004000000000000'           05655
         DC    X'07',X'01',C'NONLLIM ',X'00000004000000000000'           05656
         DC    X'05',X'00',C'SLLIM   ',X'00000008000000000000'           05657
         DC    X'07',X'01',C'NOSLLIM ',X'00000008000000000000'           05658
         DC    X'07',X'00',C'IDRCOFF ',X'00000000100000000000'           05659
         DC    X'08',X'01',C'NOIDRCOF',X'00000000100000000000'           05660
         DC    X'06',X'00',C'HEXPRT  ',X'00000000200000000000'           05661
         DC    X'08',X'01',C'NOHEXPRT',X'00000000200000000000'           05662
         DC    X'07',X'10',C'UNEXWTO ',X'00000000400000000000'           05663
         DC    X'08',X'01',C'NOUNEXWT',X'00000000400000000000'           05664
         DC    X'FFFFFFFFFFFFFFFF'                                       05665
* --------------------------------------------------------- *            05666
PARMCHEK CSECT                                                           05667
         SPACE 3                                                         05668
         LTORG                                                           05669
         SPACE 3                                                         05670
         DS    0D                                                        05671
* --------------------------------------------------------- *            05672
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR - 05673
               COPYMODS LVL-064'                                         05674
* --------------------------------------------------------- *            05675
         SPACE 3                                                         05676
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X 05677
               EODAD=SYSINEND                                            05678
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA     05679
* --------------------------------------------------------- *            05680
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05681
HEX      DS    0H                                                        05682
         MVC   1(1,R15),0(R1)        Move byte                           05683
         UNPK  0(3,R15),1(2,R15)     Unpack                              05684
         TR    0(2,R15),HEXTAB-240                                       05685
         LA    R15,2(,R15)           Increment output pointer            05686
         LA    R1,1(,R1)             Increment input pointer             05687
         BCT   R0,HEX                Decrement length, then loop         05688
         MVI   0(R15),C' '           Blank the trailing byte             05689
         BR    R4                    Return to caller                    05690
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     05691
         SPACE                                                           05692
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05693
HEXSAVE  DS    3F                    Register save for HEX macro         05694
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05695
* --------------------------------------------------------- *            05696
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT             05697
*              X'01'          PARMREPT DD IS PRESENT                     05698
*              X'02'          SYSIN    DD IS PRESENT                     05699
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                05700
*              X'01'          PARMREPT DD IS OPEN                        05701
*              X'02'          SYSIN    DD IS OPEN                        05702
* --------------------------------------------------------- *            05703
         SPACE 3                                                         05704
PARMSAVE DC    F'0'                                                      05705
SAV4HEX  DC    F'0'                                                      05706
SAVE2TO3 DC    2F'0'                                                     05707
SAVE3REG DC    F'0'                                                      05708
SAVE7BA0 DC    F'0'                                                      05709
SAVE7BA1 DC    F'0'                                                      05710
PARMWORK DC    CL8' '                                                    05711
UPCASEOR DC    CL8' '                                                    05712
         DC    CL4' '                                                    05713
*    ------------------------ >   Constants for Date and Time - below    05714
SAVE1402 DS    6F                 Extra fullword for safety              05715
TIMED    DS    CL7                                                       05716
DATED    DS    CL9                                                       05717
DATETIME DS    4F                                                        05718
         ORG   DATETIME                                                  05719
TIME     DS    CL4                                                       05720
         DS    CL4                                                       05721
DATE     DS    CL5                                                       05722
         DS    CL3                                                       05723
HEADDLIT DS    0CL31              Literal for headings - date and time   05724
         DC    CL6'Today:'                                               05725
         DC    CL2' '                                                    05726
HEADDATE DC    CL23' '                                                   05727
LEVELLIT DS    0CL21              Level number display for headings      05728
         DC    CL6'Level '                                               05729
LEVELL   DC    CL4'&LLEV'                                                05730
         DC    CL2' ('                                                   05731
LEVDATE  DC    CL8' '             Assembly date for this program         05732
         DC    CL1')'                                                    05733
*    ------------------------ >   Constants for Date and Time - above    05734
*    --------------- >            Output line buffers - below            05735
PRMFDFLG DC    X'00'              Parm Found Flag                        05736
*              X'01'              Parm has been found in this record     05737
         DC    CL3' '                                                    05738
         DC    C' '                                                      05739
LINE     DC    CL133' '                                                  05740
         DC    C' '                                                      05741
CNTLINE  DC    CL133' '                                                  05742
         DC    C' '                                                      05743
OUTLINE  DC    CL133' '                                                  05744
         DC    C' '                                                      05745
PRTLINE  DC    CL133' '                                                  05746
         DC    CL80' '            Padding                                05747
*    --------------- >            Output line buffers - above            05748
*                                                                        05749
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                  05750
         END                                                             05751
