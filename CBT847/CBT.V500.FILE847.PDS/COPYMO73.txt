*          DATA SET CBT990     AT LEVEL 073 AS OF 11/10/03               00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                 00002
**************************************************************           00003
**************************************************************           00004
**                                                          **           00005
**                                                          **           00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **           00007
**                                                          **           00008
**                      Revised by Sam Golob.               **           00009
**                                                          **           00010
**                                                          **           00011
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **           00012
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **           00013
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **           00014
**                                                          **           00015
**     This has been revised, with the many new functions   **           00016
**     that have been added to COPYMODS.  Besides copying   **           00017
**     tapes, COPYMODS can read and measure tapes, as well  **           00018
**     as altering the copied tapes in many ways, such as   **           00019
**     stripping the labels or leading tape marks off.      **           00020
**     The VOLSER and OWNER can be altered in the copied    **           00021
**     tapes, and all labels can also be altered, through   **           00022
**     a process of dumping the labels to a FB-80 file      **           00023
**     (LABLDUMP option), editing the labels, stripping     **           00024
**     the labels in a copy operation (STRIP option), and   **           00025
**     splicing all the labels back in another copy         **           00026
**     operation (LABADDIN option).  COPYMODS can also      **           00027
**     INIT tapes, as many as 16 at a time.  No input tape  **           00028
**     is needed for an INIT operation (INITVOLS option).   **           00029
**                                                          **           00030
**     The different COPYMODS parms or options can be used  **           00031
**     in combination with each other, as long as they      **           00032
**     don't contradict each other.  In certain cases, the  **           00033
**     use of one option will cause the automatic turn-off  **           00034
**     of one or more other options that contradict with    **           00035
**     it.  This "adjustment" is done by the COPYMODS       **           00036
**     program just after it receives the options settings  **           00037
**     back from the PARMCHEK program.  For example, if     **           00038
**     both LABLDUMP and LABADDIN (which contradict each    **           00039
**     other) are set, COPYMODS will make a judgment that   **           00040
**     LABADDIN takes precedence, so it will turn off both  **           00041
**     the LABLDUMP and READ (read only) options.  On the   **           00042
**     other hand, the STRIP and LABLDUMP options do not    **           00043
**     contradict each other.  So in that case, when STRIP  **           00044
**     and LABLDUMP are both set, COPYMODS will dump all    **           00045
**     the labels from the input tape to the LABLDUMP file, **           00046
**     while at the same time, it will strip them from the  **           00047
**     tape copies.  To get the exact effect you want from  **           00048
**     a COPYMODS run, just be very careful to code the     **           00049
**     correct combination of options.  Look at the OPTIONS **           00050
**     report before you mount the tapes.  (The OPTIONS     **           00051
**     report in //SYSPRINT will be complete before the     **           00052
**     tapes are mounted.)                                  **           00053
**                                                          **           00054
**     Up to 132 bytes of the beginning n records of each   **           00055
**     tape file can be dumped in Hex, similarly to the     **           00056
**     way TAPESCAN does it (HEXPRT option).  Interpreta-   **           00057
**     tion of the printables in this hex dump can be       **           00058
**     either EBCDIC (default) or ASCII.  EBCDIC and ASCII  **           00059
**     are COPYMODS PARM or SYSIN keywords also.            **           00060
**                                                          **           00061
**     Support for ASCII tapes (ANSI/ISO Levels 3 and 4)    **           00062
**     has been added.  COPYMODS can init ASCII tapes       **           00063
**     with the INASC3 and INASC4 keywords.  Additionally,  **           00064
**     the other functions of COPYMODS such as LABLDUMP,    **           00065
**     LABADDIN, and READ work for ASCII tapes.  The HEXPRT **           00066
**     option with the ASCII keyword allows you to print    **           00067
**     tape records in hex, with an ASCII interpretation    **           00068
**     of the printables.  EOV2EOF works for ASCII tapes.   **           00069
**                                                          **           00070
**     See the "New Features" section below for some more   **           00071
**     details.  See the #MANUAL member of the install pds  **           00072
**     (CBT Tape File 229) for even more details.           **           00073
**                                                          **           00074
**  METHOD:  COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S    **           00075
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **           00076
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **           00077
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **           00078
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **           00079
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **           00080
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **           00081
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **           00082
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **           00083
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **           00084
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **           00085
**    PARTICULAR OUTPUT TAPE.                               **           00086
**                                                          **           00087
**  COPYMODS has some optional DD's which will be used      **           00088
**    if they are present.  These following DD's are used   **           00089
**    by the PARMCHEK program, when COPYMODS is executed.   **           00090
**                                                          **           00091
**  //SYSIN    - Extra space to enter PARM keywords.        **           00092
**               Also, the only place to enter the          **           00093
**               "quantity" keywords, which start in        **           00094
**               column 1 of a SYSIN card.                  **           00095
**                                                          **           00096
**         OUTVOLALL=volser      (up to 6 characters)       **           00097
**         TAPEOWNER=owner name  (up to 10 characters)      **           00098
**         FILELIMIT=nnn         (numeric)                  **           00099
**         LABELIMIT=nnn         (numeric)                  **           00100
**         PRINTRCDS=nnn         (numeric)                  **           00101
**                                                          **           00102
**  //PARMREPT - Diagnostic output from the PARMCHEK        **           00103
**               program.  LRECL=133,RECFM=FBA.             **           00104
**                                                          **           00105
**    In addition, the COPYMODS program itself has some     **           00106
**    extra DD's, which are required if the appropriate     **           00107
**    options are set:                                      **           00108
**                                                          **           00109
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **           00110
**               receive the images of all tape labels      **           00111
**               read, together with some control cards     **           00112
**               that COPYMODS generates.  This DD name     **           00113
**               is necessary if the LABLDUMP option is     **           00114
**               in effect.                                 **           00115
**                                                          **           00116
**  //LABADDIN - An FB-80 file, or member of a pds, which   **           00117
**               contains the set of labels to be spliced   **           00118
**               into an NL tape to create an SL tape.      **           00119
**               This DD name is necessary if the LABADDIN  **           00120
**               option of COPYMODS is in effect.  Usually  **           00121
**               the LABADDIN file is a previous result of  **           00122
**               a LABLDUMP operation, or it is an altered  **           00123
**               or edited version of a previously created  **           00124
**               LABLDUMP file.                             **           00125
**                                                          **           00126
**  This program has to be assembled with PARM=BATCH in     **           00127
**    the Assembler EXEC parms.  The entire PARMCHEK        **           00128
**    program has to be included in the assembly, because   **           00129
**    PARMCHEK has to be fitted to the current level of     **           00130
**    the COPYMODS program.                                 **           00131
**                                                          **           00132
**************************************************************           00133
**                                                          **           00134
**  REQUIRED DD NAMES (used by the COPYMODS program):       **           00135
**                                                          **           00136
**  //IN       -  Points to the Input Tape.  Only not       **           00137
**                required in a tape init operation, if     **           00138
**                the INITVOLS option is in effect.         **           00139
**                Otherwise, //IN is always required.       **           00140
**                                                          **           00141
**  //OUT1 thru - Any of these 16 DD names can be coded.    **           00142
**  //OUT16       These are for the output tapes.  These    **           00143
**                are not required if the READ (readonly)   **           00144
**                option is in effect.  Any one of these    **           00145
**                16 possible DD names may be coded, even   **           00146
**                if some numbers have been skipped.  For   **           00147
**                instance, if you have one output tape,    **           00148
**                it may be defined by //OUT13.  It is      **           00149
**                not necessary to code //OUT1.             **           00150
**                                                          **           00151
**  //SYSPRINT  - The output dataset to contain all the     **           00152
**                COPYMODS operation information that was   **           00153
**                called for by the various options set,    **           00154
**                including the OPTIONS display itself.     **           00155
**                This dataset should be LRECL=133,         **           00156
**                RECFM=FBA.                                **           00157
**                                                          **           00158
**************************************************************           00159
**                                                          **           00160
**  PROGRAM STRUCTURE:                                      **           00161
**                                                          **           00162
**  This program is no longer a single CSECT as it was in   **           00163
**    the old days.  There are now the following CSECTs,    **           00164
**    which should all be assembled together:               **           00165
**                                                          **           00166
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **           00167
**                                                          **           00168
**   COPYMODS - The main processing module, which contains  **           00169
**              most of the tape copy/reading processing.   **           00170
**                                                          **           00171
**   TRTCSECT - The translate tables for Hex printing of    **           00172
**              tape records.                               **           00173
**                                                          **           00174
**   COPYMOPT - The separate routine which reads the PARM   **           00175
**              bits that have been set, and which prints   **           00176
**              a report in SYSPRINT showing the options    **           00177
**              that are in effect.                         **           00178
**                                                          **           00179
**   PARMCHEK - All the PARM and SYSIN input processing is  **           00180
**              done here.  PARM bits are passed back to    **           00181
**              COPYMODS in R1, the User Area is passed     **           00182
**              back to COPYMODS in R2.                     **           00183
**                                                          **           00184
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **           00185
**              program, this table contains all the option **           00186
**              bit meanings and their default settings.    **           00187
**                                                          **           00188
**   LABELCHK - Now a separate CSECT to check whether a     **           00189
**              record read by COPYMODS is part of a set    **           00190
**              of label records or not.                    **           00191
**                                                          **           00192
**   PRINTLBL - A separate CSECT to interpret all tape      **           00193
**              label contents in a report line.            **           00194
**                                                          **           00195
**   MSGCSECT - Contains all the texts of the messages      **
**              used by the COPYMODS CSECT.  Addressed      **
**              by two new macros:  MVFMS which does        **
**              operations on fields in the messages, and   **
**              PTMS, which prints a message to SYSPRINT.   **
**                                                          **
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **           00196
**  but they must be coordinated, and at the same level, so **           00197
**  to be safe, they should always be assembled together.   **           00198
**  The LABELCHK program has the same status.  It must be   **           00199
**  assembled together with the COPYMODS program.  Same     **           00200
**  with the PRINTLBL program.                              **           00201
**                                                          **           00202
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **           00203
**                                                          **           00204
**  GENERAL OUTLINE OF PROGRAM CALLS                        **           00205
**  ------- ------- -- ------- -----                        **           00206
**                                                          **           00207
**  COPYMODS is the first program to get control.  The      **           00208
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **           00209
**  and the entry locations are stored in fullwords for     **           00210
**  later use.                                              **           00211
**                                                          **           00212
**  PARMCHEK is immediately called, and it opens //SYSIN    **           00213
**  if that ddname is present.  If //PARMREPT is present,   **           00214
**  it is also used by the PARMCHEK program.                **           00215
**                                                          **           00216
**  After PARMCHEK has returned all parm bit settings to    **           00217
**  COPYMODS and all user-quantities, the settings are      **           00218
**  examined by COPYMODS and inconsistent settings are      **           00219
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **           00220
**  has to be turned off, because only one of these can be  **           00221
**  done in one run.  These inconsistencies are all fixed,  **           00222
**  and then COPYMODS processing starts.                    **           00223
**                                                          **           00224
**  COPYMOPT is called to display all the options that have **           00225
**  been set, if the OPTION parm has been set.  This is     **           00226
**  done to //SYSPRINT.  If any adjustments of options have **           00227
**  been made, you can see the final result in the SYSPRINT **           00228
**  report that has been produced by COPYMOPT.              **           00229
**                                                          **           00230
**  The //SYSPRINT DD is opened and closed by COPYMOPT,     **           00231
**  and opened again by COPYMODS.                           **           00232
**                                                          **           00233
**  A significant note is, that the PARMREPT contains the   **           00234
**  options as they have been set by the PARMCHEK program,  **           00235
**  with no alteration.  The COPYMOPT call, which produces  **           00236
**  the OPTIONS display in //SYSPRINT, occurs after the     **           00237
**  adjustments for inconsistent parm settings has been     **           00238
**  made by COPYMODS, so you can see the effect of those    **           00239
**  adjustments by comparing these two reports against      **           00240
**  each other.                                             **           00241
**                                                          **           00242
**  After that, COPYMODS does its things, depending on the  **           00243
**  options that have been set.  Most of the processing is  **           00244
**  done in the COPYMODS csect, except for the HEXPRT       **           00245
**  option, where the translation tables are in the         **           00246
**  TRTCSECT csect.                                         **           00247
**                                                          **           00248
**  The LABELCHK program is called whenever an 80-byte      **           00249
**  record is read, to see whether that record is part of   **           00250
**  a set of tape labels.                                   **           00251
**                                                          **           00252
**  Whenver a label is to be interpreted to SYSPRINT, the   **           00253
**  PRINTLBL program is called.                             **           00254
**                                                          **           00255
**************************************************************           00256
**                                                          **           00257
**  NEW FEATURES ADDED BY SAM GOLOB:                        **           00258
**                                                          **           00259
**                                                          **           00260
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **           00261
**                                                          **           00262
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **           00263
**                                                          **           00264
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **           00265
**       BE CORRECTLY COPIED.                               **           00266
**                                                          **           00267
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **           00268
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **           00269
**       FOUND ON THE INPUT TAPE.                           **           00270
**                                                          **           00271
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **           00272
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **           00273
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **           00274
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **           00275
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **           00276
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **           00277
**       MAIN SOURCE CODE.                                  **           00278
**                                                          **           00279
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **           00280
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **           00281
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **           00282
**       INVOKE THIS ACTION.                                **           00283
**                                                          **           00284
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **           00285
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **           00286
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **           00287
**                                                          **           00288
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **           00289
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **           00290
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **           00291
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **           00292
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **           00293
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **           00294
**                                                          **           00295
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **           00296
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **           00297
**                                                          **           00298
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **           00299
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **           00300
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **           00301
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **           00302
**       SERVICE.                                           **           00303
**                                                          **           00304
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **           00305
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **           00306
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **           00307
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **           00308
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **           00309
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **           00310
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **           00311
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **           00312
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **           00313
**                                                          **           00314
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **           00315
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **           00316
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **           00317
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **           00318
**                                                          **           00319
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **           00320
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **           00321
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **           00322
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **           00323
**                                                          **           00324
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **           00325
**       TAPEOWNER=xxxxxxxxxx                               **           00326
**       FILELIMIT=nnnn                                     **           00327
**       LABELIMIT=nnnn                                     **           00328
**       PRINTRCDS=nnnn                                     **           00329
**         or                                               **           00330
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **           00331
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **           00332
**                                                          **           00333
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **           00334
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **           00335
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **           00336
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **           00337
**                                                          **           00338
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **           00339
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **           00340
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **           00341
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **           00342
**       IN THE EXTERNAL LABEL DATASET.                     **           00343
**                                                          **           00344
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **           00345
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **           00346
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **           00347
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **           00348
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **           00349
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **           00350
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **           00351
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **           00352
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **           00353
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **           00354
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **           00355
**                                                          **           00356
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **           00357
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **           00358
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **           00359
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **           00360
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **           00361
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **           00362
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **           00363
**       DATA FILE HAS BEEN WRITTEN.                        **           00364
**                                                          **           00365
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **           00366
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **           00367
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **           00368
**       EXTERNAL LABEL DATASET.                            **           00369
**                                                          **           00370
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **           00371
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **           00372
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **           00373
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **           00374
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **           00375
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **           00376
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **           00377
**       THE HDR2.                                          **           00378
**                                                          **           00379
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **           00380
**       INPUT TAPE.  USE A PARM OF INITVOLS.               **           00381
**                                                          **           00382
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **           00383
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **           00384
**       IN A SYSIN CARD.                                   **           00385
**                                                          **           00386
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **           00387
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **           00388
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **           00389
**       IS INTERPRETED AS SL FILES.  IF NOT, THEN IT IS    **           00390
**       INTERPRETED AS NL.                                 **           00391
**                                                          **           00392
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **           00393
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **           00394
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **           00395
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **           00396
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **           00397
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **           00398
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **           00399
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **           00400
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **           00401
**       BYTE TOTALS COMING FROM DATA FILES.                **           00402
**                                                          **           00403
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **           00404
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **           00405
**       TO PRINT THEM.)                                    **           00406
**                                                          **           00407
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **           00408
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **           00409
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **           00410
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).                 **           00411
**                                                          **           00412
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **           00413
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **           00414
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **           00415
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **           00416
**       DATA BLOCKS ON THE TAPE.                           **           00417
**                                                          **           00418
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **           00419
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **           00420
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **           00421
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **           00422
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **           00423
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **           00424
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **           00425
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **           00426
**       THESE WILL STILL BE STRIPPED OFF.  IF FILE         **           00427
**       LIMITING IS IN EFFECT, THEN THE INPUT TAPE IS      **           00428
**       ASSUMED TO BE SL, AND THE NUMBER CODED IN THE      **           00429
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **           00430
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **           00431
**       INPUT TAPE.                                        **           00432
**                                                          **           00433
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **           00434
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **           00435
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **           00436
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **           00437
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **           00438
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **           00439
**                                                          **           00440
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **           00441
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **           00442
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **           00443
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **           00444
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **           00445
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **           00446
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **           00447
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **           00448
**                                                          **           00449
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **           00450
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **           00451
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **           00452
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **           00453
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **           00454
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **           00455
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **           00456
**                                                          **           00457
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **           00458
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **           00459
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **           00460
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **           00461
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **           00462
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **           00463
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **           00464
**                                                          **           00465
**  28.  SUPPORT FOR ANSI/ISO (ASCII) TAPES.  LEVELS 3 AND  **           00466
**       4 ARE SUPPORTED.  COPYMODS CAN INIT ASCII TAPES    **           00467
**       (KEYWORDS INASC3 AND INASC4), AND CAN PERFORM      **           00468
**       ALL ITS FUNCTIONALITY ON THEM.  14 CHARACTER TAPE  **           00469
**       OWNER FIELD IS SUPPORTED FOR ASCII TAPES, AS WELL  **           00470
**       AS MOST OF THE OTHER DIFFERENCES BETWEEN ASCII     **           00471
**       LABEL FORMATS AND IBM (EBCDIC) LABEL FORMATS.      **           00472
**                                                          **           00473
**************************************************************           00474
         EJECT                                                           00475
**************************************************************           00476
**  CHANGE LOG:                                             **           00477
**                                                          **           00478
** LEVEL 003                                                **           00479
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS        SBG 03/00 **           00480
**                                                          **           00481
** LEVEL 004                                                **           00482
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER   SBG 03/00 **           00483
**             A HEADER LABEL.  THIS MEANS AN SL  SBG 03/00 **           00484
**             FILE WITHOUT ANY DATA IN IT.  AND  SBG 03/00 **           00485
**             IF THIS IS THE CASE, DON'T STOP    SBG 03/00 **           00486
**             COPYING FILES.                     SBG 03/00 **           00487
**                                                          **           00488
** LEVEL 005                                                **           00489
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE     SBG 03/00 **           00490
**             R12,R11.                           SBG 03/00 **           00491
**                                                          **           00492
** LEVEL 006                                                **           00493
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP   SBG 03/00 **           00494
**             TO 16 OUTPUT TAPES FROM OUT1 TO    SBG 03/00 **           00495
**             OUT16.                             SBG 03/00 **           00496
**                                                          **           00497
** LEVEL 007 AND 008                                        **           00498
**  03/14/00 - CLEANED UP SPELLING ON ERROR       SBG 03/00 **           00499
**             MESSAGES AND FIXED DOCUMENTATION.  SBG 03/00 **           00500
**             ADDED EYECATCHERS COSMETICALLY.    SBG 03/00 **           00501
**                                                          **           00502
** LEVEL 009                                                **           00503
**  03/21/00 - STOP AFTER INITTED MVS TAPE        SBG 03/00 **           00504
**                                                          **           00505
** LEVEL 010                                                **           00506
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS  SBG 03/00 **           00507
**             FOR BLOCK SIZES FROM 32K TO 64K.   SBG 03/00 **           00508
**                                                          **           00509
**             I MADE AN ATTEMPT TO COPY DOS/VSE  SBG 03/00 **           00510
**             TAPES THAT HAVE LEADING TAPE       SBG 03/00 **           00511
**             MARKS.  THERE IS A CHOICE TO       SBG 03/00 **           00512
**             EITHER COPY ALL THE LEADING        SBG 03/00 **           00513
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO SBG 03/00 **           00514
**             DISCARD THEM ALL.  YOU USE A PARM  SBG 03/00 **           00515
**             OF LTMSKIP TO DISCARD LEADING      SBG 03/00 **           00516
**             TAPEMARKS, AND ANY OTHER PARM, OR  SBG 03/00 **           00517
**             NO PARM, WILL CAUSE THE PROGRAM TO SBG 03/00 **           00518
**             COPY THEM TO THE OUTPUT TAPES.     SBG 03/00 **           00519
**                                                          **           00520
** LEVEL 011                                                **           00521
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE  SBG 03/00 **           00522
**             BY ENDING THE JOB NORMALLY AFTER   SBG 03/00 **           00523
**             ONE TAPEMARK.                      SBG 03/00 **           00524
**                                                SBG 03/00 **           00525
**             IF VOL1 LABEL IS DETECTED, THEN    SBG 03/00 **           00526
**             PUT OUT A MESSAGE SAYING SO, AND   SBG 03/00 **           00527
**             INDICATING THE VOLSER THAT WAS     SBG 03/00 **           00528
**             FOUND.  THIS PROGRAM WAS WRITTEN   SBG 03/00 **           00529
**             ORIGINALLY WITH THE INTENT OF      SBG 03/00 **           00530
**             HANDLING NL TAPES, SO THAT THE     SBG 03/00 **           00531
**             CONDITIONS WHICH RESULT FROM       SBG 03/00 **           00532
**             HAVING SL TAPES, HAD TO BE         SBG 03/00 **           00533
**             ACCOUNTED FOR LATER.               SBG 03/00 **           00534
**                                                          **           00535
** LEVEL 012                                                **           00536
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2       SBG 04/00 **           00537
**             HAVING ONLY ONE TAPE MARK AFTER              **           00538
**             THEM.                                        **           00539
**                                                          **           00540
** LEVEL 013                                                **           00541
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD    SBG 04/00 **           00542
**             LABEL TYPES, AND THE SETTING OF              **           00543
**             FLAGS TO INDICATE EACH TYPE.                 **           00544
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **           00545
**             MOVE NON-LABEL-RELATED FLAGS OUT             **           00546
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **           00547
**             EASY PRINTING OF LABEL CONTENTS,             **           00548
**             BUT NO EXTRA PRINTING IS DONE AT             **           00549
**             THIS LEVEL.                                  **           00550
**                                                          **           00551
** LEVEL 014                                                **           00552
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN      SBG 05/00 **           00553
**             PARM SCANNER THAT IS EASY TO                 **           00554
**             MODIFY, AND TO SUPPLY SYNONYMS               **           00555
**             FOR THE PARMS.  ADDED SUPPORT,               **           00556
**             VIA THE LBLINFO PARM, TO PRINT               **           00557
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **           00558
**             EOV2 LABEL INFORMATION, IF IT IS             **           00559
**             FOUND ON THE INPUT TAPE.  THAT IS,           **           00560
**             IF THE INPUT TAPE IS SL.                     **           00561
**                                                          **           00562
**             FOR A LIST OF PERMISSIBLE PARMS,             **           00563
**             SEE LABEL PARMTABL.                          **           00564
**                                                          **           00565
** LEVEL 015                                                **           00566
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00567
**             TO TURN OFF A PARM FLAG AS WELL AS           **           00568
**             THE ABILITY TO TURN IT ON. INCREASED         **           00569
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **           00570
**             BYTE.                                        **           00571
**                                                          **           00572
** LEVEL 016                                                **           00573
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00574
**             TO SET ANY PARM SETTING AS A                 **           00575
**             DEFAULT.  A SETTING FOR A DEFAULT            **           00576
**             ENTRY THAT IS LATER IN THE TABLE,            **           00577
**             WILL OVERRIDE A SETTING FOR A                **           00578
**             DEFAULT THAT WAS SET EARLIER IN THE          **           00579
**             TABLE.  SETTING A PARM EXPLICITLY            **           00580
**             IN THE JCL, WILL OVERRIDE ANY                **           00581
**             DEFAULT SETTING FOR THAT PARM.               **           00582
**                                                          **           00583
** LEVEL 017                                                **           00584
**  05/11/00 - USED THE PARM SCANNER TO MAKE A    SBG 05/00 **           00585
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **           00586
**             KINDS OF TAPE LABELS.  IF YOU WANT           **           00587
**             ALL OF THEM, YOU JUST HAVE A PARM            **           00588
**             THAT THROWS ALL OF THE FLAGS.  ALL           **           00589
**             OF THIS IS CODED IN PARMTABL AND             **           00590
**             THE FLAGS ARE USED IN PRTXXX1 AND            **           00591
**             PRTXXX2.                                     **           00592
**                                                          **           00593
** LEVEL 018                                                **           00594
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE  SBG 05/00 **           00595
**             VOLSER OF THE COPIED TAPES, TO               **           00596
**             MATCH THE VOLSER INDICATED IN THE            **           00597
**             OUTXX DD NAMES.  THIS IS DONE WITH           **           00598
**             THE CHGVOL PARM KEYWORD.  THIS               **           00599
**             ACTION ONLY OCCURS IF THE INPUT              **           00600
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **           00601
**             DETECTED.  THE COPIED VOL1 LABEL             **           00602
**             IS ALTERED BEFORE THE WRITE.                 **           00603
**                                                          **           00604
** LEVEL 019                                                **           00605
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1    SBG 06/00 **           00606
**             AND EOV2 LABELS THAT ARE IN THE              **           00607
**             MIDDLE OF A TAPE.  OF COURSE THIS            **           00608
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **           00609
**             CAN HAPPEN WHEN YOU COPY FILES               **           00610
**             WITH THE COPYFILE PROGRAM, FROM              **           00611
**             THE END OF ONE TAPE, TO THE                  **           00612
**             BEGINNING OR THE MIDDLE OF                   **           00613
**             ANOTHER.  COPYFILE HAS NOT BEEN              **           00614
**             FIXED AS YET NOT TO DO THIS, BUT IT          **           00615
**             COPIES THE EOV LABELS AS IS.  THIS           **           00616
**             NEW OPTION IS CALLED EOVCHG OR               **           00617
**             EOV2EOF; THE EOV LABELS ARE                  **           00618
**             CHANGED (IN THE COPIED TAPES) TO             **           00619
**             EOF, AND A MESSAGE IS WRITTEN THAT           **           00620
**             REPORTS THIS FACT.                           **           00621
**                                                          **           00622
** LEVEL 020                                                **           00623
**  06/29/00 - ADDED THE PARM OF READ OR READONLY SBG 06/00 **           00624
**             TO ALLOW A RUN OF COPYMODS THAT              **           00625
**             JUST READS THE INPUT TAPE, AND DOES          **           00626
**             NOT MAKE COPIES.                             **           00627
**                                                          **           00628
** LEVEL 021                                                **           00629
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY     SBG 07/00 **           00630
**             IEHINITTED TAPES.                            **           00631
**                                                          **           00632
** LEVEL 022                                                **           00633
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD SBG 09/00 **           00634
**             LABELS FROM A TAPE, TO AN FB-80              **           00635
**             OUTPUT FILE.  PARM IS LABLDUMP.              **           00636
**                                                          **           00637
** LEVEL 023                                      SBG 09/00 **           00638
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **           00639
**             ONLY IMPLEMENTATION SO FAR IS TO             **           00640
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **           00641
**             SAME VALUE, BUT NOT NECESSARILY TO           **           00642
**             WHAT IS IN THE OUTX  DD CARD.  IN            **           00643
**             ORDER TO USE THE FACILITY, YOU HAVE          **           00644
**             TO CODE                                      **           00645
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **           00646
**             OF THE SYSIN CARD FILE.  IF THERE            **           00647
**             ARE NO VALID OUTVOLALL= CARDS IN             **           00648
**             SYSIN, THEN THE EFFECT IS THE SAME           **           00649
**             AS CODING CHGVOL.                            **           00650
**                                                          **           00651
**             FIXED LABEL DUMP OPTION SO THAT THE          **           00652
**             DUMPED LABELS HAVE CONTROL CARDS             **           00653
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **           00654
**             FUNCTION IN LEVEL 24 NEEDS THESE             **           00655
**             CONTROL CARDS.                               **           00656
**                                                          **           00657
** LEVEL 024                                      SBG 09/00 **           00658
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **           00659
**             OUTPUT COPIES FROM NL INPUT AND A            **           00660
**             SET OF LABELS CREATED BY LABLDUMP.           **           00661
**             CHANGED THE DCB NAMES AND DD CARDS           **           00662
**             AND OPTION NAMES FOR LABEL DUMP AND          **           00663
**             RESTORE.                                     **           00664
**                                                          **           00665
**             CHANGED PROGRAM INITIALIZATION TO            **           00666
**             A STANDARD FORM.  GOT RID OF PRIME           **           00667
**             AND TERME MACROS.  HAVE 5 BASE               **           00668
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **           00669
**                                                          **           00670
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **           00671
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **           00672
**             LABELS ON AN SL TAPE, AND WON'T              **           00673
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **           00674
**             TAPE IS SL, ACCIDENTALLY.                    **           00675
**                                                          **           00676
** LEVEL 025                                      SBG 09/00 **           00677
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **           00678
**             SYSIN AND SEARCH FOR ALL PARMS.              **           00679
**                                                          **           00680
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **           00681
**             BE USED.                                     **           00682
**                                                          **           00683
**             ANY CARD IN SYSIN WHICH IS NOT A             **           00684
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **           00685
**                TAPEOWNER=xxxxxxxxxx                      **           00686
**                FILELIMIT=nnnn                            **           00687
**                LABELIMIT=nnnn                            **           00688
**                PRINTRCDS=nnnn                            **           00689
**                  or                                      **           00690
**                OUTVOLALL=volser ,                        **           00691
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **           00692
**             AND ANY PARM THAT IS CODED IN THE            **           00693
**             PARM TABLE, CAN BE CODED IN SYSIN,           **           00694
**             AND IT WILL OVERRIDE THE PARM IN             **           00695
**             THE EXEC CARD (SINCE SYSIN IS                **           00696
**             SCANNED LATER IN THE PROCESSING).            **           00697
**                                                          **           00698
**             INCLUDED A BLOCK COUNT CORRECTION AS         **           00699
**             DEFAULT, WHEN WRITING STANDARD LABELS        **           00700
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **           00701
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **           00702
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **           00703
**                                                          **           00704
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **           00705
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **           00706
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **           00707
**             THE CONTENTS OF STANDARD LABELS FOUND        **           00708
**             WHEN COPYING AN INPUT TAPE.                  **           00709
**                                                          **           00710
** LEVEL 026                                      SBG 09/00 **           00711
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00712
**             RESPECT CHGVOL AND OUTVOLALL= .              **           00713
**                                                          **           00714
** LEVEL 027                                      SBG 09/00 **           00715
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00716
**             BE ABLE TO DO EOV2EOF PROCESSING             **           00717
**                                                          **           00718
** LEVEL 028                                      SBG 09/00 **           00719
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **           00720
**             STANDARD USER LABEL SUPPORT.                 **           00721
**                                                          **           00722
** LEVEL 029                                      SBG 09/00 **           00723
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **           00724
**             STANDARD USER LABELS.                        **           00725
**                                                          **           00726
** LEVEL 030                                      SBG 09/00 **           00727
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **           00728
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **           00729
**             OUTPUT TAPES, DURING THE COPY.               **           00730
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **           00731
**                                                          **           00732
**             FIXED THE EYECATCHERS A BIT.                 **           00733
**                                                          **           00734
**             AGAIN FIXED COPY OF INITTED TAPES.           **           00735
**                                                          **           00736
** LEVEL 031                                      SBG 09/00 **           00737
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **           00738
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **           00739
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **           00740
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **           00741
**                                                          **           00742
** LEVEL 032                                      SBG 10/00 **           00743
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **           00744
**             LABADDIN PROCESSING WHEN THERE ARE           **           00745
**             MORE LABELS IN THE EXTERNAL LABEL            **           00746
**             DATASET, THAN THERE ARE NL FILES             **           00747
**             IN THE INPUT TAPE.  DEFAULT IS TO            **           00748
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **           00749
**             SAYS TO STOP AT THE END OF NL FILES          **           00750
**             AND NOT WRITE NULL SL FILES TO               **           00751
**             CORRESPOND TO THE EXTRA EXTERNAL             **           00752
**             LABELS.                                      **           00753
**                                                          **           00754
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **           00755
**             OF WRITING AN EXTRA HEADER LABEL SET,        **           00756
**             AND THEN BACKING OVER IT AND CLOSING.        **           00757
**                                                          **           00758
** LEVEL 033                                      SBG 10/00 **           00759
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **           00760
**             PROCESSING WHEN THE LAST LABEL SET           **           00761
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **           00762
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **           00763
**             A HDR2 LABEL IN THE LAST LABEL SET,          **           00764
**             AND COPYMODS (WITH LBLFIX ON) WILL           **           00765
**             ACT AS IF AN ENDOFLABELHEADER CARD           **           00766
**             WERE THERE (SO IT WRITES A TAPEMARK          **           00767
**             AND THE DATA AND A TAPEMARK), AND IT         **           00768
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **           00769
**             PLUS THE MEASURED BLOCK COUNTS FROM          **           00770
**             THE DATA FILE.  AN EOF2 IS COPIED            **           00771
**             FROM THE EXISTING HDR2 AND EOF IS            **           00772
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **           00773
**             THE END.                                     **           00774
**                                                          **           00775
** LEVEL 034                                      SBG 10/00 **           00776
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **           00777
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **           00778
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **           00779
**             THE CLOSE.  THIS LETS THE CLOSE DO           **           00780
**             THE REWIND, AND LEAVES THE WRITTEN           **           00781
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **           00782
**             THAT WAS INCOMPLETELY WRITTEN IS             **           00783
**             NOT ERASED.                                  **           00784
**                                                          **           00785
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **           00786
**             CONDITION IS FLAGGED WITH A PROPER           **           00787
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **           00788
**             FOR THAT DRIVE IS BYPASSED.                  **           00789
**                                                          **           00790
**             THIS PROBLEM HAS EXISTED SINCE THE           **           00791
**             FIRST VERSION OF THIS PROGRAM.               **           00792
**                                                          **           00793
**             CAREFUL TO FLAG ALL THE EXTRA DD             **           00794
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **           00795
**             THESE ARE THE OPENDFLG SETTINGS.             **           00796
**                                                          **           00797
** LEVEL 035                                      SBG 10/00 **           00798
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **           00799
**             TAPES, BY NOT REUSING THE WRITE              **           00800
**             IOB WITHOUT REFRESHING THE PARTS             **           00801
**             THAT ARE USED BY IOS.  THIS IS THE           **           00802
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **           00803
**                                                          **           00804
**             LABLDUMP OF AN IEHINITTED TAPE               **           00805
**             PRODUCES AN ENDOFLABELHEADERINIT             **           00806
**             CARD, IN ANTICIPATION OF CREATING            **           00807
**             A TAPE INITIALIZATION ROUTINE FROM           **           00808
**             EXTERNAL LABELS.  (INITVOLS IN THE           **           00809
**             NEXT LEVEL, IS BETTER.)                      **           00810
**                                                          **           00811
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **           00812
**                                                          **           00813
** LEVEL 036                                      SBG 10/00 **           00814
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **           00815
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **           00816
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **           00817
**             ALSO CHANGE TAPE OWNER INFORMATION           **           00818
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **           00819
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **           00820
**                                                          **           00821
**             TO INIT TAPES WITH NO INPUT TAPE,            **           00822
**             USE A PARM OF INITVOLS.                      **           00823
**                                                          **           00824
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **           00825
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **           00826
**                                                          **           00827
**             CONSOLIDATED CHGVOL CODE INTO A              **           00828
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **           00829
**                                                          **           00830
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **           00831
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **           00832
**             STEPPING ON EACH OTHER.                      **           00833
**                                                          **           00834
** LEVEL 037                                      SBG 10/00 **           00835
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **           00836
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **           00837
**             NL TAPES ON THE INPUT TAPE.  IF THE          **           00838
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **           00839
**             IS MULTIPLIED BY 3, AND THE BIGGER           **           00840
**             VALUE IS USED.                               **           00841
**                                                          **           00842
**             COPYMODS WILL ONLY COPY INPUT TAPE           **           00843
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **           00844
**             VALUE, IF THERE IS ONE.                      **           00845
**                                                          **           00846
**             INTERNALLY, THE FILELIMIT= KEYWORD           **           00847
**             SETS THE PARM VALUE OF LIMFILE OR            **           00848
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **           00849
**             THE PROGRAM ACTION.                          **           00850
**                                                          **           00851
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **           00852
**             PROGRAM COUNTS BYTES READ FROM THE           **           00853
**             INPUT TAPE FILES, AND TOTALS THEM AT         **           00854
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **           00855
**             THIS ACTION.                                 **           00856
**                                                          **           00857
** LEVEL 038                                      SBG 11/00 **           00858
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **           00859
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **           00860
**             RUNNING BYTE TOTALS AS WELL AS THE           **           00861
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **           00862
**             FILES.                                       **           00863
**                                                          **           00864
** LEVEL 039                                      SBG 11/00 **           00865
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **           00866
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **           00867
**             THEREFORE WE HAVE PARMFLG1 THRU              **           00868
**             PARMFLG5 TO USE AS OPTION BYTES.             **           00869
**                                                          **           00870
** LEVEL 040                                      SBG 11/00 **           00871
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **           00872
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **           00873
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **           00874
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **           00875
**             AND I WANT TO BE ABLE TO MATCH THEIR         **           00876
**             COUNT, SO A USER WILL BE ABLE TO             **           00877
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **           00878
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **           00879
**                                                          **           00880
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **           00881
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **           00882
**             NOT INITTING TAPES, YOU DON'T GET AN         **           00883
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **           00884
**             WHAT TO DO.                                  **           00885
**                                                          **           00886
** LEVEL 041                                      SBG 11/00 **           00887
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **           00888
**             OF LABEL SETS IN THE LABADDIN FILE           **           00889
**             THAT COPYMODS WILL PROCESS.  EVEN            **           00890
**             IF THE LABADDIN FILE CONTAINS MANY           **           00891
**             LABEL SETS, THE NUMBER PROCESSED WILL        **           00892
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **           00893
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **           00894
**                                                          **           00895
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **           00896
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **           00897
**             THE LABADDIN FILE, AND CONSIDERS THE         **           00898
**             FILE TO END AFTER NNN OF THEM.               **           00899
**                                                          **           00900
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **           00901
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **           00902
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **           00903
**             THIS CHOPS PROCESSING OFF TOO SOON           **           00904
**             WHEN EOV LABELS ARE PRESENT.                 **           00905
**                                                          **           00906
** LEVEL 042                                      SBG 11/00 **           00907
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **           00908
**             BAL R7, AND USED R6 AS SIXTH BASE            **           00909
**             REGISTER.                                    **           00910
**                                                          **           00911
** LEVEL 043                                      SBG 11/00 **           00912
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **           00913
**             "OPTION" PARAMETER.  CALL IS TO A            **           00914
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **           00915
**             PROGRAM COPYMOPT SHOULD BE BATCH             **           00916
**             ASSEMBLED AND LINKEDITED WITH                **           00917
**             THE COPYMODS PROGRAM.                        **           00918
**                                                          **           00919
**             CHANGED THE WORDING OF SOME OF THE           **           00920
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **           00921
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **           00922
**                                                          **           00923
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **           00924
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **           00925
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **           00926
**             LABADDIN WAS IN EFFECT.                      **           00927
**                                                          **           00928
** LEVEL 044                                      SBG 12/00 **           00929
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **           00930
**                                                          **           00931
** LEVEL 045                                      SBG 12/00 **           00932
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **           00933
**             COMPLETION OF THE COPY. SUPPWTO.             **           00934
**                                                          **           00935
** LEVEL 046                                      SBG 12/00 **           00936
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **           00937
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **           00938
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **           00939
**             TO HI ORDER FIELD WHEN DOING BLOCK           **           00940
**             COUNT CORRECTION.                            **           00941
**                                                          **           00942
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **           00943
**                                                          **           00944
** LEVEL 047                                      SBG 12/00 **           00945
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **           00946
**             DUMP OF TAPES WHICH CONTAIN LARGE            **           00947
**             NUMBERS OF DATA RECORDS.  IF THE             **           00948
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **           00949
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **           00950
**                                                          **           00951
** LEVEL 048                                      SBG 05/02 **           00952
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **           00953
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **           00954
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **           00955
**             IS THERE IN THE JCL, THEN OPEN IT.           **           00956
**                                                          **           00957
** LEVEL 049                                      SBG 05/02 **           00958
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **           00959
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **           00960
**             BYTE COUNTS AND DATA BYTE COUNTS,            **           00961
**             INSTEAD OF TOTAL BYTE COUNTS.                **           00962
**                                                          **           00963
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE   SBG 10/02 **           00964
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **           00965
**             EACH LABEL.  IT DOES NOT MATTER              **           00966
**             WHERE THE LABELS ARE, IN THE INPUT           **           00967
**             TAPE--THEY WILL BE STRIPPED OFF THE          **           00968
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **           00969
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **           00970
**             NUMBER IS MULTIPLIED BY 3, AND THE           **           00971
**             COPYING IS CUT OFF AFTER 3*nnn,              **           00972
**             TREATED AS BLP, ON THE INPUT TAPE.           **           00973
**                                                          **           00974
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **           00975
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **           00976
**             COPYMODS TRIES TO DETECT WHETHER THE         **           00977
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **           00978
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **           00979
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **           00980
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **           00981
**             WE CAN NOW FORCE THE nnn TO BE               **           00982
**             INTERPRETED AS NL USING THE NLLIM            **           00983
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **           00984
**             INTERPRETED AS 3*nnn USING THE SLLIM         **           00985
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **           00986
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **           00987
**             OTHER KEYWORD IS ALSO CODED.                 **           00988
**                                                          **           00989
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **           00990
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **           00991
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **           00992
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **           00993
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **           00994
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **           00995
**             DURING THE WRITE OF THE TAPE MARK.           **           00996
**                                                          **           00997
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **           00998
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **           00999
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **           01000
**             BEFORE ISSUING ABEND 069.                    **           01001
**                                                          **           01002
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **           01003
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **           01004
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **           01005
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **           01006
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **           01007
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **           01008
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **           01009
**             SYSPRINT DATASET.                            **           01010
**                                                          **           01011
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **           01012
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **           01013
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **           01014
**                                                          **           01015
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **           01016
**             OF THE MAIN CSECT.                           **           01017
**                                                          **           01018
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **           01019
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **           01020
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **           01021
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **           01022
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **           01023
**             PARM SCAN IN DETAIL.                         **           01024
**                                                          **           01025
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **           01026
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **           01027
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **           01028
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **           01029
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **           01030
**                                                          **           01031
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **           01032
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **           01033
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **           01034
**             PROGRAM AND NOT BY COPYMODS.                 **           01035
**                                                          **           01036
**             COPYMODS CALLS PARMCHEK, AND UPON RETURN,    **           01037
**             PARMCHEK RETURNS THE ADDRESSES OF TWO AREAS. **           01038
**             R1 CONTAINS THE ADDRESS OF THE PARMFLGS      **           01039
**             FIELD WITHIN THE PARMCHEK PROGRAM CODE,      **           01040
**             AND R2 CONTAINS THE ADDRESS OF THE STRTVALU  **           01041
**             FIELD IN THE PARMCHEK PROGRAM.  COPYMODS     **           01042
**             COPIES THIS DATA INTO THE CORRESPONDING      **           01043
**             FIELDS IN ITS OWN CODE, WHICH THEREFORE      **           01044
**             MUST MATCH THAT SAME CODE IN THE PARMCHEK    **           01045
**             PROGRAM.                                     **           01046
**                                                          **           01047
**             THUS, ON RETURN FROM THE PARMCHEK PROGRAM,   **           01048
**             COPYMODS HAS ACCESS TO ALL THE PARM BIT      **           01049
**             SETTINGS, AND TO ALL THE QUANTITIES RETURNED **           01050
**             FROM THE PARMCHEK PROGRAM ACTION INTO THE    **           01051
**             USER FIELD AREA.                             **           01052
**                                                          **           01053
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **           01054
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **           01055
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **           01056
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **           01057
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **           01058
**             TAPES--TO FIGURE OUT HOW SHORT....           **           01059
**                                                          **           01060
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **           01061
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **           01062
**             POSSIBLE.                                    **           01063
**                                                          **           01064
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **           01065
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **           01066
**             IN ERROR.                                    **           01067
**                                                          **           01068
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **           01069
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **           01070
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **           01071
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **           01072
**                                                          **           01073
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **           01074
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **           01075
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **           01076
**                                                          **           01077
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **           01078
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **           01079
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **           01080
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **           01081
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **           01082
**             PROGRAM.                                     **           01083
**                                                          **           01084
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **           01085
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **           01086
**                                                          **           01087
** LEVEL 062 - FIX DOC A BIT MORE.                          **           01088
**             TEN PARM BITS INSTEAD OF FIVE.               **           01089
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK.     **           01090
**                                                          **           01091
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **           01092
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **           01093
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **           01094
**             OCCURRED, WITHOUT ISSUING A WTOR.            **           01095
**                                                          **           01096
** LEVEL 064 - Return Code adjustments.                     **           01097
**                                                          **           01098
** LEVEL 065 - REWIND Tapes before initting in INITVOLS     **           01099
**             processing.                                  **           01100
**             HEXPRT now works for INITVOLS.               **           01101
**             HEXPRT now prints the external labels in a   **           01102
**             LABADDIN operation.                          **           01103
**             TAPEOWNER= is now honored for an INITVOLS    **           01104
**             operation (this fixes a bug).                **           01105
**             Number for FILELIMIT=nnn is now filled in,   **           01106
**             in the message, when the EBCDIC value        **           01107
**             exists.                                      **           01108
**             Fix another bug--Tape Owner not altered--    **           01109
**             now use the value of tape owner passed from  **           01110
**             the PARMCHEK program.                        **           01111
**                                                          **           01112
** LEVEL 066 - Cosmetic changes.                            **           01113
**             Save original PARM pointer in COPYMODS       **           01114
**             csect itself.  (It got lost after PARMCHEK   **           01115
**             call.)                                       **           01116
**                                                          **           01117
** LEVEL 067 - Introduce ability to INIT ASCII tapes        **           01118
**             (ISO/ANSI) Level 3 or Level 4, with the      **           01119
**             INASC3 or INASC4 keywords.  You can control  **           01120
**             if the HEXPRT is interpreted in EBCDIC or    **           01121
**             ASCII using the ASCII or the EBCDIC          **           01122
**             keywords.  For an ASCII tape init, ASCII     **           01123
**             print interpretation is turned on by         **           01124
**             default.  If you are initting an ASCII       **           01125
**             tape using the INASCII keyword, a Level 3    **           01126
**             ASCII tape will be created.                  **           01127
**                                                          **           01128
**             ASCII Level 4 is only supported in MVS at    **           01129
**             the OS/390 2.4 level and higher.             **           01130
**                                                          **           01131
** LEVEL 068 - Split off label checking routine into a      **           01132
**             separate program, LABELCHK, which is         **           01133
**             assembled with COPYMODS together.            **           01134
**                                                          **           01135
** LEVEL 069 - More ASCII label detection support.          **           01136
**             LABLDUMP now works for ASCII tapes.  The     **           01137
**             control cards in the LABLDUMP DD name have   **           01138
**             been translated into ASCII, the same as the  **           01139
**             labels and the data.  PARM=STRIP now works   **           01140
**             for ASCII tapes.                             **           01141
**                                                          **           01142
**             Fixed a bug where OUTVOLALL didn't work      **           01143
**             for volumes other than VOLUME1.              **           01144
**                                                          **           01145
** LEVEL 070 - More ASCII label detection support.          **           01146
**             LABADDIN works for ASCII tapes now.          **           01147
**             BLKCNT option fixed to convert corrected     **           01148
**             block counts to ASCII when necessary.        **           01149
**             EOVTOEOF now works for ASCII and IBM tapes,  **           01150
**             because a call to LABELCHK now returns the   **           01151
**             altered copy of INAREA to the main program.  **           01152
**             A parm of EOV2 now requires a space after    **           01153
**             it, so as not to interfere with EOV2EOF.     **           01154
**                                                          **           01155
** LEVEL 071 - PRINT LABELS support for ASCII tapes.        **           01156
**                                                          **           01157
**             LBI support for XXX2 print of label          **           01158
**             contents.  Big blocksizes are printed        **           01159
**             in the XXX2 print message if they exist      **           01160
**             in the labels.  This is for IBM labels.      **           01161
**                                                          **           01162
**             Support 14-character tape owner for          **           01163
**             ANSI/ISO (ASCII) tapes.                      **           01164
**                                                          **           01165
**             Other cosmetic changes and many bug fixes.   **           01166
**                                                          **           01167
** LEVEL 072 - Separate all label print operations into a   **           01168
**             call to a separate CSECT called PRINTLBL.    **           01169
**             Now there is a unified label print routine   **           01170
**             for both EXTLBLIN and INAREA label input.    **           01171
**                                                          **           01172
** LEVEL 073 - Separate messages into their own CSECT.      **
**             Address with PTMS macro, and special setup.  **
**             Assembler instructions which access fields   **
**             in the MSGCSECT CSECT are created with the   **
**             new MVFMS macro.                             **
**                                                          **
**************************************************************           01173
**************************************************************           01174
         MACRO
.* ----------------------------------------------------------------- *
.*  Print a message to SYSPRINT from a 133-character message line    *
.*  that is in the MSGCSECT CSECT.                                   *
.* ----------------------------------------------------------------- *
&NAME    PTMS  &MSGLINE
*                                   Print a message line to SYSPRINT
         STM   R4,R5,SAV45MSG             Store work registers
         USING MSGCSECT,R5,R4             Address MSGCSECT
         L     R5,=V(MSGCSECT)            Load CSECT entry
         LA    R4,4095(,R5)               Second base
         LA    R4,1(,R4)                    completed
         MVI   LINE-1,X'40'               Move in blank
         MVC   LINE(133),LINE-1           And blank line
         MVC   LINE(133),&MSGLINE         Move message to line & print   01568
         PUT   SYSPRINT,LINE
         LM    R4,R5,SAV45MSG             Restore work registers
         DROP  R5,R4                      And tell that they're gone
         MEND
         MACRO
.* ----------------------------------------------------------------- *
.*  Perform an instruction with one or more operands from MSGCSECT.  *
.* ----------------------------------------------------------------- *
&NAME    MVFMS &OPERA,&OPERB,&OPC=MVC
*                                         Operate with a message field
         STM   R4,R5,SAV45MSG             Store work registers
         USING MSGCSECT,R5,R4             Address MSGCSECT
         L     R5,=V(MSGCSECT)            Load CSECT entry
         LA    R4,4095(,R5)               Second base
         LA    R4,1(,R4)                    completed
         &OPC  &OPERA,&OPERB              &OPC operation w/msg field
         LM    R4,R5,SAV45MSG             Restore work registers
         DROP  R5,R4                      And tell that they're gone
         MEND
         MACRO                                                           01175
&NAME    HEX   &TO,&LEN,&FROM                                            01176
&NAME    DS    0H                                                        01177
         ST    R4,SAV4HEX                                                01178
         STM   R15,R1,HEXSAVE                                            01179
         LA    R1,&FROM                                                  01180
         LA    R0,&LEN                                                   01181
         LA    R15,&TO                                                   01182
         BAL   R4,HEX                                                    01183
         L     R4,SAV4HEX                                                01184
         LM    R15,R1,HEXSAVE                                            01185
         MEND                                                            01186
         EJECT                                                           01187
         YREGS                                                           01188
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                01189
         GBLA  &HEXDFLA                                                  01190
* ------------------------------------------------------------------ *   01191
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   01192
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   01193
* ------------------------------------------------------------------ *   01194
&HEXDFLA SETA  4                                                         01195
&HEXDFLC SETC  '&HEXDFLA'                                                01196
COPYMODS CSECT                                                           01197
         USING *,R15                                          SBG 03/00  01198
         B     EYECATCH                                       SBG 03/00  01199
         DC    C'HEX DUMP '                                              01200
HEXDFLCC DC    C'&HEXDFLC'                                               01201
         DC    C' RECORDS '                                              01202
HEXDFLL  EQU   L'HEXDFLCC                                                01203
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 01204
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  01205
         DC    C'COPYMODS Level 073 '                         SBG 03/00  01206
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  01207
         DC    C'SYSIN IN PARMCHEK PGM'                                  01208
SAVEAREA DC    18F'0'                                                    01209
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  01210
         SAVE  (14,12)                                                   01211
         LR    R5,R1          SAVE PARM POINTER                          01212
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   01213
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          01214
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         01215
         LR    R13,R1               NEW SAVE AREA ADDRESS                01216
         DROP  R15                                                       01217
* -----                       SET UP SIX BASE REGISTERS                  01218
         USING COPYMODS,R12,R11,R10,R9,R8,R6                             01219
         LR    R12,R15                                                   01220
         LA    R11,4095(,R12)                                            01221
         LA    R11,1(,R11)                                               01222
         LA    R10,4095(,R11)                                            01223
         LA    R10,1(,R10)                                               01224
         LA    R9,4095(,R10)                                             01225
         LA    R9,1(,R9)                                                 01226
         LA    R8,4095(,R9)                                              01227
         LA    R8,1(,R8)                                                 01228
         LA    R6,4095(,R8)                                              01229
         LA    R6,1(,R6)                                                 01230
         LR    R1,R5          RESTORE PARM POINTER                       01231
         ST    R1,PARMSTRT    PRESERVE PARM POINTER WHERE IT CAN         01232
*                             BE PASSED TO THE PARMCHEK PROGRAM.         01233
         ST    R1,PARMSAVE    And store the PARM pointer into this       01234
*                             program too, so it doesn't get lost.       01235
         L     R1,0(,R1)                                                 01236
         LH    R5,0(,R1)      SAVE PARM LENGTH, AND                      01237
         ST    R5,PARMSLEN    PRESERVE IT AS A FULLWORD                  01238
         MVC   SAVMSLEN,PARMSLEN     KEEP IT SAFE - DOUBLE SURE          01239
         L     R0,=V(TRTCSECT)       SAVE HEX TRANSLATE TABLE POINTER    01240
         ST    R0,SAVTRTCS           AND STORE IT FOR LATER USE.         01241
         L     R0,=V(LABELCHK)       Entry point of called LABELCHK pgm  01242
         ST    R0,LABCHENT           Save entry point for calling later  01243
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm  01244
         ST    R0,PRTLBENT           Save entry point for calling later  01245
* ----------------------------------------------------------------- *    01246
*                                                                   *    01247
*  CALLING THE PARMCHEK PROGRAM REQUIRES:                           *    01248
*                                                                   *    01249
*     INPUT:   R2 POINTS TO STRTVALU, WHERE PARM INFORMATION IS     *    01250
*              ALREADY PRESERVED IN THE PARMSLEN AND PARMSTRT       *    01251
*              FIELDS.                                              *    01252
*                                                                   *    01253
*     OUTPUT:  R1 POINTS TO PARMCHEK'S PARMFLGS, ALREADY ALL        *    01254
*              FILLED IN.                                           *    01255
*                                                                   *    01256
*              R2 POINTS TO PARMCHEK'S USER AREA STARTING WITH      *    01257
*              STRTVALU, FILLED IN WITH USER INFORMATION FROM       *    01258
*              THE PARM SCAN.                                       *    01259
*                                                                   *    01260
*     AFTER THE PARMCHEK PROGRAM RETURNS CONTROL TO COPYMODS,       *    01261
*     ITS PARMFLGS AND STRTVALU AREAS ARE COPIED OVER INTO THE      *    01262
*     CORRESPONDING AREAS IN THE COPYMODS PROGRAM.                  *    01263
*                                                                   *    01264
*     PARMCHEK'S USER AREA STARTING WITH LABEL STRTVALU HAS TO      *    01265
*     EXACTLY MATCH COPYMODS' USER AREA STARTING WITH STRTVALU.     *    01266
*                                                                   *    01267
* ------------------------------------------------------------------*    01268
*    NOW DO IT.  CALL THE PARMCHEK PROGRAM AND GET THE RETURNS.     *    01269
* ------------------------------------------------------------------*    01270
         L     R0,=V(PARMCHEK)                                           01271
         ST    R0,ENTRYPT                                                01272
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM      01273
         LA    R2,STRTVALU        USER AREA ADDRESS TO BE PASSED.        01274
         BALR  R14,R15                 DO CALL                           01275
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS     01276
         ST    R2,USERSAVE             ADDRESS OF RETURNED USER AREA     01277
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS      01278
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK     01279
         MVC   VOLSTG(6),VOLSTG1          Stage OUTVOLALL volume name    01280
* ----------------------------------------------------------------- *    01281
* ----------------------------------------------------------------- *    01282
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *    01283
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *    01284
* ----------------------------------------------------------------- *    01285
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON         01286
         TM    PARMFLG1,X'20'   ARE WE SKIPPING LTM'S?        SBG 04/00  01287
         BZ    COPYLTMS         NO. WE'RE COPYING THEM.       SBG 04/00  01288
*                               YES. WE'RE SKIPPING THEM, SO  SBG 04/00  01289
         MVFMS LTMRPTI,SKIPPED  MOVE INDICATOR TO REPORT      SBG 03/00  01290
         B     SKIPLTMS         AND DO OTHER INITIALIZATION   SBG 03/00  01291
COPYLTMS DS    0H
         MVFMS LTMRPTI,COPIED   MOVE INDICATOR TO REPORT      SBG 03/00  01292
SKIPLTMS DS    0H                                             SBG 06/00  01293
* ------- >> ------- >>                                                  01294
         TM    PARMFLG5,X'01'      INITTING ASCII TYPE 3?                01295
         BZ    NOASCII4            NO. DON'T ADJUST.                     01296
         NI    PARMFLG5,FF-X'02'   YES, TURN OFF ASCII TYPE 4.           01297
NOASCII4 DS    0H                                                        01298
* ------- >> ------- >>                                                  01299
* ----- * ----- * ------                                                 01300
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?                01301
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                    01302
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                    01303
NONOEXNL DS    0H                                                        01304
* ----- * ----- * ------                                                 01305
* ----- * ----- * ------ *------                                         01306
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                            01307
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                    01308
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON              01309
NOCUMSEP DS    0H                                                        01310
* ----- * ----- * ------ *------                                         01311
* ----- * -----                                                          01312
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                        01313
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                    01314
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON        01315
NOCUMTOT DS    0H                                                        01316
* ----- * -----                                                          01317
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR              01318
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *      01319
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?           01320
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.           01321
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP            01322
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO       01323
*                                      BECAUSE WE'RE COPYING TO SL.      01324
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS             01325
CANLBDMP DS    0H                                                        01326
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *    01327
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                          01328
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS             01329
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                   01330
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                    01331
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01332
NOLBDQUI DS    0H                                                        01333
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *    01334
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *     01335
         TM    PARMFLG4,X'02'      IS STRIP ON?                          01336
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS         01337
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01338
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF                01339
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF                01340
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                            01341
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                           01342
         NI    PARMFLG5,FF-X'03'   INIT ASCII OFF                        01343
NOSTRADJ DS    0H                  END of the STRIP adjustments          01344
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *     01345
* ----------------------------------------------------------------- *    01346
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *    01347
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *    01348
* ----------------------------------------------------------------- *    01349
* --                                                             -- *    01350
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?             01351
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM        01352
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                    01353
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED          01354
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               01355
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 01356
         BZ    NOOPTRP1          NO. DON'T CALL IT                       01357
         BALR  R14,R15           CALL SUBPROGRAM                         01358
NOOPTRP1 LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                 01359
NOOPTRPT DS    0H                                                        01360
*  -------------------------------------------------------------- *      01361
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL  SBG 06/00  01362
         RDJFCB IN                                                       01363
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL        01364
         MVFMS SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01365
         MVFMS READOMSG+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01366
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST   01367
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA             SBG 03/00  01368
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                 01369
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET SBG 03/00  01370
         SPACE 3                                                         01371
OPENSYSP DS    0H                                                        01372
*                                                                        01373
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                               01374
*                                                                        01375
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01376
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01377
         BO    OPENS      YES--SKIP ALL THE TIOT FOR OUT DD'S SBG 06/00  01378
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01379
         L     R2,16          R2=CVT                                     01380
         L     R2,0(,R2)      R2=TCB WORDS                               01381
         L     R2,4(,R2)      R2=MY TCB                                  01382
         L     R2,12(,R2)     R2=TIOT                                    01383
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                          01384
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                             01385
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES        01386
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                    01387
         BNE   TIOT1          NO                                         01388
         OI    FLAG1,OP1      SHOW IT                                    01389
         STM   R14,R3,SAV14T03                                    TEST   01390
         RDJFCB OUT1                                                     01391
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL              01392
         MVC   VOLDD,DDOUT1                                              01393
         LM    R14,R3,SAV14T03                                    TEST   01394
         B     TIOTNEXT       CONTINUE                                   01395
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                    01396
         BNE   TIOT2          NO                                         01397
         OI    FLAG1,OP2      SHOW IT                                    01398
         STM   R14,R3,SAV14T03                                    TEST   01399
         RDJFCB OUT2                                                     01400
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL              01401
         MVC   VOLDD,DDOUT2                                              01402
         LM    R14,R3,SAV14T03                                    TEST   01403
         B     TIOTNEXT       CONTINUE                                   01404
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                    01405
         BNE   TIOT3          NO                                         01406
         OI    FLAG1,OP3      SHOW IT                                    01407
         STM   R14,R3,SAV14T03                                    TEST   01408
         RDJFCB OUT3                                                     01409
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL              01410
         MVC   VOLDD,DDOUT3                                              01411
         LM    R14,R3,SAV14T03                                    TEST   01412
         B     TIOTNEXT       CONTINUE                                   01413
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                    01414
         BNE   TIOT4          NO                                         01415
         OI    FLAG1,OP4      SHOW IT                                    01416
         STM   R14,R3,SAV14T03                                    TEST   01417
         RDJFCB OUT4                                                     01418
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL              01419
         MVC   VOLDD,DDOUT4                                              01420
         LM    R14,R3,SAV14T03                                    TEST   01421
         B     TIOTNEXT       CONTINUE                                   01422
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                    01423
         BNE   TIOT5          NO                                         01424
         OI    FLAG1,OP5      SHOW IT                                    01425
         STM   R14,R3,SAV14T03                                    TEST   01426
         RDJFCB OUT5                                                     01427
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL              01428
         MVC   VOLDD,DDOUT5                                              01429
         LM    R14,R3,SAV14T03                                    TEST   01430
         B     TIOTNEXT       CONTINUE                                   01431
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                    01432
         BNE   TIOT6          NO                                         01433
         OI    FLAG1,OP6      SHOW IT                                    01434
         STM   R14,R3,SAV14T03                                    TEST   01435
         RDJFCB OUT6                                                     01436
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL              01437
         MVC   VOLDD,DDOUT6                                              01438
         LM    R14,R3,SAV14T03                                    TEST   01439
         B     TIOTNEXT       CONTINUE                                   01440
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                    01441
         BNE   TIOT7          NO                                         01442
         OI    FLAG1,OP7      SHOW IT                                    01443
         STM   R14,R3,SAV14T03                                    TEST   01444
         RDJFCB OUT7                                                     01445
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL              01446
         MVC   VOLDD,DDOUT7                                              01447
         LM    R14,R3,SAV14T03                                    TEST   01448
         B     TIOTNEXT       CONTINUE                                   01449
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                    01450
         BNE   TIOT8          NO                                         01451
         OI    FLAG1,OP8      SHOW IT                                    01452
         STM   R14,R3,SAV14T03                                    TEST   01453
         RDJFCB OUT8                                                     01454
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL              01455
         MVC   VOLDD,DDOUT8                                              01456
         LM    R14,R3,SAV14T03                                    TEST   01457
         B     TIOTNEXT       CONTINUE                                   01458
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                    01459
         BNE   TIOT9          NO                                         01460
         OI    FLAG2,OP9      SHOW IT                                    01461
         STM   R14,R3,SAV14T03                                    TEST   01462
         RDJFCB OUT9                                                     01463
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL              01464
         MVC   VOLDD,DDOUT9                                              01465
         LM    R14,R3,SAV14T03                                    TEST   01466
         B     TIOTNEXT       CONTINUE                                   01467
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                  01468
         BNE   TIOT10         NO                                         01469
         OI    FLAG2,OP10     SHOW IT                                    01470
         STM   R14,R3,SAV14T03                                    TEST   01471
         RDJFCB OUT10                                                    01472
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL             01473
         MVC   VOLDD,DDOUT10                                             01474
         LM    R14,R3,SAV14T03                                    TEST   01475
         B     TIOTNEXT       CONTINUE                                   01476
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                  01477
         BNE   TIOT11         NO                                         01478
         OI    FLAG2,OP11     SHOW IT                                    01479
         STM   R14,R3,SAV14T03                                    TEST   01480
         RDJFCB OUT11                                                    01481
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL             01482
         MVC   VOLDD,DDOUT11                                             01483
         LM    R14,R3,SAV14T03                                    TEST   01484
         B     TIOTNEXT       CONTINUE                                   01485
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                  01486
         BNE   TIOT12         NO                                         01487
         OI    FLAG2,OP12     SHOW IT                                    01488
         STM   R14,R3,SAV14T03                                    TEST   01489
         RDJFCB OUT12                                                    01490
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL             01491
         MVC   VOLDD,DDOUT12                                             01492
         LM    R14,R3,SAV14T03                                    TEST   01493
         B     TIOTNEXT       CONTINUE                                   01494
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                  01495
         BNE   TIOT13         NO                                         01496
         OI    FLAG2,OP13     SHOW IT                                    01497
         STM   R14,R3,SAV14T03                                    TEST   01498
         RDJFCB OUT13                                                    01499
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL             01500
         MVC   VOLDD,DDOUT13                                             01501
         LM    R14,R3,SAV14T03                                    TEST   01502
         B     TIOTNEXT       CONTINUE                                   01503
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                  01504
         BNE   TIOT14         NO                                         01505
         OI    FLAG2,OP14     SHOW IT                                    01506
         STM   R14,R3,SAV14T03                                    TEST   01507
         RDJFCB OUT14                                                    01508
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL             01509
         MVC   VOLDD,DDOUT14                                             01510
         LM    R14,R3,SAV14T03                                    TEST   01511
         B     TIOTNEXT       CONTINUE                                   01512
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                  01513
         BNE   TIOT15         NO                                         01514
         OI    FLAG2,OP15     SHOW IT                                    01515
         STM   R14,R3,SAV14T03                                    TEST   01516
         RDJFCB OUT15                                                    01517
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL             01518
         MVC   VOLDD,DDOUT15                                             01519
         LM    R14,R3,SAV14T03                                    TEST   01520
         B     TIOTNEXT       CONTINUE                                   01521
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                  01522
         BNE   TIOTNEXT       NO                                         01523
         OI    FLAG2,OP16     SHOW IT                                    01524
         STM   R14,R3,SAV14T03                                    TEST   01525
         RDJFCB OUT16                                                    01526
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL             01527
         MVC   VOLDD,DDOUT16                                             01528
         LM    R14,R3,SAV14T03                                    TEST   01529
         B     TIOTNEXT       CONTINUE                                   01530
TIOTNEXT SR    R3,R3                                                     01531
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                      01532
         AR    R2,R3          R2=NEXT DD ENTRY                           01533
         B     TIOTLOOP       GO CHECK IT                                01534
*  ---------------------------------------------------------  SBG 09/00  01535
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*    01536
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                        01537
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.      01538
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?           01539
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                    01540
         MVC   VOLUME1(6),VOLSTG1            PROPAGATE VOLSER            01541
         MVC   VOLUME2(VOLALLLN-6),VOLUME1                               01542
NOVOLOV  DS    0H                                                        01543
*  ---------------------------------------------------------  SBG 09/00  01544
         SPACE 3                                                         01545
*  -----------------------------------------------------------------  *  01546
*                                                                        01547
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY           01548
*                                                                        01549
*  -----------------------------------------------------------------  *  01550
OPENS    DS    0H               START OPENING FILES                      01551
         OPEN  (SYSPRINT,OUTPUT)                                         01552
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                        01553
         BO    OPENMOVE                                                  01554
         TM    PARMFLG5,X'01'    INIT ASCII TAPES?                       01555
         BO    OPENMOVE                                                  01556
         TM    PARMFLG5,X'02'    INIT ASCII TAPES?                       01557
         BO    OPENMOVE                                                  01558
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.     01559
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  01560
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00  01561
         OPEN  (LABLDUMP,OUTPUT)                              SBG 09/00  01562
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                   01563
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.         01564
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.            01565
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME              01566
NOLBLDD  DS    0H                                                        01567
         PTMS  LDMPMSG            DISPLAY MISSING DD MESSAGE             01568
         OI    ENDITFLG,X'01'     FLAG THAT LABLDUMP NOT OPEN.           01570
OPNLABIN TM    PARMFLG2,X'80'     DO WE NEED LABADDIN?                   01571
         BZ    CHKENDIT           NO. SEE IF ANYTHING ELSE IS BAD        01572
         OPEN  (LABADDIN,INPUT)                                          01573
         TM    LABADDIN+48,X'10'  IS THE DD OPEN  ?                      01574
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE               01575
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.            01576
         B     CHKENDIT           GO CHECK IF WE HAVE TO END.            01577
NOLABIN  DS    0H                                                        01578
         PTMS  NLABMSG            DISPLAY MISSING DD MESSAGE             01579
         OI    ENDITFLG,X'04'     FLAG THAT LABADDIN NOT OPEN.           01581
CHKENDIT TM    ENDITFLG,X'07'     CHECK IF WE HAVE TO END                01582
         BZ    OPENIN             NOTHING WRONG.  GO ON.                 01583
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?     01584
         CLOSE (SYSPRINT)                                                01585
         TM    OPENDFLG,X'01'     IS LABLDUMP DD OPEN?                   01586
         BZ    TRYCLABN           NO. TRY IF SYSIN IS OPEN.              01587
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    01588
         CLOSE (LABLDUMP)                                                01589
TRYCLABN TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                   01590
         BZ    REALYEND           NO. GET OUT.                           01591
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01592
         CLOSE (LABADDIN)                                                01593
REALYEND B     THEEND                                                    01594
         EJECT                                                           01595
OPENIN   OPEN  (IN,INPUT)                                                01596
         TM    IN+48,X'10'                                               01597
         BO    INISOPEN                                                  01598
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *         01599
         TM    PARMFLG3,X'01'       INITTING TAPES?                      01600
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01601
*                                   BYPASS MESSAGE.                      01602
         TM    PARMFLG5,X'01'       INITTING ASCII TAPES?                01603
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01604
*                                   BYPASS MESSAGE.                      01605
         TM    PARMFLG5,X'02'       INITTING ASCII TAPES?                01606
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01607
*                                   BYPASS MESSAGE.                      01608
         PTMS  INNOTOPN             MESSAGE                              01610
         B     ENDEM                GO TO CLOSE FILES, AND OUT.          01612
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *         01613
INISOPEN DS    0H                                                        01614
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?              01615
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO              01616
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01617
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?                01618
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN          01619
* ----                                                                   01620
OPENINCK DS    0H                                                        01621
         LA    R2,IN              POINT TO IN DCB                        01622
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                  01623
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                   01624
         EXCP  REWIOB                                                    01625
         WAIT  ECB=REWECB                                                01626
         MVC   INECB,=F'0'        INITIALIZE IN'S ECB                    01627
         EXCP  INIOB                                                     01628
         WAIT  ECB=INECB                                                 01629
         CLC   INAREA(4),=C'VOL1' Is the tape IBM SL ?                   01630
         BE    OPENINSL                 Yes, turn on SL flag.            01631
         CLC   INAREA(4),=X'564F4C31'   ASCII VOL1 ?                     01632
         BE    OPENINSL                 Yes, turn on SL flag.            01633
         B     RESETIN            No. Just rewind to reposition.         01634
OPENINSL DS    0H                                                        01635
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL              01636
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?              01637
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN    01638
****** ------ BELOW ------ SL FILE NUMBERS.                              01639
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?           01640
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                 01641
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?      01642
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG      01643
**** ----- >>>>>   Force file limiting by SL   - - -  below              01644
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim   01645
         BZ    NOSLFLIM              Not set, bypass code for it         01646
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number          01647
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01648
         MVFMS LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning     01649
         PTMS  FORCESLM              Say you'll force limiting by SL     01651
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?     01653
         BNO   SLLIMRES              No. only SLLIM. So go on.           01654
         PTMS  TWOFORCE              Say you'll force limiting by SL     01656
SLLIMRES DS    0H                                                        01658
         B     RESETIN                                                   01659
NOSLFLIM DS    0H                                                        01660
**** ----- >>>>>   Force file limiting by SL   - - -  above              01661
**** ----- >>>>>   Force file limiting by NL   - - -  below              01662
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim   01663
         BZ    NONLFLIM              Not set, bypass code for it         01664
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number          01665
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01666
         MVFMS LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning     01667
         PTMS  FORCENLM              Say you'll force limiting by NL     01669
         B     RESETIN                                                   01671
NONLFLIM DS    0H                                                        01672
**** ----- >>>>>   Force file limiting by NL   - - -  above              01673
* -- > Strip test                                                        01674
         TM    PARMFLG4,X'02'        Are we stripping labels?            01675
         BZ    OPENINXW              No. Bypass this section.            01676
         TM    PARMFLG3,X'02'        Are we limiting files also?         01677
         BO    OPENINXW              Yes. Use SL number.                 01678
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.   01679
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01680
         MVFMS LIMFMSG+68(2),=C'SL'  But indicate that input is SL       01681
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01682
OPENINXW DS    0H                                                        01683
* -- > Strip test                                                        01684
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL    01685
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01686
         MVFMS LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE    01687
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01688
OPENINXX DS    0H                                                        01689
****** ------ ABOVE ------ SL FILE NUMBERS.                              01690
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.     01691
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG                01693
RESETLAD TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                   01695
         BZ    RESETEND           NO. GET OUT.                           01696
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01697
         CLOSE (LABADDIN)                                                01698
RESETEND CLOSE (IN)                                                      01699
         B     THEEND                                                    01700
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.     01701
RESETIN  DS    0H                                                        01702
         MVC   REWECB,=F'0'                                              01703
         EXCP  REWIOB                                                    01704
         WAIT  ECB=REWECB                                                01705
NOINITOP DS    0H                                                        01706
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01707
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.            01708
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.             01709
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA                01710
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01711
         BNZ   NOLBLDD                  IF NOT, FLAG                     01712
         ST    R7,SAVE7REG              SAVE R7                          01713
         LA    R7,LBLJFCB               POINT TO JFCB AREA               01714
         USING JFCBLK,R7                MAP THE AREA                     01715
         MVFMS LDMPOUTM+38(44),JFCBDSNM                                  01716
         MVFMS LDMPOUTM+89(8),JFCBELNM                                   01717
         MVFMS LDMPOUTM+105(6),JFCBVOLS                                  01718
         PTMS  LDMPOUTM                                                  01720
         DROP  R7                                                        01722
         L     R7,SAVE7REG              RESTORE R7                       01723
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.         SBG 09/00  01724
         TM    PARMFLG2,X'80'     TEST IF LABLDUMP IS NEEDED.            01725
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.             01726
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA                01727
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01728
         BNZ   NOLABIN                  IF NOT, FLAG                     01729
         ST    R7,SAVE7REG              SAVE R7                          01730
         LA    R7,LBNJFCB               POINT TO JFCB AREA               01731
         USING JFCBLK,R7                MAP THE AREA                     01732
         MVFMS LDMPINMS+38(44),JFCBDSNM                                  01733
         MVFMS LDMPINMS+89(8),JFCBELNM                                   01734
         MVFMS LDMPINMS+105(6),JFCBVOLS                                  01735
         PTMS  LDMPINMS                                                  01737
         DROP  R7                                                        01739
         L     R7,SAVE7REG              RESTORE R7                       01740
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.         SBG 09/00  01741
* --- READ ONLY CODE ------------------ BELOW --------------- SBG 06/00  01742
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01743
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.    SBG 06/00  01744
*                         OTHERWISE PUT INITIAL READONLY MSG  SBG 06/00  01745
         PTMS  READOMSG              MOVE READ-ONLY MESSAGE              01746
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01748
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01749
         BZ    NOLIMFMR         NO, SKIP MESSAGE                         01750
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01752
         PTMS  LIMFMSG                  MOVE MESSAGE TEXT IN             01753
NOLIMFMR DS    0H                                                        01755
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01756
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01757
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01758
         BZ    N1LIMHEX         NO, SKIP MESSAGE                         01759
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01760
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01761
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01762
         MVFMS LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01763
         B     N1LIMPRT             AND PRINT IT                         01764
N1LIMDEF DS    0H                                                        01765
         MVFMS LIMPMSG+11(10),PRTCHAR                                    01766
         MVFMS LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01767
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                         01768
N1LIMHEX DS    0H                                                        01769
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01770
         B     READIN                                         SBG 06/00  01771
* --- READ ONLY CODE ------------------ ABOVE --------------- SBG 06/00  01772
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE    01773
*                             THIS ALSO MOVES FLAG2 TO FLAG4  SBG 03/00  01774
*  ---------------------------------------------------------  SBG 03/00  01775
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01776
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01777
         BZ    NOLIMHEX         NO, SKIP MESSAGE                         01778
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01779
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01780
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01781
         MVFMS LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01782
         B     NOLIMPRT             AND PRINT IT                         01783
NOLIMDEF DS    0H                                                        01784
         MVFMS LIMPMSG+11(10),PRTCHAR                                    01785
         MVFMS LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01786
NOLIMPRT PUT   SYSPRINT,LINE                                             01787
NOLIMHEX DS    0H                                                        01788
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01789
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                         01790
         BO    INITEBCD                                                  01791
         TM    PARMFLG5,X'01'   INIT ASCII TAPE LEVEL 3?                 01792
         BO    INITAS3                                                   01793
         TM    PARMFLG5,X'02'   INIT ASCII TAPE LEVEL 4?                 01794
         BO    INITAS4                                                   01795
         B     OPENOINT                                                  01796
INITEBCD DS    0H
         MVFMS INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN          01797
         B     NOCORPRT                                                  01798
INITAS3  DS    0H
         MVFMS INITMSG,INITASC3     MOVE APPROPRIATE MESSAGE IN          01799
         MVFMS INITCOPD,INITCREA                                         01800
         B     NOCORPRT                                                  01801
INITAS4  DS    0H
         MVFMS INITMSG,INITASC4     MOVE APPROPRIATE MESSAGE IN          01802
         MVFMS INITCOPD,INITCREA                                         01803
         B     NOCORPRT                                                  01804
OPENOINT DS    0H                                                        01805
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01806
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT      01807
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE              01808
         ST    R7,SAVE7REG                                               01809
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE       01810
         L     R7,SAVE7REG                                               01811
NOCORPRT DS    0H                                                        01812
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01813
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01814
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01815
         BZ    NOLIMFMS         NO, SKIP MESSAGE                         01816
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01818
         PTMS  LIMFMSG          MOVE MESSAGE TEXT IN                     01819
NOLIMFMS DS    0H                                                        01821
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01822
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   01823
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?           01824
         BZ    NOLIMLMR         NO, SKIP MESSAGE                         01825
         MVFMS LIMLMSG+11(10),LABCHAR                                    01827
         PTMS  LIMLMSG          MOVE MESSAGE TEXT IN                     01828
NOLIMLMR DS    0H                                                        01830
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   01831
**** ---- >>> Message that labels are being stripped <<< ---- below ***  01832
         TM    PARMFLG4,X'02'     Are labels being stripped?             01833
         BZ    NOSTRMSG                                                  01834
         PTMS  STRPMSG            Show we're stripping labels            01836
NOSTRMSG DS    0H                                                        01838
**** ---- >>> Message that labels are being stripped <<< ---- above ***  01839
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                          01840
         BZ    OPEN1          NO                                         01841
         OPEN  (OUT1,OUTPUT)                                             01842
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                          01843
         BZ    OPEN2          NO                                         01844
         OPEN  (OUT2,OUTPUT)                                             01845
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                          01846
         BZ    OPEN3          NO                                         01847
         OPEN  (OUT3,OUTPUT)                                             01848
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                          01849
         BZ    OPEN4          NO                                         01850
         OPEN  (OUT4,OUTPUT)                                             01851
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                          01852
         BZ    OPEN5          NO                                         01853
         OPEN  (OUT5,OUTPUT)                                             01854
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                          01855
         BZ    OPEN6          NO                                         01856
         OPEN  (OUT6,OUTPUT)                                             01857
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                          01858
         BZ    OPEN7          NO                                         01859
         OPEN  (OUT7,OUTPUT)                                             01860
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                          01861
         BZ    OPEN8          NO                                         01862
         OPEN  (OUT8,OUTPUT)                                             01863
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                          01864
         BZ    OPEN9          NO                                         01865
         OPEN  (OUT9,OUTPUT)                                             01866
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                         01867
         BZ    OPEN10         NO                                         01868
         OPEN  (OUT10,OUTPUT)                                            01869
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                         01870
         BZ    OPEN11         NO                                         01871
         OPEN  (OUT11,OUTPUT)                                            01872
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                         01873
         BZ    OPEN12         NO                                         01874
         OPEN  (OUT12,OUTPUT)                                            01875
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                         01876
         BZ    OPEN13         NO                                         01877
         OPEN  (OUT13,OUTPUT)                                            01878
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                         01879
         BZ    OPEN14         NO                                         01880
         OPEN  (OUT14,OUTPUT)                                            01881
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                         01882
         BZ    OPEN15         NO                                         01883
         OPEN  (OUT15,OUTPUT)                                            01884
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                         01885
         BZ    READIN         NO                                         01886
         OPEN  (OUT16,OUTPUT)                                            01887
         EJECT                                                           01888
* --------------------------------------------------------- *            01889
*                                                           *            01890
*  READ INPUT                                               *            01891
*                                                           *            01892
* --------------------------------------------------------- *            01893
*                                                           *            01894
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *            01895
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *            01896
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *            01897
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *            01898
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *            01899
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *            01900
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *            01901
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*            01902
*                                                           *            01903
* --------------------------------------------------------- *            01904
READIN   DS    0H                                                        01905
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                   01906
         BO    TLITWRIT                                                  01907
         TM    PARMFLG5,X'01'     INITTING ASCII TAPE LEVEL 3?           01908
         BO    TLITASCI                                                  01909
         TM    PARMFLG5,X'02'     INITTING ASCII TAPE LEVEL 4?           01910
         BO    TLITASCI                                                  01911
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR  SBG 03/00  01912
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                     01913
         MVI   INECB,X'00'    INITIALIZE ECB                             01914
* ------------------------------------------------------------------ *   01915
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *   01916
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *   01917
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *   01918
* ------------------------------------------------------------------ *   01919
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                  01920
         BZ    NONLSL0        NO. IGNORE THIS CODE                       01921
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN          01922
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE           01923
NONLSL0  DS    0H                                                        01924
* ----------------------------------------------------------- SBG 09/00  01925
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE               01926
***** --------------- LIMITING FILES ------------------ ***** BELOW *    01927
         TM    PARMFLG3,X'02'     LIMITING FILES?                        01928
         BZ    INOLIMIT           NO - BYPASS THIS CODE                  01929
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?               01930
         BZ    INOLIMIT           NOT YET - JUST GO ON                   01931
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE     01932
*                                 AND DON'T DO MORE READS OF INPUT TAPE  01933
INOLIMIT DS    0H                                                        01934
***** --------------- LIMITING FILES ------------------ ***** ABOVE *    01935
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *    01936
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                  01937
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS     01938
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK     01939
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                     01940
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ      01941
         L     R7,SAVE7RG3        RESTORE R7                             01942
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                     01943
NOLBDADJ DS    0H                                                        01944
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *    01945
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01946
*                                                                        01947
*       Since there is a possibility that the WRITE will                 01948
*       not work for one of the output ddnames, we have                  01949
*       to save the total bytes successfully moved to the                01950
*       currently open output tapes.  Also file count for                01951
*       this tape, and block count for this file.                        01952
*                                                                        01953
         MVC   PRVBY,TOTBY        Total bytes before this READ           01954
         MVC   FILECNTP,FILECNT   Total file count before this READ      01955
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ     01956
*                                                                        01957
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01958
         EXCP  INIOB          READ                                       01959
         WAIT  ECB=INECB      WAIT FOR READ                              01960
         TM    INCSW+4,X'01'  WAS TM READ?                               01961
         BO    READIN1        YES                                        01962
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                01963
         BNE   INERR          NO -- ERROR                                01964
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                    01965
*        LH    R2,INCCW+6     R2=READ LENGTH                  SBG 03/00  01966
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY    SBG 03/00  01967
         MVC   HALFWORK(2),INCCW+6   READ LENGTH              SBG 03/00  01968
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER     SBG 03/00  01969
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT          SBG 03/00  01970
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT      SBG 03/00  01971
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER     SBG 03/00  01972
         SR    R2,R3          R2=ACTUAL LENGTH READ                      01973
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED              01974
         NI    DATFLAG,FF-X'10'    SHOW REAL DATA HAS BEEN READ          01975
         NI    ISLBLFLG,FF-X'03'   NOT A LABEL UNTIL PROVEN SO           01976
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01977
         ST    R7,TOTB7REG        Save BAL Register                      01978
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01979
         LA    R3,TOTBY           POINT REGISTER TO TOTALS COUNTER       01980
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS BLOCK              01981
         L     R7,TOTB7REG        Restore BAL Register                   01982
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01983
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*             01984
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                     01985
         BZ    NPRTHEX           NO. SKIP THIS CODE.                     01986
         ST    R7,R7HXPRT        SAVE R7.                                01987
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.            01988
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT             01989
         BCTR  R1,0              LOWER BY ONE                            01990
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS               01991
         L     R7,R7HXPRT        RESTORE R7.                             01992
NPRTHEX  DS    0H                                                        01993
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*             01994
**** ----  BYTE COUNTS ---- BELOW                                        01995
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                     01996
         BZ    INNOBYTE       NO, SKIP INCREMENT                         01997
         L     R2,BYTESMVD    LOAD FULLWORD OF BYTES MOVED               01998
         LA    R3,DBIN        POINT REGISTER TO COUNTER                  01999
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                  02000
INNOBYTE DS    0H                                                        02001
**** ----  BYTE COUNTS ---- ABOVE                                        02002
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  02003
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST? SBG 03/00  02004
         BNE   READGO1        NO. SKIP THIS PROCESSING.       SBG 03/00  02005
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ    SBG 03/00  02006
* ------------------------------------------------------------------*    02007
*    Call the LABELCHK program and get the returns.                 *    02008
* ------------------------------------------------------------------*    02009
         L     R15,LABCHENT       Get entry point of called program      02010
         STM   R1,R3,SAVE13LC     Save R1 and R2.                        02011
         LA    R1,PARMFLGS        Point R1 to parm flags.                02012
         LA    R2,LCHKPASS        Point R2 to user area to be passed.    02013
         L     R3,=A(INAREA)      Point R3 to address of INAREA.         02014
         BALR  R14,R15                 Do CALL.                          02015
         ST    R2,SAVELBCK             Address of returned user area     02016
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.    02017
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.           02018
*                                 A call to LABCHECK overlays INAREA,    02019
*                                 so if a LABCHECK routine alters        02020
*                                 a label, the alteration will be        02021
*                                 written out to the output tapes.       02022
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA     02023
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    02024
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?   02025
         BO    CLOSMALL           Yes. Close all files and finish up.    02026
* ------------------------------------------------------------------*    02027
*        BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL       SBG 04/00  02028
*                             FORMATS, AND SET FLAGS          SBG 04/00  02029
*                             ACCORDINGLY.  OPTIONALLY        SBG 04/00  02030
*                             PRINT LABEL INFO FOUND.         SBG 04/00  02031
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW              02032
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?                02033
         BZ    LBLNOCNT                                                  02034
         TM    ISLBLFLG,X'03'     WAS LAST INPUT RECORD A LABEL?         02035
         BZ    LBLNOCNT                                                  02036
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02037
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER        02038
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02039
LBLNOCNT DS    0H                                                        02040
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW              02041
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02042
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING        02043
****-->>                below  -  Test of LRECL=80 and not a label
         ST    R2,SAVER2A         Save contents of R2
         L     R2,BYTESMVD        Get size of this record.
         C     R2,=F'80'          80 bytes exactly in record?
         BNE   YSTRPFLG           No. Not an exception.
         TM    ISLBLFLG,X'03'     Was last input record a label?         02508
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.
YSTRPFLG DS    0H
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING              02517
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.
         L     R2,SAVER2A
****-->>                above  -  Test of LRECL=80 and not a label
         B     READGO1            AND CONTINUE READ PROCESSING           02045
SAVER2A  DC    F'0'
STRNOSKP DS    0H                                                        02046
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE              02047
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE              02048
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  02049
*                                                             SBG 04/00  02050
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  02051
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                  02052
         BZ    READGO1            NO. WE CAN GO ON.                      02053
         TM    ISLBLFLG,X'03'     DID WE JUST READ A LABEL?              02054
         BZ    READGO1            NO DON'T CHECK FOR SL                  02055
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG                02057
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    02059
         CLOSE (LABADDIN)                                                02060
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            02061
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  02062
         EJECT                                                           02063
*  ----------------------------------------------------------------  *   02064
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02065
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE       02066
*                           INPUT IS FROM THE EXTERNAL LABEL FILE        02067
*  ----------------------------------------------------------------  *   02068
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?               02069
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.               02070
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****        02071
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?             02072
         BZ    STILTAPE                                                  02073
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?        02074
         BZ    STILTAPE                                                  02075
         B     WRTTAPMK                                                  02076
STILTAPE DS    0H                                                        02077
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****        02078
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?    02079
         BZ    DOTHEGET             NO. DO THE FILE GETS.                02080
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                 02081
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA    02082
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.          02083
DOTHEGET DS    0H                                                        02084
*** ---                                                                  02085
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?              02086
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                   02087
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?               02088
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                 02089
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.   02090
DOGETALW DS    0H                                                        02091
*** ---                                                                  02092
         GET   LABADDIN,EXTLBLIN                                         02093
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                    02094
         BE    INEXTLAB         IF IT IS, IGNORE IT.                     02095
*------------------------------------> Hex Print Limit - Below           02096
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02097
         BZ    NOHXPREX                NO. DON'T ADJUST LIMIT            02098
         CLC   =X'2D2D2D2D454E444F464C4142454C',EXTLBLIN  ASCII eol?     02099
         BE    NOHXPRAX                          Yes. Reset count.       02100
         CLC   =C'----ENDOFLABEL',EXTLBLIN     End of a label file?      02101
         BNE   NOHXPREX                        No. Don't reset count.    02102
NOHXPRAX DS    0H                                                        02103
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02104
NOHXPREX DS    0H                                                        02105
*------------------------------------> Hex Print Limit - Above           02106
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                        02107
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE        02108
         CLC   =X'2D2D2D2D454E444F464C4142454C484541444552',EXTLBLIN     02109
         BE    ENDHEADR       ASCII ----ENDOFLABELHEADER                 02110
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                        02111
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS           02112
         CLC   =X'2D2D2D2D454E444F464C4142454C545241494C4552',EXTLBLIN   02113
         BE    ENDTRAIL       ASCII ----ENDOFLABELTRAILER                02114
* ---------------------------------  EOV2EOF  BELOW  ------------- *     02115
      CLC =X'2D2D2D2D454E444F464C4142454C545241494C4552454F56',EXTLBLIN  02116
         BE    TRAIXEOV       ASCII ----ENDOFLABELTRAILEREOV             02117
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                     02118
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT            02119
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER          02120
TRAIXEOV DS    0H                                                        02121
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD     02122
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER               02123
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?      02124
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT             02125
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER             02126
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.           02127
NTRALEOV DS    0H                                                        02128
* ---------------------------------  EOV2EOF  ABOVE  ------------- *     02129
*                                                                        02130
INEXTALL DS    0H            All allowed EXTLBLIN cards go thru here.    02131
*                                                                        02132
* ------     Hex Print records from External Labels    ----  below       02133
         TM    PARMFLG5,X'20'       ARE WE DOING HEX PRINT?              02134
         BZ    EXTNOPRT             NO, SO BYPASS THIS                   02135
         ST    R7,R7HXPRT           SAVE R7.                             02136
         BAL   R7,HEXPRNEX          PRINT CURRENT RECORD IN HEX.         02137
         L     R1,BCTLIMIT          LOAD REGISTER FOR DECREMENT          02138
         BCTR  R1,0                 LOWER BY ONE                         02139
         ST    R1,BCTLIMIT          PUT IT BACK FOR NEXT PASS            02140
         L     R7,R7HXPRT           RESTORE R7.                          02141
EXTNOPRT DS    0H                                                        02142
* ------     Hex Print records from External Labels    ----  above       02143
* -- >                                                                   02144
ASCIITST DS    0H                                                        02145
         CLI   EXTLBLIN,X'56'              ASCII V                       02146
         BE    ISASCIIG                                                  02147
         CLI   EXTLBLIN,X'45'              ASCII E                       02148
         BE    ISASCIIG                                                  02149
         CLI   EXTLBLIN,X'48'              ASCII H                       02150
         BE    ISASCIIG                                                  02151
         CLI   EXTLBLIN,X'55'              ASCII U                       02152
         BE    ISASCIIG                                                  02153
         CLI   EXTLBLIN,X'2D'              ASCII DASH                    02154
         BE    ISASCIIG                                                  02155
         B     ISNTASCI                                                  02156
ISASCIIG DS    0H                                                        02157
         OI    ASCIIFLG,X'01'              ASSUME ASCII                  02158
         OI    EXASCFLG,X'01'              ASSUME ASCII                  02159
         B     ASCIITSE                                                  02160
ISNTASCI DS    0H                                                        02161
         NI    ASCIIFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC    02162
         NI    EXASCFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC    02163
ASCIITSE DS    0H                                                        02164
* -- >                                                                   02165
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1?                   02166
         BE    NASCVOL1                    YES. TREAT AS A VOL1.         02167
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                  02168
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS            02169
NASCVOL1 DS    0H                                                        02170
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS    02171
         B     GOTVOL01             PROCESS THE VOL1                     02172
NLABVOL1 DS    0H                                                        02173
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW                02174
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1?                   02175
         BE    NASCHDR1                    YES. TREAT AS A HDR1.         02176
         CLC   EXTLBLIN(4),=C'HDR1'                                      02177
         BNE   NLABHDR1                                                  02178
NASCHDR1 DS    0H                                                        02179
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN              02180
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02181
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                      02182
         B     ENDIBMSL                                                  02183
NLABHDR1 DS    0H                                                        02184
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2?                   02185
         BE    NASCHDR2                    YES. TREAT AS A HDR2.         02186
         CLC   EXTLBLIN(4),=C'HDR2'                                      02187
         BNE   NLABHDR2                                                  02188
NASCHDR2 DS    0H                                                        02189
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN              02190
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02191
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                      02192
         B     ENDIBMSL                                                  02193
NLABHDR2 DS    0H                                                        02194
***** ----- *****                                                        02195
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1?                   02196
         BE    NASCEOF1                    YES. TREAT AS A EOF1.         02197
         CLC   EXTLBLIN(4),=C'EOF1'                                      02198
         BNE   NLABEOF1                                                  02199
NASCEOF1 DS    0H                                                        02200
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN              02201
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02202
         B     ENDIBMSL                                                  02203
NLABEOF1 DS    0H                                                        02204
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2?                   02205
         BE    NASCEOF2                    YES. TREAT AS A EOF2.         02206
         CLC   EXTLBLIN(4),=C'EOF2'                                      02207
         BNE   NLABEOF2                                                  02208
NASCEOF2 DS    0H                                                        02209
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN              02210
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02211
         B     ENDIBMSL                                                  02212
NLABEOF2 DS    0H                                                        02213
***** ----- *****                                                        02214
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1?                   02215
         BE    NASCEOV1                    YES. TREAT AS A EOV1.         02216
         CLC   EXTLBLIN(4),=C'EOV1'                                      02217
         BNE   NLABEOV1                                                  02218
NASCEOV1 DS    0H                                                        02219
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN             02220
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02221
         B     ENDIBMSL                                                  02222
NLABEOV1 DS    0H                                                        02223
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2?                   02224
         BE    NASCEOV2                    YES. TREAT AS A EOV2.         02225
         CLC   EXTLBLIN(4),=C'EOV2'                                      02226
         BNE   NLABEOV2                                                  02227
NASCEOV2 DS    0H                                                        02228
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN             02229
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02230
         B     ENDIBMSL                                                  02231
NLABEOV2 DS    0H                                                        02232
ENDIBMSL DS    0H                                                        02233
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE                02234
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                   02235
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW              02236
         CLC   EXTLBLIN(3),=X'484452'     ASCII HDR?                     02237
         BE    WRTLABEL                   TREAT SAME AS EBCDIC HDR       02238
* -------------- EOV2EOF BELOW ----------------- *                       02239
ISITEOV  DS    0H                                                        02240
         CLC   EXTLBLIN(3),=X'454F56'     ASCII EOV?                     02241
         BE    ISASCEOV                   TREAT AS ASCII EOV             02242
         CLC   EXTLBLIN(3),=C'EOV'                                       02243
         BNE   NOEOF2V                                                   02244
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                02245
         BZ    NOEOF2V                                                   02246
         MVC   EXTLBLIN(3),=C'EOF'                                       02247
         PTMS  EOVCHG                     MOVE IN MESSAGE                02250
         B     NOEOF2V                                                   02252
ISASCEOV DS    0H                                                        02253
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                02254
         BZ    NOEOF2V                                                   02255
         MVC   EXTLBLIN(3),=X'454F46'     PUT IN ASCII EOF INSTEAD       02256
         PTMS  EOVCHG                     MOVE IN MESSAGE                02259
NOEOF2V  DS    0H                                                        02261
* -------------- EOV2EOF ABOVE ----------------- *                       02262
* ----------                                                             02263
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?      02264
         BZ    BLNOCORR             NO. SKIP THIS.                       02265
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                       02266
         BE    CORBLKCT                                                  02267
         CLC   EXTLBLIN(4),=X'454F4631'  DO ON ASCII EOF1                02268
         BE    CORBLKCT                                                  02269
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                       02270
         BE    CORBLKCT                                                  02271
         CLC   EXTLBLIN(4),=X'454F5631'  DO ON ASCII EOV1                02272
         BE    CORBLKCT                                                  02273
BLNOCORR B     EOFOREOV                                                  02274
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW          02275
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?                02276
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.         02277
         TM    PARMFLG3,X'80'       FIXING LABELS?                       02278
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING       02279
         MVC   EXTLBLIN(80),HDR2SAV                                      02280
         CLC   EXTLBLIN(3),=X'484452'                                    02281
         BNE   MAKEEOF2                                                  02282
         MVC   EXTLBLIN(3),=X'454F46'                                    02283
         B     NOMKEOF2                                                  02284
MAKEEOF2 DS    0H                                                        02285
         MVC   EXTLBLIN(3),=C'EOF'                                       02286
NOMKEOF2 DS    0H                                                        02287
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE          02288
* ----------                                                             02289
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                         02290
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET          02291
         CLC   EXTLBLIN(2),=X'454F'                                      02292
         BE    WRTLABEL                                                  02293
**** ---- ****                                                           02294
         CLC   EXTLBLIN(3),=X'55484C'                                    02295
         BE    ISASUHL                                                   02296
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                  02297
         BNE   NOTLUHL                                                   02298
ISASUHL  DS    0H                                                        02299
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS     02300
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS  02301
NOTLUHL  DS    0H                                                        02302
**** ---- ****                                                           02303
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                 02304
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.             02305
         CLC   EXTLBLIN(3),=X'55544C'     ASCII UTL.                     02306
         BE    WRTLABEL                                                  02307
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD         02308
ENDHEADR DS    0H                                                        02309
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD   02310
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE  02311
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER             02312
*** -----                                                                02313
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE            02314
         BZ    NOEODFL1                                                  02315
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK     02316
         B     ENDTRAIL                                                  02317
NOEODFL1 DS    0H                                                        02318
*** -----                                                                02319
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME            02320
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA         02321
ENDTRAIL DS    0H                                                        02322
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS         02323
         A     R0,=F'1'         ADD 1 TO COUNT                           02324
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                  02325
*** ---                                                                  02326
         TM    PARMFLG4,X'10'       LIMITING LABELS?                     02327
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.              02328
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?      02329
         BL    ENDNOLIM             NOT YET. GET OUT.                    02330
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.       02331
ENDNOLIM DS    0H                                                        02332
*** ---                                                                  02333
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                  02334
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN     02335
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD  02336
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS              02337
         B     WRTTAPMK                                                  02338
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02339
CORBLKCT DS    0H                                                        02340
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED     02341
         BZ    NOCORBLK          NO. BYPASS.                             02342
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED   02343
         BZ    NOCORBLK          NO. BYPASS.                             02344
*** ---  FIXING LABELS  --- ***                                          02345
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                 02346
         BZ    NOFIXL1           NO. DON'T FIX.                          02347
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?               02348
         BO    NOFIXL1           YES. DON'T CREATE ONE.                  02349
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1            02350
         CLC   EXTLBLIN(4),=X'48445231'   ASCII HDR1?                    02351
         BNE   NOTASCHD                                                  02352
         MVC   EXTLBLIN(3),=X'454F46'     MOVE IN ASCII EOF              02353
NOTASCHD DS    0H                                                        02354
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL              02355
NOFIXL1  DS    0H                                                        02356
*** ---  FIXING LABELS  --- ***                                          02357
         CLC   EXTLBLIN(4),=X'454F5631'   ASCII EOV1?                    02358
         BE    NOFIXL1A                                                  02359
         CLC   EXTLBLIN(4),=X'454F4631'   ASCII EOF1?                    02360
         BNE   NOFIXL1B                                                  02361
NOFIXL1A DS    0H                                                        02362
         ST    R5,R5HXPRT              Save register.                    02363
         L     R5,SAVTRTCS             Point to translation table CSECT  02364
         USING TRTCSECT,R5                                               02365
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   02366
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          02367
         L     R5,R5HXPRT              Restore R5                        02368
         DROP  R5                                                        02369
         MVC   EXTLBLIN+54(6),BLKCNASC+4                                 02370
         B     NOFIXL2                      AND NOT THE EBCDIC ONE       02371
NOFIXL1B DS    0H                                                        02372
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT      02373
NOFIXL2  DS    0H                                                        02374
         STM   R2,R3,SAVE2TO3                                            02375
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD     02376
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    02377
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 02378
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        02379
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              02380
         LM    R2,R3,SAVE2TO3                                            02381
NOCORBLK B     EOFOREOV                                                  02382
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02383
GOTVOL01 DS    0H                                                        02384
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT    02385
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"         02386
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                        02387
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?              02388
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT         02389
         MVC   VOLNEW(6),VOLSTG1       OVERLAY NEW VOLSER FOR ALL OUTS   02390
NOOVLALL DS    0H                                                        02391
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                        02392
         B     WRTLABEL                                                  02393
WRTLABEL OI    WRLBLFLG,X'01'                                            02394
* --------------- PRINT LABEL TO BE WRITTEN ------ below ------ *        02395
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN       02396
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM          02397
* ----------------------------------------------------------------- *    02398
         L     R15,PRTLBENT       Get entry point of called program      02399
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                       02400
         LA    R1,PARMFLGS        Point R1 to parm flags.                02401
         L     R3,=A(EXTLBLIN)    Point R3 to address of input area.     02402
         BALR  R14,R15                 Do CALL.                          02403
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.     02404
*        MVC   EXTLBLIN(80),0(R3)      Overlay 80 bytes of EXTLBLIN      02405
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    02406
* ----------------------------------------------------------------- *    02407
NOPRTEXT DS    0H             Don't print external label on report       02408
* --------------- PRINT LABEL TO BE WRITTEN ------ above ------ *        02409
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02410
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE          02411
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                    02412
         B     WRITE1         WRITE LABEL RECORD                         02413
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE             02414
WRTTAPMK DS    0H                                                        02415
*** ----------------                                                     02416
         TM    INEODFLG,X'02'                                            02417
         BZ    NOEODNOW                                                  02418
         TM    WRLBLFLG,X'04'                                            02419
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR  02420
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?       02421
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.                02422
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS        02423
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR   02424
NOEODNOW DS    0H                                                        02425
*** ----------------                                                     02426
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                           02427
         B     WRITE1         WRITE TAPE MARK                            02428
* ------------------ SPECIAL ROUTINES ------------------------------- *  02429
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD    02430
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN         02431
         B     READIN             AND GO BACK WHERE YOU STARTED          02432
* ------------------ SPECIAL ROUTINES ------------------------------- *  02433
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS   02434
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                    02435
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02436
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                    02437
         BZ    NOFIXLBL          NO. DON'T TRY IT.                       02438
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING    02439
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                  02440
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE              02441
         B     CLOSMALL          FINISHED, GET OUT.                      02442
NOFIXLBL DS    0H                                                        02443
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02444
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN       02445
         B     READIN2        WRITE OUTPUTS AND FINISH                   02446
* ------------------------------------------------------------------- *  02447
*                                                                        02448
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                           02449
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                        02450
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                      02451
*      ALREADY.                                                          02452
*                                                                        02453
* ------------------ SPECIAL ROUTINES ------------------------------- *  02454
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02455
         EJECT                                                           02456
READGO1  DS    0H                                                        02457
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW          02458
         TM    PARMFLG3,X'04'  COUNTING BYTES?                           02459
         BZ    READNCNT                                                  02460
         TM    ISLBLFLG,X'03'  LAST READ A LABEL?                        02461
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE        02462
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02463
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY      02464
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02465
READNCNT DS    0H                                                        02466
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE          02467
**---->            LABEL STRIPPING CODE          BELOW                   02468
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02469
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING        02470
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW       02471
         BZ    RDNOSTRP           NO IT WASN'T                           02472
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.   02473
RDNOSTRP DS    0H                                                        02474
**---->            LABEL STRIPPING CODE          ABOVE                   02475
         STH   R2,OUTCCW+6    STORE FOR WRITE                 SBG 03/00  02476
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER        02477
         ST    R7,STOR7REG                                               02478
         L     R7,BLOKCNT                                                02479
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS              02480
         ST    R7,BLOKCNT                                                02481
         L     R7,STOR7REG                                               02482
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *       02483
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                   02484
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT           02485
         B     READINGO         CONTINUE REPORTING FILE END AND WRITE.   02486
NOINITT1 DS    0H                                                        02487
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *       02488
         B     WRITE1           CONTINUE                                 02489
*                                                             SBG 04/00  02490
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02491
READIN1  DS    0H             COME HERE IF TM WAS READ        SBG 04/00  02492
* ------------------------- ADD LABEL TO NL CODE ----------- *           02493
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                 02494
         BZ    NONLSL1          NO.  BYPASS.                             02495
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS            02496
*** ---                                                                  02497
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?         02498
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.    02499
*                               DO NOT COLLECT 200 DOLLARS.              02500
*** ---                                                                  02501
NONLSL1  DS    0H                                                        02502
* ------------------------- ADD LABEL TO NL CODE ----------- *           02503
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02504
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?         02505
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.        02506
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?        02507
         BO    WRCTLHDR         YES. PUT IT OUT.                         02508
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?        02509
         BO    WRCTLEOF         YES. PUT IT OUT.                         02510
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?        02511
         BO    WRCTLEOV         YES. PUT IT OUT.                         02512
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.       02513
WRCTLHDR DS    0H                                                        02514
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02515
         MVC   LLINE(80),LABELITH   MARK END OF LABEL         SBG 09/00  02516
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             02517
         BZ    WRCTLAS1         No. Don't translate the control card.    02518
         ST    R5,R5HXPRT       Yes.   Save register.                    02519
         L     R5,SAVTRTCS             Point to translation table CSECT  02520
         USING TRTCSECT,R5                                               02521
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     02522
         L     R5,R5HXPRT              Restore R5                        02523
         DROP  R5                                                        02524
WRCTLAS1 DS    0H                   Branch here if don't use ASCII.      02525
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02526
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02527
WRCTLEOF DS    0H                                                        02528
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02529
         MVC   LLINE(80),LABELITR   MARK END OF LABEL         SBG 09/00  02530
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             02531
         BZ    WRCTLAS2         No. Don't translate the control card.    02532
         ST    R5,R5HXPRT       Yes.   Save register.                    02533
         L     R5,SAVTRTCS             Point to translation table CSECT  02534
         USING TRTCSECT,R5                                               02535
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     02536
         L     R5,R5HXPRT              Restore R5                        02537
         DROP  R5                                                        02538
WRCTLAS2 DS    0H                   Branch here if don't use ASCII.      02539
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02540
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02541
WRCTLEOV DS    0H                                                        02542
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02543
         MVC   LLINE(80),LABELITV   MARK END OF LABEL         SBG 09/00  02544
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             02545
         BZ    WRCTLAS4         No. Don't translate the control card.    02546
         ST    R5,R5HXPRT       Yes.   Save register.                    02547
         L     R5,SAVTRTCS             Point to translation table CSECT  02548
         USING TRTCSECT,R5                                               02549
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     02550
         L     R5,R5HXPRT              Restore R5                        02551
         DROP  R5                                                        02552
WRCTLAS4 DS    0H                   Branch here if don't use ASCII.      02553
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02554
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02555
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE          02556
NOCNTLWR DS    0H                                                        02557
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02558
         TM    DATFLAG,X'10'  NO DATA READ YET?               SBG 03/00  02559
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY  SBG 03/00  02560
         MVFMS LTMRPTI,SKIPPED,OPC=CLC   WE SKIP LEADING TAPEMARKS?      02561
         BNE   RDNOSKIP                                       SBG 03/00  02562
         PTMS  LTMRPT            INDICATE LEADING TM SKIPPED             02565
         B     READIN         DO ANOTHER READ                 SBG 03/00  02567
RDNOSKIP DS    0H                                             SBG 03/00  02568
         PTMS  LTMRPT            INDICATE LEADING TM COPIED   SBG 03/00  02571
         B     MARKFILE                                       SBG 03/00  02573
READINGO DS    0H                                             SBG 04/00  02574
*------------------------------------> HEX PRINT LIMIT - BELOW           02575
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02576
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT            02577
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02578
NOHXPRST DS    0H                                                        02579
*------------------------------------> HEX PRINT LIMIT - ABOVE           02580
         ST    R7,STOR7REG                                               02581
         L     R7,FILECNT                                                02582
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  02583
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02584
         MVFMS FILEDONE+6(5),DWORD+5(3),OPC=UNPK  UNPACK FILE NUMBER     02585
         ST    R7,FILECNT                                                02586
         L     R7,BLOKCNT                                                02587
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             02588
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02589
         MVFMS FILEDONE+21(7),DWORD+4(4),OPC=UNPK  UNPACK BLOCK COUNT    02590
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS            02591
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    02592
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02593
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02594
         BZ    MARKNCNT           NO-SKIP ROUTINE                        02595
         MVFMS FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                   02596
         MVFMS FILECONT,=C'CONTAINING'                                   02597
         L     R4,DBINH           LOAD REG WITH HI ORDER                 02598
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             02599
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           02600
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  02601
         L     R4,DBINL           LOAD REG WITH LOW ORDER                02602
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            02603
         AP    QWORD,DWORD        AND ADD IT IN                          02604
         MVFMS FILEBYTE,QWORD+6,OPC=ED   DISPLAY COUNT IN LINE           02605
** ----                                                                  02606
         LM    R4,R5,TOTBYTES                                            02607
         A     R5,DBINL            LOW ORDER COUNT                       02608
         BNO   MARKNOVR            B IF NO OVERFLOW                      02609
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02610
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02611
MARKNOVR DS    0H                                                        02612
         A     R4,DBINH            HIGH ORDER                            02613
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL               02614
** ----                                                                  02615
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?             02616
         BZ    MARKISNL            NO. DON'T ADD TOTALS                  02617
         LM    R4,R5,LABBYTES                                            02618
         A     R5,LABINL           LOW ORDER COUNT                       02619
         BNO   MARKNOVL            B IF NO OVERFLOW                      02620
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02621
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02622
MARKNOVL DS    0H                                                        02623
         A     R4,LABINH           HIGH ORDER                            02624
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL               02625
* - >                                                                    02626
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02627
         BZ    NOSEPLBL                                                  02628
         MVFMS FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02629
         MVFMS FILECUMT,=C'CUM LABEL:'                                   02630
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                   02631
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02632
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02633
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02634
         CVD   R5,DWORD          LOW ORDER WORD                          02635
         AP    QWORD,DWORD       AND ADD IT IN                           02636
         MVFMS FILETBYE,QWORD+6,OPC=ED  MAKE NUMBER DISPLAYABLE          02637
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02638
NOSEPLBL DS    0H                                                        02639
* - >                                                                    02640
         B     MARKNOLB                                                  02641
MARKISNL DS    0H                                                        02642
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?             02643
         BO    MARKNOLB                                                  02644
         LM    R4,R5,FILBYTES                                            02645
         A     R5,DBINFL           LOW ORDER COUNT                       02646
         BNO   MARKNOVF            B IF NO OVERFLOW                      02647
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02648
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02649
MARKNOVF DS    0H                                                        02650
         A     R4,DBINFH           HIGH ORDER                            02651
         STM   R4,R5,FILBYTES                                            02652
* - >                                                                    02653
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02654
         BZ    NOSEPDAT                                                  02655
         MVFMS FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02656
         MVFMS FILECUMT,=C'CUM DATA :'                                   02657
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                   02658
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02659
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02660
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02661
         CVD   R5,DWORD          LOW ORDER WORD                          02662
         AP    QWORD,DWORD       AND ADD IT IN                           02663
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         02664
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02665
NOSEPDAT DS    0H                                                        02666
* - >                                                                    02667
MARKNOLB DS    0H                                                        02668
** ----                                                                  02669
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?                02670
         BZ    MARKNCN2           NO-SKIP ROUTINE                        02671
* - >                                                                    02672
         MVFMS FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02673
         MVFMS FILECUMT,=C'CUM TOTAL:'                                   02674
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                   02675
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02676
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02677
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02678
         CVD   R5,DWORD          LOW ORDER WORD                          02679
         AP    QWORD,DWORD       AND ADD IT IN                           02680
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         02681
* - >                                                                    02682
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE                02683
MARKNCNT DS    0H                                                        02684
         MVFMS FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02685
MARKNCN2 DS    0H
         MVFMS FILETBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02686
MARKNCNE DS    0H                                                        02687
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02688
         PTMS  FILEDONE            WRITE IT                              02689
         TM    LBLFLAG,X'08'       INITTED HDR1 SEEN?                    02690
         BO    WRITE1              YES. GO DIRECTLY TO WRITE IT.         02691
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02692
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02693
         BZ    MARKNTOT           NO-SKIP ROUTINE                        02694
         MVFMS FILECONT,=C'          '                                   02695
         MVFMS FILECUMT,=C'          '                                   02696
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE              02697
         ST    R4,DBINH            ZERO BYTE COUNT                       02698
         ST    R4,DBINL            ZERO BYTE COUNT                       02699
         ST    R4,LABINH           ZERO BYTE COUNT                       02700
         ST    R4,LABINL           ZERO BYTE COUNT                       02701
         ST    R4,DBINFH           ZERO BYTE COUNT                       02702
         ST    R4,DBINFL           ZERO BYTE COUNT                       02703
MARKNTOT DS    0H                                                        02704
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02705
MARKFILE DS    0H                                                        02706
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE              02707
         ST    R7,BLOKCNT                                                02708
         L     R7,FILECNT                                                02709
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                       02710
         ST    R7,FILECNT                                                02711
         L     R7,STOR7REG                                               02712
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?        SBG 03/00  02713
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK     SBG 03/00  02714
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                          02715
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES             02716
         BZ    MARKFILA          NO - SKIP THIS CODE                     02717
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?     02718
         BNL   MARKFILA          NO - NO RESTRICTIONS                    02719
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA     02720
MARKFILA DS    0H                                                        02721
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                          02722
         TM    PARMFLG4,X'02'   Stripping labels?                        02723
         BZ    MARKSTRX         no - bypass strip-related code           02724
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?                02725
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                  02726
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.     02727
         B     READIN           YES. SKIP WRITING THE T.M. TOO           02728
MARKSTRX DS    0H                                                        02729
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK      SBG 04/00  02730
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?     SBG 04/00  02731
         BZ    MARKGO         NO. TEST FOR 2ND TM             SBG 04/00  02732
         B     READIN2        YES. WRITE TO OUTPUTS & END     SBG 04/00  02733
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                           02734
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS SBG 03/00  02735
NOLBL    MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM      SBG 03/00  02736
         B     WRITE1         GO WRITE TM TO OUTPUTS                     02737
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02738
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2      SBG 03/00  02739
         BZ    INEODATA       NOT EITHER. END AS USUAL.       SBG 03/00  02740
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ SBG 03/00  02741
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG  SBG 03/00  02742
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02743
*                                                             SBG 04/00  02744
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02745
INEODATA DS    0H                                                        02746
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE       02747
*                                                                        02748
READIN2  DS    0H                                                        02749
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02750
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?      02751
         BZ    READ2GO           NO. BYPASS THIS CODE.                   02752
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA  02753
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS           02754
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?              02755
         BZ    NOEXTMK           NO                                      02756
         B     WRTTAPMK                                                  02757
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?           02758
         BZ    READ2GO           NO. BYPASS REST OF CODE.                02759
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.          02760
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                    02761
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS    02762
         B     READIN            DON'T WRITE FINAL TAPE MARK YET         02763
READ2STP DS    0H                                                        02764
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS            02765
READ2GO  DS    0H                                                        02766
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02767
         OI    FLAG2A,EOV        INDICATE EOV ON INPUT                   02768
* --- >>>  ------------------ below -------- Skip writing last T.M.      02769
* -------------------------------------------------------------- *       02770
*            When stripping labels, somehow an extra             *       02771
*            tape mark gets written.  This is a kludge           *       02772
*            to correct that.....                                *       02773
* -------------------------------------------------------------- *       02774
         TM    PARMFLG4,X'02'    Stripping Labels?                       02775
         BZ    READ2GNS          No. don't skip writing last t.m.        02776
*        MVC   LINE(133),LINE-1       CLEAR LINE                         02777
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1              02778
*        PUT   SYSPRINT,LINE                                             02779
         B     WRITE17           Do not write the extra tape mark        02780
READ2GNS DS    0H                                                        02781
* --- >>>  ------------------ above -------- Skip writing last T.M.      02782
         B     WRITE1                                                    02783
         SPACE 3                                                         02784
* -------------------- Code for Initting Tapes ---------->>>>> below     02785
TLITWRIT DS    0H                                                        02786
         TM    PARMFLG3,X'01'                                            02787
         BZ    TLITWRIE                                                  02788
TLITREW1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    02789
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         02790
         BO    TLITREW2                YES. SET WRITE CCW BACK.          02791
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        02792
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               02793
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    02794
TLITREW2 DS    0H                      ALREADY DID THE REWIND.           02795
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  02796
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02797
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          02798
TLITSKP1 DS    0H                                                        02799
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              02800
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1        02801
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     02802
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          02803
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     02804
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          02805
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1    02806
         MVC   EXTLBLIN+41(10),TAPEOWN   And the Tape Owner if any       02807
* --> Hex printing - below                                               02808
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02809
         BZ    NPRHINT1                No. Bypass it.                    02810
         ST    R7,R7HXPRT              Save BAL register.                02811
         BAL   R7,HEXPRNEX             Hex print from external labels.   02812
         L     R7,R7HXPRT              Restore BAL register.             02813
NPRHINT1 DS    0H                                                        02814
* --> Hex printing - above                                               02815
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02816
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        02817
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        02818
TLITSKP2 DS    0H                                                        02819
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    02820
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     02821
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1    02822
* --> Hex printing - below                                               02823
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02824
         BZ    NPRHINT2                No. Bypass it.                    02825
         ST    R7,R7HXPRT              Save BAL register.                02826
         BAL   R7,HEXPRNEX             Hex print from external labels.   02827
         L     R7,R7HXPRT              Restore BAL register.             02828
NPRHINT2 DS    0H                                                        02829
* --> Hex printing - above                                               02830
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02831
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             02832
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    02833
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     02834
TLITWRIE DS    0H                                                        02835
* -------------------- Code for Initting Tapes ---------->>>>> above     02836
* -------------------- Code for Initting ASCII Tapes ---->>>>> below     02837
TLITASCI DS    0H               INIT ASCII TAPES.                        02838
         TM    PARMFLG5,X'03'   Are we initting any type of ASCII tape?  02839
         BZ    TLITASCE         No. Bypass this code.                    02840
TLITRAS1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    02841
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         02842
         BO    TLITRAS2                YES. SET WRITE CCW BACK.          02843
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        02844
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               02845
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    02846
TLITRAS2 DS    0H                      ALREADY DID THE REWIND.           02847
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  02848
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02849
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          02850
TLITSKA1 DS    0H                                                        02851
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              02852
         BO    TLITSKA2                GO TO SECOND PASS FOR HDR1        02853
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     02854
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          02855
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     02856
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          02857
         MVC   EXTLBLIN(80),AVOL1LAB   STUFF THE INPUT AREA WITH VOL1    02858
         MVC   EXTLBLIN+37(14),TAPEOWN   And the Tape Owner if any       02859
* --> Hex printing - below                                               02860
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02861
         BZ    NPRHINA1                No. Bypass it.                    02862
*           Temporary ASCII translation is done here.           *        02863
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           02864
         ST    R5,R5HXPRT              Save register.                    02865
         L     R5,SAVTRTCS             Point to translation table CSECT  02866
         USING TRTCSECT,R5                                               02867
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  02868
         ST    R7,R7HXPRT              Save BAL register.                02869
         BAL   R7,HEXPRNEX             Hex print from external labels.   02870
         L     R7,R7HXPRT              Restore BAL register.             02871
         L     R5,R5HXPRT              Restore R5                        02872
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       02873
         DROP  R5                                                        02874
NPRHINA1 DS    0H                                                        02875
* --> Hex printing - above                                               02876
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02877
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        02878
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        02879
TLITSKA2 DS    0H                                                        02880
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    02881
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     02882
         MVC   EXTLBLIN(80),AHDR1INI   STUFF THE INPUT AREA WITH HDR1    02883
* --------------------------------------------------------------*        02884
*           Note:  The real ASCII translation is                *        02885
*                  done in the CHANGVOL routine that            *        02886
*                  gets executed just before each               *        02887
*                  output write.  Please note that              *        02888
*                  INASC3 and INASC4 imply CHGVOL.              *        02889
* --------------------------------------------------------------*        02890
* --> Hex printing - below                                               02891
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02892
         BZ    NPRHINA2                No. Bypass it.                    02893
*           Temporary ASCII translation is done here.           *        02894
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           02895
         ST    R5,R5HXPRT              Save register.                    02896
         L     R5,SAVTRTCS             Point to translation table CSECT  02897
         USING TRTCSECT,R5                                               02898
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  02899
         ST    R7,R7HXPRT              Save BAL register.                02900
         BAL   R7,HEXPRNEX             Hex print from external labels.   02901
         L     R7,R7HXPRT              Restore BAL register.             02902
         L     R5,R5HXPRT              Restore R5                        02903
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       02904
         DROP  R5                                                        02905
NPRHINA2 DS    0H                                                        02906
* --> Hex printing - above                                               02907
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02908
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             02909
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    02910
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     02911
TLITASCE DS    0H                                                        02912
* -------------------- Code for Initting ASCII Tapes ---->>>>> above     02913
*                                                                        02914
*  WRITE TO OUTPUT TAPES                                                 02915
*                                                                        02916
WRITE1   DS    0H                                             SBG 06/00  02917
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?              02918
         BNE   WRNOTPMK         No. Don't touch bytes to be moved        02919
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved              02920
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.        02921
WRNOTPMK DS    0H                                                        02922
* --- READ ONLY CODE ------------------------------- BELOW -- SBG 06/00  02923
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02924
         BO    WRITE17    YES--NO WRITES - ONLY READS         SBG 06/00  02925
* --- READ ONLY CODE ------------------------------- ABOVE -- SBG 06/00  02926
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                    02927
         BZ    WRITE2         NO                                         02928
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER     02929
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE  02930
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02931
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02932
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                  02933
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02934
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02935
         EXCP  OUTIOB         WRITE IT                                   02936
         WAIT  ECB=OUTECB     WAIT FOR IT                                02937
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02938
         BNE   OUTERR         NO - ERROR                                 02939
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                    02940
         BZ    WRITE3         NO                                         02941
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER     02942
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE  02943
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02944
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02945
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                  02946
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02947
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02948
         EXCP  OUTIOB         WRITE IT                                   02949
         WAIT  ECB=OUTECB     WAIT FOR IT                                02950
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02951
         BNE   OUTERR         NO - ERROR                                 02952
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                    02953
         BZ    WRITE4         NO                                         02954
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER     02955
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE  02956
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02957
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02958
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                  02959
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02960
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02961
         EXCP  OUTIOB         WRITE IT                                   02962
         WAIT  ECB=OUTECB     WAIT FOR IT                                02963
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02964
         BNE   OUTERR         NO - ERROR                                 02965
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                    02966
         BZ    WRITE5         NO                                         02967
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER     02968
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE  02969
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02970
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02971
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                  02972
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02973
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02974
         EXCP  OUTIOB         WRITE IT                                   02975
         WAIT  ECB=OUTECB     WAIT FOR IT                                02976
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02977
         BNE   OUTERR         NO - ERROR                                 02978
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                    02979
         BZ    WRITE6         NO                                         02980
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER     02981
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE  02982
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02983
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02984
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                  02985
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02986
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02987
         EXCP  OUTIOB         WRITE IT                                   02988
         WAIT  ECB=OUTECB     WAIT FOR IT                                02989
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02990
         BNE   OUTERR         NO - ERROR                                 02991
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                    02992
         BZ    WRITE7         NO                                         02993
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER     02994
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE  02995
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02996
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02997
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                  02998
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02999
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03000
         EXCP  OUTIOB         WRITE IT                                   03001
         WAIT  ECB=OUTECB     WAIT FOR IT                                03002
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03003
         BNE   OUTERR         NO - ERROR                                 03004
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                    03005
         BZ    WRITE8         NO                                         03006
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER     03007
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE  03008
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03009
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03010
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                  03011
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03012
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03013
         EXCP  OUTIOB         WRITE IT                                   03014
         WAIT  ECB=OUTECB     WAIT FOR IT                                03015
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03016
         BNE   OUTERR         NO - ERROR                                 03017
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                    03018
         BZ    WRITE9         NO                                         03019
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER     03020
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE  03021
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03022
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03023
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                  03024
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03025
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03026
         EXCP  OUTIOB         WRITE IT                                   03027
         WAIT  ECB=OUTECB     WAIT FOR IT                                03028
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03029
         BNE   OUTERR         NO - ERROR                                 03030
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                    03031
         BZ    WRITE10        NO                                         03032
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER     03033
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE  03034
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03035
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03036
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                  03037
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03038
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03039
         EXCP  OUTIOB         WRITE IT                                   03040
         WAIT  ECB=OUTECB     WAIT FOR IT                                03041
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03042
         BNE   OUTERR         NO - ERROR                                 03043
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                    03044
         BZ    WRITE11        NO                                         03045
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER     03046
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE  03047
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03048
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03049
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                  03050
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03051
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03052
         EXCP  OUTIOB         WRITE IT                                   03053
         WAIT  ECB=OUTECB     WAIT FOR IT                                03054
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03055
         BNE   OUTERR         NO - ERROR                                 03056
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                    03057
         BZ    WRITE12        NO                                         03058
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER     03059
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE  03060
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03061
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03062
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                  03063
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03064
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03065
         EXCP  OUTIOB         WRITE IT                                   03066
         WAIT  ECB=OUTECB     WAIT FOR IT                                03067
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03068
         BNE   OUTERR         NO - ERROR                                 03069
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                    03070
         BZ    WRITE13        NO                                         03071
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER     03072
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE  03073
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03074
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03075
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                  03076
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03077
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03078
         EXCP  OUTIOB         WRITE IT                                   03079
         WAIT  ECB=OUTECB     WAIT FOR IT                                03080
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03081
         BNE   OUTERR         NO - ERROR                                 03082
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                    03083
         BZ    WRITE14        NO                                         03084
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER     03085
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE  03086
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03087
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03088
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                  03089
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03090
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03091
         EXCP  OUTIOB         WRITE IT                                   03092
         WAIT  ECB=OUTECB     WAIT FOR IT                                03093
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03094
         BNE   OUTERR         NO - ERROR                                 03095
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                    03096
         BZ    WRITE15        NO                                         03097
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER     03098
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE  03099
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03100
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03101
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                  03102
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03103
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03104
         EXCP  OUTIOB         WRITE IT                                   03105
         WAIT  ECB=OUTECB     WAIT FOR IT                                03106
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03107
         BNE   OUTERR         NO - ERROR                                 03108
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                    03109
         BZ    WRITE16        NO                                         03110
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER     03111
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE  03112
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03113
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03114
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                  03115
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03116
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03117
         EXCP  OUTIOB         WRITE IT                                   03118
         WAIT  ECB=OUTECB     WAIT FOR IT                                03119
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03120
         BNE   OUTERR         NO - ERROR                                 03121
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                    03122
         BZ    WRITE17        NO                                         03123
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER     03124
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE  03125
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03126
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03127
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                  03128
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03129
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03130
         EXCP  OUTIOB         WRITE IT                                   03131
         WAIT  ECB=OUTECB     WAIT FOR IT                                03132
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03133
         BNE   OUTERR         NO - ERROR                                 03134
WRITE17  DS    0H                                                        03135
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?               03136
         BNE   WR17NTPM       No. Don't correct bytes moved field        03137
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field    03138
WR17NTPM DS    0H                                                        03139
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                         03140
         BO    ENDINPUT       YES. CLOSE.                                03141
         TM    FLAG2A,EOV     END OF INPUT?                              03142
         BO    ENDINPUT       YES - QUIT                                 03143
         B     READIN         NO - LOOP                                  03144
         SPACE 3                                                         03145
*                                                                        03146
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                             03147
*                                                                        03148
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                                03149
         BZ    INERR1         NO - ASSUME DATA CHECK                     03150
         MVFMS LINE(133),INEQC  SET ERROR MESSAGE                        03151
         MVFMS INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR        03152
         B     INERR2         CONTINUE                                   03153
INERR1   DS    0H
         MVFMS LINE(133),INDCK  SET ERROR MESSAGE                        03154
         MVFMS INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR        03155
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                        03156
         MVI   INECB,X'00'    RESET ECB                                  03157
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X 03158
               6,INECB,ROUTCDE=(3)                                       03159
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE       03160
*                             WHO CARES WHAT THE REPLY IS                03161
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                      03162
         B     CLOSMALL                                                  03163
*        ABEND 69             QUIT                                       03164
         SPACE 3                                                         03165
*                                                                        03166
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY      03167
*                                                                        03168
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG       03169
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE                      03170
         TM    OUTCSW+4,X'02' UNIT CHECK?                                03171
         BO    OUTERUC        YES. HANDLE IT.                            03172
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                   03173
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                     03174
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION       03175
         MVFMS LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE       03176
         B     OUTERR2            GO FILL IN REST OF THE INFO            03177
OUTERUC  DS    0H
         MVFMS LINE(133),OUTEQC  SET ERROR MESSAGE                       03178
         B     OUTERR2        CONTINUE                                   03179
OUTERR1  DS    0H
         MVFMS LINE(133),OUTDCK  SET ERROR MESSAGE                       03180
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                             03181
         L     R5,16          R5=CVT                                     03182
         L     R5,0(,R5)      R5=TCB WORDS                               03183
         L     R5,4(,R5)      R5=MY TCB                                  03184
         L     R5,12(,R5)     R5=TIOT                                    03185
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT              03186
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                  03187
         MVC   SAVDDN(5),4(R4)   Save DDNAME                             03188
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                     03189
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE           03190
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE                03191
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE                     03192
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB                 03193
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY          03194
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE       03195
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                 03196
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO                       03197
         MVC   SAVELINE(133),LINE                                        03198
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03199
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.      03200
         MVC   LINE(133),LINE-1      CLEAR LINE                          03201
         MVFMS LINE(133),OUTCOUNT    How much was copied?                03202
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE   03203
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE              03204
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE        03205
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE              03206
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ        03207
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP      03208
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  03209
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03210
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                 03211
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ       03212
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ          03213
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             03214
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03215
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS            03216
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    03217
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE           03218
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ        03219
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                 03220
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             03221
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           03222
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  03223
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER                03224
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            03225
         AP    QWORD,DWORD        AND ADD IT IN                          03226
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN               03227
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE              03228
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03229
* ---- >    WTO on a Unit Exception   < ---- Below                       03230
         TM    PARMFLG5,X'40'   Do we WTO on a Unit Exception?           03231
         BO    OUTERR2A         Yes. WTO anyway, as of old.              03232
* ---- >    WTO on a Unit Exception   < ---- Above                       03233
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY           03234
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE             03235
*                               THIS IS A SEMI-NORMAL CONDITION          03236
*                               AND WHY INVOLVE THE OPERATOR?            03237
OUTERR2A MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR    03238
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                  03239
OUTERR4  DS    0H                                                        03240
         OI    OUTERFLG,X'01'    SHOW THIS WTOR WAS ISSUED               03241
         WTOR  '                                                       X 03242
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)       03243
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                 03244
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                           03245
         BNE   OUTERR3        NO - TRY AGAIN                             03246
* ------------------------------------------------------------------- *  03247
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   *  03248
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             *  03249
* ------------------------------------------------------------------- *  03250
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB              03251
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                 03252
*                             DON'T BOTHER WAITING FOR REWIND            03253
* ------------------------------------------------------------------- *  03254
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR           03255
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                        03256
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03257
         BNE   OUTERR5        NO                                         03258
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03259
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                 03260
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                        03261
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03262
         BNE   OUTERR6        NO                                         03263
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03264
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                 03265
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                        03266
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03267
         BNE   OUTERR7        NO                                         03268
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03269
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                 03270
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                        03271
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03272
         BNE   OUTERR8        NO                                         03273
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03274
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                 03275
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                        03276
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03277
         BNE   OUTERR9        NO                                         03278
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03279
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                 03280
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                        03281
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03282
         BNE   OUTERR10       NO                                         03283
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03284
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                 03285
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                        03286
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03287
         BNE   OUTERR11       NO                                         03288
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03289
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                 03290
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                        03291
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03292
         BNE   OUTERR12       NO                                         03293
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03294
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                 03295
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                        03296
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03297
         BNE   OUTERR13       NO                                         03298
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03299
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                 03300
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                       03301
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03302
         BNE   OUTERR14       NO                                         03303
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03304
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                 03305
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                       03306
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03307
         BNE   OUTERR15       NO                                         03308
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03309
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                 03310
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                       03311
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03312
         BNE   OUTERR16       NO                                         03313
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03314
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                 03315
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                       03316
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03317
         BNE   OUTERR17       NO                                         03318
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03319
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                 03320
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                       03321
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03322
         BNE   OUTERR18       NO                                         03323
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03324
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                 03325
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                       03326
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03327
         BNE   OUTERR19       NO                                         03328
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03329
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                 03330
*                             THEN IT MUST BE OUTPUT 16                  03331
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03332
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                 03333
         SPACE 3                                                         03334
*                                                                        03335
*  END OF INPUT -- FINISH UP                                             03336
*                                                                        03337
ENDINPUT DS    0H                                                        03338
         SPACE 3                                                         03339
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03340
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03341
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE       SBG 06/00  03342
         MVFMS LINE(133),SUCCESSR    MOVE READ-ONLY MESSAGE   SBG 06/00  03343
         B     ENDIN16          WRITE OUT MESSAGE             SBG 06/00  03344
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03345
ENDIN0   DS    0H
         MVFMS LINE(133),SUCCESS  MOVE MESSAGE TO LINE                   03346
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                       03347
         BO    ENDIN1         YES - CONTINUE                             03348
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                   03349
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                       03350
         BO    ENDIN2         YES - CONTINUE                             03351
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                 03352
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                       03353
         BO    ENDIN3         YES - CONTINUE                             03354
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                 03355
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                       03356
         BO    ENDIN4         YES - CONTINUE                             03357
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                 03358
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                       03359
         BO    ENDIN5         YES - CONTINUE                             03360
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                  03361
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                       03362
         BO    ENDIN6         YES - CONTINUE                             03363
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                   03364
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                       03365
         BO    ENDIN7         YES - CONTINUE                             03366
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                   03367
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                        03368
         BO    ENDIN8         YES - CONTINUE                             03369
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                   03370
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                        03371
         BO    ENDIN9         YES - CONTINUE                             03372
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                   03373
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                        03374
         BO    ENDIN10        YES - CONTINUE                             03375
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                   03376
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                        03377
         BO    ENDIN11        YES - CONTINUE                             03378
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                   03379
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                        03380
         BO    ENDIN12        YES - CONTINUE                             03381
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                   03382
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                        03383
         BO    ENDIN13        YES - CONTINUE                             03384
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                   03385
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                        03386
         BO    ENDIN14        YES - CONTINUE                             03387
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                   03388
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                        03389
         BO    ENDIN15        YES - CONTINUE                             03390
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                   03391
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                        03392
         BO    ENDIN16        YES - CONTINUE                             03393
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                  03394
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                   03395
         SPACE 3                                                         03396
*                                                                        03397
*  CLOSE ALL FILES                                                       03398
*                                                                        03399
CLOSMALL DS    0H                                                        03400
*        B     OUTERR        REMOVE - REMOVE - REMOVE                    03401
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *              03402
         TM    PARMFLG3,X'04'    COUNTING BYTES?                         03403
         BZ    ENDINTOT          NO - SKIP ROUTINE                       03404
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES               03405
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03406
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03407
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03408
         CVD   R5,DWORD          LOW ORDER WORD                          03409
         AP    QWORD,DWORD       AND ADD IT IN                           03410
         MVFMS TOTBPATT,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         03411
         PTMS  TOTBLINE                                                  03412
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS     03415
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03416
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03417
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03418
         CVD   R5,DWORD          LOW ORDER WORD                          03419
         AP    QWORD,DWORD       AND ADD IT IN                           03420
         MVFMS TOTLPATT,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         03421
         PTMS  TOTLLINE                                                  03422
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES      03425
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03426
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03427
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03428
         CVD   R5,DWORD          LOW ORDER WORD                          03429
         AP    QWORD,DWORD       AND ADD IT IN                           03430
         MVFMS TOTWPATT,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         03431
         PTMS  TOTWLINE                                                  03432
         MVI   LINE,C' '                                                 03433
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03434
ENDINTOT DS    0H                                                        03435
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *              03436
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - *  03437
         TM    LBLFLAG,X'08'         HAVE WE COPIED AN INITTED TAPE?     03438
         BZ    NOINITT3              NOPE. DON'T REPORT IT EITHER.       03439
         TM    PARMFLG2,X'08'        IS THIS RUN READ-ONLY?              03440
         BO    NOINITT3              YES. DON'T PRINT COPY MESSAGE       03441
         MVFMS INITSER(6),INVOLUME   MOVE IN VOLSER FROM VOL1            03444
         PTMS  INITMSG               MSG-WE'RE DOING INITTED TAPE        03445
NOINITT3 DS    0H                                                        03447
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - *  03448
         TM    PARMFLG3,X'01'   INIT ONLY?                               03449
         BO    NOCLOSIN                                                  03450
         TM    PARMFLG5,X'01'   INIT ASCII LEVEL 3?                      03451
         BO    NOCLOSIN                                                  03452
         TM    PARMFLG5,X'02'   INIT ASCII LEVEL 4?                      03453
         BO    NOCLOSIN                                                  03454
         CLOSE (IN)                                                      03455
NOCLOSIN DS    0H                                                        03456
         CLOSE (SYSPRINT)                                                03457
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  03458
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE          SBG 09/00  03459
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    03460
         CLOSE (LABLDUMP)                                                03461
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE            03462
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                        03463
         BZ    NOLABACL         NO. NO FILE TO CLOSE                     03464
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                        03465
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                     03466
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    03467
         CLOSE (LABADDIN)                                                03468
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE        03469
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03470
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03471
         BO    THEEND     YES. ONLY CLOSE INPUT AND SYSPRINT. SBG 06/00  03472
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03473
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                             03474
         BZ    CLOSE1         NO                                         03475
         CLOSE (OUT1)         CLOSE OUTPUT 1                             03476
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                             03477
         BZ    CLOSE2         NO                                         03478
         CLOSE (OUT2)         CLOSE OUTPUT 2                             03479
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                             03480
         BZ    CLOSE3         NO                                         03481
         CLOSE (OUT3)         CLOSE OUTPUT 3                             03482
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                             03483
         BZ    CLOSE4         NO                                         03484
         CLOSE (OUT4)         CLOSE OUTPUT 4                             03485
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                             03486
         BZ    CLOSE5         NO                                         03487
         CLOSE (OUT5)         CLOSE OUTPUT 5                             03488
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                             03489
         BZ    CLOSE6         NO                                         03490
         CLOSE (OUT6)         CLOSE OUTPUT 6                             03491
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                             03492
         BZ    CLOSE7         NO                                         03493
         CLOSE (OUT7)         CLOSE OUTPUT 7                             03494
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                             03495
         BZ    CLOSE8         NO                                         03496
         CLOSE (OUT8)         CLOSE OUTPUT 8                             03497
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                             03498
         BZ    CLOSE9         NO                                         03499
         CLOSE (OUT9)         CLOSE OUTPUT 9                             03500
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                            03501
         BZ    CLOSE10        NO                                         03502
         CLOSE (OUT10)        CLOSE OUTPUT 10                            03503
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                            03504
         BZ    CLOSE11        NO                                         03505
         CLOSE (OUT11)        CLOSE OUTPUT 11                            03506
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                            03507
         BZ    CLOSE12        NO                                         03508
         CLOSE (OUT12)        CLOSE OUTPUT 12                            03509
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                            03510
         BZ    CLOSE13        NO                                         03511
         CLOSE (OUT13)        CLOSE OUTPUT 13                            03512
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                            03513
         BZ    CLOSE14        NO                                         03514
         CLOSE (OUT14)        CLOSE OUTPUT 14                            03515
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                            03516
         BZ    CLOSE15        NO                                         03517
         CLOSE (OUT15)        CLOSE OUTPUT 15                            03518
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                            03519
         BZ    THEEND         NO                                         03520
         CLOSE (OUT16)        CLOSE OUTPUT 16                            03521
         SPACE 3                                                         03522
*                                                                        03523
*  Test for ABEND 069 first.  Did we come from an Input Error?           03524
*                                                                        03525
         TM    ABENDFLG,X'01'    Is ABEND flag on?                       03526
         BZ    THEEND            No.  End normally.                      03527
         ABEND 69                QUIT                                    03528
*                                                                        03529
*  THE END                                                               03530
*                                                                        03531
THEEND   DS    0H                                                        03532
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                 03533
         BO    THEEND0           YES WE DO.  Issue RC = 0.               03534
         MVFMS WTOCBT+16(41),FILEDONE                                    03535
WTOCBT   WTO   'CBT990                                              '    03536
THEENDS  DS    0H                                                        03537
         TM    OUTERFLG,X'01'   WTOR ISSUED AT LEAST ONCE?               03538
         BO    THEEND16         Yes, issue RC = 16                       03539
         TM    FLAG2A,ERR       WAS THERE AN ERROR?                      03540
         BO    THEEND8          Yes, issue RC = 8                        03541
         B     THEEND0          Otherwise, issue RC = 0                  03542
THEEND16 DS    0H                                                        03543
         L     R13,4(,R13)                                               03544
         MVC   16(4,R13),=F'16'         Return code 16    in R15         03545
         B     THEEND2                                                   03546
THEEND8  DS    0H                                                        03547
         L     R13,4(,R13)                                               03548
         MVC   16(4,R13),=F'8'          Return code 8     in R15         03549
         B     THEEND2                                                   03550
THEEND0  DS    0H                                                        03551
         L     R13,4(,R13)                                               03552
         MVC   16(4,R13),=F'0'          Return code 0     in R15         03553
THEEND2  DS    0H                                                        03554
         LM    R14,R12,12(R13)                                           03555
         BR    R14                                                       03556
         EJECT                                                           03557
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *      03558
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03559
*    BAL REGISTER IS R4.                                                 03560
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03561
HEX      DS    0H                                                        03562
         MVC   1(1,R15),0(R1)        Move byte                           03563
         UNPK  0(3,R15),1(2,R15)     Unpack                              03564
         TR    0(2,R15),HEXTAB-240                                       03565
         LA    R15,2(,R15)           Increment output pointer            03566
         LA    R1,1(,R1)             Increment input pointer             03567
         BCT   R0,HEX                Decrement length, then loop         03568
         MVI   0(R15),C' '           Blank the trailing byte             03569
         BR    R4                    Return to caller                    03570
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     03571
         SPACE                                                           03572
* --------------------------------------------------------- * SBG 05/00  03573
*    BAL REGISTER IS R7.                                      SBG 05/00  03574
* --------------------------------------------------------- * SBG 05/00  03575
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS   SBG 04/00  03576
*                         ALTERED.                                       03577
         MVFMS VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG           03580
         MVFMS VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG           03581
         MVFMS VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                 03582
         MVFMS VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                 03583
* ----                                                                   03584
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS?  03585
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS             03586
         MVFMS VOLALT+35(6),VOLSTG1  MOVE NEW VOLSER VALUE TO MSG        03587
INDVVOLS DS    0H                                                        03588
* ----                                                                   03589
         MVFMS VOLDDN(5),LINE        CLEAR FIELD                         03590
         MVFMS VOLDDN(5),VOLDD       MOVE DD NAME IN                     03591
         PTMS  VOLALT                MOVE MESSAGE TO PRT                 03592
         BR    R7                    RETURN TO CALLER                    03594
* --------------------------------------------------------- *            03595
*    BAL REGISTER IS R7.                                                 03596
* --------------------------------------------------------- *            03597
PRTBLCNT DS    0H                                                        03598
         PTMS  BLKCNTMS              MESSAGE TO PRINT LINE               03601
PRTBLCNE BR    R7                                                        03603
* --------------------------------------------------------- *            03604
*    BAL REGISTER IS R7.                                                 03605
* --------------------------------------------------------- *            03606
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS         03607
         ST    R7,SAVE7REG                                               03608
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                  03609
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET    03610
         MVC   OUTCCWPT(4),=A(BACKCCW)                                   03611
BACKEXT1 L     R7,SAVE7REG                                               03612
BACKEXTE BR    R7                                                        03613
* --------------------------------------------------------- *            03614
*    BAL REGISTER IS R7.                                                 03615
* --------------------------------------------------------- *            03616
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS       03617
         ST    R7,SAVE7REG                                               03618
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03619
         BZ    CLEARSV1                 NO. BYPASS CLEAR                 03620
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                 03621
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                          03622
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                       03623
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                       03624
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                    03625
CLEARSV1 L     R7,SAVE7REG                                               03626
CLEARSVE BR    R7                                                        03627
* --------------------------------------------------------- *            03628
*    BAL REGISTER IS R7.                                                 03629
* --------------------------------------------------------- *            03630
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE       03631
         ST    R7,SAVE7REG                                               03632
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03633
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION           03634
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *   03635
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2          03636
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX      03637
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?           03638
         BZ    FIXALL3                                                   03639
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?              03640
         BZ    FIXLAST2                                                  03641
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                       03642
         BZ    FIXLAST1                                                  03643
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR       03644
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *   03645
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2              03646
         L     R7,SAVE7REG                                               03647
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG    03648
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                    03649
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                           03650
         L     R7,SAVE7REG                                               03651
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE   03652
FIXLAST1 DS    0H               REPLACE EOF2                             03653
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                           03654
         L     R7,SAVE7REG                                               03655
         B     ADDEOF2          CREATE THE EOF2                          03656
FIXEXTL1 DS    0H                                                        03657
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                      03658
         L     R7,SAVE7REG                                               03659
FIXEXTLE BR    R7                                                        03660
* --------------------------------------------------------- *            03661
*    BAL REGISTER IS R7.                                                 03662
* --------------------------------------------------------- *            03663
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT      03664
*                             IOS USES DURING EXCP PROCESSING.           03665
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.    03666
* ------------------------------------------------------------------- *  03667
         MVC   OUTIOB(4),IOB01                                           03668
         MVC   OUTCSW(8),FUL2ZERO                                        03669
         MVC   OUTDCBPT(4),FUL2ZERO                                      03670
         MVC   OUTDCBPT+4(4),FUL2ZERO                                    03671
         MVC   OUTDCBPT+8(4),IOB02                                       03672
CLEARIOE BR    R7                                                        03673
* --------------------------------------------------------- *            03674
*    BAL REGISTER IS R7.                                                 03675
* --------------------------------------------------------- *            03676
CHANGVOL DS    0H             PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL  03677
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03678
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?    03679
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                  03680
         TM    LBLFLAG,X'04'  ARE WE WRITING A VOL1 LABEL?    SBG 05/00  03681
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03682
         TM    LBLFLAG,X'03'  IS THIS A HDR1 OR A HDR2?                  03683
         BNZ   CHANGVOE       NO. DON'T ATTEMPT TO CHANGE THIS.          03684
         TM    PARMFLG2,X'41' ARE WE CHANGING OUTPUT VOLSERS? SBG 05/00  03685
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03686
* -- >>                                                                  03687
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              03688
         BZ    CHEBCVID             NO. NO TRANSLATION OF VOLSER         03689
         ST    R5,R5HXPRT           Save register.                       03690
         L     R5,SAVTRTCS          Point to translation table CSECT.    03691
         USING TRTCSECT,R5                                               03692
         MVC   VOLASC(6),VOLCHG                                          03693
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.           03694
         DROP  R5                                                        03695
         MVC   INAREA+4(6),VOLASC   Use ASCII volser to replace          03696
         B     CHASCVID             And not the EBCDIC one.              03697
CHEBCVID MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                       03698
CHASCVID DS    0H                                                        03699
* -- >>                                                                  03700
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03701
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION        03702
         CLI   TAPEOWN,C' '   IS THERE A TAPEOWNER VALUE                 03703
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE   03704
* -- >>                                                                  03705
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              03706
         BZ    CHEBCTOW             NO. NO TRANSLATION OF VOLSER         03707
         ST    R5,R5HXPRT           Save register.                       03708
         L     R5,SAVTRTCS          Point to translation table CSECT.    03709
         USING TRTCSECT,R5                                               03710
         MVC   TAPEOASC(14),TAPEOWN                                      03711
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.      03712
         DROP  R5                                                        03713
         MVC   INAREA+37(14),TAPEOASC    ASCII ownerid to replace        03714
         B     CHASCTOW                  And not the EBCDIC one.         03715
CHEBCTOW DS    0H                                                        03716
         MVC   INAREA+41(10),TAPEOWN     Move EBCDIC tape owner          03717
CHASCTOW DS    0H                                                        03718
* -- >>                                                                  03719
         MVC   LINE(133),LINE-1
         MVFMS OWNRTID(14),LINE          CLEAR FIELD                     03721
         MVFMS OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        03722
         MVFMS OWNRDDO(5),LINE           CLEAR FIELD                     03723
         MVFMS OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03724
         PTMS  OWNRMSG                                                   03725
CHNOTOWN DS    0H                                                        03727
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS      03728
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS             03729
CHEXTLAB DS    0H                                                        03730
         TM    PARMFLG5,X'03'      ARE WE INITTING ASCII TAPES?          03731
         BZ    CHEXTGO1            NO. DO ORDINARY PROCESSING            03732
         B     CHANGASC            YES. GO TO SPECIAL ROUTINE.           03733
CHEXTGO1 TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?        03734
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN             03735
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03736
         BO    CHNOZAPV            YES, SKIP SECOND WRITE                03737
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                   03738
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                 03739
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?               03740
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.           03741
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?       03742
         BZ    CHNOZAPV            NO. BYPASS.                           03743
* -- >>                                                                  03744
         TM    ASCIIFLG,X'01'                                            03745
         BO    CHASCVE1                                                  03746
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              03747
         BZ    CHEBCVEX             NO. NO TRANSLATION OF VOLSER         03748
CHASCVE1 DS    0H                                                        03749
         ST    R5,R5HXPRT           Save register.                       03750
         L     R5,SAVTRTCS          Point to translation table CSECT.    03751
         USING TRTCSECT,R5                                               03752
         MVC   VOLASC(6),VOLCHG                                          03753
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.           03754
         DROP  R5                                                        03755
         MVC   EXTLBLIN+4(6),VOLASC Use ASCII volser to replace          03756
         B     CHASCVEX             And not the EBCDIC one.              03757
CHEBCVEX MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    03758
CHASCVEX DS    0H                                                        03759
* -- >>                                                                  03760
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03761
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION        03762
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       03763
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE           03764
* -- >>                                                                  03765
         TM    ASCIIFLG,X'01'                                            03766
         BO    CHASCVE2                                                  03767
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              03768
         BZ    CHEBCTEX             NO. NO TRANSLATION OF VOLSER         03769
CHASCVE2 DS    0H                                                        03770
         ST    R5,R5HXPRT           Save register.                       03771
         L     R5,SAVTRTCS          Point to translation table CSECT.    03772
         USING TRTCSECT,R5                                               03773
         MVC   TAPEOASC(14),TAPEOWN                                      03774
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.      03775
         DROP  R5                                                        03776
         MVC   EXTLBLIN+37(14),TAPEOASC  ASCII ownerid to replace        03777
         B     CHASCTEX                  And not the EBCDIC one.         03778
CHEBCTEX DS    0H                                                        03779
         MVC   EXTLBLIN+41(10),TAPEOWN   Move EBCDIC tape owner          03780
CHASCTEX DS    0H                                                        03781
* -- >>                                                                  03782
         MVC   LINE(133),LINE-1                                          03783
         MVFMS OWNRTID(14),LINE          CLEAR FIELD                     03784
         MVFMS OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        03785
         MVFMS OWNRDDO(5),LINE           CLEAR FIELD                     03786
         MVFMS OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03787
         PTMS  OWNRMSG                                                   03788
CHNOZAPV DS    0H                                                        03790
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS             03791
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03792
         BO    CHGWRIT             YES, SKIP SECOND WRITE                03793
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03794
         BO    CHGPRINT            YES, PRINT.                           03795
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       03796
         BO    CHGPRINT            YES, PRINT                            03797
         B     CHGWRIT                                                   03798
CHGPRINT DS    0H                                                        03799
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  03800
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03801
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   03802
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03803
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   03804
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            03805
         TM    EXASCFLG,X'01'                                            03806
         BZ    CHGPRANT                                                  03807
         ST    R5,R5HXPRT        Save register.                          03808
         L     R5,SAVTRTCS       Point to translation table CSECT.       03809
         USING TRTCSECT,R5                                               03810
         TR    VOLORIG(6),TRTA2E   Translate VOLSER to EBCDIC            03811
         ST    R7,SAVE7RG5                                               03812
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  03813
         L     R7,SAVE7RG5                                               03814
         TR    VOLORIG(6),TRTE2A   Translate VOLSER to ASCII             03815
         L     R5,R5HXPRT        Restore register.                       03816
         DROP  R5                                                        03817
         B     CHGWRIT                                                   03818
CHGPRANT DS    0H                                                        03819
         ST    R7,SAVE7RG5                                               03820
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  03821
         L     R7,SAVE7RG5                                               03822
CHGWRIT  DS    0H                                             SBG 05/00  03823
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03824
CHANGVOE BR    R7                  END OF ROUTINE - RETURN               03825
         SPACE 3                                                         03826
CHANGASC DS    0H             PROCESS CHANGE VOLUME INFO TO INIT ASCII   03827
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03828
*    X'01' OF WRITE LABEL FLAG IS ASSUMED TO BE ON AT THIS POINT.        03829
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       03830
CHASCLAB DS    0H                                                        03831
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03832
         BO    CHNOASCV            YES, SKIP SECOND WRITE                03833
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    03834
         MVC   EXTLBLIN(4),AVOL1LIT                                      03835
         TM    PARMFLG5,X'01'      INITTING ASCII LEVEL 3?               03836
         BO    CHASCLX1            YES. KEEP LEVEL 3 INDICATOR.          03837
         MVI   AVOL1LVL,C'4'       NO. INSERT LEVEL 4 INDICATOR.         03838
CHASCLX1 DS    0H                                                        03839
         MVC   EXTLBLIN+79(1),AVOL1LVL   MOVE IN SYSTEM LEVEL FOR ANSI   03840
         TM    PARMFLG2,X'40'      IS OUTVOL PARM IN EFFECT              03841
         BZ    CHNOASCV            NO. DON'T CHANGE OWNER INFORMATION    03842
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       03843
         BE    CHNOASCV            NO INFO-THEREFORE NO CHANGE           03844
         MVC   EXTLBLIN+37(14),TAPEOWN    CHANGE TAPE OWNER TOO          03845
         MVC   LINE(133),LINE-1                                          03846
         MVFMS OWNRTID(14),LINE          CLEAR FIELD                     03847
         MVFMS OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        03848
         MVFMS OWNRDDO(5),LINE           CLEAR FIELD                     03849
         MVFMS OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03850
         PTMS  OWNRMSG                                                   03851
CHNOASCV DS    0H                                                        03853
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       03854
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03855
         BO    CHGWRASX            YES, SKIP SECOND WRITE                03856
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03857
         BO    CHGASPRT            YES, PRINT.                           03858
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       03859
         BO    CHGASPRT            YES, PRINT                            03860
         B     CHGWRAS                                                   03861
CHGASPRT DS    0H                                                        03862
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  03863
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        03864
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   03865
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        03866
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   03867
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            03868
         ST    R7,SAVE7RG5                                               03869
         BAL   R7,VOL1PRT          PRINT MESSAGE THAT VOLSER CHANGED     03870
         L     R7,SAVE7RG5                                               03871
         B     CHGWRAS                                                   03872
CHGWRASX DS    0H                                                        03873
         MVC   EXTLBLIN+60(20),AHDR1OSC     Refresh IBMZLA literal       03874
         MVC   EXTLBLIN+4(23),AHDR1ID1      Refresh Dummy Fileid etc.    03875
CHGWRAS  DS    0H                                                        03876
         ST    R5,R5HXPRT        Save register.                          03877
         L     R5,SAVTRTCS       Point to translation table CSECT.       03878
         USING TRTCSECT,R5                                               03879
         TR    EXTLBLIN(80),TRTE2A   Translate entire label to ASCII.    03880
         DROP  R5                                                        03881
         L     R5,R5HXPRT        Restore register.                       03882
CHASCEND BR    R7                  END OF ROUTINE - RETURN               03883
         SPACE 3                                                         03884
* --------------------------------------------------------- *            03885
*    BAL REGISTER IS R7.                                                 03886
* --------------------------------------------------------- *            03887
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                  03888
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED          03889
* --------------------------------------------------------- *            03890
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE             03891
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER               03892
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER               03893
         AR    R5,R2               ADD TO BYTE COUNT                     03894
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH              03895
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD           03896
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                   03897
ADDCNOOV DS    0H                                                        03898
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE        03899
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE        03900
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN               03901
* --------------------------------------------------------- *            03902
*    BAL REGISTER IS R7.                                                 03903
* --------------------------------------------------------- *            03904
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            03905
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              03906
* --------------------------------------------------------- *            03907
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          03908
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03909
         BE    MOVEHI09                                                  03910
         MVC   0(4,R3),0(R2)                                             03911
         B     MOVEHIEN                                                  03912
         LA    R2,1(,R2)                                                 03913
         LA    R3,1(,R3)                                                 03914
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03915
         BE    MOVEHI08                                                  03916
         MVC   0(3,R3),0(R2)                                             03917
         B     MOVEHIEN                                                  03918
         LA    R2,1(,R2)                                                 03919
         LA    R3,1(,R3)                                                 03920
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03921
         BE    MOVEHI07                                                  03922
         MVC   0(2,R3),0(R2)                                             03923
         B     MOVEHIEN                                                  03924
         LA    R2,1(,R2)                                                 03925
         LA    R3,1(,R3)                                                 03926
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03927
         BE    MOVEHIEN                                                  03928
         MVC   0(1,R3),0(R2)                                             03929
MOVEHIEN BR    R7                                                        03930
* --------------------------------------------------------- *            03931
*    BAL REGISTER IS R7.                                                 03932
* --------------------------------------------------------- *            03933
****                                                                     03934
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                             03935
****                                                                     03936
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                 03937
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                    03938
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,      03939
****                      THEN BACK SPACE FILE OVER TAPE MARK.           03940
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR         03941
****                                                                     03942
* --------------------------------------------------------- *            03943
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO     03944
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03945
         EXCP  INIOB          READ                                       03946
         WAIT  ECB=INECB      WAIT FOR READ                              03947
         TM    INCSW+4,X'01'  WAS TM READ?                               03948
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.               03949
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                03950
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                  03951
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03952
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                         03953
         L     R2,FULLWORK           LOAD FULLWORD LENGTH                03954
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03955
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                 03956
         L     R3,FULLWORK           LOAD FULLWORD LENGTH                03957
         SR    R2,R3                 R2=ACTUAL LENGTH READ               03958
         NI    ISLBLFLG,FF-X'03'     TURN OFF "ISLABEL" FLAGS            03959
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?           03960
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE      03961
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                          03962
* ------------------------------------------------------------------*    03963
*    Call the LABELCHK program and get the returns.                 *    03964
* ------------------------------------------------------------------*    03965
         L     R15,LABCHENT       Get entry point of called program      03966
         STM   R1,R3,SAVE13LC     Save R1 and R2.                        03967
         LA    R1,PARMFLGS        Point R1 to parm flags.                03968
         LA    R2,LCHKPASS        Point R2 to user area to be passed.    03969
         L     R3,=A(INAREA)      Point R3 to address of INAREA.         03970
         BALR  R14,R15                 Do CALL.                          03971
         ST    R2,SAVELBCK             Address of returned user area     03972
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.    03973
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.           03974
*                                 A call to LABCHECK overlays INAREA,    03975
*                                 so if a LABCHECK routine alters        03976
*                                 a label, the alteration will be        03977
*                                 written out to the output tapes.       03978
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA     03979
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    03980
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?   03981
         BO    CLOSMALL           Yes. Close all files and finish up.    03982
* ------------------------------------------------------------------*    03983
*        BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE             03984
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                       03985
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?          03986
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS         03987
         TM    ISLBLFLG,X'02'                                            03988
         BO    LBDQLABL                                                  03989
*                             NORMALLY WITHOUT CHANGING ANYTHING.        03990
*                             BUT IF IT IS A DATA FILE,                  03991
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE   03992
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK          03993
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03994
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.            03995
         EXCP  INIOB          DO THIS EXCP                               03996
         WAIT  ECB=INECB      WAIT FOR READ                              03997
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03998
         BNE   LBDQINER       NO -- ERROR                                03999
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04000
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04001
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR             04002
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR     04003
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE         04004
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04005
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ      04006
         EXCP  INIOB          DO THIS EXCP                               04007
         WAIT  ECB=INECB      WAIT FOR READ                              04008
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04009
         BNE   LBDQINER       NO -- ERROR                                04010
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04011
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04012
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE          04013
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04014
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE     04015
         EXCP  INIOB          DO THIS EXCP                               04016
         WAIT  ECB=INECB      WAIT FOR READ                              04017
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04018
         BNE   LBDQINER       NO -- ERROR                                04019
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04020
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04021
LBDQREND BR    R7                                                        04022
* --------------------------------------------------------- *            04023
*    BAL REGISTER IS R7.                                                 04024
* --------------------------------------------------------- *            04025
****                                                                     04026
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.        04027
****                                                                     04028
* --------------------------------------------------------- *            04029
HEXPRINT DS    0H                Hex Print from Tape Data (INAREA)       04030
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 04031
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 04032
         NI    HEXEXFLG,FF-X'01' Turn off External Label Input Flag.     04033
         ST    R5,R5HXPRT        Save register.                          04034
         L     R5,SAVTRTCS       Point to translation table CSECT.       04035
         USING TRTCSECT,R5                                               04036
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               04037
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            04038
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        04039
         B     HEXPRNXX          Bypass Hex Print from external labels   04040
*                                                                        04041
HEXPRNEX DS    0H                Hex Print from External Label Input     04042
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 04043
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 04044
         OI    HEXEXFLG,X'01'    Turn on External Label Input Flag.      04045
         ST    R5,R5HXPRT        Save register.                          04046
         L     R5,SAVTRTCS       Point to translation table CSECT.       04047
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               04048
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            04049
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        04050
         L     R2,=F'80'         We know to print exactly 80 bytes.      04051
         B     MOVESIZ1          Now go print them.                      04052
*                                                                        04053
HEXPRNXX DS    0H                                                        04054
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT      04055
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?           04056
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.           04057
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                   04058
MOVESIZ1 DS    0H                                                        04059
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                04060
         BCTR  R2,0                ONE LESS FOR EXECUTE                  04061
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04062
         EX    R2,MOVRULER         PUT IN HEX RULER                      04063
         PUT   SYSPRINT,LINE                                             04064
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04065
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04066
         BO    HEXEX001            Yes. Move the data from EXTLBLIN.     04067
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04068
         B     HEXEN000            and continue to print.                04069
HEXEX001 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04070
HEXEN000 DS    0H                                                        04071
         TM    PARMFLG5,X'80'      Is ASCII on?                          04072
         BZ    HEXEN001            No. Use EBCDIC printables.            04073
         EX    R2,PRHEXAS          Yes. Use ASCII printables.            04074
         B     HEXENSK1                                                  04075
HEXEN001 DS    0H                                                        04076
         EX    R2,PRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      04077
HEXENSK1 DS    0H                                                        04078
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04079
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        04080
         PUT   SYSPRINT,LINE                                             04081
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04082
         BO    HEXEX002            Yes. Move the data from EXTLBLIN.     04083
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04084
         B     HEXEN002            and continue to print.                04085
HEXEX002 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04086
HEXEN002 EX    R2,PRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04087
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04088
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04089
         PUT   SYSPRINT,LINE                                             04090
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04091
         BO    HEXEX003            Yes. Move the data from EXTLBLIN.     04092
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04093
         B     HEXEN003            and continue to print.                04094
HEXEX003 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04095
HEXEN003 EX    R2,PRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04096
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04097
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04098
         PUT   SYSPRINT,LINE                                             04099
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK      04100
         B     HEXPREND                                                  04101
MOVDATEX MVC   HEXPRTWK(*-*),EXTLBLIN     ***  EXECUTED  ***             04102
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***             04103
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             04104
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             04105
PRHEXAS  TR    HEXPRTWK(*-*),TRTASPRT     ***  EXECUTED  ***             04106
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             04107
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             04108
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             04109
HEXPREND DS    0H                                                        04110
         L     R2,BYTESMVD         RESTORE R2 FOR LATER USE              04111
NOHEXPRO DS    0H                                                        04112
         L     R5,R5HXPRT                                                04113
         DROP  R5                                                        04114
         BR    R7             RETURN TO CALLER                           04115
* --------------------------------------------------------- *            04116
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - - SBG 04/00  04117
         EJECT                                                           04118
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - *  04119
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED            04120
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO           04121
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT  04122
FUL2ZERO DC    2F'0'                                                     04123
IOB01    DC    X'02000000'                                               04124
IOB02    DC    X'00010000'                                               04125
PL4NO3   DC    PL4'3'                                                    04126
BLOKCNTP DC    F'0'                                                      04127
FILECNTP DC    F'1'                                                      04128
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES       04129
TOTBYH   DC    F'0'                                                      04130
TOTBYL   DC    F'0'                                                      04131
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES  04132
PRVBYH   DC    F'0'                                                      04133
PRVBYL   DC    F'0'                                                      04134
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE        04135
DBINFH   DC    F'0'                                                      04136
DBINFL   DC    F'0'                                                      04137
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL       04138
DBINH    DC    F'0'                                                      04139
DBINL    DC    F'0'                                                      04140
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS      04141
LABINH   DC    F'0'                                                      04142
LABINL   DC    F'0'                                                      04143
WORKA    DC    D'0'                                                      04144
WORKL    DC    D'0'                                                      04145
WORKP    DC    D'0'                                                      04146
SAV01MLT DC    D'0'                                                      04147
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     04148
HEXSAVE  DS    3F                    Register save for HEX macro         04149
BLOKCNT  DC    F'0'                                                      04150
FILECNT  DC    F'1'                                                      04151
LABELCNT DC    F'0'                                                      04152
SAVUNIT  DC    CL4' '                                                    04153
         DC    CL1' '         Need this to absorb blank from HEX macro   04154
SAVDDN   DC    CL5' '                                                    04155
SAVVOLSR DC    CL6' '                                                    04156
SAVBYTES DC    X'0000'                                                   04157
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE       04158
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT      04159
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT     04160
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                        04161
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT  04162
INITRWFL DC    X'00'          FLAG SHOWING OUTPUT TAPES REWOUND IN INIT  04163
*              X'01'          OUTPUT TAPES HAVE BEEN REWOUND             04164
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL         04165
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE       04166
*              X'01'          TAPE IS SL                                 04167
HEXEXFLG DC    X'00'          Hex printing from INAREA.                  04168
*              X'01'          Hex printing from EXTLBLIN.                04169
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS      04170
*              X'00'          WE ARE NOW WRITING DATA FROM THE           04171
*                             INPUT TAPE. X'01' IS OFF.                  04172
*              X'01'          WE ARE NOW WRITING LABELS FROM THE         04173
*                             EXTERNAL FILE                              04174
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK          04175
*              X'04'          WE CAME FROM THE ENDHEADR LABEL            04176
*              X'08'          WE CAME FROM THE LBLINEND LABEL            04177
*                             THIS MEANS EOF OF THE LABADDIN FILE        04178
*              X'10'          FINISHED FIXING LABELS                     04179
**** ----- LABELCHK -------------------->>>>  Passed area, below         04180
*                                                                        04181
LCHKPASS DS    0H                                                        04182
*                                                                        04183
INAREAX  DC    CL80' '        Read labels into here.                     04184
         DC    CL40' '        Padding for possible overflow.             04185
* --------------------------------------------------------- *            04186
*                                                                        04187
*                                                                        04188
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       04189
*              X'00'          DATA IS NOT A LABEL                        04190
*              X'01'          DATA IS A LABEL                            04191
*              X'02'          DATA IS AN ASCII LABEL                     04192
*                                                                        04193
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               04194
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             04195
*              X'02'          BECAUSE OF SYSIN    DD MISSING             04196
*              X'04'          BECAUSE OF LABADDIN DD MISSING             04197
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                04198
*              X'01'          LABLDUMP DD IS OPEN                        04199
*              X'02'          SYSIN    DD IS OPEN                        04200
*              X'04'          LABADDIN DD IS OPEN                        04201
L80FLAG  DC    X'00'                                                     04202
*              X'01'          LAST DATA WAS 80 BYTE RECORD               04203
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN    04204
*              X'01'          HDR1 HAS BEEN SEEN                         04205
*              X'02'          HDR2 HAS BEEN SEEN                         04206
*              X'04'          VOL1 HAS BEEN SEEN                         04207
*              X'08'          HDR1 IS FROM AN INITTED TAPE               04208
*              X'10'          EOF1 HAS BEEN SEEN                         04209
*              X'20'          EOF2 HAS BEEN SEEN                         04210
*              X'40'          EOV1 HAS BEEN SEEN                         04211
*              X'80'          EOV2 HAS BEEN SEEN                         04212
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                    04213
EXASCFLG DC    X'00'          External Label is ASCII if X'01'           04214
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   04215
LABADFLG DC    X'00'          If X'01' then close LABADDIN file          04216
CLOSMFLG DC    X'00'          If X'01' then close all open files         04217
* --------------------------                                             04218
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     04219
*              X'01'          WE ARE IN A HDR GROUP                      04220
*              X'02'          WE ARE IN A EOF GROUP                      04221
*              X'04'          WE ARE IN A EOV GROUP                      04222
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND    04223
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL    04224
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES       04225
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII     04226
* ---------- *                                                           04227
* --------------------------------------------------------- *            04228
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE        04229
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           04230
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           04231
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           04232
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             04233
VOLCHG   DC    C'      '                                                 04234
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS        04235
VOLASC   DC    C'      '     ASCII VOLUME                                04236
LCHKPASE EQU   *-LCHKPASS                                                04237
**** ----- LABELCHK -------------------->>>>  Passed area, above         04238
OUTERFLG DC    X'00'          FLAG IF WTOR ISSUED BECAUSE OF AN ERROR    04239
*              X'01'          ERROR WAS PRESENT                          04240
OUTBYT   DS    0F                                                        04241
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER        04242
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE             04243
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY)  04244
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS        04245
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES         04246
TWO31    DC    P'2147483648'       2 TO THE 31ST                         04247
         DC    C'      '                                                 04248
         DC    C'0'                                                      04249
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      04250
         DC    C'      '                                                 04251
DWORD    DC    D'0'                                                      04252
QWORD    DS    PL16                                                      04253
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1        SBG 03/00  04254
ZEROA23  DC    23X'30'        TEST FOR IEHINITTED ASCII HDR1             04255
         CNOP  0,8                                                       04256
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'                         04257
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'                         04258
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'0001'                         04259
         DC    X'03',AL3(INAREA),X'2000',X'0001'                         04260
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE 2 FILES   04261
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE ONE FILE  04262
         DC    X'03',AL3(INAREA),X'2000',X'0001'                         04263
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK     04264
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04265
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK     04266
         DC    X'3F',AL3(INAREA),X'6000',X'0001'     FWD SPACE FILE      04267
         DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACK OVER T.M.      04268
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04269
INECB    DC    F'0'                                                      04270
INIOB    DC    X'02000000'                                               04271
         DC    A(INECB)                                                  04272
INCSW    DC    2F'0'                                                     04273
INCCWPT  DC    A(INCCW)                                                  04274
         DC    A(IN)                                                     04275
         DC    F'0'                                                      04276
         DC    X'00010000'                                               04277
OUTECB   DC    F'0'                                                      04278
OUTIOB   DC    X'02000000'                                               04279
         DC    A(OUTECB)                                                 04280
OUTCSW   DC    2F'0'                                                     04281
OUTCCWPT DC    A(OUTCCW)                                                 04282
OUTDCBPT DC    A(OUT1)                                                   04283
         DC    F'0'                                                      04284
         DC    X'00010000'                                               04285
REWECB   DC    F'0'                                                      04286
REWIOB   DC    X'02000000'                                               04287
         DC    A(REWECB)                                                 04288
REWCSW   DC    2F'0'                                                     04289
REWCCWPT DC    A(REWCCW)                                                 04290
REWDCBPT DC    A(OUT1)                                                   04291
         DC    F'0'                                                      04292
         DC    X'00010000'                                               04293
         SPACE 3                                                         04294
DDOCHG   DC    C'     '                                                  04295
DDOUT1   DC    C'OUT1 '                                                  04296
DDOUT2   DC    C'OUT2 '                                                  04297
DDOUT3   DC    C'OUT3 '                                                  04298
DDOUT4   DC    C'OUT4 '                                                  04299
DDOUT5   DC    C'OUT5 '                                                  04300
DDOUT6   DC    C'OUT6 '                                                  04301
DDOUT7   DC    C'OUT7 '                                                  04302
DDOUT8   DC    C'OUT8 '                                                  04303
DDOUT9   DC    C'OUT9 '                                                  04304
DDOUT10  DC    C'OUT10'                                                  04305
DDOUT11  DC    C'OUT11'                                                  04306
DDOUT12  DC    C'OUT12'                                                  04307
DDOUT13  DC    C'OUT13'                                                  04308
DDOUT14  DC    C'OUT14'                                                  04309
DDOUT15  DC    C'OUT15'                                                  04310
DDOUT16  DC    C'OUT16'                                                  04311
FLAGLIT  DC    C' - FLAGS - '                                            04312
* --------------------------                                             04313
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE      04314
FLAG1    DC    X'00'                                                     04315
OP1      EQU   X'80'                                                     04316
OP2      EQU   X'40'                                                     04317
OP3      EQU   X'20'                                                     04318
OP4      EQU   X'10'                                                     04319
OP5      EQU   X'08'                                                     04320
OP6      EQU   X'04'                                                     04321
OP7      EQU   X'02'                                                     04322
OP8      EQU   X'01'                                                     04323
FLAG2    DC    X'00'                                                     04324
OP9      EQU   X'80'                                                     04325
OP10     EQU   X'40'                                                     04326
OP11     EQU   X'20'                                                     04327
OP12     EQU   X'10'                                                     04328
OP13     EQU   X'08'                                                     04329
OP14     EQU   X'04'                                                     04330
OP15     EQU   X'02'                                                     04331
OP16     EQU   X'01'                                                     04332
FLAG2A   DC    X'00'                                          SBG 03/00  04333
ERR      EQU   X'02'                                                     04334
EOV      EQU   X'01'                                                     04335
EOVSOON  EQU   X'01'         X'01' IS INITIAL SETTING.                   04336
FF       EQU   X'FF'                                                     04337
FLAG3    DC    X'00'                                                     04338
FLAG4    DC    X'00'                                                     04339
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE     SBG 03/00  04340
* ---------- *                                                           04341
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                      04342
*              x'01'    Yes.                                             04343
* ---------- *                                                           04344
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN   04345
*              X'01'    HDR1 HAS BEEN READ IN                            04346
*              X'02'    HDR2 HAS BEEN READ IN                            04347
*              X'04'    VOL1 HAS BEEN READ IN                            04348
*              X'08'    UHL  HAS BEEN READ IN                            04349
*              X'10'    EOF1 HAS BEEN READ IN                            04350
*              X'20'    EOF2 HAS BEEN READ IN                            04351
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN           04352
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN           04353
* ---------- *                                                           04354
STRIPFLG DC    X'00'                                                     04355
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.    04356
DATFLAG  DC    X'00'                                          SBG 03/00  04357
*              X'10'    NO REAL DATA HAS BEEN READ YET        SBG 03/00  04358
* --------------------------------------------------------- * SBG 04/00  04359
VOLDD    DC    C'     '                                                  04360
STOR7REG DS    F                                                         04361
TOTB7REG DS    F                                                         04362
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST       04363
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST       04364
SAVE13LC DC    3F'0'                                                     04365
SAV45MSG DC    2F'0'
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04366
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                        04367
         SPACE 3                                                         04368
LABELITH DC    CL80'----ENDOFLABELHEADER '                               04369
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            04370
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               04371
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            04372
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *   04373
VOL1LABL DS    0CL80                                                     04374
VOL1LIT  DC    CL4'VOL1'                                                 04375
VOL1SERL DC    CL6' '                                                    04376
VOL1FIL1 DC    CL31' '                                                   04377
VOL1ONER DC    CL10' '                                                   04378
VOL1FIL2 DC    CL29' '                                                   04379
* ------------------------ INITIALIZATION OF VOLUMES --------------- *   04380
HDR1INIT DS    0CL80                                                     04381
HDR1ILIT DC    CL4'HDR1'                                                 04382
HDR1IFIL DC    76C'0'                                                    04383
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   04384
AVOL1LAB DS    0CL80                                                     04385
AVOL1LIT DC    CL4'VOL1'                                                 04386
AVOL1SER DC    CL6' '                                                    04387
AVOL1ACC DC    CL1' '                                                    04388
AVOL1RS1 DC    CL13' '                                                   04389
AVOL1IMP DC    CL13' '                                                   04390
AVOL1OWN DC    CL14' '                                                   04391
AVOL1RS2 DC    CL28' '                                                   04392
AVOL1LVL DC    CL1'3'                                                    04393
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   04394
AHDR1INI DS    0CL80                                                     04395
AHDR1LIT DC    CL4'HDR1'                                                 04396
AHDR1ID1 DC    23C'0'                                                    04397
AHDR1FSN DC    CL4'0001'                                                 04398
AHDR1FSQ DC    CL4'0001'                                                 04399
AHDR1GNM DC    CL4'0001'                                                 04400
AHDR1VNM DC    CL2'00'                                                   04401
AHDR1CRD DC    CL6' 00000'                                               04402
AHDR1EXD DC    CL6' 00000'                                               04403
AHDR1ACC DC    CL1' '                                                    04404
AHDR1BKC DC    CL6'000000'                                               04405
AHDR1OSC DC    CL20'IBMZLA '                                             04406
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *   04407
MSGCSECT CSECT
TOTWLINE DC    C' TOTAL BYTES WITHOUT LABELS: '                          04408
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04409
         DC    CL78' '                                                   04410
TOTLLINE DC    C' TOTAL BYTES IN TAPE LABELS: '                          04411
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04412
         DC    CL78' '                                                   04413
TOTBLINE DC    C' TOTAL BYTES READ ON INPUT : '                          04414
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04415
         DC    CL78' '                                                   04416
BLKCNTMS DC    C' BLOCK COUNTS IN EOF1 AND EOV1 ARE BEING CORRECTED FO'  04417
         DC    C'R TAPE COPY OPERATION '                                 04418
         DC    CL58' '                                                   04419
INNOTOPN DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM'  04420
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE '  04421
         DC    C'A PARM OF INITVOLS.'                                    04422
         DC    CL8' '                                                    04423
LDMPOUTM DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               '  04424
         DC    C'                             MEMBER=         VOLUME= '  04425
         DC    C'                          '                             04426
LDMPINMS DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               '  04427
         DC    C'                             MEMBER=         VOLUME= '  04428
         DC    C'                          '                             04429
LDMPMSG  DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L'  04430
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04431
         DC    C' MULTIPLE OF 80           '                             04432
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04433
         DC    C' IS TREATED AS NL.                                   '  04434
         DC    CL27' '                                                   04435
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04436
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  04437
         DC    CL27' '                                                   04438
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  04439
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  04440
         DC    CL27' '                                                   04441
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 04442
         DC    CL6'&HEXDFLM'                                             04443
         DC    C' RECORDS WILL'                                          04444
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  04445
         DC    C'SYSIN.'                                                 04446
         DC    CL17' '                                                   04447
STRPMSG  DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS '  04448
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP'  04449
         DC    C'UT TAPES.                 '                             04450
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S'  04451
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04452
         DC    C' MULTIPLE OF 80           '                             04453
NLABMSG  DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C'  04454
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL '  04455
         DC    C'IMAGES.                   '                             04456
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  04457
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  04458
         DC    C'                           '                            04459
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ'  04460
         DC    C'ing a Tape Mark right now.                           '  04461
         DC    C'                          '                             04462
FORCENLM DC    C' *** File Limiting by NL file numbers has been forced'  04463
         DC    C'.  Divide by 3 for the SL file number ***            '  04464
         DC    C'                          '                             04465
FORCESLM DC    C' *** File Limiting by SL file numbers has been forced'  04466
         DC    C'.  Multiply by 3 for the NL file number ***          '  04467
         DC    C'                          '                             04468
TWOFORCE DC    C' *** File Limiting by SL and NL file numbers both spe'  04469
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no'  04470
         DC    C't code PARM=SLLIM.        '                             04471
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '         04472
         DC    C'TERMINATED '                                            04473
         DC    76C'*'                                                    04474
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '    04475
         DC    82C'*'                                                    04476
VOLALT   DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'   SBG 03/00  04477
         DC    C' FOR DDNAME '                                           04478
VOLDDN   DC    C'     '                                                  04479
VOLFILL  DC    75C' '                    VOL1 CHANGE MESSAGE  SBG 03/00  04480
OWNRMSG  DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                 04481
OWNRTID  DC    C'          '                                             04482
OWNRTIDE DC    C'    '                                                   04483
OWNRLIT1 DC    C' FOR DDNAME '                                           04484
OWNRDDO  DC    C'     '                                                  04485
OWNRFIL2 DC    64C' '                                                    04486
LTMRPT   DC    C' LEADING TAPE MARK WAS '                     SBG 03/00  04487
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED  SBG 03/00  04488
         DC    103C' '                                        SBG 03/00  04489
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '  SBG 06/00  04490
         DC    C'EOV2EOF PARM OR OPTION'                      SBG 06/00  04491
         DC    69C' '                                         SBG 06/00  04492
INITASC3 DC    C' ASCII TAPE INIT LVL 3 '                                04493
INITASC4 DC    C' ASCII TAPE INIT LVL 4 '                                04494
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                           04495
INITMSG  DC    C' INITTED TAPE HAS BEEN '                                04496
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                           04497
INITSER  DC    C'      '                                      SBG 03/00  04498
INITBLNK DC    76C' '                                         SBG 03/00  04499
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '        04500
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '               04501
OUTCFCNT DC    C'XXXXXXXXXX'                                             04502
         DC    C'  Bytes:'                                               04503
OUTCBCNT DC    CL26' '                                                   04504
         DC    C' '                                                      04505
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '        04506
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04507
         DC    40C'*'                                                    04508
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '        04509
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04510
         DC    40C'*'                                                    04511
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '        04512
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04513
         DC    40C'*'                                                    04514
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'               04515
FILEPBYT DS    0CL44                                                     04516
FILEDFL1 DC    C' '                                                      04517
FILECONT DC    C'          '                                             04518
FILEDFL2 DC    C' '                                                      04519
FILEBYTE DC    C' 9,999,999,999,999,999,999'                             04520
         DC    C' BYTES'                                                 04521
FILETBYT DS    0CL44                                                     04522
FILEDFL3 DC    C'    '                                                   04523
FILECUMT DC    C'          '                                             04524
FILEDFL4 DC    C' '                                                      04525
FILETBYE DC    C' 9,999,999,999,999,999,999'                             04526
         DC    8C' '                                                     04527
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'     04528
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'     04529
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                      04530
         DC    C'       '          BLANKS FOR COVERING UP     SBG 03/00  04531
READOMSG DC    C'0THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX 04532
               LSER: XXXXXX '                                 SBG 06/00  04533
         DC    66C' '                                         SBG 06/00  04534
SUCCESSR DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX 04535
               ERIAL XXXXXX '                                 SBG 06/00  04536
         DC    66C' '                                         SBG 06/00  04537
         DC    C' '                                                      04538
COPYMODS CSECT
HEXPRTWK DC    CL133' '                                                  04539
         DC    C' '                                                      04540
LINE     DC    CL133' '                                                  04541
         DC    C' '                                                      04542
SAVELINE DC    CL133' '                                                  04543
LINE44   DC    CL44' '                                                   04544
RULERHEX DS    0CL132                                                    04545
         DC    C'----+----1----+----2----+----3----+----4----+----5--'   04546
         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  04547
         DC    C'----1----+----2----+----3----+----4'                    04548
REPLY    DC    C'      '                                                 04549
COPIED   DC    C'COPIED '                                     SBG 03/00  04550
SKIPPED  DC    C'SKIPPED'                                     SBG 03/00  04551
FULLWORK DS    0F                                             SBG 03/00  04552
         DC    H'0'                                           SBG 03/00  04553
HALFWORK DC    H'0'                HALFWORD WORK AREA         SBG 03/00  04554
         DC    2F'0'               FILLER                     SBG 05/00  04555
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     04556
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW    04557
* --------------------------------------------------------- * SBG 05/00  04558
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                04559
PARMFLG1 DC    X'00'                                                     04560
*              X'DE'    LABEL INFORMATION WILL BE PRINTED                04561
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED               04562
PARMFLG2 DC    X'00'                                                     04563
PARMFLG3 DC    X'00'                                                     04564
PARMFLG4 DC    X'00'                                                     04565
PARMFLG5 DC    X'00'                                                     04566
PARMFLG6 DC    X'00'                                                     04567
PARMFLG7 DC    X'00'                                                     04568
PARMFLG8 DC    X'00'                                                     04569
PARMFLG9 DC    X'00'                                                     04570
PARMFLGA DC    X'00'                                                     04571
PARMFLLN EQU   *-PARMFLGS                                                04572
* --------------------------------------------------------- * SBG 05/00  04573
         DS    0F                                                        04574
STRTVALU DS    0CL(ENDVALUE)                                             04575
         DC    A(ENDVALUE)                                               04576
PARMSLEN DC    F'0'                LENGTH OF PARMS                       04577
*                                  Upon entry to PARMCHEK, contains      04578
*                                  the PARM address from COPYMODS,       04579
*                                  which gets overlaid.                  04580
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       04581
*                                  Upon entry to PARMCHEK, contains      04582
*                                  the PARM address from COPYMODS,       04583
*                                  which gets overlaid.                  04584
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               04585
*                                  Upon entry to PARMCHEK, contains      04586
*                                  the PARM length from COPYMODS,        04587
*                                  which gets overlaid.                  04588
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04589
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04590
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04591
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   04592
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04593
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04594
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04595
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04596
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04597
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 04598
         DC    CL7' '              FILLER                                04599
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            04600
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04601
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          04602
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  04603
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      04604
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         04605
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         04606
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         04607
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       04608
TAPEOWN  DC    CL10' '                                                   04609
TAPEOEXT DC    CL4' '                                                    04610
TAPEOASC DC    CL14' '                                                   04611
OVERFLAG DC    X'00'                                                     04612
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               04613
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    04614
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         04615
LIMCHAR  DC    CL10' '                                                   04616
LABCHAR  DC    CL10' '                                                   04617
PRTCHAR  DC    CL10' '                                                   04618
ENDVALUE EQU   (*-PARMSLEN)+4                                            04619
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04620
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE    04621
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     04622
* --------------------------------------------------------- *            04623
*              FORMAT OF PARM TABLE                                      04624
*              ONE ENTRY IS 20 BYTES                                     04625
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               04626
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 04627
*                               X'00' SAYS TURN FLAG ON                  04628
*                               X'10' SET ENTRY AS A DEFAULT             04629
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               04630
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                04631
*                                WHICH ALLOWS FOR 80 PARMS               04632
*                                THAT DON'T HAVE TO BE                   04633
*                                SEPARATED BY A COMMA.                   04634
PBYTES   EQU   10               NUMBER OF PARM SWITCH BYTES              04635
* --------------------------------------------------------- *            04636
EFFS     DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'               04637
* --------------------------------------------------------- *            04638
         SPACE 3                                                         04639
         LTORG                                                           04640
         SPACE 3                                                         04641
         DS    0D                                             SBG 09/00  04642
LBNEXLST DC    X'87',AL3(LBNJFCB)                                        04643
LBNJFCB  DC    44F'0'                                                    04644
         DS    0D                                             SBG 09/00  04645
LBLEXLST DC    X'87',AL3(LBLJFCB)                                        04646
LBLJFCB  DC    44F'0'                                                    04647
         DS    0D                                             SBG 05/00  04648
OUTEXLST DC    X'87',AL3(OUTJFCB)                                        04649
OUTJFCB  DC    44F'0'                                                    04650
         DS    0D                                             SBG 06/00  04651
INEXLST  DC    X'87',AL3(INJFCB)                              SBG 06/00  04652
INJFCB   DC    44F'0'                                         SBG 06/00  04653
         SPACE 3                                                         04654
VOLALL   DS    0CL96         16 X 6                                      04655
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04656
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04657
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04658
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04659
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04660
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04661
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04662
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04663
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04664
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04665
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04666
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04667
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04668
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04669
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04670
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04671
VOLALLLN EQU   *-VOLALL                                                  04672
* --------------------------------------------------------- * SBG 05/00  04673
         SPACE 3                                                         04674
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X 04675
               EXLST=INEXLST                                             04676
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X 04677
               EXLST=OUTEXLST                                            04678
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X 04679
               EXLST=OUTEXLST                                            04680
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X 04681
               EXLST=OUTEXLST                                            04682
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X 04683
               EXLST=OUTEXLST                                            04684
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X 04685
               EXLST=OUTEXLST                                            04686
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X 04687
               EXLST=OUTEXLST                                            04688
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X 04689
               EXLST=OUTEXLST                                            04690
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X 04691
               EXLST=OUTEXLST                                            04692
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X 04693
               EXLST=OUTEXLST                                            04694
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X 04695
               EXLST=OUTEXLST                                            04696
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X 04697
               EXLST=OUTEXLST                                            04698
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X 04699
               EXLST=OUTEXLST                                            04700
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X 04701
               EXLST=OUTEXLST                                            04702
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X 04703
               EXLST=OUTEXLST                                            04704
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X 04705
               EXLST=OUTEXLST                                            04706
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X 04707
               EXLST=OUTEXLST                                            04708
         ENTRY SYSPRINT                                                  04709
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04710
               BLKSIZE=133                                               04711
         ENTRY LABLDUMP                                                  04712
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X 04713
               EXLST=LBLEXLST                                            04714
         ENTRY LABADDIN                                                  04715
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X 04716
               EXLST=LBNEXLST,EODAD=LBLINEND                             04717
         DC    C' '              BLANK FOR CLEARING AREA      SBG 09/00  04718
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP   SBG 09/00  04719
SAVE2TO3 DC    2F'0'                                                     04720
SAVE3REG DC    F'0'                                                      04721
SAVE7BA1 DC    F'0'                                                      04722
SAVE7REG DC    F'0'                                                      04723
SAVE7BAL DC    F'0'                                                      04724
SAVE7RG1 DC    F'0'                                                      04725
SAVE7RG2 DC    F'0'                                                      04726
SAVE7RG3 DC    F'0'                                                      04727
SAVE7RG4 DC    F'0'                                                      04728
SAVE7RG5 DC    F'0'                                                      04729
R5HXPRT  DC    F'0'                                                      04730
R7HXPRT  DC    F'0'                                                      04731
SAVTRTCS DC    F'0'                                                      04732
ENTRYPT  DC    F'0'                                                      04733
LABCHENT DC    F'0'                                                      04734
PRTLBENT DC    F'0'                                                      04735
PARMSAVE DC    F'0'                                                      04736
PARMADDR DC    F'0'                                                      04737
USERSAVE DC    F'0'                                                      04738
SAVELBCK DC    F'0'                                                      04739
         DC    CL4' '                                                    04740
HDR1SAV  DC    CL80' '                                                   04741
HDR2SAV  DC    CL80' '                                                   04742
UHL1SAV  DC    CL80' '                                                   04743
UHL2SAV  DC    CL80' '                                                   04744
UHL3SAV  DC    CL80' '                                                   04745
UHL4SAV  DC    CL80' '                                                   04746
UHL5SAV  DC    CL80' '                                                   04747
UHL6SAV  DC    CL80' '                                                   04748
UHL7SAV  DC    CL80' '                                                   04749
UHL8SAV  DC    CL80' '                                                   04750
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          04751
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                      04752
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 04753
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  04754
TRTCSECT CSECT                                                           04755
* ------------------------------------------------------------------- *  04756
*   You have to make sure to keep the TRTDSECT that is in LABELCHK    *  04757
*   (and possibly other places) in synchronization with this CSECT.   *  04758
* ------------------------------------------------------------------- *  04759
TRTBL0   DS    0D                                                        04760
         DC    XL16'40404040404040404040404040404040'                    04761
         DC    XL16'40404040404040404040404040404040'                    04762
         DC    XL16'40404040404040404040404040404040'                    04763
         DC    XL16'40404040404040404040404040404040'                    04764
         DC    XL16'404040404040404040404A4B4C4D4E4F'                    04765
         DC    XL16'504040404040404040405A5B5C5D5E5F'                    04766
         DC    XL16'606140404040404040406A6B6C6D6E6F'                    04767
         DC    XL16'404040404040404040407A7B7C7D7E7F'                    04768
         DC    XL16'40818283848586878889404040404040'                    04769
         DC    XL16'40919293949596979899404040404040'                    04770
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    04771
         DC    XL16'40404040404040404040404040404040'                    04772
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    04773
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    04774
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    04775
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    04776
TRTBL1   DS    0D                                                        04777
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    04778
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    04779
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    04780
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    04781
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    04782
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    04783
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    04784
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    04785
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    04786
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    04787
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    04788
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    04789
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    04790
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    04791
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    04792
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    04793
TRTBL2   DS    0D                                                        04794
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04795
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04796
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04797
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04798
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04799
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04800
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04801
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04802
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04803
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04804
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04805
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04806
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04807
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04808
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04809
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04810
TRTE2A   DS    0D                                                        04811
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    04812
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    04813
         DC    XL16'202122232425262728292A2B2C2D2E2F'                    04814
         DC    XL16'303132333435363738393A3B3C3D3E3F'                    04815
         DC    XL16'20414243444546474849A22E3C282B7C'                    04816
         DC    XL16'2651525354555657585921242A293B5E'                    04817
         DC    XL16'2D2F6263646566676869A62C255F3E3F'                    04818
         DC    XL16'707172737475767778603A2340273D22'                    04819
         DC    XL16'806162636465666768698ABBF0FDFEB1'                    04820
         DC    XL16'906A6B6C6D6E6F7071729ABAE6B8C6A4'                    04821
         DC    XL16'B57E737475767778797AAABFD05BDEAE'                    04822
         DC    XL16'ACA3A5B7A9A7B6BCBDBEBAA8AF5DB4D7'                    04823
         DC    XL16'7B414243444546474849CACBCCCDCECF'                    04824
         DC    XL16'7D4A4B4C4D4E4F505152DADBDCDDDEDF'                    04825
         DC    XL16'5CF7535455565758595AEAEBECEDEEEF'                    04826
         DC    XL16'30313233343536373839FAFBFCFDFEFF'                    04827
TRTA2E   DS    0D                                                        04828
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    04829
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    04830
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    04831
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    04832
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    04833
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    04834
         DC    XL16'79818283848586878889919293949596'                    04835
         DC    XL16'979899A2A3A4A5A6A7A8A9C04FD0A17F'                    04836
         DC    XL16'808182838485868788898A8B8C8D8E8F'                    04837
         DC    XL16'909192939495969798999A9B9C9D9E9F'                    04838
         DC    XL16'A0A14AB19FB26AB5BBB4AAABB0ADAFBC'                    04839
         DC    XL16'B08FB2B3BEA0B6B39DB99BB8B7B8B9AB'                    04840
         DC    XL16'C0C1C2C3C4C59EC7C8C9CACBCCCDCECF'                    04841
         DC    XL16'ACD1D2D3D4D5D6BFD8D9DADBDCDDAEDF'                    04842
         DC    XL16'E0E1E2E3E4E59CE7E8E9EAEBECEDEEEF'                    04843
         DC    XL16'8CF1F2F3F4F5F6E1F8F9FAFBFC8D8EFF'                    04844
TRTASPRT DS    0D                                                        04845
         DC    XL16'40404040404040404040404040404040'                    04846
         DC    XL16'40404040404040404040404040404040'                    04847
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    04848
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    04849
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    04850
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    04851
         DC    XL16'40818283848586878889919293949596'                    04852
         DC    XL16'979899A2A3A4A5A6A7A8A94D4F5DA17F'                    04853
         DC    XL16'40404040404040404040404040404040'                    04854
         DC    XL16'40404040404040404040404040404040'                    04855
         DC    XL16'40404040404040404040404040404040'                    04856
         DC    XL16'40404040404040404040404040404040'                    04857
         DC    XL16'40404040404040404040404040404040'                    04858
         DC    XL16'40404040404040404040404040404040'                    04859
         DC    XL16'40404040404040404040404040404040'                    04860
         DC    XL16'40404040404040404040404040404040'                    04861
         EJECT                                                           04862
JFCBLK   DSECT                                                           04863
         IEFJFCBN LIST=YES                                               04864
COPYMODS CSECT                                                           04865
INAREA   DS    CL65535                                        SBG 03/00  04866
#PAN$AUD CSECT                                                           04867
$PAN#AUD DC    CL30'LEVEL 073 COPYMODS  11/10/03 '                       04868
         END                                                             04869
*          DATA SET COPYMOPT   AT LEVEL 073 AS OF 11/10/03               04870
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                 04871
**************************************************************           04872
**************************************************************           04873
**                                                          **           04874
**                                                          **           04875
**  MODULE: COPYMOPT                                        **           04876
**                                                          **           04877
**                                                          **           04878
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **           04879
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **           04880
**            PROGRAM.                                      **           04881
**                                                          **           04882
**                                                          **           04883
**************************************************************           04884
**************************************************************           04885
         EJECT                                                           04886
         YREGS                                                           04887
COPYMOPT CSECT                                                           04888
         USING *,R15                                          SBG 03/00  04889
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.     04890
         B     EYECATCH                                       SBG 03/00  04891
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  04892
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '   04893
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  04894
SAVEAREA DC    18F'0'                                                    04895
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  04896
         SAVE  (14,12)                                                   04897
         LR    R5,R1          SAVE PASSED QUANTITY                       04898
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   04899
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          04900
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         04901
         LR    R13,R1               NEW SAVE AREA ADDRESS                04902
         DROP  R15                                                       04903
* -----                       SET UP TWO BASE REGISTERS                  04904
         USING COPYMOPT,R12,R11                                          04905
         LR    R12,R15                                                   04906
         LA    R11,4095(,R12)                                            04907
         LA    R11,1(,R11)                                               04908
         LR    R1,R5          RESTORE PARM POINTER                       04909
OPTMOVE  DS    0H                                                        04910
         MVC   PARMTBIN(10),0(R1)     MOVE PARMS INTO THIS PGM           04911
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM       04912
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM       04913
         OPEN  (SYSPRINT,OUTPUT)                                         04914
         MVC   LINE(133),LINE-1       CLEAR LINE                         04915
         MVC   LINE(133),DISPLINH                                        04916
         PUT   SYSPRINT,LINE                                             04917
         MVC   LINE(133),LINE-1       CLEAR LINE                         04918
         MVC   LINE(133),DISPLINO                                        04919
         PUT   SYSPRINT,LINE                                             04920
         MVC   LINE(133),LINE-1       CLEAR LINE                         04921
         PUT   SYSPRINT,LINE                                             04922
         BAL   R7,FILLOPTS                                               04923
         MVC   LINE(133),LINE-1       CLEAR LINE                         04924
         MVC   LINE(133),DISPOP02                                        04925
         PUT   SYSPRINT,LINE                                             04926
         MVC   LINE(133),LINE-1       CLEAR LINE                         04927
         MVC   LINE(133),DISPOP01                                        04928
         PUT   SYSPRINT,LINE                                             04929
         MVC   LINE(133),LINE-1       CLEAR LINE                         04930
         MVC   LINE(133),DISPOP03                                        04931
         PUT   SYSPRINT,LINE                                             04932
         MVC   LINE(133),LINE-1       CLEAR LINE                         04933
         MVC   LINE(133),DISPHEXM                                        04934
         PUT   SYSPRINT,LINE                                             04935
         MVC   LINE(133),LINE-1       CLEAR LINE                         04936
         PUT   SYSPRINT,LINE                                             04937
         CLOSE (SYSPRINT)                                                04938
* ----------------------------------------------------------------- *    04939
THEEND   EQU   *                                                         04940
THEEND1  DS    0H                                                        04941
         L     R13,4(,R13)                                               04942
         RETURN (14,12),RC=0                                             04943
         EJECT                                                           04944
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *    04945
* ----------------------------------------------------------------- *    04946
*    BAL REGISTER IS R7.                                            *    04947
* ------------------------------------------------------------------*    04948
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT            04949
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE        04950
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE        04951
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION     04952
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                  04953
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                        04954
         BE    FILOPEND                                                  04955
         MVC   PARMWORK(10),0(R3)     MOVE BYTES TO BE TESTED            04956
         NC    PARMWORK(10),PARMTBIN  CHECK IF BYTE IS ON                04957
         BZ    FILLZER                                                   04958
         MVC   0(10,R2),10(R3)        MOVE OPTION TO DISPLAY - BIT ON    04959
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04960
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04961
         BCT   R4,FILLOOP             LOOP BACK                          04962
         B     FILNEXTB                                                  04963
FILLZER  DS    0H                                                        04964
         MVC   0(10,R2),20(R3)        MOVE OPTION TO DISPLAY - BIT OFF   04965
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04966
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04967
         BCT   R4,FILLOOP             LOOP BACK                          04968
FILNEXTB DS    0H                                                        04969
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                  04970
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE      04971
         PUT   SYSPRINT,LINE                                             04972
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE    04973
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE     04974
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP     04975
FILOPEND BR    R7                                                        04976
* ----------------------------------------------------------------- *    04977
* ----------  CONSTANTS  ------------------------------------------ *    04978
         LTORG                                                           04979
         DS    0F                                                        04980
PARMTBIN DC    X'00000000000000000000'                                   04981
PARMWORK DC    X'00000000000000000000'                                   04982
PARMZERO DC    X'00000000000000000000'                                   04983
OPTABLE  DS    0D                                                        04984
         DC    X'20000000000000000000',C'LTMSKIP   ',C'LTMCOPY   '       04985
OPTENTLN EQU   *-OPTABLE                                                 04986
         DC    X'01000000000000000000',C'BLKCNT    ',C'NOBLKCNT  '       04987
         DC    X'02000000000000000000',C'HDR1      ',C'NOHDR1    '       04988
         DC    X'04000000000000000000',C'HDR2      ',C'NOHDR2    '       04989
         DC    X'08000000000000000000',C'EOF1      ',C'NOEOF1    '       04990
         DC    X'10000000000000000000',C'EOF2      ',C'NOEOF2    '       04991
         DC    X'40000000000000000000',C'EOV1      ',C'NOEOV1    '       04992
         DC    X'80000000000000000000',C'EOV2      ',C'NOEOV2    '       04993
         DC    X'00100000000000000000',C'LABLDUMP  ',C'NOLABLDU  '       04994
         DC    X'00200000000000000000',C'SYSIN     ',C'NOSYSIN   '       04995
         DC    X'00400000000000000000',C'OUTVOL ***',C'NOOUTVOL  '       04996
         DC    X'00800000000000000000',C'LABADDIN  ',C'NOLABADD  '       04997
         DC    X'00010000000000000000',C'CHGVOL    ',C'NOCHGVOL  '       04998
         DC    X'00020000000000000000',C'VOLLBL    ',C'NOVOLLBL  '       04999
         DC    X'00040000000000000000',C'EOVCHG    ',C'NOEOVCHG  '       05000
         DC    X'00080000000000000000',C'READONLY  ',C'WRITE     '       05001
         DC    X'00001000000000000000',C'PRADDLBL  ',C'NOPRADDL  '       05002
         DC    X'00002000000000000000',C'CORRBLKS  ',C'NOCORRBL  '       05003
         DC    X'00004000000000000000',C'NOEXNULL  ',C'EXNULL    '       05004
         DC    X'00008000000000000000',C'LBLFIX    ',C'NOLBLFIX  '       05005
         DC    X'00000100000000000000',C'INITVOLS  ',C'          '       05006
         DC    X'00000200000000000000',C'LIMFILE **',C'NOLIMFIL  '       05007
         DC    X'00000400000000000000',C'BYTES     ',C'NOBYTES   '       05008
         DC    X'00000800000000000000',C'CUMTOT    ',C'NOCUMTOT  '       05009
         DC    X'00000010000000000000',C'LIMLABEL *',C'NOLIMLAB  '       05010
         DC    X'00000020000000000000',C'OPTION    ',C'NOOPTION  '       05011
         DC    X'00000040000000000000',C'SUPPWTO   ',C'NOSUPPWT  '       05012
         DC    X'00000080000000000000',C'LBDQUICK  ',C'NOLBDQUI  '       05013
         DC    X'00000001000000000000',C'CUMSEP    ',C'NOCUMSEP  '       05014
         DC    X'00000002000000000000',C'STRIP     ',C'NOSTRIP   '       05015
         DC    X'00000004000000000000',C'NLLIM     ',C'NONLLIM   '       05016
         DC    X'00000008000000000000',C'SLLIM     ',C'NOSLLIM   '       05017
         DC    X'00000000100000000000',C'IDRCOFF   ',C'NOIDRCOF  '       05018
HXPRT    DC    X'00000000200000000000',C'HEXPRT    ',C'NOHEXPRT  '       05019
         DC    X'00000000400000000000',C'UNEXWTO   ',C'NOUNEXWT  '       05020
         DC    X'00000000800000000000',C'ASCII     ',C'EBCDIC    '       05021
         DC    X'00000000010000000000',C'INASC3    ',C'NOINASC3  '       05022
         DC    X'00000000020000000000',C'INASC4    ',C'NOINASC4  '       05023
         DC    X'00000000040000000000',C'          ',C'          '       05024
         DC    X'00000000080000000000',C'          ',C'          '       05025
         DC    X'00000000001000000000',C'          ',C'          '       05026
         DC    X'00000000002000000000',C'          ',C'          '       05027
         DC    X'00000000004000000000',C'          ',C'          '       05028
         DC    X'00000000008000000000',C'          ',C'          '       05029
         DC    X'00000000000100000000',C'          ',C'          '       05030
         DC    X'00000000000200000000',C'          ',C'          '       05031
         DC    X'00000000000400000000',C'          ',C'          '       05032
         DC    X'00000000000800000000',C'          ',C'          '       05033
         DC    X'00000000000010000000',C'          ',C'          '       05034
         DC    X'00000000000020000000',C'          ',C'          '       05035
         DC    X'00000000000040000000',C'          ',C'          '       05036
         DC    X'00000000000080000000',C'          ',C'          '       05037
         DC    X'00000000000001000000',C'          ',C'          '       05038
         DC    X'00000000000002000000',C'          ',C'          '       05039
         DC    X'00000000000004000000',C'          ',C'          '       05040
         DC    X'00000000000008000000',C'          ',C'          '       05041
         DC    X'00000000000000100000',C'          ',C'          '       05042
         DC    X'00000000000000200000',C'          ',C'          '       05043
         DC    X'00000000000000400000',C'          ',C'          '       05044
         DC    X'00000000000000800000',C'          ',C'          '       05045
         DC    X'00000000000000010000',C'          ',C'          '       05046
         DC    X'00000000000000020000',C'          ',C'          '       05047
         DC    X'00000000000000040000',C'          ',C'          '       05048
         DC    X'00000000000000080000',C'          ',C'          '       05049
         DC    X'00000000000000001000',C'          ',C'          '       05050
         DC    X'00000000000000002000',C'          ',C'          '       05051
         DC    X'00000000000000004000',C'          ',C'          '       05052
         DC    X'00000000000000008000',C'          ',C'          '       05053
         DC    X'00000000000000000100',C'          ',C'          '       05054
         DC    X'00000000000000000200',C'          ',C'          '       05055
         DC    X'00000000000000000400',C'          ',C'          '       05056
         DC    X'00000000000000000800',C'          ',C'          '       05057
         DC    X'00000000000000000010',C'          ',C'          '       05058
         DC    X'00000000000000000020',C'          ',C'          '       05059
         DC    X'00000000000000000040',C'          ',C'          '       05060
         DC    X'00000000000000000080',C'          ',C'          '       05061
         DC    X'00000000000000000001',C'          ',C'          '       05062
         DC    X'00000000000000000002',C'          ',C'          '       05063
         DC    X'00000000000000000004',C'          ',C'          '       05064
         DC    X'00000000000000000008',C'          ',C'          '       05065
         DC    X'FFFFFFFFFFFFFFFFFFFF'                                   05066
*  -----                                                                 05067
DISPAREA DS    0D                                                        05068
DISPLINH DS    0CL133                                                    05069
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - '  05070
         DC    C'LEVEL 073 - OPTIONS DISPLAY                          '  05071
         DC    27C' '                                                    05072
DISPLINO DS    0CL133                                                    05073
         DC    C'-    OPTIONS IN EFFECT:                              '  05074
         DC    C'                                                     '  05075
         DC    27C' '                                                    05076
DISPOP01 DS    0CL133                                                    05077
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE'  05078
         DC    C'LIMIT=   SYSIN CARD                                  '  05079
         DC    27C' '                                                    05080
DISPOP02 DS    0CL133                                                    05081
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE'  05082
         DC    C'LIMIT=   SYSIN CARD                                  '  05083
         DC    27C' '                                                    05084
DISPOP03 DS    0CL133                                                    05085
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE'  05086
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 '  05087
         DC    27C' '                                                    05088
DISPHEXM DC    C'0NOTE - The HEXPRT option displays only original reco'  05089
         DC    C'rds before they have been changed by the COPYMODS pro'  05090
         DC    C'gram.                     '                             05091
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05092
               BLKSIZE=133                                               05093
         DC    C' '                                                      05094
LINE     DS    CL133                                                     05095
DISPLIN1 DS    0CL133                                                    05096
         DC    C'0    '                                                  05097
DISPL1A  DC    8CL12' '                                                  05098
         DC    32C' '                                                    05099
DISPLIN2 DS    0CL133                                                    05100
         DC    C'     '                                                  05101
DISPL2A  DC    8CL12' '                                                  05102
         DC    32C' '                                                    05103
DISPLIN3 DS    0CL133                                                    05104
         DC    C'     '                                                  05105
DISPL3A  DC    8CL12' '                                                  05106
         DC    32C' '                                                    05107
DISPLIN4 DS    0CL133                                                    05108
         DC    C'     '                                                  05109
DISPL4A  DC    8CL12' '                                                  05110
         DC    32C' '                                                    05111
DISPLIN5 DS    0CL133                                                    05112
         DC    C'     '                                                  05113
DISPL5A  DC    8CL12' '                                                  05114
         DC    32C' '                                                    05115
DISPLIN6 DS    0CL133                                                    05116
         DC    C'     '                                                  05117
DISPL6A  DC    8CL12' '                                                  05118
         DC    32C' '                                                    05119
DISPLIN7 DS    0CL133                                                    05120
         DC    C'     '                                                  05121
DISPL7A  DC    8CL12' '                                                  05122
         DC    32C' '                                                    05123
DISPLIN8 DS    0CL133                                                    05124
         DC    C'     '                                                  05125
DISPL8A  DC    8CL12' '                                                  05126
         DC    32C' '                                                    05127
DISPLIN9 DS    0CL133                                                    05128
         DC    C'     '                                                  05129
DISPL9A  DC    8CL12' '                                                  05130
         DC    32C' '                                                    05131
DISPLINA DS    0CL133                                                    05132
         DC    C'     '                                                  05133
DISPLAA  DC    8CL12' '                                                  05134
         DC    32C' '                                                    05135
         SPACE 3                                                         05136
         EJECT                                                           05137
@PAN$AUD CSECT                                                           05138
$PAN#AUD DC    CL30'LEVEL 073 COPYMOPT  11/10/03 '                       05139
         END                                                             05140
*          PARM CHECKER        AT LEVEL 1.6 AS OF 11/10/03               05141
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                       05142
**************************************************************           05143
**************************************************************           05144
**                                                          **           05145
**                                                          **           05146
**  MODULE:   PARMCHEK - Set option bits, based on          **           05147
**                       keywords coded in PARM and/or      **           05148
**                       SYSIN.                             **           05149
**                                                          **           05150
**  AUTHOR:   Sam Golob                                     **           05151
**                                                          **           05152
**  PURPOSE:  This program converts keywords in a PARM      **           05153
**            field or in SYSIN, into bit settings that     **           05154
**            a program can use, to control options in      **           05155
**            its execution.                                **           05156
**                                                          **           05157
**            This program can be run as a subroutine       **           05158
**            which is called, to set up to 10 bytes of     **           05159
**            bits, up to 80 bits in all, based on the      **           05160
**            settings of keywords in a table.              **           05161
**                                                          **           05162
**            This routine makes it easy to put a lot of    **           05163
**            options into a program.  If you want to       **           05164
**            add options, or use other words in PARM or    **           05165
**            SYSIN to call the same options, all you       **           05166
**            have to do, is to change or add entries in    **           05167
**            a table.  There is no extra coding to be      **           05168
**            done.                                         **           05169
**                                                          **           05170
**            Keywords in the PARM or SYSIN areas do not    **           05171
**            have to be delimited by commas or spaces or   **           05172
**            anything else.  Although for clarity, I'd     **           05173
**            certainly recommend that you put commas or    **           05174
**            spaces between the PARM field keywords.       **           05175
**            Therefore, I'd also advise that when you      **           05176
**            design keywords to put into the table to      **           05177
**            designate options, that you make them         **           05178
**            significantly different from each other.      **           05179
**            There is a length field in the table,         **           05180
**            however, which gives you some more control    **           05181
**            in this area.                                 **           05182
**                                                          **           05183
**            From a calling program, it would be possible  **           05184
**            to call PARMCHEK twice, against two different **           05185
**            tables, to set 20 bytes of options, instead   **           05186
**            of 10 bytes of options, and so forth...       **           05187
**                                                          **           05188
**            This gives you the opportunity of having      **           05189
**            a tremendous number of options, set by        **           05190
**            keywords, in your program, without using      **           05191
**            up valuable "base register space" for such    **           05192
**            coding.                                       **           05193
**                                                          **           05194
**                                                          **           05195
**  METHOD:   Bits, in the 10 bytes of PARMFLGS, are set,   **           05196
**            from a table, based on assembled defaults.    **           05197
**            These default settings are then overridden    **           05198
**            from a scan of words in the PARM field of     **           05199
**            the EXEC card.                                **           05200
**                                                          **           05201
**            If a SYSIN DD card is present, its cards      **           05202
**            are scanned against the table entries, to     **           05203
**            further override the bit settings which       **           05204
**            have already been done by the defaults and    **           05205
**            the PARM field.                               **           05206
**                                                          **           05207
**            The main purpose of this routine is to set    **           05208
**            bits from words.  However, if you need some   **           05209
**            keywords with values, such as (for example)   **           05210
**            FILELIMIT=69  in your program, you may use    **           05211
**            the "user code" section of this program       **           05212
**            to code that stuff in, so that these special  **           05213
**            keywords can be coded in SYSIN.               **           05214
**                                                          **           05215
**            Two sample keywords expecting number values:  **           05216
**            FILELIMIT=nnn  or                             **           05217
**            LABELIMIT=mmm                                 **           05218
**            have been coded here, just to illustrate      **           05219
**            how the user coding might work.               **           05220
**                                                          **           05221
**            Search order is:  Defaults, then PARM in      **           05222
**            the EXEC card, then SYSIN.                    **           05223
**                                                          **           05224
**            As coded here, the FILELIMIT= and             **           05225
**            LABELIMIT= keywords in SYSIN have to be in    **           05226
**            column 1 of the SYSIN cards, and if these     **           05227
**            "special keywords" are present in a card,     **           05228
**            the rest of that card is not scanned for      **           05229
**            the table keywords.                           **           05230
**                                                          **           05231
**            As coded here, the PARMTABL is a separate     **           05232
**            CSECT, addressable by V-CONs from the         **           05233
**            PARMCHEK CSECT.                               **           05234
**                                                          **           05235
**            It would probably be best to invoke the       **           05236
**            PARMCHEK program as a separate CSECT which    **           05237
**            is linkedited with the calling program,       **           05238
**            but it may be LOADed and BALR 14,15 'ed to,   **           05239
**            and run as a separate program.  (See the      **           05240
**            PARMDRVR program that is included in this     **           05241
**            package, as a sample.)                        **           05242
**                                                          **           05243
**    Input:  A fullword containing the address of the      **           05244
**            saved Register 1 from the calling program,    **           05245
**            which points to its parms.                    **           05246
**                                                          **           05247
**            A table containing parms, which is coded      **           05248
**            according to the following rules, and which   **           05249
**            has entries of 20 bytes apiece.               **           05250
**                                                          **           05251
**      FORMAT OF THE PARM TABLE                            **           05252
**                                                          **           05253
**        ONE ENTRY IS 20 BYTES                             **           05254
**                                                          **           05255
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **           05256
**                         (This is the word which          **           05257
**                          controls the bit settings.)     **           05258
**                         (up to and including 8 bytes)    **           05259
**                                                          **           05260
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **           05261
**                         X'00' says turn bit flag(s) ON   **           05262
**                         X'10' set entry as a DEFAULT     **           05263
**                                                          **           05264
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **           05265
**                         (This is the word searched on,   **           05266
**                          in the EXEC PARM and SYSIN      **           05267
**                          areas.)                         **           05268
**                                                          **           05269
**          NEXT 10 BYTES: FLAG BIT settings controlled by  **           05270
**                          this keyword.                   **           05271
**                                                          **           05272
**                         These are the bits which the     **           05273
**                          keyword will flip on (or off).  **           05274
**                                                          **           05275
**                         You may control multiple bits    **           05276
**                          using one keyword.  All bits    **           05277
**                          controlled by this keyword      **           05278
**                          are coded in this entry field.  **           05279
**                                                          **           05280
**          The table is ended by an entry of X'FF's.       **           05281
**                                                          **           05282
**                                                          **           05283
**    Output:  R1 points to a 10-byte area containing the   **           05284
**             80 switch settings.                          **           05285
**                                                          **           05286
**             Sample code to use PARMCHEK output:          **           05287
**                                                          **           05288
**                      ST    R1,PARMADDR                   **           05289
**                      USING PARMFLGS,R1                   **           05290
**             *                                            **           05291
**             PARMFLGS DSECT                               **           05292
**             PARMFLG1 DS    X                             **           05293
**             PARMFLG2 DS    X                             **           05294
**             PARMFLG3 DS    X                             **           05295
**             PARMFLG4 DS    X                             **           05296
**             PARMFLG5 DS    X                             **           05297
**             PARMFLG6 DS    X                             **           05298
**             PARMFLG7 DS    X                             **           05299
**             PARMFLG8 DS    X                             **           05300
**             PARMFLG9 DS    X                             **           05301
**             PARMFLGA DS    X                             **           05302
**                                                          **           05303
**               then ....                                  **           05304
**                                                          **           05305
**                      TM    PARMFLG2,X'04'                **           05306
**                      BZ    some location                 **           05307
**                        ....                              **           05308
**                                                          **           05309
**             R2 points to the address of a data area      **           05310
**             containing values generated by this          **           05311
**             program.  It's address is at label STRTVALU  **           05312
**             and its length is in the first fullword      **           05313
**             at STRTVALU.                                 **           05314
**                                                          **           05315
**             R2 is accessed in a similar manner to R1.    **           05316
**             See the PARMDRVR program for an example      **           05317
**             illustrating one way in which PARMCHEK       **           05318
**             may be called.                               **           05319
**                                                          **           05320
**                                                          **           05321
**************************************************************           05322
         EJECT                                                           05323
**************************************************************           05324
**                                                          **           05325
**  CHANGE LOG:                                             **           05326
**                                                          **           05327
**    Version 1.1 - Separate Parm Table into different      **           05328
**       CSECT.  Detailed reporting in PARMREPT ddname.     **           05329
**                                                          **           05330
**    Version 1.2 - Uppercase keyword before comparing      **           05331
**       against the table entries.  This assumes you       **           05332
**       will code your table with all uppercase keyword    **           05333
**       entries.                                           **           05334
**                                                          **           05335
**    Version 1.3 - Option for requiring commas or spaces   **           05336
**       as delimiters between parms.  Comment out one      **           05337
**       instruction to require delimiters.                 **           05338
**                                                          **           05339
**    Version 1.4 - Fitted to COPYMODS Level 061.           **           05340
**                                                          **           05341
**    Version 1.5 - Fitted to COPYMODS Level 073.           **           05342
**                  Ten parm bits instead of five.          **           05343
**                                                          **           05344
**    Version 1.6 - Allow lowercase in SYSIN keywords.      **           05345
**                                                          **           05346
**                                                          **           05347
**************************************************************           05348
**************************************************************           05349
         EJECT                                                           05350
**************************************************************           05351
*  ---------------------------------------------------------------  *    05352
*    This macro is used to display hex values in a printed report.       05353
*  ---------------------------------------------------------------  *    05354
         MACRO                                                           05355
&NAME    HEX   &TO,&LEN,&FROM                                            05356
&NAME    DS    0H                                                        05357
         ST    R4,SAV4HEX                                                05358
         STM   R15,R1,HEXSAVE                                            05359
         LA    R1,&FROM                                                  05360
         LA    R0,&LEN                                                   05361
         LA    R15,&TO                                                   05362
         BAL   R4,HEX                                                    05363
         L     R4,SAV4HEX                                                05364
         LM    R15,R1,HEXSAVE                                            05365
         MEND                                                            05366
         SPACE                                                           05367
**************************************************************           05368
         GBLC  &LLEV                                                     05369
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                05370
         GBLA  &HEXDFLA                                                  05371
&LLEV    SETC  '1.6 '                                                    05372
         YREGS                                                           05373
* ------------------------------------------------------------------ *   05374
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   05375
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   05376
* ------------------------------------------------------------------ *   05377
         ENTRY CARDREAD                                                  05378
         ENTRY PARMCHEK                                                  05379
&HEXDFLA SETA  4                                                         05380
&HEXDFLC SETC  '&HEXDFLA'                                                05381
PARMCHEK CSECT                                                           05382
         USING *,R15                                                     05383
         B     EYECATCH                                                  05384
         DC    C'HEX DUMP '                                              05385
HEXDFLCC DC    C'&HEXDFLC'                                               05386
         DC    C' RECORDS '                                              05387
HEXDFLL  EQU   L'HEXDFLCC                                                05388
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 05389
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05390
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '                05391
         DC    C' - '                                                    05392
         DC    C'PARM INPUT IN SYSIN '                                   05393
         DC    C' - '                                                    05394
         DC    C'LEVEL '                                                 05395
SYSLEV   DC    C'&LLEV'                                                  05396
         DC    C' - '                                                    05397
SYSDAT   DC    C'&SYSDATE'                                               05398
         DC    C'  ',C'&SYSTIME ',C'--- '                                05399
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05400
SAVEAREA DC    18F'0'                                                    05401
EYECATCH DS    0D             ENSURE ALIGNMENT                           05402
         SAVE  (14,12)                                                   05403
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   05404
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          05405
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         05406
         LR    R13,R1               NEW SAVE AREA ADDRESS                05407
         DROP  R15                                                       05408
* -----                       SET UP BASE REGISTERS                      05409
         USING PARMCHEK,R12,R11,R10                                      05410
         LR    R12,R15                                                   05411
         LA    R11,4095(,R12)                                            05412
         LA    R11,1(,R11)                                               05413
         LA    R10,4095(,R11)                                            05414
         LA    R10,1(,R10)                                               05415
*                                                                        05416
* ----->   GET PARMS THAT COPYMODS WAS CALLED WITH.                      05417
*                                                                        05418
         LR    R6,R2          SAVE USER AREA POINTER                     05419
         L     R6,PARMSTRT-STRTVALU(,R6)   SAVED ORIGINAL PARMS          05420
         LR    R1,R6          RESTORE PARM POINTER                       05421
         ST    R1,PARMSAVE                                               05422
* ----------------------------------------------------------------- *    05423
TIOTSCAN DS    0H             Determine the presence of Optional         05424
*                             DDNAMES:  SYSIN AND PARMREPT.              05425
* ----->                      OPEN them if there is JCL for them.        05426
* ----------------------------------------------------------------- *    05427
         L     R5,16          R5=CVT                                     05428
         L     R5,0(,R5)      R5=TCB WORDS                               05429
         L     R5,4(,R5)      R5=MY TCB                                  05430
         L     R5,12(,R5)     R5=TIOT                                    05431
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          05432
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             05433
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        05434
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?               05435
         BNE   TIOTSYSN       NO                                         05436
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD         05437
         B     TIOTNEXT       CONTINUE                                   05438
TIOTSYSN CLC   4(8,R5),SYSIN+40                                          05439
         BNE   TIOTNEXT                                                  05440
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         05441
         B     TIOTNEXT                                                  05442
TIOTNEXT SR    R3,R3                                                     05443
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      05444
         AR    R5,R3          R5=NEXT DD ENTRY                           05445
         B     TIOTLOOP       GO CHECK IT                                05446
TIOTSEND DS    0H                                                        05447
***********************************************************************  05448
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  05449
***********************************************************************  05450
         STM   R14,R2,SAVE1402                                           05451
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             05452
         OI    DATE+4,X'0F'                                              05453
         UNPK  DATED,DATE                                                05454
         OI    TIME+3,X'0F'                                              05455
         UNPK  TIMED,TIME                                                05456
*                          FILL HEADDATE AREA WITH INFO TO REUSE         05457
         MVC   HEADDATE(2),DATED                                         05458
         MVI   HEADDATE+2,C'/'                                           05459
         MVC   HEADDATE+3(2),DATED+2                                     05460
         MVI   HEADDATE+5,C'/'                                           05461
         MVC   HEADDATE+6(4),DATED+4                                     05462
         MVC   HEADDATE+12(2),TIMED                                      05463
         MVI   HEADDATE+14,C':'                                          05464
         MVC   HEADDATE+15(2),TIMED+2                                    05465
         MVI   HEADDATE+17,C':'                                          05466
         MVC   HEADDATE+18(2),TIMED+4                                    05467
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         05468
         LM    R14,R2,SAVE1402                                           05469
***********************************************************************  05470
         MVC   LEVDATE(8),SYSDAT                                         05471
***********************************************************************  05472
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND             05473
* ----------------------------------------------------------------- *    05474
INITCONS DS    0H                                                        05475
         ZAP   TOTMLCNT,=P'0'                                            05476
* ----------------------------------------------------------------- *    05477
CHEKPRNT DS    0H                                                        05478
         TM    FLAGSYST,X'01'                                            05479
         BZ    CHEKPREN                                                  05480
         OPEN  (PARMREPT,OUTPUT)                                         05481
         OI    OPENDFLG,X'01'                                            05482
         MVC   PRTLINE,PRTLINE-1                                         05483
         MVC   PRTLINE,MESSAGE1                                          05484
         PUT   PARMREPT,MESSAGE1                                         05485
         MVC   PRTLINE,PRTLINE-1                                         05486
         PUT   PARMREPT,PRTLINE                                          05487
CHEKPREN DS    0H                                                        05488
* ----------------------------------------------------------------- *    05489
* --------------------------------------------------------- *            05490
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                     05491
*                         PRESENCE OR ABSENCE.                           05492
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                  05493
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                         05494
         L     R1,0(,R1)      Get PARM field                             05495
         LH    R5,0(,R1)      SAVE PARM LENGTH                           05496
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                       05497
         MVC   SAVMSLEN,PARMSLEN                                         05498
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05499
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS                05500
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE               05501
         LA    R1,0           USE R1 TO MEASURE LENGTH READ              05502
* -----------------------------------------------------------            05503
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE               05504
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                               05505
* -----------------------------------------------------------            05506
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE               05507
         CLI   0(R2),X'FF'    END OF PARM TABLE?                         05508
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.            05509
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                   05510
         BO    PARMDSET       YES, GO SET IT.                            05511
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05512
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                 05513
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                  05514
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..                05515
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.        05516
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05517
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                  05518
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK            05519
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES              05520
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF        05521
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05522
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE             05523
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER               05524
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05525
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE               05526
* ----------------------------------------------------------------- *    05527
SCANPARM DS    0H                                                        05528
         ST    R7,SAVE7BA0                                               05529
         ZAP   PARMLCNT,=P'0'                                            05530
         ZAP   PARMHITS,=P'0'                                            05531
         MVC   PARMSLEN,SAVMSLEN                                         05532
         BAL   R7,PARMLOOP      Now check the PARM field                 05533
         MVC   SAVPHITS,PARMHITS                                         05534
         MVC   SAVCHRCT,PRMCHRCT                                         05535
         MVC   SAVELCNT,PARMLCNT                                         05536
         AP    TOTMHITS,PARMHITS                                         05537
         AP    TOTMLCNT,PARMLCNT                                         05538
         L     R7,SAVE7BA0                                               05539
* ----------------------------------------------------------------- *    05540
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                   05541
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING             05542
         OPEN  (SYSIN,INPUT)                                             05543
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                   05544
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE               05545
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN                05546
         B     OPNSYSNE           AND CONTINUE PROCESSING.               05547
NOSYSIN  DS    0H                                                        05548
         B     CARDREND                                                  05549
OPNSYSNE DS    0H                                                        05550
* ----------------------------------------------------------------- *    05551
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT               05552
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.         05553
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                        05554
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.       05555
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS        05556
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05557
*              Insert User Code Here for Keywords                        05558
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05559
         GET   SYSIN,CARDIN                                              05560
*                                                                        05561
* -- >>              <-- Intercept any keywords you want in SYSIN -->    05562
* -- >>              <--    before you start the table scan       -->    05563
*                                                                        05564
* ----------------------------------------------------------------- *    05565
         MVI   CARDWORK,X'40'           CLEAR CARD WORKAREA TO BLANKS    05566
         MVC   CARDWORK+1(79),CARDWORK                                   05567
         MVC   CARDWORK(80),CARDIN      MOVE CARD IMAGE TO WORKAREA      05568
         OC    CARDWORK(80),CARDBLNK    UPPERCASE                        05569
* ----------------------------------------------------------------- *    05570
*      CARDWORK now contains an uppercased version of CARDIN.            05571
* ----------------------------------------------------------------- *    05572
         CLC   =C'OUTVOLALL=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05573
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD           05574
         CLC   =C'TAPEOWNER=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05575
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD           05576
         CLC   =C'FILELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05577
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD           05578
         CLC   =C'LABELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05579
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD           05580
         CLC   =C'PRINTRCDS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05581
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD           05582
         CLC   =C'/*',CARDIN                                             05583
         BE    SYSINEND                                                  05584
*                                                                        05585
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05586
* ----         Resume Checking SYSIN in PARM Table                       05587
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05588
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL        05589
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                         05590
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD    05591
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH             05592
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE        05593
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                  05594
         L     R1,TOTCHRCT                                               05595
         A     R1,PRMCHRCT                                               05596
         ST    R1,TOTCHRCT                                               05597
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN          05598
         ZAP   PARMHITS,=P'0'                                            05599
         ZAP   PARMLCNT,=P'0'                                            05600
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                 05601
         AP    TOTMHITS,PARMHITS                                         05602
         AP    TOTMLCNT,PARMLCNT                                         05603
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                      05604
         B     CARDREAD        GET ANOTHER CARD                          05605
* ----                                                                   05606
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05607
*              Handle User Code Here for Keywords                        05608
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05609
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?        05610
         BE    CARDREAD                 YES. IGNORE CARD                 05611
         MVC   VOLSTG1(6),CARDIN+10                                      05612
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05613
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER   05614
         B     CARDREAD          GET ANOTHER CARD                        05615
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?        05616
         BE    CARDREAD                 YES. IGNORE CARD                 05617
         MVC   TAPEOWN(14),CARDIN+10                                     05618
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05619
         B     CARDREAD                                                  05620
FILELGET DS    0H                                                        05621
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05622
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05623
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05624
         BL    CARDREAD          YES. IGNORE.                            05625
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05626
         BH    CARDREAD          YES. IGNORE.                            05627
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON                05628
         LA    R15,CARDIN+10     STARTING ADDRESS                        05629
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05630
FILELNUM DS    0H                                                        05631
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05632
         C     R15,=A(CARDIN+71) END OF CARD?                            05633
         BH    FILELGNM          YES, GET NUMBER                         05634
         CLI   0(R15),C' '       BLANK HERE?                             05635
         BE    FILELGNM          YES, GET NUMBER                         05636
         B     FILELNUM          NO. STEP UP ONE PLACE                   05637
FILELGNM DS    0H                                                        05638
         SR    R15,R1            HOW BIG IS THE NUMBER                   05639
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05640
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            05641
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA         05642
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA       05643
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05644
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE           05645
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES               05646
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05647
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE           05648
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS       05649
FILELCLG DS    0H                                                        05650
         B     CARDREAD                                                  05651
LABELGET DS    0H                                                        05652
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05653
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05654
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05655
         BL    CARDREAD          YES. IGNORE.                            05656
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05657
         BH    CARDREAD          YES. IGNORE.                            05658
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON               05659
         LA    R15,CARDIN+10     STARTING ADDRESS                        05660
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05661
LABELNUM DS    0H                                                        05662
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05663
         C     R15,=A(CARDIN+71) END OF CARD?                            05664
         BH    LABELGNM          YES, GET NUMBER                         05665
         CLI   0(R15),C' '       BLANK HERE?                             05666
         BE    LABELGNM          YES, GET NUMBER                         05667
         B     LABELNUM          NO. STEP UP ONE PLACE                   05668
LABELGNM DS    0H                                                        05669
         SR    R15,R1            HOW BIG IS THE NUMBER                   05670
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05671
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA            05672
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA         05673
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA            05674
         CVB   R0,WORKL          CONVERT IT TO BINARY                    05675
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE           05676
LABELCLG DS    0H                                                        05677
         B     CARDREAD                                                  05678
PRINTGET DS    0H                                                        05679
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05680
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05681
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05682
         BL    CARDREAD          YES. IGNORE.                            05683
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05684
         BH    CARDREAD          YES. IGNORE.                            05685
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ         05686
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                    05687
         LA    R15,CARDIN+10     STARTING ADDRESS                        05688
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05689
PRINTNUM DS    0H                                                        05690
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05691
         C     R15,=A(CARDIN+71) END OF CARD?                            05692
         BH    PRINTGNM          YES, GET NUMBER                         05693
         CLI   0(R15),C' '       BLANK HERE?                             05694
         BE    PRINTGNM          YES, GET NUMBER                         05695
         B     PRINTNUM          NO. STEP UP ONE PLACE                   05696
PRINTGNM DS    0H                                                        05697
         SR    R15,R1            HOW BIG IS THE NUMBER                   05698
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05699
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA            05700
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA         05701
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA            05702
         CVB   R0,WORKP          CONVERT IT TO BINARY                    05703
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE           05704
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER            05705
PRINTCLG DS    0H                                                        05706
         B     CARDREAD                                                  05707
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05708
*              End of User Code Here for Keywords                        05709
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05710
CHECKEND DS    0H                                                        05711
* -----------------------------------------------------------            05712
SYSINEND DS    0H                                                        05713
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                     05714
         BZ    CARNOSYS         NO. Flag SYSIN option as OFF.            05715
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05716
         OI    PARMFLG2,X'20'   Mark PARMS that SYSIN is on.             05717
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05718
         L     R1,TOTCHRCT                                               05719
         A     R1,PRMCHRCT         Final totals for last card            05720
         ST    R1,TOTCHRCT                                               05721
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED             05722
         CLOSE (SYSIN)                                                   05723
         B     CARDREND                                                  05724
CARNOSYS DS    0H                                                        05725
         NI    PARMFLG2,FF-X'20'   Turn SYSIN off in PARM flags.         05726
CARDREND DS    0H                                                        05727
         BAL   R7,SUMMREPT                                               05728
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                     05729
         BZ    PARMRPEN         NO.  GET OUT.                            05730
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED             05731
         CLOSE (PARMREPT)                                                05732
PARMRPEN DS    0H                                                        05733
THEEND   DS    0H                                                        05734
         L     R13,4(,R13)                                               05735
         MVC   16(4,R13),=F'0'          Return code 0     in R15         05736
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1          05737
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2          05738
         LM    R14,R12,12(R13)                                           05739
         BR    R14                                                       05740
* -----------------------------------------------------------            05741
*        S U B R O U T I N E S                                           05742
* -----------------------------------------------------------            05743
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.              05744
* -----------------------------------------------------------            05745
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                     05746
         BNL   PARMFIN        YES - GET OUT                              05747
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE         05748
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING            05749
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                         05750
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                   05751
*        ------------------------------------------------------------    05752
*--->                    code to require a delimiter (space, etc)        05753
*                        to enable, comment out the next instruction     05754
*        ------------------------------------------------------------    05755
         B     PRMNODLM         comment this line to require delimiter   05756
         TM    PRMFDFLG,X'01'                                            05757
         BO    PRMNFND                                                   05758
PRMNODLM DS    0H                                                        05759
*--->                                                                    05760
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE              05761
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                 05762
         BCTR  R5,0           ONE LESS FOR EXECUTE                       05763
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE       05764
*                                                                        05765
*   If you want to require parm comparisons as case sensitive,           05766
*    then comment out the following instruction....                      05767
*                                                                        05768
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM       05769
*                                                                        05770
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM     05771
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION                05772
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                          05773
         B     BOPPTBL        INNER LOOP                                 05774
*                                                                        05775
PRMNFND  DS    0H                                                        05776
*--->                 below - Parm Found flagging to require delimiter   05777
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters   05778
         BE    PRMFDOFF                                                  05779
         CLI   0(R4),C','                                                05780
         BE    PRMFDOFF                                                  05781
         B     PRMFDEND                                                  05782
PRMFDOFF DS    0H                                                        05783
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag         05784
PRMFDEND DS    0H                                                        05785
*--->                 above - Parm Found flagging to require delimiter   05786
*                                                                        05787
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                       05788
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                  05789
*                                                                        05790
         B     PARMLOOP       TRY AGAIN                                  05791
*                                                                        05792
PRMFOUND DS    0H                                                        05793
*                                                                        05794
*--->                 below - Parm Found flagging to require delimiter   05795
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                 05796
*--->                 above - Parm Found flagging to require delimiter   05797
PRMNOSEP DS    0H                                                        05798
         AP    PARMHITS,=P'1'    COUNT PARM HITS                         05799
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND            05800
         TM    1(R2),X'01'         PARM ON OR OFF?                       05801
         BO    PARMOFF             OFF                                   05802
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND     05803
         B     PARMGO                        AND GO ON                   05804
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK           05805
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS              05806
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF        05807
PARMGO   DS    0H                                                        05808
         XR    R5,R5          Clear Work Reg befor IC                    05809
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE             05810
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                  05811
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                   05812
         B     PARMLOOP       LOOK FOR MORE PARMS                        05813
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --              05814
*                             COUNT FOR DEBUGGING                        05815
PRMCHEND DS    0H                                                        05816
         BR    R7                                                        05817
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                    05818
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                    05819
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                    05820
* --------------------------------------------------------- *            05821
SUMMREPT DS    0H                  Print details of PARMREPT             05822
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                  05823
         BZ    SUMMREND            No. Bypass this routine.              05824
         MVC   PRTLINE,PRTLINE-1                                         05825
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                        05826
         HEX   PRTLINE+27,1,PARMFLG1                                     05827
         HEX   PRTLINE+30,1,PARMFLG2                                     05828
         HEX   PRTLINE+33,1,PARMFLG3                                     05829
         HEX   PRTLINE+36,1,PARMFLG4                                     05830
         HEX   PRTLINE+39,1,PARMFLG5                                     05831
         HEX   PRTLINE+42,1,PARMFLG6                                     05832
         HEX   PRTLINE+45,1,PARMFLG7                                     05833
         HEX   PRTLINE+48,1,PARMFLG8                                     05834
         HEX   PRTLINE+51,1,PARMFLG9                                     05835
         HEX   PRTLINE+54,1,PARMFLGA                                     05836
         PUT   PARMREPT,PRTLINE                                          05837
         MVC   PRTLINE,PRTLINE-1                                         05838
         PUT   PARMREPT,PRTLINE                                          05839
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first.  05840
         MVC   PRTLINE+4(12),=C'User Area : '                            05841
         HEX   PRTLINE+16,48,STRTVALU                                    05842
         PUT   PARMREPT,PRTLINE                                          05843
         MVC   PRTLINE,PRTLINE-1                                         05844
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                          05845
         HEX   PRTLINE+16,48,STRTVALU+48                                 05846
         PUT   PARMREPT,PRTLINE                                          05847
         MVC   PRTLINE,PRTLINE-1                                         05848
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                          05849
         HEX   PRTLINE+16,48,STRTVALU+96                                 05850
         PUT   PARMREPT,PRTLINE                                          05851
         MVC   PRTLINE,PRTLINE-1                                         05852
         MVC   PRTLINE+4(12),=C'UA + x''90'': '                          05853
         HEX   PRTLINE+16,24,STRTVALU+144                                05854
         PUT   PARMREPT,PRTLINE                                          05855
         MVC   PRTLINE,PRTLINE-1                                         05856
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                  05857
         HEX   PRTLINE+30,4,STRTVALU                                     05858
         MVC   PRTLINE+42(6),=C'Hex   '                                  05859
         PUT   PARMREPT,PRTLINE                                          05860
         MVC   PRTLINE,PRTLINE-1                                         05861
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                  05862
         HEX   PRTLINE+30,4,PARMSLEN                                     05863
         MVC   PRTLINE+42(6),=C'Hex   '                                  05864
         PUT   PARMREPT,PRTLINE                                          05865
         MVC   PRTLINE,PRTLINE-1                                         05866
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                  05867
         HEX   PRTLINE+30,4,SAVMSLEN                                     05868
         MVC   PRTLINE+42(6),=C'Hex   '                                  05869
         PUT   PARMREPT,PRTLINE                                          05870
         MVC   PRTLINE,PRTLINE-1                                         05871
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                  05872
         HEX   PRTLINE+30,4,PARMSTRT                                     05873
         MVC   PRTLINE+42(6),=C'Hex   '                                  05874
         PUT   PARMREPT,PRTLINE                                          05875
         MVC   PRTLINE,PRTLINE-1                                         05876
         MVC   PRTLINE+4(22),=C'Last Character Count :'                  05877
         HEX   PRTLINE+30,4,PRMCHRCT                                     05878
         MVC   PRTLINE+42(6),=C'Hex   '                                  05879
         PUT   PARMREPT,PRTLINE                                          05880
         MVC   PRTLINE,PRTLINE-1                                         05881
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                  05882
         HEX   PRTLINE+30,4,SAVCHRCT                                     05883
         MVC   PRTLINE+42(6),=C'Hex   '                                  05884
         PUT   PARMREPT,PRTLINE                                          05885
         MVC   PRTLINE,PRTLINE-1                                         05886
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                  05887
         HEX   PRTLINE+30,4,TOTCHRCT                                     05888
         MVC   PRTLINE+42(6),=C'Hex   '                                  05889
         PUT   PARMREPT,PRTLINE                                          05890
         MVC   PRTLINE,PRTLINE-1                                         05891
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                  05892
         HEX   PRTLINE+30,4,SAVPHITS                                     05893
         MVC   PRTLINE+42(6),=C'Packed'                                  05894
         PUT   PARMREPT,PRTLINE                                          05895
         MVC   PRTLINE,PRTLINE-1                                         05896
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                  05897
         HEX   PRTLINE+30,4,PARMHITS                                     05898
         MVC   PRTLINE+42(6),=C'Packed'                                  05899
         PUT   PARMREPT,PRTLINE                                          05900
         MVC   PRTLINE,PRTLINE-1                                         05901
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                  05902
         HEX   PRTLINE+30,4,TOTMHITS                                     05903
         MVC   PRTLINE+42(6),=C'Packed'                                  05904
         PUT   PARMREPT,PRTLINE                                          05905
         MVC   PRTLINE,PRTLINE-1                                         05906
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                  05907
         HEX   PRTLINE+30,4,SAVELCNT                                     05908
         MVC   PRTLINE+42(6),=C'Packed'                                  05909
         PUT   PARMREPT,PRTLINE                                          05910
         MVC   PRTLINE,PRTLINE-1                                         05911
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                  05912
         HEX   PRTLINE+30,4,PARMLCNT                                     05913
         MVC   PRTLINE+42(6),=C'Packed'                                  05914
         PUT   PARMREPT,PRTLINE                                          05915
         MVC   PRTLINE,PRTLINE-1                                         05916
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                  05917
         HEX   PRTLINE+30,4,TOTMLCNT                                     05918
         MVC   PRTLINE+42(6),=C'Packed'                                  05919
         PUT   PARMREPT,PRTLINE                                          05920
         MVC   PRTLINE,PRTLINE-1                                         05921
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                  05922
         HEX   PRTLINE+30,20,PARMTENT                                    05923
         PUT   PARMREPT,PRTLINE                                          05924
SUMMREND DS    0H                                                        05925
         BR    R7                                                        05926
* --------------------------------------------------------- *            05927
* --------------------------------------------------------- *            05928
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                    05929
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                    05930
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                    05931
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                    05932
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                    05933
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                    05934
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                    05935
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                    05936
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                    05937
         LTORG                                                           05938
         EJECT                                                           05939
* --------------------------------------------------------- *            05940
WORKA    DC    D'0'                                                      05941
WORKL    DC    D'0'                                                      05942
WORKP    DC    D'0'                                                      05943
PL4NO3   DC    PL4'3'                                                    05944
FF       EQU   X'FF'                                                     05945
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05946
         DC    C' IS TREATED AS NL.                                   '  05947
         DC    CL27' '                                                   05948
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05949
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  05950
         DC    CL27' '                                                   05951
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  05952
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  05953
         DC    CL27' '                                                   05954
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 05955
         DC    CL6'&HEXDFLM'                                             05956
         DC    C' RECORDS WILL'                                          05957
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  05958
         DC    C'SYSIN.'                                                 05959
         DC    CL17' '                                                   05960
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     05961
* --------------------------------------------------------- *            05962
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                05963
PARMFLG1 DC    X'00'                                                     05964
PARMFLG2 DC    X'00'                                                     05965
PARMFLG3 DC    X'00'                                                     05966
PARMFLG4 DC    X'00'                                                     05967
PARMFLG5 DC    X'00'                                                     05968
PARMFLG6 DC    X'00'                                                     05969
PARMFLG7 DC    X'00'                                                     05970
PARMFLG8 DC    X'00'                                                     05971
PARMFLG9 DC    X'00'                                                     05972
PARMFLGA DC    X'00'                                                     05973
* --------------------------------------------------------- *            05974
         DS    0F                                                        05975
STRTVALU DS    0CL(ENDVALUE)                                             05976
         DC    A(ENDVALUE)                                               05977
PARMSLEN DC    F'0'                LENGTH OF PARMS                       05978
*                                  Upon entry, this field contains       05979
*                                  the PARM address from COPYMODS,       05980
*                                  which gets overlaid by PARMCHEK.      05981
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       05982
*                                  Upon entry, this field contains       05983
*                                  the PARM address from COPYMODS,       05984
*                                  which gets overlaid by PARMCHEK.      05985
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               05986
*                                  Upon entry, this field contains       05987
*                                  the PARM length from COPYMODS,        05988
*                                  which gets overlaid by PARMCHEK.      05989
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05990
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05991
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05992
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   05993
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05994
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05995
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05996
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05997
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05998
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 05999
         DC    CL7' '              FILLER                                06000
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            06001
*  -----    User Stuff                                                   06002
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          06003
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  06004
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      06005
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         06006
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         06007
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         06008
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       06009
TAPEOWN  DC    CL10' '                                                   06010
TAPEOEXT DC    CL4' '                                                    06011
TAPEOASC DC    CL14' '                                                   06012
OVERFLAG DC    X'00'                                                     06013
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               06014
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    06015
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         06016
LIMCHAR  DC    CL10' '                                                   06017
LABCHAR  DC    CL10' '                                                   06018
PRTCHAR  DC    CL10' '                                                   06019
ENDVALUE EQU   (*-PARMSLEN)+4                                            06020
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     06021
* --------------------------------------------------------- *            06022
*              FORMAT OF PARM TABLE                                      06023
*              ONE ENTRY IS 20 BYTES                                     06024
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               06025
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 06026
*                               X'00' SAYS TURN FLAG ON                  06027
*                               X'10' SET ENTRY AS A DEFAULT             06028
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               06029
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                06030
*                                WHICH ALLOWS FOR 80 PARMS               06031
*                                THAT DON'T HAVE TO BE                   06032
*                                SEPARATED BY A COMMA.                   06033
PBYTES   EQU   10               Number of bytes of parm switches         06034
PTELEN   EQU   20               Length of each table entry               06035
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes  06036
EFFS     DC    20X'FF'          X'FF' bytes for XORing                   06037
* --------------------------------------------------------- *            06038
PARMTABL CSECT                                                           06039
         DC    X'07',X'00',C'LTMSKIP ',X'20000000000000000000'           06040
         DC    X'07',X'00',C'SKIPLTM ',X'20000000000000000000'           06041
         DC    X'07',X'11',C'COPYLTM ',X'20000000000000000000'           06042
         DC    X'07',X'01',C'LTMCOPY ',X'20000000000000000000'           06043
         DC    X'07',X'00',C'LBLINFO ',X'DE000000000000000000'           06044
         DC    X'06',X'00',C'PRINTL  ',X'DE000000000000000000'           06045
         DC    X'06',X'00',C'LABELS  ',X'DE000000000000000000'           06046
         DC    X'06',X'01',C'NOLABL  ',X'DE000000000000000000'           06047
         DC    X'07',X'11',C'NOLABEL ',X'DE000000000000000000'           06048
         DC    X'04',X'00',C'HDR1    ',X'02000000000000000000'           06049
         DC    X'06',X'01',C'NOHDR1  ',X'02000000000000000000'           06050
         DC    X'04',X'00',C'HDR2    ',X'04000000000000000000'           06051
         DC    X'06',X'01',C'NOHDR2  ',X'04000000000000000000'           06052
         DC    X'04',X'00',C'EOF1    ',X'08000000000000000000'           06053
         DC    X'06',X'01',C'NOEOF1  ',X'08000000000000000000'           06054
         DC    X'04',X'00',C'EOF2    ',X'10000000000000000000'           06055
         DC    X'06',X'01',C'NOEOF2  ',X'10000000000000000000'           06056
         DC    X'04',X'00',C'EOV1    ',X'40000000000000000000'           06057
         DC    X'06',X'01',C'NOEOV1  ',X'40000000000000000000'           06058
         DC    X'05',X'00',C'EOV2    ',X'80000000000000000000' + space   06059
         DC    X'06',X'01',C'NOEOV2  ',X'80000000000000000000'           06060
         DC    X'04',X'00',C'HDRS    ',X'06000000000000000000'           06061
         DC    X'06',X'01',C'NOHDRS  ',X'06000000000000000000'           06062
         DC    X'04',X'00',C'EOFS    ',X'18000000000000000000'           06063
         DC    X'06',X'01',C'NOEOFS  ',X'18000000000000000000'           06064
         DC    X'04',X'00',C'EOVS    ',X'C0000000000000000000'           06065
         DC    X'06',X'01',C'NOEOVS  ',X'C0000000000000000000'           06066
         DC    X'06',X'00',C'CHGVOL  ',X'00010000000000000000'           06067
         DC    X'08',X'11',C'NOCHGVOL',X'00010000000000000000'           06068
         DC    X'06',X'00',C'JCLVOL  ',X'00010000000000000000'           06069
         DC    X'08',X'01',C'NOJCLVOL',X'00010000000000000000'           06070
         DC    X'06',X'00',C'NEWVOL  ',X'00010000000000000000'           06071
         DC    X'08',X'01',C'NONEWVOL',X'00010000000000000000'           06072
         DC    X'06',X'10',C'VOLLBL  ',X'00020000000000000000'           06073
         DC    X'08',X'01',C'NOVOLLBL',X'00020000000000000000'           06074
         DC    X'07',X'00',C'EOV2EOF ',X'00040000000000000000'           06075
         DC    X'08',X'00',C'EOVTOEOF',X'00040000000000000000'           06076
         DC    X'06',X'00',C'EOVCHG  ',X'00040000000000000000'           06077
         DC    X'08',X'11',C'NOEOVCHG',X'00040000000000000000'           06078
         DC    X'04',X'00',C'READ    ',X'00080000000000000000'           06079
         DC    X'08',X'00',C'READONLY',X'00080000000000000000'           06080
         DC    X'07',X'00',C'NOWRITE ',X'00080000000000000000'           06081
         DC    X'07',X'11',C'WRITE   ',X'00080000000000000000'           06082
         DC    X'08',X'00',C'LABLDUMP',X'00100000000000000000'           06083
         DC    X'08',X'11',C'NOLABLDU',X'00100000000000000000'           06084
         DC    X'05',X'00',C'SYSIN   ',X'00200000000000000000'           06085
         DC    X'07',X'11',C'NOSYSIN ',X'00200000000000000000'           06086
         DC    X'06',X'00',C'OUTVOL  ',X'00400000000000000000'           06087
         DC    X'08',X'01',C'NOOUTVOL',X'00400000000000000000'           06088
         DC    X'08',X'00',C'LABADDIN',X'00808000000000000000'           06089
         DC    X'08',X'01',C'NOLABADD',X'00800000000000000000'           06090
         DC    X'06',X'10',C'BLKCNT  ',X'01000000000000000000'           06091
         DC    X'08',X'01',C'NOBLKCNT',X'01000000000000000000'           06092
         DC    X'08',X'00',C'PRADDLBL',X'00001000000000000000'           06093
         DC    X'08',X'01',C'NOPRADDL',X'00001000000000000000'           06094
         DC    X'08',X'10',C'CORRBLKS',X'00002000000000000000'           06095
         DC    X'08',X'01',C'NOCORRBL',X'00002000000000000000'           06096
         DC    X'08',X'00',C'NOEXNULL',X'00004000000000000000'           06097
         DC    X'08',X'00',C'NOSLNULL',X'00004000000000000000'           06098
         DC    X'06',X'11',C'EXNULL  ',X'00004000000000000000'           06099
         DC    X'06',X'01',C'SLNULL  ',X'00004000000000000000'           06100
         DC    X'06',X'00',C'LBLFIX  ',X'00008000000000000000'           06101
         DC    X'08',X'01',C'NOLBLFIX',X'00008000000000000000'           06102
         DC    X'08',X'00',C'INITVOLS',X'00010100000000000000'           06103
         DC    X'08',X'00',C'INITTAPE',X'00010100000000000000'           06104
         DC    X'07',X'00',C'LIMFILE ',X'00000200000000000000'           06105
         DC    X'07',X'00',C'FILELIM ',X'00000200000000000000'           06106
         DC    X'08',X'01',C'NOLIMFIL',X'00000200000000000000'           06107
         DC    X'05',X'00',C'BYTES   ',X'00000400000000000000'           06108
         DC    X'07',X'01',C'NOBYTES ',X'00000400000000000000'           06109
         DC    X'06',X'00',C'CUMTOT  ',X'00000800000000000000'           06110
         DC    X'08',X'01',C'NOCUMTOT',X'00000800000000000000'           06111
         DC    X'08',X'00',C'LIMLABEL',X'00000010000000000000'           06112
         DC    X'08',X'01',C'NOLIMLAB',X'00000010000000000000'           06113
         DC    X'06',X'10',C'OPTION  ',X'00000020000000000000'           06114
         DC    X'08',X'01',C'NOOPTION',X'00000020000000000000'           06115
         DC    X'07',X'00',C'SUPPWTO ',X'00000040000000000000'           06116
         DC    X'08',X'11',C'NOSUPPWT',X'00000040000000000000'           06117
         DC    X'08',X'00',C'LBDQUICK',X'00000080000000000000'           06118
         DC    X'08',X'01',C'NOLBDQUI',X'00000080000000000000'           06119
         DC    X'06',X'00',C'CUMSEP  ',X'00000001000000000000'           06120
         DC    X'08',X'01',C'NOCUMSEP',X'00000001000000000000'           06121
         DC    X'05',X'00',C'STRIP   ',X'00000002000000000000'           06122
         DC    X'07',X'11',C'NOSTRIP ',X'00000002000000000000'           06123
         DC    X'05',X'00',C'NLLIM   ',X'00000004000000000000'           06124
         DC    X'07',X'01',C'NONLLIM ',X'00000004000000000000'           06125
         DC    X'05',X'00',C'SLLIM   ',X'00000008000000000000'           06126
         DC    X'07',X'01',C'NOSLLIM ',X'00000008000000000000'           06127
         DC    X'07',X'00',C'IDRCOFF ',X'00000000100000000000'           06128
         DC    X'08',X'01',C'NOIDRCOF',X'00000000100000000000'           06129
         DC    X'06',X'00',C'HEXPRT  ',X'00000000200000000000'           06130
         DC    X'08',X'01',C'NOHEXPRT',X'00000000200000000000'           06131
         DC    X'07',X'10',C'UNEXWTO ',X'00000000400000000000'           06132
         DC    X'08',X'01',C'NOUNEXWT',X'00000000400000000000'           06133
         DC    X'06',X'00',C'INASC3  ',X'00010000810000000000'           06134
         DC    X'07',X'00',C'INASCII ',X'00010000810000000000'           06135
         DC    X'08',X'01',C'NOINASC3',X'00000000810000000000'           06136
         DC    X'06',X'00',C'INASC4  ',X'00010000820000000000'           06137
         DC    X'08',X'01',C'NOINASC4',X'00000000820000000000'           06138
         DC    X'05',X'00',C'ASCII   ',X'00000000800000000000'           06139
         DC    X'07',X'01',C'NOASCII ',X'00000000800000000000'           06140
         DC    X'06',X'01',C'EBCDIC  ',X'00000000800000000000'           06141
         DC    X'FFFFFFFFFFFFFFFF'                                       06142
* --------------------------------------------------------- *            06143
PARMCHEK CSECT                                                           06144
         SPACE 3                                                         06145
         LTORG                                                           06146
         SPACE 3                                                         06147
         DS    0D                                                        06148
* --------------------------------------------------------- *            06149
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR - 06150
               COPYMODS LVL-073'                                         06151
* --------------------------------------------------------- *            06152
         SPACE 3                                                         06153
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X 06154
               EODAD=SYSINEND                                            06155
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA     06156
* --------------------------------------------------------- *            06157
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06158
HEX      DS    0H                                                        06159
         MVC   1(1,R15),0(R1)        Move byte                           06160
         UNPK  0(3,R15),1(2,R15)     Unpack                              06161
         TR    0(2,R15),HEXTAB-240                                       06162
         LA    R15,2(,R15)           Increment output pointer            06163
         LA    R1,1(,R1)             Increment input pointer             06164
         BCT   R0,HEX                Decrement length, then loop         06165
         MVI   0(R15),C' '           Blank the trailing byte             06166
         BR    R4                    Return to caller                    06167
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     06168
         SPACE                                                           06169
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06170
HEXSAVE  DS    3F                    Register save for HEX macro         06171
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06172
* --------------------------------------------------------- *            06173
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT             06174
*              X'01'          PARMREPT DD IS PRESENT                     06175
*              X'02'          SYSIN    DD IS PRESENT                     06176
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                06177
*              X'01'          PARMREPT DD IS OPEN                        06178
*              X'02'          SYSIN    DD IS OPEN                        06179
* --------------------------------------------------------- *            06180
         SPACE 3                                                         06181
PARMSAVE DC    F'0'                                                      06182
SAV4HEX  DC    F'0'                                                      06183
SAVE2TO3 DC    2F'0'                                                     06184
SAVE3REG DC    F'0'                                                      06185
SAVE7BA0 DC    F'0'                                                      06186
SAVE7BA1 DC    F'0'                                                      06187
PARMWORK DC    CL8' '                                                    06188
UPCASEOR DC    CL8' '                                                    06189
         DC    CL4' '                                                    06190
*    ------------------------ >   Constants for Date and Time - below    06191
SAVE1402 DS    6F                 Extra fullword for safety              06192
TIMED    DS    CL7                                                       06193
DATED    DS    CL9                                                       06194
DATETIME DS    4F                                                        06195
         ORG   DATETIME                                                  06196
TIME     DS    CL4                                                       06197
         DS    CL4                                                       06198
DATE     DS    CL5                                                       06199
         DS    CL3                                                       06200
HEADDLIT DS    0CL31              Literal for headings - date and time   06201
         DC    CL6'Today:'                                               06202
         DC    CL2' '                                                    06203
HEADDATE DC    CL23' '                                                   06204
LEVELLIT DS    0CL21              Level number display for headings      06205
         DC    CL6'Level '                                               06206
LEVELL   DC    CL4'&LLEV'                                                06207
         DC    CL2' ('                                                   06208
LEVDATE  DC    CL8' '             Assembly date for this program         06209
         DC    CL1')'                                                    06210
*    ------------------------ >   Constants for Date and Time - above    06211
*    --------------- >            Output line buffers - below            06212
PRMFDFLG DC    X'00'              Parm Found Flag                        06213
*              X'01'              Parm has been found in this record     06214
         DC    CL3' '                                                    06215
         DC    C' '                                                      06216
LINE     DC    CL133' '                                                  06217
         DC    C' '                                                      06218
CNTLINE  DC    CL133' '                                                  06219
         DC    C' '                                                      06220
OUTLINE  DC    CL133' '                                                  06221
         DC    C' '                                                      06222
PRTLINE  DC    CL133' '                                                  06223
         DC    CL80' '            Padding                                06224
*    --------------- >            Output line buffers - above            06225
*                                                                        06226
CARDBLNK DC    CL80' '            BLANK CARD IMAGE                       06227
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                  06228
CARDWORK DC    CL80' '            SYSIN CARD WORK AREA                   06229
         END                                                             06230
*         LABEL CHECKER        AT LEVEL 1.1 AS OF 11/10/03               06231
   TITLE 'LABELCHK -- SET PARM BITS USING A TABLE'                       06232
**************************************************************           06233
**************************************************************           06234
**                                                          **           06235
**                                                          **           06236
**  MODULE:   LABELCHK - Check tape files to see if they    **           06237
**                       are tape labels.                   **           06238
**                                                          **           06239
**  AUTHOR:   Sam Golob                                     **           06240
**                                                          **           06241
**  PURPOSE:  This is a subroutine for programs which read  **           06242
**            tapes under BLP, so that tape label files     **           06243
**            would appear as ordinary files to the calling **           06244
**            program.  As file contents are passed to      **           06245
**            this program, LABELCHK detects whether they   **           06246
**            are tape labels, and tells the caller what    **           06247
**            type of labels they are.  If labels need to   **           06248
**            be interpreted, the PRINTLBL program is       **           06249
**            called.                                       **           06250
**                                                          **           06251
**  METHOD:   Label headers (usually the first 4 bytes)     **           06252
**            are scanned, and if a match to a known label  **           06253
**            type is found, then that type of label is     **           06254
**            processed appropriately.                      **           06255
**                                                          **           06256
**  Flags Set:  The principal flag set by this routine is   **           06257
**            the ISLABEL byte:                             **           06258
**                                                          **           06259
**   Setting of ISLABEL:   X'01'  - record is an IBM        **           06260
**                                  standard label          **           06261
**                                                          **           06262
**                         X'02'  - record is an ANSI/ISO   **           06263
**                                  (ASCII) standard label  **           06264
**                                                          **           06265
**                         X'00'  - the tested record is    **           06266
**                                  not a tape label        **           06267
**                                                          **           06268
**   Other flags and quantities are also set by this        **           06269
**   routine.  They are passed back to the caller in the    **           06270
**   LCHKPASS user area, in register 2.  Sometimes the      **           06271
**   PARMFLGS are changed.  These are passed back to the    **           06272
**   caller in register 1.  Sometimes the INAREA (record    **           06273
**   input area, usually containing a label image) is       **           06274
**   changed.  The altered label image is passed back to    **           06275
**   the caller in register 3.  At present, 80 bytes are    **           06276
**   passed back in register 3.                             **           06277
**                                                          **           06278
**************************************************************           06279
         EJECT                                                           06280
**************************************************************           06281
**                                                          **           06282
**  CHANGE LOG:                                             **           06283
**                                                          **           06284
**    Version 1.0 - Base program to detect IBM tape labels. **           06285
**                                                          **           06286
**    Version 1.1 - Support ANSI/ISO (ASCII) tape labels.   **           06287
**                                                          **           06288
**                                                          **           06289
**************************************************************           06290
**************************************************************           06291
         EJECT                                                           06292
**************************************************************           06293
*  ---------------------------------------------------------------  *    06294
*    This macro is used to display hex values in a printed report.       06295
*  ---------------------------------------------------------------  *    06296
         MACRO                                                           06297
&NAME    HEX   &TO,&LEN,&FROM                                            06298
&NAME    DS    0H                                                        06299
         ST    R4,SAV4HEX                                                06300
         STM   R15,R1,HEXSAVE                                            06301
         LA    R1,&FROM                                                  06302
         LA    R0,&LEN                                                   06303
         LA    R15,&TO                                                   06304
         BAL   R4,HEX                                                    06305
         L     R4,SAV4HEX                                                06306
         LM    R15,R1,HEXSAVE                                            06307
         MEND                                                            06308
         SPACE                                                           06309
**************************************************************           06310
         GBLC  &LLEV                                                     06311
&LLEV    SETC  '1.1 '                                                    06312
         YREGS                                                           06313
         ENTRY LABELCHK                                                  06314
LABELCHK CSECT                                                           06315
         USING *,R15                                                     06316
         B     EYECATCH                                                  06317
         DC    C'--- '            MAKE EYECATCHER VISIBLE                06318
         DC    C'LABELCHK - CHECK TAPE FILES IF THEY ARE LABELS'         06319
         DC    C' - '                                                    06320
         DC    C'LEVEL '                                                 06321
SYSLEV   DC    C'&LLEV'                                                  06322
         DC    C' - '                                                    06323
SYSDAT   DC    C'&SYSDATE'                                               06324
         DC    C'  ',C'&SYSTIME ',C'--- '                                06325
         DC    C'Copyright (c) 2003 by Sam Golob '                       06326
         DC    C'--- '              MAKE EYECATCHER VISIBLE              06327
SAVEAREA DC    18F'0'                                                    06328
EYECATCH DS    0D                   ENSURE ALIGNMENT                     06329
         SAVE  (14,12)                                                   06330
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM     06331
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   06332
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          06333
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         06334
         LR    R13,R1               NEW SAVE AREA ADDRESS                06335
         DROP  R15                                                       06336
* -----                             SET UP BASE REGISTERS                06337
         USING LABELCHK,R12,R11,R10,R9                                   06338
         LR    R12,R15                                                   06339
         LA    R11,4095(,R12)                                            06340
         LA    R11,1(,R11)                                               06341
         LA    R10,4095(,R11)                                            06342
         LA    R10,1(,R10)                                               06343
         LA    R9,4095(,R10)                                             06344
         LA    R9,1(,R9)                                                 06345
         LR    R1,R5                RESTORE REGISTER 1 INPUT             06346
* ----------------------------------------------------------------- *    06347
         ST    R1,PARMSAVE          Address of parm flags in caller      06348
         ST    R2,USERSAVE          Address of user area in caller       06349
         ST    R3,INARSAVE          Address of INAREA in caller          06350
* ----------------------------------------------------------------- *    06351
***********************************************************************  06352
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  06353
***********************************************************************  06354
         STM   R14,R2,SAVE1402                                           06355
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             06356
         OI    DATE+4,X'0F'                                              06357
         UNPK  DATED,DATE                                                06358
         OI    TIME+3,X'0F'                                              06359
         UNPK  TIMED,TIME                                                06360
*                          FILL HEADDATE AREA WITH INFO TO REUSE         06361
         MVC   HEADDATE(2),DATED                                         06362
         MVI   HEADDATE+2,C'/'                                           06363
         MVC   HEADDATE+3(2),DATED+2                                     06364
         MVI   HEADDATE+5,C'/'                                           06365
         MVC   HEADDATE+6(4),DATED+4                                     06366
         MVC   HEADDATE+12(2),TIMED                                      06367
         MVI   HEADDATE+14,C':'                                          06368
         MVC   HEADDATE+15(2),TIMED+2                                    06369
         MVI   HEADDATE+17,C':'                                          06370
         MVC   HEADDATE+18(2),TIMED+4                                    06371
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         06372
         LM    R14,R2,SAVE1402                                           06373
***********************************************************************  06374
         MVC   LEVDATE(8),SYSDAT                                         06375
***********************************************************************  06376
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND TITLES      06377
* ----------------------------------------------------------------- *    06378
INITCONS DS    0H                    Initialize necessary quantities.    06379
         MVI   LINE-1,X'40'          Make sure the print line is blank.  06380
         MVC   LINE,LINE-1                                               06381
         L     R0,SYSPRINV           SYSPRINT DCB address in caller      06382
         ST    R0,SYSPRDCB             store for the program's use       06383
         L     R0,LABLDUMV           LABLDUMP DCB address in caller      06384
         ST    R0,LABLDDCB             store for the program's use       06385
         L     R0,LABADDIV           LABADDIN DCB address in caller      06386
         ST    R0,LABADDCB             store for the program's use       06387
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer    06388
         ST    R0,SAVTRTCS             store it for later use            06389
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm  06390
         ST    R0,PRTLBENT           Save entry point for calling later  06391
* ----------------------------------------------------------------*      06392
PROCESS  DS    0H                    First copy over passed areas.       06393
* ----------------------------------------------------------------*      06394
         L     R1,PARMSAVE              Point to caller's parm flags     06395
         MVC   PARMFLGS(PARMFLLN),0(R1) Copy them into our program.      06396
         L     R2,USERSAVE              Point to caller's user area.     06397
         MVC   LCHKPASS(LCHKPASE),0(R2) Copy his user area to ours.      06398
         L     R3,INARSAVE              Point to INAREA in caller.       06399
         MVC   INAREA(80),0(R3)         Copy caller's INAREA to ours.    06400
* ----------------------------------------------------------------*      06401
*   Then execute this entire program as a called subroutine.      *      06402
* ----------------------------------------------------------------*      06403
         BAL   R7,LABLCHEK                                               06404
* ----------------------------------------------------------------*      06405
*                                                                        06406
         B     THEEND                                                    06407
LBLINEND DS    0H                                                        06408
         OI    LBLINENF,X'01'                                            06409
THEEND   DS    0H                                                        06410
         L     R13,4(,R13)                                               06411
         MVC   16(4,R13),=F'0'          Return code 0     in R15         06412
* - - - - - - - - - - - - - Pass addresses of our passed areas back.     06413
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1    06414
         MVC   28(4,R13),=A(LCHKPASS)   Address of our user area in R2   06415
         MVC   32(4,R13),=A(INAREA)     Address of our INAREA in R3      06416
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06417
         LM    R14,R12,12(R13)                                           06418
         BR    R14                                                       06419
         EJECT                                                           06420
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06421
*    BAL REGISTER IS R7.                                                 06422
* --------------------------------------------------------- *            06423
LABLCHEK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS              06424
*                         AND SET LABEL FLAGS, ACCORDINGLY,              06425
*                         IN THE LBLFLAG BYTE.                           06426
* --------------------------------------------------------- *            06427
*     The type of labels last seen on the input tape                     06428
*     are generally flagged by bits in the LBLFLAG byte.                 06429
*     These bit settings are set by this program as                      06430
*     follows:   (These are for both IBM and ASCII labels)               06431
* --------------------------------------------------------- *            06432
*              X'01'    HDR1 HAS BEEN SEEN                               06433
*              X'02'    HDR2 HAS BEEN SEEN                               06434
*              X'04'    VOL1 HAS BEEN SEEN                               06435
*              X'08'    HDR1 IS FROM AN INITTED TAPE                     06436
*              X'10'    EOF1 HAS BEEN SEEN                               06437
*              X'20'    EOF2 HAS BEEN SEEN                               06438
*              X'40'    EOV1 HAS BEEN SEEN                               06439
*              X'80'    EOV2 HAS BEEN SEEN                               06440
* --------------------------------------------------------- *            06441
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *            06442
* -                                                       - *            06443
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *            06444
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *            06445
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *            06446
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *            06447
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *            06448
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *            06449
* --------------------------------------------------------- *            06450
*                                                           *            06451
*   Beginning of processing:                                *            06452
*                                                           *            06453
*     Check the input record (that has been copied to       *            06454
*     INAREA) for each possible type of label, and direct   *            06455
*     the processing to the appropriate routine, if a       *            06456
*     label type has been found.                            *            06457
*                                                           *            06458
*     If an input record does not fit any of these          *            06459
*     criteria, it is not considered a tape label.          *            06460
*                                                           *            06461
* --------------------------------------------------------- *            06462
         NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG AT START      06463
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?                     06464
         BE    CVOL1                PROCESS THE VOL1                     06465
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?                     06466
         BE    CHDR1                PROCESS HDR1                         06467
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?                        06468
         BE    CHDR2                PROCESS HDR2                         06469
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?                       06470
         BE    CEOF1                PROCESS EOF1                         06471
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?                       06472
         BE    CEOF2                PROCESS EOF2                         06473
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?                       06474
         BE    CEOV1                PROCESS EOV1                         06475
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?                       06476
         BE    CEOV2                PROCESS EOV2                         06477
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL?            06478
         BE    CUHL                 PROCESS UHL                          06479
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?           06480
         BE    CUTL                 PROCESS UTL                          06481
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                         06482
         BE    ASC                     PROCESS ALL VOL TYPES             06483
         CLC   INAREA(3),=X'484452'   ASCII HDR?                         06484
         BE    ASC                     PROCESS ALL HDR TYPES             06485
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                         06486
         BE    ASC                     PROCESS ALL EOF TYPES             06487
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                         06488
         BE    ASC                     PROCESS ALL EOV TYPES             06489
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)     06490
         BE    ASC                     PROCESS ALL UVL TYPES             06491
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)     06492
         BE    ASC                     PROCESS ALL UHL TYPES             06493
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)    06494
         BE    ASC                     PROCESS ALL UTL TYPES             06495
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL or ASCII AL   06496
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------             06497
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             06498
         BO    CVOL1NPR             YES. JUST TURN ON ISLABEL FLAG       06499
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW          06500
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06501
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                    06502
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1      06503
CLRIDRCV DS    0H                                                        06504
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE          06505
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE            06506
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE             06507
* ---------------- LABEL ADDING CODE ---------------------- *            06508
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                06509
         BZ    CVOLNPRB             NO. WE CAN GO ON.                    06510
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   06511
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG              06512
         ST    R6,SAVER6                                                 06513
         L     R6,SYSPRDCB                                               06514
         PUT   (6),LINE                                                  06515
         L     R6,SAVER6                                                 06516
*        PUT   SYSPRINT,LINE        WRITE MSG                            06517
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  06518
*        CLOSE (LABADDIN)                                                06519
         OI    LABADFLG,X'01'                                            06520
CVOL1OUT DS    0H                 CLOSE OTHER FILES AND SCRAM            06521
         OI    CLOSMFLG,X'01'                                            06522
         B     THEEND                                                    06523
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.          06524
* ---------------- LABEL ADDING CODE ---------------------- *            06525
* ---------------- LABEL DUMPING CODE --------------------- *            06526
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06527
         BZ    CVOL1ND              NO. SKIP PUTTING OUT                 06528
         ST    R7,SAVE7LDM          Save BAL register.                   06529
         LA    R4,INAREA            Point to area to be dumped.          06530
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06531
         L     R7,SAVE7LDM          Restore BAL register.                06532
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE            06533
* ---------------- LABEL DUMPING CODE --------------------- *            06534
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.                       06535
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?                    06536
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND             06537
*                                                                        06538
* ------ Call PRINTLBL routine to print this label.....   below          06539
         ST    R7,SAVE7BA2        Save BAL register.                     06540
         BAL   R7,PRNTLABL        Print the current label.               06541
         L     R7,SAVE7BA2                                               06542
* ------ Call PRINTLBL routine to print this label.....   above          06543
*                                                                        06544
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06545
         B     LABCHEND                                                  06546
CHDR1    DS    0H                                                        06547
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06548
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG      06549
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS, INITTED HDR       06550
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.                       06551
* ---------------- LABEL DUMPING CODE --------------------- *            06552
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06553
         BZ    CHDR1ND              NO. SKIP PUTTING OUT                 06554
         ST    R7,SAVE7LDM          Save BAL register.                   06555
         LA    R4,INAREA            Point to area to be dumped.          06556
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06557
         L     R7,SAVE7LDM          Restore BAL register.                06558
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE            06559
* ---------------- LABEL DUMPING CODE --------------------- *            06560
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?              06561
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET             06562
* ---------------- LABEL DUMPING CODE --------------------- *            06563
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06564
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      06565
         ST    R7,SAVE7LDM          Save BAL register.                   06566
         ST    R4,SAVE4LDM                                               06567
         LA    R4,LABELITI          Point to area to be dumped.          06568
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06569
         L     R4,SAVE4LDM                                               06570
         L     R7,SAVE7LDM          Restore BAL register.                06571
CHDR1NDM DS    0H                                                        06572
* ---------------- LABEL DUMPING CODE --------------------- *            06573
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE              06574
CHDR1A   TM    PARMFLG1,X'02' DO WE PRINT LABELS?                        06575
         BZ    CHDR1Z         NO. DON'T PRINT.                           06576
*                                                                        06577
* ------ Call PRINTLBL routine to print this label.....   below          06578
         ST    R7,SAVE7BA2        Save BAL register.                     06579
         BAL   R7,PRNTLABL        Print the current label.               06580
         L     R7,SAVE7BA2                                               06581
* ------ Call PRINTLBL routine to print this label.....   above          06582
*                                                                        06583
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06584
         B     LABCHEND                                                  06585
CHDR2    DS    0H                                                        06586
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06587
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG      06588
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW          06589
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06590
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                    06591
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             06592
         BNE   CLRIDRH2                                                  06593
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      06594
CLRIDRH2 DS    0H                                                        06595
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE          06596
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2            06597
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.                       06598
* ---------------- LABEL DUMPING CODE --------------------- *            06599
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06600
         BZ    CHDR2ND              NO. SKIP PUTTING OUT                 06601
         ST    R7,SAVE7LDM          Save BAL register.                   06602
         LA    R4,INAREA            Point to area to be dumped.          06603
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06604
         L     R7,SAVE7LDM          Restore BAL register.                06605
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           06606
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE            06607
* ---------------- LABEL DUMPING CODE --------------------- *            06608
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?                      06609
         BZ    CHDR2Z           NO.                                      06610
*                                                                        06611
* ------ Call PRINTLBL routine to print this label.....   below          06612
         ST    R7,SAVE7BA2        Save BAL register.                     06613
         BAL   R7,PRNTLABL        Print the current label.               06614
         L     R7,SAVE7BA2                                               06615
* ------ Call PRINTLBL routine to print this label.....   above          06616
*                                                                        06617
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06618
         B     LABCHEND                                                  06619
CEOF1    DS    0H                                                        06620
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06621
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG      06622
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1                 06623
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.                       06624
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06625
BCTCEOF1 DS    0H                                                        06626
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          06627
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                  06628
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         06629
         STM   R2,R3,SAVE2TO3                                            06630
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     06631
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    06632
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 06633
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        06634
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              06635
         LM    R2,R3,SAVE2TO3                                            06636
BCTCEOFX DS    0H                                                        06637
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06638
* ---------------- LABEL DUMPING CODE --------------------- *            06639
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06640
         BZ    CEOF1ND              NO. SKIP PUTTING OUT                 06641
         ST    R7,SAVE7LDM          Save BAL register.                   06642
         LA    R4,INAREA            Point to area to be dumped.          06643
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06644
         L     R7,SAVE7LDM          Restore BAL register.                06645
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE            06646
* ---------------- LABEL DUMPING CODE --------------------- *            06647
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?                      06648
         BZ    CEOF1Z           NO.                                      06649
*                                                                        06650
* ------ Call PRINTLBL routine to print this label.....   below          06651
         ST    R7,SAVE7BA2        Save BAL register.                     06652
         BAL   R7,PRNTLABL        Print the current label.               06653
         L     R7,SAVE7BA2                                               06654
* ------ Call PRINTLBL routine to print this label.....   above          06655
*                                                                        06656
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06657
         B     LABCHEND                                                  06658
CEOF2    DS    0H                                                        06659
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06660
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG      06661
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          06662
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06663
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                    06664
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             06665
         BNE   CLRIDRF2                                                  06666
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      06667
CLRIDRF2 DS    0H                                                        06668
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          06669
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2                 06670
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.                       06671
* ---------------- LABEL DUMPING CODE --------------------- *            06672
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06673
         BZ    CEOF2ND              NO. SKIP PUTTING OUT                 06674
         ST    R7,SAVE7LDM          Save BAL register.                   06675
         LA    R4,INAREA            Point to area to be dumped.          06676
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06677
         L     R7,SAVE7LDM          Restore BAL register.                06678
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           06679
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE            06680
* ---------------- LABEL DUMPING CODE --------------------- *            06681
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?                      06682
         BZ    CEOF2Z           NO.                                      06683
*                                                                        06684
* ------ Call PRINTLBL routine to print this label.....   below          06685
         ST    R7,SAVE7BA2        Save BAL register.                     06686
         BAL   R7,PRNTLABL        Print the current label.               06687
         L     R7,SAVE7BA2                                               06688
* ------ Call PRINTLBL routine to print this label.....   above          06689
*                                                                        06690
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06691
         B     LABCHEND                                                  06692
CEOV1    DS    0H                                                        06693
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06694
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG      06695
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                 06696
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         06697
         BZ    CEOVN1         NO, PROCESS ORDINARILY                     06698
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                    06699
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                            06700
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                 06701
         MVI   LINE-1,C' '                                               06702
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           06703
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE                        06704
         ST    R6,SAVER6                                                 06705
         L     R6,SYSPRDCB                                               06706
         PUT   (6),LINE                                                  06707
         L     R6,SAVER6                                                 06708
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.               06709
         B     CEOVY1                                                    06710
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                       06711
CEOVY1   DS    0H                                                        06712
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06713
BCTCEOV1 DS    0H                                                        06714
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          06715
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                  06716
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         06717
         STM   R2,R3,SAVE2TO3                                            06718
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     06719
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    06720
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 06721
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        06722
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              06723
         LM    R2,R3,SAVE2TO3                                            06724
BCTCEOVX DS    0H                                                        06725
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06726
* ---------------- LABEL DUMPING CODE --------------------- *            06727
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06728
         BZ    CEOV1ND              NO. SKIP PUTTING OUT                 06729
         ST    R7,SAVE7LDM          Save BAL register.                   06730
         LA    R4,INAREA            Point to area to be dumped.          06731
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06732
         L     R7,SAVE7LDM          Restore BAL register.                06733
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE            06734
* ---------------- LABEL DUMPING CODE --------------------- *            06735
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?                      06736
         BZ    CEOV1Z           NO.                                      06737
*                                                                        06738
* ------ Call PRINTLBL routine to print this label.....   below          06739
         ST    R7,SAVE7BA2        Save BAL register.                     06740
         BAL   R7,PRNTLABL        Print the current label.               06741
         L     R7,SAVE7BA2                                               06742
* ------ Call PRINTLBL routine to print this label.....   above          06743
*                                                                        06744
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06745
         B     LABCHEND                                                  06746
CEOV2    DS    0H                                                        06747
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06748
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG      06749
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          06750
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06751
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                    06752
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             06753
         BNE   CLRIDRV2                                                  06754
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      06755
CLRIDRV2 DS    0H                                                        06756
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          06757
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2                 06758
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         06759
         BZ    CEOVN2         NO, PROCESS ORDINARILY                     06760
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN                    06761
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                            06762
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                 06763
         B     CEOVY2                                                    06764
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.                       06765
CEOVY2   DS    0H                                                        06766
* ---------------- LABEL DUMPING CODE --------------------- *            06767
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06768
         BZ    CEOV2ND              NO. SKIP PUTTING OUT                 06769
         ST    R7,SAVE7LDM          Save BAL register.                   06770
         LA    R4,INAREA            Point to area to be dumped.          06771
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06772
         L     R7,SAVE7LDM          Restore BAL register.                06773
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                   06774
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2        06775
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           06776
         B     CEOV2ND              AND GET OUT                          06777
CEOV2F   DS    0H                                                        06778
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           06779
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE            06780
* ---------------- LABEL DUMPING CODE --------------------- *            06781
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?                      06782
         BZ    CEOV2Z           NO.                                      06783
*                                                                        06784
* ------ Call PRINTLBL routine to print this label.....   below          06785
         ST    R7,SAVE7BA2        Save BAL register.                     06786
         BAL   R7,PRNTLABL        Print the current label.               06787
         L     R7,SAVE7BA2                                               06788
* ------ Call PRINTLBL routine to print this label.....   above          06789
*                                                                        06790
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06791
         B     LABCHEND                                                  06792
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *            06793
CUHL     DS    0H             HANDLE USER HEADER LABELS                  06794
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06795
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG      06796
*                                                                        06797
* ------ Call PRINTLBL routine to print this label.....   below          06798
         ST    R7,SAVE7BA2        Save BAL register.                     06799
         BAL   R7,PRNTLABL        Print the current label.               06800
         L     R7,SAVE7BA2                                               06801
* ------ Call PRINTLBL routine to print this label.....   above          06802
*                                                                        06803
* ---------------- LABEL DUMPING CODE --------------------- *            06804
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06805
         BZ    CUHLEN               NO. SKIP PUTTING OUT                 06806
         ST    R7,SAVE7LDM          Save BAL register.                   06807
         LA    R4,INAREA            Point to area to be dumped.          06808
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06809
         L     R7,SAVE7LDM          Restore BAL register.                06810
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE            06811
* ---------------- LABEL DUMPING CODE --------------------- *            06812
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06813
         B     LABCHEND                                                  06814
CUTL     DS    0H             HANDLE USER TRAILER LABELS                 06815
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06816
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG      06817
*                                                                        06818
* ------ Call PRINTLBL routine to print this label.....   below          06819
         ST    R7,SAVE7BA2        Save BAL register.                     06820
         BAL   R7,PRNTLABL        Print the current label.               06821
         L     R7,SAVE7BA2                                               06822
* ------ Call PRINTLBL routine to print this label.....   above          06823
*                                                                        06824
* ---------------- LABEL DUMPING CODE --------------------- *            06825
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06826
         BZ    CUTLEN               NO. SKIP PUTTING OUT                 06827
         ST    R7,SAVE7LDM          Save BAL register.                   06828
         LA    R4,INAREA            Point to area to be dumped.          06829
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06830
         L     R7,SAVE7LDM          Restore BAL register.                06831
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE            06832
* ---------------- LABEL DUMPING CODE --------------------- *            06833
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06834
         B     LABCHEND                                                  06835
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *            06836
         EJECT                                                           06837
* ----------------  ASCII   Labels  ----------------------- *            06838
* --------------------------------------------------------- *            06839
*  ANSI/ISO label rules are a bit more relaxed than IBM     *            06840
*  label rules.  VOLx, HDRx, EOFx, EOVx, UVLx, UHLx, and    *            06841
*  UTLx are all considered labels, with a lot of latitude   *            06842
*  as to what the "x" is.  Therefore, for ASCII tape        *            06843
*  labels, we check the first 3 characters in each label    *            06844
*  category, and then further subdivide within that         *            06845
*  category if necessary.                                   *            06846
* --------------------------------------------------------- *            06847
ASC      DS    0H                   ALL ASCII LABEL CANDIDATES HERE      06848
*                                                                        06849
*        Common ASCII preparation routines......                         06850
*                                                                        06851
         OI    ASCIIFLG,X'01'       Say we're working in ASCII           06852
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation    06853
         OI    ISLBLFLG,X'02'       Mark this record as an ASCII label   06854
*                                   This is being done early for ASCII   06855
*                                                                        06856
* -- >  Make an EBCDIC version of this label in the INASCI field.        06857
         ST    R5,R5HXPRT              Save register.                    06858
         L     R5,SAVTRTCS             Point to translation table CSECT  06859
         USING TRTDSECT,R5                                               06860
         MVC   INASCI(80),INAREA       Move LABEL area to workarea       06861
         TR    INASCI(80),TRTA2E       Translate to EBCDIC for print     06862
         L     R5,R5HXPRT              Restore R5                        06863
         DROP  R5                                                        06864
* -- >                                                                   06865
* ----------------------------------------------------- *                06866
* --   Again pick which type of ASCII label we have     *                06867
* ----------------------------------------------------- *                06868
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                         06869
         BE    ASCVOL                  PROCESS ALL VOL TYPES             06870
         CLC   INAREA(3),=X'484452'   ASCII HDR?                         06871
         BE    ASCHDR                  PROCESS ALL HDR TYPES             06872
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                         06873
         BE    ASCEOF                  PROCESS ALL EOF TYPES             06874
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                         06875
         BE    ASCEOV                  PROCESS ALL EOV TYPES             06876
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)     06877
         BE    ASCUVL                  PROCESS ALL UVL TYPES             06878
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)     06879
         BE    ASCUHL                  PROCESS ALL UHL TYPES             06880
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)    06881
         BE    ASCUTL                  PROCESS ALL UTL TYPES             06882
* ----------------------------------                                     06883
ASCVOL   DS    0H                                                        06884
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06885
         BO    ASCVOLLB              YES. JUST TURN ON ISLABEL FLAG      06886
* ---------------- LABEL ADDING CODE ---------------------- *            06887
*       Forbid adding new labels to an already AL tape.     *            06888
* --------------------------------------------------------- *            06889
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                06890
         BZ    ASCVOLNS             NO. WE CAN GO ON.                    06891
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   06892
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG              06893
         ST    R6,SAVER6                                                 06894
         L     R6,SYSPRDCB                                               06895
         PUT   (6),LINE                                                  06896
         L     R6,SAVER6                                                 06897
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  06898
*        CLOSE (LABADDIN)                                                06899
         OI    LABADFLG,X'01'                                            06900
         OI    CLOSMFLG,X'01'                                            06901
         B     THEEND                                                    06902
ASCVOLNS DS    0H                   NOT ADDING SL ONTO SL TAPE.          06903
* ---------------- LABEL ADDING CODE ---------------------- *            06904
* ---------------- LABEL DUMPING CODE ------ below -------- *            06905
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06906
         BZ    AVOL1ND              NO. SKIP PUTTING OUT                 06907
         ST    R7,SAVE7LDM          Save BAL register.                   06908
         LA    R4,INAREA            Point to area to be dumped.          06909
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06910
         L     R7,SAVE7LDM          Restore BAL register.                06911
AVOL1ND  DS    0H                   END OF LABEL DUMPING CODE            06912
* ---------------- LABEL DUMPING CODE ------ above -------- *            06913
* --------------------------------------------------------- *            06914
*  At this point, we specifically check for a VOL1 label.   *            06915
* --------------------------------------------------------- *            06916
         CLI   INAREA+3,X'31'       Is the VOL label a VOL1?             06917
         BNE   ASCVOLLB             No. Just mark as an ASCII label.     06918
         OI    LBLFLAG,X'04'        Flag VOL1 seen.                      06919
         MVC   VOLORIG(6),INASCI+4     Save EBCDIC volser if there       06920
         MVC   INVOLUME(6),INASCI+4    Send to message too               06921
* --- >>>    VOL1  Label Printing   -----   below                        06922
         TM    PARMFLG2,X'02'          Printing Volume Labels?           06923
         BZ    ASCVOLLB                No. Skip this code.               06924
*                                                                        06925
* ------ Call PRINTLBL routine to print this label.....   below          06926
         ST    R7,SAVE7BA2        Save BAL register.                     06927
         BAL   R7,PRNTLABL        Print the current label.               06928
         L     R7,SAVE7BA2                                               06929
* ------ Call PRINTLBL routine to print this label.....   above          06930
*                                                                        06931
* --- >>>    VOL1  Label Printing   -----   above                        06932
ASCVOLLB DS    0H                                                        06933
ASCVOLE  DS    0H                                                        06934
         B     LABCHEND                                                  06935
*                                                                        06936
ASCHDR   DS    0H                                                        06937
         CLI   INAREA+3,X'31'       Is ASCII number field a 1?           06938
         BE    ASCHDR1                                                   06939
         CLI   INAREA+3,X'32'       Is ASCII number field a 2?           06940
         BE    ASCHDR2                                                   06941
         B     ASCHDRO                                                   06942
ASCHDR1  DS    0H                   ASCII Header 1                       06943
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             06944
         BO    ASCHDR1Z             YES. OUT WITH ISLABEL MARKED.        06945
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF, INITTED HDR       06946
         OI    LBLFLAG,X'01'        FLAG HDR1 SEEN.                      06947
* ---------------- LABEL DUMPING CODE --------------------- *            06948
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06949
         BZ    AHDR1ND              NO. SKIP PUTTING OUT                 06950
         ST    R7,SAVE7LDM          Save BAL register.                   06951
         LA    R4,INAREA            Point to area to be dumped.          06952
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06953
         L     R7,SAVE7LDM          Restore BAL register.                06954
AHDR1ND  DS    0H                   END OF LABEL DUMPING CODE            06955
* ---------------- LABEL DUMPING CODE --------------------- *            06956
         CLC   INAREA+4(23),ZEROA23   WAS TAPE JUST INITTED?             06957
         BNE   CASC1A                 NO. THIS IS A HDR1 FOR DATASET     06958
* ---------------- LABEL DUMPING CODE --------------------- *            06959
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06960
         BZ    CASC1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      06961
         ST    R7,SAVE7LDM          Save BAL register.                   06962
         ST    R4,SAVE4LDM                                               06963
         OI    ATRNLFLG,X'01'       Order the line translated to ASCII.  06964
         LA    R4,LABELITI          Point to area to be dumped.          06965
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06966
         L     R4,SAVE4LDM                                               06967
         L     R7,SAVE7LDM          Restore BAL register.                06968
         NI    ATRNLFLG,FF-X'01'    Reinit the flag bit.                 06969
CASC1NDM DS    0H                                                        06970
* ---------------- LABEL DUMPING CODE --------------------- *            06971
         OI    LBLFLAG,X'08'        Show initted header label found.     06972
CASC1A   DS    0H                                                        06973
* --- >      Print  Labels     - -   below                               06974
         TM    PARMFLG1,X'02'          DO WE PRINT LABELS?               06975
         BZ    ASCHDR1Z                NO. DON'T PRINT.                  06976
*                                                                        06977
* ------ Call PRINTLBL routine to print this label.....   below          06978
         ST    R7,SAVE7BA2        Save BAL register.                     06979
         BAL   R7,PRNTLABL        Print the current label.               06980
         L     R7,SAVE7BA2                                               06981
* ------ Call PRINTLBL routine to print this label.....   above          06982
*                                                                        06983
ASCHDR1Z DS    0H                                                        06984
* --- >      Print  Labels     - -   above                               06985
         B     LABCHEND                                                  06986
ASCHDR2  DS    0H                   ASCII Header 2                       06987
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             06988
         BO    ASCHDR2Z             YES. MARKED AS LABEL AND GET OUT.    06989
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF FLAGS IF HDR2      06990
         OI    LBLFLAG,X'02'        YES. FLAG HDR2 SEEN.                 06991
* ---------------- LABEL DUMPING CODE --------------------- *            06992
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06993
         BZ    AHDR2ND              NO. SKIP PUTTING OUT                 06994
         ST    R7,SAVE7LDM          Save BAL register.                   06995
         LA    R4,INAREA            Point to area to be dumped.          06996
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06997
         L     R7,SAVE7LDM          Restore BAL register.                06998
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           06999
AHDR2ND  DS    0H                   END OF LABEL DUMPING CODE            07000
* ---------------- LABEL DUMPING CODE --------------------- *            07001
ASCHDR2A DS    0H                                                        07002
* --- >      Print  Labels     - -   below                               07003
         TM    PARMFLG1,X'04'          DO WE PRINT LABELS?               07004
         BZ    ASCHDR2Z                NO. DON'T PRINT.                  07005
*                                                                        07006
* ------ Call PRINTLBL routine to print this label.....   below          07007
         ST    R7,SAVE7BA2        Save BAL register.                     07008
         BAL   R7,PRNTLABL        Print the current label.               07009
         L     R7,SAVE7BA2                                               07010
* ------ Call PRINTLBL routine to print this label.....   above          07011
*                                                                        07012
ASCHDR2Z DS    0H                                                        07013
* --- >      Print  Labels     - -   above                               07014
         B     LABCHEND                                                  07015
ASCHDRO  DS    0H                    ASCII Other header labels           07016
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07017
         BO    ASCHDRE               YES. GET OUT WITH LABEL INDICATED.  07018
*                                                                        07019
* ------ Call PRINTLBL routine to print this label.....   below          07020
         ST    R7,SAVE7BA2        Save BAL register.                     07021
         BAL   R7,PRNTLABL        Print the current label.               07022
         L     R7,SAVE7BA2                                               07023
* ------ Call PRINTLBL routine to print this label.....   above          07024
*                                                                        07025
* ---------------- LABEL DUMPING CODE --------------------- *            07026
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07027
         BZ    AHDROND              NO. SKIP PUTTING OUT                 07028
         ST    R7,SAVE7LDM          Save BAL register.                   07029
         LA    R4,INAREA            Point to area to be dumped.          07030
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07031
         L     R7,SAVE7LDM          Restore BAL register.                07032
AHDROND  DS    0H                   END OF LABEL DUMPING CODE            07033
* ---------------- LABEL DUMPING CODE --------------------- *            07034
ASCHDRE  DS    0H                                                        07035
         B     LABCHEND                                                  07036
ASCEOF   DS    0H                                                        07037
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?          07038
         BE    ASCEOF1                                                   07039
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?          07040
         BE    ASCEOF2                                                   07041
         B     ASCEOFO                                                   07042
ASCEOF1  DS    0H                    ASCII EOF 1                         07043
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07044
         BO    ASCEOF1Z              YES. GET OUT WITH LABEL INDICATED.  07045
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOF1          07046
         OI    LBLFLAG,X'10'         FLAG EOF1 SEEN.                     07047
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07048
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          07049
         BO    ASCBLKF1             YES. PLUG IN CORRECTED VALUE.        07050
         TM    PARMFLG1,X'01'          Is block count correction on?     07051
         BZ    NOTASCEF                No-don't plug in corrected value  07052
ASCBLKF1 DS    0H                                                        07053
         ST    R5,R5HXPRT              Save register.                    07054
         L     R5,SAVTRTCS             Point to translation table CSECT  07055
         USING TRTDSECT,R5                                               07056
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   07057
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          07058
         L     R5,R5HXPRT              Restore R5                        07059
         DROP  R5                                                        07060
         MVC   INAREA+54(6),BLKCNASC+4                                   07061
NOTASCEF DS    0H                                                        07062
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07063
* ---------------- LABEL DUMPING CODE --------------------- *            07064
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07065
         BZ    AEOF1ND              NO. SKIP PUTTING OUT                 07066
         ST    R7,SAVE7LDM          Save BAL register.                   07067
         LA    R4,INAREA            Point to area to be dumped.          07068
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07069
         L     R7,SAVE7LDM          Restore BAL register.                07070
AEOF1ND  DS    0H                   END OF LABEL DUMPING CODE            07071
* ---------------- LABEL DUMPING CODE --------------------- *            07072
ASCEOF1A DS    0H                                                        07073
* --- >      Print  Labels     - -   below                               07074
         TM    PARMFLG1,X'08'          DO WE PRINT LABELS?               07075
         BZ    ASCEOF1Z                NO. DON'T PRINT.                  07076
*                                                                        07077
* ------ Call PRINTLBL routine to print this label.....   below          07078
         ST    R7,SAVE7BA2        Save BAL register.                     07079
         BAL   R7,PRNTLABL        Print the current label.               07080
         L     R7,SAVE7BA2                                               07081
* ------ Call PRINTLBL routine to print this label.....   above          07082
*                                                                        07083
ASCEOF1Z DS    0H                                                        07084
* --- >      Print  Labels     - -   above                               07085
         B     LABCHEND                                                  07086
ASCEOF2  DS    0H                   ASCII EOF 2                          07087
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07088
         BO    ASCEOF2Z             YES. JUST TURN ON ISLABEL FLAG       07089
         NI    LBLFLAG,X'F8'        TURN OFF HDR FLAGS IF EOF2           07090
         OI    LBLFLAG,X'20'        YES. FLAG EOF2 SEEN.                 07091
* ---------------- LABEL DUMPING CODE --------------------- *            07092
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07093
         BZ    AEOF2ND              NO. SKIP PUTTING OUT                 07094
         ST    R7,SAVE7LDM          Save BAL register.                   07095
         LA    R4,INAREA            Point to area to be dumped.          07096
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07097
         L     R7,SAVE7LDM          Restore BAL register.                07098
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           07099
AEOF2ND  DS    0H                   END OF LABEL DUMPING CODE            07100
* ---------------- LABEL DUMPING CODE --------------------- *            07101
ASCEOF2A DS    0H                                                        07102
* --- >      Print  Labels     - -   below                               07103
         TM    PARMFLG1,X'10'          DO WE PRINT LABELS?               07104
         BZ    ASCEOF2Z                NO. DON'T PRINT.                  07105
*                                                                        07106
* ------ Call PRINTLBL routine to print this label.....   below          07107
         ST    R7,SAVE7BA2        Save BAL register.                     07108
         BAL   R7,PRNTLABL        Print the current label.               07109
         L     R7,SAVE7BA2                                               07110
* ------ Call PRINTLBL routine to print this label.....   above          07111
*                                                                        07112
ASCEOF2Z DS    0H                                                        07113
* --- >      Print  Labels     - -   above                               07114
         B     LABCHEND                                                  07115
ASCEOFO  DS    0H                    ASCII Other EOF labels              07116
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07117
         BO    ASCEOFE               YES. GET OUT WITH LABEL INDICATED.  07118
*                                                                        07119
* ------ Call PRINTLBL routine to print this label.....   below          07120
         ST    R7,SAVE7BA2        Save BAL register.                     07121
         BAL   R7,PRNTLABL        Print the current label.               07122
         L     R7,SAVE7BA2                                               07123
* ------ Call PRINTLBL routine to print this label.....   above          07124
*                                                                        07125
* ---------------- LABEL DUMPING CODE --------------------- *            07126
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07127
         BZ    AEOFOND              NO. SKIP PUTTING OUT                 07128
         ST    R7,SAVE7LDM          Save BAL register.                   07129
         LA    R4,INAREA            Point to area to be dumped.          07130
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07131
         L     R7,SAVE7LDM          Restore BAL register.                07132
AEOFOND  DS    0H                   END OF LABEL DUMPING CODE            07133
* ---------------- LABEL DUMPING CODE --------------------- *            07134
ASCEOFE  DS    0H                                                        07135
         B     LABCHEND                                                  07136
ASCEOV   DS    0H                                                        07137
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?          07138
         BE    ASCEOV1                                                   07139
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?          07140
         BE    ASCEOV2                                                   07141
         B     ASCEOVO                                                   07142
ASCEOV1  DS    0H                    ASCII EOV 1                         07143
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07144
         BO    ASCEOV1Z              YES. JUST TURN ON ISLABEL FLAG      07145
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                 07146
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         07147
         BZ    ASCEOVN1       NO, PROCESS ORDINARILY                     07148
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                    07149
         NI    LBLFLAG,FF-X'40'      UNFLAG EOV1                         07150
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF                   07151
         MVI   LINE-1,C' '                                               07152
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           07153
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE                        07154
         ST    R6,SAVER6                                                 07155
         L     R6,SYSPRDCB                                               07156
         PUT   (6),LINE                                                  07157
         L     R6,SAVER6                                                 07158
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.               07159
         B     ASCEOVY1                                                  07160
ASCEOVN1 OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                       07161
ASCEOVY1 DS    0H                                                        07162
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07163
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          07164
         BO    ASCBLKV1             YES. PLUG IN CORRECTED VALUE.        07165
         TM    PARMFLG1,X'01'          Is block count correction on?     07166
         BZ    NOTASCEV                No-don't plug in corrected value  07167
ASCBLKV1 DS    0H                                                        07168
         ST    R5,R5HXPRT              Save register.                    07169
         L     R5,SAVTRTCS             Point to translation table CSECT  07170
         USING TRTDSECT,R5                                               07171
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   07172
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          07173
         L     R5,R5HXPRT              Restore R5                        07174
         DROP  R5                                                        07175
         MVC   INAREA+54(6),BLKCNASC+4                                   07176
NOTASCEV DS    0H                                                        07177
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07178
* ---------------- LABEL DUMPING CODE --------------------- *            07179
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07180
         BZ    AEOV1ND              NO. SKIP PUTTING OUT                 07181
         ST    R7,SAVE7LDM          Save BAL register.                   07182
         LA    R4,INAREA            Point to area to be dumped.          07183
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07184
         L     R7,SAVE7LDM          Restore BAL register.                07185
AEOV1ND  DS    0H                   END OF LABEL DUMPING CODE            07186
* ---------------- LABEL DUMPING CODE --------------------- *            07187
* --- >      Print  Labels     - -   below                               07188
         TM    PARMFLG1,X'40'          DO WE PRINT LABELS?               07189
         BZ    ASCEOV1Z                NO. DON'T PRINT.                  07190
*                                                                        07191
* ------ Call PRINTLBL routine to print this label.....   below          07192
         ST    R7,SAVE7BA2        Save BAL register.                     07193
         BAL   R7,PRNTLABL        Print the current label.               07194
         L     R7,SAVE7BA2                                               07195
* ------ Call PRINTLBL routine to print this label.....   above          07196
*                                                                        07197
ASCEOV1Z DS    0H                                                        07198
* --- >      Print  Labels     - -   above                               07199
         B     LABCHEND                                                  07200
ASCEOV2  DS    0H                    ASCII EOV 2                         07201
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07202
         BO    ASCEOV2Z              YES. INDICATE LABEL AND GET OUT.    07203
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOV2          07204
         TM    PARMFLG2,X'04'        CHANGE EOV TO EOF?                  07205
         BZ    ASCEOVN2              NO, PROCESS ORDINARILY              07206
         OI    LBLFLAG,X'20'         INSTEAD, FLAG EOF2 SEEN             07207
         NI    LBLFLAG,FF-X'80'      UNFLAG EOV2                         07208
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF.                  07209
         OI    EOLGFLAG,X'02'        INDICATE EOF2 SEEN ON TAPE          07210
         B     ASCEOVY2                                                  07211
ASCEOVN2 OI    LBLFLAG,X'80'         YES. FLAG EOV2 SEEN.                07212
         OI    EOLGFLAG,X'04'        INDICATE EOV2 SEEN ON TAPE          07213
ASCEOVY2 DS    0H                                                        07214
* ---------------- LABEL DUMPING CODE --------------------- *            07215
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07216
         BZ    AEOV2ND              NO. SKIP PUTTING OUT                 07217
         ST    R7,SAVE7LDM          Save BAL register.                   07218
         LA    R4,INAREA            Point to area to be dumped.          07219
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07220
         L     R7,SAVE7LDM          Restore BAL register.                07221
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           07222
AEOV2ND  DS    0H                   END OF LABEL DUMPING CODE            07223
* ---------------- LABEL DUMPING CODE --------------------- *            07224
ASCEOV2N DS    0H                                                        07225
* --- >      Print  Labels     - -   below                               07226
         TM    PARMFLG1,X'80'          DO WE PRINT LABELS?               07227
         BZ    ASCEOV2Z                NO. DON'T PRINT.                  07228
*                                                                        07229
* ------ Call PRINTLBL routine to print this label.....   below          07230
         ST    R7,SAVE7BA2        Save BAL register.                     07231
         BAL   R7,PRNTLABL        Print the current label.               07232
         L     R7,SAVE7BA2                                               07233
* ------ Call PRINTLBL routine to print this label.....   above          07234
*                                                                        07235
ASCEOV2Z DS    0H                                                        07236
* --- >      Print  Labels     - -   above                               07237
         B     LABCHEND                                                  07238
ASCEOVO  DS    0H                    ASCII Other EOV labels              07239
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07240
         BO    ASCEOVE               YES. GET OUT WITH LABEL INDICATED.  07241
*                                                                        07242
* ------ Call PRINTLBL routine to print this label.....   below          07243
         ST    R7,SAVE7BA2        Save BAL register.                     07244
         BAL   R7,PRNTLABL        Print the current label.               07245
         L     R7,SAVE7BA2                                               07246
* ------ Call PRINTLBL routine to print this label.....   above          07247
*                                                                        07248
* ---------------- LABEL DUMPING CODE --------------------- *            07249
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07250
         BZ    AEOVOND              NO. SKIP PUTTING OUT                 07251
         ST    R7,SAVE7LDM          Save BAL register.                   07252
         LA    R4,INAREA            Point to area to be dumped.          07253
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07254
         L     R7,SAVE7LDM          Restore BAL register.                07255
AEOVOND  DS    0H                   END OF LABEL DUMPING CODE            07256
* ---------------- LABEL DUMPING CODE --------------------- *            07257
ASCEOVE  DS    0H                                                        07258
         B     LABCHEND                                                  07259
ASCUVL   DS    0H                                                        07260
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07261
         BO    ASCUVLE               YES. JUST TURN ON ISLABEL FLAG      07262
*                                                                        07263
* ------ Call PRINTLBL routine to print this label.....   below          07264
         ST    R7,SAVE7BA2        Save BAL register.                     07265
         BAL   R7,PRNTLABL        Print the current label.               07266
         L     R7,SAVE7BA2                                               07267
* ------ Call PRINTLBL routine to print this label.....   above          07268
*                                                                        07269
* ---------------- LABEL DUMPING CODE --------------------- *            07270
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07271
         BZ    AUVLEND              NO. SKIP PUTTING OUT                 07272
         ST    R7,SAVE7LDM          Save BAL register.                   07273
         LA    R4,INAREA            Point to area to be dumped.          07274
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07275
         L     R7,SAVE7LDM          Restore BAL register.                07276
AUVLEND  DS    0H                   END OF LABEL DUMPING CODE            07277
* ---------------- LABEL DUMPING CODE --------------------- *            07278
ASCUVLE  DS    0H                                                        07279
         B     LABCHEND                                                  07280
ASCUHL   DS    0H                                                        07281
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07282
         BO    ASCUHLE               YES. JUST TURN ON ISLABEL FLAG      07283
*                                                                        07284
* ------ Call PRINTLBL routine to print this label.....   below          07285
         ST    R7,SAVE7BA2        Save BAL register.                     07286
         BAL   R7,PRNTLABL        Print the current label.               07287
         L     R7,SAVE7BA2                                               07288
* ------ Call PRINTLBL routine to print this label.....   above          07289
*                                                                        07290
* ---------------- LABEL DUMPING CODE --------------------- *            07291
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07292
         BZ    AUHLEND              NO. SKIP PUTTING OUT                 07293
         ST    R7,SAVE7LDM          Save BAL register.                   07294
         LA    R4,INAREA            Point to area to be dumped.          07295
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07296
         L     R7,SAVE7LDM          Restore BAL register.                07297
AUHLEND  DS    0H                   END OF LABEL DUMPING CODE            07298
* ---------------- LABEL DUMPING CODE --------------------- *            07299
ASCUHLE  DS    0H                                                        07300
         B     LABCHEND                                                  07301
ASCUTL   DS    0H                                                        07302
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07303
         BO    ASCUTLE               YES. JUST TURN ON ISLABEL FLAG      07304
*                                                                        07305
* ------ Call PRINTLBL routine to print this label.....   below          07306
         ST    R7,SAVE7BA2        Save BAL register.                     07307
         BAL   R7,PRNTLABL        Print the current label.               07308
         L     R7,SAVE7BA2                                               07309
* ------ Call PRINTLBL routine to print this label.....   above          07310
*                                                                        07311
* ---------------- LABEL DUMPING CODE --------------------- *            07312
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07313
         BZ    AUTLEND              NO. SKIP PUTTING OUT                 07314
         ST    R7,SAVE7LDM          Save BAL register.                   07315
         LA    R4,INAREA            Point to area to be dumped.          07316
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07317
         L     R7,SAVE7LDM          Restore BAL register.                07318
AUTLEND  DS    0H                   END OF LABEL DUMPING CODE            07319
* ---------------- LABEL DUMPING CODE --------------------- *            07320
ASCUTLE  DS    0H                                                        07321
         B     LABCHEND                                                  07322
NOTLABEL NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG               07323
LABCHEND DS    0H                                                        07324
         BR    R7                                                        07325
* --------------------------------------------------------- *            07326
*    BAL REGISTER IS R7.                                                 07327
* --------------------------------------------------------- *            07328
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            07329
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              07330
* --------------------------------------------------------- *            07331
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          07332
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        07333
         BE    MOVEHI09                                                  07334
         MVC   0(4,R3),0(R2)                                             07335
         B     MOVEHIEN                                                  07336
         LA    R2,1(,R2)                                                 07337
         LA    R3,1(,R3)                                                 07338
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        07339
         BE    MOVEHI08                                                  07340
         MVC   0(3,R3),0(R2)                                             07341
         B     MOVEHIEN                                                  07342
         LA    R2,1(,R2)                                                 07343
         LA    R3,1(,R3)                                                 07344
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        07345
         BE    MOVEHI07                                                  07346
         MVC   0(2,R3),0(R2)                                             07347
         B     MOVEHIEN                                                  07348
         LA    R2,1(,R2)                                                 07349
         LA    R3,1(,R3)                                                 07350
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        07351
         BE    MOVEHIEN                                                  07352
         MVC   0(1,R3),0(R2)                                             07353
MOVEHIEN BR    R7                                                        07354
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07355
*    BAL REGISTER IS R7.                                                 07356
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07357
*              Upon entry, R4 points to the 80-byte record               07358
*              to be dumped into the LABLDUMP DD.                        07359
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07360
DUMLABRC DS    0H                                                        07361
         TM    PARMFLG2,X'10'       Are we dumping labels?               07362
         BZ    DUMLABRN             No. Skip putting out.                07363
         MVC   LLINE,LLINE-1        Clear output area in EBCDIC.         07364
         MVC   LLINE(80),0(R4)      Move in record info to line.         07365
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             07366
         BZ    NOASCIID             No. Don't translate label bytes.     07367
         MVI   LLINE,X'20'                  Clear to ASCII blanks        07368
         MVC   LLINE+1(L'LLINE-1),LLINE                                  07369
         MVC   LLINE(80),0(R4)      Move in record info to line.         07370
         ST    R5,SAVE5LDM          Save register.                       07371
         L     R5,SAVTRTCS          Point to translation table CSECT     07372
         USING TRTDSECT,R5          Map it.                              07373
         TM    ATRNLFLG,X'01'       Is this record to be translated?     07374
         BZ    ANOTRANS             No. Dump it as is.                   07375
         TR    LLINE(80),TRTE2A     Translate label dump area to ASCII   07376
ANOTRANS DS    0H                                                        07377
         L     R5,SAVE5LDM          Restore register.                    07378
         DROP  R5                                                        07379
NOASCIID DS    0H                                                        07380
         ST    R6,SAVER6            Prepare to write record. Save reg.   07381
         L     R6,LABLDDCB          Point to LABLDUMP DCB.               07382
         PUT   (6),LLINE                                                 07383
         L     R6,SAVER6            Restore register.                    07384
*        PUT   LABLDUMP,LLINE       Write out label info.                07385
DUMLABRN DS    0H                                                        07386
         BR    R7                                                        07387
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07388
*    BAL REGISTER IS R4.                                                 07389
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07390
HEX      DS    0H                                                        07391
         MVC   1(1,R15),0(R1)        Move byte                           07392
         UNPK  0(3,R15),1(2,R15)     Unpack                              07393
         TR    0(2,R15),HEXTAB-240                                       07394
         LA    R15,2(,R15)           Increment output pointer            07395
         LA    R1,1(,R1)             Increment input pointer             07396
         BCT   R0,HEX                Decrement length, then loop         07397
         MVI   0(R15),C' '           Blank the trailing byte             07398
         BR    R4                    Return to caller                    07399
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     07400
         SPACE                                                           07401
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07402
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07403
*    BAL REGISTER IS R7.                                                 07404
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07405
PRNTLABL DS    0H                                                        07406
*                                                                        07407
* ------ Call PRINTLBL routine to print this label.....   below          07408
         L     R15,PRTLBENT       Get entry point of called program      07409
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                       07410
         LA    R1,PARMFLGS        Point R1 to parm flags.                07411
         L     R3,=A(INAREA)      Point R3 to address of input area.     07412
         BALR  R14,R15                 Do CALL.                          07413
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.     07414
*        MVC   INAREA(80),0(R3)        Overlay 80 bytes of INAREA        07415
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    07416
* ------ Call PRINTLBL routine to print this label.....   above          07417
*                                                                        07418
         BR    R7                                                        07419
* --------------------------------------------------------- *            07420
* ---        C O N S T A N T S                          --- *            07421
* --------------------------------------------------------- *            07422
*    ------------------------ >   Constants for Date and Time - below    07423
SAVE1402 DS    6F                 Extra fullword for safety              07424
TIMED    DS    CL7                                                       07425
DATED    DS    CL9                                                       07426
DATETIME DS    4F                                                        07427
         ORG   DATETIME                                                  07428
TIME     DS    CL4                                                       07429
         DS    CL4                                                       07430
DATE     DS    CL5                                                       07431
         DS    CL3                                                       07432
HEADDLIT DS    0CL31              Literal for headings - date and time   07433
         DC    CL6'Today:'                                               07434
         DC    CL2' '                                                    07435
HEADDATE DC    CL23' '                                                   07436
LEVELLIT DS    0CL21              Level number display for headings      07437
         DC    CL6'Level '                                               07438
LEVELL   DC    CL4'&LLEV'                                                07439
         DC    CL2' ('                                                   07440
LEVDATE  DC    CL8' '             Assembly date for this program         07441
         DC    CL1')'                                                    07442
*    ------------------------ >   Constants for Date and Time - above    07443
         LTORG                                                           07444
FF       EQU   X'FF'                                                     07445
LABELITH DC    CL80'----ENDOFLABELHEADER '                               07446
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            07447
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               07448
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            07449
MESSAGE1 DC    CL133'1LABELCHK - TAPE LABEL CHECKING AND PRINTING PROGR- 07450
               AM              '                                         07451
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '             07452
         DC    C'EOV2EOF PARM OR OPTION'                                 07453
         DC    69C' '                                                    07454
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  07455
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  07456
         DC    C'                           '                            07457
         DC    C'0'                                                      07458
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                    07459
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1              07460
* --------------------------------------------------------- *            07461
         DC    C' '                                                      07462
LINE     DC    CL133' '                                                  07463
* ---------------------  Register Save Areas  ---------------->>>        07464
SYSPRINV DC    V(SYSPRINT)                                               07465
LABLDUMV DC    V(LABLDUMP)                                               07466
LABADDIV DC    V(LABADDIN)                                               07467
SAVTRTCS DC    F'0'                                                      07468
PRTLBENT DC    F'0'                                                      07469
PARMSAVE DC    F'0'                                                      07470
USERSAVE DC    F'0'                                                      07471
INARSAVE DC    F'0'                                                      07472
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     07473
HEXSAVE  DS    3F                    Register save for HEX macro         07474
SAVE2TO3 DC    2F'0'                                                     07475
SAVER6   DC    F'0'                                                      07476
SAVE3REG DC    F'0'                                                      07477
SAVE7BA1 DC    F'0'                                                      07478
SAVE7BA2 DC    F'0'                                                      07479
SAVE7REG DC    F'0'                                                      07480
SAVE7BAL DC    F'0'                                                      07481
SAVE4LDM DC    F'0'                                                      07482
SAVE5LDM DC    F'0'                                                      07483
R5HXPRT  DC    F'0'                                                      07484
SAVE7LDM DC    F'0'                                                      07485
SAVE7RG1 DC    F'0'                                                      07486
SAVE7RG2 DC    F'0'                                                      07487
SAVE7RG3 DC    F'0'                                                      07488
SAVE7RG4 DC    F'0'                                                      07489
SAVE7RG5 DC    F'0'                                                      07490
SAVE13LC DC    3F'0'                                                     07491
* ---------- *           Save V(CON)s to DCBs                            07492
SYSPRDCB DC    F'0'                                                      07493
LABLDDCB DC    F'0'                                                      07494
LABADDCB DC    F'0'                                                      07495
* ---------- *                                                           07496
         DC    C' '          BLANK FOR CLEARING AREA                     07497
LLINE    DC    CL80' '       OUTPUT AREA FOR LABEL DUMP                  07498
INASCI   DC    CL80' '       Read labels from here.                      07499
INAREA   DC    CL80' '       Read labels from here.                      07500
         DC    CL40' '       Padding for possible overflow.              07501
* ---------- *                                                           07502
**** ----------------------------------->>>>  Passed area, below         07503
* --------------------------------------------------------- *            07504
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS           07505
PARMFLG1 DC    X'00'                                                     07506
PARMFLG2 DC    X'00'                                                     07507
PARMFLG3 DC    X'00'                                                     07508
PARMFLG4 DC    X'00'                                                     07509
PARMFLG5 DC    X'00'                                                     07510
PARMFLG6 DC    X'00'                                                     07511
PARMFLG7 DC    X'00'                                                     07512
PARMFLG8 DC    X'00'                                                     07513
PARMFLG9 DC    X'00'                                                     07514
PARMFLGA DC    X'00'                                                     07515
PARMFLLN EQU   *-PARMFLGS                                                07516
* --------------------------------------------------------- *            07517
**** ----- LABELCHK -------------------->>>>  Passed area, below         07518
*                                                                        07519
LCHKPASS DS    0H                                                        07520
*                                                                        07521
INAREAX  DC    CL80' '        Read labels into here.                     07522
         DC    CL40' '        Padding for possible overflow.             07523
* --------------------------------------------------------- *            07524
*                                                                        07525
*                                                                        07526
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       07527
*              X'00'          DATA IS NOT A LABEL                        07528
*              X'01'          DATA IS A LABEL                            07529
*              X'02'          DATA IS AN ASCII LABEL                     07530
*                                                                        07531
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               07532
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             07533
*              X'02'          BECAUSE OF SYSIN    DD MISSING             07534
*              X'04'          BECAUSE OF LABADDIN DD MISSING             07535
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                07536
*              X'01'          LABLDUMP DD IS OPEN                        07537
*              X'02'          SYSIN    DD IS OPEN                        07538
*              X'04'          LABADDIN DD IS OPEN                        07539
L80FLAG  DC    X'00'                                                     07540
*              X'01'          LAST DATA WAS 80 BYTE RECORD               07541
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN    07542
*              X'01'          HDR1 HAS BEEN SEEN                         07543
*              X'02'          HDR2 HAS BEEN SEEN                         07544
*              X'04'          VOL1 HAS BEEN SEEN                         07545
*              X'08'          HDR1 IS FROM AN INITTED TAPE               07546
*              X'10'          EOF1 HAS BEEN SEEN                         07547
*              X'20'          EOF2 HAS BEEN SEEN                         07548
*              X'40'          EOV1 HAS BEEN SEEN                         07549
*              X'80'          EOV2 HAS BEEN SEEN                         07550
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                    07551
EXASCFLG DC    X'00'          External Label is ASCII if X'01'           07552
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   07553
LABADFLG DC    X'00'          If X'01' then close LABADDIN file          07554
CLOSMFLG DC    X'00'          If X'01' then close all open files         07555
* --------------------------                                             07556
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     07557
*              X'01'          WE ARE IN A HDR GROUP                      07558
*              X'02'          WE ARE IN A EOF GROUP                      07559
*              X'04'          WE ARE IN A EOV GROUP                      07560
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND    07561
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL    07562
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES       07563
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII     07564
* ---------- *                                                           07565
* --------------------------------------------------------- *            07566
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE        07567
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           07568
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           07569
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           07570
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             07571
VOLCHG   DC    C'      '                                                 07572
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS        07573
VOLASC   DC    C'      '     ASCII VOLUME                                07574
LCHKPASE EQU   *-LCHKPASS                                                07575
**** ----- LABELCHK -------------------->>>>  Passed area, above         07576
** ---------------------------------------------------------------- **   07577
TRTDSECT DSECT                 Displacements must match TRTCSECT.        07578
TRTBL0   DS    256X                                                      07579
TRTBL1   DS    256X                                                      07580
TRTBL2   DS    256X                                                      07581
TRTE2A   DS    256X                                                      07582
TRTA2E   DS    256X                                                      07583
TRTASPRT DS    256X                                                      07584
** ---------------------------------------------------------------- **   07585
         END                                                             07586
*         LABEL PRINTER        AT LEVEL 1.1 AS OF 11/10/03               07587
   TITLE 'PRINTLBL -- PRINT TAPE LABELS OF DIFFERENT TYPES'              07588
         GBLC  &LLEV                                                     07589
&LLEV    SETC  '1.1 '                                                    07590
         YREGS                                                           07591
         ENTRY PRINTLBL                                                  07592
PRINTLBL CSECT                                                           07593
         USING *,R15                                                     07594
         B     EYECATCH                                                  07595
         DC    C'--- '            MAKE EYECATCHER VISIBLE                07596
         DC    C'PRINTLBL - PRINT TAPE FILES IF THEY ARE LABELS'         07597
         DC    C' - '                                                    07598
         DC    C'LEVEL '                                                 07599
SYSLEV   DC    C'&LLEV'                                                  07600
         DC    C' - '                                                    07601
SYSDAT   DC    C'&SYSDATE'                                               07602
         DC    C'  ',C'&SYSTIME ',C'--- '                                07603
         DC    C'Copyright (c) 2003 by Sam Golob '                       07604
         DC    C'--- '              MAKE EYECATCHER VISIBLE              07605
SAVEAREA DC    18F'0'                                                    07606
EYECATCH DS    0D                   ENSURE ALIGNMENT                     07607
         SAVE  (14,12)                                                   07608
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM     07609
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   07610
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          07611
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         07612
         LR    R13,R1               NEW SAVE AREA ADDRESS                07613
         DROP  R15                                                       07614
* -----                             SET UP BASE REGISTERS                07615
         USING PRINTLBL,R12,R11,R10,R9                                   07616
         LR    R12,R15                                                   07617
         LA    R11,4095(,R12)                                            07618
         LA    R11,1(,R11)                                               07619
         LA    R10,4095(,R11)                                            07620
         LA    R10,1(,R10)                                               07621
         LA    R9,4095(,R10)                                             07622
         LA    R9,1(,R9)                                                 07623
         LR    R1,R5                RESTORE REGISTER 1 INPUT             07624
* ----------------------------------------------------------------- *    07625
         ST    R1,PARMSAVE          Address of parm flags in caller      07626
         ST    R3,INARSAVE          Address of input area in caller      07627
* ----------------------------------------------------------------- *    07628
INITCONS DS    0H                    Initialize necessary quantities.    07629
         MVI   LINE-1,X'40'          Make sure the print line is blank.  07630
         MVC   LINE,LINE-1                                               07631
         L     R0,SYSPRINV           SYSPRINT DCB address in caller      07632
         ST    R0,SYSPRDCB             store for the program's use       07633
         L     R0,LABLDUMV           LABLDUMP DCB address in caller      07634
         ST    R0,LABLDDCB             store for the program's use       07635
         L     R0,LABADDIV           LABADDIN DCB address in caller      07636
         ST    R0,LABADDCB             store for the program's use       07637
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer    07638
         ST    R0,SAVTRTCS             store it for later use            07639
         MVC   EXTLBLIN(80),0(R3)    Copy label input area to ours.      07640
         MVC   PARMFLGS(PARMFLLN),0(R1)   Copy input parms to our pgm.   07641
* ----------------------------------------------------------------- *    07642
WHATLBL  DS    0H                                                        07643
         CLC   EXTLBLIN(4),=C'VOL1'                                      07644
         BE    WHATLBLE                                                  07645
         CLC   EXTLBLIN(4),=C'HDR1'                                      07646
         BE    WHATLBLE                                                  07647
         CLC   EXTLBLIN(4),=C'EOF1'                                      07648
         BE    WHATLBLE                                                  07649
         CLC   EXTLBLIN(4),=C'EOV1'                                      07650
         BE    WHATLBLE                                                  07651
         CLC   EXTLBLIN(4),=C'HDR2'                                      07652
         BE    WHATLBLE                                                  07653
         CLC   EXTLBLIN(4),=C'EOF2'                                      07654
         BE    WHATLBLE                                                  07655
         CLC   EXTLBLIN(4),=C'EOV2'                                      07656
         BE    WHATLBLE                                                  07657
         CLC   EXTLBLIN(3),=C'UHL'                                       07658
         BE    WHATLBLE                                                  07659
         CLC   EXTLBLIN(3),=C'UTL'                                       07660
         BE    WHATLBLE                                                  07661
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                    07662
         BE    WHATLBLA                                                  07663
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                    07664
         BE    WHATLBLA                                                  07665
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                    07666
         BE    WHATLBLA                                                  07667
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                    07668
         BE    WHATLBLA                                                  07669
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                    07670
         BE    WHATLBLA                                                  07671
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                    07672
         BE    WHATLBLA                                                  07673
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                    07674
         BE    WHATLBLA                                                  07675
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                    07676
         BE    WHATLBLA                                                  07677
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                    07678
         BE    WHATLBLA                                                  07679
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                    07680
         BE    WHATLBLA                                                  07681
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                    07682
         BE    WHATLBLA                                                  07683
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                    07684
         BE    WHATLBLA                                                  07685
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                    07686
         BE    WHATLBLA                                                  07687
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                    07688
         BE    WHATLBLA                                                  07689
         B     NOPRTEXT                    Not a label format            07690
*                                                                        07691
WHATLBLE DS    0H                          EBCDIC Labels                 07692
*                                          Go to appropriate routine     07693
         CLC   EXTLBLIN(4),=C'VOL1'                                      07694
         BE    PXTVOL1                                                   07695
         CLC   EXTLBLIN(4),=C'HDR1'                                      07696
         BE    PXT1PR                                                    07697
         CLC   EXTLBLIN(4),=C'EOF1'                                      07698
         BE    PXT1PR                                                    07699
         CLC   EXTLBLIN(4),=C'EOV1'                                      07700
         BE    PXT1PR                                                    07701
         CLC   EXTLBLIN(4),=C'HDR2'                                      07702
         BE    PXT2PR                                                    07703
         CLC   EXTLBLIN(4),=C'EOF2'                                      07704
         BE    PXT2PR                                                    07705
         CLC   EXTLBLIN(4),=C'EOV2'                                      07706
         BE    PXT2PR                                                    07707
         CLC   EXTLBLIN(3),=C'UHL'                                       07708
         BE    PXTUSE                                                    07709
         CLC   EXTLBLIN(3),=C'UTL'                                       07710
         BE    PXTUSE                                                    07711
         B     NOPRTEXT                    Not a label format            07712
WHATLBLA DS    0H                          ASCII  Labels                 07713
*                                                                        07714
*        Common ASCII preparation routines......                         07715
*                                                                        07716
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation    07717
*                                                                        07718
* -- >  Make an EBCDIC version of this label in the EXTLBLWK field.      07719
         ST    R5,R5HXPRT              Save register.                    07720
         L     R5,SAVTRTCS             Point to translation table CSECT  07721
         USING TRTDSECT,R5                                               07722
         MVC   EXTLBLWK(80),EXTLBLIN   Move LABEL area to workarea       07723
         TR    EXTLBLWK(80),TRTA2E     Translate to EBCDIC for print     07724
         L     R5,R5HXPRT              Restore R5                        07725
         DROP  R5                                                        07726
* -- >                                                                   07727
*                                                                        07728
*        ASCII preparations done......                                   07729
*                                          Go to appropriate routine     07730
*                                                                        07731
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                    07732
         BE    PXTVOL1A                                                  07733
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                    07734
         BE    PXT1PRA                                                   07735
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                    07736
         BE    PXT1PRA                                                   07737
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                    07738
         BE    PXT1PRA                                                   07739
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                    07740
         BE    PXT2PRA                                                   07741
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                    07742
         BE    PXT2PRA                                                   07743
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                    07744
         BE    PXT2PRA                                                   07745
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                    07746
         BE    PXTUSEA                                                   07747
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                    07748
         BE    PXTUSEA                                                   07749
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                    07750
         BE    PXTUSEA                                                   07751
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                    07752
         BE    PXTUSEA                                                   07753
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                    07754
         BE    PXTUSEA                                                   07755
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                    07756
         BE    PXTUSEA                                                   07757
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                    07758
         BE    PXTUSEA                                                   07759
         B     NOPRTEXT                    Not a label format            07760
* ----------------------------------------------------------------- *    07761
*                                                                   *    07762
*   Various Label Printing Routines follow at this point.           *    07763
*                                                                   *    07764
* ----------------------------------------------------------------- *    07765
PXTVOL1  DS    0H                      Print EBCDIC VOL1 Label           07766
         MVI   LINE-1,C' '                                               07767
         MVC   LINE,LINE-1             CLEAR PRINT LINE                  07768
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS             07769
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL              07770
         MVC   VOL1OWNR(10),LINE       CLEAR FIELD TO BLANKS             07771
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION              07772
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND          07773
         ST    R6,SAVER6                                                 07774
         L     R6,SYSPRDCB                                               07775
         PUT   (6),LINE                                                  07776
         L     R6,SAVER6                                                 07777
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER         07778
         B     NOPRTEXT                                                  07779
PXTVOL1A DS    0H                      Print ASCII  VOL1 Label           07780
         MVI   LINE-1,C' '                                               07781
         MVC   LINE,LINE-1             CLEAR PRINT LINE                  07782
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS             07783
         MVC   VOL1SER(6),EXTLBLWK+4   REPORT VOLUME SERIAL              07784
         MVC   VOL1OWNR(14),LINE       CLEAR FIELD TO BLANKS             07785
         MVC   VOL1OWNR(14),EXTLBLWK+37   OWNER INFORMATION              07786
         MVC   VOL1LBL+78(15),=C'ANSI/ISO LEVEL '   Level 1, 3, or 4     07787
         MVC   VOL1LBL+93(1),EXTLBLWK+79  Copy Level into message        07788
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND          07789
         ST    R6,SAVER6                                                 07790
         L     R6,SYSPRDCB                                               07791
         PUT   (6),LINE                                                  07792
         L     R6,SAVER6                                                 07793
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER         07794
         B     NOPRTEXT                                                  07795
PXT1PR   DS    0H                      Print EBCDIC xxx1 Label           07796
         ST    R3,SAVE3REG                                               07797
         LA    R3,EXTLBLIN                                               07798
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       07799
         BAL   R7,PRTXXX1              PRINT XXX1 LABEL FORMAT           07800
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      07801
         L     R3,SAVE3REG                                               07802
         B     NOPRTEXT                                                  07803
PXT1PRA  DS    0H                      Print ASCII  xxx1 Label           07804
         ST    R3,SAVE3REG                                               07805
         LA    R3,EXTLBLWK             Point to label area to print      07806
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       07807
         BAL   R7,PRTXXX1              PRINT LABEL INFO                  07808
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      07809
         L     R3,SAVE3REG                                               07810
         B     NOPRTEXT                                                  07811
PXT2PR   DS    0H                      Print EBCDIC xxx2 Label           07812
         ST    R3,SAVE3REG                                               07813
         LA    R3,EXTLBLIN             Point to label area to print      07814
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       07815
         BAL   R7,PRTXXX2              PRINT LABEL INFO                  07816
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      07817
         L     R3,SAVE3REG                                               07818
         B     NOPRTEXT                                                  07819
PXT2PRA  DS    0H                      Print ASCII  xxx2 Label           07820
         ST    R3,SAVE3REG                                               07821
         LA    R3,EXTLBLWK             Point to label area to print      07822
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       07823
         BAL   R7,PRTAXX2              PRINT LABEL INFO                  07824
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      07825
         L     R3,SAVE3REG                                               07826
         B     NOPRTEXT                                                  07827
PXTUSE   DS    0H                      Print EBCDIC USER Label           07828
         ST    R3,SAVE3REG                                               07829
         LA    R3,EXTLBLIN             Point to label area to print      07830
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       07831
         BAL   R7,PRTUSER              PRINT LABEL INFO                  07832
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      07833
         L     R3,SAVE3REG                                               07834
         B     NOPRTEXT                                                  07835
PXTUSEA  DS    0H                      Print ASCII  USER Label           07836
         ST    R3,SAVE3REG                                               07837
         LA    R3,EXTLBLWK             Point to label area to print      07838
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       07839
         BAL   R7,PRTUSER              PRINT LABEL INFO                  07840
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      07841
         L     R3,SAVE3REG                                               07842
         B     NOPRTEXT                                                  07843
* ----------------------------------------------------------------- *    07844
NOPRTEXT DS    0H             Don't print external label on report       07845
* ----------------------------------------------------------------- *    07846
THEEND   DS    0H                                                        07847
         L     R13,4(,R13)                                               07848
         MVC   16(4,R13),=F'0'          Return code 0     in R15         07849
* - - - - - - - - - - - - - Pass addresses of our passed areas back.     07850
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1    07851
         MVC   32(4,R13),=A(EXTLBLIN)   Address of our EXTLBLIN in R3    07852
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07853
         LM    R14,R12,12(R13)                                           07854
         BR    R14                                                       07855
         EJECT                                                           07856
* --------------------------------------------------------- *            07857
*    BAL REGISTER IS R7.                                                 07858
* --------------------------------------------------------- *            07859
PRTXXX1  DS    0H            Print HDR1, EOF1, EOV1 - EBCDIC & ASCII     07860
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          07861
         MVI   LINE-1,C' '                                               07862
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           07863
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG            07864
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS               07865
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL                07866
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS               07867
         MVC   XXX1DSN(17),4(R3)     DATASET NAME                        07868
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS               07869
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER             07870
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS               07871
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER              07872
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS               07873
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS              07874
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS               07875
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS         07876
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS               07877
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS              07878
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS               07879
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS              07880
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE                07881
         ST    R6,SAVER6                                                 07882
         L     R6,SYSPRDCB                                               07883
         PUT   (6),LINE                                                  07884
         L     R6,SAVER6                                                 07885
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  07886
PRTXXX1R BR    R7                                                        07887
* --------------------------------------------------------- *            07888
*    BAL REGISTER IS R7.                                                 07889
* --------------------------------------------------------- *            07890
PRTXXX2  DS    0H                 Print HDR2, EOF2, EOV2 - EBCDIC        07891
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          07892
         MVI   LINE-1,C' '                                               07893
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           07894
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG            07895
         MVC   XXX2RFM(3),LINE       CLEAR FIELD TO BLANKS               07896
         MVC   XXX2RFM(1),4(R3)      RECFM                               07897
         MVC   XXX2RFM+1(1),38(R3)   Block Attribute                     07898
         MVC   XXX2RFM+2(1),36(R3)   Control Character                   07899
         MVC   XXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS               07900
         CLC   =C'00000',5(R3)       Is Block Length 00000?              07901
         BNE   PRX2NLBI              No. No LBI. Print what's here.      07902
         CLI   70(R3),X'40'          Is first LBI field a blank?         07903
         BNE   PRX2NLBI              No LBI field either. Print zeros.   07904
         MVC   XXX2BKLE(10),70(R3)   Move LBI field to blksize display   07905
         B     PRX2LBI               And not the old blksize field.      07906
PRX2NLBI DS    0H                                                        07907
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH                        07908
PRX2LBI  DS    0H                                                        07909
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS               07910
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH                       07911
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS               07912
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY                        07913
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS               07914
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME                      07915
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS               07916
         CLI   34(R3),C'P'           INDICATE IDRC?                      07917
         BNE   PRX2NOI               NO. SAY NO                          07918
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION                   07919
         B     PRX2MOV                                                   07920
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                                        07921
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE                07922
         ST    R6,SAVER6                                                 07923
         L     R6,SYSPRDCB                                               07924
         PUT   (6),LINE                                                  07925
         L     R6,SAVER6                                                 07926
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  07927
PRTXXX2R BR    R7                                                        07928
* --------------------------------------------------------- *            07929
*    BAL REGISTER IS R7.                                                 07930
* --------------------------------------------------------- *            07931
PRTAXX2  DS    0H                 Print HDR2, EOF2, EOV2 - ASCII         07932
*                                                                        07933
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED, TRANSLATED TO EBCDIC.    07934
*                                                                        07935
         MVI   LINE-1,C' '                                               07936
         MVC   LINE,LINE-1           CLEAR PRINT LINE                    07937
         MVC   AXX2LBL+1(4),0(R3)    MOVE LABEL TYPE TO MESSAGE          07938
         MVC   AXX2RFM(3),LINE       CLEAR FIELD TO BLANKS               07939
         MVC   AXX2RFM(1),4(R3)      RECFM                               07940
         MVC   AXX2RFM+1(1),38(R3)   Block Attribute                     07941
         MVC   AXX2RFM+2(1),36(R3)   Control Character                   07942
         MVC   AXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS               07943
         MVC   AXX2BKL(5),5(R3)      BLOCK LENGTH                        07944
         MVC   AXX2RCL(5),LINE       CLEAR FIELD TO BLANKS               07945
         MVC   AXX2RCL(5),10(R3)     RECORD LENGTH                       07946
         MVC   AXX2TDN(1),LINE       CLEAR FIELD TO BLANKS               07947
         MVC   AXX2TDN(1),15(R3)     TAPE DENSITY                        07948
         MVC   AXX2JST(17),LINE      CLEAR FIELD TO BLANKS               07949
         MVC   AXX2JST(17),17(R3)     JOB/STEP NAME                      07950
         MVC   AXX2CCS(5),LINE       CLEAR FIELD TO BLANKS               07951
         MVC   AXX2CCS(5),39(R3)      CCSID IDENTIFIER                   07952
PRA2MOV  MVC   LINE(133),AXX2LBL     MOVE INFO TO PRINT LINE             07953
         ST    R6,SAVER6                                                 07954
         L     R6,SYSPRDCB                                               07955
         PUT   (6),LINE                                                  07956
         L     R6,SAVER6                                                 07957
*        PUT   SYSPRINT,LINE         PRINT ASCII XXX2 LABEL              07958
PRTAXX2R BR    R7                                                        07959
* --------------------------------------------------------- *            07960
*    BAL REGISTER IS R7.                                                 07961
* --------------------------------------------------------- *            07962
PRTUSER  DS    0H                                                        07963
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          07964
         MVI   LINE-1,C' '                                               07965
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           07966
         MVI   USERLBL-1,C' '                                            07967
         MVC   USERLBL(133),USERLBL-1                                    07968
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE          07969
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE                07970
         ST    R6,SAVER6                                                 07971
         L     R6,SYSPRDCB                                               07972
         PUT   (6),LINE                                                  07973
         L     R6,SAVER6                                                 07974
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  07975
PRTUSERR BR    R7                                                        07976
* ----------------------------------------------------------------- *    07977
* ---               C  O  N  S  T  A  N  T  S                   --- *    07978
* ----------------------------------------------------------------- *    07979
         LTORG                                                           07980
FF       EQU   X'FF'                                                     07981
LABELITH DC    CL80'----ENDOFLABELHEADER '                               07982
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            07983
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               07984
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            07985
         DC    C'0'                                                      07986
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                    07987
         DC    X'30'                                                     07988
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1              07989
* --------------------------------------------------------- *            07990
         DC    C' '                                                      07991
LINE     DC    CL133' '                                                  07992
* ---------------------  Register Save Areas  ---------------->>>        07993
SYSPRINV DC    V(SYSPRINT)                                               07994
LABLDUMV DC    V(LABLDUMP)                                               07995
LABADDIV DC    V(LABADDIN)                                               07996
SAVTRTCS DC    F'0'                                                      07997
SYSPRDCB DC    F'0'                                                      07998
LABLDDCB DC    F'0'                                                      07999
LABADDCB DC    F'0'                                                      08000
SAVER6   DC    F'0'                                                      08001
SAVE3REG DC    F'0'                                                      08002
SAVE7BA1 DC    F'0'                                                      08003
SAVE7REG DC    F'0'                                                      08004
SAVE7BAL DC    F'0'                                                      08005
SAVE4LDM DC    F'0'                                                      08006
SAVE5LDM DC    F'0'                                                      08007
R5HXPRT  DC    F'0'                                                      08008
SAVE7LDM DC    F'0'                                                      08009
SAVE7RG1 DC    F'0'                                                      08010
SAVE7RG2 DC    F'0'                                                      08011
SAVE7RG3 DC    F'0'                                                      08012
SAVE7RG4 DC    F'0'                                                      08013
* ----------------------------------------------------------------- *    08014
** -------------------- >>>>>   ASCII & IBM  VOL1 LABEL PRINT - BELOW    08015
VOL1LBL  DC    C' VOL1 LABEL HAS BEEN DETECTED - VOLSER = '              08016
VOL1SER  DC    C'      '                                                 08017
VOL1OWNT DC    C'     OWNER = '                                          08018
VOL1OWNR DC    C'          '                                             08019
VOL1OWNE DC    C'    '                                                   08020
VOL1BLNK DC    59C' '                                                    08021
         DC    C' '                                                      08022
** -------------------- >>>>>   ASCII & IBM  USER LABEL PRINT - BELOW    08023
USERLBL  DC    81C' '                                                    08024
         DC    52C' '                                                    08025
** -------------------- >>>>>   ASCII & IBM  XXX1 LABEL PRINT - BELOW    08026
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                                  08027
XXX1VOL  DC    C'      '                                                 08028
XXX1DSNL DC    C' DSN='                                                  08029
XXX1DSN  DC    C'                 '                                      08030
XXX1DSQL DC    C' DS SEQ #: '                                            08031
XXX1DSQ  DC    C'    '                                                   08032
XXX1VSQL DC    C' VOL SEQ #: '                                           08033
XXX1VSQ  DC    C'    '                                                   08034
XXX1BLCL DC    C' BLK CNT: '                                             08035
XXX1BLCH DC    C'    '                                                   08036
XXX1BLC  DC    C'      '                                                 08037
XXX1CRDL DC    C' CRDATE: '                                              08038
XXX1CRD  DC    C'      '                                                 08039
XXX1EXDL DC    C' EXDATE: '                                              08040
XXX1EXD  DC    C'      '                                                 08041
XXX1BLNK DC    30C' '                                                    08042
** -------------------- >>>>>           IBM  XXX2 LABEL PRINT - BELOW    08043
XXX2LBL  DC    C' XXX2 LABEL: RECFM='                                    08044
XXX2RFM  DC    C' '                                                      08045
XXX2BKLL DC    C'    BLOCK LENGTH: '                                     08046
XXX2BKLE DS    0CL10                                                     08047
XXX2BKL  DC    C'     '                                                  08048
         DC    C'     '                                                  08049
XXX2RCLL DC    C'   RECORD LENGTH: '                                     08050
XXX2RCL  DC    C'     '                                                  08051
XXX2TDNL DC    C'  TAPE DEN: '                                           08052
XXX2TDN  DC    C' '                                                      08053
XXX2JSTL DC    C'   JOB/JOB STEP: '                                      08054
XXX2JST  DC    C'                 '                                      08055
XXX2IDRL DC    C'   IDRC? '                                              08056
XXX2IDR  DC    C'   '                                                    08057
XXX2BLNK DC    8C' '                                                     08058
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - BELOW    08059
AXX2LBL  DC    C' XXX2 LABEL: RECFM='                                    08060
AXX2RFM  DC    C' '                                                      08061
AXX2BKLL DC    C'    BLOCK LENGTH: '                                     08062
AXX2BKLE DS    0CL10                                                     08063
AXX2BKL  DC    C'     '                                                  08064
         DC    C'     '                                                  08065
AXX2RCLL DC    C'   RECORD LENGTH: '                                     08066
AXX2RCL  DC    C'     '                                                  08067
AXX2TDNL DC    C'  TAPE DEN: '                                           08068
AXX2TDN  DC    C' '                                                      08069
AXX2JSTL DC    C'   JOB/JOB STEP: '                                      08070
AXX2JST  DC    C'                 '                                      08071
AXX2CCSL DC    C'   CCSID '                                              08072
AXX2CCS  DC    C'     '                                                  08073
AXX2BLNK DC    6C' '                                                     08074
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - ABOVE    08075
* --------------------------------------------------------- *            08076
* ----------------------------------------------------------------- *    08077
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          08078
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                      08079
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 08080
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  08081
PARMSAVE DC    F'0'                                                      08082
USERSAVE DC    F'0'                                                      08083
INARSAVE DC    F'0'                                                      08084
** ---------------------------------------------------------------- **   08085
**** ----------------------------------->>>>  Passed area, below         08086
* --------------------------------------------------------- *            08087
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS           08088
PARMFLG1 DC    X'00'                                                     08089
PARMFLG2 DC    X'00'                                                     08090
PARMFLG3 DC    X'00'                                                     08091
PARMFLG4 DC    X'00'                                                     08092
PARMFLG5 DC    X'00'                                                     08093
PARMFLG6 DC    X'00'                                                     08094
PARMFLG7 DC    X'00'                                                     08095
PARMFLG8 DC    X'00'                                                     08096
PARMFLG9 DC    X'00'                                                     08097
PARMFLGA DC    X'00'                                                     08098
PARMFLLN EQU   *-PARMFLGS                                                08099
* --------------------------------------------------------- *            08100
TRTDSECT DSECT                 Displacements must match TRTCSECT.        08101
TRTBL0   DS    256X                                                      08102
TRTBL1   DS    256X                                                      08103
TRTBL2   DS    256X                                                      08104
TRTE2A   DS    256X                                                      08105
TRTA2E   DS    256X                                                      08106
TRTASPRT DS    256X                                                      08107
** ---------------------------------------------------------------- **   08108
         END                                                             08109
